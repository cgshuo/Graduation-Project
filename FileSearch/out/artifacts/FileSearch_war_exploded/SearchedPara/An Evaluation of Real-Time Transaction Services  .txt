 Web services technology provides a ne w computing model for greatly accelerating application processing and responding to changing business needs within and across enterprises. Web services transactions are increasingly becoming key additions to business processes that access multiple web services, which need to combine various web services transactions. As fundamental components of e-commerce and enterprise application integration as well as on-deman d computing, web services are expected to greatly enhance the promise of distributed computing [1, 2]. The demand for real-time e-business applications. The current trend is for multiple service providers with com-mon interfaces to provide the same web servi ces over the Internet [3, 4]. This implies that web services can be dynamically determined and executed, which would make their execution more flexible and robust. The Internet purchasing example illustrated in Fig. 1 involves the following three web services: (1) credit validation, (2) inventory management, and (3) customer accounting [5]. Each of these web services must be executed in real-time. A web service transaction is executed by the web services transaction model (WSTM) selecting an available web services and interpreting the script that defines the process. The services aggregator is responsible for managing various types of web services and communicating with the universal web services registry (UDDI) to update the service directory, which is a central registry of service providers whose methods and interfaces are listed in this registry. 
In this paper, we consider a services-oriented computing environment in which identical real-time transaction services are pr ovided by multiple service providers, one of which can be chosen during the run-time phase to execute transaction services on the basis of minimizing the execution cost. A novel value-based scheduling strategy called sensorial value-planned mechanism for web services (SVM-WS) is proposed their importance, such as inquiry and purchase requests. The essential objective of our approach is to maximize the profit by preferentially serving high-priority services from different service providers to ensure communication quality and reduce the de-pendency over remote transaction services, (2) differential profit treatment, by prefer-entially executing the purchase requests to be completed while trying to execute as many requests for inquiry services as possible, and (3) variable value setting involv-ing the dynamic determination of mean values based on the system load for each Simulation results demonstrate that the SVM-WS can deliver good performance in a web services e-business system. 
The remainder of this paper is organized as follows: Section 2 details the web ser-vices e-business system, Section 3 presents real-time transaction services processing and the SVM-WS method. Section 4 describes the simulation model and performance results, and conclusions are drawn in Section 5. In a web services computing environment, a communication network interconnects multiple sites. Each site contains a transaction generator, a web services selection man-ager, a communication interface, a scheduling policy, a cache manager, and a resource and purchases, where the former involves only read operations on requested data items. To effectively execute a web services transaction, the actions of web services needed by transactions must be processed through WSTM. While interpreting the transaction script, the web services selection manager selects the appropriate web services from among multiple web services for execution. The real-time scheduler is based on the transaction scheduling policy described in S ection 3. A communication interface at each versal web services registry (UDDI) is used by the service provider and service requester to publish web services and find desired web services, respectively. Once applications are built as web services, they are described by a web services description language (WSDL) that tells requesters how to invoke them. The WSDL and XML metadata of the services are wrapped in a simple object access protocol (SOAP) mes-sage that can be sent to the UDDI. The design of the scheduling strategy for real-time transaction services processing is driven by its real-time constraints. Generally, such e-business systems will execute the transaction assigned with the highest execution priority based on a particular for-mula. I briefly describe the following transaction services scheduling strategy using the notations as listed below. 
T i a real-time transaction service in the system 
C es (T i ) estimated communication delay of transaction service T i
C ep (T i ) elapsed communication delay of transaction service T i
C rt (Ti) remaining communication delay of transaction service T i , obtained from 
E es (T i ) estimated execution time of transaction service T i
E ep (T i ) elapsed execution time of transaction service T i
E rt (T i ) remaining execution time of transaction service T i , obtained from E es (T i ) -P(T i ) priority of transaction service T i S(T i ) slack time of transaction service T i V(T i ) mean value of transaction service T i
W weight of adjusted the value and urgency of transaction service. 3.1 Earliest Deadline The earliest deadline strategy (ED) assigns high priorities to transaction services with early deadlines [7]. All (sub)transaction se rvices have the same deadlines. The prior-ity assignment formula is given by: 3.2 Highest Value The disadvantage of ED is that it does not consider the values of transactions. Assign-As ED, all (sub)transaction services have the same value. The priority assignment formula is given by: 3.3 Highest Reward and Urgency In contrast to ED, HV focuses on completing transaction services with high values. However, the urgency of transaction service is not considered. To eliminate the disad-vantage, Highest Reward and Urgency (HRU) considers both the deadline and value as shortest remaining execution time, and the priority assignment formula is given by: HRU considers the reward ratio of scheduling a transaction service and provides an adjustable policy for various system load conditions [9, 10]. 3.4 Sensorial Value-Planne d Mechanism for Web Services Scheduling strategies for web services computing environments that consider a differ-entiated real-time data services for e-business applications have not been discussed previously. The enormous popularity of using the Internet has increased the demand for real-time transaction services in many web services e-business applications, such as searching for airfares and buying flight tickets. The proposed SVM-WS method as shown in Fig. 2 can differentially treat e-business real-time transaction services based on their class, such as browsing, searching, and payment requests. This section describes the simulation model expanded from [8-11] that was developed using the popular open-source discrete-event SimJava package to evaluate the per-formance of the proposed method [12]. Most of workload parameters are similar to these values used in previous studies [7-9 , 11]. We compared the transaction schedul-ing policies of the ED, HV, HRU and SVM-WS under various conditions. In this experiment of increasing load, we varied the arrival rate from 20 real-time web ser-vices transaction services/second (abbreviated as real-time services/sec) to 120 ser-vices/sec in increasing steps of 20 in order to model different system loads. As shown in Figs. 3a and 3b, the performance order based on the MissRatio and LossRatio met-rics is SVM-WS &gt; HRU &gt; HV &gt; ED regardless of a normal load or a high load. The excellent performance of the SVM-WS results from the following reasons. The cost-effective scheme is employed in the SVM-WS to satisfy the execution quality of ser-vice and concern considering the minimal exec ution cost for web services since such a remote web service requires expensive cost for accessing data objects. However, the value-based priority assignment strategy also depends on the value of transaction service. The highest utilization of different profit treatment will preferentially give the high priority to purchase services. Hence, an inquiry request will have a better chance to be executed completely under the adjustment of the reflecting value of transaction service determined by the various value-setting scheme based on the different system load. In addition, I also observed narrowly the impact of the increasing arrival rate of real-time services for inquiry and purchase requests. Web services technology is becoming an important topic for building distributed applications based on open data communication and standard data formats. Web ser-vices transaction services are increasingly becoming key additions to business proc-esses that access multiple web services, which need to combine various web services transaction services. This paper has addressed the efficient processing of e-business real-time transaction services using the emerging web services technology. Our approach exploits the current capability of the services-oriented computing environ-ment where the same real-time transaction services are provided by multiple service providers, with the proposed SWM-WS mechanism differentially treating e-business real-time transaction services according to their importance, such as inquiry and pur-chase requests. This research was partially supported by National Taichung University and the Na-tional Science Council in Taiwan through Grant NSC96-2221-E-007-143. 
