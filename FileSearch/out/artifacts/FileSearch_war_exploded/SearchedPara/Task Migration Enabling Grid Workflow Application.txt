 focuses on the task migration enabling grid workflow application rescheduling prob-scheduling performance advantage is obvious compared with related works, such as rithm (GA). The experiments also show that by task migration support, grid applica-which extends the rescheduling process to the dynamics scope that other algorithms can X  X  touch. workflow application rescheduling problem; section 3 presents the rescheduling algo-rithm based on IGA; section 4 shows the experimentation and analyzes the perform-ance, and section 5 concludes the whole paper. In this paper, we assume the heterogeneous processors connected in a full connected out contention. It is also assumed that computation can be overlapped with communi-cation and task executions can be non-preemptive. The details of processor and network resource model see paper [2]. grid resource heterogeneity and task migration, a new method is proposed below. is saved locally. So the Migration Cost is defined as on, according to the task finished rate: a TRANSFFRING task s f and a WAITING task s . Fig.1 shows a sample split progress. 
To improve the efficiency of the scheduling algorithm based on graph, a reduction rule is introduced. the finished task nodes X  weights and edges X  weights among them to zero. Fig.2 shows the task graph reduction process. scheduling and rescheduling algorithms. The Earliest Finish Time (EFT) is a usual goal of application-oriented scheduling. which is expressed by T-RAG(details see paper [2]). task node s exit , which is calculated by the following equation: Where, Case1: s v isn X  X  a FINFISH or TRANFERRING state task; Case2: s v is TRANFERRING, and s v was scheduled to resource m j ; put data was scheduled to resource m j ; data wasn X  X  scheduled to resource m j too; 
Different task-resource mappings produce different RT-RAGs, and the objective of scheduling is to select the best RT-RAG. potential solutions. 1. To compute the affinity The affinity between antibodies is expressed as the Hamming Distance. Equation (2) can be used to compute the adaptation degree between antibody and antigen. Where, EFT(v) can be calculated by equation (1). 2. To compute the an tibody concentration in the whole population. The concentration of antibody v is: Where, 3. To promote and restrain the antibody generation The expected propagation rate of antibody v is computed as follows. 4. To use crossover and mutation operations which are shown in Fig.3. 1 2 3 4 5 6 7 1 1 1 2 3 1 3 1 2 5 4 3 6 7 1 3 3 1 3 2 2 posed in this paper, we use parametric randomly generated DAGs in the experiment. 134 X. Hao et al. model the dynamic change and heterogeneity of resources, we introduce several addi-tional parameters. 
The new parameters as listed below:  X  : The computing resource heterogeneous factor. A higher value of  X  suggests the bigger difference of resource capability.  X  : The network heterogeneous factor.  X  : Interval of resource change, expressed as multiples of average computation cost of DAG average computation cost.. The value set for each parameter is listed in Table 1. works includes performance improvement due to resource available cycles saving, and without Task Migration Support (IGA without TMS), the AHEFT algorithm [1] and the classical dynamic scheduling algorithm Max-Min [13] with different dynamic degree. The results of the experimentations show that the average makespan of Max-Min, respectively. 
Fig. 4 shows the average makespan of these four algorithms under different situa-tions that the resources have different dynamic degrees. When the resource dynamics getting even stronger, without task migration support, times of that when  X  =1. This paper presents a reduced task graph rescheduling model, and implements a per-tage and greater adaptability of dynamics. better heuristic alternative. (IPDPS 2007), pp. 1 X 8. IEEE Press, New York, USA (2007) uted Computing (ISPDC 2006), pp. 238 X 245. IEEE Press, New York, USA (2006) tems 13(03), 260 X 274 (2002) 
Algorithm. Journal of compouter research and development 41(12), 2195 X 2199 (2004) flows on grid systems. Scientific Programming 12(4), 253 X 262 (2004) ogy Interfaces (ITI 2006), pp. 625 X 632. IEEE Press, New York, USA (2006) 
