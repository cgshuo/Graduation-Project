 Department of Computer Engineering, Sharif University of Technology, Azadi Ave, Tehran, Iran 1. Introduction
Genes have different functionalities and participate in distinct activities. Cellular processes are dom-inantly dependent on genes interactions. Therefore, to gain a better insight of cellular behaviors, we are interested to infer structures of gene networks. Studying biological networks can help to understand mechanisms of many diseases and to develop more appropriate treatments.

To model a gene interaction network, genes are represented by nodes and the interactions between genes are represented by links. The inferred structure may be directional or non-directional, regarding the characteristics of the network which we are interested to infer.
 Microarrays are traditionally used to measure changes of genes behavior in biological experiments [3]. Perturbation techniques enable researchers to study biological networks and specially causal networks with more informative data [11,14]. One of the perturbation techniques is RNA interference [4] in which targeted genes can be turned off more accurately. In the RNA interference technique, genes of the net-work which we aim to infer are silenced, and the corresponding changes on the other genes, which may be on the downstream of the genes of the main network are measured using microarray technology.
In this paper we try to analyze the networks with non-transcriptional interactions. In the transcriptional interactions, the protein product of a gene is a transcription factor which binds to the promoter region of another gene and up-regulates or down-regulates its expression. So after silencing the first gene there are some measurable changes on the expression level of the second gene.
Genes can also interact in the protein level. For example the protein product of a gene may phospho-rylate the protein product of the second gene. In this case after silencing the first gene there is not any changes in the expression level of the second gene. However, regarding the interactions of some genes in the protein level, the final product can be a transcription factor for another gene which may or may not be in the same pathway of the other genes. In signaling pathways many of the interactions do not take place in the transcriptional level, so we need to analyze their effects on some other genes which are on the downstream of the main network.

Markowetz et al. [9] proposed the Nested Effects Model (NEM) to analyze interventional data espe-cially when the effects of perturbations cannot be measured directly on the main network. According to the data which the authors used, only the transitively closed forms of the networks can be inferred. In this work, a Bayesian scoring is introduced to select the best transitive model among several mod-els. As the number of feasible models increases exponentially with the number of nodes, this method is computationally limited to small networks with less than 7 genes. In another study, Markowetz et al. [10] used averaging over small sub-models to infer a complete network. This method is applicable to larger networks. Froehlich et al. [5,6] proposed a method in which the relations of more similar genes are inferred first and the complete model is constructed in a bottom-up manner. The authors also used a simulated-annealing technique to search the space of feasible solutions. Factor graphs are also proposed in the NEM framework [13].
 In this paper, we introduce two methods for inferring signaling pathways using RNAi technology in NEM framework. In the first method, we use an evolutionary algorithm to search the space of feasible solutions. In this method, we keep all candidate models transitive during the whole procedure. This makes the space of solutions strongly restricted. This method is applicable when network size is not large. For large networks and in the presence of a high noise level, the scoring method may become inefficient. To overcome this problem, the second method is designed in two phases. In this method, model-averaging and feature selection are combined to make inferring of larger networks possible.
We test the proposed methods in different noise levels and network sizes. The results show high accuracy of these methods and their robustness in diverse situations.
 The rest of the paper is organized as follows: In the following section, we formalize problem definition. In Section 3, we present the evolutionary approach, and in Section 4, we explain a model-averaging method and also discuss why averaging over sub-models seems mandatory for large networks. Section 5 shows the results of algorithms on simulated and real networks. The effect of changing parameters is discussed in Section 6. Finally, in Section 7, we discuss the applicability of the proposed methods when comparing them to the previous methods in the literature. 2. Problem definition and notation
We use the formulation introduced by Markowetz et al. [3] in this section. We consider two non-overlapping levels of genes (Fig. 1(a)). In this model, the first level includes the genes of the primary network, for which we are interested to infer their unknown topology. These genes are called S-genes and they are silenced with RNA interference technique. Downstream genes of the primary network are placed in the second level and are called E-genes. These genes report the results of silencing genes in the first level. Here we suppose that these two levels are non-overlapping and also each E-gene has a single parent in the S-genes. To show this, we use parameter  X = {  X  1 , X  2 ,..., X  m } ,where m is the number of E-genes and  X  i = j shows that S-gene j is the parent of E-gene i . Silenced genes interrupt signal flow in the network. Therefore, we expect that the genes which are downstream of the silenced gene by a directed path show some changes in perturbation experiments (Fig. 1(b)). Results of the experiments arestoredinmatrix D .Inmatrix D , Each column indicates the results of silencing one S-gene and each row represents the results for one E-gene. If we consider l experiments, then matrix D would be an m  X  l matrix. D is a binary matrix in which D ij =1 if after silencing S-gene j ,E-gene i shows some changes.
Markowetz et al. [9] proposed a Bayesian score to evaluate the goodness of candidate models. Many of other methods are based on the introduced scoring. Using the Bayesian formula: where  X  is a network hypothesis. If we consider independence of E-gene locations, we obtain: Here, D i is the i th row of the data matrix. As the value of parameter  X  is unknown, we average over possible locations of E-genes: where n is the number of S-genes and P ( D ik |  X  , X  i = j ) is computed by estimating false positive and false negative rates of error. Silencing an S-gene causes a change in E-genes to which the S-gene is connected with a directed path. This means that the networks with similar transitive closure in the first level are not distinguishable according to this data. The transitive closure of a network is a network in which the nodes with directed path in primary network are connected by a direct link. 3. Evolutionary approach In this section we explain our evolutionary method to search the space of transitive models efficiently. To speed up the procedure, we combine it with a local search. In our method, we force our candidate models to be transitively closed and in this way the space of feasible solutions would become smaller. Note that the transitivity of the network is a limitation caused by the data we are using, not by the algorithm. So, here the transitivity can be used as a prior knowledge to ignore inappropriate solutions. In cellular biology, transitive form of a network can show interactions of the genes either directly or by the mediation of some other genes. So the transitive form of a network provides some important biological information. Steps of the evolutionary approach are summarized in Fig. 2.

In the following, we explain evolutionary steps and operators in the proposed method. 3.1. Representation
The search for high score models should be performed in the space of transitive models. Small changes in a transitive model can cause large number of changes to transform the model to its transitive closure. Here, we use a representation method which tries to reduce the expected number of modifications needed to keep models transitive.

Each individual (a network model with n nodes) is represented by an n  X  n binary matrix M .For each node in our model, we consider one row of the matrix (row i for node i ). To transform this matrix to a corresponding model, a link is added from node i to node j if and only if M ik M jk for all 3.2. Fitness function
A fitness function is used to define a preference of one model to another one. We use Eq. (3) as our fitness function. 3.3. Parent selection
To select parents in our evolutionary approach in order to produce new individuals, stochastic rank based selection is used. We rank the individuals based on their scores and then the probability of being selected is defined for the individuals according to their ranks. 3.4. Recombination
For combining two individuals, we exchange the second half of the corresponding matrices. Cutting individuals appropriately.

If parents have a common link, both children would have that link too. On the other hand, if a link does not exist in any of the parents, then at least one of the children would not have that link either. 3.5. Mutation Mutations are performed in order to make small changes in the individuals of the current population. In this evolutionary search, we flip each bit of the representation matrix with an small probability. By the proposed presentation, the expected number of changes is not large (Fig. 5).
 3.6. Local search
Our evolutionary approach achieves high accuracy when the network size is small. Considering a network of size n , the number of transitive networks is of O (2 n 2 ) , so the procedure would slow down quickly by increasing n . To speed up the procedure, in some steps of our procedure, we use a local search to increase the average score of the population in fewer generations. In the simulations of Section 5, we applied the local search step to each individual in even generations. To perform the local move, we randomly select one row, say row i , from the representation matrix, then for each of the other rows (row j ), row i is replaced by one of the equations: or, at random (Fig. 6). So, for each of the other rows, one model is constructed. The matrix with the highest score among these n models (including the primary model) is replaced in the population. By using these local moves, the number of generations needed to achieve a high score model decreases substantially and makes our method applicable to larger networks. 4. Model averaging and gene selection
Searching in the space of large networks is complex and it requires a high computational cost. Two main reasons make the searching for large networks difficult. First, the number of feasible models grows exponentially with the number of nodes in the network. Second and the more important reason is that, regarding the large number of free parameters in network models, when the noise level is high, there would be many networks that have higher scores than the real model. Some of these models can have many false inferred relations for pairs of genes. This is a general problem for most of the proposed heuristic approaches in the literature and the ones that try to build a complete model incrementally. In these situations, it seems that a kind of ensemble learning or model averaging is needed.
There are some problems in averaging over small sub-models to build a complete model. As we do not know E-gene locations in the network, by using Eq. (3) we sum the scores of all possible locations that each E-gene may have in the network. In Fig. 7, this method is demonstrated for a network with three nodes over one E-gene. After applying this procedure, the scores of E-genes are multiplied to achieve a total score.

When the network size is large compared to sub-networks, the number of E-genes without a direct parent in an specific sub-network increases. Therefore, there are many E-genes that participate in infer-ring a model over a sub network without having a parent among them. To explain what may happen, consider the network of Fig. 8, and suppose that we want to infer the sub-model over nodes S 2 and S 4 . To do this in the method proposed by Markowetz et al. [10], all experiments of silencing these two genes have any effects on them. To measure the scores of different models on S 2 and S 4 , the possibilities of each of the S-genes being the parent of each of the E-genes are considered.
 By evaluating Eq. (3), the sub-model without any link would achieve highest score by considering E generate fewer effects. So, we conclude that these kinds of E-genes bias the network to have fewer links. This also happens for E-gene E 1 in our example.
 both S-genes in the assumed sub-network to them. By silencing genes of the sub-network, regardless of Eq. (3), we conclude that these E-genes bias the network toward having more links.

To sum up, we showed how the location of E-genes may cause wrong inferences of links in sub-models. When the sizes of sub-models increase, the number of these E-genes decreases. It may be helpful if we can estimate these E-genes and eliminate them before making decisions about types of the links for sub-models.

We propose an averaging technique with two phases. In this method, we first use a greedy search to infer sub-models, because of its time efficiency and its accuracy for small networks. 4.1. Greedy procedure to infer sub-models
This method was introduced by Froehlich et al. [5]. The algorithm starts with a network without any links. Then, in each iteration a link is added to the network, and the network is transformed to its transitive closure. In each iteration the link which produces a network with highest possible score is selected. This procedure continues until no more progress is possible. So, at the end of the procedure adding no link can increase the score of the network, after transitively closing it. 4.2. Our averaging method
In the first phase, S-genes are divided into random groups. Each gene belongs to several groups. There should be a common group for all gene pairs, and by comparing the variance of occurrences of gene pairs in different groupings, we try to balance the number of occurrences of different gene pairs. To infer a model over each sub-network, we use the discussed greedy approach. At this step all E-genes are used for each sub-network.

By averaging over sub-models, a primary version of the network is estimated. A link is added to the network if it occurs in at least half of the sub-models that contain the corresponding nodes. After that, the probability of each E-gene being directly under each S-gene is calculated by: where Z is a normalization factor. Suppose M j shows S-genes of j th group and E-genes with parents in one of those S-genes. The probability that E-gene i is a member of M j is: Here  X  is an estimation of the network which is inferred in the first phase. The second phase is similar to the first phase, but for inferring sub-models, genes that have a small probability of being a member of that sub-network are filtered out. The steps are summarized in Fig. 9.

In this method by increasing the size of sub-models, the transitivity assumption is used more effi-ciently, but on the other hand, the accuracy of greedy approach decreases. Averaging can cause the final network to be intransitive. To make the model transitive by as few modifications as possible, some meth-ods have been proposed [2,8]. Filtering uninformative genes in the second phase can reduce unwanted biases that were discussed earlier in this section. 5. Experimental results
In this section, we evaluate the performance of our proposed methods and compare them to several methods in the literature. The performance of these methods is evaluated using artificial data generated by the method introduced by Markowetz et al. [10]. In the first step, artificial networks are generated randomly. For the evolutionary method, we consider networks of sizes n = 8and n = 12, and for the averaging method we consider networks of sizes n = 20 and n = 30, where n is the number of S-genes. For each network, some random edges are added and then the network is transformed to its transitive form. The number of initial links is chosen in a way that on average, the transitively closed networks would have half of the possible links. Also, some E-genes with uniformly selected random parents from the S-genes are added to the networks. In the second step, for each network, artificial data is generated by considering different false positive and false negative rates of errors  X  and  X  (matrix D introduced in Section 3). Then, Networks are inferred by considering various estimations of false positive and false negative rates of errors  X  and  X  . Finally, inferred networks are compared with correct networks and the true positive and true negative links respectively and N is the number of S-genes in the network.
Figures 10 and 11 show the comparison of our evolutionary method and the Markowetz averaging method [10] for varying noise levels. In Fig. 10, different number of E-genes are used for generating the networks and in Fig. 11 effects of changing the number of replicates for each experiment is examined. To infer the networks, rates of error are considered to be 0.15. Each point of the Figs 10 and 11 is the average of the results of 50 runs.

As our results show, our evolutionary method achieves a higher accuracy on average in most of con-ditions, but by increasing the number of S-genes the accuracy of the approach decreases, as expected. When the number of replicates increases, there is a higher probability for the problem of over-fitting to happen, as discussed in Section 4.

As discussed in Section 4, for larger networks averaging techniques are preferred. Figures 12 and 13 show the results of the comparison of Markowetz triplets method and the proposed averaging method for varying noise levels. The results show that the proposed method achieves high accuracy in different conditions and outperforms the other method.

To measure the accuracy of the proposed methods on real data, we applied both methods to a data set on genetic mechanisms that control self-renewal in mouse embryonic stem cells provided by Ivanova previously studied by Anchang et al. [1]. Anchang et al. [1] used the genes which showed more than 2-fold absolute change in their expression levels across all time points of silencing experiments as E-genes. Measurements of gene expressions in negative and positive controls and their expressions in RNAi experiment are used to discretize the data. Suppose that C + K and C  X  K are the mean of the measurements of the K th E-gene expression in negative and positive controls. In negative control, expressions are measured when the network is not stimulated, and in positive control the expressions are measured when the network is stimulated but none of the S-genes are silenced. Also suppose that C ik is the K th E-gene expression in RNAi experiment, then to discretize the data we use:
The proposed methods need binary data, so the last time point binary data after discretization is used instead of time series data (for more details see [1,7]). We set  X  to 0.7, and both  X  and  X  to 0.1, with respect to data generation. Figure 14 shows the inferred network using the evolutionary method after averaging over 10 runs. Only the links presented in more than half of the results are shown. To use the proposed averaging method we divide the S-genes to all possible groups of 4 S-genes (15 groups). Result of these two methods are exactly the same.

Anchang et al. [1] used D-NEM method and deviance information criterion DIC [12] to improve the network inferred by triplets [10] method. The only difference between the transitive closure of the network inferred by our methods and the transitive closure of their network is in the dotted edge (from Tcl1 to Oct4). The order of Oct4 and Tcl1 is not detected using evolutionary algorithm and the proposed averaging method on this dataset; Interestingly, the score of the network obtained using our proposed approach is higher with the specified parameter values. Moreover, the inferred networks are in agreement with literature. 6. Sensitivity analysis
In this section we study the sensitivity of the proposed methods with respect to changing parameter values for inferring artificial networks. In each experiment, all of the parameter values are kept constant except one of them.
 For the proposed evolutionary algorithm, the experiments are performed on networks with 10 S-genes. networks have on average half of possible directed links. In each network, there are 30 E-genes with uniformly selected random parents and each experiment is replicated 3 times. Error rates are considered to be 0.25 for data generation and network inference. In our evolutionary algorithm, we seek for a network with the highest score. Hence, the scores of inferred networks with different parameter values are compared and a rank is assigned to each network after comparing its score to the score of other networks. Finally, we average the rank of the networks for each parameter. When two networks have the same score, they would have the same rank. Results of changing the population sizes, cross-over rates and mutation rates are shown in Fig. 15.

Figure 15 shows that, by increasing the population size, networks with higher scores can be found. For the networks of sizes 6 and 8 we searched the space with population size of 100 and for the networks of size 12, as larger space should be searched, we used the population size of 200.
 Changing cross-over rate causes few changes in final results, but this is not true for mutation rate. Regarding the results shown in Fig. 15 we set the cross-over rate and the mutation rate to 0.6 and 0.005 respectively.

To analyze the performance of the proposed averaging technique we used networks of 25 nodes and 42 initial links. Error rates for both the data generation and the network construction are set to 0.25. There are 75 E-genes in the networks and we set the number of replicates to 3. Figure 16 shows the results of changing parameter values for the proposed averaging technique. In this figure we study the effects of changing groups sizes and average number of occurrences of pairs of S-genes in the groups.
By using the groups size of 8, The method achieves highest accuracy. When we increase the size of each group, the number of uninformative E-genes decreases for each group, but the greedy method is not appropriate for larger networks and this is why for groups sizes of 10 and 12 S-genes, the accuracy decreases. In the artificial experiments we used groups size of 8 genes.

The results of the experiments show that our proposed method achieves better results when the average number of occurrences of different pairs increases, but as there is randomness in the procedure, it is not always true (Fig. 16). On the other hand, increasing the number of the groups slows down the algorithm, so we used 100 groups for networks of size 20 and we used 200 groups for networks of size 30.
In the second phase, the genes which have less probability than 0.2 of being directly connected to one of the S-genes of a specific group are filtered out when analyzing the corresponding sub-network. The threshold of 0.2 is selected to assure the existence of most of the related E-genes for inferring sub-networks. 7. Discussion
In this paper, we discussed several methods for inferring signaling pathways. In the discussed methods, perturbation techniques were used to analyze the networks. There may be high noise level in real data and also as the position of E-genes in the nested effects models are usually unknown, stochastic methods are used to infer the topology of the networks. We proposed two methods for inferring such networks in various conditions. Our evolutionary method is most appropriate for small networks. For large networks we proposed the averaging method. The results of the experiments on real and artificial data show a high level of accuracy and robustness of our proposed methods. This indicates that our methods can be very helpful to analyze the topology of real networks.
 Acknowledgement
The authors would like to thank the anonymous reviewers for their valuable comments and suggestions which improved the paper.
 References
