 1. Introduction
Many real-world systems can be modeled as networks ( Newman, 2001, 2011; Watts and Strogatz, 1998 ). In these networks, individuals are represented by the nodes and relation-ships between individuals are represented by the edges. To study relationships between nodes, such as friendship, collaboration, or membership in a community, interactions in the social system are characterized by the signed edges in signed networks. Social signed networks consist of a group of interacting individuals, where a positive/negative edge represents the friendly/hostile relation-ship between individuals ( Everett and Borgatti, 2014; Doreian and Mrvar, 2009; Srinivasan, 2011; Szell et al., 2010; Bonacich and Lloyd, 2004 ).

Structural balance is an important notion in the analysis of signed network structure. Balance theory has been applied in many fields, such as social psychology, international relationships ( Antal et al., 2006 ). Leskovec et al. (2010) and Szell et al. (2010) examined the validity of structural balance in online multimedia websites. Structural balance theory was proposed from social psy-chology research by Heider (1946) . This theory begins with notions with tension. Heider X  X  theory was generalized to the language of networks by Cartwright and Harary (1956) . Cartwright has proved many fundamental theorems about the structure of balanced networks. In Xiaolong and Zeng (2014) , a comprehensive review of these existing studies about structural balance was given.
Real world signed networks are rarely balanced. Many meth-ods are proposed to compute the unbalance of signed networks, i.e., how unbalanced a signed network is. Marvel et al. (2009) introduced an quantity to denote the potential function of signed networks. In Marvel et al. (2009) , the sum of all the negative product of triangles is divided by the total number of triangles. In Terzi and Winkler (2011) , the fraction of unbalanced triads in the networks is associated with the eigenvalues of the network X  X  adjacency matrix. An efficient spectral algorithm is proposed to compute the fraction of unbalanced triangles, in which the top-n eigenvalues rather than all the eigenvalues are used. In Anchuri and Magdon-Ismail (2012) , the unbalance of the networks is measured by the frustration in signed networks. The frustration is the sum of the number of nega-tive edges between nodes in the same community and the number of positive edges between nodes in different communities. These methods gave the overall amount of frustration of the network, but they could not provide any information on which relationships remain unbalanced. Facchetti et al. (2011) proposed an energy func-tion to compute global balance in signed networks. The minimum of energy function is equivalent to the minimum number of edges which make signed network unbalanced. A network is structurally balanced when its energy function is zero. In Iacono et al. (2010) , an efficient heuristic method was introduced to optimize this energy function. In this method, the so-called apparent disorder from the network is eliminated in the process of transformation, and the number of negative edges decreases. Sun et al. (2014) proposed an memetic algorithm to compute the global balance by optimizing the energy function above.
In dynamical evolution of signed networks, an initial struc-turally unbalanced network achieves balance. In the evolution process of signed networks, the sign of existing edges can be changed or deleted and new edges can be formed. Dynamics models following various balance-theoretic update rules have been studied over the past few years. Antal et al. (2005) proposed two dis-crete models for dynamics of structural balance: one is called local triad dynamics (LTD) and the other is constrained triad dynamics (CTD). In these models, signs on certain edges are shifted if the total number of imbalanced triads decreases. These models usually arrives at one balanced state or the state named  X  X ammed states X , in which these models are trapped into an unbalanced local minimum ( Marvel et al., 2009; Antal et al., 2005 ). Marvel et al. (2009) modeled a fully-connected signed social networks. These models paid atten-tion to the sequential sign change process on a fixed network.
Deng and Abell (2010) studied local sign change adjustment of signed networks by following different rules. In Deng et al. (2012) , sign adjustment in weighted signed networks under five kinds of balancing rules was studied. Van de Rijt (2011) employed a best-response dynamics model of sentiment change. Marvel et al. (2011) ,
Srinivasan (2011) , Traag et al. (2013) and Summers and Shames (2013) proposed continuous-time models to analyze the underly-ing evolution mechanisms of signed networks. More details about evolution of balance can be found in Xiaolong and Zeng (2014) .
In this paper, we study special cases of dynamical evolutions, in which a network evolves from its current state to global balance with the least number of sign changes. That is, we want to minimize the number of edge signs that need to be flipped in the evolution of structural balance. We do not focus on the triad-based update rules of balance and we study the least number of sign changes in dynamics evolution of balance, that is, in our evolution processes, we assume that none of edges is deleted and none of new edges is formed. An objective function about the number of sign changes is proposed to quantify this problem. Our main contributions in this paper are as follows. We formulate the problem optimizing dynamics of structural balance as an optimization problem. In our problem, instead of using a total number of flipped signs, there is a certain bias towards flipping positive or flipping negative signs in our model, and the bias varies with a parameter. We propose a memetic algorithm with local search procedure to optimize the objective function above. Comparative experiments on four signed networks demonstrate that the proposed algorithm can effectively optimize dynamics of structural balance. Our algorithm can give the information about which edges resulting in the unbalance of signed networks.

The rest of the paper is organized as follows: In Section 2 , the related background, including the definition of structural balance, energy function, our objective function and memetic algorithm are given. The proposed algorithm is described in detail in Section 3 . In
Section 4 , the proposed algorithm is validated on four real signed network. The conclusion is summarized in the last section. 2. Related background 2.1. Structural balance
According to Heider theory of structural balance, for a signed network with only three nodes, there are four configurations, as shown in Fig. 1 . In Fig. 1 (a), a triangle with three positive edges or one positive edge and two negative edges is balanced, since both of them satisfy the adages that  X  X  friend of my friend is my friend X  and  X  X n enemy of my friend is my enemy X . In Fig. 1 (b), triangles with two positive edges and one negative edge or three negative edges are unbalanced, for they do not satisfy the logic of friendship above.
There are odd number of negative edges in balanced triangles and even number of negative edges in unbalanced triangles. Triangle is structurally balanced, when the product of edge signs is positive and triangle is structurally unbalanced, when the product of edge signs is negative.
 all the triangles in the network are balanced. A more general def-inition of structural balance is that a network contains no cycle with negative product. Cartwright and Harary (1956) indicated that the triangle based and cycle based definitions of structural balance are equivalent on complete graph. Abell (1968) provided that an incomplete, affective, symmetric structure with k -subgraphs is bal-anced if and only if there are 2 k  X  1 ways to partition the node set of this signed network such that: all intra-subgraph edges are pos-itive or unconnected and all inter-subgraph edges are negative or unconnected. 2.2. Energy function pute global balance in signed networks. Computing global balance means assigning a +1 and a  X  1 to all the nodes to achieve the minimum of energy function:
H ( s ) = where the summation runs over all adjacent pairs of nodes; { X  1 } = B 2 is entry of the adjacent matrix of signed network repre-senting the edge between node s i and node s j ; s = [ s 1 nodes of the network.
 zero distribution if J ij represents friendship or a +1 distribution if J represents hostility, whereas when node signs s i and s j the summand is zero if J ij represents hostility, otherwise +1. When the energy function (1) of a signed network is zero, the network is structurally balanced. 2.3. Quantifying dynamical evolution of structural balance dynamical evolution of signed networks, and then a criterion is needed to test whether signed networks evolve to balanced ones.
As described above, when energy function (1) of a signed network is zero, the network is balanced, so that Eq. (1) is adopted as the criterion.
In different dynamics models of structural balance, an unbal-anced triangle evolves to different balanced ones with different probabilities ( Antal et al., 2005; Deng et al., 2012; Deng and Abell, 2010 ). It can also be said that different edge signs in different unbal-anced triangles are changed with different probabilities. In this context, we do not focus on the update rules but on the least number of sign changes and then we introduce a certain bias or probability towards flipping positive or flipping negative signs in the dynamical evolution of structural balance.

We mathematically formulate optimizing dynamical evolution of structural balance as: minimize F ( n ) = N c + + (1  X  ) N c  X  where parameter ranges from 0 to 1; N c + is the number of sign-changed positive edges and N c  X  is the number of sign-changed negative edges; H ( s ) is the Eq. (1) .

From a computational point of view, parameter is added to the function metric (1) to show that positive and negative edges are changed of sign with different probabilities. By varying the value of , different number of sign changes can be got and different evolution processes can be achieved.

From a social point of view, could also denote positive or neg-ative force. In the light of people relations, positive links denote friendship and negative ones hostility. The unbalanced network on the left of Fig. 1 (b) is taken as an example. When the sign of one edge adjacent to k is flipped, there are two kinds of balanced states, as indicated in Fig. 2 . In the unbalanced situation, there is pressure on j to update the relationship with k (edge jk ) negatively, since k would be negatively recommended by i to j , and similarly j would be rec-ommended positively by i to the nemesis of k , so it would also have a negative impact. Similarly, there is a pressure on i and k to make the relationship ik positive: both are positively recommended by their common friend j . then controls what pressure is stronger: the positive force (i.e. make ik positive) or the negative force (i.e. make jk negative). Then our work also can mean how unbalanced networks evolve to balanced ones with minimal pressure. 2.4. Memetic algorithm
Memetic algorithms (MAs) are hybrid algorithms to mimic cul-tural evolution, which are a combination of genetic algorithm and heuristic local search ( Dawkins, 2006 ). The goal of MAs is to make a population evolve from the initial state with high diversity to a quasi-optimal solution ( Neri and Cotta, 2012 ). Over the past decade,
MAs have received popular attention in the fields of computer science and have been demonstrated to be more efficient and effec-tive than traditional genetic algorithms for some problem domains ( Neri and Cotta, 2012; Ong et al., 2010 ). MAs are also used to opti-mize some problem in social networks, for example in Gong et al. (2011) , Gach and Hao (2012) and Ma et al. (2014) , MAs are designed for community detection.

As indicated in Facchetti et al. (2011) , computing structural balance corresponds to compute the ground state of a Ising spin glass ( Barahona, 1982 ), which is a nondeterministic polynomial-time hard problem. Traditional algorithms are difficult to solve this problem. In this paper, an evolutionary algorithm based on memetic algorithm is proposed to optimize dynamical evolution of structural balance. 3. The proposed algorithm Algorithm 1. framework of algorithm
To optimize the function of Eq. (2) , a memetic algorithm is proposed. In this section, we give a description of the proposed algorithm. First, the framework of the proposed algorithm is given in Algorithm 1 . Then a detailed explanation of Algorithm 1 is described.

In this framework, Initialization() is to used to generate the initial population. The function of Selection() is to select the responsible population from the parent and child population. GeneticOperation() are the procedures of mutation and crossover. Update() is to reconstruct population from population P and P Termination() is the terminal condition to judge whether the algo-rithm terminates or not. 3.1. Objective function
In this paper, our goal is to optimize the objective function described in Eq. (2) . In traditional unconstrained optimization problem, penalty methods are usually used to convert it into an unconstrained problem. Unconstrained optimization problem is easier to be solved, so that in our context, unconstrained optimiza-tion is used. Let us penalize ourselves for making the constraint too big. Given the number of sign-changed positive edges N the number of sign-changed negative edges N c  X  , we end up with a function as: min F ( n ) = N c + + (1  X  ) N c  X  + H ( s ) (3)
Then this equality constrained problem is converted to an unconstrained optimization problem. is the weighting param-eter. 3.2. Representation
In this algorithm, we adopt a simple genetic representation for evolution of unbalanced network. Let N + , N  X  be the number of positive and negative edges, respectively and V be the number of nodes in signed network. A network evolution from unbalanced situation to balanced situation is encoding in a string: { S node } . X + denotes a bipolar N + -vector in { 1,  X  1 } N which is used to judge whether sign of positive edges should be changed. X  X  denotes a bipolar N  X  -vector in { 1,  X  1 } N  X  tive edges, which is used to judge whether sign of negative edges should be changed. S node denotes a bipolar V -vector in { nodes, which denote the clusters of all the nodes. For every element x  X  { X + } or { X  X  } , x i =  X  1 means that the sign of corresponding edge need to be flipped, while x i = 1 means that the sign of corresponding edge remains unchanged. For s i  X  { S node } , s i is the sign assigned to i th node, which is consistent with Eq. (1) . An illustration of genetic representation is described in Fig. 3 . In Fig. 3 , there are 3 positive edges, 4 negative edges and 5 nodes, such that the length of vector
X is 3, the length of vector X  X  is 4 and the length of vector S is 5. All the elements in X + are +1, such that none sign of positive edges is changed. The first element in X  X  is  X  1 (i.e. node 4 in this network), such that this edge sign is changed. All the elements in
S node are the clusters of nodes. 3.3. Initialization
First, a definition of the positive neighborhood of a node in signed network is given.  X 
Definition of positive neighborhood: Node N 1 is a positive neighbor of node N 2 , if they are connected by a positive edge. We define the positive neighborhood of node s as the set of nodes connected by positive edges with node s .

Initially, every gene in individual is assigned a sign +1 or domly. In order to improve the efficiency and avoid meaningless computation, a preprocess strategy is introduced. For each indi-vidual, the allele value j assigned to i th gene is randomly selected from the positive neighborhood of i . The initialization process is described in Algorithm 2 .

Algorithm 2. The population initialization procedure 3.4. Genetic operators
Crossover . Crossover used here is two-point crossover, which randomly selects two cut point. The crossover process is defined as followed. Firstly, given two chromosomes X 1 and X 2 , we randomly select two points in every substring X + , X  X  and S node chromosome, respectively. In every substring, for example in sub-string X + , two points i and j are selected (i.e., 1  X  i all the genes between i and j are swapped between chromosome
X and X 2 .

Mutation . In this process, we randomly select a chromosome to be mutated. Then we employ one point mutation on the chromo-some: a gene in the chromosome is randomly picked, and for nodes, sign of the gene is altered to the sign of one positive neighbor of this node. For edges, sign of the gene is shifted to opposite sign. The times of mutation m is selected randomly, where m  X  [1, V + N ]. The neighbor-based mutation decreases meaningless operation. 3.5. Local search procedure rithm to accelerate the convergence to an optimum. The commonly used local search procedures include hill climbing ( Gong et al., 2011 ), simulated annealing ( Gong et al., 2012 ), etc.
Algorithm 3. The local search procedure on chromosome gene x i in this chromosome. If the change of x i can result in decrease of the function (2) , then the sign of x i is changed. In this local search procedure, every gene is searched. Pseudo code of local search is illustrated in the Algorithm 3 .
 of the best chromosomes in population X child after crossover and mutation. In our algorithm, local search procedure will just be per-formed on the chromosomes with optimal fitness. 3.6. Transformation
Algorithm 4. The transformation procedure on chromosome cation of equivalence transformations. This algorithm preserves the overall energy function in (1) . Our algorithm is to have the least number of sign changes by optimizing objective function (3) .
Inspired by the algorithm in Iacono et al. (2010) , we design an improved transformation procedure in this paper, which also pre-serves the overall energy function. In this transformation, network is still balanced while the results of objective function (3) are better. is illustrated in Algorithm 4 .
 the transformation procedure introduced in this paper. In this net-work, solid lines represent positive edges and dashed lines denote negative ones. Green lines represent sign-changed edges. Fig. 4 (a) is the original network which is unbalanced. The energy func-tion (1) of Fig. 4 (b) equals zero and Fig. 4 (b) is partitioned into + + 1 1 + + 1 1 + + 1 1 + + 1 1 2 2 3 3 4 4 5 5 2 clusters. Though Fig. 4 (b) is balanced, this result is not the opti-mal solution of the problem to be solved in this paper. In Fig. 4 (b), for the node 7, N c + = 1, N c  X  = 1, N u + = 0 and N u  X  * N cent to node 7 will have a sign flip, and sign assigned to this node will also be switched. Fig. 4 (c) which is achieved by applying the transformation procedure to Fig. 4 (b) is balanced. Fig. 4 (c) is parti-tioned into two clusters where all the nodes within the same cluster are friends while nodes from different clusters are foes. 4. Experiments
In this section, we will test our algorithm Meme-DB on some signed networks. The results show that our algorithm could well optimize dynamical changes of structural balance. To demonstrate the necessity and effectiveness of local search procedure, GA-DB is chosen to be compared with the proposed algorithm, which is developed by removing the local search procedure in Algorithm 1 . Moreover, the algorithm (named GT here) proposed by Iacono et al. (2010) , the method named Meme-SB proposed by Sun et al. (2014) and constrained triad dynamics (CTD) proposed by Antal et al. (2005) are also given for comparison. 4.1. Experimental settings
The algorithm is written in MATLAB, and all the experiments are carried out on a 3.2 GHZ and 4G RAM computer. The operating system is MS window 7.

In our algorithm, there are various parameters. The parameters used in this paper are given in Table 1 .
 4.2. Results of the experiments
In experiments, we test our proposed algorithm on two illustra-tive signed networks: Slovene Parliamentary Party Network (SN), Illustrative Signed Networks (IN), and two real signed networks: EGFR (EN) and Macrophage (MN). Because there are symmetric-incompatible or sign-ambiguous edges pairs in some networks, we have removed these edge pairs to make these networks symmetric, as done in Iacono et al. (2010) , see Table 2 for details.
Slovene Parliamentary Party Network (SN): this network is set up by a series of experts on Parliamentary activities in 1994 ( Ferligoj and Kramberger, 1996 ), which is a relation network 10 Slovene Parliamentary parties. Nodes in this network represent ten parties in this network: SKD, ZLSD, SDSS, LDS, ZS-ESS, ZS, DS, SLS, SPS-SNS, and SNS. Edges in this network are friendly/hostile relations among these parties.

Illustrative signed networks (IN): The network is originally illustrated in Yang et al. (2007) . Positive edges mean that two peo-ple are good friends, while negative edges mean two people are enemies. This network is balanced.

EGFR (EN): The network is Epidermal growth factor recep-tor pathway, created by Oda et al. (2005) . Edge in this network represents transcription factor. Positive/negative edges are posi-tive/negative feedback controls.

Macrophage (MN): A network, obtained by Oda et al. (2004) , is a macrophage X  X  molecular interaction map. Edge in this net-work describes the molecular interaction of a macrophage. Positive/negative edges represent activation, translocation, or dis-sociation.

In our objective function, there are two undetermined parame-ters. In our experiments, we want to know the variation of objective function with both of parameters and . First, we test influence of on objective function. In our experiments, we run our algorithm without the transformation procedure 30 times on four networks +1 +1 2 for parameter = 0.2, 0.5 and 0.8. In Table 3 X 5 , we give averages of our algorithm for = 0.1, 1, 5, 10, 100. In these tables,  X  N  X  denote the numbers of sign-changed positive and negative edges, respectively, and  X  OF  X  denotes the values of objective function (3) .
We set = 1 as the default value and test the variation of dif-ferent variables with parameter . For each network, we run our algorithm 30 times for different . In our experiments, we opti-mize objective function with the mixing parameter increasing from 0 to 1 with an interval of 0.1. The averages and standard devi-ations of three variables over 30 times are given in Table 6 , where
N c + is the number of sign-changed positive edges, N c  X  is the num-ber of sign-changed negative edges and OF is the result of objective function.

On SN network, except for = 0.9 and 1, averages of N c + and N remain unchanged with the increase of , for the number of nodes and edges in SN network are small and our algorithm could get the optimal solution. For = 0.9 and 1, all the negative edges within SN network sometimes are changed of their signs and all the nodes in this network are friends. IN network is originally balanced and none edges is changed of signs. Our algorithm cannot always find the optimal solution and sometimes get the near-optimal solution.
On EN and GN networks, the numbers of sign-changed negative edges increase with the increase of . The numbers of sign-flipped positive edges decrease with the increase of . Moreover, the results of objective function increase first and then decrease. To show the phenomenon more clearly, except for N c + , N c  X  variation of averages of the overall numbers of sign-changed edges N c with on four networks is also illustrated in Fig. 5 . Contrary to
OF , the averages of N c decrease first and then increase and reach the minimum for = 0.5 (i.e. in this case there is no bias towards flipping positive or flipping negative signs). That is, when there is a bias towards flipping positive or negative flips, more edges should be changed of sign.
 skewed distribution of the signs of the edges on the node makes real signed networks almost balanced. In our paper, we aim to compute the least number of sign changes in the evolution of balance, such that in our experiments, edges ended in nodes demonstrated high degree of skewness of the sign distributions will rarely be changed of sign. Then the balanced networks achieved by our algorithm also have nodes demonstrating high degree of skewness of the sign distribution.
 tive signs, results achieved by optimizing our objective function (3) should be equal to the minimum result of energy function (1) . Then to show the performance of our algorithm, we will give the compar-ison of results of our algorithm on Eq. (3) for = 0.5 with the results of the method proposed by Iacono et al. (2010) and algorithm by
Sun et al. (2014) on Eq. (1) . As shown in Fig. 6 , though except for SN network, the results of our algorithm are slightly less than that of
GT on other three networks, the results of our algorithm are accept-able. On the network MN, our algorithm is better than algorithm Meme-SB, while on network EN, our algorithm is a little bit worse. been proposed. Here, constrained triad dynamics (CTD) proposed by Antal et al. (2005) is used to make a comparison with our proposed algorithm. Firstly, a definition of  X  X ammed state X  for incomplete network is given because  X  X ammed state X  is originally defined for complete networks.
 rithm is struck in a jammed state, when no change of edge signs can decrease the number of imbalanced triads.
 networks SN and IN, while the total numbers of sign changes of CTD are higher than those of our algorithm on another two networks. CTD on incomplete networks is easily trapped in  X  X ammed states X .
Meme-DB gives the least number of sign changes of evolution, while CTD evolves following update rules and does not give the least number of sign changes, which causes that the results of CTD is worse than those of Meme-DB.

To show the necessity of procedures of local search and pre-process method in our algorithm Meme-DB, three algorithms named as Meme-DB1, Meme-DB2 and GA-DB are chosen to make a comparison. In our algorithm, a preprocess method is introduced. Meme-DB1 and Meme-DB2 are introduced to show that the preprocess procedure in our algorithm can speed up the algorithm convergence and contribute to find the global optima. Meme-DB1 is a method with the random initializa-tion method without preprocess procedure. In Meme-DB2, a random number is produced for each gene in the chromo-some intended for preprocess. If the number is above 0.5, then the gene will be preprocessed. Otherwise, the gene is without preprocess procedure. To demonstrate the necessity of local search procedure, GA-DB is introduced, which is achieved by only deleting the local search procedure of our algorithm.
The proposed algorithm Meme-DB and other three algorithms above are run 30 times without the transformation procedure.
The averages, standard deviations and minimum values of four algorithms on four networks are illustrated in Table 7 . As Table 7 shown, all four algorithms can get the global optimal solutions on networks SN and IN, while the proposed algorithm have the minimum average on network IN. On the network EN, both of the average and minimum of Meme-DB are the best among four algorithms. On the network MN, the average of Meme-DB is minimum, while the minimum value of algorithm Meme-DB2 is optimal.

To explain the results of four algorithms further, the conver-gence trajectories of optimal values of four algorithms on four signed networks in experiments above are given in Fig. 8 . All four algorithms can find the optimal solutions of networks SN and IN.
The proposed algorithm Meme-DB, Meme-DB2 and GA-net all can find the global solution of SN in the 1th iteration. On the network
IN, algorithm Meme-DB1 has the best performance, which may be because of a good random initialization. The proposed algorithm has a better performance than another two algorithms. On the net-work EN, the proposed algorithm has the best performance among the four algorithms. On the network MN, our algorithm has the best initial value, while the speed of convergence is worse than Meme-
DB2. Algorithm GA-DB cannot converge to the optimal solutions on networks EN and MN within 50 iterations. It is concluded that the preprocess procedure and local search procedure in our algorithm are necessary. 5. Conclusion and future works
In this paper, we optimize dynamical evolution of structural balance in signed networks. Instead of using a total number of sign changes, we suggest that there is a certain bias towards flip-ping positive or flipping negative signs. Dynamical evolution of structural balance is formulated as an optimization problem. An algorithm based on memetic algorithm named Meme-DB is pro-posed to optimize the proposed objective function. The results of our algorithm on four networks show the variation of objective function with parameter in the objective function. Further exper-iments show the efficiency of the preprocess procedure and local search procedure. Future work will aim at optimizing dynamics evolution in which existing edges could be removed and new edges can be formed.
 Acknowledgements
The authors wish to thank the editors and anonymous review-ers for their valuable comments and helpful suggestions which greatly improved the paper X  X  quality. This work was supported by the National Natural Science Foundation of China (Grant nos. 61273317, 61422209 and 61473215), Key Project from the National Science Foundation of China (Grant No. 12AZD110), the National Program for Support of Top-notch Young Professionals of China, the Specialized Research Fund for the Doctoral Program of Higher Edu-cation (Grant no. 20130203110011) and the Fundamental Research Fund for the Central Universities (Grant nos. K50510020001 and K5051202053).
 References
