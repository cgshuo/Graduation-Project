 Grigoris Antoniou, Frank van Harmelen, A Semantic Web Primer, The MIT Press, April 1, 2004, 272 pp., ISBN: 0262012103, $40.00
Like many broad concepts, such as artificial intelligence or software engineering, the semantic Web is an aspiration rather than a precise theory or technology. It is driven by the social demand to find reliable, appropriate information as the supply of potential information outstrips our means of processing it. Opin-ions differ over the solution to this problem X  X ome attempt engineering standardisation; others look for emergence via automation X  X ut there are signs of consensus on the representational tools of the trade. These are: XML (as a markup language), RDF (to describe relations between Web objects) and OWL (to describe ontologies). This book is the best way I know to obtain a basic understanding of these tools and their context in system design.

If you just want an introduction to the basic forms of representation then the first hundred pages of the book suffices. This explains the essentials of the languages and demonstrates their use in describing some of the things one might expect to find in a semantic Web. With this knowledge you could start to write (or generate) meta-data your own documents or databases. If you do this in a way that suits some existing search or visualisation tool then (congratulations) you have contributed to the semantic Web (or perhaps to a seman-tic Web inside an organisation). You will still have some work to do, however, if you want to harness this meta-data yourself. For that, you need to know something of the nature of automated reasoning X  X he good news being that the essentials are not daunting at a mere 27 pages in this book. That  X  s not enough to make you a  X  X  X nowledge engineer X  X  but it is enough to get you started (and there are plenty of more extensive books that specialise in this).

A fundamental issue for semantic webs is bootstrapping. To gain advantage from formally expressed knowledge we need automated inference mechanisms but those will not be effective without sufficient quanti-ties of available knowledge. To convince people to invest in markup that yields formally expressed knowledge it helps to have a convincing demonstration of the benefits flowing from this, through automated inference. In other words a leap of faith, or perhaps insight into a domain, is required to gain momentum in semantic Web projects. One way to gain insight is by understanding the approaches used by others in similar domains. The book summarises some case studies. Probably this is the only point in the book where I wanted more. We need a better understanding of the pragmatics of successful semantic Web projects and this come mostly through example. Perhaps this book is not the best place for extensive discussion of application, since one of its great strengths is its brevity, but the semantic Web (as currently understood) is a difficult knowledge engineering task to begin. Detailed descriptions of successful applications would help us all develop a common under-standing of what is and is not feasible. The good news is that the case studies in this book are well within the limits of engineers with traditional skills, once they know what they are about.

As more people set their minds to large-scale, distributed knowledge engineering, I expect we shall see a variety of books with various views on semantic webs, computational grids, multi-agent systems in the large, and various hybrid combinations of these. Any book on the subject written currently is likely to be a milestone rather than the winning post in the race to build truly scalable semantic Web systems. We need milestones and, in the meantime, this is the only book I know that gives the essentials of this kind of engineering as it currently is understood. For someone who wants to start now it is an essential text.

