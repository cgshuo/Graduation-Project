 Zhirong Yang zhirong.yang@aalto.fi Erkki Oja erkki.oja@aalto.fi Cluster analysis assigns a set of objects into groups so that the objects in the same cluster are more similar to each other than to those in other clusters. Opti-mization of most clustering objectives is NP-hard and relaxation to  X  X oft X  clustering is often required. A non-negativity constraint, together with various low-rank matrix approximation objectives, has widely been used for the relaxation purpose in the past decade. The most popular nonnegative low-rank approxi-mation method is Nonnegative Matrix Factorization (NMF). It finds a matrix that approximates the simi-larities and can be factorized into several nonnegative low-rank matrices. NMF was originally applied to vec-torial data, where Ding et al. (2010) have shown that NMF is equivalent to the classical k -means method. Later NMF was applied to the (weighted) graph given by the pairwise similarities. For example, Ding et al. (2008) presented Nonnegative Spectral Cuts by using a multiplicative algorithm; Arora et al. (2011) proposed Left Stochastic Decomposition that approximates a similarity matrix based on Euclidean distance and a left-stochastic matrix. Another stream in the same direction is topic modeling. Hofmann (1999) gave a generative model in Probabilistic Latent Semantic In-dexing (PLSI) for counting data, which is essentially equivalent to NMF using Kullback-Leibler (KL) di-vergence and Tri-factorizations. Bayesian treatment of PLSI by using Dirichlet prior was later introduced by Blei et al. (2001). Symmetric PLSI with the same Bayesian treatment is called Interaction Component Model (ICM) (Sinkkonen et al., 2008).
 Despite remarkable progress, the above relaxation ap-proaches are still not fully satisfactory in all of the fol-lowing requirements that affect the clustering perfor-mance using nonnegative low-rank approximation: (1) approximation error measure that takes into account sparse similarities, (2) decomposition form of the ap-proximating matrix, where the decomposing matrices should contain just enough parameters for clustering but not more, and (3) normalization of the approxi-mating matrix, which ensures relatively balanced clus-ters and equal contribution of each data sample. Lack-ing one or more of these dimensions can severely affect clustering performance.
 In this paper we present a new nonnegative low-rank approximation method for clustering, which satisfies all of the above three requirements. First, because datasets often lie in curved manifolds such that only similarities in a small neighborhood are reliable, we adopt KL-divergence to handle the resulting sparsity. Second, different from PLSI, we enforce an equal con-tribution of every data sample and then directly con-struct the decomposition over the probabilities from samples to clusters. Third, these probabilities form the only decomposing matrix to be learned in our ap-proach and directly gives the answer for probabilistic clustering. Furthermore, our decomposition method leads to a doubly-stochastic approximating matrix, which was shown to be desired for balanced graph cuts (Zass &amp; Shashua, 2006). We name our new method DCD because it is based on Data-Cluster-Data ran-dom walks.
 In order to solve the DCD learning objective, we pro-pose a novel relaxed Majorization-Minimization algo-rithm to handle the new matrix decomposition type. Our relaxation strategy works robustly in finding sast-isfactory local optimizers under the stochasticity con-straint. Furthermore, we argue that complexity con-trol such as Bayesian priors only provides initialization for the new algorithm. This eliminates the problem of hyperparameter selection in the prior.
 Empirical comparison with NMF and other graph-based clustering approaches demonstrates that our method can achieve the best or nearly the best clus-tering purity in all tasks. For some datasets, the new method significantly improves the state-of-the-art. After this introductory part, we present the new method in Section 2, including its learning objec-tive, probabilistic model, optimization and initializa-tion techniques. In Section 3, we point out the con-nections and differences between our method and other recent related work. Experimental settings and results are given in Section 4. Finally we conclude the paper and discuss some future work in Section 5. Suppose the similarities between n data samples are precomputed and given in a nonnegative symmetric matrix A . This matrix can be seen as (weighted) affin-ity of an undirected similarity graph where each node corresponds to a data sample (data node). A clus-tering analysis algorithm takes such input and divides the data nodes into r disjoint subsets. In probabilistic clustering analysis, we want to find P ( k | i ), the prob-ability of assigning the i th sample to the k th cluster, where i = 1 ,...,n and k = 1 ,...,r . In the following, i,j and v stand for data sample (node) indices while k and l stand for cluster indices. 2.1. Learning objective Some of our work was inspired by the AnchorGraph (Liu et al., 2010) which was used in large approxi-mative graph construction based on a two-step ran-dom walk between data nodes through a set of an-chor nodes. Note that AnchorGraph is not a clustering method.
 If we augment the input similarity graph by r cluster nodes , the cluster assigning probabilities can be seen as single-step random walk probabilities from data nodes to the augmented cluster nodes. Without preference to any particular samples, we impose uniform prior P ( i ) = 1 /n over the data nodes. By this prior, the reversed random walk probabilities can then be calcu-lated by the Bayes formula Consider next the probability of two-step random walks from i th data node to j th data node via all clus-ter nodes ( DCD random walk ):
P ( i | j ) = X This probability defines another similarity between two data nodes, b A ij = P ( i | j ), with respect to clus-ter nodes. Note that this matrix has rank at most equal to r . The learning target is now to find a good approximation between the input similarities and the DCD random walk probabilities: AnchorGraph does not provide any error measure for the above approximation. A conventional choice in NMF is the squared Euclidean distance, which em-ploys the underlying assumption that the noise is ad-ditive and Gaussian.
 In real-world clustering tasks for multivariate datasets, data points often lie in a curved manifold. Conse-quently, similarities based on Euclidean distances are reliable only in a small neighborhood. Such local-ity causes high sparsity in the input similarity ma-trix. Sparsity also commonly exists for real-world net-work data. Because of the sparsity, Euclidean dis-tance is improper for the approximation in Eq. (3), because additive Gaussian noise should lead to a dense observed graph. In contrast, (generalized) Kullback-Leibler divergence is more suitable for the approxima-tion. The underlying Poisson noise characterizes rare occurrences that are present in our sparse input. We can now formulate our learning objective as the fol-lowing optimization problem: min where we write W ik = P ( k | i ) for convenience and thus Note that b A is symmetric as it is easy to verify that because it is left-stochastic by probability definition. 2.2. Probabilistic model The optimization objective has an analogous statisti-cal model with the PLSI. Dropping the constant terms from D KL ( A || b A ), the objective is equivalent to maxi-mizing This can be identified as the log-likelihood of the following generative model if A ij are integers: for t = 1 ,...,T , add one to entry ( i,j )  X  Multinomial 1 n b A, 1 , whose likelihood is given by where T = P ij A ij .
 The above model simply uses uniform prior on rows of W . It does not prevent from using informative priors or complexity control. A natural choice for probabili-ties is the Dirichlet distribution (  X  &gt; 0) which is also the conjugate prior of multinomial dis-tribution. The Dirichlet prior reduces to be uniform when  X  = 1.
 Although it is possible to construct a multi-level graphical model similar to the Dirichlet process topic model, we emphasize that the smallest approximation error (or perplexity) is our final goal. Dirichlet prior is used only in order to ease the optimization. Therefore we do not employ more complex generative models; see Section 2.4 for more discussion. 2.3. Optimization The optimization problem with Dirichlet prior on W is equivalent to minimizing
J ( W ) =  X  X There are two ways to handle the constraint Eq. (5). First, one can develop the multiplicative algorithm by the procedure proposed by Yang &amp; Oja (2011) by ne-glecting the stochasticity constraint, and then normal-ize the rows of W after each update. However, the op-timization by this way easily gets stuck in poor local minima in practice.
 Here we employ a relaxing strategy to handle the con-straint. We first introduce Lagrangian multipliers for the constraints: Unlike traditional constrained optimization that solves the fixed-point equations, we employ a heuristic to find the multipliers  X  . Denote  X  =  X  +  X  X  X   X  the gradient of J with respect to W , where  X  + and  X   X  are the positive and (unsigned) negative parts, respectively. This suggests a fixed-point update rule for W : Imposing P k W 0 ik = 1, we obtain where a i and b i are given in Algorithm 1. Next we show that the augmented objective Eq. (10) decreases after each iteration with the above  X  .
 Theorem 1. Denote W new the updated matrix after each iteration. It holds that L ( W new , X  )  X  L ( W, X  ) with  X  i = ( b i  X  1) /a i .
 Proof. The algorithm construction mainly follows the Majorization-Minimization procedure (see e.g. Yang &amp; Oja, 2011). We use W and f W to distinguish the cur-rent estimate and the variable, respectively.
 Algorithm 1 Relaxed MM Algorithm for DCD
Input: similarity matrix A , number of clusters r , nonnegative initial guess of W . repeat until W is unchanged
Output: cluster assigning probabilities W . (Majorization)
L ( f W )  X  X  X  X  X  (  X   X  1) X  X  X  X  X  X  (  X   X  1) X  X  X  X  X  X  (  X   X  1) X + X  X  G ( f W,W ) , where C 1 and C 2 are constants irrelevant to the vari-able f W . The first two inequalities follow the CCCP majorization (Yang &amp; Oja, 2011) using the convex-ity and concavity of  X  log() and log(), respectively. The third inequality is called  X  X oving term X  technique used in multiplicative updates (Yang &amp; Oja, 2010). It adds the same constant 1 a ator and denominator in order to guarantee that the updated matrix entries are positive, which is imple-mented by using a further upper-bound of zero. All the above upper bounds are tight at f W = W , i.e. G ( W,W ) = J ( W ). (Minimization)  X  f W ik Setting the gradient to zero gives Multiplying both numerator and denominator by a i gives the last update rule in Algorithm 1. Therefore, L ( W new , X  )  X  G ( W new ,W )  X L ( W, X  ).
 Algorithm 1 jointly minimizes the approximation er-ror and drives the rows of W towards the probability simplex. The Lagrangian multipliers are automatically selected by the algorithm, without extra human tuning labor. The quantities b i are the row sums of the uncon-strained multiplicative learning result, while the quan-tities a i balance between the gradient learning force and the probability simplex attraction. Besides con-venience, we find that this relaxation strategy works more robustly than the brute-force normalization after each iteration. 2.4. Initialization The optimization problems of many clustering anal-ysis methods, including ours, are non-convex. Usu-ally finding the global optimum is very expensive or even NP-hard. When local optimizers are used, the optimization trajectory can easily get stuck in poor local optima if the algorithm starts from an arbitrary random guess. Proper initialization is thus needed to achieve satisfactory performance.
 The cost of the initialization should be much cheaper than the main algorithm. There are two popular choices: k -means and Normalized Cut (Ncut). The first one can only be applied to vectorial data and could be slow for large-scale high-dimensional data. Here we employ the second initialization method. While the original Ncut is NP-hard, the relaxed Ncut problem can be efficiently solved via spectral methods (Shi &amp; Malik, 2000). Furthermore, it is particularly suitable for sparse graph input, which is our focus in this paper.
 Besides Ncut, we emphasize that the minimal approxi-mation error is our sole learning objective and all reg-ularized versions, e.g. with different Dirichlet priors, only serve as initialization . This is because cluster-ing analysis, unlike supervised learning problems, does not need to provide inference for unseen data. That is, the complexity control such as Bayesian priors is not meant for better generalization performance, but for better-shaped space to facilitate optimization . In this sense, we can use the results of diverse regular-ized versions or even other clustering algorithms as starting guesses, and pick the one with the smallest approximation error among multiple runs.
 In implementation, we first convert an initialization clustering result to an n  X  r binary indicator matrix, and then add a small positive perturbation to all en-tries. Next, the perturbed matrix is fed to our opti-mization algorithm (with  X  = 1 in Algorithm 1). Our method intersects with several other machine learning approaches. Here we discuss some of these directions, pinpointing the connections and our new contributions. 3.1. Topic Model A topic model is a type of statistical model for discov-ering the abstract  X  X opics X  that occur in a collection of documents. An early topic model was PLSI (Hofmann, 1999) which maximizes the following log-likelihood for symmetric input A : One can see that PLSI has similar form as Eq. (7). Both objectives can be equivalently expressed by non-negative low-rank approximation using KL-divergence. The major difference is the decomposition form of the approximating matrix. There are two ways to model the hierarchy between latent variables and the observed ones. Topic model uses the pure genera-tive way while our method employs the discriminative way. PLSI gives the clustering results indirectly. One should apply Bayes formula to evaluate P ( k | i ) using P ( i | k ) and P ( k ). There are n  X  r  X  1 free parameters to be learned in the latter two quantities. In contrast, our method directly learns the cluster assigning prob-abilities P ( k | i ) which contains only n  X  ( r  X  1) free parameters. This difference can be large when there are only a few clusters (e.g. r = 2 or r = 3). It is known that the performance of PLSI can be improved by using Bayesian non-parametric model-ing. Bayesian treatment for the symmetric version of PLSI leads to Interaction Component Model (Sinkko-nen et al., 2008). It associates Dirichlet priors to the PLSI factorizing matrices and then makes use of the conjugacy between Dirichlet and multinomial to derive collapsed Gibbs sampling or variational optimization methods.
 An open problem of Bayesian methods is how to de-termine the hyperparameters that control the priors. Asuncion et al. (2009) found that wrongly chosen pa-rameters can lead to only mediocre or even poor per-formance. The automatic hyperparameters updating method proposed by Minka (2000) does not necessar-ily lead to good solution in terms of perplexity (Asun-cion et al., 2009) or clustering purity in our exper-iments (see Section 4). Hofmann (1999); Asuncion et al. (2009) suggested to select the hyperparameters using the smallest approximation error for some held-out matrix entries, which is however more costly and might weaken or even break the cluster structure. By contrast, there is no such prior hyperparameter se-lection problem in our method. The algorithms using various priors only play their role in the initialization. Among the runs with different starting points, we sim-ply select the one with the smallest approximation er-ror. 3.2. Nonnegative Matrix Factorization Nonnegative Matrix Factorization is one of the earliest methods for relaxing clustering problems by nonnega-tive low-rank approximation (see e.g. Xu et al., 2003). The research on NMF also opened the door for multi-plicative majorization-minimization algorithms for op-timization over nonnegative matrices. In the original NMF, an input nonnegative matrix X is approximated by a product of two low-rank matrices W and H . Later researchers found that more constraints or normaliza-tions should be imposed on the factorizing matrices to achieve desired performance.
 Orthogonality is a popular choice (see e.g. Ding et al., 2006) for highly sparse factorizing matrices, especially the cluster indicator matrix. However, the orthogonal-ity constraint seems exclusive of other constraints or priors. In practice, the orthogonality favors Euclidean distance as the approximation error measure for sim-ple update rules, which is against our requirement for sparse graph input.
 Stochasticity seems more natural for relaxing hard clustering to probabilities. Recently Arora et al. (2011) proposed a symmetric NMF using left-stochastic factorizing matrices called LSD. Their method also directly learns the cluster assigning prob-abilities. However, LSD is also restricted to Euclidean distance.
 Our method has two major differences from LSD. First, we use Kullback-Leibler divergence which is more suitable for sparse graph input or curved man-ifold data. This also enables us to make use of the Dirichlet and multinomial conjugacy pair. Second, our decomposition has good interpretation in terms of a random walk. Furthermore, imbalanced clustering is implicitly penalized because of the denominator in Eq. (6). 3.3. AnchorGraph DCD uses the same matrix decomposition as Anchor-Graph. However, there are several major differences between the two methods. First of all, AnchorGraph is not made for clustering, but for constructing the graph input. AnchorGraph has no learning objective that captures the global structure of data such as clusters. Each row of the decomposing matrix in AnchorGraph is learned individually and only encodes the local in-formation. There is no learning over the decomposing matrix as a whole. Furthermore, anchors are either selected from data samples or pre-learned by e.g. k -means. By contrast, cluster nodes in our formulation are virtual. They are not vectors and need no physical storage. 4.1. Compared methods We have compared our method with eight other clus-tering algorithms that can take a symmetric nonnega-tive sparse matrix as input. The compared algorithms range from classical to state-of-the-art methods with various principles: graph cuts including Normalized Cut (Ncut) (Shi &amp; Malik, 2000), Nonnegative Spectral Cut (NSC) (Ding et al., 2008), and 1-Spectral ratio Cheeger cut (1-Spec) (Hein &amp; B  X uhler, 2010); nonneg-ative matrix factorization including Projective NMF (PNMF) (Yang &amp; Oja, 2010), Symmetric 3-Factor Or-thogonal NMF (ONMF) (Ding et al., 2006), and Left-Stochastic Decomposition (LSD) (Arora et al., 2011); topic models including Probabilistic Latent Seman-tic Indexing (PLSI) (Hofmann, 1999) and Interaction Component Model (ICM) (Sinkkonen et al., 2008). The detailed settings of the compared methods are as follows. We implemented NSC, PNMF, ONMF, LSD, PLSI, and DCD using multiplicative updates. For these methods, we ran their update rules for 10,000 it-erations to ensure that all algorithms have sufficiently converged. We used the default setting for 1-Spec. ICM uses collapsed Gibbs sampling, where each round of the sampling sweeps the graph once. We ran the ICM sampling for 100,000 rounds to ensure that the MCMC burn-in is converged (it took about one day for the largest dataset). The hyperparameters in ICM are automatically adjusted by using Minka X  X  method (Minka, 2000).
 Despite mediocre results, Ncut runs very fast and gives pretty stable outputs. We thus used it for initializa-tion. After getting the Ncut cluster indicator matrix, we add 0.2 to all entries and feed it as starting point for other methods, which is a common initialization setting for NMF methods. The other three initial-ization points for our method are provided by Ncut followed by DCD using three different Dirichlet priors (  X  = 1 . 2,  X  = 2, and  X  = 5). The clustering result of our method is reported by the run with the smallest approximation error, see Eq. (4). 4.2. Datasets The performance of clustering methods were evaluated using real-world datasets. In particular, we focus on data that lie in a curved manifold. We thus selected 15 such datasets which are publicly available from a variety of domains. The data sources are given in the supplemental document.
 The statistics of the selected datasets are summarized in Table 1. In brief, Amazon are book similarities according to amazon.com buying records; Votes are voting records in US congress by two different par-ties; ORL , PIE , YaleB are face images collected un-der different conditions; COIL20 are small toy images; Isolet and LegReco are handwritten English letter im-ages; Webkb4 and 7sectors are text document collec-tions; Mfeat , USPS , PenDigits , MNIST are handwrit-ten digit images.
 We preprocessed the above datasets to produce sim-ilarity graph input except Amazon which is already in sparse graph format. We extracted the scattering features (Mallat, 2012) for image data except Isolet and Mfeat which have their own feature representa-tion. We used Tf-Idf features for text documents. After feature extraction, we constructed a K -Nearest-Neighbor (KNN) graph for each dataset. We set K = 5 for the six smallest datasets (except Amazon ) and K = 10 for the other datasets. We then symmetrized and binarized the K NN graph B to obtain the input similarities A (i.e. A ij = 1 if B ij = 1 or B ji = 1, and A ij = 0 otherwise). 4.3. Results Clustering performance of the compared methods is evaluated by clustering purity where n l k is the number of data samples in the cluster k that belong to ground-truth class l . A larger purity in general corresponds to better clustering result. The clustering purities for the compared methods are given in Table 2.
 Our method has strong performance in terms of clus-tering purity. DCD wins 12 out of 15 selected datasets. Even for the other three datasets, DCD is the first or second runner-up, with purities tied with or very close to the winner.
 The new method is particularly more advantageous for large datasets. Note that the datasets in Table 2 are ordered by their sizes. We can see that there are some other winners or joint winners for smaller datasets, for example, LSD for the PIE faces or 1-Spec for the Mfeat digits. PLSI performs quite similarly with DCD for these small clustering tasks. However, DCD demonstrates clear win over the other methods for the five largest datasets.
 DCD has remarkable performance for the largest dataset MNIST . In this case, clustering as unsuper-vised learning by using our method has even achieved classification accuracy (i.e. purity) very close to many modern supervised approaches 1 , whereas we only need ten labeled samples to remove the cluster-class permu-tation ambiguity. We have presented a new clustering method based on nonnegative low-rank approximation with three ma-jor original contributions: (1) a novel decomposition approach for the approximating matrix derived from a two-step random walk; (2) a relaxed majorization-minimization algorithm for finding better approximat-ing matrices; (3) a strategy that uses regularization with the Dirichlet prior as initialization. Experimen-tal results showed that our method works robustly for various selected datasets and can improve clustering purity for large manifold datasets.
 There are some other dimensions that affect clustering performance. Our practice indicates that initialization could play an important role because most current al-gorithms are only local optimizers. Using Dirichlet prior is only one way to smooth the objective function space. One could use other priors or regularization techniques to achieve better initializations.
 Another dimension is the input graph. We have fo-cused on the grouping procedure given that the simi-larities are precomputed. One should notice that bet-ter features or a better similarity measure can signif-icantly improve clustering purity. Though we did not use AnchorGraph for the sake of including topic mod-els in our comparison, it could be more beneficial to construct both approximated and approximating ma-trices by the same principle. This also suggests that clustering analysis could be performed in a deeper way using hierarchical pre-training. Detailed implementa-tion should be investigated in the future.
 This work was financially supported by the Academy of Finland (Finnish Centre of Excellence in Com-putational Inference Research COIN, grant no. 251170; Zhirong Yang additionally by decision num-ber 140398).

