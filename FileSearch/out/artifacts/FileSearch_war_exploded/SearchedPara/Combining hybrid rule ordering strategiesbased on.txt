
Centro de Aplicaciones de Tecnolog X as de Avanzada, Havana, Cuba Instituto Nacional de Astrof X sica  X ptica y Electr X nica, Puebla, M X xico 1. Introduction
Associative Classification, also known as Classification Association Rule Mining (CARM) and in-troduced in [22], integrates Association Rule Mining (ARM) and Classification Rule Mining (CRM). This integration involves mining a special subset of association rules, called Class Association Rules (CARs), using some quality measure (QM) to evaluate them. In general, a CAR describes an implica-tive co-occurring relationship between a set of items (itemset) and a pre-defined class, expressed as  X  item 1 ,..., item n  X  class  X . Regardless of the particular methodology is used to compute the set of CARs, a classifier based on this approach is usually presented as an ordered CAR list l , and a mechanism for classifying unseen transactions using l [21,22,32].

Associative classification has been applied to many tasks including anomaly detection [15], text clas-sification [7], text segmentation [8], automatic image annotation [27], automatic error detection [23], de-termination of DNA splice junction types [6], determination of cotton yarn quality [2], discrimination of diseases [20], mammalian mesenchymal stem cell differentiation [28] and prediction of protein-protein interaction types [24], among others. a set of labeled transactions D , are given. Each transaction in D is represented by a set of items X  X  I and a class c  X  C . A lexicographic order among the items of I is assumed. The Support of an itemset X  X  I , denoted as Sup ( X ) , is the fraction of transactions in D containing X (see Eq. (1)). A CAR is an implication of the form X  X  c where X  X  I and c  X  C .

The rule X  X  c is held in D with certain Support s (see Eq. (2)) and Confidence  X  (see Eq. (3)), where s is the fraction of transactions in D that contains X  X  X  c } ,and  X  is the probability of finding c in transactions that also contain X , which represents how  X  X trongly X  the rule antecedent X implies the rule consequent c .ACAR X  X  c covers a transaction t if X  X  t , which means that t must contain all the items of X .
 where D X is the set of transactions in D containing X and | X | represents the cardinality.
Several classifiers based on CARs have been developed [12,18,19,21,22,31]. Regardless the CARM approach, a CAR based classifier is usually presented as an ordered list of CARs and a mechanism for classifying new transactions. Therefore, in this paper, we research about new rule ordering strategies and a better satisfaction mechanism such that both together allow obtaining a more accurate classifier.
Preliminary results of this paper were published in [17]. The main differences of this paper w.r.t. the conference paper [17] are the following: (1) we introduce four novel hybrid rule ordering strategies; three of them by combining the Netconf measure with different Support-Confidence based rule ordering strategies, and the fourth strategy by combining the Netconf measure with a rule ordering strategy based on the CAR X  X  size; (2) we combine the proposed rule ordering strategies with a novel  X  X ynamic K  X  satisfaction mechanism, in order to improve the accuracy of CAR based classifiers, and (3) we include new experiments to show the impact of the new hybrid rule ordering strategies in the classification stage, by themselves and in combination with the  X  X ynamic K  X  satisfaction mechanism.

This paper is organized as follows: The next section describes the related work. In section three, the novel  X  X ynamic K  X  satisfaction mechanism is described and the new hybrid rule ordering strategies are introduced. In section four, experimental results show the performance of our proposal by comparing it against the best ones reported in the literature. Finally, our conclusions are given in section five. 2. Related work
Associative Classification was first proposed in [1] where it was used for two specific tasks: detecting redundant medical tests and reducing telecommunication order failures. Later, several classifiers based on CARs have been developed [12,21,22,29 X 31]. Broadly, the CAR-based classifiers can be categorized into two groups according to the way the CARs are generated: 1. Two stage classifiers : In this type of classifiers, all CARs satisfying the Support and Confidence 2. Integrated classifiers : In this type of classifiers, a reduced set of CARs is built in a single step 2.1. Rule ordering strategies
Once a subset of CARs has been obtained, regardless the way they were generated, the CARs are ordered. In [4,29 X 31] the authors established six main rule ordering strategies divided in two groups: Group 1: Based on support-confidence a) CSA (Confidence  X  Support  X  Antecedent size): The CSA rule ordering strategy combines Con-b) ACS (Antecedent size  X  Confidence  X  Support): The ACS rule ordering strategy is a variation Group 2: Based on weighting d) WRA (Weighted Relative Accuracy): The WRA rule ordering strategy, proposed in [12], assigns e) LAP (Laplace Expected Error Estimate): The LAP rule ordering strategy was introduced in [10] f)  X  2 (Chi-Square): The  X  2 rule ordering strategy is a well known technique in statistics, which can
Additionally, some hybrid rule ordering strategies have been proposed in [29 X 31] by combining one rule ordering strategy taken from the Support-Confidence based group (group 1) and another one taken from the Weighting based group (group 2). In general, let A , B be rule ordering strategies from groups 1 and 2 respectively, the rule ordering strategy  X  X ybrid A/B X  is defined as follows:  X  For each predefined class, this ordering strategy selects, from the original list, the Best K Rules in
The experiments in [29 X 31] showed that the obtained classification accuracies using these hybrid rule ordering strategies were better than the ones obtained using their  X  X arents X , e.g. the obtained accuracy using the Hybrid CSA/WRA rule ordering strategy was better than those accuracies obtained using CSA and WRA separately.

In [9], the authors proposed a hybrid rule ordering strategy, called MLRP (Multi-level Rule Priority), which sorts the CARs using rule priority to reduce the influence of rule dependence. The rule depen-dence problem occurs when (during the dataset coverage analysis) a training transaction O is covered by several CARs concurrently and one of them is used first for classifying O [9]. In this case, because the transaction O has been classified, the confidence of all other CARs covering O are recalculated exclud-ing the transaction O , implying possible changes in the CARs order. In a first step, MLPR adopts the L 3 rule ordering strategy as initial order. The L 3 strategy gives higher priority to higher confidence and longer rules. In a second step, rule dependencies are computed and stored in a matrix EWM (Effective Weight Matrix), and later, these dependencies are used to obtain the final order of the CARs. In [18], a novel measure called Netconf (see Eq. (4)) was used to compute and sort the set of CARs. In this paper, we will call Netconf rule ordering strategy (NF) to this approach. Some useful properties of the Netconf measure are the following:  X  Netconf holds the statistical independence property, therefore Netconf ( X  X  c )=0  X  Sup ( X  X   X  Netconf ( X  X  c ) = Netconf ( c  X  X ) if Sup ( X ) = Sup ( c ) , which means that Netconf is not  X  Netconf takes values in [  X  1 , 1] , positive values represent positive dependencies, negative values  X  Netconf satisfies some properties which, according to Shapiro [25], should be satisfied by every
In addition, in [18] the authors showed that Netconf solves the drawbacks of the Support and Con-fidence measures, which have been mentioned in some works [5,26]. According to the above defined groups, the Netconf measure can be considered as a rule ordering strategy belonging to the Weighting based group. Therefore, in this paper, we investigate the use of the Netconf rule ordering strategy com-bined with different rule ordering strategies from the Support-Confidence group in order to determine 2.2. Case satisfaction mechanisms
Once a CAR based classifier has been built, we need to select a satisfaction mechanism for classifying unseen transactions. In [21,22,31], the authors summarize three case satisfaction mechanisms that have been employed for classifying  X  X nseen X  transactions in CAR based classifiers. 1. Best rule : This mechanism selects, according to an ordering imposed on the list of CARs [22], the 2. Best K rules : For each pre-defined class, this mechanism selects the first (top) K rules satisfying 3. All rules : This mechanism selects all rules satisfying the given transaction and it assigns the class
Classifiers following the  X  X est Rule X  mechanism could suffer biased classification or overfitting since the classification is based on only one rule. On the other hand, the  X  X ll Rules X  mechanism includes rules with low ranking for classification and this could affect the accuracy of the classifier. The  X  X est K Rules X  mechanism could be affected when most of the best K rules were obtained extending the same item, or when there is an imbalance among the number of CARs with high Confidence, or another quality measure v alues, per each class, that cover the new transaction. 3. Our proposal
In this section, we introduce four novel hybrid rule ordering strategies based on NetConf. Addition-ally, we describe the  X  X ynamic K  X  satisfaction mechanism, whose preliminary results were introduced in [17]. And finally, we propose to combine the four novel hybrid rule ordering strategies with  X  X ynamic K  X  in order to obtain a more accurate classifier. 3.1. Novel hybrid rule ordering strategies
In this section, we introduce four novel hybrid rule ordering strategies. Following the results reported in [18], we propose to combine the Netconf measure (NF) with the well known Support-Confidence based rule ordering strategies (CSA, ACS and L 3 ), which gives as result the next three hybrid rule ordering strategies:  X  Hybrid CSA/NF.  X  Hybrid ACS/NF.  X  Hybrid L 3 /NF.

Our hypothesis is that Netconf combined with CSA, ACS and L 3 can overcome the best hybrid strate-gies reported in the literature [9,29 X 31].
 As a fourth hybrid rule ordering strategy we propose combining Netconf and the CAR X  X  size (Specific Rules strategy). As it was shown in [18,19], the Specific Rule strategy (SR) considers the CAR X  X  size in descending order, favoring specific (large) rules since specific rules would involve more items from the unseen transactions than general (short) rules [18]. Notice that all rule ordering strategies based on Support-Confidence are also based on the CAR X  X  size but this criterion is considered in ascending order (CSA and ACS), favoring general rules.
 and Support criteria (both applied in descending order), therefore, the general rules are favored because of the Support download closure [9]. Unlike the L 3 strategy, the SR strategy considers the CAR X  X  size ordering strategy is called Hybrid Specific Rules/Netconf (Hybrid SR/NF). Our hypothesis is that the new proposed hybrid rule ordering strategies can overcome the best hybrid strategies reported in the literature [9,29 X 31]. The overall procedure of the above four hybrid rule ordering strategies is shown in Algorithm 1.
 Algorithm 1 : Hybrid X/NF Input : A list of CARs L Output : A re-ordered list of CARs L Hybrid ordered in a hybrid manner forall r  X  L do end sort L NF in a descending order according to  X 
L topK  X  select the top K CARs  X  L NF sort L topK in X manner sort L X in X manner line 10, the list L NF is sorted in descending order according to the Netconf value. In line 11, the top K CARs of L NF are selected and stored in L topK . Later, the remainder of the L NF list is stored in the L X L topK is placed at front of the list L X . 3.2.  X  X ynamic K  X  satisfaction mechanism
In order to overcome the drawbacks of the main satisfaction mechanisms (see Section 2.2), we propose a novel satisfaction mechanism named  X  X ynamic K  X , which works as follows:
First,  X  X ynamic K  X  sorts the CARs in a descending order according to the size of the CARs and in case of tie, the tied CARs are sorted in a descending order according to their QM X  X  value. Later,  X  X ynamic K  X  selects, for each class c  X  C ,asetofrules X  X  c covering the new transaction t and satisfying the following conditions:  X  X  X  c is a maximal rule.  X  for all i  X  I , with i lexicographically greater than all items of X ,
Thereby more large rules with high QM values are selected for classification, avoiding redundancy in the set of CARs and including more different items in the antecedent of the selected CARs. new transaction  X  X ynamic K  X  assigns the class c j if the average of the quality measure values of rules (satisfying the transaction to classify) in N j is greater than the average of the quality measure values different number of CARs, the class with less num ber of CARs is assigned; in case of tie among classes with equal number of CARs, the class with higher Support value is selected, if the tie persist the class is selected randomly.

The  X  X ynamic K  X  mechanism does not have the drawbacks of the other satisfaction mechanisms since:  X  It selects the maximal rules with high QM values, avoiding redundancies and allowing the inclusion  X  The result is not biased when there is imbalance in the number of CARs (covering the transaction to  X  It considers all good quality CARs that cover the new transaction and not only the best one. Thereby,
Finally, in this paper, we investigate the use of the proposed rule ordering strategies combined with the  X  X ynamic K  X  satisfaction mechanism in order to improve the performance of CAR based classifiers. In the next section, we show some experiments that prove this hypothesis. 4. Experimental results
In this section, we aim to evaluate the novel hybrid rule ordering strategies introduced in this paper; comparing their accuracy of classification against the best hybrid rule ordering strategies reported in the literature [9,29 X 31]. Also we evaluate the propos ed hybrid rule ordering strategies combined with  X  X ynamic K  X  satisfaction mechanism.

For the comparison of the hybrid rule ordering strategies, we implemented the TFPC classifier [13] coupled with the  X  X ynamic K  X  satisfaction mechanism although any classifier coupled with the  X  X y-namic K  X  mechanism could be used. In the cases of CSA/NF, ACS/NF, L 3 /NF and SR/NF strategies, we also need to compute the Netconf of the CARs. Our tests were run on a 1.86 GHz Intel(R) Core(TM)2 CPU with 1.00 GB DDR2 of RAM, running Windows 7.
 The experiments were conducted using the datasets reported in [29 X 31], all of them taken from the UCI Machine Learning Repository [3], see characteristics in Table 1. Similar to [29 X 31], the numerical attributes of these datasets were discretized using the LUCS-KDD discretized/normalized ARM and CARM Data Library as suggested in [11]. It should be noticed that our experiments were done using ten-fold cross-validation, reporting the average over the ten folds. Additionally, we set the Netconf threshold to 0.5 as in other works [18,19]. Finally, for Algorithm 1 (see Section 3.1), we set K equal to 5 (the same value used in other works [29 X 31]).

In columns 2 X 4 of Table 2, we show the average accuracy that we get at applying the non-hybrids rule ordering strategies, based on Support-Confidence [31]; additionally, in the last two columns we show the average accuracy that we get at applying NF and SR rule ordering strategies, respectively. From this set from Table 2, NF gets the maximum accuracy in 13 out of the 19 datasets. In terms of average accuracy, NF reaches 80.05 for the 19 datasets, whereas SR, L 3 , CSA and ACS get 79.81, 79.30, 79.19 and 65.96 respectively.
 As we enunciated at Section 3 of this paper, our hypothesis is that Netconf combined with CSA, ACS, L 3 and SR can overcome the best hybrid strategies reported in the literature. Thus, in order to test our hy-pothesis, we performed an experiment comparing the results of our novel hybrid rule ordering strategies show the accuracies obtained by our proposed hybrid strategies CSA/NF, ACS/NF, L 3 /NF and SR/NF (see columns 5 X 8). In columns 2 X 4 of the same table we show the results of the best rule ordering strategies reported in the literature (CSA/  X  2 [29], ACS/LA [30] and MLRP [9]). The first interesting thing that we can observe from our experiments is that, as it was established in [29 X 31], an Hybrid A/B strategy obtains better classification accuracy results than its  X  X arents X  A or B separately. For example, we can see in Table 3 that the classification accuracy obtained using Hybrid SR/NF (82.55) is greater than the accuracies obtained by its  X  X arents X  (see Table 2) SR (79.81) and NF (80.05). Analogously, the classification accuracies obtained by using Hybrid CSA/NF, Hybrid ACS/NF and Hybrid L 3 /NF are greater than the accuracies obtained by their  X  X arents X . From our results reported in Table 3, we can see reported in the literature. It means that our hypothesis is true for all the proposed strategies except for ACS/NF. This occurs because the ACS strategy, different from CSA, L 3 and SR strategies, favors short rules.

As we also mentioned in Section 3, another hypothesis is that combining the proposed hybrid rule ordering strategies with the  X  X ynamic K  X  satisfaction mechanism allows to improve the performance of CAR based classifiers. In order to test this hypothesis, we evaluate all hybrid rule ordering strategies applying the  X  X ynamic K  X  satisfaction mechanism. However, in order to show that these strategies give good results independently of the satisfaction mechanism used, we performed the same experiments of Table 3 but applying  X  X est Rule X ,  X  X ll Rules X  and  X  X est K Rules X  satisfaction mechanism, these results appear in Table 4. Something interesting that we can see from these results is that the proposed mechanism used (see the last row in Table 4). Additionally, notice that  X  X ynamic K  X  obtains the best average accuracy independently of the rule ordering strategy used, being the combination SR/NF +  X  X ynamic K  X  the best one.

As we can see in Table 1, the used datasets have between 2 and 19 classes. In order to show the accuracy on the different datasets, we grouped them according to the number of classes, in three groups: In Table 5 we report the average accuracy of all strategies over these three groups of datasets. In this experiment we can see that the Hybrid SR/NF strategy (and the other three proposed strategies) works well independently of the number of classes in the dataset.

From our experiments we can conclude that, in general, our hybrid rule ordering strategies, in gen-eral, overcome the best hybrid strategies reported in the literature, but by combining our strategies with  X  X ynamic K  X  satisfaction mechanism we obtain the best performance. We can see in Table 3 that the Hybrid SR/NF strategy gets an average accuracy, throughout the 19 datasets, of 82.55; it represents an improvement of 1.12% in accuracy with respect to the second place (Hybrid L 3 /NF).
 Friedman test [14] and the Bergmann-Hommel dynamic post-hoc procedure [16]. Critical Difference diagrams (CD diagrams) [14] are used to show the post-hoc results because CD diagrams compactly present the rank of each algorithm according to the accuracy. CD diagrams also show the magnitude of rank differences between algorithms and the significance of those differences [14]. In a CD diagram, the rightmost algorithm is the best algorithm, while the algorithms sharing a thick line have statistically similar behavior.

Figure 1 shows that Hybrid SR/NF achieves the best results, having a statistical significant differ-ence with almost all other evaluated classifiers with exception of Hybrid L 3 /NF, which only achieves a statistical significance advantage over Hybrid ACS/LA. 5. Conclusions In this paper, we have proposed four novel hybrid rule ordering strategies based on the Netconf mea-sure. The first three strategies arise from combining the Netconf with Support-Confidence based rule ordering strategies. The last, called Hybrid SR/NF, combines the Netconf ordering strategy (NF) with a rule ordering strategy based on the CAR X  X  size (SR), but unlike other existing strategies based on CAR X  X  size, Hybrid SR/NF sorts the CARs in descending order according to their size, favoring specific (large) rules. Additionally, we propose a novel satisfaction mechanism named  X  X ynamic K  X .

Our experimental results show that the proposed hybrid strategies always reached better classifica-tion accuracies than those obtained by their parents rule ordering strategies, as occurs with other hybrid strategies. From the experiments, we can conclude that our novel hybrid rule ordering strategies (with exception of ACS/NF) have better performance than the best hybrid rule ordering approaches reported tionally, from the experiments we can conclude that the proposed hybrid rule ordering strategies reach the first places in terms of accuracy independently of the satisfaction mechanism used. Analogously, the  X  X ynamic K  X  satisfaction mechanism obtains the best results independently of the rule ordering strategy, being the combination SR/NF +  X  X ynamic K  X  the best one.

As future work, we will look for another way to combine ordering strategies, for example ordered list fusion, which would allow combining multiple ordering strategies to obtain a single one that would be better than any subset combination.
 Acknowledgments
This work was partly supported by the National Council of Science and Technology of Mexico (CONACyT) through the project grants CB2008-106443 and CB2008-106366.
 References
