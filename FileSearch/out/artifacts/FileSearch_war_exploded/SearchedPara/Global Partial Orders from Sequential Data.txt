 Sequences of ev en ts arise in man y applications, suc has w eb bro wsing, e-commerce, and monitoring of pro cesses. An im-p ortan t problem in mining sets of sequences of ev en ts is to get an o v erview of the ordering relationships in the data. W e presen t a metho d for nding partial orders that describ e the ordering relationships b et w een the ev en ts in a collection of sequences. The metho d is based on viewing a partial order as a generativ e mo del for a set of sequences, and applying mixture mo deling tec hniques to obtain a descriptiv esetof partial orders. Run times for our algorithm scale linearly in the n um ber of sequences and p olynomially in the n um ber of di eren tev en tt yp es. Th us, the metho ds scales to han-dle large data sets and can b e used for reasonable n um bers of di eren tt yp es of ev en ts. W e illustrate our tec hnique b y applying it to studen t enrollmen t data and w eb bro wsing data.
 H.2.8 [ Information Systems ]: Database Managemen t| Data Mining ; I.2.6 [ Computational Metho dologies ]: Ar-ti cial In telligence| L earning, Misc el lane ous Mixture mo dels, partial orders, sequence analysis, time se-ries analysis Sequences of ev en ts o ccur naturally in man y domains. Ex-amples include user in terface monitoring, w eb bro wsing, alarm logs (from an op erating system, telecom net w ork, etc.), and e-commerce. In fact, an y system that uses on-line transac-tion pro cessing leads to sequences of ev en ts. Suc h data sets often con tain useful information ab out the pro cesses that
On lea v e from Helsinki Univ ersit yof T ec hnology . P art of this w ork w as done while the author w as at Microsoft Re-searc h. pro duce the data and are therefore natural candidates for the use of data mining metho ds.
 Sequences of ev en ts can be analyzed in man y w a ys. The simplest approac h is to forget ab out the sequen tial nature of the data, and view the sequence as an unordered collection of ev en ts. In some cases this approac h pro duces useful results, but these results will not re ect the ordering information bet w een the ev en ts.
 Alternativ ely , there exists a w ealth of statistical metho ds for analyzing time series data. Man y of these metho ds are only applicable to data that consists of sequences of v al-ues for con tin uous v ariables and, th us, not applicable to the analysis of sequences of ev en ts. Ho w ev er, there are a v ari-ety of metho ds for data mining on discrete sequence data. These ha v e concen trated either on predicting future ev en ts (e.g. Mark o v and hidden Mark o v mo dels) [13, 14, 12] or in nding lo cal mo dels, i.e., patterns that describ e p ortions of sequences [1, 15, 8, 9, 11, 4, 6]. Suc h metho ds pro duce use-ful information but do not pro vide an understandable global view of the data.
 In this pap er w e consider the problem of forming a useful and understandable summary from a large set of sequences. Our basic idea is simple: describ e a set of sequences b ya single (or set of ) partial order(s) on the ev en ts o ccurring in the sequences. As an example of the metho d, see Figure 1, whic h sho ws a small set of sequences and the partial order represen ted as an acyclic directed graph that b est describ es those sequences. The fact that partial orders can be rep-resen ted as acyclic directed graphs leads to a natural and po w erful visualization mec hanism for the results of our data mining tec hnique.
 The rest of this pap er is organized as follo ws. Section 2 de nes the t yp e of data w e are analyzing, and de nes the necessary concepts ab out partial orders. Section 3 and Sec-tion 4 describ e ho w partial orders and mixtures of partial orders can be view ed as generativ e mo dels for sequences. Section 5 outlines the basic learning algorithm for nding a go o d mo del for a set of sequences, and discusses its com-plexit y . In Section 6 w eev aluate and illustrate our approac h with an analysis of studen t enrollmen t data and data from w eb logs. Finally , in Section 7, w e describ e v arious p oten tial extensions and a v en ues for future w ork.

Permission to make digital or hard copies of part or all of this work or permission and/or a fee.

KDD 2000, Boston, MA USA  X  ACM 2000 1 -58113 -233 -6/00/0 8 ...$5.00 Figure 1: A small data set and the partial order that b est describ es it. Figure 2: Example of a partial order and its transi-tiv e reduction. In this section w e pro vide de nitions of partial orders, se-quences and related terminology . W e also describ e the con-nection b et w een partial orders and acyclic directed graphs. W e sa y that M is a p artial or der for a set of events V if M is a binary relation (i.e., M is a subset of the Cartesian pro duct of V )suc h that M is re exiv e, an tisymmetric, and transitiv e. W esa ythat v i pr e c e des v j in partial order M if the pair is in the relation, i.e. ( v i ;v j ) 2 M . An y partial order can b e represen ted b y a directed acyclic graph in whic h v i is a paren tof v j (for i 6 = j )if and only if ( v i ;v j ) 2 M . This graphical represen tation for partial orders is particularly useful for displa ying results to users. Ev en more understandable form is the transitiv e reduction of a partial order and its corresp onding digraph. The tr an-sitive closur e of the binary relation N for V is the relation tc ( N ) obtained b y iterativ ely adding pairs that follo wfrom transitivit y . That is, initially let tc ( N )= N and then add pairs to tc ( N )un til no more pairs can b e added using the rule if ( v i ;v j ) 2 tc ( N )and( v j ;v k ) 2 tc ( N ) then add ( v to tc ( N ). Giv en a partial order M on V ,the tr ansitive r e duc-tion of M is the smallest relation N suc h that the transitiv e closure tc( N )of N is M . See Figure 2 for an example. Find-ing the transitiv e reduction of M can b e done iterativ ely as follo ws.
 F or our application, the data is a collection S of n sequences s ; :::;s n . Eac h sequence s i consists of m ( i ) elemen ts from an event set V . That is, s i =( v i 1 ;:::; v im ( i ) ) ; where v W e assume that no elemen t o ccurs more than once in a sequence, that is, v ij 6 = v ik for all sequences i and all indices j; k 2f 1 ; :::;m ( i ) g . Mo deling ev en ts that o ccur more than once do es not immediately t in to this framew ork. If the n um ber of o ccurrences of the same ev en t per sequence is small, one can use a unique ev en t for eac h o ccurrence (e.g., rst o ccurrence of ev en t v , second o ccurrence of ev en t v ). Alternativ ely , one can fo cus atten tion only on the initial o ccurrence of eac hev en t.
 Eac h sequence s can be view ed as a partial order o v er a subset of the ev en ts; an ev en t precedes another ev en t in the partial order only if it precedes it in the sequence. A sequence de nes a total or der b ecause for an yt w oev en ts in the sequence one m ust precede the other.
 A partial order (or sequence) s is c omp atible with a partial order M , if for all ev en ts v i ;v j 2 V it is the case that if ( v ;v j ) 2 M then ( v i ;v j ) 2 s . W e also sa y that s is an extension of M if s is compatible with M and s is a total order. F urthermore, s is a c omplete extension of M if s is an extension of M and s con tains all elemen ts of M . W ede ne a function  X  ( s; M )b y  X  ( s; M ) = 1, if s is compatible with M , otherwise  X  ( s; M )=0.
 F or a partial order M w e let t ( M ) b e the set of complete extensions of M and ( M )= j t ( M ) j be the n um ber of com-plete extensions. So if M is a total order, ( M ) = 1, and if M is a trivial partial order ( x y if and only if x = y ), then ( M )= j V j !. Finally , if M is a partial order o v er V and U V ,w e denote b y M U the partial order M restricted to the ev en tt yp es in U . If s is a sequence and M a partial order, w e write M s to denote the restriction of M to the elemen ts that o ccur in s . In this section w e describ e ho w a partial order can b e view ed as a probabilistic generativ e mo del for a sequence. W e con-sider t w o cases. First w e discuss the case where the sequence con tains all of the ev en ts in the partial order. Second, w e consider the case where the sequence do es not include all the elemen ts of the partial order. Due to computational prob-lems, w e restrict atten tion to a subset of partial orders called series-parallel partial orders. W e describ e ho w to represen t and manipulate partial orders of this t yp e.
 What do es it mean that a partial order describ es the se-quence? Clearly w ew an t the partial order to b e compatible with the sequence, i.e., w ew an t the ordering relationships bet w een the ev en ts in the partial order are also presen tin the sequence. There are t w o extremes. A t one extreme, the trivial partial order (in whic h a b is true if and only if a = b )is compatible with ev ery sequence. Ho w ev er, suc h a partial order do es not pro vide an y ordering information ab out sequences. A t the other extreme, giv en a sequence s , s itself, considered as a total order, describ es the sequence completely , but is compatible only with that sequence. If w e w an t to use a partial order to describ e a set of sequences w e need a su X cien tly general but still informativ e description. Obtaining a balance b et w een generalit y and sp eci cit y is, of course, a problem in most data mining tasks.
 As an example, supp ose the data consists of 100 sequence abcd and 100 sequences acbd . Arguably , the b est single par-tial order description of the data set is the partial order giv en in Figure 1. An y single total order can only represen t at most half of the data. On the other hand, the trivial partial order is compatible with an y set of sequences but main tains none of the ordering relationships.
 W e tradeo sp eci cit y and generalit y using a sto c hastic gen-erativ e mo del for sequences. Giv en a partial order, w esa y that it generates all total orders compatible with it with equal probabilit y . Th us, to nd the probabilit y of a se-quence giv en a partial order w eha v e to b e able to calculate ho wman y sequences that partial order can generate. That is, for a sequence s that is compatible with partial order M w eha v ethat P ( s j M )=1 = ( M ). If the sequence is not com-patible with the partial order then P ( s j M )=0. W eassume the sequences are indep enden tly and iden tically distributed. Giv en this assumption, w e can compute the probabilit yof the set of sequences S giv en the partial order M as follo ws: P ( S j M )= the searc h for the partial order that yields the highest prob-abilit y for the whole set of sequences.
 Unfortunately , the problem of coun ting the n um ber of com-patible sequences for a partial order computationally dif-cult. Ho w ev er, b y restricting our atten tion to a subset of partial orders w e can mak e the task of calculating the probabilit y tractable. W e discuss these issues in more detail belo w.
 No ww e consider the case of using a partial order to generate sequences that do not include all of the elemen ts of the par-tial order. T o handle this case w e augmen t our partial order with a set of an inclusion pr ob abilities p V =( p v ) v 2 V one probabilit y p v for eac hev en ts v 2 V with the constrain t that 0 p v 1.
 T o generate a sequence w e rst c ho ose a subset of ev en ts A V . An elemen t v 2 V is included in A with probabilit y p Next w e generate the sequence o v er A b yc ho osing uniformly among the sequences that are complete extensions of M A . Note that this mo del ( M; p V ) can only pro duce sequences s that are compatible with M . A k ey step in ev aluating a partial order in our approac h is to calculate the n um b er of complete extensions that are compatible with a partial order. Unfortunately , the prob-lem of coun ting ( M )is ] P-complete [2]. Th us, w e cannot exp ect to e X cien tly compute ( M ) exactly for an arbitrary partial order. In recen t y ears there has been a w ork on using Mark o v c hain Mon te Carlo (MCMC) tec hniques for appro ximation of suc h ] P-complete problems. With these metho ds, it is p ossible to obtain good appro ximations of ( M )in O ( m 3 log m ) where m is the n um ber of ev en ts in M [18, 3].
 In the approac h describ ed in this pap er, w e restrict atten tion Figure 3: The forbidden subgraph for series-parallel partial orders. Figure 4: Example partial order represen ted as a digraph and as a binary construction tree. to the class of series-parallel partial orders. P artial orders in this class ha v e the prop ert ythat w e can e X cien tly coun t the n um b er of compatible total orders and e X cien tly test com-patibilit y of a sequence. In addition, these partial orders can b e represen ted b y lab eled binary trees. This represen ta-tion facilitates the description and analysis of mo di cation (searc h) op erators used to searc h among mem b ers of this class. The class of series-parallel partial are de ned in terms of a class of digraphs called minimal v ertex series-parallel (MVSP) digraphs [17]. A minimal vertex series-p ar al lel digr aph is a digraph that do es not con tain the digraph sho wn in Figure 3 as an induced subgraph [17]. A partial order M on V is a series-p ar al lel p artial or der if the transitiv e reduction N of M is a MVSP , when N is view ed as a directed graph. A series-parallel partial order on V can b e represen ted as a binary construction tree, where eac hin ternal no de is lab eled with either an S for series com bination or P for parallel con-struction, and eac h of the lea v es is lab eled with an elemen t of V ; see Figure 4. In this represen tation, eac h subtree rep-resen ts a partial order o v eradisjoin tsetof ev en ts. A series com bination of t w o partial orders yields a partial order o v er the union of the t w oev en t sets with additional ordering re-lationships suc h that eac h ev en t in the rst partial order precedes eac hev en t in second partial order. A parallel com-bination of t w o partial orders yields a new ordering o v er the union of the t w o ev en t sets but no additional precedence relationships.
 Using the binary construction tree represen tation of a series-parallel partial orders w e can recursiv ely compute ( M )in time linear in the n um b er of elemen ts in the partial order. F or a partial order M let n ( M ) b e the n um ber of ev en ts, i.e. j V ( M ) j . W eha v e ( S ( M 1 ;M 2 )) = ( M 1 ) ( M 2 ); ( P ( M 1 ;M 2 )) = ( n ( M 1 )+ n ( M 2 ))! When a sequence s do es not con tain all of the ev en ts in the partial order M w e need to compute the quan tit y ( M s ). W e can use the binary construction tree for M to p erform this calculation b y making a small mo di cation to this al-gorithm: w e replace n ( M ) with n ( M; s )= j V ( M ) \ V ( s ) j . W e also need to test the compatibilit y of a sequence s with a partial order M ,i.e.  X  ( s; M ). W e again use the binary con-struction tree to facilitate this computation. In mo ving from the lea v es to the ro ot of the binary construction tree w eonly add new precedence relationships when w ecom bine partial orders with the series com bination. Th us, w e can test com-patibilit y recursiv ely ,b y main taining, for eac h subtree, the p osition in the sequence of the rst and last ev en t con tained in the subtree. When w e are at an in ternal no de mark ed as a series com bination w ec hec k that the last p osition for the left subtree precedes the rst p osition of the righ t sub-tree. This pro cedure can b e p erformed in time linear to the n um ber of ev en ts in the partial order. T o nd a go o d partial order w e need to searc h in space of series-parallel partial orders. In this section w e describ e the essen tial details of the op erator w e use for searc hing through this space. The basic op erator constructs new series-parallel partial orders b y mo difying the binary construction tree for the curren t partial order.
 The op erator w orks in t w o steps. In the rst step a leaf and its paren t are extracted from the curren t binary tree and the orphaned subtree is reattac hed to the resulting tree. In the second step the paren t-leaf pair is reinserted in to the binary tree at a (p oten tially new) insertion p oin t, c ho osing a p ossibly new side (left or righ t) for the leaf relativ etothe paren t and new t yp e (series or parallel) for the paren t. F or example, consider the binary construction tree in Fig-ure 5a. If the op erator is giv en leaf c , the rst step is to split the binary tree in to t w o trees sho wn in Figure 5b. If the op erator is giv en insertion poin t a , with side equal to righ tandt yp e series w e obtain the tree sho wn in Figure 5c. An y p ossible series-parallel partial order can b e obtained b y sequen tial application of this op erator.
 T oen umerate all p oten tial mo di cations of a giv en partial order M w e simply need apply the op erator to M for eac h p ossible leaf, insertion p oin t, side and t yp e. Since there are O ( j V j )in ternal no des in the tree represen tation of the partial order and w e are consider inserting it (and its par-en t) at ev ery no de (other than its paren t) there are at most O ( j V j 2 ) p ossible series-parallel partial orders resulting from Figure 5: Illustration of op erator applied to the bi-nary construction tree for a simple series-parallel partial order. the application of the searc h op erator to a curren t partial order. The application of this op erator to a partial order with di eren t argumen ts can lead to the iden tical resulting partial orders. It ma y b e p ossible to impro v e computational e X ciency b y eliminating this redundancy . As w eha v e describ ed in Section 3, one can view a partial order as a generativ e mo del for sequences. Ho w ev er, the use of a single partial order to mo del sequence data sets is problematic. Supp ose w e are giv en 100 sequences of abcd , 100 sequences of acbd and 5 sequences of dbca . The partial order in Figure 1 is a natural represen tation for this data, ho w ev er, it is imp ossible for this partial order to generate this data. The only partial order that could ha v e generated this data is the trivial partial order.
 W e handle this problem b y using a mixture of mo del. The mixture mo deling approac h is a standard approac h for com-bining probabilistic mo dels to obtain another probabilistic mo del [10, 16]. A mixture mo del is a w eigh ted com bination of comp onen t probabilistic mo dels where the w eigh ts sum to one. Though t of generativ ely , one rst randomly c ho oses a mixture comp onen t and then uses the comp onen t statistical mo del to generate the sequence. In tuitiv ely , the w eigh tfor a comp onen t mo del of a mixture represen ts the fraction of the p opulation that is generated b y that comp onen t. F or instance, a mixture mo del for the example describ ed ab o v e migh tcon tain t w o partial orders; one with mixture w eigh t 0.975 with the partial order as sho wn in Figure 1 and one with mixture w eigh t 0.025 with the total order d ! b ! c ! a .
 F ormally ,a mixtur emo del of p artial or ders M for a set of ev en ts V consists of the follo wing comp onen ts: Th us w e can describ e M as M =( k; ( i ) ; ( p i V ) ; ( M i )). Example 1. L et V = f a; b; c; d g and the set of se quenc es S c ontain 100 se quenc es abcd and 100 c opies of the se quenc e acbd . Mo del M 1 has two c omp onents; M 11 , a trivial p artial or der, and M 12 ,the p artial or der whose tr ansitive r e duction p onents; M 21 , the trivial p artial or der, and M 22 , having the these mixtur e mo dels ar e shown in Figur e 6. The mixtur e weights for M 2 ar ee qual and, for b oth mo dels, the inclusion pr ob abilities p v ar e1forall v 2 V . Both of these mixtur e mo dels c an gener ate the se quenc es in S . 2 Figure 6: Mixture mo dels M 1 consisting of t w o com-ponen ts M 11 and M 12 , and mo del M 2 consisting of The probabilit y of a sequence s giv en a mixture mo del of partial orders M is where f ( p V ;s ) is the probabilit y of generating con taining the ev en ts in s , i.e., As previously , assuming the indep endence of the sequences, the probabilit y of a set S of sequences, giv en a mixture mo del of partial orders, is simply the pro duct of the proba-bilities of the individual sequences: In general, w ew ould lik e to learn mixtures of partial orders from data. This means learning the n um b er of comp onen ts as w ell the parameters of the mo del, i.e. the partial order for eac h of the comp onen t mo dels, the inclusion probabilities and the mixture w eigh ts. There are standard tec hniques for c ho osing the n um b er of comp onen ts in a mixture mo del [7]. These tec hniques, as applied to our class of mixture mo dels, will b e describ ed in an extended v ersion of this pap er. F or this pap er w e restrict atten tion to a restricted class of mix-tures of partial orders in whic h the n um b er of comp onen ts is xed.
 In particular, w euseat w o-comp onen t mo del in our exp er-imen ts ob viating the need to c ho ose the n um b er of comp o-nen ts. A two-c omp onent mo del is mixture mo del where (1) the rst comp onen t is a trivial partial order, (2) the sec-ond is an unrestricted partial order, and, (3) the inclusion probabilities are iden tical for eac h comp onen t. Cho osing one of the comp onen ts to be the trivial comp onen t guar-an tees that w e will alw a ys ha v e a non-zero probabilit y of generating the set of sequences. The assumption of equal inclusion probabilities simpli es the computations and fo-cuses computation on obtaining ordering information rather than inclusion rates. Suc ha t w o-comp onen t mo del can b e sp eci ed as M = ( M; ; p V ), where M is the non-trivial partial order, is the mixture w eigh t for M ,and p V is the v ector of inclusion probabilities. The mixture w eigh t for the trivial partial mo del is 1 .
 At w o-comp onen t mo del consists of three parts: the partial order, the mixture w eigh t, and the inclusion probabilities. F ortunately , most of the learning e ort can concen trate on nding the b est partial order. Namely , the b est inclusion probabilities can b e estimated directly from the sequences, and, th us, the searc h algorithm can ignore these inclusion probabilities. Giv en a partial order M ,w e can nd the op-timal mixture w eigh t that maximizes the lik eliho o d of the data giv enat w o-comp onen t mo del of the form ( M; ; p in a small n um ber of sw eeps through the data using the ex-p ectation maximization (EM) algorithm [5]. In the more general case in whic h inclusion probabilities are not equal for eac h of the comp onen ts they m ust b e up dated using the EM algorithm.

Example 2. (Continuing the Example 1) Note that b oth of the mo dels ar e two-c omp onent mo dels. The maximum likeliho o d estimate for for mo del M 1 and data S is 11 = 12 . Thus, the sc or e for M 1 , i.e. the pr ob ability of S given mo del F or mo del M 2 , the maximum likeliho o d estimate for = 23 = 48 , and we get Thus, using the metho d we have describ e d, we cho ose M 1 over M 2 sinc e P ( S jM 1 ) &gt;P ( S jM 2 ) . 2 A naiv ew a y to approac h the problem nding go o d partial orders w ould b e to lo ok at eac h pair of ev en ts individually , i.e., to in v estigate, for eac hpair ( a; b )of ev en ts, the n um ber of times a precedes b and vice v ersa. Based on this, w e migh t mak e a decision of whether a precedes b in the partial order or not. Ho w ev er, this metho d is not directly applicable, as the lo cal views of the data obtained b y lo oking only at t w o ev en ts at a time can b e inconsisten t. Supp ose for example that our data consists of 100 sequences ab , 100 sequences bc , and 100 sequences ca . Lo oking at eac hpairof ev en ts w e ha v e clear evidence that a should precede b whic h should precede c whic h should precede a . Ho w ev er, these three conditions com bined will lead to a cycle and not a partial order. Th us it is necessary for us to dev elop metho ds that aim to disco v er the partial order in a more global w a y . The learning algorithm w e adopt is a greedy searc ho v er par-tial orders o v er the set of p ossible ev en ts. Starting from a trivial partial order, w e rep eatedly apply mo di cation op er-ators to the curren t b est mo del and accept the mo di cation that giv es the b est increase in the lik eliho o d. When the lik e-liho o d do es not increase su X cien tly the searc h terminates. F or example, supp ose that our data consists of 100 sequences abc and 100 sequences of bac . The mo di cation op erator ap-plied to the initial trivial partial order w ould yield all of the p ossible pairwise orderings. The a precedes c partial order and the b precedes c partial order w ould yield the highest lik eliho o d and w ew ould c ho ose one of these orders, sa y a precedes c . In the second iteration w ew ould add the other precedence relation, b precedes c . No additional mo di ca-tions to the partial order w ould increase the lik eliho o d so the algorithm w ould terminate.
 The metho d can b e describ ed as follo ws: estimate the b est p V ; M = trivial partial order on V ; =0 : 5; while lik eliho o d increases do od ; In the remainder of this section w e describ e the computa-tional complexit y of this algorithm in practice.
 Recall that b y restriction atten tion to series-parallel par-tial orders w e can compute ( M ) in O ( m ) time and that the n um ber of alternativ es generated b y the searc h op er-ators is b ounded b y O ( m 2 ). The score for a mo del also dep ends up on the mixture w eigh ts and whether or not eac h sequence is compatible with partial order. The mixture w eigh ts are determined b y the EM algorithm whic h iterates through the collection of n sequences. W eha v e found that a b ounded n um b er of iterations through the sequences suf-ces to determine . W e can determine whether a sequence is compatible with a partial order in O ( m ) time. Finally , the run-time of this algorithm is, in part, determined b yin-put data. That is, the n um b er of iterations in whic h there will b e impro v emen t in the lik eliho o d is determined b y the n um ber of precedence relationships that are indicated b y the data. In our limited exp erience w eha v e found that the Figure 8: The partial order obtained from analyzing w eb data. n um b er of iterations is t ypically less than the total n um ber of ev en ts j V j . Clearly j V j is at least as large as m . Com bin-ing all of these observ ations w e nd that the algorithm has appro ximate computational complexit y of the algorithm is O ( n j V j 4 ). Our exp erience coincides with this analysis, that is, the metho d as describ ed do es not scale w ell as the n um-b er of distinct ev en ts gro ws. In addition, as the n um ber of distinct ev en ts gro ws, it b ecomes more di X cult to visualize the results of the algorithm. F ortunately , the algorithm is linear in the n um b er of sequences of the input, and indeed scales v ery nicely with increasing input size. W e ha v e applied the metho d describ ed ab o v etot w o real-life data sets. The rst data set describ es the order in whic h ab out 3000 studen ts of the computer science departmen t of the Univ ersit y of Helsinki ha v e tak en computer science courses. Using the algorithm, w e get the result sho wn in Fig-ure 7. The resulting partial order corresp onds quite nicely with the suggested ordering of courses. The only di erence is that the data structures course is supp osed to be tak en b efore the course on theory of computation. In the partial order disco v ered from the data this ordering restriction is not presen t. In terestingly , the addition of this edge to the graph mak es the graph fail to b e a series-parallel partial or-der. This suggests the need to explore the unrestricted space of partial orders p erhaps after iden tifying a go o d initial par-tial order using the series-parallel partial orders. Ov erall, w e see that our metho d is able to nd the structure of the curriculum directly from the data.
 As another example, Figure 8 sho ws a partial order obtained b y analyzing ab out 1000 w eb logs from users of certain w eb sites. In these sequences the same ev en t (page) can o ccur sev eral times: w eha v e remo v ed ev ery o ccurrence except the rst one. The result is natural; w e see, for instance, that users go rst to their p ersonal home page b efore mo ving to the page that mak es it p ossible to mo dify that page. W eha v e presen ted a metho d for disco v ering partial orders from sequences of ev en ts. The metho d is based on view-ing a partial order as a generativ e mo del for sequences, and describing a set of sequences b y means of a mixture mo del of partial orders. The lik eliho o d of a giv en partial order pro ducing a sequence compatible with it is in v ersely pro-p ortional to the n um b er of total orders compatible with the partial order. By optimizing the lik eliho o d of the data, the metho d tries to nd a set of partial orders that are sp eci c enough to capture signi can t ordering information con tained in the data.
 Because of the computational di X cult y in computing the n um b er of total extensions of a partial order, w e restricted the pro cedure to series-parallel partial orders, for whic hthe n um b er of extensions can b e computed e X cien tly . W ega v e a searc h op erator that is su X cien t for obtaining an y series-parallel partial order in a linear n um ber of steps, and de-scrib ed a greedy approac h to searc hing for the mixture mo del with the b est p ossible lik eliho o d.
 Empirical results on real data sho w that the metho d pro-duces useful and in tuitiv e results. F or example, applying the algorithm to studen t enrollmen t data closely reconstructs the structure of the curriculum from the sequences of course enrollmen ts. Also for w eb usage data the metho d yields in-teresting results. The metho d is linear in the size of the data, but tak es O ( p 4 )for p di eren tt yp es of ev en ts. There are sev eral p ossible extensions to this w ork. In this pap er, w e consider only uniform priors o v er partial orders. It is natural to in v estigate classes of informativ e priors that lead to tractable algorithms for nding partial orders. Restricting the searc h to series-parallel partial orders can reduce the computational burden of coun ting the n um ber of extension compatible with a giv en partial order. Ho w-ev er, this gain comes at the exp ense of mo deling exibilit y . One simple idea is to use the results of a searc ho v er series-parallel partial orders as an initialization to a searc h o v er unrestricted partial orders. F urther in v estigation is needed. W e can augmen t the graphical presen tation of the partial orders with information ab out the imp ortance of eac h of the edges in the resulting partial order. F or instance, one can use line thic kness of and edge b et w een t w o ev en ts for a giv en partial order to represen t the fraction of sequences (compatible with the partial order) in whic h both ev en ts o ccur.
 W e describ ed the metho d in the con text of nding a t w o-comp onen t mo del, i.e., a mo del whic h has only one non triv-ial partial order. As men tioned, the metho d applies equally w ell to mixtures with an arbitrary n um b er of comp onen ts. When lo oking at sev eral non trivial partial orders at the same time the in teresting question is ho w to nd di erences b e-t w een the partial orders. Simple user in terface ideas also w ork here. F or instance, one can for example highligh t the di erences using di eren tt yp es of lines. A signi can t restriction in the ab o v e metho d is that it ap-plies only to data where eac ht yp e of ev en t o ccurs at most once. An in teresting op en problem is to nd useful and in-terpretable generativ e mo dels for arbitrary sequences, and testing ho w mixture mo dels can b e applied in this setting. [1] R. Agra w al and R. Srik an t. Mining sequen tial [2] G. Brigh t w ell and P . Winkler. Coun ting linear [3] R. Bubley and M. Dy er. F aster random generation of [4] G. Das, K.-I. Lin, H. Mannila, G. Renganathan, and [5] A. Dempster, N. Laird, and D. Rubin. Maxim um [6] C. F aloutsos, M. Ranganathan, and Y. Manolop oulos. [7] C. F raley and A. Raftery .Ho wman y clusters? Whic h [8] H. Mannila, H. T oiv onen, and A. I. V erk amo.
 [9] H. Mannila, H. T oiv onen, and A. I. V erk amo.
 [10] G. McLac hlan and K. Basford. Mixtur eMo dels: [11] T. Oates and P . R. Cohen. Searc hing for structure in [12] L. Rabiner, C. Lee, B. Juang, and L. Wilp on. Hmm [13] P .Sm yth. Clustering sequences using hidden Mark o v [14] P .Sm yth. Probabilistic mo del-based clustering of [15] R. Srik an t and R. Agra w al. Mining sequen tial [16] D. Titterington, A. Smith, and U. Mak o v. Statistic al [17] J. V aldes, R. E. T arjan, and E. L. La wler. The [18] D. Wilson. Mixing times of lozenge tiling and card
