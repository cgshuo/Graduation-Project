 1. Introduction
In today X  X  networked environment, people demand new evolutionary technology for information re-trieval and intellectual exchange. DLs serve as an increasingly important channel to a vast array of information sources and services. They provide new opportunities to assemble, organize, and access large volumes of information from multiple repositories, while making distributed heterogeneous resources spread across the network appear to beasingleuniform federated source (Schatz&amp; Chen, 1999). Under the assistance of DL systems, users can move from source to source, seeking and linking information auto-matically or semi-automatically to solve their various information problems.

Traditionally, when people retrieve information, their activities are classified into two broad categories: searching and browsing . Searching implies that the user knows exactly what to look for, while browsing should assist users navigating among correlated searchable terms to look for something new or interesting. Currently, most of the major work on DL systems focus on supporting these two kinds of activities.
However, with more DLs built up to handle users X  information requests, we ask questions: Are the existing features missing from the current DL systems? To answer these questions, let us first look at a scenario on the use of a DL system.

Kooper works in a city plan and management office. He is investigating the precaution policy against flood this year. If there will be a flood in the coming summer, necessary actions (e.g., strengthening the embankment, resource allocation, etc.) must be taken now to prevent the city from sustaining losses.
According to Kooper X  X  previous experience, it seems that A wet-winter might cause flood in summer .To confirm this pre-conceived hypothesis, he rewords a DL system to request information talking about the reasons of flood. The DL system returns a number of articles. He browses through the returned article list he accesses the DL again to ask for documents reporting river floods in the city before. From the articles the city. He then navigates to the meteorological repository of the DL, and accesses the weather infor-mation of the city during the winter time of these three years. He notes a tight correlation between wet-winter and summer-flood .Basedontheinformationobtainedfrom theDL,Kooperisprettysurenowabout his prior flood prediction assumption for the city. He logs off the system. Having experienced a very wet-winter this year, Kooper decides to draw up a city flood precaution plan immediately.
This scenario shows us a few shortcomings that exist in current DLs. Below we outline some of the problems and propose our work to solve them. 1.1. Inadequate strategic level cognition support
The aim of DL systems is to empower users to find useful information to solve their problems. When a person goes into a library to look for something, she/he usually has certain purposes in mind. For example, is precise and clear. Sometimes, the user wishes to explore the available resources first before exploiting them. This exploration may be targeted at refining a prior understanding of a certain information context, or formulating a further concrete requirement for specific documents. Most efforts of the current DL systems aim to support these two kinds of users X  activities, namely, searching and browsing.
However, besides simply entertaining users with documents located by searching and browsing, DL systems also should consider supporting human X  X  strategic level cognitive work which can directly enable correct actions and problem solving. Typically, users have already some prior domain-specific knowledge or pre-conceived hypotheses. They may expect the library systems to confirm/deny their existing concepts, or to check whether there is some exceptional/contradictory evidence against pre-existing notions, or to provide some predictive information so that users can take effective actions. Under this circumstance, the users X  information needs are not only for relevant documents, but also for intelligent answers to their scenario.Todistinguishthiskind ofinformation need from traditionalsearchingandbrowsingrequests,we and the latter into strategic level cognition act.

As Checkland and Holwell (1998) says, The nature of an information system is to provide informational support to people as they carry out their intentional tasks .Developingoneofthemostcomplexandadvanced forms of information systems, DL system designers must have a comprehensive understanding of users X  information needs and their purposes for using DLs. In the above example, if the DL system could automate user X  X  rational exploration from the knowledge space, consisting of propositions and assertions, will be greatly enforced. Unfortunately, such high-order cognition support and its impact on users X  work have not received much exploration in current DL systems. 1.2. Inadequate knowledge sharing facilities
Traditional libraries are a public place where a large extent of mutual learning, knowledge sharing, and exchange can happen. A user may ask a librarian for search assistance. Librarians themselves may col-laborate in the process of managing, organizing, and disseminating information, or share experiences in using consistently-emerging new systems and tools to tackle users X  search questions. Users may commu-nicate and learn from each other by observing how others use library X  X  resources, or by asking for help.
With paper sources digitalized and physical libraries moving to virtual DLs, these valuable features of archival systems. To be successful, DLs must become a knowledge place where knowledge acquisition, sharing, and propagation take place. For example, if the DL in the above scenario could make readily available expertise and answers to strategic level questions, which might require time-consuming search or consultation with experts, it can help users to better exploit the DL and improve working effectiveness.
Also, as computerized knowledge does not deteriorate with time as that human knowledge does, for long-term retention, DLs offer ideal repositories for the knowledge in the world, and make it universally reference. 1.3. Our work
We propose a two-layered DL functional model to support both tactical level and strategic level cog-nitive tasks of users according to their information needs. The model moves beyond simple searching and browsing across multiple correlated repositories, to acquisition of knowledge. On the basis of the proposed functionalmodel,wefurtherdividetheDLinformationspaceintotwosubspaces,i.e.,a knowledge subspace and a document subspace . Documents in the document subspace serve as the justification for the corre-sponding knowledge in the knowledge subspace. We give a detailed description of the DL knowledge subspace, aswellasqueryfacilitiesagainstsuchenhancedDLs.Furtherissuesregardingtheconstructionof the knowledge subspace and its linkage with the document subspace also are addressed in the paper.
The remainder of the paper is organized as follows. In Section 2, we review some closely related work. A two-layered DL model, consisting of a tactical cognition support layer and a strategic cognition support layer , is presented in Section 3. A formal description of the DL knowledge subspace and query facilities against the enhanced DLs are presented in Section 4 and Section 5, respectively. Two mechanisms for the construction of a DL X  X  knowledge subspace and its linkage to the document subspace are described in Section 6. One of them is based on the manual input from experienced users. Another approach addresses (semi-)automatic knowledge acquisition by correlating and analyzing data sources from multiple repositories in DLs. Section 7 discusses the fundamental differences between such an enhanced DL system and traditional knowledge-based information systems. A number of issues are meanwhile pointed out for future work. 2. Related work
DLs integrate a variety of information technologies, calling for multi-disciplinary cooperation in ontologies and lexical relations, knowledge representation, information retrieval, and multi-source inte-gration in DLs. 2.1. Ontologies and lexical relations word ontology refers to a systematic description of a minimal set of concepts that a language needs to expressallitsotherconcepts(Hoppenbrouwers,1997).Inlinguisticandlexicographic contexts, anontology among the concepts as expressed by or embodied in words in natural languages, the theory of lexical relations was developed (Kiefer, 1969), where information is represented as a collection of nodes connected by labeled arcs that express links or relationships between the nodes. These links may represent semantic and syntactic relationships among concepts, and can be used to reflect not only major aspects of word a labeled arc or a proposition node (Cercone &amp; McCalla, 1987; Findler, 1979; Brachman, Ciccarelli,
Greenfeld, &amp; Yonke, 1978). Further, a methodology for identifying, evaluating, and describing different relationships, along with their logical properties in modeling human reasoning, was presented (Markowitz to express the link in question. Then it discovers how this link appears in anthropology, linguistics, phi-losophy, and psychology, and the way it interacts with other links and the way it is used in conceptual information processing. A hierarchy of lexical X  X emantic relations is thus constructed which contains both the lexical relations so far identified can be extracted automatically from dictionary definitions (Nutter et al., 1990). CYC (Lenat, 1995) aims to build a common sense knowledge base consisting of roughly 100,000general concepts spanning all aspects of human reality. WordNet is another remarkable and widely used lexicon, which groups the words together by means of synonym sets. It aims to provide an aid to
Miller, 1993). 2.2. Knowledge representation
Knowledge is an important element of any AI application. A number of knowledge representation schemas are designed in the AI field so that the knowledge can be applied in the reasoning process to solve problems. These techniques can be roughly categorized as either declarative methods , in which most of the manipulating them; or procedural methods , in which the bulk of the knowledge is represented as procedures for using it (Anderson, 1992; Garnham, 1988; Rich, 1983). Typical declarative methods include predicate logic, semantic nets, frames, and scripts. (1) Predicate logic involves using standard forms of logical symbolism to represent real-world facts as statements, written as well-formed formulae, which are made up of predicates, constant terms, variables, logical connectives, and quantifiers. (2) Semantic nets take the complex structure of the world into consideration, where information is represented as a set of nodes connected to each other by a set of labeled arcs, representing relationships among the nodes (Minsky, 1968a, 1968b). Both (3) frames and (4) scripts serve as general-purpose knowledge structures that represent some common features of things or sequence of events in a particular context. Some procedural knowledge representation methods include procedures and production rules.

In our study, we explore the use of predicate logic and semantic network mechanisms to represent hypotheses and their inter-relationships in the DL knowledge subspace. 2.3. Information retrieval
To support efficient information searching and browsing activities, many efforts have been made in developing retrieval models, building document and index spaces, or extending and refining queries for Baeza-Yates, 1992). A three-dimensional model of information exploration is presented in Waterworth and
Chignell (1991), with the attempt to clarify the respective roles of the human and the system in browsing and information retrieval, and to characterize alternative interaction styles to maximize retrieval effec-tiveness. In Dunlop and van Rijsbergen (1993), index terms are automatically extracted from documents and a vector X  X pace paradigm is exploited to measure the matching degrees between queries and documents.
Indexes andmetadata also can becreated manually, from whichsemanticrelationshipsare captured(Beard &amp; Sharma, 1997; Dao, 1998). Besides, the large collection of documents can be semantically partitioned query recall and precision, several query expansion and refinement techniques based on relational lexicons/ thesauri or relevance feedback have been explored (Efthimiadis, 1993; Jones et al., 1995; V elez, Weiss, information retrieval systems, aiming to improve the intellectual access to information sources on an en-riched contextual platform. Beaulieu and Jones (1998) investigate the interface design issues for a highly interactive information retrieval system based on a probabilistic retrieval model with relevance feedback. large-scale information retrieval systems, and for implementing those functions in an operational envi-ronment. Furthermore, Chen (1992) outlines a theoretical framework for understanding the information shows how human agents are involved in the retrieval processes, the types of knowledge these agents possess, and the observed characteristics of their indexing and searching behaviors. A recent work incor-porates knowledge about the document structures into information retrieval, and the presented query 2000). Individual differences in using information retrieval systems also have been extensively studied in
Borgman (1987), McKnight, Dillon, and Richardson (1989), Belkin, Borgman, and Dumais (1994), Spink and Saracevic (1998) and Dumais (1999). 2.4. Multi-source integration in DLs The emerging field of DLs brings together participants from many existing research areas (Fox &amp; Marchionini,1998,2001).Fromadatabaseorinformationretrieval perspective, DLsmaybeseenasaform offederateddatabases,sinceaDLusuallycontainslotsofdistributedandheterogeneousrepositorieswhich may be autonomously managed by different organizations. To facilitate users X  easy access to diverse sources, many efforts have been engaged in handling various structural and semantics variations and providing users with a coherent view of a massive amount of information. Currently, the interoperability problem has sparked vigorous discussions in the DL community (Chen, 1999; Paepcke, Chang, Garcia-1999; Schatz et al., 1999). The concept extraction, mapping, and switching techniques, developed in Ben-nett, He, Chang, and Schatz (1999), Mead and Gay (1995), Chen, Smith, and Ng (1997), enable users in a certain areato easilysearch thespecialized terminology of anotherarea. A dynamicmediatorinfrastructure (Melnik, Garcia-Molina, &amp; Paepcke, 2000) allows mediators to be composed from a set of modules, each implementing a particular mediation function, such as protocol translation, query translation, or result object and repository architecture FEDORA, which can support the aggregation of mixed distributed data into complex objects, and associate multiple content disseminations with these objects. Kahn and Wilensky (1995), Paepcke et al. (1996) and Paepcke and Hassan (1996) employ the distributed object technology to cope with interoperabilityamong heterogeneous resources. According to topic areas, adistributed semantic framework is proposed to contextualize the entire collection of documents in a DL for efficient large-scale searching (Papazoglou &amp; Hoppenbrouwers, 1999). Experiences in designing and implementing DLs, including the archival repository architecture, user interface, cross-access mechanism, and intellectual property protection, etc., are substantially presented in Bates (2002); Hoppenbrouwers and Paijmans (2000); Crespo and Garcia-Molina (2000); Cooper, Crespo, and Garcia-Molina (2000); House, Butler,
Ogle, and Schiff (1996); House (1995); Phelps and Wilensky (1997); Beard and Sharma (1997); Buttenfield and Larsen (1997). Recommendations for DL evaluation from both a longitudinal and multifaceted viewpoint are provided in Marchionini (2000) and Kantor (1998).

On the other hand, applying AI to library science, many library-oriented expert systems have been developed (Lancaster &amp; Sandore, 1997; Lancaster &amp; Smith, 1990). However, most of these systems development, disaster planning and response, database searching, document delivery, etc. (Lancaster &amp; paper, whose intention is to answer library users X  strategic questions. 3. A two-layered DL function model Supportingusers X  X nformationsearchingandbrowsinghasbeenthefocusofDLresearchforalongtime.
However, as social humans, their information expectations for a DL are more than pure searching and browsing. In this section, we extend the traditional role of DLs from information provider to information and knowledge provider . Fig. 1 illustrates a two-layered DL functional model, consisting of a tactical cognition support layer and a strategic cognition support layer . 3.1. Tactical level vs. strategic level cognition support 3.1.1. Tactical level cognition support
We view traditional DL searching and browsing as tactical level cognitive acts. The target of searching is towards certain specific documents. One searching example is  X  X  X ook for the article written by John Brown in the proceedings of VLDB88 X  X . As the user X  X  request can be precisely stated beforehand, identifying the indexes of repositories can support this kind of searching activities. In comparison to searching whose objective is well-defined, browsing aims to provide users with a conceptual map, so that users can navigate among correlated items to hopefully find some potentially useful documents, or to formulate a more precise plan in a certain region. She/he wants to know the possible influence on ecological balance. By following browsing, DLs must integrate diverse repositories to provide users with a uniform searching and retrieval interface to a coherent collection of materials. The capability that enables navigation among a network of inter-related concepts, plus the searching capability on each individual repository, constitute the funda-mental support to browsing activities.

As the techniques of searching and browsing have been extensively studied and published in the liter-ature, we will not discuss these any further here. 3.1.2. Strategic level cognition support
In contrast to tactical level cognition support which intends to provide users with requested documents, strategic level cognition support not only provides relevant documents but also intelligently answers high-order cognitive questions, and meanwhile provides justifications and evidences. Taking the scenario in
Section 1 as an example, the purpose of Kooper on the use of the DL is to confirm his prior knowledge summer-flood , cause , etc., the user would prefer to pose a direct question Q confirmed/denied answer from the DL system rather than a list of articles lacking explanatory semantics and waiting for his assessment.

Q : X  X  Tell me whether a wet-winter will cause summer-flood  X  X .

Q : X  X  Tell me what will possibly cause summer-flood. Give me referent articles that talk about this  X  X .
Q : X  X  Give me articles which state the necessary influences of wet winter  X  X .

In response to different questions as described above, it is desirable for DLs to provide knowledge-level answers, together with the justifications for these answers. For example, the justification for Q articles talking about wet-winter causes flood in summer , as well as evidence articles which talk about, respectively, wet-winter in certain years and summer-flood in the next years in certain particular regions.
The provision of strategic level cognition support adds values to DLs beyond simply providing docu-mentaccess. Itreinforcesthe explorationandutilization ofinformation in DLs, andadvocates amore close and powerful interaction between users and DL systems. With this high-order cognitive assistance, DL DLs, to realize such a strategic level cognition function, substantial information analysis and abstraction need to be done. This inevitably involves the navigation and correlation of information items across multiple repositories in DLs, and production of intelligent knowledge in answering users X  strategic ques-tions. 3.2. An enlarged DL information space
In order to support the two kinds of cognitive acts, we further divide the DL information space into two we only illustrate the organization of documents for knowledge justification purpose. Documents in a DL are in fact also indexed and clustered based on the ontology and specific topics. 3.2.1. The knowledge subspace
The basic constituent of the knowledge subspace is knowledge, such as hypothesis, rule, belief, etc.
Each hypothesis describes a certain relationship among a set of concepts. For example, the hypothesis  X  X  H summer-flood it has. Considering that the DL knowledge subspace is for users to retrieve strategical level knowledge, it will inevitably be subject to the classical information retrieval X  X  vocabulary (synonymy and polysemy) problem. Previous research (Bates, 1986; Chen, Lynch, Basu, &amp; Ng, 1993) demonstrated that different users tend to use different terms to seek identical information. Furnas, Landauer, Gomex, and
Dumais (1987) showed that the probability of two people using the same term to classify an object was less than 20%. To enable knowledge exchange and reusability, we formulate various relationships including user X  X hypothesisintoanetworkofrelatedhypotheses.Forexample,amoregeneralhypothesiswithrespect knowledge subspace. A query language against the enhanced DLs is provided in Section 5. 3.2.2. The document subspace
Under each hypothesis is a justification set, giving reasons and evidences for the knowledge. These justifications, made up of articles, reports, etc., constitute the document subspace of the DL information space. Taking the above hypothesis H 2 for example, the articles mentioning exactly that wet-winter is an questions Q 1 ,Q 2 , and Q 3 , the DL system can provide not only intelligent answers according to the hypothesis, but also a series of links to the justifying articles for users X  reference.
It is worth notice here that the document subspace challenges traditional DLs on literature organization, schema, which is mainly used for information searching and browsing purposes, to knowledge -based index schema,inorderthattheinformationinDLscanbeeasilyretrieved bybothkeywordsandknowledge.Two mechanisms for constructing the knowledge subspace and its linkage with the document subspace are described in Section 6. 4. A formal description of DL knowledge subspace
Inthis section, wedefinethebasicconstituent oftheDLknowledge subspace-hypothesis ,starting withits two constructional elements, i.e., concept terms and relation terms . Different concept-term-based and the equivalence , specification/generalization , and opposition relationships of hypotheses. Throughout the discussion, we assume the following notation is used.  X  A finite set of entity concepts EConcept  X f e 1 ; e 2 ; ... ; e  X  A finite set of relation concepts RConcept  X f r 1 ; r 2  X  A finite set of concepts Concept , where Concept  X  EConcept [ RConcept .  X  A finite set of contextual attributes Att  X f a 1 ; a 2 ; ... ; a
The domain of a i 2 Att is denoted as Dom  X  a i  X  .  X  A finite set of concept terms CTerm  X f n 1 ; n 2 ; ... ; n  X  A finite set of relation terms RTerm  X f m 1 ; m 2 ; ... ; m  X  A finite set of hypotheses Hypo  X f H 1 ; H 2 ; ... ; H w 4.1. Concepts
Concepts represent real-world entities, relations, states, and events. Here, we classify concepts into two categories, i.e., entity concepts and relation concepts , according to the roles they play in representing knowledge, which will be addressed in this section. Entity concepts are used to describe concept terms, includingattributes.Theyaresimilartoentities inclassicalEntity-Relationship (ER)diagrams. Someentity are mainly for presenting various relationships among concept terms. They thus look like relationships in
ER diagrams. For example, the causal relation between a wet-winter in the north and a consequence summer-flood in the south can be expressed with the relation concept cause .

Concepts are the building blocks of a sentence. They convey the most fundamental cognitive knowledge in human society. Based on the substantial work on lexicography and ontology (Sowa, 1984; Kiefer, 1969; denoted using a binary predicate. For example, Is-A ( summer-flood , river-behavior ) represents the notion with respect to cause .

Property 1. The three primitive relationships of concepts (which can be either entity concepts or relation sitive, and symmetric. (3) Opposite is symmetric. 4.2. Concept terms
Observing that real-world users X  investigation and understanding of concepts are usually under certain specific contexts, in this study, we associate each entity concept with a conceptual context to denote the circumstance under which the entity concept is considered. Basically, we can declare a conceptual context butes could be of any kind as long as they are meaningful and make commitment to the existence of entity concepts. For example, the context for the entity concepts wet-winter and summer-flood could be con-of wet-winter and summer-flood . The context of an entity concept can be further instantiated by assigning concretevalues toits constructionalattributes.Forexample,wecanrestrictthecontextual Region and Year  X  X  west  X  X ) to contextual attribute Region .

In this paper, we view an entity concept and its associated context as an integral unit, where the context spans the universe of discourse for that entity concept. To distinguish it from the traditional notion of entity concept, we name it as a concept term .
 Definition 1. A concept term n 2 CTerm is of the form n  X  e j f a :  X  V a j X  a 2 Att  X ^ X  V a Dom  X  a  X  X g .
 eration. The default setting for attribute a i (where a i domain of a i , i.e., a i :  X  Dom  X  a i  X  . AV  X f a 1 :  X  Dom  X  a universe context, covering all possible values for every constructional attribute. A simple and equivalent representation of a universe context is AV  X  .

Example 1. Suppose the context under consideration is comprised of two attributes Region and Year . including  X  X  X orth X  X ,  X  X  X outh X  X ,  X  X  X est X  X , and  X  X  X ast X  X . The Context in wet -winter j spans the universe of discourse, equivalent to the expression wet -winter j according to Definition 1.
Different relationships of concept terms can be identified based on their entity concepts and associated contexts. Before giving the formal definitions, we first define three relationships between two conceptual contexts.
Definition 2. Let AV 1 and AV 2 be two instantiated contexts.  X  AV 1 6 a AV 2  X  or AV 2 P a AV 1  X  ,iff 8 X  a :  X  V 2  X 2 AV  X  AV 1  X  a AV 2 ,iff AV 1 , 6 a AV 2 and AV 2 6 a AV 1 ;  X  AV 1 &lt; a AV 2  X  or AV 2 &gt; a AV 1  X  ,iff  X  AV 1 6 a
According to Definition 1, for any instantiated context AV , we have AV 6
The  X  a relationshipbetween twoinstantiatedcontexts AV 1 and AV the same contextual attributes with the same attribute values. AV scope of AV 2 which embodies the contextual scope of AV 1 Example 2. Assume we have four instantiated contexts: AV 1  X  , AV 2  X f Year :  X f \ 1999 " ; \ 2000 " ; \ 2001 " gg , AV 3  X f Region :  X f \ north " g ; Year :  X f \ 2000 " gg , and AV 4  X f Region :  X f \ south " g ; Year :  X f \ 2000 " gg .
 Following Definition 2,
AV 2 &lt; a AV 1 , AV 3 &lt; a AV 1 , AV 4 &lt; a AV 1 , AV
Property 2. The four context-based relationships defined above have the following properties: (1) 6 a (or P a ) is reflexive and transitive. (2)  X  a is reflexive, transitive, and symmetric. (3) &lt; a (or &gt; a ) is transitive.

Based on the primitive relationships of concepts (Is-A, Synonym, Opposite), as well as their contexts  X  6 a ;  X  a ;&lt; a  X  , we declare the following three concept-term-based relationships, i.e., equivalence EQ specification SPEC ct , and opposition OPSI ct . Assume n the following definitions, where n 1 , n 2 2 CTerm .

Definition 3 (Equivalence EQ ct  X  n 1 ; n 2  X  ). n 1 is equivalent to n  X  e  X  e 2  X _ Synonym  X  e 1 ; e 2  X  ; (2)  X  AV 1  X  a AV 2  X  .

Example 3. Given two concept terms: n 1  X  wet -winter j and n
EQ ct  X  n 1 ; n 2  X  since Synonym  X  wet -winter ; high -rainfall -winter  X  .

Definition 4 (Specification SPEC ct  X  n 1 ; n 2  X  ). n 1 is a specification of n n ),iffthefollowingtwoconditionshold:(1)  X  e 1  X  e 2  X _ Is A  X  e
Example 4. Given three concept terms: n 1  X  wet -winter j j :  X f \ 2000 " gg &lt; a ,and Is -A  X  wet -winter ; winter  X  .

Definition 5 (Opposition OPSI ct  X  n 1 ; n 2  X  ). n 1 is opposite to n Opposite  X  e 1 ; e 2  X  ; (2)  X  AV 1  X  a AV 2  X  .
 have OPSI ct  X  n 1 ; n 2  X  since Opposite  X  wet -winter ; dry -winter  X  .

To facilitate the description of hypothesis-based inter-relationships in Section 4.4, we further extend the (i.e., EQ CT , SPEC CT ,and OPSI CT ) over a pair of concept term sets. Let N where N 1 , N 2 CTerm .

Definition 6 (Equivalence EQ CT  X  N 1 ; N 2  X  ). N 1 is equivalent to N
N 9 n 1 2 N 1 EQ ct  X  n 2 ; n 1  X  .

Definition 7 (Specification SPEC CT  X  N 1 ; N 2  X  ). N 1 is specification of N
Definition 8 (Opposition OPSI CT  X  N 1 ; N 2  X  ). N 1 is opposite to N
N 9 n 1 2 N 1 OPSI ct  X  n 2 ; n 1  X  .

As long as there exists a pair of opposite concept terms in the two concept term sets, we declare they are opposite.
 Property 3. The three relationships ( EQ CT , SPEC CT , and OPSl (1) EQ CT is reflexive, transitive, and symmetric. (2) SPEC metric. 4.3. Relation terms
A conceptual relation explicates a certain correlation among a set of conceptual terms. Unlike entity logic (Chellas, 1980) to our conceptual relation study. Modal logic, as mentioned in the Stanford Ency-clopedia of philosophy (Garson, 2001), is, strictly speaking, the study of deductive behavior of the symbol or } , we can achieve different levels of ascertainability regarding relation r . For example, cause implies a definite causal relation, while } cause implies a possible cause relation. omitted representing an empty modal.
 and } .
 The three relation-term-based relationships can be defined using the same names (i.e., EQ , SPEC , and
Definition 11 (Equivalence EQ rt  X  d 1 r 1 ; d 2 r 2  X  ). d (1)  X  r 1  X  r 2  X _ Synonym  X  r 1 ; r 2  X  and (2)  X  d 1  X  d
Definition 12 (Specification SPEC rt  X  d 1 r 1 ; d 2 r 2  X  ). d ization of d 1 r 1 ), iff the following two conditions hold: (1)  X  r  X  d  X  d 2  X _ X  d 1 &lt; d 2  X  .

Definition 13 (Opposition OPSI rt  X  d 1 r 1 ; d 1 r 2  X  ). d (1) Opposite  X  r 1 ; r 2  X  and (2)  X  d 1  X  d 2 6  X  \ } "  X  .

Example 6. EQ rt  X } cause ; } lead -to  X  , SPEC rt  X  cause ; } cause  X  , SPEC elate  X  .

The three relation-term-based relationships defined above have the same properties as their corre-sponding concept-term-based relationships. 4.4. Hypotheses
A hypothesis communicates a human X  X  cognitive idea or thinking about things in existence, such as the causal connection of situations, the sequential occurrence of events, etc. Here, we view each piece of hypothesis as a conceptual relation (situated at the intermediate of Fig. 3) which correlates a set of input concept terms to a set of output concept terms. For example, the hypothesis  X  X  wet-winter in the north causes summer-flood in the south and hot summer in the east  X  X  causally relates concept term Definition 14. A hypothesis H 2 Hypo is of the form H  X  d r  X  I O N CTerm . A hypothesis H also can be pictorially denoted as  X  X  H : I
Various hypothesis-based inter-relationships can be established based on their component relationships, i.e., concept term sets and relation terms. Assume that H in Hypo .
 Definition 15. H 1 is equivalent to H 2 , written as H 1 h EQ
For two equivalent hypotheses, they must have equivalent relation terms, as well as equivalent input and output concept term sets.

Definition 16. H 1 is a specification of H 2 (conversely, H
H
We call H 1 a strict specification of H 2 (conversely, H 2
H
If H 1 is a specification of H 2 and a specification of H
Conversely,if H 1 isageneralization of H 2 andageneralizationof H
H 2 and H 3 .
 Example 7. Given the following three hypotheses:
H
H
H
H 1 is more specific than H 2 and H 3 ,and H 2 is also more specific than H
H 2 h H 3 ).Besides,allofthemarestrict specifications. H 1 isacommon specificationof H a common generalization of H 1 and H 2 .
 Definition 17. H 1 is opposite to H 2 , written as H 1 / h
Fortwooppositehypotheses,theymayhaveequivalentinput/outputconcepttermsetsbutwithopposite sets, but with at least one opposite output concept term pair (Case 2 of the definition). Example 8. Given the following three hypotheses:
H : f wet -winter j g) relate f summer -flood j ; hot -summer j g ,
H : f wet -winter j g) unrelate f summer -flood j ; hot -summer j g , and
H : f wet -winter j g) relate f cool -summer j g , we have  X  H 1 / h H 2  X  and  X  H 1 / h H 3  X  , since OPSI rt cool -summer j  X  .

Property 4. The relationships defined on hypotheses have the following properties: (1) Equivalence reflexive, transitive, and symmetric. (2) Specification h is transitive. (4) Opposition / h is symmetric. 4.5. The knowledge subspace
Hypotheses and their inter-relationships constitute a DL knowledge subspace. At an abstract level, a knowledge subspace can be viewed as an oriented diagram consisting of a series of nodes (each representing a hypothesis) that are connected to each other through directed labeled edges (representing various rela-tionships between hypotheses), as shown in the upper part of Fig. 2. To make the diagram connected, we hypothesis, and the absurd hypothesis ? that is a specification of all other hypotheses.
Definition 18. A DL knowledge subspace KSpace  X  X  Node ; Edge  X  is composed of a set of nodes representing hypotheses in Hypo , and a set of directed edges representing relationships of equivalence specification  X  h  X  h , and opposition / h among the hypotheses.

The DL knowledge subspace provides users with a huge exploratory space, where knowledge acquisi-tion, navigation, and deduction can be performed. If a user X  X  inquiry has the form of a hypothesis, the above relationships like equivalence , specification/generalization , opposition can be explored to find matching hypotheses in the knowledge subspace. The hypotheses together with the backing documents, tegical request. 4.6. The linkage between the knowledge subspace and document subspace
The DL document subspace accommodates all the documents in a library. They are the sources for answering users X  information searching and browsing requests. In addition, for an enhanced DL system proposed in this paper, documents in the DL document subspace also serve as the justification for the corresponding knowledge in the knowledge subspace. That is, under each hypothesis is a justification, documents in a DL. All the documents in the DL that support a hypothesis constitute the referent for that hypothesis.

Definition 19. Let H 2 Hypo beahypothesisintheknowledgesubspace. Thereferentof H ,written as W H ,is the set of all documents in the library that support H .
 For the two special hypotheses, we assume W ? X  0 and W &gt; X  Doc .
 following axiom and theorem.

Axiom 1. Let H 1 , H 2 be two hypotheses in Hypo .  X  If H 1 is a (strict) specification of H 2 (i.e., H 1 h H  X  If H 1 is equivalent to H 2 (i.e., H 1 h H 2 ), then W H  X  H 1 is opposite to H 2 (i.e., H 1 / h H 2 ), then W H 1
Using Definition 16 of speciality/generality between hypotheses, we can be sure that if a hypothesis is contrast, if a document does not conform to a hypothesis, it cannot conform to any specialization of that hypothesis either. For any hypothesis H 2 Hypo where  X ? h W H W &gt; X  Doc .

Theorem 1. Let H 1 , H 2 , H 3 be three hypotheses in Hypo, where H i.e.,  X  H 2 ; h H 1  X  and  X  H 3 h H 1  X  . We have  X  W H 2 Proof. Since  X  H 2 h H 1  X  , according to Axiom 1,  X  W H 2  X  H 3 h H 1  X  . Thus,  X  W 3 H 2 [ W H 3  X  W H 1 . h 5. Queries against the enhanced DLs
With the proposed two-layered DL information space, users can pose to DLs various strategic level questions which involve knowledge elements like  X  X  what will cause a summer-flood in the south?  X  X   X  X  Does requests, we present a query language against the enhanced DLs, using a syntax similar to logical expressions. 5.1. Query constructors
The tail describes the query condition, while the head describes the query result, which can be knowledge (i.e., either a complete hypothesis or part of a hypothesis) with/without justification documents, or a boolean indicating whether the knowledge is true or false.

A query tail is a list of predicates connected by logical connectives AND  X ^ X  ,OR  X _ X  , or NOT  X : X  , where each predicate falls into any of the following three categories:  X  an element binding constraint Func  X  e  X  = Func  X  e ; E  X  ;  X  a hypothesis of a binary predicate form t  X  I N ; O N  X  ;  X  a comparison constraint between two expressions h expression ih op
An element in a query tail can be either a variable or a constant. It can represent a hypothesis, a hypothesis component (which can be a concept term, a contextual attribute, a contextual attribute value, a relation term, or a modal symbol), or a referent document of a hypothesis, i.e., sponding category.  X  Hypo  X  e  X   X  X  e denotes a hypothesis;  X  Ref  X  e ; H  X   X  X  e denotes a referent document of hypothesis H ;  X  CTerm  X  e ; H  X   X  X  e denotes a concept term in hypothesis H ;  X  Att  X  e ; H  X   X  X  e denotes a contextual attribute in hypothesis H ;  X  Val  X  e ; a  X   X  X  e denotes a value of the contextual attribute a ;  X  RTerm  X  e ; H  X   X  X  e denotes a relation term in hypothesis H ;  X  Modal  X  e ; H  X   X  X  e denotes a modal in hypothesis H .

An expression in a comparison constraint h expression ih op arithmetic expression involving single-value-oriented operators {+, f\ ; [g . That is,
To query the knowledge in a DL, we expand the traditional comparison operators to include the hypothesis-based comparison operators f h ; h ; h ; h ; h
Within a query (tail and head), we use e to indicate a single element, and brace f e g to indicate a set of elements. 5.2. Query examples
We illustrate the usage of the presented query constructors through a set of examples. In this subsection, we formulate our descriptions according to different types of query outputs. ( 1 ) Query the tenability of an input knowledge (e.g., hypothesis)
Q 1 : Tell me whether wet-winter will cause summer-flood.
An empty query head merely inquires the tenability of the input knowledge. If it holds, the query returns true , and otherwise, false . ( 2 ) Query the referent documents of a hypothesis
Q 2 : Give me documents which talk about the causal relation between wet-winter and summer-flood.
Some intermediate variables with corresponding binding constraints (e.g., H in this query example) can be employed for the ease of query expressions. ( 3 ) Query the hypotheses and their referent documents
Q 3 : Tell me all hypotheses in contrast to the one  X  X  X et-winter will cause summer-flood X  X . Give me all the referent documents.
The result is a set whose element is made up of two fields, a hypothesis and a set of supporting documents. ( 4 ) Query the concept terms in a hypothesis
Q 4 : Tell me what factor(s) will possibly cause a summer-flood. Give me the referent documents. ( 5 ) Query the relation term in a hypothesis
Q 5 : Tell me whether there is a relation between wet-winter and summer-flood. Give me the referent docu-ments. ( 6 ) Query the modal of a relation term in a hypothesis
Q 6 : Tell me whether wet-winter will necessarily or possibly cause summer-flood.
The query answer will be , } , or empty. ( 7 ) Query the contextual values in a hypothesis documents.
 ( 8 ) Query the contexts (attribute-value pairs) in a hypothesis
Q 8 : Tell me the contexts under which wet-winter will cause summer-flood. 6. The construction of DL knowledge subspace
The construction of the DL knowledge subspace and its linkage to the associated justification (docu-ment) subspace can be done in two ways: (1) human-centered knowledge acquisition . Experienced humans input hypothesis knowledge manually, based on which justifying articles are collected by performing searching and browsing on DL systems; (2) machine-centered knowledge acquisition . Under the assistance of users, DL systems automatically deduce hypothesis knowledge by correlating and analyzing data sources.
We discuss these two methods in detail in the following sections. 6.1. Human-centered knowledge acquisition
The central problem in all attempts to leverage a digital library by adding knowledge to mainly symbolic data (either inthe form of rawdata ordocumentcollections)isto understandthedata.Currently,machines hardly extract proper knowledge from data alone. Therefore, any practical application of the techniques described in this paper involves human knowledge acquisition efforts.

The sheer amount of data available through current DLs, including the Web, prevents  X  X  X harting of the knowledge space X  X , as traditionally done by librarians and other knowledge workers. Their efforts are still survive to date. However, humans alone on the knowledge provider side cannot properly chart all docu-ments and data that become, or already are, available to (potential) knowledge consumers.
What is needed is a human input from the consumer side. As even detailed logs of search engines prove, want using coarse and/or dumb tools. It is like attempting to reconstruct the history of the great pyramids in Egypt by looking only at the cuts the tools of the stone carvers made on the sand stone blocks. What is totally missing from search engine query logs is the actual strategic intention of the user behind the key-board.
 likely become either too complex to understand or too coarse to be of use.

Inordertoovercomeatleastsomeoftheseproblemsandtobeabletorunsomeexperimentsonstrategic user intention acquisition, we intend to concentrate on a very limited subset of knowledge acquisition small group of users with a well-defined type of knowledge need. On top of the limited, but understandable and simple strategic intention acquisition tool, we intend to implement some kind of immediate reward this  X  X  X eturn on investment X  X  policy have showed that such a policy has a self-regulating property,
One of our future work will concentrate on finding a proper test case for such a system, and to gather with comparable information needs. 6.2. Machine-centered knowledge acquisition
On the other hand, with more and more digital information in a wide variety of disciplines accumulated in DLs today, the automatic and/or user-assisted semi-automatic extraction of inherent knowledge from such a large volume of data becomes indispensable. In this section, we outline a framework for machine-from correlated concepts , and (6) evaluate the discovered knowledge and justifications.
Phase-1: Set Up Knowledge Discovery Tasks . Before extracting knowledge and associated justifications, we need to know what kind of knowledge and justifications are expected from users. Does the user want to know the inherent associations of some of concepts in certain areas? Or does the user want to obtain some accurate specification of such knowledge acquisition targets.

Phase-2: Identify Relevant Resources . Confronted with a huge collection of data sources scattered in heaps of repositories, we must identify repositories which contain the most likely relevant resources in response to a given knowledge request. Otherwise, the following knowledge discovery process will be
By querying the concepts, which are elicited from the user X  X  request and background, against these meta-headquarters and the repository in the river management office will be identified as mostly relevant.
Phase-3: Filter Out Interesting Concepts from Identified Resources . The identified resources from Phase-2 could be in various formats. They can be unstructured articles, multimedia documents, formatted reports, database records, semi-structured files, or hypertexts, etc. To make knowledge discovery across multiple heterogeneous repositories possible, we need to transform the original data sources into a uniform format. A record structure consisting of a set of keywords can be exploited to describe each documental entity.
These keywords explicate the major concepts conveyed by the corresponding documents. For example, from a textual article which mentions  X  X  high rainfall amounts in November and December in 1996  X  X , we can keyword-based records solicits a wide range of techniques, including natural language processing, infor-mation analysis, categorization and summarization, textual and multimedia data mining, etc.
Phase-4: Correlate Concepts According to Contextual Information . Data records filtered out of diverse done based on their common contexts. For example, to find possible relationships between season and river behavior as a consequence, we can link a yearly weather record obtained from one resource, with the corre-sponding river behavior record in the same year , which is obtained from another resource. Here,  X  X  year  X  X  conveysakindofcontextualinformationwithwhichtheexistenceofconcepts X  X  weather  X  X  X nd X  X  river behavior  X  X  have meaning. Table 1 shows a list of logical connection examples between these two kinds of records.
Phase-5: Extract Knowledge and Justifications from Correlated Concepts . After preparing linked data been made on message understanding and information extraction in the literature (Sundheim, 1993; Bagga, 1998; Lin, 1998). Our current study focuses on the discovery of correlationships of concepts. The associ-ation rule technique developed in the data mining area can be applied to this knowledge extraction phase (Agrawal, Imielinski, &amp; Swami, 1993; Agrawal &amp; Srikant, 1994).

The problem of mining association rules from transactional data was first introduced in (Agrawal et al., 1993). The application is sales data of supermarkets. It aims to discover the associations among items purchased by customers such that the presence of some items in a transaction will imply the presence of other items in the same transaction. The following is a mathematical model to address the problem of records,whereeachtransactionrecord A consistsofasetofitemssuchthat A I .Let X beasetofitems.A transaction A is said to contain X if and only if X A . An association rule is an implication of the form
X ) Y , where X ! I , Y ! I , and X \ Y  X  / . The rule X ) Y holds in the transaction set D with confidence contain X [ Y .
 Applying the concept of association rules in transactional data to our linked records illustrated in port  X  3/5  X  60%. Within the four records stating wet-winter , three of them also state summer-flood .
Therefore, we have confidence 3/4  X  75%. These supporting records, together with the support and confi-dence measurement values, can serve as the justifications for the extracted knowledge.
Phase-6: Evaluate the Discovered Knowledge and Justifications . Obtaining a set of knowledge and jus-strength of discovered knowledge, we may also incorporate subjective measurements to evaluate and rank their significance with respect to users X  cognitions and their real-life problems. 7. Conclusion
Information is a basic human need. DLs contain a set of information resources collected and organized in a way that accommodates the actual tasks and activities that people engage in when they create, seek, and use information sources. Motivated by the problems: (i) inadequate strategical level cognition support; (ii) inadequateknowledge sharingfacilities X  X  X ith the present-dayDLs,we firstintroduceatwo-layered DL functional model to support different levels of human cognitive acts. The tactical level cognition support aims to provide users with requested relevant documents, as searching and browsing do, while strategic level cognition support can provide not only documents but also intelligent answers to users X  high-order cognitive questions. Second, to address users X  high-order cognitive requests, we propose an enlarged information space comprised of a knowledge subspace and a document subspace . A formal description of the knowledge subspace, as well as query facilities against the enhanced DLs for knowledge sharing and propagation among DL users, are described.

Compared with traditional knowledge-based systems, enhanced DL systems with knowledge elements have the following distinguished features.  X  A cognitive function . A knowledge-based system is usually designed to apply logical inference rules to make judgements in processing business routines or come up with a conclusion to a certain pre-defined problem. The mission of a DL system equipped with a knowledge subspace is to make expertise knowl-edge widely available to the public. From such DLs, users can obtain not only requested documents, but also intelligent answers to their strategic level questions.  X  A broad scope . A knowledge-based system intends to solve problems in a narrow domain, e.g., company particular field. On the contrary, the scope of the DL knowledge subspace is broad, covering a wide spread of scientific and engineering disciplines.  X  An extensive content . DLscollectahugebody ofdocuments,whichcan serveas knowledge justifications.
Comparatively,knowledge-basedsystems containalimited amountofrules andfactsinaparticularfield of expertise.

The major contributions of the paper are twofold. First, the presented DL information space extends the traditional role of DLs from information provider to information and knowledge provider . Second, the traditional simple keyword-based index schema is expanded to the strategic knowledge-based level, con-sisting of inter-related hypotheses that are backed by documents. One can say that the essence of the documents is reconstructed in the DLs X  knowledge level.

The work reported here is a first step towards knowledge-based DLs. For future work, a lot of issues deserve investigation. (1) One immediate work is to build up the knowledge subspace and link it to the the knowledge and document subspaces is very important and must be carefully planned. This demands effective indexing strategies for both knowledge and justifying documents. (3) Efficient query evaluation and knowledge navigation mechanisms must be built to help users make the best of information and knowledgeassetsinsolvingtheirproblems.(4)OureventualgoalistodevelopapracticalDLsystem,which can empower humans with real actionable knowledge in solving their information problems. Acknowledgements
The authors would like to thank the guest editors Edward Fox and Elisabeth Logan, and the referees for their insightful comments which have greatly helped to improve the paper.
 References
