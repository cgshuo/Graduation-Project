 Recent years have witnessed the rapid prevalence of online serials, which play an important role in our daily entertainment. A critical demand along this line is to predict the popularity of online seri-als, which can enable a wide range of applications, such as online advertising, and serial recommendation. However, compared with traditional online media such as user-generated content (UGC), on-line serials have unique characteristics of sequence dependence, release date dependence as well as unsynchronized update regu-larity. Therefore, the popularity prediction for online serials is a nontrivial task and still under-addressed. To this end, in this pa-per we present a comprehensive study for predicting the popular-ity of online serials with autoregressive models. Specifically, we first introduce a straightforward yet effective Naive Autoregressive (NAR) model based on the correlations of serial episodes. Further-more, we develop a sophisticated model, namely Transfer Autore-gressive (TAR) model, to capture the dynamic behaviors of audi-ences, which can achieve better prediction performance than the NAR model. Indeed, the two models can reveal the popularity gen-eration from different perspectives. In addition, as a derivative of the TAR model, we also design a novel metric, namely favor , for evaluating the quality of online serials. Finally, extensive experi-ments on two real-world data sets clearly show that both models are effective and outperform baselines in terms of the popularity prediction for online serials. And the new metric performs better than other metrics for quality estimation.
 H.2.8 [ Information Systems ]: Database Applications -Data Min-ing popularity prediction; online serials; autoregressive models  X  Contact Author.

With the rapid development of online content-sharing Websites, more and more people would like to become online audiences in their daily entertainments. A recent trend of the over-the-top (OTT) subscription services (e.g., Hulu 1 and Youku 2 ) is to provide online serials, such as TV shows and Webisodes, to attract more online audiences. Different from the user-generated content (UGC) and movies, online serials often have many regularly updated episodes, which will continuously capture the audiences X  preference. Indeed, an interesting and practical problem for this online serial service is to predict the popularity of online serials, which can help with a wide range of applications, such as serial recommendation [21, 29], online advertising [22, 14, 29, 1, 23], user behavior analysis [1, 13, 8, 32], as well as online traffic management [7, 2, 9].

In the literature, although many efforts have been devoted to the popularity prediction for traditional online contents [1, 15, 20, 27, 30, 29, 33] and time series prediction [17, 24, 11], few of those works can be directly used to solve the problem of popularity pre-diction for online serials due to their unique characteristics. Specif-ically, online serials have strong sequence dependence and release date dependence. For example, the plot often evolves between ad-jacent episodes, thus two adjacent episodes may have similar audi-ences due to the momentum of popularity. Also episodes released on weekends or holidays may attract more audiences than those on workdays. Furthermore, since different episodes are usually re-leased on different days, online serials have the characteristic of unsynchronized update regularity. Therefore, the popularity predic-tion for online serials is a nontrivial task and still under-explored.
To this end, in this paper we present a comprehensive study for predicting the popularity of online serials by leveraging autoregres-sive models. Firstly, we find that the popularity of two adjacent episodes often have a strong linear correlation. Therefore, we in-troduce a straightforward yet effective Naive Autoregressive (NAR) model based on the correlation. In this model, the popularity of a newly released episode is represented by a linear combination of the popularity of previous episodes. However, this model can-not explicitly model the dynamic behaviors of audiences, which play an important role in the popularity generation of online seri-als. Therefore, we further develop a sophisticated model, namely Transfer Autoregressive (TAR) model. In this model, we assume that audiences of an episode consist of two parts, i.e., followers who have watched previous episodes and also follow the current episode, and freshers who watch the serial for the first time such as random surfers and those who have watched the previous episodes http://www .hulu.com/ http://www.youku.com/ of this serial through other ways. Indeed, both of the two models are effective for predicting the popularity of online serials, but can reveal the popularity generation from different perspectives. In ad-dition, as a derivative of the TAR model, we also design a novel metric, namely favor , for evaluating the quality of online serials. It can help to find serials of high quality, which have the high poten-tial to attract audiences to watch.

Specifically, the contributions of this paper can be summarized as follows. Overview. The remainder of this paper is organized as follows. We introduce the preliminary of popularity prediction for online se-rials in Section 2. Section 3 and 4 discuss the details of our NAR and TAR models, respectively. In Section 5, we report the exper-imental results on two real-world data sets. Section 6 provides a brief review of related works. Finally, we conclude the paper and describe possible future works in Section 7.
In this section, we first introduce some preliminaries about on-line serials and then provide the formal problem statement of the popularity prediction for online serials .

Online serials include various kinds of contents, such as TV se-ries (teleplays), Webisodes and serial novels. Let us take TV se-ries, one of the most important components of online serials, as an example. As a convention, TV series providers always release lim-ited (e.g., one or two) episodes at each broadcast time, and the new episodes will be released regularly (e.g., per day or per week). The episodes can be viewed by online audiences anytime after they are released. Therefore, views of released episodes at different time compose the popularity records of TV series.

Formally, each online serial s n contains M n episodes, i.e., s { e 1 , e 2 ,  X  X  X  , e M n } , where episode e i is released at timestamp t and  X  i  X  [1 , M n ] we have t i  X  t i 1 =  X  T , which is the release interval between two adjacent episodes. Particularly, sometimes the online serial providers may release two or more episodes at the same time. In this case, the episodes which are released at the same time can be regarded as one episode, without loss of gen-erality. After its release, the views intuitively constitute the pop-ularity of an episode. Therefore, if we sample every unit time after its release time t i , the popularity record of e i resented by a time series  X  i = { v i 1 , v i 2 , ... } , where v the popularity of the episode e i within the j -th unit time inter-val after release. The granularity of unit time depends on the de-mands of popularity modeling, which can be one day, one week, Figur e 1: The popularity records of an online serial, where v denotes the popularity of the i -th episode within the j -th unit time interval after it is released. and etc. We will set the unit time interval to be the release inter-val,  X  T , in the following description. Note that, the popularity records of different episodes contain different number of observa-tions at a given timestamp. In other words, for s n , the time series  X  ( 1  X  i  X  M n ) of different episodes e i ( 1  X  i  X  M n ) may have different lengths. Furthermore, the popularity record of s can be denoted as  X  n = {  X  1 ,  X  2 ,  X  X  X  ,  X  i } ( i  X  M ple, Figure 1 demonstrates the popularity record of a specific online serial, where the update frequency of episodes is one unit time (i.e.,  X  T = 1 ).

With the above preliminaries, we can formally define the prob-lem of popularity prediction for online serials as follows. Given an online serial s n with i released episodes and its popular-ity record  X  n = {  X  1 ,  X  2 ,  X  X  X  ,  X  i } , the goal is to predict the pop-ularity record of the next episode after it is released, i.e.,  X  { v
According to the above definition, the major task of the proposed problem is to use the popularity records of historical episodes for predicting the popularity of online serials. Indeed, the popularity of different episodes have a strong characteristic of sequence de-pendence, which can be captured by autoregressive modeling [17]. To be specific, we can formulate the popularity prediction task of individual serial as the following autoregressive problem: Therefore, our goal is to build and learn the autoregressive model M . The above formulation is not equal to the traditional autore-gressive modeling problem, which only takes consideration of the historical values of a given variable (e.g.,  X  i +1 ). However, since all the popularity records (e.g.,  X  i ) belong to the same serial s the formulation can be regarded as leveraging historical records of s n for predicting the unknown records of s n . Therefore, our formulation still satisfies the problem definition of autoregressive modeling. In the following sections, we will introduce two adapted autoregressive models for solving this problem.
In this section, we introduce the first novel autoregressive model, namely the Naive Autoregressive (NAR) model.

Intuitively, if people like the first several episodes of a serial, they are likely to continue viewing the next episodes. Therefore, the major audiences of different episodes of a serial are same, and usually have personalized but relatively stable watching behaviors. For example, some big fans always watch the new episodes at the first day after they are released, while some others may watch them later on weekends due to their work or study. Indeed, according to Figure 2: (a) Schematic of the NAR model; (b) The average Pearson correlation coefficient of the popularity of two adja-cent episodes in our data set, which is calculated from the re-lease time to the t -th unit time interval. some previous reports [31, 16], such personalized watching behav-iors are especially significant for online serials. Inspired by this, we propose the NAR model by utilizing the popularity of the al-ready released episodes to predict the popularity of a new episode within the same j -th unit time interval after it is released. For ex-ample, as shown in Figure 2(a), we can use the popularity with the the newly released episode (e.g., v i 1 ).

To further validate the model, we compute the average Pearson correlation coefficient between the popularity records of two ad-jacent episodes (i.e.,  X  i and  X  i +1 ) with one real-world data set. The results are shown in Figure 2(b). We can observe that there is a strong linear correlation between the popularity of two adjacent episodes, and the average correlation coefficient becomes larger as we consider longer duration. Formally, the popularity of an episode within the j -th unit time interval (i.e., v ij ) is a linear combination of the popularity of previous r episodes ( e.g., v i 1 ;j , v Specifically, we can predict v ij as and V = (1 , v i 1 ;j , . . . , v i r;j ) .

Particularly, to achieve better prediction performance, here we propose two different kinds of methods for learning the model pa-rameters, which can fit our model into different application cases.
This method indicates that all online serials should have the same model parameters. Specifically, given a training set of online seri-als S and their popularity records  X  = {  X  1 ,  X  2 , . . . ,  X  process of learning model parameters can be implemented by min-imizing the Mean Relative Squared Error (MRSE) [21, 20] loss function; that is where v ij is the real popularity. Here, we can transform this or-dinary least squares problem to the normal equation by setting the derivative of Equation (3) with respect to w to zero and solving for w , and then get the optimal solution  X  w [19].
This method assumes that every serial has its own model param-eters, which can capture its own popularity trend. However, a criti-cal challenge along this line is that some serials may only have few released episodes as training data, which may increase the risk of over-fitting during model training [4]. To this end, we add a penalty term to the loss function (i.e., Equation 3) in order to avoid the case of over-fitting. Indeed, the most widely used form of such penalty term is the sum of the squares of coefficients [4]. Therefore, the loss function changes to arg min where || w || 2 = w T w =  X  0 2 +  X  1 2 + . . . +  X  r 2 and  X  keeps a trade-off between the regularization term and the loss function. This optimization problem can also be solved by the method used for learning NAR with sharing parameters. Particularly, in order to set a most appropriate value for  X  , we use the value which mini-mizes the prediction error on the validation set.

Indeed, sharing parameters can minimize the overall MRSE while individual parameters lays emphasis on individual popularity trend. Therefore, when we only know the popularity of a few episodes of the given serial, it is better to use the former method. In contrast, when there are enough released episodes of the given serial as train-ing data, the latter method is better. In this section, we propose a sophisticated model, namely the Transfer Autoregressive (TAR) model, for popularity prediction.
Although the NAR model can exploit the linear correlation be-tween different episodes for popularity prediction, it only uses the popularity of historical episodes with the same color in Figure 2(a). With the real-world observations, we found that the popularity of a specific episode always consists of two parts. The first part is from the followers who have watched the previous episodes and also would like to follow the current episode. These followers are loyal fans of this serial and will likely keep watching the following episodes. However, some of the followers may lose their interests as time unfolds due to many reasons, such as finding another in-teresting serial. The second part is from the freshers who watched the serial for the first time, such as random surfers on the Web and those who have watched the previous episodes of this serial through other ways (e.g., TV and other websites). If the freshers like this serial, they will continue watching the following episodes and be-come followers. Particularly, instead of watching the new episode on the first day after it is released, the audiences might watch it later. The above observations are the basic concepts of our TAR model. In the following, we will state this idea in a formal way.
A SSUMPTION 1. Audiences of an episode are composed of fol-lowers and freshers. Both of them will sequentially watch future episodes from the episode that they start watching in this serial.
Indeed, Assumption 1 can capture the collaborative behaviors of audiences. For better illustration, here we only take serial s as example. Specifically, for an episode e i , we use a ij denote the popularity from followers and freshers within the j -th unit time interval after it is released, respectively. In particular, given i = 1 , we have It is because that no one has watched this serial before. Further-more, let p ijk and q ijk denote the probabilities that followers and freshers of episode e i within the j -th unit time interval after e released will keep watching the next episode e i +1 on its k -th unit time interval after e i +1 is released, respectively. Particularly, the subscripts of the two probabilities should satisfy that t t + j , where t i and t i +1 are the release times of episodes e e i +1 , respectively. It is because that only the historical audiences will transfer to watch the current episode.

Figure 3 shows the graphical representation of the above defini-tions. In this figure, the two episodes e i and e i +1 are released at the time index 1 and 2 , respectively. Every rectangle denotes the pop-ularity v ij , which contains two circles. The green and blue circles represent a ij and b ij , respectively. Except for the last episode, ev-ery green and blue circles should have many weighted arrows point-ing to the next episode, such as p i 11 , q i 11 , p i 12 denote the probability of which audiences will transfer from one circle to another circle, and should be larger for more popular seri-als. To be more specific, they satisfy the following equations: Intuitively, p ijk should become smaller as k increases, since most people will watch the new episode within the first unit time (e.g., the first day) after it is released. To capture this point, we further make another assumption as follows.

A SSUMPTION 2. The number of freshers for new episodes has a trend of decreasing as more episodes are released.

If some freshers watched an episode of the online serial, but do not like it, they would not watch the next episodes any more. This offers an intuitive explanation of Assumption 2. Another meaning of Assumption 2 is that the number of freshers, i.e., b ij ing as i increases with fixed j . Indeed, for an online serial provider, the number of users is finite and the freshers for a serial usually have a maximum number. Therefore we can simplify the problem and assume that where  X  is the decay factor and b 0 j is the initial public attention of the serial within the j -th unit time interval. Intuitively,  X  should be smaller while b 0 j should be larger for popular serials because they attract more freshers as more episodes are released. After substi-tuting Equation (5) and (9) into Equation (6) and 7, we have  X  v ij = f ( m, b 0 , p , q ) = b 0 j  X  m i + where m = exp , b 0 = ( b 01 , . . . , b 0 j ) , p = ( p 111 ) and q = ( q 111 , q 112 , . . . , q i 1 ;jj ) . Although the above equation gives us an approach to predict v ij , it contains so many parameters that it is hard to solve with efficient solutions. Therefore, in the fol-lowing subsection, we will simplify Equation (10) by considering less transformation situations.
Indeed, the probability p ijk will become smaller as k increases when fixing i and j due to the fading of popularity momentum. Moreover, as mentioned in the NAR model, the major audiences usually have personalized but relatively stable watching behaviors. Based on the above, we simplify the original TAR model by con-straining that a ij (or b ij ) can only horizontally transfer to the next episode, i.e., a i +1 ;j ( b i +1 ;j ). Consequently, the complex TAR model in Figure 3 can be simplified to the Single-chain Transfer Autore-gressive (STAR) model, which is shown in Figure 4.

With the STAR model, the Equation (7) can be rewritten by where p ij and q ij are the probabilities that the audiences will trans-fer from the i -th episode to the next episode within the j -th unit time interval after they are released. Once again, by recursively substituting Equation (5), (9) and (11) into Equation (6), we can obtain In particular, the above parameters can be learned by solving the following optimization problem.
 where  X  v ij represents the predicted value of v ij , and C is the episodes of a serial for model training.

For a given serial, p ij and q ij should change slightly as i in-creases when fixing j , because its plot evolves steadily so that the probability that people will keep following the next episodes should not have sharp changes. Therefore, to make Equation (12) more simpler, we divide p ij and q ij into three situations. Specifically, as i ( i  X  1 ) increases when fixing j , we have 1. Both p ij and q ij are constant. 2. Both p ij and q ij are increasing; that is 3. Both p ij and q ij are decreasing; that is In the above equations, p 0 j and q 0 j are the initial values. Indeed, the reason why we set the values of p ij and q ij like Equation (14) and (15) is that those formulas can help to understand the changes of p ij and q ij , and thus simplify the computation of Equation (12).
To optimize the Problem 2, let us start with the first situation and rewrite Equation (12) as follows. q ij = q 0 j . Although the above equation is more simpler than the original Equation (12), the Problem 2 is still a non-convex opti-mization problem [6] and its derivatives are not easy to be calcu-lated. Therefore, if using the classic Gradient Descent algorithm to solve the problem, we would only get a local minimum solution.
Fortunately, we find that p 0 j , q 0 j and m are all limited within the range ( 0 , 1 ]. More importantly, when fixing other parameters (i.e., p 0 j , q 0 j and m ),  X  v ij is proportional to b becomes a convex optimization problem with respect to b 0 j setting the derivative of Equation (16) with respect to b and solving for b 0 j , we can obtain where we have
T o get the most appropriate values of p 0 j , q 0 j , m and b we develop an effective algorithm named Partial Grid Search . Specif-ically, Algorithm 1 demonstrates the pseudo code of our algorithm.
The basic idea of Algorithm 1 is to fix p 0 j , q 0 j and m by grid search, and calculate b 0 j according to Equation (17). Specifically, we first set the variable to be +  X  in line 1 . Then we use the grid search method to retrieval the value spaces of p 0 j , q 0 j every combination of p 0 j , q 0 j and m , we get b 0 j according to Equa-tion (17). In the innermost f or loop from line 7 to 16 , we utilize the fixed p 0 j , q 0 j , m and b 0 j to predict the popularity of every episode in the training data set and accumulate the Relative Squared Error (RSE). If the summation of RSE is smaller than the given threshold minError , we will record the values of p 0 j , q 0 j , m and b last, the final values of p 0 j , q 0 j , m and b 0 j are those which mini-mize the sum of RSE.

For another two situations, it is easy to extend by using Equa-tion (14) or (15) to rewrite Equation (12) and changing Algorithm 1 correspondingly. Particularly, by tuning step , which is used to set the searching step size, we can improve the precision of the final solutions of Problem 2. However, larger step means higher time complexity of the algorithm. Therefore, in Section 5, we will com-pare the effects of different step on the prediction performance.
Indeed, the transfer of audiences from one episode to another episode can intuitively explain the correlation between adjacent episodes. It also reflects the collaborative behavior of audiences.
Algorithm 1: Partial Grid Search( C, j, step ) input : C (the training episode set of a serial) input : j (views of the new episode within the j -th unit time input : step (the searching step size, e.g., step = 0 . 01 ) output : p 0 j , q 0 j , m, b 0 j (parameters of the Transfer Model ) 1 minError = +  X  ; 2 for pp = 0; pp  X  1; pp = pp + step do 3 for qq = 0; qq  X  1; qq = qq + step do 4 f or mm = 0; mm  X  1; mm = mm + step do 5 er ror = 0; 6 bb = Equation (17) ; 7 for i  X  C do 8 r eal = views of the i -th episode within the 9 prediction = Equation (16) ; 11 if er ror &lt; minError then 12 minE rror = error ; 13 p 0 j = pp ; 14 q 0 j = qq ; 15 m = mm ; 16 b 0 j = bb ; 17 return p 0 j , q 0 j , m, b 0 j ;
Generally, serials of high quality will attract more audiences and obtain higher ratings. Intuitively, if the serials providers can recom-mend serials of high quality to audiences, they will obtain more in revenue. However, how to measure the quality of serials accurately and automatically is still an open question. So far, there are two popular and straightforward ways to evaluate the quality of seri-als, namely popularity and rating . The former takes the popularity (e.g., views) as a measure of quality and it assumes that more pop-ularity indicates higher quality. While the latter allows users to rate serials that they have seen, and assumes that serials of high qual-ity should get higher ratings. However, both of the metrics contain obvious drawbacks for quality estimation. Specifically, sometimes the popularity is not reliable, since some serials of poor quality may obtain high popularity due to the marketing promotions, such as advertising. Meanwhile, sometimes the rating is not available in some online serial Websites. Therefore, it is appealing to find some new metrics to evaluate the quality of online serials.

Particularly, we find that parameters of the TAR model, namely p , q , m and b 0 , have the following characteristics. Therefore, we propose to combine the above parameters for design-ing a novel metric, namely favor , to evaluate the quality of serials. Specifically, the metric is defined as Intuitively, larger favor indicates higher quality and vice versa. Note that, in the single-chain TAR model, p , q and b 0 are decided by Figure 5: (a) Average views of teleplays in last five years; (b) Average views of teleplays during the first week in the Main-land sublist. p 0 j , q 0 j and b 0 j . Based on different combinations of p and b 0 j , there are four straightforward possible forms of f avor as follows. 1. f avor 1  X  p 0 j  X  q 0 j  X  m . 3. f avor 3  X  p 0 j + q 0 j + m . 4. f avor 4  X  ( p 0 j + q 0 j + m )  X  b 0 j .
 In particular, f avor 2 and f avor 4 consider the initial public atten-tion of the serial while f avor 1 and f avor 3 are not. In the ex-periment section, we will empirically examine the performance of these metrics for quality estimation.
In this section, we present experimental results on two real-world data sets for evaluating the performance of our models in terms of popularity prediction and quality estimation.
The real-world data sets used in our experiment are collected from Teleplay List 3 of Youku, which includes teleplays of many countries or areas, e.g., Chinese Mainland, Korea and America. These teleplays are released in two different ways: 1) Youku re-leases all episodes of a teleplay one time after this teleplay has been updated on other sources, such as offline TV broadcast. 2) Youku updates the episodes periodically and keeps synchronous or a little later with other sources. Indeed, only teleplays released in the second way are regarded as online serials according to our definition. Some statistics of our data sets are shown in Figure 5. Specifically, Figure 5(a) demonstrates the distribution of average views of 1 , 930 teleplays in last five years, which clearly indicates the increasing prevalence of online TV series. Figure 5(b) shows the distribution of average views per episode in the first week af-ter release of 147 Mainland teleplays released from May 2012 to October 2013 . It indicates that there is obvious difference between the popularity of different serials, and that very few teleplays own most of the views. Thus it is needed to predict the popularity of online serials.

To guarantee the quality of experimental data, we further choose two sublists (i.e., Mainland and American ) as representatives and only focus on the teleplays which were released from May 2012 to October 2013 . http://www .youku.com/v_olist/c_97.html Mainland 147 5,258 35.7 American 45 513 11.4 The detailed statistics of our two data sets are shown in Table 1. We can find that Mainland teleplays usually have more episodes than American ones. Particularly, Youku may update some tele-plays just around the midnight, which results in incomplete views of the first day. Therefore, we deleted the records of the first day and treat the second day as the first day. Moreover, in the experi-ment, we set the unit time of Mainland teleplays to a day, while the unit time of American teleplays is set to a day and a week respec-tively, for evaluating the impact of different unit time with respect to popularity prediction.
To evaluate the performance of our models in terms of popularity prediction, we exploit two baselines in our experiments.
We utilize the Mean Relative Squared Error (MRSE) , as widely used in relevant works [20, 21], to evaluate the performance of pop-ularity prediction. Specifically, it is defined as where  X  v ij is the predicted views of the real value v ij test episode set. Note that, here we use the relative error, instead of the absolute error, because views of teleplays are very different (e.g., as shown in Figure 5(b)).

Since quality estimation can be seen as a ranking problem that serials of high quality should be ranked higher, we adopt the widely used ranking measure, namely Normalized Discount Cumulative Gain(NDCG) 4 as evaluation metric. Specifically, N DCG @ k is defined as follows.
 where iDCG is the ideal DCG and DCG is defined as where Gain n is equal to the rating of the n -th teleplay. http://en.wikipedia.or g/wiki/Discounted_cumulative_gain
Particularly, smaller MRSE indicates better performance of pop-ularity prediction while larger NDCG indicates better performance of quality estimation.
As introduced in Section 3, NAR contains two strategies, namely sharing and individual parameters, when training the model. There-fore, we separately validate the two strategies in terms of predicting the views of the k -th (1  X  k  X  5 ) unit time interval after an episode is released. And the hyper-parameter  X  of individual parameters is set to  X  = 1 . 6 according to grid search. To reduce the uncertainty of model training, we utilize a 3-fold cross validation to evaluate the NAR model with sharing parameters.

Specifically, Figure 6 and 7 show the average MRSE of NAR with different order r  X  [1 , 7] (i.e., using the popularity of pre-vious r episodes) on two data sets. From these figures, we can have the following observations. First, in general, the model with individual parameters has better prediction performance than the model with sharing parameters, especially for larger r . For exam-ple, on the Mainland data set, the 5 -order model with individual parameters for the 1 -st day can lead to a 38 . 5% reduction of MRSE compared with the model with sharing parameters. Second, for Mainland teleplays, MRSE of the NAR model, both with sharing and individual parameters, decreases as the order r increases, and nearly achieves minimum value when the order r = 3 (i.e., from Figure 6(a) and 7(a)). Third, for American teleplays, MRSE of the NAR model with sharing parameters may increase as the order r increases (i.e., from Figure 6(b) and 6(c)), which is quite different from the results of Mainland teleplays. We think the possible rea-son of this phenomenon is that the trends of popularity for different American teleplays vary dramatically, thus using too much previ-ous information would magnify the error when sharing parameters. Fourth, using a week instead of a day as unit time for model train-ing may obtain better prediction performance, especially for the NAR model with sharing parameters. Finally, the performance of popularity prediction within different unit time intervals may be different. For example, sometimes the 1 -st day can achieve the best prediction performance (e.g., Figure 6(b)), while sometimes will achieve the worst performance (e.g., Figure 7(a)). This observa-tion may indicate different types of teleplays usually have different popularity change rules.

In conclusion, individual parameters and larger sampling inter-val can sincerely improve the performance of NAR. But using too much historical information does not mean better performance with respect to popularity prediction, and it is better to exploit sharing parameters for serials which only have released several episodes.
In this subsection, we validate our single-chain transfer autore-gressive (STAR) model in terms of popularity prediction and qual-ity estimation on the two data sets.
As discussed in Section 4.1, here we evaluate the STAR model with different settings of model parameters p and q , i.e., 1) fixing training the STAR model, we assume that views of the first N = 8 episodes have already been known 5 . Figure 8 shows the prediction performance of the STAR model with respect to different unit time intervals after the episodes are released. From these results, we can first find that MRSE of STAR with both fixing and increasing p &amp; q have a similar trend, which are different with the performance of
Here N = 8 is a trade-off for model training, since our pre-experiments show that the models trained with N  X  8 have very similar parameters. the STAR model with decreasing p &amp; q . Second, the prediction per-formance of STAR model on Mainland teleplays is different with the performance on American teleplays. At last, using a week in-stead of a day as unit time for model training may obtain better prediction performance, which is similar to the results of NAR.
In Algorithm 1, we have a parameter, namely searching step , for learning the appropriate parameters by grid search. Here, we eval-uate the prediction performance of STAR with different settings of step when fixing p &amp; q in the algorithm, and the results are shown in Figure 9. We can observe that the MRSE performance has an in-creasing trend when the step gets larger. However, larger step can reduce the running time of Algorithm 1. Therefore, step  X  a good trade-off between efficiency and effectiveness.

As a summary, we believe the STAR model with fixing p &amp; q is the most appropriate model, since it is both effective and sim-ple. The above also proves that popularity change rules of different types of teleplays are very different.
For quality estimation, we use the ratings from Douban 6 as the ground truth to measure the quality of teleplays. Specifically, larger rating indicates higher quality. We first filtered out teleplays with-out Douban Rating in our data sets. The final number of teleplays in Mainland and American data sets are 116 and 26 , respectively. We sort the teleplays by ratings and calculate the iN DCG . For each teleplay, views of all episodes on the first day are used to train the STAR (i.e., with fixing p &amp; q ) and different favor metrics can be computed with the learned parameters. To validate the effective-ness of our novel metric favor , we compare it with two popular-ity based metrics, namely views of the first day and views of the first week of each episode. Also, we use the model parameter b which represents the initial public attention of the teleplay, as the third baseline. Figure 11 shows the results of quality estimation on different data sets. From the results, we can observe that the favor metrics have better NDCG@k performance than other base-lines, especially at small k . Particularly, f avor 2 has the highest http://mo vie.douban.com/ NDCG@k performance for almost every k on the Mainland data set, while f avor 1 and f avor 3 have the highest NDCG@k perfor-mances on the American data set. Therefore, we can claim that the favor is effective for estimating the quality of online serials.
In this section, we compare our prediction models with base-lines, the Average method and 1-VAR. Specifically, by carrying out experiments on two data sets, we find that the Average method can achieve the best prediction performance when using average views of previous 4 episodes. Therefore, here we use the 4-order Average method in comparison, which is denoted as 4-Average. Meanwhile, for 1-VAR, we set the dimensionality of each vector to be 5 , which can achieve the best prediction performance compared with other dimensionalities . The settings of our models are the 3 -NAR model with s haring p arameters (3-NARSP), 3 -NAR model with i ndividual p arameters (3-NARIP) (i.e., the prefix 3 here denotes the order of the naive autoregressive model) and STAR model with fixing p &amp; q . The detailed comparison results are demonstrated in Figure 10.
From the results, we can first find that the performance of 4-average and 1-VAR are very unstable and have the highest MRSE . The results may indicate that directly extending VAR and using the Average method to predict the popularity of online serials are not proper. Second, our NAR and STAR model are not sensitive to the settings of unit time interval k , and using a week instead of a day as unit time for model training may obtain better prediction perfor-mance. Third, the strategy of individual parameters can improve the performance of the NAR model. Finally, the STAR model out-performs the NAR model in terms of popularity prediction. in terms of popularity prediction for serials, we conduct some case studies on the American data set.

Here, we run the 3 -NAR model with sharing parameters (3-NARSP), 3 -NAR model with individual parameters (3-NARIP) and STAR model with fixing p &amp; q on a specific American teleplay, namely Zero Hour Season 1 , respectively. Specifically, Figure 12 shows the prediction results of different episodes on different days after they are released. From the results, we can have the following observa-tions. First, for small episode IDs, the relative errors of the NAR model with individual parameters are larger than the NAR model with sharing parameters. It is because that there are not enough episodes for learning the individual parameters. Second, the STAR model can achieve a significant improvement over the NAR model in terms of popularity prediction, especially for the first few days. For example, in Figure 12(a), the relative error of the STAR model of the 9 -th episode on the 1 -st day after it was released is 0 . 055 , while the other two corresponding relative errors of the NAR model are 0 . 262 and 0 . 419 . (c) American, weekly (c) The 3 -rd day after release
Figure 12: Popularity prediction of different episodes on the k -th ( 1  X  k  X  4 ) day after release for a specific American teleplay.
Generally, the related works of this paper can be grouped into two categories, namely popularity prediction for online content and time series forecasting.

Popularity Prediction. There have been a lot of efforts devoted to popularity analysis and prediction for online contents. For ex-ample, [7] analyzed the popularity distribution, popularity evolu-tion, and content duplication of YouTube videos. Particularly, they found that leveraging information filtering can increase the total views of nice contents as much as 45% and caching the most popu-lar contents can offload server traffic by 50% . [8] studied the relax-ation response of a social crowd after endogenous and exogenous bursts of activity and clustered the patterns into four main classes, namely memoryless, viral, quality and junk . Besides, [10] charac-terized the growth patterns of video popularity on YouTube and the types of the referrers that most often attracted users to each video. [5] developed a methodology which can accurately assess the im-pacts of various content-agnostic factors on video popularity. They found a strong linear  X  X ich-get-richer X  behavior with the total num-ber of previous views when controlling for video content.
On the other hand, [21] discovered that there is a correlation be-tween early votes and future popularity of online contents up to a normally distributed noise. They used a logarithm linear model to fit the correlation. [20] extended their work [21] and proposed the multivariate linear model and multivariate radial basis function model . The former uses the number of views received per sampling interval as features, instead of the total number of early views. The latter extracts more features by utilizing radial basis functions to measure the similarity between different videos. Furthermore, [1] first designed two new types of features, i.e., SA (capturing the Share of Attention of videos) and nROC (capturing the normal-ized Rate of Change in the attention attracted ). Then they clustered views in each sampling interval according to the above features and took advantage of the maximum likelihood path to predict the pop-ularity of a given content. While [29] exploited the latent conform-ing and maverick personalities to develop a conformer-maverick model and used it to rank top-k potentially popular items based on the early votes they received.

In addition, [18] constructed both content and contextual features for hashtag popularity prediction from tweets containing the hash-tag. Whereas [28] presented a novel task of Citation Count Predic-tion given papers X  citation patterns (such as paper content, author expertise and venue impact) and discovered that authors have bi-ases in citing references.

Time Series Forecasting. Models for time series forecasting have many forms and can describe different stochastic processes. For example, the autoregressive model (AR) [25] can describe the process of a single time series. It assumes that the current value linearly depends on its own previous values. While vector autore-gression (VAR) models [17] generalize AR and can capture the lin-ear interdependencies among multiple time series.  X  X  VAR model describes the evolution of a set of k variables (called endogenous variables) over the same sample period (t = 1, ..., T) as a linear function of only their past values X  [26]. Furthermore, [3] addressed how to include exogenous variables in a VAR model, and what the consequences are for the innovation response analysis. In particu-lar, [12] exploited the VAR models to forecast house prices for the four census regions and the aggregate US economy in a data-rich environment.

However, these methods cannot work well in our scenario. Dif-ferent from previous works, we are interested in predicting the pop-ularity of online serials. They usually contain several regularly up-dated episodes, which have unique characteristics of sequence de-pendence, release date dependence as well as the unsynchronized update regularity. Different release dates lead to that vectors of popularity at different time have different dimensionalities, which restrains the utility of techniques in time series forecasting. There-fore, in this paper we propose two novel autoregressive models, namely the Naive Autoregressive (NAR) model and Transfer Au-toregressive (TAR) model, to capture these characteristics and pre-dict the popularity of online serials.
In this paper we studied the problem of predicting the popular-ity of online serials by leveraging autoregressive models. We de-veloped two novel models, namely Naive Autoregressive (NAR) and Transfer Autoregressive (TAR) model, which can reveal the popularity generation of online serials from different perspectives. Specifically, the NAR model is based on the episode correlations of serials, which is straightforward but effective, and the TAR model can capture the dynamic behaviors of audiences. As a derivative of the TAR model, we also designed a novel metric, namely favor , for evaluating the quality of online serials. Finally, the experimental results on two real-world data sets clearly demonstrated the effec-tiveness of the proposed models and metric.

In the future, we will study more possible solutions of the TAR model. Moreover, we plan to integrate some external information into our models for popularity prediction, such as search volume, rating information and user reviews from social networks.
This work was supported in part by grants from the National Sci-ence Foundation for Distinguished Young Scholars of China (Grant No. 61325010) and the National High Technology Research and Development Program of China (Grant No. 2014AA015203). This work was also partially supported by grants from the National Sci-ence Foundation (NSF) via grant numbers CCF-1018151 and IIS-1256016, the Anhui Provincial Natural Science Foundation (Grant No. 1408085QF110). [1] M. Ahmed, S. Spagna, F. Huici, and S. Niccolini. A peek [2] D. Applegate, A. Archer, V. Gopalakrishnan, S. Lee, and [3] H. J. Bierens. Var models with exogenous variables. 2004. [4] C. M. Bishop and N. M. Nasrabadi. Pattern recognition and [5] Y. Borghol, S. Ardon, N. Carlsson, D. Eager, and [6] S. P. Boyd and L. Vandenberghe. Convex optimization . [7] M. Cha, H. Kwak, P. Rodriguez, Y.-Y. Ahn, and S. Moon. I [8] R. Crane and D. Sornette. Robust dynamic classes revealed [9] J. Famaey, T. Wauters, and F. De Turck. On the merits of [10] F. Figueiredo, F. Benevenuto, and J. M. Almeida. The tube [11] Y. Ge, G. Jiang, and Y. Ge. Efficient invariant search for [12] R. Gupta. Forecasting house prices for the four census [13] H. Kwak, C. Lee, H. Park, and S. Moon. What is twitter, a [14] H. Lakkaraju and J. Ajmera. Attention prediction on social [15] K. Lerman and T. Hogg. Using a model of social dynamics [16] C. Li and C. Chen. Measurement-based study on the relation [17] H. L X tkepohl. New introduction to multiple time series [18] Z. Ma, A. Sun, and G. Cong. Will this# hashtag be popular [19] K. P. Murphy. Machine learning: a probabilistic perspective . [20] H. Pinto, J. M. Almeida, and M. A. Gon X alves. Using early [21] G. Szabo and B. A. Huberman. Predicting the popularity of [22] A. Tatar, J. Leguay, P. Antoniadis, A. Limbourg, M. D. [23] E. Veach. Using enhanced ad features to increase [24] P. Whitle. Hypothesis testing in time series analysis , [25] Wikipedia. http://en.wikipedia.org/wiki/autoregressive [26] Wikipedia. http://en.wikipedia.org/wiki/vector [27] T. Wu, M. Timmers, D. D. Vleeschauwer, and W. V.
 [28] R. Yan, J. Tang, X. Liu, D. Shan, and X. Li. Citation count [29] P. Yin, P. Luo, M. Wang, and W.-C. Lee. A straw shows [30] B. Yu, M. Chen, and L. Kwok. Toward predicting popularity [31] H. Yu, D. Zheng, B. Y. Zhao, and W. Zheng. Understanding [32] H. Zhu, E. Chen, K. Yu, H. Cao, H. Xiong, and J. Tian. [33] H. Zhu, H. Xiong, Y. Ge, and E. Chen. Mobile app
