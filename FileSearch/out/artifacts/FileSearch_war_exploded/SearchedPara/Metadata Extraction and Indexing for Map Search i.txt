 In academic scientific articles, maps are widely used to provide the related geographic information and to give readers a visual under-standing of the document content. As more digital documents con-taining maps become accessible on the Web, there is a growing de-mand for a Web search system to provide users with tools to retrieve documents based on the information available within a document X  X  maps. In this paper, we design methods and algorithms to extract, identify, and index maps from academic and scientific documents in digital libraries. Experimental results show that our approach can accurately locate maps and significantly improve the retrieve quality for maps in digital documents.
 Categories and Subject Descriptors : H.4[Information Systems Ap-plications]: Miscellaneous General T erms: Algorithms,design,experimentation Keywords : Digital library, extraction, indexing, ranking function.
Maps are a type of important figures which are frequently used in digital documents, especially academic and scientific documents in the field of archeology and geography. Despite the importance of conveying information using maps, to our best knowledge, no digital library has paid attention to geographical information in maps that are contained in digital documents. In this paper, we address this problem by integrating the map search functionality into a scientific digital library.

To build a map search system, we first construct a set of meta-data for each map in a digital document. This metadata includes map level metadata (e.g., a map X  X  caption) as well as document level matadata (e.g., a document X  X  title, abstract). We denote the document containing the map the host document of that map. We then provide methods and algorithms to achieve the following three tasks: 1) Map Metadata Extraction . A set of map metadata are extracted from the digital document. We first use TET [2] to extract text from PDF files and then apply a set of heuristics rules to locate the metadata in the extracted text. 2) Map Identification . Maps are identified from the other non-map images using supervised learning methods and a set of features which are extracted from the map metadata. 3) Map Indexing and Retrieval . Regarding the map metadata as various fields for map indexing, a novel index and a new ranking function are developed for the map search system.
A document is essentially a combination of images and text. Un-derstanding the relationship between an image and its accompanying text in the host document can reveal valuable information for inter-preting the image. We first define a set of metadata which come from two sources: the map level metadata which is generated from the text accompanying the map; the host document level metadata which is generated from the host document X  X  metadata. On one hand, within a host document, there are three resources which bear metadata for the map content: the caption, the reference text, and the document page containing the map. On the other hand, from the map X  X  host document, we extract the document level matadata, which are composed of title , abstract , author , age (i.e., publication date) , and citations .

We then consider the map identification process as a classification process, which is to categorize the images into two groups, maps and non-maps. The map identifier is a supervised classifier which works in two phases: training and testing. First, a classifier is trained on the feature vectors generated from the training set in which each image has a class label indicating whether it is a map or not. This classifier is then used to test other images. Cross validation [4] is used for the training and the testing process. Considering that our problem is in some degree similar to the text classification problem, we propose using Support Vector Machines (SVMs), which is a learning machine for two-group classification problems [5].
 Finally, we define a novel scheme named weighted Map Term Frequency and Inverse Map Term Frequency ( MTF-IMTF ) for our map search system. Given a map M j , for a term T i which appears in the k th field MD k with W k , we define the weighted MTF as W k MT F ijk . Here MT F ijk is the map term frequency of the term T in the metadata MD k of map M j . For IMTF , we use N denote the total number of maps in a collection, and use denote the number of maps which contain the term T i in its metadata MD k . Therefore,  X  ijk is computed as,  X  ijk = W k  X  MT F log N m /n ik . Similarly, we can get  X  iqk for a query Q the metadata to be searched for. Otherwise, if Q consists of only a set of keywords, it is supposed that each keyword appears in each After computing the sets of  X  ijk and  X  iqk , the map M j Q are represented as D -dimensional vectors  X  X  X  m j and  X  X  X  q Here D = P f and a query Q is computed as the cosine of the angle between and  X  X  X  q 0 as, sim ( M j , Q ) =  X  X  X  m j  X 
We currently customize our MT F  X  IMT F scheme with five sets of metadata: caption, reference text, document title, document abstract, and a set of location names which are extracted fro m all the above. The weights of these five sets of metadata are denot ed as W c , W r , W t , W a , and W loc , respectively. By setting and tuning the weights, we obtain various ranking strategies.

Besides the relevance of the map X  X  content, we use several qu ery-independent features of the map and its host document to adju st the final ranking. We denote these two sets of features as HDF , respectively. In MF , we take into account two factors: 1) the length of map caption L c ; and 2) the length of map reference L . Boost by MF , the maps with more detailed explanations get higher ranking. In HDF , we take into account four factors: 1) the map frequency MF req ; 2) the number of other publications citing the host document Cite , which can be obtained from Google Scholar [1]; 3) the venue X  X  prestige V P , which can be obtained from some online journal ranking website; and 4) the document freshne ss which is indicated by the publication year. Boost by HDF maps whose host documents contain more maps, newly publishe d in high quality journals/references, and are cited by more p ublica-tions can get higher rankings. Finally, normalizing all the above six features, we get the ranking score for M j as, score ( M sim ( M j , Q )  X  MF  X  HDF , where MF = L c + L r , HDF = MF req + Cite + V P + DF .
Experiments were carried out to verify the effectiveness of our pro-posed map search system. The collection we used to perform ex per-iments consists of a set of archeology documents, which are d own-loaded from the scholarly journal archive, JSTOR (http://w ww.jstor.org/). We manually analyzed each document and listed some statisti cs of the collection in Table 1.

Metadata Extraction and Map Identification To evaluate the performance of metadata extraction and map identification, we use precision ( P ) and recall ( R ) as the measures.

We adopted the well-known SVM-Light (http://svmlinght.jo achims.org/) for our training and testing on the 2090 figures. Default para meter setting, i.e., linear kernel, is used. We compared the SVM me thod with two rule-based methods: 1) use only one feature, Begins With  X  X ap X , which can get the highest P , 100%, but very low R 2) use the union of all positive features, which can get the hi ghest 92.7%, but very low P , 37.2%. Table 2 lists the performance evalua-tion using five-fold cross validation. As expected, the comp arison re-sults illustrate that the SVM method shows significant impro vement to both the two rule-based methods.

Map Ranking We used 25 keyword-based queries to search in the 536 maps which are contained in 278 papers. The average query length is 1.32 words. A pool method was used to determine the s et of relevant maps to each test query. We ran our ranking method s for each query and put the 30 highest ranked maps in each retur ned ranking into a pool for evaluation. As a result, for each quer y, we have a set of maps, labeled as relevant or non-relevant, inde pendently of the ranking functions. We used P  X  R figures [3] to demonstrate the quality of ranking results.

Eight ranking variances are implemented and compared using P-R figures: 1) customized Google Desktop search engine, which i s a Google Desktop API customized to build up index on the direct ory containing the 278 PDF files; 2) full text indexing; 3) captio n only, which means W c = 1 , W r = W t = W a = W loc = 0 , MF = HDF = 1 ; 4) reference only, which means W r = 1 , W c = W W a = W loc = 0 , MF = HDF = 1 ; 5) Caption+Reference, which means W c = W r = 0 . 5 , W t = W a = W loc = 0 , MF = HDF = 1 ; 6) Caption+Reference+DocMeta, which means W c = W r = W t = 0 . 33 , W a = W loc = 0 , MF = HDF = 1 ; 7) weighted Caption+Reference+DocMeta+Locations, which means W c = W r = W loc = 0 . 25 , W t = W a = 0 . 125 , MF = HDF = 1 ; 8)weighted and boost Caption+Reference+DocMeta+Locati ons, which means W c = W r = W loc = 0 . 25 , W t = W a = 0 . 125 , MF = L + L r , HDF = MF req + Cite + V P + DF . For 1) and 2), we tested the queries with an additional keyword,  X  X ap X . Their returned results are not maps but documents. We located the page of the  X  X igh lighted text X  in each document, which is a text segment ation considered to be the most relevant to the test query by the ran king strategy. Then the map on that page is considered to be the res ult. If there is no map on that page, a miss is counted.
The average P-R figures for the 25 test queries are shown in Figure 1. From this figure, we can see that, 1) and 2) have the worst per for-mance because they do not take any effort to deal with maps. 3) and 4) can both locate the maps in the documents and returned rele vant maps to the query. 3) achieves higher precision than 4) befor e the 80% R because a map X  X  caption concentrates on the map X  X  content while the subjects of the references may be other content in t he main body. By combining 3) and 4), 5) got higher precisions. This s hows that indexing based on the combination of caption and refere nce can provide high quality results for maps. After including the d ocument metadata, 6) presents a slightly better retrieval performa nce. This confirms that the document X  X  title and abstract can give some useful information for the map indexing. Location keywords are inc luded and given higher weights than document metadata in both 7) an d 8). The P-R figures illustrate that the inclusion of location keywords leads to an increase in the average precision. Particularly , 8) got the highest average precision when average recall is below 60%. This means that the boost factor can greatly improve the quality o f top ranked results. This is especially helpful to a digital libr ary system, where precision is very important among the top ranked docum ents.
We have proposed a map search system for digital academic doc u-ments. Experimental results performed on JSTOR archaeolog y jour-nal document show promising results.
