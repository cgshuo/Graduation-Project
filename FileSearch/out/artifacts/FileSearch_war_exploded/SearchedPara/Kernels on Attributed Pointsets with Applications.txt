 many real life scenarios and incorporate it in the proposed k ernels.
 4 describes experimental results. (real vectors in this case) attached to each point. Thus, X = { ( x and d n including computer vision [18], computational biology [5] , etc.
 or graphs. The main aspect of similarity is that there should be correspondences (1-1 mappings) [8].
 images of the same face should be approximately superimposa ble (slight changes may be due to recognition task.
 pose X A = { ( x A normalized sum kernel [12] was defined as K where K ( d A Using the RBF kernel K normalized sum kernels as: Observe that this kernel doesn X  X  use the in formation in x in [15]. The kernel K ( A, B ) = trace P for  X  G we incorporate position x 3.1 Neighborhood kernels between their neighborhoods.
 The k -neighborhood N itself) that are closest to it in the embedding euclidean spa ce. So, N k x i  X  x l k X  ( x l , d l ) 6 X  X  i and ( x B K The neighborhood kernel (NK) between two pointsets X A and X B is thus defined as: It is easy to see that K forward extension, it considerably improves accuracy of K K given by K the correct match while the K of points ( x 3.2 Spectral Neighborhood Kernel matrix of the neighborhood to define a kernel function.
 Given a neighborhood N e the neighborhoods (say N B norm of a matrix.
 case that fewer eigenvectors are used, the equation kA X  P k  X  A =  X  1  X  1  X  T 1 .
 of the eigenvectors  X  B corresponding to neighborhoods N A to largest eigenvalue of  X  A A equivalent to seek a permutation  X   X  which minimizes k f A permutations. However, this similarity function is not nec essarily positive semidefinite. To construct a positive semidefinite kernel giving similari ty between the vectors f A we use the convolution kernel technique [7] on discrete stru ctures. Let x  X  X be a composite object formed using parts from X R on X Haussler [7] showed that if K 1 , . . . , K m are symmetric and positive semidefinite, so is K . For us, let X be the set of all neighborhoods and X relation R is defined as R ( f (1) , . . . , f ( k ) , N A for some permutation  X  . In other words, R ( f (1) , . . . , f ( k ) , N A spectral projections the points of neighborhood N A nels with the same parameter  X  . Thus, from the above equation, the convolution kernel beco mes constant ( k !) 2 , we get kernel K The spectral kernel (SK) K Following theorem relates K Theorem 3.1 Let N large enough value of T such that all points are matched. e 1-NN 96.3% 88.9% 57.0% 48.1% 3.0% 22.2% 17.8% PCA 94.1% 79.3% 44.4% 32.9% 2.2% 7.4% 7.4% LEM 78.6% 92.9% 31.3% 74.8% 47.4% 92.9% 91.1% AMM 96.0% 96.0% 56.0% 80.0% 82.0% NA NA Face-ARG 97.8% 96.3% 66.7% 80.7% 85.2% 98.5% 96.3% Sum(eq (1)) 96.19% 95.23% 83.80% 89.52% 60.00% 86.66% 80.95% NK (eq (3)) 98.09% 98.09% 85.71% 94.28% 65.71% 92.38% 86.66% SK (eq (7)) 99.04% 99.04% 86.66% 93.33% 65.71% 90.47% 84.76% computation time doesn X  X  become prohibitive. [20], and results on two benchmark datasets (AR and ORL) were compared to existing state-of-the-using faces of people present.
 pointsets using SIFT local descriptors [11], having 128 des criptors per point. The kernels were implemented in GNU C/C++. LAPACK [2] was use d for calculation of eigen-vectors and GNU GSL for calculation of permutations. LIBSVM [4] was used as the SVM based faces in album images and video frames.
 Dataset The AR dataset [13] is composed of color images of 135 people ( 75 men and 60 women). images were converted to greyscale and rescaled to 154  X  115 pixels. The ORL dataset is composed scale. All the 400, 112  X  92 pixel images were used for experiments. 4.1 Face Recognition in AR face DB Face recognition was posed as a multiclass classification pr oblem, and SVMs were along with the proposed kernels. The AR face DB is a standard benchmark data set, on which a recent comparison 1 have been obtained using one normal (no occlusion or change of expression) face image as the training set.
 It can be seen that for all the images showing change of expres sion (Smile, Angry and Scream), the kernel based method do not perform as well as the Face-ARG or AMM. This failure is due to similarities over such a large number of extra points makes t he overall kernel value noisy. The proposed approach doesn X  X  perform better than existing methods on images taken under extreme strating the effectiveness of modeling faces as attributed pointsets. 4.2 Recognition performance on ORL Dataset testing the kernels on images in the ORL dataset. The problem was posed as a multiclass classi-and 5 training images.
 is minor as compared to those shown in AR dataset. For higher n umber of training images, the performance of all the kernels saturate at 98%. 4.3 Tagging images in personal albums based on faces from publicly available sources like http://www.flickr.com 1 were used for experimenta-tion. Five personal albums having 20 -55 images each were dow nloaded and many images had upto our method against.
 given cluster should be tagged with the name of that person. person. Thus, people appearing only once in the entire album are not reported, which reduce the rest as false +ves. 4.4 Video annotation based on faces www.archive.org and music videos from www.youtube.com . Video was sampled at 1 frame per second and experimental methodology was similar sectio n 4.3 was used on the frames. kernels. ing techniques.
 The proposed kernels were validated on the well known task on face recognition on two popular encouraging in both cases.
 [3] Karsten M. Borgwardt and Hans-Peter Kriegel. Shortest-path kernels on graphs. In ICDM [4] Chih-Chung Chang and Chih-Jen Lin. LIBSVM: a library for support vector machines , 2001. [5] Ingvar Eidhammer, Inge Jonassen, and William R. Taylor. Structure comparison and structure [8] Koji Tsuda Hisashi Kashima and Akihiro Inokuchi. Margin alized kernels between labeled [10] Tai Sing Lee. Image representation using 2d gabor wavel ets. IEEE TPAMI , 18(10):959 X 971, [13] A.M. Martinez and R. Benavente. The ar face database. CVC Technical Report , 24, 1998. [14] Bo Gun Park, Kyoung Mu Lee, and Sang Uk Lee. Face recognit ion using face-arg matching. [15] Amnon Shashua and Tamir Hazan. Algebraic set kernels wi th application to inference over [16] Shinji Umeyama. An eigendecomposition approach to wei ghted graph matching problems. [18] Haim J. Wolfson and Isidore Rigoutsos. Geometric hashi ng: An overview. IEEE Comput. Sci. [19] L. Zhang, L. Chen, M. Li, and H. Zhang. Automated annotat ion of human faces in family
