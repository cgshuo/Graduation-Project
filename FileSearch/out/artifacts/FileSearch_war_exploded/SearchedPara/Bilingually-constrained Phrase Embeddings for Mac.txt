 Due to the powerful capacity of feature learn-ing and representation, Deep (multi-layer) Neural Networks (DNN) have achieved a great success in speech and image processing (Kavukcuoglu et al., 2010; Krizhevsky et al., 2012; Dahl et al., 2012).
Recently, statistical machine translation (SMT) community has seen a strong interest in adapting and applying DNN to many tasks, such as word alignment (Yang et al., 2013), translation confi-dence estimation (Mikolov et al., 2010; Liu et al., 2013; Zou et al., 2013), phrase reordering predic-tion (Li et al., 2013), translation modelling (Auli et al., 2013; Kalchbrenner and Blunsom, 2013) and language modelling (Duh et al., 2013; Vaswani et al., 2013). Most of these works attempt to im-prove some components in SMT based on word embedding , which converts a word into a dense, low dimensional, real-valued vector representation (Bengio et al., 2003; Bengio et al., 2006; Collobert and Weston, 2008; Mikolov et al., 2013).
 However, in the conventional (phrase-based) SMT, phrases are the basic translation units. The models using word embeddings as the direct in-puts to DNN cannot make full use of the whole syntactic and semantic information of the phrasal translation rules. Therefore, in order to success-fully apply DNN to model the whole translation process, such as modelling the decoding process, learning compact vector representations for the ba-sic phrasal translation units is the essential and fundamental work.

In this paper, we explore the phrase embedding, which represents a phrase (sequence of words) with a real-valued vector. In some previous works, phrase embedding has been discussed from differ-ent views. Socher et al. (2011) make the phrase embeddings capture the sentiment information. Socher et al. (2013a) enable the phrase embed-dings to mainly capture the syntactic knowledge. Li et al. (2013) attempt to encode the reordering pattern in the phrase embeddings. Kalchbrenner and Blunsom (2013) utilize a simple convolution model to generate phrase embeddings from word embeddings. Mikolov et al. (2013) consider a phrase as an indivisible n -gram. Obviously, these methods of learning phrase embeddings either fo-cus on some aspects of the phrase (e.g. reordering pattern), or impose strong assumptions (e.g. bag-of-words or indivisible n -gram). Therefore, these phrase embeddings are not suitable to fully repre-sent the phrasal translation units in SMT due to the lack of semantic meanings of the phrase.

Instead, we focus on learning phrase embed-dings from the view of semantic meaning, so that our phrase embedding can fully represent the phrase and best fit the phrase-based SMT. As-suming the phrase is a meaningful composition of its internal words, we propose Bilingually-constrained Recursive Auto-encoders (BRAE) to learn semantic phrase embeddings. The core idea behind is that a phrase and its correct translation should share the same semantic meaning. Thus, they can supervise each other to learn their seman-tic phrase embeddings. Similarly, non-translation pairs should have different semantic meanings, and this information can also be used to guide learning semantic phrase embeddings.

In our method, the standard recursive auto-encoder (RAE) pre-trains the phrase embedding with an unsupervised algorithm by minimizing the reconstruction error (Socher et al., 2010), while the bilingually-constrained model learns to fine-tune the phrase embedding by minimizing the se-mantic distance between translation equivalents and maximizing the semantic distance between non-translation pairs.

We use an example to explain our model. As illustrated in Fig. 1, the Chinese phrase on the left and the English phrase on the right are trans-lations with each other. If we learn the embedding of the Chinese phrase correctly, we can regard it as the gold representation for the English phrase and use it to guide the process of learning English phrase embedding. In the other direction, the Chi-nese phrase embedding can be learned in the same way. This procedure can be performed with an co-training style algorithm so as to minimize the semantic distance between the translation equiva-phrase embeddings will capture the semantics as much as possible. Furthermore, a transformation function between the Chinese and English seman-tic spaces can be learned as well.

With the learned model, we can accurately mea-sure the semantic similarity between a source phrase and a translation candidate. Accordingly, we evaluate the BRAE model on two end-to-end SMT tasks (phrase table pruning and decod-ing with phrasal semantic similarities) which need to check whether a translation candidate and the source phrase are in the same meaning. In phrase table pruning, we discard the phrasal translation rules with low semantic similarity. In decoding with phrasal semantic similarities, we apply the semantic similarities of the phrase pairs as new features during decoding to guide translation can-Figure 1: A motivation example for the BRAE model. didate selection. The experiments show that up to 72% of the phrase table can be discarded without significant decrease on the translation quality, and in decoding with phrasal semantic similarities up to 1.7 BLEU score improvement over the state-of-the-art baseline can be achieved.

In addition, our semantic phrase embeddings have many other potential applications. For in-stance, the semantic phrase embeddings can be directly fed to DNN to model the decoding pro-cess. Besides SMT, the semantic phrase embed-dings can be used in other cross-lingual tasks (e.g. cross-lingual question answering) and monolin-gual applications such as textual entailment, ques-tion answering and paraphrase detection. Recently, phrase embedding has drawn more and more attention. There are three main perspectives handling this task in monolingual languages.
One method considers the phrases as bag-of-words and employs a convolution model to trans-form the word embeddings to phrase embeddings (Collobert et al., 2011; Kalchbrenner and Blun-som, 2013). Gao et al. (2013) also use bag-of-words but learn BLEU sensitive phrase embed-dings. This kind of approaches does not take the word order into account and loses much informa-tion. Instead, our bilingually-constrained recur-sive auto-encoders not only learn the composition mechanism of generating phrases from words, but also fine tune the word embeddings during the model training stage, so that we can induce the full information of the phrases and internal words.
Another method (Mikolov et al., 2013) deals with the phrases having a meaning that is not a simple composition of the meanings of its indi-vidual words, such as New York Times . They first find the phrases of this kind. Then, they regard these phrases as indivisible units, and learn their embeddings with the context information. How-ever, this kind of phrase embedding is hard to cap-ture full semantics since the context of a phrase is limited. Furthermore, this method can only ac-count for a very small part of phrases, since most of the phrases are compositional. In contrast, our method attempts to learn the semantic vector rep-resentation for any phrase.

The third method views any phrase as the mean-ingful composition of its internal words. The re-cursive auto-encoder is typically adopted to learn the way of composition (Socher et al., 2010; Socher et al., 2011; Socher et al., 2013a; Socher et al., 2013b; Li et al., 2013). They pre-train the RAE with an unsupervised algorithm. And then, they fine-tune the RAE according to the label of the phrase, such as the syntactic category in pars-ing (Socher et al., 2013a), the polarity in sentiment analysis (Socher et al., 2011; Socher et al., 2013b), and the reordering pattern in SMT (Li et al., 2013). This kind of semi-supervised phrase embedding is in fact performing phrase clustering with respect to the phrase label. For example, in the RAE-based phrase reordering model for SMT (Li et al., 2013), the phrases with the similar reorder-ing tendency (e.g. monotone or swap) are close to each other in the embedding space, such as the prepositional phrases. Obviously, this kind meth-ods of semi-supervised phrase embedding do not fully address the semantic meaning of the phrases. Although we also follow the composition-based phrase embedding, we are the first to focus on the semantic meanings of the phrases and propose a bilingually-constrained model to induce the se-mantic information and learn transformation of the semantic space in one language to the other. This section introduces the Bilingually-constrained Recursive Auto-encoders (BRAE), that is inspired by two observations. First, the recursive auto-encoder provides a reasonable composition mechanism to embed each phrase. And the semi-supervised phrase embedding (Socher et al., 2011; Socher et al., 2013a; Li et al., 2013) further indicates that phrase embedding can be tuned with respect to the label. Second, even though we have no correct semantic phrase representation as the gold label, the phrases sharing the same meaning provide an indirect but feasible way. Figure 2: A recursive auto-encoder for a four-word phrase. The empty nodes are the reconstruc-tions of the input.

We will first briefly present the unsupervised phrase embedding, and then describe the semi-supervised framework. After that, we introduce the BRAE on the network structure, objective function and parameter inference. 3.1 Unsupervised Phrase Embedding 3.1.1 Word Vector Representations In phrase embedding using composition, the word vector representation is the basis and serves as the input to the neural network. After learning word embeddings with DNN (Bengio et al., 2003; Col-lobert and Weston, 2008; Mikolov et al., 2013), each word in the vocabulary V corresponds to a vector x  X  R n , and all the vectors are stacked into
Given a phrase which is an ordered list of m words, each word has an index i into the columns of the embedding matrix L . The index i is used to retrieve the word X  X  vector representation using a simple multiplication with a binary vector e which is zero in all positions except for the i th index: Note that n is usually set empirically, such as n = 50 , 100 , 200 . Throughout this paper, n = 3 is used for better illustration as shown in Fig. 1. 3.1.2 RAE-based Phrase Embedding Assuming we are given a phrase w 1 w 2  X  X  X  w m , it is first projected into a list of vectors ( x 1 ,x 2 ,  X  X  X  ,x m ) using Eq. 1. The RAE learns the vector representation of the phrase by recur-sively combining two children vectors in a bottom-up manner (Socher et al., 2011). Fig. 2 illustrates an instance of a RAE applied to a binary tree, in which a standard auto-encoder (in box) is re-used at each node. The standard auto-encoder aims at learning an abstract representation of its input. For two children c 1 = x 1 and c 2 = x 2 , the auto-encoder computes the parent vector y 1 as follows: Where we multiply the parameter matrix W (1)  X  [ c we apply an element-wise activation function such as f = tanh (  X  ) , which is used in our experiments. In order to apply this auto-encoder to each pair of children, the representation of the parent p should have the same dimensionality as the c i  X  X .

To assess how well the parent X  X  vector repre-sents its children, the standard auto-encoder recon-structs the children in a reconstruction layer: and b (2) are parameter matrix and bias term for re-construction respectively, and f (2) = tanh (  X  ) .
To obtain the optimal abstract representation of the inputs, the standard auto-encoder tries to min-imize the reconstruction errors between the inputs and the reconstructed ones during training:
Given y 1 = p , we can use Eq. 2 again to com-pute y 2 by setting the children to be [ c 1 ; c 2 ] = [ y 1 ; x 3 ] . The same auto-encoder is re-used until the vector of the whole phrase is generated.
For unsupervised phrase embedding, the only objective is to minimize the sum of reconstruction errors at each node in the optimal binary tree: Where x is the list of vectors of a phrase, and A ( x ) denotes all the possible binary trees that can be built from inputs x . A greedy algorithm (Socher et al., 2011) is used to generate the optimal binary tree y . The parameters  X  = ( W,b ) are optimized over all the phrases in the training data. 3.2 Semi-supervised Phrase Embedding The above RAE is completely unsupervised and can only induce general representations of the Figure 3: An illustration of a semi-supervised RAE unit. Red nodes show the label distribution. multi-word phrases. Several researchers extend the original RAEs to a semi-supervised setting so that the induced phrase embedding can predict a target label, such as polarity in sentiment analysis (Socher et al., 2011), syntactic category in parsing (Socher et al., 2013a) and phrase reordering pat-tern in SMT (Li et al., 2013).

In the semi-supervised RAE for phrase embed-ding, the objective function over a (phrase, label) pair ( x,t ) includes the reconstruction error and the prediction error, as illustrated in Fig. 3.
 E ( x,t ;  X  ) =  X E rec ( x,t ;  X  )+(1  X   X  ) E pred ( x,t ;  X  ) Where the hyper-parameter  X  is used to balance the reconstruction and prediction error. For label prediction, the cross-entropy error is usually used to calculate E pred . By optimizing the above ob-jective, the phrases in the vector embedding space will be grouped according to the labels. 3.3 The BRAE Model We know from the semi-supervised phrase embed-ding that the learned vector representation can be well adapted to the given label. Therefore, we can imagine that learning semantic phrase embedding is reasonable if we are given gold vector represen-tations of the phrases.

However, no gold semantic phrase embedding exists. Fortunately, we know the fact that the two phrases should share the same semantic rep-resentation if they express the same meaning. We can make inference from this fact that if a model can learn the same embedding for any phrase pair sharing the same meaning, the learned embedding must encode the semantics of the phrases and the corresponding model is our desire.

As translation equivalents share the same se-mantic meaning, we employ high-quality phrase translation pairs as training corpus in this work. Accordingly, we propose the Bilingually-constrained Recursive Auto-encoders (BRAE), Figure 4: An illustration of the bilingual-constrained recursive auto-encoders. The two phrases are translations with each other. whose basic goal is to minimize the semantic dis-tance between the phrases and their translations. 3.3.1 The Objective Function Unlike previous methods, the BRAE model jointly learns two RAEs (Fig. 4 shows the network struc-ture): one for source language and the other for target language. For a phrase pair ( s,t ) , two kinds of errors are involved: 1. reconstruction error E rec ( s,t ;  X  ) : how well the learned vector representations p s and p t repre-sent the phrase s and t respectively? 2. semantic error E sem ( s,t ;  X  ) : what is the semantic distance between the learned vector rep-resentations p s and p t ?
Since word embeddings for two languages are learned separately and locate in different vector space, we do not enforce the phrase embeddings in two languages to be in the same semantic vector space. We suppose there is a transformation be-tween the two semantic embedding spaces. Thus, the semantic distance is bidirectional: the distance between p t and the transformation of p s , and that between p s and the transformation of p t . As a re-sult, the overall semantic error becomes: E sem ( s,t ;  X  ) = E sem ( s | t, X  ) + E sem ( t | s, X  ) (8) Where E sem ( s | t, X  ) = E sem ( p t ,f ( W l s p s + b l means the transformation of p s is performed as by p s , and after adding a bias term b l s we apply an element-wise activation function f = tanh (  X  ) . Finally, we calculate their Euclidean distance: E sem ( t | s, X  ) can be calculated in exactly the same way. For the phrase pair ( s,t ) , the joint error is: E ( s,t ;  X  ) =  X E rec ( s,t ;  X  ) + (1  X   X  ) E sem ( s,t ;  X  ) The hyper-parameter  X  weights the reconstruction and semantic error. The final BRAE objective over the phrase pairs training set ( S,T ) becomes: J 3.3.2 Max-Semantic-Margin Error Ideally, we want the learned BRAE model can make sure that the semantic error for the positive example (a source phrase s and its correct transla-tion t ) is much smaller than that for the negative example (the source phrase s and a bad translation this since the above semantic error E sem ( s | t, X  ) only accounts for positive ones.

We thus enhance the semantic error with both positive and negative examples, and the corre-sponding max-semantic-margin error becomes:
E  X  sem ( s | t, X  ) = max { 0 ,E sem ( s | t, X  ) It tries to minimize the semantic distance between translation equivalents and maximize the semantic distance between non-translation pairs simultane-ously. Using the above error function, we need to construct a negative example for each positive example. Suppose we are given a positive exam-ple ( s,t ) , the correct translation t can be converted into a bad translation t 0 by replacing the words in t with randomly chosen target language words. Then, a negative example ( s,t 0 ) is available. 3.3.3 Parameter Inference Like semi-supervised RAE (Li et al., 2013), the parameters  X  in our BRAE model can also be di-vided into three sets:  X  L : word embedding matrix L for two lan-guages (Section 3.1.1);  X  rec : recursive auto-encoder parameter matrices guages (Section 3.1.2);  X  sem : transformation matrix W l and bias term tation (Section 3.3.1).
To have a deep understanding of the parameters, we rewrite Eq. 10:
E ( s,t ;  X  ) =  X  ( E rec ( s ;  X  ) + E rec ( t ;  X  )) + (1  X   X  )( E  X  sem ( s | t, X  ) + E  X  sem ( t | s, X  )) = (  X E rec ( s ;  X  s ) + (1  X   X  ) E  X  sem ( s | t, X  s )) + (  X E rec ( t ;  X  t ) + (1  X   X  ) E  X  sem ( t | s, X  t )) We can see that the parameters  X  can be divided into two classes:  X  s for the source language and  X  t for the target language. The above equation also indicates that the source-side parameters  X  s can be optimized independently as long as the semantic representation p t of the target phrase t is given to compute E sem ( s | t, X  ) with Eq. 9. It is similar for the target-side parameters  X  t .

Assuming the target phrase representation p t is available, the optimization of the source-side parameters is similar to that of semi-supervised RAE. We apply the Stochastic Gradient Descent (SGD) algorithm to optimize each parameter: In order to run SGD algorithm, we need to solve two problems: one for parameter initialization and the other for partial gradient calculation.

In parameter initialization,  X  rec and  X  sem for the source language is randomly set according to a normal distribution. For the word embedding L s , there are two choices. First, L s is initialized ran-domly like other parameters. Second, the word embedding matrix L s is pre-trained with DNN (Bengio et al., 2003; Collobert and Weston, 2008; Mikolov et al., 2013) using large-scale unlabeled monolingual data. We prefer to the second one since this kind of word embedding has already encoded some semantics of the words. In this work, we employ the toolkit Word2Vec (Mikolov et al., 2013) to pre-train the word embedding for the source and target languages. The word em-beddings will be fine-tuned in our BRAE model to capture much more semantics.

The partial gradient for one instance is com-puted as follows: Where the source-side error given the target phrase representation includes reconstruction error and updated semantic error: Given the current  X  s , we first construct the binary tree (as illustrated in Fig. 2) for any source-side phrase using the greedy algorithm (Socher et al., 2011). Then, the derivatives for the parameters in the fixed binary tree will be calculated via back-propagation through structures (Goller and Kuch-ler, 1996). Finally, the parameters will be updated using Eq. 14 and a new  X  s is obtained.

The target-side parameters  X  t can be optimized in the same way as long as the source-side phrase representation p s is available. It seems a para-dox that updating  X  s needs p t while updating  X  t needs p s . To solve this problem, we propose an co-training style algorithm which includes three steps: 1. Pre-training: applying unsupervised phrase embedding with standard RAE to pre-train the source-and target-side phrase representations p s and p t respectively (Section 2.1.2); 2. Fine-tuning: with the BRAE model, us-ing target-side phrase representation p t to update the source-side parameters  X  s and obtain the fine-meanwhile using p s to update  X  t and get the fine-tuned p 0 t , and then calculate the joint error over the training corpus; 3. Termination Check: if the joint error reaches a local minima or the iterations reach the pre-defined number (25 is used in our exper-iments), we terminate the training procedure, oth-erwise we set p s = p 0 s , p t = p 0 t , and go to step 2. With the semantic phrase embeddings and the vec-tor space transformation function, we apply the BRAE to measure the semantic similarity between a source phrase and its translation candidates in the phrase-based SMT. Two tasks are involved in the experiments: phrase table pruning that dis-cards entries whose semantic similarity is very low and decoding with the phrasal semantic similari-ties as additional new features. 4.1 Hyper-Parameter Settings The hyper-parameters in the BRAE model include the dimensionality of the word embedding n in Eq. 1, the balance weight  X  in Eq. 10,  X s in Eq. 11, and the learning rate  X  in Eq. 14.

For the dimensionality n , we have tried three settings n = 50 , 100 , 200 in our experiments. We empirically set the learning rate  X  = 0 . 01 . We draw  X  from 0.05 to 0.5 with step 0.05, and  X s all error of the BRAE model is employed to guide the search procedure. Finally, we choose  X  = 4.2 SMT Setup We have implemented a phrase-based translation system with a maximum entropy based reordering model using the bracketing transduction grammar (Wu, 1997; Xiong et al., 2006).

The SMT evaluation is conducted on Chinese-to-English translation. Accordingly, our BRAE model is trained on Chinese and English. The sentence pairs and 1.1M entity pairs with 27.7M Chinese words and 31.9M English words. A 5-gram language model is trained on the Xinhua por-tion of the English Gigaword corpus and the En-glish part of bilingual training data. The NIST MT03 is used as the development data. NIST MT04-06 and MT08 (news data) are used as the test data. Case-insensitive BLEU is employed as the evaluation metric. The statistical signif-icance test is performed by the re-sampling ap-proach (Koehn, 2004).

In addition, we pre-train the word embedding with toolkit Word2Vec on large-scale monolingual data including the aforementioned data for SMT. The monolingual data contains 1.06B words for Chinese and 1.12B words for English. To ob-tain high-quality bilingual phrase pairs to train our BRAE model, we perform forced decoding for the bilingual training sentences and collect the phrase pairs used. After removing the duplicates, the remaining 1.12M bilingual phrase pairs (length ranging from 1 to 7) are obtained. 4.3 Phrase Table Pruning Pruning most of the phrase table without much impact on translation quality is very important for translation especially in environments where memory and time constraints are imposed. Many algorithms have been proposed to deal with this problem, such as significance pruning (Johnson et al., 2007; Tomeh et al., 2009), relevance prun-ing (Eck et al., 2007) and entropy-based pruning (Ling et al., 2012; Zens et al., 2012). These algo-rithms are based on corpus statistics including co-occurrence statistics, phrase pair usage and com-position information. For example, the signifi-cance pruning, which is proven to be a very ef-fective algorithm, computes the probability named p-value, that tests whether a source phrase s and a target phrase t co-occur more frequently in a bilin-gual corpus than they happen just by chance. The higher the p-value, the more likely of the phrase pair to be spurious.

Our work has the same objective, but instead of using corpus statistics, we attempt to measure the quality of the phrase pair from the view of seman-tic meaning. Given a phrase pair ( s,t ) , the BRAE model first obtains their semantic phrase represen-tations ( p s ,p t ) , and then transforms p s into target semantic space p s  X  , p t into source semantic space p  X  . We finally get two similarities Sim ( p s  X  ,p t ) and Sim ( p t  X  ,p s ) . Phrase pairs that have a low similarity are more likely to be noise and more prone to be pruned. In experiments, we discard the phrase pair whose similarity in two directions
Table 1 shows the comparison results between our BRAE-based pruning method and the signif-icance pruning algorithm. We can see a common phenomenon in both of the algorithms: for the first few thresholds, the phrase table becomes smaller and smaller while the translation quality is not much decreased, but the performance jumps a lot at a certain threshold (16 for Significance pruning, 0.8 for BRAE-based one).

Specifically, the Significance algorithm can safely discard 64% of the phrase table at its thresh-old 12 with only 0.1 BLEU loss in the overall test. In contrast, our BRAE-based algorithm can remove 72% of the phrase table at its threshold 0.7 with only 0.06 BLEU loss in the overall eval-uation. When the two algorithms using a similar 36% in Significance), the BRAE-based algorithm outperforms the Significance algorithm on all the test sets except for MT04. It indicates that our BRAE model is a good alternative for phrase table pruning. Furthermore, our model is much more in-is used for embedding dimensionality. tuitive because it is directly based on the semantic similarity. 4.4 Decoding with Phrasal Semantic Besides using the semantic similarities to prune the phrase table, we also employ them as two in-formative features like the phrase translation prob-ability to guide translation hypotheses selection during decoding. Typically, four translation prob-abilities are adopted in the phrase-based SMT, in-cluding phrase translation probability and lexical weights in both directions. The phrase transla-tion probability is based on co-occurrence statis-tics and the lexical weights consider the phrase as bag-of-words. In contrast, our BRAE model fo-cuses on compositional semantics from words to phrases. Therefore, the semantic similarities com-puted using our BRAE model are complementary to the existing four translation probabilities. The semantic similarities in two directions Sim ( p s  X  ,p t ) and Sim ( p t  X  ,p s ) are integrated into our baseline phrase-based model. In order to in-vestigate the influence of the dimensionality of the embedding space, we have tried three different set-tings n = 50 , 100 , 200 .
 As shown in Table 2, no matter what n is, the BRAE model can significantly improve the trans-lation quality in the overall test data. The largest improvement can be up to 1.7 BLEU score (MT06 for n = 50 ). It is interesting that with dimen-sionality growing, the translation performance is not consistently improved. We speculate that us-ing n = 50 or n = 100 can already distinguish good translation candidates from bad ones. 4.5 Analysis on Semantic Phrase Embedding To have a better intuition about the power of the BRAE model at learning semantic phrase embed-dings, we show some examples in Table 3. Given the BRAE model and the phrase training set, we search from the set the most semantically similar English phrases for any new input English phrase.
The input phrases contain different number of words. The table shows that the unsupervised RAE can at most capture the syntactic property when the phrases are short. For example, the unsupervised RAE finds do not want for the in-put phrase do not agree . When the phrase be-comes longer, the unsupervised RAE cannot even capture the syntactic property. In contrast, our BRAE model learns the semantic meaning for each phrase no matter whether it is short or rel-atively long. This indicates that the proposed BRAE model is effective at learning semantic phrase embeddings. 5.1 Applications of The BRAE model As the semantic phrase embedding can fully rep-resent the phrase, we can go a step further in the phrase-based SMT and feed the semantic phrase embeddings to DNN in order to model the whole translation process (e.g. derivation structure pre-diction). We will explore this direction in our fu-ture work. Besides SMT, the semantic phrase em-beddings can be used in other cross-lingual tasks, such as cross-lingual question answering, since the semantic similarity between phrases in differ-ent languages can be calculated accurately.

In addition to the cross-lingual applications, we believe the BRAE model can be applied in many monolingual NLP tasks which depend on good phrase representations or semantic similarity be-tween phrases, such as named entity recognition, parsing, textual entailment, question answering and paraphrase detection. 5.2 Model Extensions In fact, the phrases having the same meaning are translation equivalents in different languages, but are paraphrases in one language. Therefore, our model can be easily adapted to learn semantic phrase embeddings using paraphrases.
 Our BRAE model still has some limitations. For example, as each node in the recursive auto-encoder shares the same weight matrix, the BRAE model would become weak at learning the seman-tic representations for long sentences with tens of words. Improving the model to semantically em-bed sentences is left for our future work. This paper has explored the bilingually-constrained recursive auto-encoders in learning phrase embeddings, which can distinguish phrases with different semantic meanings. With the ob-jective to minimize the semantic distance between translation equivalents and maximize the semantic distance between non-translation pairs simultane-ously, the learned model can semantically embed any phrase in two languages and can transform the semantic space in one language to the other. Two end-to-end SMT tasks are involved to test the power of the proposed model at learning the semantic phrase embeddings. The experimental results show that the BRAE model is remarkably effective in phrase table pruning and decoding with phrasal semantic similarities.

We have also discussed many other potential ap-plications and extensions of our BRAE model. In the future work, we will explore four directions. 1) we will try to model the decoding process with DNN based on our semantic embeddings of the basic translation units. 2) we are going to learn semantic phrase embeddings with the paraphrase corpus. 3) we will apply the BRAE model in other monolingual and cross-lingual tasks. 4) we plan to learn semantic sentence embeddings by automati-cally learning different weight matrices for differ-ent nodes in the BRAE model.
 We thank Nan Yang for sharing the baseline code and anonymous reviewers for their valu-able comments. The research work has been partially funded by the Natural Science Founda-tion of China under Grant No. 61333018 and 61303181, and Hi-Tech Research and Develop-ment Program (863 Program) of China under Grant No. 2012AA011102.
