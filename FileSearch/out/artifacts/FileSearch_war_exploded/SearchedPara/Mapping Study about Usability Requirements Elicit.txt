 The goal of developing usable systems has been dealt with by the Human Computer Interaction (HCI) and Software Engineering (SE) fields. In both communities, usabili-ty is usually considered in the last stages of the software development process, when the interfaces have already been designed. In cluding usability characteristics at these last stages could affect the system architecture. To minimize this problem, usability should be included at the requirements elicitation stage [5], [20]. The SE community has broad experience in early requirements elicitation and there are sound methods. However, these methods are mainly focused on functional requirements and Non-Functional Requirements (NFR) have historical ly been forgotten at this early stage. According to many authors, fulfilling func tional requirements is not enough to create a quality product [49]. Usability is a key factor in obtaining good acceptance rates. 
In this study, we aim to identify the existing methods for capturing usability re-quirements. To do this, we perform a Mapping Study (MS) based on the works per-formed by Kitchenham [29]. A MS provides an objective procedure for identifying the nature and extent of the research that is available to answer a particular question. These studies are also useful to identify gaps in current research and to suggest areas for further investigation. Of all the software development methods, we focus on the Model-Driven Development (MDD). MDD aims to develop software by means of a conceptual model, which is the input for a model compiler that generates the system code implementation. The SE community has been working with this paradigm, and, nowadays, there are sound methods and tools (e.g. OO-Method [39], WebRatio [2], OOHDM [12]). However, to the authors X  knowledge, none of these methods deal with usability. In general, existing MDD methods deal with usability when the models that represent the functional requirements have been defined and the code has been gener-ated. At this stage, if the analyst needs to improve the system usability, the code must be modified manually. Moreover, some changes require the architecture to be re-worked [5], [20]. These are the reasons why more efforts should be made to include usability in MDD methods, and this MS aims to be a step forward this direction. 
Our long term target is twofold: (1) to improve current practices of usability re-quirements elicitation; and (2) to enhance the existing MDD methods to support usa-bility requirements elicitation. The MS can help us to identify the advantages and disadvantages of each existing capture method, as a previous step for our target. However, the MS is not exclusive to MDD; it can analyze in detail any software de-velopment method that includes usability requirements elicitation. 
This study is structured as follows. Section 2 reviews related works about usability requirements elicitation. Section 3 describes the design process of the MS. Section 4 shows the results obtained from the study. Section 5 presents a discussion about the results. Section 6 presents our conclusions and future work. Usability has been studied in several mapping studies and systematic reviews. The MS provides a systematic and objective procedure for identifying all the information that is available to answer a particular re search question, topic area, or phenomenon of interest [29]. This section summarizes the different studies on requirements elicita-tion techniques, NFRs, and development methods based on usability. 
First, we focus on studying techniques for capturing requirements that deal with usability. In this area, Dieste [13] updates a Systematic Review (SR) where interview-based techniques seem to be the most effective capture techniques. Carrizo [7] presents a framework to support decision -making, where some capture techniques responds better to certain project features than other capture techniques. Second, we focus on NFRs, since usability is considered by many authors to be a NFR. In the state-of-the-art written by Chung [11], the reviewed works are classified into six areas: software variability, requirements analysis, requirements elicitation, require-ments reusability, requirements traceability, and aspect-oriented development. Svens-son [50] performs a SR to identify: elicitation requirements, metrics, dependencies, cost estimation, and prioritization as important areas for managing quality require-ments. Mellado [34] carries out a SR about security requirements engineering in order to summarize evidence regarding security. The precision and reliability of the infor-mation are his main contribution. Mehwish [ 33] reports a SR to collect evidence of software maintainability prediction. The results suggest that there is little evidence for the effectiveness of these predictions. Third, we focus on studies that deal with me-thods to build usable systems. Folmer [20] performs a survey to explore the feasibility account design methods for usability design and evaluation tools. He concludes that there are no techniques for dealing with usability at the architectural level. In Fernan-dez X  X  work [18], the objective of the MS is to summarize the current knowledge of methods in order to evaluate usability in web applications. The results show the need for usability evaluation methods that are specific to the web. 
In summary, we state that most of the existing research publications related to usabil-ity are focused on: inclusion of usability features at the design stage; usability evaluation at early phases; methods to assess usability at the implementation stage; usability evalu-ation throughout the web development process; and techniques for usability specifica-tion during the software development process. However, we have not found mapping study the existing literature concerning usability requirements elicitation in order to summarize current knowledge. This information will be used in a future work to design a framework for usability requirements elicitation using existing guidelines. The MS provides a wide overview of a research area to identify the quantity and type of research and results available within it. We considered the following elements: research questions, search strategy, selection criteria, quality assessment, data extrac-tion strategy [28]. Next, we apply these elements to our MS. 
Our research question is:  X  X hat are the proposals to elicit usability requirements throughout the software development process? X . It includes methods, notations, guidelines, tools, and empirical validations which are related to the usability area. The main goal is divided into six subgoals since the general research question is very ab-stract and involves many concepts. Each su bgoal has been formulated as a research subquestion. These are: SQ 1.1 Methods to elicit usability requirements . It aims to study whether or not the proposed methods (including NFR methods) can capture usability requirements at early stages; SQ1.2 Methods to elicit interaction require-to usability. These methods are included because some authors improve usability by means of visual characteristics; SQ 1.3 Usability guidelines to elicit usability re-quirements . It aims to study the recommendations that help the analyst to identify aims to study the tools or prototypes that support the methods to elicit usability re-quirements; SQ1.5 Notations to elicit usability requirements . It aims to identify the existing representations in which the usability requirements are depicted. The target is to identify which notations are the most frequently employed for capturing usability requirements; SQ1.6 Empirical validation environment . It aims to study whether the proposal to elicit requirements was validated in an academic context or in industry. The search strategy is composed of: Defining the search sources. These sources are based on digital libraries that include peer-reviewed literature, such as: IEEExplor e, ACM Digital Library, Springer Link, and Science Direct. Our main tool for searching in all these libraries was Sciverse Scopus, since it allows searching in all the mentioned digital libraries (among others). The sources explored were the proceedings of conferences, journals, books, and workshops. The search area is restricted to the computer science area. The search period is from 2000 to 2011. Building and applying the search string. The search string is a set of terms to obtain the publications that answer the research question. Our search string is composed of two substrings: Usability Requirements and Software Engineering. With the first we collect publications related to how to elicit Usability Requirements, including soft-ware quality features and works related to requirements elicitation. The second sub-string is related to Software Engineering concepts based on requirements elicitation. Search string = (Usability Requirement) AND (Software Engineering)
Usability Requirement = ( usability requirement OR user requirement OR usability elicitation OR interaction requirement OR non-functional OR usability guidelines ). 
Software Engineering = ( MDD OR model-driven OR MDA OR notation OR tool OR interface OR engineering OR test ). 
We have included the term  X  X on-functional X  into the  X  X sability Requirements X  group since usability is frequently considered as a NFR. 
The selection criteria contains inclusion criteria (IC): IC1) Does the work define how to extract usability requirements?; IC2) Is the proposal applied to an environment based on MDD conceptual models?; IC3) Does the work define how to represent the requirements of usability? and exclusion criteria (EC): EC1) Publications focused on guidelines, notations, and tools where usability has not been considered or has not been included; EC2) Publica tions that consider only functional requirements; EC3) Publications written in a language that is not English. Next, we select the publications through a systematic process: Reading the title and the abstract. A total of 150 publications are returned by the search string, which are divided into three groups (50 publications) to be independent-ly evaluated by three reviewers in order to apply the inclusion and exclusion criteria. The publications whose inclusion is doubtful must be discussed by the three reviewers tions, which are based only on the title and abstract of the publications. This selection is called  X  X otential publications X . Reading the whole publication. At this time, the whole publication is read. The inclu-sion and exclusion criteria are applied agai n for each potential publication, which are total of 27  X  X nitial selected publications X , which are considered to be relevant. Searching in References . In several cases there may be some relevant publications prior to the year 2000, such as Nielsen X  X  work [36]. In order to avoid discarding these interesting older publications, we review all the publications referenced in publica-tions from 2000 to 2011. If a publication was written before 2000 and it has not been referenced in the last 12 years, then that work is not relevant for the community, and it is therefore discarded from our study. The process to review the references of publi-cations from initial selected publications obtains 5 publications. 2 publications sup-port inclusion criteria and are added to initial selected publications. Finally, a total of 29 publications are our  X  X elected publications X . In order to assess the reliability of inclusion, we apply the statistical measure of Fleiss X  Kappa [19]. This statistic assesses the reliability of agreement between a fixed number of rates when classifying items. Its value ranges between 0 (poor agreement) and 1 (full agreement). We take a sample of 20 publications of the 65 potential publi-cations, 10 of which are randomly selected and 10 of which are defined by the re-viewers from the 29 selected publications. The Fleiss X  Kappa value is 0.63, which is considered to be a  X  X onsiderable level X . 1. Is the method to elicit the usability requirements clear? 2. Are the guidelines to elicit requirements comprehensible? 3. Are the guidelines to elicit requirements useful in other contexts? 4. Are the publications tools downloadable? 5. Is there a clear case study or example illustrating the proposal? 6. Is the whole proposal empirically validated? 7. Are the results clearly explained? 8. Is the notation to elicit requirements easy to learn? 9. Has the publication been published in journal or conference proceedings? 10. Has the publication been cited by other authors? 
In order to perform the quality assessment , we use the Likert-Scale to be filled out by three reviewers for each selected publi cation. Table 1 contains closed-questions that are classified into two groups: Subj ective Questions and Objective Questions. For question N X  9, we consider conferences at CORE ranking [38]. The publication is  X  X ery important X  if the conference is CORE A or B or if it is a book section,  X  X mpor-tant X  if the conference is CORE C or if it is a Workshop,  X  X ot important X  when the conference is not any CORE. For journals, the Journal Citation Report (JCR) [23] classification is used. The publication is considered to be  X  X ery important X  when it appears in JCR,  X  X mportant X  when it does not appear in JCR but is indexed in other lists, and  X  X ot important X  when it is not published in any known list. For question N X  10, we use the H factor, which identifies th e number of citations that each publication receives from other authors. The Publish or Perish [1] tool was used. In order to iden-tify the quality of each publication, the three reviewers filled out the quality question-naire. The aggregation of all the reviewers is performed by means of an arithmetic mean. After calculating the arithmetic mean for each question, we add these values, providing a single number between -10 and 10 which is denominated Quality Score. We consider that the Quality Score publication is  X  X ery good X  if it is more than 3,  X  X ood X  if it is between -2 and 2.99, and  X  X ad X  if it is less than -2 (See Fig. 2b). 
The data extraction strategy consists of classifying the possible answers for each research subquestion. The classifications are defined to facilitate the answer for our research question. These are:  X 
SQ1 Methods to elicit usability requirements. a) Yes b) No  X 
SQ2 Methods to elicit interaction requirements. a) Yes b) No  X 
SQ3 Guidelines to elicit usability requirements. a) Existing b) New c) Not exist  X 
SQ4 Tools to support the usability requirements elicitation a) Interface design (as-sistant to design) b) Model development c) Not Exist  X 
SQ5 Notations to elicit usability requirements. a) UML b) Natural Language (workshop sessions, checklists, questionnaires, heuristics, brainstorming, or inter-views) c) i* framework d) CTT (Concur Task Trees) [40] e) Formal. (logical oper-ators or grammars) f) QOC (Question Option Criteria) [31] g) BPMN h) Not exist  X 
SQ6 Empirical validation environment. a) Industrial b) Academic c) Not Exist SUMMARY Sources from Search Studies. The selected publications used in our MS are published in different sources. Table 2 shows the 65 potential publications and the 29 selected publications, classified by conference, journal, book, workshop, and other sources. Table 3 shows publications presented in conferences only. They are classified by level of the conference according to the CORE list. Finally, Table 4 shows publica-tions published in journals only. The classification is based on the JCR list. Selected Publication Analysis. Table 5 shows the results of the 29 selected publica-tions according to the data ex traction strategy. Note that the answer for research sub-question SQ5 is not exclusive, i.e. more than one choice can be the answer. SQ1: A) Yes 24.14% B) No 75.86%; SQ2: A) Yes 17.24% B) No 82.76%; SQ3: A) Existing 31.03% B) New 24.14% C) Not Exist 44.83%; SQ4: A) Interface De-sign 17.24% B) Model Development 24.14% C) Not Exist 58.62%; SQ5: A) UML 41.38% B) Natural Language 27.59% C) i* 27.59% D) CTT 13.79% E) For-mal 6.9% F) QOC 6.9% G) BPMN 3.45% J) Not Exist 17.24% SQ6: A) Industrial 10.34% B) Academic 58.62% C) Not Exist 31.03%. Next, we summarize the most relevant outcomes for each research subquestion: SQ1 Methods to elicit usability requirements. There are few methods that propose cap-turing usability requirements, and usually they are included within NFR methods. In general, the requirements elicitation process uses traditional techniques (e.g. interviews, questionnaires, checklists, workshops) to elicit NFR at the same time the system func-tionality and architecture are defined [45], [14], [25]. The most common goals of the studied NFR methods is to elicit measurable NFRs such a way they can be evaluated are applied to a specific context. Therefore, a holistic quality model that fits every con-text does not exist, and NFR methods only provide basic requirements management by means of extensions [14]. The major benefits are the enhancement of the communica-although some methods [25] tend to use more resources than others. The results indicate a limited number of approaches that deal with usability requirements at early stages. SQ2 Methods to elicit interaction requirements. Methods to specify interaction re-quirements are based on the construction of a model and the definition of structural patterns for different design solutions [38], [37], [6]. These models support the syste-matic analysis of interaction requirements th at can be selected from artefacts like a library of interaction attributes [47], [45]. These methods improve usability by means of applying formal modelling to analyze interactive systems systematically [6]. How-ever, further work is needed to deal with dynamic specifications that depend on sys-tem functionality. SQ3 Guidelines to elicit usability requirements. The publications aim to overcome the the different interpretations of the guidelines by the stakeholders. The methods that use existing guidelines, for instance ISO 9241-11 or ISO 9126, provide guidelines to determine usability requirements according to the definition of usability. They are understandable and can be implemented in a specific context [8], [32], [14], [51]; however their application is not an easy task [25], [21], [47]. The guidelines related to functional usability features are more practical, but they need to specify the usability feature by means of design patterns in the architectural design [37]. On the other hand, the new guidelines show a variety of representations (e.g. catalogues, metho-dologies, styles) [10], [22], [30] that are used to elicit usability requirements in differ-ent situations. All these representations allow to reuse its knowledge, to add new knowledge, to combine organizational memory or to combine different requirement scenarios. Other representations are based on patterns, templates, or models [27], [26], [38]. These artefacts can be improved or adapted according to which usability requirements are being captured. Nowadays, the guidelines do not provide precise, practical support to address usability requir ements elicitation at the early stages. SQ4 Tools to support usability requirements elicitation. These publications present tools to support: frameworks [45], structured styles [21], scenarios [48], notations [32], and methods [47]. The interface design tools support the requirements specifica-tion and validation through task flows and scenarios. Their main goals are focused on relating design options with functional and non-functional requirements within the incorporate a mechanism of transformation, (for example, from task flow diagrams to formal representations [45], [48]) and to solve traceability problems. The tools that are model-based can resolve this inconvenience by means of a global integration ap-proach among notations and tools. However this is not an easy task [4], since most tools focus specifications on requirements models or requirements metamodels. In order to define a elicitation process, the use of templates that are obtained through users (detailing every significant characteristic [21]) are common. SQ5 Notations to elicit usability requirements. The different notations are used in different stages of the software development process, and more than one notation is usually applied to the development method [28], [51]. The user requirements specifi-cations are usually presented to end-users in normal text, even though the analyst works with languages based on models (SysML, UML). These requirements are based on a series of interviews and studies with end-users [46], [25], [14]. Some proposals aim to integrate functional requirements and NFR in the same elicitation process. These works propose a metamodel that combines UML with PLUS [51], [35], [45]. Therefore, UML and Natural Language are the most widely used notations (41.38% and 27.59%). In Formal notation, the specification is structured using hierarchical interfaces components that describe all the actions and visible attributes of the system [6]. In general, the other studied notations are currently supported by patterns, scena-rios, and formatted templates in order to visualize and implement usability require-ments [6], [38], [48], [25]. These representations help analysts to elicit requirements, even though they are not always easily understood by the end-user. SQ6 Empirical validation environment. We observe that case studies, experiments and do not have explicit metrics to evaluate the usability requirements elicitation. In general, existing validations are focused on quantitative [24], [35], [27] and qualitative usability scenarios [27]. All the studied publications share the same protocol for the empirical validation. First, the publication proposes a method, technique or model to elicit usabili-ty requirements. Second, the publication details the results of the validation. Third, there is a discussion where a qualitative analysis is performed in detail and some lessons learned are shown. [47], [27], [48], [15]. Studied publications are focused on evaluating a few usability features; however, the study of a reduced number of features is not enough to consider software as being usable. The patterns [6], [47], [37], [15], scenario management [48], [9], [21], checklists [14], work sessions [25], and templates [6] are the most common artefacts used to evaluate usability and other NFRs. Graphics of Mapping Results. We present four graphics of the MS results. Two correspond to comparison between research subquestions and the others correspond to the potential and selected publications and to the Quality Score of the selected publi-cations. The six research subquestions give us an overview of the usability require-ments and how they are related. Apart from reinforcing our conclusions of this study, this information can highlight some gaps that should be researched further. Fig. 1a shows comparisons between research subquestions SQ1, SQ2, SQ3, and SQ4. The most important outcomes are the following: there is not any new guideline to elicit usability requirements or interaction requirements; there is the same number of publications where the tool is a su pport for interface design and model develop-ment; there are a large number of publications that do not address methods of usabili-ty requirements elicitation or methods of interaction requirements elicitation. 
Fig. 1b shows comparisons between the research subquestions SQ4 and SQ5. The most important outcomes are the following: UML, Natural Language, and CTT are notations used by model development tools and by design interface tools; BPMN and QOC are notations that are not used by model development tools; i* and Formal are notations that are not used by interface design tools. 
Fig. 2a shows the number of potential publications and selected publications classi-year that had the most publications for improving usability requirements elicitation. The year 1998 is included in the graphics because the two publications obtained from the referenced publications were published that year. None of the selected publica-tions were published in 2001, 2002, 2003, and 2011. 
Fig. 2b shows a frequency graphic that describes the quality assessment of the se-lected publications. This graphic is obtai ned from the Quality Score of selected publications, which can be  X  X ery good X ,  X  X ood X , and  X  X ad X , according to our quality criteria. The graphic shows a high number of publications that are considered to be  X  X ood X  publications and  X  X ery good X  publications. Both results make up 95% of the total of the selected publications. In the selected publications, the usability requirements elicitation is usually performed at the analysis stage [46], [15], i.e., once all functional requirements have been cap-tured. This late capture involves changes in system architecture since some usability requirements are related to functionality [5], [20]. In general, the methods used to elicit usability requirements deal with usability when the functional requirements have been previously captured by means of traditional techniques (e.g. interviews, questionnaires, focus groups, use cases) [35], [3]. 
The analysis of the results shows that there are very few publications that clearly address how to perform the capture process of usability requirements at early stages. Moreover, existing approaches do not propose a precise and unambiguous notation to represent these requirements, which makes difficult to apply them in real systems. There are some publications where usability requirements elicitation is performed at the design stage together with interaction requirements elicitation [25], [45], [24]. 
When the usability topic is dealt with at requirements elicitation, the ISO standards are used as guidelines to be applied in software development systems. For instance, the ISO 9241-11 is considered to be a basic reference for some practitioners, re-searchers, and designers [25], and for any kind of requirements the standard ISO the main problem is the correct application and complete understanding by the end user. Guidelines are only built up in a general way, but they are not a total support for usability system development. There are some proposals that aim to help the require-ments engineers to address usability requirements from the early stages by means of GUIDE rules [22] and a catalogue based on the i* framework [10]. Both techniques are context-specific, even though GUIDE uses a case-based repository for taking decisions and i* framework collects a large amount of knowledge to achieve usability goals. 
Another aspect that is observed in selected publications is the use of artefacts, such as: patterns, scenarios, and templates, which are frequently used as support for me-thods to elicit usability requirements and interaction requirements [6], [48], [16]. The methods proposed in the selected publicatio ns are inflexible and require considerable been defined [22]. The guidelines, notations, and artefacts used in these methods are eral, guidelines for usability requirements elicitation are defined in a very generic way for different abstraction levels [8]. 
The tools to represent usability requirements which are based on a conceptual model have great possibilities of being useful for building extensions to other mod-usability requirements. For large project, these tools are too limited, since the identifi-cation of requirements and modularization of the system need more special processes, methods and techniques. Moreover, once these requirements have been structured and gathered in a tool, they could be reused in later projects. Only few approaches include tools to support existing eliciting methods. Most approaches must be applied manual-makes difficult the adoption of those approaches in industrial environments. The ne-cessity of a tool is more urgent in those proposals that use several notations and com-bine the use of different artifacts (e.g. templates, questionnaires, workshops) [30], [14], [47]. Working with all these items manually is a huge effort for the analyst. 
Validation methods are another crucial aspect for the evaluation of a proposal. The selected publications present case studies, experiments, and examples that do not show whether or not the inclusion of usability requirements produces a positive im-pact on the final product. In addition, only a small percentage of proposals have been applied in an industrial context [24]. 
Many works propose eliciting usability requirements with a graphical notation [10], [9], [6]. This enhances the abstrac tion for the requirements engineer but some-times can difficult the end-user participation, who usually cannot understand those notations. Other proposals elicit usability requirements textually [25], [8], [48] facili-tating the end-user participation. However, these proposals cannot be used for a development method based on models, since models do not exist. 
If we focus our analysis on approaches to capture usability requirements in MDD environments, we notice that there are few proposals [38], [17], [46], [4]. Moreover, usability requirements are not usually consid ered as a main topic in those proposals. Usability requirements are combined with other NFR or with functional requirements, which makes difficult to focus the elicitation process on usability issues. Moreover, transformations among models are not discussed in those publications even though this is a basic pillar in the MDD paradigm (where transformations can be automated or semi-automated). Another problem of the existing proposals within the MDD para-real systems. Existing approaches are just theoretical proposals that have not been implemented yet. 
Note that our mapping study has some limitations. The first one is that we cannot ensure that all existing publication related to usability requirements have been considered. We have focused our research on Scopus, which is a tool that looks for publications in several digital libraries, such as IEEExplore, ACM Digital Library, Springer Link, and Science Direct (among others). In order to minimize the loss of some important publications, we have analyzed references from publications retrieved by Scopus. However, publications that have not been published in those libraries or publications that have not been referenced are out of our search. Second, some found publications were not accessible (our univers ity had no license to read them). This happened with 6 publications from 65. If we compare inaccessible publications with the total amount of publications, we notice that the percentage of unread publications is a minimum portion 9.23%. Throughout the whole mapping study we have been guided by an expert at mapping studies and systematic reviews. This expert helped us in the application of the protocol and reco mmended us some tools. For example, the search string can find the same publication more than once. This MS combines usability aspects from both the Software Engineering (SE) com-munity and the Human-Computer Interaction (HCI) community. We have explored the development methods that consider usability as a requirement from the SE com-munity. We have studied the guidelines and heuristics from the HCI community that are used to develop usable applications. The MS aims to review existing studies re-lated to usability requirements in both communities. Our main target is specially fo-cused on proposals to elicit usability requirements from the early stages of the soft-ware development process. 
The MS has been performed according to Kitchenham X  X  methodology, focusing on publications returned by the search string. The quality assessments of the publications were developed in order to contrast the significance of the selected publications, where 97% is composed of good publications and very good publications. 
Using the results of the MS, we can conclude that there is a clear research line in the field of usability requirements in MDD environments. Usually, MDD methods have historically been focused on modelling behaviour and persistency, but relegating inte-raction (and particularly usability) to a manual implementation. This manual implemen-tation clearly contradicts the MDD paradigm, which advocates that the analyst must work with holistic conceptual models, where every feature of the system (including usability features) could be represented. We plan to develop a framework to elicit usa-bility requirements in such a way that it could be used in any MDD method. The main benefit of embedding usability requirements in a MDD method is that the next steps of the software development process can be derived from the requirements elicitation step. We plan to develop transformation rules from the usability requirements to generate analysis and design models. Furthermore, the MS can also be used as a starting point for future systematic reviews based on usability requirements elicitation. 
