 Online music streaming services (MSS) experienced exponential growth over the past decade. The giant MSS providers not only built massive music collection with metadata, they also accumu-lated large amount of heterogeneous data generated from users, e.g. listening history, comment, bookmark , and user generated playlist . While various kinds of user data can potentially be used to enhance the music recommendation performance, most existing studies only focused on audio content features and collaborative filtering approaches based on simple user listening history or mu-sic rating. In this paper, we propose a novel approach to solve the music recommendation problem by means of heterogeneous graph mining. Meta-path based features are automatically generated from a content-rich heterogeneous graph schema with 6 types of nodes and 16 types of relations. Meanwhile, we use learning-to-rank ap-proach to integrate different features for music recommendation. Experiment results show that the automatically generated graph-ical features significantly ( p &lt; 0 . 0001 ) enhance state-of-the-art collaborative filtering algorithm.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Music Recommendation; Meta-Path; Feature Generation; Feature Selection In the past decade, online music streaming services (MSS), i.e., Pandora and Spotify, experienced exponential growth. The sheer volume of music collection makes music recommendation increas-ingly important and the related algorithms are well-documented. In prior studies, most algorithms employed content-based model (CBM) and collaborative filtering (CF) [8]. The former one fo-cuses on acoustic/signal features extracted from audio content, and the latter one investigates music rating and user listening history. c  X  Actually, MSS generated user data present significant heterogene-ity. Taking user-music relationship as an example, comment, book-mark , and listening history may potentially contribute to music rec-ommendation in very different ways. Furthermore, user and music can be implicitly related via more complex paths, e.g., user-play-artist-perform-music . From this viewpoint, user-user, music-music or user-music relationship can be much more complex than the classical CF approach assumed.

In this paper, we propose a novel approach to address the mu-sic recommendation problem from the heterogeneous graph min-ing viewpoint, where 6 different types of nodes interact through 16 types of relationships. The recommendation problem, then, be-comes a (supervised) random walk problem on the graph. Com-pared with earlier related studies, this study investigates the com-prehensive relationships among different kinds of objects for mu-sic recommendation. Take [1] as an example, Bu et al., integrated acoustic features and CF information by using hypergraph mining approach. A number of hyperedges were proposed to address the user-music relationship. However, this study only focused on user-tag-music relationship (as a hyperedge), and other types of relations were not explored.

As Figure 1 shows, in this study, the constructed heterogeneous music graph is more complex than most existing graph mining stud-ies, which challenges the classical approaches. For instance, Liu et al., [5] and Lao &amp; Cohen [4] used relatively simple heterogeneous graph and manually generated meta-path features for scholarly rec-ommendation, where each feature represents a ranking hypothesis. However, we can hardly use this approach for this study because of the complexity of the music graph schema. For example, if we restrict the path length to 4 or smaller, 259 candidate meta-paths between user and song nodes can be identified on this heteroge-neous graph schema. With so many potential meta-paths, there is no guarantee that manually selected meta-path collection can op-timize the recommendation performance. In this pilot study, we select a subset of meta-path features from the graph schema using the training data. Then, learning to rank method is utilized to gen-erate the music recommendation model. Results show that the new method can significantly ( p &lt; 0 . 0001 ) enhance the recommenda-tion performance.
Most previous music recommendation algorithms can be divided into two categories: content-based model (CBM) and collaborative filtering (CF).

Content-based music recommendation typically focuses on ex-tracting acoustic features from music audio content. Then, it rec-ommends music items based on the similarity between new items and items in the user X  X  listening history. For example, Logan [6] in-vestigated Mel-frequency Cepstral Coefficients (MFCCs) as acous-tic features and utilized Earth-Mover X  X  distance to measure the sim-ilarity between songs for recommendation. More recently, Wang and Wang [10] used deep leaning techniques which perform fea-ture learning from audio signals and music recommendation in a unified framework. Audio analysis extracts low-level acoustic fea-tures about music entities. However, they are not what causal users usually relate to in their music exploration.

Unlike CBM, collaborative filtering approach depends on user-music relationship, which has been proved to be one of the most ef-fective recommendation techniques. There are two basic approaches towards collaborative filtering, memory-based and model-based. Memory-based CF algorithms derive item-to-item (item-based CF) or user-to-user (user-based CF) similarity from user rating/feedback matrices. Item-based CF recommends items similar to the user X  X  fa-vorite items, and user-based CF recommends items liked by similar users. Model-based CF typically utilizes matrix factorization tech-niques to predict user rating on his/her unseen items. CF approach has been proved to outperform other recommendation algorithms in KDD-Cup 2011 Yahoo! Music Recommendation challenge [2].
More recently, online music services have attracted large groups of users and collected rich context-based music information, e.g. comments, collaborative tags, user listening history, etc. Very het-erogeneous relationships among different kinds of objects provide exciting opportunities for researchers to propose novel music rec-ommendation algorithms. Symeonidis et al. [9], for example, em-ployed collaborative tags from a social music website and proposed a personalized music recommendation system by applying latent semantic analysis and dimensionality reduction with the higher-order SVD technique to the user-tag-item tensor. Most previous context-based music recommendation systems use a single source of contextual information (e.g., music tags). In this paper, we pro-pose an approach that takes advantage of the rich heterogeneous contextual information harvested from social music community.
Numerous studies have shown that one of the most effective channels for dissemination/recommendation of information is the network of community [3]. In this study, we verify this hypothesis for music recommendation by investigating very heterogeneous re-lationships among different kinds of objects. For example, for the case of Xiami 1 , users can bookmark a song and come back to it later. Users can also comment on different music entities (artist, al-bum, song, etc.), which gives them a way to publicly express their One of the largest online music streaming services (MSS) in China. Xiami.com has more than 20 million of active users. opinion, e.g., like/dislike about the music objects, or share their own emotions about the song. These all reveal user X  X  preference about a candidate music track in terms of different relationships. Heterogeneous graph mining provides us a good way of modeling these relationships for recommendation tasks.

On this directed heterogeneous graph, G = ( V , E ) , there are an object (node) type mapping function  X  : V  X  A and a link type mapping function  X  : E  X  R , where each object v  X  V belongs to one particular object type  X  ( v )  X  A , each link e  X  E belongs to a particular relation type  X  ( e )  X  R , and if two links belong to the same relation type, the two links share the same starting object type as well as the ending object type. The types of nodes and edges used in our study are presented in Table 1.
 Table 1: Nodes and Relations in Heterogeneous Music Graph
Edge weights on the heterogeneous graph represent the transition probability from one node to another. For instance, w ( u represents the probability that user u i plays the music from artist ar j . For any node v on the graph, let O v represents the set of its outgoing links. Then we have P e  X  O R k is a particular relation type on the graph schema. That is to say, for any node on the graph, the sum of weights on the same type of outgoing links equals 1. For most relation types, weight is mod-eled as 1 divided by the number of its outgoing links of the same type. For example, an artist might be labeled with multiple gen-res. The weight of the link from artist a i to genre g j of genres that a i is labeled with. For relation types that involve play counts and comments, weight modeling is different. For example, the weight of the link from user u i to music track s j number of times that s j appears in user u i  X  X  listening history and d ( u i pl  X  S ) represents the total play counts (for all the music tracks in the collection) in u i  X  X  listening history.
In this study, we take a ranking approach for music recommen-dation. For each query node on the graph, we retrieve a number of candidate nodes and make recommendations based on their ranking scores. The ranking scores of each candidate node come from the meta-path based ranking features automatically generated from the heterogeneous graph schema. On the heterogeneous music graph, meta-path defines how the query node and result node are con-nected, which is an abstraction of the many path instances that fol-low the same pattern [5]. For the same recommendation task (e.g. recommend music tracks to a user), there are usually multiple pos-sible meta-paths on the heterogeneous graph. For example, U is a simple meta-path, which denotes all the music tracks (S) that the user (U) have commented on. A meta-path can be represented as: , where  X  A Q is the query node type, and  X  A R is the recommended node type. In this study,  X  A Q is the user node, and  X  node. When we change the type of  X  A Q and  X  A R , this method can be generalized to other recommendation tasks, e.g., recommending music to a playlist.

Previous research used manually selected meta-paths to solve different data mining tasks. However, there is no guarantee these selected meta-paths are the best performing ones. In this study, we exhaust all possible meta-paths from the heterogeneous graph schema (graph schema mining) and evaluate their performance in-dividually. The first step is to derive the schema G S of the hetero-geneous music graph G . On G S (as Figure 1 shows), each node is a unique object type on the original graph G , and each edge repre-sents a unique relation type on G . Let G S = ( V S , E S have | V S | = | A | and | E S | = | R | . Given the query node v result node v R on G S , a depth first search is performed on G cate all paths following the pattern ( v Q ,e 1 ,v 1 ,e 2 where the length of this path k is always equal or smaller than a threshold l (maximum length of a potential meta-path). When l is large, more meta-paths will be generated, but the meta-path based features can be more noisy. For example, to perform the music track recommendation task, v Q is the user node and v R is the mu-sic node. On this graph schema, when l = 3 , we have 49 features, and when l = 4 , a total number of 259 features can be extracted.
After the meta-paths are identified from the graph schema, we define meta-path based ranking functions and the result nodes with the highest ranking scores are recommended. In this paper, we adopt a random walk based ranking function to calculate the rank-ing score for each candidate. We define the random walk based relevance measure between v i and v j as: , where t is a tour from v i to v j following a specific meta-path P , and RW ( t ) is the random walk probability of the tour t . Suppose t = ( v i ,v i +1 ,...,v i + k ,...,v j ) , the random walk tively, we can create a ranking model  X ( P 1 , P 2 ..., P ( 1  X  i  X  t ) is a meta-path based ranking feature. For this study, the ranking function  X  is derived using Coordinate Ascent [7], a learning to rank method. [Evaluation method] : For evaluation purpose, we randomly se-lect a set of nodes V ( Q ) belonging to the query node type (  X  v  X  V ( Q ) , X  ( v ) =  X  A Q ). Then for v ( Q ) the corresponding set of nodes V ( R ) i that belong to the result node type  X  A R and are directly connected to v ( Q ) i via a set of edges E of relation type R Q . In order to evaluate the performance of the proposed approach, for v ( Q ) i  X  V ( Q ) , we randomly remove p % of edges in E ( Q ) i from the graph. Different meta-path based rank-ing features and learning to rank model can be used to recommend nodes originally linked to v ( Q ) i via these removed edges. Mean average precision (MAP), normalized discounted cumulative gain (NDCG), and Precision@10 are used as evaluation metrics. An im-portance score of 0-4 is assigned to each ground-truth query-result node pair for NDCG calculation. For music track recommendation task, if a music track is played more than 4 times by the query user, it is assigned an importance score of 4. A play count of 3 or 4 has an importance of 3. A music track played twice is assigned to 2, and once to 1. Score is 0 if the track is never played by query user. [Learning to Rank model training] : The ranking performance of each meta-path is evaluated, and only the top t performing meta-paths are used to train the learning to rank model  X ( P 1 The dataset D used to train and test  X  is defined as D 1  X  D  X  X  X  X  D t , where D i (1  X  i  X  t) is made up of the top k ranked items returned by P i . Each instance in D is a ( t + 1) dimension tuple ( ~x,y ) , where y is the ground-truth relevance judgment and the i th element of ~x is the ranking score derived from P i or 0 if this item is not found by P i . The learning to rank model is evaluated using 5-fold cross-validation.
In this section, we test the performance of the proposed approach on music track recommendation.
In order to build the heterogeneous music graph, we collected metadata and user generated data from xiami.com, a popular mu-sic social website in China. The website stores user-contributed and editor-curated metadata about different music entities (artist, album, song, etc.). It also allows users to build personal profile, record their listening history, create customized playlist, and social-ize with other users within the community. For this study, the ex-periment dataset contains 56,055 artists, 43,086 albums, 1,233,651 songs, 633 genres, 677,275 users, and 305,916 playlists. As Table 1 shows, we also collected a large number of relationships among different objects. There are 15,929,369 edges in total created on the graph.

For evaluation, we randomly selected 1,000 users from the dataset whose listening history contains more than 50 different songs. We set up this filter to make sure there are enough training/test in-stances for each user. Then 40% of the  X  X lay X  relationships origi-nating from each of the 1000 selected users are removed for evalu-ation purpose.

We trained two learning to rank models, one with the top 10 performing meta-paths of length 4, and the other one with the top 10 performing meta-paths with length  X  3. For each meta-path, the top 1000 ranked results are kept to build the dataset for model training and test.
We compare our algorithm with item-to-item based CF algorithm with jaccard similarity, which has been proved useful in [8].
Table 2 lists the evaluation results for different ranking algo-rithms. The first 10 rows list the 5 best-performing features whose length  X  3 and length = 4, ordered by MAP@10 decreasing. The best performing meta-path is U pl  X  Ar pIn  X  Al i  X  S ? . This meta-path means we recommend music tracks from the albums released by artists in the user X  X  listening history. Although it cannot out-perform item-based CF algorithm for MAP@10, as rank goes up to 100, it gains higher MAP and NDCG scores. This finding in-dicates that single meta-path based ranking function can discover high quality music tracks based on the user X  X  listening history. The best performing meta-path of length 4 is U pl  X  S pIn Al i  X  S ? . It is not the best performing one across all meta-paths within length 4, but it still outperforms the second best meta-path within length 3. It means longer meta-paths are as competitive as, if not better than, the shorter ones. Note that the best performing meta-path of length 4 also outperforms the baseline collaborative filtering algorithm for MAP@300.

Collaborative filtering only takes advantage of user X  X  listening/rating behavior. However, on the heterogeneous graph, music tracks are connected to the user via other types of relations as well (e.g. U Ar pIn  X  Al i  X  S ? ). Meta-path based ranking functions can en-hance collaborative filtering performance by providing additional information. To test this hypothesis, we tried two sets of experi-ments combining both meta-path features and the collaborative fil-tering feature. The last 2 rows of Table 2 show the results for the combination of CF ranking and rankings from the top 10 meta-paths with length  X  3 and length = 4. Both combined recommen-dation models significantly outperform the baseline CF algorithm and the meta-path ranking functions. It is also worth noting that the combination with meta-paths of length 4 does not perform as well as the one with shorter meta-paths. A good selection of meta-paths is critical for the performance.
In this study, we propose a heterogeneous graph mining approach for music recommendation. Supervised random walk is used for music ranking (graph mining), and the meta-path based ranking features are identified from graph schema (schema mining). The best-performed features are used to train the recommendation model via learning to rank. Evaluation results show that: 1. for single meta-path ranking function, CF method works better for top ranked musics, but when rank is larger than 100, some meta-paths outper-form CF approach. 2. After we applied learning to rank method, the recommendation performance significantly outperform all other methods, including the CF algorithm. 3. Some nodes and relation-ships can be more significant than others for music recommenda-tion. For instance, the top ranked meta-paths are more likely to be related to artist ( Ar ), album ( Al ) and user ( U ), which can be important to locate the important music on the graph.

There are a couple of directions of research arising from this work which should be pursued. First, we will investigate more so-phisticated feature selection methods to enhance the recommenda-tion performance. Second, by using the constructed graph, we will explore other recommendation tasks, e.g., recommending music to playlist or recommending existing playlists to a user.
