 Due to the widespread use of satellite surveillance system, geographic informa-tion system (GIS), cellular phones, and sensor networks, vast spatial data with geographic attributes are obtained and co llected every day. In light of the use-ful information from these data, spatial data clustering, which is an important technique in data mining, has received a significant amount of research atten-tion for years [2,5,7]. The main goal of spatial data clustering is to group data points according to the prop erties in their geographic a ttributes. In most cases, for example, each cluster is required to be connective to itself in the geographic space.

Conventional spatial clustering techniques[3,6,7,11,12,13,16], in general, can be divided into partition-based methods, hierarchical methods, density-based methods, and grid-based methods. The partition-based clustering algorithms such as CLARANS [12] start with an initial partition of the data set, and then iteratively optimize an objective function by moving the data points among k clusters until the optimal partition is reached. Hierarchical methods use either a top-down splitting manner or a bottom-up merging manner to generate the clusters. CURE [6] is an example of such methods. Density-based clustering algo-rithms such as DBSCAN [3] create clusters according to the density information of geographic regions. Grid-based methods such as WaveCluster [13] quantize the data space into finite grids and then perform clustering on these grids. Accord-ing to the geographic attributes, most conventional spatial clustering methods group data points into connective and non-overlapped clusters. In addition, sev-eral novel techniques such as the works in [4,14,15] discuss clustering spatial data in presence of physical constraints.

The real applications, however, have called for the need of new clustering methods to deal with spatial data points with non-geographic attributes. Note that data points obtained in many real applications such as weather observa-tion station and sensor network consist of both geographic and non-geographic attributes at the same time. In general, geographic attributes indicate the data locations, whereas non-geographic attr ibutes show the chara cteristics of data points. To explore interesting information from this kind of data, both the con-nective and non-overlapped properties in the geographic space, which are com-mon requirements in spatial data clustering, and the data similarity in their non-geographic attributes should be cons idered in the generation of clusters. However, in most conventional spatial clustering methods, only the geographic attributes are taken into consideration. It is thus infeasible, by using conventional spatial clustering methods, to partition the geographic space such that the data points in the same subregions are similar in their non-geographic attributes. More specifically, when we consider the data points consisting of geographic and non-geographic attributes, named as dual data points in this paper, the clus-tering problem of partitioning the geographic space such that the dissimilarity between data points in the same subregions is minimized cannot be directly dealt with by any of conventional spatial clustering algorithms. We further explain this problem by the examples below.
 Example 1.1: Consider the Data set 1 in Figure 1(a), where the black trian-gles and white diamonds are used to represent the clustering result of K-means applied to the non-geographic attributes. Given such a data set, conventional spatial clustering algorithms concern only the geographic attributes and thus generate clusters as shown in Figure 1(b). In Figure 1(b), the black points form a cluster, the white points form another cluster, and the gray ones are regarded as noises. As a result, the dissimilar data points are grouped together because of their positions in the geographic space.
 Example 1.2: Consider the same data set in Figure 1(a). An alternative method to combine the information from both geographic and non-geographic attributes is using clustering algorithms such as K-means with an extended objective function which takes a weighted average between geographic and non-geographic attributes. Consequently, clusters ma y be generated as shown in Figure 1(c), in which data points are assigned to either a black cluster or a white cluster. Note that the black cluster does not form a connective non-overlapped geographic re-gion due to the low similarity between the black cluster and the white diamond points such as B (or due to the high similarity between the black cluster and the black triangle points such as A.) On the other hand, some similar data points such as B and C may be considered dissimilar because of their locations in the geographic space being too far away from one another. This kind of methods suffer from measuring the concept of conn ection and non-overlap of a cluster in distances.
 In comparison with the clustering results shown in Figures 1(b) and 1(c), the result in Figure 1(d) is considered more pr eferable and useful because each cluster is a connective and non-overlapped region in the geographic space while the dissimilarity between data points in the cluster is smaller (the result projected in the non-geographic space in Figure 1(d) is purer then that in Figure 1(c).) Such result not only conforms to the common requirements of spatial data clustering but also takes account of minimizing the dissimilarity between data in clusters.
One of the main challenges for clustering dual data points is to deal with both the geographic and non-geographic attributes at the same time such that data points in the same cluster form a connective but non-overlapped region in the geographic space and their dissimilarity in the non-geographic space is minimized. As usual, the dissimilarity between data points can be estimated from their distances in the non-geographic space. However, as shown in Example 1.2, it is inappropriate to substitute the connective meaning of a cluster with distances in the problem of clustering dual data points. Note that the distance is an absolute measurement. In contrast, w hether a cluster is connective or not will depend on the projection of other cluste rs in the geographic space. This concept makes the problem of clustering dual data points more challenging.

In [10], C.-R. Lin et al. proposed the first solution, algorithm ICC, for the problem of clustering dual data points. Based on the techniques of SVM [1,8] and complete-link [9] algorithms, their method conducts an interlaced process of performing clustering in the non-geographic space and classification in the geographic space to adjust the geographic scope of each cluster while minimizing the dissimilarity between points in the clusters. However, algorithm ICC suffers from inefficiency due to the usage of the complete-link algorithm. In addition, their results heavily depend on the par ameters of SVM. Note that selecting optimal parameters of SVM is usually a difficult and time consuming task. It is thus hard to apply algorithm ICC to real applications due to the efficiency concerns, especially in si tuations where data points change as time goes by.
To remedy these problems, we propose in this paper the BINGO (incremen-tal clustering toward the Bound INformation of Geography and Optimization spaces) algorithm for solving the problem of clustering dual data points. Ex-plicitly, we do not treat geographic attributes as distances, but instead, devise a summary structure, named NeiGraph , to integrate non-geographic attributes into geographic regions. Based on NeiGraph ,wedesign BINGO  X  OF F and BINGO  X  ON incremental clustering methods for having high quality and high execution-efficiency results respectively. Furthermore, most parameters in our al-gorithms are determined automatically so as to facilitate users to use our meth-ods. As shown in the experimental studies, our algorithm executes much more efficiently than algorithm ICC while being able to generate clusters to similar costs.
 The rest of this paper is organized as follows. The problem definition is given in Section 2. Algorithm BINGO and a series of illustrative examples are presented in Section 3. In Section 4, we conduct the performance studies. Finally, this paper concludes in Section 5. In this paper, the data we dealt with consist of two types of attributes, geographic attributes and non-geographic attributes. Since the non-geographic attributes are used to infer the dissimilarity which we aim to minimize between data points in the same clusters, the non-geographic attributes are also called optimization attributes.

Given a database D t containing dual data points at time t , we will generate clusters C t that comply with the two principles below.
 Principle 1. Projected to the space formed by ge ographic attributes, each clus-ter locates within a connective region while not overlapping with other clusters. Principle 2. Clustering cost according to a cost function should be minimized. In the following, precise definitions of our problem are given. Definition 1. (Dual Data Point) A dual data point is an object d with attributes { a space O .
 Definition 2. (Event) An event e t at time t is an adjustment of data points, including inserting new data points into and deleting existing data points from database D t  X  1 .
 Definition 3. (Cost) Given clusters C t = { c 1 ,c 2 , ..., c k } of a database D t ,which where c k .a O j is the center of the attribute a O j of cluster c k . Note that the clustering cost is defined only upon the optimization attributes. Definition 4. (Incremental Dual Data Clustering Problem) Whenever an event e t occurs at time t , the clustering problem is to cluster the dual data points in database D t into k groups such that each group locates a connective non-overlapped region in the geographic space G while minimizing the clustering cost, Cost ( C t ) . Algorithm BINGO is a new approach for solving incremental dual data clus-tering problem. To comply with the principles of this problem, we devise a sum-mary structure, name NeiGraph , and design the BINGO algorithm based on this structure. NeiGraph is a graph in which each node represents a connective non-overlapped region and the edge between two nodes implies that these nodes can be merged to be a new node. Algorithm BINGO consists of three major parts: the binding information (Bind-Info) procedure, the generating clusters (Generate-Clusters) procedure, and the tuning borders (Tune-Borders) proce-dure.

First, in the Bind-Info procedure, we partition the geographic space G into various sizes of grids and construct NeiGraph by taking each grid as a node and adding an edge between nodes if the corresponding grids are next to each other. NeiGraph thus can effectively combine the data information in the optimization space O into geographic regions by summarizing the optimization attributes of data points in a grid into the corresponding node. After that, the Generate-Clusters procedure selects representative nodes in NeiGraph as seeds, and then expands seeds along the edges to complete connective non-ove rlapped clusters. Whenever an event e t occurs, the Tune-Borders procedure is activated to tune the borders among clusters and update the clustering results. We next show how NeiGraph is constructed and used to help gene rating clusters that comply with the principles of dual data clustering problem.
 3.1 Binding Information To overcome the challe nge of generating connective n on-overlapped clusters while minimizing the clustering cost, we first propose the concept of T -region to draw out a connective geographic region in which data points are considered to be similar to one another.
 Definition 5. ( T -region) Given a real number T ,a T -region is a geographic re-gion in which any two data points are within the distance of T in the optimization space O .
 With the definition of T -region, we partition the geographic space G into various sizes of grids ( T -regions) in the top-down manner. Specifically, starting from the largest grid which contains all data points in D 0 , we iteratively examine every grid and divide the grid into 2 g equal-size sub-grids if it is not a T -region until all the grids are T -regions. At the same time, NeiGraph is constructed by regarding each grid as a node and adding an edge between two nodes if the corresponding grids are next to each other. Data information in the optimization space O can also be bound in NeiGraph by summarizing the optimization attributes of data points in a grid into the corresponding node. Therefore, NeiGraph can effectively combine the data information in the geographic and optimization spaces when it is completely constructed, and provides a broader view of data points in the database. Moreover, we can even merge nodes to clarify NeiGraph if there is an edge between the nodes and the merger wo uld not change the property of being a T -region. Note that a node in NeiGraph could be regarded as a micro-cluster of data points, and every micro-cluster fo rms a connective non-o verlapped region in the geographic space G .

A problem left is how to decide the value of T such that data points in the same T -region can be considered to be si milar to one another. A mechanism for automatically choosing a proper value of T is designed based on the lemma and the theorem below. For interest of space, proofs of theorem are shown in Appendix B.
 Lemma 1. Given a complete graph (a graph that there is an edge between any two nodes) consisting of n nodes, partitioning these n nodes into k groups will divide all edges into two categories, which are intra-edges (within groups) and inter-edges (between groups). The upper bound of the number of inter-edges appears when k groups have equal number of nodes.
 Theorem 1. Given k clusters with totally n data points, there are at least n 2  X  nk 2 k intra-edges within clusters.
 Proof. According to Lemma 1, the maximum number of inter-edges between k clusters is obtained when each of the k groups is with the size of n k .In other words, when grouping n points into k clusters, there are at most n k  X   X  C k C clusters no matter how the n points are grouped into k clusters. Consequently, the minimum number of intra-edges within k clusters containing totally n data among all the pairwise distances for capturing the concept of data points with high similarity in this paper. The value of T is then set as double of the reference distance. In other words, the distance between any data point in a T -region and the center of the corresponding micro-cluster is smaller than T so that the center is regarded having high similarity with the point and can be used to represent the point. Note that, although the value of T could be any smaller number, it is not necessary to generate results with lower clustering cost but incur higher execution time. Moreover, to further e nhance the execution efficiency of our approach, the value of T could be approximated by a sampling mechanism since we do not need the precise value of T and the number of data points N 0 is usually quite large. The approximation of T from a sample data set is not only efficient but also satisfactory. In Example 3.1, we show the effectiveness of NeiGraph constructed in this procedure.
 Example 3.1: Given the Data set 2 containing 78 dual data points in Figure 2(a), we execute the Bind-Info procedure with k = 3. Figure 2(b) shows the projection of the result in different spaces, where data points presented in the same color and shape belong to the same T -region. There are a total of 13 T -regions produced. Note that each T -region is a node in NeiGraph .AsFigure 2(b) shows, all the nodes represent connective and non-overlapped geographic regions while the data points in the same node are similar to one another in the optimization space O . 3.2 Generation of Clusters In the previous procedure, we combined the data information in the geographic and optimization spaces in NeiGraph . To farther conform to the principles of dual data clustering problem, the Generate-Clusters procedure follows the bound information to generate clusters in t wo major steps. The first step selects k dissimilar representative nodes in NeiGraph as seeds of k clusters. The second step expands seeds along the edges be tween nodes to complete clusters.
Intrinsically, data points located nearby are possible to be dissimilar from one another. Because of the definition of T -region, it is possible to generate small nodes (the nodes with few data points) surrounded by large nodes in NeiGraph . The node with only one black square point in Figure 2(b) is an example of such case. To avoid choosing these small nodes as seeds and thus generating small clusters, only the nodes with size larger than average size are deemed representative and preferred t o be seeds. In addition, to minimize the clustering cost, data points in differen t clusters are expected to be dissimilar to one another. We thus expect the seeds to be as dissimilar to one another as possible. In consideration of the execu tion complexity, however, we do not find the most dissimilar set of k seeds. Instead, beginning with choosing two most dissimilar nodes as seeds, our method ite ratively selects a node which has the lowest similarity to all the chosen seeds as a new seed until there are k seeds picked. Although this greedy method doe s not select the best set of seeds, our methods still possess the capability of gathering similar data points as shown in the experimental studies in Section 4.

After k seeds are chosen, each seed initially forms a cluster by itself. Then, k clusters are completed through the iter ative merger process which stops when all the nodes in NeiGraph are clustered. At each iteration, we identify the most similar pair of a cluster and its un-clustered neighboring node in NeiGraph , and then expand the cluster with the neighboring node. Note that each node in NeiGraph represents a connective non-overlapped geographic region containing data points with high similarity. Our results thus conform to the principles of dual data clustering problem since the expanding process is greedily done along the edges in NeiGraph . Example 3.2 below gives a draft of the clustering results of algorithm BINGO .
 Example 3.2: Following the result of Example 3.1, we execute the Generate-Clusters procedure to generate the clustering result for Data set 2. First, three nodes which contain data points marked as  X   X   X ,  X   X , and  X   X   X  are picked as seeds. Then, each seed forms a cluster and is expanded along the edges to generate the clustering result as shown in Figure 2(c). Note that each cluster is connective and non-overlapped in the geographic space G . On the other hand, clusters in the optimization space O still tend to gather similar data points under the connective and non-overlapped constraints of clusters in the geographic space G . 3.3 Tuning Cluster Borders Note that data points are allowed to change as time goes by. In order to provide the incremental clustering capability of our approach, we propose an incremental tuning mechanism to refine clusters when data points are updated. Generally, data points in the database D t  X  1 can be updated through the deletion and insertion operations at time t . Although we handle only the deletion and insertion operations in this paper, we are able to deal with the modifications of data points since a modification can be treated as a deletion followed by an insertion. We now present the details of data adjustment process. (I) Deletion: node r i and cluster c j which d r is assigned to. Then, add r i into the changed set S . (II) Insertion: corresponding node r i in NeiGraph according to its position in the geographic space G , and assign d a to the cluster c j which contains r i . Then, add r i into the changed set S c .

After the data adjustment occurs, the Tune-Borders procedure improves the clustering results to reduce the cost in the optimization space O . In this process, we design a greedy strategy to revis e the clustering results based on NeiGraph . The concept of this strategy is to expand each cluster if possible by iteratively drawing in its neighboring nodes in the geographic space G from other clusters such that a lower clustering cost can be obtained. The non-overlapped and con-nective constraints of clusters in the geographic space G can also be complied with by checking the connective region o f each cluster. Although this process seems to be expensive, only the nodes influenced directly by the data adjust-ment and the nodes that become new neighboring nodes of some clusters during the expanding iterations are possible to change their clusters.
 The revision of clustering results depends on the information summarized in NeiGraph . The nodes in NeiGraph , however, may not be T -regions anymore because of the data adjustment. Therefore, it is important to decide a suitable time for reforming the harmful nodes (the nodes which are not T -regions) in NeiGraph . Nevertheless, this decision incurs the trade-off between the execution efficiency and the clustering quality. A better way for balance is to check the nodes only when we use the information carried by the nodes. Hence, if a node in NeiGraph is not a T -region, it is split by the same method in Section 3.1 only at the iteration that there is a cluster trying to pull it in. That is, only the nodes carrying the information used to tune the borders of clusters will be examined and, if necessary, split. For those changed but not examined nodes, we will record them in the changed set S c until they are examined.

In addition to the Tune-Borders procedure, an alternative way to achieve the incremental clustering capability of our approach is to reform every harmful nodes in NeiGraph whenever data adjustment occurs, and then activate the Generate-Clusters procedure in Section 3.2 to produce clustering results. Com-pared to the Tune-Borders procedure, this method can generate clusters with lower cost. However, it also incurs higher time complexity due to the modifica-tion of whole NeiGraph in the worst case. Therefore, we regard this method as the BINGO  X  OF F method for having high quality results, and regard the Tune-Borders procedure as the BINGO  X  ON method for having high execution-efficiency results. In Section 4, we conduct a series of experiments to compare the performances of these methods. In this section, we conduct a series of experiments to assess the performance of algorithm BINGO on a computer with a CPU clock rate of 3 GHz and 480 MB of main memory. The simulation model used to generate synthetic data is the same as that used in [10]. In Section 4.1, w e show the clustering effectiveness of algorithm BINGO with visualization of outputs. Results on scaleup experiments are presented in Section 4.2. 4.1 Experiment I: Effectiveness In this experiment, we apply algorithm BINGO to a complex data set in Figure 3(a), and demonstrate that our methods can achieve fine clustering quality with the visualization of the results in both the geographic space G and the optimiza-tion space O . The result of our BINGO  X  OF F method is shown in Figure 3(b), and the result of our BINGO  X  ON method is shown in Figure 3(c). Note that the generated clusters in Data set 3 are h eavily overlapped in the geographic space G .Both BINGO  X  OF F and BINGO  X  ON still produce connective and non-overlapped clusters in the geographic space G while gathering up similar data points in the optimization space O with best efforts. To further evaluate the clustering effectiveness on cluster ing costs, we compare our methods with algorithm ICC in the next experiment. 4.2 Experiment II: Scaleup Performance We compare in this experiment the execu tion efficiency and the clustering cost of algorithm ICC and our methods. The execution time of these methods against different size of data sets is shown in Figure 4(a), and the corresponding cluster-ing costs are shown in Figure 4(b). It can be seen that both of our methods exe-cute more efficiently than al gorithm ICC, especially the BINGO  X  ON method. In addition, our BINGO  X  OF F method can generate clusters with similar cost to that of ICC. The BINGO  X  ON method, on the other hand, incurs higher cost due to the greedy policy in the Tune -Borders procedure. Therefore, when we concern more about the cos t than the execution time, BINGO  X  OF F is preferred. On the contrary, when the data size is quite large and the timing resource is limited, the BINGO  X  ON method would be a better choice. We proposed in this paper a new effective and efficient algorithm BINGO for incremental clustering dual data points. Algorithm BINGO integrated informa-tion in the geographic and optimization spaces by constructing a summary struc-ture NeiGraph . Based on NeiGraph ,the BINGO  X  OF F and BINGO  X  ON methods are designed to possess the incremental clustering capability and gen-erate effective clustering results in wh ich each cluster forms a connective and non-overlapped region while gathering similar data points. Furthermore, most parameters in algorithm BINGO are determined automatically so that it is easy to be applied to applications without resorting to extra knowledge. Experimental simulations have been performed to validate the effectiveness and the efficiency of algorithm BINGO .
 The work was supported in part by the National Science Council of Taiwan, R.O.C., under Contracts NSC93-2752-E-002-006-PAE.

