 Microblogging is a new form of blogging in the Web 2.0 era. Typical microblog-ging services include Twitter 1 and Sina Weibo 2 . Microblogging services allow users to post small elements of content such as short text messages, images, videos, etc., the so-called microposts . Microposts are made by succinctly broad-casting information within a certain length, e.g., 140 English or Chinese charac-ters. Users usually share information, update daily activities, and seek knowledge on microblogging services. Microposts can thus reflect user interests to a certain extent, and we can identify a user X  X  major i nterests by extracti ng representative words and phrases in the microposts [1]. We call these words and phrases as keywords .
As a typical social media, the relations between users in microblogging have attracted many attentions from both research and commercial communities. On a microblogging service, a user may follow and pay close attention to anyone who s/he is interested in. The reasons behind the following behaviors are complicated. For example, a user may follow another one just because they have social connec-tions in the real-world, or because they s hare similar interests so that they can keep an eye and communicate with each other. Currently, most researches focus on studying the following behaviors through the following-network structure. In fact, however, since the microposts imp ly the interests of users, we can model user relations via their similarities of interests. Therefore, as an alternative to the perspective of network structure ana lysis, we use keywords as the represen-tation of user interests, and propose a n ovel framework to measure the interest similarity between users.

In this paper, a novel framework is proposed for measuring and visualizing in-terest similarity between microblog users. We extract keywords from microposts to represent user interests. With inter est keywords, a support vector machine for ranking (SVM-rank) model is learned , which measures the interest similarity effectively. Then, we extend Wordle [2], a widely-used text visualization, into a integrated word cloud scenario to make viewers comprehend the interest sim-ilarity between microblog users clearly and intuitively. Besides, we design an interactive game for microblog users to collect user annotations for SVM-rank model training.

The rest of this paper is organized as fo llows. We first briefly discuss related work in Section 2, followed by the details of our framework in Section 3. Then, we evaluated and verified our framework on a real-world microblogging service to show the effectiveness of our framework in Section 4. Finally, we conclude with a discussion and future directions in Section 5. 2.1 Microblogging Analysis Over the last couple of years, microblogging has been investigated from several perspectives. Java et al. [3] studied the topological and geographical properties of Twitter X  X  social network to understand the community structure in microblog-ging. Kwak et al. [4], Wu et al. [5], and Bakshy et al. [6] investigated the diffusion of information on Twitter. Zhao and Rosson [7] qualitatively investigated the motivation of the users who use Twitter. Krishnamurthy et al. [8] analyzed the characteristics of Twitter users in such as pects as classes, behaviors, and social networks.
 There are also some researches investigating user interests in microblogging. Using natural language processing tools, Piao and Whittle [9] extracted named entities and core terms to identify individual Twitter users X  interests. Using TFIDF and TextRank, Wu et al. [10] also extracted keywords from the Twitter microposts to label user X  X  interests and concerns. Yamaguchi et al. [11] extracted tags from the names of  X  X witter List X  (i.e., user groups) to discover appropriate topics for list members and identify their common interests. Michelson and Mac-skassy [12] leveraged Wikipedia as a knowledge base to categorize the entities in the Twitter microposts and built a topic profile for each Twitter user. Banerjee et al. [1] analyzed real time user interests in different cities by mining content-inductive and usage-inductive keywords, each of which represents different class of user interests.

As shown in the above-mentioned works, keywords have been proved to be an appropriate and encouraging way to identify user interests. In this paper, we also aim to extract keywords to estimate microblog users X  int erests for further measurement. 2.2 Word Cloud A word cloud, also known as a tag cloud, is a popular way of representing text data. It X  X  typically used in the Web 2.0 era to visualize the frequency distribu-tion of key terms which depict the website content. A word cloud is originally organized in horizontal lines, and popularized in the photo sharing site Flickr 3 to show the user-generated tags of photos in 2004. A cloud encodes word im-portance or frequency information via font size. There have been several tools for generating word clouds from text provided by the Web users. Wordle 4 is one of the most outstanding and appealing tools. It is widely used in the social community and mainstream media [2]. Th e word cloud created by Wordle is sig-nificantly different from regular ones because of its striking graphic statements: the words are arranged tightly and the display space is thus efficiently used; words can be placed in different orientation.

While Wordle is a state-of-the-art tool for generating a simple word cloud, it cannot show any relationship among words; that is, text content about two or more subjects cannot be recognized by the word cloud cr eated by Wordle. Paulovich et al. [13] and Cui et al. [14] used a sequence of word clouds to show different document collections. Neverth eless, to the best of our knowledge, it is still difficult for current word cloud schemes to demonstrate the commonness and difference between two collections in an intuitive way.

The impact of the visualization on the user experience has also been studied [15]. A comparative study of several word cloud layouts suggested that appro-priate layouts should be carefully selected according to the expected user goals [16]. In this section, we describe the framework for measuring and visualizing the similarity between microblog users (shown in Figure 1). We first show how to extract keywords from microposts to represent user interests (3.1). Further, we present a ranking approach to measuring the interest similarity between users (3.2). Then, we propose a integrated word cloud visualization to provide a novel and clear representation of user interest similarity (3.3). 3.1 Interest Representation We identify a microblog user X  X  interests by extracting keywords from his/her microposts. In this paper, we take Sina Weibo, the largest microblogging service in China, as our research service, and g et users X  microposts from its APIs 5 .On Sina Weibo, an overwhelming majority of the microposts are in Chinese. Hence, we perform Chinese word segmentation and part-of-speech (POS) tagging before keyword extraction.
 Data Cleaning. Before word segmentation and POS tagging, we clean microp-osts and only keep plain text data in preprocessing. In China, a significantly large percentage of microposts are retweets [17 ]. A retweet usually contains two parts: the original micropost and a comment by the retweeting user. A user may retweet a micropost simply because it X  X  popular, and the micropost usually contains more information about the user who post it originally than that about the retweeter. Therefore, we only retain the comment by the retweeter in a retweet micropost. A user may use emoticons in microposts to help express his/her sentiment. As emoticons cannot directly help keyword analysis and further similarity computation, we remove them from the microposts. Additionally, we also remove the user names mentioned in posts, URLs and other none-texts from microposts. Word Segmentation and POS Tagging. With the clean data, we perform word segmentation and POS tagging using a practical system THULAC [18]. Other POS taggers such as Stanford Log-linear Part-Of-Speech Tagger [19] or Apache OpenNLP POS Tagger 6 can also be easily embedded in our framework to support other languages. After filtering the stop words, only notional words with specific concepts are selected as ca ndidate words for keyword extraction: common nouns, person names, place names, institute names, idioms and other proper nouns.
 Keyword Extraction. With filtered notional words, we perform keyword ex-traction derived from an efficient and effective framework proposed by Liu et al. [20], in which a translation-based method and a frequency-based method are combined. The translation-based method can summarize appropriate keywords in spite of the noise caused by varied sub jects and the frequency-based method can find new words used in microposts. Their experiments on Sina Weibo have shown that this framework is effective and efficient for identifying user interests.
To measure interest similarity, we n eed to extract keywords from two mi-croblog users X  microposts. After keywo rd extraction, we get two keyword lists, each of which indicates a user X  X  interest s. In the keyword list, each keyword is assigned a weight. 3.2 Interest Similarity Measuring Although the task of computing interest similarity is important for both academia and industry, there is actually no gold standard for directly evaluating the com-putation of interest similarity between microblog users. It is intuitive to use the cosine similarity of two keyword lists for similarity computation. The cosine scores in isolation, however, are usually too small due to the sparsity of keyword matrix, which cannot well illustrate the similarity between microblog users. In this paper, we propose to take multiple features together for measuring user similarity. For this method, the challenge is how to collect annotation data and design an approach to supervised learning.

We first introduce the method for similarity computation, and then introduce the collection method of annotation data.
 Similarity Computation. With two keyword lists, we first use the vector space model to represent keyword lists an d compute the cosine similarity between them. We select the cosine score, the number of common keywords and ratios of the number of common keywords to the numbers of two keyword lists as the features for measuring interest sim ilarity between microblog users, using our similarity model learned from a Ranking SVM algorithm [21] (experiments for the model selection are shown in Section 4.1). The value v derived from the similarity model is mapped into a specific score s by the following sigmoid function: The final similarity score s is called interest exponent with range from 0 to 100. Annotation Data Collection. To train the SVM-rank model, we design an interactive game for microblog users to collect annotation data. Compared to tell the preference between two users accordin g to interest similarity, it is difficult for an annotator to give an absolute score of his/her similarity with a user. Hence, we ask a microblog user to provide his/her interest preference between his/her two friends. Moreover, if we only show interest keyword lists during the annotation, an annotator is difficult tell exactly how similar two users are. Therefore, in the interactive game, we use our novel visualization method to demonstrate the interest similarities (see Section 3.3 for detailed introduction) to help annotation. We finally implement a Web application to gather annotation data.
 Figure 2 shows a snapshot of the game application. With a user ID on Sina Weibo, the application can access user d ata to generate a pair of word clouds as well as the information about the keyword numbers at each time. A user can click the Select buttons to annotate whether the left two microblog users are more similar or the right two ones, without knowing in advance who they are respectively. Then, the application will show the real identities of user A and user B . Moreover, the user can share the visualization with his/her annotation as a micropost on Sina Weibo, which can attract more users to use our game application. 3.3 Interest Similarity Visualization With interest keyword lists and their similarity score, we can create similarity visualization for viewers. By showing t wo microblog users X  keywords and their common ones at the same time on canvas as well as the interest exponent, an overall view of interest similarity between two users is provided. Figure 3 shows an example of our similarity visualization, in which the common keywords of ucation), X  are shown in the center of the canvas. Moreover, the avatar of each user is placed on the corresponding side at the top of the canvas to make our visualization more self-explanation for viewers. In this section, we describe the visual representation and the rationale of our visualization.
 Word Colors. Different colors are used to represent three kinds of keywords to make the visualization intuitionistic and aesthetic. Assuming that viewers are more interested in the common keywords of two microblog users, these ones are colored in striking red and are placed in th e center of the canvas. The distinctive keywords of each user are separately colored in visually distinguishable blue and green.
 Font Size. Following the most accepted visual d esign, font size is used to in-dicate word weight. Big words catch viewers X  attention more easily than small ones [22], and the font size of the common keywords is thus bigger than that of the distinctive ones owned by each user. To balance the distinction and legibility, the variation of the font size of the different keywords has to be critically chosen. The font size csize i for a common keyword i is calculated as follows: where w max is set to the maximum weight of the common keywords, w min is set to the minimum weight of the common keywords, and w H i is the harmonic mean of the weights of i in two users X  keyword lists. C max , C min ,  X  ,and  X  are the constant factors. v is the similarity value got from the similarity model, and the size of the common keyword is thus adjust ed according to the similarity between microblog users. The more similar two microblog users are, bigger the size of the common keywords is.

The font size dsize j for a distinctive keyword j owned by only one microblog user u is calculated as follows: where w max is set to the maximum weight of the keywords of u , w min is set to the minimum weight of the keywords of u ,and w j is the weight of j . D max , D min ,and  X  are the constant factors.
 Word Layout. Since Wordle X  X  layouts are proven to be very compelling [2] and circular layout with decreasing weight is suitable for finding major concerns [16], we mimic Wordle X  X  design rationale: the words with high weight are placed centrally on canvas, and the small ones fill the rest spaces to provide a holistic view. The layout of keywords proceeds o n the basis of the pseudo code proposed in [2]. The common keywords have high priority when determining where to be placed. The distinctive keywords o f each user are placed on one side of the dividing line (shown in Figure 4), which visually separates two users X  keywords.
The number of keywords may vary widely with respect of the amount of users X  microposts. To form an aesthetic view, the dividing line of two users X  distinctive keywords thus has to be dynamic rather than always in the middle of the canvas. Given two microblog users A and B ,user A  X  X  keywords have to be placed on the left side of the dividing line, the boundary of which is xpos l , and user B  X  X  have to be placed on the right side of the dividing line, the boundary of which is xpos r . When placing user A  X  X  keywords, the position of xpos l is calculated as follows: where n A is the number of user A  X  X  keywords, and n B is the number of B  X  X .  X  is the constant factor and we experimentally set it to a value of 0.25. When all of user A  X  X  distinctive keywords are placed on the canvas and user B  X  X  are to be placed, the position of xpos r is calculated as follows: where xpos A max is set to the rightmost position of user A  X  X  distinctive keywords (shown in Figure 4). Equation 6 thus creates a harmonious visual effects when the numbers and weights of the keywords of two users are quite different. 4.1 Similarity Model Training As aforementioned, given two interest key word lists, we use the following features for training the similarity model: -The cosine score of two keyword lists. -The number of common keywords. -The ratio of the number of common keywords to the number of keywords in -The ratio of the number of common keywords to the number of keywords in With these features and target annotation by the Sina Weibo users of our game application, we are able to train the similarity model and evaluate its perfor-mance. In the experiments, our task is formalized as follows. Given a microblog user A and his/her two friends B and C , we get two pairs of users, e.g., ( A, B ) and ( A, C ). Between the two pairs of the users, our model should determine which pair is more similar with each other than another pair. We collect 500 groups of annotations. In each group, a user selects two friends and annotates which one is more similar to him/her.

We can regard the problem as a classification problem. That is, given a user and his/her two friends, the pair that is more similar with each other is annotated as the positive instance ( y = 1) while another is negative ( y = 0). To prevent over-fitting in training, we apply 10-fold cross-validation. The most simple and efficient algorithm for classification is linear model, while the state-of-the-art classification algorithm is support vector machines (SVM). In this paper, we use LIBSVM [23] and LIBLINEAR [24] as the toolkit of SVM and linear model, both of which are the most widely used tools in natural language processing and machine learning. Table 1 shows the evaluation results.

The task can also be regarded as a ranking problem. That is, for a user as the input query, we rank his/her friends with more similar ones ranked higher. The problem can be addressed by learning-to-rank algorithms. Learning-to-rank algorithms can be divided into three approaches, including point-wise, pair-wise and list-wise. Our ranking task is naturally a pair-wise ranking problem. There-fore, we select the stat-of-the-art pair-wise algorithm, Ranking SVM [25], to solve our problem. Cross validation accuracy of Ranking SVM shows that the learned rule to the similarity model is effective (see Table 1).

The evaluation results show that the ranking assumption is more effective than the classification assumption for computing the similarity of user interests. This is not surprising because that our task is more like a ranking problem than a classification problem. For exampl e, when a user tries to compare his/her friends in our game application, s/he is more concerned about the order. In the classification setting, however, it rigidly sets the preferred as 1 while the other as 0. This does not conform to reality comprehensively, because the distances between two friends will not always be 1. 4.2 Performance of the Framework on Sina Weibo We apply our framework for measuring and visualizing the interest similarity on Sina Weibo. From 20th March, 2012, to 31th December, 2012, users on Sina Weibo have used our online system to visualize the interest similarities between themselves and their friends for more than 140,000 times. This phenomenon indicates our framework is e ffective and attractive.

It is usually difficult to quantify how well people welcome a new visualization technique; however, most users describe o ur visualization using  X  X nteresting X ,  X  X ntuitionistic X , and  X  X eautiful X  in their microposts and on the message board of our system. A great deal of positive feedback indicates our visualization of interest similarity is satisfactory. In this paper, we propose a novel framework for measuring and visualizing in-terest similarity between microblog users. By applying Ranking SVM method on interest keywords extracted from microposts, we measure microblog users X  interest similarity effectively, and the integrated word cloud visualization makes viewers comprehend the interest similari ty clearly and intuitively. Besides, the interactive and attractive game we designed for collecting user annotations can help to train SVM-rank model constantly for better performance. Since applied on Sina Weibo, the largest microblogging service in China, our framework has attracted more than 140,000 times of usage in 9 months and has got plenty of positive feedback, which shows our framework is effective and encouraging.
We will consider the following work as the future research plan: (1) Our frame-work for measuring interest similarity does not hold the similarity transitivity. For example, when sim ( A, B ) &gt;sim ( A, C )and sim ( A, C ) &gt;sim ( B,C ), our method does not guarantee that sim ( A, B ) &gt;sim ( B,C ), where sim ( X,Y )is the similarity score of user X and user Y derived from the similarity model. We will improve the framework for measuring interest similarity to hold the simi-larity transitivity. (2) It is obvious that the interests of most users will change over time. We will incorporate time factors into our framework. (3) We will learn to recommend relevant and useful information, such as users with similar inter-ests and articles on relevant topics, according to the results of interest similarity measurement.
 Acknowledgements. This work is supported by the Key Project in the Na-tional Science and Technology Pillar Program under Grant No. 2009BAH41B04 and the Singapore National Research Foundation under its International Re-search Centre @ Singapore Funding Initiative administered by the IDM Pro-gramme Office. The authors would like to thank Shiqi Shen for his help.
