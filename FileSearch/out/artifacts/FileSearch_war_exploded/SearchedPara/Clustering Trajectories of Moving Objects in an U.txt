 fuzzy logic [24], such as FCM [4], consider uncerta inty by allowing each data element to belong to differen t clusters by a certain degree of membership. Considering that input vector values are subject to uncertainty due to imprecise measurements, noise or sampling errors, the distances that determine the membership of a point to a cluster are also subject to uncertainty. Therefore, the possibility of erroneou s membership assignments in the clustering process is evident. Moreover, current fuzzy clustering approac hes do not utilize any information about uncertainty at the elementary level of the data points, which for the case of trajectories are the spatial locations of the ob jects recorded in temporal order. deal with uncertainty in TD and its effect on traje ctory clustering. We initially adopt a symbolic represent ation and model trajectories as sequences of regions (i.e ., wherefrom a moving object passes) accompanied with intuitionistic fuzzy values , i.e., elements of an intuitionistic fuzzy set. Intuitionistic fuzzy sets [3] are generalized fuzzy sets [24] that can be useful in c oping with the hesitancy originating from imprecise information. The elements of an intuitionistic fuzz y set are characterized by two values representing, respectively, their belongingness and non-belongingness to this set. In the case of TD where this set is the region that a trajectory possibly crosse s, the above values represent the probabilities of presenc e and non-presence in the area. In order to exploit t his information, we define a novel distance metric especially designed to operate on such intuitionist ic fuzzy vectors, having as goal to incorporate it in some variant of the FCM algorithm that will effectively cluster trajectories under uncertainty. on the way that cluster centroids are driven toward s the correct direction in each iteration of the algorith m. However, in the TD setting where trajectories are complex objects, even the most efficient similarity function would most probably fail in different applications. We argue that we can succeed better clustering results if instead of using global similarity functions between whole trajectories, we exploit local similarity properties between portions of the trajectories. Based on this idea, at the second ste p of behavior across the time axis are studied in [18]. In [19], a model for uncertain trajectories is propose d that associates an uncertainty threshold  X  to the whole trajectory. This approach results in trajectories w ith uncertainty modeled as 3D cylindrical volumes. Henc e, trajectory points ( x , y , t ) are associated with an  X  -uncertainty area, actually a horizontal disk with r adius  X  centered at ( x , y ). In order to reduce the complexity of handling this kind of spherical neighborhoods, squa re uncertainty areas were introduced in [12]. TD Clustering -The vast majority of the proposed clustering algorithms, such as k -means [16], BIRCH [25], DBSCAN [9], and STING [21] are tailored to work with point data, making thus their application to TD not a straightforward task. During the last deca de several approaches have been proposed in the litera ture so as to enable well-known algorithms to operate on trajectories. Most of these approaches are inspired by the time series analysis domain, and propose trajec tory similarity measures as the vehicle to group traject ories; they usually focus on the movement shape of trajectories, which are usually considered as 2D or 3D time series data [20], [23], [6], [7]. None of the previous approaches considers the underlying uncertainty. On the other hand, clustering approach es based on fuzzy logic [24], such as Fuzzy C-Means (FCM) [4] and its variants are competitive to conventional clustering algorithms, especially for real-world applications. However, directly mapping these techniques in TD is not straightforward, mainly due to the complex nature of trajectories (a question that arises, for example, is about the nature of the clu ster centroid in a group of trajectories). [11], [5] and Lee et al. [14] are closest to ours. Gaffney et al. [11], [5] proposed probabilistic algorithms for clustering short trajectories using a regression mi xture model. Subsequently, unsupervised learning is carri ed out by using EM algorithm to determine the cluster memberships in the model. In this approach, the iss ue of uncertainty is not taken into account, while representation of cluster centroids is out of the s cope of these papers. What is more, in our approach we make no assumption about the size of the trajectories or whether they conform to some regression model, sinc e we are interested in complex, real-world objects following arbitrary movement patterns. Recently, Le e et al. [14] proposed TRACLUS, a partition-and-group framework for clustering trajectories which enables the discovery of common sub-trajectories, based on a trajectory partitioning algorithm that uses the min imum description length principle. TRACLUS clusters trajectories as line segments (sub-trajectories) independently of whether the whole trajectories bel ong to different or the same clusters; for this reason a fuzzy sets is challenging. Formally, let D = { T 1 , T T } be a TD consisting of N trajectories. Assuming linear interpolation between consecutive time-stamp ed positions, a trajectory T i = &lt;( x i ,0 , y i ,0 , t )&gt;, consists of a sequence of n i &gt; 0 line segments in 3D space, where the j -th segment interpolates positions algorithms (usually designed for point vector data) into TD, is to transform trajectories in a space where e ach T is represented as p -dimensional point. We therefore propose an approximation technique and define the dimensionality of trajectories by dividing the life span of each trajectory in p sub-intervals (e.g., 1 minute periods). Regarding the spatial dimension, we assum e a regular grid of equal rectangular cells with user-defined size (e.g., 100 X 100 m 2 ); in each cell an identifier is also attached. Given this setting, an d inspired by the Piecewise Aggregate Approximation (PAA) technique [13], we propose a method that partitions T i into p &lt;&lt; n i equi-sized temporal periods and substitutes the trajectory 3D line segments of each period with the set of the grid cells that T i crosses during this period. More formally: Definition 3. Given (i) a regular grid G of granularity n consisting of cells c k,l (1  X  k  X  m and 1  X  l trajectory T i as a sequence of n i line segments, the lifespan ls of all trajectories in the trajectory database D , and (iii) a target dimension p &lt;&lt; n i , the approximate trajectory T temporal period are replaced by a region r i , j , which is composed by the set of cells c k,l crossed by T i during p j . view and store all trajectories in D as vectors in the user-defined dimensionality p , where each value of the vector corresponds to a dynamic time-ordered list o f cells crossed by the trajectory. Note that depending on t he choice of the spatial and temporal granularity a tr ajectory may introduce gaps (i.e., regions with empty set of cells due to the fact that there is no motion during the particular period of time). model the Uncertain Trajectory ( UnTra ) of be neighbouring cells, the ones that are touched by th e  X  -buffer [12] of the initial trajectory T i . (A similar idea is also found in [19], where each trajectory is modell ed as a circular disk evolving in the temporal dimension, t hus forming a cylindrical volume.) Formally: Definition 4. Given an approximate trajectory i T =  X  r and an uncertainty threshold  X  , the Uncertain Trajectory UnTra replacing each region consisting of the set of cells c k,l that the  X  -buffer of crosses during p j . assume a simple trajectory T i consisting of 6 (i.e. line segments, which, when it is overlaid on a grid , it crosses some of its cells (Figure 1(a)). Figure 1(b ) illustrates the UnTra counterpart of Figure 1(a) with  X  = 1. Assuming a target dimension p = 5, T i is approximated by UnTra ( i T ), which simply consists of five uncertain regions, reflecting the partitioning of the above g rey cells in five subsets (i.e. differently colored regions i n Figure 1(c)) with respect to the lifespan of T i . Without loss of generality, in the rest of the paper, we assume tha t all trajectories in D have the same uncertainty threshold  X  . propose an intuitionistic fuzzy vector representati on of a trajectory. The idea is to model each region ur i,j UnTra as an intuitionistic fuzzy set A E  X  of the regions universe E that belongs to A by a degree  X   X  ( ur i,j ) and does Let us, for the moment, assume that we work in the continuous space. Assuming no uncertainty in the te mporal dimension (i.e., each ur i,j is only subject to spatial uncertainty), Figure 1(d) depicts one cell c k,l and two auxiliary buffers in grey color, one exterior and o ne interior, in distance  X  from the cell; these buffers are formed, respectively, as the Minkowski sum ( c k,l Minkowski difference ( c k,l  X  ) of c k,l with  X  [19]. There are also the projections of four segments along with th eir corresponding buffers (also in  X  distance from the interpolated segment). The thick portion of these s egments implies the part of the segment that lies inside the cell with 100% probability. The dashed portion implies the pa rt of the segment that lies outside the cell with 100% probability, while the solid thin portions are the parts of the segments that we do not know whether they lie i nside portion over the total trajectory length correspond s to the membership of the segment to the cell. Similarly, the dashed and the solid thin fractions result to its membership and hesitancy , respectively. Technically speaking, the thick portion is the result of the in tersection of ( c k,l  X  ) with the segment, while the dashed portion is the topological difference of the segment with ( c k,l  X   X  that, after the initial preprocessing, we handle set of c k,l that are definitely crossed by T approximate the previous probabilities by counting the membership  X   X  ( ur i,j ) and non-membership  X   X  ( ur uncertain region ur i,j to the fuzzy set A containing the trajectories that have or have not, respectively, t raversed this region with 100% probability, we provide the following notion of Intuitionistic Uncertain Trajectory : Definition 5. Given an uncertain trajectory UnTra ( ) intuitionistic counterpart, I-UnTra ( ) dimensional vector of triplets  X  ( ur i,j ,  X   X  ( ur ( uncertain region ur i,j , its membership  X   X  ( ur i,j ), and its non-membership  X   X  ( ur i,j )), with the latter two being defined as: and .. notating the number of cells of ( ) Similarly, the hesitancy  X   X  ( ur i,j ), namely, the degree that it is not certain whether the trajectory has passed or not from ur i,j , is given by the following equation: ( ) Note that it is a straightforward task to prove the intuitionistic property that  X   X  ( ur i,j ) = 1  X   X   X  ( modeling the dis-similarity between two I-UnTra instantiations. The key observation is that such a metric can be decomposed in two parts, one measuring the distance between the sequences of regions of the tw o trajectories ( D UnTra ), and the other measuring the distance between intuitionistic fuzzy sets, based only on th e corresponding membership and non-membership values ( D
IFS ); then, we can combine them into a single one usin g an aggregate function g(  X  ), e.g., the average (or the weighted sum) of the two components. As an example, the total distance D total between two I-UnTra A and B expressed as follows: If we assume that D UnTra and D IFS satisfy the metric space properties, it is straightforward to prove that D total defined above is a metric. As such, the two steps t hat are required include the proposals of distance metrics for D
UnTra and D IFS (Sections 4.1 and 4.2, respectively). 4.1 A Distance Metric for Sequences of Regions UnTra , we propose an appropriate modification of the Edi t distance with Real Penalty (ERP) [6]. Among several proposals in the literature, we chose to modify ERP , given that the Euclidean distance has poor performance at the presence of noise and local time shift, while LCSS [20], DTW [23], and EDR [7] do not satisfy the metric spa ce properties [6]. Below we give the definition of the distance between two regions (i.e., sets of cells) that is t he building element of the D UnTra definition. Definition 6 . Given two uncertain regions ur i and ur distance | ur i  X  ur j | d is defined in two different versions using two different distances d  X  { min , ext } between their corresponding Minimum Bounding Rectangles ( mbr ): and where the former represents the minimum Euclidean distance between the MBRs of ur i and ur j , and the latter exploits on the extent of MBRs in the two axes; e.g . ext mbr ur is the extent of the mbr of ur i axis. Euclidean distance between two regions and their extents, while it produces non-zero results in the case of overlapping regions; in the latter case, | ur i  X  ur zero. Therefore, one may choose | ur i  X  ur j | ext instead of |  X  ur j | min when refinement into the details of the desired. Finally, in order for | ur i  X  ur j | min to be normalized in [0,1] it should be divided by the maximum possib le distance of two regions, called MaxCellDist in Eq. (5), i.e., the distance between the two diagonal cells (i.e. t he bottom left and the upper right) of the grid. defined as follows: Definition 7 . Given a regular grid G of cells c distance D UnTra between two uncertain trajectories UnTra T and 
Rst UnTra T after removing ur i ,1 , and gap is the region containing the first cell of our grid (i.e., cell c 1,1 ). with [6] where it is determined as the first value of the time scale for the time series (i.e., typically gap = 0). Note that as all UnTra have the same dimensionality p , gap may be introduced not due to difference in lengths rather than the lack of motion of an individual trajectory during this particular period. Next we present Lemma 1, re quired by Theorem 1 that proves that D UnTra is a metric. Lemma 1 For any three regions ur q , ur i , ur j , any of which may be a gap region, it is always true that ur ur ur ur ur ur  X   X   X  +  X  . Proof: It has been proven by Waterman et al. [22]. Theorem 1 The distance measure D UnTra between UnTra T and Proof: It is straightforward that isolation and symmetry properties hold for D UnTra . Due to Lemma 1, the triangular inequality property also holds for D UnTra . intuitionistic A = {  X  x,  X  A ( x ),  X  A ( x )  X  | define three fuzzy sets M A = {  X  A ( x )},  X  A = {  X  {  X 
A ( x )}, containing the values of membership, non-membership, and hesitancy, respectively, for every x A  X  Under this connection, A can be also described by the triplet ( M A ,  X  A ,  X  A ). Exploiting the aforementioned description of a fuzzy set A , we devise a method for measuring the similarity between intuitionistic fuz zy sets, based on the membership, non-membership, and hesita ncy values of their elements. Definition 8 . Considering a finite universe E = { x 1 , x } and two intuitionistic fuzzy sets on it, A = ( M A ,  X  and B = ( M B ,  X  B ,  X   X  ), with the same cardinality similarity measure Z between A and B is given by the following equation: where z ( A X  , B  X ) for fuzzy sets A' and B' (e.g. for defined as: and similarly for  X  A ,  X  B and  X  A ,  X  B .
 following simple numeric example: Assuming three intuitionistic fuzzy sets A , B , C with A = { x , 0.4, 0.2}, { x , 0.5, 0.3}, C = { x , 0.5, 0.2} we want to find whether or 
C is more similar to A. Using the equations of Definition 8 we compute the similarity of B and C to set A : Z (0.4/0.5 + 0.2/0.3 + 0.2/0.4) / 3 = 0.65, and Z (0.4/0.5 + 0.2/0.2 + 0.3/0.4) / 3 = 0.85, concludin g that more similar to A than B . between two I-UnTra A and B , can be expressed as: which is proven to be a distance metric. Lemma 2. The intuitionistic fuzzy set distance between two I-UnTra A and B is a metric. Proof sketch: One can easily verify that isolation, symmetry, and triangular inequality properties hold for D aggregation of the minimum and maximum membership, non-membership, and hesitancy values. It is simple to calculate, sensitive to small value variations, and deals well with all the counter-intuitive cases, reported in [15], in which other measures fail. For example, the majo rity of the similarity measures reviewed in [15], fail to r esult to a valid intuitionistic value for specific cases; some of them result to 0 or 1 suggesting that the compared sets are either totally irrelevant or identical, while it is obviou s that this is false in the general case, while others result in a high similarity value for obviously different sets. assume that each vector belongs to one cluster only , a reasonable assumption when vectors reside in dense and well-separated clusters. However, in real-world applications where complex input data may form overlapping clusters, the degree of membership of a vector x Based on this observation, Bezdek et al. [4] introd uced the FCM algorithm which uses a weighted exponent on the fuzzy memberships. FCM iteratively discovers cluste r centroids that minimize a criterion function measur ing the quality of a fuzzy partition. A fuzzy partition is denoted by a ( c N  X  )-dimensional matrix U of reals u ik  X  [0,1], with 1  X  i  X  c and 1  X  k  X  N , where c and N are the number of clusters and the cardinality of the data vectors, respectively. The following constraint is imposed u pon u Given this, the FCM objective function has the form : where V is a ( p  X  c )-dimensional matrix storing centroids, p is the dimensionality of the data, d norm measuring the distance between data vector x k cluster centroid v i , and m  X  [1,  X  ) is a weighting exponent. The parameter m controls the fuzziness of the clusters. When m approximates 1, FCM performs a hard partitioning as the k-means algorithm does, while a s converges to infinity the partitioning is as fuzzy as possible. There is no analytical methodology for th e optimal choice of m . By iteratively updating the cluster centroids and the membership degrees for each featu re vectors, FCM iteratively moves the cluster centroid s to the "correct" location within the data set. presented a first approach to solve this problem in the context of TD, providing the notion of representative trajectory . Assuming that movement patterns are more or less straight lines, they introduce an averaging te chnique between segments that works well when trajectories are dense and follow such a linear regression model. Ho wever, real-world applications involve trajectories that o ften follow circular movement patterns or present large agility. Moreover, trajectories that follow similar routes f or only a portion of their lifespan and then they diverge wou ld result in non representative motions patterns that can not be described by conventional averaging techniques. In order to overpass these obstacles and support real-world requirements, we argue that a better representation can be succeeded if we utilize local criteria (contrary to global criteria via generic distance functions) to decide whether a sub-trajectory is part of the movement pattern. For this reason next we provide a method that enables this calculation exploiting local trajectory matches. (
CenTra ) estimation on the definition of I-UnTra . Our methodology not only overpasses the previously mentioned obstacles, but also, it may be used to re present the thickness of the centroid, so as to model the amount of trajectories that contribute to its formation. Towa rds this goal, we firstly adopt some local similarity functi on to identify common sub-trajectories (concurrent existe nce in space-time), and secondly we follow a region growing approach so as to represent this local cluster. The idea is to form CenTra similar to an UnTra , requiring at the same time to satisfy some similarity and density constra ints. Formally: Definition 9. Given a regular grid G of granularity consisting of cells c k,l (1  X  k  X  m and 1  X  l  X  which has cell density G ( k , l ) (where cell density as the number of distinct trajectories traversing t he cell), a region density threshold  X  , a similarity threshold  X  and a set S of p -dimensional ( ) of 
S as an UnTra whose regions at each period p j , 1  X  correspond to a Local CenTra ( L_CenTra ), which is an Augmented Region ( AR ) of a seed region that has been extended  X  X owards X  other regions (i.e. sub-trajecto ries) if and only if (a) the similarity between ur i,j examination) regions and L_CenTra is Sim ( L_Centra  X   X  , and (b) adopted regions AR avg_density ( AR i,j )  X   X  .
 used to calculate the centroid trajectories based o n Definition 9. The background idea is to perform som e kind of time-focused local clustering using a region gro wing technique under similarity and density constraints. The algorithm for each time period (line 2), determines an initial seed region, (via the Init_Local_CenTra (line 3)) and searches for the maximum region that is compose d of all sub-trajectories that are similar over  X  and dense over  X  . The seed region is determined as the one with the minimum average distance from the rest candidate re gions. Subsequently, the growing process begins (line 4) a nd the algorithm tries to find the next region to extend ( lines 5-6) among the k Most Similar Trajectories ( k -MST) [10], as someone would expect to find the best region in one of these k regions. Note that searching for the introduces only a small overhead in the algorithm X  X  execution since the corresponding results are kept in a priority queue that has been fed during the initial ization of the seed region (line 3). Then the algorithm search es among the candidates regions, i.e., those that sati sfy the similarity and density constraints (line 7), in ord er to find the best, i.e., the one that has the maximum simila rity, or, the one that maximizes the average density after gr owing (lines 9-10). The whole process continues until no more growing can be applied (line 11), appending in each repetition the temporally local centroid L_CenTra CenTra (line 12). mentioned that its direct employment in the context of TD would result to an inefficient scheme: during the p rocess of transforming trajectories to data points, initial t rajectories should be interpolated at all time instances every other trajectory sampled its position, something that wou ld prohibitively increase the dimensionality of the pr oblem. More importantly, using an A-norm as the mean to measure the distance between trajectories, it is ex pected to encounter all the well-known problems being present when measuring the similarity in time series data, such as the presence of outliers, different speeds, local shift s, different baselines and scales. Furthermore, FCM tries to par tition the dataset simply by looking at the vector values ignoring the fact that these vectors may be accompanied by qualitative information (i.e., the uncertainty) whi ch may be given per dimension. our intuitionistic trajectory representation I-UnTra , i.e., the p -dimensional vectors of triplets ( ur i,j ,  X   X  ( ur i,j While it is evident that the FCM algorithm can not utilize intrinsically such qualitative information, we prop ose a different perspective by substituting the distance function with the distance metric D total introduced in Section 4. As such, the fuzzy c-means objective function takes th e form: Theorem 2. Given a ( p c  X  )-dimensional matrix V storing c centroids trajectories I-UnTra of dimensionality p centroid v i , a weighting exponent m  X  [1,  X  ), and sets 
I defined as : and Proof sketch: Eqs. (14) and (15) follow from straightforward mathematical operations. I-UnTra to the i -th cluster and it is different from the internal intuitionistic fuzzy memberships of each I-UnTra Moreover, after the centroids X  computation using Eq . (15) and before the next iteration, where the membership s the new clusters are updated, we calculate the memberships and non-memberships of the new (virtual ) centroid trajectories. At each iteration and for ev ery centroid we extract the membership degree membership degrees the memberships (non-memberships, respectively) of all I-UnTra that belong to cluster i . More formally, if C i defined as we obtain that: setting we would share the same problems with FCM a nd k-means. Since we are especially interested in the representation of real movement patterns, we could use the centroid trajectory derived by the density-based CenTra algorithm instead of this weighted averaging techni que; we argue that the adoption of CenTra as the update centroid methodology of the product of Theorem 2, will resul t to more meaningful trajectory clustering. The idea is that the algorithm implied by Theorem 2 iteratively tries to diminish the intra-cluster variance using some glob al, approximate distance metric, and CenTra comes at each iteration to push (i.e., grow) the centroid (only t he sub-trajectories and not the whole trajectory) towards interesting places, where interestingness in our case means high density and similarity. The incorporation of CenTra into FCM (named Centroid TRajectory Intuitionistic FCM (CenTR-I-FCM)) is a straightforward task and only t akes place at line 4 of the algorithm in Figure 3 with t he invocation of CenTra .

Figure 3 CenTR-I-FCM algorithm for clustering I-UnTra order to evaluate our approach. The experiments wer e run on a PC with Intel Core Duo at 2.53 GHz, 4 GB RAM a nd 240 GB hard disk. We implemented the proposed algorithms using C++. no available real dataset already clustered by a do main benchmarking. Nevertheless, in this paper, we have used a real dataset from which we extracted real clusters. The initial dataset consists of the GPS-tracked positio ns of 50 trucks transporting concrete in the area of Athens between August and September 2002 (the dataset is publicly available at http://www.rtreeportal.org). There are 112,300 position records consisting of the truck identifier s, dates and times, and geographical coordinates. The tempor al spacing is regular and equals 30 seconds. From thes e raw data, we produced 1100 trajectories by splitting th e recordings of a truck in subsets if there was a tem poral gap between two consecutive recordings larger than 15 m inutes (a gap that indicates a stop not due to traffic or traffic lights). Subsequently, we used the CommonGIS visual analytics tool [2] to manually identify real cluste rs, thus producing four identifiable clusters. More specific ally, we discovered two clusters of trajectories where the s tart and end locations almost coincide, i.e. each truck retu rned to its original location after performing a round trip; th e directions of the trips of the two clusters differ (we call these two clusters  X  X ound trips X  ). Likewise, we also discovered two clusters, moving E W and W E, respectively, (we call these two clusters  X  X inear trips X  algorithm appropriately modified for our needs. In order to be as fair as possible, this algorithm, named TR-FC M, uses our point vector representation of trajectories, al ong with the minimum distance between MBRs so as to calculat e the distance between the cluster X  X  centroid and eac h candidate trajectory. In our first experiment we em ployed only the two  X  X inear trips X  clusters. We then used our CenTR-I-FCM and TR-FCM algorithms varying the grid X  s cell size and  X  , and we measured the algorithm X  X  success as the percentage of the correctly classified trajecto ries. The corresponding results regarding CenTR-I-FCM are illustrated in Figure 4; note that cell size in Figure 4(a) and (b) is demonstrated as percentage of the size of th e total space. Regarding the other experiment X  X  parameters, in Figure 4(a) we fix the value for the density thresh old  X  to 2% (of the total number of trajectories), while in Figure 4(b), we set  X  to 1. In all cases we fix parameters  X  to 0.5 and k to the number of trajectories in each cluster. achieves very good results, with a typical rate abo ve 70%, while it reaches 90% when the cell size is set to i ts maximum value, regardless of the value of  X  and  X  , as clustering is performed at a higher granularity lev el where specific movement details are vanishing. On the oth er hand, when using the same experimental settings ove r TR-FCM, it produces rather poor results, with an avera ge success of about 53% regardless of the experimental settings. We also performed the same experiments on the other two clusters (i.e.,  X  X ound trips X ); the respe ctive figures are omitted due to space constraints. Never theless, the general observation obtained from this study, i s that the CenTR-I-FCM outperforms TR-FCM regardless of the experimental setting, verifying that it produces ve ry good clustering results, with a typical rate above 65%. where more than two clusters are present, we perfor med another experiment using different portions of the trucks dataset containing three (i.e., the two  X  X ound trip s X  clusters, and one of the  X  X inear trips X  clusters), and four clusters. The results of this experiment are illust rated in Figure 5(a); again, CenTR-I-FCM clearly outperforms its competitor. On the other hand, the performance of b oth algorithms evidently downgrades as the number of requested clusters increases; however the performan ce of our proposal decreases with a smaller ratio, always being above 75%. Figure 4: Clustering accuracy scaling (a) cell size,  X  and (b) algorithm, it was evaluated using the whole  X  X rucks  X  dataset by increasing the trajectory cardinality. T he results illustrated in Figure 5(b) demonstrate the efficien cy of the proposed algorithm for various numbers of clusters requested. It is clear that the performance of the algorithm is not affected by the number of clusters, while al l curves illustrated in Figure 5(b) imply that the algorithm has super-linear behaviour regarding the dataset cardin ality. 
Figure 5: (a) Clustering accuracy scaling the number of clusters (b) TR-I-FCM performance scaling the datas et quality of the CenTra algorithm. Although starting from different base lines and focusing on different appl ications, we compare it with the representative trajectory pr oduced by the state-of-the-art TRACLUS algorithm [14]. The result of the comparison is illustrated in Figure 6 . In particular, Figure 6(a) illustrates the outcome of TRACLUS. Evidently, the cluster representative (red line) does not fit the real movement, mainly due to its a veraging technique. Recall at this point that TRACLUS cluste rs segments rather than whole trajectories (even consi dering this, the algorithm does not compass the turn occur ring at the bottom of the figure). On the other hand, Figur e 6(b) and Figure 6(c) illustrate CenTra, produced with va riable cell size ,  X  and density  X  . It turns out that CenTra not only resides on the data traces, but also vanishes the n on-interesting movement details (the  X  X oisy X  infrequen t parts are not part of the centroid), it catches turns, an d it becomes thicker in portions where something interes ting (i.e. dense-similar subtrajectories) happens. clustering trajectories of moving objects, motivate d by the observation that clustering and representation issu es in TD that are inherently subject to uncertainty. Based o n our intuitionistic fuzzy vector representation of traje ctories, we defined a distance metric consisting of two compone nts, a metric for sequences of regions D UnTra and a metric for intuitionistic fuzzy sets D IFS , respectively, and used it to devise the so-called CenTR-I-FCM algorithm for clustering trajectories under uncertainty, which al so includes a novel technique for discovering the cent roid of a bundle of trajectories (called CenTra). The effecti veness and efficiency of our approach has been experimenta lly shown on a real trajectory dataset. we plan to adopt some clever sampling technique for multi-dimensional data so as to diminish the effect of initialization in our algorithms, while a second di rection includes the development of an index-based version for efficiency purposes and the performance of an exten sive experimental evaluation using large trajectory data sets. 
