 JIAN-YUN NIE, GUIHONG CAO, and JING BAI University of Montreal 1. INTRODUCTION
The goal of information retrieval (IR) is to find the documents relevant to a query. By relevant, we usually mean that the retrieved documents should be about the same (or at least similar) topic as the query. This does not mean that it is a necessary and sufficient condition that a relevant document con-tains all the keywords of the query. For example, it is possible that a document about algorithm complexity does not contain the keyword programming, but is nevertheless relevant to a query on programming; a document containing the keywords house and construction in a debate of the House of Commons may not be relevant to the query on house construction. These problems are well documented and are also referred to as the synonymy and polysemy problems.
Despite the problems just mentioned, the current state-of-the-art in IR im-plements the ranking score as a matching function between the words (or terms) in the document and the query: the more a document shares the terms with the query, the higher this document will be ranked in the retrieval result. Although this term matching function can find some relevant documents because most relevant documents indeed share some of the terms of the query, it usually also retrieves much noise and misses many relevant documents.

To deal with these problems, various approaches have been proposed. For example, instead of using words, one can create a new representation space from them that may better correspond to semantic dimensions of documents and queries. Latent semantic indexing [Deerwester et al. 1990] is such an ex-ample. One can also incorporate semantic relations between terms stored in a thesaurus to take into account the synonyms (or related terms). Typically, this can be used in query expansion in order to add related terms into the original query so that it has better coverage of the relevant documents. The utiliza-tion of such a resource is well motivated, because this would correspond to a truly semantic IR that uses inference based on term relationships. In practice, however, it is difficult to use it in an appropriate way. For example, in the exper-iments of Voorhees [1994], it has been shown that using WordNet [Miller 1990] does not improve the retrieval effectiveness. Although this result has been im-proved since then (indeed, some recent studies [Cao et al. 2005 and Mandala et al. 1998] show that we can increase the retrieval effectiveness using WordNet), a general framework appropriate for its implementation is still lacking. As Nie [2003] shows, query expansion is a particular case of inferential IR.
Research Projects on general inferential IR started long ago (e.g., Croft et al. [1988]; van Rijsbergen [1986]). Many of these studies concentrate on the defi-nition of new logical models capable of making inferences [Huibers et al. 1996;
Nie 1990; Bruza and Huibers 1996]. The basic idea is to consider the retrieval process as an inference process, that is, to infer whether there is a relevance relationship between the document and the query. This idea has been formu-lated in different ways, for example, as a Bayesian network [Turtle and Croft 1990], or in logic terms [van Rijsbergen 1986]. In the latter case, many of the proposed approaches either cannot scale up or they can hardly be implemented efficiently.

In recent years, language modeling has been successfully applied to IR. This new family of approaches has attracted a great number of investigations be-cause of their competitive experimental results as well as well-founded theoret-ical background. However, current LM approaches are unable to make logical inference. The central operation in them is model smoothing, which combines two (or more) term distributions, without using relationships between terms.
Nevertheless, Berger and Lafferty [1999]; Cao et al. [2005]; Bai et al. [2005] have shown that one can integrate relationships between terms (term rela-tionships) into LM. In this article, we argue and demonstrate that LM is an appropriate framework to implement basic inference operations, and this re-sults in an effective and efficient inferential model for IR.

In the rest the article, we will first review some of the previous approaches on inferential IR and LM. Then we will propose a new inferential IR model based on LM. Our implementation approach is still to use smoothing either on the document model or on the query model, but the smoothing process is done not only according to the collection model, but also according to term relation-ships. Several implementation details will then be described. The experiments of these models will be reported. These experiments are carried out on several collections (both in English and Chinese), showing that by integrating term re-lationships, we can obtain consistent and significant improvements in retrieval effectiveness. 2. LANGUAGE MODELING APPROACHES TO IR Let us first review some typical approaches to IR based on LM.

The basic idea of LM in IR was proposed in Ponte and Croft [1998]. Given a document D , a statistical language model (a unigram model) is constructed for D , P (. | D ). For a query Q , this document is ranked according to the probability
P ( Q | D ) X  X he probability of generating Q by the document language model. It is assumed that a query Q is composed of a sequence of words q are considered to be independent. So P ( Q | D ) can be estimated as follows:
Another formulation often used in IR is to rank a document according to the negative Kullback-Liebler divergence (KL-divergence):
As the last element in this formula only depends on Q , it does not affect the ranking of documents. So
It is easy to see a close relationship between formulas (1) and (2). In fact, if we simply use an ML estimation for P ( q i | Q ) in formula (2), then:
Indeed, when KL-divergence is used in IR the query model is usually not smoothed, and we only use maximum likelihood (ML) estimation P model, many terms will have nonzero probability, and, as a consequence, the query evaluation process becomes very expensive.

In the previous equations, P ( q i | D ) cannot be estimated by the following max-imum likelihood estimation: where c ( q i ; D ) is the occurrence count of q i in D , and is because some query terms may not appear in a document D , and this would lead P ( Q | D ) to 0, a result that we do not desire in IR. In practice, even when a document does not contain some of the query words, it still can be relevant, and it can be retrieved. Therefore, a relaxation is necessary. Smoothing is used to relax the constraint that all the query words should appear in a document.
Smoothing tries to attribute nonzero probabilities to terms that do not appear in a document. Another interpretation of smoothing is to consider a document as the result of a sampling process; some terms are selected, and some others are not. Among the missing terms, some should have been selected. So by smooth-ing, we try to recover those missing terms that should have been selected. A common smoothing method is the following Jelinek-Mercer smoothing:
This smoothing method makes a linear combination of two LMs, one created from the document and another from the whole document collection C . a smoothing factor which can be tuned empirically or through an automatic process such as expectation maximization (EM) [Dempster et al. 1997].
Many other smoothing techniques have been developed in statistical LM [Chen and Goodman 1998], and several have been successfully used in IR. Zhai and Lafferty [2001a] made an empirical study of the effects of smoothing on
IR effectiveness. It turns out that, by smoothing, one can naturally incorporate the IDF factor commonly used in IR.

However, the fact of attributing a nonzero probability to a missing term is by no means an inference. As we can see in the Jalinek-Mercer smoothing, this change is only due to a combination with another model built on the whole document collection. No term relationship is used. For example, given a doc-ument about natural language processing (NLP) and a collection containing documents of various topics, it is very possible that after smoothing, the term artificial intelligence (AI) would have similar probability to the terms tourism and shopping in that document: all the latter terms may be absent from the original document on natural language processing. Therefore, their probability may be a small value gained through probability redistribution during smooth-ing. If the whole collection is general (not specific to computer science), then it is possible that these terms have comparable probabilities after smoothing.
Intuitively, an inference process would attribute a higher probability to AI than to tourism and shopping because of its strong relation to NLP. This example clearly shows that the previous smoothing process is not a logical inference.
Despite this, the smoothing methods proposed so far have the merit of being robust to noise which is inherent in an IR environment. By noise we mean the fact that a document contains not only words strongly related to its topics, but also words unrelated to the topics. For example, a document talking about not related to the topic. Therefore, an IR method cannot take for granted that if a term is present in a document, it describes a relevant piece of semantics of the document. Neither can one consider that a missing term means that the corresponding semantics is also absent from the document. Through the relaxation effect, the smoothing methods allow us to obtain a query evaluation process more resistant to noise.

In an attempt to integrate term relationships, Berger and Lafferty [1999] proposed a translation model for IR in which term relationships (formulated as translation relationships) are integrated into the evaluation function as follows: where t ( q i | w j ) is the translation probability of w [1999], this relationship is estimated for pairs of words in the same language by considering a monolingual corpus as a parallel corpus: a sentence is considered parallel to the paragraph that contains it. Then, IBM Model 1 [Brown et al. 1990] is used to determine this probability. In fact, the relationship t ( q estimated in this way is a kind of co-occurrence relationship. Despite the lim-itation of this estimation method, the translation model itself can be suitable one in which to integrate other types of term relationships. In Cao et al. [2005], this translation model is extended successfully to integrate both co-occurrence and WordNet relationships. In this article, we propose to further generalize this framework to integrate more inference operations.

Before developing our method, let us first review some relevant logical ap-proaches to inferential IR proposed in previous research projects. 3. LOGICAL APPROACHES
Since the 1980s, many researchers have believed that further improvements in IR will have to integrate logical inference. van Rijsbergen [1986] proposes modeling the relevance of a document D to a query Q as a logical implication,
D  X  Q . If a query is implied by a document, then the latter is considered to be relevant. To deal with uncertainty in this implication, a logical uncertainty principle for IR is proposed. The uncertainty P ( D the amount of information that one has to add into the document to satisfy the query. The more information that is added to a document, the more uncertainty is attached to the relevance relation. This uncertainty principle is general and does not suggest a particular implementation. Since then, several studies have tried to implement it in different ways.

Crestani and van Rijsbergen [1995] propose to use logical imaging as a method to evaluate the probability of a counterfactual conditional, denoted by &gt; [Lewis 1973]. To evaluate the probability P ( D &gt; Q ), logical imaging tries to transfer the probabilities of terms to their closest neighbors appearing in D , creating a new probability distribution P D (.). Then the probability P ( D is evaluated as P D ( Q ). However, the experiments have not shown that the approach can outperform the classic IR approaches. Nie and Lepage [1998] de-veloped a general framework based on conditional logic to take into account the retrieval context: given a retrieval context, a document under consideration is considered to contain some new information. This later is assimilated into the context, making a new context that simulates the situation where the informa-tion described by the document is acquired. Then the query is examined with respect to the new context to see if it is satisfied. This model is capable of con-sidering contextual factors such as the information already known to the user. However, the proposed model is difficult to implement in practice.
Nonmonotonic reasoning in IR has been examined in several studies. In particular, Bruza and Huibers [1996], Bruza et al. [2000], and Wong et al. [2001] consider aboutness as relevance, and they further propose an axiomatic system to formalize aboutness, which may be nonmonotonic. The logical properties of aboutness can be used to compare different models or systems, but they do not directly suggest an efficient way to implement an inferential IR system.
Huibers et al. [1996] formulate inference in IR as information flow, that is, one tries to determine if a situation described in a document can entail that required by a query. To deal with uncertainty, Dempster-Shafer theory is used.
Lau et al. [2004] and Lasado and Bareiro [2001] use belief revision to deal with nonmonotonic inference: a retrieval situation (including the user X  X  knowledge or belief) is represented by a belief set which can contain ambiguity. Once a query is submitted, the belief set is revised in such a way that the knowledge that is the most coherent with the query is kept (see Lau et al. [2004] for details of the definition of coherence). Then documents are compared with the revised belief set to determine their degree of relevance.

In the studies presented on logical IR, it was generally assumed that classical logic is inappropriate for IR because of the utilization of the material impli-cation  X  . This inappropriateness has been analyzed in several investigations [Nie and Lepage 1998, van Rijsbergen 1986, Bruza and Huibers 1996, Lalmas and Bruza 1998]. Two main types of inappropriateness have been pointed out. (1) Classical logic is unable to do nonmonotonic reasoning, whereas inference (2) Classical logic cannot deal with uncertainty which is inherent in IR. In A proper treatment for nonmonotonic reasoning in IR is a difficult enterprise.
Until now, no adequate model has been able to deal with this problem and be implemented efficiently. On the other hand, the consideration of uncertainty in inference is mandatory in any attempt with inferential IR. In this situation, we believe that it is useful to consider first the basic inference corresponding to that in the classical logic. Although this latter is unable to account for all the inference phenomena in IR especially nonmonotonicity, it does capture the central part of the inference in IR. In the current state of IR where we cannot describe document contents and information needs precisely in strict logic ex-pressions, it is reasonable to first integrate the basic part of inference in IR in an efficient way. This is the approach we take in this article. Therefore, in the remaining part of the article, we will not deal with nonmonotonicity of inference in IR and restrict ourselves to the classical form of inference.

As formulated in Nie [2003], the essential part of inference in IR corresponds to the following transitivity of implication:
If we interpret  X  as relevance as proposed by van Rijsbergen [1986], then we can consider the following cases of relevance between a document D and a query Q :
These formulas can be read as follows. To determine that D is relevant to Q , (1) we can determine if there is a new form of query Q such that Q implies (2) or we can determine if there is a new form of document D such that D is
Query expansion can be considered as a particular case of the first formula, that is, the new form of query Q is the one expanded from Q by adding new terms that are related to Q . This new query is thought to imply Q , that is,
Q  X  Q . If a document matches the new query, then it is assumed to match the original query and is retrieved. This transitivity property can be applied mul-tiple times. However, if the implication relation is associated with uncertainty (as it is in our case), then the more we have to apply transitivity to satisfy
D  X  Q , the more D  X  Q becomes uncertain. This uncertainty aspect will be taken into account later in our model. Similarly, the second formula can be called an approach using document expansion.

Unfortunately, it is difficult to propose a general framework to implement the previous approaches directly. The main problem is that there may be many related forms of document and query, and they are not independent. If all the dependences have to be taken into account, we will obtain a very inefficient system. Therefore, simplifications have to be made.

In this article, we propose to implement inference in the LM framework, mak-ing the same simplification assumptions. There are several reasons to choose
LM as our implementation tool.  X  X M is robust to noise. As IR always deals with noisy and incomplete docu-ment and query expressions, the capability of reasoning in a noisy context is important. This sharply contrasts LM to the classical rule-based inference in AI.  X  X M makes a series of simplification assumptions in order to implement it efficiently. Although these assumptions are not true in reality, the success in experiments shows that they are a good compromise between efficiency and the capability of reasoning.  X  X M is a framework flexible enough to integrate different types of relations.
In addition to the co-occurrence relations, there are also manually-identified relations stored in thesauri. All these relations can be integrated in LM in the same way.

In the next section, we will describe in detail our inferential language models. 4. GENERAL INFERENTIAL LANGUAGE MODELS
Our goal in this section is to define LMs with some capability of logical inference, while keeping them efficient. We formulate the degree of certainty of relevance
P ( D  X  Q )as P ( Q | D ). As in other LM-based approaches, we also assume here that query terms are independent. Then we have the same general formulation of the generative model and a model based on KL-divergence. 1. Generative model 2. KL-divergence:
Notice that we no longer assume an ML estimation for query model P (.
KL-divergence, and we consider all the words in vocabulary ( V ) in this general form.

The problem now is to determine good document and query language mod-els, that is, P (. | D ) and P (. | Q ). In the previous LM approaches, these models are built using the following two distributions (a) the term distribution in the document or query, and (b) the term distribution in the whole document col-lection. As we mentioned earlier, it is possible that after a classical smoothing process, related and unrelated terms are attributed with similar probabilities.
Our intended smoothing method tries to expand the original document or query models so that the related terms have higher probabilities. This is a new type of semantic smoothing that exploits the relationships between terms.
In what follows, we will first formulate two basic approaches that integrate this idea. Then some further extensions will be considered. 4.1 Inference as Document Expansion in Generative Model Inference in documents tries to infer implied information from a document. This means building a new document model which integrates related terms. The following logical inference describes what we want:
That is, to determine if (and to what degree) a query term q ment ( D  X  q i ), we observe whether this term is implied by another term d the document. The appearance of a related term in the document means that the query term is also satisfied by the document to some degree.

The first part D  X  d j of the previous formula can be modeled by a classical document LM, P ( d j | D ). The key to implementing inference is to add the second component, d j  X  q i , that represents the relationships between terms. We will use P R ( q i | d j ) to represent P ( d j  X  q i ), the probability that q d through term relationships. These relationships will be determined either through term co-occurrences or a manual thesaurus (Wordnet). We will describe this in detail later. Now let us assume that we have the function P
Then the intended logical inference corresponds to the following formulation in language modeling framework, which creates a new LM P R (.
This formulation is similar to the translation model [Berger and Lafferty 1999]. Implicitly, we also assumed that the relations between a document term and the query term are independent as in Berger and Lafferty [1999], making it possible to sum up over all the document terms. Again, this simplification is made to make the model tractable.
 This approach can be easily reformulated in terms of logic: Figure 1 illustrates the corresponding inference process on a document.
Notice that the inference of the query term via another term in the figure is one way to prove that the query term is satisfied by the document. Another possible way is the direct appearance of the query term in the document. This latter case can be included in the first one by assuming that q relation. Another way to consider the self implication is to smooth the model P (. | D ) with a traditional unigram model P (. | D ) which can be considered as a particular case of P R (. | D ) defined previously, but with P ( q P ( q i  X  q j ) = 0 for q i = q j . By fixing an appropriate smoothing parameter, we can arrive at a similar result to the first approach. Formulated in terms of language modeling, the smoothed model P E is defined as follows: where P ( q i | D ) is a classical document language model (without inference) and  X  is a smoothing parameter. The model P E ( q i | D )is the resulting expanded doc-ument model.

By this smoothing, we consider indeed that there are two ways for a document to satisfy a query term: either the query term appears in the document, or a re-lated term appears in it. The latter case is exactly the desired inference process. 4.2 Inference as Query Expansion
Conceptually, similar inference can also be made on query. One would believe that it is easy to directly implement inference as query expansion in a symmetric way to document expansion. In fact, this is difficult with a generative model because a query is not an explicit unit in it, but instead is decomposed into separate words. For query expansion to make sense, there has to be a specific model for query which is the case of the approach using KL-divergence.
In the KL-divergence approach, we build both a document model and query model, and measure the difference (divergence) between them. As we mentioned, in the previous formulation, usually only the document model is smoothed with the collection model and the query model uses maximum like-lihood estimation. One can observe that the difference measured in this way is partial since a query usually only contains a few words. With a smoothed query model, the difference between document and query could be better mea-sured. In some recent work [Zhai and Lafferty 2001b; Lavrenko and Croft 2001,
Kurland et al. 2005], the query model is also smoothed with a set of feedback documents in different ways. Pseudorelevance feedback is known to be an ef-fective way to complete the partial expression of a query in order to find more relevant documents. However, smoothing using feedback documents still relies only on a redistribution of probability without considering term relationships. Our query smoothing is based on term relationships. The expanded query model P where V is the vocabulary.

However, from the practical point of view, this query model smoothing has a serious problem. If the term relationship P R ( q i | q j a statistical method, then very likely a given query term q tionship with many terms q i in the vocabulary. This would result in a very large set of query terms with nonzero probability and inefficient query evaluation.
To solve this problem, we observe that, in general, a given term will have a relatively strong relationship with a small number of terms and a very weak relationship with the other majority of terms. The latter can be considered as the noisy part of the relationship and can be ignored. From this point of view, we can limit the query expansion process only to the strongest part of the relationship, for example, by limiting the number of expansion terms or by selecting the terms with a sufficient degree of relationship with an original query term. Let E be the set of the most strongly related terms selected, and let Q E be the resulting expanded query. Then we have P E q /  X  Q following:
It is easy to see that the this query expansion approach is not strictly equiv-alent to the earlier document expansion approach because the equivalence can only be established when we use ML estimation for the query model. However, there is still a close relationship as we will show in the following.
Indeed, the query smoothing process can also be understood as a traditional process of query expansion which tries to create a new query Q related terms. The new probability function P E (. | Q ) can also be considered as a ML estimation for the expanded query Q E if we assume the following word counts in Q E : c ( q i ; Q E ) = We can easily check that P E ( q i | Q ) = P ML ( q i | Q function can be rewritten as follows:
R ( D , Q ) =
We see that the corresponding query evaluation process is still equivalent to a generative model with the expanded query. This approach can be formulated as a particular case of P ( D  X  Q E ) P ( Q E  X  Q ), with P ( Q above Q E .

Both document and query expansion approaches implement the basic ideas of inference in IR. They can be enhanced in several respects. We will now examine two such aspects, namely, integration of specificity in inference and multistep inference. 4.3 Specificity and Exhaustivity
The above inference processes can go through an inference path via some in-termediate terms w . The higher P ( D  X  w ) P ( w  X  q i ), the more the word w will play an important role in the retrieval process. From a logical point of view, this process is reasonable. However, it does not distinguish between a general word and a specific word as the intermediate term w . Imagine that to infer the word computer from a document about algorithms, we have two possible intermediate terms programming and part. Suppose that these two words appear in that document. Then a possible path to infer computer goes through part with probability P ( D  X  part ) P ( part  X  computer ). If term re-puter, and P ( part  X  computer ) &gt; 0. So this path is invalidated. However, if term relationships are extracted from documents based on co-occurrences, then it is possible that P ( part  X  computer ) &gt; 0 because the frequent word part may co-occur often with many other words. As a consequence, the path
P ( D  X  part ) P ( part  X  computer ) is considered as a possible one to infer com-puter from the document. Obviously, this is not a desirable inference path.
What we want is to infer computer through another term, namely, program-ming, in the path P ( D  X  programming ) P ( programming  X  previous inference processes cannot distinguish between these two paths. To make things worse, in general, a more general term w (such as part) usually has a higher P ( D  X  w ) than a more specific term for many documents. Even if P ( w  X  q i ) is lower for a general w , when both probabilities are combined, general terms can be selected to the detriment of more specific terms. In the case of query expansion, selecting more general expansion terms often leads to noise expansion terms.
 What is missing in our formulation so far is the consideration of specificity.
In fact, logical modeling often tries to formulate one-directional implication, that is, w  X  q i or D  X  Q for the complete document and query, as proposed in van Rijsbergen [1986]. When no uncertainty is involved, this makes perfect sense. However, when uncertainty occurs, this implication is not all we want.
When we select a perfect document for a query, we want to ensure that, on the one hand, the document is about all the aspects of the query, and, on the other hand, the document concentrates on the topic of the query and does not talk about many other topics. The first factor is called exhaustivity of the document for the query, and the second one specificity . They are represented respectively by the following logical expressions D  X  Q and Q  X  D in Nie and Lepage [1998]. The same concepts also apply to a single query term D
The problem we observed in one-directional implication is closely related to the lack of specificity. In order to take this into account, we propose to use w  X  q logic inference becomes: This is a stricter reasoning schema than the earlier implication transitivity.
This formulation is more reasonable in IR. The addition of the reverse impli-cation q i  X  w allows us to avoid selecting too general expansion terms. In our model, we propose to use the following formula to evaluate P ( w where 0 &lt; X  &lt; 1 is a factor that determines the relative importance of each im-plication, and  X  is a normalization factor that ensures P ( q function, that is, q of the implications in both directions. As we will see in our experiments, the consideration of implications in both directions produces better results. 4.4 Multistep Inference Using Markov Chain
The inference processes described so far use only one-step inference. However, inference should not be limited to one step: if  X  X lgorithm X  is related to  X  X ro-gramming X  and  X  X rogramming X  to  X  X omputer X , then  X  X lgorithm X  is also related to  X  X omputer X . So, a more complete inference can be achieved by allowing multi-step inference. This multistep inference process can be formulated as a Markov chain or random walk as follows.

Let E be a set of terms that are strongly related to the original query as before, and w  X  E be a possible expansion term. To use a Markov chain or random walk, w is viewed as a state, P 0 ( w | Q ) is the initial distribution, which can also be viewed as the prior probability of term w . One way to define it is to use P E ( w | Q ) defined in Equation (3). We will see in the next section that we can also incorporate feedback information in defining it. P as the probability of state transition from w to w . Then the query model using the transition can be defined as: where P t ( w | Q ) is the query model after t -th updating. To ensure this Markov chain has a unique stationary distribution, we define the probability as: With up to T transitions, the resulting probability of w in query Q is
The Markov chain just defined has a unique stationary distribution and it can be calculated as: This function P M ( w | Q ) is used as the final query model.

The previous inference process integrates up to T steps of inference. There-fore, the inferential power is increased. Of course, the longer the inferential process is, the more uncertain the resulting terms are related to the original query. This is characterized by (1  X   X  ) t in the preceding formula. Although
T  X + X  is used in the equation, we observe in our experiments that a limited number of transitions (about 10) are sufficient to make P 5. IMPLEMENTATION 5.1 Basic Language Model
In all cases, we need a basic language model for a document X  X moothed unigram model. In our implementation, we use the following model that interpolates ML estimation with an absolute discount [Zhai and Lafferty 2001a]: where  X  is the discount factor (which is set at 0.7 as suggested in Zhai and Lafferty [2001a]), | D | is the length of the document, | terms in the document, and P ML ( w i | C ) is the maximum likelihood probabil-ity of the word in the collection C . This smoothing method is chosen among a set of other smoothing methods (such as Jelinek-Mercer smoothing and
Dirichlet smoothing) because it resulted in the most stable performance in our experiments. 5.2 Term Relationships
To implement the models described in the previous section, we first need to et al. 2005]:  X  X ne can derive term relationships by analyzing term co-occurrences. This is one of the common ways used in IR. The assumption is that the more two terms co-occur in the same windows of some size (empirically set at 7 in our case), the more they are considered to be related. Then a probability function P ( w i | w j ) can be defined as follows: where c ( w i , w j ) is the count of co-occurrences of w collection.  X  X everal linguistic resources have been created manually that contain rela-tionships between terms. WordNet [Miller 1990] is an example. Such a re-source can also be used to define another function: P WN ( w is a relationship between w j and w i in the linguistic resource. A problem arises when such a manually-prepared resource is used; usually no numer-ical value is available to define P ( w i | w j ). In order to arrive at a definition of the required probability function, we combine the manual resource with co-occurrences according to the following principle. The probability of a term relation is nonzero only if the terms have a relationship in the manual re-source; the more these terms co-occur in the same windows, the stronger their relationship is. Then we can arrive at the following definition of another term relationship P WN ( w i | w j ) using WordNet and co-occurrences: where c WN ( w i , w j ) is the count of co-occurrences of two words with a relation-ship in WordNet. The window used for WordNet relationships are different from the one for previous co-occurrence relations: We consider a paragraph as a window.
 5.3 Combination of Different Types of Term Relationships Term relationships from different resources have different characteristics.
Those stored in a manual thesaurus such as WordNet are manually validated, but they are often ambiguous and incomplete. The relationships extracted from document collections are strongly related to the area of the document collec-tion, and the coverage may be relatively good. However, much noise (false re-lationships) will also be extracted. Therefore, a good approach is to combine both types of relationship. Such a combination has been used in Mandala et al. [1998]. Here, we use smoothing for this combination. Then in a document ex-pansion approach, the expanded part of the new document model with both WordNet and co-occurrence relationships is as follows:
Defining P CO ( q i | D ) = d ( q | d j ) P ( d j | D ), we have :
Finally, the preceding model is smoothed with the classical (noninferential) document unigram model P U ( q i | D ) to obtain the final model:
The final document model is illustrated in Figure 2. In this figure, we can see that the probability of a query term q i in a document is determined through three paths: by the classical unigram model, or by one of the relation models. All the paths are assumed to be independent.

The parameters  X  R and  X  CO can be tuned by EM that tries to maximize the likelihood of the query Q by the whole collection ( N documents). Let set of all the parameters of the model, and  X  q = [  X  R , tuned. Then the best  X  q is such that: feedback documents to the query. They are not fixed, but tuned during the EM process. This allows us to allocate higher weight to documents that generate the query well and presumably are also more likely to be relevant.
However, the top N retrieved documents also contain nonrelevant docu-ments. To account for the noise, we further assume that these documents are generated from two sources, relevant documents and a noise source which is approximated by the collection C . Then the previous equation can be rewritten as follows: where  X  is the weight of the noise.  X  is set at a nonzero value (0.3 in our ex-periments), otherwise it would become close to zero because in this way, the documents would have higher likelihood. In fact, the role of bustness counteract to the noise of the training data. In EM, the corresponding update formulas are as follows (we do not provide details for their derivation here): and 5.4 Improving Query Expression Using Feedback
A common problem in IR is that queries are usually short, 2 X 3 words in gen-eral for queries sent to search engines on the Web. Such a short descrip-tion of information cannot be precise. Even in the case of a longer query need because there are always missing aspects, and there may be alterna-tive descriptions of it. One way to enrich the query expression is to use feed-retrieved documents (feedback documents) are assumed to be relevant, and they are used to add new terms into the query or to define a new query model.

Let F be the set of feedback documents. A new query model can be created by combining the initial model with the feedback model as follows: where P ML ( w | Q ) is the ML estimation probability of w in Q , P ( w model created from document set F . It is important to use P above equation in order to prevent the query from drifting from the original query. We have a number of approaches to estimate P ( w | estimation or with a relevance model Lavrenko and Croft [2001]. Here, we use a mixed model presented in Zhai and Lafferty [2001b]. In this model, we optimize P ( w | F ) in order to maximize the likelihood of feedback documents.
Let  X  be the parameters of a possible model and  X   X  be the optimal one. We have: where c ( w ; D ) is the count of w in D .

As in Section 5.3, this model will cause overfitting, and to the ML model. So, we also add a noise source, which is simulated by the collection model as follows:  X   X  = arg max
The EM algorithm is used again to obtain  X   X  , with the following update formulas: and p converge quickly. In our experiments, we only need to iterate about 10 times.

The model P F ( w | Q ) determined by Equation (7) can be used in two ways.  X  X t can be used as the final query model and to calculate a score based on
KL-divergence. To do this, one also has to limit the number of expansion words added into the query, otherwise the query evaluation process would be inefficient. In our case, we choose 80 expansion terms. This corresponds to the model MixM that we test in Section 6.3.  X  X t can be used as the initial probability P 0 ( w | Q ) in Equation (4). The Markov chain (random walk) model then performs multistep inference to derive new expansion terms. 5.5 Extracting Term Relationships from Feedback Documents
In Equation (7), a new LM is created for the feedback documents F . However, it is still limited to a term distribution. As the feedback documents usually correspond better to the query than the documents in the collection in gen-eral, it is also possible to extract term relationships from F . In doing so, the extracted term relationships may become more relevant to the particular area of the query. The experiments in Xu and Croft [1996] show that the expansion terms extracted from feedback documents (called local context analysis) are better than those extracted from the whole collection (global context analysis).
Following the same idea, once we identified a set (20) of feedback documents, we extracted co-occurrence relationships from these documents, and these re-lationships were combined with the co-occurrence relationships extracted from the whole collection. The following formula describes this approach: where P R ( w | w ) is the relationship extracted from the whole collection, and P
F ( w
English, both of them integrate co-occurrence relationships and WordNet re-lationships as before. For Chinese, they are co-occurrence relationships only.
The parameter  X  1 is set between 0.8 X 0.9. The effectiveness is quite stable with respect to this parameter so we did not tune it through EM (although this is possible).

P RF ( w | w ) is used as the new transition probability in Equation (4) for random walk. This is the model identified as RandM tested in Section 6.3. 6. EXPERIMENTS
In order to test the effectiveness of the models described in the last section, we carry out a series of experiments on four TREC collections X  X hree of them are
English collections and one is a Chinese collection. For the Chinese collection, we test with both short queries (title) and long queries (title and description).
The utilization of the Chinese collection aims to show that the proposed method is language independent and can be used on different languages. Table I shows the statistical information of the test collections. 6.1 Data Preprocessing
All English documents have been preprocessed in a standard manner; terms were stemmed using the Porter stemmer and stopwords were removed. The queries are Topics 51 X 100 used in TREC. We used the title and description fields of the topics. These queries contain 13 words on average. The document set comes from the TREC disks 2 and 3.

For English, we also use WordNet as a source of term relationships. We use WordNet version 2.0. For each word in the vocabulary of the dataset, we extract its synonym, hypernym, and hyponym from WordNet and build a pool of related terms for it. The processing is done offline. As we do not explicitly consider compound terms, all the compound terms in WordNet are decomposed into their component words.

For Chinese, the entire dataset (including the documents and queries) was converted into GB2312 encoding. We carried out a dictionary-based word segmentation. The dictionary contains 137,613 Chinese words. This dictionary is compiled by UC Berkley, and it has been used in several TREC experiments on Chinese IR. According to Foo and Li [2004], we can obtain the best IR results when most segmented Chinese words have two characters. Therefore, we limit the length of the word to 3 characters when we segment Chinese texts and queries. The queries and documents are processed in the same way, and we do not filter out any stopword. Because there is not a counterpart to
WordNet in Chinese, we only use co-occurrence relationships, that is, Equation (6) is set to 1.
 6.2 Experiments on Document Expansion For English, our document expansion model is that described in Section 5.3.
In Table II, we show the results obtained for each test collection. The unigram model is the basic LM that implements Equation (6) using absolute discounting smoothing. The document expansion model implements Equation (7).

Table II compares the results of the unigram model and document expansion model. AvgP is the noninterpolated mean average precision. Recall shows the number of relevant documents that are retrieved among the top 1,000 results over all relevant documents.

As we can see, on all the test collections, the document expansion model out-performs the basic unigram model. In 3 of the 5 experiments, the improvements are statistically significant (at the level of p -value &lt;
This series of experiments shows that inference implemented as document ex-pansion can improve IR effectiveness on both English and Chinese documents. 6.3 Experiments on Query Expansion We test the following three query expansion models.

QE . This is the basic query expansion model, which uses term relationships extracted from co-occurrences and from WordNet (for English). We use 80 ex-pansion terms in this experiment. This model corresponds to Equation (6). The experiments aim to show the contribution of inference in query expansion based on term relationships.

MixM . This is the mixed model which is presented in Zhai and Lafferty [2001b] which uses feedback documents. In this experiment, the original query is first expanded using term relationships from the whole collection. The top 20 documents are used as feedback documents and 80 terms are smoothed with the original query model. These numbers are suggested by Zhai and Lafferty [2001b]. This model corresponds to Equation (7).

RandM . This is the random walk model which uses MixM as the initial distribution P 0 ( w | Q ) in Equation (4). The transition probability incorporates the co-occurrence relationships extracted both from the whole collection and from 20 feedback documents (Equation (8)) as well as WordNet for English. To compare the two models, we use the same values for the common parameters as MixM. The goal of this experiment is to show the impact of adding multistep inference on a model using feedback documents.

All of the models incorporate specificity, that is, equivalence instead of one-directional implication. The parameter  X  in Equation (7) is set at all datasets except CH2 for which it is set at 0.8. We will see later that this is better than one-directional inference.

Table III shows the results of these models (where UM is the same unigram model as before).

We can see that the basic query expansion model (QE) only marginally out-performs the unigram model. For Chinese, in particular, virtually no improve-ment has been obtained. This result is not really surprising, and it is consistent with several studies on query expansion (e.g., Voorhees [1994]).

Comparing the results we obtained by document expansion, the poor result of query expansion suggests that the two approaches behave in different ways, although conceptually they are similar. In particular, query expansion seems to be more sensitive to noise introduced during expansion. Indeed, in document expansion, since there are many more original terms than in a query, even if an expansion introduces some noise terms, expansion terms may still converge globally to the related terms, and we can still obtain some reasonable expansion terms. For query expansion, however, such a convergence is much more difficult to obtain because of the small number of terms. This fact is directly related to the richness of context for expansion.

We show here the query 70 in the AP collection as an example. The origi-nal query is  X  X itle: Surrogate Motherhood; Description: document will report judicial proceedings and opinions on contacts for surrogate motherhood X . After query expansion, the strongest terms introduced into the query are sign, paper, account, state and so on. We can see that these terms are not strongly related to the query. Their introduction into the query brings noise.

In contrast, we can see in the column MixM that the utilization of a feedback model mixing with the original query model is highly effective. This result is similar to that of Zhai and Lafferty [2001b]. The addition of feedback documents clearly allows us to create a better query model.

What is interesting to observe is that, once feedback documents are used to enhance the query model, term relationships become more useful. This can be observed in the column RandM in which feedback documents are used in the following two ways: (1) to create a feedback unigram model as in MixM, and (2) to provide a subset of documents from which co-occurrence relationships are extracted. This provides us with more related expansion terms. For the same query just mentioned, the strongest (stemmed) terms suggested by new term relationships are: court, whitehead, year, suprem, gould, mother, case, and so on, which are more related to the query.

The improvement obtained with this model is not surprising. As the docu-ment collection contains documents on various topics, the term relationships extracted are also applicable to different areas. It is not possible for us to se-lect only the relationships appropriate to the query (area). As a consequence, ambiguous words are expanded in all the possible areas, resulting in a very noisy query model. In contrast, when we extract term relationships from the feedback documents, filtering has been made during the first retrieval. It can be assumed that the relationships extracted from the feedback documents are more related to the query. This observation is similar to that on global and local context analysis in Xu and Croft [1996]. This provides another explanation as to why there is a large difference between QE and RandM in their improvements over UM and MixM, respectively. 6.4 The Effect of Integrating Specificity
The addition of reverse implication to account for specificity of expansion terms brings a notable improvement. Table IV shows the results obtained with one-and two-directional implications. We can see that the consideration of specificity is useful on all the collections. The increase of effectiveness on CH1 is the most important.

We observe that in general, when specificity is not considered, many queries are expanded with terms such as time, part. Table V contains the 20 strongest terms after expanding the query on  X  X nsider trading, document discusses an insider-trading case X  (Query 55). The original terms are in bold. Table VI con-tains the strongest terms when we also use specificity in the query expansion. The terms in italic are the terms that are most different between the two tables.
We see that the unrelated words such as time, thing, part, work, etc. are now at-tributed lower probabilities and even removed from the expansion terms, while several other related terms, such as law, import, export, negotiation are added.
Globally, our experiments show that when inference is applied, either to doc-ument expansion or to query expansion, the retrieval effectiveness is generally increased. This result is confirmed on several test collections in two different languages. These experiments tend to validate our initial claim that  X  X nference can improve IR, and  X  X M is a reasonable framework to implement inference efficiently. 7. RELATED WORK The integration of term relationships in LM was the subject of Berger and
Lafferty [1999]. Our basic approach on document expansion is similar to theirs, but we use more term relationships. In this article, we further extended the approach to query expansion. In addition, we also integrated into the models several other aspects related to inference such as specificity and multistep infer-ence. Therefore, our approach is a substantial extension of Berger and Lafferty [1999].
 In an attempt to integrate term relationships into a probabilistic framework,
Turtle and Croft [1990] proposed a model based on a Bayesian network. The basic idea is comparable to that of our models: one aims to infer the relationship between a document and a query through relationships between terms. Even though the frameworks used in our work and in that of Turtle and Croft are different (LM vs. Bayesian network), it is possible to make a close comparison between them. Indeed, the Bayesian network used in Turtle and Croft [1990] contains several layers, including a term layer for terms in documents and a concept layer for terms contained in a query. The inference operation is enabled by the possible connections between document terms and query terms. This is similar to our term relationship P R ( w | w ), but, in Bayesian networks, it is not restricted to one single term in the condition part and can be P ( w w , ... ). However, the complexity of the model increases exponentially with the number of terms in the condition part. In their implementation, Turtle and Croft also limited the dependencies to simple ones for efficiency. The conditional making the models simpler.

Pseudorelevance feedback has been used in many IR experiments, for ex-ample, Zhai and Lafferty [2001b] and Kurland et al. [2005]. In most of them, feedback documents are used to determine another term distribution, which is then used in combination with the original query. In our approach, we also extracted term relationships from feedback documents, creating a set of local term relationships that are more related to the query. Our experiments show that this extension can further improve retrieval effectiveness.

Markov chain has been used in several previous studies of LM in IR. For example, Lafferty and Zhai [2001] created a Markov chain which alternates between terms and documents, that is, an inference of term from another term has to go though documents. In our model for multistep inference, a Markov chain is created directly between terms based on their co-occurrences. Although the formulation is not the same, the basic idea is comparable. Indeed, if one can derive a strong relationship between two terms, t 1 and t
D in the Markov chain used in Lafferty and Zhai [2001], this is also because both P ( D | t 1 ) and P ( t 2 | D ) are strong. In this case, both t occur relatively frequently in D , and we can also extract a strong co-occurrence relationship between them from D .

Various logical models have been proposed in previous studies [Crestani and van Rijsbergen 1995; van Rijsbergen 1986; Huibers et al. 1996; Nie et al. 1998;
Lau et al. 2004; Lasado and Bareiro 2001]. Although these models all have great theoretical inferential power, it is difficult to implement them in an effi-cient way due to their complexity. In this study, the models we proposed are not comparable to these logical models in terms of inferential power. Nevertheless, our models can carry out the basic inference operation. The inferential lan-guage models have made several simplification assumptions to make inference tractable in practice. In particular, we have limited ourselves to certain types of term relationships. Different inference paths have also been considered to be independent; this allows us to sum up the probabilities inferred by all the paths.
Our implementation and experiments showed that indeed, these models with many logical models, the calculation of uncertainty involved many heuristics. In our case, the whole development of these models follows the theoretical frame-work of LM without introducing such heuristic calculation. The models we pro-posed represent a good compromise between theoretical inferential power and practical efficiency. 8. CONCLUSIONS
In this article, we proposed to integrate the basic inference operations of IR within the language modeling framework. Inference based on term relation-ships has been implemented either as document expansion or query expansion.
Different from the traditional approaches using LM, smoothing is now given an inference role, that is, to infer alternative representations of a document or query using relationships between terms. The resulting models are augmented by an inference capability.

Beside the basic inferential models for document and query expansion, we also considered several important aspects in their implementation: the con-sideration of specificity, the utilization of multistep inference, as well as the exploitation of pseudorelevance feedback.

Our experiments have been carried out on four TREC collections. The re-sults showed that these inferential models are also effective in practice: The addition of inference in our models brings significant improvements to several test collections. In addition, we also showed that the improvements can be ob-tained in both English and Chinese collections, regardless of language. Indeed, beside the linguistic resource WordNet, term relationships have been extracted from documents according to their co-occurrences. This process can be carried out on any language.

This study demonstrates that the LM framework is suitable for implement-ing some inference operations in IR, due to its flexibility and its robustness to noise. The success of the proposed models also suggests that our approach to increase inferential power of IR is reasonable; we start with a robust model and try to integrate as much inference capability as possible.

This study is a first attempt to integrate inferential capability into LM. The integration proposed in this article is far from reaching its limit. We only con-sidered simple term relationships, that is, a relationship between one term and another term. This gives rise to the problem of ambiguity, for instance, when meanings X  X rogramming language, island, or coffee. A better way to make an inference is to consider context. If we are able to identify the meaning of the word, then the expansion will result in better expansion words. Unfortunately, word disambiguation is still a difficult operation. A less ambitious method is to consider the inference of a term from a combination of some terms, for exam-ple, Java and computer. The terms in the combination could serve mutually as context when we determine the related terms. Bai et al. [2005] have proposed an approach to query expansion using context-sensitive term relationships ex-tracted according to information flow Song and Bruza [1998]. They showed that this type of term relationship can suggest better query expansion terms than the traditional term relationship between two single words. The integration of this new type of term relationship in the inference models is a promising av-enue to explore to further improve the latter. Inference using context-sensitive term relationships could produce conclusions of higher quality.

The proposed models do not consider the user or the user X  X  domain of exper-tise. These variables have a great impact on the relevance of the documents retrieved. There are several interesting extensions of LM in this direction. For example, Liu and Croft [2004] proposed a LM using document clustering: a document is considered to be in its domain formed by the cluster. Document cluster can be used to improve the document expansion model as follows. We can extract term relationships from each document cluster and apply them on the documents in the cluster. By doing this, we could apply more relevant term relationships to expand documents. The same idea can be applied on a query model. One can constitute a set of documents in the user X  X  domain of interest of (e.g., by gathering all the documents that the user has read for one type of task or in one area) and use them to construct a domain model and to extract domain-dependent term relationships. It is also possible to use a Web directory (e.g., ODP 1 ) to identify a set of documents in each of the identified categories and use them to construct a domain LM or to extract domain-related term relationships. We are also testing this approach, and our preliminary results show very encouraging results.

