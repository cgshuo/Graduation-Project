 With recent advances in radio-frequency identification (RFID), wire-less sensor networks, and Web-based services, physical things are becoming an integral part of the emerging ubiquitous Web. In this paper, we focus on the things recommendation problem in Inter-net of Things (IoT). In particular, we propose a unified probabilis-tic based framework by fusing information across relationships be-tween users (i.e., users X  social network) and things (i.e., things cor-relations) to make more accurate recommendations. The proposed approach not only inherits the advantages of the matrix factoriza-tion, but also exploits the merits of social relationships and thing-thing correlations. We validate our approach based on an Internet of Things platform and the experimental results demonstrate its fea-sibility and effectiveness.
 H.3.5 [ Information Storage and Retrieval ]: Online Information Services; E.2 [ Data Structures ]: Graphs and Networks Internet of Things, Recommendation, Social Networks
Recent advances in identification technologies such as radio fre-quency identification (RFID), wireless sensor networks, and nan-otechnology make computing power available in smaller and smaller physical things. Indeed, our world is slowly evolving into an envi-ronment where everyday things such as buildings, commodities are readable, recognizable, addressable, and controllable through the Internet [1, 9]. While it is well understood that such a ubiquitous environment offers the capability of integrating both the physical world and the virtual one, which creates tremendous business op-portunities such as efficient supply chains, it also presents signifi-cant challenges. With many things connected and interacting over the Internet, there is an urgent need to provide effective mechanism for search, recommendation, annotation and classification across the diverse set of things to reveal interesting patterns among them. tionalities in real life (i.e., usefulness), as well as non-functionalities (i.e., availability). For example, different things provide different functionalities (e.g., microwave and printer), and will be of inter-est to different groups of people. Pairwise things with strong cor-relations indicate either they have similar functionalities (i.e., mi-crowave and roaster) or they have more likelihood to be used to-gether. For instance, a water tap and a chop board are both in use when we prepare meals, since most of the time we need to wash cooking ingredients (e.g., vegetables) before chopping them. In ei-ther case, related things usage patterns will be reflected.
Things recommendation in IoT can be formulated as predict-ing the dyadic relationships (e.g., things usage) between people and things. This prediction is based on three types of dyadic re-lationships, namely people to things , people to people , and things to things , as shown in Figure 1. A straightforward method is to utilize a series of discrete characteristics of things in order to rec-ommend additional items with similar properties. However, this approach is not feasible in IoT since it is not easy to directly craft things X  profiles and present in a meaningful feature space. Despit recent efforts in semantic techniques [1], it is still hard to character-ize things due to their diverse and heterogeneous nature in terms of functionalities, access methods or descriptions. Moreover, utilizing a series of discrete characteristics does not take into account the in-fluence of users X  social networks and mutual correlations of things, nor the historical information on user interactions with things.
Collaborative Filtering (CF) recommendation has been widely used by exploiting past behaviors between users and items (i.e., rating scores on items, click-through data or browsing history etc.) without profiling users or items [7]. Several recent approaches based on CF also take into account the users X  social networks [6, 8] to achieve more accurate performance. However, few work con-siders the impact of contextual information on mutual correlations between things.

In this paper, we propose a probabilistic matrix factorization based model to address things recommendation problem in IoT. We fuse information from users X  social networks and things correla-tion networks, by learning shared latent factors stemming from the probabilistic matrix factorization on three matrices, namely users X  relations, things correlations, and observable things usage interac-tions. Our main contributions are summarized as follows:
The rest of this paper is organized as follows. In Section 2, we present our model on things recommendation. We show our ex-perimental evaluation in Section 3. In Section 4, we overview the related work and provide some concluding remarks.
Figure 2 shows our model that fuses social network, things corre-lations and user-thing interactions, and incorporates three relation-ships: user-user connections s ii , thing-thing correlations t jj and user-thing interactions (thing usage) y ij with shared factors u i and v . We describe how to encode these three relationship matrices in our model from Section 2.1 to Section 2.3.
 top-k set of correlated things to t i . E = { e ( x, i ) | X  t i  X  T,t x  X  T } , where e ( x, i ) is an edge from t x to t i . Each edge is associated
Things correlation value R t x ,t i is not handy to obtain due to some unique challenges. To tackle this problem, we have developed a graph-based model to predict correlations [9], which is briefly de-scribed here. We derive correlations among things by mining the history of things usage events. In particular, we construct a spatio-temporal graph G m and a social graph G u to model things usage contextual information and interactive relationships between users and things. The spatio-temporal graph captures the spatial and tem-poral information in things usage events, i.e., where and when a cer-tain thing is accessed. In constructing this graph, we integrate the spatial and temporal information to capture periodic patterns be-tween locations and timestamps for improved performance. Then, we perform random walks with restart [3] on both graphs to obtain pairwise relevance R m and R u respectively, and sum them up to get overall pair correlation R =( R m + R u ) / 2 , which indicates thing-thing correlations.

Similar to modeling social networks, things correlation matrix is decomposed to thing-based latent features vectors v j  X  R 1  X  n and factor-based latent feature vectors v j  X  R 1  X  n on analyzing the things correlation graph G t . The conditional probability of t jj relies on things latent factors and can be denoted as:
User-thing interactions y ij are embodied by the usage frequency of thing i by user j in a certain time frame. We can map the us-age frequency to interval [0 , 1] by using function f ( x )=( x  X  y min ) / ( y max  X  y min ) without loss of generality, where y max and y min are the maximum and minimum usage values respectively. The dyadic relationship between a user and a thing does not only depend on their latent factor U T V , whose vulnerability is that it makes use of past interactions and can not handle brand new things well, i.e., cold start problem. To tackle this issue, we use the ex-plicit features directly by profiling users observable features x i  X  R c (i.e., age, gender, location etc.) and things observable features z  X  R d (i.e., textual description of things functionalities). Here, c and d are the dimensionality of users observable features and things observable features respectively. The dyadic relationship (thing us-age value) depends on not only the inner product of latent factors of users and things, but also their observable features. Things usage value y ij can be defined as the following conditional probability:
We adopt the bilinear product to specify the similarity between user observable features and thing observable features [2]. The pairwise similarity between x i and z j can be denoted as: where w is a column vector of entries { w mn } , x i  X  z j denotes the Kronecker product of x i and z j . Equation 7 can be rewritten as: where matrix W  X  R m  X  n is a weight coefficients capturing pair-wise associations between user i  X  X  explicit feature vector and thing j  X  X  explicit feature vector. The thing usage value depends on both the inner product of user and thing latent factors and the bilinear the ground-truth dataset in our experiments. Ten volunteers partici-pated in the data collection by interacting with RFID-tagged things for a period of four months, generating 20,179 records on the in-teractions of the tagged things. Table 1 shows the statistics of six categorical things of the dataset. Scale refers to the usage frequency between the most frequent used things and the least frequent used things. For example, in Cooking , one of the least used thing is the blender (48), while one of the most used thing is the fridge (2336, the door open/close times of the fridge). All scale values are pro-cessed to make them in [0,1] as discussed in Section 2.3.
We adopt Mean Absolute Error (MAE) to measure the accuracy of our approach. MAE calculates the average of absolute difference between predicted usage values and actual values as the following: where y ij is the actual thing X  X  usage value between user i and thing j ,  X  y ij is the predicted value, and n is the number of the predicted values. The lower the MAE, the better the performance.
We compare the prediction accuracy of our approach based on fusing social networks and things correlations (FST) with some state-of-the-art approaches based on probabilistic factor analysis: Probabilistic Matrix Factorization (PMF) [7], SoRec [6] and SVD++ [5]. This experiment evaluated our approach, in particular its capa-bility in handling the cold start problem, which refers to providing accurate prediction when some users only use few things or even have no usage historical records at all. In order to verify the capa-bility of our approach on predicting usage value of things that have not been used, we randomly selected and marked off p % of data ( p = 10, 20 and 50) from our dataset as training data and different number of latent factors (5 and 10) to test all the methods. The experimental results are shown in Table 2.

From the table, it is clear that our approach outperforms other methods on different training ratios and different number of factors, especially when the training data is small. PMF is a pure probabilis-tic factor model. Relying heavily on user-thing usage matrix, it can not deal with the circumstance where little interactions information is available. SoRec works better than PMF and SVD++ because of its aggregation of user-user internal information (social links). Our approach not only incorporates users and things internal informa-tion, but also defines the explicit features (i.e., content) for users (e.g., users profile) and things (e.g., description of things function-alities), which makes our approach performing better when there is a cold start problem. The experimental result further demonstrates the effectiveness on improving the recommendation accuracy by incorporating things correlations.
