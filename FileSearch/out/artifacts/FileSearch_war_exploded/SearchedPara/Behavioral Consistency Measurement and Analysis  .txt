 In SOA (Service-Oriented Architectures), Web Services Business Process Execution Language (WS-BPEL [1] or BPEL) is the de facto standard for service-based business processes. With BPEL processes enriching and expanding constantly, many Business parties build the BPEL process repositories. In order to retrieve, maintain and reuse these BPEL processes better, an appropriate criterion is indispensable to determine the consistency between BPEL processes. For example, when one wants to insert a new BPEL process into a process repository, he first ought to make sure that the same BPEL process is absent from the repository. Then, he further needs to determine which BPEL processes are similar to the newly-added one. In such situations, we need to study the consistency degrees of different BPEL processes. 
Different criteria can be used to formulate the consistency between two BPEL processes. For instance, we can study this issue from the interface perspective and define the consistency degree based on the match degree of interfaces. However, this criterion is not appropriate because the behaviors of two BPEL processes may quite different even if they share the same set of interfaces. In this paper, we study the consistency between two BPEL processes from the behavioral perspective. 
One can utilize different notions of equivalence in the linear time-branching time spectrum [2] to define the behavioral consistency between two process models. For example, trace equivalence is commonly seen as the lower bound of this spectrum, but it is still too strict to determine the behavioral consistency between process mod-els [3] due to the following shortcomings. First, it is more sensitive to projections. If the additional start and end branches are introduced in a process model, the consisten-cy degree of process models before and after change are greatly affected. Second, it only provides a  X  X  X rue/false X  X  answer, which prevents it from finding different but similar process models. To this end, Weidlich et al. propose in [3] an approach based on behavioral profile which captures the essential behavioral constraints between activities in process models. Informally, two process models are consistent if their behavioral constraints are consistent for ever y aligned activity pairs. This approach is less sensitive to projections than the approach based on trace equivalence. Further-more, it can return a consistency degree ranging from 0 to 1. Obviously, the approach that is applied in the field of process models is very excellent. As we know, BPEL process is executable and it contains much specific information, such as partnerLinks, the variables of input and output. Unfortunately, the important information has been abstracted away in process models, thus, behavioral profiles are inappropriate to de-termine the consistency degrees of BPEL processes.

To address this problem, we will propose in this paper a behavioral consistency measurement of BPEL processes. In the software engineering community, consisten-cy refers to a  X  X egree of uniformity, standardization, and freedom from contradic-tions X  [4]. Similarly, we define the consistency between BPEL processes as a  X  X egree of invariance of the activity relations and freedom from contradiction X . The activity relations considered here include exclusiveness and three kinds of  X  X appens-before X  activity dependences (i.e., control dependence, data dependence, and asyn-invocation dependence). These activity relations can be captured into a BPEL program depen-dence graph (BPDG) [5], [6]. Based on BPDGs, we present our consistency mea-surement and the corresponding analysis approach to determine the consistency degree of two BPEL processes. 
The contribution of our work is threefold. First, we propose a novel approach to quantitatively determine the behavioral consistency between two BPEL processes based on their BPDGs, rather than as the conventional approaches only provide a qualitative conclusion of consistence or inconsistency. Second, we implement a proto-type tool to calculate the consistency degree of two BPEL processes. Third, we apply our approach by analyzing the consistency between some real-life BPEL processes. 
The remainder of the paper is structured as follows. Some preliminaries are intro-duced in Section 2. In Section 3, we propose our measurement and the analysis approach to partnerLinks the consistency degree of two BPEL processes. In Section 4, we discuss some implementation issues for our prototype tool and report our findings of applying our approach in practice. We discuss the limitations of our approach and review related work in Section 5 and 6, respectively. Section 7 concludes the paper. In this paper, we leverage behavioral constraints to quantify the consistency between BPEL processes. To facilitate users to understand our approach better, we review some preliminaries in this section. We show the input and output of each activity of a BPEL process that is associated with the corresponding node (activity) in the BPEL Control Flow Graph (BCFG) [7]. Thus, not only control dependence but also data dependence between activities can be analyzed. To make this paper self-contained, we first review the concepts of control and data dependences [8]. 
Activity A j is control dependent on its prior activity A i , iff A i determines whether A j is executed in BPEL process. Generally speaking, A i denotes some conditions activi-control dependent on node B , and Entry node controls nodes A , B and E in Fig.1. 
Data dependences can be classified into three categories in BPEL process: true-data dependence, anti-data dependence and output-data dependence [8]. The anti-data and output-data dependences can be avoided through the variables renaming, so only the true-data dependence is considered in the paper. We can discuss Fig.1 again. Since node B uses the output of node A , node B is true-data dependent on node A . Analogous-ly, nodes E , C 1 and C 2 are respectively true-data dependent on nodes D 1 or D 2, A . 
Apart from control and data dependencies, it defines a novel dependence, namely, asyn-invocation dependence [5]. This dependence is caused by the asynchronous communicating mechanism between BPEL processes. In Fig.1, we can see that activi-ties C 1 and C 2 are two asynchronous &lt;invoke&gt; activities, and the responses of activi-ties C 1 and C 2 are respectively received by activities D 1 and D 2 . 
BPDG represents a BPEL process as a directed graph where these nodes denote basic or structure activities except for Entry node and the edge indicates some depen-dences between two nodes. We can present the following definition of BPDG. Definition 1 (BPEL Program Dependence Graph, BPDG) [5] . A BPEL program dependence graph is a directed graph &lt; N, E &gt; , where 1. N is a set of nodes. There is one Entry node in N while the other nodes denote the activity statements and predicate expressions. 2. ENN  X  X  is a set of directed edges, and an edge &lt; X, Y &gt;  X  E directed from X to Y denotes the control, data, or asyn-invocation dependence between the two activities or predicate expressions represented by X and Y . In this paper, we capture these three kinds of dependences in BPDG to analyze the consistency of BPEL processes. The set of all dependences for BPEL process may be viewed as inducing a partial ordering on the activities and predicates that must be followed to preserve the semantics of the original process. BPDG makes the depen-dences explicit between activities. We can realize that as only one branch can be ex-ecuted in the selective structures of BPEL process, there is exclusiveness relation between activities on these different branches. In order to accurately describe BPEL process, each control dependence edge can be labeled  X  X rue X  ( X  X  X ) or  X  X alse X  ( X  X  X ). Additionally, the data dependence edges should be attached to correlated variables, but the labels are omitted in order to conveniently denote them. 
Actually, it not only limits to the three ones for the dependence relations of BPDG, that is, extendibility. We are also able to put forward other appropriate dependences. For example, when only considering some part or variable of a BPEL process, we can get the dependences about the part or variable based on user-defined dependence. It helps to simplify and understand BPEL process. In this section, we present our approach which measures the consistency between BPEL processes based on behavioral constraints. First, the consistency measurement of BPEL processes is defined in Section 3.1. Then, based on four instances, Section 3.2 analyzes the consistency degree of two BPEL processes and illustrates the advan-tages of our approach. 3.1 Consistency Measurement of BPEL Processes In the paper, we assume that the name of each activity is unique, and they are corres-ponding only if some attributes of activities from different BPEL processes are the same. The attributes contain name, types, partnerLink and portType. The alignment problem addresses the question whether two BPEL processes are consistent given a set of correspondences between their activities. The alignment can be further classi-fied into two categories: vertical alignmen t and horizontal alignment [9]. Horizontal alignment can generate a 1:1 correspondence between activities in two BPEL processes, and there are 1:2 correspondences between activities for vertical alignment. However, the consistency degree between aligned BPEL processes is independent on the distinction of vertical and horizontal alignment.

In practice, there are some differences for an alignment in BPEL processes and process models, and a different part is shown in Fig.2. Due to asyn-invocation depen-correspondences to both, namely, vertical alignment. Activity B is horizontal align-correspondences in model (a). Actually, there might be n: m correspondences between activities of the aligned process models in the different abstract level. The situation does not exist in BPEL processes. If an activity is discarded in BPEL process, we consider that they are preserved for data dependences between it and other activities. 
In general, our notion of BPEL processes consistency based on BPDGs is grounded on the preservation of behavioral relations for the corresponding activities. Thus, the problem of BPEL process consistency is transformed into the problem of activity constraint consistency. In order to specify the degree of behavior that is pre-served by an alignment, we define two sets of consistently aligned activity pairs, one for each of the aligned BPEL processes. These sets contain all pairs of activities that are aligned by a correspondence relation, and their relations with BPDGs preserving. Then, we define the consistency degree of BPEL processes following: Definition 2 ( Degree of Consistency of Alignment of BPEL Processes ) . For the threaded control flow graphs of two aligned BPEL processes, the degree of consisten-cy based on BPDGs of ~ is defined as The corresponding relation ~  X  ( N  X  N ) aligns both processes by relating corresponding aligned activities, and C 1 ~ and C 2 ~ denote the sets of the consistent activity pairs. 3.2 Consistency Analysis We have the following three steps to analyze the consistency degree of two BPEL processes (cf. Fig. 3). First, two BPEL processes are transformed into two BCFGs in which each node is associated with some relevant information, such as the name of activ-ity, the variables of input and output, partnerLinks, etc. Second, BPDGs of the two BPEL processes are derived by control, data, and asyn-invocation dependences analysis based process, since only a branch might be executed for this kind of structured activities, there is exclusiveness relation between any two activities on different branches. Third, we calculate the consistency degree of the two BPEL processes based on the obtained BPDGs. In fact, control dependence and data dependence have the different influence for the consistency degree of BPEL processes. We can realize that once control dependence of the corresponding activity of a BPEL process is changed, they are inconsistent for all corresponding activity pairs that contain the activity of the two BPEL processes, but data dependence may only affect the corresponding activity pair. 
We find that the notion of trace equivalence is very strict, for example, if the ex-ecuting order of activities is changed slightly, it might weaken the consistency degree heavily based on trace equivalence, even result in the degree being zero . Behavioral profile defines three behavioral constraints between activities in process model. The approach works wonderfully for checking th e consistency degree in process models, but it is not appropriate to BPEL processe s because they contain much data informa-tion. As BPDG captures the essential dependence relations between activities in BPEL process, it describes the behavior constraints of BPEL process roundly. The approach is applicative to measure the consistency degree of BPEL processes. 
We show the advantages of our approach through BPEL processes of the travel agency. We make some adjustments and obt ain these processes, according to the tra-vel agency process in [6], [10]. As the case has the characteristics of the general BPEL process, it is applied to many publications. We first introduce the background of the travel agency as followed: based on the booking information of airline and hotel, the travel agency process can invoke the airline process and hotel process and send the confirmed information to the user. 
Fig.4 is the four variants for the process model of the travel agency service on the same abstract level. Obviously, the differences between models (a) and (b) are that the execution order of the corresponding activities is changed. However, the order struc-tures in the models (a) and (b) are transformed into the concurrent structure for the cor-responding activities in the model (c). For the model (d), some corresponding activities are orderly executed, and the other are concurrently executed. We can select a pair from the four process models at random to calculate consistency degree based on trace equi-( A contains twenty traces. According to [3], the consistency degree based on trace equiva-lence equals P T ~ = 11 numbers of the consistent activity pairs are |T ~  X  T ~ | =36 for both models. An analysis of models (a) and (c) reveals that each model contains eighteen corresponding activity pairs that are inconsistent based on behavioral profiles. That is, these corresponding activity pairs with the reversed pairs have different behavioral relations in both models. Therefore, the consistency degree based on behavioral profile is P P ~ = 18 18
Fig.5 shows four BPDGs that are respectively from the corresponding process models of Fig.4. As there is not selective structure in these BPEL processes, exclusion relation is not considered. We are able to realize that control and data dependences between all corresponding activity pairs are consistent for each pair of BPEL processes in Fig.5. Thus, the four variants of the travel agency process are completely consistent on the same abstract level. 
Fig.6 is a histogram that we check consistency degree based three approaches re-less deviations between BPEL processes, these deviations can fall into two situations. In the first situation, the corresponding activity pairs from two BPEL processes have the same control flow, but the dependence relations are inconsistent. An example is that there is data dependence in an activity pair of a BPEL process, but the dependence relation does not exist in the corresponding activity pair of the other BPEL process. The approaches based on trace equivalence and behavioral profiles cannot identify the slight inconsistency. It only returns a false result to users. On the contrary, our ap-proach can identify these inconsistent activity pairs and provides a more reasonable consistency degree. In the other situation, two BPEL processes have different control flows, but their dependence relations are normally consistent. For instance, an activity of the other BPEL process is the concurrency relation. If there are no dependences in the two activity pairs, the consistency degrees based on trace equivalence and beha-vioral profiles respectively are lower than the consistency degree based on BPDGs. Our examples belong to the second situation. From Figure 6, we can conclude that it is appropriate to assess consistency degree of BPEL processes based on BPDGs. In this part, we first introduce some implementation issues of our prototype tool, and then demonstrate the application of our approach in practice. Finally, we analyze the threats of our experiment. 4.1 Implementation We have implemented a proof-of-concept tool that can automatically calculate the con-sistency degree between BPEL processes. The input of this tool is two BPEL processes and its output is the behavioral consistency degree of the two BPEL processes. In the implementation, the two BPEL processes are first transformed into two BCFGs, and each node in the BCFGs is associated with some relevant information, such as the name of activity, the variables of input and output, partnerLinks, etc. Then, BPDGs of the two BPEL processes are derived by control, data, and asyn-invocation dependence analysis based on the BCFGs. We use the matrixes to represent BPDGs, which facilitates the calculation of the consistency degree of the two BPEL processes. The matrixes and BPDGs are displayed in the picture box for diagnosis. 
Fig.7 shows a snapshot of our tool. We can see that all dependence relations are dem-onstrated in the form of matrix for each BPEL process. For convenience, we assume that 1, 2 and 4 denotes the control, data and asyn-invocation dependences respectively. 4.2 Experiments In order to evaluate the applicability of our approach in practice, we apply our proto-type tool to analyzing consistency degrees of some BPEL processes borrowed and adapted from the Oracle BPEL Process Manager Samples. These BPEL processes are typical and cover a wide range of BPEL co ncepts and structures. We select some appropriate processes, and make some ad justments to obtain several variations. 
In our experiment, we calculate the consistency degrees of these BPEL processes based on trace equivalence, behavioral profiles and BPDGs respectively. Fig.8 (a) describes the distribution of the consistency degrees based on BPDGs against based on trace equivalence. Apparently, our approach shows a high alignment, when the consistency degree based on trace equivalence equals 0, that is, no trace is mirrored. With a high corresponding trace, the consistency degree based on BPDGs might be higher. Once the consistency degree based on trace equivalence equals 1.0, the two BPEL processes are also completely consistent based on BPDGs. Fig.8 (b) shows the distribution of the consistency degrees based on BPDGs against based on behavioral profiles. Due to all alignments with at least two correspondences, the consistency degrees by using the two approaches cannot equal 0. We can find that the consistency degrees based on BPDGs are concentrated in higher values even equals 1.0. When the consistency degree based on behavioral profiles is more than 0.9, our approach can obtain a consistency degree approaching 1. Obviously, BPEL processes with a high alignment can get a high consistency degree by using our approach even if the consis-tency degree is somewhat low by using trace equivalence and behavioral profiles. 4.3 Threats to Validity The selection of process pairs could introduce a potential threat to validity. We al-ready mentioned that we did not try to apply a random sampling, but rather relied on those variants of the same BPEL process. These BPEL processes are somewhat sim-ple in the dimension and structure and they are propitious to our experiment. This implies a certain threat to representativeness. Additionally, despite the members that construct these BPEL processes belong to the same research group with a similar professional background, everyone understands BPEL processes differently. This might make some deviation for deciding on the degree of consistency. 
The paper chooses some appropriate BPEL processes to illustrate the feasibility of our approach and the results show that it is promising. However, one major concern is the external validity of our approach, namely, whether or not our approach is applica-ble to other BPEL processes. With this consideration in mind, we plan to apply our approach to more large-scale, evolving BPEL processes in the future. Our consistency measurement is defined on the activity relations (exclusiveness and different kinds of dependences) in BPEL processes. In practical uses, however, different kinds of activity constraints may lead to different effects for the consistency degree. For example, control dependence might be regarded as more important than data dependence in consistency measurement. In these situations, we should consider the weights of different kinds of activity constraints in the definition of consistency measurement. Nevertheless, it is not an easy job because the weights are somewhat subjective and some domain knowledge also needs to be considered. We plan to study this problem in our future work. It is noted that the consistency degree is highly related to the process alignment. Our consistency analysis approach first automatically determines the aligned activity pairs in two BPEL processes, and then calculates the consistency degree of the two BPEL processes. Therefore, the consistency result will be affected if the aligned ac-tivity pairs are wrong. To address this limitation, when the consistency degree of BPEL processes is below one (e.g., 0.8), the aligned activity pairs and inconsistent activity pairs of the two BPEL processes can be provided to users. Users can leverage their domain knowledge to make a decision whether or not the alignment is reasona-ble and inconsistencies are tolerable. Another limitation of our approach is that it only covers some basic structures and elements of WS-BPEL 2.0. Some advanced struc-tures are not fully supported yet, e.g., &lt;for each&gt;, &lt;link&gt;, etc. Thus, our approach is now only applicable to a subset of BPEL processes. 
The consistency measurement is a first attempt to define the consistency degree of BPEL processes. However, it is unknown how the experts of business processes assess the consistency between BPEL processes, and which kind of measurement criterion they perceive to be appropriate. In the future, an empirical study based on statistical hypothesis testing is needed to show the appropriateness of our approach. In this section, we review two related areas of research: the consistency and similarity of workflow models, the substitutability and consistency of BPEL processes. 
Weidlich et al. propose in [3] a consistency measurement of process models based on the notion of behavioral profiles which capture the essential behavioral constraints of process models. The approach is wonderful to assess the consistency between process models. Compared with the approach based on trace equivalence, our approach can provide a consistency degree ranging from 0 to 1 rather than a  X  X  X rue/false X  X  an-swer. However, both the approaches based on trace equivalence and behavioral profiles work at the level of abstract process models and are not appropriate to determine the consistency degrees of BPEL processes. 
The concept of similarity is similar to the definition of consistency in the software engineering. Determining the similarity degree between process models is important for management, reuse, and analysis of workflows. However, how to retrieve the simi-lar models efficiently from a large model repository is a challenge. Most of the existing works of business process similarity are based on the control flow graphs of the process. Various notions of edit distance are used for deciding on the differences of two processes [11], [12], [13]. Recently, different approaches that measure the similari-ty between models based on their behaviors have been proposed. One metric is built from five elementary similarity measures that are based on behavioral profiles and the Jaccard coefficient [14]. The proposed similarity measure is based on the notion of  X  X rincipal transition sequences X , which aims to provide an approximation of the es-sence of a process model in [15]. van Dongen et al. use causal footprints as an abstract representation of the behavior captured by a process model. Based on the causal foot-print derived from two models, their similarity based on the established vector space model from information retrieval can be calculated. [16]. 
As the first section discussed, there are various researches that are related to the substitutability of BPEL processes and process selection based on the behavior of BPEL processes. In terms of behavior-based process selection, it can take a directed graph as control flow model of BPEL process. Then, the problem of BPEL process selection converts to the problem of an al ignment of the directed graphs [11]. When there are not consistent BPEL processes to meet the user X  requirements in BPEL process repository, it can select similar processes to the user [17]. Song et al. propose a BPDG-based approach for the substitutability analysis of WS-BPEL processes [6]. This approach considers both synchronous and asynchronous communication me-chanisms into account, and thus is promising in practice. In this paper, we propose a novel behavioral consistency measurement and correspond-ing approach to quantitatively determining the behavioral consistency of BPEL processes based on their BPEL program dependence graphs. We implement our ap-proach in a prototype tool. To show the applicability of our approach in practice, we apply our approach to analyzing consistency between the real-life BPEL processes. Our current work still has some limitations which are discussed in Section 5. In the future, we will try to address these limitations to improve the applicability and effectiveness of our approach and also leverage activity constraints captured in BPDGs to quantify the similarity between BPEL processes. Acknowledgements. This work is supported by the National Natural Science Founda-tion of China (No. 61202003), the Specialized Research Fund for the Doctoral Pro-gram of Higher Education (No. 20113219120021), the Major Research Project of Jiangsu Province (No. BK2011022), and the State Key Laboratory of Software Engi-neering (No. SKLSE2012-09-05). 
