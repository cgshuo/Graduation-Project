 With the fast growth of Web 2.0, a vast amount of user-generated content has accumulated on the so-cial Web. In particular, microblogging sites such as Twitter allow users to easily publish short in-stant posts about any topic to be shared with the general public. The textual content coupled with the temporal patterns of these microblog posts pro-vides important insight into the general public X  X  in-terest. A sudden increase of topically similar posts usually indicates a burst of interest in some event that has happened offline (such as a product launch or a natural disaster) or online (such as the spread of a viral video). Finding bursty topics from mi-croblogs therefore can help us identify the most pop-ular events that have drawn the public X  X  attention. In this paper, we study the problem of finding bursty topics from a stream of microblog posts generated by different users. We focus on retrospective detec-tion, where the text stream within a certain period is analyzed in its entirety.

Retrospective bursty event detection from tex-t streams is not new (Kleinberg, 2002; Fung et al., 2005; Wang et al., 2007), but finding bursty topic-s from microblog steams has not been well studied. In his seminal work, Kleinberg (2002) proposed a s-tate machine to model the arrival times of documents in a stream in order to identify bursts. This model has been widely used. However, this model assumes that documents in the stream are all about a given topic. In contrast, discovering interesting topics that have drawn bursts of interest from a stream of top-ically diverse microblog posts is itself a challenge. To discover topics, we can certainly apply standard topic models such as LDA (Blei et al., 2003), but with standard LDA temporal information is lost dur-ing topic discovery. For microblogs, where posts are short and often event-driven, temporal information can sometimes be critical in determining the topic of a post. For example, typically a post containing the word  X  X obs X  is likely to be about employment, but right after October 5, 2011, a post containing  X  X obs X  is more likely to be related to Steve Jobs X  death. Es-sentially, we expect that on microblogs, posts pub-lished around the same time have a higher probabil-ity to belong to the same topic.

To capture this intuition, one solution is to assume that posts published within the same short time win-dow follow the same topic distribution. Wang et al. (2007) proposed a PLSA-based topic model that exploits this idea to find correlated bursty patterns across multiple text streams. However, their model is not immediately applicable for our problem. First, their model assumes multiple text streams where word distributions for the same topic are different on different streams. More importantly, their model was applied to news articles and scientific publica-tions, where most documents follow the global top-ical trends. On microblogs, besides talking about global popular events, users also often talk about their daily lives and personal interests. In order to detect global bursty events from microblog posts, it is important to filter out these  X  X ersonal X  posts.
In this paper, we propose a topic model designed for finding bursty topics from microblogs. Our mod-el is based on the following two assumptions: (1) If a post is about a global event, it is likely to follow a global topic distribution that is time-dependent. (2) If a post is about a personal topic, it is likely to follow a personal topic distribution that is more or less stable over time. Separation of  X  X lobal X  and  X  X ersonal X  posts is done in an unsupervised manner through hidden variables. Finally, we apply a state machine to detect bursts from the discovered topics. We evaluate our model on a large Twitter dataset. We find that compared with bursty topics discovered by standard LDA and by two degenerate variations of our model, bursty topics discovered by our model are more accurate and less redundant within the top-ranked results. We also use some example bursty topics to explain the advantages of our model. To find bursty patterns from data streams, Kleinberg (2002) proposed a state machine to model the ar-rival times of documents in a stream. Different states generate time gaps according to exponential density functions with different expected values, and bursty intervals can be discovered from the underlying state sequence. A similar approach by Ihler et al. (2006) models a sequence of count data using Poisson dis-tributions. To apply these methods to find bursty topics, the data stream used must represent a single topic.

Fung et al. (2005) proposed a method that iden-tifies both topics and bursts from document stream-s. The method first finds individual words that have bursty patterns. It then finds groups of words that tend to share bursty periods and co-occur in the same documents to form topics. Weng and Lee (2011) proposed a similar method that first characterizes the temporal patterns of individual words using wavelet-s and then groups words into topics. A major prob-lem with these methods is that the word clustering step can be expensive when the number of bursty words is large. We find that the method by Fung et al. (2005) cannot be applied to our dataset be-cause their word clustering algorithm does not scale up. Weng and Lee (2011) applied word clustering to only the top bursty words within a single day, and subsequently their topics mostly consist of two or three words. In contrast, our method is scalable and each detected bursty topic is directly associated with a word distribution and a set of tweets (see Table 3), which makes it easier to interpret the topic.
Topic models provide a principled and elegan-t way to discover hidden topics from large docu-ment collections. Standard topic models do not con-sider temporal information. A number of temporal topic models have been proposed to consider topic changes over time. Some of these models focus on the change of topic composition, i.e. word distri-butions, which is not relevant to bursty topic detec-tion (Blei and Lafferty, 2006; Nallapati et al., 2007; Wang et al., 2008). Some other work looks at the temporal evolution of topics, but the focus is not on bursty patterns (Wang and McCallum, 2006; Ahmed and Xing, 2008; Masada et al., 2009; Ahmed and X-ing, 2010; Hong et al., 2011).

The model proposed by Wang et al. (2007) is the most relevant to ours. But as we have pointed out in Section 1, they do not need to handle the sep-aration of  X  X ersonal X  documents from event-driven documents. As we will show later in our experi-ments, for microblogs it is critical to model users X  personal interests in addition to global topical trend-s.

To capture users X  interests, Rosen-Zvi et al. (2004) expand topic distributions from document-level to user-level in order to capture users X  specif-ic interests. But on microblogs, posts are short and noisy, so Zhao et al. (2011) further assume that each post is assigned a single topic and some words can be background words. However, these studies do not aim to detect bursty patterns. Our work is novel in that it combines users X  interests and temporal infor-mation to detect bursty topics. 3.1 Preliminaries We first introduce the notation used in this paper and formally formulate our problem. We assume that we have a stream of D microblog posts, denoted as d , d 2 , . . . , d D . Each post d i is generated by a user u , where u i is an index between 1 and U , and U is the total number of users. Each d i is also associat-ed with a discrete timestamp t i , where t i is an index between 1 and T , and T is the total number of time points we consider. Each d i contains a bag of word-s, denoted as { w i, 1 , w i, 2 , . . . , w i,N an index between 1 and V , and V is the vocabulary size. N i is the number of words in d i .

We define a bursty topic b as a word distri-bution coupled with a bursty interval, denoted as (  X  over the vocabulary, and t b s and t b e ( 1  X  t b s  X  t b are the start and the end timestamps of the bursty in-terval, respectively. Our task is to find meaningful bursty topics from the input text stream.

Our method consists of a topic discovery step and a burst detection step. At the topic discovery step, we propose a topic model that considers both users X  topical interests and the global topic trends. Burst detection is done through a standard state machine method. 3.2 Our Topic Model We assume that there are C (latent) topics in the text stream, where each topic c has a word distribution  X  . Note that not every topic has a bursty interval. On the other hand, a topic may have multiple bursty intervals and hence leads to multiple bursty topics. We also assume a background word distribution  X  B that captures common words. All posts are assumed to be generated from some mixture of these C + 1 underlying topics.

In standard LDA, a document contains a mixture of topics, represented by a topic distribution, and each word has a hidden topic label. While this is a reasonable assumption for long documents, for short microblog posts, a single post is most likely to be about a single topic. We therefore associate a single hidden variable with each post to indicate its topic. Similar idea of assigning a single topic to a short se-quence of words has been used before (Gruber et al., 2007; Zhao et al., 2011). As we will see very soon, this treatment also allows us to model topic distribu-tions at time window level and user level.

As we have discussed in Section 1, an importan-t observation we have is that when everything else is equal, a pair of posts published around the same time is more likely to be about the same topic than a random pair of posts. To model this observation, we assume that there is a global topic distribution  X  t for each time point t . Presumably  X  t has a high prob-ability for a topic that is popular in the microblog-sphere at time t .

Unlike news articles from traditional media, which are mostly about current affairs, an important property of microblog posts is that many posts are about users X  personal encounters and interests rather than global events. Since our focus is to find popular global events, we need to separate out these  X  X erson-al X  posts. To do this, an intuitive idea is to compare a post with its publisher X  X  general topical interests observed over a long time. If a post does not match the user X  X  long term interests, it is more likely re-lated to a global event. We therefore introduce a time-independent topic distribution  X  u for each us-er to capture her long term topical interests.
We assume the following generation process for all the posts in the stream. When user u publishes a post at time point t , she first decides whether to write about a global trendy topic or a personal top-ic. If she chooses the former, she then selects a topic according to  X  t . Otherwise, she selects a topic ac-cording to her own topic distribution  X  u . With the chosen topic, words in the post are generated from the word distribution for that topic or from the back-ground word distribution that captures white noise. We use  X  to denote the probability of choosing to talk about a global topic rather than a personal topic. Formally, the generation process is summarized in Figure 2. The model is also depicted in Figure 1(a).
There are two degenerate variations of our model that we also consider in our experiments. The first one is depicted in Figure 1(b). In this model, we only consider the time-dependent topic distributions that capture the global topical trends. This model can be seen as a direct application of the model by Wang et al. (2007). The second one is depicted in Fig-ure 1(c). In this model, we only consider the users X  personal interests but not the global topical trends, and therefore temporal information is not used. We refer to our complete model as TimeUserLDA , the model in Figure 1(b) as TimeLDA and the model in Figure 1(c) as UserLDA . We also consider a standard LDA model in our experiments, where each word is associated with a hidden topic.
 Learning
We use collapsed Gibbs sampling to obtain sam-ples of the hidden variable assignment and to esti-mate the model parameters from these samples. Due to space limit, we only show the derived Gibbs sam-pling formulas as follows.

First, for the i -th post, we know its publisher u i and timestamp t i . We can jointly sample y i and z i based on the values of all other hidden variables. Let us use y to denote the set of all hidden variables y and y  X  i to denote all y except y i . We use similar symbols for other variables. We then have where l = u i when p = 0 and l = t i when p = 1 . Here every M is a counter. M  X  (0) is the number of posts generated by personal interests, while M  X  (1) is the number of posts coming from global topical posts by user u i and assigned to topic c , and M u i (  X  the total number of posts by u i . M t i ( c ) is the number of posts assigned to topic c at time point t i , and M t i is the total number of posts at t i . E ( v ) is the number of times word v occurs in the i -th post and is labeled as a topic word, while E (  X  ) is the total number of topic words in the i -th post. Here, topic words refer to words whose latent variable x equals 1 . M c ( v ) is the number of times word v is assigned to topic c , and M c (  X  ) is the total number of words assigned to topic c . All the counters M mentioned above are calculated with the i -th post excluded.

We sample x i,j for each word w i,j in the i -th post using where l = B when q = 0 and l = z i when q = 1 . M of words assigned to the background model and any topic, respectively, and M  X  (  X  ) = M  X  (0) + M  X  (1) . M is the number of times word w i,j occurs as a back-ground word. M z i ( w word w i,j is assigned to topic z i , and M z i (  X  ) is the to-tal number of words assigned to topic z i . Again, all counters are calculated with the current word w i,j excluded. 3.3 Burst Detection Just like standard LDA, our topic model itself finds a set of topics represented by  X  c but does not directly generate bursty topics. To identify bursty topics, we use the following mechanism, which is based on the idea by Kleinberg (2002) and Ihler et al. (2006). In our experiments, when we compare different mod-els, we also use the same burst detection mechanism for other models.

We assume that after topic modeling, for each dis-covered topic c , we can obtain a series of counts topic at different time points. For LDA, these are the numbers of words assigned to topic c . For TimeUserLDA, these are the numbers of posts which are in topic c and generated by the global top-For other models, these are the numbers of posts in topic c .
 We assume that these counts are generated by two Poisson distributions corresponding to a bursty state and a normal state, respectively. Let  X  0 denote the expected count for the normal state and  X  1 for the bursty state. Let v t denote the state for time point t , where v t = 0 indicates the normal state and v t = 1 indicates the bursty state. The probability of observ-ing a count of m c t is as follows: where l is either 0 or 1. The state sequence ( v 0 , v 1 , . . . , v T ) is a Markov chain with the follow-ing transition probabilities: where l is either 0 or 1.  X  0 and  X  1 are topic specific. In our experiments, we set  X  0 = 1 T count over time. We set  X  1 = 3  X  0 . For transition probabilities, we empirically set  X  0 = 0 . 9 and  X  1 = 0 . 6 for all topics.

We can use dynamic programming to uncover the underlying state sequence for a series of counts. Fi-nally, a burst is marked by a consecutive subse-quence of bursty states. 4.1 Data Set We use a Twitter data set to evaluate our models. The original data set contains 151,055 Twitter users based in Singapore and their tweets. These Twitter users were obtained by starting from a set of seed Singapore users who are active online and tracing their follower/followee links by two hops. Because this data set is huge, we randomly sampled 2892 users from this data set and extracted their tweets between September 1 and November 30, 2011 (91 days in total). We use one day as our time window. Therefore our timestamps range from 1 to 91. We then removed stop words and words containing non-standard characters. Tweets containing less than 3 words were also discarded. After preprocessing, we obtained the final data set with 3,967,927 tweets and 24,280,638 tokens. 4.2 Ground Truth Generation To compare our model with other alternative models, we perform both quantitative and qualitative evalua-tion. As we have explained in Section 3, each mod-el gives us time series data for a number of topics, and by applying a Poisson-based state machine, we can obtain a set of bursty topics. For each method, we rank the obtained bursty topics by the number of tweets (or words in the case of the LDA model) assigned to the topics and take the top-30 bursty top-ics from each model. In the case of the LDA mod-el, only 23 bursty topics were detected. We merged these topics and asked two human judges to judge their quality by assigning a score of either 0 or 1. The judges are graduate students living in Singapore and not involved in this project. The judges were given the bursty period and 100 randomly selected tweets for the given topic within that period for each bursty topic. They can consult external resources to help make judgment. A bursty topic was scored 1 if the 100 tweets coherently describe a bursty even-t based on the human judge X  X  understanding. The inter-annotator agreement score is 0.649 using Co-hen X  X  kappa, showing substantial agreement. For ground truth, we consider a bursty topic to be cor-rect if both human judges have scored it 1. Since some models gave redundant bursty topics, we al-so asked one of the judges to identify unique bursty topics from the ground truth bursty topics. 4.3 Evaluation In this section, we show the quantitative evalua-tion of the four models we consider, namely, LDA, TimeLDA, UserLDA and TimeUserLDA. For each model, we set the number of topics C to 80,  X  to 50 C and  X  to 0.01 after some preliminary experiments. Each model was run for 500 iterations of Gibbs sam-pling. We take 40 samples with a gap of 5 iterations in the last 200 iterations to help us assign values to all the hidden variables.

Table 1 shows the comparison between these models in terms of the precision of the top-K result-s. As we can see, our model outperforms all other models for K &lt; = 20 . For K = 30 , the UserLDA model performs the best followed by our model.
As we have pointed out, some of the bursty topics are redundant, i.e. they are about the same bursty event. We therefore also calculated precision at K for unique topics, where for redundant topics the one ranked the highest is scored 1 and the other ones are scored 0. The comparison of the performance is shown in Table 2. As we can see, in this case, our model outperforms other models with all K . We will further discuss redundant bursty topics in the next section. 4.4 Sample Results and Discussions In this section, we show some sample results from our experiments and discuss some case studies that illustrate the advantages of our model.

First, we show the top-5 bursty topics discovered by the TimeUserLDA model in Table 3. As we can see, all these bursty topics are meaningful. Some of these events are global major events such as Steve Jobs X  death, while some others are related to online events such as the scandal of a girl boasting about slapping her mother on Facebook. For comparison, we also show the top-5 bursty topics discovered by other models in Table 4. As we can see, some of them are not meaningful events while some of them are redundant.

Next, we show two case studies to demonstrate the effectiveness of our model.
 Effectiveness of Temporal Models: Both TimeLDA and TimeUserLDA tend to group posts published on the same day into the same topic. We find that this can help separate bursty topics from general ones. An example is the topic on the Circle Line. The Circle Line is one of the subway lines of Singapore X  X  mass transit system. There were a few incidents of delays or breakdowns during the period between September and November, 2011. We show the time series data of the topic related to the Circle Line of UserLDA, TimeLDA and TimeUserLDA in Figure 3. As we can see, the UserLDA model de-tects a much large volume of tweets related to this topic. A close inspection tells us that the topic under UserLDA is actually related to the subway systems in Singapore in general, which include a few other subway lines, and the Circle Line topic is merged with this general topic. On the other hand, TimeL-DA and TimeUserLDA are both able to separate the Circle Line topic from the general subway topic be-cause the Circle Line has several bursts. What is shown in Figure 3 for TimeLDA and TimeUserLDA is only the topic on the Circle Line, therefore the volume is much smaller. We can see that TimeLDA and TimeUserLDA show clearer bursty patterns than UserLDA for this topic. The bursts around day 20, day 44 and day 85 are all real events based on our ground truth.

Effectiveness of User Models: We have stat-ed that it is important to filter out users X   X  X erson-al X  posts in order to find meaningful global events. We find that our results also support this hypothesis. Let us look at the example of the topic on the Mnet Asian Music Awards, which is a major music award show that is held by Mnet Media annually. In 2011, this event took place in Singapore on November 29. Because Korean pop music is very popular in Singa-pore, many Twitter users often tweet about Korean pop music bands and singers in general. All our top-ic models give multiple topics related to Korean pop music, and many of them have a burst on Novem-ber 29, 2011. Under the TimeLDA and UserLDA models, this leads to several redundant bursty top-ics for the MAMA event ranked within the top-30. For TimeUserLDA, however, although the MAMA event is also ranked the top, there is no redundan-t one within the top-30 results. We find that this is because with TimeUserLDA, we can remove tweet-s that are considered personal and therefore do not contribute to bursty topic ranking. We show the top-ic intensity of a topic about a Korean pop singer in Figure 4. For reference, we also show the intensity of the topic on Steve Jobs X  death under each mod-el. We can see that because this topic is related to Korean pop music, it has a burst on day 90 (Novem-ber 29). But if we consider the relative intensity of this burst compared with Steve Jobs X  death, under TimeLDA and UserLDA, this topic is still strong but under TimeUserLDA its intensity can almost be ig-nored. This is why with TimeLDA and UserLDA this topic leads to a redundant burst within the top-30 results but with TimeUserLDA the burst is not ranked high. In this paper, we studied the problem of finding bursty topics from the text streams on microblogs. Because existing work on burst detection from tex-t streams may not be suitable for microblogs, we proposed a new topic model that considers both the temporal information of microblog posts and user-s X  personal interests. We then applied a Poisson-based state machine to identify bursty periods from the topics discovered by our model. We compared our model with standard LDA as well as two de-generate variations of our model on a real Twitter dataset. Our quantitative evaluation showed that our model could more accurately detect unique bursty topics among the top ranked results. We also used two case studies to illustrate the effectiveness of the temporal factor and the user factor of our model.
Our method currently can only detect bursty top-ics in a retrospective and offline manner. A more in-teresting and useful task is to detect realtime bursts in an online fashion. This is one of the directions we plan to study in the future. Another limitation of the current method is that the number of topics is pre-determined. We also plan to look into methods that allow appearance and disappearance of topics along the timeline, such as the model by Ahmed and Xing (2010).
 This research is supported by the Singapore Nation-al Research Foundation under its International Re-search Centre @ Singapore Funding Initiative and administered by the IDM Programme Office. We thank the reviewers for their valuable comments.
