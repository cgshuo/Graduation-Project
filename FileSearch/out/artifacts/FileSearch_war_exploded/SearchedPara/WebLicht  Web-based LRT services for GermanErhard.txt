 Currently, WebLicht offers LRT services that were developed independently at the In st i tut f X  r Inf ormatik, Abteilung Autom a-tische Sprachverarbeitung at the Unive r sity of Leipzig (toke n izer, lemmatizer, co -occurrence extraction, and frequency an a lyzer), at the Institut f X  r Maschinelle Sprachverarbe i tung at the University of Stuttgart (tokenizer, ta g-ger/ lemmatizer , German morpholog i cal analyser SMOR, constituent and depend ency par s ers), at the Berlin Brandenburgische Akad e mie der Wissenschaften (conversion of plain text to D -Spin format, tokenizer, taggers, NE reco g-this repository, the chaining mechanism as d e-scribed in section 3 is implemented. The W e-bLicht user interface encapsulates this chai n ing mec hanism in an AJAX driven web application. Since web applic a tions can be invoked from any browser, downloading and installation of ind i-vidual tools on the user's local computer is avoided. But u s ing WebLicht web services is not restricted to the use of the integrated user inte r-face. I t is also possible to a c cess the web services from nearly any programming la n guage, shell script or workflow engine (UIMA, Gate etc.) . Figure 1 depicts the overall structure of W e-bLicht.
 An important part of Service Oriented Arc hite c-tures is ensuring i nteroperability between the underlying services. Interoperability of we b ser v-ices , as they are implemented in WebLicht, r e-fers to the seamless flow of data b e tween them . To be intero p erable, these web services must first agree on pr otocols defining the interaction b e-tween the ser v ices (WSDL/SOAP, REST, XML -RPC). They must also use a shared and standar d-ized data e x change format, which is preferably based on widely a c cepted formats already in use (UTF -8, XML). W e bLicht uses the RESTsty le API and its own XML -based data exchange fo r-mat (Text Corpus Fo r mat, TCF). Figure 2 shows a screenshot of the W e bLicht web interf ace , developed and hosted in T X bi n-gen . Area 1 shows a list of all WebLicht web ser v ices along with a subset of metadata (author, URL, description etc.). This list is e x tracted on -the -fly from a centralized repository located in Leipzig. This means that af ter regi s tration in the repository, a web service is immediatley avai l-able for inclusion in a proces s ing chain. The La n guage Filter selection box allows the selection of any la n guage for which tools are available in WebLicht (currently, German, En g-lish, I talian, French , Romanian, Spanish or Fi n-nish). The majority of the pre s ently integrated web services operate s on German input. The platform, however, is la n guage -independent and supports LRT resources for any la n guage. Plain text input to the service ch ain can be spec i-fied in one of three ways: a) entered by the user in the I nput tab , b) file u p load from the user's local har d drive or c) selecting one of the sample texts offered by W e bLicht (Area 2) . Various format converters can be used to convert u p-load ed files into the data exchange fo r mat (TCF) used by WebLicht. Input file formats a c cepted by WebLicht currently include plain text, Micr o-soft Word, RTF and PDF.
 In Area 3, one can assemble the ser v ice tool chain and execute it on the input text. The S e-le cted Tools list di s plays all web services that have already been e n tered into the web service chain. The list under Next Tool Choices then o f-fers the set of tools that can be e n tered as next into the chain. This list is generated by inspec t-ing the met a data of the tools which are already in the chain. The chaining mechanism e n sures that this list only contains tools, that are a valid next step in the chain. For exa m ple, a Part -of -Speech The Text Corpus F ormat was des igned to eff i-ciently enable the seamless flow of data b e tween the individual services of a Service Oriented A r ch i tecture.
 Figure 4 shows a data sa m ple in the D -SPIN Text Corpus Format. Lexical tokens are ident i-fied via t o ken IDs which serve as unique i dentifiers in different annotation la y ers. From an organiz a tional point -of -view, tokens can be seen as the central, atomic el e ments in TCF to which other annotation layers refer. For exa m-ple, the POS ann o tations refer to the token IDs in the token annotat ion layer via the attribute t o kID . The annotation layers are rendered in a stand -off annotation format. TCF stores all linguistic ann o-tation la y ers in one single file. That means that during the chaining pro c ess, the file grows (see Figure 5) . Each tool i s permitted to add an arb i-trary number of layers, but it is not a l lowed to change or delete any exis t ing layer.
 Within the D -SPIN project, several other XML based data formats were deve l oped beside the TCF format (for example, an encoding for lex i-con based data). In order to avoid any confusion of element names between these different fo r-mats, namespaces for the different co n textual scopes within each format have been intr o duced. At the end of the chaining process, converter services will convert the textco rpora from the TCF format into other common and standardized data formats, for example MAF/SynAF or TEI. The web services are available in RES T style and use the TCF data format for input and ou t put. The concrete implementation can us e any co m-bination of programming language and server e n vironment.
 The repository is a relational database, offering its content also as RESTstyle web services.
 The user interface is a Rich Internet Application (RIA), using an AJAX driven toolkit. It incorp o-rates the Java EE 5 technology and can be d e-ployed in any Java application server. The selected tool chain can be applied to any arb i trary uploaded text. The resulting annotated text corpus can be downloaded or visualized u s-ing an integrated software module.
 All these functions will be shown live using just a webbrowser during the so ftware demonstr a-tion . Demo Preview and Hardware R e quire ments The call for papers asks submitters of software demonstrations to provide pointers to demo pre -views and to provide technical details about hardware requirements for the actual demo at the con ference. The WebLicht web application is currently password protected. Access can be granted by requesting an account (weblicht@d -spin.org). If the software demonstration is accepted, inte r-net access is necessary at the conference, but no special hardware is r e quired. The authors will bring a laptop of their own and if necessary also a beamer.
 Acknow l edgments WebLicht is the product of a combined effort within the D -SPIN pr o jects (www.d -spin.org). Currently, partners include: Seminar f X  r Sprachwissensch aft/Computerlinguistik, Unive r-sit  X  t T  X  bingen, Abteilung f  X  r Aut o matische Sprachverarbeitung, Universit X  t Leipzig, Inst i tut f X  r Maschinelle Sprachverarbeitung, Un i ver sit X t Stuttgart and Berlin Brandenburgische Akademie der Wi s senschaften.

