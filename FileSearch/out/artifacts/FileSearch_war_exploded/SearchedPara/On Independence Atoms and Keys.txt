 Uniqueness and independence are two fundamental proper-ties of data. Their enforcement in knowledge systems can lead to higher quality data, faster data service response time, better data-driven decision making and knowledge discovery from data. The applications can be effectively unlocked by providing efficient solutions to the underlying implication problems of keys and independence atoms. Indeed, for the sole class of keys and the sole class of independence atoms the associated finite and general implication problems coin-cide and enjoy simple axiomatizations. However, the situa-tion changes drastically when keys and independence atoms are combined. We show that the finite and the general im-plication problems are already different for keys and unary independence atoms. Furthermore, we establish a finite ax-iomatization for the general implication problem, and show that the finite implication problem does not enjoy a k -ary axiomatization for any k .
 H.2.3 [ Database Management ]: Languages X  Data descrip-tion languages ; H.2.4 [ Database Management ]: Systems X  Relational databases ; F.4.3 [ Mathematical Logic and For-mal Languages ]: Formal Languages X  Decision problems Management, Theory Axiomatization; Dependence logic; Finite implication; Im-plication; Independence; Key
Keys and independence atoms are two classes of data de-pendencies that enforce the uniqueness and independence of data in knowledge systems. Keys are one of the most im-portant classes of integrity constraints as effective data pro-cessing largely depends on the identification of data records. Their importance is manifested in the de-facto industry stan-dard for data management, SQL, and they enjoy native support in every real-world database system. A relation r satisfies the key k ( X ) for a set X of attributes, if for all tuples t 1 ,t 2  X  r it is true that t 1 = t 2 whenever t t 2 have matching values on all the attributes in X . In-dependence atoms also occur naturally in data processing, including query languages. For example, one of the most fundamental operators in relational algebra is the Cartesian product, combining every tuple from one relation with every tuple from a second relation. In SQL, users must specify this database operation in the form of the FROM clause. A relation r satisfies the independence atom X  X  Y between two sets X and Y of attributes, if for all tuples t 1 ,t 2  X  r there is some tuple t  X  r which matches the values of t 1 on all attributes in X and matches the values of t 2 on all attributes in Y . In other words, in relations that satisfy X  X  Y , the occurrence of X -values is independent of the occurrence of Y -values. Due to their fundamental importance in everyday data pro-cessing in practice, both keys and independence atoms have also received much research interest from since the 1970s [3, 8, 9, 10, 12, 16, 17, 18, 20, 23, 25, 26, 27, 31].

The core reasoning problems of data dependencies are their associated implication problems, with about 100 dif-ferent classes studied so far [34]. Efficient solutions to these problems have important applications, for example, in data-base design, query and update processing, data cleaning, exchange, integration and security. Section 2 contains some showcases that illustrate the benefit of such solutions to query processing and data privacy.

Given their importance for data processing in practice, given that keys and independence atoms naturally co-exist and given the long and fruitful history of research into re-lational data dependencies, it is rather surprising that keys and independence atoms have not been studied together. This is particularly true as more expressive classes of de-pendencies do not have feasible implication problems. In fact, keys are subsumed by numerical dependencies which do not enjoy a finite axiomatization [14], and independence atoms are subsumed by embedded multivalued dependencies whose implication problem is not finitely axiomatizable [33] and undecidable [21, 22]. On the other hand, keys and in-dependence atoms in isolation enjoy efficient computational properties: finite and general implication problems coincide, and are axiomatizable by finite sets of Horn rules [12, 23, 31, 34]. They thus are excellent candidates to push the frontier of axiomatizable classes of data dependencies.

Motivated by real-world applications and the lack of pre-vious research we initiate research on the interaction of key dependencies and independence atoms. Somewhat surpris-ingly, the good computational properties that hold for each even when independence atoms are restricted to the unary case. In fact, we show that for the combined class of keys and independence atoms: While the last result appears to be discouraging for the database practitioner, our research brings forward very use-sound for general implication are also sound for finite impli-cation. This means, in particular, that query optimizers can exploit our inference rules to optimize efficiently the evalua-tion of queries. An example of such an optimization is given in Section 2.

In view of our second and third main result together, it follows that our 2-ary axiomatization for the general implica-tion problem is somewhat  X  X s complete as possible X  for finite implication. It means, in particular, there is reassurance that we have exhausted a complete list of  X  X heap X  opportu-nities to benefit our application at hand, for example, opti-mizing a given query. As the third result shows, other op-portunities for optimization cannot be captured completely by a simple set of rules, but must be dealt with on a case-by-case basis which requires an analysis that is more costly.
Our results are somewhat similar to those known for the combined class of functional dependencies (FDs) and in-clusion dependencies (INDs). While both classes in isola-tion have matching finite and general implication problems and enjoy finite axiomatizations, the finite and the general implication problems differ for the combined class of FDs and unary INDs already [4]. For FDs and unary INDs the general implication problem has a 2-ary axiomatization by Horn rules [6], while their finite implication problem is not finitely axiomatizable [4]. Interestingly, key dependencies are strictly subsumed by FDs. It is also known that both implication problems are undecidable for FDs and INDs [5, 30], but decidable for FDs and unary INDs [6].

Our work is further motivated by the recent development of the area of dependence logic constituting a novel approach to the study of various notions of dependence and indepen-dence that is intimately linked with databases and their data dependencies [13, 36]. It has been shown recently, e.g., that the general implication problem of so-called conditional in-dependence atoms and inclusion atoms can be finitely ax-iomatized in this context [15]. For databases, this result establishes a finite axiomatization (utilizing implicit existen-tial quantification) of the general implication problem for in-clusion, functional, and embedded multivalued dependencies taken together. This result is similar to the axiomatization of the general implication problem for FDs and INDs [30].
In this section we present two showcases that illustrate how an advanced understanding of the interaction of keys and independence atoms can benefit various areas of data processing.
Consider a simple relation schema supplies with two at-tributes supplier and part . Suppose we want to know for each part how many distinct suppliers supply the part. A na  X   X ve SQL query Q would be Here, the command DISTINCT is used to eliminate duplicate suppliers. In data processing duplicate elimination is time-consuming and not executed by default. However, duplicate elimination in query Q is redundant for the following reason. The GROUP BY clause uses parts to partition the input rela-tion over supplies into sub-relations. That is, the GROUP BY clause causes each sub-relation to satisfy the independence atom part  X  part , which means that all tuples of the same sub-relation have the same value on part . As the input rela-tion over supplies satisfies the key k ( supplier , part ), so does each of the sub-relations. However, the key k ( supplier , part ) and the independence atom part  X  part together finitely im-ply the key k ( supplier ). Hence, there are no duplicate sup-pliers in any sub-relation and Q can be replaced by the more efficient query Q 0 .
 in which no time is wasted on finding non-existing duplicate suppliers in each sub-relation. The example illustrates how special independence atoms A  X  A are already practically relevant: they apply to every sub-relation generated by the GROUP-BY A in SQL. The fact that the key k ( supplier , part ) and the independence atom part  X  part together finitely im-ply the key k ( supplier ) is just an instance of the following sound inference rule It is important to observe that this line of reasoning is not limited to SQL-based database systems. In fact, GROUP-BY clauses are also integral to SPARQL [1] and PIG Latin queries [11], and any reasonable query language that sup-ports aggregation.

For an example with a general independence atom take the relation schema car with attributes model , vehicle , part . A na  X   X ve query that returns for the model Ferrari all combina-tions of vehicles and parts , we write: Knowing that the IA vehicle  X  part holds for each given model (in particular, for Ferrari X  X ), we can rewrite this into: saving a join.
The following example from data privacy also illustrates the significance of IAs. Assume all patients (with some given condition) receive the same set of therapies, i.e. we have an independence atom patient  X  therapy . If a user asks then direct access to (Bob, Radiation) would be prohibited to some users due to privacy concerns by Bob. However, if a smart user asks the following two queries
SELECT therapy FROM health WHERE therapy = X  X adiation X  ; then access control is bypassed and returns { Bob } and { Ra-diation } as answer sets, respectively. The user can conclude from both answers that Bob has been treated with Radiation due to the independence atom. Based on the independence atom the same user should only see the correct answer to one of the queries. So, reasoning about independence atoms (and keys) helps detect and prevent inference attacks by smart users.
A relation schema R is a set of symbols A called at-tributes , each equipped with a domain Dom( A ) representing the possible values that can occur in the column named A . A tuple t over R is a mapping R  X  S A  X  R Dom( A ) where t ( A )  X  Dom( A ) for each A  X  R . For a tuple t over R and R R is a set of tuples t over R . If R 0  X  R and r is a relation attribute and r is a relation over R , then we write r ( A = a ) for { t  X  r : t ( A ) = a } . For sets of attributes X and Y , we often write XY for X  X  Y , and denote singleton sets of attributes { A } by A . Also, for a relation schema A 1 ...A a relation r ( A 1 ...A n ) is sometimes identified with the set
Let R be a relation schema and X  X  R . Then K ( X ) is an R -key , given the following semantic rule for a relation r over R :
Let R be a relation schema and X,Y  X  R . Then X  X  Y is an R -independence atom , given the following semantic rule for a relation r over R : An independence atom X  X  Y is called unary if X and Y are single attributes. R -keys and R -independence atoms are together called R -constraints . If  X  is a set of R -constraints and R 0  X  R , then we write  X  R 0 for the subset of all R constraints of  X . Also one should note that by the definition, r | = X  X  X means that only one value exists for X in r .
For a set  X   X  {  X  } of independence atoms and keys we say that  X  implies  X  , written  X  | =  X  , if every relation that satisfies every element in  X  also satisfies  X  . We write  X  | =  X  , if every finite relation that satisfies every element in  X  also satisfies  X  . We say that  X  is a k -ary (finite) implication of  X , if there exists  X  0  X   X  such that |  X  0 |  X  k and  X  ( X 
In this article we consider the axiomatizability of the so-called finite and the general implication problem for unary independence atoms and keys. The general implication prob-lem for independence atoms and keys is defined as follows. The finite implication problem is defined analogously by re-placing  X  | =  X  with  X  | = FIN  X  .

For a set I of inference rules, we denote by  X  ` I  X  the inference of  X  from  X . That is, there is some sequence  X  = [  X  1 ,..., X  n ] of independence atoms and keys such that  X  n =  X  and every  X  i is an element of  X  or results from an application of an inference rule in I to some elements in {  X  1 ,..., X  i  X  1 } . A set I of inference rules is said to be sound for the general implication problem of independence atoms and keys, if for every R and for every set  X ,  X  ` I  X  implies that  X  | =  X  . A set I is called complete for the general impli-cation problem if  X  | =  X  implies that  X  ` I  X  . The (finite) set R is said to be a (finite) axiomatization of the general implication for independence atoms and keys if R is both sound and complete. These notions are defined analogously for the finite implication problem. For k  X  1, an axiom-form where l  X  k .
In this section we will show that the set of axioms I in Table 1 is complete for the general implication problem of unary independence atoms and arbitrary keys taken to-gether.
 It is straightforward to check the soundness of the axioms I .

Theorem 1. The axioms I are sound for the general im-plication problem of independence atoms and keys.
 Next we will show that the set of axioms I is complete for the general implication problem of unary independence atoms and arbitrary keys.

Theorem 2. Assume that R is a relation schema and  X   X  {  X  } consists of R -keys and unary R -independence atoms. Then  X  ` I  X  iff  X  | =  X  .

Proof. Assume to the contrary that  X  6` I  X  . We will construct a countably infinite relation witnessing  X  6| =  X  . Let  X  i  X   X  k be the partition of  X  to independence atoms Table 1: Axiomatization I of Independence Atoms and Keys in Database Relations and keys, respectively. Let X 1  X  Y 1 ,...,X N  X  Y N be an enumeration of  X  i , and let A 1 ,...,A M be an enumeration of R . Moreover, let R 0 := { A  X  R :  X  ` I A  X  A } . We will construct an increasing chain (with respect to  X  ) of finite relations r n , for n  X  0, such that 1. r n ( R 0 ) = { ~ 0 } , 2. r n | =  X  k , and r n | = X l  X  Y l if 1  X  n = l modulo N . Then letting r := S n  X  0 r n , we obtain that r | =  X . Regarding  X  , we also have two cases:  X  is either of the form ( i ) K ( D ) or ( ii ) X  X  Y .
 For showing that r 6| =  X  , it suffices to define the relations r so that r 0 := { t 0 ,t 1 } where 3 . The relations r n are now constructed inductively as follows:
Assume first that n = 0. We let r 0 := { t 0 ,t 1 } where, for 1  X  i  X  M , Then item 1 follows from the definition. For showing that r 0 | =  X  k , let K ( B )  X   X  k . Assume to the contrary that r 6| = K ( B ). Then we have two cases: Hence r 0 | = K ( B ) when we obtain that r 0 | =  X  k . For item 3, note that in case ( i ), r 0 6| = K ( D ) by the definition of r in case ( ii ) where  X  is X  X  Y , we must have XY  X  R \ R since otherwise we would obtain that  X  ` I  X  using R 3 and R 2. Thus by the definition of r 0 , we conclude that for no t  X  r 0 : t ( XY ) = t 0 ( X ) t 1 ( Y ).

Assume then that r n is a finite relation satisfying the induction assumption; we will construct a finite relation r n +1 also satisfying the induction assumption. Assume that l = n + 1 modulo N . If r n | = X l  X  Y l , then we let r r r mal number occurring in r n . We then let r n +1 be obtained by extending r n with tuples s i , for 1  X  i  X  k , such that s ( A j ), for 1  X  j  X  M , is defined as follows:
Note that r n +1 is well defined: from the assumption r n X  X  Y l and the induction assumption r n ( R 0 ) = { 0 } we ob-tain that from which it also follows that X l and Y l are two distinct attributes. Now item 1 of the claim and r n +1 | = X l  X  Y item 2 follow from the definition. For showing that r n +1  X  , let K ( B )  X   X  k . Assume to the contrary that r n +1 K ( B ). Then, by the definition of r n +1 , and since r by the induction assumption, we obtain that B  X  R 0 X l or B  X  R 0 Y l . Assume first that B  X  R 0 X l . Since K ( B )  X  R , we obtain R 0  X  R 0 using repeatedly R 2 and R 3. Then from R 0  X  R 0 and K ( R 0 X l ), we obtain K ( X l ) by R 8. From this and X l  X  Y l we would then, by R 9, obtain Y l  X  Y l Y  X  R 0 contradicting with (4). The case where B  X  R 0 Y l analogous. Therefore the counter-assumption r n +1 6| = K ( B ) is false, and hence r n +1 | =  X  k .

For item 3 of the claim, assume that  X  is X  X  Y . Assume to the contrary that for some t  X  r n +1 \ r n : t ( XY ) = t ( X ) t 1 ( Y ). First recall that XY  X  R \ R 0 because  X  6` when by the definition of r n +1 , we obtain that XY  X  X l Moreover, by the assumption and the definition of t 0 and t it follows that X and Y are two distinct attributes. Hence X  X  Y is either X l  X  Y l or Y l  X  X l . Since X l  X  Y then, by R 2, obtain that  X  ` I  X  which contradicts with the assumption. Hence item 3 of the induction assumption also holds. This concludes the construction of the relations r
By the above construction, taking r := S n  X  0 r n , we ob-Theorem 2.
 The existence of a complete axiomatization without arity restrictions for independence atoms remains open. In par-ticular, our construction of a counter-model does not carry over to the general case since the interaction between inde-pendence atoms and keys is more complicated. For instance, any relation satisfying A  X  BC and K ( AB ), must also sat-isfy the functional dependency B  X  C . It is an interesting open problem to determine whether the general problem is finitely axiomatizable.
In section 5.1 we will show that the general and the finite implication do not coincide for keys and unary independence atoms. Using these results, we will show in section 5.2 that sponding finite implication problem.
For n  X  2, let R n := { A i ,B i : 1  X  i  X  n } be a relation schema, and let  X  n := { A i  X  B i : 1  X  i  X  n } X  X K ( B i 1  X  i  X  n,i modulo n } . Then each  X  n can be thought of in Fig. 1 where each pair of attributes connected by an edge represents a key of  X  5 . In this section we will show in Lemmata 5 and 7 that  X  n | = FIN K ( A 1 B 1 ), for n  X  2, and  X  2 6| = K ( A 1 B 1 ).
 Lemma 5. For n  X  2 ,  X  n | = FIN K ( A 1 B 1 ) .

Proof. Let n  X  2, and let r be a finite relation over R n such that r | =  X  n . We show that r | = K ( A 1 B 1 ). First note that since r | = K ( B n A 1 ), we obtain that Let then 2  X  i  X  n , and assume that | r ( B i ) | = m . Then since r | = A i  X  B i , each member of r ( A i ) has at least m repetitions in r , that is, | r ( A i = b ) | X  m for each b  X  r ( A Since r | = K ( B i  X  1 A i ), we hence obtain that | r ( B | r ( B n ) |  X  | r ( B 1 ) | when | r |  X  | r ( B 1 ) | X | r ( A now since r | = A 1  X  B 1 , we obtain that | r ( B 1 ) | X | r ( A | r ( B 1 A 1 ) | from which the claim follows.
 The following lemma can be proved by constructing a counter example for  X  2 | = K ( A 1 B 1 ), similar to the one presented in the proof of Theorem 2.
 Lemma 7.  X  2 6| = K ( A 1 B 1 ) .

Proof. We will construct a countably infinite relation r over R 2 witnessing  X  6| =  X  . For this we will inductively define an increasing chain (with respect to  X  ) of finite relations r over R 2 such that r 1 6| = K ( A 1 B 1 ) and, for n  X  1, 1. r n | = 2. r n | = Then, letting r := S n  X  1 r n , we obtain that r | =  X  and r 6| =  X  . The construction of relations r n is done as follows:
We first let r 1 ( A 1 B 1 A 2 B 2 ) := { (0 , 0 , 1 , 2) , (0 , 0 , 3 , 4) } . Then r 1 | = K ( B 2 A 1 ), r 1 | = K ( B A
Assume that r n ( A 1 B 1 A 2 B 2 ) is a finite relation satisfying the induction assumption; we will construct a finite relation r n +1 also satisfying the induction assumption. Assume first that n +1 is even. Let m be the maximal number occurring in r , and let ( a 1 ,b 1 ) ,..., ( a k ,b k ) enumerate the set ( r r ( B 2 )) \ r n ( A 2 B 2 ). Note that this set is non-empty because otherwise, by the induction assumption, we would obtain Lemma 5. We then let By the construction and the induction assumption, it is straightforward to check that items 1 and 2 hold. In the case where n +1 is odd, the relation r n +1 can be constructed anal-ogously. This concludes the construction and the proof.
Hence, from Lemmata 5 and 7, we directly obtain the following corollary.

Corollary 8. For keys and unary independence atoms taken together, the finite implication problem and the general implication problem do not coincide.
In this section we will show that for no k there exists a k -ary axiomatization of the finite implication problem for unary independence atoms and keys taken together. For this, we first define, for n  X  2, an upward closure of  X  n respect to keys as follows: Then we will show that Cl  X  ( X  n ) is closed under 2 n  X  1-ary finite implication. Hence, and since K ( A 1 B 1 ) 6 X  Cl follows that the rule for finite relations, is irreducible. That is, we cannot hope to deduce K ( A 1 B 1 ) from  X  n with a set of sound 2 n  X  1-ary rules.

Next we will show that Cl  X  ( X  n ) is closed under 2 n  X  1-ary finite implication. For this, since Cl  X  ( X  n ) is the closure of  X  n under the unary rule R 7, it suffices to show that all 2 n  X  1-ary finite implications of  X  n are included in Cl Namely, we will prove the following theorem.
Theorem 9. Let n  X  2 ,  X  0 :=  X  n \{  X  } where  X   X   X  n , and let  X  be an R n -key or a unary R n -independence atom such that  X  0 | = FIN  X  . Then  X   X  Cl  X  ( X  n ) .
 This will be done in Lemmata 16, 17, 18 and 19 where in each case we consider one of the four different scenarios.
The first case is essentially proved in Lemma 10 where, isfying  X  0 :=  X  n \{K ( B n A 1 ) } and violating K ( D ). For the construction of r , we will first define tuples t,t 0 such that for be obtained by extending { t,t 0 } inductively over columns. Assume that r is constructed up to X i where X i is the i th member of A 1 ,B 1 ,...,A n ,B n . We have two cases for X so that r ( X i X i +1 ) = r ( X i )  X  r ( X i +1 ) and r | = K ( X If t ( X i X i +1 ) = t 0 ( X i X i +1 ), then by K ( D ) 6 X  Cl obtain that X i X i +1 = A j B j , and therefore r must satisfy X i  X  X i +1 . Again, r ( X i X i +1 ) will be a cartesian product but this time we must include repetitions for X i X i +1 in r . cardinalities | r ( X i ) | that enables the above construction. Lemma 10. Let n  X  2 , and let D  X  R n be such that t X  X  R n , and Proof. Let n  X  2, and let D  X  R n be such that K ( D ) 6 X  Cl  X  ( X  n ). We will define a finite relation r = { t 0 ,t 1 where r,t 0 ,t 1 satisfy the claim. For the construction of r , we will first associate each 1  X  i  X  n with natural num-bers a i and b i . Later r will be defined inductively so that | r ( A i ) | = a i and | r ( B i ) | = b i .

For defining a i and b i , first let m be the number of indices 1  X  i  X  n such that A i B i  X  D , and let M := ( m + 3)!. For 1  X  i  X  n , we define a i ,b i  X  2 as follows: We let a 1 and if a i is defined, then we let then the definition of a i ,b i , for 1  X  i  X  5, is illustrated in Fig. 2. Note that in the example m = 2 and M = 120. It is straightforward to check that with this definition, for all 1  X  i  X  n we have that a i ,b i  X  N \{ 0 , 1 } and
We are now ready to define r . First we define  X  0 :=  X  n {K ( B n A 1 ) } , and let t and t 0 be the following tuples: t 0 0 0 0 0 0 0 0 0 0 t 0 0 0 1 1 0 0 1 1 0 1 For  X  0 and t,t 0 in our example case, see Figure 3 and Figure 4. Now it suffices to embed { t,t 0 } to a finite relation r such that r | =  X  0 . We will construct this r inductively over columns. Namely, for 1  X  i  X  n , we will define a relation r = { t 0 ,t 1 ,...,t M  X  1 } over R i so that, for i &gt; 1, 1. r i | =  X  0 R i , 2. r i ( B i ) = { 0 ,...,b i  X  1 } and | r i ( B i = l ) | = 3. t R i \ A 1 = t 0 and t 0 R i \ A 1 = t 1 .
 For i = 1, we will introduce one new extra symbol  X  that appears in column A 1 . In the end of the construction, we let r be obtained from r n by replacing, in column A 1 ,  X  with 0. Then we will obtain that r | =  X  0 , t = t 0 and t 0 = t
Assume first that i = 1. If A 1 B 1 6 X  D , then we let r = { t 0 ,...,t M  X  1 } be a relation where { 0 , 1 } X { 0 ,...,b 1 } is enumerated by t 0 ( A 1 B 1 ) ,...,t M  X  1 ( A 1 t ( A 1 B 1 ) = t ( A 1 B 1 ) and t 1 ( A 1 B 1 ) = t 0 ( A then that A 1 B 1  X  D . Then we let r 1 = { t 0 ,...,t M  X  1 tion of { 0 , 1 ,  X  X  X { 0 ,...,b 1  X  1 } where t 0 ( A 1 B t ( A 1 B 1 ) =  X  0.

Since  X  0 R 1 = { A 1  X  B 1 } , it is straightforward to check that items 1-3 hold. 1 Assume that 1  X  i &lt; n and r i ( R i ) = { t 0 ,...,t r by the assumption K ( D ) 6 X  Cl  X  ( X  n ), B i A i +1 6 X  D when Also by (11), M = b i  X  a i +1 when by item 2 of the induction assumption, r i ( B i ) = { 0 ,...,b i  X  1 } and | r i ( B for each 0  X  l  X  b i  X  1. Hence and by (12) we can define r  X  as a relation obtained from r i by extending each t  X  r with a value t ( A i +1 )  X  { 0 ,...,a i +1  X  1 } where r is an enumeration of { 0 ,...,b i  X  1 } X { 0 ,...,a i +1  X  1 } such that t 0 ( B i A i +1 ) = t ( B i A i +1 ) and t 1 ( B i A
The construction of r i up to i = 2 is illustrated in Figure 5 in our example. t 0 0 0 0 0 0 0 0 0 0 0 t 1  X  0 1 1 0 0 1 1 0 1 t 2 1 0 2 0 t 3 0 1 0 1 t 4  X  1 1 0 t 5 1 1 2 1 t 6 0 2 0 2 t 7  X  2 1 2 t 8 1 2 2 2 . . . t 117 0 39 0 39 t 118  X  39 1 39 t 119 1 39 2 39 Since no repetitions occur in the enumeration, we obtain that r  X  | = K ( B i A i +1 ).

Next we will extend r  X  to r i +1 satisfying items 1-3 of the induction claim. We have two cases:
First assume that A i +1 B i +1 6 X  D when Also by the previous construction and since b i = b (11), r  X  ( A i +1 ) = { 0 ,...,a i +1  X  1 } and | r  X  ( A for 0  X  l  X  a i +1  X  1. Hence and by (13), we can define r as a relation obtained from r  X  by extending each t  X  r  X  a value t ( B i +1 )  X  { 0 ,...,b i +1  X  1 } where r i +1 is an enumeration of { 0 ,...,a i +1  X  1 } X { 0 ,...,b i +1 t ( A i +1 B i +1 ). By (11) and the construction it is straightfor-ward to check that r i +1 satisfies items 1-3 of the induction claim.

Assume then that A i +1 B i +1  X  D . Then and by (11), Recall also that by (14) and the previous construction, r { t { 0 ,...,a i +1  X  1 } and | r  X  ( A i +1 = l ) | = b i for 0  X  l  X  a Hence, and since b i +1 &lt; b i by (15), we can also enumerate r ( A i +1 ) by pairs ( k,l )  X  X  0 ,...,a i +1  X  1 } X { 0 ,...,b such that By (14) r i +1 should be defined so that r i +1 ( A i +1 B first case, we cannot define r i +1 as the relation extending r with the values of B i +1 that are obtained directly from the binary enumeration presented above. Instead, we let r be obtained from r  X  by extending each t ( k,l )  X  r  X  with (15), r for each 0  X  l  X  b i +1  X  1. Finally, since r i +1 ( A { 0 ,...,a i +1  X  1 } X { 0 ,...,b i +1  X  1 } , we obtain that r A the induction claim. This concludes the case A i +1 B i +1 and the construction.

We then let r be obtained from S 1  X  i  X  n r i by replacing, in column A 1 ,  X  with 0. Clearly r | = A 1  X  B 1 , and therefore of Lemma 10.
 The proof of the first case is now easy.

Lemma 16. Let n  X  2 ,  X  0 :=  X  n \{  X  } where  X   X   X  n is a key, and assume that  X  is an R n -key such that  X  0 Then  X   X  Cl  X  ( X  n ) .
 Proof. By symmetry, we may assume that  X  = K ( B n A 1 ). Let us assume to the contrary that  X  6 X  Cl  X  ( X  n ) where  X  = K ( D ) for some D  X  R n . Then by Lemma 10 there ex-ists a finite relation r over R n such that r | =  X  0 and r 6| =  X  . Therefore,  X  0 6| = FIN  X  which shows the claim.
 The remaining cases are stated in the following lemmata. In the next case  X  is an independence atom and  X  is a key.
Lemma 17. Let n  X  2 ,  X  0 :=  X  n \{  X  } where  X   X   X  n is a unary independence atom, and assume that  X  is an R n -key such that  X  0 | = FIN  X  . Then  X   X  Cl  X  ( X  n ) .
 Proof. By symmetry, we may assume that  X  = A 1  X  B 1 . Let us assume to the contrary that  X  6 X  Cl  X  ( X  n ) where  X  = K ( D ) for some D  X  R n . We will show that  X  0 6| = First we define  X   X  :=  X  n \{K ( B n A 1 ) } . Then by Lemma 10, there exists a finite relation r  X  = { t 0 ,t 1 ,...,t that r  X  | =  X   X  , t 0 ( X ) = 0 for all X  X  R n , and We let r be obtained from r  X  by replacing, for 0  X  i  X  M  X  1, t ( A 1 ) with The construction of r is illustrated in Figure 6. From the definition of r and the fact that A 1 B n 6 X  D it follows that r 6| = K ( D ) and r | =  X   X  \{ A 1  X  B 1 } . For r | =  X  need to show that r | = K ( B n A 1 ). Because of the definition of t i ( A 1 ) in r , K ( B n A 1 ) could be violated only in { t that case we would have t 1 ( A 1 B 1 ) = 00 in r which contra-dicts with the definitions. Hence we obtain that r 6| = K ( D ) which concludes the proof.

In the third case  X  is a key and  X  is an independence atom.

Lemma 18. Let n  X  2 ,  X  0 :=  X  n \{  X  } where  X   X   X  n is a key, and assume that  X  is a unary R n -independence atom such that  X  0 | = FIN  X  . Then  X   X  Cl  X  ( X  n ) .

Proof. By symmetry, we may assume that  X  = K ( B n A 1 ) when  X  0 is as in Figure 3. Assume to the contrary that and by symmetry of  X  0 , it suffices to consider only the cases where  X  = A i  X  Y , for some 1  X  i  X  n and Y  X  R n \{ B i
So let 1  X  i  X  n . We will construct two finite relations r and r 0 such that 1. r | =  X  0 and r 0 | =  X  0 , 2. r 6| = 3. r 0 6| = We let r := { t 0 ,t 1 ,t 2 ,t 3 } where we define, for X  X  R Then we let r 0 := { t 0 ,t 4 } where we define, for X  X  R It is straightforward to check that items 1-3 hold. This con-cludes the proof of Lemma 18.
 In the last case both  X  and  X  are independence atoms.
Lemma 19. Let n  X  2 ,  X  0 :=  X  n \{  X  } where  X   X   X  n is a unary independence atom, and assume that  X  is a unary R n independence atom such that  X  0 | = FIN  X  . Then  X   X  Cl  X  Proof. By symmetry, we may assume that  X  = A 1  X  B 1 . Assume to the contrary that  X  6 X  Cl  X  ( X  n ). We will show that  X  0 6| = FIN  X  . Analogously to the proof of Lemma 18, it suffices to consider only the cases where  X  = A i  X  Y , for some 1  X  i  X  n and Y  X  R n \{ B i } . Let 1  X  i  X  n . We will construct four relations r 0 ,r 1 ,r 2 ,r 3 such that 1. r i | =  X  0 for i = 0 , 1 , 2 , 3, 2. r 0 6| = A i  X  A j for 1  X  j  X  n , 3. r 1 6| = A 1  X  B j for 1 &lt; j , and if 1 &lt; i , 4. r 2 6| = A i  X  B j for j &lt; i , 5. r 3 6| = A i  X  B j for i &lt; j .
 For the constructions, we first define tuples t 0 ,...,t 6 lows:
Then we let
Recall that in the last two cases the presupposition is that straightforward to check that items 1-5 hold. This concludes the proof of Lemma 19.
 From Lemmata 16, 17, 18 and 19 we obtain Theorem 9. Using this we can prove the following theorem.

Theorem 20. For no natural number k , there exists a sound and complete k -ary axiomatization of the finite impli-cation problem for unary independence atoms and keys taken together.

Proof. Let k be a natural number, and let n be such that 2 n &gt; k . Then  X  n | = FIN K ( A 1 B 1 ) by Theorem 5. However, by the unary rule R 7 and Theorem 9, the closure of  X  under k -ary finite implication is Cl  X  ( X  n ). Since K ( A Cl  X  ( X  n ), the claim follows.
 Due to R 4 and R 2, for any non-unary R n -independence atom X  X  Y there exists a unary A  X  B 6 X  Cl  X  ( X  n ) such that { X  X  Y }| = A  X  B . Hence Theorem 9 can be extended to the case where  X  is an independence atom of any arity. Therefore we obtain the following corollary.

Corollary 21. For no natural number k , there is a sound and complete k -ary axiomatization of the finite implication problem for independence atoms and keys taken together.
We have studied the implication problem of unary inde-pendence atoms and keys taken together, both in the general and in the finite case. We established a finite axiomatiza-tion of the general implication problem and showed that the finite implication problem has no finite axiomatization. The non-axiomatizability result holds also in the case where the arity of independence atoms is not restricted to one. Our in-ference rules exhaust all cheap opportunities to get the most out of the interaction between independence atoms and keys for applications in knowledge management.

Nevertheless, there is still hope for a general practical so-lution, as the general implication problem for arbitrary in-dependence atoms and keys might enjoy a finite axiomati-zation, or the finite implication problem may be decidable. In fact, there are showcases in the literature for positive and negative results. On the one hand, join dependencies are not axiomatizable by a finite set of Horn rules [32], but efficiently decidable by the Chase [29]. On the other hand, functional and inclusion dependencies are not axiomatizable by a finite set of Horn rules and also undecidable [5, 30]. Also, the lack of a finite axiomatization may not apply if one permits other intermediate results in a derivation. This approach of finding axioms by allowing the use of an extended language is traditionally taken after the non-axiomatizability of the non-extended language has been established [30]. The same applies to undecidability results. An alternative pathway is to restrict the class of keys even further, for example to unary keys. The latter are desirable in database design as they assure a high degree of database normalization [7] and guarantee the efficiency of enforcing confidentiality under smart inference attacks [2]. They are also of particular inter-est to the description logic community [3, 28, 35], which has not studied independence atoms, to the best of our knowl-edge. Our research should thus be seen as a driver for future investigations on the interaction of keys and independence atoms, similar to what has been done for other classes of de-pendencies, such as functional and inclusion dependencies. Implication problems of keys and independence atoms have also not received much attention in other data models, such as RDF [24] and XML [17, 19], for example.
 The first two authors were supported by grant 264917 of the Academy of Finland. The research is supported by the Marsden Fund Council from Government funding, adminis-tered by the Royal Society of New Zealand. [1] M. Arenas, C. Gutierrez, D. P. Miranker, J. P  X erez, [2] J. Biskup, D. W. Embley, and J.-H. Lochner.
 [3] A. Cal` X , D. Calvanese, G. De Giacomo, and [4] M. A. Casanova, R. Fagin, and C. H. Papadimitriou. [5] A. K. Chandra and M. Y. Vardi. The implication [6] S. S. Cosmadakis, P. C. Kanellakis, and M. Y. Vardi. [7] C. J. Date and R. Fagin. Simple conditions for [8] J. Demetrovics. On the number of candidate keys. Inf. [9] J. Demetrovics, G. O. H. Katona, D. Mikl  X os, [10] R. Fagin. A normal form for relational databases that [11] A. Gates, O. Natkovich, S. Chopra, P. Kamath, [12] D. Geiger, A. Paz, and J. Pearl. Axioms and [13] E. Gr  X  adel and J. V  X  a  X  an  X  anen. Dependence and [14] J. Grant and J. Minker. Inferences for numerical [15] M. Hannula and J. Kontinen. A finite axiomatization [16] S. Hartmann, U. Leck, and S. Link. On Codd families [17] S. Hartmann and S. Link. Efficient reasoning about a [18] S. Hartmann and S. Link. The implication problem of [19] S. Hartmann, S. Link, and T. Trinh. Solving the [20] A. Heise, J.-A. Quian  X e-Ruiz, Z. Abedjan, A. Jentzsch, [21] C. Herrmann. On the undecidability of implications [22] C. Herrmann. Corrigendum to  X  X n the undecidability [23] J. Kontinen, S. Link, and J. A. V  X  a  X  an  X  anen. [24] G. Lausen. Relational databases in RDF: Keys and [25] S. Link. Charting the completeness frontier of [26] S. Link. Characterisations of multivalued dependency [27] C. L. Lucchesi and S. L. Osborn. Candidate keys for [28] C. Lutz, C. Areces, I. Horrocks, and U. Sattler. Keys, [29] D. Maier, A. O. Mendelzon, and Y. Sagiv. Testing [30] J. C. Mitchell. The implication problem for functional [31] J. Paredaens. The interaction of integrity constraints [32] S. Y. Petrov. Finite axiomatization of languages for [33] D. Stott Parker Jr. and K. Parsaye-Ghomi. Inferences [34] B. Thalheim. Dependencies in relational databases . [35] D. Toman and G. E. Weddell. On keys and functional
