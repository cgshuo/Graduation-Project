 With the explosive growth of multimedia resources, customized content/program recommendation is becoming very important and necessary for the Internet Pro-tocol Television (IPTV) users. Usually for the IPTV clients, a family shares an IPTV account. This situation makes the members hard to retrieve their programs directly and the IPTV system is as well difficult to recommend the programs to the members. Therefore, it is a critical challenge for the IPTV system to identify the members and make the accurate personalized recommendation.
 We collect our data from a famous IPTV service provider. Table 1 presents the sample logs under an IPTV account  X 84AA70 X , in which we observe that (1) genres of programs are vary under the same account during a day; (2) the similar genres are often demanded at the same period. Then we imagine this scenario that there could be three family members: kids, mom and dad. The kids love to play cartoon after dinner, the mother watches costume drama in the afternoon and the father prefers the action and gangster movies at night. In the traditional IPTV recommender systems, frequent or recent genres are often recommended to the account, regardless of the time difference and member preference. At the above scenario, it is definitely failed when cartoon has been recommended to the dad. by one or more members in the family; (2)members have diverse interest genres; (3)there is only a member watching the TV at a time interval.
 potential members for personalized recommendation, which makes the recom-mendation to a specific member individually, instead of a shared account. The temporal information in the logs is fully used to dynamically define time inter-vals fitting to each family. We first compare the genre types through computing the similarity of the genre preference. Then, we apply a graph to identify the latent members, where the nodes are the time intervals and the arcs stand for the similarity of the genres. After that, we recommend the personalized genres to the identified members. Our experimental results show the proposed model achieves the improvements as highly as 200% over the baselines. Here the base-lines are adopted as the standard user collaborative filtering (CF) algorithm [ 5 , 6 ] and item CF algorithm [ 9 ]. Currently,The adaptive temporal model has been well integrated in the IPTV system on the real-time data by the data provider. overview of the AT-IPTV system, followed by the proposed adaptive temporal model in Section 3, including the noise definition, the time interval detection and the member identification. We describes the experimental setup in Section 4, such as the data collection and the evaluation methods. Section 5 shows the experimental results, and Section 6 presents the analysis and discussions. The related work is presented in Section 7. Finally, we draw our conclusions and future work in Section 8. There is a general situation in our data that a family shares an IPTV account and members have program preferences. Figure 1 presents the picture of the system. Here we focus on the genre/program recommendation to each member instead of the whole shared account so that our proposed approach always deal with data under an account. The input of the system is the account log. The output is the genre/program recommendations to each member. Therefore, there is a cycle that the feedback will be collected as the log, once the recommendations have been proposed. The most important step is the adaptive temporal model which is designed to identify the members in a shared account. First of all, the non-overlapped time intervals are observed and defined. We then identify members through computing the program similarities among the time intervals. Third, the log of each member is extracted correspondingly. After that, we apply the recommendation system to make the specific recommendations to each member, where the user CF and the item CF algorithms are adopted.
 Throughout this paper, we formally define the terms as (1) the account set A =( a 1 ,a 2 ,...,a n ); (2) the interval set T a =( t 1 (3) the program set P a =( p 1 ,...,p j ), where p j  X  T a set G =( g 1 ,g 2 ,...,g m ), (5) the member set U a =( u original consuming time as X =( x 1 ,x 2 ,...,x q ). 3.1 Noise Definition There are noises in the data if the watching period is very short. In order to get rid of the noises, we do statistics to measure how to set the period as the countable one.
 Then, we put all the consuming time X =( x 1 ,x 2 ,...,x q of the influences of the accounts and the genre types. The expectation of the consuming time is around 1758 seconds and the variance is around 257547. Here we put the expectation equation and the variance equation as to extract the data, we find that almost 41.3% data have been cleaned, which makes the data very sparse.
 distribution with respect to the sample mean and the sample variance. Then, we decide to adopt the definition of the confidence interval. The confidence level  X  we set is 0.10 after we test it from 0.05 to 0.15. Finally, the confidence interval is around [577 , 2939]. Hence, we take 577 seconds and define all the consuming periods less than 577 seconds as the noises mathematically. 3.2 Adaptive Time Interval Detection In order to split the consuming time conveniently, we use 600 seconds (10 min-utes) which is approximate to 577 seconds to filter the noises.
 account in 30 days. Here the noises have been removed. The x axis denotes the 24 hours a day. The y axis stands for the frequency that this account watches the TV as the same time in 30 days.
 evening and at night throughout the midnight respectively. Intuitively, we ini-tialize the whole day, twenty-four hours, as 143 slips. The length of each slip is 10 minutes.
 1 is our research target. Then, we define the active periods with the start point A i and the end point B i . The slips in [ A i ,B i are detected as the time intervals with the length of 10 minutes.
 examine the relationships among the time interval and the program types. Then, we can identify the members from a shared account. 3.3 Member Identification Focusing on the genre types and the active consuming periods, we get the fol-lowing conclusions: (1) there are obvious different types of programs consumed every day; (2) similar programs are selected during the same time periods each day.
 programs. In order to identify multiple members, we are motivated to consider the similarity of the consumed programs among the time intervals. Then, the more similar of two time intervals, the more possible the two intervals belong to a same member.
 Under a shared account a , we get its corresponding time interval set as T ( t ,...,t i ,....,t k ), the program set as P a =( p 1 ,...,p as G a =( g 1 ,g 2 ,...,g m ). Then, we set a rating matrix to represent the relation-ships among the genre set and the time interval set under the account a as where r t j g i stands for the ratio of the program genre type g sumed at the time interval t j .
 We define r t j g i as where the genre type g i G a , program p z g i and x t j p time interval in which the member watches the program p z After that, we define the similarity set S =( s 1 ,...,s q the time interval set T a =( t 1 ,...,t i ,...,t k ), based on the rating matrix R the similarities among the time interval set T a . in the graph are the time intervals T a and the edges are the similarities S t , there is an edge for each two nodes. However, our purpose is to distinguish the members in this graph. Hence, we define a parameter  X  as a threshold to normalize the similarity values, which decides whether two nodes should be con-nected. For example, in Figure 4 , there are six intervals for an account. We set  X  as 0.7 (this number can be locally optimized in the experiments), then six nodes are divided into three groups. The similarity values less than  X  are normalized as 0. Finally, there are three members identified from this account. 4.1 Data Set We collect our data from an industrial IPTV provider. To de-identify the private information of an account, the data are randomly selected and only partial of the logs from March 1, 2011 and March 31, 2011. As table 1 shown, the data contains the programs, the corresponding genres, the start time and the end time under every account.
 As we define the noises in Section 3.1 and the time interval detection in Section 3.2 , we clean the data first at the pre-processing stage. We then have 10 , 145 accounts with the corresponding 770 , 169 records. The sample data will be available to download only for the research purpose.
 As to the training data set and the testing data set, we make 75% of the data which are 611 , 016 records as the training data, 159 , 153 records as the testing data. 4.2 Evaluation Methods The precision and recall scores are adopted to evaluate whether our proposed adaptive temporal model can substantially make efficient recommendation. The equations are shown as follows.
 where List ( a, N ) is the recommending list to account a with the top N rec-ommendations, P ( a ) is the programs of account a . List ( a, N ) co-occurrences rating in the training dataset and the test dataset of account a . User collaborative filtering (UCF) and item collaborative filtering (ICF) algo-rithms are most frequently in the recommendation systems. Therefore, we adopt these two methods as the baselines and output the top N recommended genres and programs for evaluation.
 Table 2 and 3 present the personalized recommendations with the members identification. Considering the current traditional recommendations to a shared account, we also generate recommendations to the whole account. Table 4 and 5 show the results which are merged based on the personalized recommendations. Note that all results contain the genre type and the program type. AT-UCF and AT-ICF are the proposed model on UCF and ICF. Top N lists for different methods are evaluated, where N = { 1 , 2 , 3 , 4 , 5 } . Note that we set the local optimization value as  X  =0 . 79 after tuning. Here we further analysis and discuss the results in Table 2 , 3 , 4 and 5 .First,we compare the difference of the recommendation lists under the genre type and the program type. We then discuss the influence of top N recommendations. After that, the influence of the proposed adaptive temporal model is analyzed. 6.1 Investigation of UCF and ICF The experimental results on the general UCF and ICF algorithms show that the UCF works better than ICF if we do the genre recommendation. Correspond-ingly, the ICF outperforms UCF if we do the video recommendation. Then, we get the pairs of (user, genre) and (item, video) as the strong alliances. We will continue to confirm the similar conclusions in the proposed adaptive approach. 6.2 Influence of Adaptive Temporal Model From Table 2 and 4 , we can see that the proposed adaptive temporal model AT UCF and AT ICF outperforms the general UCF and ICF , at both preci-sion and recall levels. Specifically, when N = 1 which means that we only make a recommendation, our proposed model on UCF is precisely 200% better than the baseline. Also, for different N s, the proposed method is promising on all the results.
 Similarly, if we carefully examine the genre level and the video level respec-tively, we can draw the same conclusions that AT UCF is good at the genre recommendation and AT ICF at video. The same strong pairs of (user, genre) and (item, video) have been proved.
 Therefore, we suggest genre recommendation if the IPTV system focuses on the user experience. Otherwise, we suggestion program recommendation if the system prefers recommending a program precisely or for the advertisement purpose. We can also see that this conclusion is consistent at both the account level and the identified user level.
 6.3 Influence of Top N We discuss the top 5 recommendations on genre and program separately. For the genre recommendation, it X  X  very interesting that the top 1 genre achieves the best user performance and the improvements become small when we put more recommendations to the list. For the program recommendation, the item lists obviously dominate the performance. On the contrary to the genre recom-mendation, the larger the top N list in the program recommendation, the better performance ICF and AT-ICF achieve. The two conclusions confirm that the IPTV users focus on the genre types, instead of single program. This results one of our motivations at the introduction part. Compared to search engines, recommendation systems provide another way to push information to users. In the IPTV domain, the recommender systems are designed to automatically provide useful videos/programs or genres to users. To the best of our knowledge, only a few previous work has been done on user iden-tification within a shared account. Most of them were based on the contextual information.
 unified remote controller to get users X  history, preferences and other contextual information. We collect the similar information from the account logs which are provided by the service provider.
 tion model at [ 2 ],[ 3 ]. The authors claimed to take user contextual information into consideration and proposed context information adapting collaborative fil-tering and the content based filtering. Said et al. [ 8 ] applied time contextual information to split profile into several sub-profile, then directly integrated con-text into model at the contextual modeling stage. In our proposal, we consider the relationships between the time interval and the genre information together and then identity the members.
 of linear subspaces, then adopted subspace clustering algorithms for the identi-fication task. Yang et al. [ 10 ] proposed a web session clustering method based on hyper-graph to find characteristics of user preferences in different periods. mendation method for IPTV services, which solved the scalability and sparsity problems which the conventional algorithms suffer from in the IPTV environ-ment characterized by the large numbers of users and contents. The users were grouped by similar preferences and the group profile information was utilized for recommending contents in a more specialized manner to the target user. gated an approach to obtain more diversified recommendations using an aggre-gation method based on various similarity measures. Their work was evaluated using three experiments: the two first ones were lab experiments and show that aggregation of various similarity measures improved accuracy and diver-sity. The last experiment involved real users to evaluate the aggregation method as proposed. The results showed that the proposed method allowed the balance between accuracy and diversity of recommendations. The contribution of this paper is four-fold. First, we propose an adaptive tem-poral model to identify multiple users within a shared account, which helps the system make specific recommendation to each member. Second, we dynamically split the consuming time of every day as time intervals, and then extract the users by computing the preference similarity among the intervals. Third, our proposed model is developed as an independent module such that it can be gen-erally applied in any IPTV system. Fourth, our experiments on the data show that our model is superiority and promising.
 In the future, we will focus on detecting the drift of user interests in the IPTV systems. This is also our ongoing work.

