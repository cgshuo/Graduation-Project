 1. Introduction
Small signal model parameter extraction of MESFET involves extraction of extrinsic and intrinsic model element values ( Lin and Kompa, 1994) by minimizing the difference between modeled and measured S -parameter over a broad range of frequencies. In the recent past, different techniques ( Yaser, 2000; Van Niekerk et al., 2000 ) have been reported in the literature for extracting the model parameters of MESFET. These techniques are normally based on either analytical or numerical optimization techniques. Although analytical methods provide faster solution, the quality of solution (QoS) is normally poor. To improve QoS, methods based on numerical optimization are being increasingly used for parameter extraction. Numerical optimization techniques are either gradient-based or gradient-free. Possibility of having a multimodal error surface is an important extraction challenge in parameter extraction problem. In order to find a quality solution, an extraction algorithm that can achieve the global minima in multimodal error surface is required. However, the conventional gradient based approach that are used in past, can easily be trapped in local minima. Many researchers have proposed global optimization techniques like genetic algorithm (GA) ( Gao, 2001; Watts et al., 1999; Menozzi et al., 1996 ) to extract the small signal model parameters of the MESFET.

Since a typical small signal parameter extraction problem has a multimodal error surface and it involves a large set (i.e. 16 number of elements), conventional gradient based techniques fails to provide QoS. In some cases, GA cannot guarantee global solution due to the diversity of population ( Leung et al., 1997 ). Swarm intelligence has become a research interest to different domain of researchers in recent years. These algorithms simulate the food foraging behavior of a flock of birds or swarm of bees. Particle swarm optimization and its variants have been intro-duced for solving numerical optimization problems and success-fully applied to solve many real world problems ( Eberhart and Kenedy, 1995b ; Sabat et al., 2009, 2010 ). PSO algorithm is a population based stochastic optimization technique and suitable for optimizing nonlinear multimodal error function. Motivated by the foraging behavior of honeybees, researchers have ( Riley et al., 2005; Karaboga, 2009 ) initially proposed artificial bee colony (ABC) algorithm for solving various optimization problems. ABC is a relatively new population-based meta-heuristic approach and is further improved by Karaboga and Basturk (2008) . This algorithm is easy to implement and found to be robust. Some recent results illustrate that artificial bee colony (ABC) algorithms outperforms basic PSO algorithm in terms of QoS ( Karaboga and Basturk, 2008). The PSO and ABC algorithms are population based evolutional meta-heuristic optimization algorithms that avoids trapping of solution in local minima. The objective of this paper is to use ABC algorithm for extracting the small signal parameters and to compare relative performances in terms of computational cost and QoS with that of basic PSO algorithm.

Fig. 1 shows a 16 element small signal equivalent circuit adopted for parameter extraction. It has eight extrinsic and eight intrinsic parameters. Extrinsic paramete rs are bias independent whereas intrinsic parameters are bias dependent. The methodology for extracting these parameters essentially involves minimization of the difference between measured and modeled S -parameter values under dc bias conditions.

Rest of the paper is organized as follows: Section 2 presents a brief description of the model parameter extraction strategies and formulation of the problem. Brief descriptions of PSO and ABC algorithms are provided in Sections 3 and 4, respectively. Section 5 presents the simulation results. Conclusions are drawn in Section 6. 2. Parameter extraction problem in MESFET
The main objective of small signal model parameter extraction problem is to minimize the difference between measured and simulated S -parameter at different bias points.
 The fitness function is defined as F  X  x  X  X  where  X  x  X  X  and  X  t ; w i  X  X j ^ S jk  X  t ; w i  X j max  X  3  X 
Eq. (1) is the sum of errors at all the frequencies and Eq. (2) is the modeling error at all the bias points for all the four S -parameters at i th frequency w i . The measured and modeled S -parameters of the MESFET at i th frequency and t th bias point are S jk ^
S number of frequency points used in measurement. j and k are the at t th bias point. x is the vector that has all the bias independent and bias dependent parameters need to be extracted.

This fitness function (see Eq. (1)) can be divided into two parts, one for extracting bias independent model parameters and the other for extracting bias dependent model parameters. Bias dependent model parameters are associated with a modeling error due to the associated S -parameters at specified bias point as in Table 1 . The fitness sub-function is given by f  X  w  X  X  similarly for obtaining bias independent model parameters, the fitness sub-function is defined as f  X  x  X  X 
Table 1 presents different model parameters and their dependence with different S -parameters. For analysis purposes, the small signal equivalent circuit elements of MESFET, see Fig. 1 , are grouped into two set of parameters: extrinsic and intrinsic.
The extrinsic set consist of bias independent elements associated with the leads and contacts to the device such as C pg , C
R , R d , and R s . The intrinsic set consists of bias dependent parameters such as C gs , R i , C gd , R gd , C ds , R ds
The technique employed for parameter extraction is imple-mented in two stages. In the first stage, the extrinsic parameters are extracted from measured S -parameters under cold bias
Intrinsic parameters are extracted from measured S -parameters under hot bias condition ( V ds 4 0V and V gs o 0V) using suitable de-embedding technique in the second stage. Parameters to be extracted are initialized, each within carefully chosen and well defined range at the beginning of the extraction algorithm.
Different S parameter values are optimized for obtaining the different set of model elements of the equivalent circuit ( Lin and Kompa, 1994 ). The parameter extraction procedure is summarized below: 1. Measure S -parameter data in cold bias condition. 2. Optimize S 11 to extract L g , R g and C pg ; optimize S
R d , C pd and S 12 to extract L s and R s . 3. Measure S -parameter data in hot bias condition 4. Subtract the effect of extrinsic parasitics from the measured S -parameter data by the de-embedding technique ( Lin and
Kompa, 1994 ). 5. Optimize S 11 to extract C gs , R i ; Optimize S 12 to extract C similarly optimize S 21 to extract g m and S 22 to extract C 3. Particle swarm optimization (PSO) algorithm
This section provides a brief introduction of the PSO technique and its application to model parameter extraction of MESFET.
PSO algorithm is a stochastic population based algorithm proposed by Eberhart and Kenedy (1995a) . This algorithm is inspired by the social behavior of bird flocking and fish schooling. The PSO algorithm is simple, robust and easy to implement. In PSO, a set of solution space. The number of parameters to be optimized determines the dimension of the problem. Each particle is evaluated particles are initialized randomly in the D -dimension search space  X  i  X  1 ; 2 ; ... ; NP  X  in the D th dimension are represented as X x ; x i 3 ; ... x iD  X  and V i  X  X  v i 1 ; v i 2 ; v i 3 ; ... v updates its position and velocity based on its own best position, ( pbest ) as well as the best position of the entire swarm ( gbest ).
While in the search process, each particle remembers its previous best solution, and if the current solution is better than the previous best solution, the position corresponding to current solution becomes the pbest ; otherwise it remains unchanged. The best among all pbest solution is the gbest solution and the position corresponding to gbest value are the potential solutions of the problem. Each particle updates its velocity and position according to its flying trajectory by the following: V X where w represents inertia weight, c 1 and c 2 are learning factors which determine the relative influence of cognitive and social components, respectively. In this paper, the values of w , c are linearly decreased (adapted) with iteration ( Shi and Eberhart, 1998; Ratnaweera et al., 2004; Sabat and Ali, 2008 ). rand rand 2 are independent random numbers uniformly distributed in the personal best of i th particle in d th dimension for the t th iteration, respectively. The gbest d t is the d th dimension of best particle in the swarm for the t th iteration. 4. Artificial bee colony algorithm
The foraging bees are classified into three categories; employed bees, onlookers and scout bees. All bees that are currently exploiting a food source are known as employed . The employed bees exploit the food source ( NFS ) and they carry the information about food source back to the hive and share this information with onlooker bees. Onlookers bees are waiting in the hive for the information to be shared by the employed bees about their discovered food sources and scouts bees will always be searching for new food sources near the hive. Employed bees share information about food sources by dancing in the designated dance area inside the hive. The nature of dance is proportional to the nectar content of food source just exploited by the dancing bee. Onlooker bees watch the dance and choose a food source according to the probability proportional to the quality of that food source. Therefore, good food sources attract more onlooker bees compared to bad ones. Whenever a food source is exploited fully, all the employed bees associated with it abandon the food source, and become scout. Scout bees can be visualized as performing the job of exploration, whereas employed and onlooker bees can be visualized as performing the job of exploitation.

In the ABC algorithm ( Karaboga and Basturk, 2008 ), each food source is a possible solution for the problem under consideration and the nectar amount of a food source represents the quality of the solution represented by the fitness value. The number of food sources is same as the number of employed bees and there is exactly one employed bee for every food source.

This algorithm starts by associating all employed bees with randomly generated food sources ( solution ). In each iteration, every employed bee determines a food source in the neighbor-hood of its current food source and evaluates its nectar amount ( fitness ). The i th food source position is represented as X source located at X i . After watching the dancing of employed bees, an onlooker bee goes to the region of food source at X i by the probability p i defined as p  X  where S is total number of food sources. The onlooker finds a neighborhood food source in the vicinity of X i by using X  X  t  X  1  X  X  X i  X  t  X  X  d ij u  X  9  X  where d ij is the neighborhood patch size for j th dimension of i th food source defined as d  X  x ij x kj  X  10  X  uniform variate A  X  1 ; 1 .

If its new fitness value is better than the best fitness value achieved so far, then the bee moves to this new food source abandoning the old one, otherwise it remains in its old food source. When all employed bees have finished this process, they share the fitness information with the onlookers, each of which selects a food source according to probability given in Eq. (8). With this scheme, good food sources will get more onlookers than the bad ones. Each bee will search for better food source around neighborhood patch for a certain number of cycle ( limit ), and if the fitness value will not improve then that bee becomes scout bee. 4.1. Pseudocode for ABC algorithm 1: Initialize 2: REPEAT. 3: Move the employed bees onto their food source and 4: Move the onlookers onto the food source and evaluate their 5: Move the scouts for searching new food source 6: Memorize the best food source found so far 7: UNTIL (termination criteria satisfied) 5. Experimental results and discussions
S -parameter data of a fabricated MESFET with gate length of 0 : 7 m m and gate width of 600 m m(4 150) are measured in the laboratory using network analyzer in the frequency range from 0.5 to 25GHz. Bias point of V gs = 1.0V and V ds = 4.25V is fixed for the analysis. The bias value is chosen such that the device can be used for amplifier purpose. Small signal model parameter values are obtained by minimizing the difference between measured and modeled S -parameters using basic PSO and ABC algorithm. The algorithms are simulated in an Intel Core 2 duo processor with 2.0GHz frequency and 1.0GB RAM using MATLAB 2007a. The algorithmic parameters are tabulated in Table 2 . The search range for model parameters are tabulated in
Table 3 . Each algorithms are simulated 50 times. Performance indicator parameters such as minimum, maximum, mean and standard deviation values of extracted model parameters are tabulated in Tables 4 X 7 .

Tables 4 and 5 give the summary of the extracted extrinsic elements using basic PSO, and ABC algorithms, respectively.
Tables 6 and 7 show the summary of extracted intrinsic element values using basic PSO and ABC algorithms, respectively.
It is clearly evident from Tables 4 to 7 that ABC algorithm performance is better compared to PSO algorithm in terms of both performance evaluation parameters namely standard deviation and relative error between measured and modeled data.
Figs. 2 X 5 compares the modeled and measured S -parameters for the bias point V gs = 1.0V; V ds = 4.25V. The comparison shows that in ABC algorithm, the parameters are within small standard deviation, and relative error for all the S -parameters are small compared to PSO algorithm. Table 9 provides a comparative results of the amplitude and phase relative error between measured and modeled S -parameters. Convergence time and number of iterations required for PSO and ABC algorithms are tabulated in Table 8 . The tabular results of Table 9 indicates the superiority of ABC algorithm in terms of accuracy. Both Tables 8 and 9 indicate the better performance of ABC algorithm in terms of accuracy and convergence time compared to PSO.

The main advantages of the proposed technique is that it is not sensitive to initial parameter values and also not affected by increasing the dimension of problem. Empirical results illustrate that the proposed algorithm possesses high accuracy and also provides physical significant values of the extracted parameters. 6. Conclusions
In this paper, the artificial bee colony (ABC) algorithm, which is a new, simple and robust optimization algorithm, is used to extract small signal model parameters of a fabricated GaAs MESFET from measured S -parameter data. The performance of the proposed algorithm is compared with the particle swarm optimization (PSO) algorithm. These algorithms are able to successively extract the small signal model parameters of MESFET. The results reveal that ABC is more robust and has less relative error between the measured and modeled S -parameters compared to PSO algorithm. ABC algorithms also converges faster compared to PSO algorithm for this problem. Moreover, in these swarm intelligence strategy no user intervention is required for 180 0 180 0 180 0 180 0 model parameter extraction unlike gradient descent approach. In future, we will study the possible variations of ABC and PSO to further improve the performance.
 Acknowledgments This work is supported by Department of Science and
Technology, and DRDO, Govt of India. The authors would like to thank anonymous reviewers for their useful comments and suggestions that improved the quality of this paper.
 References
