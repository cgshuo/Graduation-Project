 Nowadays, there exists a growing interest in aligning information systems in a process-oriented way [28] as well as in the effective and flexible management of business processes (BPs) [22]. A BP consists of a set of activities which are performed in coordination in an organizational and technical environment [28], and which jointly realize a business goal. Typically, BPs are specified in an imperative way. However, declarative BP m odels (e.g., constraint-based models) are increasingly used allowing their users to specify what has to be done instead of how [19]. Declarative specifications facilitate the human work involved, avoid failures, and allow to obtain a better optimization, since the tacit nature of human knowledge is often an obstacle to eliciting accurate BP models [10].
Due to their flexible nature, frequently several ways to execute declarative process models exist, i.e., there are se veral enactment plans related to a spe-cific declarative model, each one presenting specific values for different objective functions, e.g., overall completion time or profit. The decision about the way to execute this model can be quite challenging since usually many constraints need to be obeyed, multiple instances of a process get concurrently executed within a particular timeframe, shared resour ces need to be allocated, and relevant ob-jective functions should be considered.

In this work, a method for generatin g optimized BP enactment plans from declarative specifications is proposed to optimize the performance of a process by considering multiple objectives. For this, we propose an extension of Con-Dec [19] motivated by requirements described in literature [18,29] (i.e., dealing with temporal and data constraints) and imposed by the case studies we have conducted (i.e., dealing with activity attr ibutes, resource management), named ConDec-R. Specifically, we extend ConDec by considering (1) temporal and data constraints, (2) resource requirements for activity executions, and (3) estimates for some activity attributes (e.g., durat ion), number of process instances exe-cuted within a particular timeframe, and resource availabilities.

Figure 1 provides an overview of our approach. Taking the ConDec-R speci-fication as a starting point (cf. Fig. 1(1)), multi-objective optimized enactment plans can automatically be generated (cf. Fig. 1(2)). For this, activities to be executed have to be selected and ordered (planning problem [12]) considering all the constraints, resource requirements, and estimates regarding the num-ber of instances executed within a particular timeframe, resource availabilities, and some activity attributes, e.g., activity durations (scheduling problem [5]). For planning and scheduling (P&amp;S) the activities such that the process objective functions are optimized, a constraint-based approach is proposed. The generated plans can leverage the BP management (BPM) life cycle [28], since they can be used for different purposes (cf. Fig. 1(3 )), e.g., recommendations [3], simulation [24], time prediction [27], and generation of optimized BP models [21].
The main contributions of this paper are: (1) the definition of a new language for the constraint-based specification of BPs (cf. Sect. 3, Fig. 1(1)), (2) the automatic generation of m ulti-objective optimized BP enactment plans from ConDec-R specifications through a constr aint-based approach (cf. Sect. 4, Fig. 1(2)), (3) the application of the proposed approach to a case study (cf. Sect. 5), and (4) its empirical evaluation (cf. Sect. 6).

Initial aspects of the proposed approac h have been previously presented (cf. [14]). However, this paper significantly extends [14] by: (1) providing improved expressiveness through choice templates [1 9], metric temporal constraints [18,29], and data constraints [18], (2) extending the constraint-based approach by includ-ing new filtering rules (cf. Sect. 2) for the aforementioned constraints, (3) dealing with alternative resources to enable ac tivities to be performed by different re-sources, (4) considering multiple objective functions in the optimization, and (5) evaluating the proposal in the context of an actual process, and therefore demonstrating that it can work in practice for managing realistic problems. Section 2 introduces backgrounds, Sect. 3 details the ConDec-R language, Sect. 4 shows the generation of optimized plans, Sect. 5 explains a real example, Sect. 6 deals with the evaluation, Sect. 7 presents a critical discussion, Sect. 8 summarizes related work, and Sect. 9 includes some conclusions and future work. Different paradigms for process modelling exist, e.g., imperative and declarative. Imperative process models are well struct ured representations which specify ex-actly how things have to be done by explicitly depicting all possible behavior. A declarative model, in turn, is a loosely -structured representation focused on what should be done which specifies all forb idden behavior. Therefore, declara-tive models are commonly used for representing processes with high variability which can be executed in several ways. We use the declarative language ConDec [19] for specifying constraint-based mod els (cf. Def. 1) since it allows the spec-ification of activities together with the constraints which must be satisfied for correct BP enactment and for the goal to be achieved. Moreover, ConDec allows to specify a wide set of BP models in a simple and flexible way. Constraints can be added to a ConDec model to specify fo rbidden behavior, restricting the desired behavior (cf. [19]). ConDec templates are grouped into: 1. Existence constraints: unary relations concerning the number of times one 2. Relation constraints: positive binary relations used to impose the presence 3. Negation constraints: negative relations used to forbid the execution of 4. Choice constraints: n-ary constraints ex pressing the need of executing activ-Definition 1. A constraint-based process model S =( A, C BP ) consists of a set of activities A , and a set of executing behavior constraints C BP .Each activity a  X  A are executed arbitrarily often if not restricted by any constraint. To support increased expressiveness of Co nDec, several proposals for extensions have been made like metric temporal const raints [18,29] or data relations [18], which are all supported by our proposal. As an example, the temporal constraint Precedence(A,B,[5,10]) specifies that t o start the execution of B, A needs to be finished between 5 and 10 time units before. Using data constraints, for example, the earliest and the latest start and end times of an activity, together with the selections of the choice template can be constrained through input data. As an example, the data constraint A.startTime  X  Data.T specifies that A can only start after time T of input Data (for more examples see Sect. 5).

Due to their flexible nature, there are frequently different ways to execute a constraint-based model in such a way that all constraints are fulfilled. The different valid execution alternatives, how ever, can vary significantly in how well different performance objective functions (cf. Def. 2) can be achieved. Definition 2. An objective function OF of a BP is a function to be optimized during the BP enactment, e.g., maximization of the profit.
 For generating plans optimizing the object ive functions of constraint-based pro-cess models, activities to be executed have to be planned [12] and scheduled [5]. To do this, a constraint-based a pproach is proposed (cf. Sect. 4).

The area of scheduling [5] includes problems in which it is necessary to deter-mine an enactment plan for a set of activities related by constraints (in our con-text the control-flow constraints, together with the resource, data and temporal constraints). Several objective function s are usually considered to be optimized, e.g., minimization of the overal completion time. In a wider perspective, in plan-ning [12], the activities to be executed are not established a priori, hence it is necessary to select them from a set of alte rnatives and to establish an ordering.
Constraint Programming (CP) [23] supplies a suitable framework for mod-elling and solving P&amp;S problems [26]. To solve a problem through CP, it needs to be modelled as a constraint satisfaction problem (CSP, cf. Def. 3). Definition 3. A CSP P =( V,D,C CSP ) is composed of a set of variables V , a domain of values D for each variable in V, and a set of constraints C CSP between variables, so that each constraint represents a relation between a subset of variables and specifies the allowed combinations of values for these variables. To improve the modelling of the problems global constraints, i.e., constraints capturing a relation between a non-fixed number of variables, can be defined.
A solution to a CSP consists of assigning values to CSP variables, being feasible when the assignments satisfy all the constraints.

Since actual problems typically involve multiple conflicting objective functions (cf. Def. 2), multi-objective constraint optimization problems (MO-COPs, cf Def. 4) are considered in the current work. In MO-COPs, usually no unique optimal solution exists, but a set of Pareto optimal solutions (cf. Def. 5) can be found. Definition 4. A MO-COP P o =( V,D,C CSP ,OFs ) is a CSP which also in-cludes a set of objective functions OFs to be optimized.
 Definition 5. A solution for a MO-COP is Pareto optimal when it is not dominated by any other solution, i.e., for obtaining a better feasible solution in one of the objective functions, at least another objective needs to be deteriorated. To solve multi-objective optimization problems (for more information, the reader is referred to [9]), there are, basically, three approaches: (i) defining a new ob-jective function (i.e., combining the original objective functions) which can be optimized with single objective solvers (e.g., the weighted-sum method [1]), (ii) optimizing one of the objective functions constraining the other ones (e.g.,  X  -constraint method [13]), and (iii) working with a set of Pareto optimal solu-tions (e.g., evolutionary multi-objective optimization [6]). In this work, the  X  -constraint method [13] is applied since it appeared well suited for our purposes and typically provides good results.

Regardless of the used search method, the global constraints can be imple-mented through filtering rules (i.e., rules responsible for removing values which do not belong to any solution) to efficiently handle the constraints in the search for solutions. To specify the processes in a declarative way, ConDec [19] is used as basis (cf. Sect. 2). Motivated by requirements descr ibed in literature [18,29] as well as the necessities of the case studies we have conducted (cf. Sect. 5) we extend ConDec to ConDec-R. Besides extending ConDec with resource reasoning and estimates for activity durations (which are partially covered in previous works [2,14]), ConDec-R supports activities with an open set of attributes and alternative resources (cf. Def. 6), and choice, temporal and data constraints. In a ConDec-R process model (cf. Def. 7), all the previou sly stated extensions are considered. Definition 6. A BP activity BPAct =( a, Res, Atts ) represents a BP activity called a, which can be performed by any resource included in Res 1 ,andwhich has a set of attributes associated (e.g., duration and profit) which is composed of tuples &lt; att, val &gt; (i.e., Atts).
 Definition 7. A ConDec-R process model CR = (BPActs, Data, C BP ,Av-Res, OFs) related to a constraint-based process model S = (A, C BP ) (cf. Def. 1) is composed of (1)a set of BP activities (cf. Def. 6) BPActs, (2) problem data information Data , (3) a set of ConDec constraints C BP which relates activities included in BPActs and/or the data included in Data , (4) a set of available resources Res which is composed of tuples (role,#role) which includes for each role (i.e., role) the number #role of available resources 2 , and (5) a set of the objective functions OFs to be optimized (cf. Def. 2).
 Figure 2(A) shows a simple ConDec-R model 3 (cf. Def. 7) where: BPActs = { ( A, &lt; response ( A, B ), negate-response(B,C) , precedence ( C, D ) } ; Res = { ( R 1 , 2), ( R 2 , 2) } ;and OFs = { OF To generate optimal (or optimized) execution plans for a specific ConDec-R model, we propose a constraint-based approach for P&amp;S the BP activities. This includes: the modelling of the problem as a MO-COP, the use of global con-straints implemented through filtering rules to improve the modelling of the problems and to efficiently handle the constraints in the search for solutions, and a search algorithm for solving the MO-COP.
 Representing the ConDec-R model as a MO-COP: Given a process mod-eled as a ConDec-R model (cf. Def. 7, Fig. 2(A)), it needs to be represented as a MO-COP (cf. Def. 4, Fig. 2(B)). Regarding the proposed MO-COP model, BP activities (repeated activities in the MO-COP model, cf. Def. 8), which can be executed arbitrarily often if not restricted by any constraint, are modelled as a sequence of optional scheduling activities (cf. Def. 9). This is required since each execution of a BP activity (i.e., a scheduling activity) is considered as one single activity which needs to be allocate d to a specific resource and temporarily placed in the enactment plan, i.e., stating values for its start and end times. Definition 8. A repeated activity ra =( a, Res, Att, nt ) is a BP activity BPAct =( a, Res, Atts ) (cf. Def. 6) which can be executed several times. It defines a CSP variable which specifies the number of times the BP activity is executed (i.e., nt ).
 Definition 9. A scheduling activity sa =( st, et, res, sel ) related to a repeated activity ra =( a, Res, Att, nt ) , represents a specific execution of ra ,where st and et are CSP variables indicating the start and the end times of the activity execution, respectively, res  X  Res is a CSP variable representing the resource used for the execution, and sel is a CSP variable indicating whether or not the activity is selected to be executed (i.e., equal to 0 in the case that it is not executed andequalto1otherwise).
 For each repeated activity, nt MAX 4 scheduling activities exist, which are added to the CSP problem specification, apart from including a variable nt .
Moreover, additional CSP variables representing the objective functions to op-timize are also included in the MO-COP (cf. Fig. 2(B)). In this way, the ConDec-Rmodel CR =( BPActs, Data, C BP ,AvRes,OFs ) (cf. Def. 7) is transformed intoaMO-COP P o = (V, D, C CSP ,OFs) (cf. Def. 4, Fig. 2(B)) where: 2. D is composed of the domains of each CSP variable var ,where UB ( var ) 3. C CSP is composed of the resource constraints, the global constraints (imple-Resource constraints are not explicitly stated since most constraint-based sys-tems provide a high-level constraint modeling specific to scheduling which in-cludes an efficient management of shared re sources. Besides th e role-based allo-cation pattern, the CSP variables which are included in the model can be also used for specifying further resource constraints [25].
 Filtering Rules: Many constraint-based approaches for modelling and solving P&amp;S problems have been proposed [23]. Mor eover, several proposals exist for fil-tering rules related to specialized schedulin g constraints (e.g., [16,4]). Therefore, the considered problem could be managed by adapting existing constraint-based approaches. However, some ConDec-R templ ates entail complex reasoning about several combined innovative aspects, su ch as the alternating executions of ac-tivities together with the varying number of times which these activities are ex-ecuted. Therefore, we implemented our ow n specific global constraints through innovative filtering rules to facilitate the specification of the problems and to increase the efficiency in the search for solutions. In this way, the constraints stated in the ConDec-R specification ( cf. Def. 7) are included in the MO-COP model through the related global constraints (cf. Fig. 2(B)). In the MO-COP, initial estimates are made for upper and lower bounds of variable domains, and these values are refined during the search process by the developed filtering rules.
In this work, filtering rules related to constraints which were not considered in previous works 5 (i.e., [2,14]) have been developed, i.e., choice, temporal and data. As an example, the TemporalPrecedence ( A, B, [ min, max ]) rule is shown in Fig. 3, where the propagator that describes the pruning of domains appears after symbol  X  . This constraint means that between min and max units of time before the first execution of B , at least one execution of A must be executed. Solving the MO-COP: Once the problem is modelled, several constraint-based mechanisms can be used to obtain the solutions for the MO-COP (cf. Def. 4), i.e., multi-objective optimized enactment plans (cf. Def. 10, Fig. 2(C)). As stated in Sect. 2, we implemented a multi-objective optimization search algorithm based on the  X  -constraint method [13].

In Fig. 4 the search algorithm is applied over a problem with two objective functions ( OF 1 and OF 2 ). For this example, our approach performs the following steps: 1. Two single-objective constraint optimization problems (COPs) are generated 2. These two COPs are solved and therefore an optimized solution is found for 3. Two new COPs (i.e., COP OF 2 sol 4. These two new COPs are solved and new solutions are obtained. 5. From all the obtained solutions, those solutions which are not Pareto optimal Definition 10. A BP enactment plan consist of: (i) the number of times each repeated activity is executed, (ii) the start and end times for each activity execution (i.e., scheduling activity), and (iii) the resource which is used for each scheduling activity.
 The generated enactment plans can be g raphically represented by a Gantt chart (cf. Fig. 2(C)). This chart illustrates the activity schedules and allows users to understand the solution at a glance. Moreover, the relations between executions of activities are depicted in the Gantt chart due to the ConDec-R constraints of the model (e.g., the relation between the first execution of D and the first execution of C is due to the constraint precedence ( C, D )).

Since the generation of optimized plans presents NP-complexity [11], it is not possible to ensure the optimality of the generated plans for all the cases. The developed constraint-based approach, however, allows solving the considered problems in an efficient way (cf. Sect. 6). Motivation: The considered business (i.e., a beauty salon) has grown consider-ably in the last years. It has expanded from a small salon with three employees to six and included additional facilities to be able to offer additional services. These changes, including the quick growth together with the complex constraints which need to be obeyed, resulted in problems r elated to the management of the salon. In particular, long waiting time for clients and missing schedules for employees are causing problems, affecting customer satisfaction and profit of the business. Improving the Management: The goal of the business is to improve the current situation by using a constraint-based approach for optimizing its BPs. Since our approach generates optimized enactment plans, optimized schedules for employees can be suggested, and ther efore, the aforementioned problems can be overcome. Moreover, since multi-objective optimization is considered, several important objectives (i.e., minimizing waiting times for clients and maximizing profit) can be optimized. Furthermore, due to the high expressiveness of ConDec-R, all the constraints which are giv en in the scenario can be specified Scenario Details 7 : The beauty salon offers various services like dye, clean&amp;cut, manicure and facial services. It require s its clients to make appointment calls to know how many clients are coming as well as the booked services. There are several full-time employees: Amparo (A), Rosa (R), Lisset (L) and Marta (M). Each employee has different skills, and hence some activities can be performed by certain employees only. For all activit ies which are performed in the salon, the director knows the average estimated duration, the profit which is obtained after its execution, and the employees which can execute that activity. The salon director wants to plan and schedule a working day with several clients taking the following considerations into account: 1. The profit (P) of the resulting working plan has to be maximized (objective 2. The waiting time (WT) of the clients has to be minimized and distributed 3. The employees can offer some additional services to the client directly in the ConDec-R Specification: Typically, as illustrated in Fig. 5, a client visit starts with the reception in the beauty salon. A fter that, the staff applies some ser-vices to the client and, finally, the client is charged. Activity Services is com-posed of other activities 8 (i.e., dye, clean&amp;cut, faci al and manicure, cf. Fig. 5), while Reception and Charge are BP activities (cf. Def. 6). For each BP activ-ity two attributes are considered: (1) estimated activity duration, and (2) profit which is obtained after executing the act ivity. Moreover, the set of alternative resources which can perform the BP activity is also included. For example, ac-tivity Reception has an estimated duration of 1 minute and a profit of 0, and can be performed by A, R, M or L. Notice that each instance created from the model of Fig. 5 represents one client visiting the beauty salon. The current problem, however, deals with N clients (represented by the Existence constraint of Fig. 5, stated by the label N) which come to the salon at different times and with different bookings during a working day.
 The data perspective also appears in Fig. 5 (cf. Def. 7, Sect. 2). The Client -Data includes all the information which is related to the client bookings, and consists of: (1) clientName ,(2) bookedServices , which represents the mandatory services that the salon staff has to cover, and (3) appointmentTime ,whichis the time when the client is supposed to arrive at the salon. Through the data perspective, it is possible to model that activity Reception cannot start before the client appointment time (cf. Fig. 5). Moreover, a data constraint is used (in conjunction with the choice constraint) to ensure that all services the client has added to her booking are selected, i.e., the generated plans will always include the desired services (cf. Fig. 6).
 Generating the Optimized Plans: Given a ConDec-R model CR =( Acts , Data , C BP , AvRes , OFs ) for the beauty salon problem, where Acts , Data , C
BP and AvRes are shown in Figs. 5 and 6, and OFs are described in scenario details, the tool generates multi-objective optimized enactment plans which con-sider both maximizing profit and minimizing waiting time. In this way, the tool suggests: a resource for executing each activity, the start and end time of the ac-tivities, and the services which will be offer ed to each client (i.e., services which were not booked by the client) 9 . The generated optimized plans are then used to support the salon director in managing the working day in an optimized way. Purpose: The purpose consists of analyzing our proposal in the generation of multi-objective optimized enactmen t plans from ConDec-R specifications. Objects: The empirical evaluation is based on the beauty salon example de-scribed in Sect. 5. This example has been selected for the evaluation, since it is not only a real-world process, but also includes a representative set of ConDec-R templates. The empirical evaluation co nsiders different problems which are ob-tained by varying the client data of the ConDec-R model of the beauty salon problem. Therefore, each generated pro blem includes the same activities, rela-tions and resources, but differs in the number of clients (N), their booked services (S), and their appointment times (T). Considering the information which is pro-vided by the salon director, i.e., a client typically books one or two services, we consider values { 1, 1.5, 2 } for the average number of booked services of the clients (i.e., NS). Based on this information, to average the results over a collection of randomly generated ConDec-R models, 30 instances are randomly generated for each pair &lt;N,NS&gt; by varying S and T 10 .
 Independent Variables: For the empirical evaluation, (1) the number of clients (i.e., N), (2) the average number of booked services for each client (i.e., NS), and (3) the objective function which is select ed to be optimized (i.e., OF), are taken as independent variables 11 .
 Response Variables: The suitability of our approach is tested regarding: (1) the average value of the objective functions which are obtained (i.e, average waiting time (WT) and profit (P)), and (2) the percentage of Pareto optimized solutions within the total number of solutions which are obtained (PS). Experimental Design: For the model of the beauty salon problem, 270 in-stances are generated consid ering different values of N (3 values), NS (3 values), and the automatic generation of T and S (30 problem instances). For each in-stance 12 , 4 searches (i.e., the first 2 searches are executed by optimizing each objective function, and the second 2 searc hes are executed constraining the val-ues of the other objective function) are executed to compound a diversified and representative Pareto front with at lea st 4 points. The response variables are then calculated by considering the aver age values for the 30 problem instances. Experimental Execution: For the experiments, the constraint-based search algorithm is run until a 5-minute CPU time limit is reached. It is run on a Intel(R) Xeon(R) CPU E5530, 2.40GHz , 8GB memory, running Debian 6.0.3. In order to solve the constraint-based problems, the developed algorithms have been integrated in the system Comet [8].
 Experimental Results and Data Analysis: Table 1 shows the values which are obtained for the different response v ariables. For each problem (specified by N, NS and OF), the average values for the response variables for the 30 randomly generated problem instances are shown, i.e., WT, P and PS. For the empirical evaluation, the search algorit hm (cf. Sect. 4) is executed in two phases: (1) optimizing one objective function without constraining the other one, i.e., two searches are executed (column Uncons trained Objective), and (2) optimizing one of the objective functions by constraining the other one 13 , i.e., two searches are executed (column Cons trained Objective). Notice that when OF = WT the constrained objective is P, and vice versa.

As expected, when optimizing one objective function (i.e., WT or P), the confronted objective takes worse values than in the cases in which it is the ob-jective function to be optimized. Moreove r, for most problem s Pareto optimized solutions could be obtained in average in more than 50% of the time (cf. col-umn PS), which means that a representative Pareto front can be depicted. In general, our results show that constrained problems are harder to solve than un-constrained problems since some CSP var iables are more constrained. However, the solutions which are obtained typica lly present more balanced values for the objective functions.

In Fig. 7 the set of solutions which are found during the search process for a concrete problem of N =10and NS = 1 is depicted. As can be seen, 9 of these solutions are Pareto optimized (cf. Def. 5). The user can choose which of these plans are more valuable according to the relative importance of the two criteria. The manual specification of BP models, which are traditionally specified through an imperative language, can consume great quantity of resources, cause failures, and lead to non-optimized models, resulting in a very complex problem [10]. We propose specifying processes in a declarative way to facilitate the human work in scenarios with high variability which allow several ways to execute the BP. In addition, the current approach allows modelling the considered prob-lems in an easy way, since the considered declarative specifications are based on high-level constraints. With our extension, an increasing expressiveness is pro-vided (compared to [2,14]), and hence mo re realistic problems can be managed. Furthermore, the optimi zed enactment plans are generated by P&amp;S all BP activ-ities considering a set of instances,and hence it allows for a global optimization. Moreover, the automatic g eneration of optimized pl ans can deal with complex problems of great size in a simple way, as demonstrated in Sect. 6. Therefore, a wide study of several aspects can be carried out by simulation. As mentioned, the generated plans can be used, among others, for assisting users during flexible process execution to optimize performance through recommendations [3].
However, our approach also presents a few limitations. First, the business analysts must deal with a new language for the constraint-based specification of BPs, thus a period of training is required to let them become familiar with ConDec-R. Secondly, the optimized BP mo dels are generated by considering estimated values for the number of instances, activity attributes and resource availability, and hence our proposal is only appropriate for processes in which these values can be estimated. However, P&amp;S techniques can be applied to replan the activities in runtime by considering the actual values of the parameters [3]. In the current work, we significantly improve and extend the proposals pre-sented in [2,14] by considering multi-objective optimization, choice [19], temporal [18,29], and data constraints [18], and alternative resources. Hence, more real-istic problems and more expressive specifications can be managed. We are not aware of any other approaches for generating enactment plans from declarative specifications, however, there exist some further proposals which could be ex-tended in such direction [19,18,15,17]. Specifically, [19] proposes the generation of a non-deterministic finite state automaton from constraint-based specifica-tions which represents exactly all traces that satisfy the constraints. However, the big disadvantage following such an approach would be that the process of generating the automaton from the declarative specifications is NP complete, and, unlike the proposed approach, no heuristic is used. Additionally, CLIMB [18] could be used to generate quality tra ces from declarative specifications, and calculate its values for different objectiv e functions. Then, the best traces could be selected. Unlike the proposed approach, [18] does neither consider optimality nor resource availabilities. Therefore, these would only cover the planning part of the current proposal, but not the scheduling aspects. The work [15] plans and schedules tasks considering resources and the optimization of one objective func-tion through an integer constraint-based specification. Although [15] presents a similar constraint-based approach, it misses dealing with multi-objective opti-mization, and does not support high level constraints. In [17], a constraint for-malization is proposed to generate variations of an ad-hoc BPMN sub-processes. Unlike our approach, [17] does not consider objective optimization.

Several filtering rules for specialized scheduling constraints have been devel-oped. Specifically, [4,16] model scheduling problems which include alternative and optional tasks respectively, together with their filtering rules. The proposed model and propagation for the optional activities in the current work are very similar to the proposal presented in [16] . However, unlike [4,16], to efficiently manage ConDec-R constraints we developed complex and innovative filtering rules related to the alternating executi ons of repeated activities together with the variable number of times which these activities are executed. In this work, generating optimized BP en actment plans from declarative spec-ifications is proposed to optimize the pe rformance of a process. The generated plans can be used for different purpose s, e.g., generating recommendations. We improve and extend a previous work motiv ated by the requirements described in literature as well as the necessities of the case studies we have conducted. More-over, the proposed approach is validated through an empirical evaluation. As for future work, we will explore various constraint-based solving techniques and analyze their suitability for the generation of multi-objective optimized plans. Additionally, we intend to consider further resource patterns. Though the de-veloped experiments cover only techni cal details of the approach (cf. Sect. 6), the results obtained seem promising when being analyzed with the manager. As for future work an empirical study is proposed to be designed to measure the improvements achieved in the business.
 Acknowledgements. This work has been partially funded by the Spanish Min-isterio de Ciencia e Innovaci  X  on (TIN2009-13714) and the European Regional Development Fund (ERDF/FEDER).
