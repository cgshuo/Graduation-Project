 Over the last decades, the medical imaging technology such as Computed Tomography (CT) and Magnetic Resonance Imaging (MRI) help doctors to diagnose diseases with the medical images. Hence, a vast amount of medical images are generated from hos-pitals every year. By using image-to-image comparison doctors will find out the similar images which come from different patients. These patients may have high possibility to get same disease because they have the similar pathological characteristics in their images. According to this domain knowledge, we believe that finding the similar who may get the same disease. And it will also help doctors to make diagnoses by acquiring information from the previous diagnoses and results. 
Up to now, there are two categories of imag e retrieval methods: 1) description-based image retrieval, which is performed object retrieval based on image descriptions. 2) content-based image retrieval (CBIR), which supports retrieval based on the image hard to describe an image with limited words, CBIR is an increasingly popular discip-line in computer science [2]. Some simple and elegant methods were developed for CBIR. [3] proposed a method based on relevance feedback, [4] introduced a method based on medical image sequence, and [5] proposed a method by wavelet-based CBIR. 
But medical image similarity retrieval is different from general image similarity retrieval [6]. Texture is an important spa tial feature for the doctors X  diagnosis because the texture can describe the objects naturally and even present the gray value variation of adjacent pixels. [7] used LBP and spatial indexing for medical image retrieval. And several researches [8] focused on shape description and matching problem. But most texture descriptor is static value which is calculated by some texture features. It has less consideration about the uncertainty and structure of the texture. 
At the same time, graph mining is a growing research topic because more and more objects can naturally modeled by graph [9,10]. A novel model of uncertain graph [11] enlarges the application of graph model for the practical objects. But this model which knowledge there is no research on medical image retrieval with uncertain graph. kind of uncertain graph based on uncertainty of vertex X  X  location. Secondly, a new method is introduced to model brain CT images to uncertain location graphs based on applied to maintain the structure of texture. Then an approximate uncertain location graph matching scheme is presented for medical image similarity retrieval. Further-more, we propose an index structure to speed up the medical image retrieval process. This paper is organized as follows: Section 2 introduces a preprocessing work. Section 3 proposes the model of uncertain location graph and gives a method for modeling medical images to uncertain loca tion graphs. Section 4 describes the uncer-tain location graph similarity retrieval method. Extensive experiments are shown in Section 5. And section 6 concludes the paper and highlights the future works. images are relatively stable. 2) The texture location of the brain CT image always has the same semantic. 3) The brain CT image has a simple background. Fig. 1 (a) is an original brain CT image. According to our survey doctors, we know that the hypodense (dark) structures indicate much more information than hyperdense (bright) structures. That also means the texture of hypodense structures is more important than the texture of hyperdense structures during the texture compare process. With this domain know-processing transforms the brain CT image to uniformed hierarchical texture image and it is the basic to transform brain CT image to uncertain location graph. Every brain CT image in the database contains m*n pixels corresponding a matrix P m*n . The value of P(i, j) is the gray value of the jth column of the ith row pixel in the image. The value of P(i, j) smaller, the pixel from the image located ith column of the jth row darker. The scheme of the preprocessing is: 1) Extract the region of interest of the image like Fig. 1 (b). 2) Calculate the gray histogram of the region of interest and find the k layers partition par[k]. 3) With the canny edge detector [12] a hierarchical texture image is generated. Fig. 1 (c) is an example of the hierarchical texture image. The output of the preprocessing is the uniformed texture image TI with the uniform size COLUMN X ROW like Fig. 1 (d). In this paper COLUMN=161, ROW=151. 
With this preprocessing, every original image in medical image database can be transformed to a uniformed texture image TI and it corresponds to a matrix TM. TM(i,j) is the gray value of the jth column of the ith row pixel in TI and  X  TM(i, j)  X  0 in the image means there is a texture through the location (i, j). modeling method is proposed. And a concept of texel is applied to reduce the com-plexity of uncertain location graph. Thirdly, we describe the texel mobility which based on vertex mobility and structure of the texel. 3.1 Uncertain Location Graph As usual, we assume that the graph is an abstract representation with the static vertex set V and the edge set E. Uncertain location graph is a kind of undirected graph G=(V, E) which every vertex in the graph has a uncertain location. Every uncertain location graph is in a coordinate system, and we just display the coordinate system in Fig 2. Definition 1. An uncertain location graph (ULG) is a system G=(V, E, L, P,T), where V is the vertex set, E is the edge set, L: V  X  {1, 2, 3,..., n} is a function assigning labels to vertices, P: V  X  [0,1] is a function assigning importance values to vertices, T={T(1), T(2),...,T(m)} and T(i) is a subset of V. In this paper, V(i) is a vertex of the graph with the label i by L functions, and V(i) has the location or the relative location (x, y). P(V(i)) is the importance value of the ver-tex V(i) which means that if the vertex V(i) moves it will cause P(V(i)) impact on the graph. The maximum P(V(i))=1 means if V(i) moves little, the graph is completely different. The minimum P(V(i))=0 means it has no impact to the graph no matter how far V(i) moves. As we can see, the P(V(i)) also means the mobility of V(i), low im-portance means high mobility and vice versa. So, we define the mobility of V(i) as: Since the vertex in the ULG has mobility, the edge in the ULG is also not static. The edge (V(i),V(j)) between V(i) and V(j) can move by m(V(i)) and m(V(j)) limited. Example 1. There is an ULG G sample ={{V(1),V(2),V(3)}, {(V(1),V(2)), (V(2),V(3)), (V(1),V(3))}, L, P, T={T(1),T(2)}}, where T(1)={V(1),V(2)}, T(2)={V(3)} in Fig 2(a). Every vertex has different importance value P(V(2))&gt;P(V(3))&gt;P(V(1)) and with formula 1 we can know m(V(2))&lt;m(V(3))&lt; m(V(1)). The circle around the vertex is the boundary of vertex mobility area which the vertex is the center and the mobility m of the vertex is the radius. The uncertainty of ULG is mainly about the vertex of the graph can move by their mobility area constr aint. V(1) X , V(2) X , V(3) X  are the location that vertex V(1), V(2), V(3) may moved, and we consider it is also graph G sample even though the vertex has been moved. Fig 2.(b) shows an illegal move of ULG G sample because the location of V(2) X  is out of vertex V(2) X  X  mobility area. 3.2 Modeling Method After preprocessing we have got the uniformed texture image TI and it is corresponds a matrix TM. There are five steps to transform a uniformed texture image TI to an ULG. Vertex. TM(i,j) is the gray value of the jth column of the ith row pixel in the TI , and  X 
TM(i, j)  X  0 in the image TI means there is a text ure through the location (i, j). So we define there is a vertex with location (i, j) in the ULG. Edge. There is no distance of any pair of adjacent pixels larger than 2 . Therefore, we P. The preprocessing gives the different value to TM(i, j) based on their gray value and with the domain knowledge it is also an importance value of the vertex (i, j). Therefore the function P is: Definition 2. A texel T(k)={V(a),V(i),V(j),...,V(b)} is a path with no repeated vertices For image retrieval, texture feature is always too complex to be described, and feature describe the texture feature with texels. With the definition of texel we know that the maintains the structure of sectional texture. the same time, T is the segmentation of the texture. has a edge with last vertex and it has never been labeled. If the vertex has more than one vertex connected and unlabeled we choose the vertex according the rule: 1. Choose the vertex which importance value is similar to the last one; 2. If the vertices have the same importance value, we choose the vertex randomly; 3) Execute step 2 until there is no vertex can be found. One segmentation result is shown in Fig. 3.(d). L. Function L labels the vertex in order during the generating T process. 3.3 Texel Mobility Since the vertex in the ULG has the mobility, the texel which consists of a sequence of mobility of V(i) depends on P(V(i)), the texel tolerance depends on the importance value as well. For each vertex on the texel, there is an edge to the next vertex. The basic area that texel can be moved is formulated by the vertex mobility area. Therefore, we define the basic flexibility of texel tolerance standard b_tt as: Fig. 4 (a), texel a is the original texel, texel b and c are the texels that texel a might be moved. The circle in Fig. 4 (a) is the boundary of vertex mobility area which the b_tt is the radius. Nevertheless, when a part of texel moved merely and the other parts of that subjective sensation is proportional to the logarithm of the stimulus intensity [13], which means if a stimulus varies as geometric progression, the corresponding perception will altered in an arithmetic pr ogression. Because the appearance of texel is irregular, we take the length of texel as the stimulus and 2 as the common ratio of the geometric progression. Then the extend texel tolerance standard e_tt defined as: Where the length is the hop from the vertex which is going to be moved to the longest vertex which inside it X  X  mobility area. Fig. 4 (b) gives two examples that texel b and c are the texels that texel a may moved with the e_tt. From these examples we can find that the length we mentioned in the formula 4 is not static, and the e_tt is depends on the variability of the sequence of vertices and vertex X  X  sequence number. That also means the texel in ULG has dynamic mobility which based on the structure of texel. In this section, we firstly give the definition of similarity between ULGs. Then a basic scheme for ULG similarity retrieval ULGR is introduced. To speed up the retrieval process an index is applied and an advanced ULG similarity retrieval method with an index ULGR-index is proposed. In this paper, we denote G={V, E, L, P, T} as a query ULG, G X ={V X , E X ,L X ,P X ,T X  X  is an ULG of the ULG set G db which will be searched. 4.1 Similarity between ULGs In this subsection, two levels of correspondence will be defined: matching and similar. With these following definitions the similarity between two ULGs can be calculated. And a corollary will be proposed for future ULG similarity retrieval. Definition 3. Vertex V(i) and V X (j) is matching if dis(V(i),V X (j))  X  m(V(i))+m (V X (j)). has a correspondence to the vertex V X (l) on the texel T X (j), and every pair of vertices V(k) and V X (l) satisfy dis(V(k),V X (l))  X  b_tt(T(i))+b_tt(T X (j)). Fig 5 (a) gives an example that texel b matching texel a . Because every vertex on texel constraint line is a line with the distance=b_tt(T(i))+ b_tt(T X (j)) from texel a . Definition 5. Texel T X (j) is similar to T(i) if every vertex V(k) on the texel T(i) has a correspondence to the vertex V X (l) on the texel T X (j) and satisfies the constraint dis(V(k),V X (l))  X  b_tt(T(i))+b_tt(T X (j))+log 2 length. Where the length is the hop from the vertex V X (l) to V X (m) which V X (m) is the far-thest vertex has been matched. Fig.5 (b) gives an example of texel b, c similar to +log 2 length from texel a. Definition 6. Texel T X (j) is partially similar to T(i) if a part of vertices V(k) on texel T(i) have correspondence to the vertices V X (l ) on texel T X (j) and satisfy dis(V(k),V X (l))  X  b_tt(T(i))+b_tt(T X (j))+log 2 length. With these definitions, the similarity between two texels st can be calculated as: PT(i) is the vertex set which consists of the vertices have been satisfied the constraint. Definition 7. The similarity sg of ULG G X  to ULG G can be calculated by below: where n is the number of texels in T. 
Definition 7 gives the definition of similarity between two ULGs. It pays more at-tention to the important texel which contains more important vertex or the longer one. Corollary. If a pair of vertices V(i) and V X (k) is matched and another pair of vertices {V(i),V(j)  X  T(m), V X (k),V X (l)  X  T X (n)}, where the length is the hop from V(i) to V(j), we start-points and V(j),V X (l) are end-points. 4.2 ULG Similarity Retrieval Method (ULGR) In classical graph theory, graph matching is a NP-complete problem. Algorithm 1 gives a basic scheme for ULG similarity retrieval. It compares each texel in the query graph with every texel in an ULG which in the ULG database. Suppose that there is a query ULG G with m texels, and there are n ULGs with average t texels in G db , there need O(m*n*t) to compare the texels. If we assume every texel has the same number of vertices l, there need O(m*n *t*l*l*l/2). 
The main problem of Algorithm 1 is time-consuming to compare the impossible similar texels and for each pair of potential texels it needs O(l*l*l/2) in average. The ULG. Therefore, the problem is how to find texels which are possible similar to T(i). Algorithm 1. Basic ULG similarity retrieval method (ULGR) Input: query ULG G, ULG database G db . Output: rank Begin V(m)  X  V(n) V (p)  X  V z (q) End 4.3 The Index for ULG Similarity Retrieval The best improvement must be finding the texel set T_wl which consists of the texels that may similar to texel T(i) directly. In this paper every ULG is in a Column*Row consists of the texels that may be partially similar to texel T(i) from V(b) to V(y). 
The size of Pixel Index in Fig 6 is COLUMN*ROW. Every point PI(i,j) located (i,j) in pixel index has a Trans Table TT(i,j) which records the texels have ever crossed the corresponds the texel information which it belongs to. The texel information is rec-orded in the Texture Table. With the corollary, Algorithm 2 is proposed to find T_wl. satisfy the constraints talked in corollary. Algorithm 2. Find texel set T_wl that may partial similar to T(i) from V(b) to V(y) End With the index, advanced method ULG similarity retrieval with index (ULGR-index) is described as follows: 1)For each texel T(i) in G, find a pair of vertices as the start-point and end-point; 2)Find the texel set T_wl which consists of the texels that may be similar ist[m][n] which m is the number of texel in T, n is the number of ULG in database. 4) Execute step 1 until all texels have been calculated. 6) With the scorelist[][], compute the similarity score for each ULG by formula 6 and give the rank. ULGR-index just need O(m*l*p*l/4*b_tt), which p is the number of the texel that may be similar to texel T(i) and b_tt is the average of all b_tt(T(i)) in G. In this section, three experiments were implemented to demonstrate and compare the performance of our methods for medical image retrieval. For comparison, two methods we proposed above ULGR, ULGR-index and other three algorithms were also implemented, KLT [14], LBP and Sp-LBP. KLT is a feature tracker, and valuates the consistency of features between non-consecutive frames. LBP is a local texture de-scriptor with the grayscale invariant. Sp-LBP is the LBP approach with spatial index-2000 brain CT images. All experiments are implement in C/C++ using Intel Core(2) processor 2.66GHz, and 2GB of RAM. 5.1 Time-Consuming Analysis Fig. 7(b) shows the time-consuming of five methods. Fig. 7(a) shows the time-consuming comparison between ULGR and ULGR-index. From Fig. 7(a) we can see ULGR-index is always faster than ULGR whatever in small database or the data-base with 2000 images. The time-consuming increasing speed of ULGR is about 2-3 seconds per 100 images constantly. The time-consuming increasing speed of ULGR-index is under 1 second per 100 images, and with the increase of database the time-consuming increasing speed is getting down. 5.2 Precision Analysis Performance of image similarity retrieval is generally measured by precision and recall, simulated people just care about the top-20 results and we use precision(20) to measure the performance of each methods. Precision is calculated by: Fig. 8(a) shows the precision of five different methods which is based on 50 indepen-dent queries. ULGR is almost same with ULGR-index in three parameters. And these two methods hold higher score in three parameters. 5.3 Sensitivity Analysis Precision and recall are generally used to measure the performance of image similarity retrieval, but in the real world especially for medical images little change is crucial. Fig. 8 (c) is a brain CT image from a normal human being and Fig. 8 (d) is a image we put a simulated field in Fig. 8 (c). Although they look similar to each other, but doctors just focus on the pathology lesions. Therefore, we measure the sensitivity as: Where S(a) is the relevant results of image a, and SC(a) is the relevant results of little changed image a, like Fig.8 (d), and we use the top-20 results as the relevant results. images which have a little change better than other three methods. That means the model of ULG can focus on the change of textures better especially for normal and abnormal brain CT images. And this characteristic is useful for diagnosis. In this paper, a novel model of ULG is proposed. The uncertainty of ULG which is based on vertex X  X  location is quite different with other models. And ULG is first used for medical image modeling and similarity retrieval. Experimental results show that our methods can find the image with similar texture more accurately. Secondly, our me-thods can distinguish the medical images which have little different from each other. And the efficiency index let ULGR-index has much advantage to ULGR in time complexity. The model of ULG is fairly generic and can be extend to different applications. Future work may include other practical application with ULG model and reducing the ULG matching time. Acknowledgment. The paper is partly supported by the National Natural Science Foundation of China under Grant No.61272184, 61202090, 61100007; Natural Science Foundation of Heilongjiang Province under Grant No.F200903, F201016, F201024, F201130; The Program for New Century Excellent Talents in Universi-ties(NCET-11-0829); The Fundamental Research Funds for the Central Universities under grant No.HEUCFZ1010, HEUCFT1202, HEUCF100609; The Science and RC2010QN010024. 
