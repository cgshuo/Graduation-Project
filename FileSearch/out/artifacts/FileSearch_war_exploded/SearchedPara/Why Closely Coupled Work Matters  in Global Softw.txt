 We report on an ethnographic study of an offshore global software developmen t project between Danish and Philippine developers in a Danish company called Global Soft. We investigate why the IT -developers chose to engage in more closely coupled work as the project progressed and argue that closely coupled work supported the collabor ation in a very challenging project. Three key findings are presented: 1) Closely coupled work practices established connections across the collaboration ensuring knowledge exchange and improving coordination between project members, 2) Closely coupled work practices diminished the formation of sub -groups locally and established new faultlines across the geographical distance , and 3) C losely coupled work practices enabled the creation of connections across organizational hierarchies allowing information to travel seamlessly between layers in the organization an d consequently the project members could better anticipate issues and act accordingly. The implications of these findings include a reconsideration of the significance of closely coupled work in distri buted settings. Also , our findings open up discussions of why closely coupled work matters in global software development.
 H.1.2 [ User/machine information ]: Human factors. H.5.3 [ Group and Organizational Interfaces ]: Com puter -supported cooperative work . Human Factors . Closely coupled w ork; Gl obal Software Development (GSD); Ethnographic study; Computer -Supported Cooperative Work (CSCW) . The CSCW community has in the past years added more importance to the collaborative pr actices of global software development (Jensen and Bj X rn 2012 , Avram et al. 2009 , Boden and Avram 2009 ). Working in a geographically distributed setting across cultural differences and time zones inf luence the work practices of IT -developers ( Noll et al. 2010 , Matthiessen et al. 2014) . Overcoming challenges such as coordination (Christensen and Bj X rn 2014 , Herbsleb 2007 ) establishing trust (Boden et al. 2009) , and managing culture (Krishna et al. 2004 ) are critical for the IT -developers to successfully manage global software development projects. Resea rchers have proposed different strategies to overcome these challenges and s ome have even proposed that complex and highly interdependent software development tasks are unmanageable in geographically distributed teams ( Olson and Olson 2000 ). Instead IT -developers should focus on reducing connections across the geographical distance and minimizing interaction between the develope rs (Hertzum and Pries -Heje 2011 ). Conversely , this paper presents a case where the IT-developers were able to create a complex software solution while working in closely coupled collaboration and consequently experiencing the best offshore collaboration to date. We found that key to this outcome was the IT -developers ability to shift their work practices from a loosely coupled to a more closely coupled configuration . In this paper we ask: Why did the IT -developers choose to engage in more closely coupled work? Answering this question, we provide empirical data from a software development setup between a large Danish company and a Philippine offshore office. In this case the Philippine office had initially been functioning as an outsource software supplier for three years before it was bought by the Danish company. This paper report from the point in time when the Philippine office became an offshore office and events that followed in the next three years. Financially the company had benefitted from having a outsource supplier in terms of competitive power that thus led to buying the Philippine office. However, the collabo ration bet ween the Danish and Filipino IT -developers had not been optimal during the first three years of collaboration. There was a lack of trust between the two groups, little to no social interaction and a general feeling of being them and us. Work prac tices were loosely coupled, tasks were divided among the IT-developers and the collaboration consisted of relatively strict barriers in the collaborative work in terms of limited travel funding and using the Philippine office as a resource rather than a strateg ic partner ( S X derberg et al. 2013 ). We observed over the period of three years ho w the IT -developers slowly transformed their work practices to overcome the challenges experienced in the collaboration. The transition was not carefully orchestrated by the management group but rather carried out as a non-sequential process that involved a range of different employees in the company. Over time the IT -developers facilitated more closely coupled work, which was essential to solve the task. This paper point to three key factors of how the collaboration improved during the transformation from loosely to closely coupled work. Firstly, closely coupled work practices established many connections across the collaboration ensuring knowledge exchange and improving coordination. Secondly, closely coupled work practices diminished the formation of sub -groups locally and establi shed new faultlines across the geographical distance by intensifying travels, collocating people and increasing the frequency of meetings between distributed members. Lastly, closely coupled work created connections across organizational hier archies and enabled people to take responsibility and share mutual accountability of the project outcome. Connections across organizational hierarchies allowed information to travel seamlessly bet ween layers in the organization and consequently the practitioners could b etter anticipate issues and act accordingly. The paper begins with a description of the research method followed by a section on related work. Subsequently , the case is described and the empirical results are presented in order to answer the research ques tion. Finally , the findings are discussed and the conclusion is presented. The company we investigated is called GlobalSoft (a pseudonym) . It was incorporated in 1994 and has its origin in Denmark . GlobalSoft employs more than 1700 people in various destinations such as Denmark, China, Switzerland and the Philippines. The Philippine office was originally an independent supplier o f programming resources for GlobalSoft. In 2009, the Philippine office was bought by GlobalSoft , which had 85 employees at the time . The Philippine office merged with an existing department in Denmark.
 Data collection was undertaken by three researchers and took place from December 2010 to October 2013. The subjects under study were highly professional and worked with expertis e within their fields. We conducted on -site observations in Denmark and the Philippines, shadowing employees, participating in video meetings, and observing everyday practices. The data include 28 audio -recorded and transcribed interviews (19 in Denmark, 9 in the Philippines), each about an hour long. We interviewed, observed, and interacted with developers, testers, IT -architects, project leaders, and managers. We spent a total of almost two months in the Philippines during four different visits (December 2010, July 2011, November 2011, and January 2012), and 12 months in Denmark. During data collection, we discussed initial findings with the workers in casual conversation and in official presentations and workshops. Two researchers held four video-recorded workshops in the Philippines and Denmark. T he data material such as the presentations and workshops was used to interrogate and v alidate our findings ( Eisenhardt 1989 ). Lastly, we analyzed the video recording and internal company documents. Our methodological approach was an open-ended study design inspired by grounded theory ( Strauss and Glaser 1967 ). The variety of data collection methods helped establish a grounded understanding of the complexities of geographical distributed development practices. The analysis of the data material required several iterations of re-reading, coding, and write -ups to categorize and connect the themes that emerged . To understand why the developers engaged in more closely coupled work practices one has to investigate the notion of a collaborative task. The CSCW research on coupling of work focuses on collaborative work and the nature of the task. Collaborative work is de fined by multiple people being mutually engaged within a common field of work, and where individual activities have a direct impact on the collaborative partners (Schmidt and Bannon 1992). Coupling of work has been the subject of CSCW for many years ( Neale et al. 2004 , Pinelle and Gutwin 2003 , Herbsleb et al. 2000 ). Coupling of work refers to the nature and degree of communication needed to solve a specific task (Olson and Olson 2000). A cooperat ive arrangement involves a range of more or less interdependent activities that can be described as a set of activities (Schmidt 2011). Some of these activities can be characterized as  X  loosely coupled  X  while others can be characterized as  X  X ightly coupled  X . Teams working individually on distinct contributions can be characterized as loosely coupled whereas teams with sequential or reciprocal interdependence in the cooperative arrangement are tightly coupled (Balakrishnan et al. 2011). According to Olson an d Olson (2000) loosely coupled work is composed of simple standardized tasks with few interlinked dependencies whereas tightly coupled work is ambiguous and highly interdependent nature and thus very difficult to divide into smaller segments. Software prod ucts with many ambiguities and a high degree of dependency among the software components can be characterized as tightly coupled work. Some research propose that loosely coupled tasks are more suitable for distributed w ork (Hertzum and Pries -Heje 2011 , Olson and Olson 2000 ) which can easily be divided in to smaller sub -tasks. Since loosely coupled tasks have few dependencies they can be reassembled again and requires little coordination and interaction across geographical distance (Mockus and Weiss 2001 , Grinter 2003 ). Tig htly coupled work should preferably be used in a collocated setting because collocated people typically share a common ground and are better able to solve the ambiguities of tightly coupled work (Olson and Olson 2000 ). Contrary to this other researchers have suggested that tightly coupled tasks are actually better suited for distributed work because it requires close connections and thus enables the practitioners to engage with each other on a mutually sh ared task ( Bj X rn and Ngwenyama 2009 ). Thus this line of research points to the necessity of clos ely coupled work as an incentive for increasing interaction and forming partnerships among distributed members (Bhat et al. 2006). Collocated software development requires a lot of coordination (Grinter 2003 ) and the added geographical distance only increases the need to coordinate ( Boden and Avram 2009 , Avram et al. 2009 ). However, closely coupled work in a geographically distributed setting is difficult to achi eve and will require changes in the work practices both locally and remotely (Matthiessen et al. 2014) . In global software development projects the IT -de velopers are often dependent on each other in order to solve the task especially in those situations where the final product is applied into a specific doma in area fo r instance when one group of IT-developers has the necessary domain knowledge, which needs to be communicated across the geographical distance (Jensen and Bj X rn 2012) . Strategies to minimize the need for coordination are segregation and standardization where tasks are divided into smaller pieces with specific requirements (Gerson 2008, Mockus and Weiss 2001 ). However, standardization and segregation do not eliminate the need for coordination in software development projects because all the separated parts have to be assembled to a functioning software product. The reassembling of the software requires coordination to ensure that dependencies between the small pieces are correct when the all the pi eces are collected ( Gerson 2008 , Grinter 2003 ). The increased need for coordination is further complicated in projects that span cul tural difference s ( Krishna et al. 2004 ). Culture defined as a set of values, beliefs or norms ( S X derberg and Holden 2002 ) allows for a deeper understanding of how cultural distance impacts distributed teams unlike a cultural understanding based on national categories (Hofstede and Hofstede 2004). Moving away from national stereotypes recent research have proposed that culture can instead be understood as  X  X  shared web of meanings that shapes roles and interpretations, and is dynamically (re)negotiated by the actors in the course of their daily work  X  (Boden et al. 2012). A lack of a shared web of meanings can lead to misunderstandings and collaboration can be further obscured due to emergent faultlines within groups (Cramton and Hinds 2005 ). Faultlines increase the likelihood of alignment among group member  X  X  demographic attributes, which is the foundation for sub -group formation. Demographic faultlines such as gender, age, cultural background or professional expertise have increased risk of forming in distributed teams. Research has shown that sub -group dynamics can impact negatively on the collaborative work and establish a sense of  X  X s and them  X  based on ethnoc entrism (Cramton and Hinds 2005 ). Sub -groups within a project can be damaging for the collaboration and result in conflict as other studies of global software development project s have shown ( see for example Marrewijk 2010 , or Metiu 2006) . These studies found that strong internal groupings hindered the collaborative work or even caused the collaboration to end permanently. Negative sub -group dynamics can be mitigated by focusing on creating strong connections across distributed groups that establishes cross -cutting faultlines across the grou ps located in the different locations. The positive aspects of sub -groups are specifically achieved when faultlines are established between distributed team members that potentially can create cross -cultural learning (Cramton and Hinds 2005).
 While the inc reased need of coordination required for closely coupled work might be challenging in a distributed setting , it may also offset positive aspects in the collaborative work. Research has shown that social translucence , which is key for collaborative work, is a process of negotiation among project participants. Bj X rn and Ngwenyama states that:  X  Creating translucence and building shared meaning at the work practice level is a negotiation process between the participants where sub -languages are in contact, new l anguages are formed and meanings are developed.  X  (2007 p. 20). Thus participants distributed teams need to engage in on -going negotiation to develop new meaning and establish social translucence. Social translucence consists of three principles for social interaction i.e. visibility, availability and accountability ( Erickson and Kellogg 2000) . Within the field o f CSCW studies of a similar concept, namely awareness has shown how collocated employees display and monitor activities in order to act accordingly (Schmidt 2002 , Heath and Luff 1992 ). Social translucence contains elements that are key to coordinating activities between people. Firstly it gives visibility of our sur roundings and enables people to act accordingly. Secondly it establishes a mutual visibility where others can see you and you kno w that they can see you. Finally, shared visibility creates accountability because we adhere to social norms of behavior and act within the rationale of these norms. In a collocated setting social interaction is seamless and achieved without m uch effort whereas in a distributed setting the social pressure to reinforce norms of behavior is usually weak (Mark 2002 ). Thus it can be very challenging to create the necessary conditions for social translucence in distributed teams. In summary working on tightly coupled tasks in a distributed setting requires more effort due to the geographical distance and cultural differences . To overcome the burden of coordination software development teams often choose to use segregation or standardization with few connections across the different locations. So why does closely coupled work matter in global software development projects? Interestingly we observed in our case how the IT -developers chose to engage in more closely coupled work as the project progressed. This would appear to be a counter -intuitive s olution but seemed to help the IT -developers overcome the challenges they were facing in the collaborative work. However, we saw that the trade -off of loosely coupled work is that no shared meaning is developed, the risk of communication breakdowns increase and sub -group dynamics emerge along demographic faultlines. In the following sect ion we are going to present the findings and show in detail why the closely coupled work is important for global software development projects. This section consists of four sub -sections that identify the work practices at different stages. The se ctions illustrate the transformation of going from loosely coupled work to closely coupled work practices in a global software development department. The first section describes the situation prior the project where the initial steps towards offshoring is taken. The second section describe s the status of the collaboration in the initial stages and focu ses on examples that illustrate t he work practice s during this period . The third section describe s how work practices changed over time as the collaboration transformed to more closely coupled work . The fourth and final section describes the emerging work practi ces in an offshore collaboration. The focus of this pap er is a single department in Globalsoft . The department was in charge of developing new software systems to primarily Danish clients . The department was able to handle all stages of the development e.g. specification, development, testing and implementation. In 2006 a Philippine outsource supplier was hired to support the Danish department. The main contribution from the Philippine supplier was recognized to be scalability and low costs, but had the potential to contribute with specific developmental expertise. The Philippine supplier was bought by Globalsoft in 200 9 and became an official part of the company . The Philippine office merged with the Danish department, so that it consisted of two offices  X  one in Denmark and one in the Philippines. At the time the P hilippine office consisted of 85 employees.
 The transit ion from working in a collocated environment to a geographical distributed setting was more challenging for the Danish employees. The employees in the Philippine office had been working in distributed setting for a longer time and could be characterized as  X  born global  X . The employees in the Danish office were used to do everything by themselves and were thus qui te skeptical about the distributed work setting , which many described as a nuisance enforced upon them by the management group in GlobalSoft. The c ollaboration with the Philippine office lacked success stories and many remained doubtful . As one Danish developer said  X  X here has not been a success story yet. If they existed they would have been talked about. I am certain of that.  X  Th e managers defended the change to offshore by referring to the market dynamics, stating that the GlobalSoft required an offshore component to remain competitive even though the Danish employees had experienced few clearly successful projects with the Philippine office . Initially , t he work practices between the Danish and Phi lippine office s were still affected by the setup used when the Philippine office was merely a supplier of services and not fully integrated into the depart ment . The Philippine office was assigned hours according to a fixed -price model meaning that they would estimate the number of hours for a task and give a fixed price for doing the task. This practice carried with it some nega tive implications for the employees in both Denmark and the Philippines , but to really appreciate this we need to understand the organizational setup between the Philippine office, the Danish office and the clients. The Danish office was responsible for client relations and would typically try to establish a close connection to the clients. In our case we observed that the client came every week to GlobalSoft to spend the day with the project members in the office. The employees in the Philippine office had no contact with the client at a ny time during the project. It was a deliberate strategy from the company to keep the offshore component hidden from the client and leave the impression that the p roduct was the same regardless of the organizational setup.
 The organizational setup with the fixed prices created on -going discussions about ch ange requests and whether they we re legitimate changes or an error caused by the department. If the change request could be characterized as a legitimate change then the client would have to pay for the ext ra hours needed to fix the problem whereas errors put cost on the project budget. Since the Danish employees had the client contact they also had to negotiate change requests with client. But with the fixed price setup the Danes were now in a position wher e they had to negotiate on two front s, namely with the client and the Philippine office. During the time before the collaboration with the Philippine employees this issue had been less of a problem, because the Danish employees only had to negotiate with c lient to solve a problem. The fixed price setup consequently required negotiation with both client and the Philippine office when neither of them was willing to pay the extra cost of a change . Moreover some em ployees in the Danish office would state outrig ht that they did not trust the estimates coming from the Philippine office and several of the Danish employees we interviewed suspected Filipino employees of padding the time estimates. Danish employees felt that within this arrangement the Filipino worker s did not share full responsibility for outcomes of the projects, and were only concerned with covering their estimated hours. Moreover , the employees in the Danish and Philippine office shared little insight into each other  X  X  work conditions because intra -organizational travels were limited by r elatively strict company rules. Organizational constrains at the time limited the funding for traveling between Denmark and the Philippines since travels were not part of proj ect budgets. Funding for travelling had to granted by the vice president in the department and requests would often be denied. Travel requests were denied , often because the gain of face-to-face interaction was difficult to d etermine and thus when weighed against a cost -benefit perspective, the requests were often rejected . The work practices in the collaborative work seemed experimental and haphazardly implemented according to the employees . As a Danish IT -architect told us during an interview: [...] The projects I have been involved in were more or less like shooting buck shots at the problems when these urgent needs occur red . Like putting out fires  X  you just do something, right? But we have not yet had the discussion of how the basic premises of this collaboration are going to work . The past three years of experience with the Philippine office had been dominated by a trial and error approach. The problem was that mistakes were repeated in new projects . One example of this was a model for global collaboration that was i ntroduced in the department. The employees in the Philippine office received training in this new model that specifically described the roles and responsibilities for global collaboration. However, the Danish employees were more reluctant to accept this ne w model and kept using the work practices they had used in previous projects. The implication of one group of employees working with one model in mind and the other group working differen tly caused some frustration for the Philippine employees , since they had spent time and effort in order to learn the new global work practices. The Filipino employees were generally well prepared for working in a global context in terms of language skills and their use of CMC -tools such as instant messenger. On several occa sions we observed them actively engaged in conversations on instant messenger even with people located right next to them. They were , however , concerned about the lack of awareness of the  X  X lobal component  X  as one Filipino manager said: Because a lot of it isn  X  X  culture specific. It X  s really problems with time zone, problems with, well not problems, but rather just people having to get used to be more professional and people having to realize that they have a global, there  X  X  a global component in the work t hat we  X  X e doing. Not just on the Danish side but also on our side.
 Clearly, both the Danish and Filipino developers felt that the collaborative aspects of the work coul d be improved, but they identified different challenges as the root of the problems. Fil ipino employees generally felt that the Danes lacked sufficient English skills to master geographically distributed work , which was evident when Danish employees were reluctant to call directly to their Filipino colleagues . Moreover the Filipinos expressed a concern of being excluded in the collaboration and felt a  X  X ack of interest X  from the Danish employees. One example of this, which happened on several occasions, was emails written in Danish that was sent to the Filipino employees. For instance a string of forwarded emails where the first email would have a sentence like  X  X mportant! See below  X  and then the rest of the emails would all be written in Danish. The Danes, on the other hand, had little trust in the technical expertise of their Filipino colleagues and often perceived themselves superior in terms of experience. Arguably , the Danes largely had more experience because they were typically older and not hired straight from the university . I n the Philippines promotions were sometimes used as an incent ive structure for the e mployees to make them stay at the company . Of course this would also be the case in the Danish office to some extent, but the competition over skilled employees was much more present in the booming offshore market in the Philippines. As a result the Philippine developers got promoted faster than their Danish colleagues despite the fact that they typically had less experience. For instance, one developer who had approximately two years of experience held the role as developer lead in t he Ph ilippine office , which is very little compared to the Danish developers  X  average experience. Thus, the people who held the project roles in the Philippine office often had a lot less practical experience compared to the Danish employees . Consequently , the employees in the Danish office sometimes expected more from the Philippine employees based on their position and not their actual experience. The experience gap was sometimes ignored or forgo tten in the project planning and thus expectations of the technical expertise were not met on several occasions. The situation caused some serious constraints on the relationship between the Danish and Filipino employees, which were heightened by the relatively strict trave lling rules at the time. Less travelling meant that employees in the projects rarely met and had little change of building strong social ties with each other. The challenge that was most prominent at this stage was the general feeling of  X  X s and them  X  in the projects. This feeling was shared in both offices and exemplified by the little social interaction that happened at this stage. Locally people had casual interaction, shared dinner together and attended social activities but globally no shared activitie s occurred. The work practices were still primarily based on an outsourcing setup with clear distinctions of them and us, both in terms of social relations but also the division of work and the economic setup between the two offices . The department won a call for tender for a big project during this period of transforming from outsource to offshore. This project was thus the first major project with the Philippine office as an offshore component and the changes in the proje ct illustrates the general transformation of practices in the department. The project was the largest development project undertaken in the history of the Danish -Philippine department. The contract for this particular project was signed late 2010 and the preliminary preparations took place in spring 2011. In late 2010 the department undertook its biggest task to date when it won the call for tender of a large project for the Danish government. It was going to span more than three years with the largest budg et to date and require technical competences that the department did not have at the time. However, no one in the department or the client was fully aware of the scale and complexity of the project at this moment in time . The fixed price model had been changed meaning that the both office s shared the responsibility in the project. The Philippine office was now integ rated into the project budget along similar offices in the company. The discussion of change requests ended because everybody was equally respon sible for fixing errors. Travels no longer needed managerial approval and each project had a travel budget allowing the project leader to make flexible decisions regarding travels . This made travels between Denmark and the Philippines po ssible to a greater scale. The changes that came from the management group were based partly on the feedback received from the employees in the department. The work practices at this stage had a great impact on the outcome of the project pr imarily because the scope of the project was changed. The project contract signed stated that the Philippine office was fully responsible for the development of the product to the Danish municipalities. However, the people who had authored the contract left the company and an experienced IT -architect from the Danish office was assigned to write the requirement specification to the Philippine office. During this task the IT -architect from the Danish office apprehended the complexity of the task both in terms of technical expertise but also the amount of interaction with public institutions located in Denmark. The IT -architect brought his concerns to the management group where he argued for a reorganization of the entire project. The Danish IT -architect argued strongly against having the Philippine department do this task alone. The IT-architect told us that he had learned from previous experience that the Philippine office would not be able to handle this task single -handedly. While asked about the details reg arding the contract the IT -architect said: Actually , I had no part in the original contract description . So when I finally get to see the contract together with a couple of colleagues, I realize how severe the situation is. I have at least four or five yea rs of experience working with the Philippine office and I know fairly well of their strengths and weaknesses. The requirement specification was clear ly outside of their competences. Maybe not all of it but some of the components planned to be developed the re. Which is why one of the first decisions we took was to withdraw parts of the project. That was not a very popular decision but we did it.
 It should be noted that at this point in time , the Danes generally claimed that a successful offshore project in t he company was yet to be seen and it was thus unrealistic that the Philippine office would be able to handle such a big project alone , primarily because they were not technically equipped for the task or had the necessary experien ce. The Philippine employees counter -argued by saying that they had the necessary expertise and claimed that the main problem was actually not lack of competences , but rather the organization of the collaborative work. Nevertheless, since this IT -architect was also very experienced and had worked for the company more than ten years his arguments carried much weight and the management group decided to follow his recommendations. His arguments against letting the Philippine office complete the project alone was weighed against the eco nomic setback and the management group was convinced that the project had been poorly scoped from the beginning. It was decided that Danish developers should develop approximately 50 percent of the project. At this stage the organizational practice still largely dictated a practice of reducing links between the Danish and Philippine office thus moving everything offshore did not emphasize closely coupled work but instead tendency to insist on the distinction of sites rather than collaboration. The decision to withd raw roughly 50 percent of the project from the Philippine office would seem to afford more links between the two offices but the initial work practices still focused on reducing links between the Danish an d the Philippine employees instead of taking advantage of the diversity of competences across the two sites. The new scope of the project required the involvement of more Danish employees and the Danish IT -architect decided that the project should be divid ed into 4 separate releases. Release A was to be developed in Denmark , mainly because it was deemed to very complex -both due to its technical nature and due to the required integrations with a range of systems operated by local Danish municipalities and institutions. Release B and C w ere estimated to be the least complicated in terms of the technical expert ise required, partly since key sensitive personal data was all to be handled in Release A. The sensitive data was subject to legal requirements accordi ng to Danish law and was thus easier to handle in Denmark. Thus the Philippine office was assigned to develop Release B and C while the Danish office began development on Release A. The final release, which was called release D was left undecided at the ti me, but the Danish office, would most likely be in charge of the development. The work practices at this stage focused on limited links with few people  X  X ridging  X  the two offices. A Danish IT -architect was the primary collaboration partner with the Philipp ine office while the remaining Danish employees focused their effort on release A. The collaborative work consisted of weekly technical meetings with a video link. The Danish IT -architect would be present as well as the Philippine system analyst. Ty pically there would also be two or more Philippine devel opers present and sometimes also the Philippine IT -architect. These meetings were used to discuss the finished software components, solve technical issues and discuss the development for the following week. The interaction can be characterized as closely coupled but it only involved a relatively small group of people in the entire project. Another example of the loosely coupled work at the time was happening between two groups of Danish employees. One group consisted of the IT -architects and developers who primarily worked on developmental tasks but they were also collaborating with group of employees from another department in GlobalSoft , namely the back office. Back office was responsible for the implementation of the technical solutions as well as integrating the software with the new hardware required to handle the sensitive information. The two groups were not collocated initially and did not even share the same building and thus individual dependencies between each other were poorly communicated. The back office group were not aware of the ir important role until late into the project and when they finally began working on the task , they realized that the hardware was much m ore complex than anticipated. Alt hough these two groups shared the same cultural background the y lacked an understanding of the dependencies between them. Despite the fact that the geographical distance was much shorter between the two Danish groups they also experienced a feeling of  X  X s and them  X  in th e work practices at this stage. Although the organizational practices from the first stage had been removed there was still a prevalent feeling of them and us in the collaboration both between Danes and Philippine employees but also between employees located in Denmark. The strict division of work with few links between the groups somewhat replaced the previous constrains of the fixed price model and restricted travelling. Moreover , even with the removal of the restrictions on travels only one person had actually been in the Philippines during the first seven months of the project. During the following year another three Danish employees went to the Philippines for a period of one week. No Philippine developers visited the Danish office in the first two years of the project. The project consisted of up to forty people at peak times, which gives an indication of the low travel frequency during the initial stages of the project. The reasons behind this was pr imarily that few Danish employees were actually inter ested in leaving Denmark for extended periods of time, because of their families and although the Filipino developers expressed their willingness to travel this opportunity were not utilized at this stag e. Therefore much of the collaborative work was coordinated mainly through the requirement specification or the product descriptions that described the task. While this is a typical way of coordinating offshore software development projects , the complexity and scope of this particular project created closely coupled dependencies that were not easily communicated in documents. The Danish employees spent a lot of time writing these documents and when the descriptions were misunderstood it was typically follow ed by frustrations on both sides and costly extra hours spent fixing the errors . An IT -architect described the process like this: I had hoped that it [the documents] had had a greater effect compared to the energy that I spent producing them. On many occasions I had to remind them [the Philippine developers] to read the documents thoroughly. I feel like they should have gotten the information if they had read the document. [...] It seems to me that everything is going a little bit too fast in the Philippines . The loosely coupled work practices gave little opportunity for interaction. Employees knew little of each other across the geographical distance and social relations between the two offi ces were sparse or non -existent . Lack of interaction was not only prevalent across the geographical distance but also between the back office group and the developers located in Denmark. The loosely coupled work practices with the back office group lacked coordination since the two groups were practically unaware of their individual dependencies and how to solve them. At this stage both the scope and the budget had exceeded the project plan and the situation was slowly becoming critical in the project . Eight months into the pro ject seri ous problems began to emerge. The quality of release B did live up to the expected quality. The IT-architects in Denmark were frustrated because they had tried to anticipate these problems by being extra careful with the wording in the requirement s specification to ensure that misunderstandings were minimized. Since their hourly rate was high , the time spent on corrections was very costly for the project when it had not worked as intended. However , few of the Danish employees questioned the method of communication. Instead they emphasized all the work that had gone into detailing the requirements specification  X  work that seemed useless now that the misunderstandings occurred. The Filipino employees questioned the communication format and argued tha t there should be a lot more emphasis on domain knowledge, since the software was going to be applied to a Danish context with very specific institutional structures. Critical information was communicated mostly by emails since only few people held video meetings across the two sites. The developers in the Philippines said that the reason beh ind the poor quality of Release B was caused by the implementation of a new work practice . The Philippine project leader had adopted Scrum processes in the Philippine development team . This meant that the Philippine developers would now have daily sprint meetings and work in 2 -week cycles instead of the 3 -week cycle they used before. Also , they changed the name of these cycles from itera tions to sprints. The time spent learning the new procedure had caused a lower than expected result on Release B . A newly assigned Filipino project leader described the situation at the time like this: [...] When I came in to the project this was already in Scrum. Although I had my reservations initially because of the fixed project and the fixed timeline project. It seemed strange at the time to be doing scrum. But on the other side, it did help quite a bit. Maybe not so much in term of the deadlines, but in terms of actually, let  X  X  say having better deliveries, better quality. It did help. And we  X  X e reaping the fruits of that now for [Release B] . Adapting to the Scrum processes was difficult in the beginning but the change was eventually rewarding for the developers in Philippines. During the same period the Danish project leader travelled to the Philippines to ensure that they were actually able to finish release C due to the low quality of Release B. At the time the project leader said that it had been close to a termination of the collaboration with the Philippine office after seeing the quality of Release B. However, after going to the Philippines and meeting with the developer team, he was convinced to continue the collaborative work. Once implemented t he daily sprint meetings greatly helped the Philippine employees primarily because the Philippine development team would now meet every morning and discuss their current tasks. This helped them to see the overall picture of the individual tasks and delegat e tasks if needed. Collaborative work practices changed slowly towards a more closely coupled practice in various ways after the crisis with Release B. One example of this occurred when Danish and Philippine project memb ers met face-to-face before the development of release C began in the Philippines. Two IT -architects travelled to the Philippines to kick -start the development of Release C. They held p resentations for the Philippine developers and one of the IT -architects held a three hour -long meeting with the system analyst to discuss the technical aspects and implications of Release C. Another example of closely coupled work practices emerged slowly over the course of one year in the project. A Danish IT -architect began to formalize communication structures between the developers t o overcome the misunderstandings. He had been in charge of facilitating the development of Release B and was one of the few who frequently interacted with Filipino developers. The antecedent to formalizing the communication was a more flexible communication strategy that had been used from the beginning of the project. The flexible approach meant that the Philippine developers could direct all their queries and questions to the Danish IT archite ct. However, this eventually led to a situation where the Danish IT architect was spending most of his time answering questions from Philippine developers leaving him little time to do other tasks. The flexible communication strategy became too time consuming for the IT architect, so the team decided to try another approach: We actually changed the model so that Tom (a Philippine system analyst) would be the primary contact person, and he would gain the knowledge discussing with me what should be developed, and then he will distribute the knowledge from there (Obs.: May 24 Denmark).
 Thus, to reestablish a formalized com munication pattern and create a less ambiguous process, the Danish IT architect devised a communication model based on his experience with the different communication norms across Denmark and the Philippines. The purpose of the model was to formalize the communication flow between the Danish IT architect and the Philippine developers. The process of establishing a shared communication patter n lasted more than a year, and during this period they experiment ed with different approaches on how to communicate across geographical and temporal distance. It is key that the process non-linear and emerged over time as the project members experimented w ith different approaches. The end result created more visibility and accountability in the communication between the developers. Instead of having a loosely coupled structure they established a pattern of shared dependencies in the flow of communication as they moved closer to an offshore collaboration. Towards the end of a development cycle in the Philippine office (Release C) the Danish project leader held two separate evaluation sessions of the current status. The Danish meeting lasted more than thre e hours with 20 participants from the Danish office. Most surprisingly was the fact , that the collaborative work with the Philippine office was only mentioned once during the meeting. Instead people discussed a range of chal lenges that the Danish developers had experienced during the first year of the project. One of the main concerns was the lack of coordination between two departments in Denmark, namely the developers and the back office people. The back office people had not been prepared for the tasks expected of them and they got involved in the project at a time, which was considered too late by many of the developers. Moreover people were not located in the same office space, which created a disconnection between the tw o groups. The IT-developers did not know who to talk to in the back office department and the back office were not prepared for the task in terms of the time required to solve the complex tasks. Thus  X  X s/them  X  issues had been a big issue for the Danish dev elopers, but unexpectedly  X  X s/them  X  relations also emerged among Danish colleagues and not only across the g eographical distance in the distributed collaboration.
 The evaluation session with the Philippine office was held as a video meeting with five attendees. The main concern at this meeting was the status of the collaborative work between Denmark and the Philippines. Although it was recognized that the collaboration had struggled during release B it was agreed by all participants that the collaboration w as much better now. They even stated that the collaboration had been the best to date in their experience. Four months later a range of events in the project established the foundation for close collaborative work. T he catalyst for these changes was the critical status of the project at the time. The project was severely delayed due to unforeseen challenges with the technical solutions as well as the complexity of the task. Moreover costs had accelerated due to these delays and the client had fined the project for not fulfilling the obligations in the contract. This situation called for changes in the organization of the work. A group of managers began to closely monitor the project mainly to ensure that no further del ays would occur in the project . Thus manage ment applied a key constraint by limiting the time available. Daily board meetings were established in the Danish office where key employees from the project participated. The purpose of these meetings was to enab le the managers to react to current or future challenges and consequently the management group closely monitored the project members . The typical setup of these meetings was a stand -up meeting that lasted about an hour where the participants discussed the status of the project. A manager would lead the discussion and keep people updated by writing key points on a white board These meetings established visibility across the project areas and made people accountable for tasks. As the Danish project leader tol d us during an interview: Being more integrated and having meetings often is a good idea in my opinion. The ordinary project leader meetings, where the project leader is drawing on a whiteboard and describes the status are not working as intended. Instead let us call it board meetings or stand -up meetings or whatever. These [meetings] are much more rewarding. We sit down together and address the issues when they occur. I think this is the reason why we succeeded  X  that constantly were ready to react to eme rging issues. Urgent challenges could be addressed directly by several members of the team and the access to managers helped the project because they enabled a flow of resources . For instance , by facilitating critical software update s used in the Philippin e office or by improving the bandwidth. The presence of the managers shortened the decision time and in creased the speed of which decisions were taken . Another example of the transition towards more closely work practices was the introduction of daily test meetings. These meetings had no agenda and the purpose was to create a common ground between the distributed testers and discuss current challenges in the test process . Alth ough some of the testers felt awkward attending a meeting with no agenda they quickly got accustomed to the new format. The meeting s served as an open space of interaction where information could flow seamlessly among the participants. For instance , during one of the daily test meeting we observed the following: They talk about test issues t hat have occurred since last meeting and pinpoint aspects , which need to be resolved to be able to continue. Diane mentions that she has been talking to John earlier today. Mary refers to her interaction with Mike while Sean refers to Jack about a task, which he must do on Release D, so that they can continue the work. However Diane informs her that Jack apparently is sick today, but he may be working from home. She is unsure about his status since she received an email earlier toda y from him. (Obs. Denmark Oct 03. 2013) .
 Although Mary, Diane and Sean we re the only people actively present at the meeting they still expand the flow of information to include members outside of the meeting by referring to other people  X  X  current status on different tasks. We also observed how these meeting s allowed the testers to praise or critique each other directly and thus holding people accountable for their work. In the final stages of the project the Filip ino testers became responsible for testing of Release D, which was the final release. It was rather remarkable event given the initial mistrust between the Danish and Philippine employees. The critical status of the project and the involvement of the management level resulte d in new emerging collaborative work practices that created more links between people in the project. At this point in time , project leader me etings had been relatively rare during the first year of the project. P rocedure s were changed when a new project leader was assigned in Denmark. The new project leader quickly initiated weekly project leader meetings with the Philippine counterpart . Interestingly , the project leader in Denmark also invited the IT -architects and managers from both the Danish and the Philippine offices to these meetings. The key difference from ordinary project leader meetings was that people from different organizational levels were able to meet and discuss the current status of the project. Thus , the IT -architects could explain the cha llenges they were currently facing and the managers would be given a chance to better understand the complexity of the work. Moreover , the managers were able to make quick decisions that would normally have to b e confirmed at the monthly steering meeting. By having people from different organizational levels , the se meetings facilitated an effective forum for solving critical problems. Information could travel seamlessly between different levels in the organization and also to other employees in the project through the participants at the meeting. At one of these meetings t he project leader successfully argued for more collocation between the developers and the back office people in Denmark . The project leader told us later that: I think that the main factor [for succeeding] was allowing us to be collocated. I mean having the project members [in Denmark] sitting together and use the resources from the back office that was required. This has been really important for the project. Being collocated greatly allevi ated the disconnection between the developers and the back office located in Denmark . The project leader meeting s established an easier access to resources and a shared understanding of the complexity and what needed to be done to solve challenges  X  both in Denmark and in the Philippines. Why di d the IT -developers shift towards more closely coupled work? First ly, it became evident in the data analysis that the company initially still treated the Philippine office as an outsourcing capacity , for example in terms of sticking to the fixed price setup despite being fully integrated into the same company . The collaborative aspect of the work was minimized and rather seemed to function as two separate entities that we re merely solving a task together with little mutual responsibility. The two offices kept wor king as separate units even after the fixed price setup had been discarded . For example illustrated by the single point of contact between the two offices , which allowed for very little personal contact across the two teams. Another example of the separate nature of the work was the fact that the Philippine office implemented S crum in the development process although the Danish employees were not even aware of this change in process . Work practices w ere loosely coupled in terms little contact between the teams and t asks were divided or decomposed into smaller pieces with the intention of minimizing interaction. The strategy of dividing tasks is typical in the software development business ( Grinter 2003 ) and reducing interaction have been proposed as a viable strategy in global software development projec ts (Hertzum and Pries -Heje 2011 ). H owever we saw that in our case the separation of work practices subsequently created a percept ion of two separate entities . The loosely coupled work practices established a situation where employees viewed thems elves as one entity and their remote colleagues as an entirely other entity. This distinction be tween  X  X s and them  X  eliminated the possibility of perceiving the project as one system conducted with one team who just happens to be located a t two different geographic sites. Instead the project seemed to consist of two teams with few shared r elations and who had separate responsibility for clearly defined parts of the same system. Prior research has investigated the notion of  X  X s and them  X  in terms of faultlines e.g. when key attributes of one group correlates without cross -cutting ties between other groups (Cramton and Hinds 2005). In our case w e observed how the IT developers in the project initially shared few alig ning attributes or were unaware of their existence . The developers located at the Danish office pointed to all the work they had put into th e requirement specification and the lack of experience in the Philippine office as the reason fo r the poor quality of Release B . On the other hand the developers in Philippine office pointed to communication practices of the Danish office , which did not pu t enough emphasis on critical domain knowledge. In terestingly the IT -developers in Denmark also felt isolated from the Danish back office although they shared same cultural background and geographical location. Consequently the feeling of acting like  X  X s and them  X  was an issue both between Denmark and the Philippines as well as between two groups of Danish employees located at the same site . Release B, developed i n the Philippines, did not meet contractual expectations . Failed expectations and lack of socia l interaction can result in lack of trust in virtual teams ( Jarvenpaa and Leidner 1999) which also was apparent in thi s project. Interestingly , the IT-developers managed to overcome the critical s ituation by choosing to engage in more closely coupled work. One example of the shift towards more closely coupled practices was the intensification of travels between the two offices. Travels allowed more fa ce-to-face time building commitment in the project (Nardi, 2005) and created insight into local context and conditions. For instance , the Danish IT -developers expressed their surprise of how cold the Philippine office was due to the air conditioning causing some Philippine developers to wear cloves during office hours . They also experienced the bandwidth problems that their Filipino colleagues had to deal with every day . Similarly , the Filipino developers who travelled to Denmark felt the nerve and stressfu l environment in the Danish office . The travels enabled the IT developers to recognize context specific work conditions in each group. The increase in travels was the first step towards more closely coupled work practices because t he IT -developers spent time together sharing knowledge and getting to know each other. Another similar change occurred when the Danish project leader decided to collocate the Danish Back office with the Danish developers. The benefit of being collocated was that they could see eac h other and knew that they were all working on the same project. While the importance of face-to-face time in global software development has been discussed at length in the literature (Oshri et al. 2007 , Herbsleb et al. 2005 ), we point to these travels and the collocation of Danish employees as a turning point towards more closely coupled work in collaboration because it enabled the IT -developers to create c loser connections to each other and begin to establish shared social norms. For instance during one of the travels the IT -architect spent time with the Filipino developers discussing the definition of  X  X one  X  and finally decided that  X  X one  X  meant tested and ready for implementation. Moreover seeing each other at the work place established a foundation for social translucence as people and their activities became mutually visible. We saw that the IT -developers managed to alleviate the feeling of  X  X s and them  X  by intensifying the collaboration instead of continuing with loosely coupled work practices . The collocation greatly helped the collaborative work between the two Danish groups. The shift towards more closely coupl ed work also alleviated other challenges in the project . Initially the developers had trouble understanding each other while only sharing few links for instance illustrated by the failure to meet expectations of Release B . Although tasks (or Releases) were distributed between the Danish and Philippine office the different software components were highly dependent on each other and required coordination between the developers. This is what Grinter (2003) refers to as the recomposing aspect of the software. In time , the work practices changed in several ways to overcome the challenge of recomposing the software . The developer teams introduced daily scrum meetings in the Philippines and the IT -architect formalized the communication pattern between developers in the Philippines and in Denmark. The testers on both sides began to have daily meetings and the project leaders also engaged in weekly meetings. These changes were often not planned but came as a reaction to discrepant ( Majchrzak et al. 2000 ) events such as unexpected technical complexities or people suddenly leaving the project . Interestingly the developers chose more closely coupled work as a reaction to the discrepant events. Working closely together created more connections in the team allowing easier knowledge exchange and shared responsibility o f the outcome. For instance sharing knowledge by presenting the requirement specification for the next release not only in written documents but also in face -to-face presentations where both Danish and Filipino developers engaged in discussions. The import ance of meeting face -to-face cannot be understated in terms of establishing commitment and common ground as recent research has also argued (Nardi 2005 , Olson and Olson 2000 ). However, the daily contact for instance enabled through video meetings also contributed to greatly improving the collaboration by enabling visibility and awareness between project members across the geographical distance . Research have pointed to the concept of social translucence as a key factor for collaboration (Erickson and Kellogg 2000 ). In a collocated setting project members are easily visible and they are mutually aware of each other. The team members felt more connected to each other a nd the flow of communication became clearer . One Filipino developer specifically said that the communication was less  X  X loudy X  after the daily meetings were established. In our case the developers worked distributed but we argue that the shift towards more closel y coupled work practices also enabled mutual visibility of each other. By making more connections between people in the project they gained insight into the different tasks people were working on and allowing information to travel more freely between distributed members. The example with the daily test meetings illustrates how daily meetings cr eated mutual visibility across different members. The closely coupled work practices thus created more connections across the project both in terms of spanning the geographical distance and locally. These connections enabled information to flow freely betw een mem bers and c reated insight into individual challenges . Lastly, we argue that closely coupled work practices enabled more connections between the traditional organizational hierarchies. Daily board meetings an d the new project leader meetings spanned IT -architects, system analysts, project leaders and managers. Normally the project leader would report back to the steering group consisting of managers and later report back to the project members. However, we have described how , for instance, a Filipino system analyst or a Danish IT -architect was able to provide the necessary descriptions of current technical complexities in the development to both the project leader and the managers present at these meetings . Hav ing these people in the project leader meetings made it easier for both project leaders and managers to unde rstand the challenges in the project and acknowledge that action was needed . Bridging the gap between the organizational hierarchy greatly benefitte d the project in the later stages , especially when constrains such as time and money made conditions difficult. The managers provided decision-power and were able to react quickly to current issues based on the information received directly from the IT-developers. One example of this could be quickly adding new resources to the project in terms of necessary software updates or increasing the bandwidth in the Philippine office. Consequently , having the project leader meeting and the daily board meetings allo wed quick re actions to challeng es that could be acknowledged by all parties at the meeting. Creating closer connections between the management group and the project members also increased the flow of information between people that would normally not work closely together. The close collaboration across hierarchies helped greatly in the l ater stages of the project when time became a critical factor. The meetings facilitated shared information between practitioners and managers, which ensured direct action to address the most problematic issues . Thi s paper presents an empirical observation from a longitudinal ethnographic study of a global software devel opment company demonstrating why IT-developers chose to shift from loosely coupled to closely coupled work. We found that the IT -developers chose to engage in close collaboration to solve a complex and highly interdependent task while assessing the collaborative work as the best to date. We propose three key findings of why closely coupled work impr oved the collaborative practices in a geographically distributed setting. Firstly, closely coupled work practices established many connections across the collaboration ensuring knowledge exchange and improving coordination for instance by establishing dail y test meetings, collocating people and formalizing communication procedures between developers. Secondly, closely coupled work practices diminished the formation of sub -groups locally and established new faultlines across the geographical distance by remo ving the organizational constrains of the fixed price model and intensifying travels betw een the two locations. By collocating Danish employees and increasing the frequency of meetings bet ween distributed members the IT -developers managed to moderate patte rns of  X  X s and them  X  both locally and remotely in the company. Finally, closely coupled work created connections across organizational hierarchies by introducing daily board meetings and new project leader meetings. These meetings increased awareness of th e complexities in the project, which made people accountable and enabled a shared responsibility for the project outcome. Moreover , the connections across organizational hierarchies allowed information to travel seamlessly between layers in the organization and consequently the practitioners could better anticipate issues and act accordingly. While it is impossible to generalize based on a single work place study, the data material showed that closely coupled work practices enabled productive collaboration in this particular project. This suggests that closely coupled work practices are useful for small to medium sized teams that collaborates over extended periods of time and operates in a field that requires specific domain knowledge . Further research is ne eded to investigate how closely coupled work practices scales to larger teams as well as how closely coupled work supports teams for shorter periods of time and in less domain specific projects.
 In conclu sion closely coupled work aided the IT -developers in solving the task despite being very challenging and suffering from delays and economic loss. Not only did they solve the task they also experienced that the collaborative work as the most successful to date. Thus transforming work practices from loosely coupled to closely coupled p ractices became a valuable learning process for doing global software development in the company. This research has been funded by the Danish Agency for Science, Technology and Innovation under the project  X  X ext Generation Technology for Global Software Development  X , #10 -092313. We would like to thank our study participants who generously spent time with us and shared their thoughts. We are grateful to anonymous reviewers for a close reading of the manuscript and their helpful suggestions. [1] Avram, G., Bannon, L., Bowers, J., Sheechan, A. and [2] Balakrishnan, A. D., Kiesler , S., Cummings, J. N., &amp; [3] Bhat, J. M., Gupta, M. and Murthy, S. M. (2006) [4] Bj X rn, P. and Ngwenyama, O. (2009)  X  X irtual Team [5] Boden, A., Avram, G., Bannon, L., &amp; Wulf, V. (2012). [6] Boden, A. and Avram, G. (2009)  X  X nowledge [7] Boden, A., Nett, B. and Wulf, V. (2009)  X  X rust and [8] Christensen, L. R. and Bj X rn, P. (2014)  X  X ocumentscape: [9] Cramton, C. D. and Hinds, P. (2005)  X  X ubgroup [10] Eisenhardt, K. M. (1989)  X  X uilding Theories From Case [11] Erickson, T. and Kellogg, W. A. (2000)  X  X ocial [12] Gerson, E. M. (2008)  X  X each, Bracket, and the Limits of [13] Grinter, R. E. (2003)  X  X ecomposition: Coordinating a [14] Heath, C. and Luff, P. (1992)  X  X ollaboration and [15] Herbsleb, J., Paulish, D. and Bass, M. (200 5)  X  X lobal [16] Herbsleb, J. D. (2007)  X  X lobal Software Engineering: [17] Herbsleb, J. D., Mockus, A., Finholt, T. A. and Grinter, [18] Hertzum , M. and Pries -Heje, J. (2011)  X  X s Minimizing [19] Hofstede, G., &amp; Hofstede, G. J. (2004). Cultures and [20] Jarvenpaa, S. and Leidner, D. (1999)  X  X ommunication [21] Jensen, R. E. and Bj X rn, P. (2012)  X  Divergence and [22] Krishna, S., Sahay, S. and Walsham, G. (2004) [23] Majchrzak, A., Rice, R. E., Malhotra, A., King, N. and [24] Mark, G. (2002)  X  X onventions and Commitments in [25] Mar rewijk, A. v. (2010)  X  Situational Construction of [26] Matthiessen, S., Bj X rn, P. and Petersen, L. M. (2014) [27] Metiu, A. (2006)  X  X wning the Code: Status Closure in [28] Mockus, A. and Weiss, D. M. (2001)  X  X lobalization by [29] Nardi, B. (2005)  X  X eyond Bandwidth: Dimensions of [30] Neale, D. C., Carroll, J. M. and Rosson, M. B. (2004) [31] Noll, J., Beecham, S. and Richardson, I. (2010)  X  X lobal [32] Olson, G. M. and Olson, J. S. (2000)  X  X istance Matters  X , [33] Oshri, I., Kotlarsky, J. and Willcocks, L. P. (2007) [34] Pinelle, D. and Gutw in, C. (2003)  X  Designing for Loose [35] Schmidt, K. (2011). Cooperative Work and Coordinative [36] Schmidt, K. (2002)  X  X he Problem with  X  X wareness  X  X , [37] Schmidt, K. and Bannon, L. (1992)  X  X aking CSCW [38] S X derberg, A. -M. and Holden, N. (2002)  X  X ethinking [39] S X derberg, A. -M., Krishna, S. and Bj X rn, P. (2013) [40] Strauss, A. and Glaser, B. G. (1967) The Discovery of 
