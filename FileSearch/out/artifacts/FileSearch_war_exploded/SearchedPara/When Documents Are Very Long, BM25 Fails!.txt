 We reveal that the Okapi BM25 retrieval function tends to overly penalize very long documents . To address this prob-lem, we present a simple yet effective extension of BM25, namely BM25L , which  X  X hifts X  the term frequency normal-ization formula to boost scores of very long documents. Our experiments show that BM25L, with the same computation cost, is more effective and robust than the standard BM25. H.3.3 [ Information Search and Retrieval ]: Retrieval models Algorithms BM25, BM25L, term frequency, very long documents
The Okapi BM25 retrieval function [2, 3] has been the state-of-the-art for nearly two decades. BM25 scores a doc-ument D with respect to query Q as follows: where c ( q,Q ) is the count of q in Q , N is the total number of documents, df ( q ) is the document frequency of q ,and k parameter. Following [1], we use a modified IDF formula in BM25 to avoid its problem of possibly negative IDF values.
A key component of BM25 contributing to its success is its sub-linear term frequency (TF) normalization formula: where | D | represents document length, avdl stands for aver-age document length, c ( q,D )istherawTFof q in D ,and b and k 1 are two parameters. c ( q,D ) is the normalized TF by document length using pivoted length normalization [4]. Figure 1: Comparison of retrieval and relevance probabilities against all document lengths.

When a document is very long, we can see that c ( q,D ) could be very small and approach 0. Consequently, f ( q,D ) will also approach 0 as if q did not occur in D .Thatis,the presence of q inaverylongdocument D fails to differentiate D clearly from other documents where q is absent. This suggests that the occurrences of a query term in very long documents may not be rewarded properly by BM25, and thus those very long documents can be overly penalized. (See Figure 1 for empirical evidence of this problem.)
In order to avoid overly-penalizing very long documents, we need to add a constraint in TF normalization to make sure that the  X  X core gap X  of f ( q,D ) between c ( q,D )=0 and c ( q,D ) &gt; 0 be sufficiently large. However, we do not want that the addition of this new constraint violates those existing properties of BM25 [2], which have been shown to work quite well. Thus what we want is an improved sub-linear TF normalization formula f ( q,D )thathasallthe following characteristics: (I) It is zero for c ( q,D )=0;(II) it increases monotonically as c ( q,D ) increases but to an asymptotic maximum; (III) it decreases monotonically as c ( q,D ) &gt; 0 decreases but to an asymptotic minimum that is sufficiently large . Here (I) and (II) are characteristics of the TF normalization formula of the original BM25 [2].
One heuristic way to achieve this goal is to define f ( q,D ) as follows: which is essentially a shifted version of f ( q,D ) by addition of a shift parameter  X &gt; 0. It is easy to verify that f ( q,D ) still satisfies both properties (I) and (II). Moreover, f ( q,D )has this sub-linear function f ( q,D ), the score increase from the addition of  X  is decreasing as c ( q,D ) increases. Therefore, f ( q,D ) tends to favor small c ( q,D ) values more, which would intuitively boost very long documents.

Finally, substituting f ( q,D ) into Equation 1 to replace f ( q,D ), we obtain a new retrieval function, namely BM25L .
We compared BM25L with BM25 using six TREC col-lections: Terabyte, WT10G, and WT2G are web datasets with queries 701-850, 451-550, and 401-450 respectively; Ro-bust04, TREC8, and AP8889 represent news datasets with queries 301-450&amp;601-700, 401-450, and 51-150 respectively. The preprocessing included Porter stemming and removal of standard InQuery stopwords. For both BM25 and BM25L, we set k 3 = 1000 and tuned b  X  [0 . 1 , 0 . 9] and k 1  X  to optimize MAP. The parameter  X  in BM25L was empiri-cally set to 0.5 unless otherwise specified.
Inspired by Singhal et al. X  X  finding that a good retrieval function should retrieve documents of all lengths with simi-lar chances as their likelihood of relevance [4], we also com-pare the retrieval pattern of BM25 with the relevance pat-tern. We follow the binning analysis strategy proposed in [4] and plot the two patterns against all document lengths on WT10G in Figure 1 (left). It confirms our previous anal-ysis that BM25 retrieves very long documents with chances much lower than their likelihood of relevance .

We also plot the retrieval and relevance patterns for BM25L in Figure 1 (right). As expected, BM25L indeed alleviates the problem of over-penalizing very long documents clearly. We first compare the optimal performance of BM25 and BM25L in Table 1. We observe that BM25L outperforms the well-tuned BM25 consistently in both MAP and P@10. Be-sides, BM25L works better on web collections than on news collections. This is likely because there are generally more very long documents in web collections, where the problem of BM25, i.e., overly-penalizing very long documents, would presumably be more severe.
 Parameter b controls the influence of document length in TF normalization. We draw the sensitivity curves of BM25 and BM25L to b on WT10G and Robust04 in Figure 2 (left), where k 1 is optimized for each method. It shows that BM25L is more robust than BM25; if we increase b ,theMAPof BM25 drops more quickly than BM25L. It intuitively makes sense in that, increasing b in BM25 would overly penalize very long documents even more. Overall, BM25L works ef-fectively with b  X  [0 . 3 , 0 . 6].
 We also draw in Figure 2 (middle) the sensitivity curves of BM25 and BM25L through varying k 1 ,where b is optimized for each method. We can see that BM25 drops dramatically when increasing k 1 , while BM25L appears more stable. This observation is expected: according to Formula 2, for a small c ( q,D ) in very long documents, the larger k 1 is, the smaller f ( q,D ) will be; as a result, increasing k 1 would exacerbate the problem of BM25. However, the f ( q,D ) of BM25L is guaranteed to have a document-independent lower bound ( k 1 +1)  X / ( k 1 +  X  ) to avoid overly penalizing very long docu-ments. Additionally, the optimal k 1 of BM25L is also larger than that of BM25 due to the effect of  X  X hifting X ; setting k  X  [1 . 0 , 2 . 0] usually works well for BM25L.

In previous experiments, we empirically set the shift pa-rameter  X  =0 . 5inBM25L.Toexaminehow  X  affects the performance of BM25L, we plot the absolute MAP improve-ments against different values of  X  in Figure 2 (right). It shows that the simple shifting strategy can successfully im-prove performance steadily and setting  X  =0 . 5workswell for both web and news datasets. Besides, it confirms our finding that BM25L works more effectively on web data. We proposed BM25L, a simple yet effective extension of BM25, to overcome the problem of BM25 which tends to over-penalize very long documents. Our experiments show that BM25L, with the same computation cost, is more effec-tive and robust than BM25. BM25L can potentially replace the standard BM25 in all retrieval applications.
