 An essential part of an expert-finding task, such as matching reviewers to submitted papers, is the ability to model the ex-pertise of a person based on documents. We evaluate several measures of the association between a document to be re-viewed and an author, represented by their previous papers. We compare language-model-based approaches with a novel topic model, Author-Persona-Topic (APT). In this model, each author can write under one or more  X  X ersonas, X  which are represented as independent distributions over hidden topics. Examples of previous papers written by prospective reviewers are gathered from the Rexa database, which ex-tracts and disambiguates author mentions from documents gathered from the web. We evaluate the models using a re-viewer matching task based on human relevance judgments determining how well the expertise of proposed reviewers matches a submission. We find that the APT topic model outperforms the other models.
 H.3.3 [ Information Search and Retrieval ]: Retrieval models Experimentation Topic models, reviewer finding, expert retrieval
Peer review is part of the foundation of the scientific method, but matching papers with reviewers can be a challenging process. The process is also a significant, time-consuming burden on the conference chair. There has been a recent trend towards bidding on submissions by reviewers, which consumes additional reviewer time, as well as raising ques-tions about the confidentiality of the submissions process.
Matching papers with reviewers is a complicated task, with many sub-problems. Conference chairs must solve a large optimization problem involving constraints on the num-ber of reviewers per paper and the number of papers per re-viewer. One of the most important elements of the process, however, is modeling the expertise of a given reviewer with respect to the topical content of a given paper. This task is related to  X  X xpert finding, X  an area that has received in-creased interest in recent years in the context of the TREC Enterprise Track. In addition, for several years researchers in artificial intelligence have sought to automate, or at least streamline, the reviewer matching process.

In this paper, we evaluate several methods for measur-ing the affinity of a reviewer to a paper. These methods include language models with Dirichlet smoothing [Ponte and Croft, 1998, Zhai and Lafferty, 2001], the Author-Topic model [Rosen-Zvi et al., 2004], and a novel topic model, Author-Persona-Topic (APT).

We follow previous approaches in treating expert finding as an information retrieval task. The goal is to find rele-vant people rather than relevant documents, but we use the same basic tools. More specifically, we construct a model in which each potential reviewer has a distribution over words in the vocabulary, and then rank reviewers for a given paper based on the likelihood of the words in that paper under each reviewer X  X  distribution. In this paper we evaluate sev-eral methods for constructing such models.

In order to discover expertise, it is necessary to consider how to represent expertise. Statistical topic models repre-sent documents as mixtures of topical components, which are distributions over the words in the corpus. The APT model is motivated by the observation that authors fre-quently write about several distinct subject area combina-tions. It is rare that a person is an expert in all facets of a single topic. For example, even a topic as narrow as support vector machines is sufficiently rich and complex that almost no one would claim expertise in all facets of their use and theory.

People usually describe their expertise as the combination of several topics, and often have experience in several such intersections. The second author, for example, has exper-tise in Bayesian networks and language, and reinforcement learning and hidden states, but not in reinforcement learning and language, a combination used in dialog systems. Other examples of such topical intersections include game theory and Bayesian networks or information retrieval and algo-rithms. In the APT model, we not only learn the topical components, but also divide each author X  X  papers into sev-eral  X  X ersonas. X  Each persona clusters papers with similar topical combinations.

In order to learn the expertise of prospective reviewers, it is necessary to have a training corpus of documents by or about those people. Previous work has been hampered by a lack of such training data. We take advantage of the Rexa database of research papers, a collection built from research papers downloaded from the web. Rexa extracts information such as author names, titles and citations from PDF documents. Papers and authors are then coreferenced automatically.

Evaluating systems for reviewer matching is difficult. The actual assignments of reviewers to conference papers and the content of rejected papers is generally considered privileged information. Even if such data were available, it is not clear that such assignments necessarily represent an ideal gold standard, or simply a compromise that is not deeply and obviously flawed. It is quite likely, for example, that review-ers not on a given panel may still be very relevant to that paper. As a result, we have collected human annotated rel-evance judgments for matchings between the reviewers and accepted papers for a recent Neural Information Processing Systems conference (NIPS 2006).

We measure the precision of each model after various num-bers of reviewers have been retrieved. We find that a lan-guage model has the highest precision with very low recall (after five reviewers have been retrieved), but that the APT model with a relatively large number of topics has the high-est precision at higher recall (at all other levels of retrieved reviewers up to 30). Practical reviewer finding systems will need higher recall to accommodate constraints beyond ex-pertise including overloading and conflicts of interest.
The task of matching papers with reviewers has a long his-tory. Dumais and Nielsen [1992] use Latent Semantic Index-ing, trained on abstracts provided by prospective reviewers. Other approaches such as Benferhat and Lang [2001] take the affinity of reviewers to papers as given and concentrate on solving the optimization problem of constructing panels.
Rodriguez and Bollen [2006] present a system that propa-gates a particle swarm over a co-authorship network, start-ing with the authors cited by a submitted paper. The train-ing corpus is the DBLP dataset, a manually maintained database of authors and research papers. The system is eval-uated against self-described reviewer affinities from a recent conference (JCDL 2005). We have chosen to use third-party relevance judgments rather than self judgments, as review-ers may prefer to request papers that are interesting rather than papers in their core areas of expertise.

Recent work by Hettich and Pazzani [2006] demonstrates the Revaide system for recommending panels of reviewers for NSF grant applications. Revaide uses a TF-IDF weighted vector space model for measuring the association of review-ers with applications. The training corpus is the NSF database of  X  X undable X  grant applications. Unfortunately, as with con-ferences, both the training corpus and the query document set for this study are confidential. Similarly, Basu et al. [1999] use web searches to find abstracts from papers writ-ten by reviewers, and then use a TF-IDF weighted vector space model to rank reviewers for a given submitted paper. The inclusion of expert finding in the TREC Enterprise Track has resulted in a great deal of work on this area. Re-cent examples include Balog et al. [2006], which presents two language models for expert finding, and Petkova and Croft [2006].

The use of topic models for information retrieval tasks is described in Wei and Croft [2006]. The authors find that interpolations between Dirichlet smoothed language models and topic models show significant improvements in retrieval performance above language models by themselves.
We evaluate several models of expertise. These can be divided into two main approaches: non-mixture language models and topic models. In general, a language model based approach estimates the likelihood of a query given each document in the collection using a smoothed distri-bution derived from the words in that document. A topic model adds an additional level of representational power. Documents in the collection are represented as a mixture of topics, which are themselves mixtures of words.

Scientific publications frequently have more than one au-thor. Rather than attempting to divide documents between authors, we simply replicate multi-author documents, once for each author. Although it is clear that the authors of a paper frequently focus on one aspect of that paper or an-other, we assume that all authors on a given paper are at least substantially familiar with every aspect of that paper. In practice, replicating documents in this way has less effect in the reviewer matching application than in general expert finding, since we only consider authors who are in the list of reviewers. Therefore, documents will only be replicated if more than one author is also a reviewer.
In a language model, we represent each document as a multinomial over words. The maximum likelihood estimate of this multinomial is the number of times each word type appears in the document divided by the total number of tokens in the document. Since most words in the vocabu-lary do not appear in a given document, it is necessary to smooth the distribution. For all the models in this paper we use Dirichlet smoothing [Zhai and Lafferty, 2001]. The likelihood of a query q consisting of some number of terms t for a document d under a language model with Dirichlet smoothing is where N d is the number of tokens in d , p ( t | d ) is the maxi-mum likelihood estimate described above,  X  is a smoothing parameter, and p ( t ) is the probability of the term in the entire corpus.

The first and simplest language model we evaluate is the single-document author model. In this model, for each au-thor a we construct a document d a , which is a concatenation of all documents in the corpus written by author a . The probability of a query given a reviewer r is therefore the probability of the query under Equation 1 given the author document d r .

The second language model is the max-document author model. In this model we rank all documents for a given query using Equation 2, and then rank the reviewers in the order in which they first appear. We define D r as the set of documents for which r appears as an author. The probabil-ity of a query given a reviewer under this model is thus
The third language model is the document-sum author model. In this model, we calculate a maximum likelihood multinomial over all documents in the training corpus. For each term in the query, we calculate the probability of the term given the reviewer as the average, over all papers by that reviewer, of the probability of the term given that pa-per. This value is then smoothed by the probability of the term in the corpus as a whole. The probability of the query given a reviewer is therefore This model is drawn from Petkova and Croft [2006], and is similar to Model 1 from Balog et al. [2006]. We follow Petkova and Croft in setting  X  = 0 . 1.

The three language models approach relevance in different ways. In the single-document model, most of a reviewer X  X  work must be similar to a given paper in order for that reviewer to be ranked highly, but no particular document needs to exactly match the submission. In contrast, in the max-document model, a reviewer must have at least one doc-ument that very closely matches the word distribution of the paper. The document-sum model is in a way a compromise between these two: a single relevant document will not be  X  X ashed out X  by a large body of non-relevant work, but the author of one highly relevant document (among many) will not necessarily be ranked higher than the author of many slightly less relevant documents.

The smoothing parameters for the language models are chosen to be the average length of the documents in the training corpus for each model. Since the documents in the single-document author model are generally much larger than the documents in the max-document author model, the smoothing parameter for this model tends to be much larger, approximately 2000 vs. approximately 50.

Other published work such as Hettich and Pazzani [2006] uses TF-IDF weighting in a vector space model. We do not evaluate a vector space model here, but it has been shown both that language-model-based information retrieval sys-tems outperform TF-IDF based systems [Ponte and Croft, 1998] and that Dirichlet smoothing in language models im-plies the effect of both TF-IDF weighting and document length normalization [Zhai and Lafferty, 2001].
A statistical topic model represents a topic as a distri-bution over words, as drawn from a Dirichlet prior. In a simple topic model such as Latent Dirichlet Allocation [Blei et al., 2003], each document has a distribution over topics. Words are generated by selecting a topic from the docu-ment X  X  topic distribution, and then selecting a word from that topic X  X  distribution over the vocabulary. Although di-rectly optimizing the topic-word and document-topic distri-butions is intractable, these models can be trained efficiently using Gibbs sampling. Topic models produce interpretable, semantically coherent topics, which can be examined by list-ing the most probable words for each topic.

Statistical topic models have been previously used to de-scribe the topical distributions of authors, for example the Author-Topic model by Rosen-Zvi et al. [2004] and the Author-Recipient-Topic model by McCallum et al. [2005]. In the Author-Topic (AT) model, each author has a distribution over topics, unlike the simple topic model where each docu-ment has its own topic distribution. Under the AT genera-tive model, a document has some number of authors, whose identity is observed. Each word is generated by selecting one of those authors, sampling a topic from that author X  X  topic distribution, and then sampling a word from that topic X  X  distribution over the vocabulary. Note that one of the goals of the AT model is to learn which author is responsible for a given word in a document. We avoid this question entirely by replicating documents that have more than one reviewer as an author. This decision is based on our goals for the model: we want to discover a broader notion of which com-binations of topics a given reviewer is competent to review, rather than to judge the relative strengths of coauthors in a particular paper.
 All topic models evaluated in this paper are trained by Gibbs sampling. In all cases we average over the results of 10 Gibbs sampling chains.
For this paper, we evaluate two topic models. The first is a simplified version of the AT model. All training documents in the corpus are constrained to have a single author, so the variables representing which author is responsible for a given word are meaningless. The resulting model can be thought of as a simple topic model run on the concatenated documents described earlier in the language model section for the single-document author model.

The generative model for the single-author AT model can be described by the following Bayesian hierarchical model. The model includes two Dirichlet hyperparameters,  X  and  X  , which are the size of the set of topics and the vocabulary of the corpus, respectively. 1. For each topic t sample a multinomial over words  X  t 2. For each author a sample a multinomial over topics  X  a 3. For each document d with author a ,
The probability of the words and topic assignments of the entire corpus is then
Rearranging the terms to group the words and topics drawn from each multinomial and integrating over the multi-nomial parameters  X  and  X  , we are left with two products over Dirichlet-multinomial distributions. These depend on the hyperparameters and certain statistics of the corpus: N t , the number of words of type v in topic t , N t a , the num-ber of words of topic t in documents by author a , N t , the total number of words in topic t , and N a , the total number of words written by author a .
The predictive distribution for Gibbs sampling can be de-rived as the probability of adding a word of type v written by author a to a topic t . This is
The term P t (  X  t + N t a ) is constant with respect to t , but is included here for clarity. We train the topic model for 1000 iterations of Gibbs sampling.

Once we have a trained topic model, the next step is to derive the likelihood of a query given the model. Here we follow Wei and Croft [2006]. We estimate the multinomial parameters using expressions similar to the predictive dis-tribution above.
Finally, we represent the probability of a term given an author as a weighted sum over all topics of the probability of the word given the topic. The probability of a query (here we use v to represent query terms to avoid confusion) is therefore the product of the probabilities of the terms:
In addition to the single-author AT model, we present a novel topic model, the Author-Persona-Topic (APT) model. The difference between APT and AT is that rather than grouping all papers by a given author under a single topic distribution, we allow each author X  X  documents to be di-vided into one or more clusters, each with its own separate topic distribution. These clusters represent different  X  X er-sonas X  under which a single author writes, each representing a different topical intersection of expertise.

An important question is how many potential personas each author should have. In this work we set the num-ber of personas for author a to d| D a | / 20 e . Thus each au-thor has at least one persona, and one additional persona for every twenty papers. We experimented with setting the number of personas proportional to the log of the number of papers and with allowing the model to choose a number of personas using a non-parametric Dirichlet process prior. Neither method was as effective as the linear number of per-sonas; results for those models are not reported here.
The generative model for APT is as follows. The hyper-parameters are the same as in the AT model, except for the addition of a hyperparameter for the distribution over personas for each author. Since authors have varying num-bers of personas, we cannot draw all distributions over per-sonas from the same Dirichlet parameter for every author: a Dirichlet distribution has a fixed number of dimensions, so an author with two personas cannot draw a distribution over those two personas from the same prior distribution as an author with ten personas. Therefore we define a separate Dirichlet parameter  X  a for every author, with the same num-ber of dimensions as the number of personas assigned to that author, all set to a symmetric distribution with  X  a g = 10. 1. For each topic t sample a multinomial over words  X  t 2. For each author 3. For each document d with author a d ,
The probability of the entire corpus is therefore p ( w , z , g , X , X , X  | a , X , X , X  ) = (10)
As with the AT model, we use Gibbs sampling to draw samples from this distribution conditioned on the words and authorships in the corpus. For each document, we sample the topic assignment for each word and then the persona assignment for the document. The predictive distribution for the each word X  X  topic assignment is the same as Equation 6, substituting g d for a . Sampling the persona assignment of an entire document is more difficult, since all of the word-topic assignments depend on the persona. In order to sample a new persona, we remove the current setting of g d from N (the number of documents by author a assigned to persona g ) and remove all topic counts for the document from N t We represent the number of tokens assigned to topic t in documents other than d that are assigned to persona g d as N the word-topic assignments z d is p ( g d | z ,a, X  a )  X  This represents the probability of picking persona g d given the number of documents assigned to that persona and the total number of documents for author a , as well as adding some number of words to each topic, beyond the number of words in that topic from other documents in the persona. Table 1: Sample topics from the APT model with 200 topics on a corpus of about 500,000 words. The documents consist of titles and abstracts from pa-pers written by NIPS reviewers. The column on the left is the total number of words in each topic, while the column on the right is a listing of the most probable words for each topic.
 Figure 1: A graphical model representation of the Author-Persona-Topic model. Each author has some number of personas, each represented by a multino-mial  X  . To generate a document, an author chooses a persona p , distributed according to  X  , and then selects topics from  X  p .
It is difficult to evaluate the quality of paper/reviewer relevance rankings due to the scarcity of data that can be examined publicly. As a result, we approximate the task of assigning reviewers to submitted papers by gathering ex-pertise relevance judgments from humans for rankings of re-viewers for accepted papers for the NIPS 2006 conference. The human judgments were all provided by people with five to ten years of experience on the NIPS program committee.
We evaluate our algorithms on the resulting list of 148 pa-pers and 364 reviewers. It would be very difficult and time-consuming to gather relevance judgments for every combi-nation of reviewers and papers, most of which will not be relevant. As a result, we use pooled relevance judgments [Buckley and Voorhees, 2004]. In this method, we ask each model to rank the reviewers for each paper. We then take the top five reviewers from each ranked list and merge them, removing duplicates. This pool of reviewers is then pre-sented to human annotators. Since we remove duplicates, pools for papers that the models showed substantial agree-ment are smaller than pools for papers in which the models disagreed.

We asked several prominent researchers from the NIPS community to mark the relevance of the proposed review-ers. Each reviewer was encouraged to select papers from the conference proceedings that were particularly related to his or her research. We collected a total of 650 reviewer/paper relevance judgments from nine annotators.
 We used a four-level relevance scheme, as follows: Very Relevant (3), Relevant (2), Slightly Relevant (1) and Irrele-vant (0).
We in fact use the reviewer list from NIPS 2005, as we were unable to find the list of reviewers for NIPS 2006, but we do not believe that the difference is significant.
 We evaluate the results using the trec_eval package. 2 The evaluation algorithms implemented in this package are de-fined only for binary relevance judgments. We therefore evaluate each algorithm under two relevance cutoffs, such that either 2 or 3 are considered relevant or only 3 is consid-ered relevant. If there are disagreements between annotators we default to the lower ranking.

Examples of topics from a model trained with 200 top-ics are shown in Table 1. The model is able to identify and separate common methodological words ( X  X erformance, data, results X  and  X  X ata, model, algorithm X ) while also iden-tifying clusters of words related to specific machine learn-ing algorithms: there are topics for hidden markov models, support vector machines, information bottleneck and condi-tional random fields.

The personas discovered by the APT model are also co-herent and interpretable. Examples of personas for two Computer Science researchers are shown in Table 4 (David Karger) and Table 5 (Daphne Koller). We also list in the captions of those tables subject terms that the researchers themselves chose for their own papers, as listed on their web pages. In both cases the APT model has essentially re-discovered the organization that the researchers themselves chose for their own papers. For example, Karger X  X  largest persona includes topics related to algorithms and graphs; he lists  X  X uts and Flows X  as a major area of research. Other personas include topics related to peer-to-peer networking ( X  X pplications of Theory X ) and web search ( X  X nformation Retrieval X ). Koller also identifies areas discovered by the APT model, such as  X  X omputational Biology X  and  X  X ompu-tational Game Theory. X 
Note that these personas are combinations of topics that are commonly used by each researcher, such as algorithms and data sets, along with more specific topics, such as  X  X ene, protein, expression X  and  X  X ames, game, equilibria. X  In ad-dition, we can see areas in which both researchers work on similar topical areas but use different technical approaches. For example, both researchers have a persona that promi-nently includes the topic  X  X ext, documents, web. X  Daphne Koller X  X   X  X ext and Web X  persona includes this topic along with topics about probabilistic models and conditional ran-dom fields. David Karger X  X   X  X ext, Graphs, and Peer-to-Peer networks X  persona contains the text topic as well, but com-bines it with topics concerning peer-to-peer network algo-rithms.

Results for precision at various numbers of reviewers re-turned for both relevance cutoffs are shown in Tables 2 and 3. and plotted in Figures 2 and 3. There is a marked dif-ference in performance between the topic models with 200 ftp://ftp.cs.cornell.edu/pub/smart Figure 2: The precision of each model as more doc-uments are retrieved for relevance cutoff  X  2 . The topic models with 200 topics are generally the best performers, followed by the language models and the topic models with 75 topics. The single-document author language model has the highest precision at the top ranks, but quickly drops below the topic models. The Author-persona-Topic model outper-forms the Author-Topic model at higher numbers of topics, while Author-Topic performs better with more coarse-grained topics. topics and with 75 topics. In general the models with more fine-grained topics show improved performance.

In most cases, the APT topic model with 200 topics has the highest precision. At the 5-reviewers level, the single-document author language model performs best. This is not particularly surprising: if all of an author X  X  work matches closely with a query document, it is very likely that that person is a good reviewer for that paper. In other cases, the contextual smoothing provided by the topic models is better at finding relevant reviewers.

It should also be noted that we have made no attempt to remove the actual authors of a paper from the list of po-tential reviewers. We have also made no attempt to remove reviewers with strong conflicts of interest. In the context of a reviewer matching application, reviewers with conflicts of interest are not available for panels, but may nevertheless be topically highly relevant to the paper in question.
We have shown that statistical topic models can be an effective tool in expert retrieval in the context of match-ing papers with reviewers. Language models with Dirichlet smoothing also perform well, especially in finding the most relevant reviewers. We find that topic models are sensi-tive to the number of topics, with more topics providing a  X  X ext and Web X  and  X  X heoretical Computer Science X  Figure 3: The precision of each model as more doc-uments are retrieved for relevance cutoff 3. The same general patterns are present at this level of rel-evance as in the lower-cutoff evaluation. The topic models with 200 topics are the best overall, while the single-document author language model has the highest precision in the first five reviewers retrieved. substantial performance boost. There are many areas for future work, such as taking advantage of citations and co-authorship data and building language models based on the partition of an author X  X  papers provided by the APT model.
Ultimately, measuring the expertise of a person given a paper is only a part of a system for matching reviewers to papers. It is also necessary to ensure that reviewers receive a reasonable number of papers to review, and that every paper gets a certain minimum number of reviewers. As probabilis-tic models, the methods described in this paper could fit easily into a larger likelihood function that takes into ac-count the number of reviewers per paper and the number of papers per reviewer. Finding a good matching for the conference as a whole would then be a matter of sampling matchings with high probability from that model.

Matching papers with reviewers is a highly constrained op-timization problem. In addition to constraints on the num-ber of papers per reviewer and the number of reviewers per paper, conflicts of interest are common. Indeed, in our ex-periments, of the top five reviewers retrieved for each paper, 5.0% of those retrieved by the APT model with 200 topics and 4.2% of those retrieved by the single document language model were in fact listed as authors on the paper in ques-tion. It is likely that if we removed all prospective reviewers with conflicts of interest, the number of available highly rel-evant reviewers would be much smaller. This phenomenon suggests that the additional accuracy of the topic modeling approaches at the 10 reviewer level and beyond could be valuable for real world reviewer matching applications. Table 2: Precision at relevance cutoff  X  2 after re-trieving n reviewers.
 Table 3: Precision at relevance cutoff 3 after retriev-ing n reviewers.

We thank the nine anonymous relevance judges from pre-vious NIPS program committees. Desislava Petkova con-tributed substantially to the evaluation and the discussion of language models.

This work was supported in part by the Center for Intel-ligent Information Retrieval, in part by The Central Intel-ligence Agency, the National Security Agency and National Science Foundation under NSF grant #IIS-0326249, and in part by NSF grant # CNS-0551597, in part by NSF Nano # DMI-0531171, and in part by the Defense Advanced Re-search Projects Agency (DARPA), through the Department of the Interior, NBC, Acquisition Services Division, under contract number NBCHD030010. Any opinions, findings and conclusions or recommendations expressed in this ma-terial are the authors X  and do not necessarily reflect those of the sponsor.

