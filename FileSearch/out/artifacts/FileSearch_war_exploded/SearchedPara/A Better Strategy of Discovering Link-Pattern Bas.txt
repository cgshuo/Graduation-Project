 Social network analysis is an established field in sociology. A social network is most-ly modeled by a graph in which a node represents an individual and an edge between two nodes denotes a social interaction between the corresponding individuals. In Web 2.0 platform, the study of social network analysis has emerged into an active research field. The community structure is an important topological characteristic of social networks, which provides a basis for further analysis of social networks. Ac-cordingly, discovering the communities from a social network has become an essen-tial problem on social network analysis. 
The definitions of a community in social networks vary with applications. In most studies, finding groups of nodes within which the interconnections are dense but between which the interconnections are sparse is attractive to users. In earlier papers, the graph partitioning techniques were adopted to divide nodes into subsets by dis-covering the various kinds of cuts in a graph such as average cuts [1], normalized cuts [9], min-max cuts [2], and maximum flow/minimum cuts [3, 5]. However, in some applications such as those in blogosphere, a group of individuals linking to the same sparsely link to each other [6, 8]. Therefor e, to generalize the different types of com-munities, the concept of link-pattern based community was proposed in [7]. 
A link-pattern based community is a group of nodes which have a similar link pat-terns, i.e., the nodes in the same community have similar intra-community and inter-community interaction behaviors. For example, the individuals, denoted by the nodes v nodes in C 2 link moderately to the nodes in C 1 and link sparsely to the nodes in both C tween the communities in similar ways. The concept of a community prototype graph was also proposed, which consists of a set of community nodes (i.e., C 1 , C 2 and C 3 in Figure 1) and a set of edges among community nodes to represent the community structures. Accordingly, the graph and its community prototype graph are represented as affinity matrices in which each entry represents the weight of an edge between two corresponding nodes. An iterative algorithm named CLGA was developed to find the optimal community prototype graph from the graph by solving the optimization problem of matrix approximation. 
The number of individuals in a social network is enormous in most cases, and the individuals. Consequently, the algorithms for solving the problem of discovering the link-pattern based communities are challenging on the requirement of memory usage and the performance efficiency. However, in [7], in order to find the optimal commu-nity prototype graph, it requires exhaustive search by moving a node from one com-munity to another community. In each time of iteration, the affinity matrix of the corresponding community prototype graph has to be recomputed. As a result, CLGA is computationally infeasible. Besides, CLGA has to maintain the affinity matrix of the community prototype graph. Consequently, the memory requirement of CLGA is at least double of the one required by the affinity matrix of the original graph. 
According to the concept of the link-pa ttern based community, the edges with node. In this paper, we reformulate the problem based on the proximity of the links of nodes to discover the link-pattern based community structures, and evaluate the qual-ity of the community structures according to the similarity of the weights of the intra-links within a community and that of the weights of the inter-links between the community and every other community. It is proved that the reformulated problem of communities discovering is equivalent to the problem defined in [7]. In order to get a good clustering result, two different strategies are provided to select sample nodes for determining the initial the communities. Based on the extracted initial community structures, two algorithms, named G-LPC and KM-LPC, based on the classical clus-tering methods, are provided to discover the communities. The experiment results show that KM-LPC outperforms CLGA not only on the efficiency and memory utili-zation, but also on the clustering result. Although G-LPC requires the most computa-tional cost than the others, it achieves the best result approaching the optimal solution. 
The remaining sections of this paper are organized as follows. The reformulated problem and the proposed algorithms are described in Sections 2 and 3, respectively. The performance study is reported in Section 4, which shows the effectiveness, efficiency, and memory usage of the proposed methods. Finally, in Section 5, we conclude this paper and discuss directions for our future studies. In this section, the problem proposed in [7] for discovering the link-pattern based communities is introduced briefly. Then we reformulate the problem and provide solutions to the problem in Section 3. 2.1 Problem of Matrix Approximation Optimization 
A community prototype graph defined in [7] consists of a set of community nodes and a set of edges among community nodes associated with weights to represent the community structures. Let K denote the number of communities specified by the us-ers. The community structure matrix B is a K  X  K matrix for representing the weights of binary values denotes the community membership of each node, where each node belongs to exact one community and there is no empty community. The affinity ma-result of CBC T . Accordingly, the challenge of discovering the link-pattern based communities is how to find C and B such that || A -A '|| 2 is minimized. [Example 2.1]. The nodes of the social network shown in Figure 2(a) are required to be grouped into two link-pattern based communities. The affinity matrix of the corre-sponding graph is shown as Figure 2(b). When the two communities are constructed type graph shown in Figure 2(c) is the optimal solution of this case. Accordingly, the corresponding matrices C and B of the constructed community structures are shown in Figure 2(d). Besides, the affinity matrix of the community prototype graph is shown as Figure 2(e). Therefore, the difference between the affinity matrix of the graph and the affinity matrix of the community prototype graph is 3.5. 2.2 Problem Definition problem tends to group the nodes with similar intra-community and inter-community interaction behaviors into the same community. The link pattern of a node is charac-terized by its edges linked to other nodes, and the link pattern of a community by the aggregate link patterns of the nodes in the community. An object function is designed to evaluate the quality of the communities by the distance between the link patterns of each community and its nodes. Cvv v = K and the nodes in C u , denoted of the original graph. The intra-community link pattern of row in affinity matrix , of A , in which the i th row represents the inter-community edges of in C v . intra-community link patterns of all the nodes in C u as the following formula shows: The inter-community pattern of the community C u with C v is represented by a vector of n v dimensions where each dimension contains the average weight of the inter-community edges of all the nodes in C u with C v as the following formula shows: fined by the following formulas: [Example 2.2]. The nodes of the graph shown in Figure 2(a) are grouped into C 1 and C . Consequently, the corresponding matrices in Figure 3(a), (b), (c), and (d), respectively. Accordingly, the values of A VG , values of 
Consequently, the problem of discovering the link-pattern based communities from a social network is formulated by minimizing the sum of the intra-and inter-distances denotes the number of communities, the optimized communities are given by minimizing the following objective function: node belongs to exact one community. Besides, there is no empty community allowed. 
It is deducible that the optimal solution discovered according to the proposed ob-jective function is the same as the one di scovered by CLGA. Suppose the members in each community have been assigned. Based on our observation on matrix B, the di-agonal entry B [ i, i ] is equal to 
AVG . Therefore, for any pair of v community prototype graph is equal to equal to , exact one community, || A  X  A '|| 2 is equal to objective function. However, it is computationally infeasible to exhaustively search the global optimum solution of this problem. To provide a heuristic algorithm for solving this problem, a greedy based algorithm and a K-Means based algorithm are proposed to discover the disjoint clusters of data nodes which correspond to the link-pattern based communities of these nodes. 3.1 Basic Idea In order to get a value of the objective function as small as possible, one effective way is to adopt the greedy-based algorithm in which each node is iteratively assigned to a community such that the obtained value of the objective function is minimal. The K-Means algorithm [4] is a typical method of cluster analysis. The goal of K-Means is to minimize the sum of squared distances between data and the mean of the correspond-ing cluster, which is similar to the goal of the objective function defined in this paper. Therefore, a K-Means based algorithm is also proposed to discover the communities. 
According to the given information of graph G , row i in the affinity matrix A of G provides the information of the link pattern of node v i , which forms the feature vector dimension in the feature vector of C u contains the value of to C u ; otherwise, it contains the value of , munity C v . During the progressive process of clustering, the feature vector of a com-defined in formula (5) corresponds to the sum of squared distance between the feature vector of each node and the centroid of its community. 
To adopt the clustering methods for discovering the communities, first, K initial cen-troids are determined by performing a clustering on the sample nodes selected from the executing one of the proposed two algorithms. The centroid of a community will be updated according to the nodes assigned to the community. Relative to the new cen-troids, the above process is repeated until there is no change in communities. 3.2 Determining Initial Centroids In terms of the quality of the clustering result, determining a set of appropriate initial centroids of clusters is the key step of clustering algorithms. However, it is not easy to determine a  X  X ood X  set of initial centroids of clusters without knowing the connec-tivity among the nodes. Therefore, some sample nodes are chosen from the graph. Then the agglomerative hierarchical clustering method is adopted to separate these sample nodes assigned to a cluster is set as the initial centroid of the cluster. 
A straightforward method is to choose the sample nodes randomly. However, a good quality of the clustering result is obtained by chance based on which sample communities in a real dataset, the Enron email dataset is analyzed by CLGA. It is ob-served that the nodes which are distributed to the same community usually have the similar degrees. In other words, it is more possible that two nodes belong to the same community as their degrees are closer. Accordingly, in our second strategy, the sample nodes are selected based on the degrees of the nodes. Moreover, the number of chosen sample nodes is determined by K  X  U , where K is the number of expected communities and U is a user-specified integer which is at least one and less than  X  n / K  X  . 
By summarizing the above considerations, the following two strategies are used to select sample nodes from the given graph G . (1) Picking by random 
K  X  U sample nodes are chosen from G randomly without replacement. (2) Picking by node degree 
The nodes with the identical degree are assigned to the same group. Within each group, U nodes are chosen randomly without replacement. 
After selecting sample nodes by one of the above-mentioned strategies, the sample the beginning, each sample node is considered as an individual cluster. Let c x and c y denote the centroids of two clusters C x and C y , respectively. The distance between C x and C y is decided by calculating the Euclidean distance between c x and c y : Iteratively, two nearest clusters are chosen to be merged into a cluster until K clusters remain. Whenever two clusters are merged to generate a new cluster C l , the centroid of C l , which is denoted as c l , is obtained according to the following formula: where n l denotes the number of sample nodes in C l , SN denotes a sample node in C l , and SN . fv denotes the feature vector of the sample node. [Example 3.1]. In the graph shown in Figure 2(a), the number of distinct degree values of nodes is 2. By using the picking by node degree strategy to select sample nodes, the When U is set as 1, the number of chosen sample nodes from each group is 1. Suppose 3.3 Communities Discovering After the initial centroids of K clusters are obtained, each node in G is then assigned nodes assigned to the cluster. Then two algorithms are proposed to reassign each node in G to the clusters iteratively until the result converges. (1) Discovering Initial Communities 
According to the initial centroids, each node in the graph G is assigned to the clos-est cluster one by one. The distance between a node v and C u is determined: where v . fv denotes the feature vector of node v . 
When the assignment of all the nodes to the clusters completes, the initial structures of communities are constructed. Accordingly, the feature vector of each initial com-munity is computed to update its centroid. values of 0.2667&gt; and &lt;0.2667, 0.2667, 0.76, 0.2667 , 0.76, 0.76, 0.76, 0.76&gt;, respectively. (2) The Clustering Algorithms 
The two clustering algorithms proposed to discover the community structures ac-cording to the initial communities are introduced. ( A ) The Greedy based Algorithm The process of the Greedy based algorithm for discovering Link Pattern-based Communities (abbreviated as G-LPC) aims to distribute a node to the cluster such that the objective function is minimized locally. In each time of iteration, one by one, each node is checked to decide the cluster which the node is assigned to. The node is cluster if the value of objective function will be reduced after the movement. The above process is repeated until there is no change in clusters. [Example 3.3]. According to the result of Example 3.2, the two initial clusters are C 1 AVG , and the centroids of C 1 and C 2 are updated. Finally, the new value of the objective func-10.4267; hence, v 1 is remained in C 1 . ( B ) The K-Means based Algorithm The process of the K-Means based algorithm for discovering Link Pattern-based Communities (abbreviated as KM-LPC) assigns each node to the cluster whose cen-troid is nearest to the feature vector of the node. At the end of each time of iteration, the cluster. The above process is repeated until no member of any cluster changes. of the link-pattern based communities with 2 communities. In order to evaluate the effectiveness, efficiency, and memory requirement of the proposed algorithms, G-LPC and KM-LPC are implemented by MATLAB ver. 7.0.1. Furthermore, CLGA [7] is also implemented for comparison. All the experiments are performed on a personal computer with the Intel Pentium Core 2 Quad CPU, 2 GB of main memory, and running the Microsoft Windows XP. 4.1 Datasets Two real datasets: Enron email DB 1 and DBLP Bibliography DB 2 are used in the following experiments. The Enron email DB contains the emails of 151 employees. The dataset is modeled by a graph in which the weight of the edge between two nodes is set to be 1 if any one of the corresponding employees has ever sent an email to the other; otherwise, the edge weight is set to be 0. On the other hand, the DBLP dataset contains the publication information of approximate 700,000 authors. In order to and the authors who publish more than 10 papers with one of the previously selected authors to run the experiments. As a result, only 7,356 authors are selected . Then an undirected weighted graph is constructed, in which a node represents one of the se-lected 7,356 authors; in addition, the weight of an edge between two nodes is set to be the number of collaborations between the two corresponding authors normalized by the maximum number of collaborations between any two authors. 4.2 Results and Discussions There are three parts of experiments to be performed. In the first part, the Enron email and the memory requirement of the proposed algorithms and the previous work. Next, by using the DBLP dataset, the detailed comparisons of the parameters setting in KM-discovered link pattern-based communities from the DBLP dataset are analyzed. 4.2.1 Comparison between the Proposed Algorithms and CLGA [Exp. 1]. The Enron email dataset is used in this part of experiments. The parameter U is set to be 1. In addition, the strategy of picking by node degree is adopted. 
By varying the value of K , the values of the objective function for the communities discovered by the proposed two algorithms and CLGA are shown in Figure 4(a). It is indicated that the community structures obtained by the two proposed algorithms are of the community structures is determined by random. The result shows that the ran-dom setting adopted in CLGA usually results in a poorer result by comparing with our algorithms. Figure 4(b) shows the execution time of the algorithms, in which the execution time of KM-LPC is much less than the time of the others. It shows that KM-LPC provide a significant improvement for discovering the communities effi-ciently. Moreover, the sizes of memory requirement of the algorithms are shown in only the centroids of the communities have to be maintained in main memory instead of storing another affinity matrix of the community prototype graph adopted by CLGA. Therefore, both the proposed algorithms require less memory than CLGA. 
To decide the community of a node, G-LPC computes the new value of the objec-tive function for each possible movement of the node. On the other hand, in KM-LPC, although G-LPC requires the most computational cost than the others, it achieves the strategy of picking by random is adopted, the performances of our algorithms are also better than that of CLGA. Due to space restrictions, the details of this part of experi-ment are not shown here. 4.2.2 Comparison of the Parameters Setting in KM-LPC Because the number of authors chosen from the DBLP dataset is 7,356, the graph constructed for the dataset is large and complicated. CLGA cannot run on the DBLP dataset under limited memory. Thus, in this part of experiments, we will observe the effect of the parameters U and K on KM-LPC. Two versions of the algorithm are implemented where the strategy for selecting the sample nodes adopts the picking by random and picking by node degree, individually. [Exp. 2]. The parameter U is set to be 1 and the value of K is varied from 100 to 220. The results of the objective function of the 2 different versions of KM-LPC are shown two versions of KM-LPC. In most cases, it obtains the better result of the communi-difference between the obtained objective function values of these two strategies is not obvious. Table 2 shows the execution time of the 2 versions of KM-LPC, in which the bold-faced values represent the same me aning as used in Table 1. According to the results, for KM-LPC, the version by adopting the picking by node degree strategy runs faster than the one by adopting the picking by random strategy in most cases. LPC is performed by combined with the picking by node degree strategy. Table 3 cases. That is, for KM-LPC, picking more sample nodes from the graph to determine cost of performing the hierarchical clustering to determine the initial centroids of clusters also increases tremendously. Therefore, as the results shown in Figure 5, the execution time of KM-LPC substantially increases when the value of U increases. 4.2.3 Property Study of the Discov ered Link Pattern-Based Communities [Exp. 4]. The parameter U is set to be 1 and the value of K is varied from 25 to 200. In addition, KM-LPC is performed by combined with the picking by node degree strategy. Suppose a node v x belongs to a community C i . The intra-community-interaction of node v x is defined to be the sum of the weights of the edges between v x and all the other nodes belonging to C i divided by the sum of the weights of all edges edges of the node mainly connect to the other nodes within the same community. In this experiment, the property of the discovered communities is studied by measuring the average intra-community-interaction of the nodes in the graph. When the values of K are set to be 200, 100, 50, and 25, the values of the obtained average intra-community-interaction are 0.70, 0.79, 0.84, and 0.91, respectively. It is indicated that the value of the average intra-community-i nteraction tends upwards by decreasing the value of K . 
By analyzing the discovered communities by KM-LPC in detail, when a small value of K is given, most of the communities have dense connections within the community and sparse connections with other communities. However, when the value of K be-comes as large as 200, two different types of communities are observed. The first type of communities has dense connections within the community. Although the second type of communities has sparse connections within the community, the nodes in each community consistently connect to the nodes in a certain set of dense communities. 
According to the semantics of the dataset, the authors assigned to one of the first type of communities have strong co-author relationship within the community. Thus, the members of a community in first type have common research topics. On the other hand, in the second type of communities, although the authors cooperate seldom with each Therefore, the authors assigned to a second type community also have the similar research interests, who are potential partners with each other. This interesting finding is useful for authors to find possible cooperators. Consequently, depending on the needs of users, KM-LPC can discover the different meaningful communities by vary-ing the value of K . In this paper, we reformulate the problem of discovering link-pattern based communi-each community. The problem of discovering link-pattern based communities is trans-formed to a classical clustering problem. Two algorithms named G-LPC and KM-LPC are proposed based on the classical clustering methods. The experiment results with the real datasets demonstrate that KM-LPC is better than CLGA not only on the discov-ered communities but also on the efficiency and memory utilization. Although the computational cost of G-LPC is higher than the others, its result is the best approaching the optimal solution. Finally, in most cases, picking by node degree is a good strategy to select the sample nodes for deciding the initial community centroids. 
In some social networks, it is allowed that an individual belongs to multiple com-munities. To extend the concept of link-pattern based communities in this environment for identifying the communities is under our investigation. Moreover, how to deter-mine a proper number of communities for discovering a set of semantically meaningful communities is another important issue for our future study. 
