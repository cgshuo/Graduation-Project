 Providing the history and context(s) of a news article that emerges in the middle of an evolving news story X  X ometimes multiple news stories X  X s a complex task. The complexity of the task is compounded by the fact that different users are interested in different contexts of the article, and it is impossible to guess what a particular user is most inter-ested in. In this paper, we introduce ESTHETE, a system that provides rich context(s) (through what we call person-alized flexible context extraction ), by preprocessing and stor-ing articles in a structured representation (directed graphs) that makes it easy for the user to explore different con-texts. The advantage of this approach is that the incre-mental computational expense in incorporating new articles as they are published is minimal. Our system is available at: http://konfrap.com/esthete .
 H.4 [ Information Systems Applications ]: Miscellaneous News Browsing; Entity Topic Exploration; News Story Vi-sualization; Flexible Personalized Context-rich News graph; News Summarization
Online news websites are now a common way of consum-ing news. However, it is difficult for a user to follow a specific news story since the story may be buried among more cur-rent or recent news. Current news websites do not do much to help users trace the origin of these stories, nor how they overlap with each other. Most of them still  X  X ook X  like news papers with a bunch of articles laid out on the web-page, with a few additional features in the form of  X  X elated News X  and  X  X ecommended News X  links. A reader trying to contex-tualize a particular article can follow some of these links but the context provided by these features is shallow and trac-ing the development of the story with its various aspects is not much easier than it was in the days of paper-based news media.

There have been some recent efforts by the research com-munity that attempt to extract the individual strands from the corpus [2], present interacting strands in a mesh-like structure [3] or using the graph-like abstraction [4, 5]. What remains missing is the structural framework required to pro-cess it into a form that would make it possible for a user to elaborate the many contexts behind a single news story, some stretching years into the past, some just a few days. Figure 1: How multiple contexts are added to a sin-gle story
Consider the unfortunate gang-rape incident that took place in Delhi in December 2012. Since the day this crime was first reported by the media, it grew into a complex news story. Different users may want to focus on different as-pects of this story. For eg., consider a graph of news articles around this story shown in Figure 1. We see three of the many possible contexts that can be followed and utilized by a user to better understand the overall picture. We allow the user to express her intent to follow a particular context and understand the story with that context. We call this notion Personalized Flexible Context Extraction . This no-tion is an extremely natural approach that a news consumer, whether an expert commentator or a lay person, might want to employ as a crucial subtask in the process of news con-sumption. However its realization requires the specification and implementation of a framework for (pre)processing and structuring the news corpus in such a way that it can easily serve information needs that cannot always be forseen when the news emerges.

In this demonstration description, we present ESTHETE , a system which can be used by a user to fulfill her need to contextualize what she is reading in the news. Building on the work of [1] that models a news corpus as a time-Figure 2: Block system diagram of our News Brows-ing tool evolving graph by linking related news articles, we provide a query mechanism that organizes this structure by topics of interest and important actors and presents the development of a story on a timeline.

An important aspect of our work that represents a com-pletely different approach from the past works is that we take an offline approach i.e. we view the news corpus as an evolving dataset. We store it in a structured way (graph) such that it can be browsed and, importantly, different kinds of contexts can be extracted from it by users with different intentions in the same news story in a computationally ef-ficient manner. This represents a break in thinking from those approaches that take the entire news corpus as their input and either produce an output which is the story [2, 3] or produce some output based on a pre-existing notion of what is the story [4, 5]. We allow the user to build the story.
Figure 2 shows our block system design. It can be divided into two major components -Offline and Online. The offline component handles incoming news articles, and augments them into our underlying graph data structure representa-tion stored in the database. The online component interfaces with the user, and based on the user X  X  query, identifies the parts of the graph to visualize and shows the relevant sto-ries. As our news corpus, we used a subset of articles from the Indian national daily The Hindu 1 , across a variety of broad categories like Crime, Economy, Government, etc. Calais 2 API to extract all the entities appearing in the arti-cles. For sanitizing the mined entity set, we used an ontology (YAGO 3 ) based approach. We relied on the Hindu articles being hand tagged-at-source by rich and relevant Topic tags. upon the work by Choudhary et al.[1] which formalizes the notion of presenting news articles as a directed graph. They propose a way to draw a graph from a corpus of news articles by first mining all transformations (Birth, Continue, Merge, Split and Cease) that the underlying actors undergo, then find a max-weighted edge set covering all these transforma-tions with the nodes as the articles. We have extended their algorithm to augment new articles on to a pre-built graph, so now we can run this on a streaming input of articles. Moreover, we have implemented adaptive time windows to mine transformations in the past and future. The resultant http://thehindu.com http://opencalais.com http://www.mpi-inf.mpg.de/yago-naga/yago/ Figure 3: A screenshot of our tool visualizing Rape-related cases from India in 2012 graph helps structure all coherent chains of articles each of which represent a unique context or interpretation of a news story.
 tant graph from the previous step very dense and it was hard for a user to follow and study a subgraph in isolation. We consider this graph more suitable as a rich back-end. This graph is created by pre-processing the news corpus once, and then a standard node clustering algorithm (Markov graph clustering) is applied to draw out clusters in this graph. These clusters are considered as events that happen in the corpus. Different clusters may or may not talk about the same story, depending on the proximity of the clusters. In this way, an event is a cluster of the news graph, which may contain one or more articles. This graph is now useful for answering questions like detecting significant events (dense node clusters), developments in the life of a particular group of actors (visualizing the subgraphs involving the actor set) etc. To make it easier for the user to understand an event, we summarize the articles using Text Compactor 4 which is based on Open Text Summarizer 5 .
 the neighbourhood of the story (subgraphs of the base news graph) being currently visualized, serves to add useful con-text. Moreover, different parts of the neighbourhood model different transformations and hence, following different neigh-bours amounts to adding a more unique kind of context, which gives a unique interpretation of the overall story. Javascript and PHP on the server-side, using TimelineJS 6 and Google Visualization API 7 libraries. Figure 3 shows a screenshot of our webtool. The interface has 3 primary parts: the Filtering &amp; feedback pane, the News article(s) &amp; summary pane and the Timeline pane. http://textcompactor.com/ http:/libots.sourceforge.net/ timeline.verite.co/ developers.google.com/chart/interactive/docs/reference articles which bring out related aspects of the story (a sub-graph of the news graph) that the user is studying which helps the user get the big picture. The news graph not only tells us the articles related to a particular story (neighbour-hood of a subgraph), but also qualifies how these articles are related, by way of the nature of the transformations that the edges cover.
 query entered by a user is in the form of filter on the actors and/or topics talked about in the news corpus. For eg., an example query could be  X  X ORRUPTION AND ROBERT VADRA AND HARYANA X  which yields all stories around the corruption scandal involving Robert Vadra (an Indian businessman) in Haryana (a state in India).
 ment where a user is presented with popular actors, topics, events, time periods, etc automatically from the news cor-pus, which guide her search to discover and explore more popular stories first. These also serve to label different sto-ries, guide the user towards a more refined query around specific substories.
 new articles are published is growing rapidly. If a system has to do well at taking in a live input stream of news articles, it can afford to process this set only once, and then store this set in a structure which is efficient to maintain and query later. The structure should be rich enough to answer all queries of the user, without processing the article text again.
 final say in the detail at which different stories are visualized. Should the system just give a 10-line summary of the event captured by 5 articles? Or should it focus in to the 5 articles, creating 2 sub-stories within them? This decision should be left to the user as a preference. To validate our system, we conducted 3 user studies. system, we asked 28 users with intimate knowledge of chosen stories to give an appropriate query and mark the returned results as either Relevant or Irrelevant. The precision values were in the range 88%-92%.
 of having a graphical representation as our back-end, we compared it to two baselines : a) chronologically sorted list of raw articles and b) a k-means clustering of articles. All these 3 back-ends were visualized on the same timeline fron-tend, and we asked users to pick a visualization which was more coherent. 19 of 20 users picked the graphical back-end. give a 1-5 rating (1 -poor, 5 -best) to the system on at-tributes like  X  X ase of use X  (3.8/5),  X  X bility to return novel information X  (4.3/5) and  X  X bility to visualize the Big Pic-ture X  (4.3/5). In order to see how our system compares with other popular systems in helping users understand a particular story in a limited time frame, we asked them to browse the story on 2 different news browsing systems (ES-THETE and Google News). Next, we asked them a Yes/No question to check whether that system X (Google News or ESTHETE) was beneficial to them (for eg. After using sys-tem X, do you have enough information to write a summary of the Delhi Gangrape incident?) . For most stories, 75% users found only ESTHETE to be beneficial, and another 22% found both ESTHETE and Google News to be useful. This shows that our system is much more comprehensive in a limited time frame.
In the demo, we plan to show how our tool can be used to visualize various kinds of news stories. Users will be able to pick a story of their interest and explore it in detail, discov-ering newer facets, contexts, actors and topics. They will get to see how our tool visualizes different news stories as a sequence of events on a timeline, annotated by the different topics and actors. They get more context by seeing related events, actors and topics. The users may also read entire articles right from the interface. The users would appreci-ate how showing articles around say a single criminal case, which stretch out in time, in the same place greatly helps the user quickly grasp the story. Our system is available at: http://konfrap.com/esthete . [1] R. Choudhary, S. Mehta, A. Bagchi, and [2] D. Shahaf and C. Guestrin. Connecting the dots [3] D. Shahaf, C. Guestrin, and E. Horvitz. Trains of [4] I. Suba X si  X c and B. Berendt. Web mining for [5] I. Suba X si  X c and B. Berendt. Story graphs: Tracking
