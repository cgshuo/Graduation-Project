 major carriers of scientific and technological knowledge. According to the statistical data and research results in the world could be found in the patents, in which about 70% of the patent, the information retrieval technique for patent documents is in urgent need. 
Generally, researches on patent retrieval include prior-art retrieval [2-4], invalidity novelty criterion in the process of retrieval, some (even large amounts of) old-However, these patents may be meaningless to searchers in certain scenario [11], e.g., enterprisers seeking novel techniques for product quality enhancement. 
In [11], Mohammad et al . presented a COA method to find novel patents in the keywords contained in the patent. The novelty of keywords is measured by a time-dependent function, which decreases as the time is passing. In other words, the However, in practice the novelty of a patent is also heavily influenced by the newer, related patents. That is, with a specific technical problem, when an improved solution is proposed via a new patent, the existing related patents become less novel. Therefore, in order to more effectively find genuine novel patents, a better approach shall consider not only the time factor but also the influence of other related patents, which forms the main theme of this paper. 
In this paper, we provide a new method to find novel patents based on the technical associations among the patents, besides the time factor. The main contributions of our work can be highlighted as follows: Rank algorithm. Section 4 expounds our Update-Rank algorithm. Section 5 discusses experimental results. Finally, Section 6 gives the conclusions. paid more attention in recent years. Some famous international conferences or organizations, such as SIGIR[12], ACL[13] and NTCIR[14], have held the transforms the query into a group of relevant search queries. Because of the presence et al. [2] propose a query modeling approach utilizing patent characteristics and transform the query into several search queries, but also expand queries with pseudo time and effort can be exerted by applying simple IR approaches when initial citations provide a method to divide the query as several sub-queries, and the relevance scores in each sub-query are integrated to determine the final relevant documents. To further cross-language patent retrieval, Chen et al. [8] apply Latent Semantic Indexing to construct a cross-language mediator that express patent documents in different using Kernel Canonical Correlation Analysis. All of the above methods focus on how to find the patents which are semantically relevant with the query. Specially, Mohammad et al. [11] propose a COA method to find novel patents, and patent novelty is measured by the novelty of keywords a patent contains. We first define patent novelty before we calculate it and rank the patents by it. In this section, we first construct a novelty-association network through measuring the relations between patent documents, and then define the concept of patent novelty based on the network. Finally, we give the novelty-rank algorithm to rank patents. 3.1 Novelty-Association Network similarity. Citation implies that there is technical association between two patents, and the citing patent generally has certain technique improvement to the cited patent on a between pairs of patents. The greater semantic similarity between two patents is, the constructing our novelty-association network, and we take the assumption that the semantic similarity between each pair of patents has been calculated using the method Overlap respectively as follows.  X   X   X   X  X  , there is a time element T T &gt; T i , the technical association ( TA ) between d i and d j is defined as follows: If TA ( d j , d i )=1, we say d i and d j are technique-associated patents. similarity between them as follows: where sim ( d i , d j ) is similarity between the two patents and can be calculated by [17]. 
Next, we use the concept of Comparative Novelty Rate to model the influence of a d  X  D , if TA ( d overlap between them, and is defined as follows. comparative novelty rate of d i to d j is defined as where CNR ( d i , d j ) denotes the comparative novelty rate of d i to d j . 
Using Technical Association and Comparative Novelty Rate , we define novelty-association network. and the weight on &lt; v j , v i &gt; is CNR ( d i , d j ). respectively. The lateral axis value of each node denotes the publishing time of each patent. The edge denotes the citation between patents, and the weight on each edge is the comparative novelty rate between two nodes. For example, node v 1 and v 2 respect following procedure (Algorithm 1). 3.2 Patent Novelty and Novelty-Rank Algorithm patent will be low too. Thus, we define patent novelty based on both time factor and current state of the patent. then the patent novelty of v i is defined as v one patent has been published, the lower its patent novelty will become (we therefore assume patent novelty obeys the law of exponential decay for the parameter that is the time between the two patents considered. The longer this gap is, the lower the novelty of patent v i is. obtained. Thus, we must find the processing sequence before computing and ranking the patent novelty of each patent. Based on Definition 5 , we can easily get the following lemma (Lemma 1). Lemma 1. The patent novelty of a patent which is published later is independent with the patents which are published earlier. 
According to Lemma 1, we never need to compute the novelty of each patent compute the novelty of each patent in sequence and rank them (as shown in Algorithm 2). ranking list of patents is { v 4 , v 6 , v 3 , v 2 , v 5 , v 1 }. time t . However, when new patents are published at time t +1, namely the new nodes are added into the novelty-association network, the rank will change. ( In Fig.2, when v is added to the network in time t +1, and patent novelty of each node varies.) 
Although we can compute and re-rank the patent novelty of each patent at time t +1 with Novelty-Rank algorithm, but it must be time-wasting as the ranking list at time t is not used. As it can be known, if most of patents keep the same sequences at time t and t +1, then the running time of ranking the patents at t +1 can be cut down. novelty for further measuring the relation of the ranks at t and t +1. V only if  X  X  X   X  X   X   X  X  X   X   X   X  X  X  X  X  X  X  X  X   X   X 1 X  X  X  X  X  . Namely, the level of v i is denoted as level ( v 1 )=4. Based on the level of node, we prove the following lemmas. to G at time t +1. V unreach is the node set in which there are no paths from any node in V = ...  X  e  X  PNovelty ( t ) ( v i ). Therefore, the lemma is proved. 
As shown in Lemma 2, if v i  X  V unreach , then  X  V  X  V  X   X  ...  X  e Therefore, the lemma is proved. v  X  PNovelty ( v j ). proved.
 keep the same orders with the time t . Therefore, we consider updating the rank at time t +1 with Insertion Sort to improve the efficiency. The update algorithm is as showed in Algorithm 3. 
As shown in Algorithm 3, the main running time lies in comparison when each node inserts into the list2 ( step 20). In Inference 1, we proof the comparison count is at a low level with insertion sort when a node inserts into the list.
 v at most. Therefore, the comparison count is 1 too. Complexity Analysis . As can be seen in Fig.4, when a node is inserted to a new list at use general sort method as Algorithm 2 does, the cost of sort will be O ( N log N ). As the time complexity of computing patent novelty of each patent is O( N ) after the network is established, the cost of finding novel patents mainly lies on sort. Therefore, the cost could be cut down by Update-Rank algorithm compared to No velty-Rank algorithm. In this section, we use three patent datasets crawled from USPTO [15] to evaluate the effectiveness and efficiency of our proposed method. Among them, one dataset is used as a training set to evaluate the damp factor  X  and the others are used to show the effectiveness and efficiency. The utilized datasets are described in Table 1. 5.1 Text processing process the collected patent documents containing stop-words removal, word stemming, acknowledged list of stop-words in use, we use a self-defined list of stop-words. After concepts among terms in the patent documents. Then a TF-IDF [17] method is employed to compute the weight of a word in a patent, and top m words are identified as documents. 5.2 Experimental Results After text processing, we evaluate the effectiveness and efficiency of proposed methods. First, we compare with the COA method [11] which is most relevant our work presented in this paper to show the effectiveness of our Novelty-Rank algorithm.
 patent renewal fees, when there are new improved and novel patents of current ones, result, the renewal will be abandoned and the old-fashioned patents will become ranking list, to evaluate the effectiveness of our method which is denoted as: where N valid , k is the valid patents within the top k patents of the ranking list. 
In Fig 5, we show the effectiveness on  X  X hone X  and  X  X mage Processing X  datasets the VRates of novelty-rank is greater than COA on most selected k in  X  X mage Processing X  dataset. Namely, Novelty-Rank is more effective than COA on novelty evaluation and rank. 
As the COA method does not provide corresponding update algorithm to re-rank the patents, we do experiments and comparisons only between our own algorithms, Novelty-Rank and Update-Rank. The two test datasets are both first divided into two parts: the patents published from 2001 to 2007 and the other ones published in 2008. are taken as the added ones at the next time slice. The Novelty-Rank and Update-Rank algorithms are then invoked to re-rank the patents respectively. In Fig.6, we compare the running time of novelty computing and ranking between Novelty-Rank algorithm and Update-Rank algorithm. From Fig 6(a), we can see that, decrease as the number of new added patents decreases, and Update-Rank is obviously more efficient than Novelty-Rank. We draw the same conclusion from the Update-Rank algorithm is significantly more efficient than Novelty-Rank algorithm on updating the rank of patents when new patents arrive. patent association and designed an innovative novelty-based patent ranking algorithm (named Novelty-Rank). Further, in order to handle rank variations caused by the arrival of new (related) patents, we designed a rank-updating algorithm (called Update-Rank). We conducted comprehensive experiments that demonstrate the mentioning is that our Update-Rank algorithm showed superb performance on updating patent ranks. Acknowledgements. This work is supported by the Key Program of National Natural Science Foundation of China (61232002) and the National "863" High-tech Research Development Plan Foundation (2012AA011004). 
