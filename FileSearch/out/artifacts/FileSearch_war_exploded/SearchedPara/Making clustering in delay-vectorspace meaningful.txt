 REGULAR PAPER Jason R. Chen Abstract Sequential time series clustering is a technique used to extract impor-tant features from time series data. The method can be shown to be the process of clustering in the delay-vector space formalism used in the Dynamical Systems literature. Recently, the startling claim was made that sequential time series clus-tering is meaningless. This has important consequences for a significant amount of work in the literature, since such a claim invalidates these work X  X  contribution. In this paper, we show that sequential time series clustering is not meaningless, and that the problem highlighted in these works stem from their use of the Euclidean distance metric as the distance measure in the delay-vector space. As a solution, we consider quite a general class of time series, and propose a regime based on two types of similarity that can exist between delay vectors, giving rise naturally to an alternative distance measure to Euclidean distance in the delay-vector space. We show that, using this alternative distance measure, sequential time series clustering can indeed be meaningful. We repeat a key experiment in the work on which the  X  X eaningless X  claim was based, and show that our method leads to a successful clustering outcome.
 Keywords Delay space  X  Clustering  X  Time series  X  Sequential time series clustering  X  STS clustering 1 Introduction Data miners are often interested in extracting features from a time series of data [ 18 ]. For example, consider a time series where t is the time index and n the number of observations in the series. Such a time series could represent the closing price of a particular stock in the stock market, or the value returned by a sensor on a mobile robot, etc. Clustering is a technique that is very often proposed as the means for extracting features from time series data, for example, in [ 1 , 6 , 15 ], and many others (see [ 12 ]). When the value of n is relatively small, and the interest is in comparing a set of complete time series produced by some event or process, clustering proceeds in the same way as for the conventional clustering of discrete objects; group together into the same cluster all similar time series. When n is large, it is impractical to conduct  X  X hole series X  clustering, and indeed, often we wish to find repeating features in a single time series, or in a number of time series produced by the same process. Here, subsequence clustering using the sliding windows technique is a commonly proposed approach. If X is our time series, and w&lt; n is the window length, a single subsequence z p is extracted as and a sequence Z of subsequences can be formed using the sliding windows tech-nique by simply forming the set Z = z p | p = w,..., n . Subsequence time series clustering then proceeds by forming k clusters, each containing  X  X imilar X  z p ,using whichever of the many clustering algorithms that are available [ 2 ]. Subsequence time series clustering (from here on referred to as STS clustering) is a widely used technique in the data mining community, often as a subroutine of some other tech-nique or method. For example, Keogh et al. [ 12 ] noted the use of this technique in the data mining areas of rule discovery [5, 7 X 10, 14, 16], indexing [ 13 , 17 ], classification [ 3 , 4 ], prediction [ 19 , 21 ], and anomaly detection [ 22 ]. technique has recently been called into question [ 12 ]. This has important con-sequences for work we have just surveyed, since such a claim may show it to be invalid. The conclusion of Keogh et al. [ 12 ] is based on the finding that STS clustering produces sine-type waves as cluster representatives. To help clarify our discussion of their result, we now repeat their cylinder X  X ell X  X unnel experiment. Concatenate each of the features into a single  X  X ase X  time series, and then con-Given there are three features in Fig. 1 , each with length 128, if we then conduct STS clustering on this time series, with window length w = 128, and the number of clusters k = 3, we might hope to recover as cluster representatives the cylin-der, bell, and funnel features. The final three cluster representatives found using STS clustering, with the k -means clustering algorithm as the clustering method, are the three sine-type wave features shown in Fig. 2 . This non-intuitive result is not peculiar to this particular experiment. Work of Keogh et al. [ 12 ] found that sine-type waves were produced by STS clustering no matter what clustering al-gorithm, number of clusters, or data set was used. This explains their conclusion that STS clustering is meaningless, since, if any data set produces the same type of cluster representatives, then the output produced by the method is independent of its input.
 that two fundamental errors in the work in STS clustering have been made to date. The first concerns how clusters are formed by the clustering method chosen, while the second concerns how the cluster center (i.e., the representative of the cluster) subsequence vector space is measured, and that once distance is measured in an appropriate way, STS clustering can indeed be meaningful. 2 Selecting a cluster representative We commence our investigation by exposing the reason why the cluster represen-tatives in Fig. 2 are so smooth. Given the original time series is full of sharp edges, it seems strange that the final cluster representatives are smooth sine-type waves. Assume we have a very simple data series consisting of 17 points that form a single step (as shown in Fig. 3 (top)). If we apply STS clustering to this data series, using the k -means clustering method, with the number of clusters k = 3, and with a win-dow length w = 4, we obtain the cluster representatives shown in Fig. 3 (bottom), where these representatives have been placed along the horizontal axis to coincide with the features they represent in the data series. At first glance, the clustering looks sensible, since the three representatives would seem to represent the three main features in the original data: when the signal is low, when it is high, and the step. However, a curious property of the step cluster representative is that it has been smoothed. Where the step in the original data was completed in one time unit of the horizontal axis, the step in the step-feature cluster representative now takes three time units. Figure 4 shows the three subsequence members of the step clus-ter. Note that, if cluster C j , j = 1 ,..., k contains r j members z i , i = 1 ,..., r j , the k -means clustering algorithm determines a cluster representative as the point  X  z which minimises where d (., .) (from now on) denotes Euclidean distance, and where, from an im-plementation point of view,  X  z j can be calculated simply as the mean of all mem-bers in C j (i.e. 1 / r j r j i = 1 z i ). Then, the mean of the three cluster members in Fig. 4 is exactly the step-feature cluster representative shown in Fig. 3 . It seems then that Eq. ( 3 ) does not provide a valid means for determining a cluster repre-sentative, since it gives rise to a curious  X  X moothing effect, X  and this might be the reason why we get smoothed sine-type waves as cluster representatives in Fig. 2 . Toward exploring this possibility, we note that if we take the medoid member of sharpness of any feature. 2 ing of the data series in this figure is correct, but that in determining each clus-ter representative according to Eq. ( 3 ), the smoothing effect has degenerated the cluster representatives into smoothed sine-type waves. Conceivably, the medium-coloured centre cluster representative is the (smoothed) cylinder feature, with the left and right humps being the (smoothed) funnel and bell features, respectively. To investigate this possibility, we first present two definitions.
 Definition 1 A cyclic data series is one where | x t  X  x t +  X  | &lt; for some fixed  X  for all t = 1 ,...,( n  X   X ) ,where is a small value compared to x t and where  X  is usually quite a bit smaller than n.
 That is, a cyclic data series is one that, except for noise, repeats itself, where the value represents the level of noise in the data.
 Definition 2 Let X be a data series and Z be the series of subsequences obtained by using the sliding windows technique on X . If we conduct a clustering on Z (i.e. we are STS clustering X ) to obtain a set of clusters C j , j = 1 ,..., k, a  X  X egment X  in C j is a set of members of C j that were originally contiguous in Z . features is cyclic, and that the cluster representatives shown in Fig. 2 will each result from a set of cluster member data points made up of a number of distinct segments . We saw that we can avoid the smoothing effect by simply taking the medoid member of a cluster as its representative. However, plotting the medoid of all points in a cluster will not expose to us whether points representing different features exist in the one cluster. What is required is to plot the medoid of each seg-ment in a cluster, and this is what we could do. However, due to the cyclic nature of the bell X  X ylinder X  X unnel data series, it turns out that only three significantly dis-tinct segment mediods exist for each cluster. Hence, in Fig. 5 , we show only these three distinct segment mediods, for the left, middle and right clusters of Fig. 2 in the top, middle and bottom plots of Fig. 5 , respectively. Clearly, there exist all three cylinder, funnel and bell features in each plot in Fig. 5 . That is, data points representing each of these features exist in each of the clusters found in Fig. 2 ,and so it is definitely not the case that the left cluster in Fig. 2 is made up of only the funnel feature, nor is the middle or right cluster made up of only the cylinder and bell features, respectively. Clearly, the smoothing effect described earlier is not the only force at work in the non-intuitive results of Fig. 2 , and further investigation is required. 3 Clustering in delay space Up to this point, our presentation has been caged in terms of the sequential time series framework that is popular in the data mining community. It now becomes useful to view this method in the wider context of the method of delays, as used in the research field of dynamical systems [ 11 ]. Forming a set of subsequences of length w from a time series X using the sliding windows method, and representing them in a w -dimensional space, can be viewed as just a special case of the method of delays, where Eq. ( 2 ) generalises into where z p is called a delay vector and q is a lag introduced so that the members in z p need not be contiguous in the original time series X . The sequence of delay vectors Z is then formed as the set Z ={ z p | p = (w  X  1 ) q + 1 ,..., n } .Fromthe dynamical systems perspective, the idea is that a system will live in some phase space, and the aim is to reconstruct a space equivalent 3 to phase space, so that one can study the reconstructed space and know that any findings made will also hold for the original phase space. The dynamical systems literature has shown that, in general, such a space (called a delay space) can be formed as a space housing vectors constructed according to Eq. ( 4 ), with certain restrictions on the values of q and w , and with the important restriction that data be sampled at equispaced time intervals [ 20 ]. One of the central ideas in the approach is that the evolution of the dynamics of a system will form a data series that traces out some trajectory in delay space, and it is really this idea that we are interested in using to pursue the reasons for our strange results in Fig. 5 . The delay space for the cylinder X  bell X  X unnel experiment is of a dimension too great to represent graphically, so we take, as an example, a data series obtained from a small-swing, mathematical pendulum; having dynamics governed by the differential equation  X   X  +  X  = 0. The data series produced by this system is a simple sinusoid  X  =  X  0 cos ( X  t +  X ) ,and if we assume a realistic measurement process that includes noise, one can see in Fig. 6 how this data series forms a trajectory in delay space, where the ellipse in the top plot corresponds to the trajectory in a delay space formed with w = 2and q = 1, and the ellipse in the bottom plot to one formed with w = 2and q = 10. An interesting aside is to note how taking q = 1 (i.e. the STS approach given by Eq. (2)) results in a  X  X ollapsed X  trajectory lying along the bisectrix of delay space. This is almost never optimal from the clustering point of view, since dissimilar points will then lie close together. It is almost always more optimal to select q &gt; 1, where methods for determining q can be found in Kantz and Schreiber [ 11 ]. It is for this reason that we focus on the q = 10 case in the following discourse. was made up of a mixture of the bell, cylinder and funnel features. A hint as to why this occurs can be seen by a three-cluster clustering of the pendulum de-lay vectors shown in Fig. 7 , where the delay vectors in the same cluster have been marked with the same symbol; either a circle, a cross, or a triangle. Note how the cluster with the cross marker extends across two regions of very distinct the pendulum dynamics of (i) the pendulum swinging left to right and (ii) the pendulum swinging right to left. The reason for this sort of clustering result is plain to see; we are using Euclidean distance as the measure of  X  X imilarity, X  and clearly these two regions are close by this measure. This phenomenon also seems the likely reason for the clustering outcome of the bell X  X ylinder X  X unnel data in Fig. 5 ; where delay vectors representing very different dynamics were also clus-each cluster (as cross-hairs), determined as per Eq. ( 3 ). The surprising result is that none of the representatives actually lie among the members they represent. This fact explains the smoothing effect identified in Sect. 2 , i.e. the centroids lie generally in the same region of delay space as the cluster members, but they do not lie among the members, and so do not retain the sharpness of the member X  X  features. More specifically, we identify two reasons for the smoothing effect: (a) because the spectrum of dynamics represented by the delay vectors in the cluster are non-contiguous (such as in the cross-marker cluster in Fig. 7 ), or (b) because (where the spectrum of dynamics in the cluster is contiguous), the trajectory of vectors in the cluster exhibits curvature (such as in the circle and triangle marker clusters in Fig. 7 ). In both cases (a) and (b), calculating the mean according to Eq. ( 3 ) will cause the cluster centre to not lie among the cluster members, result-ing in the selection of a smoothed cluster representative. 4Asolution In the previous section, we identified two problems with the STS-clustering ap-proach used to date: it incorrectly clusters data that represents very different dy-namics into the same cluster, and it incorrectly selects the cluster representative. Both problems stemmed from the use of Euclidean distance as the measure of (dis)similarity in delay space. Clearly, the use of Euclidean distance is incorrect, but the obvious question then is what sort of distance metric should be used? In this section, we propose a solution for the quite general class of time series pro-duced by time-invariant, deterministic dynamical systems.
 is the issue of defining precisely when two delay vectors are similar/dissimilar. We identify two types of similarity between delay vectors, (i) temporal similarity, and (ii) similarity of form, which we will call formal similarity. Figure 8 shows pictorially what we mean by temporal and formal similarity. Each plot represents and z c exhibit temporal similarity and that z a and z d exhibit formal similarity, with z and z e exhibiting both temporal and formal similarity. Temporal similarity is a measure of how long it will take for one delay vector to evolve into another (e.g. z b or z c into z a ), or into something that has purely formal similarity to another (e.g. z e into z d , which has purely formal similarity to z a ; we will precisely define formal similarity in a moment). Clearly, z b will require less time (less additional signal) than z c to evolve into z a , so we should measure z a as being closer to z b than z c . This motivates the following definition.
 Definition 3 Temporal similarity between two delay vectors z 1 and z 2 is measured as the distance along the trajectory on which z 2 lies between z 2 and either (a) z 1 (if z 1 lies on the same trajectory as z 2 ), or (b) the vector on the trajectory through z which has purely formal similarity to z 1 .
 between two delay vectors. However, given the subjective nature of the notion of form or shape, what is required is a definition. First define the idea of a flow. Definition 4 Let S define a local neighbourhood to z p in delay space. Define a vector field V on S such that V represents the delay space evolution of the system tangent vector at z S p of the trajectory in delay space through z S p ). Then we denote V as defining the flow in S .
 Next, define precisely what we mean by formal similarity.
 Definition 5 Let  X  be a surface (in general, a hyper-surface) defined within our local neighbourhood S ,wherez p  X   X  .Form  X  such that it is at all points orthog-onal to the flow in S (i.e. if we denote T  X  for all v  X  T  X  vector to the flow at z  X  p ). Then any vector z  X  p lying on  X  is defined to have purely formal similarity with z p , where the dissimilarity of z p and z  X  p can be measured as the length of the shortest path lying on  X  between z p and z  X  p .
 jectories neighbouring the trajectory through z p . Note that our definition of formal similarity is based on Definition 4 , and that in this definition, we have implicitly restricted the class of time series under discussion. The assumption is that, each time we visit a particular point in delay space, there will exist a unique tangent vector that describes the direction of the evolution of our dynamical system. Let the dynamical system from which our time series emanates be described by the following equations, where S n is the current true state of the system, S n + 1 the next true state, F is a nonlinear map from S n to S n + 1 , X n + 1 is the measured value of S n + 1 (i.e. an element in our time series) through the measurement function s ,  X  2 is a noise source perturbing the system by a random amount each time step (generally termed dynamical noise),  X  1 is also a noise source (this time associated with the measurement process), and  X  is a vector of system parameters. Generally, the dynamical system described by Eqs. ( 5 )and( 6 ) is described as time-invariant if  X  does not change over time; it is described as stochastic if  X  significant component of the final time series data, and as deterministic otherwise. Clearly, a time-invariant, deterministic system will produce a unique S n + 1 for each S n , resulting in a unique tangent vector at each z p in delay space. It may be envisaged that this will only be the case for zero measurement noise  X  1 ,but there are methods (e.g. [ 11 , Sect. 10.3]) for removing the effects of  X  1 from the measurement process. In many situations, a time-invariant, deterministic dynamic system with measurement noise is an appropriate model for a time series source; however, be it, or be it not the case for a specific application, it is important to note this restriction on the framework we are proposing here. Note that deterministic dynamical systems can produce time series of high complexity, i.e. they are capable of exhibiting chaotic behaviour.
 and formal similarity. Note that the idea of temporal similarity comes naturally from the problem at hand; it is clear how a z p will evolve into some z p + 1 depend-ing on the dynamics of the system. This is in contrast to our presentation of formal similarity, where we have chosen to define this quantity in one particular way. We now try to provide some more motivation for the definition proposed. Given some delay vector z p , we can imagine the process of creating a delay vector similar to z p by perturbing each x k z , only one combination of the many possible perturbations of each x k will result in the next delay vector z p + 1 ; where the particular combination of perturbations for this case is defined in delay space in the direction of the tangent vector to z p . There are, of course, a multitude of possible perturbations that could be applied to the x k  X  z p which is not this one, and we have chosen to define a delay vector with purely formal similarity to z p as one where each x k is perturbed in a way that the relative proportion of perturbations applied to each x k causes the selection of points (delay vectors) lying in the direction orthogonal to the flow at z p . While we do not prove this is the best proportion of perturbations to apply, it is intu-itively seems the right one, since it results in a type of similarity most  X  X istinct X  to temporal similarity.
 alternative measure of distance to Euclidean distance in delay space; the measure should be some function of two distances: one measured always parallel to the flow, and the other always measured orthogonal to the flow. That is, we should choose to measure the similarity between two delay vectors as the combination of their temporal and formal similarities. The practical implementation of such an algorithm is not trivial, and is the focus of ongoing work. For the purposes of this paper, we conduct a STS-clustering experiment that uses the type of metric just proposed, however, for the sub-class of time-invariant, deterministic dynamical systems that produce time series that are cyclic (see Definition 1 ). Our aim is not to propose an algorithm for cyclic data series per se, but rather to show on a real data series that the abstract concepts of temporal and formal similarity defined above do in fact lead to a valid clustering outcome. Specifically, we propose the following algorithm for calculating the distance between any two delay vectors formed from a cyclic data series.
 Algorithm 4.1 Let X be a cyclic data series X = x t | t = 1 ,..., n, where | x t  X  x +  X  | &lt; for some fixed  X  , and small. Assume we have a delay-vector sequence Z created from X with lag q and vector length w ,i.e. Z = z p | p = (w  X  1 ) q + 1 ,..., n where z p is as per Eq. ( 4 ). Then, create the single-cycle, mean data series (i.e. 1 / X   X  Each z p will contribute to the value of one, and only one,  X  z r .Denoteasz  X  p this  X  z r for z p . Then, the distance between any two delay vectors z a and z b can be calcu-culates distance between any two points as the sum of three distances: (a) the two distances given by the distance between each of the points and its nearest point on the mean trajectory, and (b) a third distance as the distance along the flow between the two  X  X earest X  points just mentioned. One can see that this approach is in the spirit of our discussion above, since step (a) measures orthogonal to the flow, and (b) measures along it. The k -means clustering, using Algorithm 4.1 as the distance measure, can then occur in the usual way.
 Algorithm 4.2 ( k -means) (1) Randomly select initial cluster centres  X  z j , j = (2) Associate each z p  X  Z to its closest  X  z j using distance measured according to (3) Find the new cluster centres  X  z j as the points which minimise the sum of dis-(4) Return to step 2, or stop if cluster centres have not moved.
 ing Algorithm 4.2 . In contrast to the clustering in Fig. 7 ,where k -means based on Euclidean distance was used, the clusters in Fig. 9 are well formed, in that each represents a contiguous spectrum of pendulum dynamics. Even though the two regions in the cross-marker cluster in Fig. 7 may be close in terms of Euclidean (i.e. X  X traight-line X ) distance, in delay space, their distance along the flow (i.e. tem-poral distance) is large, and hence they are not clustered together in Fig. 9 . Figure 9 also shows, as cross-hairs, the cluster centres found by Algorithm 4.2 . Unlike the representatives found in Fig. 7 , these lie among cluster representatives, and in each case look to give a good balanced representation of all members in their cluster. to the original problem of clustering the (cyclic) bell X  X ylinder X  X unnel data. Again, we use Algorithm 4.2 for clustering, and Algorithm 4.1 for measuring distance. Figure 10 shows the results. The top window in the figure shows that we have successfully recovered the bell, cylinder and funnel features, as desired. The bot-tom window shows an alternate set of features that were found using a different set of initial seeds for the k -means algorithm. Both sets of features are a valid re-sult of clustering the bell X  X ylinder X  X unnel data series. One can see this fact more clearly by noting that the series can be formed by the concatenation of either of these sets of features. In fact, there will be whole spectrum of feature sets that will see the k -means algorithm return very similar total sum-of-distance values; corresponding to the different ways that one cycle can be broken into three equal length sequences.
 obtain essentially the same result as shown in Fig. 10 , but without requiring that delay vectors be formed with elements contiguous in the original time series, i.e. formed with a lag value q = 1. Recall how we saw with the pendulum example that it is generally not optimal to select a lag value q = 1, since it results in data points lying along the bisectrix of delay space. For Algorithm 4.1 presented here, we have required that distance be measured between two points in a way that must include the along-the-flow component, so we can guarantee that points in delay-vector space from distinct region of the flow cannot accidently be measured as close. However, there is another reason why we may want to set the value of q to be greater than one; namely for computational reasons. A q value greater than one means a delay vector of reduced length for the same  X  X indow X  size, i.e. we will be clustering in a space of reduced dimension, leading to a much reduced require-ment in computation. To investigate this possibility, we perform two experiments, where, in the first we set q = 4, w = 32, and in the second we set q = 8, w = 16 (all other facets of the original q = 1, w = 128 experiment remained the same). That is, in both these experiments, and in the original experiment, the size of the window across which we were looking for features is 128. Figure 11 shows the results. It can be seen that, for both the q = 4, w = 32, and q = 8, w = 16 experiments, the cylinder, bell and funnel features were successfully recovered, and this was achieved with a much reduced computational requirement.
 der and funnel features. On inspection of the pendulum phase portrait in Fig. 6 , we postulated for the bell X  X ylinder X  X unnel experiment that this result was accen-tuated by the selection of a lag q = 1, since the data points then concentrate along the bisectrix of delay space, resulting in points that represent very different signal dynamics lying close together. It is then interesting to confirm that we do not achieve a valid clustering outcome if we cluster the bell X  X ylinder X  X unnel data using the Euclidean distance metric, but with a more sensible lag value, i.e. one that will  X  X pread X  data points in our delay space more widely. We choose two lag values, q = 4 (with w = 32) and q = 8 (with w = 16), and the results of the clustering for each are shown in upper and lower plots of Fig. 12 , respectively. Both plots show sine-type waves, so clearly tuning the lag value has not helped, and our new distance metric approach would seem to be the correct approach for achieving a valid clustering outcome. 5Conclusion There are a number of conclusions to this work. First and foremost, that sequential time series clustering can indeed be meaningful, and that it is not, as recommended by Keogh et al. [ 12 ], intrinsically flawed by definition. Second, that the key step in making it meaningful is by measuring distances in delay space correctly. We showed that the Euclidean distance measure that has been adopted by work in the area to date is flawed, and we introduced the idea of temporal and formal similarity in delay space for the class of time series produced by time-invariant, determin-istic dynamical systems. We saw that the use of Euclidean distance gave rise to a number of problems, including the clustering together of regions in delay space that are close by this measure, but that really represent very distinct dynamics of the underlying time-series-producing system. In addition, we saw that, even when the clustering outcome was correct, taking the cluster representative as the point with minimum average Euclidean distance to all members in the cluster did not lead to a sensible outcome because of the generally  X  X urved X  nature of clusters in delay space. These results were in contrast to those obtained by our approach based on temporal and formal similarity, where experiments showed that sensible outcomes are achieved in both the areas of forming the clusters, and choosing the cluster representative. Finally, we saw that the sliding windows technique (i.e. lag q = 1) is generally suboptimal, and should be avoided, since it causes the delay space representation of the data series dynamics to be aligned closely along the bisectrix of delay space. However, we found that trying to obtain a valid clustering outcome using Euclidean distance by tuning the lag parameter was not successful, although selecting a lag value greater than one was found to be beneficial from a computational point of view. Specifically, using the formal/temporal similarity metric and lag values greater than 1, we produced correct clustering outcomes with reduced computational effort. The obvious further work to that presented in this paper involves determining a distance measuring algorithm for our temporal and formal similarity paradigm for the more general class of data series (i.e. other than cyclic) that can be produced by time-invariant, deterministic dynamical sys-tems. This is the focus of our present work, and we hope to report on our findings soon.
 References Author Biography
