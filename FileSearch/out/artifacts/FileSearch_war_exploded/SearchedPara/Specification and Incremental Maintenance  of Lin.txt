
V X nia M.P. Vidal 1 , Marco A. Casanova 2(  X  ) , Narciso Arruda Linked Data sources. forms full view recomputation [1,7,9,15]. shup view materialization. related work. Finally, Section 5 contains the conclusions. 2.1 Overview Linked Data sources. In the Web of Data La y O , published on the Web tologies are depicted in the 
Each Linked Data sour c ontology O Ei and a set of r vocabulary of O Ei is the su b of the rules in M Ei . The ex Linkset Views Layer in Fi g
We consider two types ported by a Linked Data s o created based on a sameA s mashup application. 
As detailed in the follo w  X  = (D, O D , E 1 , ..., E n , E L  X 
D is the name of the ma s  X  O is the mashup view o n  X 
E , ..., E n are exported v i bularies are subsets of t h  X 
EL ,..., EL p are exporte d  X 
ML 1 , ..., ML q are mashu p  X   X  is a set of fusion rules  X   X  is a normalization fu n
IRIs of the exported vie w  X 
Q is a set of quality ass e the Linked Data sources cation of quality assess m The process for generat i Modeling of the mashup o n fications; (3) Generation o Generation of the mashup normalization function, fu s detailed in the following su specification. the LDM view materialization. gle representation and the resolution of data inconsistencies. 2.2 Running Example Music Ontology [17] and we use the prefix  X  X o: X  to refer to it. 2.3 Specification and Materializ ation of Exported Views An exported view specification is a quintuple (E, S, O  X 
E is the name of the view  X 
S is a Linked Data source  X 
O S is the ontology of S  X  heads of the mapping rules in M  X 
M E is a set of mapping rules from O S to O E foaf:maker, foaf:made } foaf:made } DBpedia_EV obtained by applying the mappings rules. Let (T, S T , O ST , O T ,  X  T ) and (U, S U , O ported sameAs linkset view specification is a tuple (EL, T, U, C, C  X 
EL is the name of the view;  X  (T, S T , O ST , O T , M T ) and (U, S U , O SU , O U , M  X   X  C ST is a class in the vocabulary of the data source ontology O  X  there is a rule in M U , indicating that instances of C Let s T and s U be states respectively of S T and S and s U is the set EL[ s T , s U ] defined as: (u, rdf:type,  X   X  X  X  )  X  X   X   X   X   X   X   X   X  X  X   X  .
That is, EL[ s T , s U ] imports sameAs links from s T C . exported linkset views should be specified:  X  (EL 1 , MusicBrainz_EV, DBpedia_EV, mo:Record, mo:Record, dbpedia-owl:Album)  X  (EL owl:MusicalArtist) rialized by EL 1 . 2.5 Specification and Materialization of Mashup sameAs Linkset Views where:  X 
ML is the name of the view  X  (T, S T , O ST , O T ,  X  T ) and (U, S U , O SU , O U ,  X   X  p ontologies O T and O U  X   X  is a 2n -relation, called the match predicate e is the set ML[ e T , e U ] defined as: (t, owl:sameAs, u)  X  ML[ e T , e U ] iff there are triples such that (v 1 ,..., v n , w 1 ,..., w n ) match predicate p is defined as (v 1 , w 1 )  X  p iff shows the sameAs links automatically created using ML 1 . 2.6 Specification of the Normalization Function and Fusion Assertions assertion. (N 1 )  X  x 1  X  x 2 ( x 1 sameAs x 2  X   X  (x 1 ) =  X  (x 2 sameAs x 2  X . data sources on the Web.  X  = { dbp:s1 },  X  5 = { mb:t1 }.
 LDM view, O D =(V D ,  X  D ) be the ontology of D, and Let C be a class in V D . We define data fusion property assertions . is an expression of form  X   X  : P[C]  X  f /Q X  , where class in V D , P and Q are properties in Props ( C , V whose range is a set of individuals. induces a set of fusion rules for D as follows:  X  Let C be a class in V the context C induced by A is P(x,u)  X  u = f(v/B[x,v]) where: B[x,v] = ((C(x 1 ),Q(x 1 ,v)) S1 , x=  X  (x 1 ));  X  Let C be a class in V D and P be a property in Props ( C , V in the context C induced by A is P(x,v)  X  ((C(x 1 ),P(x 1 ,v)) S1 , x=  X  (x 1 )); ... ;((C(x  X  C(x)  X  ((C(x 1 )) S1 , x=  X  (x 1 )); ... ;((C(x n )) mo:Record be 
 X  Then, this FPA induces the following fusion rule: moa:labelName(x,u)  X  u=KeepSingleValueByReputation(v/ mo:Record, then the following default fusion rule would be induced: moa:labelName(x,v)  X  (mo:Record ( y ), moa:labelName(y,v)) exported view. 2.7 Materialization of the LD Mashup View presentation and the resolution of data inconsistencies [4].  X   X  = (D, O cation.  X 
V D is the vocabulary of O D  X  C ={ C / C is a class in V  X  P ={ P/ P is a property in V  X  e 1 ,..., e n are states of E 1 ,..., E n and l 1 with m=p+q  X  s = ( e 1 ,..., e n , l 1 ,..., l m )  X   X   X   X  [  X  i ] denotes the IRI that represents  X  i  X   X  s denotes the interpretation of  X  for the  X  T , i.e., the interpretation of T in s , defined as follows:  X  the rule is of the form C(x)  X  (C(x 1 ) S1 , x=  X  (x 1 )); ... ;(C(x p ) Sq (x, rdf:type, C)  X  I[ s ](C) iff (x, rdf:type, C)  X  (x, rdf:type, C)  X  that the rule is of the form P(x,v)  X  (C(x 1 ),P(x 1 , v)) S1 ,x=  X  (x 1 )); ... ;((C(x (x, P, v)  X  I[ s ](P) iff ((x, rdf:type, C)  X  I[ e 1  X  that the rule is of the form P (x, u )  X  u = f(v/B[x,v]) where: Definition 2: Recall that C is the set of all classes in V ties in V D and  X  i is an equivalence class induced by l sion function as follows: that  X  ,...,  X  w are the equivalence classes induced by l 1 ,..., l applied to the Linked Data sources. In this section, let:  X   X  = (D, O D , E 1 ,..., E n , EL 1 ,..., EL p , ML 1 ,...,ML tion  X  e ,..., e n be states of E 1 ,..., E n and l 1 ,..., l with m=p+q  X  s = ( e 1 ,..., e n , l 1 ,..., l m )  X  d be the state of D induced by s sameAs views. Let d X  be the state of D induced by ( e X  set of updates U D over the state d correctly maintains D iff U ly maintain the LDM view D . For each data source S cation of the exported views and linkset views. by u }. 3. Send R to the LDM View Controller. work [22]. problems in this paper. on the following definitions: Definition 4: Let r be a resource in R , DA ( r ) = A A
OLD ( r ) ={ x A
NEW ( r ) ={ x Definition 5: DA ( R ) =  X  r  X  R DA ( r ). Definition 6: DA* ( R ) =  X  r  X  R DA* ( r ) where Definition 7: IA* ( R ) = (  X  r  X  R IA* ( r ) )  X  DA* ( R ) where, in 2 steps: fected by the resources in R . Step 2 : Updates the state of the mashup resources in IA the updates in step 1. 
Parameters ( as defined above) :  X  , the LDM view specification t = ( e X  1 , ... , e X  n , l X  1 , ... , l X  m ) d , the state of mashup view D induce by s Input : R , the set of IRIs of resources affected by an update 
Step 1 . Compute the new state of the mashup resources in DA 1.1 Compute DA ( R ) and DA * ( R ) ; /* See Definitions 4-6 1.2. Retrieve  X  OLD the old states of the mashup resources in DA  X   X 
NEW :=  X  [  X  ]  X  S DataFusion (  X  , t ) where S = { 1.4. d := ( d - X  OLD )  X   X  NEW ; 
Step 2 . Update the state of the mashup resources in IA * 2.1 Compute IA * ( R ); /* see Definition 7. 2.2 For each m in IA * ( R ) do { 2.2.1 AP ( m ) = { P / (  X  y  X  DA * (R) )  X  ( m , P, y) 2.2.2. Computes the new states for the properties in AP ( m ) ; For each P in AP ( m ) do { Phase 1: (Executed by the DBpedia View Controller) Controller sends R ={ dbp:s1 } to the LDM View Controller. Phase 2: (Executed by the LDM View Controller) of the exported views and linkset views. Based on ML owl:sameAs, mb:t1 ) is added to ML 1 . dates in 2 steps: DA* ( { dbp:s1 }) DA ({ dbp:s1 })= { dbp:s1, mb:t1 } DA* ({ dbp:s1 })= { mp:t1, mp:t3 } Step 1.2:  X  OLD = I [ d ]( mp:t1 )  X  I [ d ]( mp:t3 ) Step 1.4: d = ( d - X  OLD )  X   X  NEW Step 2. Update the state of the mashup resources in IA * Step 2.1 . IA * ({ dbp:s1 })={ mp:r1 } Step 2.2.1 AP ( mp:r1 ) = { mo:track } niques can be directly applied to data integration views. the data fusion problem, specially the treatment of sameAs. been addressed in any framework. cification for incrementally maintain the mashup view. 
