 We focus on a recent spatial data mining problem: finding spatial features that tend to be located in spatial proximity. This problem is also referred to as spatial co-lcoation patterns mining [7,4,2,10,9]. Let F = { f 1 ,f 2 ,...,f l } be a set of spatial features. consider a number of l spatial datasets { SD 1 ,SD 2 ,...,SD l } , such that SD i ,i  X  [1 ,l ] contains all and only the objects that have the spatial feature f i ,Let R be a given spatial neighbor relation (e.g. distance less than 1.5 miles). A set of spatial features X  X  X  is a co-location if its value im ( X ) of an interesting measure, is above a threshold min im . The problem of finding the complete set of co-location patterns is called the co-location mining problem. Mining spatial co-location patterns is an important spatial data mining task with broad applications.
 problem of mining association rules [1] in many aspects. Since its introduction, the problem of mining frequent patterns from large databases, has been subject of numerous studies. The paradigm of frequent pattern mining algorithms has undergone a fundamental shift from generate-and-test approaches [1] to projec-tion based approaches [5]. Projection based approaches have major advantages over generate-and-test approaches and avoids multiple database scans by com-pressing transactional data into compact structures. However, the lack of pre-materialized transactions becomes a major obstacle in adopting projection based algorithms in spatial co-location pattern mining. A natural question to ask is: can we push the same paradigm shift for mining spatial co-location patterns? employ an generate-and-test co-location mining paradigm, which utilizes the anti-monotone property of interestingness measures. In a clustering-based map overlay approach[4, 3], every spatial feature is treated as a map layer and point-data in each layer are clustered into regions. In a reference feature based approach [7], transactions are created according to different algorithms, then a level wise algorithm is applied . Under this model, a frequent pattern based algorithm can be applied straightforwardly due to the fact that the interestingness measure is defined based on the generated transactions. In distance based approaches [9, 10], the number of instances for each spatial feature set is used to define the interest-ingness measure. In an event centric model [10], a participation index was defined as the interestingness measure. The participation index of a pattern is defined as the minimal participation ratio of the objects of each feature in the pattern. paradigm for event based spatial co-location pattern mining (CM). We proposed a projection based framework for CM, which can incorporate any fast frequent pattern mining algorithm. In particular, we developed an FP-growth based algo-rithm for spatial co-location mining(FP-CM) based on the proposed framework. We provide preliminary experiment results to show that the FP-CM is an order of magnitude faster than the generate-and-test algorithm Co-location Miner . Paper Outline: Section 2 recalls important concepts of co-location and frequent pattern mining. Section 3 proposes our projection based FP-CM framework and a FP-growth based co-location mining algorithm. We present the preliminary experimental results in section 4 and summarize our work and present future work in section 5. We review basic concepts of co-location patterns, a traditional generate-and-test co-location mining algorithm, and a projection based frequent pattern mining algorithm in this section.
 terestingness measure. For a set of spatial features X  X  X  ,asetofobjects { o X is defined as: Because of the downward closure property of the participation index [10], a generate-and-test mining paradigm was employed by previous algorithms, e.g. Co-location Miner . This approach generates the candidate size k + 1 co-location set based on the size k co-location set. The candidate size k + 1 co-location set includes all and only those size k + 1 spatial feature set whose size k subsets are all co-locations. Then it uses spatial joins on the instances of size k co-locations to generate the instances of the size k + 1 candidates and calculate the par-ticipation indexes for them. It prunes false candidates before starting the next iteration.
 tree structure to compress frequent patterns and employs a pattern fragment growth method for mining the complete set of frequent patterns from the prefix-tree. Due to the reduced number of database scans, this algorithm is very fast compared with traditional generate-and-test algorithms [5]. (We refer readers to [5] for the details of the FP-growth algorithm). However, a FP-growth based algorithm can not be used directly in spatial co-location mining due to the lack of transactions in spatial datasets. Transactionizing spatial datasets and establishing the relationship between support and participation index to develop a complete and correct projection based co-location mining algorithm is non-trivial. Our proposed framework is shown in Figure 3. A transactional database TD i is created for each spatial feature f i . Any fast maximal frequent pattern mining algorithm may be applied to each transactional database TD i to find maximal frequent patterns MFP s =  X  i =1 ...K MFP i using a support threshold min sup = min pi . The mined maximal frequent patterns MFP i are combined by a pattern combining component to generate a superset of all the co-location patterns. Finally, a pattern filtering component filters out the false candidate co-locations. FP-CM ,for FP-growth Based Co-location Miner . This algorithm con-sists of four components: transactionization, maximal frequent pattern mining, combining patterns, and pattern filtering. 1. Transactionization (step 2) 2. Maximal Frequent Pattern Mining (step 3) Algorithm 1. FP-CM 3. Combining Patterns (step 5-12) 4. Pattern Filtering (step 13) The FP-CM algorithm requires a small number of database scans. One database scan is required to transactionize the spatial data, then FP-growth based maxi-mal pattern mining requires two or a few database scans depending on the aver-age size of the FP-trees. Combining patterns involves only spatial features and the maximal frequent pattern sets and usually is a memory based step. Finally, the pattern filtering step using gridding and multi-way spatial joins requires two more database scans. So the total number of database scans of FP-CM algorithm is bounded by a small constant. We implemented both the co-location miner (CM) and FP-growth based co-location miner (FP-CM) using C++ and all the experiments are carried out on a Pentium IV 2.4GHz machine with 1GB memory, running the Debian linux operating system. Our experiments are extensive and the results are consistent. Limited by space, we only report representative results for various parameters. Our dataset generator is similar to [1].
 periment with 50 pre-generated patterns whose average size is 5 and the number of features participating in a pattern is 100, 24k spatial objects, and minimum participation index threshold is 0.4. Since the time for computing size 2 co-locations are the same (one database scan) for both algorithms, we only report the time for calculating size 3 or more co-location patterns. 1. Effect of thresholds: 2. Effect of total number of Objects: 3. Effect of Average Maximal Pattern Size: 4. Effect of Number of Patterns: In this paper we proposed a projection based framework for mining spatial co-locations, which is flexible in incorporating any fast maximal frequent pattern mining algorithm developed in literature to help spatial co-location mining. In particular, we developed a complete and correct FP-tree based algorithm for spatial co-location mining. It combines the salient features of FP-tree based maximal frequent pattern mining [5] and fast multi-way spatial joins [8] to reduce the total number of database scans into a small constant. Our experiment results showed that the FP-CM is an order of magnitude faster than a generate-and-test algorithm Co-location Miner .
 as a new data-driver partitioning of spatial datasets according to the objects of each spatial features. Compared with traditional spatial partition approaches [11], this approach does not have the problem of combinatorial explosion of tem-porary candidate patterns needed to be maintained by the algorithm before all the partitions are processed as acknowledged by the authors in [11]. In future work, comparing various partition based co-location mining algorithms would be an interesting and imperative research direction.

