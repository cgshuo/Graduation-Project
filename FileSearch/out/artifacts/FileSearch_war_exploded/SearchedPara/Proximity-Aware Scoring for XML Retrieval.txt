 Proximity-aware scoring functions lead to significant effec-tiveness improvements for text retrieval. For XML IR, we can sometimes enhance the retrieval quality by exploiting knowledge about the document structure combined with es-tablished text IR methods. This paper introduces modified proximity scores that take the document structure into ac-count and demonstrates the effect for the INEX benchmark. Categories and Subject Descriptors: H.3.3 [Informa-tion Search and Retrieval]: Retrieval Models General Terms: Algorithms, Experimentation Keywords: proximity scoring, XML retrieval
Term proximity has been a common means to improve effectiveness for text retrieval, passage retrieval, and ques-tion answering, and several proximity scoring functions have been developed in recent years (for example, [2, 3, 6, 7]). For XML retrieval, however, proximity scoring has not been similarly successful. To the best of our knowledge, there is only a single existing proposal for proximity-aware XML scoring [1] that computes, for each position in an element, a fuzzy score for the query, and then computes the overall score for the element by summing the scores of all positions and normalizing by the element X  X  length.

We propose a proximity score for content-only queries on XML data that extends the existing proximity score by B  X  uttcher et al. [2], taking into account the document struc-ture when computing the distance of term occurrences.
To compute a proximity score for an element e with re-spect to a query q = { t 1 ...t n } with multiple terms, we first compute a linear representation of e  X  X  content that takes into account e  X  X  position in the document, and then apply a variant of the proximity score by B  X  uttcher et al. [2] on that linearization.
 Figure 1 shows an example for the linearization process. We start with the sequence of terms in the element X  X  content. Figure 1: An XML document and its linearization Now, as different elements often discuss different topics or different aspects of a topic, we aim at giving a higher weight to terms that occur together in the same element than to terms occurring close together, but in different elements. To reflect this in the linearization, we introduce virtual gaps at the borders of certain elements, whose sizes depend on the element X  X  tag (or, more generally, on the tags of the path from the document X  X  root to the element). In the exam-ple, gaps of section elements may be larger than those of p (paragraph) elements, because the content of two adjacent p elements within the same section element may be consid-ered related, whereas the content of two adjacent section elements could be less related. Some elements (like those used purely for layout purposes such as bold or for naviga-tional purposes such as link ) may get a zero gap size. The best choice for gaps depends on the collection. Gap sizes are currently chosen manually; an automated selection of gap sizes is subject to future work.

Based on the linearization, we apply the proximity scoring model of B  X  uttcher et al. [2] for each element in the collec-tion to find the best matches for a query q = { t 1 ,...,t with multiple terms. This model linearly combines, for each query term, a BM25 content score and a BM25-style proxim-ity score into a proximity-aware score. Note that unlike the original, we compute these scores for elements, not for doc-uments, so the query-independent term weights in the for-mulas are inverse element frequencies ief ( t )= N  X  ef ( where N is the number of elements in the collection and ef ( t ) is the number of elements that contain the term t . Similarly, average and actual lengths are computed for ele-ments.

To compute the proximity part of the score, B  X  uttcher et al. first compute an accumulated interim score acc ( t i )foreach query term t i that depends on the distance of this term X  X  occurrences in the element to other, adjacent query term occurrences. Formally, for each adjacent occurrence of a term t j at distance d to an occurrence of t i , acc ( t i by ief ( t j )/ d . The proximity part of an element X  X  score is then computed by plugging the acc values into a BM25-style scoring function: where, K = k  X  [(1  X  b )+ b  X  | e | avgel ] (analogously to the BM25 formula) and b , k 1 ,and k are configurable parameters that are set to b =0 . 5and k = k 1 =1 . 2, respectively. The overall score is then the sum of the BM25 score and the proximity score: In order to evaluate our methods, we used the standard INEX benchmark, namely the INEX Wikipedia collection [4] with the 111 assessed content-only topics from the INEX AdHoc task 2006. Following the methodology of the INEX Focused Task, we computed, for each topic, a list of the 100 best non-overlapping elements with highest scores and evaluated them with the interpolated Precision metric used at INEX 2007 [5] 1 .
For our first experiment, we evaluated how good our prox-imity-aware scoring is at determining documents with rele-vant content. We limited the elements returned to article elements, corresponding to complete Wikipedia articles, and considered different gap sizes, where we report (1) gaps of size 0 for all elements, (2) gaps of size 5 for section and 3for p elements, and (3) gaps of size 30 for section and p elements. Additionally, we report results without prox-imity (i.e., only the BM25 score) as baseline. Our imple-mentation first computed the 100 best results for the BM25 baseline and then additionally computed the different prox-imity scores for these results, reranking the result list. Table 1: Results for Document-Level Retrieval Table 1 shows the results of these experiments. It is evident that proximity scoring in general can help to improve preci-sion, and that introducing gaps gives an additional improve-ment. The MAiP values with introduced gaps turned out to be significantly better than the baseline for the Wilcoxon signed rank (WSR) test at a confidence level of at least 95% (printed in bold). However, our approaches could not demonstrate significant improvements as to the baseline for the iP values at the presented recall levels at a confidence level of at least 90% in WSR and paired t-tests.
We now evaluated the performance of proximity-aware scoring for element-level retrieval, where we limit the set of elements to be returned to those with article , body ,
Due to a bug reported for the original INEX implementa-tion, we used a Java-based reimplementation of the metric. section , p , normallist ,and item tags for efficiency; initial experiments with all tags gave similar results. As we need to remove overlap, we first computed the best 200 results for the BM25 baseline, for which we then computed the prox-imity scores, resorted the lis t according to the new scores, and removed overlap (if two elements overlapped, we kept the element with highest score).
Table 2 shows the results of these experiments. Again, compared to the baseline, proximity scoring in general helps to improve precision, but surprisingly, introducing gaps did not increase the positive effect, but actually reduced per-formance. WSR tests confirmed improvements of iP[0.1] and MAiP values for proximity scoring over the baseline at a confidence level of at least 95%, whereas for iP[0.1] gap-enhanced approaches could only succeed at a confidence level of at least 90% (printed in italics). Gap-enhanced ap-proaches proved to deliver significantly better MAiP val-ues than the baseline but were not as good as the mere proximity-based, gap-free approach (underlined stands for fail in WSR test and success in paired t-test at a confidence level of at least 90%).
This paper presented a structure-aware proximity score for XML retrieval that helps to improve the retrieval effec-tiveness of gap-free approaches for article-level retrieval, but does not show a similar effect for element retrieval. Our fu-ture work will further investigate this issue. Additionally, we will focus on automatic methods to determine good gap sizes for elements, determining characteristics for queries where proximity boosts performance, and extending prox-imity scoring to queries with structural constraints. [1] M. Beigbeder. ENSM-SE at INEX 2007: Scoring with [2] S. B  X  uttcher, C. L. A. Clarke, and B. Lushman. Term [3] O. de Kretser and A. Moffat. Effective document [4] L. Denoyer and P. Gallinari. The wikipedia XML [5] J. Kamps, J. Pehcevski, G. Kazai, M. Lalmas, and [6] Y. Rasolofo and J. Savoy. Term proximity scoring for [7] R. Song et al. Viewing term proximity from a different
