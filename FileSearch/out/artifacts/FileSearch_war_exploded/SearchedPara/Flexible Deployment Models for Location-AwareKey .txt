 Recent advance in nano-technology makes i t possible to develop low-power bat-tery operated sensor nodes which are tiny and cheap, and could be deployed in a wide area. Security mechanisms that provide confidentiality and authentication are critical for the operations of many sensor applications. However, individual sensor nodes have limited power, computation, memory, and communication ca-pabilities, which make it infeasible to use traditional public-key cryptosystem. Key management has become a challenging problem in wireless sensor networks.
A number of key management schemes for wireless sensor networks have been proposed recently [2,3,4,5,6]. Most of t he existing key managements are based on random key pre-distribution, which is a probabilistic approach for setting up session keys between neighboring nodes . Random key pre-distribution schemes have a common weakness that they are vu lnerable to selective node attacks and node replication attacks [10]. These attacks can be effectively prevented by location-aware key management [8,9,10]. However, there are still several chal-lenges in location-aware key management such as connectivity between groups, deployment flexibility, and security resilience. Existing schemes require the de-ployment information as a priori before deployment, which makes it rather in-flexible in large-scale applications. D eployment fields in these schemes usually are partitioned into grids, so inter-grid connectivity has become a tough problem in these approaches.

In this paper, we propose three flexible deployment models and correspond-ing key management scheme. Our deployment models include blend grid model , border grid model and scattering grid model . We also present the correspond-ing key management scheme for our deployment models. To the best of our knowledge, our scheme is a first attempt t o discuss the correlation between de-ployment models and key management. The main contributions of this paper are as follows:  X  Flexible deployment models and the corresponding key management scheme.  X  Improved connectivity in group-based d eployment and strengthened resi- X  Thorough theoretical analysis of our scheme and the existing location-aware
The rest of the paper is organized as fo llows. Section 2 proposes several chal-lenging problems in location-aware key management schemes. Then we present three deployment models and correspo nding key management scheme in Section 3. Section 4 shows the analysis and comparison between our approaches and the existing schemes. Section 5 describes rel ated work in security in sensor networks. Finally, we provide our conclusion in Section 6. 2.1 The Attack Model An inside attackers might be a compromised sensor node, which might be repro-grammed to launch undetectable attacks, e.g. selective forwarding, sybil attacks and wormhole attacks. Protection against part of these attacks is the security goals of secure routing algorithms. Karlof and Wagner [1] discuss some coun-termeasures against routing attacks. However, some of these attacks need both secure routing and key management to defend. Especially, we define two kinds of attacks against key management as follows: 1. Selectivenodeattack : By analyzing the deployment pattern of the network, 2. Node replication attack : The attacker can utilize the compromised informa-These two types of attacks could lead to several other critical attacks such as sybil attacks and wormhole attacks. Security schemes against these attacks are getting more and more attention.
 2.2 Challenges The potential of node location information in defending against node attacks is acquiring more attention such as in Liu X  X  [4], Du X  X  [5] and Huang X  X  [10]. Location-based key management schemes effectively intensify the network X  X  strength schemes all have a precondition that deployment information must be known before deployment, which is hard to fulfill in many cases. As such, we have to face a dilemma: deployment flexibility or network security. What X  X  more, these schemes usually are based on group deployment. They use quite different meth-ods to make nodes in adjacent groups connected, which lead to quite different performance in topology and in security.

In this paper, we propose three deployment models and the corresponding key management scheme aiming at the above three goals. In this section, we present three deployment models and their corresponding key management scheme, deferring the analysis for the next section. 3.1 Motivation In the existing location-based key management schemes, any sensor node in one grid can setup a pairwise key with another node within the same grid as well as with another node in a neighboring grid. Nodes in the same grid have no difference in the way how the keys is pre-distributed and installed on the nodes. However, by analysis, we find out that most of the nodes within one grid only communicate with its neighbors in the same grid, especially when the grid width is relatively more greater than the signal range of a node. We plot the analysis result in Figure 1. One can see that as the ratio of grid width to node signal range increases over about 6.5, more than 50 % nodes in one grid only have inner-grid communications.

Here we define two types of secret inform ation pre-installed in sensor nodes before deployment:  X  Inter-grid secret keys , which are used to set up a pair-wise key between two  X  Inner-grid secret keys , which are used to set up a pair-wise key with an grid secret keys. Most of the sensor nodes only communicate with inner-grid neighbors. If unnecessary secret keys are n ot installed in sensor nodes, the bene-ened, which is the most important. Less information would be exposed to the adversary when a node is compromised. Second, more memory would be freed for other purpose. 3.2 Deployment Model In this section, we propose three deployment models for our key management schemes: blend grid model , border grid model , scattering grid model .Theformer two are designed for manual deployment or controlled autonomous deployment. The last one is designed for large-scale autonomous deployment such as a heli-copter high in the sky dropping sensor nodes group by group. 1. Blend Grid Model First, we divide the deployment area into square grids, as shown in Figure 2(a). Then we classify the sensor nodes into two types: gateway nodes and inner nodes . In blend grid model, gateway nodes and inner nodes are blended and randomly uniformly deployed into the target field. The inner nodes only hold inner-grid secret keys and can only set up a pair-wise session key with nodes in the same grid. The gateway nodes hold both inner-grid secret keys and inter-grid secret keys, so they can set up a pair-wise key with both nodes in the same grid and gateway nodes in the adjacent grids.

In this way, the purpose of reducing unnecessary secret keys in sensor memory is accomplished. Communications betw een nodes are restricted by grids. Node replication attacks could be prevented. On the other hand, compared with the existing deployment models in [8,9,10], blend grid model doesn X  X  need to know the exact geographical shape of the target field. Both flexible deployment and network security are achieved.
 2. Border Grid Model After introducing blend grid model, we find that it is intuitive that gateway nodes should be deployed along the borderline of grids. If deployed along the borderlines, gateway nodes will work be tter playing their roles as gateways to set up inter-grid communications. Figure 4(b) shows an example partition of a target field using border grid model.

In many applications, node positions could be pre-computed before deploy-ment. Nodes will finally be deployed to the expected positions manually or by autonomous vehicles, such as mobile robots or unmanned helicopters. So border grid model would be supported quite well by these deploying methods. 3. Scattering Grid Model Scattering grid model are designed for some large-scale applications. In these applications, a great number of nodes are scattered by a helicopter high in the sky in the predetermined scattering positions.

We suppose that through some special mechanical equipment gateway nodes can be scattered more far away from the scattering point than inner nodes. In this way, gateway nodes have more chances to communicate with other gateway nodes. Because nodes are scattered around the scattering point which is the center of a grid, the grids in scatter grid m odel doesn X  X  have clear borderlines, as shown in Figure 2(c) and Figure 2(d). Figure 2(c) is a sample of squarely arranged grids. Figure 2(d) is a sample of hexagonally arranged grids. There might be a few more uncovered areas in hexagonal grids than in square grids.
In this paper, we model the sensor deployment distribution as a Gaussian distribution (also called Normal distribution). Gaussian distribution is widely studied and used in practice. Du X  X  work [5] also supposes the Gaussian distribu-tion to be the pdf(probability density function) for node deployment. We assume that the overall deployment distribution for any node k in grid G i,j follows a two-dimensional Gaussian distribution: divided into gateway nodes and inner nodes,we can also have: We define f gateway ( x, y ) as follows: where r is the expected distance where mos t of the gateway node are away from the scattering point,  X  is the coefficient which decide the fraction of gateway nodes to overall nodes. Then we have: in Figure 3. We can find the gateway pdf shows a basin-shaped mesh which means most of the gateway nodes are distributed along a circularity outside the grid, while the inner nodes are relatively close to the scattering point. 3.3 Key Management Our scheme doesn X  X  rely on specific key establishment algorithms and can choose either of the existing schemes as the basic pairwise key establishment algorithm, which keep our scheme scalable to specific applications. The key point is how to use the basic algorithms to deal with gateway nodes and inner nodes.
For simplicity for discussion, we take Du X  X  symmetric-matrix-based algorithm [5] as our basic key establishment algorithm. In Du X  X  scheme, a key space is de-fined as a tuple ( D, G ), where D is a random (  X  +1)  X  (  X  + 1) symmetric matrix over a finite field GF ( q ). We say a node picks a key space ( D, G ) if the node [5]. We present our key management scheme based on Du X  X  scheme as follows: Pre-distribution. We call all the sensor nodes to be deployed in one grid one group . A group of nodes includes both inner nodes and gateway nodes. Group is the minimal deployment unit. First, the key server generates  X  b global key spaces S gateway nodes in all groups. We use Du X  X  multiple-space method to strengthen the gateway nodes resilience against attacks. Then we suppose that there are m inner nodes and n gateway nodes in one group. For any group G i ,where i is the All nodes in group G i including m inner nodes and n gateway nodes choose  X  g key spaces from S i inner .
 Key Establishment. After deployment, each node need set up a pairwise ses-sion key with its neighbor. If two nodes belong to the same group, they could easily set up a pairwise session key, fo r they share the common inner key space. If two nodes are gateway nodes and shar e at least one global key space, they could set up a session key. If two nodes are not in the above two cases, these two nodes need to find a multi-hop key path to establish a session key. Multi-hop key path establishment is widely used in random key pre-distribution schemes, e.g. Eschenauer X  X  [2], Liu X  X  [4], and Huang X  X  [10].

Key management should also include other mechanisms such as key update, node addition and revocation, etc. Our approaches for these mechanisms can be similar to the existing schemes. First we list below notations which appear in the following analysis:  X  b number of candidate global key spaces for gateway nodes  X  b number of global key spaces picked by one gateway node  X  g number of candidate key spaces for nodes in one group  X  g number of key spaces picked by one node in the group m number of inner nodes in one group n number of gateway nodes in one group f r communication range of a sensor node R ( x, y ) signal covered area of a sensor node located at ( x, y )
It X  X  easy to deduce the probability of any two neighboring nodes sharing at least one key space: Our following analysis is also based on Equation 1.

The pdfs (probability density function) for our three deployment models used in the following analysis are omitted due to page limits. 4.1 Connectivity Analysis 1. Connectivity with in the same group. Key establishment with in the same group include inner-inner , inner-gateway ,and gateway-gateway key es-tablishment. Inner-inner refers to two inner nodes within the same group, and inner-gateway , gateway-gateway also refer to two nodes in the same group. For all nodes in one group hold the same key spaces, there are no differences of key establishment in these three types. The probability of any two neighboring nodes in the same group setting up a session key with the help of at most one middle node is: where deployment models.

We plot a probability distribution example in Figure 4, where q is supposed to be 4, i.e. each node has 4 neighbors. From example, one can see that, only 2outof6spaces(  X  =2 , X  = 6) are needed for each node to make the prob-ability of sharing at least one space to be more than 95%. Memory usage can 2. Connectivity between two adjacent groups. Connectivity between ad-jacent groups has been a challenging problem for group-based deployment. In our scheme, gateway nodes are especially designed to make nodes in two adjacent groups connected, and we mainly discuss the connectivity of gateway nodes. A gateway node can set up a session key with another gateway node in the adjacent group in 3 ways: directly, or with the help of a middle gateway node within the same group, or with the help of a middle gateway node in the adjacent group. We can deduce the probability of two gateway nodes setting a session key with the help of at most one middle node: where ( j We compare our blend grid model, border grid model, Huang X  X  scheme and Du X  X  scheme in Figure 5, all of which are supposed to follow uniform distribution. We suppose that there are 100 nodes deployed in each grid, and  X  b = 50,  X  b =8,  X  g =6,  X  2 =2, r = 25, m : n = 9 : 1. From the figure, one can see that our border grid model shows the best perfo rmance while the grid width increases, because gateway nodes, which especially designed for setting up a inter-group session key, are deployed along the border lines. Our blend grid model shows poor performance, because the percent of gateway nodes is too small (10%) in average, and it X  X  hard for two nodes belong to two adjacent groups to find a common gateway node to set up a session key. 4.2 Security Analysis Our key management scheme doesn X  X  reply on specific key establishment algo-rithms, but for simplicity for discussion, we take Du X  X  algorithm [5] as the key establishment algorithm.

Du X  X  algorithm has a nice security threshold ,say T , that if more than T nodes are compromised, the rest nodes of the network are in great danger, if less, no nodes will be threatened. It is intuitive that for inner nodes in our deployment model, we should choose a small  X  ,aslongas T is greater than the number of inner nodes in one grid, m . So the memory usage is saved, and even if a great number of nodes in one grid are compromised, the rest nodes either in the same cause all the gateway nodes share commo n key spaces, resilience against attacks is important for gateway nodes. So we should choose such a  X  - X  combination that better resilience can be achieve, as long as inter-group connectivity is still guaranteed.

Figure 6 depicts several  X  - X  combinations which can help us decide the values of  X ,  X , m, n for inner nodes and gateway nodes. The figure is based on Du X  X  analysis [5]. From the figure, one can see that when  X  =6 , X  =2, T  X  100, which indicates that m , the number of inner nodes in one grid, should be less than 100. One can also find that when  X  =50 , X  =4, T  X  420. So for example, we can set  X  = 50 , X  = 4 for global key spaces for gateway nodes,  X  =6 , X  = 2 for inner key spaces for inner nodes in each grid. If we suppose m : n =9:1,thenumberof T It means that if the adversaries randomly chooses nodes to compromise, they will have to compromise at least 4200 nodes to broke one key space.

We plot the analysis results of Du X  X  key establishment scheme [5], Du X  X  location-aware key management scheme [9], Huang X  X  scheme [10], and our scheme in Figure 7. As shown in the figure, our scheme show a nice threshold property that the adversary has to compromise as much as 4000 nodes to compromise links between uncompromised nodes. Eschenauer and Gligor [2] presents a key management scheme for sensor net-works based on probabilistic key pre-deployment. Chan et al [3] extend this scheme and present three new mechanisms for key establishment based on the framework of probabilistic key predeployment. Du [5]proposes a symmetrical-matrix-based key establishment scheme. Andlater,heproposesamethod[9]to improve the Eschenauer-Gligor scheme using priori deployment knowledge. Liu [8] also proposes location-based key management scheme, which is based on par-titioned grids and bivariate polynomials. Huang [10] uses location information and extends Du X  X  work [5]. Huang X  X  key management scheme shows quite well resilience against node replication attacks.

Recently, there a number of studies inve stigating the impl ementation of PKC (Public Key Cryptography) in sensor networks [12,13]. Watro [12] presents TinyPK which allow authentication and key agreement between a sensor net-work and a third party. Du [13] proposes a scheme to authentication Public Keys with symmetric key operations. Due to constrains of power, communication, and computation capabilities, key management has become a hot topic of studies in security of sensor networks. In this paper, we present three deployment models and the corresponding key management scheme. To the best of our knowledge, our scheme is a first attempt to discuss the correlation between deployment models and key management. Our approaches are proved to be flexible in deployment, resilient in security and support high inter-group (inter-grid) connectivity.

