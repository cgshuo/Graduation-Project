 Named entities (NEs) have received much atten-tion over the last two decades (Nadeau and Sekine, 2007), mostly focused on recognizing the bound-aries of textual NE mentions and classifying them as, e.g., Person, Organization or Location. How-ever, references to entities in the real world are of-ten ambiguous: there is a many-to-many relation between NE mentions and the entities they denote in the real world. For example, Norfolk may refer to a person,  X  X eter Norfolk, a wheelchair tennis player X , a place in the UK,  X  X orfolk County X , or in the US,  X  X orfolk, Massachusetts X ; conversely, one entity may be known by many names, such as  X  X at Stevens X ,  X  X usuf Islam X  and  X  X teven Geor-giou X . The NED task is to establish a correct map-ping between each NE mention in a document and the real world entity it denotes. Following most re-searchers in this area, we treat entries in a large knowledge base (KB) as surrogates for real world entities when carrying out NED and, in particu-lar, use Wikipedia as the reference KB for dis-ambiguating NE mentions. NED is important for tasks like KB population, where we want to ex-tract new information from text about an entity and add this to a pre-existing entry in a KB; or for in-formation retrieval, where we may want to cluster or filter results for different entities with the same textual mentions.

The main hypothesis in this work is that differ-ent NEs in a document help to disambiguate each other. The problem is that other textual mentions in the document are also ambiguous. So, what is needed is a collective disambiguation approach that jointly disambiguates all NE textual mentions.
In our approach we model each possible can-didate for every NE mention in a document as a distinct node in a graph and model candidate co-herence by links between the nodes. We call such graphs solution graphs . Figure 1 shows an exam-ple of the solution graph for three mentions  X  X  X ,  X  X  X , and  X  X  X  found in a document, where the can-didate entities for each mention are referred to us-ing the lower case form of the mention X  X  letter to-gether with a distinguishing subscript. The goal of disambiguation is to find a set of nodes where only one candidate is selected from the set of entities associated with each mention, e.g. a 3 , b 2 , c 2 .
Our approach first ranks all nodes in the solu-tion graph using the Page-Rank algorithm, then re-ranks all nodes by combining the initial confidence and graph ranking scores. We consider several dif-ferent measures for computing the initial confi-dence assigned to each node and several measures for determining and weighting the graph edges. Node linking relies on the fact that the textual por-tion of KB entries typically contains mentions of other NEs. When these mentions are hyper-linked to KB entries, we can infer that there is some rela-tion between the real world entities corresponding to the KB entries, i.e. that they should be linked in our solution graph. These links also allow us to build up statistical co-occurrence counts between entities that occur in the same context which may be used to weight links in our graph.

We evaluate our approach on the AIDA dataset (Hoffart et al., 2011). Comparison with the baseline approach and some state-of-the-art ap-proaches shows our approach offers substantial improvements in disambiguation accuracy. In 2009, NIST proposed the shared task challenge of Entity Linking (EL) (McNamee and Dang, 2009). EL is a similar but broader task than NED because NED is concerned with disambiguating a textual NE mention where the correct entity is known to be one of the KB entries, while EL also requires systems to deal with the case where there is no entry for the NE in the reference KB. Ji et al. (2011) group and summarise the different ap-proaches to EL taken by participating systems.
In general, there are two main lines of approach to the NED problem. Single entity disambigua-tion approaches (SNED) , disambiguate one entity at a time without considering the effect of other NEs. These approaches use local context textual features of the mention and compare them to the textual features of NE candidate documents in the KB, and link to the most similar. The first ap-proach in this line was Bunescu and Pasca (2006), who measure similarity between the textual con-text of the NE mention and the Wikipedia cate-gories of the candidate. More similarity features were added by Cucerzan (2007) who realized that topical coherence between a candidate entity and other entities in the context will improve NED ac-curacy and by Milne and Witten (2008) who built on Cucerzan X  X  work. Han and Sun (2011) combine different forms of disambiguation knowledge us-ing evidence from mention-entity associations and entity popularity in the KB, and context similarity.
The second line of approach is collective named entity disambiguation (CNED) , where all men-tions of entities in the document are disambiguated jointly. These approaches try to model the interde-pendence between the different candidate entities for different NE mentions in the query document, and reformulate the problem of NED as a global optimization problem whose aim is to find the best set of entities. As this new formulation is NP-hard, many approximations have been proposed. Alhelbawy and Gaizauskas (2013) proposed a se-quence dependency model using HMMs to model NE interdependency. Another approximation uses a mixture of local and global features to train the coefficients of a linear ranking SVM to rank dif-ferent NE candidates (Ratinov et al., 2011). Shi-rakawa et al. (2011) cluster related textual men-tions and assign a concept to each cluster using a probabilistic taxonomy. The concept associated with a mention is used in selecting the correct en-tity from the Freebase KB.

Graph models are widely used in collective ap-terdependencies, while different methods may be used for disambiguation. Han (2011) uses local dependency between NE mention and the can-didate entity, and semantic relatedness between candidate entities to construct a referent graph, proposing a collective inference algorithm to in-fer the correct reference node in the graph. Hoffert (2011) poses the problem as one of finding a dense sub-graph, which is infeasible in a huge graph. So, an algorithm originally used to find strongly inter-connected, size-limited groups in social media is adopted to prune the graph, and then a greedy al-gorithm is used to find the densest graph.

Our proposed model uses the Page-Rank (PR) algorithm (Page et al., 1999), which to our knowl-edge has not previously been applied to NED. Xing and Ghorbani (2004) adopted PR to consider the weights of links and the nodes X  importance. PR and Personalized PR algorithms have been used successfully in WSD (Sinha and Mihalcea, 2007; Agirre and Soroa, 2009). In this section we discuss the construction of a graph representation that we call the solution graph . The input is a document containing pre-tagged NE textual mentions. The solution graph is an undirected graph G = ( V, D ) where V is the node set of all possible NE candidates for differ-ent textual mentions in the input document and D is the set of edges between nodes. Edges are not drawn between different nodes for the same men-tion. They are drawn between two entities when there is a relation between them, as described be-low. Each candidate has associated with it an ini-tial confidence score, also detailed below.
Assume the input document D has a set of mentions M = { m 1 , m 2 , m 3 , ..., m k } . For each m i  X  M , we rank each candidate entity, where the list of candidates for a mention m i is E i = { e i, 1 , e i, 2 , ..., e i,j } . The graph nodes are formu-lated as a set V = { ( m i , e i,j ) |  X  e i,j  X  E i ,  X  m M } . Nodes are represented as ordered pairs of textual mentions and candidate entities, since the same entity may be found multiple times as a can-didate for different textual mentions and each oc-currence must be evaluated independently. 3.1 NE Candidate Generation The first step in constructing a solution graph is to find all possible candidates for each NE mention in the query document. For each such mention the KB entry titles are searched to find all entries to which the mention could refer. This includes en-tries with titles that fully or partially contain the query mention and those that could be an acronym of the query mention. These candidate entries are paired with their textual mentions in the document to become nodes in the solution graph. 3.2 Initial Confidence Initial confidence IConf ( e i,j ) is an independent feature of the NE candidate regardless of other candidates in the document. This confidence may be calculated locally using the local mention con-text, or globally using, e.g., the Freebase popular-ity score for the KB entry (Bollacker et al., 2008). Local NE Candidate Confidence: The local confidence is computed by a similarity measure between the NE mention in the query document and the KB entry of the candidate entity. We pro-pose four different measures to be used in the dis-ambiguation phase. cos: The cosine similarity between the named en-tity textual mention and the KB entry title. jwSim: While the cosine similarity between a tex-tual mention in the document and the candidate NE title in the KB is widely used in NED, this similarity is a misleading feature. For example, the textual mention  X  X ssex X  may refer to either of the following candidates  X  X ssex County Cricket Club X  or  X  X anbury, Essex X , both of which are re-turned by the candidate generation process. The cosine similarity between  X  X ssex X  and  X  X anbury, Essex X  is higher than that between  X  X ssex X  and  X  X ssex County Cricket Club X , which is not helpful in the NED setting. We adopted a new mention-candidate similarity function, jwSim , which uses Jaro-Winkler similarity as a first estimate of the initial confidence value for each candidate. This function considers all terms found in the candidate entity KB entry title, but not in the textual mention as disambiguation terms. The percentage of dis-ambiguation terms found in the query document is used to boost in the initial jwSim value, in addi-tion to an acronym check (whether the NE textual mention could be an acronym for a specific can-didate entity title). Experiments show that jwSim performs much better than cos . ctxt: The cosine similarity between the sentence containing the NE mention in the query document and the textual description of the candidate NE in the KB (we use the first section of the Wikipedia article as the candidate entity description). Global NE Candidate Confidence: Global confidence is a measure of the global importance of the candidate entity. Entity popularity has been used successfully as a discriminative feature for NED (Nebhi, 2013). Freebase provides an API to get an entity X  X  popularity score ( FB ), which is computed during Freebase indexing. This score is a function of the entity X  X  inbound and outbound confidence is not normalized across all NEs be-cause each score is calculated independently. Ini-tial confidence scores of all candidates for a single NE mention are normalized to sum to 1. 3.3 Entity Coherence Entity coherence refers to the real world related-ness of different entities which are candidate inter-pretations of different textual mentions in the doc-ument. It is not based on context, so it is always the same regardless of the query document. Co-herence is represented as an edge between nodes in the solution graph. We used two measures for coherence, described as follows: Ref: Uses the Wikipedia documents for both en-tity candidates to check if either document has a link to the other. This relation is directed, but we assume an inverse relation also exists; so this rela-tion is represented as undirected.
 JProb: An estimate of the probability of both entities appearing in the same sentence. Wikipedia documents are used to estimate this probability, as shown in (2), where S ( e ) is the set of all sentences that contain the entity e and S the set of sentences containing any entity references.
 The solution graph contains all possible candi-dates for each NE mention in the document. Each candidate has an initial confidence, with some connected by association relations. The disam-biguation phase ranks all nodes in the solution graph and selects the best from the candidate list for each NE textual mention. The process of dis-ambiguation consists of three steps. The first step is initial graph ranking, where all nodes are ranked according to the link structure. The second step is to re-rank the nodes by combining the graph rank with the initial confidence. The highest rank is not always correct, so in the third step a selection al-gorithm is used to choose the best candidate. Graph Ranking: The links between different candidates in the solution graph represent real world relations. These relations may be used to re-liably boost relevant candidates. All nodes in the graph are ranked according to these relations using PR. Initial confidence is used as an initial rank for the graph nodes, while entities X  coherence mea-sures are used as link weights which play a role in distributing a node X  X  rank over its outgoing nodes. Candidate Re-ranking: A problem with Page-Rank for our purposes is the dissipation of initial node weight (confidence) over all outgoing nodes. The final rank of a node is based solely on the im-portance of incoming nodes and the initial confi-dence play no further role. In our case this is not appropriate, so the final rank for each mention is determined after graph ranking, by combining the graph rank with the initial confidence.
 Let us refer to the graph rank of a candidate as P R ( e i ) . Two combination schemes are used: Named Entity Selection: The simplest ap-proach is to select the highest ranked entity in the list for each mention m i according to equation 5, where R could refer to R m or R s . However, we found that a dynamic choice between the re-ranking schemes, based on the difference between the top two candidates, as described in algorithm 1 and indicated by e g ,works best. The underlying intuition of this algorithm is that a greater differ-ence between the top ranks reflects more confident discrimination between candidates. So, the two combination schemes assign different ranks to the candidates and the algorithm selects the scheme which appears more discriminative. CoNLL 2003 data for NER tagging. All mentions are manually disambiguated against Wikipedia (Hoffart et al., 2011). This dataset contains 1393 documents and 34,965 annotated mentions. We only consider NE mentions with an entry in the Wikipedia KB, ignoring the 20% of query men-tions (7136) without a link to the KB, as Hoffart did. Micro-averaged and macro-averaged accu-racy are used for evaluation. In this context micro-averaged accuracy corresponds to the propor-tion of textual mentions correctly disambiguated while macro-averaged accuracy corresponds to the proportion of textual mentions correctly disam-biguated per entity, averaged over all entities. 5.1 Results Initially, we evaluated the performance of two baselines. One is a setup where a ranking based solely on different initial confidence scores is used for candidate selection, i.e. without using PR. In this setup a ranking based on Freebase popularity does best, with micro-and macro-averaged accu-racy scores of 80.55% and 78.09% respectively. This is a high baseline, close to the state-of-the-art. Our second baseline is the basic PR algorithm, where weights of nodes and edges are uniform (i.e. initial node and edge weights set to 1, edges be-ing created wherever REF or JProb are not zero). Micro and macro accuracy scores of 70.60% and 60.91% were obtained with this baseline.

To study graph ranking using PR, and the con-tributions of the initial confidence and entity co-herence, experiments were carried out using PR in different modes and with different selection tech-niques. In the first experiment, referred to as P R I , initial confidence is used as an initial node rank for PR and edge weights are uniform, edges, as in the PR baseline, being created wherever REF or JProb are not zero. Table 2 shows the results both before re-ranking, i.e. using only the P R score for rank-ing, and after re-ranking using the dynamic selec-tion scheme e g . When comparing these results to the PR baseline we notice a slight positive effect when using the initial confidence as an initial rank instead of uniform ranking. The major improve-ment comes from re-ranking nodes by combining initial confidence with PR score.

In our second experiment, P R C , entity coher-ence features are tested by setting the edge weights to the coherence score and using uniform ini-tial node weights. We compared JProb and Ref edge weighting approaches, where for each ap-proach edges were created only where the coher-ence score according to the approach was non-zero. We also investigated a variant, called JProb + Ref, in which the Ref edge weights are normalized to sum to 1 over the whole graph and then added to the JProb edge weights (here edges result wher-ever JProb or Ref scores are non-zero). Results in Table 3 show the JP rob feature seems to be more discriminative than the Ref feature but the com-bined Jprob + Ref feature performs better than each separately, just outperforming the baseline. We used the best initial confidence score (Free-base) for re-ranking. Again, combining the initial confidence with the PR score improves the results.
Finally, Table 4 shows the accuracy when using different combinations of initial confidence and entity coherence scores just in the case when re-ranking is applied. Here the jprob + ref s com-bination does not add any value over jprob alone. Interestingly using initial confidence with differ-entially weighted edges does not show any ben-efit over using initial confidence and uniformly weighted edges (Table 2).

To compare our results with the state-of-the-art, we report Hoffart et al. X  X  (2011) results as they re-implemented two other systems and also ran them over the AIDA dataset. We also compare with Al-helbawy and Gaizauskas (2013) and Shirakawa et al. (2011) who carried out their experiments using the same dataset. Table 1 presents a comparison between our approach and the state-of-the-art and shows our approach exceeds the state-of-the-art. Futhermore our approach is very simple and direct to apply, unlike Hoffart et al. X  X  and Shirakawa et al. X  X  which are considerably more complex. Also, our approach does not need any kind of training, as does the Alhelbawy approach. Our results show that Page-Rank in conjunction with re-ranking by initial confidence score can be used as an effective approach to collectively dis-ambiguate named entity textual mentions in a doc-ument. Our proposed features are very simple and easy to extract, and work well when employed in PR. In future work we plan to explore enriching the edges between nodes by incorporating seman-tic relations extracted from an ontology.
