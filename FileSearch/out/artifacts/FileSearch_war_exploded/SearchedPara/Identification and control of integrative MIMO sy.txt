 1. Introduction
Water is the most valuable asset in the world and the manage-ment of this resource is a constant source of research. Taking into account that Agriculture is by far the largest consumer of fresh-water (about 70% of all freshwater withdrawals go to irrigated agriculture, Water Report, 2009 ), and that the water distribution is made through irrigation channels, where water loss occurs, research focused on improving the management of irrigation channels is of great interest ( Schuurmans, 1997 ).

Different approaches to the modelling of irrigation channels have been used. Initially, hydraulic engineers used the
Saint-Venant equations to model the water distribution ( Schuurmans et al., 1999; Weyer, 2001 ). The Saint-Venant equa-tions are nonlinear hyperbolic partial differential equations, which should be linearized near a steady flow regime to apply the linear Control Theory ( Schuurmans et al., 1999 ). It is quite clear that all the system dynamics are not modelled correctly with a linearized model and that the model parameters may experience changes through time, but this does not prevent the controllers based on these models from being effective in practice.
Oneissuethatdifficultiesthecontrolsystemdesignisthetime delay, specially when it is unknown or time-varying. The delay can be due to three factors. First, the time it takes for the water to flow from the upstream to the downstream gate; generally, this is a large delay. The other two factors are the distance and the signal transport medium between the actuator and the controller. Usually, these delays are small. Moreover, a variation in the delay value can cause a performance degradation of the closed-loop for a non-adaptive control loop and it can even make th e system unstable. The variation of the time delay is a controversial issue. On the one hand, various studies have shown that the irrigation channels can present large time-varying delays when their discharge regimes change several works have shown that variation in the time delay does not affect the behaviour of irrigation channels ( Cantoni et al., 2007; Weyer, 2008 ). This disagreement can be due to the different structures, physical conditions, e nvironment and sizes of the irriga-tion channels. Hence, the delay may n ot affect a particular irrigation channel but may have a large influence on another with different structure. Thus, under this situ ation, a general control scheme should include a strategy that takes into account the potential influence of time delay and its variations.

Several methodologies have been used for the control of irrigation channels. For instance, fuzzy control ( Begovich et al., 2007; Durdu, 2006 ), model predictive control (MPC) ( Negenborn et al., 2009 ), optimization methods ( Garcia et al., 1992 ), neural network ( O  X  mer Faruk, 2010 ), robust control ( Feliu-Batlle et al., 2009; Malaterre and Khammash, 2003 ), and adaptive control ( Bolea et al., 2009; Gomez et al., 2002 ), among others. However, the most widely used solutions are probably the classical PID controllers ( Malaterre et al., 1998 ) and those based on the Smith Predictor and its variations ( Feliu-Batlle et al., 2009, 2009; Litrico and Georges, 1999 ). Control strategies based on PID controllers have been used in a great variety of situations. Nevertheless, it has been shown that PID controllers exhibit a bad behaviour when the system has large time-varying delays ( Malaterre et al., 1998 ), and the same thing happens to the Smith Predictor (SP), for which the nominal performance degrades under delay uncer-tainty. Therefore, the basic SP is not suitable when the delay is unknown, even slightly ( Ibeas et al., 2008 ). Hence, time delay is generally a key point in the optimal and safe operation of irrigation channels.

Thus, in this paper we address the control of irrigation channels focusing on the delay identification. This is an adequate starting point since the closed-loop is indeed quite robust to uncertainties in the rational component (originated by the linear-ization of the Saint-Venant equations) but potentially sensitive to delay uncertainty ( Liu et al., 2003; Liu and Gao, 2010 ). Conse-quently, delay identification is crucial to preserve the closed-loop stability and optimal operation. This is a scenario that can be encountered in irrigation channels control since, as commented before, changes in the discharge regime or changing friction conditions causes delay variations. Hence, a control scheme able to identify the external delay is presented in this paper and applied to irrigation channels control.
 In this paper, the optimization problem is solved using a
Pattern Search Method (PSM) which yields an estimation of the time delays of the system. The PSM has been used in Mathematics and Optimization Theory ( Bogani et al., 2009; Liu and Zhang, 2006 ), but its use in Control is rather limited, existing very few works using it ( Negenborn et al., 2009 ). Therefore, the application of PSM to irrigation channel control is one of the main contribu-tions of the paper.

The PSM is implemented through a multi-model scheme ( Herrera et al., 2011; Ibeas and de la Sen, 2006 ). The multi-model scheme contains a battery of models which are updated through time using a modification rule. Each model po ssesses the same rational compo-nent but a different value for the delay. The algorithm compares the mismatch between the actual system and each model and selects, at each time interval, the one that best describes the behaviour of the real system, providing an online delay estimation, while simulta-neously ensuring closed-loop stability. Notice that the proposed approach can be a particularization of the Unfalsified method proposed by Safonov and Tsao (1997) , where the Pattern Search method in combination with the multi-model scheme provides special formulations of the upgrading algorithms.

The present approach is based on the modified Smith Predictor (MoSP) ( Majhi and Atherton, 1999 ), but it can be implemented on any other delay compensation scheme (DCS). The only requirement is that the delay is bounded and decoupled from the controller design procedure. The proposed PSM is framed in the General Pattern Search
Method (GPSM) proposed by Torczon (1997) .Consequently,the proposed method inherits the convergence properties of the GPSM, analytical results are presented to constant delays, while simulation results have been extended to time-varying ones showing the potential and applications of the proposed approach.
 made in Section 2 . The multi-model scheme and its stability analysis are presented in Section 3 .In Section 4 simulation examples are shown. Finally, the conclusions are given in
Section 5 . 2. Problem formulation irrigation channels is necessary to apply linear control Theory. The linear model can be obtained from linearization of
Saint-Venant equations near a steady flow regime. In this way and after a system reduction process, it is possible to obtain first and second order plus delay models. A complete explanation about how to linearize the Saint-Venant equations near a steady flow regime can be found in Baume et al. (1998) .
 by Weyer (2001) , which has been used in different works ( Cantoni et al., 2007; Ooi et al., 2005; Ooi and Weyer, 2008;
Weyer, 2008 ). Despite this linear model being a simple model (pure integrator plus delay), this presents major difficulties for controller design compared to the use of first or second-order systems with open-loop stable poles and input delays, since such models are always open-loop stable. A brief explanation of this model is given below. 2.1. Model description located along the channel as shown in Fig. 1 . Necessary measures for the control system are the water levels upstream of each gate number of total pools. The height of water above the gate is called the head over the gate w g i , and it is computed from the upstream water level and the gate position as w g i  X  y i p i . The stretch of a channel between two gates is referred to as a pool. Along the channel there are offtakes to farms and secondary channels. In this work they are treated as disturbances d i .
 dV  X  t  X  where V is the volume of the pool, Q in and Q out are the inflows and outflows, respectively. For an overshot gate, Q in and Q out written as ( Bos, 1978 ): be determined by system identification experiments. Assuming that the volume in a pool is proportional to the water level ( Bos, 1978 ), the water level can be expressed as the upstream gate, and w g i  X  1  X  t  X  is the head over the downstream in pool i .

Setting u i  X  t  X  X  w 3 = 2 g
Laplace transform to (3) with zero initial conditions, the transfer function model for pool i of the irrigation channel can be expressed as y  X  s  X  X 
Modelling the n pools in the same way, yields the following complete integrative MIMO model of the irrigation channel:
Y  X  s  X  X  P  X  s  X  U  X  s  X  D  X  s  X  X  5  X  where Y  X  X  y 1 , y 2 , ... , y n  X  T , U  X  X  u 1 , u 2 , ... , u w  X  T and with w g n  X  1 being the head over the downstream gate of pool  X  n  X  1  X  . Notice that U is the control signal of a linearized system, and hence, denotes the variation around the operation point.
Therefore, their values can be positive or negative, as it is shown in Section 4.3 . In what follows, we will simplify the system model by setting D  X  s  X  X  0. This allows us to focus on the delay estimation problem. Note that the disturbance response is determined by the delay-free controller design, which is not the purpose of this article. P ( s ) is the n n transfer matrix:
P  X  s  X  X 
As it will be shown later, the proposed scheme needs that the time delay and the plant parameters are decoupled. Using the
Schur (component-wise) product ( Bernstein, 2005 ), denoted in the following by , system (6) can be expressed as
P  X  s  X  X  P df  X  s  X  H s  X  s  X  X  7  X  where P df is the delay-free factor:
P  X  s  X  X  and H s ( s ) is the pure delay term:
H  X  s  X  X  diag  X  e h i s  X  X  9  X  where the values of the delays can be condensed into the matrix H  X  diag  X  h i  X  with i  X  1 ; 2 , ... , n .
 The following assumptions will be made about the system (7):
Assumption 1. The rational transfer function matrix P df  X  s  X  is known.

Assumption 2. The delay between each pair of input/output variables lies in a known compact interval. That is, there exist two known matrices H  X  diag  X  h i  X  , H  X  diag  X  h i  X  A R h r h i r h i for i  X  1 ; 2 , ... , n .
 Assumption 3. The delays are supposed to be constant. &amp;
Assumption 1 is feasible since the model parameters can be calculated or identified. Furthermore, the main objective of this assumption is to establish the theoretical results for the delay identification which is the main purpose of this paper, since it focuses on the identification of the delay. In a general context, some uncertainty can also be accepted in the rational component, designing a robust control to mitigate it. This more general context will be shown in the simulation example. Assumption 2 will be used in the algorithm proposed to identify the delay in Section 3 and is feasible in this problem since the bounds depend of the physical parameters which are known, and therefore, can be calculated. Concerning Assumption 3 , the aim of the paper is to identify the constant delays. However, the proposed algorithms are flexible enough to be adapted to time-varying delays. Some simulation results in Section 4 will show the applicability of the method to the time-varying case.

Thus, the problem under study is formulated assuming a multivariable plant with known integrative rational part and uncertain (but bounded) delay matrix. Furthermore, the control scheme proposed in this paper can be applied to any plant model satisfying Eq. (7), not only to the particular model presented here. Thus, the following condition is enough for the application of the proposed scheme: Remark 1. The proposed scheme is applicable to any transfer function matrix P ( s ), being factorizable via a Schur product as (7). &amp;
To control the irrigation channel, we will adopt the delay compensation scheme proposed by Majhi and Atherton (1999) . 2.2. Modified Smith Predictor
The MIMO version of the MoSP ( Majhi and Atherton, 1999 )is shown in Fig. 2 . ^ P df  X  s  X  ^ H s  X  s  X  and P df  X  s  X  H functions of the plant model and the actual plant, respectively.
This structure has three controllers which are designed for different objectives: prestabilise P df .
 tracking.
 rejection.
 When G c 1  X  0 and G c 2  X  0 , the standard Smith Predictor for stable systems is obtained. In the general case, compensators G c 1 can be designed using any robust control technique to deal with possible uncertainties in the rational component of the system. It is to emphasize that the focus of this paper is not the controller design.
 Note that a nominal delay matrix value ^ H s has been used in
Fig. 2 (instead of the actual value for the delay) to design the compensator scheme.

Thus, the Laplace transform of the control signal u ( t ) is given by (we omit for simplicity the argument s , in the next equations):
U  X  X  X  I  X  X  G c 1  X  G c  X  ^ P df G c ^ P df ^ H s  X  X  I  X  G where R is the Laplace transform of the reference signal r ( t ). For this control law, the closed-loop response is given by
Y  X  X  P df H s  X  X  X  I  X  X  G c 1  X  G c  X  ^ P df G c ^ P df ^ H
If Assumption 1 holds (the model perfectly matches the plant dynamics ^ P df  X  P df , i.e. we focus on the delay uncertainty effect) and ^ H s  X  H s , then (11) reduces to Y  X  X  P df H s  X  X  I  X  X  G c 1  X  G c  X  P df  X  1 G c R  X  12  X 
It can be seen how the system with internal delay that appears in Eq. (11), becomes a system with external delay in Eq. (12).
Therefore, this is precisely a topology that decouples the delay of the control strategy, making the system easier to control since compensators are designed regardless of the delay. Nevertheless, in the presence of an error between the plant delay and the nominal delay used in the control loop, that is, ^ H s a H , the dependence on the delays closed-loop transfer function is given by (11), that becomes dependent on the delay and poten-tially unstable. Indeed, in spite of (11) being stable, the closed-loop system behaviour can be degraded from the ideal one given by (12).

For example, Fig. 3 shows the water level for pools i , i 1 and i 2. At time t  X  0 min., the set point for the water level in pool i is augmented from 21.15 to 21.2 m. Simulations where the model delay varies from 0 to 7 30% of the actual one were performed. It can be seen that the water level in pool i becomes unstable for an uncertainty greater than 30%.

Thus, the closed loop behaviour is affected by the accuracy in the knowledge of the delay in the MoSP. Additionally, the fact of being considering a multivariable system, where the inputs and outputs signals are coupled, makes an error in the delay predic-tion in one channel propagate to all outputs. Under these circumstances, one way to make the MoSP robust to variations of the delay, is to complement this scheme with the proposed multi-model structure, as shown in the following subsection. 2.3. Multi-model scheme a battery of models, an objective function, a switching logic and a switching mechanism. Each one of the models is associated with a different delay matrix, ^ H 1  X  s  X  , ^ H 2  X  s  X  , ... , each model in the closed-loop system. Later, the switching logic chooses which model is to be used in the next time interval based on the objective function. Hence, in each time interval the control law uses a different delay value, making possible that any possible deviation from the delay with respect to actual plant delay can be mitigated through switching to another more appropriate model.
 models can be excessively large to achieve a prescribe closed-loop performance. For this reason, a set of time-varying models is used in this work. The way in which the models are update and the delay matrix is identified consists of formulating the identifica-tion problem as an optimization problem solved online by a
Pattern Search Method (PSM). Since this application is a novelty, a brief outline of the method is performed in the following subsection. 2.4. Generalized pattern search method (GPSM) tive-free unconstrained optimization (minimization in this case) of continuously differentiable functions J : R n -R . the iteration x k to obtain a number of trial points x i k each iteration k . The objective function J to be optimized is evaluated on these trial points through a series of exploratory moves , which define a way in which the trial points are evaluated, and the obtained values are compared with J  X  x k  X  . Then, the trial step s n k associated with minimum value of J  X  x k  X  s i chosen to generate the next estimate of the patterns iterates is used along of this paper to frame the notation properly. The trial steps s k i are generated through a step length parameter
D k A R n  X  which is also updated through time depending on the value of x k  X  1 . The evolution of D k establishes the convergence properties of the algorithm. In the following subsection, a more in-depth presentation of all these elements is given. 2.4.1. The patterns the new trial points. Formally, to define a pattern two elements are necessary: a basis matrix B and a generating matrix C are used to determine the possible directions of the trial steps which will configure the next pattern. The basis matrix can be any nonsingular matrix B A R n n . Frequently, for practical purposes
B  X  I . The generating matrix is a matrix C k A Z n p , where p 4 2 n and basically contains the directions in the space R n on which the trial points are going to be generated. The structure of matrix C given in the following equation ( Torczon, 1997 ):
C  X  X  M k ^ M k ^ L k  X  13  X 
Usually, the matrix C k is composed of a set of search directions defined as the columns of a matrix M k A Z n n along with its opposites, M k and a matrix L k A Z n  X  p 2 n  X  which contains possi-ble columns that do not require opposite values containing at least one column being identically zero to ensure that the original of M k and L k are determined in function on the size of the domain of J which in this case is n .

A pattern is then defined by the columns of the matrix P k
The length of the direction vectors is modulated through the step-size parameter D k . So, the final trial step is formed by the columns of the following equation: s  X  D k Bc i k  X  14  X  (14) that D k serves as a step length parameter since acts modulating the modulus (length) of s k i . At iteration k , it defines measure each pattern depends on the exploratory moves selected, which will be explained below. 2.4.2. The exploratory moves
Pattern search methods proceed by evaluating the value of the objective function J on each trial point in a certain way before computing x k  X  1 . To allow the broadest possible choice of explora-tory moves (and still maintain the properties required to prove convergence for the PSM) there are two requirements on the exploratory moves. These requirements are given in the following Hypotheses ( Torczon, 1997 ): Hypotheses 1. s k A D k P k D k BC k .

Hypotheses 2. If 0 r min f f  X  x k  X  s i k  X  , s i k A D k x  X  x k  X  s n k . &amp;
The choice of exploratory moves must, therefore, ensure two things: Concerning
Hypotheses 1 Concerning
Hypotheses 2 2.4.3. The generalized PSM: general operation
A GPSM has the following operation. First, the objective function is evaluated in each trial points x k  X  s i k , and choose the value s n k associated to the minimum of r k  X  f  X  x k  X  s to r k o 0. Otherwise x k  X  1  X  x k . This is the reason why L must contain a zero column. Finally the GPSM proceeds to update the values of C k and D k to generate a new sequence of exploratory moves. The aim of the updating for D k is to force r i k  X  f  X  x f  X  x k  X  o 0. An iteration with r k o 0 is successful; otherwise, the iteration is unsuccessful. In Section 3.3 , complete description of the algorithm applied to our concrete problem at hand is devel-oped and contributes the understanding of the operation of the PSM.

The aim of the article is at the formulation of an identification architecture being able of estimating the irrigation channel delays (9), provided that the a priori knowledge about the external delays between the different input and output channels is con-fined to a matrix interval as stated in Assumption 2 . Later, the identification architecture is used to implement an adaptive controller for system (7). The algorithms, based on a multi-model structure, are described in the following sections. 3. Proposed control scheme The basic structure of the proposed scheme is depicted in Fig. 5 . As it can be seen, the MoSP is complemented with a PSM. The PSM is conformed with two elements: an objective function which evaluates the potential behaviour of each model and a switching rule which monitors periodically this index and decides which model is the best to generate the control signal, previous work in this direction can be found in Duviella et al. (2005) . This methodology can be framed as a special case of GPSM, because the minimization is performed on real-valued functions with real arguments. Also, the PSM in combination with the multi-model scheme can to be a particular formulation of the Unfalsified method proposed in Safonov and Tsao (1997) , where a general framework is proposed but does not include ways to identify the models. In the following subsections the different elements of the presented architecture are considered in detail. 3.1. Objective function
The first element of the proposed scheme is an objective function aimed at evaluating the behaviour of each delay model ^
H (the set of models is defined in Section 3.2 ). The suggested objective function is  X  ^ H , x 0 , t  X  X  for j  X  1 ; 2 , ... , 2 n  X  1, where e  X  j  X   X  t , x 0  X  X  y  X  error, y  X  t  X  is the vector output of the plant at the instant t  X  t and hence, so does (15). This dependence is expressed in (15) implicitly as dependence with t. x 0 denote the initial conditions of the system. Also, Q is a symmetric positive definite matrix. Hence, (15) is the integral of a positive-definite quadratic form and, therefore, its global minimum value is zero. In Ibeas and de la Sen (2006) and Ibeas et al. (2004) , the reader can find alternative figures of merit that can be generalized to the multivariable case straightforwardly. On the other hand, the integration takes place in the time interval in which all the models act simultaneously without being modified, this is the so-called residence time T .

The residence time is a positive number large enough be able to distinguish between the different delay values ^ H , but as shown later, its concrete value does not modify the convergence proper-ties of the algorithm. Also it can be seen that the objective function (15) differs of the proposed by Torczon (1997) because this is time-dependent. However, this is not a problem to frame the present approach into the GPSM as will be explained in Section 3.4 .

Remark 2. In Section 3.5 . it is demonstrated that the closed-loop system response is stable and therefore the initial conditions associated to the output tend exponentially to zero, making the influence of x 0 in (15) negligible. &amp;
The Laplace transform of the output error E  X  j  X   X  Y ^ Y by E  X  X  P df H ^ P df ^ H  X  j  X   X  U  X  16  X 
It is readily seen from (16) that the error is zero when ~
H  X  H ^ H  X  0, that is, when the delays of the i th model are equal to the real ones provided Assumption 1 holds. According to this fact, the search of the minimum of the quadratic function (15) leads to an estimation of the actual delay matrix. Thus, the identification problem converts into an optimization one. It is important to notice that (15) is a continuously differentiable function, since it is defined as the square of the subtraction of two functions matrix that are continuously differentiable as can be proved making the partial derivate of (11) with respect to which leads to a continuous function matrix. Objective function at the end that this formulation will lead to the optimization being able to find a global optimum. 3.2. The patterns
The proposed architecture is composed of patterns, which are the directions along the nominal delay model ^ H k  X  diag  X  .

They are modified to obtain the delay values implemented in the delay models. These trial points are time-varying and automati-cally adjusted by the algorithm as corresponds to the PSM. Defining the trial steps:
D h k  X  D k BC for p  X  1 ; 2 , ... , N m and l  X  1 ; 2 , ... , n , where N models, the basis matrix B  X  I , the constant matrix
C k  X  C one in the diagonal position l th and zeros elsewhere),
D the following form: ^  X  ^
It can be seen that the trial points are generated using the nominal model ^ H k and the addition of the trial steps which in turn are generated by the length parameter D k . Thus, all space of possible delays can be explored and the search is dense. Note that the zero state (no changes in the nominal model), both positive and negative directions to change ^ H k should all be included as explained in the definition of D k in the next subsection. In this way, it is ensured that all the search space are evaluated. 3.3. Proposed pattern search method the residence time the objective function. And, selects the nominal delay which is the best estimation of the real one. The nominal delay is used within each time interval to generate the control law. The initial trial point is selected by the designer as ^
H nom k  X  1 and D k  X  1 using Assumption 2 . From this moment onwards, the PSM can be expressed formally as the Algorithm 1 (where the % symbol denotes comments).

Algorithm 1. MIMO delay identification based on PSM. with nominal model using the performance index (15). In this way the element associated with the lowest value of the objective function is obtained, and this represents the best delay. Next, the new trial points are generated based on D k , which is given by: where the reduction factor matrix is given by:
G  X 
Z k G 0 ,  X  22  X  for 0 o Z o 1. Furthermore, lim k -1 G k  X  0. Notice that since D contains positive and negative values, the trial points (18) and (20) are defined as additions and subtractions to the nominal model.
These positive and negative values along with the zero value in the central position of (21) and an adequate value for N m and G to make a dense search in the delay space (i.e. the complete search space can be explored to find the minimum of the objective function (15)).

The models are not equally spaced in the delay space since the mesh is more refined near the nominal delay. To show this issue, the separation between consecutive patterns can be calculated according to Eq. (21). Thus, consider only the positive values for
D (since the separation for the negative part is identical due to two consecutive patterns is: dD k  X  l  X  1  X  X  2 G k l 2 G k with l  X  0 ; 1 , ,  X  X  N m 1  X  = 2  X  1. Notice that dD k increases as l increases, which means that the patterns are more separated as they get far from the nominal model.

In this approach the values of Z , G 0 and N m are fixed by the designer, in relation with the desired convergence time, the cycle time and architecture of the processor.

A complexity analysis of the identification scheme is now carried out. The time-complexity of each line of the for-cycle (lines 10 X 19) of Algorithm 1 has been commented after % symbol.
The total number of operations, N o , at each sampling-actuation cycle is given by the sum of all those costs:
N  X  X  1  X  n  X  10 nN m  X  C o A O  X  nN m  X  ,  X  23  X  where N m is the number of models, n is the order of the plant, C the unitary cost operation and O is the Landau symbol ( Goodwin and Sin, 1984 ). Thus, the delay identification scheme yields to a quadratic complexity. Despite the complexity is quadratic, it is shown in Section 4 that a reduced number of model is sufficiently to obtain a good value of the delay. Therefore, for practical purposes, the approach possesses the advantage of being easily implementable in real systems, such on microcontrollers, low cost chips or similar programmable devices, since its operation is quite simple, yielding a great source of possible applications. 3.4. Convergence results of the identification scheme
This section states the convergence results of Algorithm 1 , guaranteeing the actual delay identification. Delay identification is done row by row in Algorithm 1 . In each row there is only one delay, therefore the convergence result is made for only one input but this result is extendible to the other inputs.
 The proof is performed in two steps:
First, the conditions under which (15) has a unique global minimum for ^ h i  X  h i and i  X  1 ; 2 , ... , n are stated.
Second, it will be shown that Algorithm 1 is able to asympto-tically find the global minimum of J  X  ^ h i , x 0 , t  X  .
From (15) it can be seen that J  X  ^ h i , x 0 , t  X  X  0 for
J  X  ^ h , x 0 , t  X  Z 0 since its integrand is non-negative. Thus the global minimum is calculated when J  X  ^ h i , x 0 , t  X  X  0. Assumption 4 is needed to establish the existence of a unique global minimum at ~ h  X  h i ^ h i  X  0.

Assumption 4. The input signal is such that there exists T 4 0 l
A  X  l , l with l , l A R and for all t belonging to an interval I
D t T , t  X  of positive measure. &amp;
This assumption means that the values taken by the input time interval. This assumption is necessary to ensure the non-periodicity of the input signal for different time-windows as those used in (15). It should be noted that this requirement is not periodic signal obtained for instance as a sum of sinusoids with different amplitude, frequency and phases. Now we are in condi-tions to formulate the next Lemma.
 Lemma 1. The function (15) has a unique global minimum at for all i  X  1 ; 2 , ... , n and t provided that the reference signal r satisfies Assumption 4 for a given T res  X  T .
 Proof. For i th channel: y  X  t  X  ^ y  X  i  X   X  t  X  X  L 1  X  E  X  s  X  X  X  p df i  X  t h i  X  p making use of the delay theorem of the Laplace transform. If t  X  t h i and ~ h i  X  ^ h i h i then, (15) can be written as J  X  ^ h i , x 0 , t  X  X  interval  X  t h i T res , t h i , for any other value of ~ periodic which is a contradiction with Assumption 4 on the input signal provided that T res  X  T . Thus, since this property holds component-wise, Lemma 1 is proved. &amp;
Lemma 1 states that there exists a unique global minimum for each interval  X  t T res , t , despite the fact that J  X  ^ different forms on each time window. The approach presents the particularity that the global minimum is always the same. Thus, the proposed approach can be framed into the GPSM despite the fact of (9) being time-varying.

Now, we establish that the proposed algorithm is able to find the global minimum of the proposed function J  X  ^ h i , x 0 , t  X  . Lemma 1 guarantees that under non-per iodic input, (25) has a global minimum but there may be local minima, while the original GPSM, proposed in Torczon (1997) , is designed only for decreasing func-tion, and therefore, it cannot be used in this approach. Fortunately, the original GPSM was extended in Audet and Dennis (2006) to functions with multiple local minima. This has been done by converting the search into dense which can be achieved making that N m sufficiently large and G 0 being close to zero. This implies that the updating of the new models does not lose the global minimum at each iteration, since new models are very close to old ones. However, this approach can not be used directly in this work, since the problem at hand is equivalent to consider a family of time-invariant functions all of them with a unique global minimum exactly at the same point. This problem has been addressed in Herrera and Ibeas (in press) which, in turn, is based on ideas of Torczon (1997) and Audet and Dennis (2006) ,whereaPSMwas designed for the optimization of a time-varying function as Eq. (15). Thus, if the search is dense then the algorithm does not lose the minimum of a function during the updating of D k neither losing the minimum of any of the remaining functions. Therefore, the unique global minimum is not lost and the algorithm works properly. The convergence properties are explained in Herrera and Ibeas (in press) with detail.
 Under these circumstances, we can apply the results from Herrera and Ibeas (in press) and formulate the following result on the identification of the delay: Theorem 1. Consider the delay system given by (7) satisfying Assumptions 1 X 3 . Thus , the Pattern Search based Algorithm 1 through models (18) X (20) can identify the actual delay provided that the reference signal r ( t ) satisfies Assumption 4 for a value of
T res  X  T , N m sufficiently large and G 0 being close to zero. Hence , lim for all i  X  1 ; 2 , ... , n . &amp;
Proof. Using Lemma 1 , N m sufficiently large and G 0 being close to zero we are in conditions of applying Theorem 1 of Herrera and Ibeas (in press) proving the identification of the delay. &amp;
Note that Theorem 1 requires a sufficiently large N m and G being close to zero. However, it has been observed in simulation examples, showing some of them in Section 4 , that a finite value for it suffices to achieve good closed-loop results. 3.5. Stability analysis
The stability properties of the closed-loop are stated in the following steps. Firstly, it is shown that the MoSP-based scheme given in Fig. 5 is robust under small (perh aps very-small) uncer-tainties in the delay. Second, we wil l use the identification proper-ties of the proposed algorithm, stated in Theorem 1 , to show that the nominal delay converges to a neighbourhood of the actual delay in finite time and eventually becomes a time-invariant system. Despite the closed-loop being time-varying, it is a linear system and there-fore, it does not possess any finit e escape time. Hence, the output cannot be unbounded during the t ransient response and can only diverge as time tends to infinity. Thus, the finite time-period until the delay reaches a neighbourhood of the actual time delay can be omitted from the stability analysis. Finally, since the MoSP is robust under small perturbations, and the nominal delay is arbitrarily near the real delay, the closed-loop system is stable.
 The following lemma will be used:
Lemma 2. Consider that the MoSP control scheme depicted in Fig. 5 loop system is still stable when ^ P  X  P df diag  X  e  X  h i Proof. The proof is along the lines of those in Krstic (2009) and Niculescu (2001) . &amp;
This result can be interpreted saying that the MoSP has a robust behaviour for small uncertainties of delays not exceeding
D ^ h i . Thus,the following stability theorem can be formulated. Theorem 2. The closed-loop system depicted in Fig . 5 obtained from Eqs. (7), (18) X (20) through Algorithm 1 is stable provided that
Assumptions 1 X 3 hold , N m is sufficiently large , G 0 is close to zero and  X  G c  X  G c 1  X  stabilizes P df . &amp;
Proof. The proof is made by contradiction. If the output is unbounded,the input signal u ( t ) behaves as a non-periodic signal satisfying Assumption 4 for any value of T res . Theorem 1 guaran-tees that the nominal delay converges to the actual delay,and exist finite t i A R such that 9 h i ^ h i  X  t  X  9 r E i 8 t Z t
D h i is guaranteed by Lemma 2 , the algorithm reaches in finite time t  X  max i t i a neighborhood of the actual delay where the
MoSP is robust. Consequently, the output cannot be unbounded, and this contradicts our assumption. Accordingly, all the signals in the loop are bounded. &amp;
It can be seen that the proof is straightforward, given that the scheme has been correctly framed within the PSM, inheriting its convergence properties and that the MoSP has a minimum robust behaviour. This is one of the advantages of PSM applied to control: the formulation of stability properties in a direct manner. 3.6. Extension to time-varying delays time-invariant. The original formulation of G k , given in (22), makes that lim k -1 G k  X  0, as it is commented in Section 3.3 .
Thus, for time-varying delay systems the estimation is not possible because the search space is asymptotically reduced to a single point. However, simulation results show that a small modification in Algorithm 1 allows the proposed approach to be extended to the case when the delay is time-varying. The modification is made over the reduction factor matrix and it is given by the substitution of Eq. (22) by the following equation: where G 4 0 is the lower bound of the reduction factor matrix. As it can be seen, Eq. (27) is easily implementable in Algorithm 1 .This condition implies that the length parameter (21) is only reduced can ensure that there will always b e different models (18) X (20) generated in such way that all the possible search space can be evaluated regardless the potential time-evolution of the delays.
Thus, the proposed Algorithm 1 is flexible enough to handle the identification of time-varying delays. Note that for time-varying delay case the precision of the estimation is determined by G value. 4. Simulation examples (iii) Simulations are made assuming a mode lling error of 3% and 25%. (iV) Disturbances are modelled and simulated for each channel, periodic. However, this is only a sufficient condition. The input signal is the signal that must be non-periodic to ensure the identification of the delay, which may be achieved by the feed-back loop despite the fact that the reference is a step function. of the irrigation channel is given by: Gc is given by:
G C  X  selecting these values for G C 1 and G C 2 controllers is explained in detail in Majhi and Atherton (1999) . The disturbance is given by D  X  s  X  X  0 : 001 s , 0 : 002 s , 0 : 0025 s The initial parameters used in the algorithm are given by:
T  X  2 : 5s, ^ H  X  0  X  X  diag  X  0 ; 0 , 0  X  s, and
D models is low N m  X  11. 4.1. Constant time delay
In this simulation the plant model with a 3% of error is given by: ^
P  X  2 6 6 4 and the actual delay is given by: H  X  diag  X  5 : 23 , 8 : 57 , 12 : 45  X  X  31  X 
The following scenario was simulated. At time 0 min all water levels were 27.50 m, 24.85 m and 22.15 m for pools 1, 2 and 3, respectively. At time 50 min the setpoint for the water level in pool 3 was reduced from 21.15 m to 22.10 m and at time 180 min was augmented from 22.10 m to 22.20 m.

Water level for pools 1, 2 and 3 are presented in Fig. 6 (a) X (c), respectively. Two simulations are presented in each figure: (i) The solid black line is the output obtained with the proposed scheme, where the delay model is unknown. (ii) The solid red line is the simulation concerning a controller based on Majhi and Atherton (1999) (where the used compensators are the same that the compensators used in the proposed scheme), where the model to a model delay error of 7 20%).

As expected, the simulation shows that in all three pools, better performance is achieved by the proposed scheme when the time delay has a modelling error. Although the control strategies used in these simulations are not in the same conditions since the proposed scheme adjusts the controller through time while in the other case the control strategy is always fixed, this compar-ison is useful to show the effectiveness of the proposed scheme. For example, it can be seen that the settling time obtained with the proposed scheme is two times smaller in comparison with a fixed controller (and the same controller structure). This is an important result, since the proposed approach avoids the dis-turbance amplification in upstream direction. In addition, we can say that the improvements are due to the identification of the delay.

Fig. 6 (d) shows the delay evolution for the three pools, the worthy that the identification is very precise, despite the input signal is a step. Notice, that the convergence time is fast since in 50.4 min all the delays are identified. Thus, this approach can be used for systems with time-varying delays, as it is presented below, according to the algorithm modification made in Section 3.6 . 4.2. Constant time delay with 25% of uncertainty in the plant model
For this case the plant model with 25% of error is given by; ^
P and the actual delay is given by: H  X  diag  X  15 : 23 , 18 : 57 , 22 : 45  X  X  33  X 
The following scenario was simulated. At time 0 min all water levels were 27.50 m, 24.85 m and 22.15 m for pools 1, 2 and 3, respectively. At time 100 min the setpoint for the water level in pool 3 was augmented from 22.15 m to 22.20 m. At time 500, 900 and 1200 min the disturbances of pools 1, 2 and 3 are activated, respectively.
 respectively. Three simulations are presented in each figure: (i) The solid red line is the output obtained with the proposed scheme, where the delay model is unknown. (ii) The solid blue line is the simulation concerning a controller with constant delay model delay error of 25%). (iii) The black dots correspond to a PI controller where the delay is perfectly modelled.

As in the previous case, the simulation shows that in all three pools, better performance is achieved by the proposed scheme when the time delay has a modelling error. Also note that the disturbance rejection is better for three pools, especially pools 2 and 3, where it can be seen that at time 500 min. the proposed scheme present a better behaviour.

Fig. 7 (d) shows the delay evolution for the three pools, the this scenario the precision is reduced due to the model error between the actual and the plant model. However, the delay obtained is sufficiently to improve the response of the irrigation channel.
The control signals are shown in Fig. 8 . In this case, a positive value is related with increased flow of water, while a negative value is related with a reduction of the flow. 4.3. Identification of the delay without a priori known upper-bounds
In this section the identification of the delay, where the actual delays are out of the initial search space, are presented. In this case Assumption 2 is not required a priori and therefore, line 17 of Algorithm 1 is changed by ^ H k  X  X  ^ H nom k  X  D h p , l k identification is satisfactory as shown in Fig. 9 . The actual and nominal delay are given by: 4.4. Time-varying delay In this case, the pure delay term is given by: H  X  t  X  X  diag  X  h 1  X  t  X  , h 2  X  t  X  , h 3  X  t  X  X   X  35  X  these are time-varying delays whose variations are shown in optimal performance of the algorithm. A recent work where the variations of the delay have been studied can be found in Diamantis et al. (2011) . The following scenario was simulated.
At time 0 min all water levels were 27.50 m, 24.85 m and 22.15 m for pools 1, 2 and 3, respectively. At time 100 min the set point for the water level in pool 3 was augmented from 22.15 m to 22.20 m.

Fig. 10 (a) X (c) shows the water level for pools 1, 2 and 3, respectively. The proposed scheme is compared with PI controller, expected, the simulation shows that in all three pools, better performance is achieved by the proposed scheme for time-varying delays.

Fig. 11 shows the delay evolution for pools 1, 2 and 3, respectively. It is noteworthy that the identification is very precise and the presented Algorithm 1 is able to follow the time-evolution of the delays. It can be seen, that the approach can identify continuous changes in the delay. 5. Conclusion
This paper has presented a method to control irrigation channels capable of tackling delay uncertainty. The approach is formulated using a delay compensation scheme proposed by
Majhi and Atherton, but the framework is general and any other delay compensator could be used.

The implementation consists of a multi-model scheme where the models are adjusted online by a Pattern Search Method. The convergence results and the stability analysis for the constant delay are based on the convergence results for PSMs, which makes the analytical results very easy to be obtained. Further-more, simulation results were presented for time-varying delay case, where it is corroborated the expected good results in practical situations requiring readjustment of the model time delays.

This approach is a novelty in Control Theory, and due that it has a simple formulation, it can be implemented in low cost microcontrollers, which is a source of possible applications. Acknowledgments This work was supported in part by the Spanish Ministry of
Science under Grant DPI2009-07197 and by the Government of the Basque Country through Grant, IT378-10. The authors are very grateful to Professor J. Rodellar, Dr. M. Meneses and
Dr. Salva Alca  X  ntara for their collaboration. Also, we are very grateful to reviewers for their comments that helped improve the original manuscript.
 References
