 Driven by several international evaluations and workshops such as the Text REtrieval Conference has received considerable attention. However, most of this effort has focused on factoid questions rather than more complex non-factoid (NF) ques-tions, such as manner, reason, or causation ques-tions. Moreover, the vast majority of QA mod-els explore only local linguistic structures, such as syntactic dependencies or semantic role frames, which are generally restricted to individual sen-tences. This is problematic for NF QA, where questions are answered not by atomic facts, but by larger cross-sentence conceptual structures that convey the desired answers. Thus, to answer NF questions, one needs a model of what these answer structures look like.

Driven by this observation, our main hypothe-sis is that the discourse structure of NF answers provides complementary information to state-of-the-art QA models that measure the similarity (ei-ther lexical and/or semantic) between question and answer. We propose a novel answer reranking (AR) model that combines lexical semantics (LS) with discourse information, driven by two rep-resentations of discourse: a shallow representa-tion centered around discourse markers and sur-face text information, and a deep one based on the Rhetorical Structure Theory (RST) discourse framework (Mann and Thompson, 1988). To the best of our knowledge, this work is the first to systematically explore within-and cross-sentence structured discourse features for NF AR. The con-tributions of this work are: 1. We demonstrate that modeling discourse is 2. We demonstrate that both shallow and deep 3. We show that discourse-based QA models us-4. We demonstrate good domain transfer per-The body of work on factoid QA is too broad to be discussed here (see, e.g., the TREC workshops for an overview). However, in the context of LS, Yih et al. (2013) recently addressed the problem of an-swer sentence selection and demonstrated that LS models, including recurrent neural network lan-guage models (RNNLM), have a higher contribu-tion to overall performance than exploiting syntac-tic analysis. We extend this work by showing that discourse models coupled with LS achieve the best performance for NF AR.

The related work on NF QA is considerably more scarce, but several trends are clear. First, most NF QA approaches tend to use multiple sim-ilarity models (information retrieval or alignment) as features in discriminative rerankers (Riezler et al., 2007; Higashinaka and Isozaki, 2008; Ver-berne et al., 2010; Surdeanu et al., 2011). Sec-ond, and more relevant to this work, all these ap-proaches focus either on bag-of-word representa-tions or linguistic structures that are restricted to single sentences (e.g., syntactic dependencies, se-mantic roles, or standalone discourse cue phrases).
Answering how questions using a single dis-course marker, by , was previously explored by Prager et al. (2000), who searched for by followed by a present participle (e.g. by *ing ) to elevate an-swer candidates in a ranking framework. Verberne et al. (2011) extracted 47 cue phrases such as be-cause from a small collection of web documents, and used the cosine similarity between an answer candidate and a bag of words containing these cue phrases as a single feature in their reranking model for non-factoid why QA. Extending this, Oh et al. (2013) built a classifier to identify causal re-lations using a small set of cue phrases (e.g., be-cause and is caused by ). This classifier was then used to extract instances of causal relations in an-swer candidates, which were turned into features in a reranking model for Japanense why QA.

In terms of discourse parsing, Verberne et al. (2007) conducted an initial evaluation of the util-ity of RST structures to why QA by evaluating performance on a small sample of seven WSJ ar-ticles drawn from the RST Treebank (Carlson et al., 2003). They later concluded that while dis-course parsing appears to be useful for QA, auto-mated discourse parsing tools are required before this approach can be tested at scale (Verberne et al., 2010). Inspired by this previous work and re-cent work in discourse parsing (Feng and Hirst, 2012), our work is the first to systematically ex-plore structured discourse features driven by sev-eral discourse representations, combine discourse with lexical semantic models, and evaluate these representations on thousands of questions using both in-domain and cross-domain experiments. The proposed answer reranking component is em-bedded in the QA framework illustrated in Figure 1. This framework functions in two distinct sce-narios, which use the same AR model, but differ in the way candidate answers are retrieved: CQA: In this scenario, the task is defined as reranking all the user-posted answers for a particu-lar question to boost the community-selected best answer to the top position. This is a commonly used setup in the CQA community (Wang et al., are fetched from the answer collection, and an ini-tial ranking is constructed based on the cosine sim-ilarity between theirs and the question X  X  lemma vector representations, with lemmas weighted us-ing tf.idf (Ch. 6, (Manning et al., 2008)). Traditional QA: In this scenario answers are dynamically constructed from larger docu-ments (Pasca, 2001). We use this setup to answer questions from a biology textbook, where each section is indexed as a standalone document, and each paragraph in a given document is considered as a candidate answer. We implemented the docu-The candidate answers are scored using a linear interpolation of two cosine similarity scores: one between the entire parent document and question (to model global context), and a second between the answer candidate and question (for candidates is typically large (e.g., equal to the number of paragraphs in the textbook), we return the N top candidates with the highest scores.
These answer candidates are then passed to the answer reranking component, the focus of this work. AR analyzes the candidates using more expensive techniques to extract discourse and LS features (detailed in  X  4), and these features are then used in concert with a learning framework to rerank the candidates and elevate correct answers to higher positions. For the learning framework, Machines for structured output adapted to rank-reranker also includes a single feature containing the score of each candidate, as computed by the We propose two separate discourse representation schemes  X  one shallow, centered around discourse markers, and one deep, based on RST. 4.1 Discourse Marker Model The discourse marker model (DMM) extracts cross-sentence discourse structures centered around a discourse marker. This extraction pro-cess is illustrated in the top part of Figure 2. These structures are represented using three components: (1) A discourse marker from Daniel Marcu X  X  list (see Appendix B in Marcu (1997)), that serves as a divisive boundary between sentences. Examples of these markers include and, in, that, for, if, as, not, by, and but ; (2) two marker arguments , i.e., text segments before and after the marker, labeled to indicate if they are related to the question text or not; and (3) a sentence range around the marker, which defines the length of these segments (e.g.,  X  2 sentences). For example, a marker feature may take the form of: QSEG BY OTHER SR2 , which means that the the marker by has been detected in an answer candidate. Further, the text preceeding by matches text from the question (and is therefore labeled QSEG ), while the text after by differs considerably from the question text, and is labeled OTHER . In this particular example, the scope of this similarity matching occurs over a span of  X  2 sentences around the marker.
 Note that our marker arguments are akin to EDUs in RST, but, in this shallow representa-tion, they are simply constructed around discourse markers and bound by an arbitrary sentence range. Argument Labels: We label marker arguments based on their similarity to question content. If text before or after a marker out to a given sen-tence range matches the entire text of the ques-tion (with a cosine similarity score larger than a threshold), that argument takes on the label QSEG , or OTHER otherwise. In this way the features are only partially lexicalized with the discourse mark-ers. Argument labels indicate only if lemmas from the question were found in a discourse structure present in an answer candidate, and do not speak to the specific lemmas that were found. We show in  X  5 that these lightly lexicalized features perform well in domain and transfer between domains. We explore other argument labeling strategies in  X  5.7. Feature Values: Our reranking framework uses real-valued features. The values of the discourse features are the mean of the similarity scores (e.g., cosine similarity using tf.idf weighting) of the two marker arguments and the corresponding question. For example, the value of the QSEG BY QSEG SR1 feature in Figure 2 is the average of the cosine sim-ilarities of the question text with the answer texts before/after by out to a distance of one sentence before/after the marker.

It is important to note that these discourse features are more expressive than features based on discourse markers alone (Higashinaka and Isozaki, 2008; Verberne et al., 2010). First, the argument sequences used here capture cross-sentence discourse structures. Second, these fea-tures model the intensity of the match between the text surrounding the discourse structure and the question text using both the assigned argument la-bels and the feature values. 4.2 Discourse Parser Model The discourse parser model (DPM) is based on the RST discourse framework (Mann and Thompson, 1988). In RST, the text is segmented into a se-quence of non-overlapping fragments called ele-mentary discourse units (EDUs), and binary dis-course relations recursively connect neighboring units. Most relations are hypotactic , where one of the units in the relation (the nucleus ) is consid-ered more important than the other (the satellite ). A few relations are paratactic , where both partici-pants have equal importance. In the bottom part of Figure 2, we show hypotactic relations as directed arrows, from the nucleus to the satellite. In this work, we construct the RST discourse trees using the parser of Feng and Hirst (2012).

Relying on a proper discourse framework facil-itates the modeling of the numerous implicit re-lations that are not driven by discourse markers (see Ch. 21 in Jurafsky and Martin (2009)). How-ever, this also introduces noise because discourse analysis is a complex task and discourse parsers are not perfect. To mitigate this, we used a sim-ple feature generation strategy, which creates one feature for each individual discourse relation by concatenating the relation type with the labels of the discourse units participating in it. To this end, for every relation, we extract the entire text dom-inated by each of its arguments, and we gener-ate labels for the two participants in the relation using the same strategy as the DMM (based on the similarity with the question content). Similar to the DMM, these features take real values ob-tained by averaging the cosine similarity of the ar-several such features, created around two RST Elaboration relations, indicating that the latter sentences expand on the information at the begin-ning of the answer. Other common relations in-4.3 Lexical Semantics Model Inspired by the work of Yih et al. (2013), we in-clude lexical semantics in our reranking model. Several of their proposed models rely on propri-etary data; here we focus on LS models that rely on open-source data and frameworks. In particu-lar, we use the recurrent neural network language model (RNNLM) of Mikolov et al. (2013; 2010). Like any language model, a RNNLM estimates the probability of observing a word given the preced-ing context, but, in this process, it learns word embeddings into a latent, conceptual space with a fixed number of dimensions. Consequently, re-lated words tend to have vectors that are close to each other in this space.

We derive two LS measures from these vec-tors, which are then are included as features in the reranker. The first is a measure of the over-all LS similarity of the question and answer can-didate, which is computed as the cosine similarity between the two composite vectors of the ques-tion and the answer candidate. These composite vectors are assembled by summing the vectors for individual question (or answer candidate) words, and re-normalizing this composite vector to unit length. Both this overall similarity score, as well as the average pairwise cosine similarity between each word in the question and answer candidate, serve as features. 5.1 Data To test the utility of our approach, we experi-mented with the two QA scenarios introduced in  X  3 using the following two datasets: Yahoo! Answers Corpus (YA): Yahoo! An-QA site, with questions and answers that span for-mal and precise to informal and ambiguous lan-guage. Due to the speed limitations of the dis-course parser, we randomly drew 10,000 QA pairs from the corpus of how questions described by Surdeanu et al. (2011) using their filtering crite-ria, with the additional criterion that answers had to contain at least four community-generated an-swers, one of which was voted as the top answer. The number of answers to each question ranged Biology Textbook Corpus (Bio): This corpus fo-cuses on the domain of cellular biology, and con-sists of 185 how and 193 why questions hand-crafted by a domain expert. Each question has one or more gold answers identified in Campbell X  X  Biology (Reece et al., 2011), a popular under-graduate text. The entire biology text (at para-graph granularity) serves as the possible set of an-swers. Note that while our system retrieves an-swers at paragraph granularity, the expert was not constrained in any way during the annotation pro-cess, so gold answers might be smaller than a para-graph or span multiple paragraphs. This compli-cates evaluation metrics on this dataset (see  X  5.3).
For the YA CQA corpora, 50% of QA pairs were used for training, 25% for development, and 25% for test. Because of the small size of the Bio corpus, it was evaluated using 5-fold cross-validation, with three folds for training, one for development, and one for test.
 The following additional resources were used: single-word discourse markers were extracted from Marcu X  X  (1997) list of cue phrases, and used for feature generation in DMM. These discourse markers are extremely common in the answer cor-pora  X  for example, the YA corpus contains an av-erage of 7 markers per answer.
 Discourse Trees: We generated all discourse trees using the parser of Feng and Hirst (2012). For YA, we parsed entire answers. For Bio, we parsed individual paragraphs. Note that, because these domains are considerably different from the RST Treebank, the parser fails to produce a tree on a large number of answer candidates: 6.2% for YA, and 41.1% for Bio. In these situations, we constructed artificial discourse trees using a right-attachment heuristic and a single relation label X . Lexical Semantics: We trained two different RNNLMs for this work. First, for the YA exper-iments we trained an open-domain RNNLM us-ing the entire Gigaword corpus of approximately a domain specific RNNLM over a concatenation of the textbook and a subset of Wikipedia spe-cific to biology. The latter was created by ex-tracting: (a) pages matching a word/phrase in a glossary of biology (derived from the textbook); plus (b) pages hyperlinked from (a) that are also tagged as being in a small set of (hand-selected) biology-related categories. The combined dataset contains 7.7M words. For all RNNLMs we used 200-dimensional vectors. 5.2 Hyper Parameter Tuning The following hyper parameters were tuned using grid search to maximize P@1 on each develop-ment partition: (a) the segment matching thresh-olds that determine the minimum cosine simi-larity between an answer segment and a ques-tion for the segment to be labeled QSEG ; and (b) periments, the sentence range parameter ( SRx ) for DMM ranged from 0 (within sentence) to  X  3 sen-5.3 Evaluation Metrics For YA, we used the standard implementations for P@1 and mean reciprocal rank (MRR) (Manning et al., 2008). In the Bio corpus, because answer candidates are not guaranteed to match gold anno-tations exactly, these metrics do not immediately apply. We adapted them to this dataset by weigh-ing each answer by its overlap with gold answers, where overlap is measured as the highest F1 score between the candidate and a gold answer. Thus, P@1 reduces to this F1 score for the top answer. For MRR, we used the rank of the candidate with the highest overlap score, weighed by the inverse of the rank. For example, if the best answer for a question appears at rank 2 with an F1 score of 0 . 3 , the corresponding MRR score is 0 . 3 / 2 . 5.4 Overall Results Table 1 analyzes the performance of the proposed reranking model on the three datasets and against two baselines. The first baseline sorts the can-didate answers in descending order of the scores produced by the candidate retrieval (CR) module. The second baseline (CR + LS) trains a rerank-ing model without discourse, using just the CR and LS features. For YA, we include an addi-tional baseline that selects an answer randomly. We list multiple versions of the proposed rerank-ing model, broken down by the features used. For Bio, we retrieved the top 20 answer candidates in CR. At this setting, the oracle performance (i.e., the performance with perfect reranking of the 20 candidates) was 69.6% P@1 for Bio HOW, and 72.3% P@1 for Bio WHY. These relatively low oracle scores, which serve as a performance ceil-ing for our approach, highlight the difficulty of the task. For YA, we used all answers provided for each given question. For all experiments we used Examining Table 1, several trends are clear. Both discourse models significantly increase both P@1 and MRR performance over all baselines broadly across genre, domain, and question types. More specifically, DMM and DPM show similar performance benefits when used individually, but their combination generally outperforms the indi-vidual models, illustrating the fact that the two models capture related but different discourse in-formation. This is a motivating result for discourse analysis, especially considering that the discourse parser was trained on a domain different from the corpora used here.

Lexical semantic features increase performance for all settings, but demonstrate far more utility to the open-domain YA corpus. This disparity is likely due to the difficulty in assembling LS training data at an appropriate level for the bi-ology corpus, contrasted with the relative abun-dance of large scale open-domain lexical seman-tic resources. For the YA corpus, where lexical semantics showed the most benefit, simply adding LS features to the CR baseline increases baseline P@1 performance from 19.57 to 26.57, a +36% relative improvement. Most importantly, compar-ing lines 5 and 9 with their respective baselines (lines 2 and 6, respectively) indicates that LS is largely orthogonal to discourse. Line 5, the top-performing model with discourse but without LS outperforms the CR baseline by +5.24 absolute P@1 improvement. Similarly, line 9, the top-performing model that combines discourse with LS has a +5.69 absolute P@1 improvement over the CR + LS baseline. That this absolute perfor-mance increase is nearly identical indicates that LS features are complementary to and additive with the full discourse model. Indeed, an analy-sis of the questions improved by discourse vs. LS (line 5 vs. 6) showed that the intersection of the two sets is low (approximately a third of each set).
Finally, while the discourse models perform well for HOW or manner questions, performance on Bio WHY corpus suggests that reason ques-tions are particularly amenable to discourse anal-ysis. Relative improvements on WHY questions reach +38% (without LS) and +24% (with LS), with absolute performance on these non-factoid questions jumping from 28% to nearly 40% P@1.
Table 2 shows one example where discourse helps boost the correct answer to the top posi-tion. In this example, the correct answer con-tains multiple Elaboration relations that are both cross sentence (e.g., between the first two sen-tences) and intra-sentence (e.g., between the first part of the second sentence and the phrase  X  X ith myelination X ). Model features associated with Elaboration relations are ranked highly by the learned model. In contrast, the answer preferred by the baseline contains mostly Joint relations, which  X  X epresent the lack of a rhetorical relation between the two nuclei X  (Mann and Thompson, 1988) and have very small weights in the model. 5.5 Intra vs. Inter-sentence Features To tease apart the relative contribution of dis-course features that occur only within a single sentence versus features that span multiple sen-tences, we examined the performance of the full model when using only intra-sentence features, i.e., SR0 features for DMM, and features based on discourse relations where both EDUs appear in the same sentence for DPM, versus the full intersen-tence models. The results are shown in Table 3.
For the Bio corpus where answer candidates consist of entire paragraphs of a biology text, over-all performance is dominated by inter-sentence discourse features. Conversely, for YA, a large proportion of performance comes from features that span only a single sentence. This is caused by the fact that YA answers are far shorter and of variable grammatical quality, with 39% of an-swer candidates consisting of only a single sen-tence, and 57% containing two or fewer sentences. All in all, this experiment emphasizes that model-ing both intra-and inter-sentence discourse (where available) is beneficial for non-factoid QA. 5.6 Domain Transfer Because these discourse models appear to cap-ture high-level information about answer struc-tures, we hypothesize that the models should make use of many of the same discourse features, even when training on data from different domains. Ta-ble 4 shows that of the highest-weighted SVM features learned when training models for HOW questions on YA and Bio, many are shared (e.g., 56.5% of the features in the top half of both DPMs are shared), suggesting that a core set of discourse features may be of utility across domains.

To test the generality of these features, we per-formed a transfer study where the full model was trained and tuned on the open-domain YA cor-pus, then evaluated as is on Bio HOW. This is a somewhat radical setup, where the target cor-pus has both a different genre (formal text vs. CQA) and different domain (biology vs. open do-main). These experiments were performed in sev-eral groups: both with and without LS features, as well as using either a single SVM or an ensem-ble model that linearly interpolates the predictions of two SVM classifiers (one each for DMM and
The transferred models always outperform the baselines, but only the ensemble model X  X  improve-ment is statistically significant. This confirms ex-isting evidence that ensemble models perform bet-ter cross-domain because they overfit less (Domin-gos, 2012; Hastie et al., 2009). The ensemble model without LS (third line) has a nearly identi-cal P@1 score as the equivalent in-domain model (line 13 in Table 1), while slightly surpassing in-domain MRR performance. To the best of our knowledge, this is one of the most striking demon-strations of domain transfer in answer ranking for non-factoid QA, and highlights the generality of these discourse features in identifying answer structures across domains and genres.

The results of the transferred models that in-clude LS features are slightly lower, but still ap-proach statistical significance for P@1 and are sig-nificant for MRR. We hypothesize that the limited transfer observed for models with LS compared to their counterparts without LS is due to the dispar-ity in the size and utility of the biology LS training data compared to the open-domain LS resources. The open-domain YA model learns to place more weight on LS features, which are unable to provide the same utility in the biology domain. 5.7 Integrating Discourse and LS So far, we have treated LS and discourse as dis-tinct features in the reranking model, However, given that LS features greatly improve the CR baseline, we hypothesize that a natural extension to the discourse models would be to make use of LS similarity (in addition to the traditional infor-mation retrieval similarity) to label discourse seg-ments. For example, for the question  X  X ow do cells replicate? X  , answer discourse segments con-taining LS associates of cell and replicate , e.g., nu-cleus, membrane, genetic , and duplicate , should be considered as related to the question (i.e., be labeled QSEG ). We implemented two such mod-els, denoted DMM LS and DPM LS , by replacing the component that assigns argument labels with one that relies on LS. Specifically, as in  X  4.3, we compute the cosine similarity between the com-posite LS vectors of the question text and each marker argument (in DMM) or EDU (in DPM), and label the corresponding answer segment QSEG if this score is higher than a threshold, or OTHER otherwise. This way, the DMM and DPM features jointly capture discourse structures and semantic similarity between answer segments and question.
To test this, we use the YA corpus, which has the best-performing LS model. Because we are adding two new discourse models, we now tune four segment matching thresholds, one for each of the DMM, DPM, DMM LS , and DPM LS mod-sults demonstrate that incorporating LS in the dis-course models further increases performance for all configurations, nearly doubling the relative per-formance benefits over models that do not inte-grate LS and discourse (compare with lines 6 X 9 of Table 1). For example, the last model in the table, which combines four discourse representa-tions, improves P@1 by 24%, whereas the equiv-alent model without this integration (line 9 in Ta-ble 1) outperforms the baseline by only 15%. 5.8 Error Analysis We performed an error analysis of the full QA model (CR + LS + DMM + DPM) across the en-tire Bio corpus (lines 17 and 25 from Table 1). We chose the Bio setup for this analysis because it is more complex than the CQA one: here gold an-swers may have a granularity completely differ-ent from what the system choses as best answers (in our particular case, the QA system is currently limited to answers consisting of single paragraphs, whereas gold answers may be of any size).

Here, 94 of the 378 Bio HOW and WHY ques-tions have improved answer scores, while 36 have reduced performance relative to the CR baseline. Of these 36 questions where answer scores de-creased, nearly two thirds were directly related to the paragraph granularity of the candidate answer retrieval (see  X  5.1): Same Subsection (50%): In these cases, the model selected an on-topic answer paragraph in the same subsection of the textbook as a gold an-swer. Often times this paragraph directly preceded or followed the gold answer.
 Answer Window Size (14%): Here, both the CR and full model chose a paragraph containing a dif-ferent gold answer. However, as discussed, gold answers may unevenly straddle paragraph bound-aries, and the paragraph chosen by the model hap-pened to have a somewhat lower overlap with its gold answer than the one chosen by the baseline. Similar Topic (25%): The model chose a para-graph that had a similar topic to the question, but doesn X  X  answer the question. These are challeng-ing errors, often associated with short questions (e.g.  X  X ow does HIV work? X  ) that provide few keywords. In these cases, discourse features tend to dominate, and shift the focus towards answers that have many discourse structures deemed rel-evant. For example, for the above question, the model chose a paragraph containing many dis-course structures positively correlated with high-quality answers, but which describes the origins of HIV instead of how the virus enters a cell. Similar Words, Different Topic (8%): The model chose a paragraph that had many of the same words as the question, but is on a different topic. For example, for the question  X  X ow are fos-sil fuels formed, and why do they contain so much energy? X  , the model selected an answer that men-tions fossil fuels in a larger discussion of human ecological footprints. Here, the matching of both keywords and discourse structures shifted the an-swer towards a different, incorrect topic.

Finally, in one case (3%), the model identified an answer paragraph that contained a gold answer, but was missed by the domain expert annotator.
In summary, this analysis suggests that, for the majority of errors, the QA system selects an an-swer that is both topical and adjacent to a gold an-swer selected by the domain expert. This suggests that most errors are minor and are driven by cur-rent limitations of our answer boundary selection mechanism, rather than the inherent limitations of the discourse model. This work focuses on two important aspects of an-swer reranking for non-factoid QA: similarity be-tween question and answer content, and answer structure. While the former has been addressed with a variety of lexical-semantic models, the lat-ter has received little attention. Here we show how to model answer structures using discourse and how to integrate the two aspects into a holis-tic framework. Empirically we show that model-ing answer discourse structures is complementary to modeling lexical semantic similarity and that the best performance is obtained when they are tightly integrated. We evaluate the proposed ap-proach on multiple genres and question types and obtain benefits of up to 24% relative improvement over a strong baseline that combines information retrieval and lexical semantics. We further demon-strate that answer discourse structures are largely independent of domain and transfer well, even be-tween radically different datasets.

This work is open source and available at: We thank the Allen Institute for Artificial Intelli-gence for funding this work. We would also like to thank the three anonymous reviewers for their helpful comments and suggestions.
