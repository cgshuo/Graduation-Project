 XML has emerged as the standard for representing, exchanging and integrating data on the Web. Given that the structure of XML documents is much more flexible than that of a relational database, the design of a quality XML document for an application is non-trivial. By a quality XML document, we mean that it reflects the semantics of the application accurately and can be accessed, updated and integrated efficiently. To guarantee the quality of XML documents, the design of quality XML schemas be-comes essentially important. 
We reckon that several criteria need to be followed in designing a quality schema. (1) information preservation -it is fundamental that the target XML Schema preserves ture -nesting is important in XML documents because it allows navigation of the paths in the document tree structures to be processed efficiently. (3) no redundancy -there is no data redundancy in the XML documents that conform to the target XML schema, thus no inconsistency will be introduced while updating the XML documents. (4) con-sideration of dominant applications -the structure of XML document should be accommodated such that dominant applications can be guaranteed to be processed effi-ciently. (5) reversibility of design -the original design can be achieved from the target XML schema, which is fundamentally important to data integration. 
Kleiner and Lipect [1] proposed a method for generating XML DTD [2] from E-R diagrams. The method preserved as much structural information from E-R diagrams as possible. However, due to the limitation of the DTD, only annotations were used to represent some E-R constructs that have no counterparts in DTD. Many-to-many rela-tionships were translated into top-level elements only so nesting is not maximised. Some advanced features in E-R model such as ISA and aggregation were not considered Object Role Model (ORM) [4]. The approach consider ed the dominant applications by analysing the weighting and anchoring of factor types. However, nesting was not dis-cussed in their work. Effort has been put for translating relational database schemas to XML Schemas. An early work in transforming relational schema to XML schema is DB2XML [5]. DB2XML uses a simple algorithm to map flat relational model to flat XML model in almost one-to-one manner. DTD is used for the target XML schema. Based on a flat translation similar to DB2XML, Lee et al. [6] presented two algorithms the nest operator on tuples of each relation. The resulting nested structures may be use-cies as constraints to generate a more intuitive XML Schema. XViews [7] constructs a graph based on primary key/foreign key relationship and generates candidate views by choosing the node with either maximum in-degree or zero in-degree as the root element. The candidate XML views generated maybe highly nested. DTD is also chosen for target XML schema. This approach does not consider the preservation of integrity con-straints. It also suffers considerable level of data redundancy. Liu et al. [8] proposed an approach that ensures the transformed schema in XML Schema [9] is highly nested, redundancy free and preserves all the integrity constraints. However, the dominant ap-plications and the reversibility of transformation were not discussed in their work. Bohannon et al. [10] developed the notion of DTD schema embedding that preserves information by ensuring both effective invertible mapping and efficient XML query translation. Lots of work has been done on mapping from XML to relational databases for storage purpose. Recently, Barbosa et al. [11] proposed a framework for informa-tion-preserving XML-to-relational mapping. The framework is extensible and guaran-tees the target relational schema is equivalent to the original XML Schema. 
We aim at designing quality XML Schemas that follows all five criteria we dis-cussed above. Similar to conventional database design, we use E-R model [12] for conceptual modelling, so we assume that E-R diagrams are given when we design XML schema. In this paper, we present our transformation rules and algorithms that automatically generate quality XML Schemas from E-R diagrams by following all five criteria. To preserve information, we choose XML Schema as the target schema language instead of DTD because XML Schema provides far more powerful model-ling features than DTD. The rest of the paper is organised as follows. In Section 2, we briefly introduce the E-R model and XML Schema. Following our design criteria, we design transforma-tion rules that consider all the constructs in the E-R model in Section 3. In Section 4, we propose a recursive algorithm that generates a quality XML schema from a given E-R diagram. Section 5 concludes the paper. Before we discuss the mapping from an E-R diagram to its correspondent schema in XML Schema, we briefly review both the E-R model and XML Schema. 
The E-R model employs three basic notions: entities (entity sets) , relationships , and attributes . There are two types of entity sets: regular and weak . The existence of a weak entity depends on another entity (its parent entity). A relationship has two basic proper-called a recursive relationship. The relationship from a parent entity set to a weak entity set is called identifying relationship. An attribute can be atomic or composite by having its own attributes, and meanwhile can be single-valued or multi-valued . called a key . The set of attributes that can identify a weak entity in the context of its key and the key of its parent entity. A key for a relationship consists of all keys of its participant entity sets. The E-R model is also extended to support some advanced features. These include ISA ( generalisation and specialisation ), and aggregation where some relationships are treated as high-level entity sets . 
To incorporate all the constructs introduced above, we give a formal definition in connection to an E-R diagram as follows. (4)  X  : E  X  R  X  A  X  A 2 defines the attribute sets of entities, relationships, and (5) n d is the name of the diagram. 
XML Schema is the W3C XML language for describing and constraining the con-tent of XML documents. Compared with DTD, it offers many appealing features. (1) XML Schema provides very powerful data typing. A rich set of built-in data types are provided. Based on that, users are allowed to derive their own simple types by restric-tion and complex types by both restriction and extension. An ISA construct in an E-R diagram can be mapped to complex type derived by extension. In DTD, only very cannot define their own types, not to mention complex types. (2) XML Schema pro-vides comprehensive support for representing integrity constraints such as id/idref, key/keyref, unique, fine grained cardinalities, etc. while DTD only provides limited support such as id/idref. The cardinality constraints provided by DTD is mainly based on Kleine closure. (3) Apart from the sequence and selection compositors for grouping elements, XML Schema also provides other compositors such as set. (4) XML Schema has the same syntax as XML. This allows schema itself be processed by the same tools that read the XML documents it describes. In contrast, DTD is in a non-XML syntax. (5) Namespaces are well supported in XML Schema while not in DTD. While DTD is still used for very simple applications, XML Schema is becom-ing a dominant XML schema language. For the purpose of information preservation, obviously XML Schema rather than DTD is a better choice for the target schema language. To map all constructs of an E-R diagram defined in Section 2 and follow all criteria discussed in Section 1, we design the following set of transformation rules. ment named n d is created as follows. The key of e is specified by a key declaration where k ( e ) = { k 1 , ... , k n }. =  X  weak  X  and p ( e ) = e X  , an element named n e is created and put under the element for { k 21 , ... , k 2n }. Rule 4: High-level entity set -For an entity set e ( n e , t ) of the E-R diagram  X  where t ( e ) =  X  high-level  X , an element named n e is created and put under the element for  X  . A high-level entity set is used to represent one and only one relationship. As such, the detail of the entity by applying Rule 1 to its own E-R diagram e  X  . 
Dominant queries are those queries that are most frequently used. Instead of defin-ing a dominant query, we define the dominant entity set (or role) of a relationship and the dominant relationship of an entity as follows. Definition 2. Dominant entity set (or role) : The dominant entity set e or role l of a such that e or l has the highest frequency from which r is visited. from which e is visited. ( e apply different rules as follows. (1) both are  X  total  X  -suppose that e 1 is the dominant entity set, put the element for r (2) one of them, say p 1 , is  X  partial  X  -put the element for r under the element for e 2 (3) both are  X  partial  X  -suppose that e 1 is the dominant entity set, put the element for p ply different rules as follows. to  X  X nbounded X , then put the element for r under the element for the dominant entity where k ( e 2 ) = { k 1 , ... , k n }. ( e , c 2 , _ , r 2 )}), depending on c 1 and c 2 , apply different rules as follows. plexType defined for the element for e 2 is t_e 2 , then an element for e 1 can be created with the t_e 2 as the extension type. ( e , c n , _ , _ )}), an element named n r is created and put under the element for the domi-( 2  X  i  X  n ), maxOccurs= X  X nbounded X  is added to the element. added to the element if vt ( a )=  X  multi-valued  X . pending on vt ( a ). -Information preservation and design reversibility criteria have been considered in -Highly nested structure criterion has been taken into account in Rules 3, 5, 6 and -No redundancy criterion has been applied in Rules 3 and 6. -Dominant applications criterion has been used in Rules 5, 7 and 8. rithm called ERD2XSD to generate a corresponding XML schema by applying the transformation rules introduced in the previous section. Normally an ISA relationship only applies to regular entity sets. In ERD2XSD, we first generate XML schema high-level entity sets because of the global key derivation caused by the existence dependency. If a weak entity set e 1 depends on another weak entity set e 2 , e 1 will also for transforming relationships is considered carefully in the algorithm such that nest-ing of one entity set under another is done just once. Finally, XML schema ele-ments/attributes are generated for composite or atomic attributes in the diagram  X  (Line 50-54). 4.1 Transformation Algorithm The algorithm ERD2XSD is given below. Algorithm : ERD2XSD Input : an E-R diagram  X  ( E , R , A ,  X  , n d , s, p, k ) 
Steps : the nesting of e1 and e2; 4.2 Transformation Example Figure 1 shows an E-R diagram named company . The keys and local keys for regular this E-R diagram as input to the ERD2 XSD algorithm, the XML schema with the following root element will be generated. In this paper, we first discussed design criteria of a good quality XML schema. Then, we designed transformation rules that translate all the constructs of an E-R model into their counterparts in XML Schema. We claimed that these set of rules follow all five criteria discussed in the paper, i.e., information preservation, highly nested structures, no redundancy, consideration of dominant applications, and design reversibility. Based on the transformation rules, a recursive algorithm called ERD2XSD was pro-posed that takes an arbitrary E-R diagram as input and generates a correspondent high schema design tool. This work was supported by the Australian Research Council Discovery Project under the grant number DP0559202. 
