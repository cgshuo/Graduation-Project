 1. Introduction
Many emerging applications deal with data streams that consist of massive unbounded sequences of data elements that arrive. Multiple query optimization is therefore essential in a DSMS. However, the query optimization techniques [4 these include grouped filters [1] , windowed joins [7] and approximate query processing [8 quickly as possible. Therefore, the time required to generate a new plan is also a critical factor. stream environment. Accordingly, most DSMS researches [1,11,13 sub-optimal plan because it lacks a backtracking mechanism to undo previous optimization decisions.
Based on the average cost  X  p and its standard deviation  X   X  optimality of the plan.
 are concurrently traced until a complete global plan is found.
 re-optimization process is invoked more sensitively.

The major contributions of the proposed algorithm are as follows:  X  continuous queries by sharing the common join operations of the queries as much as possible.  X  ity of a global execution plan and the optimization duration of a query optimization process.  X  ibly according to a user-defined re-optimization threshold .
 od is analyzed through a series of experiments. Section 6 presents our conclusions. 2. Related work time to generate an optimized global plan, these methods are not applicable to a data stream environment. be employed. STREAM [14] proposed the A-Greedy algorithm to adaptively determine the evaluation order of pipelined predicates are varied unpredictably over time [7,21] .
 execution plan of STAIRs dynamically.
 CPU and memory usages of the execution plan stay within the capacity of a DSMS. into a chain of fine-grained window instances to efficiently produce the results of different windows.
Sharing common subsumptions in multiple continuous queries is also important in distributed data stream management original ones, so that they are disseminated through a distributed publish/subscribe system. 3. Preliminaries 3.1. System architecture mized execution plan. 3.2. Cost model
An execution plan for a multi-way join query can be represented as an AND either a base input data stream or the result of an AND-node .An AND-node n corresponds to a binary join operation of two operand streams from its predecessor OR-nodes n DAG G ( N P , E P ). The set of nodes N P denotes the set of AND-nodes N the set of edges E P denotes the set of directed edges E P To address a part of a global plan for multiple queries, a subplan is defined as follows:
De fi nition 1. Given a global plan P = G ( N P , E P ) for a set of queries Q ,an m-subplan sp it is a subgraph G ( N sp , E sp )of G ( N P , E P ) such that N A global plan and its subplans for Q have the properties specified in Property 1 .
Property 1. Given an AND  X  OR DAG G =( N , E ), the in-degree deg follows: switch, a router and a hub, respectively, Fig. 2 (a) shows a set of continuous multi-way join queries Q ={ q q box. A subplan sp 2 of P Q is shown in Fig. 2 (c).
 plan. A join operation of two operand streams x and y is represented by an AND-node v join is employed. The terms used in the cost model are described in Table 1 . Whenever a new tuple arrives from either of these two streams, the join operation of the AND-node v operands, as follows: An OR-node v OR ( x , y )(  X  N p ) stores the result of its predecessor AND-node v new tuples  X  ( x ) of an operand stream x in a unit of time is  X  duced by new tuples  X  ( y ) of an operand stream y in a unit of time is  X  follows:
The overall cost c p of an execution plan p = G ( N p , E 3.3. Cost pro fi le
Given a set of multi-way join queries Q ={ q 1 , q 2 ... q overhead.
 tistics of the past cost of a join operation are used to estimate the current cost of the join operation. part of a past global execution plan are stored in a catalog called cost profile . For a distinct join operation J before, a tuple CS ( J x ,  X  ( cost ( J x )),  X  ( cost ( J
J can be either a base input stream or the result of another join operation. The average cost of an operation J deviation are denoted by  X  ( cost ( J x ))and  X  ( cost ( J squared average cost are denoted by count ( J x ) and  X  ( cost ( J deviation of the operation incrementally. In addition, a bit vector qBit ( J
When the value of  X  ( cost ( J x )) in the cost profile is large, the cost of the operation J are monitored again in the current global plan, the newly monitored actual cost v ( cost ( J follows: i) ii) iii) which the number of base streams is more than m ; this results in reduced search cost.
To support the fast retrieval of the cost statistics of a particular join operation x function h ( x , y )= h  X  ( h 1 ( x ), h 2 ( y )) is employed. 4. Adaptive sharing-based extended greedy optimization (A-SEGO) 4.1. Global plan generation of the join operation is proportionally decreased.

Given a global execution plan P Q for a set of queries Q ={ q result of a join operation J x in P Q . Furthermore, let w operation J x in P Q is defined as follows: sharing nodes ; their results may be shared by the queries in Q ( J evaluation cost eff _ cost ( n|P Q ) of a sharing node n corresponding to a sharing join operation J where cost ( n ) is obtained by Eqs. (1) and (2) in Section 3.1 .
 Accordingly, the effective cost of a global plan P Q = G ( N
For example, given a set of queries Q in Fig. 1 (a), suppose that cost of a sharing operation R  X  S in the plan P Q shown in Fig. 1 (a) is obtained as follows: of its two join attributes by assuming that the value of each join attribute is uniformly distributed. cardinality of the set, the effective cost of a subplan is used. Given an m-subplan sp operations { J 1 , J 2 , ... J m }, the average effective cost of sp (i) Average effective cost of an m-subplan sp m : (ii) Standard deviation of an m-subplan sp m : where  X  ( eff _ cost ( J i | sp m ))= tion 2 .

De fi nition 2. Cost-bound of a subplan Given a set of queries Q and a user-defined cost-bound parameter k ( sented by a range  X  ( sp m )=[ l sp m , u sp m ] where the lower bound l =  X  ( eff _ cost ( sp m ))+ k  X   X  ( eff _ cost ( sp m )).

According to the well-known Chebyshev's Inequality Theorem [34] , when the current cost of a subplan sp random variable X, the following inequality should be satisfied for any positive constant inequality, 88.8% of its data elements fall within this range.
 The set of subplans simultaneously traced by A-SEGO is defined formally in Definition 3 :
De fi nition 3. Set of candidate subplans CSP
Given the value of a cost-bound parameter k for a set of multi-way join queries Q ,let SP for Q ,andlet sp m min =  X  [ l m min , u m min ]denotean m-subplan with the smallest cost upper bound u
SP Q . The set of candidate m-subplans CSP m traced simultaneously by A-SEGO is defined as follows:
Fig. 3 illustrates how to determine a set of candidate subplans CSP . Suppose there are four m-subplans { sp sp subplans whose cost-bounds overlap with the cost-bound of sp
In other words, all the subplans whose cost-bounds overlap with the cost-bound of sp pseudo-code is illustrated in Fig. 6 , and the steps of A-SEGO are shown in Fig. 7 .
The proposed algorithm can examine the entire search space exhaustively when k = ical greedy optimization approach.

SP 1 is { sp 1 1 , sp 1 2 , sp 1 3 }where sp 1 1 ={ J 1 }, sp result, the average effective cost of sp 1 1 with the sharing operation J sp min . Because the cost-bound of sp 1 1 overlaps with that of sp 1-subplans are extended. More precisely, the 1-subplan sp
Likewise, the 1-subplan sp 1 2 is extended to sp 2 3 ={ J plans are  X  ( sp 2 1 )=[840, 940],  X  ( sp 2 2 )=[720, 820], sp min and is overlapped with sp 2 2 , CSP 2 ={ sp 2 2 , sp 2 sp 3 is extended to sp 3 2 ={ J 1 , J 2 , J 3 }and sp 3 3 ={ J  X  ( sp 3 2 )=[1323, 1457] and  X  ( sp 3 3 )=[1552, 1708], so that CSP tion plan for Q , in the next iteration only sp 3 2 is extended to sp two complete global plans sp 3 1 and sp 4 1 , the subplan sp 4.2. Adaptive re-optimization tion is satisfied: other hand, let eff _ cost cur ( p ) denote the current cost of p . The value of cient the current plan p is with respect to the initially optimized cost of the plan. at t t should be processed by the old plan p . After t 2 , the newly optimized plan p  X  and k should be carefully controlled. 4.3. Query clustering expressions. Given a set of multi-way join queries Q ={ q clustering scheme employs a k-means clustering algorithm that uses a similarity sharing measure. Let n ( q number of join predicates expressed in q i and q i .Let n ( q ilarity sharing measure of two queries q i and q j is defined as follows: optimized execution plans of all the individual subsets of the queries. 5. Experiments and 3 integer-type attributes. Given the domain size d max secutive timestamps, while the value of each integer attribute is randomly chosen over the range [1 incremented by one for every 20 tuples. For each experiment, 100 k tuples are generated for each stream. streams ( n  X  30 ). Each query is a path-predicate query [35] with ( n
D3 . Consequently, the probability of generating a sub-optimal global plan is increased.
For a given value of k , let cost k denote the cost of an execution plan generated by A-SEGO and let cost optimal plan. To identify the performance of A-SEGO ,a relative effectiveness  X  ( k ) is defined as follows: in each query.
 simultaneously becomes a serious burden.
 partial plans is increased. On the other hand, the parameter k is not relevant to the remaining algorithms. the fluctuation of the characteristics of input data streams, the tuples of the four sub-datasets D sub-dataset are randomly varied over the ranges [10,100] and [10, 1000] respectively. The term plan for each sub-dataset, while the term  X  static plan for D4 generates a greater number of re-optimized plans than does A-SEGO ( k =1, optDP , k-EGA and Greedy(STAIR) are single query optimization schemes, this factor is not relevant. as the number of queries increases, the effect of sharing common join operations is greatly increased. Processing time (ms/tuple) 6. Conclusion ecution plan and its optimization duration.
 anism for the future work.

References
