 Newsgroup participants interact with their communities through conversation threads. They may respond to a message to answer a question, debate a topic, support or disagree with another person X  X  point, or digress and write about a different subject. Understanding the structure of threads and the sentiment of the participants X  interaction is valuable for search and moderation of newsgroups. In this paper, we focus on auto matic classification of message replies into several types. For re presenting messages we consider rich feature sets that combine the standard author reply-to network properties with features derived from four additional structures identified in the data: 1) a network of authors who participate in the same threads, 2) network of authors who post similar content, 3) network of threads sharing common authors, and 4) network of content-related threads. For selected newsgroups we train linear SVM classifiers to identify agreement and disagreement with the original message, and question and answer patterns in the th reads. We show that the use of newly defined features substantially improves classification of messages in comparison with the SVM model based only on the standard reply-to network. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing  X  abstracting methods, indexing methods. I.5.2 [Pattern Recognition] : Design Methodology  X  feature evaluation and selection. Keywords: Message classification, social networks, newsgroups, communities. Newsgroup communities have been around since the early days of the Internet. They are formed aro und a variety of topics and users are evermore turning to them to share their opinions, find specific information, seek community support, provide answers, and a like. A large percentage of people in online communities (often over 90% [ 12 ]) are  X  X urkers X  who search and read available content but rarely communicate with others [ 12 , 14 ]. They typically look for detailed answers that can hardly be found elsewhere on the Web. Thus, providing effective support for search and browsing through message threads is of great value to the users. In particular, for finding information it is helpful to understand the structure of a discussion thread and quickly zo om onto the  X  X nswer X  messages. For those joining in a long discussion it is useful to get a sense of the dynamics and agreement level among participants. In order to devise optimal algorithms and user interfaces for accessing newsgroup content, we thus need to understand the characteristics of messages and message threads, including the structure, type, and sentiment of the participants X  interaction. In this paper we present a novel work on automatic identification of response types in message threads: agreement or disagreement with the previous message, insult, question, and answer. To the best of our knowledge, newsgroup messa ge classification without constraints on the topicality or social structure of the user community has not been attempted in previous research. The problem is a challenging one because topics of distinct threads may vary considerably even within a single newsgroup. At the same time, it is a not clear whether replies to messages may exhibit sufficient commonality across topics to make their type recognizable and automatically detectable. Our work shows that we can creat e robust classifiers for several types of replies regardless of the t opics they cover. We achieve this by exploring a rich set of features from newly defined author and thread networks . We demonstrate a significant improvement over the baseline classifier that uses only the reply-to network model. In the following sections we review related research ( X 2), provide a detailed description of our experime ntal work ( X  X 3-5), including the characteristics of the data set and feature sets and the study findings ( X 6). Finally, we discuss application areas and future work ( X 7). Discussion groups, blogs, onli ne product reviews, and other community-generated content are rich sources of users X  sentiment and opinion and have been a subject of a considerable body of research on opinion polarity and sentiment analysis. Techniques that have been used include text classification methods [ 1 , 13 ], linguistic analysis [4,10], and social network analysis [ 1 , 16 ]. The reply-to network, in particular, has been considered for identifying topical polarity of newsgroup participants [ 1 , 8 ] and categorizing newsgroup types and author roles [6]. Based on the hypothesis that a messa ge response is most likely to disagree with the parent message, Agrawal et al. [ 1 ] applied constrained and unconstrained graph partitioning techniques to cluster authors who share similar opinions into two opposing camps. Kelly et al. [ 8 ] clustered participants with similar opinions within a newsgroup and found that, regardless of the underlying distribution of participants into the clusters, the ratio of messages on each side of the discussion is balanced. I ndeed, the traffic of the minority opinion was found to be larger in order to make up for the smaller number of people. Fisher et al. [6] used graph properties of the reply-to network to study social aspects of online communities. They categorized user roles and newsgroup types through analysis of in-and out-link degree distributions of key authors. Motivated by the observations of this study we consider multiple representations of the social network for message classification, including the reply-to network. Our research differs from the previous work. Instead of studying the opinion of a newsgroup community on a single topic we analyze the structure of discussion threads a nd types of message replies across topics. We expect that the message thread properties reflect the polarity of the community but we do not assume that individual participants always express a stro ng and consistent opinion about a topic. Support Vector Machine (SVM) [ 3 ] has gained a wide popularity as one of the state-of-the-art machine learning methods for tasks such as classification and regression. Among specific applications, it has proven to perform particularly well for text categorization [ 7 ] and sentiment analysis of movie reviews posted to newsgroups [13]. We apply linear SVM classifiers to: 1) Predict the agreement level between a message and its parent 2) Identify questions and answers to a parent message within We describe each message-parent pair by a vector of features and we use one-vs-all multi-class approach for classifying unseen message pairs (details provided in  X 6). We use the linear SVM implementation included in the Text Garden library [ 15 ]. Our data set consists of messag e threads and header information from four Usenet newsgroups. The first two newsgroups, alt.politics.immigration and talk.politics.guns host mostly political discussions and debates. These same groups were used in [ 1 ] for social network analysis. The other two groups microsoft public. internetexplorer.general and microsoft.public.windowsxp.general , host mostly Q&amp;A-type threads. Table 1 shows summary information about these data sets, hereafter referred to as immigration , guns , iexplorer and winxp. It lists the total number of threads, messages, replies and authors per newsgroup. It also indicates the period of time in which all messages were collected. We created training data sets from several samples of threads randomly selected from each newsgroup. The sample messages were annotated by experts with one of the labels listed in Table 2. When two or more labels were considered valid, the experts were asked to select the label that applied the most, or in case of ambiguity, to annotate as  X  X on X  X  know X . Table 3 shows the total number of messages annotated with each label. Our aim was to classify messages posted to two classes of groups, political discussions and Q&amp;A, and to investigate the impact of particular features on the classifiers performance. Thus, we considered a varied set of features both of structural and content nature. For content analysis, we cleaned each message to remove headers and any quoted text from parent message s. We derived features from multiple networks: 3 author networks and 2 thread networks. Past research has used thread-level message features for analysis of newsgroup data [2,5,6,17]. We also ran experiments with such kind of features, but our results did not show much improvement. Thus, in this and su bsequent sections we will only refer to the multi-network features. Figure 1. Feature sets extracted from the author networks. Figure 2. Feature sets extracted from the thread networks. We created 3 types of author networks for each newsgroup: reply-to , thread participation , and text similarity . In all of these, the nodes represent authors, but the edges carry distinct semantics: -A reply-to network edge from author A to author B indicates -A thread participation network edge from author A to author B -A text similarity network edge indicates similarity between the We described each message reply by a vector of features extracted from the three author networks , which we will refer to as A1 , A2 and A3 . Given a message, M1 , and the message it replies to, M0 , 3 feature vectors were created for M1 and another 3 for M0 (see Figure 1). Individual features of each vector are associated with nodes in the networks, i.e., authors. The values of vector components {a i1 ,a i2 ,...,a iN } for the author of the message M1 are 0, unless they correspond to authors who are direct or 2nd-level neighbors of M1 X  X  author, in which case the values are set to 1 and 0.5, respectively. A similar author node vector was created for the author of the parent message M0. The final feature set for a message reply concatenated the two vectors. In [ 1 ], it was assumed that, for a broad topic, people who engage in political discussions usually reply to present an opposing view. Our work, however, makes no assumptions on the consistency of an author X  X  view on a topic. Thus, we acknowledge that people X  X  opinions across or even within the broad topic are not always on the same side of the argument. However, the very involvement of the author in the discussion thread may reveal information about the topic that is discussed. Thus, we looked for associations of topics and, to that effect, generated two types of thread networks for each newsgroup: common authors network and text similarity network . The nodes of both networks represent threads but the edges have a different meaning in each case: -A common authors network edge between thread T and Q -A text similarity network edge between thread T and Q indicates We described each thread by a vector of features extracted from the two thread networks, referred to as B1 and B2 , respectively. Given a message M1 belonging to the thread T , we created two feature vectors, where individual components were associated with other nodes the networks, i.e. threads  X  see Figure 2. The values of vector thread node is a direct or 2nd-level neighbor of thread node T network, in which case the values ar e set to 1 and 0.5, respectively. We conducted a comprehensive set of experiments with linear SVM classifiers to investigate the effectiveness of individual feature sets and their combinations in: 1) Predicting the level of agreement of messages posted to political 2) Identifying question and answer messages in technical For evaluation we used 10-fold cross-validation: the data was randomly split into 10 folds of equa l size and in turn, the classifier was trained on 9 folds and evaluated on the remaining fold. The results were averaged over the 10 iterations. The performance of the classifier was measured based on the break-even-point (BEP) from the ranked list of messages scored by the classifier. The BEP value is associated with the rank at which classification precision and recall are equal. Selected experiments are outlined in Figure 3. Sets F1 to F3 consist of features extracted from the author networks (A1-A3). Features sets F4 and F5 additionally include features from the thread networks (B1 and B2). In  X 6.1 and  X 6.2, we present the experimental results for the two newsgroups types present in our data set: discussion and Q&amp;A. In  X 6.3, we discuss briefly the classifiers X  performance. Given that reply-to network features have been extensively used in previous work [1,6,8], we use F1 as baseline for our analysis. To predict the level of agreement between a message and its parent message in discussion threads, we only used the relevant training data, i.e. we used messages labeled as  X  X gree X ,  X  X isagree X  or  X  X nsult X . The classification results for the various combinations of feature sets (F1-F5) are shown in Table 4. In this type of groups, an increased performance due to thread network features was particularly evident in the  X  X nsult X  class, where such messages seem to be strongly predicted through th e co-participation in threads (B1): increase from 68% to 74% for guns and from 38% to 85% for immigration . Using threads text similarity features (B2) gave further boost to the guns category: from 74% to 81%. To identify questions and answers in technical newsgroups, we only used the relevant training data: me ssages labeled as  X  X uestion X  or  X  X nswer X . The classification results are shown in Table 5. Unlike the previous case, features derived from the thread networks did not lead to better classification performance. Connections among authors that participated in the sa me threads (A2) were particularly beneficial to predict  X  X uestions X : increase of 59% to 64% for iexplorer and 78% to 80% for winxp . Content-based author similarity features (A3) improved the prediction of  X  X nswers X  for iexplorer : from 71% to 75%. We observed that the co-particip ation of authors across threads (feature set B1) was a particularly relevant factor for improving the classification of messages of disc ussion threads. Text similarity features further improved classification. These results hint that authors seem to be consistent in their opinions, when participating with the same authors on multip le discussion threads. Fisher et al. [ 6 ] observed that participants of political discussion groups tend to form a fairly closed community, responding to each other often and mostly ignoring people who are not in core participants. They also observed that, the mostly connect ed participants of technical newsgroups, on the contrary, res pond essentially to the outsiders, whose messages are generally questions. Our results indirectly support this analysis, since thread network features did not enhance the classification performance in the Q&amp;A case. In this paper we demonstrated that it is possible to train a robust message classifier to automatically detect messages of selected response types, including agreement and disagreement among discussion participants. This is a rather significant result from both research and application point of view. Previous research tried to limit the topicality of messages in order to perform classification [1]. We have shown that with well selected author and thread network features we can achieve very good classification results (measured through BEP) for any topic that participants of a newsgroup may be discussing. The results clearly demonstrate the superiority of the thread network features over the standard reply-to network alone. Our results open doors to various applications that can benefit from deeper understanding of newsgroup participants interaction. For example, client applications could use our message classifier to identify and label insulting messages. Verbal attacks can be derived from social context of the messages X  authors and the relationship between discussion topics. Our findings offer also the foundation for the design of ranking functions for newsgroup search that take into account the types of messages, given a search goal, such as, finding answers to a question, finding a similar question, or finding strong positive and negative opinions about a topic. 
