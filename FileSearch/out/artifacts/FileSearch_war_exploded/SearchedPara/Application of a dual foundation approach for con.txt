 Chuansan Luo, Christine W. Chan n 1. Introduction
Research on post-combustion CO 2 capture has been ongoing over the past two decades, and the amine-based CO 2 capture process has become one of the dominant post-combustion CO 2 capture technol-ogies because of its efficiency and low cost; this process has been implemented at the International Test Centre for CO 2 capture (ITC) at the University of Regina in Saskatchewan, Canada. Operation of the ITC system involves manipulation of 16 primary components and a multitude of valves and pumps, which generate a huge set of data on the process parameters. Currently the CO 2 capture process system is supervised by the DeltaV (a trademark of Emerson Corp.,
USA) process control system, which is based on the Object Linking and Embedding for Process Contr ol (OPC) industrial protocol.
DeltaV system is able to provide automated industrial process control and can support automated monitoring and control func-tions. However, it neither supports data filtering and analysis nor diagnosis of the process systems. As a result, the process engineers and researchers at ITC often need to manually retrieve and analyze the monitored data collected by DeltaV. Therefore, developing a decision support system (DSS) for operation support of the CO capture process system would enhance the efficiency of analysis and monitoring processes. A DSS would (1) provide reliable support to the operators in performing moni toring and diagnosis of the facil-ities during daily system operations, and (2) help researchers who need easy access to the process data.
 such DSS X  X , a web-based intelligent system framework was built which can support development of different intelligent system modules for diverse functions. In addition, the experts 0 knowledge and problem-solving methods adopted during operation of the
CO 2 capture process system were captured and represented in an ontology model of the CO 2 capture process. The ontology model can serve as the knowledge foundation, which provides semantic guidance in diagnosis and operational decision-making of the CO capture process system.
 developed for the CO 2 capture process system which consists of both the intelligent system framework and the ontology model.
This paper is organized as follows. Section 2 introduces the CO capture process and background literature about ontology, seman-tic knowledge and operational support system. Section 3 describes knowledge modeling and ontology construction. Section 4 pre-sents the design of the architectural framework for developing intelligent systems. Section 5 illustrates how the architectural framework and the ontology model can serve as dual foundation for building intelligent systems. Section 6 provides some discus-sions and conclusions, and discusses possible directions for future work. 2. Background 2.1. Application problem domain
The operation of the amine-based chemical absorption CO 2 capture process is described as follows. Prior to CO 2 removal, the flue gas is pre-treated in the inlet gas scrubber, where the flue gas is cooled down, and particulates and other impurities such as sulfur oxide (SO x ) and nitrogen oxide (NO x )areremovedasmuchas possible. The pre-treated flue gas is passed into the absorption column by an inlet-gas feed blow er, which provides the necessary pressure for the flue gas to overcome the pressure drop in the absorber. In the absorber, the flue gas and lean amine solution contact each other counter-current ly. With the high temperature steam provided by the boiler, the amine selectively absorbs CO from the flue gas. The amine solution carrying CO 2 , which is called
CO -rich amine, is pumped to the lean/rich heat exchanger, where the rich amine is heated to about 105 1 C by means of the lean amine solution. The heated CO 2 -rich amine then ente rs the upper portion of the stripper. In the stripper, CO 2 is extracted from the amine solution, which is recovered as the lean amine solution. Most of the lean amine solution returns to the lean amine storage tank and is then recycled for CO 2 absorption. A small portion of it is fed to a reclaimer, where the degradation by-products and heat stable salts (HSS) are removed. The non-regenerable sludge is left behind in the reclaimer and can be collected and disposed of. The CO 2 product and water vapor from the top of the stripper is passed through a reflux condenser. Most water is condensed there, and the residual amine solvent passes back to the stripper column reflux section to help desorb CO 2 again. The CO 2 product enters a CO 2 wash scrubber, where the CO 2 gas is cooled down to a desired temperature of 4
From there, the CO 2 can be vented into the atmosphere or passed through a dryer and purification unit to produce food grade quality
CO ( Zhou et al., 2009 ). In order to maintain the normal operation of this process system, hundreds of pa rameter values generated by this process need to be monitored and analyzed, and an automated intelligent system can support the task. 2.2. Background literature 2.2.1. Intelligent system frameworks
An operation support system usually consists of an on-line operation manual, and components for fault diagnosis, equipment maintenance management and a multimedia interface ( Rao et al., 2000 ). Chiang et al. (2001 ) reveal three general solution approaches for supporting the tasks of monitoring, control, and diagnosis includ-ing data-driven, analytical, and knowledge based approaches. Each approach has its own strengths and weaknesses. Integrating multiple solution approaches could eliminate the constraint of each approach.
However, the task of integrating multiple solution approaches can introducemorecomplexitytothesystem( Uraikul et al., 2007 ). In the literature, many relevant research projects on building automated systems for supporting process operations can be found; these include the research work on intelligent monitoring systems and intelligent system architecture for process operation support ( Rao et al., 2000 ).Agoodsummaryispresentedin Uraikul et al. (2007 ), which suggests that there are four i mportant architectural frame-works for developing an intelligent system for monitoring and control. Firstly, the framework of i ntegrated real-time workstation (IRTW) developed at the Laboratory of Intelligent Systems in Process Engineering (LISPE) ( Han and Stephanopoulos, 1995 ), which provides a generic integrated framework for combining different functional-ities. The weakness is that the rigidly structured organization of the framework can cause problems if the environment is not stable. The second framework is the DKit hybrid framework ( Mylaraswamy and Venkatasubramanian, 1997 ), which has been adopted for design and implementation of the abnormal e vents guidance and information system (AEGIS). The blackboard arc hitecture of DKit provides a global data structure that allows the probl em-solving state to be available while each module can be kept isolated ( Albayrak and Krallmann, 1995 ). The third framework is the on-line operational support system (OOSS) for fault diagnosis (Chan and Wang, 1999) , which consists of an integrated knowledge discovery and data mining system able to guide the development of different intelligent systems. The fourth system is the platform for developing an INTElligent Multimedia system for On-line Real-time applications (INTEMOR) ( Rao et al., 2000 ), which was an extension based on a framework called the Integrated Distributed Intelligent System (IDIS) proposed by Rao (1991) . It includes modules for data acquisition, data calibration, condition monitoring, fault diagnosis, maintenance, on-line help, operation manual, historical data management and knowledge-base creation. INTEMOR has the advantage of having a relatively flexible architecture, which can integrate various types and levels of knowl-edge representations such as rules sets, past solutions and process models. 2.2.2. Ontological modeling
There is abundant literature related to ontological modeling; here, the objective is to briefly explain some background concepts about ontological modeling. An ontology is an explicit specification of a conceptualization, and ontological engineering involves the study of the organization and classification of knowledge. With the growth of the semantic web in the past decade, ontological engineering has been greatly emphasized. An ontology enables automated processes or agents to more effectively share information. The conceptual structures defined in a domain ontology provide the basis for machine-processable data on the semantic web. An ontology can be used as the basis of knowledge acquisition tools, which are used for collecting domain knowledge or generating expert systems ( Chan, 2003 ). An ontology can serve as a metadata schema, which provides a defined vocabulary of concepts with explicit machine-processable semantics. By defining shared and common domain theories, ontol-ogies support semantic as well as syntactic exchanges, thereby helping people and machines to communicate concisely. Hence, the semantic web X  X  success significa ntly relies on the construction of domain-specific ontologies ( Maedche and Saab, 2001 ). Fundamental to the semantic infrastructure are ontologies, knowledge bases, and agents along with inference, proof, and sophisticated semantic querying capabilities ( Uschold, 2003 ). The machine-processable semantics can then be utilized by various intelligent systems for advanced process control and management. 3. Knowledge modeling and ontology construction 3.1. Ontology design
The CO 2 domain ontology was constructed based on the knowledge obtained during the knowledge acquisition process, which consists of the three phases of knowledge elicitation, knowledge analysis and knowledge representation. The primary knowledge source was the experienced operators of the CO 2 capture process system at ITC. The Inferential Modeling Techni-que (IMT) provided the knowledge engineer with a template of knowledge types to help identify specific knowledge elements in the domain; details about the IMT approach of knowledge acquisition can be found in Chan (2004a ).

According to the IMT, the knowledge elements in the CO capture process include the following: (1) classes of objects contained in the plant, such as plant components and reactants, (2) attributes that describe a class, such as the temperature or flow rate of a reactant, (3) values of attributes that specify the desirable operating range, and (4) tasks that specify the control actions that remedy the abnormal performance of a certain component. The knowledge elements clarified using the IMT formed the basis for building an ontology model of the domain.
The ontology model for the CO 2 capture process system consists of three major categories under the root of  X  X  X lant X  X , and the three sub-categories are class, attribute, and task (see
Fig. 1 ). The  X  X  X lass X  X  consists of the plant components and reactants. The plant component consists of the sub-classes of the reaction instruments, pumps and valves. The pumps and valves are further classified into subclasses based on their control mechanisms and functions. The reaction instruments are grouped into three main classes based on their functions, which include the following: (1) Flue-gas generation/pre-treatment: (2) Absorption-based CO 2 capture: (3) Post-conditioning for product purification:
The reactants that circulate in the plant include water, solvent, and gas, which are specified as subclasses. The attributes involve the levels of the reaction instruments, the flow rate, temperature and pressure of the reactants, and each attribute has its own normal operating range of values. The tasks in the CO 2 capture domain include various control tasks, which are applicable to the attributes of inlet gas, off gas, CO 2 , solvent, water and reaction instruments. The attribute lists of two sample reaction objects of lean amine storage tank (TK-600) and inlet-gas scrubber (TK-410) are shown below: their relationships are represented in a knowledge table, an excerpt of which is shown in Table 1 . In the CO 2 capture process plant, each reaction instrument, valve, pump, and attribute, is identified with a tag, which is specified within a pair of brackets in Table 1 . For example, the reaction instrument is an ontology class, one instance of which is the reclaimer. Two sample attributes of the reclaimer are reclaimer pressure (PT-670) and level control (LC-670), and the reclaimer pressure has a normal range of values from 12.0 kPa to 22.8 kPa. If the pressure exceeds the high limit value of 22.8 kPa, the remedial task is to open the reclaimer back pressure valve (PCV-670). If the pressure drops below its low limit value of 12.0 kPa, the remedial task is to close the reclaimer back pressure valve (PCV-670). 3.2. Ontology management Modeling System (KMS) ( Chan, 2004b ), which provides automated support for implementing and documenting industrial ontologies.
The KMS enables the user to specify the knowledge elements analyzed using the IMT. It consists of two primary modules: the class module and the task module. The classes, sub-classes, attributes and values are stored in the class module. The interface of the class module from the KMS is shown in Fig. 2 . The class tree including the classes and subclasses is listed in the upper left panel of the screen. The highlighted object is the reclaimer under the class of reaction instrument, and its related class attributes are shown in the lower right panel. The attribute of reclaimer pressure (LC-410) is highlighted, and its values are shown in the lower left panel of the screen.

Fig. 3 shows the interface of the task module. The rules are grouped into different task categories as shown in the left panel of the Behavior Control window. The entire set of the rules is listed in the right panel. The behavior control panel is the rule editor, which is shown in the center panel of the screen. The condition and action parts of the rule are displayed separately on the right panel of the rule editor. When the rule is specified, it is transferred to the right panel of the rule editor and converted to
XML format and stored in the KMS. 4. Intelligent system framework 4.1. Framework design
The design of the architectural framework for developing intel-ligent systems for the CO 2 capture process (CO 2 AFIS) ( Luo and Chan, 2010 ) reflects considerations emphasized in the INTEMOR framework which combines the dat a-driven, analytical, and knowl-edge-based approaches. The design of the INTEMOR framework provides a flexible and extensibl e architecture for coordinating different intelligent approaches an d integrates knowledge represen-tation techniques; it consists of components that enable robust data acquisition and historical data management. The design of the CO 2 AFIS consists of the four main components of (1) data prepara-tion, (2) knowledge base development, (3) a set of intelligent support modules and (4) the user interface. The design is shown in Fig. 4 and described in detail in the following subsections. 4.1.1. Data preparation component
The data preparation component provides mechanisms responsible for collecting, cleaning and managing the observed data sets captured from the plant. The data preparation compo-nent provides a centralized data source for the entire architec-tural framework. This component consists of sub-modules for data acquisition, data calibration, data storage, historical data management and data pre-processing. For multiple target plant stations, the data acquisition and data calibration mechanism could be distributed, as shown in Fig. 5 . Under this structure, the data acquisition modules can be developed individually for different types of data input or output interfaces or protocols. Each data acquisition module can support the particular data control server of a specific plant unit, which can use e.g. the protocol of Object Linking and Embedding for Process Control (OPC) or SQL TM (Microsoft s software). These data acquisition modules are responsible for communicating with the data control servers and extracting data from the plant units, and they can be customized for the particular characteristics of the data sets. The modules can also transform the format of the process data, which varies from plant to plant, into one consistent format and have the data stored locally. The consistent format of the stored data will facilitate their use in subsequent processes, thereby improv-ing performance of the entire system.

The historical data management module is responsible for management of the historical data, and performs the functions of further data validation and compression. Finally, the module prepares the data sets for different intelligent modules, which provide support for different operational functions of the CO capture process system. The data pre-processing module consists of multi-layer filters. 4.1.2. Knowledge base component domain and task ontologies of the amine-based CO 2 capture process system, which has been described in Section 3 . The KMS mentioned in Section 3 is responsible for constructing the knowl-edge base, represented in the output files of XML-scripts. The knowledge base consists of two files for the task and domain knowledge. Most of the knowledge is represented in XML, and both files are stored locally as the knowledge base of the framework.

The domain knowledge contains not only all the definitions of the objects involved in the CO 2 capture process plant and their properties but also describes the hierarchical relationships among the objects. The domain knowledge includes the three compo-nents of (1) the objects, (2) their attributes, and (3) values of the attributes. The task knowledge involves diagnostic information collected from the experts represented in rules, which describe value ranges of the attributes and remedial actions that corre-spond to abnormal values detected in the system.

The knowledge base provides the knowledge foundation for the different intelligent modules, which access it by means of a query interface. The advantage of this approach is that the knowledge base represented in XML can be updated, refined, and expanded without affecting the other components of the architectural framework. 4.1.3. Component of intelligent support modules
The support modules for different problem solving tasks can be implemented using artificial intelligence (AI) support techni-ques such as expert system, fuzzy logic and artificial neural networks (ANN), as well as non-AI techniques such as data visualization and statistical approaches. The development envir-onment provided by the architectural framework supports con-struction of the support modules, as well as their extensibility.
The environment can also facilitate future integration of other intelligent modules. 4.1.4. User interface component
The user interface component supports the interaction between the system and users by accepting user requests and assigning them to the corresponding intelligent support modules. The user interface component also delivers the results produced by the intelligent modules. It includes the three modules of graphic user interface (GUI), I/O interface, and I/O controller, and its structure is shown in Fig. 6 .

As can be seen in Fig. 6 , the I/O controller acts as the bridge between the two interfaces and the intelligent support modules so that the two interface modules cannot communicate with the support modules directly. The I/O controller coordinates the requests from both the GUI and I/O interfaces and assigns them to the corresponding intelligent support modules or the knowl-edge query interface. The outputs from the intelligent support modules and knowledge base are sent back to the appropriate interface through the I/O Controller as well. As the underlying data requested by the GUI and I/O interface are basically the same, the I/O controller provides one more layer of I/O control and reduces the burden of data processing on the interface side.
The graphic user interface (GUI) displays the results from the intelligent support modules to the user in the form of tables, figures and animation elements, and supports the user in inter-acting with the system. For example, the operator can monitor, analyze and diagnose the CO 2 capture process system by means of the GUI. This will be explained in detail in Section 5 , and Fig. 8 is a sample screen of the graphic user interface.

The I/O interface supports communication with other informa-tion systems. The I/O interface consists of a set of web services, and supports input and output in both XML formatted schemas or machine-processable Java Script Object Notation (JSON) 2 strings. With the I/O interface, a remote computer or an intelligent system module in a distributed environment can communicate with the intelligent system modules within the CO 2 AFIS framework. The framework also provides a set of web APIs, which contain rich web services that support knowledge sharing. 3 Some sample API X  X  include the GetAtttibutes, GetClass, GetRulesByAttrName and GetSubClasses web serivces. For example, the method of GetRu-leByAttrName accepts a single attribute name and uses it as an index to access the XML schema block describing the specified attribute and its threshold values and related rules in the task knowledge file of the knowledge base.

This web service is shown in Fig. 7 . In this manner, the system on a remote machine can utilize the semantic knowledge content stored in the knowledge base as if it was one of the local modules.
In this way, the I/O interface can improve extensibility of the entire framework system. 5. Sample application of the dual foundation approach: development of a web-based expert system module
The expert system module developed within the framework aims to assist the operator in monitoring the operating conditions of the CO 2 capture pilot plant by continuously comparing the measured values of the system with the desired values of the parameters.

A deviation from the normal ranges would set off an alarm to advise the operator that a problem has occurred. The system then diagnoses the nature of the abnormality and provides suggestions for remedial control actions which would rectify the abnormal situation. The expert system is developed based on the semantic knowledge stored in the knowledge base component. The domain knowledge consists of the classes of plant components, which correspond to those in the hierarchical structure implicit in the panels shown on the screen in Fig. 8 . The classes are listed in the top left panel of the screen shown in Fig. 8 . For example, the class selected in the screen shown in Fig. 8 is the  X  X  X bsorber-based CO capture unit X  X . The sub-classes of this selected class are extracted from the subset of class knowledge in the XML schema and listed in the middle left window under  X  X  X ubclasses X  X . When a sub-class is selected, the expert system calls the knowledge query interface, which has been implemented as a part of the application programming interface (API) of the CO 2 AFIS, to search the class knowledge in the XML schema, and retrieve all the attribute tags that belong to the selected sub-class. As shown in Fig. 8 , the sub-class of  X  X  X eclaimer X  X  is selected, and the attribute tags of the reclaimer are shown in the bottom left panel under  X  X  X ttributes X  X .
At the same time, the detailed profile of the sub-class including the attributes is retrieved and listed in the middle panel of the screen shown in Fig. 8 . The three objects of main class, sub-class and attribute are related in the ontological hierarchy represented in the XML file, which enables the user to easily identify the classes or attributes of interest. When the user selects a particular attribute, the system uses the tag name of the attribute as the index to identify the task knowledge in the XML schema by calling the knowledge query interface of the framework again, and retrieves the associated threshold values and task rules related to the selected subclasses. In this case, the rule set related to the  X  X  X eclaimer X  X  subclass is retrieved. Hence, it can be seen in
Fig. 8 that when the attribute of reclaimer pressure (PT-670) is selected in the bottom left panel of the screen, the sample task rules related to PT-670 are retrieved and are shown in the top right panel of the screen. It is noted that the rule for the normal state is not shown in Fig. 8 , because the knowledge base only contains the rules for abnormal value ranges. To complete the rule set associated with PT-670 for display purposes, the rule about the normal state and its interpretation are added to Fig. 9 , which shows the entire rule set related to PT-670.
 for which data are requested. In response, the framework retrieves the data records of the selected attribute captured in the time range from the database and lists them in the bottom right panel. Based on the retrieved knowledge content and the data, the expert system performs its functions as follows: (1) it evaluates the data records based on the rules retrieved for the attribute of PT-670, (2) it determines if the attribute data value is in the state of  X  X  X ow X  X ,  X  X  X igh X  X  or  X  X  X ormal X  X , and (3) based on the state, the corresponding remedial advice is determined. The outputs that are determined in steps (2) and (3) are displayed in the fourth and fifth columns of the data record table shown in the bottom right panel of Fig. 8 . The attribute state and remedial advice provides support to the operator of the CO 2 capture process system in monitoring and controlling the daily operation of the plant. In Fig. 8 , it can be seen that the value of the reclaimer pressure (PT-670) is around 0.487 kPa at 12:00 AM on 1, February 2008, which is lower than 12.0 kPa. Hence, according to part 3 of the retrieved rule shown in Fig. 9 , the system advises the operator to close the reclaimer back pressure control valve (PCV-670) in order to increase back pressure in the reclaimer. In this way, the expert system can provide decision support to the operators and enhance reliability of the CO 2 capture process system by automatically displaying most of the information necessary for monitoring and troubleshooting the system. 6. Discussion
The dual foundation of the architectural framework and the knowledge base built based on the domain ontology facilitated construction of intelligent system modules. The knowledge based component of the dual foundation is a repository of both the domain and task information related to the carbon dioxide capture process system. For each carbon dioxide capture plant, the implemented ontology generated by the KMS consists of the information on all the parameters of the plant, their associated values, identifiers, data paths, descriptions, units, and rule sets.
This information is utilized by the other component of the architectural framework.

The principal advantage of the dual foundation approach is the separation of the semantic information related to a particular application system from the functions needed for conducting the task of automated monitoring, control, and diagnosis. Since there can be multiple plant units for carbon dioxide capture, and each plant can have a slightly different configuration, separating the application domain knowledge from the functional utilities in the architectural framework enables the framework to support intel-ligent system development for diverse plant configurations. In each case, the framework can be re-used by combining the semantic knowledge on the CO 2 capture system with the func-tions defined in the architectural framework. This approach would reduce the development time needed for building different modules of the intelligent systems. This dual foundation approach improves upon the traditional method of expert system develop-ment by effectively encapsulating the application domain knowl-edge in an implemented ontology. In the next section, a sample module of a web-based expert system for the carbon dioxide capture process system, which has been constructed based on the dual foundation approach, is presented. 7. Conclusion and future work
This paper presents the interaction between the intelligent system framework of CO 2 AFIS and the implemented ontology developed for the CO 2 capture process system. An expert system module for monitoring and troubleshooting operation of the CO capture process system has been developed based on the dual foundation provided by the framework and the ontology. The framework supports construction of the expert decision support system, and enables retrieving and manipulating the semantic knowledge in the ontology. The current version of CO 2 AFIS uses the implemented ontology produced by the Knowledge Modeling System (KMS), which represented the domain knowledge for-mally, but left the task knowledge in the non-formalized repre-sentation of pseudo code. To facilitate task information retrieval from the knowledge base, a parser was written to interpret the pseudo code. Therefore, an item on the future research agenda is to formalize the task knowledge in the rule base so that it is machine-processable. To facilitate knowledge sharing with multi-ple intelligent system applications within the framework, the data and rules stored in the XML format need to be converted to the more standard representation of RDF or OWL.
 (1) if PT-670 &gt; 22.8 kPa : i. It is too high; excessive pressure in reclaimer. (2) if 12.0 Kpa &lt; PT-670 &lt; 22.8 kPa: i. Normal (3) If PT-670 &lt; 12.0kPa: i. It is too low; ii. Should Close reclaimer back pressure control valve PCV-670) to build back pressure and make up the pressure in reclaimer.
 Acknowledgment We are grateful for the generous support of the Canada Research Chair (CRC) program and the Natural Sciences and Engineering Research Council (NSERC).
 References
