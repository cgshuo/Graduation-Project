
Protecting sensitive information while preserving the shareabil-ity and usability of data is becoming increasingly important. In call-centers a lot of customer related sensitive information is stored in audio recordings. In this work, we address the problem of pro-tecting sensitive information in audio recordings and speech tran-scripts. We present a semi-supervised method to model sensitive information as a directed graph. Effectiveness of this approach is demonstrated by applying it to the problem of detecting and locat-ing credit card transaction in real life conversations between agents and customers in a call center.

H.2.8 [ Database Applications ]: Data Mining ; H.4.0 [ Information Systems Applications ]: General Algorithms, Experimentation
Call Center Analytics, Clustering, Information Privacy
Enterprises are increasingly providing ways for customers to per-form complex tasks over a voice channel. Tasks such as phone banking, stock trading, purchase of merchandise, medical consul-tation and counseling are common. In these tasks simple interac-tions with customers are handled by automated systems and com-plex ones use human agents. In order to complete a task often the customer shares private, sensitive and even confidential informa-tion. Often these conversations are recorded and shared for quality analysis, auditing, data mining, training and learning. The record-ings retain all the sensitive customer information. This poses a po-tential privacy risk because unauthorized personnel can misuse this information. To comply with different security and privacy reg-ulations in industries such as Healthcare, Insurance and Banking companies are required to take adequate steps to prevent the dis-closure of customer sensitive information. In order to comply with these regulations, enterprises restrict access to these recordings to authorized personnel only. Doing so restricts the shareability and usability of this data across the enterprise. Rather than just restrict-ing data access, a better approach is to identify all audio or tran-script segments that carry sensitive information, such as credit card details, customer addresses, passport details, SSN etc, and remove them so as to protect unauthorized access or disclosure. Similarly mining and analysis of call transcripts (ASR) for extracting process and business insights has become quite common in the recent past. It is necessary that these call transcripts are sanitized. Sensitive information contained in these transcripts become easily available to business and operational analysts which is undesirable. In this paper we present an approach to identify segments containing sen-sitive information.
Our method models and uses context to identify an Event of In-terest . Using context makes the system resilient to noise, bad gram-mar, lack of punctuation and syntactic variations. The method does not require syntactic information, domain dictionaries or other lex-ical resources making it easier to adapt to different Event types and domains. An Event of Interest is said to occur if sensitive infor-mation is mentioned in the audio recording. Examples of Event of Interest include the mention of credit card number, medical pre-scription, SSN number etc. Context Events are events that usually occur along with the Event of Interest .

We construct an event grammar for detecting Event of Interest from a corpus of unlabeled call transcripts. Figure 1 provides an overview of our approach.

Given a set of call transcripts that contain the Event of Interest , the idea is to select call snippets around this event. For example, if credit card number is the event of interest, we mark all numbers as seed events and pick a window comprising the number events and their left and right contexts.

Next we cluster call snippets based on their surrounding con-text. The idea is that call snippets mentioning the same Event of Interest will share a common context and will thus form coherent clusters. The discriminating features for each cluster provides us with n-gram features for the Context Event and Event of Interest events. We use SenseCluster [1] to group together units of text that are similar. The number of clusters is set manually. The clusters that are most representative of the Event of Interest are selected manually from the set of generated clusters.
The description of an Event of Interest is provided in the form of an Event Grammar, a set of pattern-matching rules that can be ap-plied to recognize whether a given transcript contains the E vent of Interest or not. This event grammar is represented using a di rected graph, which can be used to recognize Event of Interest . The nodes of the directed graph are the discriminating features of the chosen clusters. The direction of the edges in the directed graph re pre-sent the sequence in which the features can occur. The ASR tex t is very noisy and often event features are recognized in place o f other words resulting in false positive features. This usually re sults in lot of false feature matches. In order to prune unlikely feature matches we utilize the feature ordering and feature timing constrai nts. The weights on the edges represent the temporal constraints bet ween these features. The order in which the features occur in the A SR text is used to determine the set of legal paths between them. For instance, the feature "date" in majority cases occurs after the fea-ture "expiry" without having any other feature in between, t hus we create an edge from "expiry" to "date". The minimum and max-imum temporal gap between a pair of features is calculated fr om the histogram of the temporal distance between these two fea tures. The histogram is built by computing and quantizing the tempo ral distance using the timing information in the call transcrip ts. The minimum and the maximum temporal distance between the two features are those values that cover 20% and 80% area under th e histogram respectively.

To detect an Event of Interest we check whether the event gram-mar has matches in a given call transcript. To do so, we divide the call transcripts into a number of segments. The length of the segment is decided based on the longest path in the directed g raph. The longest path is calculated using the maximum temporal di s-tance weights on the edges. We look for a possible path from th e source to the sink node in these segments which satisfy the or der-ing and temporal constraints enforced by the event grammar. If a path is detected it indicates the presence of the Event of Interest .
We use recordings of real life telephonic conversation betw een agents and customers in a call center. The conversations are level 2 support calls for troubleshooting IT systems like laptops, desktops, modems, applications, anti-virus software etc. In some of t hese conversations cross-sell happens and the customers have to provide credit card information over the channel which is also recor ded in the conversation. Along with credit card information the cu stomer shares other kind of information like reference number, pho ne num-ber, product serial number, ticket number, purchase date an d last call-in date which are also recorded. Automatic speech reco gnition transcripts that we obtained have a word error rate of about 4 0%.
Human experts segregated the calls with credit card informa tion and annotated them with start and end times of the credit card trans-action event. We used 30 calls with credit card information a nd another 35 without credit card information to generate the e vent grammar for the credit card Event of Interest. A total of 211 s nip-pets were produced when we used three consecutive digits as t he "seed" feature. In the context based clustering step, the nu mber of clusters was set to 5. Out of the five only one cluster related t o the credit card event and this was used to generate the event gram mar. For experiments, we used a test set of 34 calls which had credi t card event and picked another 40 calls which did not have cred it card event.

We compared the performance of our method against the settin g where the event grammar is manually constructed. A domain ex pert was asked to create the event grammar for the credit card numb er Event of Interest . We also compared our approach against the naive case of keyword spotting. A regular expression is used to mat ch all instances in the ASR text where the term "credit" or "card" oc curs followed by a 4 digit number. The results are presented in Tab le 1. Our method outperforms the expert.

In future we plan to extend our work to conversations in which more than one language is used in the same call. [1] A. Purandare and T. Pedersen. Senseclusters -finding clu sters
