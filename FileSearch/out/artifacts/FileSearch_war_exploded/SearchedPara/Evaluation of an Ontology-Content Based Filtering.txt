 A new ontological-content-based me thod for ranking the relevancy of items in the electronic news papers domain is proposed. The method is being implemented in ePaper , a personalized electronic newspaper research project. The content-based part of the filtering method of ePaper utilizes a hierarchical ontology of news items. The method considers common a nd "close" ontology concepts appearing in the user's profile and in the item's profile, measuring the hierarchical distance between concepts in the two profiles. Based on the number of common a nd related concepts, and their distances from each other, the filtering algorithm computes the similarity between items and users, and rank-orders the news items according to their relevancy to each user, thus providing a personalized newspaper. We have conducted evaluations of the filtering method, examining various parameters. A group of s ubjects, each having defined an initial content-based profile using the news ontology concepts, read news items from a certain electr onic newspaper and expressed the relevancy of each item to them. In different runs of the algorithm on the same data, we changed several parameters of the algorithm, and compared the results with the user s' ratings. We discovered that the filtering method, which considers not only common concepts but also hierarchically related concepts, yields significantly better quality of filtering compared to using only common concepts. Moreover, we were able to find optim al values of similarity scores according to the hierarchical di stance between related concepts. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  Information filtering, Selection process.
 Algorithms, Experimentation. Content-based filtering deals with comparing representations of the content of items (documents) with representations of readers' interests, in order to find items that are most relevant to each user [1]. This poses a task of finding the best representation for both, the items (item profile) and the users (user profile). A user profile represents a mapping of the actual user's interest to a compact model space, which is an approximation of the user X  X  actual real world interests [9]. A user's profile and an item's profile should share a common method of representation (fo r example: representation by keywords) in order to enable matching between the profiles. The output of the matching process is expressed as a ranking score, indicating the similarity between the user's profile and a given item. In order to generate a representation for a non-structured content item, the item has to be analyzed, using some text analysis tool in order extract keywords to represent the item's content in the best way. This is one major drawback of content-based filtering, since this kind of representation causes ambiguity problems. Ambiguity might be resolved by using an ontology, which consists of a controlled vocabulary of con cepts, and semantic relationships among them. Ontology can bridge the gap between terms in the user's profile and terms that represent the items. There are many ways to build and to organize an ontology, one of which is in a hierarchy of broader-narrower concepts. A well-known ontology in the news domain is NewsCodes, created by IPTC [6]. It is used by several news agencies (e.g. Reuters) to classify their news items. This study reports the results of the development and evaluation of an ontology-based content filtering method, as part of a research project in which we have deve loped a personalized newspaper system, the ePaper . The personalization component of the ePaper includes also a collaborative filtering algorithm and a personalized content-adaptation method; here we report only on the content-based method and its evaluation. In the ePaper system news items are aggregated from many sources, and are personalized for each user, i.e., each user receives a list of items that are most relevant for her. Collaborative filtering which relies on users' opinions on items is inadequate as a sole method for the news domain due to the dynamic nature of the repository of items. New news items are constantly arriving to the system and should be recommended to users be fore they gain enough opinions due to their timely information. Thus, it is required to use content-based filtering at least until items gain enough reading history and users' opinions. The remaining of this paper is structured as follows: Section 2 presents related work on the use of ontology in content-based filtering. Section 3 describes th e ontology-content-based filtering method developed in the ePaper project. Then, Sections 4 and 5 present the experimental evaluation of the method and the results. Section 6 concludes and proposes further research issues. The use of conceptual modeling in general, and ontology in particular, was initially incorporated by researchers with the intention to increase the accuracy of content-based filtering, compared to traditional keyword-based methods. Few examples are[2], [5] and [12] who exploited ontology in order to achieve disambiguation that is most likely to occur when a query is formulated by a user. Ontological and conceptual modeling was also used in order to extract user profiles, such as the four-level ontology used in the Quickstep system [7], which recommends papers to researchers by combining both content-based and collaborative filtering techniques. Papers in a training set were represented as term vectors with term frequency normalized by the total number of terms used for a term's weight. Whenever a research paper browsed was classified to a topic, it accumulated an interest score of that topic for the particular user. In the ontology-based user profile, whenever a topic received some interest, all its super classes gained a share: the immediate super-class gained 50% of the main topics value; the next super-class gained 25%, and so on. Th is way, general topics rather than just the most specific ones were also included in the profile and thus produced a broader profile. Recommendations were computed based on the correlation between the user's topics of interest and papers classified to those topi cs. The evaluation performed on the system included a comparison between an ontology based profiles against a simple flat list. After receiving the recommendation, the user provided feedback regarding the relevancy of the recommended paper. The results showed that the ontology users were 7% -15% more satisfied. As opposed to the method proposed in this paper, the above descri bed method used fixed percentage values to assign the super-class values, and no directions are considered. The introduction of ontologies was argued by [8] as an enhanced representation of the relevant knowledge about the domain of discourse, about users and about contextual conditions for personalization-related applications . It is argued to significantly improve results of adaptive conten t retrieval when involved in the retrieval process. The authors elaborated and illustrated the advantages of ontology-based pers onalization for content retrieval and claimed that ontology provi des further formal, computer understandable meaning of the concepts, and makes it available for the personalization system to take advantage of. The authors showed ways in which ontology-driven representations can be used to improve the effectiveness of di fferent personalization techniques, and described a set of functionalitie s where ontologies are essential to achieve qualitative enhancements. A hierarchical representation fo r describing documents and user profiles was presented by [9]. Th eir method is based on attaching metadata to each document and using the same method to generate a compatible representation of users' interests. A hierarchical representation was chosen in order to develop a document classification system understa ndable to humans and yet not restricted to text documents. The au thors chose to take advantage of the hierarchical metadata concepts along with an asymmetric distance measure, which considers not only the concepts appearing both in a user's profile and in the document's profile, but also concepts appearing in a document's profile which do not appear in the user's profile. The underlying assumption for the asymmetric measure was that the best matchi ng documents are not necessarily those that cover all the interests at the same time. Distance computations were performed on di fferent levels of the hierarchy and the metadata was represented in a fuzzy distribution among the leaf nodes of the concept tree. The main contribution of this work was in suggesting the asymmetric measure of distance for hierarchical matching. Ganesan et al. [2] proposed severa l variations of new similarity measures between objects. These measures exploit a hierarchical domain structure in order to produce more intuitive similarity scores. The  X  X emantic knowledge X  in the hierarchy was used to help identify objects sharing common characteristics, leading to improved measures of similarity. The Vector-Space model was generalized to take the hierarchy into account in order to measure the similarity of leaves in the hi erarchy. The measure considers the Lowest-Common Ancestor (LCA), which is the node of greatest depth that is the ancestor of bot h leaves. The proposed similarity metric uses the depth of the LCA and the depth of the leaf for which the best match is to be found. Eval uation of the different similarity measures was performed by co mparing lists of objects ranked according to their similarity to a certain object, where one of the lists was considered to be the ideal rank. The results revealed that using the hierarchy was definitely an improvement over an approach which didn't exploit hierarchy. One main difference between the abovementioned met hod and the method described in this paper is that in order to calcu late the similarity, our method uses all the nodes in hierarchy as object s, as opposed to using only the leaves and their relations, as defined by the depth of common ancestors. Another difference is in the evaluation: our method does measure the quality of similarity, but rather focuses on the quality of personalization achieved by using similarity meas ures, as opposed to measuring the quality of similarity alone. The above surveyed content-based methods for filtering and recommendation attempted to cope with disadvantages of the traditional methods by incorporating additional knowledge in the form of a coherent ontology of concepts. The studies that incorporated ontology in their content-based filtering method usually resulted in better and more accurate results compared to traditional content-based methods. This encouraged us to adopt ontology for the news domain and inspired us to introduce a novel filtering method which incorporates such ontology. Our filtering method uses the ontology in a unique way to measure the hierarchical distance between con cepts appearing in a user's and item's profile, and to assign similar ity scores to different types of hierarchical similarity. It is described in the next section. The ontology-content-based filteri ng method is described in more detail in [11], while the focus of this paper is on the evaluation of this method. The method has been implemented in ePaper system which produces personalized newspa pers to its customers. In ePaper , we have adopted the IPTC NewsCodes [6] ontology. This is a 3-level hierarchical ontology of concepts targeted to news description, currently containi ng approximately 1,400 concepts. A first level concept of NewsCodes is called Subject ; a second level  X  SubjectMatter , and third, most specific level -SubjectDetail . Figure 1 demonstrates an example: In the ePaper system, each news item (item profile) and each user (user profile) are represented with a set of concepts taken from this ontology. In the ePaper system only (not in this research), the item's profile is generated automatically by a text classifier, which analyses its content (text) and the metadata that arrives with it from its provider (the classification method is described in detail in [13]). The initial user's profile can be de fined explicitly by the user (who opts to do so) who selects ontology concepts presented to her, and assigns weights of their importan ce. Subsequently, the concepts included in the user's profile and their weights, will be updated implicitly by the system, based on tracking of items the user read and the ontology concepts by whic h those items are represented. Here are a few more details about an item's profile and a user's profile: An item's profile consists of a set of ontology concepts that represent its content. If the item d eals with concepts that belong to the same branch of the hierarchy, only the most specific concept in that branch is included in the profile. For example, if the classifier determines that an item deals (among other) with 'sport' and specifically with 'football', it is re presented with 'football' only. A user profile consists of a weighted list of ontology concepts representing the user's interests. The profile may be initially defined by the user who selects concepts from the ontology and assign them weights of importance. At any rate, the profile is updated according to implicit feedback from the user: once a user reads (clicks on) a news item, the concepts representing that item are added to the user's profile (if not there already) and the weights of those concepts are increased. The weight of each c oncept in the user's profile is measured by the number of its clic ks divided by the total number of clicks in the user's profile. The method of measuring the similarity described herein was initially proposed by Shoval [10]. We measure the similarity between a user's profile and an item's profile by considering the hierarchical distance between concep ts in the two profiles hierarchy. An item and a user are similar, to a certain degree, depending on how many common (the same) con cepts and related concepts are included in each profile; the more common concepts, and the more close concepts  X  the more similar are the two. For example, assume that a user's profile includes 'footba ll'; this profile is similar to a certain degree to an item that includes 'football', but it is less similar to an item that includes 'sport', and it is more similar to an item that includes 'football' and 'basketball'. In the 3-level ontology that we adopted in the ePaper system, we measure similarity according to common concepts, or concepts that are in parental relationship, i.e., concepts that are one level apart (parent-child) or two levels apart (grandparent-grandchild). Generally, a user's concept may be more general than an item's concept, meaning that the user has a more general interest in a subject than the item. On the other hand, a user's concept may be more specific than an item's concept, meaning that the user has a more specific interest in a subject than the item. A case when a user's profile and an item's profile include related concepts, such as the above, we define as a "partial" match. When dealing with a "partial match" between user and item concepts, we also consider their relative position in the hierarchy. We distinguish between cases wher e the user's concept is more general than the item's concept and cases where the user's concept is more specific than the item's concept. In the first case, the user is probably interested in high Recall of items dealing with a concept, while in the second case --in high Precision. If this assumption is true, we must consider such cases differently when measuring similarity. Based on the above, we distinguish between 9 different possible cases of similarity between concepts in a user's profile and concepts in an item's profile, as portrayed in Figure 2: Level 1 in the ontology Level 2 in the ontology
Level 3 in the ontology Level 1 in the ontology Level 2 in the ontology
Level 3 in the ontology 'Perfect match' occurs when the concept appears in both the user's profile and the item's profile. Let's denote I1, I2, I3 as the level of a concept in the item's profile, and U1, U2, U3 as the level of a concept in the user's profile. A 'pe rfect match' can occur in 3 cases:  X  I1=U1 (e.g. item and user profiles include 'sport')  X  I2=U2 (e.g. item and user profiles include 'football')  X  I3=U3 (item and user profiles include 'World soccer 'Close match' occurs when a concept appears only in one of profiles, while a parent or child of that concept appears in the other profile. A 'close match' can occur in 2 pairs of cases:  X  I1=U2 (item concept is 'sport', wh ile user concept is 'football')  X  I2=U3 (item concept is 'football' while user concept is 'World In the above 2 cases, the item's concept is more general than the user's concept (1 level apart), i.e. the user interest is more specific than the item.  X  I2=U1 (item concept is 'basketball' while user concept is 'sport').  X  I3=U2 (item concept is 'Euro league' while user concept is In the above 2 cases, the item concep t is more specific than the user concept, i.e. the user interest is more general than the item. 'Weak match' occurs when the concept in the user's profile and in the item's profile are 2 levels ap art, i.e., and grandparent and grandchild. A 'weak match' can occur in 2 cases:  X  I1=U3 (item concept is 'sport' while user concept is 'World  X  I3=U1 (item concept is 'Euro league' while user concept is For each of the 9 possible cases we'd like to determine a score of the score is 1 (maximal), while in all the other cases the score and on the "direction" of the rela tionship, i.e. from general to specific or the other way around. The degree of similarity of an item' s profile to a user's profile is based on the number of 'perfect ma tch', 'close match' and 'weak match' of concepts in the two profiles, and on the weights of the concepts in the users' profile. The overall Item Similarity score ( IS ) is computed as follows: Z  X  The number of concepts in item's profile. U  X  The number of concepts in user's profile. i  X  The index of the concepts in item's profile. j  X  The index of the concepts in user's profile. S  X  The hierarchical matching parameter of concept i . N  X  The number of clicks on the items containing the concept. (Note: this measure of similar ity does not consider weights of concepts in item profile; this issue will be dealt later.) The content-based algorithm of the ePaper system measures the similarity of each item to each user, and rank orders the items that will be delivered to each user accordingly. The main objective of the evaluations presented in this study is to examine whether the measure of similarity that exploits the hierarchy contributes to the quality of filtering. Additional objectives are to determine the optimal values for the hierarchical matching parameters, and to examine the performance of the filtering method when considering various enhancements and modifications to the original filtering method. The dependent variables are the measures of performance of the filtering method. We used two ra nk accuracy measures that are appropriate to evaluate rank-ordered results where the users' preferences of recommendations are non-binary. Following [4], we used the following measures: -NDPM Measure is used to compare two different weakly ordered rankings. It measures the distan ce between ranking imposed by a user's ratings and ranking predicted by a system. -MAE Measure calculates the mean absolute error between system's predicted ratings a nd users' ratings. We applied discretization on the system rankings to match its results to the same scale as the user's ratings. In these two measures, lower value indicates better performance. The independent variables : We have conducted several evalua tions, and therefore we have several independent variables, as follows:  X  The hierarchical matching parameters: According to the similarity measure, there are five parameters: a (for 'perfect' matches), b and c (for 'close' matches) and d and e (for 'weak' matches) as shown in Figure 2. We examine the contribution of the different parameters and the impact of va rious values of the different parameters on the dependent vari ables. Based on that, we could determine the best values (i.e ., matching scores) for the news domain. The algorithm used here will be the basic one: no initial explicit user's profile or ot her enhancements were used.  X  The number of user ratings needed for training: Recall that a user's profile is updated implicitly according to the items read and rated. 
The objective is to discover how the increasing number of ratings used for updating a user's profile influences the performance of the algorithm. In order to simulate the learning process, we examined between 20 and 66 ratings (per user), where 66 is the maximum number of ratings that could be used for learning and still provide enough items for testing. All the runs at this point used 16 items as a testing set.  X  Initial user-defined profile: The basic filtering algorithm does not assume an initial profile defined by the user, but rather starts with an empty user's profile that is implicitly updated. The objective is to examine whether the existence of an initial profile defined by the user contributes to the performance of the algorithm. This was done by comparing the performance of the basic algorithm (implicit update only) versus the version of the algorithm with an initially defined user profile along with an implicit update. Note that at any rate the user's profile is updated implicitly by the system as based on her reading (clicks on items).  X  Weights of concepts in items' profiles: the concepts representing the items may be weighted where the weight of a concept indicates how dominant it is in th e item. This variable examined the impact of adding weights on the performance of the algorithm. 
In the weighted version, the hierarchical matching scores of each parameter were multiplied by the weight of the respective concept in the item. We decided to collect rating data rather than using existing collection of users' ratings since the existing collections do no consist of news items which might re sult in different users' behavior. This decision implies of course on the amount of users and the ratings. We precisely collected local news so that to ensure users' interest in the items. Fifty-seve n test subjects, students from Ben-Gurion University, participated in this experiment over the course of 4 days (on Mondays and Thursdays of two consecutive weeks). The test subjects, 25 fema les and 32 males, at ages between 18 and 28 years, were paid for their participation. The subjects were picked according to two main criteria: a) high proficiency in the English language; b) use to read news (pri nted or online) several times a week. The subjects read and rated news items from The Jerusalem Post (Israel's daily English news website www.jpost.com). On each experiment day, each subject read approximately 20 news items published on that day. Altogether, each subject read 83 news items during the experiment. Each subject was asked to rate the level of interest of each item on a 0-5 scale, 0 being "not interesting at all". On the first day of the experiment, the subjects registered and defined their initial content profile, based on the top-level concepts of the ontology, by choosing their level of interest in each concept on a 1-5 scale. We chose to let th e subjects define their interests from the top-level ontology only, because including the other two levels would be too cumbersome and confusing for them (as there are in total about 1,400 concepts). Furthermore, in the real world, users tend not to provide information about their interests at all, let alone very detailed information as they would if we presented them with the full ontology. The initial, explicitly defined profile was used only in one of the algorithm runs, to examine its effect on performance, while the basic version of the algorithm did not take a user explicitly defined profile into consideration. As soon as the rating collection pha se was complete, all news items used in the experiment were classified by a human classifier, who used concepts from the ontology. On average, 2.27 concepts were classified per item. Each concept was also given a weight of importance (on a 0 to 1 scale). The users' ratings of the news items, ranging from 0 to 5, were recorded to enable comparisons with the algorithm's rankings. At the same time, the user's ratings were also transformed onto binary ratings (0 or 1), to enable implic it updates of their profile. We used the following transformation: for users whose highest user's rating was 5, we transformed her ratings 5 or 4 to 1, while all the other -to 0. For users whose highest rating wa s 4, we transformed the 3 and 4 ratings to 1, while all the others -to 0. The algorithm's ranking was discretisized to a (0 to 5) scale as well, by ordering the user's ratings for the items in the testing set according to the order suggested by the algorithm's ranking. Ten-fold cross-validation was used, meaning that the dataset of ratings per each user was divided into 10 different pieces, in order to enable each time a different 80% of the ratings to be used as a training set and the rest 20% -as a testing set. For the same user, the algorithm was run 10 times, each time with different "training" and "testing" data. All this was perfo rmed for all 57 users, 71 times  X  each time for a different parameter set. The 71 parameter sets were generated by creating all the possi ble combinations of parameter values, ranging from 0 to 1 with delta s (differences) of 0.2. Table 1 presents a small sample of the parameter sets used. When generating the parameter sets, we have either eliminated some of the parameters or cha nged their values, while applying some restrictions. For example, the value of parameter a ('perfect' match) is always bigger than the other values and the values of parameters b and c ('close' match) are always bigger than those of parameters e and d ('weak' match). The rational behind this is the assumption that a two level di fference (grandparent-grandchild) between concepts in a user's profile and an item's profile has less impact on the similarity score than a one level difference (parent-child). For example, in a case where a user's profile includes 'Sport' and an item's profile includes 'World soccer tournament', (2-levels apart) the score of similarity s hould be lower than the case where the item's profile includes 'soccer' (one level apart). The training set of read items was used to update the subjects' profiles, while the filtering algorith m was applied on the testing set. The algorithm produced a ranked list of items, which was compared to the subjects' ratings of the ite ms. This comparison was performed using the NDPM and MAE measures. In the following sections we presen t the results for the various runs of the algorithm. The purpose of this test was to find out which of the hierarchical parameters affect the quality of filtering, and to determine their optimal values (matching scores). Figure 3 presents the NDPM measures, averaged over all users and folds, per each of the 71-parameter sets. The first part of th e graph includes parameter sets in which the 'weak' match scores are e qual to zero, i.e. only 'perfect' and 'close' match parameters have values. In parameter set 1 only the 'perfect' match score is consider ed, and is equal to 1 (while both the 'close' and the 'weak' match scores equal to zero). The second part of the graph includes paramete r sets for which at least one of the 'weak' match scores is not equal to zero. The third part of the graph includes parameter sets in which all the matching parameters are not zero. Figure 4 presents the equivalent MAE measures. Several interesting results can be observed in the two graphs: 1. In the first (#1) parameter set, which considers only 'perfect' 2. The best results (lowest MAE and NDPM measures) are Repeated Measures ANOV A on NDPM and MAE was performed in order to check the two observati ons mentioned above. The results show that the MAE values reached by parameter set #1 are significantly higher than all the othe r parameter sets for p&lt;0.05. The NDPM values reached by parameter set #1 are significantly higher than 67 out of 70 other paramete r sets for p&lt;0.05. For those parameter sets that did not reach significantly different NDPM Given all that, we may concl ude that parameter set #1 is significantly different, i.e., higher th an all other parameter sets. In other words, considering 'perfect' match of concepts only yields the worst performance; hence, that the filtering method should consider the other parameters. The second observation was also examined by Repeated Measures ANOVA on the NDPM and MAE values. According to the results, parameter set #35 reached significantly lower NDPM values than 55 other parameter sets. This parameter set also reached significantly smaller MAE values than 57 other parameter sets. This means that there is no other parameter set that is significantly better than 55 or 57 other sets, respectively. Therefor e, the values of parameter set #35 may be defined as the set with the optimal matching scores. This parameter set reaches significantly better results compared to all the other parameter sets and s hould be used in this algorithm. The learning ability of the algorithm was examined through a gradual increase of the number of user ratings used for training (while applying the best values of parameters obtained before  X  those of set #35). We ran the algorithm while varying the number of ratings used for training; the num ber of ratings used for training was: 20, 30, 40, 50, 60 and 66 (6 runs). Figure 5 displays the "learning curve" of the algorithm using the NDPM measure value with different numbers of ratings us ed for training. As can be seen, the NDPM measure gradually decreases (i.e. improves) as the number of ratings used for traini ng increases. The straight bottom (pink) line indicates the NDPM measure value with 67 (max amount) of ratings used for trai ning. The MAE measure behaves similarly (but due to space limit, this graph is not shown). The statistical Paired Samples t-test showed that there is a significant decrease in the measures as a function of the number of user ratings used for updating the user's profile (the training set). 
Figure 5: NDPM as function of number of ratings for training At the beginning of the experiment, each user defined an initial profile, by selecting top-level ont ology concepts and determining their weights on a 1 to 5 scale. These ratings were mapped to an initial number of clicks in each user's profile. As before, the algorithm was run with the best values of the parameters, only with an initial profile. Figure 6 shows the performance as function of the number of ratings used for training (t he lowest, straight line), versus the performance without an initial profile (the upper line). This figure demonstrates that the use of an initial, explicitly defined user profile along with implicit learni ng, yields better NDPM measure than without an initial profile. It also shows that when an initial profile exists, implicit update of th e user's profile does not improve performance as the number of ratings for training increases. It can be seen that the lowest line of the graph stays almost at the same NDPM level and doesn't change as the number of ratings used for implicit update of the user's pr ofile increases. The MAE measure behaves in a similar way (not shown). A comparison was performed to an algorithm run with initial explicit profiles but without consideration of the hierarchy (i.e., only 'perfect' match considered). This was done in order to further examine the contribution of hierarchical scores. The comparison is presented in Figure 7. It shows that the performance of the algorithm with initial profiles but without consideration of the hierarchy is much worse than the performance with the consideration of the hierarchy (the lowest line). The MAE measure behaves in a similar way (not shown). To examine the effect weights of concepts in the items' profiles, we run again the algorithm with the best parameter values, but this time we included the item's concept weights in the formula that computes the ranking score. A Paired Samples T-test was run on the NDPM and MAE values of the modified algorithm and of the original algorithm (using the best set of parameters values). The m ean results for the un-weighted item concepts were 0.31617 (NPDM) and 1.17005 (MAE), while the mean results for the weighted item concepts were 0.31718 and 1.18141, respectively. The statistical tests showed that there is no significance difference between the results at p&lt;0.05, meaning that the inclusion of item concept weights does not improve the performance of the algorithm. 
Figure 6: NDPM as function of number of ratings for training 
Figure 7: NDPM as function of number of training ratings The ontology-content-based filtering algorithm was implemented and evaluated using different m odifications. The main conclusion from the results of the evaluations is that employing the hierarchical distance scores does play an important role in the filtering performance. As we have seen, in cases where only 'perfect' match between concepts were considered, the filtering results were worst, compared to all other cases where various hierarchical distance scores were considered. Additiona l evidence for the contribution of hierarchical measures was found wh en we incorporated initial user-defined profiles: significant difference was found between the performance of the algorithm when employing the best parameter set with an initial user-defined pr ofile, compared to when employing the algorithm with an initial user defined profile but without consideration of the hierarchy. Here too, same as without an initial profile, the results when not considering any hierarchy were significantly worst. The results regarding the values of the parameters of the hierarchical similarity scores enabled us to determine the best values of the parameters, which are: a=1, b=0.8, c=0.4, d=0, e=0.2 . Note that the similarity scores of 'close' match are relatively high, but the score of parameter b is higher than that of c . The similarity scores of 'weak' match are indeed low or zero.
 Another conclusion is that the basic algorithm improves its performance as the number of ratings used for training is increased. This means that the algorithm has a learning ability and benefits from an increasing number of user ratings used for training. However, it can be seen that the algorithm can handle the cold-start problem quite effectively. After a relatively small number of ratings (20) the error is acceptable (0.35). It does however improve significantly when more ratings are received. It can be also concluded that running the algorithm with incorporation of an initial, explicitly defined user profile, which is then updated implicitly, results in a significantly better performance than without an initial profile (i.e., an empty user's profile that is implicitly updated with users' ratings only). In addition, the results show that with these settings, the algorithm does not show any improvement as the number of rati ngs used for training increases from 20 to 66. It is possible that the situation would change if the number of ratings for training in creases to hundreds or thousands. As a result, the performance of the basic algorithm using implicit updates only will not be much different than an algorithm with an initial profile and a high number of implicit updates. An enhancement of the basic filtering algorithm that we examined was to weigh the concepts in the items' profiles. Our results did not show a significant improvement in performance. However, it is possible that the results could be different had we used different values of the parameter set, not th e values that we found optimal for the basic algorithm. The results of the evaluations pres ented in this paper are based on a four-day experiment, with 57 test subjects who rated 83 news items. It would be interesting to explor e how the algorithm performs with a much bigger number of ratings used for training (say hundreds or thousands), and whether or not it will affect the learning curve when an initial user-defined profile exists. The ePaper project is sponsored by Deutsche Telekom Co. and is performed at Deutsche Telekom Laboratories at Ben-Gurion University. [1] Andrenucci, A. 2006. Collaborativ e computing. Department of [2] De Luca, E. W., &amp; N X rnberger, A. 2004. Ontology-based [3] Ganesan, P., Garcia-Molin a, H., and Widom, J. 2003. [4] Herlocker, J. L., Konstan, J. A., Terveen, L. G., &amp; Riedl, J. T. [5] Khan, L. 2000. Ontology-based Information Selection , Ph.D. [6] Le Meur, L., &amp; Steidl, M. 2004. NewsML X  1.2  X  Guidelines [7] Middleton, S. E., De Roure, D.C., &amp; Shadbolt, N.R 2001. [8] Vallet, D., Cantador, I., Ferna ndez, M., and Castells, P. 2006. [9] Savia, E., Koskinen T., &amp; Jokela, S. 1998. Metadata based [10] Shoval, P. 2006. Ontology and content-based filtering for the [11] Shoval, P., Maidel, V. and Shapira, B. 2008. An ontology-[12] Sieg, A., Mobasher, B., Lytinen S., &amp; Burke, R. 2004. Using [13] Tenenboim, L. Shapira, B., and Shoval, P. 2008. Ontology-
