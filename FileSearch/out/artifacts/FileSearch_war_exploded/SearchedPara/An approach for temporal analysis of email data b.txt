 1. Introduction
Email is an essential means for the dissemination and exchange of information in organizations as well as in more per-sonal settings. It has been used for all kinds of information exchange including business, technical, and social. Exchange of email among individuals and organizations has been seen as an indication of collaboration and shared interests. Therefore, it is meaningful to analyze email data to discover the hidden social structures among email users and prominent individuals [2 X 4,9,19,21,23,24,27] .

Although analysis of email data can be an effective means for understanding organizational issues, it has been difficult to obtain this kind of data due to privacy issues. Recently, while investigating the Enron scandal, the Federal Energy Regulatory
Commission released a set of emails exchanged among about 150 mostly senior executives at Enron Corporation. These email data have given the researchers a rare opportunity to study true organizational email data. There has been an explo-sion of research efforts studying this data set [4,7,9,10,18,19,21] .

Email data comprises of a collection of email messages. Each email message is time-stamped and typically contains a structured header with the sender X  X  and recipients X  names (or user IDs), date the message was sent, the subject header, etc., and an unstructured body part with a text message. The time stamp and header provide the link among different indi-viduals in the email data in terms of who knows what and when. This is an important part of identifying hidden communi-cation patterns among individuals. The unstructured part can be used to identify the type/reason for the communication pattern itself. For example, the message part may provide clues about the context in which the individuals know each other.
In this paper, we propose an approach for performing temporal analysis of email data by using the time stamp and the sender and recipient information. Based on such analysis we can determine when a group of users started communicating with each other, how long they have been in contact, etc. While temporally analyzing email data, it is important to determine who is contacting whom within a given time interval, as well as how these communications change as the time interval changes. Many patterns of communication may emerge. For example, a user may start by contacting a small number of users, but over time he/she contacts many users. Another user may be in touch with the same users all the time. The proposed approach for temporal analysis of email data can capture these patterns.

The main challenge for temporal analyses of email data is to identify the significant communication patterns present in communication pattern repeats over a period of time. However, communication among individuals is inherently bursty. Sig-nificant communication patterns cannot be discovered by choosing a specific time period for analysis, for example, after a significant event. Bursty communication also means that the time period cannot be broken into small regular time intervals such as days/weeks/months to identify communication patterns for each time interval in order to understand how these pat-terns evolve over time, because the burst may not occur exactly within a specific week or month.

This paper describes a novel approach based on time series segmentation to identify significant communication pat-terns. A time series is typically a sequence of a finite number (say, n ) of observations of some phenomenon. Depending on the application being studied, an observation can be a single numeric value, a vector of numeric values, etc. Time series segmentation techniques partition the time period associated with the data set into a sequence of non-overlapping time intervals called segments . Typically the number of segments (denoted by p ) in a segmentation is much smaller than n . Each segment has a single observation associated with it, which is computed by applying a function on the observations of the time points in that segment. By combining time points into a segment, noisy data are removed and significant patterns are highlighted.

Given a time series with n observations, there may be many possible segmentations with p segments. For example, each segment may contain all time points during the same week or month. One can also divide n observations equally into p seg-ments (in case when n is a multiple of p ). However, time series segmentation techniques often construct an optimal seg-mentation of the input time series containing at most p segments. Intuitively, an optimal segmentation contains the p segments that highlight as many of the significant patterns in the data as possible.

This paper uses the segmentation technique to identify temporal changes in the communication patterns of a single indi-sociocentric patterns [5]. To enable the application of time series segmentation techniques, the email data are represented as an item-set time series [6,25,26] . In an item-set time series, each observation is a discrete set of items. An item-set time series can be used to represent non-numeric data such as email data, so that powerful time series analysis methods can be applied to discover temporally changing patterns.
 where each contact set is a set of email IDs, with whom u was frequently corresponding with during the time point t . The egocentric patterns of u are discovered by constructing an optimal segmentation of the contact set time series of u .
To find sociocentric patterns, we extend the item-set time series representation to an item-setgroup time series where each observation is a set of item sets. The item-setgroup time series enables us to capture a significant subgroup within a group of individuals by combining their contact sets. In this paper, we show how to identify subgroups where every user is in contact with every other user in the subgroup. We refer to such a sociocentric pattern as a clique pattern . Each set of item sets is represented as a directed graph, which we call a contact graph . An optimal segmentation of the item-setgroup time series is constructed and clique patterns are extracted from the contact graphs of the segments in the optimal segmentation.

To the best of knowledge, our approach is the first to use time series segmentation to identify temporally evolving sig-nificant communication patterns.

To understand the effectiveness of the proposed approach, we applied it to extract egocentric and sociocentric patterns from the Enron Email data set [10]. We used the email data from 2000 to 2001. We extracted the contact set time series for a handful of users and constructed optimal segmentations of different sizes. In addition, we constructed an item-setgroup time series to capture email exchanges among about 150 users. We constructed several optimal segmentations of the item-set-group time series. Our initial experiments were very successful. The experimental results demonstrated that several kinds of egocentric and sociocentric communication patterns can be extracted from optimal segmentations of contact set and item-setgroup time series.

We would like to note that we do not analyze the contents of email messages in this paper. However, we believe that our approach provides a starting point for data analysts to select potentially interesting email messages for manual or other forms of automated analyses.

The rest of the paper is organized as follows. After discussing some preliminaries in Section 2, we describe the approach for finding egocentric communication patterns in Section 3. It defines a contact time series and describes methods for con-patterns. In Section 5, we discuss our experimental results using the Enron Email data set. Section 6 discusses the related work and Section 7 concludes the paper. 2. Preliminaries
A time point is an instance of time with a given base granularity , such as a second, minute, day, month, year, etc. A time point can be represented by a single numerical value, specifying a given second, minute, day, etc.

Let I be a finite set of discrete items d 1 ; d 2 ; ... ; d taining zero or more item sets. An item setgroup is empty if it contains zero item sets or only empty item sets.
An time series T consists of a finite sequence of n samples x that T is an item-set time series if each observation x k setgroup.

A segment s  X  i ; j  X  X  1 6 i 6 j 6 n  X  of a time series T consists of the consecutive time points t segment s 1 ends immediately before another given segment s and h . In this case, the concatenation of s 1 and s 2 , denoted as s The length of a segment s  X  i ; j  X  is denoted by j s  X  i ; j  X j . j s  X  i ; j  X j  X  j i  X  1.
 The following lemma proves that there are a polynomial number of segments in a time series.
 Lemma 2.1. Let T be a time series containing n samples or time points. T contains O  X  n 2  X  segments. for i and for each starting time point, there are n i possible ending time points. In total there are which is O  X  n 2  X  .

A segmentation P of a time series T is a sequence s  X  b 0 concatenation s  X  b 0 ; b 1  X  s  X  b 1  X  1 ; b 2  X  s  X  b l 1
P . h 3. Egocentric patterns
In this section, we discuss how to discover communication patterns for a single user. A user may be in contact with dif-ferent people at different periods of time, and the amount of email sent to a user may change over time. If more email is sent to a user during a period of time, then the sender and/or the recipient of the email might be an important part of some task that is being carried out during that time period. 3.1. Contact set time series
To identify egocentric patterns for a given user u , we represent the communication activity of u as an item-set time series, time series of a user u  X  u 2 U  X  is a sequence containing n item sets, which are referred to as contact sets , c at consecutive time points t 1 ; ... ; t n . Each item set c users to whom the user u frequently sent emails at time t u ) to whom u sent emails at time t j . We assume that u does not send emails to himself/herself. We first count the number of emails u sent to each of these users and compute the average number of emails u sent in t user IDs u k where the number of emails sent by u to u k is greater than the average value.
 u .
It is easy to see that 0 6 v  X  u ; s  X  i ; j  X  X  6 1. Let a be a user-defined threshold such that 0 segment s  X  i ; j  X  is the set of all user IDs u such that v  X  u ; s  X  i ; j  X  X  P a and is denoted by I a single time point, the segment contact set is the same as the contact set of the time point in that segment.
Example 3.1. Let Ellen be a user. Suppose we have the following contact set time series constructed from Ellen X  X  email history.
 2003, January 22, 2003, January 23, 2003, and January 24, 2003. (This means that Ellen sent emails frequently to f Andrew ; Bob ; Charlie g on January 21, 2003, etc.) v  X  Bob ; s  X  1 ; 2  X  X   X  1 : 0 ; v  X  Charlie ; s  X  1 ; 2  X  X   X  1 : 0, and v  X  David ; s  X  1 ; 2  X  X   X  0 : 5. v  X  Frank ; s  X  2 ; 4  X  X   X  0 : 33.

Suppose a  X  0 : 5. Then, I a  X  s  X  1 ; 2  X  X  X f Andrew ; Bob ; Charlie ; David g . I
To measure how well a segment contact set represents the contact sets at the time points in that segment, we define a metric called the segment difference . First let us define a notion called the fractional difference between two item sets x wise. Let s  X  i ; j  X  be a segment and c h be a contact set at time point t between I a  X  s  X  i ; j  X  X  and c h . Then the segment difference d  X  s  X  i ; j  X  X   X  Example 3.2. Consider I a  X  s  X  1 ; 2  X  X  from Example 3.1 .

I a  X  s  X  1 ; 2  X  X   X  f Andrew ; Bob ; Charlie ; David g . d
I a  X  s  X  2 ; 4  X  X   X  f Andrew ; Bob g . d 2  X  0 : 75 ; d 3
A simple procedure to compute all segment differences for a given contact set time series is outlined in Fig. 2 . The algo-rithm uses the following observation about fractional differences:
Given a segment contact set I a  X  s  X  i ; j  X  X  of a segment s  X  i ; j  X  and a contact set c vation can be used to compute the segment difference of a segment by simply counting the size of the intersection, denoted j c j and j I a  X  s  X  i ; j  X  X j respectively. For each segment s  X  i ; j  X  , the algorithm computes I
O  X  nm  X  . Next the algorithm accesses each c k again to compute the segment difference as follows. It first computes omega , the size of the intersection of c k and I a  X  s  X  i ; j  X  X  , to compute the fractional difference d in variable seg diff  X  i  X  j is a summation of d k ; i 6 k 6 j . This step takes an additional O  X  nm  X  time. To compute in Fig. 1 is O  X  n 3 m  X  . Ref. [7] describes a more efficient computation. 3.2. Optimal segmentations
Segmenting a time series to remove noise and compactly represent the information is an important and well studied problem [1,6,7,13,15,17] . In this section, we outline an algorithm to construct an optimal segmentation for a given time series.

Given a segmentation P  X  s  X  b 0 ; b 1  X  ; s  X  b 1  X  1 ; b the sum of the segment difference of each of the segments in P . p segments with the least possible amount of segmentation difference.

To construct an optimal segmentation of a given time series T , we require two inputs. One input contains the segment difference value for each of the O  X  n 2  X  segments of the given time series and another input specifies an upper bound p on the size of the desired segmentation of the input time series. The dynamic programming based algorithm is typically used to construct an optimal segmentation [7,13,25,26] . Prior to carrying out the dynamic programming algorithm, the segment difference values for all segments are computed and are available to the algorithm.

The dynamic programming algorithm operates as follows. We assume that the item-set time series to be segmented be-gins at index 1 and that p 6 n . A two-dimensional table R is maintained by the dynamic programming algorithm. Entry R  X  j ; k in the table records the minimum possible amount of segmentation difference that can be incurred by combining time points used to compute the value of R  X  j ; k from previously computed entries in the table.
 R  X  j ; 1  X  d  X  s  X  1 ; j  X  X  .
 R  X  j ; k  X  min k 1 6 z &lt; j  X  R  X  z ; k 1  X  d  X  s  X  z  X  1 ; j  X  X  X  ; k &gt; 1.

A dynamic programming algorithm based on the above recursive equations can be used to construct table R in O  X  n 2 p  X  time. Since p is an upper bound on the number of segments, the optimum segmentation X  X  segmentation difference value this minimal value is returned.

The dynamic programming algorithm typically uses an additional two-dimensional table T , where T  X  j ; k records the value k 1 segments to end at time point k 1, and then uses the z loop to consider each of the time points between k and j 1as the ending of the first k 1 segments.

For time series data containing a large number of time points, the dynamic programming algorithm outlined above may be time consuming in practice. More efficient greedy heuristics studied in [8] may be used to find segmentations of desired size.

Example 3.3. Let us consider the contact set time series C of user John containing the following four contact sets  X  fh Jane ; Kim i ; h Kim ; Frank ; Jim i ; h Jane ; Kim i ; h Kim ; Gary ig . Let a  X  0 : 4.
 The segment contact sets are as follows.

I a  X  s  X  1 ; 2  X  X   X  f Frank ; Jane ; Kim ; Jim g ; I a  X  s  X  1 ; 3  X  X   X  f Jane ; Kim g ; I
I  X  s  X  2 ; 3  X  X   X  f Frank ; Jane ; Kim ; Jim g ; I a  X  s  X  2 ; 4  X  X   X  f Kim g ; I
The segment difference values are listed below.
Therefore, the third choice is deemed optimal. The compact representation of T generated by this choice is fh Jane ; Kim i ; h Kim ; Gary ig . 4. Sociocentric patterns
Sociocentric patterns capture the interaction between a group of individuals based on the communication exchanged among the group. For instance, it may be interesting to find a subgroup of users who are likely to contribute to a common shared knowledge. Informally, this may be determined by identifying a subgroup whose members each communicate with every other member in the subgroup. We refer to such a subgroup as a clique pattern. There may also be groups where a single individual, such as the group leader (or a project manager), is a point of contact for other individuals in the group.
We refer to this kind of subgroup as a star pattern. This paper deals with clique patterns only. However, the method can be extended to star patterns also.

Finding communicating subgroups within a larger group is an important problem [2,4,5,9,19 X 21,23,24,27] . To our knowl-edge, this is the first application of time series segmentation to solve this problem.

To identify a clique pattern, we must look for communication among users, which may not occur on the same day or among individuals. We address this problem using time series segmentation by constructing a segmentation where seg-ments are chosen based on minimizing the loss of communications among individuals. By doing so, the existing clique pat-terns in the data are highlighted.

To capture group interactions, we represent the email data set as an item-setgroup time series, M . Each time point t is associated with an item setgroup m i which includes at most one contact set for each user in U .
 s  X  i ; j  X  . Let a be a user-defined threshold. An item setgroup of segment s  X  i ; j  X  , denoted by EI sets may be empty.
 for each user in each time point are as follows.
 The item setgroup m 1 for time point 1 contains only one contact set, f Bob ; Gary g , for Adam.
 The item setgroup m 2 for time point 2 contains only one contact set, f Adam ; Gary g , for Bob.
 The item setgroup m 3 for time point 3 contains only one contact set, f Henry g , for Gary.
 The item setgroup m 4 for time point 4 contains two contact sets. It contains f Bob g for Adam and f Adam g for Gary. Suppose that a is 0 : 5.
 EI a  X  s  X  1 ; 2  X  X  contains the segment contact set, f Bob ; Gary g , for Adam and f Adam ; Gary g , for Bob . EI a  X  s  X  1 ; 3  X  X   X  EI a  X  s  X  2 ; 4  X  X   X  fg .
 EI a  X  s  X  1 ; 4  X  X  contains a single segment contact set, f Bob g , for Adam .
 fined in Section 3.2.

Example 4.2. Consider s  X  1 ; 2  X  . users  X  s  X  1 ; 2  X  X   X  f Adam ; Bob g . The segment contact set I
Therefore, d  X  s  X  1 ; 2  X  X  incurred for Adam is 1. The segment contact set I Bob is also 1. Therefore, the segment difference of s  X  1 ; 2  X  is 2.

Each item setgroup m i for a time point t i , or the segment item setgroup EI
The directed graph constructed from each m i is referred to as a contact graph  X  g graph constructed from EI a  X  s  X  i ; j  X  X  is referred to as a segment contact graph  X  g edge u h ! u l in g i if u l is in the item set of u h in m
Similarly, segment contact graph g ij captures the group communication in segment s  X  i ; j  X  . Node in g
There is an edge u h ! u l in g ij if u l is in I a  X  s  X  i ; j  X  X  of u Fig. 3 shows the contact graphs and segment contact graphs for the item-setgroup time series described in Example 4.1 .
Given a contact graph g i (or a segment contact graph g ij the graph) such that, for every pair of nodes u and v in Q , there is an edge from u to v and from v to u in g clique pattern Q is the number of nodes in Q .
To extract clique patterns from an email data set, we first construct an item-setgroup time series corresponding to the compute the segment difference of each of the segments that are required by the dynamic programming algorithm to con-struct an optimal segmentation of a desired size. Then, we extract clique patterns from the segment contact graph of each segment in the desired optimal segmentation. The clique patterns can then be further analyzed to compute the users in-volved and the topics of the messages exchanged.

In Example 4.1 , none of the contact graphs contain cliques. However, the following example illustrates a scenario where one of the segment contact graphs in an optimal segmentation of the item-setgroup time series contains a clique pattern.
 Example 4.3. The segmentation difference of an optimal segmentation of size 3 of the above item-setgroup time series is 2. be discovered in the segment contact graph g 12 . Note that none of the contact graphs g
Intuitively, the construction of an optimal segmentation chooses segments that minimize the overall segmentation dif-ference. By so doing, the segments in an optimal segmentation reflect as much of the communication among users occurring at the time points in that segment as possible. This increases the probability of finding cliques among users. There may be many other ways to define the segment difference function so that cliques in segment contact graphs are preserved. We plan to study them in future.

The extraction of clique patterns require finding cliques in a graph which is a well-known NP-Complete problem. In this paper, we used a brute-force computation to find all cliques in a graph. This method worked well because segment contact graphs in our experiments contained a small number of nodes. For large graphs, heuristics may be employed for finding cli-ques [11,12] . 5. Experiments
We used the Enron email data set to study the effectiveness of the proposed methods to extract egocentric and clique patterns from email data. The Enron Corpus was made public during the legal investigation of the Enron Corporation. It con-tains about 200,000 email messages [10] exchanged between about 2150 users.
 The experiments were designed to study the following observations:
An optimal segmentation of the contact set time series of a user captures many kinds of information regarding a user X  X  communication patterns.

The values chosen for user-defined parameters such as the segmentation size and the threshold a can significantly impact the information embedded in an optimal segmentation.

Optimal segmentations are superior to segmentations that are built by simply dividing the time period associated with the time series, without examining the underlying data.

Optimal segmentation of the item-setgroup time series discovers a larger number of cliques from the data set when com-pared to the case where the data set is not segmented. In addition, clique patterns computed from an optimal segmenta-tion include a larger number of users in each clique.
 The following lists some of the important experimental findings:
Optimal segmentation of a contact set time series is extremely effective in capturing egocentric patterns. We studied an optimal segmentation containing 20 segments of the following three users  X  Jeff Fawcett, Audrey Robertson, and Michelle
Lokay. By observing the segment contact sets of the optimal segmentation, we concluded that (1) Jeff Fawcett contacted about 104 users during 2000 X 2001 and was in regular contact with about six users, (2) Michelle Lokay was in contact with about 28 users, and (3) Audrey Robertson had a burst of activity from the 15th through the 20th segments of an optimal segmentation.

We defined a notion called communication strength to measure the persistence of communication. By analyzing the communication strength values computed from an optimal segmentation, we observed that Audrey Robertson was in con-tact with the same set of users during the period of our experimental study, whereas Jeff Fawcett contacted many different people at different times but had regular contact with only a few people.

We studied the effect of user-defined parameters such as the size of a segmentation on the information captured by an optimal segmentation of a contact set time series. We concluded that as the size of a segmentation increases, the segmen-tation difference decreases. As a result, it is possible to observe new user IDs or increased communication strength values in optimal segmentations of larger sizes.

Our experimental results also demonstrated that optimal segmentations were highly effective for discovering clique pat-terns. We discovered about 491 clique patterns from the contact graphs of the item-setgroup time series, whereas we extracted twice as many clique patterns from the segment contact graphs of an optimal segmentation of size 10. As many as 46% of these clique patterns were formed only because multiple time points were combined into a single segment, which resulted in capturing more user communication in a single graph. As the segmentation size increased, the differ-ence between the clique patterns found from an optimal segmentation and those computed from contact graphs decreased.

Section 5.1 illustrates the experimental results for the egocentric communication patterns and Section 5.3 describes the experimental results for the clique patterns. 5.1. Egocentric communication patterns
To study egocentric communication patterns, we analyzed the email data and identified a few users that sent large amounts of emails almost every week. We considered one of these users, Susan Scott , and identified about nine users with whom Susan Scott was corresponding. We computed a contact set for each of these 10 users for each week during 2000 and 2001. This resulted in a contact set time series for each user containing 104 time points, one time point for each week in these two years.
 Each contact set time series was processed as follows.
 For a given value of a , we computed the segment contact sets and segment difference using the procedure outlined in Fig. 2 .

For each contact set time series, we constructed several optimal segmentations of sizes 10 ; 20 ; ... ; 100, using the proce-dure outlined in Fig. 1 .

For each segmentation size, we also constructed segmentations where all segments (except one) contain the same number of time points. We refer to these segmentations as fixed segmentations. Fixed segmentations are constructed by simply dividing the time period of the data set into a desired number of segments without analyzing the underlying data in these segments. For experimental purposes, we chose the following procedure to construct fixed segmentations. Let p be the desired segmentation size. If n is a multiple of p , then each segment in the fixed segmentation of size p contains n = p time ment contains n mod  X  p 1  X  time points.
 We repeated the above steps for a values 0 : 1 ; ... ; 1 : 0.

In the following sections, we first study optimal segmentations of individual users to identify temporal progression of segmentations, which are built without analyzing the underlying data, are suboptimal in nature and lead to higher segmen-tation differences. Finally, we study the effects of user-defined parameters such as segmentation size and a on the informa-tion embedded in an optimal segmentation. 5.1.1. Segment contact sets The temporal evolution of contact sets for each of the 10 users was studied for optimal segmentations with 20 segments. The results for 3 of the users  X  Jeff Fawcett, Michelle Lokay, and Audrey Robertson  X  are given by the three scatter plots in tinct numeric ID and a distinct symbol within each plot. If a user ID j appears in segment i , the symbol corresponding to j Based on Fig. 4 A, we can determine that the contact sets of Jeff Fawcett over all the segments contain a total of 104 users.
However, he has regular contact with user IDs 1, 2, 8, 9, and 10, which appear in almost half of the 20 segments. Further, there is marked burst in the contact activity in segment 10 where several new users are contacted. The contact sets of the user Michelle Lokay in Fig. 4 B contain 28 users, and the users are more uniformly distributed over the time period. Users with IDs in the range of 2 X 10, and user IDs 12 and 14 are contacted in almost all the 20 segments, whereas others are con-tacted sporadically in a few segments. The contact sets of user Audrey Robertson, shown in Fig. 4 C, involve 100 users. Based on the figure, we can determine a low level of contact activity in segments 0 X 5 and 10 X 14, a moderate level of contact activ-ity in segments 5 X 10, and a burst of activity in segments 15 X 20. 5.1.2. User centrality patterns
The number of people a user is in contact with, referred to as the centrality of a user, indicates the breadth of a user X  X  potential influence. We measured the centrality of a user as the cardinality of his/her segment contact set at any point of time. The temporal changes in the centrality of a user can be observed in the changing cardinalities of segment contact sets the segment contact set.
 The bursty nature of the email communication for each user can be observed from this figure. Users Susan, Jeffrey, and
Audrey are identified as users with high centrality values during the time period. However, Susan has almost three times more centrality than any of the other users. Further, it is interesting to note that the bursty periods of different users do not have much temporal overlap. This may indicate that different users may assume organizational importance at different times. 5.1.3. Communication strength
Optimal segmentations can also be used to measure the persistence of communication. Some users may be sending emails to the same set of users, whereas others may frequently change the contact set. To study this phenomenon, we de-fined a notion called communication strength . Let us consider an optimal segmentation P of a user x . We say that a user u has communication strength k in P if u appears in a maximum k consecutive segment contact sets in P .
Communication strength information may be used to distinguish periodic vs. continuous contacts. For each user x ,we identified other users u with different communication strength values from the optimal segmentation of size 20 correspond-x -axis in these plots depicts the segment number and the y -axis depicts the user IDs. The length of plot for each user ID shows the communication strength.

From Fig. 6 A, Audrey Robertson sent emails to the same set of people periodically. For example, Audrey contacted users 1, 2, 3, 4, 5, 6 during segment 7. Of these, Jeff contacted only users 1 and 2 during other segments. From Fig. 7 , it can be ob-served that Kimberly Watson had a persistent communication with a number of users. 5.1.4. Fixed vs. optimal segmentations
An optimal segmentation captures many kinds of information hidden in the underlying data as seen in the previous sec-nature. For a given segmentation size p , the fixed segmentation of size p contains more segmentation differences than the optimal segmentation of the same size.

For this study, we considered the contact set time series of Audrey Robertson. We chose two different values for a 0 : 1 tation difference of optimal and fixed segmentations constructed when a  X  0 : 1, whereas Chart B displays the same informa-tion when a  X  0 : 7. As can be seen from both charts, for all segmentation sizes, the segmentation difference of a fixed segmentation is always higher than that of the optimal segmentation of the same size. This phenomenon does not change even if we change the value of a as observed in Chart B.

Higher values of segmentation difference may result in smaller or empty segment contact sets as will be seen in subse-quent sections. 5.1.5. Effect of user-defined parameters
An optimal segmentation can be used to extract many egocentric communication patterns such as centrality and commu-size of a segmentation, on the information captured in a segmentation.

The segmentation difference of a segmentation is a measure of how well each segment in the segmentation captures the information at each of the item sets in that segment. By definition, the optimal segmentation of size k contains the smallest segmentation difference of any k -size segmentation. However, the segmentation differences of optimal segmentations with fewer segments tend to be higher than those with more segments. This is because each segment must compactly represent the information from many time points, which leads to higher segment differences.

Fig. 9 shows 2 charts. The x -axis of these charts contains the size of a segmentation and the y -axis contains the corre-
Because the contact set time series of each user contained different contact sets, it is not meaningful to compare the segmen-tation differences of optimal segmentation of different users.
 The plots in Chart (A) show the segmentation difference of optimal segmentations of different sizes. As can be seen from Chart (A), the segmentation differences of an optimal segmentation decrease for all users as the segmentation size increases.
Charts (B) shows the effects of a user-defined threshold a on the segmentation differences of optimal segmentations. For the highest amount of segmentation differences for an optimal segmentation of any size, whereas, an a value of 0.4 resulted in the least amount of segmentation differences for most users.

Next we studied the effect of segmentation size on communication strength. As the size increases, segmentation differ-ence drops, resulting in smaller segment difference values. Therefore, the segment contact sets of larger size segmentations may include users not present in smaller size segmentations. This phenomenon is illustrated in Fig. 10 . Charts (A) and (B) show the communication strength of users that Kimberly Watson contacted. The x -axis plots the segment number and the y -axis plots the user ID. Chart (A) shows the communication strength values computed from an optimal segmentation of size 20 and Chart (B) shows the same for an optimal segmentation of size 30. User IDs 1, 2, etc appear in both charts. How-ever, user IDs 38 and 39 appear only in optimal segmentation of size 30. In fact, optimal segmentation of size 30 shows that
Kimberly Watson is in contact with about 50 users, whereas optimal segmentation of size 20 shows that she is in contact with only about 40 users. 5.2. Sociocentric patterns from synthetic data
We first illustrate the working of the proposed set of methods on a small synthetic data set to better understand the rela-tionship between the communication among the users and the sociocentric patterns discovered by the algorithms. We built a simple data generator to synthesize communication data for a given number of users. The data generator takes as input the number of users m , the number of time points n , and an upper bound on the number l of message exchanges per time point.
It generates a time series of size n where each time point contains a non-empty item setgroup and the sum total of the item set cardinalities in the item setgroup is at most l . Each item set in the item setgroup is randomly generated. Chart (A) in Fig. 11 shows the item-setgroup time series generated for values n  X  10 ; m  X  5, and l  X  3.

We then constructed an optimal segmentation of the synthetic item-setgroup time series for a values 0.3 and 0.15. We examined the sociocentric patterns extracted from an optimal segmentation of size 6 for both a values. Chart (B) in Fig. 11 shows the optimal segmentation of the synthetic item-setgroup time series for a  X  0 : 3. It shows the segment contact graphs much of the communication among users at the time points is not significant enough to appear in the optimal segmentation.
The first five segments in the optimal segmentation contain single time points and hence preserve all of the communication at the time points. However, the last segment containing time points (6) X (10) contains a small amount of the communication at the time points (6) X (10). As a result, there are very few cliques (only 2) found in the optimal segmentation.
Chart (C) shows the segment graphs of size 6 optimal segmentation when a  X  0 : 15. In this case, it can be seen that the segment graphs are dense, since much of the communication at the time points is deemed significant to appear in the opti-now be seen in the segment graphs of the optimal segmentation. It can be seen from this chart that the segment graph of segment 3 contains a clique of size 3 among users Brown, Emily, and Dave. This is because the segment graph of segment 3 includes all message exchanges in time points 3, 4, and 5 and thus discovers the clique. 5.3. Sociocentric patterns from the Enron email data set
To study sociocentric patterns, we constructed an item-setgroup time series containing 104 time points, one for each week during the years 2000 and 2001, from the Enron data set. The item setgroup of each time point consisted of one item set for each user that sent at least one email during the time point. We processed the item-setgroup time series as follows.

We computed the segment difference for each user and added them together to obtain the segment difference for each segment in the item-setgroup time series.

We then used the dynamic programming algorithm to construct optimal segmentations of several different sizes of the given item-setgroup time series.

For each optimal segmentation P , we constructed the segment contact graph for each segment. We extracted clique pat-terns from each of these segment contact graphs. Let P C denote the set of clique patterns extracted from P . We also computed all possible cliques occurring in the contact graph of each time point in the item-setgroup time series. We denote this set of cliques by T C .

We repeated the above steps for three different values of a  X  0.05, 0.1, and 0.2. 5.3.1. Cliques from optimal segmentation First we examined the cliques in T C which were computed from the contact graphs of time points. The cardinality of T 491. In this set, there were 381 cliques with two nodes (or users), 86 cliques with three nodes, 20 cliques with three nodes, affect the size of T C .
 In order to understand the benefits of segmentation, we compared the cliques in T mentation containing 20 segments of the item-setgroup time series. The value of a was set to 0.05. There were 640 cliques in the segment contact graphs of the optimal segmentation, slightly more than the size of T two nodes, 168 cliques containing three nodes, 46 containing 4 nodes, 9 containing 5 nodes, and 1 containing six nodes. As many as 159 of these cliques were not found in T C and thus were formed only because consecutive time points were com-bined to form segments. Conversely, about 10 cliques in T
We also studied the number of cliques formed when the whole data are considered as a single segment. A single segment graph was constructed for the segment covering the entire time period of the item-setgroup time series. When a  X  0 : 05, the segment contact graph of s  X  1 ; 104  X  yielded about 150 cliques. When a  X  0 : 1, there were about 100 cliques and 20 cliques were found in the segment contact graph of s  X  1 ; 104  X  when a is 0.2. This shows that considering the entire time period as a single segment does not yield much useful information and that the communication among groups is inherently bursty.
We analyzed the cliques from the optimal segmentation of size 20 of the item-setgroup time series for a  X  0 : 05. After a 20-size optimal segmentation was constructed, we extracted the cliques from the segment contact graph of each segment.
There were a total of 640 cliques. We extracted the emails exchanged between the user IDs in each clique. We considered only those email messages that were exchanged during the time period of the segment. We grouped these emails based on the contents of the subject. We used a simple method based on the overlap of keywords in the subjects of the emails to con-struct the groups. For each clique, there were many groups in each segment. Fig. 12 lists one clique for the first three seg-ments and the email exchange of the users in the clique on one subject topic. This table demonstrates that the users in a clique were involved in valuable communication patterns. 5.3.2. Effects of user parameters
In this section, we discuss the effects of user parameters on the information hidden in an optimal segmentation of the item-setgroup time series. We first studied the effect of segmentation size on the segmentation difference of an optimal seg-mentation. Then we studied the effects of segmentation size and a on the number and the size of cliques discovered from an optimal segmentation. We illustrate these experimental results below.

In Fig. 13 , chart (A) shows the segmentation difference of an optimal segmentation of the item-setgroup time series vs. the size for three different values of a . As predicted, the segmentation difference falls as the segmentation size increases.
In Chart (B) of Fig. 13 , we plot the segmentation size on the x -axis and the number of cliques computed from an optimal segmentation for each segmentation size on the y -axis. Two important observations can be made from this chart. First, as the segmentation size increases, the number of cliques found in an optimal segmentation eventually reaches the same number as j T C j . This is because as the segmentation size increases, an optimal segmentation typically contains many single time points as segments and therefore, the cliques found in segment contact graphs disappear.
 Second, the value of a has a great effect on the number of cliques in P an important role in determining the density of the segment graph of long segments, i.e., segments that contain many time the segment graphs of optimal segmentations of smaller sizes, such as when a  X  0 : 05 and size = 10. As a increases to 0.1 or 0.2, segment contact graphs of long segments are not as dense and result in few cliques, e.g; a  X  0 : 2 and size 10. clique. Since the contact set of a user cannot include himself/herself, the minimum clique size is 2. The maximum clique size imum size clique contained seven users, when a  X  0 : 05 and segmentation size was set to 10. Fig. 14 shows the percentage of cliques of each size found for each segmentation size. Chart (A) in the figure shows this information when a  X  0 : 05. For all segmentation sizes tried, the largest number of cliques found in a segmentation was size 2. However, for smaller size seg-mentations, cliques of larger sizes were also found. About 20% of the cliques found in a size 10 segmentation are greater than higher value of a , the segment contact graphs are sparser and hence the clique sizes are smaller.

Finally, we studied the differences between T C and P C . By compactly representing the user communication from a se-quence of a time points using a segment contact graph, it is possible to find cliques that cannot be found from contact graphs at the time points. On the other hand, some cliques found from the contact graphs at the time points may be lost in a seg-ment contact graph due to constraints of a .

In Fig. 15 , Chart (A) shows the percentage of cliques computed from an optimal segmentation that exist only in segment contact graphs, and not in contact graphs of time points. Chart (B) in the figure shows the percentage of cliques found from contact graphs of time points that are not present in an optimal segmentation. In both charts, the x -axis plots the segmen-tation size, and the y -axis plots the percentage of cliques.
 Let us consider Chart (A). Small values of a and segmentation size result in finding many new cliques in P in T C . When a  X  0 : 05 and segmentation size is 10, about 46% of the cliques found in the optimal segmentation are not found in contact graphs. For higher values of a , the number of cliques found in an optimal segmentation but not found in contact graphs is smaller because the segment graphs are sparse. It can be seen that as the segmentation size increases, the percent-age value falls because most segments in an optimal segmentation may consist of a single time point.

Chart (B) plots the number of cliques found in contact graphs, but not present in the segment contact graph of any seg-ment in an optimal segmentation. For higher values of a , many cliques found at time points are not present in optimal seg-mentations because segment contact graphs are sparse. 6. Related work
Mining social networks from email data to understand the communication behavior of users and user groups is an active field. In [3], the authors analyze the email network of the Apace HTTP server. In Ref. [23], the authors used common nodes to discover communities from the Enron email corpus. Ref. [24] uses entropy models on graphs to study the informational flow method to combine email data and Web content. Ref. [2] represents email data as a stream of communications to identify the evolution of Enron X  X  organizational structure. In Ref. [27], the authors present algorithms for modeling dynamic community structure. Ref. [20] represents Enron email data as a time series and uses scan statistics for anomaly detection.
To our knowledge, the current paper is the first attempt to study the evolution of communication patterns based on time series segmentation techniques. The constructs of contact set, communication strength, clique patterns, the item-setgroup time series and its segmentation have not appeared elsewhere.

The study of segmentation algorithms for time series data is an active and a classic area of research [1,13 X 16] . Most of this In this paper we represent each observed value as a set of discrete items or as an item setgroup.

Ref. [7] used the item-set time series to study the Enron email data. Users who sent an unusual amount of email in each item set is a set of frequent senders. The item-set time series segmentation techniques were employed to study the frequent senders and their topics for each segment and how they changed over time. References [25,26] applied the concept of item-set time series segmentation to analyze the version control repositories of several large open source projects, i.e., Mozilla, Apache, and Eclipse.

Finding groups of users with similar behavior from other kinds of data is also an active area of research. In Ref. [28], authors described approaches to find user groups, where users in the same group are spatially close to one another for a sig-nificant amount of time, from movement data. Ref. [22] studies the problem of mining frequent closed partial orders from strings which can be used to identify customers with similar sequence of actions, among other applications. Ref. [29] de-scribes clustering algorithms for grouping Web transactions of customers to understand customers better. 7. Conclusion
In this paper we describe a novel approach based on time series segmentation for temporally analyzing the communica-tion patterns from email data. The proposed approach uses temporal segmentation of non-numeric data to find communi-item-set time series is constructed where each time point is associated with a contact set, which is a set of user IDs with whom u frequently communicated during that time point. We refer to this time series as the contact-set time series of u . The item-set time series concept is extended to an item-setgroup time series to analyze the email data of several users.
The item setgroup associated with each time point in the item-setgroup time series is represented as a contact graph. A con-tact graph of a time point t is a directed graph whose nodes are user IDs. There is an edge from user ID u to user ID v in the contact graph if u is frequently sending emails to v during t . We define concepts such as segment contact set (segment con-tact graph, in the case of item-setgroup time series), segment difference, and segmentation difference needed to construct optimal segmentations of these time series. We applied our approach to the Enron email data set. We extracted the contact-set time series of several users and constructed several optimal segmentations of each contact-set time series. We used the optimal segmentations of each user to study the user X  X  communication frequency in each segment, the number of users being sent email at any point in time, the strength of communication, and other variables. Optimal segmentations of the item-setgroup time series are used to compute the clique patterns involving several users from segment contact graphs.
Our experiments indicate that optimal segmentations are well-suited to capture the communication among users that is spread over multiple time points, which is crucial for computing patterns from bursty communications.
References
