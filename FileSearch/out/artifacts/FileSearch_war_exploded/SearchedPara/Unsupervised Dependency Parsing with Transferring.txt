 In recent years, dependency parsing has gained universal interest due to its usefulness in a wide range of applications such as synonym gener-ation (Shinyama et al., 2002), relation extrac-tion (Nguyen et al., 2009) and machine trans-lation (Katz-Brown et al., 2011; Xie et al., 2011). Several supervised dependency parsing algorithms (Nivre and Scholz, 2004; McDonald et al., 2005a; McDonald et al., 2005b; McDon-ald and Pereira, 2006; Carreras, 2007; Koo and Collins, 2010; Ma and Zhao, 2012; Zhang et al., 2013) have been proposed and achieved high pars-ing accuracies on several treebanks, due in large part to the availability of dependency treebanks in a number of languages (McDonald et al., 2013). However, the manually annotated treebanks that these parsers rely on are highly expensive to cre-ate, in particular when we want to build treebanks for resource-poor languages. This led to a vast amount of research on unsupervised grammar in-duction (Carroll and Charniak, 1992; Klein and Manning, 2004; Smith and Eisner, 2005; Cohen and Smith, 2009; Spitkovsky et al., 2010; Blun-som and Cohn, 2010; Mare X cek and Straka, 2013; Spitkovsky et al., 2013), which appears to be a natural solution to this problem, as unsupervised methods require only unannotated text for training parsers. Unfortunately, the unsupervised gram-mar induction systems X  parsing accuracies often significantly fall behind those of supervised sys-tems (McDonald et al., 2011). Furthermore, from a practical standpoint, it is rarely the case that we are completely devoid of resources for most lan-guages.

In this paper, we consider a practically moti-vated scenario, in which we want to build statisti-cal parsers for resource-poor target languages, us-ing existing resources from a resource-rich source absolutely no labeled training data for the target language, but we have access to parallel data with a resource-rich language and a sufficient amount of labeled training data to build an accurate parser for the resource-rich language. This scenario ap-pears similar to the setting in bilingual text pars-ing. However, most bilingual text parsing ap-proaches require bilingual treebanks  X  treebanks that have manually annotated tree structures on both sides of source and target languages (Smith and Smith, 2004; Burkett and Klein, 2008), or have tree structures on the source side and trans-lated sentences in the target languages (Huang et al., 2009; Chen et al., 2010). Obviously, bilingual treebanks are much more difficult to acquire than the resources required in our scenario, since the la-beled training data and the parallel text in our case are completely separated. What is more impor-tant is that most studies on bilingual text parsing assumed that the parser is applied only on bilin-gual text. But our goal is to develop a parser that can be used in completely monolingual setting for each target language of interest.

This scenario is applicable to a large set of lan-guages and many research studies (Hwa et al., 2005) have been made on it. Ganchev et al. (2009) presented a parser projection approach via paral-lel text using the posterior regularization frame-work (Graca et al., 2007). McDonald et al. (2011) proposed two parser transfer approaches between two different languages  X  one is directly trans-ferred parser from delexicalized parsers, and the other parser is transferred using constraint driven learning algorithm where constraints are drawn from parallel corpora. In that work, they demon-strate that even the directly transferred delexi-calized parser produces significantly higher ac-curacies than unsupervised parsers. Cohen et al. (2011) proposed an approach for unsupervised dependency parsing with non-parallel multilingual guidance from one or more helper languages, in which parallel data is not used.

In this work, we propose a learning frame-work for transferring dependency grammars from a resource-rich language to resource-poor lan-guages via parallel text. We train probabilistic parsing models for resource-poor languages by maximizing a combination of likelihood on par-allel data and confidence on unlabeled data. Our work is based on the learning framework used in Smith and Eisner (2007), which is originally de-signed for parser bootstrapping. We extend this learning framework so that it can be used to trans-fer cross-lingual knowledge between different lan-guages.

Throughout this paper, English is used as the source language and we evaluate our approach on ten target languages  X  Danish (da), Dutch (nl), French (fr), German (de), Greek (el), Italian (it), Korean (ko), Portuguese (pt), Spanish (es) and Swedish (sv). Our approach achieves significant improvement over previous state-of-the-art unsu-pervised and projected parsing systems across all the ten languages, and considerably bridges the gap to fully supervised dependency parsing per-formance. Dependency trees represent syntactic relationships through labeled directed edges between heads and their dependents. For example, Figure 1 shows a dependency tree for the sentence, Economic news had little effect on financial markets , with the sen-tence X  X  root-symbol as its root. The focus of this work is on building dependency parsers for target languages, assuming that an accurate English de-pendency parser and some parallel text between the two languages are available. Central to our ap-proach is a maximizing likelihood learning frame-work, in which we use an English parser and par-allel text to estimate the  X  X ransferring distribution X  of the target language parsing model (See Section 2.2 for more details). Another advantage of the learning framework is that it combines both the likelihood on parallel data and confidence on unla-beled data, so that both parallel text and unlabeled data can be utilized in our approach. 2.1 Edge-Factored Parsing Model In this paper, we will use the following notation: x represents a generic input sentence, and y rep-resents a generic dependency tree. T( x ) is used to denote the set of possible dependency trees for sentence x . The probabilistic model for de-pendency parsing defines a family of conditional probability p  X  ( y | x ) over all y given sentence x , with a log-linear form: p  X  ( y | x ) = where F j are feature functions,  X  = (  X  1 , X  2 ,... ) are parameters of the model, and Z ( x ) is a nor-malization factor, which is commonly referred to as the partition function : A common strategy to make this parsing model ef-ficiently computable is to factor dependency trees into sets of edges: That is, dependency tree y is treated as a set of edges e and each feature function F j ( y , x ) is equal to the sum of all the features f j ( e, x ) .
We denote the weight function of each edge e as follows: and the conditional probability p  X  ( y | x ) has the following form: 2.2 Model Training One of the most common model training meth-ods for supervised dependency parser is Maxi-mum conditional likelihood estimation. For a su-pervised dependency parser with a set of train-ing data { ( x i , y i ) } , the logarithm of the likelihood (a.k.a. the log-likelihood) is given by: Maximum likelihood training chooses parameters such that the log-likelihood L (  X  ) is maximized.
However, in our scenario we have no labeled training data for target languages but we have some parallel and unlabeled data plus an En-glish dependency parser. For the purpose of transferring cross-lingual information from the English parser via parallel text, we explore the model training method proposed by Smith and Eisner (2007), which presented a generalization of K function (Abney, 2004), and related it to an-other semi-supervised learning technique, entropy regularization (Jiao et al., 2006; Mann and Mc-Callum, 2007). The objective K function to be minimized is actually the expected negative log-likelihood: where  X  p i (  X  ) def =  X  p (  X | x i ) and p  X ,i (  X  )  X  p ( y | x ) is the  X  X ransferring distribution X  that re-flects our uncertainty about the true labels, and we are trying to learn a parametric model p  X  ( y | x ) by minimizing the K function.

In our scenario, we have a set of aligned par-allel data P = { x s alignment for the pair of source-target sentences target language U = { x t English parsing model p  X  equation (7) can be divided into two cases, accord-ing to whether x i belongs to parallel data set P or unlabeled data set U . For the unlabeled examples { x i  X  U } , some previous studies (e.g., (Abney, 2004)) simply use a uniform distribution over la-bels (e.g., parses), to reflect that the label is un-known. We follow the method in Smith and Eis-ner (2007) and take the transferring distribution  X  p i to be the actual current belief p  X ,i . The total contribution of the unsupervised examples to K then simplifies to K U = be regarded as the entropy item used to constrain the model X  X  uncertainty H to be low, as presented in the work on entropy regularization (Jiao et al., 2006; Mann and McCallum, 2007).

But how can we define the transferring distri-bution for the parallel examples { x t define the transferring distribution by defining the transferring weight utilizing the English parsing model p  X  ments:  X  w ( e t , x t i ) = where w E (  X  ,  X  ) is the weight function of the En-glish parsing model p  X  delexicalized form 2 of the edge e t . From the definition of the transferring weight, we can see that, if an edge e t of the target language sentence i is aligned to an edge e s of the English sen-tence x s i , we transfer the weight of edge e t to the corresponding weight of edge e s in the En-glish parsing model p  X  is not aligned to any edges of the English sen-ized form and calculate the transferring weight in the English parsing model. There are two advan-tages for this definition of the transferring weight. First, by transferring the weight function to the corresponding weight in the well-developed En-glish parsing model, we can project syntactic in-formation across language boundaries. Second, McDonald et al. (2011) demonstrates that parsers with only delexicalized features produce consid-erably high parsing performance. By reducing unaligned edges to their delexicalized forms, we can still use those delexicalized features, such as part-of-speech tags, for those unaligned edges, and can address problem that automatically generated word alignments include errors.

From the definition of transferring weight in equation (8), the transferring distribution can be defined in the following way: where Due to the normalizing factor  X  Z ( x ) , the transfer-ring distribution is a valid one.

We introduce a multiplier  X  as a trade-off be-tween the two contributions (parallel and unsuper-vised) of the objective function K , and the final objective function K  X  has the following form: K
P and K U are the contributions of the parallel and unsupervised data, respectively. One may re-gard  X  as a Lagrange multiplier that is used to constrain the parser X  X  uncertainty H to be low, as presented in several studies on entropy regulariza-tion (Brand, 1998; Grandvalet and Bengio, 2004; Jiao et al., 2006). 2.3 Algorithms and Complexity for Model To train our parsing model, we need to find out the parameters  X  that minimize the objective function K  X  in equation (11). This optimization problem is typically solved using quasi-Newton numeri-cal methods such as L-BFGS (Nash and Nocedal, 1991), which requires efficient calculation of the objective function and the gradient of the objec-tive function.

The first item ( K P ) of the K  X  function in equa-tion (11) can be rewritten in the following form: K P =  X  and according to equation (1) and (3) the gradient of K P can be written as:
According to equation (9),  X  p ( y | x ) can also be factored into the multiplication of the weight of each edge, so both K P and its gradient can be calculated by running the O ( n 3 ) inside-outside al-gorithm (Baker, 1979; Paskin, 2001) for projec-tive parsing. For non-projective parsing, the anal-ogy to the inside algorithm is the O ( n 3 ) matrix-tree algorithm based on Kirchhoff X  X  Matrix-Tree Theorem, which is dominated asymptotically by a matrix determinant (Koo et al., 2007; Smith and Smith, 2007). The gradient of a determinant may be computed by matrix inversion, so evaluating the gradient again has the same O ( n 3 ) complexity as evaluating the function.

The second item ( K U ) of the K  X  function in equation (11) is the Shannon entropy of the pos-terior distribution over parsing trees, and can be written into the following form: K U =  X  and the gradient of K U is in the following: Table 1: Data statistics of two versions of Google Universal Treebanks for the target languages.
Similar with the calculation of K P , K U can also be computed by running the inside-outside algo-rithm (Baker, 1979; Paskin, 2001) for projective parsing. For the gradient of K U , both the two multipliers of the second item in equation (15) can be computed using the same inside-outside algo-rithm. For the first item in equation (15), an O ( n 3 ) dynamic programming algorithm that is closely related to the forward-backward algorithm (Mann and McCallum, 2007) for the entropy regularized CRF (Jiao et al., 2006) can be used for projective parsing. For non-projective parsing, however, the runtime rises to O ( n 4 ) . In this paper, we focus on projective parsing. 2.4 Summary of Our Approach To summarize the description in the previous sec-tions, our approach is performed in the following steps: 1. Train an English parsing model p  X  2. Prepare parallel text by running word align-3. Train a parsing model for the target lan-Table 2: The number of tokens in parallel data used in our experiments. For all these corpora, the other language is English. In this section, we illustrate the data sets used in our experiments and the tools for data preparation. 3.1 Choosing Target Languages Our experiments rely on two kinds of data sets: (i) Monolingual Treebanks with consistent anno-tation schema  X  English treebank is used to train the English parsing model, and the Treebanks for target languages are used to evaluate the parsing performance of our approach. (ii) Large amounts of parallel text with English on one side. We se-lect target languages based on the availability of these resources. The monolingual treebanks in our experiments are from the Google Universal De-pendency Treebanks (McDonald et al., 2013), for the reason that the treebanks of different languages in Google Universal Dependency Treebanks have consistent syntactic representations.

The parallel data come from the Europarl cor-Taking the intersection of languages in the two kinds of resources yields the following seven lan-guages: French, German, Italian, Korean, Por-tuguese, Spanish and Swedish.

The treebanks from CoNLL shared-tasks on dependency parsing (Buchholz and Marsi, 2006; Nivre et al., 2007) appear to be another reasonable choice. However, previous studies (McDonald et al., 2011; McDonald et al., 2013) have demon-strated that a homogeneous representation is criti-cal for multilingual language technologies that re-quire consistent cross-lingual analysis for down-stream components, and the heterogenous repre-sentations used in CoNLL shared-tasks treebanks weaken any conclusion that can be drawn. Table 3: UAS for two versions of our approach, to-gether with baseline and oracle systems on Google Universal Treebanks version 1.0.  X  X ve X  is the macro-average across the five languages.

For comparison with previous studies, never-theless, we also run experiments on CoNLL tree-banks (see Section 4.4 for more details). We eval-uate our approach on three target languages from CoNLL shared task treebanks, which do not ap-pear in Google Universal Treebanks. The three languages are Danish, Dutch and Greek. So totally we have ten target languages. The parallel data for these three languages are also from the Europarl corpus version 7. 3.2 Word Alignments In our approach, word alignments for the paral-lel text are required. We perform word alignments lel corpus was preprocessed in standard ways, se-lecting sentences with the length in the range from 3 to 100. Then we run GIZA++ with the default setting to generate word alignments in both direc-tions. We then make the intersection of the word alignments of two directions to generate one-to-one alignments. 3.3 Part-of-Speech Tagging Several features in our parsing model involve part-of-speech (POS) tags of the input sentences. The set of POS tags needs to be consistent across lan-guages and treebanks. For this reason we use the universal POS tag set of Petrov et al. (2011). This set consists of the following 12 coarse-grained tags: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners), ADP (prepositions or postpo-sitions), NUM (numerals), CONJ (conjunctions), PRT (particles), PUNC (punctuation marks) and X (a catch-all for other categories such as abbrevi-ations or foreign words).

POS tags are not available for parallel data in the Europarl and Kaist corpus, so we need to pro-Table 4: UAS for two versions of our approach, to-gether with baseline and oracle systems on Google Universal Treebanks version 2.0.  X  X ve X  is the macro-average across the seven languages. vide the POS tags for these data. In our experi-ments, we train a Stanford POS Tagger (Toutanova et al., 2003) for each language. The labeled train-ing data for each POS tagger are extracted from the training portion of each Treebanks. The aver-age tagging accuracy is around 95%.

Undoubtedly, we are primarily interested in ap-plying our approach to build statistical parsers for resource-poor target languages without any knowledge. For the purpose of evaluation of our approach and comparison with previous work, we need to exploit the gold POS tags to train the POS taggers. As part-of-speech tags are also a form of syntactic analysis, this assumption weakens the applicability of our approach. Fortunately, some recently proposed POS taggers, such as the POS tagger of Das and Petrov (2011), rely only on la-beled training data for English and the same kind of parallel text in our approach. In practice we can use this kind of POS taggers to predict POS tags, whose tagging accuracy is around 85%. In this section, we will describe the details of our experiments and compare our results with previ-ous methods. 4.1 Data Sets As presented in Section 3.1, we evaluate our pars-ing approach on both version 1.0 and version 2.0 of Google Univereal Treebanks for seven lan-for each language as specified in the release of the sions of Google Universal Treebanks. We strip all the dependency annotations off the training por-tion of each treebank, and use that as the unla-beled data for that target language. We train our parsing model with different numbers of parallel sentences to analyze the influence of the amount of parallel data on the parsing performance of our ap-proach. The parallel data sets contain 500, 1000, 2000, 5000, 10000 and 20000 parallel sentences, respectively. We randomly extract parallel sen-tences from each corpora, and smaller data sets are subsets of larger ones. Table 2 shows the number of tokens in the parallel data used in the experi-ments. 4.2 System performance and comparison on Google Universal Treebanks For the comparison of parsing performance, we run experiments on the following systems: DTP: The direct transfer parser (DTP) proposed PTP The projected transfer parser (PTP) de--U: Our approach training on only parallel data +U: Our approach training on both parallel and OR: the supervised first-order projective depen-
Parsing accuracy is measured with unlabeled at-tachment score (UAS): the percentage of words with the correct head.

Table 3 and Table 4 shows the parsing results of our approach, together with the results of the base-line systems and the oracle, on version 1.0 and ver-sion 2.0 of Google Universal Treebanks, respec-tively. Our approaches significantly outperform all the baseline systems across all the seven target lan-guages. For the results on Google Universal Tree-banks version 1.0, the improvement on average over the projected transfer paper (PTP  X  ) is 3.96% and up to 6.22% for Korean and 4.80% for Ger-man. For the other three languages, the improve-ments are remarkable, too  X  2.33% for French, 3.03% for Spanish and 3.40% for Swedish. By adding entropy regularization from unlabeled data, our full model achieves average improvement of 0.29% over the  X -U X  setting. Moreover, our ap-proach considerably bridges the gap to fully super-vised dependency parsers, whose average UAS is 84.67%. For the results on treebanks version 2.0, we can get similar observation and draw the same conclusion. 4.3 Effect of the Amount of Parallel Text Table 5 illustrates the UAS of our approach trained on different amounts of parallel data, together with the results of the projected transfer parser re-implemented by us (PTP  X  ). We run two ver-sions of our approach for each of the parallel data sets, one with unlabeled data (+U) and the other without them (-U). From table 5 we can get three observations. First, even the parsers trained with only 500 parallel sentences achieve considerably high parsing accuracies (average 70.10% for ver-sion 1.0 and 71.59% for version 2.0). This demon-strates that our approach does not rely on a large amount of parallel data. Second, when gradually increasing the amount of parallel data, the parsing performance continues improving. Third, entropy regularization with unlabeled data makes mod-est improvement on parsing performance over the parsers without unlabeled data. This proves the ef-fectiveness of the entropy regularization from un-labeled data. 4.4 Experiments on CoNLL Treebanks To make a thorough empirical comparison with previous studies, we also evaluate our system without unlabeled data (-U) on treebanks from CoNLL shared task on dependency parsing (Buch-holz and Marsi, 2006; Nivre et al., 2007). To fa-cilitate comparison, we use the same eight Indo-European languages as target languages: Danish, Dutch, German, Greek, Italian, Portuguese, Span-ish and Swedish, and same experimental setup as McDonald et al. (2011). We report both the results of the direct transfer and projected transfer parsers directly cited from McDonald et al. (2011) (DTP and PTP) and re-implemented by us (DTP  X  and PTP  X  ).

Table 6 gives the results comparing the model without unlabeled data (-U) presented in this work Table 6: Parsing results on treebanks from CoNLL shared tasks for eight target languages. The results of unsupervised DMV model are from Table 1 of McDonald et al. (2011). to those five baseline systems and the oracle (OR). The results of unsupervised DMV model (Klein and Manning, 2004) are from Table 1 of McDon-ald et al. (2011). Our approach outperforms all these baseline systems and achieves state-of-the-art performance on all the eight languages.
In order to compare with more previous meth-ods, we also report parsing performance on sen-tences of length 10 or less after punctuation has been removed. Table 7 shows the results of our system and the results of baseline sys-tems.  X  X SR  X   X  is the weakly supervised system of Naseem et al. (2010).  X  X GI X  is the phylogenetic grammar induction model of Berg-Kirkpatrick and Klein (2010). Both the results of the two systems are cited from Table 4 of McDonald et al. (2011). We also include the results of the unsupervised dependency parsing model with non-parallel mul-tilingual guidance (NMG) proposed by Cohen et ularization approach presented in Gillenwater et al. (2010). All the results are shown in Table 7.
From Table 7, we can see that among the eight target languages, our approach achieves best pars-ing performance on six languages  X  Danish, Ger-man, Greek, Italian, Portuguese and Swedish. It should be noted that the  X  X MG X  system utilizes more than one helper languages. So it is not di-rectly comparable to our work. 4.5 Extensions In this section, we briefly outline a few extensions to our approach that we want to explore in future work. not available as marked by  X . 4.5.1 Non-Projective Parsing As mentioned in section 2.3, the runtime to com-pute K U and its gradient is O ( n 4 ) . One reasonable speedup, as presented in Smith and Eisner (2007), is to replace Shannon entropy with R  X enyi entropy. The R  X  enyi entropy is parameterized by  X  : With R  X enyi entropy, the computation of K U and its gradient is O ( n 3 ) , even for non-projective case. 4.5.2 Higher-Order Models for Projective Our learning framework can be extended to higher-order dependency parsing models. For ex-ample, if we want to make our model capable of utilizing more contextual information, we can ex-tend our transferring weight to higher-order parts:  X  w ( p t , x t i ) = where p is a small part of tree y that has limited interactions. For projective parsing, several al-gorithms (McDonald and Pereira, 2006; Carreras, 2007; Koo and Collins, 2010; Ma and Zhao, 2012) have been proposed to solve the model training problems (calculation of objective function and gradient) for different factorizations. 4.5.3 IGT Data One possible direction to improve our approach is to replace parallel text with Interlinear Glossed Text (IGT) (Lewis and Xia, 2010), which is a semi-structured data type encoding more syntactic information than parallel data. By using IGT Data, not only can we obtain more accurate word align-ments, but also extract useful cross-lingual infor-mation for the resource-poor language. In this paper, we propose an unsupervised pro-jective dependency parsing approach for resource-poor languages, using existing resources from a resource-rich source language. By presenting a model training framework, our approach can uti-lize parallel text to estimate transferring distribu-tion with the help of a well-developed resource-rich language dependency parser, and use unla-beled data as entropy regularization. The exper-imental results on three data sets across ten target languages show that our approach achieves signif-icant improvement over previous studies.
 This material is based upon work supported by the National Science Foundation under Grant No. BCS-0748919. Any opinions, findings, and con-clusions or recommendations expressed in this material are those of the authors and do not nec-essarily reflect the views of the National Science Foundation.
