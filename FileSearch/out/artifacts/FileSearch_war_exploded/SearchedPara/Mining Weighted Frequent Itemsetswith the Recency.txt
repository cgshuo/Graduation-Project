 Pattern mining is an important sub-field of data mining consisting of discov-ering patterns in databases such as association rules [2, 7] and sequential pat-terns [5, 11], among others [8, 9, 14, 16]. Frequent Itemset Mining (FIM) [2, 3, 7] has become an important data mining task having a wide range of real-world applications. However, an important limitation of FIM is that it considers the frequencies of items/itemsets in a transa ctional database but not other implicit factors such as their weight, interest, risk or profit. To address this issue, the problem of Weighted Frequent Itemset Mining (WFIM) was proposed by con-sidering both the weight (importance) and frequency of patterns [6, 9, 13 X 16].
Cai et al. first defined a weighted-support model by multiplying the support of each item by its average weight [6]. Wang et al. assigned different weights to various items to mine Weighted Association Rules (WAR) [15]. Tao et al. devel-oped the WARM (Weighted Association Rule Mining) algorithm and designed the weighted downward closure property to mine WFIs [13]. Vo et al. proposed a Weighted Itemset Tidset (WIF)-tree and adopted the Diffset structure to speed up WFIM [14]. Moreover, several extensions of WFIM have been proposed in many other fields, such as mining weighted association rules without pre-assigned weights [12] and weighted sequential patterns [10], etc.
 Although WFIM can reveal more useful information from a database than FIM, WFIM suffers from an important limitation, which not considers how re-cent the patterns are. In this study, we address this issue. Our contributions are fourfold.  X  A novel type of patterns called Recent Weighted Frequent Itemsets (RWFIs)  X  A time-decay strategy is defined to automatically assign weights to transac- X  The RWFIM-P algorithm is proposed to efficiently mine RWFIs. It relies  X  An improved version of RWFIM-P named RWFIM-PE is also proposed. It 2.1 Preliminaries Let I = { i 1 , i 2 , ... , i m } be a finite set of m distinct items appearing in a transactional database D = { T 1 , T 2 , ... , T n } , where each transaction T q  X  D is a subset of I , and has a unique identifier ccalled its TID . A unique existence profit, interest, risk). Existence weights for all items are stored in a weight table i , ... , i k } is of length k andisreferredtoasa k -itemset. An itemset X is said to be contained in a transaction T q if X  X  T q . Furthermore, for an itemset X , let the notation TIDs ( X ) denotes the TIDs of all transactions in D containing X . As a running example, Table 1 shows a transactional database containing 10 transations, which are sorted by purchased time.
 Definition 1 (Item weight). The weight of an item i j in D is denoted as
For example, a user could define the weight table of items in Table 1 as wtable = Definition 2 (Item weight in a transaction). The weight of an item i j in T q is defined as the weight of i j in D .Thus: w ( i j ,T q )= w ( i j ) , 1 For example, the weight of ( b )in T 1 is w ( b , T 1 )= w ( b ) = 0.7. Definition 3 (Itemset weight). The weight of an itemset X in D ( w ( X )) is defined as the sum of the weights of all items in X divided by the number of
For example, the weight of ( bce ) is calculated as w ( bce )=( w ( b )+ w ( c )+ w ( e ))/3 = (0.7 + 1.0 + 0.45)/3 = 0.7167.
 Definition 4 (Itemset weight in a transaction). The weight of an itemset X in T q is defined as the weight of the itemset X in D ,thatis: w ( X,T q )= w ( X ). For example, the weight of ( bce )in T 1 is calculated as w ( bce , T )= w ( bce )=0.7167.
 Definition 5 (Weighted support of an itemset in D ). The weighted sup-port of an itemset X in D is denoted as wsup ( X ),andisdefinedas:
For example, the ( bce ) appears in transactions T 1 , T 3 , T 5 and T 10 ;theweighted T )+ w ( bce , T 10 ) } = w ( bce )  X  4=(0.7+1.0+0.45)/3  X  4 = 2.8668. Definition 6 (Weighted Frequent Itemset, WFI). Let  X  be a user-defined percentage value named the minimum we ighted-support threshold. An itemset X in D is said to be a weighted frequent itemset ( WFI ) if its weighted support is no less than the minimum weighted-support threshold multiplied by the number of transactions in D ,thatis: WFI  X  X  X | wsup ( X )  X   X   X | D |} .
For example, suppose that  X  is set to 18%. An itemset ( a ) is not considered aWFIsince wsup ( a )=0.4  X  4 = 1.6, which is smaller than (18%  X  10) = 1.8. However, the ( b )isconsideredaWFIsince wsup ( b )=0.7  X  6=4.2 &gt; 1.8. Definition 7 (Recency of a transaction). Let transactions are sorted by purchased time, the Recency of T q is denoted as: R ( T q )=(1  X   X  ) | D | X  T q , tamp which is equal to the number of transactions in D ,and T q is the TID of the currently processed transaction.

Thus, a high Recency value is assigned to the most recent transactions. For example, assume that the user set the time-decay factor  X  to 0.15. The Recency of T 1 and T 9 are respectively calculated as R ( T 1 ) = (1 -0.15) (10  X  1) = 0.2316 and R ( T 9 ) = (1 -0.15) (10  X  9) = 0.85.
 Definition 8 (Recency of an itemset in a transaction). The Recency of an itemset X in T q is defined as: R ( X,T q )= R ( T q ).
 Definition 9 (Recency of an itemset in D ). The Recency of an itemset X in D is denoted as R ( X ), and defined as: R ( X )= X  X  T For example, the Recency of ( c )in T 1 is R ( c , T 1 )= R ( T 1 ) = 0.2316. The Recency of ( bce )in D is calculated as R ( bce )= R ( bce , T 1 )+ R ( bce , T 3 )+ R ( bce , T 5 )+ R ( bce , T 10 ) = 0.2316 + 0.32057 + 0.4437 + 1.0) = 1.9959. Definition 10 (Recent Weighted Frequent Itemset, RWFI). An itemset X in a database D is said to be a recent weighted frequent itemset ( RW FI )if it satisfies the following two conditions: where  X  is the user-specified minimum weighted-support threshold and  X  is a user-specified minimum recency threshold.
 For example, consider that the minimum recency threshold  X  is set to 2.5. The ( acf )isaRWFIsince wsup ( acf ) = 2.333 &gt; 1.8 and R ( acf ) = 3.0945 &gt; 2.5. The full set of RWFIs for  X  (= 18%) and  X  (= 2.5) is shown in Table 2. 2.2 Problem Statement Let D be a transactional database, a weight table wtable indicating the weight of each item, and the user-specified minimum weighted-support threshold  X  and minimum recency threshold  X  . The problem of RWFIM is to find the complete set of RWFIs of length k ,thatis k -itemsets satisfying the two following conditions w.r.t weight and recency: 1) wsup ( X )  X   X   X | D | ;2) R ( X )  X   X  . We first propose the R ecent W eighted-F requent I temset M ining P rojected-based (RWFIM-P) algorithm to efficien tly mine RWFIs. RWFIM-P utilizes a projection-based approach to explore the search space. Moreover, it introduces a novel property named recent weighted frequent upper-bound downward closure ( RW FU BD C ) to prune the search space. The proposed RW FU BD C property is presented thereafter. 3.1 Proposed Recent Weighted Frequent Upper-Bound Downward A major challenge to propose an efficient RWFI mining algorithm is that the well-known downward closure ( DC )propertyusedinFIMandWFIMdoesnothold in RWFIM, that is subsets of a RWFI may or may not be RWFIs. To restore the DC property, we introduce the RW FU BD C property in the proposed RWFIM-P algorithm. This property can greatly reduce the size of the search space for mining RWFIs.
 Definition 11 (Transactional upper-bound weight, tubw ). The transac-tional upper-bound weight of a transaction T q ( tubw ( T q )) is defined as: where j is the number of items in T q .
 max { 0.7, 1.0, 0.5, 0.45 } = 1.0.
 Theorem 1. The weight of any itemset X in a transaction T q is always smaller or equal to the transactional upper-bound weight of T q :w(X, T q )  X  tubw( T q ). Definition 12 (Transactional accumulation upper-bound weight, taubw ). The transactional accumulation upper-bound weight of an itemset X in D is denoted as taubw ( X ) and is defined as:
For example, the taubw of ( bce ) is calculated as taubw ( bce )= tubw ( T 1 )+ tubw ( T 3 )+ tubw ( T 5 )+ tubw ( T 10 ) = 1.0 + 1.0 + 1.0 + 1.0) = 5.0. Definition 13 (Recent Weighted Fre quent Upper-Bound Itemset, RW-FUBI). An itemset X in D is called a recent weighted frequent upper-bound itemset ( RW FU BI ) if it satisfies the following two conditions:
For example, ( b )isa RW FU BI since taubw ( b )=5.4 &gt; 1.8, R ( b )= 2.8825 &gt; Theorem 2. (Downward Closure Property of RWFUBI, RW F U B D C ) Let X k be a k -itemset. If X k is a RWFUBI , then any subset X k  X  1 of X k is also aRWFUBI , that is taubw ( X k )  X  taubw ( X k  X  1 ) and R ( X k )  X  R ( X k  X  1 ). Proof. Since X k  X  1  X  X k , TIDs ( X k  X  T q )  X  TIDs ( X k  X  1  X  T q ). Thus:
From the above results, it can be concluded that if X k is a RW FU BI ,any subset X k  X  1 is also a RW FU BI .Thusthe RW FU BD C property holds and can be used to prune unpromising candidates w.r.t the minimum weighted-support threshold and minimum recency threshold during the search for RWFIs. Theorem 3. (RWFIs  X  RWFUBIs) Let RWFUBIs be the set of recent weighted frequent upper-bound itemsets in the database D , and RWFIs be the set of recent weighted frequent itemsets in D . The recent transactional accumu-lation weighted frequent upper-bound downward closure ( RW FU BD C ) property implies that RWFIs  X  RW FU BIs . In other words, if a pattern is not a RWFUBI , it will not be a RWFI .
 Proof.  X  X  X  D , w ( X )= w ( X , T q ). From Theorems 1 and 2, it can be obtained that w ( X , T q )  X  tubw ( T q )and R ( X k )  X  R ( X k  X  1 ). Thus: wsup ( X )= X  X  T  X  wsup ( X )  X  taubw ( X ). 3.2 Procedure of RWFIM-P Algorithm The proposed RWFIM-P algorithm works as follows. It first scans the original database to discover the set of recent wei ghted frequent upper-bound 1-itemsets ( RWFUBI 1 ) and recent weighted frequent 1-itemsets ( RWFI 1 ). Then, the de-signed Mining-RWFI( X,db X ,k ) function is recursively called to mine the com-plete set of RWFIs. The RWFIM-P algorithm and the Mining-RWFI( X,db X ,k ) procedure are respectively given in Algorithm 1 and Algorithm 2. In these pseu-docode, notice that the projection of a database db by an itemset X is defined as the set of transactions from db containing X and is denoted as db X . Although the RW FU BD C property used in RWFIM-P i s effective to prune the search space, many candidates are still generated that are not RWFIs. To address this issue, an improved version of RWFIM-P named R ecent W eighted-F requent I temset M ining P rojected-based approach with E arly pruning (RWFIM-PE) is proposed. It improves upon RWFIM-P by introducing a novel pruning strategy name EW2P (Estimated Weight of 2-itemset Pruning) to prune more candidates and thus speed up the mining process. This pruning strategy is based on the recent weighted frequent upper-bound (RWFUB) model.
 4.1 Estimated Weight of 2-itemset Pruning Theorem 4. If the transactional accumulation upper-bound weight of a 2-itemset X in D is less than the minimum weighted support, X will not be a RWFUBI or RWFI. Moreover, any superset of X wil l n ot be a RW FU BI or RW FI eit her. Proof. Let be a 2-itemset X ,anda k -itemset X k ( k  X  3) such that X  X  X k . From Theorem 2, it can be obtained that taubw ( X k )  X  taubw ( X k  X  1 ) for any subset X k  X  1 of X k .Thus,ifa2-itemset X is not a RWFUBI, any k -itemset ( k  X  3) that is a superset of X will not be a RWFUBI or RWFI. Therefore, for any itemset Y , if there exists a 2-itemset W  X  Y such that taubw ( W ) &lt; X   X | D | , any supersets of Y can be skipped in the mining process.

To apply this pruning technique efficiently, a constructed Estimated Weight of 2-itemset Structure (EW2S) is built for storing the taubw values of all pairs of items in D . A constructed EW2S is shown in Table 3. The proposed pruning technique is efficient to prune itemsets that are not RWFIs early. 4.2 Procedure of RWFIM-PE Algorithm The proposed RWFIM-PE algorithm (Algorithm 3) is similar to the RWFIM-P algorithm. The difference is that the EW2S needs to be constructed initially during the first database scan. Moreover, the mining procedure for deriving RWFIs is modified to verify the new pruning property for each generated itemset. Due to the page limitation, the detailed pseudocode of the modified Mining-RWFI procedure is not provided. We performed extensive experiments to evaluate the proposed algorithms. Be-cause this is the first paper to consider t he recency of WFIs, no algorithm for the exact same problem was available for comparison. We thus used a state-of-the-art algorithm named PWA [9] for WFIM as a baseline algorithm. Experiments are conducted on two datasets including the real-world dataset (retail) [1] and the synthetic dataset (T10I4D100K) generated using the IBM Quest Synthetic Data Generator [4]. We assessed execution time, number of patterns and scala-bility. The weight of each item was randomly selected in (0,1]. The retail dataset has 88,162 transactions with 75 distinct items, the average length of transactions is 10.3. The T10I4D100K has 100,000 transactions with 870 distinct items, and the average length of transactions in it is 10.1. 5.1 Execution Time The execution time of the three algorithms are first compared under a fixed time-decay threshold (D) with varied minimum weighted-support thresholds (MWs) and varied minimum recency thresholds (M Rs), respectively. Results are shown in Fig. 1 and Fig. 2.
In Fig. 1, it can be seen that RWFIM-P and RWFIM-PE perform very well compared to PWA, and RWFIM-PE has th e best performance. This result is reasonable since both the proposed RWFIM-P and RWFIM-PE algorithms con-sider an additional constraint that is the recency of patterns. By considering this additional constraint, a larger part of the search space can be pruned and less patterns are discovered. RWFIM-PE is faster than RWFIM-P because it adopts the novel EW2S pruning strategy to eliminate itemsets early. This al-lows RWFIM-PE to avoid performing the projection operation for forming the sub-database of each pruned itemset. It is interesting to observe that for the retail dataset, RWFIM-PE is still faster than PWA and RWFIM-P. The reason is that most unpromising candidates are early pruned by the EW2P properties, and thus the EW2P strategy is more effective.
 From Fig. 2, it can also be seen that RWFIM-PE has better performance than RWFIM-P and PWA under various MRs. In particular, the proposed algorithms are generally from about one to two orders of magnitude faster than PWA. The reason is that when the MR value is set higher, a larger part of the search space can be pruned and there is less RWFIs. In summary, the proposed RWFIM-PE algorithm outperforms the RWFIM-P and PWA algorithms. 5.2 Patterns Analysis The number patterns are compared under a fixed time-decay threshold (D) with varied MWs and varied MRs, respectivel y. Results are shown in Fig. 3 and Fig. 4, respectively.
From Fig. 3, it can be seen that the number of discovered RWFIs and WFIs decrease as MW is increased, which was expected. The number of discovered RWFIs is always smaller than the number of WFIs under varied MWs in both sparse and dense datasets. It indicates that numerous WFIs are discovered but few RWFIs are produced when considerin g the recency of transactions. This situation happens especially when MW is set to small values since numerous irrelevant WFIs are then pruned. From Fig. 4, it can also be seen that the number of RWFIs dramatically decrease s as MR increases, while the number of WFIs remains stable. The reason is the same as above. In particular, less RWFIs are found but they are more valuable for real-life applications compared to WFIs since they represent recent trends. 5.3 Scalability Analysis Fig. 5 shows the scalability of the compared algorithms under varied dataset sizes T10I4N4KD | X | K when the time-decay thr eshold, MR and MW are set as 0.0001, 5, and 0.03%, respectively. We measured execution time, memory consumption, and the number of generated RWFIs and WFIs. The variable X indicates the dataset size and was varied from 100K to 500K, by increments of 100K.
It can be seen that all compared algorit hms scale well with respect to dataset size and that the proposed RWFIM-P and RWFIM-PE algorithms scale better than PWA. When the dataset size is in creased, RWFIM-PE becomes more and more faster than RWFIM-P thanks to the EW2P strategy. However, RWFIM-PE consumes more memory than RWFIM-P because it uses the additional EW2S to store taubw values of all 2-itemsets (see Fig. 5(b)). From Fig. 5(c), it can also be seen that the number of discovered RWFIs remains quite smaller than the number of WFIs. Thus, the RWFIs can reveal a smaller but more meaningful set of recent patterns to the user co mpared to the whole set of WFIs. In this paper, a novel type of patterns named recent weighted frequent item-sets (RWFIs) is proposed to solve the limitations of traditional weighted fre-quent itemset mining by considering b oth the weight and recency of patterns. A projection-based algorithm named RWFIM-P is presented to mine RWFIs based on a novel upper-bound downward closure property. Moreover, an improved al-gorithm named RWFIM-PE is also proposed, which introduces a new pruning strategy named Estimated Weight of 2-itemset Pruning (EW2P) to prune non RWFIs early. An experimental evaluation against a state-of-the-art WFIM al-gorithm on the real-world and the synthetic datasets show that the proposed algorithms are highly efficient. For future works, we will try to extend the pro-posed RWFIM framework and the upper-bound model to other relative issues. Acknowledgment. This research was partially supported by the Shenzhen Strategic Emerging Industrie s Program under g rant ZDSY20120613125016389, by the Tencent Project under grant CCF-TencentRAG R20140114, and by the Natural Scientific Research Innovation Foundation in Harbin Institute of Tech-nology under grant HIT.NS RIF.2014100.

