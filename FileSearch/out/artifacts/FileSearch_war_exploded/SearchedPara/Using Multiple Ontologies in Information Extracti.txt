 Ontology-Based Information Extraction (OBIE) has recently emerged as a subfield of Information Extraction (IE). Here, ontologies -which provide formal and explicit specifications of conceptualizations -play a crucial role in the information extraction process. Several OBIE systems have been im-plemented previously but all of them use a single ontology although multiple ontologies have been designed for many domains. We have studied the theoretical basis for using multiple ontologies in information extraction and have devel-oped information extraction systems that use them. These systems investigate the two major scenarios for having mul-tiple ontologies for the same domain: specializing in sub-domains and providing different perspectives. The domain of universities has been used for the former scenario through a corpus collected from university websites. For the latter, the domain of terrorist attacks and a corpus used by a pre-vious Message Understanding Conference (MUC) have been used. The results from these two case studies indicate that using multiple ontologies in information extraction has led to a clear improvement in performance measures.
 H.4.0 [ Information Systems Applications ]: General Theory, Experimentation Information Extraction, Ontologies, Mappings
Information extraction (IE), which is often considered a subfield of natural language processing (NLP), aims to rec-ognize and extract certain types of information from natural language text [20]. Generally, the types of information ex-tracted by IE systems are related to a particular domain such as business organizations, genes or terrorist attacks. Limit-ing the focus to certain types of information in this manner makes information extraction different from the much harder problem of natural language understanding, which attempts to logically interpret natural language.

Ontology-based information extraction (OBIE) is a recent development in the field of information extraction. Here, the general idea is to use an ontology to guide the information extraction process and to present the results. The concept of ontologies comes from the field of knowledge representation. An ontology is defined as a formal and explicit specification of a shared conceptualization [13, 22]. Normally, an ontology is specified for a particular domain. Such an ontology, often known as a domain ontology, formally and explicitly specifies the concepts and relationships in that domain.

Ontology-based information extraction attempts to make use of the formal and explicit specifications of an ontol-ogy in the information extraction process. This is gener-ally achieved by using information extraction to retrieve in-stances and values related to the classes and properties of the ontology. For example, in the domain of business organi-zations, the IE process might discover companies and their important features such as the number of employees, field of business and the location of the head office as identified by the class that represents companies in the ontology and its properties. The extracted information is normally presented through the ontology itself using an ontology definition lan-guage. The Web Ontology Language (OWL) [2], which has emerged as the de facto standard for defining ontologies, is widely used for this purpose. Since the software agents of the Semantic Web [7] are expected to be able to deal with languages such as OWL, the output of an OBIE system can be considered accessible from the Semantic Web.

Several OBIE systems have been implemented in the last few years and even a workshop [5] has been organized on the field. Some of these systems are described in Section 2. For information extraction, they use different techniques such as classification, linguistic extraction rules expressed as regular expressions, gazetteers and web-based search. They also ex-tract different components of an ontology such as instances, property values and classes. The text corpora used by them are also different as some of them can process any document from a given domain while others process documents from a specific source such as Wikipedia 1 . http://www.wikipedia.org
All these OBIE systems use only one ontology for the in-formation extraction process. But there is no rule that pre-vents an OBIE system from using more than one ontology to guide its information extraction process. For several do-mains, different ontologies have been developed. For exam-ple, one ontology repository 2 contains more than 10 ontolo-gies for the tourism domain. In addition, issues related to the existence of multiple ontologies such as integrating them and discovering mappings between the concepts of different ontologies have become an active research area as evidenced by the research papers published on these topics [9, 18].
It can be seen that multiple ontologies developed for the same domain belong to one of the following scenarios. 1. Specializing in sub-domains: For example, in the 2. Providing different perspectives: For example,
Using multiple ontologies in OBIE is interesting because it has the potential to improve the information extraction process. The following are two important opportunities on this regard. 1. Possible improvement in recall: http://www.daml.org/ontologies/keyword.html 2. Supporting multiple perspectives:
Even though the idea of using multiple ontologies in OBIE looks promising intuitively, the following challenges are en-counteredinthisprocess. 1. Figuring out the theoretical basis for using mul-2. Finding suitable ontologies and mappings:
The focus of the work presented in this paper is exploring the above mentioned opportunities and challenges in using multiple ontologies in information extraction. In order to achieve this objective, we first studied the theoretical ba-sis for using multiple ontologies in information extraction. We found it interesting that there is no common agree-ment in the field of ontology-based information extraction on how to formally represent ontologies and the relationship between ontologies and information extraction. Therefore we started by developing such a representation for single-ontology OBIE systems based on existing ideas and then extended it to account for multiple ontologies.

Based on this theoretical framework, we then developed two OBIE systems that use multiple ontologies. One of these systems was developed for the university domain and it uses two ontologies specializing on sub-domains. The other sys-tem uses two ontologies that provide different perspectives on the terrorism domain. The se two systems were compared against single-ontology IE systems for the same domains. The obtained results support our hypothesis that the use of multiple ontologies would improve the performance of infor-mation extraction systems.

The rest of the paper is organized as follows. Section 2 presents the details of some other ontology-based informa-tion extraction systems. Section 3 presents the theoreti-cal framework for using multiple ontologies in information extraction. The details of the two case studies mentioned above, including the results, are shown in Section 4. We dis-cuss the implications of our findings in Section 5 and provide concluding remarks in Section 6.
Ontology-Based Information Extraction has recently re-ceived a lot of attention from researchers mainly because of its relationship with the Semantic Web. It has been pointed out that OBIE systems can be used to create semantic con-tents for the Semantic Web from natural language text [10]. It should be noted that creation of such contents have been quite slow despite the fact that the success of the Semantic Web relies heavily on them. In addition, it has been stated that OBIE can be used to evaluate the quality of ontologies and to improve them [15].

Ontology-Based Information Extraction systems whose de-tails have been published recently include Kylin [24], C-PANKOW [11], SOBA [8] and the implementations by Sag-gion et al. [21] and Li and Bontcheva [17]. We briefly de-scribe the functionality of two such systems that are repre-sentative of many OBIE systems below.

The Kylin system [24] extracts information from a set of Wikipedia pages. The ontology used by the system is constructed by combining the information in infoboxes of Wikipedia pages (which present a tabular summary of the object described in a page) with concepts from WordNet lexical semantic database [4]. This task is performed by a component named Kylin Ontology Generator (KOG). Infor-mation extraction is basically performed as a two step pro-cess that relies on classification. The first classifier predicts which attribute values are contained in a given sentence. This classifier uses Maximum Entropy model using a vari-ety of features including bag of words and Part-Of-Speech (POS) tags. The second classifier uses the CRF model with a wide variety of features to extract the attribute values from sentences. Kylin has performed well when there are enough training examples but has not worked well for  X  X parse classes X  for which there are very few examples. The authors have applied three independent techniques to rectify this situation including adding training examples from the Web.
The implementation by Saggion et al. [21] uses linguistic extraction rules and gazetteers to extract information from a set of documents in the domain of business intelligence. Linguistic extraction rules use patterns expressed as regu-lar expressions to make extractions. For example, the ex-pression (watched|seen) &lt;NP&gt; ,where &lt;NP&gt; denotes a noun phrase, might capture the names of movies (represented by the noun phrase) in a set of documents. Gazetteers on the other hand simply list the individual entities of a particu-lar category and strings matching this list are recognized as instances of the respective class. Saggion et al. [21] have used an ontology that has been developed as a part of the  X  X ulti-Industry Semantic-Based Next Generation Business Intelligence (MUSING) X  project. The system has been im-plemented using the General Architecture for Text Engineer-ing (GATE) [1] and it has shown impressive results in terms of precision and recall.
An ontology consists of several components such as classes, properties (including both datatype properties and object properties), individuals (also known as instances and ob-jects), property values of individuals and constraints. The W3C specification [2] defines the components supported by OWL. OWL is based on description logic.

In OBIE systems, information extraction techniques are normally used to extract individuals of classes and property values for individuals. For example, an OBIE system that uses a geopolitical ontology might identify  X  X rance X  as an individual of the  X  X ountry X  class and extract  X  X aris X  as its property value for the object property  X  X apital X  (and identify  X  X aris X  as an individual for the  X  X ity X  class). Hence an OBIE system can be defined as a set of extractors each attempting to identify individuals of a given class or property values of a given property. Formally, this can be presented as follows. Definition Ontology : An ontology O is a quintuple, O =( C, P, I, V, A )where C, P, I, V, and A are the sets of classes, properties, individuals, property values and other axioms (such as constraints) respectively.
 Definition Ontology-Based Information Extraction Sys-tem : An OBIE for the ontology O (as defined above), I ( O ) is a set of n extractors as follows.
 I ( O )= { E ( O, X 1 ) ,E ( O, X 2 ) , ..., E ( O, X n ) where  X  i (1  X  i  X  n ) ,X i  X  CorX i  X  P .Foragiven corpus D , each extractor E ( O, X i ) would make a set of ex-tractions R ( E ( O, X i ) ,D ), which according to its predictions are either individuals or property values. (It should be noted that some of these predictions may be incorrect.) We denote the actual individuals and property values found in D (often known as the gold standard or the key )by k ( I,D )and k ( V, D ) respectively. It is assumed that all these actual individuals and property values are included in I and V . Formally, k ( I,D )  X  I and k ( V, D )  X  V
Based on these definitions, we can obtain formulae for precision and recal l of the information extraction system (denoted by P ( I ( O )) and R ( I ( O )) respectively).
P ( I ( O )) =
R ( I ( O )) =
There appears to be no consensus on whether information extractors ( E ( O, X i )s) should be a part of the ontology or not. Some authors have argued that these should be con-sidered a part of the ontology when linguistic rules are used as the information extraction technique [12, 19]. The terms extraction ontology [12] and concrete ontology [19] have been proposed for an ontology that contains such rules.
However, we do not subscribe to the view that such lin-guistic rules should be considered a part of an ontology. Since these rules are essentially approximations, which are known to contain errors, objections can be raised that they are not accurate or formal enough to be included in an on-tology. Moreover, we do not see any special feature in lin-guistic extraction rules that support their inclusion in on-tologies. Other information extraction techniques such as classification and gazetteers perform the same task and they too could be included in an ontology in the same manner. But these techniques would also suffer from inaccuracies.
Therefore, we propose that information extractors should be treated as lying outside the ontology. But a developer of an ontology might find it useful to denote that extractors have been developed for some of its classes and properties. One way to accommodate this is to store the details of the in-formation extractor in a URI (e.g., the linguistic extraction rules or the details of the classifiers used) and provide the URIs in the ontology. For classes this can be easily accom-modated as a specific datatype property but more complex axioms would be needed in the case of extractors developed for properties.

Now we can move on to explore the use of multiple on-tologies for information extraction. We do this separately for the two scenarios of using multiple ontologies for the same domain. In this case, we have a generic (common) ontology O c and asetof m specialized ontologies S given by, S = { O 1 ,O 2 , ..., O m } .
 Let O c =( C c ,P c ,I c ,V c ,A c )and  X  i (1  X  i  X  m ) ,O i =( C i ,P i ,I i ,V i ,A i ) In performing information extraction on a given corpus D , the single-ontology IE system would use the common ontol-ogy O c . The multiple-ontology system would use the set of specialized ontologies. For each of the K documents of the corpus D j (1  X  j  X  K ), this system would have to deter-mine which ontology to use. It would try to use the most suitable ontology for each document. This selection would be performed by an ontology selector component and it can be represented by a function os , which returns the number of the selected specialized ontology.  X  j (1  X  j  X  K ) ,os ( D j )  X  X  1 , 2 , ..., m } The single-ontology system I s ( O c ), consisting of n s tors, can be presented as follows using the definition of Sec-tion 3.1.
 I ( O c )= { E s ( O c ,X 1 ) ,E s ( O c ,X 2 ) , ..., E s ( O where  X  i (1  X  i  X  n s ) ,X i  X  C c or X i  X  P c The multiple-ontology system I m ( S ) would contain extrac-tors for each ontology. Therefore, it can be defined as fol-lows.
 Definition Multiple-Ontology IE System : A multiple ontology IE system for the set S of ontologies ( S = { O 1 ,O 2 , ..., O m } ), I m ( S )isgivenby, I ( S )= { I m 1 ( O 1 ) ,I m 2 ( O 2 ) , ..., I m m ( O m ) where each I m i ( O i )containsasetof r i extractors for a single ontology O i as shown by,  X  i (1  X  i  X  m ) ,I m i ( O i )= { E m i ( O i ,X 1 ) , ..., E where  X  j (1  X  j  X  r i ) ,X j  X  C i or X j  X  P i The multiple-ontology system makes extractions for each document with respect to the ontology assigned to it by the ontology selector. Based on this we can obtain expressions for precision and recall of the multiple-ontology system. Using  X  = os ( D j ) , 1  X  j  X  K , The precision and recall for the single-ontology system can be obtained using the formulae given in Section 3.1. When calculating the recall, these formulae will only consider the instances and property values found with respect to the com-mon ontology. However, more instances and property values will exist with respect to the specialized ontologies used by the multiple-ontology system. It is possible to compute a separate measure of recall with respect to these. We call this measure global recall (and refer to the recall computed with respect to the common ontology, which is the standard measure of recall, as local recal l ).
 Here it is assumed that, k ( I c ,D )  X  K j =1 k ( I  X  ,D j )and k ( V c ,D )  X  K j =1 In other words, the common ontology would only contain classes and properties common to all the specialized ontolo-gies. This is what one would normally expect from a com-mon ontology. In this case we have a set of m ontologies, S =( O 1 ,O 2 , ..., O m ) which have the same definitions as in Section 3.2. Since none of these ontologies can be seen as a  X  X ommon ontology X , there will be a set of single-ontology systems I ( O i ) , 1  X  i  X  m .
 The multiple-ontology system can be denoted by I m ( S )as in Section 3.2.
 I ( S )= { I m 1 ( O 1 ) ,I m 2 ( O 2 ) , ..., I m m ( O m ) where each I m i ( O i )containsasetof r i extractors for a single ontology O i as shown by,  X  i (1  X  i  X  m ) ,I m i ( O i )= { E m i ( O i ,X 1 ) , ..., E where  X  j (1  X  j  X  r i ) ,X j  X  C i or X j  X  P i However, there will be no ontology selector component in this case because the ontologies are not specialized towards sub-domains. Therefore, for a given corpus D ,eachdocu-ment of the corpus will be processed with respect to each and every ontology. Assuming that single-ontology IE systems have already been developed for individual ontologies, the multiple-ontology system can make use of these extractors instead of develop-ing new ones. In developing an extractor to identify individ-uals of a given class or property values of a given property, the multiple-ontology system can use the extractors of more than one single-ontology system. The intuition behind this approach is implementing a better information extractor by combining a set of different information extractors. For ex-ample, for the marriage ontologies we have discussed earlier, the extractor for the  X  X pouse X  class in the multiple-ontology system can use not only the results for the  X  X pouse X  class but also the results of the  X  X usband X  and  X  X ife X  classes of a different ontology. Here, the general idea is to use the information extractors for all the concepts that have some mapping with the concept in concern.
 Definition Mapping : A mapping M ( X a ,X b )existsbe-tween two concepts X a and X b of two different ontologies O a and O b ( X a  X  C a  X  P a and X b  X  C b  X  P b with usual def-initions for O a and O b ), if and only if, val ( X a )  X  or val ( X a )  X  val ( X b )or val ( X a )  X  val ( X b ), where val ( X and val ( X b ) represent the sets of individuals/property val-ues of X a and X b respectively.
 For example, if X a and X b are classes, all the individu-als of X a may also be individuals of X b which means that val ( X a )  X  val ( X b ).
 Let X j  X  X  C i  X  P i } , 1  X  i  X  mand 1  X  j  X  r i be a class or a property of ontology O i .( m is the number of ontologies and r i is the number of extractors for ontology O i ) Let X = { X 1 , X 2 , ..., X n } be the set of n properties or classes of other ontologies, which have a mapping M ( X j , X l ) , 1  X  l  X  n and let o ( X l )  X  X  1 , 2 , ..., m } , 1  X  l  X  n denote the number of the ontology for X l .
 The extractor for X j in the multiple-ontology system can make use of not only the extractor for X j but also of the extractors for elements of X in the single-ontology systems. This means that the extractions made by the extractor E m i ( O i ,X j ) for the corpus D depends on a set of single-ontology extractors as follows.
 Here function f j is based on set operators. It presents the operation of the multiple-ontology system for the given class or a property. For the  X  X pouse X  class of the marriage ontol-ogy mentioned earlier, f j may be the union the results for the  X  X pouse X , X  X usband X  and  X  X ife X  classes.
 For the multiple-ontology system, precision and recall can be computed as follows.

For the single ontology systems, precision and recall can be defined using the formulae of Section 3.1. We can also define a formula for global recall as follows.
 For the single-ontology IE system I s ( O i ) , 1  X  i  X  m , Here the number of extractors in the single-ontology system I ( O i )is r i because both the multiple-ontology system and this system has the same number of extractors for ontol-ogy O i (corresponding to the total number of classes and properties for which extractors are developed).
As mentioned earlier, the domain of universities was used in this case study. The corpus consisted of web pages of 100 universities, 50 from North America and 50 from other parts of the world. From each group, 30 were selected for the training set and 20 were used as the test set. Since the set of all documents of a university website is typically very large and contains many pages irrelevant to the task of extracting information about the university (such as personal websites), only a selected set of webpages was included in the corpus. A programming interface to the Google search engine was used for this purpose. This program takes the domain name of a university as the input and selects a set of webpages from that domain by searching for certain key words.
The ontologies used were developed by studying the docu-ments of the training set and other university ontologies. An ontology developed by the Simple HTML Ontology Exten-sions (SHOE) project 3 was helpful in developing the North American ontology. The development of the non-North Amer-ican ontology was primarily based on documents of the train-ing set. A common ontology (to be used by the single-ontology IE system) was designed by identifying the con-cepts common to the two specialized ontologies.

The ontologies were defined in OWL using Prot  X  eg  X  e[3] ontology editor. Figure 1 shows a section of class hierarchy of the common ontology. Figures 2 and 3 show the section of the class hierarchy related to employees of a university in the ontologies for North American and non-North American universities respectively.
In this case study, linguistic extraction rules were used as the information extraction technique. As described in Section 2, this technique is based on the use of regular ex-pressions that capture certain types of information. Spe-cific words, phrases and linguistic features such as Part-Of-Speech (POS) tags can be used by these regular expressions, which are often known as rules. We used the General Ar-chitecture for Text Engineering (GATE) [1], which is Java-based shallow natural language processing tool to implement these rules. When using this tool, extraction rules can be specified using a format known as JAPE (Java Annotations Patterns Engine). http://www.cs.umd.edu/projects/plus/SHOE/onts/ univ1.0.html Figure 1: A section of the class hierarchy of the ontology for the common university ontology
As mentioned in Section 3.2, the multiple-ontology sys-tem should have an ontology selector component which as-signs a specialized ontology for each document. We designed this component to make use of the URLs of university web-sites. The documents from domains .edu, .ca and .us were assigned to the North American ontology while the others were assigned to the non-North American ontology. The single-ontology systems uses the common ontology only and does not need an ontology selector.

Apart from the difference on the use of an ontology se-lector, the architectures of the single and multiple ontology IE systems are the same. The webpages of the corpus are processed by GATE using the JAPE rules that specify the linguistic extraction rules. It writes the output of each doc-ument into a separate file. These files are then processed by another program called ontology language handler that adds instances or property values to the ontology in concern based on the extractions specified in files. This program uses a popular Java OWL API 4 . The OWL files produced by the ontology language handler constitute the final output of the system. These are then compared against a gold standard for the same document specified by a human to compute the performance measures for the IE system.

In order to get some results within a limited time frame, we decided to restrict the implementation to a set of classes and properties instead of attempting to make extractions for all the concepts of the ontologies. Some classes and properties selected for information extraction at this stage are shown below. For each class or property, the ontolo-gies in which it is found, either directly or by a concept directly mapped into it, are shown within paranthesis (us-ing the symbols NA, NNA and C to denote North American, non-North American and Common ontologies respectively). Note that some concepts are only found in specialized on-tologies.
The regular expressions used for information extraction were manually written by studying the documents of the training set. In some cases, different regular expressions http://owlapi.sourceforge.net/index.html Figure 2: A section of the class hierarchy related to employees in North American ontology Figure 3: A section of the class hierarchy related to employees in non-North American ontology were used for concepts of different ontologies that were di-rectly mapped to each other. For example, for the isRe-ligiousUniversity datatype property, patterns based on the words  X  X hristian X  and  X  X atho lic X  were used for North Amer-ican universities while patterns based on word  X  X slamic X  were also used for non-North American universities.
Table 1 shows the summary of the results obtained. It shows the precision, recall and F1 measure (weighted har-monic mean between precision and recall, giving equal weights for precision and recall) for each sub-domain as well as for the entire domain. Note that the figures for the entire domain are not the averages of the corresponding figures for the two sub-domains because the number of extractions made for the two sub-domains are different. It can be seen that the multiple-ontology system has shown improvements in all three measures. The improvement in recall is some-what higher than the improvement in precision. Altogether, the multiple ontology system has shown an improvement of about 5% in F1 measure for the entire corpus.

We have also computed the global recall of each system according to the definitions presented in Section 3.2. It can be seen that the global recall is slightly lower than the stan-dard recall (local recall) for North American universities in the single-ontology system. This is because some concepts specific to the North American university ontology (such as the class for university systems) were used by the multiple-ontology system. No such concepts were used for non-North American ontology and as such the figure for global recall is the same as local recall for these universities in the single-ontology system. System Domain Precision(%) Recall(%) F1 Measure(%) Global Recall(%) Single Ontology Multiple Ontology
The domain of terrorist attacks was used for this case study. The corpus was derived from the corpus used by the 4th Message Understanding Conference (MUC 4) 5 .This conference has used a set of news articles related to terrorist activities of Latin American countries as its corpus and this corps as well as the keys (gold standard) for the documents are publicly available 6 . The corpus consists of 1700 articles, 1300 in the training set and 400 in the test set. We used the first 200 articles of the training set as our corpus, 160 for the training set and 40 for the test set.

We used two ontologies in this case study. One ontology was adopted from the structure of MUC 4 key files itself. Each key file presents the details of a particular terrorist attack and these details consist of 24 slots . X  X ncident:Loca-tion X ,  X  X ncident: Stage of Execution X ,  X  X um Tgt: Name X  and  X  X um Tgt: Description X  are some of such slots. It was seen that these slots can be easily converted into an OWL ontol-ogy. The clear specifications on the relationships between slots (e.g., Hum Tgt: Description may be cross referenced to a Hum Tgt: Name) provided by MUC 4 documentation were also helpful in this exercise. We use the term MUC 4 ontology to refer to this ontology.
 The other ontology was an ontology developed by the Mindswap group of the University of Maryland 7 .Wemade some minor changes to this ontology in adopting it for our work. For example, we removed the constraints in the orig-inal ontology which stated that start dates and end dates should be known for all  X  X errorist events X  since these were not known for some events described in the MUC 4 corpus. We identify this ontology by the term Mindswap ontology .
Sections of the MUC 4 and Mindswap ontologies are shown in figure 4. This figure also shows some mappings between the two ontologies.

Since the key files of MUC 4 are publicly available, it was possible to obtain the gold standard for the MUC 4 ontology from these key files. However, in terms of Mindswap ontol-ogy, it was necessary to manually annotate the corpus for the gold standard. This was the main reason for not using the entire MUC 4 corpus for this case study.
In developing single-ontology IE systems, we used classifi-cation for the MUC 4 ontology and linguistic extraction rules
Message Understanding Conf erences conduc ted in 1990 X  X  provided standard corpora and extractions tasks. http://www.itl.nist.gov/iaui/894.02/related_ projects/muc/muc_data/muc_data_index.html http://www.mindswap.org/2003/owl/swint/terrorism and gazetteers for the Mindswap ontology. As discussed in Section 3.3, the multiple-ontology IE system was developed by combining the two single ontology systems through the use of mappings. The main reason for the use of two differ-ent IE techniques for the two ontologies was to illustrate that it is possible to combine single-ontology IE systems that use different IE techniques into a multiple-ontology IE system.
For this case study, we had to restrict the information extraction process to identifying sentences in which the con-cepts in concern (individuals of classes or property values of properties) are found. This is often used as an interme-diate step in information extraction, especially when classi-fication is used as the IE technique (e.g., the Kylin OBIE system [24]). The next step is to identify the words within a sentence that represent the concept in concern. The main reason for restricting the IE process to this phase was the time constraints encountered in getting a complete set of results for the MUC 4 ontology. We have developed the sentence-level classifier to a reasonable level and it is possi-ble to evaluate the effects on the use of multiple ontologies using the results of this classifier and the results of produced by the extraction rule-based OBIE system for the Mindswap ontology. It should be noted that performance measures such as precision and recall can be computed for the output of these systems by comparing them against a human spec-ified gold standard on which sentences contain the concepts in concern.

As in the case study on university ontologies, we per-formed information extraction only on a selected set classes and properties instead of covering all the concepts of the ontologies. For the MUC 4 ontology, extractions were made for the following properties. For the Mindswap ontology, the values for the hasName datatype property of the Agent class and its subclasses ( Gov-ernment Agent , Terrorist and Victim ) and the Organiza-tion class and its subclasses ( Terrorist Organization , Gov-ernment , Government Organization and Military Organiza-tion ) were extracted.

The classification-based IE system for the MUC 4 ontol-ogy was developed using a set of features including specific key words, WordNet [4] synsets (words with the same mean-ing) for key words and Part-Of-Speech tags. Classification was carried out using the Weka [23] system. Different classi-fication techniques were used to find out the techniques that produce best results. In addition, the techniques that ad-dress the problem of imbalanced classification encountered Table 2: Results for different classification-based IE techniques for MUC 4 ontology IE Technique Precision Recall F1 Bayes Net 28.33 49.28 35.27 Na  X   X ve Bayes 25.72 54.36 34.41 Na  X   X ve Bayes Updateable 25.72 54.36 34.41 Bagging -Bayes Net 28.13 47.31 34.60 Bagging -Na  X   X ve Bayes 26.77 52.09 34.80 Bagging -Na  X   X ve Bayes 26.35 52.09 34.44
Updateable in using classification for IE such as the use of weights, over-sampling and bagging/boosting [16] were also used. For the Mindswap ontology, linguistic extraction rules were speci-fied by studying the training set as in the case study on university data.

In developing the multiple-ontology IE system, the follow-ing mappings were used. 1. val (@ MUC 4 .hasN ame ( HumTgt ))  X  2. val (@ MUC 4 .hasN ame ( P erpetratorOrganization )) We denote the MUC 4 and Mindswap ontologies by @ MUC 4 and @ Mindswap respectively. The first mapping states that each human target name in the MUC 4 ontology is also a name of a victim in the MindSwap ontology. The second mapping states that each name of a perpetrator organiza-tion in the MUC 4 ontology is also a name of an organiza-tion is the Mindswap ontology. These mappings can also be expresses in First-Order Logic. For example, the following FOL statement represents the first mapping.  X  x, y @ MUC 4 .HumT gt ( x )  X  @ MUC 4 .hasN ame ( x, y )  X   X  z @ M indswap.V itim ( z )  X  @ M indswap.hasName ( z, y )
These mappings were manually identified along with some others such as the mapping between Incident and Terror-ist Event classes of MUC 4 and Mindswap ontologies which were not used because those classes and properties were not selected for IE. In the first mapping, a subset relationship is used instead of an equivalence relationship because the key files provided by MUC 4 are more restrictive in identi-fying terrorist incidents and victims than the keys for the Mindswap ontology. Regarding the second mapping, the Perpetrator Organization class of the MUC 4 ontology in-cludes terrorist organizations as well as military organiza-tions. MUC 4 does not have specialized classes for these different types of organization. Therefore, the mapping can be made only to the Organization class of MindSwap ontol-ogy even though more specialized classes are available here. These mappings were used in developing extractors for the Mindswap ontology in the multiple-ontology system. The union of the output of the two related extractors was used as the output for multiple-ontology system. This can be represented as follows using the notation of Section 3.3. Here E m , E s and D denote the multiple-ontology system, the single-ontology systems and the corpus respectively.
The extractions for the MUC 4 ontology in the multiple-ontology system were the same as those made by the single-onotlogy system for MUC 4 because the identified mappings can not be used to improve them.
Different classification techniques were used for the sinlge-ontology system for the MUC 4 ontology as mentioned ear-lier. Here, Bayesian techniques consistently showed better results than other classification techniques. Bagging im-proved results in some cases while other techniques used to address data imbalance problem such as oversampling and the use of weights did not significantly improve performance (or resulted in a deterioration). Table 2 shows a summary of the results obtained.

It can be seen that the Bayes Net classification technique has shown the highest F1-measure. Therefore, the results given by this technique are used as the results of the single-ontology IE system for the MUC 4 ontology. Since mappings were not used to modify the results for the MUC 4 ontology in the multiple ontology system, these figures also represent its results for the MUC 4 ontology. These were also used in the multiple-ontology system for the Mindswap ontology. Table 3 shows a summary of the results obtained for the Mindswap ontology. It shows the results separately for the Agent class and its subclasses and the Organization class and its subclasses in addition to the results for all the classes. It also shows the figures obtained for precision, recall and F1-measure using the standard definitions and using the concept of taxonomy similarity [11]. The general idea behind taxon-omy similarity is assigning a score between 0 and 1 for an extraction based on the closeness of the assigned class label to the correct class label in terms of the subsumption hierar-chy of the ontology. For example, in the Mindswap ontology, this scheme assigns a score of 2/3 when the name of a terror-ist organization is identified as the name of an organization (under standard definitions no score will be awarded for this extraction). The term Learning Accuracy is used when pre-cision is calculated based on taxonomy similarity [11, 14].
From the results shown in Table 3, it can be seen that the multiple-ontology system has generally produced bet-ter results. It can also be seen that the multiple-ontology system has recorded a larger improvement for the Agent class and its sub-classes than for the Organization class and its subclasses. This means that the mapping 1 mentioned above has produced better results than mapping 2. This can be expected because mapping 1 directly identifies names of victims whereas mapping 2 identifies the names of terrorist organizations and military organ izations as names of organi-zations (which is the super class for the two types of organi-zations). Therefore, the advantage using mapping 2 is made clear only when performance is measured using taxonomy similarity. It has resulted in a slight drop in F1 measure when standard definitions are used. Altogether, the preci-sion has slightly dropped in the multiple-ontology system while the recall has improved by a larger margin. As a re-sult, F1 measure has increased by about 2% when standard definitions are used and by about 6% when taxonomy simi-larity is used.

The figures for recall shown above represent local recall, since only the local ontology was considered in establishing the gold standard. Figures for global recall can be computed using the total number of facts available in the keys for the two ontologies as described in Section 3.3. Table 4 shows these figures. The total figure for the single-ontology sys-tem is shown in order to provide a baseline for the multiple-ontology system. (Since the two single-ontology systems are separate there is no such system that works on both ontolo-gies)
As a final note regarding these two case studies, we would like to mention that all the details of them including the OWL files for ontologies, text corpora, programs used for information extraction and full result sets are available from our project website 8 .
It can be seen that the multiple-ontology IE system has shown a higher recall in both case studies. This appears to support our hypothesis that the use of multiple ontologies in ontology-based information extraction leads to a better recall. In terms of precision, the multiple-ontology system has recorded a higher figure when ontologies represent spe-cialized sub-domains while and a slightly lower figure when ontologies provide different perspectives. It can be hypoth-esized that the improvement in precision when ontologies represent specialized sub-domains is a result of the informa-tion extraction systems for the specialized ontologies being more accurate in their narrower domains than the informa-tion extraction system for the common ontology, which is designed for a broader domain. The slight drop in overall precision in the case study on terrorism data is due to the drop of precision resulting from the mapping between Or-ganization and Perpetrator Organization classes. The other mapping has resulted in a slightly higher precision. Hence, it appears that the effect of the use of multiple ontologies on precision depends on the type of mappings here: if mappings are exact (directly between concepts), precision slightly im-proves whereas if the mappings are  X  X ough X  (based on sub-sumption hierarchy) the precision slightly deteriorates. Al-together, F1-measure has increased by significant amounts in both cases mainly due to the improvement in recall. This represents the net benefit in using multiple ontologies.
Further experiments will be necessary to evaluate the ad-vantages of using multiple ontologies on information extrac-tion. Such experiments should use different domains, many ontologies (more than two), different corpora and different IE techniques to verify that the advantages of using multiple ontologies are not limited to some special cases.
It can also be seen that the performance of the informa-tion extraction systems described in Section 4 are somewhat lower than the results of other information extraction sys-tems. For example, the Kylin system [24] has typically shown values in the range of 30% -40% and 80% -90% for recall and precision respectively. A leading system that participated in the MUC 4 conference has shown a recall of 44% and a precision of 55% [6]. The main reason for the drop of performance of in the case study on university data is the complexity of its corpus: this corpus consists of webpages from different websites, which are not uniform and often contain complex structures such as pop-up menus while most IE systems deal with uniform corpora such as news articles from some domain or Wikipedia pages on a http://aimlab.cs.uoregon.edu/obie/ particular topic. Regarding the case study on MUC 4 cor-pus, our systems are still not complete and we should be able to improve their performance by the 10% margin required to bring them up to the level of leading participants of the conference.

However, it should be noted that having somewhat lower values for performance does not invalidate our findings on the advantages on the use of multiple ontologies. Our hy-pothesis is that the use of multiple ontologies improve the performance of IE systems and the results clearly provide support for this.

It is also interesting to look at the case study on ontologies that have multiple perspectives as a mechanism of reusing information extractors in OBIE systems: we have shown that it is possible to improve the performance of an OBIE system for one ontology using the information extractors for related concepts in a different ontology. It is possible to con-ceive a web of OBIE systems that operate on these princi-ples, each contributing towards the improvement of the oth-ers. Such a web of OBIE systems would be immensely help-ful in generating semantic contents for the Semantic Web.
We are currently working on improving the work presented in this paper by expanding the systems to cover full ontolo-gies instead of being restricted to a set of classes and prop-erties. We are also working on improving the OBIE systems used with the terrorism ontologies to perform full informa-tion extraction instead of stopping at the level of sentence classification. Other future work includes experimenting on different domains and corpora as mentioned earlier and de-veloping a generic OBIE framework that supports the use of multiple ontologies.
The intuition behind our work is that the use of mul-tiple ontologies instead of a single ontology in ontology-based information extraction would be beneficial. In order to make use of this intuition, we have formally presented how a multiple-ontology IE system should operate, separately con-sidering the two scenarios in which multiple ontologies are used in the same domain. We have then developed practical OBIE systems that operate on the principles identified. The results obtained support our hypothesis on the advantages of using multiple ontologies in information extraction.
Further research work would be necessary to verify that our findings are generic enough to be applied in different situations. Such work would also be useful to discover the full potential of the principles on using multiple ontologies in information extraction. [1] General Architecture for Text Engineering (GATE). [2] OWL Web Ontology Language. [3] The Prot  X  eg  X  e Ontology Editor and Knowledge [4] WordNet -A Lexical Database for the English [5] B. Adrian, G. Neumann, A. Troussov, and B. Popov. [6] D. E. Appelt, J. R. Hobbs, J. Bear, D. J. Israel, and [7] T. Berners-Lee, J. Hendler, and O. Lassila. The [8] P. Buitelaar and M. Siegel. Ontology-based [9] N. Choi, I.-Y. Song, and H. Han. A survey on [10] P. Cimiano, S. Handschuh, and S. Staab. Towards the [11] P. Cimiano, G. Ladwig, and S. Staab. Gimme X  the [12] D. W. Embley. Toward semantic understanding: an [13] T. Gruber. Ontolingua: A translation approach to [14] U. Hahn and K. Schnattinger. Towards text [15] J. Kietz, A. Maedche, and R. Volz. A method for [16] C. Li. Classifying imbalanced data using a bagging [17] Y. Li and K. Bontcheva. Hierarchical, perceptron-like [18] A. Maedche, B. Motik, and L. Stojanovic. Managing [19] A. Maedche, G. Neumann, and S. Staab.
 [20] E. Riloff. Information extraction as a stepping stone [21] H. Saggion, A. Funk, D. Maynard, and K. Bontcheva. [22] R. Studer, V. R. Benjamins, and D. Fensel.
 [23] I. H. Witten and E. Frank. Data Mining: Practical [24] F. Wu, R. Hoffmann, and D. S. Weld. Information
