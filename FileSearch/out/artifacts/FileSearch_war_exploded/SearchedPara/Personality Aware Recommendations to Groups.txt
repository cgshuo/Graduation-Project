 In this article we introduce a novel method of making recom-mendations to groups based on existing techniques of collab-orative filtering and taking into account the group person-ality composition. We have tested our method in the movie recommendation domain and we have experimentally eval-uated its behavior under heterogeneous groups according to the group personality composition.
 H.3.3 [ Information Storage and Retrieval ]: Information Filtering Human Factors, Algorithms Conflict Resolution, Group Recommendation, Personality
The need of systems capable of performing recommenda-tions for groups of people is getting more interest. Exist-ing works on group recommender systems [2] are typically based on the aggregation of the preferences of the members of the group where every individual is considered as equal to the others. For heterogeneous groups it can be very diffi-cult to obtain a single recommendation that satisfies every member and the general group satisfaction is not always the aggregation of the satisfaction of its members as different people have different expectations. In this situation a con-flict arises, i.e., a situation in which the concerns of people appear to be incompatible, and behaviour in conflict situa-tions should be taken into account.

In our work we study how the group personality composi-tion influences the recommendation accuracy for the group. We have tested our method in the movie recommendation domain and we have experimentally evaluated its behav-ior using the MovieLens data set with groups of users of different sizes and degrees of homogeneity. The novelty of our approach lies in the use of the member personalities to choose the most interesting movie that would better satisfy the whole group. We use the type of personality trait of deal-ing with conflicts of each member to weight the influence of his/her ratings during the recommendation process.
The paper runs as follows. First we describe the conflict personality modes. Section 3 introduces recommendation to groups and describes our Personality Aware Group Rec-ommendation algorithm. Section 4 explains our case study: Movie Recommendation. The obtained results are presented in Section 5, and discussion of some practical and research implications are given in Section 6. Conflict is a natural part of our interactions with others. Different people have different expectations and desires that usually appear to be incompatible, leading to  X  X onflict sit-uations X . The Thomas-Kilmann Conflict Mode Instrument (TKI) [8] is a test designed to measure the behavior of peo-ple in such situations. Although there exist other personality tests, we have chosen the TKI test because it focuses in con-flict management, it is simple enough to be done in fifteen minutes, and results can be easily integrated in our system. The TKI is a leader instrument in conflict resolution assess-ment that is used often by Human Resources consultants to facilitate learning about how conflict handling styles affect personal and group dynamics.

In conflict situations, we can describe the behavior of an individual along two basic dimensions: (1) assertiveness , the extent to which the person attempts to satisfy his own concerns, and (2) cooperativeness , the extent to which the person attempts to satisfy the concerns of the other per-son. According to these two basic dimensions of behav-ior there are five different modes for responding to conflict situations: Competing is assertive and uncooperative, a power-oriented mode. Competing might mean standing up for your rights, defending a position you believe is correct, or simply trying to win. Collaborating is both assertive and cooperative. When collaborating, an individual attempts to work with the other person to find a solution that fully sat-isfies the concerns of both. Avoiding is unassertive and uncooperative. Avoiding might take the form of diplomati-cally sidestepping an issue, postponing an issue until a better time, or simply withdrawing from a threatening situation. Accommodating is unassertive and cooperative, the oppo-site of competing. Accommodating might take the form of selfless generosity or charity, obeying another person X  X  order when you would prefer not to, or yielding to another X  X  point of view. Compromising is moderate in both assertiveness and cooperativeness. When compromising, the objective is to find an expedient, mutually acceptable solution that par-tially satisfies both parties.

TKI builds a user X  X  profile by means of 30 single choice questions. The test provides scores for the previous five modes (competing, collaborating, etc), representing the pref-erences of that person when she has to face conflicts. These scores are normalized using a 8000 people sample.
When moving from recommending items to individuals to recommending items to groups many new issues arise. The main one is how to find a recommendation that satisfies the biggest number of group members taking into account the individual user preferences. The main approaches to gen-erate a preference aggregation based on the individual user preferences are [2] (a) merging the recommendations made for individuals, (b) aggregation of ratings for individuals and (c) constructing a group preference model. The most com-mon employed approaches are (b) and (c) in group recom-menders in many different fields like recommendations of video clip sequences [4] and movies [5], among others. Ac-cording to the scope of our case study, movie recommenda-tions, Polylens [5] recommends movies for groups based on the inferred ratings by MovieLens and using the Least mis-ery strategy to generate the preference aggregation. Some authors [1] criticize these aggre gation strategies because the ratings are combined always in the same way without con-sidering how the members in the group interact with each other. Other works like [4] have employed social issues in order to include the group member interactions to perform the recommendations.
Taking into account group member interactions, we pro-pose an approach to recommend items to a group of peo-ple using personal information about the conflict mode be-haviour of every group member. Assertive conflict mode behaviours penalize negatively the differences with the best choice of another members (the other choices do not satisfy her personal concerns), while cooperative behaviours reward the differences with the best choice of another members (it is not her preference choice but it will be good enough for other members and for the group).

Our group recommendation approach assumes that an in-dividual recommender provides rating predictions for every user u and every item i ( r iu ). The N items with higher r conform the Best u set. Additionally, every user has com-pleted a TKI test, so for every user u we can compute a Conflict Mode Weight ( CMW u ) value that represents the predominant user behaviour according to her TKI evalua-tion. The CMW u is computed using the following equation:
The Assertiveness and Cooperativeness values are the sum of the coefficients extracted from Table 1 according to the user TKI evaluation. We can see that the users with a pre-dominant assertive character will have a CMW u &gt; 0 while a user whose predominant character is cooperative will obtain a CMW u &lt; 0.
 Collaborating 0.375 -0.075 0.375 -0.075 Compromising 00 00 Accommodating -0.15 0 0.375 -0.075 Table 1: Coefficients used to compute the CMW
We have implemented three basic group recommendation algorithms and we have compared them with modified ver-sions which include the CMWs. The basic versions of the group recommendation algorithms use simple merging schemas (like union or intersection) to aggregate the set of individual recommendations of each person of the group. The modi-fied versions include the CMWs during the merging. Each algorithm runs the following schema: 1. Select the kBest u items for each group member u . 2. For each item i in Best u , compute the CMW merging 3. Select the N items fulfilling a selection criterion . We propose the following algorithms using CMW: Minimizing penalization. This algorithm uses the CMWs Average satisfaction. The second algorithm is inspired in Least misery. The last proposed algorithm represents a
There are dozens of movie recommendation systems on the Web. A movie recommender system is typically based on rating movies the user has seen and recommending other movies user might like. MovieLens 1 is a good recommen-dation engine based on collaborative filtering that evaluates user tastes based on ratings to movies seen before. Movie-Lens is traditionally cited in research works because their developers provide the collected user ratings as a complete anonymous dataset.

We have run an experiment in the movie recommendation domain based on MovieLens with a set of 70 students from a AI course at the Universidad Complutense de Madrid. They have filled in some surveys with their personal and group preferences about movies and we used them to develop and test our Personality Aware recommender to groups .The system was developed using the jCOLIBRI framework 2 [6]. Our experiments require the following data: http://movielens.umn.edu/ http://gaia.fdi.ucm.es/projects/jcolibri
We have developed an individual recommender to obtain individual recommendations for the movies in ML using the ratings R i . We use the algorithms described in [3] based on the Pearson Correlation. Then, we combine the individual recommendations using the algorithms described in Section 3.1 to obtain recommendations for the groups G and com-pare them with the real results FS g . This comparison is de-ployed using a simple evaluation measure E(k) that counts how many of these movies in FS are in the k best items retrieved by the recommender. This is, being M k the best k recommended movies, then:
Once the individual recommender was built (using the ratings R i ) we used the individual favorites set FS u to mea-sure its performance. We applied the evaluation measure E ( k ) described in previous section and we have obtained the following results: E(3)=0.26, E(5)=0.22, E(10)=0.18. Although these results seem to be disappointing, we real-ized that they are not for several reasons. First, although E ( k ) is a good measurement for comparing the accuracy of the recommenders, it does not reflect all the information about the recommended movies. For example, measuring if at least one of the favorite movies FS u is in the k -best retrieved movies, we obtain a 65% of successful results for k = 3. Other important factor in the recommender X  X  per-formance is the configuration of ML and the similarity of these movies to the ones chosen for generating R u .These data were randomly chosen, so the performance of the rec-ommender may change depending on these values. Anyway, in our experiment we were not interested on the performance of the individual recommender, so we did not tried to im-prove it. The individual performance was only a base line for the group recommender.

Next, we combined the results of the individual recom-mender using the algorithms depicted in Section 3.1. For each algorithm we repeated the test twice: one time using the CMW factor and another one without it. We computed the recommendation for the groups of users G that were cre-ated after the test of personal affinity. This way, we tried to simulate  X  X eal groups of friends X , and therefore, groups with different number of components. The variability in the number of components enable us to test the algorithms for different group X  X  sizes. Results are shown in Figure 1. They show the results when using the Minimizing Penalizations (left), Average Satisfaction (center) and Least Misery (right) algorithms with and without the CMW factor. In this Fig-ure the Usr(i) label means that the groups had at least i components, and E ( k ) is the evaluation measure employed.
Results show that the Minimizing Penalizations strategy does not improve the performance when k&gt; 1. It means that this measure works better proposing just one movie (center) and Least Misery (right) algorithms. than proposing two or more. However, center Figure 1 ( Av-erage Satisfaction ) reflects a general improvement in the ac-curacy of the recommender on every simulation. Finally, right Figure 1 shows at least the same results when using the CMW values with the Least Misery strategy.

Computing the average improvement of the best reported strategy ( Average Satisfaction ), we obtain a value of 7%. It means that from our experiment we can conclude that recommender systems for groups could be improved when using the Conflict Personality Values . We think that this improvement could be enough to leverage the effort required to obtain the personality profiles of the users.
We tried to obtain relationships between the group con-figurations and the performance of the recommender. We study if we could obtain better recommendations for groups with users with similar ratings applying the Pearson Corre-lation. However, when using CMWs the rating-based sim-ilarity does not affect the accuracy of the recommendation for the group. We also looked for relationships between the configuration of the group in terms of the CMW and the accuracy of the recommendation. Here we found an inter-esting result: 90% of groups with more accurate recommen-dations (using E (1)) have at least a member with a high CMW value. It means that at least there is an assertive person in the group (that we could see as a leader). Fi-nally, we computed the standard deviation  X  of the CMW values for each group to summa rize the dispersion of these CMW values within the group. Then, we found that the rec-ommender works better with groups with a high dispersion in the CMW values. That is, the 80% of successful rec-ommendations were made for groups with high  X  (  X  u &gt;  X  ), and 83% of incorrect recommendations were made for groups with lower dispersion of personalities. It means that our rec-ommender algorithm obtains better results for groups with people having heterogeneous personalities.
In this paper we have presented a novel method of making recommendations for groups based on existing techniques of collaborative filtering and taking into account the group per-sonality composition . Our approach has been tested in the movie recommendation domain, using three different ver-sions of a simple group recommendation algorithm inspired in other classical recommendation algorithms described in the literature and we have included variations based on the Conflict Mode Weights of the group members. Results from our experiment allow us to conclude that recommender sys-tems for groups could be improved when using the Conflict Personality Values . The results of our experiment with ba-sic versions of group recommendation algorithms obtain up to 7% of improvement. Results also indicate that the accu-racy of the recommendation correlates with higher values of CMW and that our recommender algorithm obtains better results for groups with people having heterogeneous conflict-resolution personalities and having at least a leader in the group. The obtained results give support for the proposed model and we plan to extend the experiments to other do-mains, other users, and prove how the CMW can be used in other aggregation preference schemes of recommendations for groups like the aggregation of ratings for individuals or the creation of group preference models.
Supported by Spanish Mini stry of Sci&amp; Edu (TIN2009-13692-C03-03) and Madrid Edu Council and UCM (consol-idated research group 910494). We also thank the UCM students that have participated in the experiment. [1] Y.-L. Chen, L.-C. Cheng, and C.-N. Chuang. A group [2] A. Jameson and B. Smyth. Recommendation to groups. [3] J. Kelleher and D. Bridge. An accurate and scalable [4] J. Masthoff and A. Gatt. In pursuit of satisfaction and [5] M. O X  X onnor, D. Cosley, J. A. Konstan, and J. Riedl. [6] J. A. Recio-Garc  X   X a, B. D  X   X az-Agudo, and P. A. [7] M.Tamiz,D.Jones,andC.Romero.Goal [8] K. Thomas and R. Kilmann. Thomas-Kilmann Conflict
