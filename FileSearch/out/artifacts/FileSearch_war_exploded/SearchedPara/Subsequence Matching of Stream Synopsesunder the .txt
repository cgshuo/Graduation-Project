 Subsequence matching is a popular application in a data stream environment such as sensor network monitoring and financial data analysis. When given a query sequence, users would have great i nterests in continuously monitoring similar subsequences when a data stream k eeps evolving. Therefore, a real-time and space-saving approach is required.

The similarity measurement is an important factor of the subsequence match-ing. Compared with the Euclidean distance, the dynamic time warping (DTW) [1] distance is more robust since it offers elastic scaling and shifting capabilities in time axis. To match two sequences of length M and N respectively, an intuitive solution is to compute the DTW distances of all possible matchings. However, the time complexity of this method is O ( MN 3 ) since it costs O ( MN )toobtain a DTW distance.

Various types of DTW algorithms on subsequence matching have been pro-posed [2, 3]. However, it is impractical for stream applications to preprocess the whole data in advance as these methods did. Hence, Sakurai et al. [4] develop an online subsequence matching algorithm named SPRING, which is based on the DTW algorithm with relaxed boundary constraints. Given a query sequence of length M , SPRING spends O ( M ) time to identify a matching subsequence at each data point of a stream. How ever, for a stream of length N , the total time cost of SPRING is O ( MN ), which is heavy especially when N and M are large.
Searching for a better solution, we notice a growing interest in synopsis tech-niques [5] which meet the real-time re quirement with a small accuracy loss in stream applications. Similarly, synopsis structures for speeding up the DTW al-gorithm are discussed. Keogh et al. proposed the PDTW algorithm which used a piecewise aggregate approximation (PAA) approach with equal-width histogram-based synopses to speeding up DTW [6]. In addition, synopsis structures with arbitrary-width histograms are designed for better approximation accuracy. Ex-amples include the adaptive piecewise con straint approximat ion (APCA) [7] and the Haar wavelet reconstruction [8]. Chan et al. proposed a Haar wavelet-based approximation method under the time warping distance, but the method cannot deal with subsequences and has much overestimation [9].

For the above reasons, we present a new subsequence matching method under the dynamic time warping distance for data streams that are summarized with an arbitrary-width histogram-based synopsis structure. Each histogram contains a value and a timestamp indicating the end of this histogram as shown in Fig. 1(a). Given a query sequence Q with length M that summarized with m histograms, we want to continuously report subsequences of stream with distances to Q not greater than the threshold .WeproposetheWeightedDynamicTimeWarping (WDTW) algorithm that derives these ma tching subsequences. In order not to overestimate the warping distance, which could happen when one histogram of a stream synopsis matches multiple histograms of the other one, we have designed a method to lower the overestimated di stance. The WDTW algorithm is shown to have O ( m ) complexity in both time and space at the coming of each histogram of the stream. After processing n histograms, the total time complexity of our method is O ( mn ), where m M and n N for synopsis streams.

To evaluate the WDTW algorithm, we conduct two experiments using a real dataset of time series. For comparisons, we implemented two other subsequence matching methods, referred to as Synopsis-DTW and MicroCell-DTW. The ex-perimental results show that, when comp ared with MicroCell-DTW, our method and Synopsis-DTW have far low computational time costs. However, our method has only a little trade-off in accuracy, which is not true for Synopsis-DTW. Dynamic Time Warping (DTW) is a widely used distance measurement in time series applications. It can compute the distance between two series of different lengths since it solves the problem of shifting and scaling in the time axis. In essence, the DTW distance between two series X = { x i | 1  X  i  X  N } and Y = { y pair ( i, j ). A sequence of all matching pairs from (1,1) to (N,M) between series X and Y is called a warping path W . Then, a warping distance for the path W
Obviously, there exists multiple warping paths between X and Y .TheDTW distance between X and Y is defined as the warping path with the smallest Distance ( W ), which we defined as the optimal warping path. The dynamic programming technique can solve the optimal warping path problem in O ( MN ) time complexity. Please refer to [1] for more details. 3.1 Problem Definition Given a data stream of length N , an online stream is summarized as a se-quence of histograms X = { x 1 ,x 2 , .., x n } , each of which has a height xv i and an endpoint xt i as shown in Fig. 1(a). We can denote a stream synopsis as which starts from time t s and finishes at t e ,whereboth t s and t e have to be endpoints of histograms of X . For ease of exposition, we denote a synopsis sub-sequence as X [[ i ]:[ j ]] to mean that it starts from the i th to the j th histograms of X . Given the notations, we now define the subsequence matching problem. Definition 1 (Synopsis Subsequence Matching). Given an online running stream synopsis X , a query synopsis subsequence Q , and a threshold , the goal of synopsis subsequence matching is to locate all the subsequences X [ t s : t e ] that satisfy Dtw ( X [ t s : t e ] ,Q )  X  3.2 WDTW: A Weighted Algorithm for Dynamic Time Warping To solve the above issue, we propose Weighted Dynamic Time Warping (WDTW) method. When the distance between the stream synopsis X = { x 1 ,x 2 , ..., x n } and the query sequence Q = { q 1 ,q 2 , ..., q m } is derived, an accumulated distance matrix of n  X  m cells will be created to keep the histogram mapping informa-tion sequentially. As Fig. 1(b) shows, each cell is divided by the bold-solid lines according to width of each histogram. The cell ( i, j ) is constructed by the i th histogram of X and j th histogram of Q . The size of each cell is different due to the different width of each histogram. Therefore, each cell can be further divided into multiple square micro cells with side lengths equal to one time unit. For example, in Fig. 1(b), the shaded cell (3 , 3) contains 4  X  2 micro cells. Later we will show that in fact only the latest t wo rows of these cells need to be kept.
Similar to DTW, WDTW also works in a dynamic programming way. Intu-itively, the warping distance at each cel l is directly derived from three neighbor cells of various sizes in the matching procedure. However, this will result in over-estimated distance. Using Fig. 1(c) as an example, if we directly compute the accumulating warping distance of the cell (3,3) from the cell (3,2), all the light and dark shaded micro cells will be counted in. In fact, the distance contributed by the dark shaded micro cells are redundant and should be eliminated.
To lower the overestimated distance, our WDTW works as follows. First, we define D ( i, j ) as the minimum accumulated distance between X [[ s ]:[ i ]] and Q [[1] : [ j ]], s =1 , 2 , ..., i , where D d ( i, j ), D l ( i, j ), and D u ( i, j ) denote the minimum distances for cell respectively. We now discuss how to c ompute these distances case by case. Case 1: Minimum Distance Path from the Diagonal Cell In this case, the warping path comes from the cell ( i  X  1 ,j  X  1) to the current cell ( i, j ) as Fig. 2(a) shows. The path implies that the histogram x i  X  1 matches the histogram q j  X  1 and x i matches q j . The distance D d ( i, j ) can de obtained from sum of D ( i  X  1 ,j  X  1) and the distance of the cell ( i, j ).

The sub-optimal path of the current cell ( i, j ) passes max { lx i ,lq j } micro cells, where lx i and lq j are the length of histogram x i and q j respectively. The micro cells passed by the sub-optimal path are called steps in the rest of this paper. Consequently, we can obtain the accumulated distance D d ( i, j )= D ( i  X  1 ,j  X  1) + d i,j  X  max { lx i ,lq j } ,where d i,j = xv i  X  qv j . For example in Fig.1(b), the D (3 , 3) in the shaded area can be computed as: D d (3 , 3) = D (2 , 2) + d 3 , 3  X  max { lx 3 ,lq 3 } =6+(4  X  6) 2  X  4 = 22. i Case 2: Minimum Distance Path from the Left Cell The warping path from the cell ( i, j  X  1) to cell ( i, j ), as shown in Fig. 2(b), de-notes that x i matches the consecutive histograms q j  X  1 and q j . We use a combined calculation of the consecutive histogram s in a row to lower the overestimated dis-tance of D l ( i, j ). Without loss of generality, we assume that the start histogram of these consecutive ones is q s . Our major insight is that the consecutive his-tograms that match the same histogram x i can be combined. In other words, bination, where the sub-optimal warping path  X  goes from the upmost-leftmost micro cell of ( i, s ) to the bottommost-rightmost micro cell of ( i, j ). Definition 2 (The Adjustable Distance in the Vertical Direction). For index of these consecutive ones as a combination, the value E v ( i, j ) is defined to represent the adjustable distance of cell ( i, j ) in the vertical direction as follows. Lemma 1. The total distance of the sub-path, in a cell combination from ( i, s ) Proof. Based on case 1, the sub-optimal path of the cell combination passes distance of the sub-path would be j k = s ( d i,k  X  lq k )and E v ( i, j ) would be 0. If lx i &gt; to pass further lx i  X  j k = s ly k vertical steps. In order to obtain the optimal path, the vertical steps must be in the cell which has minimum d i,k ,where k is from s to j . In this condition, the adjustable distance in vertical direction is d min  X  lx Therefore, the total distance of the sub-path is j k = s ( d i,k  X  lq k )+ E v ( i, j ). In sum, Lemma 2 shows how to calculate the value of D l ( i, j ).
 Lemma 2. The accumulated distance D l ( i, j ) , where the path comes from the cell ( i, j  X  1) , can be obtained with following equation in O(1) time. Proof. Without loss of generality, for the sub-path from the cell ( t, s )tothe cell ( i, j ), where t  X  i and s&lt;j ,therearetwocasesof E v ( i, j  X  1). When E v ( i, j direction should be distri buted to the next cell. Hence, E v ( i, j )isalsoequalto 0, and Eq. (3) is obtained in this case.

When E v ( i, j  X  1) = 0, as the dark shaded area shown in Fig. 3(b) and 3(d), the vertical steps in the previous cells can be distributed to the cell ( i, j ). With Lemma 1 and Definition 2, D l ( i, j ) can be obtained as follows.
 Based on Lemma 2, the information required to calculate D l ( i, j )isonlystored is constant, D l ( i, j ) is obtained in constant time. We give an example of this Case 3: Minimum Distance Path from the Up Cell In this case, the warping path passes through cell ( i  X  1 ,j ) as Fig.2(c) shows. Since can also be derived in cons tant time. In Fig. 1(b), E h (3 , 3) = 0, D u (3 , 3) = D (2 , 3)  X  E h (2 , 3) + d 3 , 3  X  lx 3 + E h (3 , 3) = 24  X  0+1  X  4 + 0 = 28. After deriving the distance values of the three cases, the minimum accumu-lated distance can be obtained. Continuing the previous example, D (3 , 3) = min { D d (3 , 3) ,D l (3 , 3) ,D u (3 , 3) } =min { 22 , 12 , 28 } = 12.
We now describe how WDTW identifies m atching subsequences. For each syn-opsis histogram x i arriving at time t i , WDTW computes the i th row of the accu-mulated distance matrix D ( i, j )where j =1 , 2 , ..., m . Then, the warping distance To get the start time t s ,eachcell( i, j ) keeps the start time index where the warping distance comes from in the matrix S ( i, j ). Therefore, wh en construct-ing the warping path, the start and end time of the most similar subsequence are kept in the last cell ( i, m ) of this path. For example, in Fig. 1(b), t s = S (3 , 2) =
Notice that as we compute D ( i, j ), S ( i, j ) is also obtained. Since the com-putation cost of each D ( i, j )and S ( i, j )is O (1), the computation time of m histograms is O ( m ). Also, only the information of cell( i  X  1 ,j  X  1),( i, j  X  1), and ( i  X  1 ,j ) is used. Therefore, WDTW only n eeds to keep the latest two rows of cells, i.e., O (2  X  m )= O ( m ) in space. 4.1 Experiment Setup and Performance Metrics The real datasets are downloaded from the UCR Time Series Classification / Clustering Archive [10]. We choose time series in the posture dataset. The first pattern in each series was used as the query patterns with length M = 1024, while the rest part of the series as data streams with length N = 32768. The synopsis histograms in the following experiments were built by Haar wavelet decomposition with varied synopsis rate [8], which is defined as a ratio of the number of histograms to the number of points in the original stream. We compared our algorithm with two methods: MicroCell-DTW and Synopsis-DTW. MicroCell-DTW divided each histogr am into multiple one-time-unit his-tograms. It computed the warping distance based on micro cells, not the cells, and the matching problem was solved using the SPRING method [4]. On the other hand, Synopsis-DTW computed warping distance directly on the cells as WDTW did, but was regardless of handling the overestimated distance. 4.2 Experimental Results The first experiment examined the a ccuracy of WDTW and Synopsis-DTW. The subsequences produced by MicroCell-DTW were regarded as the benchmark since it produced the correct warping distance based on the synopsis histograms. The error rate is defined as the ratio of the sum of false alarms and misses to the number of correct subsequences an d the reported subsequences by either WDTW or Synopsis-DTW. For each missed or false alarmed subsequence, the penalty is the ratio of the time interval of the false alarmed/missed part to the whole length of itself.

The results were shown in Fig. 4(a). Wh en the synopsis rate decreased, the error rate of Synopsis-DTW increased significantly. In contrast, the error rate of WDTW increased much slightly. For example, the error rate of WDTW is 2 . 2% while that of Synopsis-DTW is up to 19 . 7% when the synopsis rate is 0 . 06. This shows the importance of dealing with the overestimated distance.

The second experiment examined the s peed of the three algorithms. The re-sults are in Fig. 4(b). MicroCell-DTW was independent of the synopsis rate since it examined each micro cells of a s tream, where the nu mber is equal to the original stream length. Under the synopsis rate of 0 . 06, MicroCell-DTW can only process 0.85 histograms each millisecond. In contrast, WDTW can pro-cess 141 histograms under the same synopsis rate, which is 165 times faster than MicroCell-DTW did. In other words, WDTW processed the online subse-quence matching 165 times faster than MicroCell-DTW did. On the other hand, WDTW and Synipsis-DTW had almost the same computation cost, which de-creased along with the synopsis rates. This shows that the processing time of the overestimated distance is very small. Concluded from Fig. 4(a) and 4(b), WDTW processes the online subsequence matching efficiently while sacrificing only a very little accuracy. We presented WDTW, an efficient online subsequence matching algorithm un-der dynamic time warping in a streaming environment. Once a various-width synopsis histogram of a stream is gener ated, according to the query sequence, WDTW reports all the matching subsequences. The experimental results show that when compared with MicroCell-DTW and Synopsis-DTW, WDTW has a low computation cost to meet the time and space constraints of streams, with a little trade-off in accuracy.

