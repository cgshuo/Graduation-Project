 Prior research on viral marketing mostly focuses on pro-moting one single product item. In this work, we explore the idea of bundling multiple items for viral marketing and formulate a new research problem, called Bundle Configu-ration for SpreAd Maximization (BCSAM). Efficiently ob-taining an optimal product bundle under the setting of BC-SAM is very challenging. Aiming to strike a balance between the quality of solution and the computational overhead, we systematically explore various heuristics to develop a suite of algorithms, including  X  -Bundle Configuration and Aggre-gated Bundle Configuration . Moreover, we integrate all the proposed ideas into one efficient algorithm, called Aggre-gated Bundle Configuration (ABC) . Finally, we conduct an extensive performance evaluation on our proposals. Experi-mental results show that ABC significantly outperforms its counterpart and two baseline approaches in terms of both computational overhead and bundle quality.
 F.2.2 [ Analysis of Algorithms and Problem Complex-ity ]: Non-numerical Algorithms and Problems Viral Marketing, Personal Preference, Product Bundling
Studies show that people tend to trust product informa-tion received from their friends more than advertisements on newspaper and TV [12]. Notice the growing importance of using social networking services as a medium for informa-tion spread, there is a recent push for viral marketing based on word-of-mouth among friends [10]. As demonstrated in some recent news 1 and successful startups, such as livingso-cial.com, the idea of using social networks for viral marketing is a promising strategy for business.

A typical viral marketing scenario is as follows. To pro-mote a new product, a company may conduct a viral mar-
P&amp;G To Lay Off 1,600 After Discovering It X  X  Free To Ad-vertise On Facebook [1].
 keting campaign by offering the product for free to a small number of selected users. This campaign anticipates that, if these initial users like the product, they may influence friends to adopt it, producing a chain effect of influencing friends X  friends to accept the product. Through word-of-month among friends on a large social network, a success-ful viral marketing campaign will attract a great number of users to try and adopt the product. Given that the so-cial network (which captures the social connectivity of po-tential customers) and the diffusion model (which models information diffusion among people) are known, a key is-sue for planning a viral marketing campaign is to find the best k initial seed users to target on in order to maximize the population of potential customers who would adopt the product. This seed selection problem has attracted exten-sive research interests in the past few years [3, 7, 9] 2 seed selection problem satisfies the submodularity property for a greedy algorithm to achieve a tight performance bound, in the past few years the main focus of research on this topic is to boost the efficiency of this greedy algorithm by explor-ing various heuristics [3, 7, 9]. Recently, researchers have started to study the seed selection problem for spreading multiple products simultaneously [4], while others consider competitive or negative influence [14].

Product bundling is an effective marketing strategy fre-quently adopted by companies to boost sales [8]. 3 Based on [11], consumers X  valuations for bundled items form a proba-bilistic distribution with a variance per item lower than that for individual items. The larger the number of items is bun-dled, the greater the variance is reduced. Notice that the un-certainty in consumers X  valuations of products is the enemy of effective pricing and efficient sales. As the distribution of valuations for a bundle has proportionately more mass near the mean, product bundling generally produces higher prof-its [13]. Moreover, bundling could reduce customers X  search and assembly costs, thus enhancing their willingness to buy bundled items [8]. However, large bundles may result in difficulty for consumers to evaluate the valuation of a bun-dle [2]. As a result, instead of bundling all items, companies usually bundle items together with a targeted size.
In this paper, we propose to explore the idea of product bundling for viral marketing. By placing a bundle of product items (called a bundle for short) at some initial seed nodes, the social influence for adopting the bundle is expected to spread via the social network of potential customers, similar to conventional viral marketing for single item. However, the bundled approach has an advantage over the single-item viral marketing  X  as soon as a customer has accumulated
Understanding the aforementioned diffusion model and dis-covering associated social influence are active research topics but out of the scope of this study.
A bundle refers to a set of product items to be sold together. certain degree of weighted valuation on items in the bun-dle, she will continue to diffuse to other customers via her social connections. 4 Thanks to the reduction of variance in customer valuations on bundled items, the effect of word-of-mouth is expected to be amplified.

If we consider a bundle of products as an item, the seed se-lection problem remains the same as described earlier. Thus, in this paper, we consider a new problem that arises under the context of promoting bundled products. Given a set of items and a social graph of potential customers, we target our study on finding the best bundle of  X  items 5 to maximize the anticipated customer adoption. This new research prob-lem, called Bundle Cofiguration for SpreAd Maximization (BCSAM), is complementary to the seed selection problem. A marketing firm would plan for a campaign by either (i) first run a seed selection algorithm to find a set of seed nodes (representing a targeted population) and then run our algo-rithms to configure a bundle for the targeted market, or (ii) vice versa.

To tackle the BCSAM problem, an approach is to select the most popular  X  items to all customers. This popularity-based approach, while computationally efficient, does not consider the social influence and connectivity among people. Thus, we do not expect it to produce a bundle with a good spread. An alternative approach is to enumerate all possi-ble bundle configurations in order to derive the best bundle with the optimal spread. This enumerative approach, while producing the optimal bundle, needs to examine C | I |  X  con-figurations and thereby incurs intensive computation, espe-cially for a large I . Obviously, the major challenge faced in processing BCSAM comes from the numerous bundle con-figurations and spreads to be derived. Thus, we propose to exploit a number of computationally efficient heuristics to obtain a bundle with good quality.

Aiming to strike a balance between the quality of the ob-tained bundle and the computational overhead, we system-atically develop a suite of algorithms, including  X  -Bundle Configuration and Aggregated Bundle Configuration based on following novel ideas: (i) incrementally configuring the best bundle by maintaining a number of intermediate sub-bundles 6 ( s-buns for short), and (ii) aggregating the process-ing of similar s-buns at the same time, respectively. More-over, we integrate all the proposed ideas into an efficient algorithm, called Aggregated Bundle Configuration (ABC) . Finally, we conduct an extensive performance evaluation on our proposals. Experimental results show that ABC sig-nificantly outperforms its counterpart and two baseline ap-proaches in terms of both computational overhead and bun-dle quality.

The rest of this paper is organized as follows. We formu-late BCSAM and briefly survey the related works in Section 2. We discuss the various ideas explored in this paper and detail the proposed algorithms in Section 3. We discuss the performance evaluation and show experimental results in Section 4. Finally, we conclude this paper in Section 5.
In this section, we first formulate the research problem, and then review the relevant research works.
We assume that a customer has varied preferences for items in a bundle. The valuation of the bundle can be obtained as a weighted sum of her preferences over all items in the bundle [5, 6].
Note that the selection of  X  , typically decided based on marketing strategies, is out of the scope of our study here.
The size of an s-bun, intermediate bundle generated in the configuration process, is smaller than  X  .

We first introduce an information diffusion model, called linear threshold model (LTM), widely used to capture the operational process of information spreading in a social net-work [9]. Consider a directed social graph G =( V,E ), where each node v  X  V (denoting a customer) is either inactive (i.e., the node has not adopted the marketed item) or active (i.e., the node has adopted the item). Let N v be the set of neighbors connected to v . For each node u  X  N v ,weuse f u,v and f v,u to denote the social influence scores from u to v and from v to u , respectively.

This paper incorporates the factor of preference into LTM to support viral marketing of information bundle via the so-cial network. 7 Each node v  X  V is associated with a pref-erence score p v,i corresponding to each item i  X  I .The information spreading process operates similarly to the tra-ditional LTM except that a node v is activated when the sum of the preference scores on the bundled items in B and the influence scores from N v , a non-empty set of neighbor active nodes, is greater or equal to the threshold  X  v , where the preference scores and influence scores have been normalized properly to represent the v  X  X  valuations on bun-dled items and her neighbors X  influence on the bundle.
We use spread to denote the projected set of nodes acti-vated by a viral marketing campaign. In the following, we use Example 1 to illustrate the diffusion of a bundle in social networks.
 Example 1. Consider a viral marketing campaign scenario as illustrated in Figure 1. A social graph has 9 customer nodes with social influence scores labeled on the edges 8 customers X  personal preference scores for the five candidate items { a, b, c, d, e } and their activation thresholds are pre-sented as vectors with node 1 as the seed for placing bun-dles. 9
In this example, we show the spread for bundle B = { b, d At the beginning, only node 1 is activated. Node 2 is then ac-tivated since i  X  B p 2 ,i + u  X  N 2 f u, 2 =0 . 2+0 . 3+0 . 05 Node 4 is also activated similarly since the sum of influ-ence and preference scores is no smaller than its thresh-old. However, node 3 is not activated because i  X  B p 3 ,i u  X  N 3 f u, 3 =0 . 3+0 . 1+0 . 15 &lt; 0 . 9. Afterwards, the inactive neighbors of nodes 1, 2 and 4, i.e., nodes 3, 5, 6, are exam-ined. The sum of influence and preference scores of those
As we have not yet found direct support in literature for incorporating the preference into other diffusion models [3, 7, 9].
For simplicity, we assign an equal weight to f u,v and f v,u for each edge ( u, v ) in this example.
This campaign example can be easily generalized to the one with multiple seeds. nodes are 0 . 3+0 . 1+0 . 15+0 . 04 &lt; 0 . 9, 0 . 3+0 . 4+0 . 09 and 0 . 1+0 . 2+0 . 1 &lt; 0 . 9, correspondingly. Thus, only node 5 is activated. At the next stage, node 5 spreads its influence to node 9, which still cannot be activated since the sum is 0 . 3+0 . 3+0 . 05 &lt; 0 . 9. As no new nodes activated, the spread of B contains four nodes, { 1 , 2 , 4 , 5 } .

The problem of Bundle Configuration for Spread Maxi-mization is formulated as follows.
 Bundle Configuration for SpreAd Maximization (BC-SAM). Consider a set of product items I and a social graph G =( V,E ), following the setting in accordance with the above model. Given a seed node s  X  V and a targeted bundle size  X  , we aim to select a set of  X  items from I to configure a bundle B such that its spread (i.e., the number of nodes activated by B )ismaximized.

Notice that BCSAM considers only one seed node for sim-plicity. Without loss of generality, BCSAM easily covers the scenarios with multiple seed nodes (denoted by a set S ), as we can argue the social graph with a virtual seed s by con-necting s to each seed node s i  X  S with an edge weight f set as the maximum activation threshold of s i .Asevery node s i  X  S are activated automatically by s ,wefocuson processing the single-seeded BCSAM problem.
The phenomenon of influence propagation in social net-works and its applications in viral marketing have received extensive interests recently. The linear threshold and inde-pendent cascade [9] models are two fundamental diffusion models for influence propagation, while the learning of the social influence as the edge weight between any two nodes is also studied [7]. To facilitate efficient processing of seed selection algorithms, the above-mentioned diffusion models have been simplified and extended in [3]. Recently, a new model [7] based on user logs of posts and product rankings is proposed. The main research problem in all above works is the seed selection for influence maximization. A 1  X  1 /e approximation algorithm based on submodularity property is proposed in [9], while various novel improvements for the above approximate algorithm have been proposed [3, 7, 9]. Uniquely, our study explores a new direction orthogonal to all the above works and formulates an original problem BC-SAM , aiming to configure the bundle of multiple items effi-ciently. Indeed, solving BCSAM is fundamentally different from existing works in seed selection because submodularity property does not hold. Therefore, we are not able to apply the ideas and heuristics behind algorithms proposed in the above works to solve BCSAM.

Conventional research on viral marketing is mainly based on the social influence without considering the personal in-terests/preferences. Nevertheless, a study on item adoption and prediction has indicated that a user X  X  preference for an item of interests is the most important factor to derive the user X  X  decision to adopt the item, although social friends do influence the user X  X  decision to some degree [15]. Neverthe-less, the above work considers the preference only on single item, instead of a bundle of items. As shown in this paper, personal preferences is a dismissible factor in viral marketing product bundles. Therefore, based on the previous studies [5, 6, 15] that sum up different factors, we incorporate the personal preferences into the linear threshold model.
While the enumerative approach mentioned earlier is able to derive the optimal solution, it is not scalable. Thus, we aim to explore a number of computationally efficient strate-gies to find a good solution. By iteratively expanding the best  X  intermediate bundles from the sub-bundles (s-buns) Algorithm 1  X  -Bundle Configuration (  X  -BC) Require: G =( V,E ), I ,  X  v , p u,i , f u,v ,  X  ,where v Ensure: a bundle B with its spread S maximized 1: Let B i 1  X  X  i } and compute the spread S i 1 ,  X  i  X  I ; 2: Number the  X  bundles with the largest spreads as 3: for t =1 ... X   X  1 do 4: for all i =1 ... X  do 5: for all j  X  I  X  B i t do 6: Let B i,j t +1  X  B i t  X  X  j } and compute the spread 7: Number the  X  bundles with the largest spreads among 8: Let i  X  =argmax i S i  X  , B  X  B i  X   X  ; obtained in previous iterations, the  X  -bundle configuration (  X  -BC) algorithm (detailed in Section 3.1) serves as our basic processing framework for BCSAM. Notice that the parameter  X  serves a tuning knob between the quality of the final bundle solution and the computational overhead. Built upon  X  -BC, our approach further explores the follow-ing ideas to efficiently process BCSAM.

Noticing the redundant computation of spreads for s-buns and bundles examined in  X  -BC, we introduce the notion of aggregated spread to avoid computing the spread of s-buns from scratch. Additionally, we introduce the notion of peer items in activating a node and propose to aggregate the computation of spreads for multiple  X  X imilar X  s-buns at the same time. As these ideas aim to enhance the efficiency of  X  -BC with aggregation , we call the enhanced algorithm aggregated bundle configuration (ABC) (see Section 3.2).
Here we first introduce the  X  -BC algorithm as our basic framework for BCSAM.  X  -BC starts by taking all individual items in I separately to form a series of single-item s-buns B ,B 2 1 , ..., B | I | 1 . Their corresponding spreads S 1 are then separately derived, starting from the seed s .Ac-cordingly,  X  s-buns with the largest spreads are kept and re-numbered as B 1 1 ,B 2 1 , ..., B  X  1 (while the rest are eliminated). Next, each of the  X  bundles is expanded into two-item bun-dle. Take B 1 1 as an example. It is expanded into | I | X  ing from the seed. As such,  X  s-buns of the largest spreads are generated/maintained iteratively and finally, at the  X  -th iteration, the bundle with the largest spread is returned as the solution. The pseudo code of  X  -BC is presented in Algorithm 1.

As mentioned, the  X  X uning knob X   X  aims to balance the solution quality and computational overhead. When  X  is small, the algorithm is efficient as it keeps only a small num-ber of selective s-buns. Nevertheless, when other items are added later, these selected items may not always activate the most nodes in a long run (especially those nodes distant from the seed node). On the other hand, a larger  X  trades computational overhead for more options (i.e., maintained
Note that an s-bun may be generated in multiple ways, e.g., B 1 2 = { a, b } can be generated by adding b to B 1 or adding a to B 2 1 = { b } . We eliminate the duplicates by numbering each item and adding an item to an s-bun only if the item is larger than every item in the s-bun. intermediate s-buns) which may turn out to bring in more distant nodes than the best s-buns in each iteration.
In  X  -BC, the spread of an s-bun B t at iteration t is com-puted by incrementally activating nodes from the seed node s outwards. Obviously, this approach is not efficient since the spreads already obtained for s-buns at iteration t  X  1 are not utilized. Indeed, when an item from I  X  B t  X  1 is selected to expand B t  X  1 into a new s-bun B t at iteration t , the spread S t  X  1 of an s-bun B t  X  1 , obtained at iteration t can be reused. We use Lemma 1 to show that the spread S t of B t can be derived by expanding the spread S t  X  1 of B Lemma 1. If B t  X  1  X  B t ,then S t  X  1  X  S t .

Proof. Since B t  X  1  X  B t ,  X  v  X  S t  X  1 ,wehave According to Eq. (1), v must be activated for bundle B t . The lemma follows.

Lemma 1 indicates that we can compute the spread of an s-bun B t at iteration t by expanding an s-bun B t  X  1 long as B t  X  1  X  B t .As B t could possibly be expanded from several s-buns at iteration t  X  1, an idea is to aggregate the spreads of all these s-buns together as an aggregated spread of B t . We formally define aggregate spread in Definition 1.
Definition 1. The aggregated spread S t of an s-bun B t consists of nodes in S t =  X  X  S t  X  1 | B t  X  1  X  B t } .
Thus, to compute the spread S t of B t , we may start from the nodes located at the boundary of S t , instead of the seed node. In addition to the concept of aggregated spread, this section aims to simultaneously compute multiple spreads of similar s-buns which have a sufficient overlap in their ag-gregated spreads. Our strategy is to explore bundles ex-panded from the same s-bun obtained at the previous itera-tion. Take B t  X  1 as an example. All the aggregated spreads of its expanded bundles B 1 t ,B 2 t , ... overlap at S t may visit pretty much similar sets of nodes while computing their real spreads. This observation presents an opportunity to consolidate the computation of these spreads. Consider a node v , which gets activated for a B 1 t (generated by adding item i 1 to B t  X  1 ). It may get activated for B 2 t (generated by adding item i 2 to B t  X  1 )if v prefer i 2 more than i 1 of v  X  X  neighbors activated for i 1 are activated for i 2 Thus, for node v , i 2 is a peer item to i 1 (see Definition 2).
Definition 2. For a node v and an s-bun B t  X  1 ,if B t  X  1 { i } activates v ,then i 2 is a peer item of i 1 at v when the following condition holds. where N 1 v and N 2 v denote the active neighbor nodes of v corresponding to B t  X  1  X  X  i 1 } and B t  X  1  X  X  i 2 } .
Equipped with the idea of peer items, Theorem 1 facili-tates aggregated computation of spreads for similar bundles expanded from the same s-bun in the previous iteration.
Theorem 1. Let B 1 If v/  X  S 1 t is activated for B 1 t , v can also be activated for B by adding a peer item i 2 of i 1 to B t  X  1 with v/  X  S 2
Proof. If v  X  S 1 on Lemma 1, and we thereby don X  X  have to consider the activation of v in B 1 t and B 2 t . On the other hand, if v/ and v/  X  S 2 t , we have the following two inequalities, According to Eq. (1), the theorem follows.
 The ABC Algorithm. Here we describe the proposed Ag-gregated Bundle Configuration (ABC) algorithm. Based on Theorem 1, the spreads of all the bundles generated from the same sub-bundle in the previous iteration can be com-puted in an aggregated fashion. Thus, we preprocess each node in the social network by sorting the node X  X  preference scores over items in I in the ascending order, which will facilitate efficient computation of multiple spreads simul-taneously with the notion of peer items. Specifically, the ABC algorithm makes the following changes in Line 1 and Line 6 of the  X  -BC algorithm. At iteration t ,foreachs-bun B t  X  1 obtained at iteration t  X  1, adding an item from I  X  B t  X  1 to B t  X  1 generates a new s-bun B t . Thus, ABC first acquires the aggregated spread for each B t expanded from B  X  1 . Next, ABC examines a node v for the set of s-buns { the same B t  X  1 . If the node v can be activated for an s-bun B t , ABC finds each peer item i n of i m and activates v for corresponding B n t , which is done without checking Eq. (1). Otherwise, ABC still examines if v can be activated for B according to Eq. (1).
 Example 2. We use the example in Figure 1 to show the strength of the ABC algorithm. For example, to compute spread S { c,d,e } 3 (see Example 1). It is undesirable to start from the seed node 1. The aggregated spread S { c,d,e } 3 s-bun B { c,d,e } 3 is the union of S { c,d } 2 = { 1 , 2 , 5 { 1 , 2 , 4 } and S { d,e } 2 = { 1 , 2 , 4 , 5 } . Thus, with aggregated spread S { c,d,e } 3 = { 1 , 2 , 4 , 5 } , it is unnecessary to examine the active/inactive states of nodes 2, 4, and 5. Similarly, to generate spread S { a,b,d } 3 , the aggregated spread S is the union of S { a,d } 2 = { 1 , 2 , 4 , 5 } and S { b,d and it is unnecessary to examine the states of nodes 2, 4, and 5.

Next, we show the role of peer items in aggregated pro-cessing of similar bundles. Note that both B { a,d } 2 and B are expanded from B { d } 1 by adding a and b , respectively. Node 2 can be activated by B { a,d } 2 .Because p 2 ,a  X  p and N { a,d } 2 = N { b,d } 2 = { 1 } ,item b is a peer item of a for node 2, and node 2 thereby can also be activated by B 2 . In other words, it is not necessary to examine the active/inactive state of node 2 for B { b,d } 2 .
We conduct performance evaluation using one real dataset that covers scientific collaborations between authors of pa-pers submitted to high energy physics-theory category (de-noted as Ca-Hepth) 11 and astro-physics category (denoted as Ca-Astro) 12 , respectively. The first network has 9,877 nodes and 51,971 edges, while the second network has 18,772 nodes and 396,160 edges. In our experiments, the influence score from a friend of u to u is 1 / (degree of u )[9].
In addition to our proposals, including  X  -BC and ABC, we adopt three baseline algorithms for comparison with our http://snap.stanford.edu/data/ca-HepTh.html. http://snap.stanford.edu/data/ca-AstroPh.html. proposals: 1) enumerative approach (ENUM) -it examines all possible bundles to find the optimal solution, 2) popu-larity based approach (POP) -it includes popular items in a bundle 13 , and 3) random approach (RAN) -it randomly selects items to the bundle.
 In Figure 2. we compare each heuristic algorithm against ENUM. Note that their difference in spread shows how well an algorithm approaches the optimal spread while their dif-ference in running time represents the saving in computa-tion. Since it is prohibitive to run ENUM over large social networks and candidate item sets, we conduct this experi-ment over a relatively small network, i.e., Ca-Hepth, with 20 candidate items. The bundle size ranges between 7 and 9. As shown in Figure 2(a), ABC (and  X  -BC) produce high quality spreads, close to ENUM. The spread gener-ated by POP is much smaller since it picks popular items without considering the influence scores. In contrast, ABC exploits both the personal preferences and social influences, thus achieving much better spread performance. Most im-portantly, Figure 2(b) shows that ABC obtains high-quality solution bundles with much less computation cost (i.e., run-ning time) than ENUM.

In Figure 3 and 4, We conduct the experiments on both datasets, CA-Hepth and CA-Astro, discovering the impact of bundle size  X  on the performance of different algorithms. The two proposed approaches always show much better spread performance against POP and RAN, regardless the bundle size  X  . The spread grows as the bundle size increases, since more items are included in a bundle, potentially increasing the chance to reach new customers. Figure 3(b) and 4(b) also demonstrate that the ideas behind ABC indeed avoid a lot of unnecessary computation. ABC saves more com-putation as the size of bundle increases and even saves half the computation compared to  X  -BC while  X  = 25. As a re-sult, ABC significantly outperforms  X  -BC, correspondingly in terms of running time, even though they share the same spread solution.
To the best of our knowledge, this is the first attempt to explore the idea of product bundling for viral marketing. In this paper, we formulate a new problem, namely, BCSAM, to bundle items for maximizing the spread in viral market-ing. BCSAM is complementary to the prior viral marketing studies on selecting seed nodes to maximize the spread. To
The popularity of an item is based on the sum of all the users X  preference scores on the item. tackle BCSAM, we propose ABC, which includes the notions of aggregated spreads and peer items to reduce the efforts for computing spreads. Experimental results demonstrate that ABC is superior to all examined approaches in both efficiency and solution quality. [1] Business insider. P&amp;G to lay off 1,600 after discovering [2] M. Agarwal and S. Chatterjee. Complexity, [3] W. Chen, C. Wang, and Y. Wang. Scalable influence [4] S. Datta, A. Majumder, and N. Shrivastava. Viral [5] X.Geng,M.B.Stinchcombe,andA.B.Whinston.
 [6] K.-Y. Goh, C. S. Lee, and C. H. Lee. Information [7] A. Goyal, F. Bonchi, and L. V. S. Lakshmanan. A [8] J. Harris and E. A. Blair. Consumer preference for [9] D. Kempe, J. M. Kleinberg, and  X  E. Tardos.
 [10] I. R. Misner. The World X  X  best known marketing [11] R. B. Myerson and M. A. Satterthwaite. Efficient [12] J. Nail. The consumer advertising backlash, 2004. [13] R. L. Schmalenesee. Gaussian demand and commodity [14] D. Trpevski, W. K. S. Tang, and L. Kocarev. Model [15] M. Ye, P. Yin, W.-C. Lee, and D. L. Lee. Exploiting
