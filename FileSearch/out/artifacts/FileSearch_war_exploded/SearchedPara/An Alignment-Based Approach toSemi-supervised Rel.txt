 During the past few years, we have been able to obtain a large amount of infor-mation about various topics through the Internet. However, the high accessibility of the Internet has caused the trend of information overflow which makes it dif-ficult to obtain valuable information due to excessive amount of information rather than lack of it. In order to improv e the efficiency of gathering valuable in-formation, the information extraction task has been actively researched by many researchers, and it has grown into one of the most important topics of natural language processing field.

The area of information extraction is divided into several subtasks by the characteristic and range of target information, and most of them can be gen-eralized by extracting the defined numbe r of relevant arguments from natural language documents. Named entity recognition and binary relation extraction tasks can be considered as special cases o f the above-mentione d generalized con-cept of information extraction, which define the number of extracted arguments as 1 and 2, respectively. Both subtasks are the most widely researched topics in the information extraction tasks, and several researchers have shown that super-vised machine learning based approaches are significantly effective ways to solve these problems. [1] [2]
However, supervised machine learning methods have a cost problem by re-quiring a considerable amount of training data for achieving good performance. In order to reduce the cost of building required resources with minimal per-formance loss, recently, semi-supervi sed machine learning methods have been attempted to solve the problem. Most of existing works for semi-supervised in-formation extraction commonly concentr ate on automatically creating context patterns guaranteeing high-precision by integrating statistical characteristics of target documents with grammatical induction methodologies. [3] [4] [5] [6] [7] [8]
In this paper, we will describe our semi-supervised information extraction ap-proach with following two points of views which are little different from other existing works. The first issue is about the coverage of each context pattern. Our approach is based on the bootstrapping methods. In the case of bootstrap-ping, the high-precision is an absolutely important goal of the method, because even very small number of errors generated in earlier iteration can be enormously harmful to the overall performance due to error accumulation by iterating. Never-theless, high-precision is not the only prerequisite for achieving high performance of the method. If it is guaranteed that th e set of context patterns accumulated by iterating more than considerable times will have the sufficient coverage which is needed to extract all existing information, then reducing errors by improving the precision of context pattern induction is the best way to improve the overall performance. However, this assumption is far from realistic, because expressions indicating even the same information ca n be entirely different each other and each expression also can be derived into the totally new expressions as time goes by. It is difficult to keep up with the variety of the expressions only depend-ing on the set of precise context patterns, and even if it is possible, it might require huge number of iteration which is limited by current computing power. In actuality, we should consider not only high-precision, but also the way of en-hancing coverage of each context pattern for improving the overall performance. In order to encourage coverage of the method, we focused on the task of context pattern matching rather than context pattern induction, and we will present an alignment-based information extraction method as a pattern matching approach in our method.
 Theotherissueisaboutthenumberofextractedargumentsofthetask.
 Although most of existing works have concentrated on the task of extracting individual named-entities or relationships between just two named-entities, in many cases, we should extract the relationship including more than two argu-ments. For extracting the n-ary relationships, we applied our alignment-based information extraction method to the task of extracting relationships including not only just two arguments, but also more than two arguments. Moreover, we will present a reinforcement scheme based on the result of bottom-up integration, starting with the result of binary relation extraction.
The remainder of this paper is organized as follows: In the next section, we present a detailed description of the alignment-based information extraction method. In section 3, the overall archi tecture of our method and detailed de-scriptions of each subtask are presented. We present the experimental results in section 4, and our conclusions are provided in section 5. Kim et al. [9] presented an alignment-based n amed entity recognition method to solve the spoken language understanding problem. We modified the method to extract not individual named entities, but tuples including two or more rele-vant arguments, and applied this modified method to the task of n-ary relation extraction. As shown in Fig. 1, we align a raw sentence with a context pattern which is a part of sentence containing labels of target arguments. Then, from the result of the best alignment betw een them, we extract the parts of the raw sentence which are aligned to the argument labels in the context pattern, and incorporate the extracted arguments into a tuple which is a candidate of n-ary relation. In Fig. 1, a tuple (Prison Break, Michael Scofield, Wentworth Miller) is extracted as a candidate of ternary relationship, (PROGRAM, ACTOR, ROLE), which means that an ACTOR acts a role of ROLE on a PROGRAM.

In order to enhance the coverage of each context pattern, we should con-sider the flexibility of the alignment task. Accordingly, we adapted an alignment scheme based on the Smith-Waterman algorithm [10], which is a widely used bi-ological sequence alignment algorithm providing a systematic way of controling the flexibility of the task. We utilize this algorithm into the sentence alignment task by considering a word or a morpheme as a unit of alignment instead of biological residues.

The alignment algorithm is performed by computing the score for each word pair in the alignment matrix M . Each row in the matrix corresponds to a word in the context pattern, while each column in the matrix corresponds to a word in the raw sentence. Moreover, a point of c rossing between a row and a column has the score of aligning the word in the raw sentence with the word in the context pattern.

The first step in the alignment method is to assign the initial value of each position in the matrix M with 0. And then, we find the maximum alignment score by starting on the upper left hand corner in the matrix M and continuing to find the maximum score M i,j for each position in the matrix according to the lower right direction. The maximum score M i,j is defined as where sim i,j is the value of similarity between the i -thwordinthecontext pattern and j -th word in the raw sentence, and gp is the pre-defined penalty for a gap. Fig. 2 shows an example of computed matrix for the alignment which is shown in Fig. 1. In this example, we defined the similarity function as where PTN i is the i -th word in the context pattern, while RAW j is the j -th word in the raw sentence. And the value of gap penalty, gp , is ignored in this example.

After matrix computation, we trace back the matrix to find the best alignment with the maximum score and extract the relevant arguments from the result of alignment. The traceback task is started at the position with maximum score on the alignment matrix. For each current position [ i , j ], the next position is determined by the following policies in order: 1. if M i,j = M i,j  X  1 + gp , then the next position is [ i , j  X  1]. 2. if M i,j = M i  X  1 ,j  X  1 + sim i,j , then the next position is [ i  X  1, j  X  1]. 3. if M i,j = M i  X  1 ,j + gp , then the next position is [ i  X  1, j ]. The order of applying the policies should be preserved. Although most of se-quence alignment methods based on the Smith-Waterman algorithm consider the diagonal advancement corresponding to our second policy as a prior direc-tion, we give a preference to the left dir ection by applying the policy of the left position first, because we should make it possible to align each argument label in the context pattern with two or more words in the raw sentence in order to extract the arguments which consist of multiple words.

In Fig. 2, the sequence of positions with gray color indicates the best align-ment with maximum alignment score. From the result of the alignment, we can extract the words  X  X ichael Scofield X ,  X  X entworth Miller X , and  X  X rison Break X  as relevant arguments which have types of ROLE, ACTOR, and PROGRAM respectively. Most of existing works about relation extraction have concentrated on the task of extracting relationships including just two arguments, regardless of supervised or semi-supervised approach. However, the binary relation extraction might not be sufficient in some circumstances.

Firstly, we consider the case that we should extract a relationship which in-cludes more than two arguments. In the example which is mentioned in the pre-vious section, the binary relationshi p between ACTOR and ROLE arguments has to be specified by another argument about the corresponding PROGRAM, because an actor can be related to vari ous roles according to the performed programs. In order to extract relationships with multiple arguments, we can consider an approach of integrating several binary relationships into an n-ary relationship. For example, for obtaining relationships including three arguments which are PROGRAM, ACTOR, and ROLE, we should extract the follow-ing three binary relationships, (ACTOR,ROLE), (PROGRAM,ACTOR), and (PROGRAM,ROLE) and integrate them t ogether. However, we have a problem that the errors originated from each task of binary relation extraction are accu-mulated into the integrated result. Added to that, this problem is getting worse as the number of arguments of the target relationship is increased.
The second problem is caused by the tendency of relevant arguments to be contiguously located each other. Although we want to deal with a complete bi-nary relationship which has a specified meaning with just two arguments, other relevant arguments located closely to the target arguments might interfere the task of binary relation extraction. In the case of the (PROGRAM,ROLE) rela-tionship in the previous example, another argument, ACTOR, tends to be closely located to both PROGRAM and ROLE. For example, we consider a context pat-tern of the (PROGRAM,ROLE) relations hip extracted from Fig. 1,  X  X haracter ROLE portrayed by Wentworth Miller in the TV series PROGRAM is X . In this context pattern,  X  X entworth Miller X  is the part of an ACTOR argument, and the coverage of the context pattern is dramatically weakened by this interposed argument.

In order to solve these problems which are caused by depending only on the binary relation extraction, we propose a n ew semi-supervised r elation extraction method including multiple arguments. An overview of our method is shown in Fig 3.

If the number of arguments in the target relationship is n , we define the variable k which has all values between two and n .Foreachvalueof k ,we consider all subsets which are organized by combinations of any k relevant ar-guments among overall n arguments in seed data. For example, if the target relationship is organized by four arguments, CHANNEL, PROGRAM, ACTOR, and ROLE, the value of k can be two, three, or four. The subsets which include two arguments are (CHANNEL,PROGRAM), (PROGRAM,ACTOR), and (AC-TOR,ROLE), and the subsets are (CHANNEL,PROGRAM,ACTOR), (CHAN-NEL,PROGRAM,ROLE), and (PROGRAM,ACTOR,ROLE) for the k value of three. For the k value of four, we use seed data themselves, because k is equiva-lent to the value of n . For each individual subset, we execute the following series of tasks. Firstly, we separate the sub-seed data including only corresponding arguments from the original seed data. By using these separated data as seeds, we extract context patterns from the source documents. And then, based on the context patterns, we extract new tuples including k relevant arguments from source documents. These series of tasks ar e executed parallel for all derived sub-sets. The set of results in each parallel execution is verified and integrated by post-processing methods, and we can obtain the integrated result with n number of arguments which is equal to the number of the arguments in the original seed data. The above-mentioned tasks are performed in iterations of bootstrapping, and the results from the iteration are added to the seed data and affect to the next iteration.

Because our method extract not only binary relationships, but also all interme-diate k -ary relationships up to the ultimate n -ary ones, we can reduce the accumu-lated errors in the integration of extracted tuples with relatively less arguments through the cross-validation p rocess between intermediate k -ary relationships. Also, the problem of interfering by other c losely located relevant arguments can be solved by extracting more than two relevant arguments at once.

We present the detailed descriptions about subtasks in our method on the following subsections. 3.1 Context Patterns Extraction Since, we use an alignment-based approach between raw sentences and context patterns for extracting relevant arguments as stated in section 2, each context pattern should take the form that can be aligned to raw sentences, hence we incorporate context patterns starting f rom the sentences in source documents.
For each tuple in the seed data, we search for the sentences containing all arguments of the tuple in source documents. Although we can directly utilize the full sentence as a context pattern, we segment out subpart of the sentence which densely contains the arguments for enhancing coverage of the context patterns. The range of subpart is determined by locations of arguments and the value of margin size m . We extract the subpart from the m -thwordonthelefthand of the leftmost argument to the m -th word on the right hand of the rightmost argument in the sentence. And then, we make a context pattern by replacing the parts of arguments in the sub-sentence with corresponding argument labels. For example, for a seed tuple (Prison Break, Michael Scofield, Wentworth Miller) of the ternary relationship (PROGRAM, ACTOR, ROLE), we can ex-tract a context pattern,  X  X haracter ROLE portrayed by ACTOR in the TV series PROGRAM is X  from the raw sentence in Fig. 1 and the margin size m of one. 3.2 Relation Extraction Based on Pairwise Alignment Each extracted context pattern is aligned pairwisely with the sentences in the source documents for extracting candidate tuples containing relevant arguments. We can compute the alignment score for e ach alignment based on the alignment matrix M which is introduced in section 2. The alignment score is based on the maximum value in the alignment matrix M , and the position which has the maximum value is the start position of the trace-back task. Since we set the matching reward to 1 and both mismatching and gap penalty to 0, the maximum value on the matrix M means the number of equally aligned words in the best alignment. This value can be normalized by the length of the context pattern, and we define the alignment score as where PTN is a context pattern, RAW is a raw sentence, and M ( PTN,RAW ) is the matrix which is computed by th e task of alignment between them. We regard this score as a measure of reliability of extracted candidates, and we select only candidates with higher score than a threshold value as a result of extraction.
 3.3 Alignment-Based Verification Most of candidate tuples which are extrac ted parallel for each subset of seed data are still erroneous. The primary factor of the errors is the redundant attachment problem. This problem is caused by aligning not only argument itself but also contiguous words to the argument with an argument label in the context pattern. For example, if a context pattern,  X  X haracter ROLE portrayed by ACTOR in
PROGRAM is X  is aligned with the raw sentence in Fig. 1, we will obtain not  X  X rison Break X , but  X  X he TV series Prison Break X  as the argument of PROGRAM. The redundant attachment problem is more serious in case that propositional words and particles are frequently omitted, or morpheme-based processing is required, such as in Korean language.

In order to solve the redundant attachment problem, we propose a verifica-tion approach which is also based on the alignment method. We consider the alignment score as a measure of similarity between two candidate arguments, and the similarity is defined as where both A and B are candidate arguments.

For verifying the candidate tuples, firstly, we organize the clusters of similar tuples based on the tuple similarity measure defined as where tuple 1and tuple 2 are candidate tuples being compared each other, and tuple have higher similarity than a threshold value as a cluster.

And then, we perform the task of pairwise alignment of each argument in a cluster of tuples. For each argument, we r eplace it with the argument which has the maximum summation of similarities. F or example, if there are considerable number of (Prison Break, Michael Scofield, Wentworth Miller) and a few (the TV series Prison Break, Michael Scofield, Wentworth Miller) in a cluster of the tuples for the relationship (PROGRAM, ACTOR, ROLE),  X  X he TV series Prison Break X  might be replaced by  X  X rison Bre ak X  which has the maximum summation of similarities, By this alignment verification, the distribution of candidates is reflected to the final result, and it plays the important role of reflecting the statistical characteristics of data in the overall method. 3.4 Bottom-Up Integration From the extracted and ver ified tuples including relatively small number of ar-guments, we can integrate new tuples with more arguments. For example, we can make a new tuple of (PROGRAM, ACTOR, ROLE) by integrating a tuple of (PROGRAM, ROLE) relationship and a tuple of (ACTOR, ROLE) relation-ship which have the common argument of R OLE. However, these new integrated tuples can come into collision with existing tuples which are extracted for the consisted arguments at once. In order to resolve the collision, we performed the previously mentioned verification task again to the set of the tuples which contains both existing andintegratedtuples. We evaluated our method on 930 Korean news documents about TV series which consist of 13,175 sentences. Only a tuple with 4 arguments about the relationship (CHANNEL, PROGRAM, ACTOR, ROLE) is used as a seed information. Each result is collected after the first iteration and evaluated manually.
Firstly, we performed the method for various values of the threshold which affect to the acceptance rate of extracted candidates in the task of relation ex-traction. We selected all values of the threshold from 1.0 to 0.7 by downing the difference of 0.05. And the results were evaluated by manually counting of cor-rectly extracted argument pairs after the verification task. The tuples with more than two arguments were separated into s everal pairs of argum ents according to the corresponding binary relationships for evaluation. The experimental results are shown in Fig. 4. As the value of threshold decreases, the number of correctly extracted relevant arguments increases r egardless of the number of target argu-ments. It means that the coverage of context patterns can be enhanced by the flexible setting of the threshold in the alignment-based approach.

And then, we evaluated the differences between before and after the verifica-tion task for a fixed threshold value, 0.85, which is determined empirically. The compared result shown in Table 1 indicates that the verification task contributes to dramatically improve the precision of the extracted results. From the analysis on the errors, we discovered that only 16.28% of the errors in the verified results are caused by the redundant attachment problem, while 82.0% of the errors oc-curred by the redundant attachment before verification. We can confirm that the alignment-based ver ification elevates the performan ce of the relatio nextraction by solving the redundant attachment problem.

As the last experiment, we compared the result of the bottom-up integration using all intermediate sub-tuples with the result of integration which depends on only binary relationships. As shown in Table 2, by using not only binary tuples, but also intermediate sub-tuples with more than two arguments, we can obtain more precise integrated results with wider coverage than the cases of depending on only binary relationships. We have presented an alignment-based approach to semi-supervised relation extraction including multiple arguments. Using the alignment-based pattern matching approach, we improved the coverage of context patterns. And we solved the redundant attachment problem which causes the critical precision loss, by introducing the alignment-based verification method. In the integration phase, we considered not only binary relationships, but also all k -ary intermediate rela-tionships, which produced more improved results than binary relationship-based integration.

On the other hand, there are still more rooms to be improved in our approach such as lack of statistical and linguistic features. Although, the statistical char-acteristic of the data is used for verification in the current method, it should also be utilized for extracting context patterns in order to obtain more reliable context patterns. In the case of linguistic information, we expect that it can be reflected by defining more systematic policies of the alignment method. Refining the method and applying it to more sophisticated problems such as automatic ontology population are our future works.
 This research was supported by the Invitation for Proposals on Internet Services Theme funded by Microsoft Research Asia.

