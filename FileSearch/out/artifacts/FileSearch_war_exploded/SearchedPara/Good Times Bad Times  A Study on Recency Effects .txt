 In this paper, we present work-in-progress of a recently started project that aims at studying the effect of time in recommender systems in the context of social tagging. Despite the existence of previous work in this area, no research has yet made an extensive evaluation and comparison of time-aware recommendation meth-ods. With this motivation, this paper presents results of a study where we focused on understanding (i)  X  X hen X  to use the temporal information into traditional collaborative filtering ( CF ) algorithms, and (ii)  X  X ow X  to weight the similarity between users and items by exploring the effect of different time-decay functions. As the results of our extensive evaluation conducted over five social tag-ging systems (Delicious, BibSonomy, CiteULike, MovieLens, and Last.fm) suggest, the step ( when ) in which time is incorporated in the CF algorithm has substantial effect on accuracy, and the type of time-decay function ( how ) plays a role on accuracy and cover-age mostly under pre-filtering on user-based CF , while item-based shows stronger stability over the experimental conditions. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering time-aware recommendations; collaborative filtering; social tagging.
Time-Aware recommender systems have been extensively studied in the past and have proven to be more effective than traditional un-contextualized recommender systems [1]. Although there is a huge body of research in this context, few studies have investigated to what extent time can help to improve implicit feedback recom-Table 1: Descriptive statistics of our datasets. B: Bookmarks, U: users, T: Tags, TAS: Tag Assignments. that user-similarity is conditioned not only on the common items they have consumed, but how recently both users have consumed them [14]. For instance, Zheng et al. [19] improved the performance of a tag-based recommender after filtering their data based on re-cency of tagging interactions by applying a power decay function. Likewise, Huang et al. [5] improved a tag-based recommender rely-ing on a two-step filtering process which modelled the recency effect of interactions as a linear decay function. More recently, Lacic et al. [11] outperformed state-of-the-art tag-based recommendation methods by decaying the similarity of users and items considering the recency of their tagging actions using the Base-Level Learning function [10]. Although these results are certainly promising, there is no consensus in current literature about which is the best approach to incorporate the variable of time.
For reproducibility, we focused on five well-known and freely-available folksonomy datasets in our experiments. In particular, we used datasets of the social bookmark and publication sharing system BibSonomy 1 (BIB), the reference management system CiteULike 2 (CUL), the movie recommendation website MovieLens 3 (ML), the social bookmarking system Delicious 4 (DEL) and the online music platform LastFM 5 (LFM). As suggested by related work in the field (e.g., [6]), we excluded all automatically imported and generated tags. In the case of CiteULike we randomly selected 10% of the user profiles and in the case of Delicious 2% for reasons of computational effort (see also [3]). The final dataset statistics can be found in Table 1.
First, we briefly introduce the traditional versions of CF: user-based [15] and item-based [16]. User-based CF is made of two steps: (i) given a center user u , find a neighborhood N of the k most similar users (K-nearest neighbors or K-NN) to u by a similarity function sim ( u,v ) ,u  X  U  X  v  X  U  X  u 6 = v , and then (ii) given the items consumed by users in N , which have not yet been consumed by u , recommend items after ranking them by a score function that predicts the value  X  v u,i that user u will give to item i : where  X  v u is the average value that user u has given to items in the dataset, sim ( u,n ) is a similarity function (usually Cosine or Jaccard), v n,i is the value that user n gave to item i ,  X  v n is the average value that user n has given to items in the dataset, and  X  is a normalization constant. Traditionally, v x,y represents an ordinal rating, e.g. 1 X 5, but in our model it represents a binary value (user http://www.kde.cs.uni-kassel.de/bibsonomy/dumps http://www.citeulike.org/faq/data.adp http://files.grouplens.org/datasets/movielens/ https://www.uni-koblenz.de/FB4/Institutes/IFI/AGStaab/ Research/DataSets/PINTSExperimentsDataSets/ http://grouplens.org/datasets/hetrec-2011/ studied (Exponential, Power, Linear, Logistic, and BLL). decay the similarity between a pair of users if they have interacted with the same item at different times, what we denote in the follow-ing functions as f ( X  t ) .

Exponential. This type of decay function has been used in sev-eral works ( e.g. , [2, 13]), f ( X  t ) = e  X   X   X   X  t .

Power. The power decay function was used by Wu et al. [18] in a user-based CF approach for a social tagging system in a digital library, f ( X  t ) = ( X  t )  X   X  .

Linear. A linear decay function was used by Lee and Park [12], where they use the time variable in a user-based CF approach before calculating the user similarity, f ( X  t ) = max(0 , 1  X   X  t  X  ) .
Logistic. Suggested by Ding and Li [2] as alternative to exponen-tial decay but disregarded without empirical support since it would be less representative of users X  latest preferences. We test it in our
BLL. Finally, we employed the Base-Level learning function that was introduced by Kowald et al. [10], f ( X  t ) = ln(
Parameters. Ding and Li [2] achieved the best performance by applying a half-life decay, i.e., setting a parameter T 0 in such a way that f ( X  t ) reduces by 1 / 2 in T 0 days. The effect of this parameter fitting in the different distributions can be seen in Figure 1. The relation between T 0 and and  X  , the parameter we set in the aforementioned decay functions, follows the procedure in [2] and Table 2 shows the relation and values for each dataset and decay function in our experiments. To set T 0 , we analyzed the distribution of  X  t at each dataset and we tested setting T 0 at their mean and median, obtaining better results with T 0 = median ( X  t ) . The parameter  X  in Table 2 was optimized after performing a 5-fold cross-validation on each dataset. The only exception was taken on the BLL approach, where we set  X  = . 5 based Kowald et al. X  X  recommendation [10].
Evaluation Methodology. We used a training and test-set split method as proposed by popular and related work in this area [19, 17]. Hence, for each user we sorted her bookmarks in chronological or-on the MAP@20, R@20 and nDCG@20 performance metric. as seen in the top row of Figure 3. Apart from that, our results don X  X  indicate a significant effect of different decay functions in the performance of tag-based item recommenders.
In this paper we have shown that it is worthwhile to study the effect of time in recommender systems. We focused in our analysis on the effect on the weighting step and five different decay functions proposed in the literature. As our experimental results conducted over five different social tagging datasets suggest, there is a strong effect on the weighting procedure (pre-and post-filtering) as well on the decay function used but mostly when using pre-filtering, challenging the results obtained by previous published work in the area (e.g., [5, 10, 19]). Though there are differences in the optimal combination of variables to obtain the optimal values at each dataset, our general results suggest using post-filtering with a power decay function. In terms of the algorithm, using user-and item-based combined helps to overcome the weaknesses of each method and performs consistently well, but the improvement over item-based CF is actually minimal.

In future work, we will include a more detailed analysis on pa-rameter tuning, to study the relations between graph properties and optimal metric performance, and the use of matrix factorization tech-niques. First, although we tested two ways of tuning the parameters for the different decay functions, we used the same values for all users (mean vs. median of the  X  t distributions) and we can explore further by setting parameter values for each user based on their tagging habits. Second, although post-filtering with power decay had the most consistent results in general, we realized important differences among datasets. It might be interesting to study graph properties of each dataset and a relation with their performance with combinations of algorithms, filtering step and decay function. Fi-nally, matrix factorization techniques are usually cited as state-of-art techniques in recommender systems in terms of accuracy, and previ-ous works have studied how to incorporate time, implicit feedback, and contextual variables [8]. Nevertheless, no previous work have yet explored how to integrate time-decay functions into the matrix factorization recommendation framework of social tagging systems.
Acknowledgments. This work was carried out during the tenure of an ERCIM  X  X lain Bensoussan X  fellowship program by CT.
