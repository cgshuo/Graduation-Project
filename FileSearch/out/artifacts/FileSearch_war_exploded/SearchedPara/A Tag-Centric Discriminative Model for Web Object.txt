 This paper studies web object classification problem with the novel exploration of social tags. More and more web ob-jects are increasingly annotated with human interpretable labels (i.e., tags), which can be considered as an auxiliary attribute to assist the object classification. Automatically classifying web objects into manageable semantic categories has long been a fundamental pre-process for indexing, brows-ing, searching, and mining heterogeneous web objects. How-ever, such heterogeneous web objects often suffer from a lack of easy-extractable and uniform descriptive features. In this paper, we propose a discriminative tag-centric model for web object classification by jointly modeling the objects category labels and their corresponding social tags and un-coding the relevance among social tags. Our approach is based on re-cent techniques for learning large-scale discriminative mod-els. We conduct experiments to validate our approach using real-life data. The results show the feasibility and good per-formance of our approach.
 H.3.5 [ Information Storage and Retrieval ]: Online In-formation Services X  X eb-based services; H.4.0 [ Informa-tion Systems ]: General Semantic Annotation, Web Objects Classification, Optimiza-tion, Social Tagging
Over the past few years, the Web has seen an explosive in-crease of heterogenous web objects such as millions of video clips and photos being uploaded to YouTube and Flickr [14, 3]. In addition, with advances of radio-frequency identifica-tion (RFID), sensing technology, and Web services, physi-cal objects (e.g., buildings, commodities) are becoming an integral part of the Web, which can be recognized and con-trolled [8]. There is an urgent need to efficiently manage and organize this large volume of web objects for convenient browsing these objects and revealing of interesting patterns from them. Classifying Web objects into manipulable se-mantic categories is essential to meet this need.
Classification of web objects, however, is a much more challenging task due to the specific characteristics of the data [14]. Unlike traditional text documents, web objects cannot be easily extracted with meaningful features. Web objects often exist in isolate settings with little intercon-nections. Finally, it is usually laborious, sometimes even infeasible, to create training data for classification due to high diversity of web objects.

Recent research on social tagging systems has been mo-tivated by a vision that the tagging data produced by Web users can be used for social classification, i.e., the collec-tive classification of resources into a commonly agreed struc-ture [15]. According to Strohmaier et al. [9], users X  tagging behaviors can be grouped into two main motivations: Cate-gorizers where users use tags to categorize objects and De-scribers where users use tags to describe objects. These tags reflect, explicitly or implicitly, the semantics of web objects from users X  point of view and reveal the information about an object such as which category it belongs to or what it looks like. This makes tags an ideal type of data for web objects classification. We categorize social tags X  roles in our work from two aspects: Figure 1: Tags as Puzzles: top-5 association tags assigned by users for one store selling Lady Gaga X  X  album: the Fame Monster Figure 2: Tags as Bridge: transferring category in-formation between different domains
In this paper, we explore social tags for web object clas-sification by developing a tag-centric, unified and discrimi-native classification framework. We not only use social tags conveying partial and latent information about the web ob-jects as a novel evidence to facilitate classifying objects on the web, but also exploit the relative information among tags. The web object classification is formulated by con-structing a tag relevance graph and a max-margin optimiza-tion process. Our experiments demonstrate the effectiveness of the proposed approach for web object classification.
Inspired by [11], we formulate the web object classifica-tion problem as an optimization framework based on social tag relevance tree/graph. Rather than considering a graph of web objects and associated tags to do the web object clas-sification [14], we focus on referring the implicit information Figure 3: Graphical representation of the decompo-sition of the model of tags relevance graph/tree, G = { V,E } , for the task via a discriminative model. A vertex v i  X  V corresponds to tag t , and an edge ( v i ,v j )  X  E corresponds to the dependency between each pair of tags.
Our model can be denoted as: F w ( x ,y )=max t w T f ( x where f ( x , t ,y ) denotes a feature vector including features of web objects, web objects X  tags t and their corresponding class label y . The model can be decomposed as linear com-bination of multiple functions (see Figure 3) based on the energy-based learning [5]:
F w ( x ,y )= w T 1 f 1 ( x )
The five functions are as the following. The first function, w 1 f 1 ( x ), aims to map the relevance between category and features of web objects. It is a standard linear function for web object classification without any tags, only depending on the extracted textual features ( f 1 ( x )). In our work, we extract textual features from web object X  X  titles and use the bag of words style to represent these features. The second function is to predict whether web object o i has the j -th tag without considering the object class label and other tags. The third function models the local category-tag relevance, showing the tags configuration for each category label y  X  Y ,and w 3 represents the parameters for the i -th tag (i.e., t ) if the object category label is y . This local relevance reflects the dependency between each category label and its corresponding tag subsets in the tag space and can tackle the misunderstandings of semantic information of tag and its real meaning. Finally, the fourth function models the relevance between tags and the fifth function indicates how likely the category label being y and the j -th tag being For example, if the category is  X  X usic X  and the j  X  th tag is  X  X VD X , then the function will have a larger value.
Our learning method is inspired by the success of max-margin methods in machine learning [2, 5]. Given a learned model, the classification is achieved by first finding the best labeling of the web objects for each category, then picking the category label with the highest score. The learning algo-rithm aims to set the model parameters so that the scores of correct category labels on the training data are higher than the scores of incorrect category labels by a large margin.
Let D =( &lt;x 1 ,t 1 ,y 1 &gt;, ..., &lt; x n ,t n ,y n &gt; set. The goal of learning our proposed model is to learn the model parameters w , so that for a new testing instance (i.e., web object), we can classify it into the category y  X  =argmax y F ( x, y ). This can be achieved by solving the following optimization problem: where C is the trade-off parameter controlling the regu-larization, ( y,y ( i ) ) is a loss function indicating the cost of misclassifying y ( i ) as y ,and  X  ( i ) is the slack variable for the i -th training example to handle the case of soft margin. The constraints indicates that: considering the i -th training, we want the score of the true category label y i and its ground-truth tags to dominate the score of any other category label y over any tags combinations.

We can compute Equation 2 using Cutting Plane algo-rithm, which initializes w and  X  as 0, and starts with no constraints, and then adds the most violated constraint [4]: 1. Keeping w and  X  fixed, optimize t for ( x i , t ,y i ): t 2. Keeping t i,y i fixed, solving the convex optimization
In Step 1, the optimization problem can be solved effi-ciently for our tree-like tag structure using Viterbi dynamic programming algorithm for trees [10]. For Step 2, the opti-mization problem is a quadratic problem that can be solved through a public package SV M struct 1 . Due to space con-straint, we cannot include more details here.
We have conducted several experiments to validate the ef-fectiveness of our approach based on real life data. We use www.cs.cornell.edu/people/tj/svm light/svm struct.html Figure 4: Our Tag-Centric Model with Differ-ent Base Feature Settings: Partial Textual Fea-tures (Title Only) vs. Full Textual Feature (Ti-tle+Description) the dataset in [14] (5,536 web pages from the ODP shopping (http://www.dmoz.org/Shopping/) and 6,123 product infor-mation in 8 different categories from Amazon.com). We also collected 461 video clips from YouTube. For each web ob-ject, its associated tags, description, and category informa-tion were also collected. We performed some pre-processing of the tags and then constructed the tag relevance graph.
To evaluate the average performance across multiple cat-egories, the micro-averaging and macro-averaging F 1 are in-troduced. The micro-averaged scores tend to be dominated by the performance on common categories, while the macro-averaged scores are influenced by the performance in rare categories. Due to space constraint, we report briefly here two experiments. The first one compares the classification performance of our approach with the Support Vector Ma-chine (SVM), a widely-used learning technique. We use Lib-svm Toolkit (http://www.csie.ntu.edu.tw/ cjlin/libsvm/) and linear kernel. In order to evaluate the effectiveness of tags, we also compare tags with other features such as object ti-tle. In the experiment, we compare our methods with two baseline methods, namely i) SVM + Title, and ii) SVM + Title + Tag.

We take 1%, 5% and 10% of the dataset as the training set, and the rest for testing. Table 1 shows the results. From the table we can see that, for the SVM-based methods, using tags and titles achieves better results than only using titles. Our model outperforms both SVM-based methods. Also, the performance of SVM-based methods are more sensitive to the label ratio comparing with our model.

The second experiment studies the robustness of our model when the base features are weak. In the default base feature function settings, we use the textual information extracted from the product web page including title, description and product details. Unfortunately, many web objects may not have meaningful descriptive information. From Figure 4 we can see that there is no much fluctuation in performance when partial (i.e., only title) or full textual features (i.e., ti-tle and description) are used. This indicates our tag-centric model is robust and not sensitive to features.
Our work is related to the web object classification, which can be boiled down as inferring the unlabeled objects based on labeled objects.

Classification is an active research topic in machine learn-ing. Many collective classification inference approaches ex-plore the relevance among labels based on markov assump-tion. Some work focus on considering the dependency be-tween labels [6] while many other researches work on cap-turing the long-distance relevance of nodes. For example, in [13], Xu et al. propose a nonparametric infinite hidden rela-tional model to capture the autocorrelation. In [7], Neville and Jensen use clustering algorithm to find cluster member-ship and fix the latent group variables for inference. How-ever, both approaches, based on Markov assumptions, un-fortunately, are not suitable for large networks due to their complexity and high computational cost for inference. Our work is also related to the social tagging and tags. The authors in [1] explore the social tagging on optimizing web search. Wu et al. [12] use a probabilistic model to ex-tract semantic concept by exploring the links between tags and pages. Our work is closely related to the work in [14], which formulates the problem of web object classification as an optimization problem based on a social tagging graph. We do not consider the graph structure of social tags. In-stead we model web objects as the basic textual features and a set of tags, which are then formulated using the max-margin formalism in the discriminative learning.

In this paper, we have presented a discriminative model for classifying web objects by modeling the objects cate-gory labels and their corresponding tags. We formulate this model into a max-margin framework with structured latent variables. Our model encapsulates the relevance among the social tags via the tag relevance graph. We validate our ap-proach using a dataset that contains heterogeneous real-life web objects, e.g., products, web pages, images, and videos. Our experimental results show the good performance of our model.

For the future work, we plan to conduct more experiments for performance evaluation. In the current work, we assume that tags are structured latent variables forming a tree struc-ture, our future work aims at mapping the social tags space as infinite latent variables and studying the performance in web object classification. [1] S.Bao,G.Xue,X.Wu,Y.Yu,B.Fei,andZ.Su.
 [2] P. Felzenszwalb, D. McAllester, and D. Ramanan. A [3] M.Ji,J.Yan,S.Gu,J.Han,X.He,W.Zhang,and [4] T. Joachims, T. Finley, and C. Yu. Cutting-plane [5] Y. LeCun, S. Chopra, R. Hadsell, M. Ranzato, and [6] Y. Liu, R. Jin, and L. Yang. Semi-Supervised [7] J. Neville and D. Jensen. Leveraging Relational [8] Q. Sheng et al. Ubiquitous RFID: Where are we? [9] M. Strohmaier, C. K  X  orner, and R. Kern. Why do users [10] B. Taskar, S. Lacoste-Julien, and M. Jordan. [11] Y. Wang and G. Mori. Learning a discriminative [12] X. Wu, L. Zhang, and Y. Yu. Exploring social [13] Z. Xu, Z. Ghahramani, and J. Lafferty. Nonparametric [14] Z. Yin, R. Li, Q. Mei, and J. Han. Exploring social [15] A. Zubiaga, V. Fresno, R. Mart  X   X nez, and
