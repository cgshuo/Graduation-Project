 Shilling attackers apply biased rating profiles to recommender systems for manipulating online product recommendations. Although many studies have been devoted to shilling attack detection, few of them can handle the hybrid shilling attacks that usually happen in practice, and the studies for real-life applications are rarely seen. Moreover, little attention has yet been paid to modeling both labeled and unlabeled user profiles, although there are often a few labeled but nu-merous unlabeled users available in practice. This paper presents a Hybrid Shilling Attack Detector, or HySAD for short, to tackle these problems. In particular, HySAD in-troduces MC-Relief to select effective detection metrics, and Semi-supervised Na  X   X ve Bayes (SNB  X  ) to precisely separate Random-Filler model attackers and Average-Filler model at-tackers from normal users. Thorough experiments on Movie-Lens and Netflix datasets demonstrate the effectiveness of HySAD in detecting hybrid shilling attacks, and its robust-ness for various obfuscated strategies. A real-life case study on product reviews of Amazon.cn is also provided, which further demonstrates that HySAD can effectively improve the accuracy of a collaborative-filtering based recommender system, and provide interesting opportunities for in-depth analysis of attacker behaviors. These, in turn, justify the value of HySAD for real-world applications.
 H.2.8 [ Database Management ]: Database Applications X  Data Mining Algorithms, Experimentation Hybrid Shilling Attack, Semi-supervised Learning, Na  X   X ve Bayes, Recommendation Systems Second, HySAD is a semi-supervised learning system that employs the Semi-supervised Na  X   X ve Bayes (SNB  X  ) classifier for the categorization of both labeled and unlabeled profiles.
Extensive experiments on both the MovieLens and Netflix datasets demonstrate that, compared with some state-of-the-art methods proposed in the literature, HySAD is par-ticularly effective for hybrid shilling attacks, even when at-tack variants generated by some obfuscated strategies are presented. A real-life application on product recommenda-tion for Amazon.cn is also provided to demonstrate the ef-fectiveness of HySAD. The results indicate that HySAD in-deed improves the accuracy of a collaborative-filtering based recommender system, identifies some deeply hidden shilling attackers on Amazon.cn, and provides interesting opportu-nities for further study of attacker behaviors from various perspctives.
The word  X  X hilling X  was first termed in 2004 [9, 17]. Since then, several attack profile generation models have been pro-posed in the literature [21, 15], and a lot of research has been undertaken to employ supervised learning for shilling attack detection [3, 14]. For instance, a simple detector us-ing the average similarity and the Rating Deviation from Mean Agreement (RDMA) metric was presented in [6]. A decision-tree based detector was also proposed in [21]. Many detection metrics were also presented to characterize the at-tacker profiles [6, 21, 3, 22]. An early unsupervised shilling attack detector is PCASelectUsers [13], which employs the principal component analysis on the original rating data. Hurley et al. presented the Neyman-Pearson statistical de-tector, with both supervised and unsupervised versions [8]. Recently, Lee et al. proposed a new detector using a cluster-ing method and the Group RDMA (GRDMA) metric [10]. Other specific detectors include the segment-attack detec-tor [4], the group-attack detector [19], and the time-series based detector [22]. Given the limited space, it is difficult to include all the related work in, and we hope the cited review [18] about robust collaborative recommendation can point to some of those missing references.
Shilling attackers often have three intents: push , nuke and vandalism [21]. An attacker may insert ratings to make an item more likely (push) or less likely (nuke) to be recom-mended, or just make the entire recommender system mal-function (vandalism). As we only consider the intents that bring economic benefits to attackers, vandalism will not be considered in this study.

The rating records of a user on various products (items) construct the profile of that user. The profile of a shilling attacker (or a shilling profile for short) usually consists of the ratings on four types of items: target item, filler items, selected items, and non-voted items, as shown in Fig. 1. A T1 : Design a detector to identify hybrid shilling attacks.
Another challenge in shilling attack detection is the lack of labeled users. It is known that, with the guidance of the la-bel information, supervised learning generally has higher ac-curacy than unsupervised learning in data categorization [5]. However, given the huge volume of users in an online shop-ping system, such as Amazon.com, to manually label even ten percent of users is prohibitively expensive. Therefore, the real situation is, we are to be given a vast number of un-labeled users, together with a very small seed-set of labeled users, for the shilling attack detection. This directly leads to the second concern of this study:
T2 : Design a detector that can use both labeled and un-labeled data.

T1 and T2 clearly define the problem we study in this paper. Specifically, a system named HySAD is proposed for hybrid shilling attack detection in the following subsection.
Fig. 2 illustrates the diagram of the HySAD system. We provide a brief explanation as follows.

Firstly, we are given the user profile data, including a ma-jority of unlabeled profiles U , and a small seed-set of labeled profiles L . To capture the essential information from differ-ent attacks, we collect as many as possible widely-adopted evaluation metrics in the literature, and then generate new features for all the users, as indicated by the  X  X eature Gen-eration X  box. These features will then be subjected to a feature-selection phase by using a wrapper method named MC-Relief on the labeled users, as indicated by the  X  X ea-ture Selection X  box. The training data is now ready for user profile classification.
 A semi-supervised learning algorithm called Semi-supervised Na  X   X ve Bayes (SNB  X  ) will then be launched for classification. That is, the labeled data will be firstly used to train a Na  X   X ve Bayes classifier, and predict the posterior probabilities of the unlabeled data; then the initial classifier will be improved by using an expectation-maximization-like iterative process, until certain stopping criterion is met. We finally obtain de-tails of all the shilling attackers with higher probabilities for attacker classes. This valuable information will be further utilized to enhance the performance of a recommender sys-tem, as indicated by the  X  X ecommendation Enhancement X  box.

Discussion. Altogether we used ten metrics, i.e. En-tropy, DegSim, LengthVar, RDMA, WDMA, WDA, Mean-Var, FMTD, GFMV, and TMF, collected from the litera-ture [3, 6, 21, 22] for feature generation. As a metric is often designed purposefully for one attack model, some may not be very suitable for hybrid attack detection, which is why a feature selection phase is required for HySAD. The and MeanVar, that use average ratings of items. The for-mer attacker X  X  ratings to filler items have a strong correla-tion with the average ratings, whereas the latter attacker X  X  ratings tend to have a much weaker correlation with the av-erage ratings. This implies that we should further divide the attackers into two subclass according to the attack models outlined in Section 3. This results in three types of users in total: normal users ( N ), AFM attackers ( AF ), and RFM attackers ( RF ). We will also demonstrate the benefits of setting three, rather than two classes in experiments. We then describe the feature selection heuristic. MC-Relief is actually an extension of the Relief algorithm for multi-class problems. In general, MC-Relief aims to esti-mate the quality of features to distinguish the user profiles that are near to each other. Fig. 3 shows the pseudocodes, where  X  l denotes the weight of feature l , l =1 ,  X  X  X  ,m , and the d features with top-d weights are finally selected. The weights will be updated S times during the selection process (Line 4). Each time MC-Relief randomly selects aprofile u from L (Line 5), searches L for u  X  X  c nearest neighbors in c different classes (Lines 6 and 7), and then updates the weights sequentially. Note that the SNN func-tion (Line 6) finds the nearest neighbor u p in the same class of u , whereas the DNN function (Line 7) finds the nearest neighbors { u (1) n ,  X  X  X  ,u c  X  1 n } in other classes. The proximity function used in SNN and DNN is the Pearson correlation coefficient. The Update function (Line 9) calls Eq. 1: to update the weights, where x u,l denotes the l -th feature value of u . To avoid the scale bias, we should normalize the feature values to [0,1] before calling MC-Relief.
Feature generation and selection provide training data that contains a very small portion of labeled data. We then propose a semi-supervised learning scheme named SNB  X  for classification. In general, SNB  X  is an EM-like algorithm that extends the Na  X   X ve Bayes classifier [20] to the situation where both labeled and unlabeled data are present.

Suppose we are given a dataset D = { x i } n i =1 of n in-stances drawn independently from a mixture density of c components: where  X  =(  X  1 ,  X  X  X  ,  X  c ) contains unknown parameter  X  j that uniquely determines p ( x i | C j ), P ( C j ) is the prior probability of class C j , j =1 ,  X  X  X  ,c . Assume the class-conditional prob-ability of each dimension of x i is independent of other dimen-sions and satisfies a normal distribution, i.e., p ( x il | C j ,  X  j )=
As D consists of a few labeled but majority unlabeled in-stances, we let D = D U D L 1  X  X  X  D L c ,where D U con-class C j .Aweight  X   X  [0 , 1] is also introduced to lower the impact of unlabeled instances on the classifier modeling. Given the above settings, we launch the maximum-likelihood estimation to find the value  X   X  that maximizes p ( D|  X  )(Asim-ilar method named EM  X  can be found in [16], but it uses
The iterative process will be suspended if there is a very small change in the parameters of the objective-function in Returning to the shilling-attack detection task, we have only three classes: N , AF ,and RF .Welet
 X  AF ( x i )= P ( AF and label  X  x i  X  X  U as an attacker if  X  AF ( x i ) &gt; X  or  X 
RF ( x i ) &gt; X  ,where  X  is an empirical threshold.
In this section, we present experimental results on two well-known real-world datasets: MovieLens and Netflix . We demonstrate that three factors, i.e. the semi-supervised learning, the feature selection, and the three-class setting, are crucial for obtaining excellent performance from HySAD. Datasets. Table 2 lists the information of the two datasets. MovieLens is a benchmark movie-evaluation dataset widely used in previous studies [9, 21, 13, 8, 6], and u2.test is one of its subsets. Netflix is also a well-known movie-evaluation dataset [2], from which a subset s1 was obtained for our study. In detail, we first extracted 2000 movies whose sizes of rating files ranged from 170K to 1.44M; then we randomly extracted a sample of 2000 users who had rated no less than 50 of the selected movies. Note that these two datasets have quite different densities, and only the sub-sets were used since one of the comparative detectors, i.e. PCASelectUsers (PCA for short), which will be introduced below, does not work for large-scale data.
 Tools. Four shilling attack detectors, i.e. HySAD, NB, C4.5, and PCA, were used in the experiments for the pur-pose of comparison. HySAD employs a semi-supervised learn-ing scheme, NB (Na  X   X ve Bayes classifier) and C4.5 [20] employ supervised learning schemes, and PCA (PCASelectUsers) [13] employs an unsupervised learning scheme. Both HySAD and NB were coded in C++ and used on the data with generated features, with  X  = 1. However, PCA was coded in MATLAB to facilitate the principal-component computation, and used on the original rating data. C4.5 was the J48 version pro-vided by WEKA with the default settings on the generated data. We selected C4.5 and PCA in this instance because they had been used for shilling attack detection and achieved good performance on MovieLens [21, 13].

Settings. We assumed the user profiles in the datasets were normal, and injected attacker profiles into them accord-ing to the four attack models and three obfuscated methods obtained for the MovieLens dataset. Moreover, although the Netflix dataset reaches the the maximum F-measure value when d =9, d = 5 still provides a fairly good performance. As a result, we set d = 5 for HySAD in all the experiments. Table 3 also lists the selected five features on MovieLens and Netflix , respectively. As can be seen, the two sets of features are very similar to each other, except for GFMV and LengthVar. This implies that the feature selection algorithm MC-Relief is fairly robust. Fig. 5 shows the performance of HySAD given different weights of unlabeled data. Similarly to d , we find that  X  =0 . 5 is a relatively robust choice, becoming the default setting in our experiments.
In Section 4, we mentioned that we would like to label user profiles by one normal class ( N ) and two attacker classes ( AF and RF ). Here we demonstrate why taking only one attacker class is not suitable for HySAD. The hybrid attack  X  X yb. X , defined in Section 6.2, was again injected into data. We also used two obfuscated methods, i.e. noise-injection (  X  =0 . 2) and target shifting, on all the attacker profiles in unlabeled data after the injection of  X  X yb. X . We denote this more complicated attack as  X  X yb.+obf. X . The filler size was changed from 8 to 50, to test the consistency of results.
Fig. 6 shows the results after employing HySAD on three-class data (denoted as HySAD 3 ) and binary-class data (de-noted asHySAD 2 ), respectively. As can be seen, the impacts of the  X  X yb. X  and  X  X yb.+obf. X  attacks on HySAD are not significantly different. This implies that HySAD is robust for some variants of attacks. More importantly, HySAD 3 shows consistently higher F-measure values than HySAD 2 , although the gap tends to be narrowed with the increase of the filler size. This indicates that it is better to divide attackers into AFM attackers and RFM attackers for the modeling of HySAD.

To explain the observation, let us look into the recall ( R ) Figure 8: The performance of AoP attack detection. sion value than HySAD 3 , but its recall values are typically much smaller than the values of HySAD 3 . This observation indicates that HySAD 3 indeed achieves a subtle balance be-tween NB and HySAD 2 , to detect as many hybrid attackers as possible, but avoids many false alarms in the meanwhile.
We also observe the comprehensiveness of the four detec-tors in detecting different types of attacks. Fig. 7 shows the numbers of recognized attackers generated by different at-tack models, where  X  X yb. X  was injected and filler size was set to 15. As can be seen, compared with HySAD 3 ,NBand C4.5 seem mediocre for the random attack, and PCA works poorly for the average attack. In contrast, HySAD 3 detects all types of attacks simultaneously, thereby demonstrating that it is particularly suitable for hybrid attack detection.
It was reported in [8] that, AoP attack is a simple and effective obfuscated strategy, which is hard to detect with an average attack. We therefore also tested the four detec-tors on the average attack with AoP, where the parameter x =20 , 40 , 60, respectively. Note that to increase the diffi-culty, we adjusted the set of labeled users L to contain only Figure 9: Product categories vulnerable to attacks. user subset D , which contained 130540 ratings of 3005 users on 2321 products. In general, D is expected to contain a much bigger proportion of attackers than the raw data. Two steps were employed for attacker recognition:
Step 1: Generating L . Let L =  X  , d = 10,  X  =1,and  X  = 1. We ran HySAD 2 on D to obtain the unsupervised classification results for two classes. The results were then sent to the experts at Amazon.cn for manual labeling, from whom we received 50 attackers and 100 normal users. We further divided the 50 attackers into 34 AFM attackers and 16 RFM attackers, according to their feature values, and finally obtained L of three classes.

Step 2: Running HySAD. We ran HySAD 3 on D us-ing L ,with d =5,  X  =1,and  X  = 1, and got 1269 at-tackers and 1736 normal users. We then ranked the at-tackers in the decreasing order of max {  X  AF ,  X  RF } .These-lected five features are TMF , WDA , LengthV ar , RDMA and MeanVar , which are quite different to the ones for the MovieLens and Netflix data sets.

We also investigated what types of products were more easily subjected to shilling attacks on Amazon.cn. To this end, we counted the ratings of attackers on the frequently rated products (  X  30 ratings). As can be seen from Fig. 9, the five categories, Book (BO), Electronics (EL), Beauty (BE), Home &amp; Garden (H&amp;G), and Health &amp; Personal Care (H&amp;P), contain the products most rated by the attacks, al-though the average number of ratings per product indicates a different order of the five categories.
Given the ranked 1269 attackers, we can now improve the accuracy of a recommender system. The User-based Col-laborative Filtering (UCF) method [7] was used for product recommendation. It adopts the weighted Pearson correla-tion coefficient as the similarity measure (with a threshold 0.1), and sets the number of nearest neighbors to 20. The products with top-10 scores were recommended to users in the test set. The widely adopted measure Mean Absolute Error (MAE) [12], was used for recommendation evaluation. A smaller MAE indicates a higher recommendation quality.
Fig. 10 shows the recommendation quality of UCF after filtering out top-x attackers. As can be seen from the dot-ted line, the MAE value firstly decreases with the increase of x , until the maximum value 1269 is met. It then increases with x  X  1500. This implies that the attackers detected by HySAD indeed degrade the performance of UCF, which r obability
P r
Fig. 11 shows one reason why HySAD considered X  X oe5138 X  and  X  X iao X  X n X  as attackers. As can be seen, judged by the Target Model Focus (TMF) metric, these two users deviate heavily from the normal users. This implies that both of them tend to give high ratings to items that are rated fre-quently and highly by some other users, i.e. the potential target items in shilling attacks. This, in turn, illustrates that HySAD has a good model interpretability, which is very im-portant for real-world applications. Note that the two upper boxesinFig.11aregivenbyAmazon.cn.
This paper proposes a system called HySAD for hybrid shilling attack detection. In general, HySAD is a semi-supervised learning system that makes use of both unla-beled and labeled user profiles for multi-class modeling. Ex-perimental results demonstrate that HySAD is particularly effective against hybrid attacks, even when presented with obfuscated strategies. A real-life case study on Amazon.cn also demonstrates the effectiveness of HySAD in improv-ing the performance of a collaborative-filtering recommender system, and the ability of HySAD to help explore interest-ing attacker behaviors. These, in turn, justify the value of HySAD for real-world applications.
 This research was partially supported by the National Nat-ural Science Foundation of China (NSFC) (Nos. 61103229, 71072172), Industry Projects in the Jiangsu S&amp;T Pillar Pro-gram (No. BE2011198), and Jiangsu Provincial Colleges and Universities Outstanding S&amp;T Innovation Team Fund(No. 2001013). The second author was also supported in part by the National Natural Science Foundation of China (NSFC) (Nos. 70901002, 71171007, 70890080, 71028002). [1] S. Asch. Effects of group pressure upon the
