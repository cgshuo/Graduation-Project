 REGULAR PAPER Alexander Smirnov  X  Nikolay Shilov  X  Tatiana Levashova  X  Leonid Sheremetov  X  Miguel Contreras Abstract Nowadays, organizations must continually adapt to market and organi-zational changes to achieve their most important goals. Migration to business ser-vices and service-oriented architectures provides a valuable opportunity to attain the organization objectives. This migration causes evolution both in organizational structure and in technology-enabling businesses to dynamically change vendors and services. One of the forms of organizational structures is the form of net-worked organization. Technologies of business intelligence and Web intelligence effectively support business processes within the networked organizations. While business intelligence focuses on development of services for consumer needs recognition, information search, and evaluation of alternatives; Web intelligence addresses advancement of Web-empowered systems, services, and environments. The paper proposes a technological ontology-driven framework for configuration support as applied to networked organization. The framework integrates concepts of business intelligence and Web intelligence into a collaboration environment of a networked organization on the base of attainment of knowledge logistics pur-poses. This framework referred to as KSNet is based on the integration of soft-ware agent technology and Web services . Knowledge logistics functions of KSNet are complemented by technological functions of knowledge-gathering agents. The services of these agents are implemented with CAPNET, a FIPA compliant agent platform. CAPNET allows consuming services of agents in a service-oriented way. Applicability of the approach is illustrated through a  X  X inni scenario X -based case study of a portable field hospital configuration.
 Keywords Multiagent system  X  Networked organizations  X  Knowledge logistics  X  Constraint satisfaction  X  Web services 1 Introduction Nowadays, organizations must continually adapt to market and organizational changes to achieve their most important goals: lowering costs, expanding rev-enues, finding new and retaining existing customers. Migration to business ser-vices and service-oriented architectures (SOA) provides a valuable opportunity to attain the organization objectives [ 5 ]. This migration causes evolution both in the organizational structure and in technology-enabling businesses to dynamically change vendors or services.
 ganization has been developed. Organizations of this form use information and communication technologies to extend their boundaries and physical location [ 17 ]. The nodes of a networked organization represent objects of the environment (peo-ple, teams, organizations, etc.) that act independently and form multiple links across the boundaries to work together for a common purpose [ 31 ].
 havior of an intelligent organization. The latter  X  X ehaves as an open system which takes in information, material, and energy from the environment; transforms these resources into knowledge, processes, and structures that produce goods or ser-vices, which are in turn consumed by the environment X  [ 3 ]. Such behavior as-sumes a presence of organization X  X   X  X ntellectual abilities, X  i.e., abilities to create, exchange, process, and infer knowledge.
 manufacturing for more than twenty years. However, the recent developments in multiagent systems in the new domain of distributed artificial intelligence (DAI) have brought new and interesting possibilities. Thus, in the past ten years, re-searchers have been applying agent technology to manufacturing enterprise inte-gration and supply chain management, manufacturing planning, scheduling and execution control, materials handling and inventory management, and developing new types of manufacturing systems such as holonic manufacturing systems [ 25 ]. tation of main behavioral principles of networked intelligent organization. Web intelligence deals with advancement of Web-empowered systems, services, and environments. It includes issues of Web-based knowledge processing and manage-ment; distributed inference; information exchange and knowledge sharing [ 38 ]. Knowledge logistics [ 27 ] addresses the acquisition, integration, and transfer of right knowledge from distributed sources located in an information environment and its delivery in the right context, to the right person, in the right time for the right purpose.
 vices to support configuration of a networked organization is described. This framework integrates the concepts of networked organization, Web intelligence, agents, and Web services on the basis of attaining knowledge logistics goals. The problem of knowledge logistics is considered as a problem of a Knowledge Source Network configuration. In this connection the framework has been referred to as KSNet [ 27 ]. KSNet exposes its functionality as Web services (WSs) and consumes WSs for accomplishing its tasks. As such, this model contemplates a WS-based interface allowing to expose its functionality and to consume external services. Internal communications within the framework are also based on Web services al-lowing, in this manner, to consume services offered by a multiagent system (MAS) implemented over the CAPNET Agent Platform [ 6 ]. CAPNET is a FIPA compli-ant agent platform (AP) allowing agents to consume services and to provide the services offered by agents residing on it in a service-oriented (nonagent like) way. configuration of a portable field hospital as the motivation for the current research is analyzed and the methodology underlying the research is described. Section 3 outlines the service model of the KSNet framework based on this methodology and an integration of the KSNet with the CAPNET Agent Platform. In the case study (Sect. 4), technical details of the implementation are illustrated by an exam-ple of configuring a portable field hospital. Related works are analyzed in Sect. 5 followed by the concluding remarks. 2 Humanitarian logistics scenario: configuration of a portable field hospital The number of annual natural and human-made disasters (including terrorism) has tripled since 1970. The strains on humanitarian organizations responding to emergencies showed that in the last year, 256 million people were reported to be affected by disasters, while the annual average is 210 million [ 10 ]. The practice shows that one of the most critical tasks in disaster relief operations is delivering the right relief supplies at the right time. Therefore, humanitarian logistics stand-ing for processes and systems involved in mobilizing people, resources, skills and knowledge to help vulnerable people affected by natural disasters and complex emergencies, is central for disaster relief [ 24 ].
 Health and human services (HSS) Secretary, Michael O. Leavitt declared a pub-lic health emergency in Louisiana, Mississippi, Alabama and Florida, a technical maneuver that allows HHS to release emergency funds and waive time-consuming regulations. Mr. Leavitt said that HHS would send up to 40 agency-owned mobile field hospitals comprising 10,000 hospital beds, to safe areas near the devastation [ 30 ]. The first 250-bed unit opened on August 31 in Baton Rouge, LA, staffed by 38 public health service officers who were sent on the night of 28th August to Jackson, MS, and immediately admitted 45 patients.
 et al. [ 36 ] a knowledge management framework that integrates multiple informa-tion technologies to collect, analyze, and manage information and knowledge for supporting decision-making in humanitarian assistance/disaster relief is presented. The framework will help identify the information needs, awareness of a disaster situation, and provide decision-makers with useful recommendations.
 nario, the task of the configuration of a portable field hospital is considered. This task is a configuration problem solved within diverse subject domains. In this pa-per, the task of portable field hospital configuration is thought of as applicable to networked organization domain, e.g., for configuration of a networked organiza-tion, configuration of supply chain, etc. The next section describes the application of methodology developed to attain knowledge logistics purposes to this task. 2.1 KSNet: ontology-driven framework Knowledge logistics assumes dealing with knowledge contained in distributed and heterogeneous knowledge sources (KSs). The main constituent element of the ap-proach is the ontological model providing a common knowledge representation. Knowledge sources comprise end-users/customers, loosely coupled knowledge sources/resources, and a set of tools and methods for information and knowledge processing. In this paper, the configured KSNet is thought of as a networked or-ganization, where the above-listed constituents of the KSNet correspond to the organization nodes. The methodology addresses identification and solving of user needs (problems). The user needs are introduced by a request. The methodology considers request processing as a configuration of a network of KSs containing knowledge relevant to the request, generation of a set of feasible solutions relying on this knowledge, and presenting the solution set to the user (Fig. 1 ). 1. User request decomposition. The user request is parsed and decomposed into 2. Application ontology creation. The structural constituent enters the ontology 3. Knowledge deployment. Requested knowledge from KSs is associated with 4. Problem solving. The KSNet framework is based on the idea that knowledge 5. Decision making. The generated set of solutions is returned to the user for their 2.2 Configuration of portable field hospital: problem formalization A portable field hospital can be characterized as a portable structure, which is sup-posed to be built within a limited time with given characteristics such as capacity and location of the hospital, construction expenditure, etc. A general request has the following format:  X  X efine suppliers, transportation routes and schedules for building a portable field hospital of a given capacity at a given location by a given time . X  This general format was derived based on an analysis of a set of requests focusing on the task at hand. Request terms defining the key operations and their parameters are italicized. The term given generalizes values for the assumed num-ber of patients, desirable hospital sites, and deadlines of the hospital formation used in the parsed requests. Other terms are related to materials and equipment for hospital building and completion. In this way, request terms corresponding to the structural request constituent are: suppliers, transportation routes, schedules, building, portable field hospital, capacity, location, time. A parametric request constituent consists of the values represented by the term  X  given . X  be solved within the scenario and created tasks and methods ontology formaliz-ing the hospital configuration task (Fig. 2 ). In the figure,  X  X art-of X  relationships modelling the hierarchy of tasks are represented. In the considered example, the method for staff definition is not taken into account (class  X  X taff X  is greyed in the figure) as the subtask it relates to is not included in the part of the case study (Sect. 4). 1. Treatment course definition. The goal of this subtask is to find the right treat-2. Hospital allocation. This subtask is intended to find the most appropriate loca-3. Resource allocation. This is a part of the Logistics task. This subtask is a con-4. Routing problem. This is a part of the Logistics task. This subtask is intended above is described in the next section. 3 KSNet service model KSNet service model integrates different constituents enabling intelligent service generation. These are: (i) Web services to implement client X  X  interface, (ii) adap-tive services to adapt task processing modules to the particular task and finally, (iii) external information-gathering agent services wrapping knowledge sources. 3.1 KSNet service-oriented architecture The service-oriented model applied to the KSNet framework is organized as fol-lows (Fig. 3 ). The system acts as a service provider for knowledge customer ser-vices and at the same time as a service requestor for knowledge suppliers. From the client X  X  perspective, the user request processing scenario supported by the frame-work is presented in Fig. 4 . The main idea is that the service passes the request into the system where it goes through all the stages of the request processing scenario. The service client sends a request to the UDDI registry in order to locate a KSNet service that it can use. Upon the reception of the information about a KSNet Web service, he sends a request for the service through the KSNet WS interface. Once the solution is generated it is returned to the client. sources wrapped by agents implemented over the CAPNET agent platform [ 6 ]. CAPNET was used in order to abstract the specifics of knowledge location and gathering from heterogeneous sources from the KSNet core logic. The integration model of CAPNET agent services with SOA environments, described below, en-ables its agents to expose their functionality as Web services and also to locate and consume Web services in a transparent way. CAPNET agents referred to as information-gathering agents are responsible for gathering and filtering knowl-edge from several knowledge sources. For example, in the task of the routing plan creation, the following KSs were considered (Fig. 3 ):  X  Factors influencing route availabilities such as the geography and weather of  X  Available suppliers and constraints on suppliers X  capabilities, capacities and  X  Available providers of transportation services and constraints on available communicate with them in order to supply knowledge for the KSNet adaptive service-generation mechanism available within the KSNet core (Fig. 5 ).  X  X n-the-fly X  service creation is implemented through the use of loosely coupled, reusable software components [ 18 ]. The service can modify itself when solving a particular task. Upon receiving a task, the configuration-problem-solving ser-vice loads an appropriate AO and generates an executable module for its solv-ing  X  X n-the-fly X . Since the list of KSs is not fixed, the structure of the task may change, however, it will still be a constraint satisfaction task of the same nature.
 the following way. The dynamic constraint satisfaction problem is represented as a sequence of static problems. It utilizes ILOG Configurator, Dispatcher and Solver [ 15 ] for constraint satisfaction and additional developed software modules for other tasks. A request defines a task statement (goal) which, in turn, defines which ontologies describe knowledge relevant to the request and which KSs contain in-formation to generate the answer. Knowledge relevant to the request is described by the AO. Thereby, a triple G, AO, KS where G X  X oal, AO X  X pplication on-tology for the request processing, and KS X  X vailable KSs containing requested information can be considered as an abstract structure. Depending on a particular request, this structure can be filled with information revealed from the request. The  X  X n-the-fly X  compilation mechanism enables ILOG code generation according to the filled structure. It is based on the following principles: (1) a preprocessed re-quest defines the type of ontologies of the ontology library relevant to the request and the types of KSs to be used; (2) C++ code is generated on the basis of the filled triple G, AO, KS ; (3) the module for the solver is built dynamically based on the current task structure (application ontology or its part + user request + knowledge from the KSs). Services preceding the  X  X n-the-fly X  compilation are supported by ILOG Configurator. The essence of the proposed  X  X n-the-fly X  com-pilation mechanism is in writing the AO elements (classes, attributes, domains, constraints) into a C++ file directly. Based on these elements, the C++ file is cre-ated and the created source code is inserted into an existing source code serving as a template. The program is compiled and an executable DLL file is created. After that the function from DLL is called to solve the task corresponding to the user request. 3.2 Agent services within KSNet framework Agents can be defined as autonomous, problem-solving computational entities ca-pable of effective operation in dynamic and open environments. Agents are often deployed in environments where they interact and cooperate with other agents (including both people and software) that have possibly conflicting aims. Such environments are known as multiagent systems and they offer a new and often more appropriate way to develop complex systems. An AP is a software archi-tecture that controls and manages an agent community allowing the survival and mobility of agents in a distributed and heterogeneous environment.
 ing for the development of an open, stable, scalable and reliable architecture that allows standards compliant agents to discover, communicate and offer services to other agents for building enterprise applications, it has several limitations that have to be addressed before this can happen. Some of these limitations are as follows:  X   X  X he current notion of services within the FIPA Agent Management spec- X  The semantics behind services are not yet fully exploitable because of the lack  X  Agents do not expose standard interfaces that are consumable by the majority  X  Agent technology is not widely adopted in industrial applications, mainly be-tured and does not provide for service composition, which is crucial for expressing service relationships, and defining service flows, it is possible to make a mapping between the concepts in APs and the features required for SOA (Table 1 ). integration scheme was developed [ 26 ], which is briefly described in the following section.
 3.3 Multiagent systems and Web services integration In the WS-MAS integration scenario like that illustrated in Fig. 3 ,itis easy to see the need for some mechanism that would allow agents to use the functionality provided by systems based on WS either in-or outside of the organization and would enable external systems to use those imple-mented by agents in a MAS. The developed framework for the WS-MAS integration is depicted in Fig. 6 (with the message transport service not shown for clarity of the interactions) and described below for two different scenarios.
 agent referred to as WSDF registers itself as a DF in one or more APs and will refuse every attempt to register with it for application agents that do not expose the functionality of a WS proxy agent (WSPA) described below. Additionally, it can store information pertaining to WS such as WSDL descriptions and ac-counts needed to access those services if necessary. When a search for a service provider is requested to this agent, it makes a search in its internal repository and in the UDDI registry performing a translation from DFAgentDescription to WSDL and back to a DFAgentDescription. Then, the WSDF generates a set of DFA-gentDescriptions, specifying (i) the WSPAs registered with the WSDF as service providers (according to the specified search constraints) and (ii) all the necessary information allowing the application agent to invoke the WS from some WSPA as service properties. This way, when the application agent requests the service from the WSPA it provides all the service properties. Once the agent has the DFAgent-Description that tells it from which agent to request the service (the WSPA in this case), it requests the service from the WSPA that invokes the corresponding WS and returns the results.
 starting from the search on a WSDF. But the missing part is the manner in which to integrate the WSDF within the overall architecture of a FIPA compliant AP. To achieve this, the WSDF registers itself with one or more DFs in the AP. This registration allows it to receive requests when a federated search is requested from a  X  X ormal X  DF. This makes transparent to the application agents the fact that they are getting results from resources outside the AP. Agents can be aware of the presence of WSDF in their AP, if they perform a search for the WSDF service in the ordinary DFs.
 gent software) there is a mechanism for registering the offered services to the UDDI registry. It involves the translation of DFAgentDescriptions to the WSDL descriptions representing the services.
 transparent to an agent. Instead, it has to explicitly request a registration with the WSPA that plays a different role than in the previous scenario. The approach where the DF automatically registers the services accessible via WS is avoided in order to maintain the standard FIPA elements as clean as possible, and to leave the decision to offer a service as a WS to each individual agent. The WSPA handles the task of requesting the services from providing agents located in the platform. Unfortunately, it is not directly accessible to the external clients and can only be contacted by a special WS referred to as agent dispatcher Web service (ADWS) that receives the direct service invocations. The WSPA, however, is responsible for registering in the UDDI the actual tasks that the ADWS is able to provide, and it does this based on the information provided by agents upon registration (Fig. 7 ).
 knowledge-gathering agents implemented in CAPNET, whose services are in-voked via the WS interface provided by the platform. In doing so, KSNet func-tions that require KSs, contact the ADWS to invoke the required service (which was previously registered by the agents in the WSPA). Then the ADWS forwards the request to the WSPA responsible for requesting the service from the gath-ering agent and returns the results to the ADWS for delivery to the component of KSNet that sent the request. After KSNet receives the required information from the agent, it generates a part of the program based on this information and the user requirements. Then it combines this program with a template that has an algorithm and strategy definition for an automatic answer generation. The re-sulting code is immediately compiled to generate the executable program that will further answer to requests (Fig. 7 ). By using this framework KSNet had ac-cess to a set of agents that fulfilled its requirements of knowledge gathering and processing.
 4 Case study: configuration of a portable field hospital The case study illustrates as to how all the constituent elements of the framework described above are brought together to solve the problem of configuration of a portable field hospital in the Binni region [ 22 ]. Binni is a hypothetical scenario; however, it provides a backdrop against which to develop an exercise typical for coalition operations. Binni region is in the Sudanese Plain and covers three ficti-tious countries of Gao, Agadez and Binni.
 tification, alignment of the request, KSs and ontology vocabularies, and steps of the AO composition go beyond the paper. The case study is based on the gen-eral request format and the formalized problem of configuration of portable field hospital that were specified within the humanitarian logistics scenario (Sect. 2.2). tained concepts corresponding to the words of the structural request constituent were imported from Internet ontology libraries and servers [ 4 , 14 , 19 , 32 , 34 , 35 ], converted into the internal representation, and saved in the ontology library. Those ontologies describe hospital, medical equipment, products, suppliers, weather, transportation means, etc. from different points of view and are not cited within the paper because of unnecessary technical details and space limit. These ontologies were sliced resulting in a set of slices containing domain knowledge to be used for solving the tasks specified in the tasks and methods ontology. After that the slices were integrated into single domain ontology (dashed area in Fig. 8 ). In the figure only top-level classes are shown. Firm unidirectional arrows represent hierarchical  X  X s-a X  relationships, dotted unidirectional arrows represent hierarchical  X  X art-of X  relationships, double-headed arrows show associative relationships. tasks and methods ontology were combined into the application ontology (Fig. 8 ). The ontology part corresponding to the AO included in the case study is repre-sented by the shaded area.  X  X ospital configuration X  class refers to the hierarchy of the tasks (Fig. 2 ). Web-based intelligent services are generated based on this ontological model. ILOG tool is used [ 15 ] as the constraint-based tool. trated by a slice of the AO for routing problem , namely for its part responsible for the definition of a route availability for delivering products from suppliers (attribute Location in  X  X upplier X  class X ) to the portable field hospital (attribute Destination of  X  X ogistics X  class). Route availability, in this particular example, is calculated based on weather conditions (Fig. 9 ). For the relationships, the same notation as in Fig. 8 is used. As an output result, a recommended route type for a certain vehicle is generated.
 subtasks were identified (Fig. 10 ). After that, the task of hospital configuration was decomposed into a sequence of subtasks to be solved within the case study (Fig. 11 ). In Fig. 11 solid rectangles are subtasks solved in a sequence. To solve these subtasks, information from different sources (dotted rectangles) has to be used (information flows are indicated by dashed arrows). A set of KSs models for Web services that contain information for the request processing was prepared by an expert team and used by the agents to locate in real time, the available sources of knowledge (Web services that match the models). One example of such information sources is the NOAA X  X  National Weather Service Web service [ 20 ], which was used to provide weather forecast and current status.
 considered: suppliers of hospital beds (type 1), suppliers of operating tables (type 2), and suppliers of surgical sets and instruments (type 3). Each of them has a Web service registered with the UDDI registry. The alternative suppliers are dis-tinguished in their location, capacity, delivery costs, and time.
 purposes, the request based on the general format described in Sect. 2.2 is con-sidered with the following parameters: the target value for hospital capacity is re-quested as 14 patients, location of the disaster is coordinated as 35  X  30 E, 18  X  20 N, and as the optimization parameter minimum-costs criterion is used.
 vant to the request is identified using the AO. These KSs are accessible by means of the CAPNET agents (Fig. 3 ). Associated agents are invoked through their WS interfaces. The supplier agent identifies available suppliers according to the re-quest description. The first step consists in selecting those which can provide the requested equipment and materials accomplishing with the request constraints. Once getting the confirmation for the bid, the supplier agent communicates the list of bidding agents with their respective location to the Route and Locator Agent in order to identify those suppliers which are reachable under the current weather and road conditions. The final list consisting of nine suppliers (out of the original 18) is communicated to the Transportation Locator Agent for selecting available trans-port units. All the information extracted by the agents is sent back to the KSNet Solver that uses this knowledge together with the parametric request constituent and the AO to be processed by ILOG.
 source Allocation and Routing are given. Resource Allocation subtask was solved using ILOG Configurator. The example results (the beginning of the list of suit-able suppliers with number and types of products, product costs and delivery time for each supplier) for this subtask are shown in Fig. 12 . The screenshot shows the first four suppliers from the seven selected to provide all the needed products and materials. Column with route description represents route types linking a supplier to the disaster location.
 showed the best performance for the given task: savings heuristic for generating solutions (it considers the trade-off between more vehicles with shorter routes and fewer vehicles with longer routes) and guided local search for optimal solution search (it works by making a series of greedy searches, each to a local minimum). transportation routes as shown in Fig. 13 . The figure uses the following notations. Small dots are the cities of the region. The city indicated with a pin (Aida) is the closest to the disaster (indicated with a cross) city where the portable field hospital is to be built. The bigger dots are the cities where the seven selected suppliers are situated (Libar, Higgville, Ugwulu, Langford, Nedalla, Laki, Dado). These seven suppliers are linked by four routs with the disaster location. Route 1 links disaster location and two suppliers (located in Nedalla, and Dado), Route 2 links disaster location with one supplier located in Laki, Route 3 links disaster location with another supplier located in Langford, and finally, Route 4 links disaster location with the rest 3 suppliers located in Ugwulu, Libar, and Higgville.
 routes of particular vehicle groups (indicated with appropriate callouts). Other lines are routes that are not used for transportation in the solution. Lines attached to the closed cities (indicated with thunderstorms next to them) are not available for transportation (and were discarded by the Route and Locator Agent. The solution is four vehicles/vehicle groups distributed by tion of the suppliers and back). This solution maximizes concurrency of transportation.
 significantly less than the time of the problem solving by the generated program. Fig. 14 presents a diagram of the solver execution time(s) and the size of automat-ically generated file (kilobytes) against the number of objects extracted from KSs. When the number of objects (AO class instances) is more then 100 the task solv-ing time increases significantly while the compilation time remains below 1 s. It was concluded that heuristics and task restructuring were appropriate techniques. Well-grained task restructuring supposes a set of solvable tasks, instead of one heavy task. This problem division allows the distribution of the problem solving and increases the performance of the framework.
 hospital allocation (objects are cities and infrastructure facilities) using ILOG Solver are shown in Table 2 . The experiments were made using Pentium IV 1.6 GHz computer with 1.0 Gb RAM. 5 Related work As can be seen from the case study described above, to support the scenario of configuration of a portable field hospital, the integration of different technolo-gies for service supply in an increasingly dynamic and open environment is re-quired. In the proposed framework ontology-based intelligent service integration is used. This framework is grounded in the open service model. Open services is an emerging technology driven by the will to expose business logic beyond the firewall [ 23 ]. Through the open services, organizations can encapsulate exist-ing processes, publish them, search for and subscribe to other services, exchange information throughout and beyond the enterprise. Combined within SOA, open services will enable application-to-application e-marketplace interaction, remov-ing the inefficiencies of human intervention.
 ordination of services with regard to semantics. This issue has been addressed by SemanticWeb initiative developing facilities to establish explicit joint ontolo-gies and metadata repository creation where ontologies provide a specification of knowledge content [ 12 ]. The KSNet framework described in this paper enables to convert a request expressed in a natural language into a set of requirements for the configuration of the networked organization. The AO constructed as an intersec-tion of domain, task and method ontologies for a particular application, enables to describe the problem to be solved in human-readable (ontology-based) view and map it directly to the solver and agents X  representations. These representations are further used for automatic location, extraction and integration of knowledge and services needed to generate a solution.
 and data (knowledge) integration for networked organizations. Among those, the following ones can be pointed out: based framework for supporting the coordination of virtual enterprises (VE) and workflow management systems. A VE is defined as a temporary aggregation of autonomous and possibly heterogeneous enterprises, meant to provide the adapt-ability to frequent organizational and technical changes, and the flexibility that characterize both the openness of service activity and business process scenarios where they use abstractions to address heterogeneity of systems supporting differ-ent VE participants, and to represent workflow rules as agent coordination laws. virtual market (GEMS) focused on the use of generic agent models, knowledge representation and ontology design. The agents in the market place have been designed and developed using DESIRE. The market incorporates ontologies for the different user perspectives: consumers, retailers, and producers, however they do not focus on negotiation or integration with enterprise applications outside the multiagent system.
 ture e-commerce interfaces featuring agents which can converse with users in written natural language ( X  X hatterbots X ). The main issues this project deals with include user guidance, personalization and profile extraction, and pro-activeness through intelligent retrieval [ 7 ].
 laborative assistant for rapid knowledge formation and reasoning to enable a team of subject matter experts that do not have prior knowledge engineering experience; to rapidly construct, update and extend a high quality integrated knowledge base for a complex application [ 2 , 8 ].
 knowledge acquisition and explanation exploiting semantic relationships [ 11 ]. The central idea is to modify the architecture of the target knowledge-based systems so that they could provide better support for information and knowledge manage-ment.
 tem for the integration of constraints embedded in such sources as heteroge-neous databases and knowledge-based systems. The main aim of this project is to enable sharing and reuse of constraints embedded in the sources. For local resource ontology translation a hierarchy of shared ontologies is used [ 33 ].
 user support, knowledge repository formation, knowledge acquisition, knowledge sharing and fusion. On the contrary, the methodology described in this paper, tries to propose a framework for the entire problem of knowledge logistics cov-ering all the listed issues. It is not claimed to be a  X  X ne-for-all X  solution but sug-gests principles of organizing a knowledge logistics system using existing tech-nologies (probably, including the above projects) for solving particular tasks. In other words, it can be considered as a higher level framework. Based on this approach, a prototype of the  X  X SNet X  framework described in this paper was built. 6 Conclusions Knowledge logistics can be considered as one of the key technologies enabling support of up-to-date business processes. It suits well for service-oriented envi-ronments as e-business and thereby, for networked organization environments due to the incorporated technologies of Web services, Web intelligence, and agents. While the service-oriented paradigm is concerned with providing an infrastruc-ture and tools for the integration and interoperability of heterogeneous resources (provided as services), Web intelligence provides support for continuous busi-ness engineering. As shown in this paper, intelligent agents can act in a dis-tributed environment and apply ontologies for knowledge representation and ex-change. The developed framework allows an easy integration between Web ser-vices and MAS that permits joining these two major players in a Web intelligence scenario.
 figuration support on the base of attaining knowledge logistics purposes. The framework provides Web-based intelligent services to support the con-figuration of a networked organization consuming other available Web ser-vices as knowledge sources. The intrinsic service-orientation of the frame-work is demonstrated by the organization of an interplay between the frame-work and an agent-based platform that provides its services in a SOA (nonagent way). The applicability of the proposed approach is shown by solving one of the typical problems of logistics: portable field hospital configuration.
 resentation and enables the framework to describe the problem to be solved in a human-readable (ontology-based) view. The service-oriented organization of the framework and its modularity enable the solution of complex problems where an instance of KSNet can consume the services of many others in order to solve the problem if necessary, thus acting both as service consumer and provider. Once a problem is formalized, it can be reused and applied to other subject domains. At the current stage of development the framework has not considered the inclu-sion of uncertainty and fuzzy factors. The approach is intended to be developed towards incorporation of context management technology into it.
 References Author Biographies
