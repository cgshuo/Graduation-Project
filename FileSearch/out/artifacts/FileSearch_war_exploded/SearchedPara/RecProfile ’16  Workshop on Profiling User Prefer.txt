 This paper summarizes RecPro le '16, the rst workshop on pro ling user preferences for dynamic, online, and real-time recommendations, held in conjunction with RecSys '16, the 10th ACM conference on recommender systems. We describe the main themes arising in the workshop's papers. User pro ling; user preferences; dynamic user pro ling; graph algorithms; recommendation systems; dynamic community detection; matrix factorization; collaborative ltering; content-based recommender systems
Constructing user preference pro les is obviously crucial for effective and accurate predictions in recommendation systems across diverse domains. For many traditional rec-ommendation services, creating user pro les is well under-stood, either through explicit user preference elicitation or through tracking implicit user actions. The growing preva-lence of dynamic online recommendation services, however, raises interesting challenges for maintaining and updating user pro les.

First, effectively representing user preferences in dynamic settings requires novel modeling techniques, for instance us-ing latent factorization to allow dynamic updates and to alleviate cold start issues. Second, it might be infeasible to aggregate all the observed user pro le signals in a sufficiently time-efficient and space-efficient manner, when the range of possible user options is large. Instead, one may need to resort to algorithms that balance accuracy with scalability, for instance using streaming or sketching algorithms. Third, there are signi cant engineering architecture challenges in maintaining, updating, and retrieving large volumes of user pro les in real-time and combining those pro les with other real-time signals to rank recommendations in milliseconds.
This topic is of considerable interest to both industrial and academic recommender systems researchers, since it is im-dy namic contexts. In [3], the authors incorporate user ex-posure to items as part of the model. The model tries to distinguish between items that a user did not select due to genuine lack of interest vs. items that the user was not ex-posed to. This distinction allows for better balance between positive and negative training examples.
 Kitazawa proposes an interactive version of Factorization Machines [4], which are usually applied in a batch setting. Meanwhile, Dez et al . encode the problem of predicting user trajectories algebraically, where each item is encoded as a vector, and then learn a transition matrix predicting the online trajectory of users along a session path.

Bingham-Walker and Searle avoid explicit matrix factor-ization, opting instead for a dynamic community-detection based approach on the full graph of users, items, and their attributes.

Finally, both Siddharth and Tamir et al . adopt a content-based approach, whereby they track the implicit content-based features of articles that users interact with, and ag-gregate them into a user pro le. They then drive recom-mendations by nding articles that are contextually similar to the pro le. The dynamic nature of user tastes require balancing users' short term and longer term interests within the pro les.

In summary, the workshop's submitted papers and invited talks covered multiple aspects of enhancing user pro les to handle dynamic, online, and real-time recommendations. We expect these topics to continue to be at the forefront of many recommender design problems in multiple domains.
