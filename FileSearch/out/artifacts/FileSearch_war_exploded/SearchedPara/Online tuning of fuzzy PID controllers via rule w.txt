 1. Introduction
Fuzzy logic is extensively used in processes where system dynamics is either very complex or exhibit a highly non-linear character. Among various types of fuzzy logic controllers (FLCs),
PID type FLCs are most common and practical ( Karasakal et al., 2005 ; Fuente et al., 2006 ; Chen et al., 2009 ; Saad and Arrofiq, 2011 ). From the input X  X utput relationship point of view, the structures of fuzzy PID type controllers are analogous to that of the conventional PID controllers ( Galichet and Foulloy, 1995 ;
Moon, 1995 ; Huang et al., 1999 ). In literature, there are several researches on the structure of PID type FLCs ( Qiao and Mizumoto, 1996 ; Li and Gatland, 1996 ; Guzelkaya et al., 2001 ; Duan et al., 2008 ).

The design parameters of the fuzzy PID controllers can be categorized as structural and tuning parameters ( Hu et al., 1999 ).
Structural parameters include input/output (I/O) variables to fuzzy inference, fuzzy linguistic sets, membership functions, fuzzy rules, inference mechanism and defuzzification mechanism. Tun-ing parameters include input/output scaling factors and para-meters of membership functions.

Various heuristic and non-heuristic scaling factor tuning algorithms have been presented in the case of the systems that own nonlinearities, parameter changes, modeling errors, distur-bances ( Qiao and Mizumoto, 1996 ; Chung et al., 1998 ; Mudi and
Pal, 1999 ; Woo et al., 2000 ; Guzelkaya et al., 2003 ; Bhatttacharya et al., 2004 ; Oh et al., 2004 , 2009 ; Bouallegue et al., 2011 ).
Moreover, the literature includes some methods for tuning the membership functions and fuzzy rule weights of the fuzzy controllers. Juang et al. (2008) and Fang et al. (2008) tuned the membership functions by means of genetic algorithm and particle swarm optimization method to improve the system performance.
Ahn and Truong (2009) used a robust extended Kalman filter to tune the membership functions of the fuzzy controller during the system operation process to improve the control performance.
Teng et al. (2004) proposed a genetic weighted fuzzy rule based system in which the parameters of membership functions includ-ing position and shape of the fuzzy rule set and weights of the rules are evolved using a genetic algorithm. In Sharkawy (2010) , each classical PID parameter is tuned via a fuzzy logic system whose membership functions are optimally determined in an off-line manner using a modified genetic algorithm. Moreover,
Mona et al. (2011) tuned the rules, rule weights and membership functions of fuzzy controller via genetic algorithm for trajectory control of PUMA 560 industrial robot. Alcala et al. (2005) optimized the rule weights of fuzzy controller by genetic algorithm in order to simplify the fuzzy rule base. Karasakal et al. (2011) presented an on-line rule weighti ng method for fuzzy PID control-lers using simple functions of the system error in an adequate arrangement.
 In this study, an on-line tuning method is proposed for fuzzy PID controllers via rule weighing. The rule weighing mechanism is a fuzzy rule base with two inputs and one output. The inputs are the  X  X  X rror X  X  and the  X  X  X ormalized acceleration X  X , where the normal-ized acceleration provides relative information on the fastness or slowness of the system response. In order to tune the rule weights of the fuzzy controller, the transient phase of the closed loop system response is assumed to be divided into certain regions in accordance with the number of membership functions defined for the error input of the fuzzy PID controller. Then, the relative importance or influence of the fired rules of the rule base is determined for each region and the meta-rules are derived for the adjustment of their weight values to obtain an  X  X  X fficient X  X  and  X  X  X ppropriate X  X  control signal. The output of the fuzzy mechanism is directly used for the assignment of the rule weights by an adequate arrangement in accordance with the meta-rules derived. The effectiveness of the proposed rule weighting method are demonstrated on linear and non-linear systems by simulations and real time applications are done on the G.U.N.T. RT-552 pH value Control Trainer.
 The outline of the paper can be summarized as follows: Section 2 includes the fuzzy PID controller structure without a tuning mechanism, the interpretation of rule weights, the concept of normalized acceleration and the proposed on-line rule weight adjustment method, Section 3 presents simulations for linear and non-linear systems, Section 4 includes the experimental studies which are implemented on the pH neutralization process experi-mentally, Section 5 provides the discussions and the conclusions, respectively. 2. The proposed rule weight adjustment method 2.1. Standard fuzzy PID controller
In this study, we will deal with standard fuzzy PID controllers, formed using a fuzzy PD controller with an integrator and a summation unit at the output, as it is shown in Fig. 1 ( Qiao and Mizumoto, 1996 ).

The output of the fuzzy PID controller is given by u  X  a U  X  b
The error ( e ) and the change of error ( D e ) are used as the inputs and the change of the control signal ( U )isusedastheoutputofthe FLC. The input scaling factors K e for error and K d for the change of error normalize the inputs to the range in which the membership functions of the inputs are define d. The output scaling factors b and a normalize the output of FLC to an applicable value. The universes of discourse are chosen to be [ 1, 1] for the inputs e , D e and output U .
The symmetrical triangular uniformly distributed membership functions are assigned to each fuzzy linguistic value of the error values of e and D e are denoted as N i where i  X  { n , n  X  1, 1, 0, 1, 2, y , n 1, n } and M j where j  X  { m , m  X  1, y 1, 0, 1, 2, y , m 1, m }, respectively. In addition, the cores of fuzzy sets N i and M j are denoted as e i and D e j . Singleton fuzzy membership functions are assigned to the output of the FLC. 2.2. The fuzzy rule weights
A comprehensive analysis on the fuzzy rule weights can be found in Nauck and Kruse (1998 ). The rule weight ( w ) is a real value variable that can change for each rule and it is generally added to a rule with the phrase  X  X  X ith w  X  X . The weight values can be considered as a structural parameter of a fuzzy PID controller.
The weight of the rule shows the importance or influence of that fuzzy rule for the inputs at a certain time. The fuzzy rules of FLCs with weights are generally written as
R : IF the error ( e )is N i AND the change of error ( D e )is M THEN the change of control signal ( U )is C r with w k
Generally the weights affect the rules in two different ways ( Nauck and Kruse, 1998 ): (i) The weights are applied so as to affect the complete rule. In this case, the degree of fulfillment of the rule is changed by the weight value. (ii) The weights are applied so as to affect the consequent part of the rules. In this case, the output of the rule is changed by the weight value.

When the singleton membership functions are used at the consequent part of the rules, the rule weights appear in the numerator and denominator for the case (i). The output of FLC is calculated as U  X 
For the case (ii), the rule weights occur in the numerator of the (2), so the output of FLC is calculated as U  X  where t k , w k and c k are the firing strength, weight and the output singleton membership value of k th rule, respectively.
Since the membership degree of a variable changes in the interval of [0, 1], the weights must be chosen also in the interval the weights within range of [0, 1] enables us to compute the output of FLC in the usual way. In this study, the case (i) where the weights are applied to complete rules has been taken into consideration. 2.3. The concept of normalized acceleration
The normalized acceleration gives  X  X  X elative rate X  X  information about the fastness or slowness of the system response ( Eksin et al., 2001 ; Guzelkaya et al., 2003 ). The normalized acceleration r ( k ) is defined as follows: r  X  k  X  X 
Here, e ( k ) is the error value and de ( k ) is the incremental change in error which is given by de k  X  X  X  ek  X  X  ek 1  X  X   X  5  X  and dde ( k ) is called the acceleration in error and it is given by dde k  X  X  X  de k  X  X  de k 1  X  X   X  6  X 
In (4), de (.) is chosen as follows: de  X  :  X  X 
The normalized acceleration r v ( k ) given in (4) yields us  X  X  X elative rate X  X  information about the system response within a range of [ 1, 1]. If the system response is very fast, r v approaches to  X  X  1 X  X , and if the system response is very slow, it approaches to  X  X  1 X  X . When the system response increases or decreases with a constant rate, it is considered as a  X  X  X edium X  X  rate and r v ( k ) takes the value of zero. 2.4. The normalized acceleration based on-line rule weight adjustment method
For the fuzzy PID controller structure shown in Fig. 1 , the step response of the closed loop system can be divided into 2( n  X  1) main regions as illustrated in Fig. 3 , depending on the number of membership functions which are assigned to the input ( e ).
It is clear that the output value of FLC should take appropriate values at different regions to obtain a desired system perfor-mance. For example, at the regions from 1 to approximately the middle of A1, where the value of the system error is positive big, a positive big value of control signal is needed to fasten the system response appropriately. At the regions from approxi-mately the middle of A1 to D1, where the system response approaches to set-point and the value of the system error decreases but is still positive, it is required to reduce the control signal to slow down the system response. At the region D1 where the value of the system error becomes negative and the system response drifts apart from the set-point, the control signal value must be kept negative maximum in order to prevent the over-shoot. For the regions from n  X  2 to approximately the middle of A2 where the value of the system error is negative big and the system response approaches to the set-point, a negative big value of control signal is needed to fasten the system response suffi-ciently. At the regions from approximately the middle of A2 to D2 where the system response approaches to set-point and the value of the system error increases but still negative, it is required to increase the control signal value to slow down the system response. Finally, at the region D2 where the value of the system error becomes positive and the system response drifts apart from the set-point, the control signal value must be kept positive maximum.

According to the above discussion, the following meta-rules can be derived to form the required control signal in order to obtain a satisfactory system performance. (i) When the system error value is positive and the system (ii) When the system error value is negative and the system (iii) When the system error value is negative and the system (iv) When the system error value is positive and the system
These meta-rules can be associated with the importance of the fuzzy rules in order to obtain the required control signal for a satisfactory system performance. For example; when a positive big control signal is needed, the importance of the fuzzy rules which have positive rule consequent will be greater than the importance of the fuzzy rules that have negative rule consequent. Similarly, when there is a need to decrease the control signal in time, the importance of the fuzzy rules that have negative rule consequent will be greater than the importance of the fuzzy rules that have positive rule consequent. Since the importance of a fuzzy rule is related to its weight value, the change of the importance of a fuzzy rule at any region can be expressed as changing the weight value of that rule.
 There exists a symmetrical structure between the Approach Regions (A1 and A2) and Drift Regions (D1 and D2) as shown in Fig. 3 . For example, when the system response is at any point in the region  X  X  n  X  X , the control signal value should be the same strength with opposite sign at its symmetrical point in the region  X  X 2 n  X  1 X  X  due to the symmetrical structure. Using this symmetrical structure and the meta-rules derived above, the fuzzy rule weights of the fuzzy rules should be adjusted symmetrically according to the intersection of the cores e 0 and D e 0 as illustrated in Fig. 4 .

Appropriate rule weight values can be generated in an online manner using a function or a mechanism that depends on the input, output and internal system information such as error, rate of error, normalized acceleration, and/or control signal magni-tude. In Karasakal et al. (2011) , simple functions of the system error have been directly used in generation of the rule weight values by an adequate arrangement in accordance with the meta-rules given above. In this study, the normalized acceleration  X  X  r  X  X  is also taken into consideration as well as the system error  X  X  e  X  X  in the generation of the rule weight values. Thus, the relative rate information about the system response is inserted into the structure of FLC using rule weight values. The weight tuning is accomplished via a fuzzy mechanism which makes use of the system error  X  X  e  X  X  and the normalized acceleration  X  X  r inputs. The fuzzy mechanism is not in the need of any input scaling factor adjustment since the variables  X  X  e  X  X  and  X  X  r in the range of [ 1, 1]. The output of the fuzzy mechanism is designated as  X  X  g  X  X  and the block diagram of the proposed method is illustrated in Fig. 5 . Since the interval for rule weight values should lie within the range [0, 1], the interval of the g lies within the range [0, 1]. Then, the functions f  X  b g  X  8  X  f  X  1 g  X  9  X  are directly assigned as the rule weight values by an adequate arrangement shown in Fig. 4 . The parameter g then becomes the tuning variable of the rule weights by these assignments. Since the error value possesses its extreme value at the first region a special precaution is required in the arrangements of the func-tions f 1 and f 2 in Fig. 4 . In that respect, in order to prevent the excessive acceleration of the system and thus the possible over-shoots, the value of  X  X  b  X  X  in (8) is defined as b  X  1
This has to be done only for the region number  X  X 1 X  X  in the adjustment of the weight of a rule that has positive rule consequent. The value of the parameter  X  X  b  X  X  is taken to be as  X  X 1 X  X  for the rest of the regions.

In accordance with the arrangement of the functions f 1 and f in the Fig. 4 , the meta-rules for determining g can be deduced as follows: (a) If the system response is fast, g should be small (so f (b) If the system response is fast then small g values should be (c) If the system response is slow and the system error value is
In order to satisfy the above meta-rules, a fuzzy mechanism which uses the system error  X  X  e  X  X  and the normalized acceleration  X  X  r  X  X  as its inputs can be proposed. The membership functions and rule base tables are given for the fuzzy mechanisms having 9 and 25 rules as examples.

Symmetrical triangular uniformly distributed membership functions are assigned for the input and output variables for the fuzzy mechanism having 9 rules as shown in Fig. 6 . The input variables have been decomposed into three different fuzzy linguistic levels which are Negative (N), Zero (Z), Positive (P) and Slow(S), Medium (M), Fast (F).

The output variable has been decomposed into three different fuzzy linguistic levels as follows: Small (S), Medium (M), Large (L). A fuzzy rule base satisfying the meta-rules given above is presented in Table 1 .

Symmetrical triangular uniformly distributed membership functions are assigned for the input and output variables for the fuzzy mechanism having 25 rules as shown in Fig. 7 . The input variables have been decomposed into five different fuzzy linguis-tic levels which are Negative Big (NB), Negative Medium (NM), Zero (Z), Positive Medium (PM), Positive Big (PB) and Slow (S), Slow Medium (SM), Medium (M ), Fast Medium (FM), and Fast (F).
The output variable has been decomposed into five different fuzzy linguistic levels as follows: Small (S), Small Medium (SM), Medium (M), Medium Large (ML), Large (L). A rule base satisfying the meta-rules given above is presented in Table 2 . 3. Simulation studies 3.1. The fuzzy PID controller structure
In order to explain the method more vividly, a special case is taken in consideration where three membership functions are assigned to both inputs ( e ) and ( D e ) of the FLCs. The membership functions for the inputs are chosen as uniformly distributed triangular functions and for the output singleton membership functions are used. The input variables have been decomposed into three different fuzzy linguistic levels which are Negative (N), Zero (Z) and Positive (P).

The output variable has been decomposed into five different fuzzy linguistic levels as follows: Negative Big (NB), Negative Medium (NM), Zero (Z), Positive Medium (PM) and Positive Big (PB).

The membership functions for the inputs and the output have been illustrated in Fig. 8 a and b, respectively. The diagonally symmetrical rule base, which is given in Table 3 , has been used for the fuzzy PID controllers. The control surface for this rule base is given in Fig. 8 c. 3.2. The rule weight assignment
Since the number of membership functions for the input ( e )is three, we obtain four main regions for the fuzzy rule weight assignment as illustrated in Fig. 9 .

The rule weight adjustment table illustrated in Fig. 10 for 3 3 input membership functions case is obtained from the systematic rule weight adjustment structure given in Fig. 4 . 3.3. The other methods and performance measures used for comparison
In the simulation studies, the performance of the proposed on-line weight tuning method is compared with four other fuzzy PID controllers: Mudi and Pal (1999) and Karasakal et al. (2011) , the conventional fuzzy PID controller with the optimized rule weights and with the conventional fuzzy PID controller without rule weighting.

It is obvious that if the rule weights were set the same for all the rules, i.e. f 1  X  f 2 , this would resemble the adjustment of the output scaling factor. For this reason the fuzzy PID controller with the proposed rule weight adjustment method can be compared with the fuzzy PID controller proposed by Mudi and Pal (1999) which uses a self-tuning scheme for the output scaling factor.
Moreover, the proposed weight adjustment method is com-pared with the weight adjustment method presented in Karasakal et al. (2011 ). In that study, rule weighting is established by using simple functions of system error in an adequate arrangement. For this purpose, the absolute value of error has been directly used in generation of the rule weight values in accordance with the same meta-rules presented to form the required control signal in this study. By this comparison, the benefits of taking the normalized in the generation of the rule weight values is demonstrated.
In comparison of the fuzzy PID controller with proposed method with the fuzzy PID controller whose weights are opti-mized in off-line manner, genetic algorithm is used to minimize the integral absolute error ( IAE ) performance measure.
In order to compare the performance of transient responses of the fuzzy PID controller with the proposed normalized accelera-tion based weight adjustment method with other fuzzy PID controllers, five different performance measures are considered.
The two of these performance measures are selected from the classical transient system response criteria; namely the max-imum overshoot (% OS ) and the settling time ( T s ). The next three performance measures are considered to be (i) IAE which is defined as IAE  X  (ii) integral time absolute error ( ITAE ) which is defined as ITAE  X  (iii) total variation ( TV )( Skogestad, 2003 ) of the control input u ( t ), which is defined as TV  X  3.4. Simulation results
In all the simulation studies, discrete simulation method is used with a sampling time of 0.1 s. During the simulations, the conventional fuzzy PID controller without rule weighting is denoted as NWA, the fuzzy PID controller with a self-tuning scheme for the output scaling factor is denoted as OSFT, the conventional fuzzy PID controller with the optimized rule weights is denoted as WO, the fuzzy PID controller with the error based weight adjustment method is denoted as EBWA and the fuzzy PID controller with the proposed normalized acceleration based weight adjustment method is denoted as RVBWA. To be fair, the same input and output membership functions given in
Fig. 8 and the same rule base given in Table 3 are used for each of these fuzzy PID controllers. The initial values of all the fuzzy rule weights are chosen as  X  X 1 X  X .
 3.4.1. System I
Since most of the high-order processes can usually be modeled as second order plus dead time linear systems, the following system given by Mudi and Pal (1999) is taken into consideration: G  X  s  X  X 
The scaling factor values are also taken from Mudi and Pal (1999) as follows: K  X  0 : 9 , K d  X  13 : 5 , b  X  0 : 02 , a  X  0 :
These scaling factors lead to an oscillatory output response with a moderate overshoot but a small rise time. The unit step output responses and the control signals of NWA, OSFT, WO, EBWA and RVBWA are in Fig. 11 . The disturbance with the amplitude of 0.2 is applied to the system at time 50 s.
The performance analysis of the fuzzy PID controllers accord-ing to the performance measures used is given in Table 4 . The proposed RVBWA reduces the overshoot value as it is expected when it is compared to NWA, WO, EBWA and OSFT. As given in Fig. 11 , the settling time of the proposed RVBWA is significantly smaller than the others. The ITAE value of RVBWA is drastically less than the other fuzzy PID controllers since the oscillations vanish. The proposed method has a low value of TV that shows that it has the smoothest control signal. Finally, the effect of disturbance is compensated in a shorter time with the use of proposed method. 3.4.2. System II
Consider the non-linear process given again by Mudi and Pal (1999) as d y  X  t  X 
The parameter L is chosen to be 0.5 s and the scaling factors of the fuzzy PI controllers are taken as follows ( Mudi and Pal, 1999 ): K  X  0 : 9 , K d  X  11 , b  X  0 : 018 , a  X  0 :
Using these scaling factors an oscillatory output response with small rise time is obtained. The unit step output responses and the control signals of NWA, WO, OSFT, EBWA and RVBWA are shown in Fig. 12 . The disturbance with the amplitude of 0.2 is applied to the system at time 35 s.

The comparison of the fuzzy PI controllers according to the performance measures used is given in Table 5 . As parallel to the results obtained for linear system, proposed RVBWA improves the transient performance also for non-linear system. Maximum overshoot and the settling time are decreased. In addition, IAE , ITAE and TV values show the performance improvement capacity of the proposed RVBWA. With the proposed weight assignment method, the disturbance is again compensated in a shorter time as it compared to the other control structures. 4. Experiment
In order to show the effectiveness of the proposed method, real time control system applications have been performed. Both NWA and RVBWA have been applied to a highly non-linear pH control process. The neutralization process is complex industrial process with dominant nonlinearities. Since the pH process inherits severe nonlinearities and time varying behavior, it is a benchmark process to evaluate control performances. The experi-mental set-up handled in this study is G.U.N.T. pH Value Control Trainer RT-552, which is illustrated in Fig. 13 . This process has two input streams, one containing strong acid (H X  X l) and the other one strong base (Na X  X H).

In order to obtain a single input X  X ingle output system, the acetic acid stream, F a , is considered to be constant at its nominal value while the base flow rate is considered as the manipulated variable ( F b ). Therefore, the process can be described as the sodium hydroxide stream as input ( F b ) and the pH (pH 2 )asoutput.The parameters of the neutralization process are given in Table 6 .
In order to determine the scaling factors of the fuzzy PID controllers, the fuzzy model of this process obtained. For that purpose, an identification experiment is applied to RT-552 with the sampling time of 2 s ( Kumbasar et al., 2011a , 2011b , 2011c ). The regression vector is constructed by considering pH( k 1) and F ( k 1) values. The collected input and output data has then been trained by ANFIS Toolbox/MATLAB to obtain the fuzzy model. In order to represent the nonlinearities of pH process better, the membership functions of each input in the fuzzy rule base are defined with six Gaussian membership functions ( Kumbasar et al., 2011c ).

Since the pH process to be controlled has high nonlinearity related to molarities of [H]/[OH], the performances of the controller with the proposed method are tested for different reference values at the first three cases. The desired reference values have been chosen as 6, 7 and 8 pH for Case1, Case 2 and Case 3 , respectively. An additional experiment has been per-formed on the Case 4 in order to test the robustness of the proposed method under disturbance. The disturbance is applied as manipulating the flow rate of the acetic acid stream.
The fuzzy PID controller structure given in Section 3.1 is implemented in the real-time control experiments. For the proposed method, the initial values of all the fuzzy rule weights are chosen as  X  X 1 X  X .
 Case 1. The reference value is taken as 6 pH value. The scaling factors of the fuzzy PID controllers are chosen as K  X  0 : 11 , K d  X  0 : 2 , b  X  15 and a  X  50 using the system model just to obtain a fast system response for this process. Using these scaling factors an oscillatory output response with a moderate overshoot is obtained. The step input system responses and the control signals of NWA and RVBWA are shown in Fig. 14 . The comparison of the fuzzy PID controllers according to the performance measures given in Section 3.3 is shown in Table 7 .

The Fig. 15 shows the value changes of the 9 fuzzy rule weights with time for the real time control application with reference value 6 pH. As it is seen from Fig. 15 , the fuzzy rule weights take different values at different regions of the system response. For example; approximately between 145 and 170 s, when the system error is negative and the change of error is negative (the region D1 in Fig. 3 ) the fuzzy rule weights 1, 2, 4 and 5 are active and take appropriate values between 0 and 1 where others are inactive and do not take any value.
 Case 2. The reference value is taken as 7 pH value. The scaling factors of the fuzzy PID controllers are chosen as K  X  0 : 11 , K d  X  0 : 2 , b  X  15 , a  X  50 using the system model just to obtain a fast system response for the system. Naturally, an oscillatory output response is obtained with these scaling factors. The step system responses and the control signals of NWA and RVBWA are shown in Fig. 16 . The comparison of the fuzzy PID controllers according to the performance measures used is given in Table 8 .
 Case 3. The reference value is taken as 8 pH value. The scaling factors of the fuzzy PID controllers are chosen as K  X  0 : 11 , K d  X  0 : 4 , b  X  15 , a  X  50 using the system model just to obtain a fast system response for the system. These scaling factors also produce an oscillatory output response. The step system responses and the control signals of NWA and RVBWA are shown in Fig. 17 . The comparison of the FLCs according to the selected performance measures is given in Table 9 . The dashed-lines in
Fig. 17 indicate the bounds of the 5% band of the reference value, which actually defines the settling time.

Case 4. The fuzzy PID controller with RVBWA has been applied to pH process set in order to test the robustness of the proposed method under disturbances. For this purpose, the flow rate of the influent stream has been manipulated. At first, the neutralization process has been forced to attain the reference value 7 pH.
Then, the flow rate of the influent stream has been increased by 50% (1.5 ml/s), and reduced back to the default value to examine the disturbance rejection. Secondly, the flow rate ( F a ) has been decreased by 40% (0.6 ml/s), and increased back. The above described disturbances are applied to the system at times t  X  116 s and 342 s, respectively. For this case, the scaling factors of the fuzzy PID controllers are chosen as in Case 2.
The system response and the control signal of RVBWA are shown in Fig. 18 . When the same disturbances are applied to the system without the proposed weight tuning method, the system response becomes unstable and therefore it is not illustrated within Fig. 18 .
 From the experiments it has been observed that the proposed RVBWA reduces maximum overshoots compared to the NWA.
For each case, the settling time of the fuzzy PID controller with the proposed rule weighting method is reduced significantly. The ITAE values of RVBWA are less than the NWA with smaller
TV values that show the smoothness of the control signal. The results also show that the disturbances are also compensated fairly well with the proposed method.

Moreover, the average computational time needed for calculating the control signal for experiment runs at each samplingtimewasmeasuredas0.029fortheconventional
FuzzyPIDcontrollerand0.058sfortheproposedcontroller structure. These computations were done on a personal com-puter with an Intel Pentium Dual Core T2370 1.73 GHz pro-cessor, 2.99 GB RAM, and software package MATLAB/Simulink 7.4.0.This result shows that the proposed fuzzy rule weighting method does not bring any serious additional computational burden. The obtained computational time confirms that the proposed method is feasible even for systems with faster dynamics. 5. Conclusion
An on-line adjustment method for the rule weights of the fuzzy PID controller is presented. The adjustment of rule weight values are performed in a simple way using a fuzzy logic mechanism which uses the  X  X  X ormalized acceleration X  X  in addition to  X  X  X ystem error X  X  as inputs and the output of this fuzzy mechan-ism is directly assigned as the weight values of the fuzzy rules.
The proposed on-line fuzzy rule weight assignment method is applied to both fuzzy PI and PID controllers and performances are tested on linear and non-linear processes by simulations. The performance results of the fuzzy PID controller with the proposed method are compared with the fuzzy PID controller proposed by Mudi and Pal (1999) which uses a self-tuning scheme for the output scaling factor, the fuzzy PID controller with error based weight adjustment method presented in Karasakal et al. (2011 ), the fuzzy PID controller with optimized weights and the conven-tional fuzzy PID controller with no rule weight adjustment.
In order to make a fair comparison, several performance measures are used such as maximum overshoot, settling time, integral absolute error, integral time absolute error and total variation of the control signal. In addition to simulations, the effectiveness and the robustness of the proposed weight assign-ment method are demonstrated on a pH neutralization process for various reference values. The results obtained from the simulations and the experiments show the drastic improvements on performance measures and show that the disturbances are also compensated much more effectively with the use of the proposed weight adjustment method.
 References
