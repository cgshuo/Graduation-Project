 Workflow management technologies have been used in more and more organizations and applications to automate, manage, and improve the business processes. However changes [3]; Reichert et al. present a formal foundation to support the dynamic struc-tural changes of running workflow instances [4]; in [5] Weske defines a formal foun-dation and conceptual design of dynamic adaptations in an object-oriented workflow management system and describes how workflow schemas are represented. Although factory enough and there is no agreement on the best solution of this issue. 
This paper considers that one of the main factors causing poor flexibility problems is the imperative nature of process management, which forms the foundation of tradi-many information about the processes to be executed before the designing new work-flow schemas; the process models are often over-specified and are difficult to imple-based workflow management system (PWfMS). The idea behind the PWfMS is to from both. meta-model proposed by WfMC and the concept of integration of policy management and process management, a meta-model for new approach is developed to support the design and the implementation of new system. This model is shown in Fig.1 below. 
Comparing with the WfMC X  X  meta-model, the main differences between the two models are: (1) the  X  X ctivity X  in the WfMC X  X  model is changed to  X  X bstract Policy X ; model data for specific domain. 
Policy management is defined as the usage of policy rules to manage the behavior can manage one or more systems according to a set of policy rules. The proper com-bination of policy management and process management can bring much better flexi-bility to workflow management systems. 
To implement the new approach, two basic types of polices are needed: (1) policies In general, a policy model can have many levels; only the lowest level policies repre-senting the commands directly executed by the supporting platform. All higher-level better integration of policy management and process management To use Petri net for the new approach, some extensions have to be made to deal with the specific characteristics of the new approach. 3.1 Variation Petri Net System The extended Petri net is referred as Variation Petri Net System (VPNS) in this paper. The extensions are described below: 3.1.1 Node Extension There are two purposes for node extension: (1) To distinguish OR-split and And-split in the graphic level. (2) To model the Election Routing that is specific in policy man-therefore three special transitions are introduced in VPN system; they are AND-split, OR-split and Election-split as shown in Fig.2. 3.1.2 Weight Function Extension duced in this paper. Weight function (W) of VPN system has following properties:  X  split path corresponding to a policy action.  X 
Every input arc will produce tokens of the same number as the weight in its output place.  X 
Places have weight too. Only when the number of tokens that a place holds is equal to or greater than its weight, can the successor transition of this place become en-abled.  X 
Weight of the output arc of a place can only take two values: zero or infinity. In the case of zero weight it means that this arc will fire all the tokens of its predecessor place, but won X  X  alter the weight of this place. In the case of infinity it means that this place to infinity in the same time. 
In VPN system, all the split paths can only join to places, and the join rule is based on the weight function. The three types of join nodes, of which each type corresponds to a split node type, are shown in Fig 3. 3.2 Model Analysis The analysis of soundness property of Petri net can be used to avoid the fault errors. below: 3.2.1 Free-Choice A free-choice Petri net means that the routing of a process should be independent of the order in which activities are executed. the free choice property of VPN system. That means that if the model of a workflow is built based on VPN system, it then has free-choice property. 3.2.2 Well-Handled The right association between AND/OR-split nodes and AND/OR-join nodes is re-property of Petri net. Definition 3.2 Well-handled VPN: A VPN is well-handled, if for any pair of nodes x W(y)=f(y ) ; (3) If x is an ELECTION-split transition, then f(y)  X  W(y)  X  n *f(y). 3.2.3 Election Routing Model reached until certain number of the decisions have been made. This certain number is system. execution of same transitions. This error is described in detail as follows: j executed for x times. 
This error is referred as  X  X inority Error X  of VPN in this paper. The solution of it is A prototype policy-based workflow system that combines policy management and To make the modeling process standard for different domains, a modeling language is expected. Secondly, the policy server, it is the most difficult part of the implementa-creationary work. 
