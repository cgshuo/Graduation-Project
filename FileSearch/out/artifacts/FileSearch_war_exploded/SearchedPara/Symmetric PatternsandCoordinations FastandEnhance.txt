 In recent years, vector space models (VSMs) have become prominent in NLP. VSMs are often eval-uated by measuring their ability to predict human judgments of lexical semantic relations between pairs of words, mostly association or similarity. While many datasets for these tasks are limited to pairs of nouns, the recent SimLex999 word similar-ity dataset (Hill et al., 2014) also consists of sim-ilarity scores for verb and adjective pairs. State-of-the-art VSMs such as word2vec skip-gram ( w2v-SG , (Mikolov et al., 2013a)) and GloVe (Pennington et al., 2014) excel at noun-related tasks. However, their performance substantially decreases on verb similar-ity prediction in SimLex999, and their adjective rep-resentations have rarely been evaluated (Section 2).
In this paper we show that a key factor in the re-duced performance of the w2v-SG model on verb representation is its reliance on bag-of-words ( BOW ) contexts: contexts of the represented words that con-sist of words in their physical proximity. We investi-gate a number of alternative contexts for this model, including various dependency contexts, and show that simple, automatically acquired symmetric pat-terns ( SPs , e.g.,  X  X  or Y X , (Hearst, 1992; Davidov and Rappoport, 2006)) are the most useful contexts for the representation of verbs and also adjectives. Moreover, the SP -based model is much more com-pact than the alternatives, making its training an or-der of magnitude faster.
 In particular, we train several versions of the w2v-SG model, each with a different context type, and evaluate the resulting word embeddings on the task of predicting the similarity scores of the verb and adjective portions of SimLex999. Our results show that SP contexts (SG-SP ) obtain the best results on both tasks: Spearman X  X   X  scores of 0.459 on verbs and 0.651 on adjectives. These results are 15.2% and 4.7% better than BOW contexts and 7.3% and 6.5% better than all dependency contexts ( DepAll ). Moreover, the number of SP contexts is substantially smaller than the alternatives, making it extremely fast to train: 11 minutes only on an 8G word cor-pus using a 32 CPU core machine, compared to 5 and 11 hours for BOW and DepAll , respectively.
Recently, Schwartz et al. (2015) presented a count-based VSM that utilizes SP contexts (SRR15). This model excels on verb similarity, outperform-ing VSMs that use other contexts (e.g., BOW and DepAll ) by more than 20%. In this paper we show that apart from its SP contexts, the success of SRR15 is attributed in large to its explicit representation of antonyms ( live/die ); turning this feature off reduces its performance to be on par with SG-SP . As op-posed to Schwartz et al. (2015), we keep our VSM fixed across experiments ( w2v-SG ), changing only the context type. This allows us to attribute our im-proved results to one factor: SP contexts.

We further observe that SP contexts are tightly connected to syntactic coordination contexts ( Coor , Section 3). Following this observation, we compare the w2v-SG model with three dependency-based context types: (a) Coor contexts; (b) all dependency links ( DepAll ); and (c) all dependency links exclud-ing Coor links ( Coor C ). 1 Our results show that training with Coor contexts is superior to training with the other context types, leading to improved similarity prediction of 2.7-4.1% and 4.3-6.9% on verbs and adjectives respectively.
 These results demonstrate the prominence of Coor contexts in verb and adjective representation: these contexts are even better than their combination with the rest of the dependency-based contexts (the DepAll contexts). Nonetheless, although Coor con-texts are extracted using a supervised dependency parser, they are still inferior to SP contexts, extracted automatically from plain text (Section 3), by 4.6% and 2.2% for verb and adjective pairs. Word Embeddings for Verbs and Adjectives. A number of evaluation sets consisting of word pairs scored by humans for semantic relations (mostly as-sociation and similarity) are in use for VSM evalua-tion. These include: RG-65 (Rubenstein and Good-enough, 1965), MC-30 (Miller and Charles, 1991), WordSim353 (Finkelstein et al., 2001), MEN (Bruni
Nouns are dominant in almost all of these datasets. For example, RG-65, MC-30 and Word-Sim353 consist of noun pairs almost exclusively. A few datasets contain pairs of verbs (Yang and Pow-ers, 2006; Baker et al., 2014). The MEN dataset, al-though dominated by nouns, also contains verbs and adjectives. Nonetheless, the human judgment scores in these datasets reflect relatedness between words. In contrast, the recent SimLex999 dataset (Hill et al., 2014) contains word similarity scores for nouns (666 pairs), verbs (222 pairs) and adjectives (111 pairs). We use this dataset to study the effect of context type on VSM performance in a verb and adjective simi-larity prediction task.
 Context Type in Word Embeddings. Most VSMs (e.g., (Collobert et al., 2011; Mikolov et al., 2013b; Pennington et al., 2014)) define the context of a target word to be the words in its physical prox-imity (bag-of-words contexts). Dependency con-texts, consisting of the words connected to the tar-get word by dependency links (Grefenstette, 1994; Pad X  and Lapata, 2007; Levy and Goldberg, 2014), are another well researched alternative. These works did not recognize the importance of syntactic coor-dination contexts ( Coor ).

Patterns have also been suggested as VSM con-texts, but mostly for representing pairs of words (Turney, 2006; Turney, 2008). While this approach has been successful for extracting various types of word relations, using patterns to represent single words is useful for downstream applications. Re-cently, Schwartz et al. (2015) explored the value of symmetric pattern contexts for word representation, an idea this paper develops further.

A recently published approach (Melamud et al., 2016) also explored the effect of the type of con-text on the performance of word embedding models. Nonetheless, while they also explored bag-of-words and dependency contexts, they did not experiment with SPs or coordination contexts, which we find to be most useful for predicting word similarity. Limitations of Word Embeddings. Recently, a few papers examined the limitations of word em-bedding models in representing different types of se-mantic information. Levy et al. (2015) showed that word embeddings do not capture semantic relations such as hyponymy and entailment. Rubinstein et al. (2015) showed that while state-of-the-art embed-dings are successful at capturing taxonomic infor-mation (e.g., cow is an animal), they are much less successful in capturing attributive properties ( ba-nanas are yellow). In (Schwartz et al., 2015), we showed that word embeddings are unable to distin-guish between pairs of words with opposite mean-ings (antonyms, e.g., good/bad). In this paper we study the difficulties of bag-of-words based word embeddings in representing verb similarity. Lexico-syntactic patterns are templates of text that contain both words and wildcards (Hearst, 1992), e.g.,  X  X  and Y X  and  X  X  for a Y X . Pattern instances are sequences of words that match a given pattern, such that concrete words replace each of the wild-cards. For example,  X  John and Mary  X  is an instance of the pattern  X  X  and Y X . Patterns have been shown useful for a range of tasks, including word relation extraction (Lin et al., 2003; Davidov et al., 2007), knowledge extraction (Etzioni et al., 2005), senti-ment analysis (Davidov et al., 2010) and authorship attribution (Schwartz et al., 2013).

Symmetric patterns ( SPs ) are lexico-syntactic pat-terns that comply to two constraints: (a) Each pat-tern has exactly two wildcards (e.g., X or Y ); and (b) When two words ( X , Y ) co-occur in an SP , they are also likely to co-occur in this pattern in oppo-site positions, given a large enough corpus (e.g.,  X  X or Y  X  and  X  Y or X  X ). For example, the pattern  X  X and Y  X  is symmetric as for a large number of word pairs (e.g., ( eat,drink )) both members are likely to occur in both of its wildcard positions (e.g.,  X  X at and drink X ,  X  X rink and eat X ).

SPs have shown useful for tasks such as word clustering (Widdows and Dorow, 2002; Davidov and Rappoport, 2006), semantic class learning (Kozareva et al., 2008) and word classification (Schwartz et al., 2014). In this paper we demonstrate the value of SP -based contexts in vector representa-tions of verbs and adjectives. The rationale behind this context type is that two words that co-occur in an SP tend to take the same semantic role in the sen-tence, and are thus likely to be similar in meaning (e.g.,  X (John and Mary) sang X ).
 SP Extraction. Many works that applied SPs in NLP tasks employed a hand-crafted list of patterns (Widdows and Dorow, 2002; Dorow et al., 2005; Feng et al., 2013). Following Schwartz et al. (2015) we employ the DR 06 algorithm (Davidov and Rap-poport, 2006), an unsupervised algorithm that ex-tracts SPs from plain text. We apply this algorithm to our corpus (Section 4) and extract 11 SPs :  X  X  and Y X ,  X  X  or Y X ,  X  X  and the Y X ,  X  X  or the Y X ,  X  X  or a Y X ,  X  X  nor Y X ,  X  X  and one Y X ,  X  either X or Y X ,  X  X  rather than Y X ,  X  X  as well as Y X ,  X  from X to Y X . A description of the DR 06 algorithm is beyond the scope of this paper; the interested reader is referred to (Davidov and Rappoport, 2006).
 SP Contexts. We generate SP contexts by taking the co-occurrence counts of pairs of words in SPs . For example, in the SP token  X  boys and girls  X , the term girls is taken as an SP context of the word boys , and boys is taken as an SP context of girls .
We do not make a distinction between the differ-ent SPs . E.g.,  X  boys and girls  X  and  X  boys or girls  X  are treated the same. However, we distinguish be-tween left and right contexts. For example, we gen-erate different contexts for the word girls , one for left-hand contexts ( X  girls and boys  X ) and another for right-hand contexts ( X  boys and girls  X ).
 SPs and Coordinations. SPs and syntactic coor-dinations ( Coors ) are intimately related. For exam-ple, of the 11 SPs extracted in this paper by the DR 06 algorithm (listed above), the first eight represent co-ordination structures. Moreover, these SPs account for more than 98% of the SP instances in our corpus. Indeed, due to the significant overlap between SPs and Coors , the former have been proposed as a sim-
Despite their tight connection, SPs sometimes fail to properly identify the components of Coors . For example, while SPs are instrumental in captur-ing shallow Coors , they fail in capturing coordina-tion between phrases. Consider the sentence John walked and Mary ran : the SP  X  X  and Y X  captures the phrase walked and Mary , while the Coor links the heads of the connected phrases ( X  walked  X  and  X  ran  X ). SPs , on the other hand, can go beyond Coors and capture other types of symmetric structures like  X  from X to Y X  and  X  X  rather than Y X .

Our experiments reveal that both SPs and Coors are highly useful contexts for verb and adjective rep-resentation, at least with respect to word similarity. Interestingly, Coor contexts, extracted using a super-vised dependency parser, are less effective than SP contexts, which are extracted from plain text. Model. We keep the VSM fixed throughout our experiments, changing only the context type. This methodology allows us to evaluate the impact of dif-ferent contexts on the VSM performance, as context choice is the only modeling decision that changes across experimental conditions.
 Our VSM is the word2vec skip-gram model ( w2v-SG , Mikolov et al. (2013a)), which obtains state-of-the-art results on a variety of NLP tasks (Baroni et context types other than BOW we use the word2vec ments the standard word2vec toolkit with code that allows arbitrary context definition.
 Experimental Setup. We experiment with the verb pair (222 pairs) and adjective pair (111 pairs) portions of SimLex999 (Hill et al., 2014). We re-port the Spearman  X  correlation between the ranks derived from the scores of the evaluated models and
We train the w2v-SG model with five different context types: (a) BOW contexts (SG-BOW ); (b) all dependency links (SG-DepAll ) (c) dependency-based coordination contexts (i.e., those labeled with conj , SG-Coor ); (d) all dependency links except for coordinations (SG-Coor C ); and (e) SP contexts. Our training corpus is the 8G words corpus gener-Spearman X  X   X  scores on the different portions of SimLex999. The top part presents results for the word2vec skip-gram model ( w2v-SG ) with various context types (see text). The bottom lines present the results of the count SP -based model of Schwartz its antonym detection method. The two rightmost columns present the run time of the w2v-SG mod-els in minutes (Time) and the number of context in-Lex999 portion, the score of the best w2v-SG model across context types is highlighted in bold font.
Models (b)-(d) require the dependency parse trees of the corpus as input. To generate these trees, we employ the Stanford POS Tagger (Toutanova et al., (Nivre et al., 2009). 9 The SP contexts are generated using the SPs extracted by the DR 06 algorithm from our training corpus (see Section 3).

For BOW contexts, we experiment with three win-dow sizes (2, 5 and 10) and report the best results (window size of 2 across conditions). For depen-dency based contexts we follow the standard con-vention in the literature: we consider the immedi-ate heads and modifiers of the represented word. All models are trained with 500 dimensions, the de-fault value of the word2vec script. Other hyper-parameters were also set to the default values of the code packages.
 Results. Table 1 presents our results. The SG-SP model provides the most useful verb and adjective representations among the w2v-SG models. Com-pared to BOW (SG-BOW ), the most commonly used context type, SG-SP results are 15.2% and 4.7% higher on verbs and adjectives respectively. Com-pared to dependency links (SG-DepAll ), the im-provements are 7.3% and 6.5%. For completeness, we compare the models on the noun pairs portion, observing that SG-BOW and SG-DepAll are  X  8.5% better than SG-SP . This indicates that different word classes require different representations.

The results for SG-Coor , which is trained with syntactic coordination ( Coor ) contexts, show that these contexts are superior to all the other depen-dency links (SG-Coor C ) by 4.1% and 6.9% on verbs and adjectives. Importantly, comparing the SG-Coor model to the SG-DepAll model, which aug-ments the Coor contexts with the other syntactic de-pendency contexts, reveals that SG-DepAll is ac-tually inferior by 2.7% and 4.3% in Spearman  X  on verbs and adjectives respectively. Interestingly, Coor contexts, which are extracted using a super-vised parser, are still inferior by 4.6% and 2.2% to SPs , which capture similar contexts but are extracted from plain text.

Table 1 also shows the training times of the vari-ous w2v-SG models on a 32G memory, 32 CPU core machine. SG-SP and SG-Coor , which take 11 min-utes and 23 minutes respectively to train, are sub-stantially faster than the other w2v-SG models. For example, they are more than an order of magnitude faster than SG-BOW (320 minutes) and SG-Coor C (677 minutes). This is not surprising, as there are far fewer SP contexts (270M) and Coor contexts (550M) than BOW contexts (13G) and Coor C con-texts (14G) (#Cont. column).

Finally, the performance of the SG-SP model is still substantially inferior to the SRR15 SP -based model (Schwartz et al., 2015). As both models use the same SP contexts, this result indicates that other modeling decisions in SRR15 lead to its superior performance. We show that this difference is mostly attributed to one feature of SRR15: its method for detecting antonym pairs ( good/bad ). Indeed, the SRR15 model without its antonym detection method (SRR15  X  ) obtains a Spearman  X  of 0.441, compared to 0.459 of SG-SP on verb pairs. For adjectives, creasing the difference from SG-SP to 2.9%. 11 We demonstrated the effectiveness of symmetric pattern contexts in word embedding induction. Ex-periments with the word2vec model showed that these contexts are superior to various alternatives for verb and adjective representation. We further pointed at the connection between symmetric pat-terns and syntactic coordinations. We showed that coordinations are superior to other syntactic con-texts, but are still inferior to symmetric patterns, al-though the extraction of symmetric patterns requires less supervision.

Future work includes developing a model that successfully combines the various context types ex-plored in this paper. We are also interested in the representation of other word classes such as adverbs for which no evaluation set currently ex-ists. Finally, the code for generating the SG-SP embeddings, as well as the vectors experimented with in this paper, are released and can be down-loaded from http://www.cs.huji.ac.il/ roys02/papers/sp_sg/sp_sg.html This research was funded (in part) by the Intel Col-laborative Research Institute for Computational In-telligence (ICRI-CI), the Israel Ministry of Science and Technology Center of Knowledge in Machine Learning and Artificial Intelligence (Grant number 3-9243). The second author was partially funded by the Microsoft/Technion research center for elec-tronic commerce and the Google faculty research award.

