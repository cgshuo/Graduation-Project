 With the growing popularity of program trading systems in Wall Street, the modern financial market also benefits from advances in information technology. In academic research, scholars of econometrics and finance made use of computational power and huge databases to verify their hypotheses through multivariable regression or simu-lation techniques, such as the Monte Carlo method. Similarly, experts in the pattern recognition and data mining area also applied their knowledge to extract profitable information from noisy and nonstationary financial time-series data. The main novel idea of this article is to develop an integrated machine learning approach for mod-eling some behavioral financial phenomena. Specifically, we propose a dual-classifier learning framework to apply to noisy and nonstationary financial time-series data. The technique of this article is to develop an integrated machine learning approach for mod-eling some behavioral financial phenomena. Specifically, we propose a dual-classifier learning framework to test the basic idea of contrarian trading strategy [De Bondt and Thaler 1985; Chen 1988], a market-neutral portfolio management method. Exper-iments on historical stock prices show that the proposed approach can be extended to an effective trading system for leading U.S. companies.

The focus of the machine learning research is to develop an automatic learning sys-tem which extracts information and rules from a massive training dataset through computational and statistical methods. Generally speaking, a learning system is com-posed of the following components. First, an objective function, which defines the tar-gets of our problem, is required for supervised learning. Second, a feature extraction process represents the training examples in a condensed set of representative quan-titative values. This feature space should provide sufficient power of representation and discrimination for the targeted learning task. Finally, an optimization method or machine learning algorithm is applied to discover hidden information from the training data distributed in a high-dimensional feature space. In this article, we propose novel ideas from these three aspects and integrate them into a complete machine learning framework to solve investment problems.

Pattern recognition and machine learning techniques have been widely utilized in many different kinds of applications. In the financial market, the intelligent system is also quite attractive to those providing automatic trading or investment decision advice. Since the early 1990 X  X , some machine learning techniques, such as neural networks, generic algorithm, reinforcement algorithms, and hybrid methods, have been applied to financial time-series data to discover valuable information. The survey paper by Zhang and Zhou [2004] mentioned that hidden information can be classified into the following types: associative correlation rules, classification, prediction, clustering analysis, and sequential patterns. The knowledge derived from data mining can be used in several valuable applications, such as asset price prediction, portfolio management, corporate governance [Zhang and Zhou 2004], risk management [Gencay and Gibson 2007], and option pricing [Lajbcygier 2004]. The trading strategy discussed in this article is closely related to asset price prediction and portfolio management.

Prediction of the asset price is a very intuitive and challenging problem. Finding patterns from past information for predicting future trends or variance margins is the goal for these kinds of problems. Traditional regression methods such as ARIMA [Haugen 2001] as well as some learning techniques have been used to test historical prices of several different assets, such as stocks [Kwon and Moon 2007; Bao and Yang 2008], composite indices [Leigh et al. 2008], and future contracts [Cao and Tay 2003]. There also exists a wide variety of learning targets, including asset prices [Cao and Tay 2003], daily returns [Kwon and Moon 2007], turning points [Leigh et al. 2008], buy/sell signals [Kwon and Moon 2007], and bull/bear trend flags [Bao and Yang 2008]. Portfolio management involves selecting a set of assets which maximize the profit under a specific risk level. The Capital Asset Pricing Model (CAPM) [Haugen 2001] is useful for describing the relationship between returns and their risk. The decision of portfolio formation depends on the selection of appropriate instruments and the optimized combination of these selected targets. The problem is more complex and requires some hybrid learning techniques, such as neuro-fuzzy [Ang and Quek 2006] and multiple Q-learning [Lee et al. 2007]. The contrarian trading strategy adopted by this article also belongs to portfolio management applications.

Though applying the machine learning methods to the preceding financial problems seems plausible, most investment decision makers doubt whether artificial intelligence models trained by historical data can beat the market. For economists and investors, pattern recognition and machine learning techniques are viewed as a tool to analyze nonstationary signals, rather than a predictor or a trading maker. The distrust is at-tributable to the difference of reliability demands between analysis tools and decision makers. Without well-developed theoretical models and stable long-term positive evi-dence in the real market, a method with good simulation results will be dismissed as a heuristic result which just fits the data well.

The proposed method is motivated by a well-known financial anomaly caused by be-havioral overreaction of investors. Instead of directly learning the relationship between time-series features and prices or returns, we apply classification techniques to select constituents of each long/short portfolio for enhancing the performance of the contrar-ian trading strategy. The features adopted in this work can be categorized in the follow-ing three types: distribution of cumulative monthly returns, wavelet transformation of price variation, and technical stock indicators. We then compute a 381-dimensional feature vector to describe the temporal characteristics of each training sample. Finally, we examine two well-known classification algorithms, that is, AdabBoost [Freund and Schapire 1997; Viola and Jones 2001] and support vector machine [Cao and Tay 2003], for incorporation into the proposed learning framework. We also improve the AdaBoost algorithm via joint feature learning [Mita et al. 2005; Huang et al. 2006] to enhance the proposed method with small-sample training data, which is a common challenge of the financial system.

The rest of this article is organized as follows. Section 2 discusses some background knowledge of computational finance, such as stock price predictability and trading strategies. Some representative previous literature that verifies or explains the over-reaction behaviors of investors is reviewed in this section. After a summary and anal-ysis of the original contrarian trading strategy, the linkage between learning system and financial application is described to define the stock prediction problem in this article. In Section 3 we describe a systematic overview of the proposed dual-classifier model and illustrate how it enhances profit performance. This section also provides the details of the procedures in our learning system. In Section 4 several experiments on real financial data are shown to demonstrate the effectiveness and reliability of the proposed method, and finally Section 5 concludes. In this section, we discuss some fundamental knowledge of stock price predictability and the contrarian trading strategy. We also review some related previous work and introduce the motivation of the proposed approach. Then, stock price prediction is formulated as a machine learning problem which is detailed at the end of this section. Two classical theories on computational finance are the Capital Asset Pricing Model (CAPM) [Haugen 2001] and the Efficient Market Hypothesis (EMH) [Fama 1970]. CAPM, developed in the 1960 X  X , is a model for pricing an individual security or portfolio through calculation of the expected return and systemic risk. The assumptions behind CAPM include mean/variance decision making, an investor being a price taker, a no-tax-no-transaction-cost world, homogeneous expectation, and unlimited borrowing or lending at the risk-free rate. EMH assumes that the capital market is efficient if prices always fully reflect the available information. Depending on the availability of information, an efficient market can be categorized into one of the three forms: weak, semistrong, and strong.

Because of the preceding unrealistic assumptions, the debate of the usefulness of the two theories mentioned before continued for several decades [Fama and French 1992, 1996]. Kahneman and Tverskey [1979] proposed the prospect theory, which de-scribes the decisions between alternatives that involve risk. It is considered as the most prominent theory in the existing behavioral finance framework. In this field, investors X  overreaction or underreaction to news and events is a typical research topic. The ex-perimental evidence and reasoning for the anomalies of the financial market provide the foundations of market predictability research.

Investment decision making is an important issue in portfolio management. Ac-cording to the return and risk objective set by the investor, the analyst reconciles the difference and chooses the benchmark for performance evaluation purposes. A spe-cific strategy is then executed to achieve the return/risk objective. Contrarian trading strategy is a part of investment decision making. And automatic trading, or algorithmic trading, is one of the popular ways for trading which makes traders respond to the new information more promptly.

For investors, classification of investment styles helps them recognize the decision making process of analysts. For analysts, it provides predicting power in explaining the dispersion of returns across portfolios so that they can evaluate the performance of their trading strategies. Figure 1 depicts the three styles of investment decision mark-ing, value (paying a low stock price relative to earnings or assets per share), growth (investing in high-earning-growth companies), with market-oriented in between. The contrarian trading strategy is a substyle of the value investment style. Investors em-ploy this strategy to find low-priced stocks of companies that are fundamentally healthy but might experience some problem(s), hoping that a cyclical rebound will bring up the share price.
 Before introducing the contrarian trading strategy, we first describe the market-neutral investment. The concept of market neutral is to buy and sell certain financial instru-ments at the same time in order to hedge the risk of whole-market variation. Investors make profits from relative mispricings between the long position and short position. Extending this idea to portfolio management, the market-neutral strategy selects a portfolio with potential increase of asset value and selects another portfolio with de-creasing value.

Momentum investment strategy is one of the market-neutral strategies. It describes the phenomenon that past winners tend to be winners in the future, and past losers tend to be losers in the future. Jegadeesh and Titman [1993] used the monthly data of AMEX and NYSE to construct portfolios with different time intervals and claimed that it was because investors tend to underreact, which is called the momentum effect. Then, the study of Chan et al. [1996] supported this claim. Conrad and Kual [1998] further analyzed 120 different trading strategies and discovered that a momentum strategy was usually profitable at the medium horizon 3 to 12 months. Some previous studies focused on the relationship between the momentum strategy and trading cost [Korajczyk and Sadka 2004].

Opposite to the momentum strategy, DeBondt and Thaler [1985] exploited the over-reaction of the stock market to test the contrarian trading strategy [Chen 1988], which buys stocks that have been losers and sells stocks that have been winners. Balvers et al. [2000] proved this strategy can work successfully in the stock markets of Denmark, Norway, and Germany. Contrarian followers believe that because the stock market overreacts to news, an investor can take advantage of this overall behavior by selling overpriced winners and buying underpriced losers. While attractive, it is hard for con-trarian profits to capture the whole source of security return. Some researchers tested the overreaction hypothesis under different security characteristics, such as firm size [De Bondt and Thaler 1987], corporate earnings [Zarowin 1989], and seasonal pattern of return [De Bondt and Thaler 1987; Zarowin 1990]. Other attributes like autocorre-lation in individual stock returns [Lo and MacKinlay 1990] and upward biases [Conrad and Kaul 1993] have been included to complicate the analysis of security return. More-over, there was some research comparing the momentum and contrarian strategies [Geotzmann and Massa 2002]. Figure 2 gives the details of the contrarian trading strategy [De Bondt and Thaler 1985]. Before the portfolio selection and contrarian trading decision made at time t, we observe the Cumulative Excess Returns (CER) of each prospect stock for a period of Portfolio Formation (PF) time. Several companies with the highest CER during portfolio formation period are selected to form the winner portfolio W. In a similar way, the loser portfolio is composed of the worst stocks. Then, we buy the loser portfolio and sell the winners simultaneously at time t. The profit of this market-neutral strategy can be estimated by the difference between the Cumulative Average Excess Returns (CAERs) of loser and winner portfolios.
 The Excess Return (ER) calculated in this article is defined as where r i , t denotes the monthly return of the i-th company at time t, and n is the total number of companies in our investment pool at time t.
 The Cumulative Excess Return (CER) of an individual stock and the Cumulative Average Excess Return (CAER) of a portfolio p can be estimated as where T denotes the portfolio holding period, p is a portfolio that contains a set of individual stocks, and n p represents the number of individual stocks in portfolio p. With the implementation of this algorithm for the constituent stocks in S&amp;P 100 index, we can measure the 195 three-year-period CAERs month by month from January 1989 to March 2005. The average cumulative returns of the winner and the loser portfolios are shown in Figure 3. In our experimental setting, the Portfolio Formation (PF) period is set to 12 months. PF denotes the time period backward to calculate cumulative excess returns and decide the winner and loser portfolio. Portfolio Holding (PH) period is set to 36 months which means that we need to trace the profit of the portfolio after the strategy decision making. The portfolio selection ratio parameter is set to 10% in this algorithm, which means that the best 10% and worst 10% stocks are extracted to form the winner and loser portfolios.

From Figure 3, we can observe several important financial attributes of stock in-vestment. A positive excess return means that the winner and the loser portfolios both make more potential profits than the average. As the number of experiments becomes larger, the divergence between the winner and loser returns approaches closer to the conclusion of the literature in our reference. We suppose that the short-term (i.e., 3-to 18-months) investment should follow the momentum trading strategy [Jegadeesh and Titman 1993; Chan et al. 1996] because the past winners still perform better than the losers. On the contrary, after a return reversal, the contrarian trading strategy [De Bondt and Thaler 1985] should be applied to model the growing difference between these two portfolios.

The average abnormal profit after holding these portfolio pairs for three years is 15.16%. Compared to the return of 15.07% when investing in three-year U.S. treasury notes (e.g., the yield was 4.79% in January 2007), the contrarian trading strategy is not very profitable, especially when we also consider the transaction costs and a risk premium. Furthermore, we analyze the previous experimental results with the portfolio accuracy measurement, which will be described in Section 4. The average accuracy of the portfolio selection is 55.70%. Although it is able to prove the overreaction phenomenon and weak stock predictability, the improvement of selection accuracy is necessary for an effective trading strategy.

Moreover, the CAERs along the portfolio formation date are depicted in Figure 4, where we can see that this strategy had poor results between 1995 and 1998. It needs some improvement after 2004 to increase the reliability of this trading strategy. Through the empirical evidence of historical stock prices and statistical analysis, we observe that the return anomaly of the contrarian strategy results from the accumu-lation of slight majorities. The implication is that the reversal phenomenon does not occur in nearly half of the constituent stocks in both the loser and winner portfolios. Thus, there exists room to improve the prediction accuracy of the reversal appearance and enlarge the divergence of future returns between these two portfolios.
We formulate the winner and loser portfolio selection as two binary classification problems. The goal of the proposed system is to design a dual-classifier model which can be applied to the traditional winner and loser portfolios to predict whether each individual stock will have mean reversal phenomenon or not. For the learning of the winner classifier, training samples are collected from past winners and labeled as positive or negative by its future return in the historical data. The labeling of each stock should be determined by comparing its return with the average return of the loser portfolio. Similarly, we can also train the loser classifier and combine these classifiers to improve investment performance. In this article, we propose a dual-classifier model to solve the investment optimiza-tion problem. With the idea of a contrarian trading strategy, our classifiers learned from financial time-series data were used to detect stocks with the overreaction phe-nomenon, which were employed to form winner and loser portfolios. Then the dual classifiers operating in the winner and loser candidate portfolios are combined as an-other long/short portfolio to make profits equal to the return difference between the original winner/loser portfolios. The proposed learning framework is based on the contrarian trading strategy. The core concept is to train the dual classifiers for the winner and the loser pools independently. The classifiers learned from historical data will detect the stocks with higher probabil-ity (i.e., overreacted prices) and bring return reversals. With the combination of these dual classifiers, the accuracy of portfolio selection and the margin between these two portfolios will be increased, and the cumulative abnormal returns will be improved. Figure 5 shows the flow chart of the whole learning system, and the details of each component will be discussed in the following subsections. The first step of a training system is to define the learning target, the linkage between the machine learning algorithm and the massive irregular data. In this subsection, we describe the setting of the positive and negative datasets which will be used to train the price overreaction classifiers. Figure 6 illustrates an example of the training and testing data setting, with the investment decision made in January 2001, training data of 5 years, and a holding period of 36 months.
 We take the first training sample for the period from January 1990 to January 1996. The prices in the first half 36 months provide the learning features, and those in the second half are the defined targets. Then we shift the overlapping time window a month forward to obtain the second training sample. Following the process, we have 60 data collection periods for a 5-year training process, which could be enough to produce representative classifiers.

In addition, we consider the chronological order feature of time-series data. For instance, if we make a decision in January 2001, we discard the learning samples collected in December 2000 because its target value contains the information until December 2003. Instead, we collected the training samples of past trading decisions from December 1997 to January 2003, which covers the information from January 1990 to December 2000.

For each training collection time period, the data in the previous year (i.e., 12 months) is applied to the contrarian trading strategy with the ratio parameter of 20%. Then the winner and loser portfolios are constructed, and CAER T W , t and CAER T L , t can be estimated from Eq. (3) with data in the following three years, which is labeled as the  X  X efined targets X  period in Figure 4. Finally, we can define the label L i , t of the i-th stock at time t as.
 where W and L denote the winner and loser portfolios sets, respectively.

Repeating the same process for all the training periods, we can collect 2400 samples with one of these four defined labels for 5 years, and 4800 samples for 10 years. This system design assumes that past historical data can be used to predict the future trend well. In other words, for a prediction transformation function f of the past stock information, the relationship equation of stock price S t can be written as
In order to forecast stock prices, Kwon and Moon [2007] proposed the daily return model as where g k , k = 1 ,..., m, denotes a feature vector extracted from the original historical prices with financial knowledge by using some signal processing techniques. These discriminative features are constructed to optimize the transformation function via the learning system with limited training samples.

In the investment [Edwards and Magee 1997; Kaufman 1998; Haugen 2001], the analysis tools to value the stock prices can be classified into fundamental analysis and technical analysis. Fundamental analysis focuses on financial statements of a company and some management issues, such as competitive advantages, industry prospects, and corporate governance. Technical analysis applies some quantitative methods to model past market data. In order to model overreaction behavior in the past data, our feature extraction also adopts some technical analysis techniques.

In this work, we developed a 381-dimensional feature space to represent each stock sample. For the noisy and nonstationary data in complex financial behavior learning, the extraction of discriminative features is very difficult but important. Our feature extraction is described in detail as follows. (1) Monthly return and cumulative monthly return distribution record the variation (2) Wavelet features extract multiscale temporal features from the stock price curve. (3) Technical Indicators describe the stock prices based on the knowledge of finan-Predicting the future values of financial instruments precisely is the dream of most investors. From early 1990 X  X , Genetic Algorithms (GA) and Artificial Neural Networks (ANN) [Mitchell 1997], including Back-Propagation Neural Networks (BPNN) and Re-current Neural Networks (RNN), were widely applied in financial research to forecast security prices or to find some useful rules.

With the advance of learning techniques, many algorithms have been proposed to solve different kinds of problems. For supervised classification problems, we employ two different classification techniques, that is, support vector machine and AdaBoost, in our learning framework. We briefly discuss these two methods in the following. (1) Support Vector Machines (SVM) was developed by Vapnik and his coworkers [Cortes (2) AdaBoost , a short form for adaptive boosting, is a meta-algorithm that can integrate In this article, we applied these different learning methods to train dual-classifier models. We collected the training samples which were labeled as winner positive and winner negative by the methods described in this section and trained a winner classifier after the feature extraction process. The loser classifier could be learned similarly.
These dual classifiers can be applied simultaneously to identify stocks with the re-versal phenomenon. The most significant half companies of the winner and loser pools are selected to form the refined winner and loser portfolios. The reason of this test set-ting is to maintain the same number of components in the contrarian trading strategy with a ratio parameter of 10%. It will provide the same foundations of comparison at a specific risk level. As the financial market varies rapidly, a long period, such as 10 years, of stock data for training might let the classifiers overfit some dead information in the past. In addition, many new stocks do not have a long trading history to provide enough training data. Therefore, learning from a small amount of data to produce discriminating classifiers from insufficient information is another interesting and challenging problem.
We provide an alternative solution in our proposed system to improve the accuracy of small-sample learning. In our previous works [Huang et al. 2006, 2009], we developed an improved AdaBoost-based method via paired feature learning to enhance the fea-ture representation during the learning process for different applications. The major attributes of this algorithm are described as follows. (1) Paired feature representation maps all learning samples onto the joint feature plane, (2) ID3-like quantization considers the positive and negative sample distributions in a (3) Probabilistic weak classifiers increase the power of classification dramatically. The With the paired feature learning kernel, the experimental results in Section 4.3 show dramatic improvement by using the proposed algorithm for the small-sample learning problem. In this section, we present several different kinds of experiments to evaluate the pro-posed system. The first experiment compares the results of different learning algo-rithms with the same system settings. Then, in order to verify the improvement of paired feature learning algorithms for small-sample learning, we reduce the training sample collection periods to five years. In addition, another experiment is performed to compare the performance of our learning framework with shorter (i.e., 12 and 24 months) and longer (i.e., 60 months) holding periods. Finally, a similar system with partial feature space is examined to assess the discrimination performance of different features. Our training and testing data consists of historical stock prices of 100 leading U.S. companies from December 1 st , 1982 to April 15 th , 2008. Some of these daily data were collected from the financial database, including Bloomberg, DataStream, and ARE-MOS. The others were downloaded one-by-one from the Yahoo Finance Web site, which is a public free resource. In addition, the asset prices adopted in our experiment were adjusted appropriately to remove price jumps due to stock splits and stock dividends. The monthly return was calculated as the difference between the price of the first trading day in the current month and that in the next month.

Previously, De Bondt and Thaler [1985] adopted all NYSE stock prices from 1926 to 1982 to prove the overreaction. However, Zarowin [1990] argued that it was the size of the company, not investors X  overreaction, that led to the observed excess return. In this article, most of the experiments are done with the constituent stocks of Standard and Poor X  X  (S&amp;P) 100 index. S&amp;P 100 index is composed of the 100 largest companies of S&amp;P 500, which tracks over 70% of all U.S. equity and covers most commercial or industrial sectors.

Furthermore, the trading simulations in the historical data sometimes are seriously challenged because of liquidity and the survival effect. The liquidity effect indicates that, due to the frequency of trading and bid-ask price changes, it is difficult to simulate or execute a transaction exactly at historical prices. The survival effect means that the simulation avoids bankrupt companies that no longer exist in current investment lists. We believe that the stock trading volume and corporation management of these companies with such large capitalization could minimize these biases in our simulation.
In addition to the traditional profit estimation, we calculated the accuracy of port-folio selection and the probability of profitable months in the whole testing periods to measure the effectiveness and reliability of our proposed system. The details of these two measures are described as follows. We have where W and L denote the improved winner and loser portfolios, and n is the total number of tests. Table I gives the number of trading decisions in the testing periods under different experimental settings. The experimental results shown in this section were calculated as the average of all trading decisions in the testing periods. The first experiment compares the performance of the traditional contrarian trad-ing strategy [De Bondt and Thaler 1985], logistic regression, and our system with five different learning kernels. All the experiments were set to hold the portfolios for 36 months. We collected the training samples for 10 years. As the settings show in Table I, the returns and accuracy were measured as the average of 75 monthly ex-periments from January 1999 to March 2005. Table II lists the accuracy, reliability, returns and return improvement by using the proposed method and those of tradi-tional contrarian trading strategies. All the performance measures were improved by using our classification system with four different kinds of learning algorithms. The support vector machine with polynomial kernel displayed the greatest discrimination in this experimental setting. The portfolio selection accuracy is increased from 57.47% to 66.41%, and the three-year return is doubled. After these improvements, we were more confident of the trading strategy, which had a success rate higher than 73%.
Moreover, we used multinomial logistic regression model and linear SVM classifiers as the control groups in our experiment. In statistics, simple logistic regression is widely applied to predict the occurrence of an event by fitting data to a logistic function. In addition, the proposed method with linear SVM kernel is adopted as a benchmark for other learning kernels. With similar feature space, labels, and learning samples, the logistic regression model yields inferior results to the proposed learning-based approaches. The portfolio obtained by the logistic regression causes a 15.65% return decrease from the traditional contrarian trading strategy. We think the fitting and regression approach is not suitable for solving this complex learning problem, possibly due to the high-dimensional feature space.

In this experiment, SVM has much better performance than AdaBoost and its im-proved version. The polynomial and RBF kernels had similar results in all performance measures. The paired AdaBoost obtains a higher return by 6% as compared to the orig-inal AdaBoost algorithm. We proceed to compare the performance between these four learning algorithms in different experimental settings in the following several sections.
In contrast to Figure 2, we plot the return variation of the winner and loser portfolios during the holding period as the curves in Figure 9. We could extract the constituent stocks with return reversal phenomenon to compose the portfolio pairs. It implies that the performance of the winner portfolio should be weaker than that of the loser portfolio, and the winner portfolio actually has a negative excess return. The proposed method has much larger difference, as shown in Figure 8, than the traditional contrarian trading strategy as shown in Figure 2.

We then plot absolute cumulative returns and return improvement along with the portfolio formation date in Figure 9. We could observe that the proposed learning system is profitable for most of the time from 1999 to 2005. Even though there existed a few periods in which the contrarian strategy has negative returns (e.g., several months in 2001 and 2004), the proposed system has reduced the loss in these periods and achieved remarkable improvements. This subsection is focused on small-sample learning problems. One of them related to financial issues results from the fact that sometimes asset price forecasting or trading decision making via machine learning cannot be done without a long trading history (i.e., training data are not available.) In addition, because the financial market changes from minute to minute, a long period of learning sample collection might be not the best experimental setting.

We decrease the training sample collection period setting to 5 years in the proposed learning system, and the corresponding performance measures are summarized in Table III. Before analyzing the results in Table III, we would like to mention that the return of the original contrarian trading strategy is  X 33 . 66%. During the dot com speculative bubble roughly between 1995 and 2001, the contrarian trading strategy was not suitable for long-short market-neutral investment because of the continual aggravation of the bubble. Overreaction behaviors were reversed until the bursting of the bubble in 2001, so the simulated decision making of the contrarian trading strategy covering this period of time would generate a negative return.

Table III shows that the 5-year training sample collection setting is more suitable for the proposed method. With relatively insufficient training samples, the AdaBoost learning algorithm showed better results than the SVMs. The proposed learning system with the AdaBoost classifier has higher returns but less reliability than those with SVM. The improved AdaBoost algorithm via paired feature learning is a special design for such small-sample learning problems and achieved the best performance among all learning methods in this experiment.

We further decrease the training data collection period to three years and list the results in Table IV. The performance under this setting is a little bit worse than that under the five-year setting, but the comparison between four different learning algo-rithms is similar to that in Table III. The average of the three-year cumulative return improvements in Table IV ranged from 86.17% to 103.71%, which proves that our learn-ing algorithms could be well adapted for insufficient learning samples and provide an effective and practical trading system. The experiments of feature space analysis were conducted to verify the design of our feature representation methods. As introduced in Section 3.3, the feature space in our proposed learning system is composed of 381 time-series features which are taken from three different feature extraction processes: wavelet transformation, return distribu-tion, and technical indicators.

We adopt similar learning settings described in the first subsection and compare returns of the proposed methods under different subspace feature representations. Table V exhibits the performance of six different feature space settings, including three types of features and the combinations of two types of features.

First, we want to discuss these three feature categories independently. The re-turn distribution and technical indicators contain much more discrimination than the wavelet transformation. Especially the technical indicators, which involved the knowledge of financial experts, represented the financial time-series data as expected. Moreover, both the polynomial and RBF kernels of SVM could produce higher returns than AdaBoost and its improved version.

Although the technical indicators brought the most discriminative power among these three feature extraction methods, we found that the weak wavelet features are complementary to the return distribution. The feature subspace combining these two categories produced higher returns than those combining wavelet and TI and those combining RD and TI. Financial experts [De Bondt and Thaler 1985; Conrad and Kaul 1998] suggested that the contrarian trading strategy should be applied in medium-or long-term investment horizons, which means holding portfolios for 36 to 60 months. Therefore, we repeated all the experiments listed previously with a holding period longer than 36 months and calculated the performance of each proposed method. We were also interested in applying the proposed methods to different investment horizons. By redefining target positive and negative data with different holding periods, we would prove that the proposed dual-classifier model could satisfy demands of various investors who were to hold the portfolio from one year to five years.

The first experiment, shown in Table VI, is empirical evidence of the original contrar-ian trading strategy with a 60-month holding period. Collecting the learning samples for 10 years with such a long holding period, we decrease the number of simulated decisions in our datasets to 27 after considering the information overlaps. Therefore, we revised the training sample collection period to 5 years for more tests.
The most significant attribute of performance measures listed in Table VI is the reliability of success rate. We suppose that the relative stable profit of the long-term investments is expected.

The second experiment, shown in Table VII, was designed to prove the improvement of our proposed method for investment of a 24-month holding period. Referring to Figure 2, we found that the return reversal phenomenon was just in the beginning stage at that moment. The estimated average return of the traditional contrarian trading strategy in Table VII is 4.76%. The proposed learning methods can improve the accuracy and brought additional 20%  X  25% returns after holding the portfolios for two years.

Finally, we prepared an experiment to follow the idea of contrarian trading strategies for a one-year holding period under the same framework. It was previously suggested to do the momentum strategies. Sometimes, fund managers or investors are required to execute the special-purpose investment for hedge or other confidential reasons. The original return recorded in Table VIII, that is,  X 12 . 19%, was reasonable for a one-year holding period. The proposed dual classifier model could improve the system to obtain a positive return. In this article, we proposed a learning-based contrarian trading strategy via a dual-classifier model. We constructed this framework motivated by a return anomaly pro-posed by behavioral financial experts, which was called overreaction. The basic idea of this financial phenomenon is that the past winners and losers will have return reversal after a holding period of 24 to 36 months. It can be extended to a long-short trading approach (e.g., market neutral) to include the contrarian trading strategy.
However, with this strategy, the estimated accuracy of portfolio selection, the returns, and the reliability along the time domain are not qualified to be a practical trading system. Therefore, we proposed a novel learning framework which trained dual binary classifiers at the same time. The main goal of these classifiers is to extract stocks which have a higher probability to have the return reversal phenomenon and then to form the improved winner and loser portfolios. The divergence between these two portfolios, which are both selected by the machine learning techniques, is dramatically increased.
The major contributions of our proposed learning system are listed shortly. The learning target definition adopts the original contrarian trading strategy to label the selected candidates to form the winner positive, winner negative, loser positive, and loser negative training datasets. Then, the feature extraction processes adopted past return distribution, wavelet transformation, and technical indicators to represent the financial time-series data. Advanced learning algorithms, such as support vector ma-chine and AdaBoost, were adopted to form the output classifiers. The paired feature learning AdaBoost algorithm was also adopted in our system to solve small-sample learning problems.

Finally, we defined the accuracy and reliability measures to evaluate the perfor-mance of the original contrarian trading strategy and the proposed learning system with different settings. Various experiments proved that our system could improve the returns and enhanced the reliability under different experimental settings, such as different learning algorithms, longer/shorter holding periods, and different learning sample collection periods. There was another experiment to show the performance of the proposed learning system under different subsets of feature representation.
In summary, all the experimental results showed that the proposed methods could improve the contrarian trading strategy by constructing an effective trading system with novel machine learning techniques.

