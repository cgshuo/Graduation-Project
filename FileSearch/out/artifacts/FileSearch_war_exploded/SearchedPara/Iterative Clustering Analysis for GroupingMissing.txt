 Since Eisen et al. first used the hierarchical clustering method to find groups of coexpressed genes [16], numerous met hods have been studied for clustering gene expression data: self-organizing map [23], k -means clustering [24], graph-theoretic approach [25], mutual information approach [22], fuzzy c -means clus-tering [14], diametrical clustering [15] , quantum clustering with singular value decomposition [8], bagged clustering [9], CLICK [21], and GK [20]. However, the analysis results obtained by clustering methods will be influenced by missing values in microarray experiments, and thus it is not always possible to correctly analyze the clustering results due to the incompleteness of data sets. The prob-lem of missing values have various causes, including dust or scratches on the slide, image corruption, spotting problems [2, 5]. Ouyang et al. [3] pointed out that most of the microarray experiments contain some missing entries and more than 90 % of rows (genes) are affected.

To convert incomplete microarray exper iments to a complete data matrix that is required as an input for a clustering method, we must handle the missing values before calculating clustering. To this end, typically we have either removed the genes with missing values or estimated the missing values using an imputation prior to cluster analysis. Of the methods proposed, several imputation methods have been demonstrating their effectiveness in building the complete matrix of clustering: missing values are replaced by zeros [4] or by the average expression value over the row (gene). Troyanskaya et al. [2] presented two correlation-based imputation methods: a singular value decomposition based method (SVDimpute) and weighted K-nearest neighbors (KNNi mpute). Besides, a classical Expecta-tion Maximization approach (EMimpute) exploits the maximum likelihood of the convariance of the data for estimating the missing values [5, 3]. However, a common limitation of existing approaches for clustering incomplete microarray data is that the estimation of missing values must be calculated in the prepro-cessing step of clustering. Once the estimates are found, they are not changed during the subsequent steps of clustering. Thus badly estimated missing values during data preprocessing can deteriorate the quality and reliability of clustering results, and therefore drive the clustering method to fall into a local minimum; it prevents missing values from being imputed by better estimates during the iterative clustering process.

To minimize the influence of bad imputation, in the present study we devel-oped a method for clustering incomplete microarray data, which iteratively finds better estimates of missing values during clustering process. Incomplete gene ex-pression data is used as an input without any prior imputation. This method preserves the uncertainty inherent in the missing values for longer before final decisions are made, and is therefore less prone to falling into local optima in com-parison to conventional imputation-based clustering methods. To achieve this, a method for measuring the distance between a cluster centroid and a row (a gene with missing values) is proposed, along with a method for estimating the missing attributes using all available information in each iteration. in p -dimensional space into k disjoint and homogeneous clusters represented as C is the expression vector of the j -th gene over p -different environmental conditions or samples. A data point with some missing conditions or samples is referred to as an incomplete gene; a gene x j is incomplete if x jl is missing for  X  1  X  l  X  p , expression data set X is referred to as an incomplete data set if X contains at least one incomplete gene expression vector.

To find better estimates of missing values and improve the clustering result during iterative clustering process, in each iteration we exploit the information of current clusters such as cluster centroids and all available non-missing values. For example, a missing value x jl is estimated using the corresponding l -th attribute value of the cluster centroid to which x j is closest in each iteration. To improve the estimates during each iteration, the proposed method attempts to optimize the objective function with respect to the missing values, which is often referred to as the alternating optimization (AO) scheme. The objective of the proposed method is obtained by minimizing the function J m : where is the distance between x j and v i , is a vector of the centroids of the clusters C 1 ,C 2 ,...,C k , is a fuzzy partition matrix of X satisfying the following constraints, and is a weighting exponent that controls the membership degree  X  ij of each data point x j to the cluster C i .As m  X  1, J 1 produces a hard partition where  X  ij  X  { 0 , 1 } .As m approaches infinity, J  X  produces a maximum fuzzy partition where  X  ij =1 /k . This fuzzy k -means-type approach has advantages of differentiating how closely a gene belongs to each cluster [14] and being robust to the noise in microarray data [7] because it makes soft decisions in each iteration through the use of membership functions.

Under this formulation, missing values are regarded as optimization parame-ters over which the functional J m is minimized. To obtain a feasible solution by minimizing Eq. 1, the distance D ij between an incomplete gene x j and a cluster centroid v i must be calculated as: where
We differentiate the missing attribute values from the non-missing values in calculating D ij . The fraction part in Eq. 7 indicates that D ij is inversely pro-portional to the number of non-missing attributes used where p is the number of attributes.  X  jl indicates the confidence degree with which l -th attribute of x j contributes to D ij ; specifically,  X  jl =1if x jl is non-missing and 0  X   X  jl &lt; 1 otherwise. The exponential decay, exp(  X  t/ X  ), represents the reciprocal of the influence of the missing attribute x jl on discrete time t where  X  is a time con-stant. At the initial iteration ( t =0), w jl has a value of 0. As time t (i.e., the number of iterations) increases, the ex ponent part decreases fast, and thus w jl where initially x 13 is missing. Suppose that x 13 is estimated as a value of 0 . 52 tor, we see that x 13 participates in calculating the distance to cluster centroids less than the other three values because i t is now being estimated. Besides, the is improved by an iterative optimization.

Using D ij in Eq. 7, the saddle point of J m is obtained by considering the constraint Eq. 5 as the Lagrange multipliers: and by setting  X  J m =0.If D ij &gt; 0 for all i, j and m&gt; 1, then ( U, V )may minimize J m only if, and This solution also satisfies the remaining constraints of Eq. 5. Along with the optimization of the cluster centroids an d membership degrees in Eqs. 10 and 11, missing values are optimized during each iteration to minimize the functional J m . In this study, we optimize the missing values by minimizing the function J ( x j ) presented by [1]: By setting  X  J = 0 with respect to the missing attributes of x j , a missing value x jl is calculated as: By Eq. 13, x jl is estimated by the weighted mean of all cluster centroids in each iteration. At the initial iteration, x jl is initialized with the corresponding attribute of the cluster centroid to which x j has the highest membership degree.
This method iteratively improves a sequ ence of sets of clusters until no further improvement in J m ( U, V ) is possible. It loops through the estimates for V t  X  U of the algorithm can be done on U 0 , and the iterates become U t  X  V t +1  X  U +1 , with the termination criterion optimization using membership computation makes the present method be less prone to falling into local minima than conventional clustering methods. 3.1 Data Sets and Implementation Parameters To test the effectiveness with which the p roposed method clusters incomplete microarray data, we applied the proposed method and conventional imputation-based clustering methods to three published yeast data sets and compared the performance of each method.
The data sets employed were the yeast ce ll-cycle data set of Cho et al. [12], the yeast sporulation data set of Chu et al. [13], and the yeast Calcineurin-regulation data set of Yoshimoto et al. [11]. The Cho data set contains the expression profiles of 6,200 yeast genes measured at 17 time points over two complete cell cycles. We used the same selection of 2,945 genes made by Tavazoie et al. [24] in which the data for two time points (90 and 100 min) were removed. The Chu data set consists of the expression levels of the yeast genes measured at seven time points during sporulation. Of the 6,116 gene expressions analyzed by Eisen et al. [16], 3,020 significant genes obtained through two-fold change were used. The Yoshimoto X  X  Calcineurin data set contains the expression profiles of 6,102 yeast genes at 24 experiments by the presence and absence of Ca 2+ ,Na + ,CRZ1, and FK506. These three data sets were preprocessed for the test by randomly removing 5 X 25% (5, 10, 15, 20 and 25) of the data in order to create incomplete matrices.

To cluster these incomplete data sets with conventional methods, we first estimated the missing values using the widely used KNNimpute [2] and EMim-pute [5, 3]. For the estimated matrices yielded by each imputation method, we used EXPANDER [21] software that impl ements many clustering methods, of which we investigated the results of the k -means and SOM methods, along with the results of the bagged clustering (BagClust) [9]. In these experiments, the parameters used in the proposed method were =0 . 001, m =2 . 5, and  X  = 100. TheKNNimputewastestedwith K =10 , 15 , 20; these values were chosen be-cause they have been overwhelmingly favo red in previous studies [2]. In the tests reported here, we analyzed the perform ance of each approach at the number of clusters of k =5.
 3.2 Comparison of Clustering Performance To show the performance of imputation, most of imputation methods proposed to date, including KNNimpute and EMimpute, have examined the the root mean squared error (RMSE) between the true val ues and the imputed values. However, as Bo et al. pointed out [5], the RMSE is limited to study the impact of miss-ing value imputation on cluster analysis. To make this study more informative regarding how large an impact the imputation method has on cluster analysis, in the present work the clustering results obtained using the alternative impu-tations were evaluated by comparing gene annotations using the z -score [19, 5]. Besides, we analyzed the cluster qualit ies using the figure of merits (FOMs) for the relation between a clustering result and the functional annotation of the genes in the cluster. To achieve this, this score uses the Saccharomyces Genome Database (SGD) annotation of the yeast genes, along with the gene ontology developed by the Gene Ontology Consortium [17, 18]. A higher score of z indi-cates that genes are better clustered by function, indicating a more biologically significant clustering result.

Table 1 shows the clustering results of the KNNimpute/EMimpute-based clus-tering methods and proposed method for the yeast cell-cycle data set. The z -score of each method is listed with respect to th e percentages of missing values (5-25%). The number of neighbors in the KNNimpute was K =10 , 15 , 20. The k -means method using KNNimpute gave z -scores from 19.7% to 26.6%. The z -scores of the SOM using KNNimpute were ranged from 14.4 to 27.0. The BagClust using KNNimpute outperformed the other methods at 10% missing values. Compared to these methods, the proposed method pr ovided better clustering performance at low missing values; the z -scores were varied from 14.5 to 35.5. At 5% miss-ing value, it is observed that the proposed method showed its best z -score of 35.5. Of the other methods, the EMimpute-based SOM method provided the best z =18 . 1, whereas the BagClust method using KNNimpute yielded the best z =31 . 2at K = 15.

Table 2 shows the clustering performance of the KNNimpute/EMimpute-based clustering methods and proposed m ethod for the yeast sporulation data set. On the whole, the three KNNimpute-based clustering methods showed simi-lar tendency for all missing values. In comparison to these methods, it is evident that the proposed clustering method sho ws markedly better performance, giving z -scores of more than 34.0 for all missing values; it provided significantly better clustering performance than other methods, giving z =51 . 1at5%and z =46 . 7 at 10%. The best z -values of the KNNimpute-based and EMimpute-based meth-ods were z =2 . 2and z =1 . 8 at 5% missing value respectively.

Table 3 shows the clustering results of the KNNimpute/EMimpte-based clus-tering methods and proposed method for the yeast Calcineurin data set. The pro-posed method also gave improved and more stable performance compared to the imputation-based clustering methods, with z -scores of more than 70 for all miss-ing values. Of the conventional methods, the KNNimpute-based SOM method using K =10achieveditsbest z -scores of z =50 . 9and z =49 . 0at5%and 10% missing values respectively. From the three tests, we see that the proposed method is the most effective of the methods considered; it provides the highest z -value for most cases. The KNNimpute-base d clustering methods achieved better z -scores than the EMimpute-based methods; the KNNimpute-based BagClust showed better z -scores for the cell-cycle dat a set and the KNNimpute-based SOM for the Calcineurin data set.

Besides the assessment using the z -score, we quantified the clustering re-sult of each method using the figure of merit (FOM) that is an estimate of the predictive power of a clustering m ethod [26]. A lower value of FOM rep-resents a well clustered result, indicating that a clustering method has high predictive power. Table 4 lists the results of FOMs of six clustering methods for the yeast cell-cycle data set. Of the meth ods considered, the proposed method provides the lowest FOMs for 5-25% missing of data. The KNNimputed-based k -means method showed better FOMs than other methods for 15-20% of missing data, whereas the EMimpute-based SOM gave lower scores at 5% and 10% miss-ing. The KNNimputed-based BagClust proved the most ineffective of the meth-ods considered. The results of the comparison tests indicate that the proposed method gave markedly better clustering performance than the other imputation-based methods considered, highlightin g the effectiveness and potential of the proposed method. Clustering has been used as a popular technique for analysis of large amounts of microarray gene expression data, a nd many clustering methods have been developed in biological research. Howeve r, conventional clustering methods have required a complete data matrix as input even if many microarray data sets are incomplete due to the problem of missing va lues. In such cases, typically either genes with missing values have been removed or the missing values have been estimated using imputation methods prior to the cluster analysis. In the present study, we focused on the bad influence of the earlier imputation on the subse-quent cluster analysis. To address this p roblem, we have presented the proposed method of clustering incomplete gene expression data. By taking the alternative optimization approach, the missing values are considered as additional param-eters for optimization. The evaluation results based on gene annotations have shown that the proposed method is the superior and effective method for clus-tering incomplete gene expression data. B esides the issues mentioned in present work, we initialized missing values with the corresponding attributes of the clus-ter centroid to which the incomplete data point is closest. Although this way of initialization is considered appropriate, further work examining the impact of different initializations on clustering performance is needed.

