 The fast growth of technologies has driven the advancement of our society. It is often necessary to quickly grasp the link-age between different technologies in order to better under-stand the technical trend. The availability of huge volumes of granted patent documents provides a reasonable basis for analyzing the relationships between technologies. In this pa-per, we propose a unified framework, named PatentDom ,to identify important patents related to key techniques from a large number of patent documents. The framework inte-grates different types of patent information, including patent content, citations of patents, and temporal relations, and provides a concise yet comprehensive technology summary. The identified key patents enable a variety of patent-related analytical applications, e.g., outlining the technology evo-lution of a particular domain, tracing a given technique to prior technologies, and mining the technical connection of two given patent documents. Empirical analysis and exten-sive case studies on a collection of US patent documents demonstrate the efficacy of our proposed framework. Categories and Subject Descriptors: H.3.3[Information Storage and Retrieval]: Information Search and Retrieval Keywords: Patent Analysis; Patent Evolution; Dominat-ing Set; Steiner Tree; Center-Piece Subgraph
Technological innovation is becoming one of the impor-tant factors that stimulate the development of our society. Granted patents, as the major carrier for technology docu-mentation, have great potential to provide valuable insights of technologies. Analyzing patent documents enables us to effectively understand technological progress, comprehend the evolution of technologies and capture the emergence of new technologies [3, 6, 29].

One representative application of patent analysis involves that enterprises evaluate the prior art or technology evolu-tion of a specific technical field in the development of new products. To conduct such an analysis, a key step is to identify important patents from a large number of related patent documents, where these patents can represent domi-nating technologies in the corresponding technical field [18]. In addition, for a technology company who maintains a large number of patents, it is often time-consuming and costly to manually examine these patents to identify the important ones for further maintenance. Automatic discovery of key patents from patent collections is able to help improve the efficiency and reduce the cost of patent portfolio manage-ment. Further, connecting the dots between the identified key patents enables a variety of patent analysis tasks.
In this paper, we study the problem of mining dominat-ing technologies from a large collection of patent documents. Previous research efforts [8, 11, 21] tackle this problem via clustering or topic-based mining, where the key patents are essentially identified through content analysis. However, as a scientific means of technology documentation with legal significance and potential economic values, a patent docu-ment often has complex structures and special terminologies. The sophisticated patent language poses great challenges to automatic patent analysis, and hence it is difficult to identify key patents purely based on patent content.

In the domain of patent analysis, patent documents are often explicitly organized using citation links [9]. The cita-tion relations among patents documents provide good indi-cators for the importance of patents. Representative work involves [26, 27], which utilizes the co-citation relations of patent documents to identify key patents. However, cita-tions among patent documents are usually sparse, which may result in the technology gap, and consequently hinder the comprehension of dominating technologies.

To address the aforementioned issues, in our work, we ex-plore the possibility of integrating both patent content and citation relations in identifying key patents. To this end, we propose a unified framework, named PatentDom ,inwhich multiple types of patent-related information are employed, including the content and citation relations of patent docu-ments. The input to the system is a topic or a classification code relevant to a specific technical field. The system first retrieves all the patent documents related to the topic/code from a patent database. We then construct a multi-view patent graph in which patent content, citation relations and temporal orders are integrated. We model the problem of identifying key patents as a minimum-cost dominating set problem, and select key patents using an approximation al-gorithm. We further discover a list of patent-related prob-lems based on the identified key patents. These problems can be resolved by considering the temporal order of patent documents and connecting the dots between the key patents through graph-based algorithms.

To the best of our knowledge, our work is the first jour-ney towards unifying the process of understanding the link-age between different technologies in the domain of patent analysis, by considering both document content and citation relations of patents. In summary, the contributions of our work are three-fold:
The rest of the paper is organized as follows. Section 2 presents a brief summary of prior work relevant to key patent discovery. In Section 3, we formalize the problem and de-scribe the algorithmic details of our proposed framework. We then present several potential patent-related applica-tions and the corresponding solutions in Section 4. Em-pirical evaluation of our framework is reported in Section 5. Finally Section 6 concludes the paper.
Automatic key patent discovery is an emerging problem in the domain of patent analysis. In the past decades, a couple of interesting methods have been proposed to address this problem. Generally speaking, it is tackled by researchers from either content analysis or citation analysis. In the fol-lowing, we highlight the previous research that are most relevant to our work.

A patent document is often lengthy with rich content, consisting of descriptions, embodiments, claims, etc. These unstructured texts aim to depict the background of the in-vention, and describe the scope of protection conveyed by the invention. Based on the rich content, researchers iden-tify important patents by exploring the novelty or influence of patent documents. For example, Shaparenko et al. [21] assume that a document is novel and influential if it has fewer similar documents published before it, and has more similar documents published after it. Hasan et al. [8] analyze patent novelty from patent claims by considering the time difference between a keyword X  X  first appearance in patents and the issue year of the subject patent.

However, patents are often full of technical terms and am-biguous expressions. It is quite difficult to quantify the simi-larity of patent documents or discover the identity of patent keywords without the help of external resources. To alle-viate this issue, Hu et al. [11] propose a topic-based min-ing approach to quantify a patent X  X  novelty and influence, and report promising results of recognizing core patents. Nonetheless, their method is restricted by the latent prop-erty of topics, and hence it is difficult to provide appropriate explanation on the novelty/influence of patents.

Another direction of identifying key patents is to analyze the citation relations of patent documents. Representative work involves [26, 27], which utilizes the co-citation relations of patent documents to identify key patents. The method employs citation frequencies and the ages of patents to avoid overemphasizing  X  X lder X  patents. However, citations among patent documents are usually sparse, and sometimes it may result in the technology gap, which will hinder the compre-hension of dominating technologies in a technical field. Even if the citation links are not sparse, the identified key patents may belong to the same company/inventor, and hence the coverage of key patents is sacrificed.

Our work is different from the aforementioned approaches, as we consider both patent content and citation relations when identifying key patents. In addition, we model the problem of discovering key patents as a minimum-cost dom-inating set problem. The property of  X  X inimum dominating set X  provides the maximum coverage [13] of technologies in a technical field. In recent years, this concept has been ap-plied to other domains of information retrieval, e.g., docu-ment summarization [22] and storyline generation [16, 25], aiming to find dominating sentences from a large pool of documents. However, to the best of our knowledge, there is no research effort that applies the concept of dominating set to the patent domain. In additions, the identified three applications have real needs in patent analysis.
In the domain of patent analysis, it makes more sense to restrict the scope to a particular technical field. Hence, given a classification code related to a specific technical field, we initially retrieve all available patent documents under the code from a patent database. The problem of identifying key patents can be defined as follows:
Problem 1. Given a collection of granted patents D = { d 1 ,d 2 ,...,d n } , extract a subset of patents P  X  D ,where P = { p 1 ,p 2 ,...,p m } and each p i denotes a key patent that can represent the dominating technology within the patent col lection.

Problem 1 gives us a generic definition of key patents, which can be used to describe the general problems of key patent discovery. In some cases, patent analysts expect to obtain important patents with respect to specific queries, e.g., a set of query patents. Then Problem 1canberede-fined as follows:
Problem 2. Given a collection of granted patents D = { d 1 ,d 2 ,...,d n } and a set of query patents Q = { q 1 ,q extract a subset of patents P  X  D ,where P = { p 1 ,p 2 ,...,p and each patent p i is able to represent the dominating tech-nology related to the query set Q .
To address the aforementioned problems, we propose a unified framework, named PatentDom , which employs the minimum dominating set of a patent graph to represent the key patents. Specifically, we first construct a multi-view patent graph using the information of patent content, cita-tion relations and temporal orders of patent documents, and then identify dominating/influential patents from the graph. Taking Problem 1 as an example, we can assume that the extracted key patents should represent all the patent docu-ments (i.e., every patent in the collection should be relevant to the extracted patents in terms of technologies). In other words, these key patents serve as a brief summary of the entire patent collection. Meanwhile, the number of these patents should be as small as possible. Such a summary of the patent collection under the above assumption is exactly the minimum dominating set of the patent graph. We hence model the problems as a minimum-cost dominating set prob-lem, where the cost can be defined using different types of information, depending on the problem being solved. The framework is described in Figure 1.

As introduced in Section 1, the patent data consists of multiple types of information that shape the relations among patent documents. We use a multi-view graph G to represent these relations, where G =( V, w v ,E s , w s ,E ct , w ct
G contains a set of nodes/vertices (patent documents) V , where each node v  X  V is associated with a cost value w v and a timestamp t . In our problem setting, the cost w v can be defined using the information of patent content and/or citation relations. For example, to address Problem 1, the cost can be calculated as the inverse of the total number of citations of the corresponding patent document, as we expect the selected patent is more influential than others. When selecting dominating nodes, the total cost of selected nodes should be minimized.

In addition, the vertices are connected by two types of edges: E s and E ct . E s contains undirected edges, where each edge connects two patent vertices and the edge weight w s denotes the content proximity of connected vertices. For patent documents, it is often difficult to calculate the sim-ilarity/proximity, as there are a lot of domain-specific and ambiguous terms, and different patents may have their own writing styles. To this end, we extract the most significant section of patents, i.e., claims , since this section defines the major invention of patents and often has relatively sta-ble writing structures. We employ  X  X ag-of-words X  represen-tation and the cosine measure for proximity computation. Two vertices are linked if and only if the content proximity is greater than a predefined threshold  X  . In our proposed framework, E s is used for dominating patent selection.
Another set of edges, E ct , are directed edges, where each edge represents either the citation linkage between two ver-tices, or the temporal order of two vertices. Two vertices form a temporal link if and only if they do not have a cita-tion link and their respective timestamp difference falls into a predefined time range [  X  1 , X  2 ]. For simplicity, we assign a unit value 1 to the weight of edges E ct , i.e., w ct =1. E serves to connect the selected dominating patents for specific patent applications. For example, to outline the technology evolution of a particular technical field, we can employ E to generate an evolution tree of dominating patents. Details can be found in Section 4 for different applications.
Our goal is to detect the patent documents with repre-sentative power, or say, dominating/influential patents. To this end, we define the problem on the undirected part, i.e., ( V, w v ,E s , w s ), of the multi-view graph introduced in Sec-tion 3.1. Specifically, given the graph G ,a dominating set of G is a subset S of vertices with the following property: each vertex v  X  V is either in the dominating set S ,orisadjacent to some vertices in S .Notethatin G , each vertex has a cost with respect to specific applications. The problem of finding a set of dominating patent documents can be formulated as the minimum-cost dominating set problem [5, 22].

Problem 3. Given a graph G =( V, w v ,E s , w s ) and a budget L , the problem of minimum-cost dominating set (MCDS) is to find a dominating set S , with size L , of vertices in whose total vertex cost is the minimum.

The MCDS problem is closely related to the problem of minimum dominating set (MDS). The vertex cover problem, which is known as an NP-hard problem, can be reduced to the MDS problem.

Reduction . Given a connected graph G =( V,E ), we replace each edge of G by a triangle to create another graph G =( V ,E ). In G , V = V  X  V e where V e = { v e E } ,and E = E  X  E e where E e = { ( v e i ,v k ) , ( v e i ,v ( v k ,v l )  X  E } . Such a transformation can be viewed as sub-dividing each edge ( u, v ) by the addition of a vertex, and adding an edge directly from u to v .

Assume G has a vertex cover S with size K ,then S forms a dominating set in G .Aseachvertex v has at least one edge ( v,u ), and u must be in the cover if v is not. Since v is adjacent to u ,then v has a neighbor in S .

For the reverse direction, assume that G has a dominating set S with size K , which only contains vertices from the vertex set V .If v e i is selected in S , then we can replace it by either v k or v l , without increasing the size of S .Wenow claim that S forms a vertex cover. For each edge e i , v e must have a neighbor (either v k or v l )in S .Thisneighbor will cover the edge e i , and thus the dominating set in G avertexcoverin G .

It has been shown that no algorithm can achieve an ap-proximation factor better than c log | V | for some c&gt; 0 [13]. However, we can obtain a greedy approximation for MCDS, as shown in Algorithm 1. Starting from an empty set, if the current subset of vertices is not the dominating set, a new vertex with the minimum averaged cost (with respect to its neighbor size) and not adjacent to any vertex in the current set will be added. In other words, the cost of the new ver-tex can be evenly shared by its neighbors. Such a greedy algorithm provides a factor of 1 + log | V | approximation of MCDS [20].
 Algorithm 1: Approximation of MCDS.
 Input : G =( V, w v ,E s , w s ): undirected patent graph
Output : minimum-cost dominating set S 1 S  X  X  X  ; T  X  X  X  2 while | S | &lt;L do 3for v  X  V  X  S do 4 s ( v )= |{ v | ( v ,v )  X  E s }\ T | 6 S = S  X  X  v  X  } ; T = T  X  X  v | ( v ,v  X  )  X  E s } 7return S
By Algorithm 1, we can obtain a set of dominating patents related to the specific technical field, with the limit of a pre-defined dominator number L . Note that in Algorithm 1, cost ( v )representsthevalueof w ( v ), i.e., the cost of the ver-tex v . It may be related to the citation relations as indicated in Problem 1, or relevant to the query set as indicated in Problem 2.
The identified dominating patents from Section 3.2 enable a list of patent-related applications. In this section, we will discuss these applications from the perspective of connecting the dots between dominating patents.
The first application is named as PatentLine , aiming to discover the technology evolution tree of a particular tech-nical field. This problem has recently attracted increasing interest in the information retrieval community. Most ex-isting approaches focus on identifying evolutionary topics in scientific literatures [1, 2] by making use of vector space model or LDA-alike topic models. Some recent work fur-ther tries to analyze the roles of linkage analysis (e.g., the co-authorship [30] or citation analysis [9]) in topic detection and evolution. However, these existing methods cannot be simply applied to our problem setting of generating an evo-lutionary tree of patents. In addition, the characteristics of patent domain (e.g., lengthy and ambiguous description, full of technical terms) render these methods ineffective in generating patent evolution tree.

The dominating patents obtained from dominating set ap-proximation are capable of representing the rest of patents in the graph in terms of content proximity and citation in-fluence. Note that when utilizing Algorithm 1 to identify dominating patents, the cost of a vertex, i.e., cost ( v ), is de-fined as the inverse of the total number of citations of the corresponding patent document, as we expect the selected patent is more influential than others. However, there might be some technical gaps among these patents, that is, they may not be well connected. In order to provide a fluent structure of patent documents, e.g., a patentline, we have to find ways to link them together. Also, for presentation pur-pose, the generated structure of patent documents should be as dense and informative as possible, i.e., to include the minimum number of patents or have the maximum influence over other options.

Based on our previous work [28], we utilize the directed part, i.e., ( V, w v ,E ct , w ct ), of the multi-view graph intro-duced in Section 3.1. The procedure is depicted in Figure 2.
We formulate the problem as the minimum-cost Steiner tree problem. Given a graph G and a subset of vertices S , a Steiner tree of G is similar to minimum spanning tree, de-fined as the subtree of G that contains S with the minimum total cost. In our problem setting, the total cost is defined as the sum of vertex cost of the entire Steiner tree.
Problem 4. Given a graph G =( V, w v ,E ct , w ct ) , a ver-tex set S  X  V (terminals) and a vertex v 0  X  S from which every vertex of S is reachable in G , the problem of minimum-cost Steiner tree (MCST) is to find the subtree of G rooted at v 0 that subsumes S with minimum total vertex cost. Algorithm 2: Steiner i ( G ,S,v 0 ,k ) Input : G =( V, w v ,E ct , w ct ): directed patent graph
Output : T : a Steiner tree rooted at r 0 covering at 1 T  X  X  X  2 while k&gt; 0 do 3 T opt  X  X  X  ; cost ( T opt )  X  X  X  4for v , ( v 0 ,v )  X  E ct ,and k , 1  X  k  X  k do 5 T  X  Steiner i  X  1 ( G ,S,v,k )  X  X  ( v 0 ,v ) } 6if ( cost ( T opt ) &gt;cost ( T ) ) then 8 9 T  X  T  X  T opt ; k  X  k  X  X  S  X  V ( T opt ) | ; 10 return T
The problem of MCST, a directed version of the Steiner tree problem, is known as an NP-hard problem [14]. As sug-gested by [4], a reasonable approximation can be achieved by finding the shortest path from the root to each terminal and then combining the paths, with the approximation ra-tio of O (log 2 k ), where k is the number of terminals. The approximation algorithm is described in Algorithm 2. The algorithm employs a recursive way to generate the Steiner tree T . It takes a level parameter i  X  1. When i =1, Steiner 1 is simple to describe, i.e., to find the k terminals which are the closest to the root v 0 and connect them to v using shortest paths. As i&gt; 1, Steiner i repeatedly finds a vertex v adjacent to the input root of the i -th function and anumber k such that the cost of the updated tree is the least among all the trees of this form. After obtaining the expected path, we update the corresponding Steiner tree, the target size k and the terminal set S .

The generated Steiner tree of the patent graph gives us an elegant representation of patent evolution, which describes the transitions from the root patent to all the other domi-nating patents. Once the Steiner tree is generated, we can easily obtain a concise summary for each patent in the tree by applying document summarization techniques [15].
The second application is called PatentTrace ,whichaims to trace a given patent document back to its ancestors to examine what techniques that the given patent utilizes. This problem is relatively new in the domain of patent analysis. One major issue of modern patent documents is the growing complexity of the involved tasks, i.e., a single patent may contain a list of procedures and involve a lot of technologies. For such inventions, one may often need multiple research teams to develop different processes, and various inventions may be interlinked. Hence, to ease the understanding of patent analysts, it is imperative to identify key techniques related to the patent being investigated, and represent them in an informative manner.

To tackle this problem, we rely on the identified domi-nating patents based on the framework of PatentDom .The procedure of PatentTrace is described in Figure 3. Given a patent document as a query q , we first utilize Algorithm 1 to discover dominating patents based on the undirected part of the multi-view patent graph introduced in Section 3.1. Here we expect that the dominating patents are not only relevant to the query patent, but also reflect the important technologies. Hence in Algorithm 1, the cost of a vertex, i.e., cost ( v ), should be defined in a way different from the one introduced in Section 4.1. To this end, we consider both content and citation relations of patent documents, and define cost ( v )as where the numerator denotes the content distance between the query patent q and the node v , and the denominator represents the citation count of the patent v . The similarity between patents is calculated using the content from claims , as indicated in Section 3.1. By Eq.(1), we expect to select the patents with content similar to the query patent, as well as with more citations to represent its influential power.
After identifying a list of dominating patents related to the given query, the next step is to connect these patents in order to provide a fluent trace from the query back to its ancestors. Some of the identified key patents may have a timestamp later than the one of the query patent, and hence they cannot be included in the final trace. To this end, we employ the directed part of the multi-view patent graph. Starting from the query node, we iteratively reverse the di-rected edges, and remove the nodes later than the query node, as well as the edges with opposite directions. The re-sulted subgraph G  X  serves as the basis for trace generation.
Similar to PatentLine , we formulate the problem of trac-ing a patent to its ancestors as the minimum-cost Steiner tree problem. We then utilize Algorithm 2 to form the trace. The input is slightly different from the one in Section 4.1. v as the root of the Steiner tree, is the query patent q .Theter-minal set S contains the dominators that are reachable from v in the subgraph G  X  . The generated Steiner tree presents an informative representation of patent trace, which vividly describes the related ancestor technologies with respect to the query patent. Similar to PatentLine , we can generate a concise summary for each patent in the tree by applying document summariza tion techniques.
The third application is named as PatentLink , aiming at discovering the potential relations between two patent documents. Given two patents p 1 and p 2 from different time periods, where p 1 is published earlier than p 2 , they may not connect directly through citation relations. However, it is possible that p 2 is an implicit extension of p 1 in terms of technologies, or an application of the techniques described in p 1 . Such latent connections are valuable for companies to design the corresponding product strategy. To the best of our knowledge, this problem has not yet attracted any research attention in the domain of patent analysis. To address this problem, we first utilize the framework of PatentDom to identify dominating patents. Given a query set Q = { p 1 ,p 2 } , we discover the dominating patents relevant to Q using Algorithm 1. The calculation of vertex cost is similar to Eq.(1). The only difference is the similarity score, which is computed as the averaged similarity between the vertex and the query patents.

The key patents are able to help connect the two query patents. However in the multi-view patent graph, multiple paths may exist between the given query patents. The chal-lenge here is how to identify important paths in order to de-pict the strong connection between queries. In other words, how to find the nodes that are the center-piece, and have direct or indirect connections to all the query nodes? To this end, we employ the so-called center-piece subgraph [23, 24] and apply it to the direct part of the multi-view graph. We expand the query set Q by adding all the dominators falling in between the time period from p 1 and p 2 .Bydoing this, the generated center-piece subgraph is able to show how the two patents are connected through leading technologies. The procedure is shown in Figure 4.

The algorithm CEPS described in [24] for generating center-piece subgraph involves three steps: (1) calculating individ-ual goodness score for a single node with respect to each query node; (2) combining individual scores to obtain the goodness score for a single node with respect to the query set; and (3) extracting a connection subgraph maximizing the goodness criteria. The individual goodness score can be calculated using random walk with restart. Given a query p , a random particle starts from p i , and then iteratively transmits to its neighborhood with the probability propor-tional to the edge weight between them, and also at each step, it has some probability c to return to the node p i R be the matrix containing the probability that the particle will finally stay at node p i , then the matrix form of random walk calculation can be represented as where E =[ e i ]( i =1 ,..., | Q | ), and each e i is the unit query vector with all zeros except one at row p i .Noticethatin our problem setting, we expand the query set by including appropriate dominators, and hence the corresponding domi-nators X  entries are 1. W is the normalized adjacency matrix. Detailed procedure can be found in [24].
In this section, we provide a comprehensive experimental evaluation to show the efficacy of our proposed framework PatentDom . We start with an introduction to the patent collection used in the experiment. To validate the proposed framework, we compare our method with other existing so-lutions of identifying key patents. We further present several case studies to show the efficacy of the approaches for dif-ferent applications.
The data set used in our experiment is obtained from the State Intellectual Property Office of the P.R.C (SIPO) containing 16,518 US granted patents under the section G (physics), whose filing dates are ranging from 2001 to 2012. It covers three sub-domains, including patents related to data processing system (G06Q 10/00), photomechanical pro-duction (G03F 7/00), and optical operation (G02F 1/00). The statistics of the data are depicted in Table 1. Under each patent code, there are a list of major patent groups, and each group contains at least 250 patents. Note that there is no standard patent data set that provides the ground truth of important patent documents with respect to a domain. Hence, for evaluation purpose, we ask patent analysts to manually select at least 20 key patents for each patent group as the ground truth.

To conduct the experiment, we extract the title, claims, ci-tations and publishing timestamp of each patent document, and preprocess the content using natural language process-ing techniques, such as removing stop words, tokenizing, and http://english.sipo.gov.cn. stemming. The content of each patent is represented as a term vector, and the content proximity of patents is calcu-lated using the cosine similarity for the purpose of similar-ity calculation. The citation relations are restricted in the patent collection.
In PatentDom , to construct the multi-view patent graph, we empirically set the content proximity threshold  X  as 0.2, and the time range as 3 months. To evaluate our proposed framework, we implement three existing methods of identi-fying key patents as the baselines:
The problem of identifying key patents is essentially a re-trieval problem. For each method and each patent group, we rank and select top@10, top@30, top@50 patent documents based on its corresponding ranking criterion, and compare the results with the ground truth provided by patent ana-lysts. For comparison, we compute the averaged precision, recall and F1-score of the entire 28 patent groups. The re-sults are reported in Table 2.
 As depicted in the table, our proposed framework, Patent-Dom , achieves the best performance compared with other baselines in terms of the precision, recall and F1-score. Espe-cially for the recall, it significantly outperforms other meth-ods. This is very valuable as the retrieval in the domain of patent analysis is a recall-based task. It is extremely important to have a higher recall in order to reduce the hu-man efforts as well as to lower the risk of missing important patent documents.

We further examine the details of the results by inves-tigating the content as well as citations of patent docu-ments. Based on the analysis, we observe that PatentDom presents important patents of different time periods, and significance at p&lt; 0 . 01 .) these patents are able to cover the dominating technologies in the corresponding domain without too much interlinking. Compared with PatentDom , the baselines provide partial or unreasonable key patents:
Validating the efficacy of our proposed solutions to the three applications is a subjective process, as it is difficult to obtain annotated ground truth. We hence resort to case studies on the collected patent data. All the cases used in this section are reviewed by domain experts and are con-firmed to be effective.
PatentLine presents a way to explore the technology evo-lution of a specific technical field. To evaluate the efficacy of PatentLine , we perform a case study on a collection of patent data. The major international classification code of the patent data is  X  X 06Q 10/00 X , representing the topic of  X  X ata processing systems or processes for administration and management of an organization, enterprise or employees X . This code includes 5 sub-domains, and their descriptions are shown in Table 3.
 Table 3: The description of patent classification. Code Description #ofPatents G06Q 10/02 Reservations, e.g., meetings 288 G06Q 10/04 Forecasting or optimization 341 G06Q 10/06 Workflow management 404 G06Q 10/08 Inventory management 534 G06Q 10/10 Office automation 811
We run Algorithm 1 (limiting the number of dominators to be 10) and Algorithm 2 on the generated multi-view patent graph, and the resulted Steiner tree is demonstrated in Fig-ure 5, organized by the temporal order of patents. For rep-resentation purpose, we only list the keywords that are con-tained in the title of patents. The bold rectangles denote the dominators identified by Algorithm 1. The X -axis de-scribes the publishing dates of the patents. As observed in Figure 5, X  X anagement X  X n X  X 06Q 10/00 X  X tarts from manip-ulating data, as described in the first dominator, and then can be decomposed into several subtopics. The line labeled as 1 mainly describes meeting scheduling, which is related to  X  X 06Q 10/02 X . The lines of 2 and 3 include production workflows and optimizing project, etc., which correspond to  X  X 06Q 10/06 X  and  X  X 06Q 10/04 X , respectively. The path labeled as 4 depicts some techniques of inventory and ser-vice management, which is relevant to X  X 06Q 10/08 X . These three evolution paths give us a general understanding of how technologies evolve with respect to the corresponding cate-gories. These results have been reviewed and assessed by domain experts.

One interesting phenomenon in Figure 5 is the path of 5 , which describes the technologies of health care management, such as medical intelligence, patient treatment, etc. From Table 3 we cannot find a mapping between this topic and the available codes. We further check the detailed assignments of classification codes to the patents along this line, and find that besides  X  X 06Q 10/00 X , the patents are all assigned to the code  X  X 06Q 50/00 X , which includes the classification of health care and patient record management. It somehow in-dicates that  X  X 06Q 50/00 X  is more suitable to these patents rather than  X  X 06Q 10/00 X . The analysts may be able to obtain more insights by using our proposed framework.
PatentTrace formalizes the problem of tracing back a given technology/patent. The purpose is to trace a given patent document back to its ancestors to investigate what techniques that the given patent utilizes. To validate the proposed solution for this problem, we use the patent data under the internatio nal classification code of X  X 02F 1/1335 X , which represents the structural association of optical de-vices, e.g., polarisers and reflectors. The data contains 3,080 patent documents. The query patent used in this case study is US8269915, which is related to a type of liquid crystal dis-play apparatus (LCD), and was filed in 2008. Our goal is to examine what techniques are adopted in this product and how these techniques evolve to the product.

We treat US8269915 as a query and run the query-focused version of Algorithm 1 (limiting the number of dominators to be 20). We then run Algorithm 2 on the generated multi-view patent graph. The resulted back tracing Steiner tree is demonstrated in Figure 6. Similar to the case study of PatentLine , we only list the keywords of the title of patents for each patent document. The bold rectangles denote the dominators identified by query-focused MCDS. The X -axis represents the filing dates of patents.

This type of LCD contains two major components, i.e., the display and optical components. Our proposed solution to PatentTrace has successfully identified these two compo-nents (as depicted in Figure 6). For the display component, it involves polarized lighting plate (as indicated in the line of 2 ) and color filtering array (described by the line of 1 ). For the optical component, it consists of three major de-vices, i.e., optical film ( 3 ), prism sheet ( 4 ), and back-light unit ( 5 ). The figure outlines the major constituent parts of LCD, and describes how related techniques evolve to the corresponding components. For example, as indicated by line 3 , the function of the optical film was originally ful-filled by birefringent retardation film, and then changed to reflective optical sheet, and finally laminated optical film. These results have been validated by patent analysts.
In practice, the linkage between two technologies is often achieved by technology evolution or technology application. The goal of PatentLink is to discover the details of evolution or application, in which the identified key patents serve to the ties that bind the technologies together. This would be very helpful for patent analysts to effectively understand the linkage between technologies.

To validate the efficacy of our solution to PatentLink ,we present a case study on a collection of patent documents under the international classification code of  X  X 03F 7/00 X , which represents the photomechanical production of tex-tured or patterned surfaces. This data set contains 2,922 granted patents. We try to find the linkage between the patents US7771916 and US8053172. The former describes a polymerizable composition, which was filed in 2004; the latter proposes a method of forming a photoresist pattern using the photoresist composition, which was filed in 2008. The polymeriable composition is not directly used in the latter patent.
 The experimental setup is similar to the one of Patent-Trace . The resulted center-piece subgraph is depicted in Figure 4. There are 4 dominators falling in between the fil-ing time period of the two query patents. With the help of patent analysts, we can identify several interesting paths that reflect the technology evolution/application. For exam-ple, the path of the dotted line indicates how the technique of polymerizable composition evolves to the one of photresist composition, connected by the technique of photolithogra-phy in 1 .
In this paper, we study the problem of identifying domi-nating technologies using granted patent documents. Based on the analysis of domain characteristics of patents, we pro-pose a unified framework, called PatentDom , to detect key patents from a large number of patents in a structural way. We formulate the problem as the minimum-cost dominat-ing set problem, and employ graph-based optimization ap-proaches to solve this problem. We further present po-tential applications of the proposed framework, including outlining the technology evolution of a particular domain ( PatentLine ), tracing a given technique to prior technolo-gies ( PatentTrace ), and mining the technical connection of two given patent documents ( PatentLink ). Simple yet ef-fective graph-based approaches are proposed based on the identified key patents as well as the requirements of the cor-responding applications. Extensive empirical evaluation and case studies on a collection of US patents demonstrate the efficacy and effectiveness of our proposed framework.
In our proposed framework, the cost of a vertex (patent) is defined based on the content and citation counts of the corresponding patent. It is interesting to extend it using external resources, such as patent examination results [10], patent maintenance decisions [12], and court judgments [17]. These resources explicitly indicate the relative importance of the patents, and hence are helpful to refine the definition of the cost. Further, to construct the multi-view patent graph, we utilize the content from claims to calculate the simi-larity. Due to the complex structure of patent documents as well as the diverse writing styles, the similarity may not represent the actual proximity between patents. We plan to explore semantic methods to improve the rationality of the edge weight in the undirected part of the graph.

The three applications introduced in Section 4 are all ex-ploratory studies. In the domain of patent analysis, these applications are able to help patent analysts quickly identify the expected information without too much human effort, and make the corresponding decisions. It is worthy to pro-vide quantitative measures to evaluate the generated results based on the requirement of the applications. In addition, we also plan to discover more applications/problems that can be solved using the dominating patents identified by PatentDom . Further, to ease the understanding, an interest-ing direction is to explore ways of visualizing the generated tree/graph based structures of patent documents.
 The work was supported in part by the National Science Foundation under grants D BI-0850203, CNS-1126619, and IIS-1213026, the U.S. Department of Homeland Security un-der Award Number 2010-ST-06200039, the U.S. Department of Homeland Security X  X  VACCINE Center under Award Num-ber 2009-ST-061-CI0001, and the Army Research Office un-der grants W911NF-10-1-0366 and W911NF-12-1-0431.
