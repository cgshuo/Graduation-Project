 Yen-Hsiang Chen, Kai-Ti Hu, Shanq-Jang Ruan n 1. Introduction beings from images or videos. In the developing surveillance system, skin color information has been applied to support the well-known functions, including object detection ( Nguyen et al., 2006 ; Lee et al., 2007 ; Dou and Huang, 2011 ; Huang, 2011 ), object tracking ( Lee and Kim, 2007 ; Zhang et al., 2009 ), and object recognition ( Stergiopoulou and Papamarkos, 2009 ; Jafri and
Arabnia, 2009 ; Chaves-Gonzalez et al., 2010 ). Object detection is a basis function responsible to determine the target region in the general video surveillance system. For example, face detection method usually uses skin color as the key feature to detect human X  X  face ( Nguyen et al., 2006 ). Besides, skin color is an indispensable cue to filter out some naked images from obscene web sites ( Lee et al., 2007 ). Object tracking function is applied to track objects in the video surveillance system. Based on the skin color model and the facial shape measurement, the face tracker shows the robustness in the presence of background clutter or illumination changes ( Lee and Kim, 2007 ). Hand gesture tracker also performs skin color probability model to estimate the state of pixels for human computer interaction ( Zhang et al., 2009 ). Object recognition is more advanced than the basic object detection in intelligent surveillance systems. Its well-known application is hand gestures recognition for human machine interaction. One of the simple ways for this task segments skin color with performing backpropagation neural network ( Stergiopoulou and
Papamarkos, 2009 ). On the other hand, face recognition method searches for target actions and skin cues by the reference of a face database ( Jafri and Arabnia, 2009 ; Chaves-Gonzalez et al., 2010 ). common preprocessing step to many image processing applica-tions, such as evaluation of skin cancer risk ( Kim et al., 2006 ), image-based translucency control ( Tsumura et al., 2008 ), color correction of display device ( Wang and Liu, 2009 ), image stega-nography ( Cheddad et al., 2009 ), color calibration ( Iyatomia et al., 2011 ), and many others. Skin detection plays a critical role to estimate the probability of excess incidence for skin cancer from space radiation exposure ( Kim et al., 2006 ). The reproduction of posters, TV commercials, and movies usually relies on the image translucency control, which includes changing the translucency of the skin for the component ( Tsumura et al., 2008 ). When the human is captured to the image or video, the corresponding quality can be easily enhanced by reproducing the preferred skin color ( Wang and Liu, 2009 ). For steganography approach, skin tone detection is applicable in concealing the very existence of data in the transmission medium ( Cheddad et al., 2009 ). Color calibration method also detects skin color for melanoma diag-nosis in dermoscopy images ( Iyatomia et al., 2011 ). of color space is the primary step ( Hiremath and Danti, 2006 ; Kakumanu et al., 2007 ).Themostavailableimageformatsusually use the RGB color space in consum er devices. After performing linear or non-linear transformation from this default space, other color models can be obtained to decouple the achromatic and chromatic information. Since the skin color differs more in intensity than in chrominance, one common practice of skin detection is to drop the achromatic component an d to provide robust parameters from chromatic information. Therefore, the transformed color space is usually more applicable than the RGB space due to the perceptual features of color (such as hue and saturation).

Typically, image processing algorithms are described in a high-level specification language. Therefore, the corresponding hard-ware implementation is not an easy task ( Jerbi et al., 2010 ). When complex algorithms developed by the high-level language run on a handheld device, energy consumption and memory space are both demanding to reduce the applicability ( Liang et al., 2010 ; Islam et al., 2010 ; Sathappan et al., 2011 ). For convenience to design the image processing algorithm, hardware/software co-design is a well-known technique, which keeps advantages of hardware implementation with the efficient development ( Moon et al., 2005 ). In order to simplify the computational complexity, statistical method is popularly applied to find the key features of images ( Ye et al., 2011 ). This paper focuses on the low cost skin color model for efficient applications. Therefore, the default RGB color space must be directly used without color transformation. Compared with other skin color models using transformed color spaces, the proposed skin model can be easily performed by hardware implementation after analyzing the plenty of statistics.
The rest of this paper is organized as follows: Section 2 describes several skin color models based on various color spaces. Section 3 proposes the new skin color model and one embodi-ment of the face detection with hardware implementation. Section 4 presents the experimental results and discussion. Finally, the conclusion of this paper is provided in Section 5 . 2. Related works
RGB-based skin detection : Based on a Cartesian coordinate system, the default RGB color space features a three-dimensional cube with red, green, and blue at the corners on each axis. The earlier method normalizes this space to detect skin since the color information is very sensitive to brightness ( Park et al., 2000 ). The normalization of RGB color space is expressed as follows: I nor  X  I = S I ,  X  1  X  where I nor is the normalized image, I is the original image, and S I is the summation of all components per pixel. The pixels of skin color are detected within the interval [0.36 0.465] for normalized red component and [0.28 0.363] for normalized green component.
HSV-based skin detection : HSV color model includes hue ( H ), saturation ( S ) and value ( V ) used to describe color, in which humans experience and describe color sensations. The RGB color model can be converted to HSV model by the following equations: H  X  S  X  V  X  L b ,  X  4  X  performing HSV color transformation, skin pixels fall within the ranges of 0 r H r 50, 0 : 20 r S r 0 : 68, and 0 : 35 r V r 1 : 0( Wang and Yuan, 2001 ).

YCbCr-based skin detection : Digital video systems usually use the YCbCr color space, which includes luminance component ( Y ) and chromatic or pure color components ( Cb and Cr ). This color space is separated from normalized RGB by the following trans-formation: Y Cb
Cr 2 6 4
According to the literature ( Hiremath and Danti, 2006 ), the segmentation of skin pixels can be performed by using the chromatic red and blue component values ( Cr and Cb ). For each detected skin pixel, the values fall within the ranges of 97 : 5 r Cb r 142 : 5 and 134 r Cr r 176 ( Hiremath and Danti, 2006 ). 3. Proposed method
In this section, we use the default RGB color space to develop a very efficient skin detection method. In order to avoid transform-ing a large number of color information, the proposed method directly calculates the difference between each color component. Furthermore, the area and computational cost of the hardware implementation for the proposed method can be significantly reduced without performing floating point operations. Based on the proposed skin detection method, one embodiment of face detection is also proposed with the hardware implementation to describe the applicability. 3.1. Skin detection
For the simplification of computational complexity, statistical method is popularly applied to search image features. In fact, this work also analyzes the plenty of statistics to segment the skin information. We use several images to train database encom-passed the skin tones of people with different ethnicities and backgrounds.

Fig. 1 shows the three-dimensional (3D) RGB cube and the corresponding two-dimensional (2D) sides of skin pixels, which are extracted from several sample images. It is easily observed that skin color features can be limited in specific interval among red, green, and blue color components. According to Combinato-rics, the 3D skin cube can be represented as three 2D sides applied for evaluation. However, the distribution and probability of color features are still hard to be analyzed between two components shown in Fig. 1 (b) X (d). Therefore, we simply calculate the differ-ence to represent each side of the skin cube. The sub-space of each side can be expressed as follows: where I represents the input image, sR , sG , and sB are three sub-spaces of RGB color model.
 the 3D skin cube can be easily calculated as three 1D histograms displayed in Fig. 2 . Compared with the previous RGB-based skin detection method, the proposed method is more intuitive to effectively extract the skin pixels. The skin cluster region can be delineated by the threshold of boundaries. According to our statistics of data, the skin pixels fall within the following ranges of 142 o sR o 18, 48 o sG o 92, and 32 o sB o 192. 3.2. Face detection detection method, we also present one embodiment based on our skin color model for face detection. In addition to skin features, we also detect the lip feature in the calculated sub-space.
Empirically, lip pixels fall within the following ranges of also evaluated by the corresponding probability density similar to Fig. 2 .
 system. Image input is captured by a camera and stored in the memory unit, which is 128 kB and can hold an 800 480 image.
There are 384,000 pixels in a frame and the representation of each pixel is 8 bits per RGB channel.
 of sequential rows. Row has cells to store each pixel value. This memory unit stores the entire image. The Memory1 is write memory section and the Memory2 is read memory section. The memory is split into two sections of write/read memory. Write memory stores the image pixels waiting for processing and the processed image is stored in the read memory section. The input data is connected to the write memory and the output data path is through the read memory. Accordingly, it can reduce access time. 255 G B
Since the proposed system is performed with modulization, the computing engine unit is easy to be efficiently implemented in terms of hardware design. The proposed method consists of three main stages. The first stage is to find out the skin and lip in an image. The detected features can be enhanced by using traditional morphology operations in the second stage. Finally, the face of the image can be detected in the final stage at each frame.

The sub-space is generated with a large amount of data. Due to the memory limitation, this model cannot be easily analyzed by the hardware design. Therefore, the proposed system directly includes the register skin features and the register lip features, which are extracted from statistical technique. In other words, the evaluated color features are directly stored in the registers instead of hardware computation. As shown in Fig. 4 , the color features can be efficiently detected by using very few number of logic gates.

Fig. 5 shows the proposed architecture which indicates that each line buffer inputs binary values to three registers in parallel for computing. In general, array operation of the mathematically morphology is hard to implement in the hardware design. In order to implement the 3 3 array operation with morphology operation, the proposed architecture includes three line buffers (LB1, LB2, and LB3) applied for color features units. The OP contains AND operation (erosion operation) and OR operation (dilation operation). The P1 X  X 9 are the registers that stored the binary value from the line buffers and each line buffer is 24 bits.
The proposed system also includes two buffers and one matching comparator for face detection shown in Fig. 6 . Based on color features and morphology operation units, the binary values of skin features and lip features can be generated, after which the Skin Buffer and the Lip Buffer store the minimum and maximum coordinate values of skin features and lip features, respectively. Furthermore, the matching comparator compares these features to find out the face location. Finally, the matching comparator outputs matching location to memory unit for face detection. 4. Experimental results
This section presents a comprehensive comparison between our method and other related methods. We compare the accuracy of the skin detection by perceptive estimation and quantitative measurement. Furthermore, the extended application of face detection based on the proposed skin color model is also tested by hardware implementation. 4.1. Accuracy of skin detection
Fig. 7 shows 100 tested color images, the ground truth of skin regions (GT), and the binary masks generated by each skin detection method. We obtain the 100 static images from the Internet. The tested images include different contrasts and illu-minations. Besides, the color distribution of skin is significantly affected by the various ethnicities, genders, and ages of people.
In order to make an objective evaluation, we divide the missing classification into two False Positives (FPs) and False Negatives (FNs). FPs mean that  X  X  X kin pixels X  X  exist in the detection mask, but  X  X  X on-skin pixels X  X  are classified to the corresponding locations in GT. In contrast, FNs mean that  X  X  X on-skin pixels X  X  exist in the detection mask, but  X  X  X kin pixels X  X  are classified in GT. After calculating FPs and FNs, the quantitative evaluation can be performed by False Negative Rate (FNR) and False Positive Rate (FPR). Let # fg be the set cardinality, FNR and FPR are expressed as follows: FNR  X f FN g = # f TS g ,
FPR  X f FP g = # f NS g , ( where TS and NS are, respectively, the skin color and non-skin color pixels in GT. Note that the better the results correspond to the smaller FNR and FPR. As listed in Table 1 , the proposed method produces the lowest FPR. Although the YCbCr-based method produces the lowest FNR, the proposed method also gives a comparable result, while the simplest computation is used instead of transforming color space. 4.2. Performance of face detection
The proposed algorithm for face detection was implemented on an Altera DE2-70 Development and Education board that houses an Altera Cyclone II 68,416 logic element FPGA system. The design uses 124.7 kB of memory, most of which is devoted to the internal memory. The design takes up 3202 (4%) logic elements. For an 800 480 image size, approximately 830,000 clock cycles are required to process each frame through the face detection subsystem. Synthesis results indicated that the design can operate at a clock frequency of 50 MHz. Hence, this imple-mentation can potentially process 60 frame per second (FPS).
Software algorithms use double or floating-point data type to avoid precision errors. For comparison, we use floating point data types to implement the proposed algorithm. As listed in Table 2 , the detection rate of algorithm with floating-point operations is higher than that of the algorithm without floating-point opera-tion. As expected, the total number of logic cells is much more than that of without floating-point operation. The data clearly
Skin/Lip Features shows the area efficient advantage of the proposed algorithm design. It also indicates that the floating-point operation only provides marginal detection rate from 90.2% to 90.6%. On the other hand, we also implement the proposed algorithm without the floating-point operations and feature enhancement module to further verify its effectiveness. As can be seen, it only used 2959 logic cells, but the detection rate is dramatically decreased into 75.8%. The proposed feature enhancement module can increase the detection rate effectively and efficiently with only few additional logic elements.

Fig. 8 shows 10 representative face detection results based on the proposed system, while Table 3 compares the proposed system to the FPGA-based face detection system proposed in Nguyen et al. (2006) . This comparison demonstrates that our system performs better in logic cells cost due to the efficiency of the proposed skin detection method. Compared with the previous face detection system, the proposed system can attain 90.2% detection rate with five times less logic cells. Finally, we report the FPS of the proposed system in order to further verify the efficiency. As listed in Table 4 , our system can support the real-time image processing in different frame sizes, including 640 480 with 75 FPS, 800 480 with 60 FPS, and 1024 768 with 25 FPS. 5. Conclusion
This paper proposed not only an effective skin color model without color transformation, but also a very efficient embodi-ment of face detection. The skin color can be accurately detected by our skin detection method, which can be further applied to face detection systems. Our face detection system can operate in real-time at frame rates of over 30 FPS. Experimental results demonstrated that the proposed skin detection method produces high detection rate, which allows for the extended design of face detection system with a compact FPGA-based implementation. This system only costs 3202 logic cells and uses 127.7 kB of memory that implies low-cost and low-complex.
 References
