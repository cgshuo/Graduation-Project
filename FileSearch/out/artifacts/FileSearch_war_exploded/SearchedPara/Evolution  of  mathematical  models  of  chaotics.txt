 tion of many researchers from diverse backgrounds. This interest in evolution-based search and optimisation algorithms has m otivated new developments and applica-tions. In this paper, genetic programming (GP), an EC paradigm, is applied where the computer structures that undergo adaptation are themselves represented as com-puter programs (Banzhaf et al. 1998; Koza 1992). Since the emergence of the GP paradigm, there have been an increasing amount of research working on both theory (Poli 2001; Rosca and Ballard 1999) and applications (Chen and Yeh 1996; Gray et al. 1996; Miller et al. 2000; Nikolaev and Iba 2001; Nordin 1994; Ryan and
Ivan 1999; Spector and Alpern 1995; Witbro ck and Neil-Reilly 1999), amongst other domains. One of this application areas is system modelling. Modelling can be de-fined as an experimental process of building a mathematical model from input X  X utput cal description of an unknown dynamic system. In the context of GP, this prob-lem is formulated as requiring the discovery of a computer program (mathemat-diction (near-optimal model) of a system under investigation from a given set of signal-processing problems, where applications range from analysis of marketing data (Chen and Yeh 1996; Kaboudan 1999) through modelling and prediction (Evans et al. 2001; Koza 1992; Nikolaev and Iba 2001; Oakley 1994). In each case, a model considering the best possible approximation to the dynamic system is estimated based sponses of many nonlinear dynamic systems do not follow simple, regular, and pre-ministic model may develop such complex behaviour. This behaviour is known and defined as chaos and has led to developments in st udy of nonlinear systems. A spe-initial conditions, in the sense that two sets of similar initial conditions can give rise feature of chaos is its inability to predict long-term behaviour. Some studies of GP applied for chaotic systems modelling and prediction have been undertaken. Exam-ples of them are Koza (1992), Mulloy et al. (1996) and Oakley (1994), which have the same foundations, where the problem was formulated as a symbolic regression problem and the function set was defined as (% represents the protected division function).

In previous work (Evans et al. 2001; Rodr X guez-V X zquez and Fleming 1999), the use of genetic programming in polynomial NARMAX structures modelling has been studied. Results have been shown to work well. Therefore, these works are the basis of this paper, which considers the use of a multiobjective fitness function evaluation applied to dynamic systems exhibiting cha otic behaviour. It is also pointed out that knowledge about the system under analysis can be included into the multiobjective cost function and, thus, a search process can be addressed to a specific region of the entire search space. The paper is then organi sed as follow. In Sect. 2.1, the definition of genetic programming is given. The optimisation and multiobjective optimisation concepts are defined in Sect. 2.2. How to formulate the nonlinear system modelling problems using genetic programming is answered in Sect. 2.3. The concepts of term and are useful information to determine the nonlinearities and address the search lustrate the application of this alternative system modelling method are provided in
Sect. 4. Finally, conclusions are drawn in Sect. 5.
In this section, the concepts of genetic programming, multiobjective optimisation and how genetic programming encoding can be applied to represent nonlinear dynami-cal models are discussed. The application of this nonconventional system modelling method, named here as multiobjective gen etic programming (MOGP), is illustrated in Sect. 4.
GP (Banzhaf et al. 1998; Koza 1992) is a subclass of genetic algorithms, GAs (Goldberg 1989). GAs are search and optimisation tools that use computational models of evolutionary processes in the design of computer-based problem solving.
They work by maintaining a population of str uctures that evolve according to rules way to that of natural evolution and heredity, the simple GA has a structure as shown in Program 2.1. Thus, this algorithm works on a population of N binary fixed-length solutions of a given problem. How well each individual x to the problem under investigation is provided by a quality measure called the fitness .
The population evolves, generation by generation, toward better regions of the search space by means of gene tic processes, such as selection, recombination and mutation .
The selection process uses the fitness measure to choose individuals of the previous combination, or crossover, operation promo tes the exchange of genetic information between parent individuals, thereby produc ing descendants. The simplest crossover operator takes two parent individuals that exchange a portion of their chromosomes to produce two offspring. The mutation operation alters the genetic information by introducing some changes into the population. In the case of binary encoding, mu-a predefined termination criterion is met, or alternatively, until a maximum number of generations (iterations) is reached.
 Program 2.1 Evolution-based algorithm Y Y y
In the case of GP, the individuals (potential solutions) of the population are ex-many problems can be expressed as computer programs makes GP a more power-ful tool than its predecessor, the GA. Here, these programs, which are composed of functions and terminals appropriate to the problem domain, are encoded as hierarch-ical tree structures, providing a dynamic and variable representation. To illustrate the hierarchical encoding used for GP, Fig. 1 gives a simple example where the opera-tree represents the following mathematical expression:
Like the standard GA, the two main operators are crossover and mutation .The current population. Then, a node rooted from each parent is randomly selected. These the next step, the substructures are exchanged between the parents, producing two new structures. Because of the dynamic rep resentation used in genetic programming, also generally different. Figure 2 illustrates the crossover operation where the marked nodes are the roots (crossover nodes) for the subexpressions.

Mutation operates by randomly selecting a node, which can be either a terminal or internal point, and replacing the associat ed substructure with a randomly generated subtree up to a maximum size.

The fitness measure of each computer program is assigned in terms of how well it performs in the particular problem domain. This fitness value depends on the prob-lem but is generally defined as the error produced by the computer program. In conventional genetic programming approaches, and, in general, in any evolution-function. But these population-based methods possess the characteristic of simultan-the problem. For this reason, this work presents an extension of the conventional or single fitness measure genetic programming mapping into a multiobjective genetic programming approach described in the next section.

As has been mentioned, nonlinear system modelling problems typically consist of multiple and competing characteristics to be evaluated. Some approaches do not con-function (e.g. Akaike information criterion [AIC] (Akaike 1974)). However, these jectives separately. Hence, multiobjective optimisation has become a useful tool for describing real problems, in general, that cannot be effectively represented in a unidi-mensional space. Multiobjective (also calle d multicriteria, multiperformance or vec-tor) optimisation is then defined as the problem of finding: a vector of decision variabl es that satisfies constraint s and optimises a vector func-usually in conflict with each other. Hence, the term optimise means finding such designer.
 x the p equality constraints, and optimises the vector function, where x =[ x 1 , x 2 ,... , x n ] T is the vector of decision variables. in X defines a feasible solution. The k components of the vector f the noncommensurable criteria that must be considered. The constraints g h ( x ) represent the restrictions imposed on the decision variables. The vector x eous evaluation of model complexity, model performance and model validation of the identification procedure are performed fo r each member of the population of poten-tial mathematical models. The fitness value of each population member is assigned by means of a rank-based fitness method (Fonseca and Fleming 1995). This fitness evaluation is based on the definition of P areto-optimality or nondominance, which ing an optimisation (minimisation) problem and given two n components objective function vectors, f u and f v , we can say that f u dominates f producing a set of possible and valid solutions known as the Pareto-optimal or ad-missible solution set of the problem. Selection in genetic programming is made using a method of ranking that favours nondominant individuals of the population (Fonseca and Fleming 1995).

Current research on evolutionary multiobjective optimisation algorithms propose alternative multiobjective evaluation schemes. Examples of these works are the non-dominated sorting genetic algorithm (NSGA) proposed and extended by Deb et al. (2000), the Pareto archived evolution strategy (PAES) proposed by Knowles and
Corne (2000) and the micro-genetic algorithm by Coello-Coello and Toscano-Pulido (2001), amongst others. A survey of research on evolutionary multiobjective opti-misation (EMO) techniques can be found in Coello-Coello et al. (2002). However, these efforts have been mainly focused on simple biobjective constrained and un-fitness assignment based on previous work by Fonseca and Fleming (1995) but we are also able to integrate any other multiobjective evaluation technique.
The well-known NARMAX (nonlinear autore gressive moving average with exoge-nous inputs) model that is an extended ARMAX description for representing non-is given by a nonlinear function, F (  X  ) , of the output, y possible noise disturbance, e ( k ) . Thus, where n y , n u and n e are the maximum lags considered for the output, input and noise terms, respectively, and is the degree of nonlinearity of the model structure. previous work by Chen and Billings ( 1989), the most typical choice for F a polynomial expansion. The model is linear in the parameters and can, therefore, be estimated by means of a least-squares algorithm. Then, based on the polynomial rep-resentation of the NARMAX model, the GP population consists of tree-structured in-dividuals that readily represent alternative structures for the application of the NAR-
MAX approach. Potential models are encoded as hierarchical tree structures, thus providing a dynamic and variable represen tation, and these constitute members of a population of different model structures. These structures consist of functions (in-ternal nodes) and terminals (leaf nodes) appropriate to the problem domain. Hence, the function set is here defined as F ={ ADD , MU L T nal set as T ={ X 0 , X 1 ,... , X ny , X ny + 1 ,... , { c , y ( k  X  1 ),... , y ( k  X  n archical tree representation of polynomial NARMAX models is interpreted in Polish notation. 1 An example is the following expression: (ADD (ADD X1 X5) (MULT (ADD X2 X3)(ADD X1 X4))). This is equivalent to the polynomial nonlinear model defined as where { X 1 , X 2 , X 3 , X 4 , X 5 }={ 1 . 0(the constant term) e ( k  X  1 ) } . A least-squares algorithm is applied to compute the parameter vector to minimise the residual of errors  X ( k ) between the measured output y predicted output  X  y k that is given by estimated. dynamical properties such as the number of fixed points. The fixed points are directly provide useful information that can be integrated into the MOGP method. In order to analyse the relationship between the structure of NARMAX polynomials and their respective fixed points, some definition are given as follow.
In term clustering (Aguirre and Mendes 1996), the deterministic part of a NARMAX model, that is the NARX model, is expanded as the summation of terms with degrees of nonlinearity in the range 1  X  m  X  . Each m th order term can contain a p th order factor in y ( k  X  n i ) and a (m-p) th order factor in u ( coefficient Cp , m-p ( n 1 ,... , n m ) as follows: where and the upper limit is n y if the summation refers to factors in y the case of factors in u ( k  X  n i ) .

For example, expanding the summation up to second order, that is,
Definition 1 (Cluster coefficients (Mendes 1995)). The constants ( n ,... , n of the form y ( k  X  i ) p u ( k  X  j ) m  X  p for m = 0 ,... , cients are called cluster co efficients represented as
From the last definition, one can say that the set of all candidate terms for a NARX model is the union of all possible clusters up to degree .Thatis,
Definition 2 (Fixed points). Defining a vector x as the state of the dynamical system and the function f that describes how the system moves, there are special circum-are called fixed points (or equilibrium points) of the dynamical system. To illustrate this definition, an example is considered.

Given the nonlinear discrete time system and given the state x ( k ) = 3, the value at the next instance is computed as analysis of nonlinear system models.
 of the system under investigation. If the original polynomial is nonautonomous, then u ( k  X  i ) = 0 , i = 0 , 1 ,... . All possible clusters of an autonomous polynomial with degree of nonlinearity are  X  = constant,  X  y ,  X  y 2 , ... of an autonomous polynomial with degree of nonlinearity are given by the roots of the clustered polynomial, expressed as last equation can be rewritten as follows: degree of nonlinearity will have fixed points if y = formation about the system dynamics can then be obtained before the modelling (1995), which is based on the algorithm proposed by Glover and Mees (1993). This procedure is explained in the following subsection. fixed point and its position. The idea of the Glover and Mees algorithm (Glover and
Mees 1993) says that an estimation of a fixed point of a linear model is given by the average value of the time series. However, in this case, the time series only behaves in a linear way for a limited time, the trajectory eventually leaves the vicinity of the fixed point and higher order terms become important. Then, there are k short sections and the process for obtaining fixed points from data starts by modelling these short sections, or windows, of the time series. If the window is
This AR(m) model has m + 1 parameters and then m + 1 equations for a window of length 2 m + 1. Equation (15) can then be rewritten as, where matrix X has elements X i , j = x i , j  X  1 and 1 which are one. The solution is given by c = X  X  1 1 m + 1 corresponds to a constant time series x i = p and replacing this in (15) gives
For each window, there is a different value of p (fixed points). Then, for each k , { x ,
In order to graphically present this information, the distance between the m -dimensional points v k = ( x k ,... , x k + m + 1 ) and the m -dimensional fixed points q ( p ,... , p ponding fixed-point estimates. Thus, r k =|| v k  X  q k || that there is a strong accumulations around  X  1 . 5 and a weaker one near 0.
This section provides two examples concerning the use of multiobjective genetic pro-gramming (MOGP) in modelling nonlinear dyna mic systems. These examples pos-sess the characteristics of having a chaotic motion. The first example, the well-known
Duffing X  X olmes oscillator (Holmes 1979), illustrates how MOGP can be applied in the identification of NARMAX models. The second example discusses the identifi-cation of models from chaotic data sets.

The well-known Duffing X  X olmes equation is commonly used to model mechanical tered in practice (Hunter 1992). This system is modelled by means of the following equation:  X  = 1 rad/s. This set of parameters drives the Duffing X  X olmes equation to exhibit chaotic motion (see Figs. 4 and 5).
Because a priori knowledge about the sys tem can be obtained (the number and location of fixed points extracted from the original data and also expressed in equa-a disadvantage that the MOGP framework exhibits is the inability to deal straightfor-objective related to model degree was redefined as the constraint value must be a minimum, where the minimum value of (19) will be zero and corresponds to the correct number of fixed points of the system. MOGP can then deal directly with the minimisation of this objective. Alternative algorithms to treat equality constraints combined with evolutionary algorithms have appeared in the literature. GENOCOP (genetic algorithm for numerical optimisation for con-strained problems) introduced by Michalewicz and Nazhiyath (1995) uses some ideas of repair algorithms. In the approach by Hinterding (2001), equality constraints are replaced by inequalities h ( x )  X   X  and h ( x )  X   X  ,where assigned a sufficiently small value.

The Duffing X  X olmes system shows th ree equilibrium points located at (  X  ) (Mendes 1995), one trivial and two symmetrical. Notice that, for equilibrium are located at (  X  1 , 0 , 1).

Several runs of the multiobjective GP approach were carried out. Maximum lag values were set to be n y = n u = 10. The GP parameters were set up as describe in shown in Table 2. Performance error was defined as (7), while fixed point number cubic models). The long-term prediction error (LTPE) was measured in order to generate stable models.

The multiobjective GP-NARMAX method previously described is an innovative method for modelling dynamic systems. Recap itulating, the multiobjective approach has the aim of optimising different measure requirements within the modelling pro-cess. Hence, the NARMAX modelling problem is formulated as the problem of find-ing the vector of decision variables (the vector of model regressors, linear and non-linear terms), x =[ x 1 ,... , x m ] , that minimise the n components vector function where F is the fitness function (cost functi on), which can include measurements evaluate the identified models.
 from the clusters  X  y and  X  y 3 . The cluster  X  u was also identified; this is confirmed Ta b l e 4 .
 to be a spurious cluster due to the small values of the cluster coefficients (Table 5). The comparison of the original system and the identified models is presented in
Fig. 6, where the attractor is reconstructed using these models. Estimated output  X  y ( k ) is computed as
The first n y output points are taken from measured data, and the remaining points are calculated by means of models given in Table 4. Although models 1 and 2 show that, in order to describe the dynamics of the system, models must include the output linear terms and lag of input terms must be small.

These results show how MOGP can address simultaneously model performance and model structure of system identification problems. Only information about the number of fixed points (nonlinearity degree of autonomous part of the model) was zone (search space of cubic models). No information about term clustering was in-volved; nonetheless, MOGP was capable of generating a family of solutions that included the correct clusters. As seen from these results, MOGP generates a family are in conflict with each other. Thus, these solutions are equivalent, nondominant and satisfy the prescribed goals.
This section discusses the modelling o f nonlinear polynomial models from chaotic data sets. The Chua circuit (Chua and Hasler 1993) is one of the most popular bench-marks for studying nonlinear oscillations. T he normalised equations of the Chua cir-cuit can be written as (Chua and Hasler 1993; Chua et al. 1986): where m 0 = X  1 / 7and m 1 = 2 / 7. The variation of  X  and system to display several regular and chaotic regimes. The well-known double-scroll attractor is obtained for  X  = 9 . 0and  X  = 100 / 7.Basedonthesevalues,22was simulated using a Runge X  X utta method of 4th-order with step size of 0.001. Figs. 7 and 8).

Selecting the input terms in the NARMAX model formulation to be zero gives the nonlinear auto regressive moving average (NARMA) model description (Leontaritis and Billings 1985),
The identification technique previously described in this paper is used to identify nonlinear polynomial models of this form. validation functions are also considered in this example. Thus, the multiobjective identification method is applied and a family of nonlinear candidate models based
Regarding the validation criteria, Billi ngs and Tao (1991) have introduced time-series validation tests based on general correlations. These are given by three validation criteria given by (24) and defined as constraints to be minimised. For the validation purpose, it is desirable that the fixed points of the estimated models be as close as possible to the fixed points of the original system. Based on the concept polynomial (see (14)), where 0 = 0. This guarantees that the respective dynamical polynomial model should not have any terms taken from the clusters
In this case, the symmetrical fixed points are at
It is interesting to note that the double-scroll attractor possesses these character-istics and the results show that the dynamical polynomial models identified using tion of the fixed points for each model and details of their structures. An additional feature for the validation of chaotic m odels should be to verify if such models settle attractors of the identified models are shown in Fig. 9.

As mentioned above, three additional criteria defined as constraints were evalu-ated in this example.

From these results, the most parsimonious model (model 1) that was identified and can reproduce the double-scroll attractor consists only of nine terms. The struc-ture is given as
Genetic programming is a technique that has been developed for the purpose of evolving programs. Combining this technique with the general NARMAX represen-tation has proved to be a powerful tool for nonlinear system modelling, demonstrating effective performance. The application are a of this technique has been tested, in this paper, on two typical benchmark modelling problems that exhibit chaotic motions.
Using validation and additional information extracted from the original data prior to the identification, MOGP was able to find models that could reproduce the dynam-set of models bred using MOGP was able to reproduce the attractors that resemble the geometry of the original data.

In the study of the Duffing X  X olmes oscilla tor, spurious terms were included in some of the nondominated models. Neverth eless, the resulting models were able to reproduce the original attractor trajectories. The two most parsimonious models pos-sessed the correct number and approximate location of the equilibrium points. How-ever, they were unable to describe the chaotic regime and reproduce the attractor of the original system. Further work could include not only the evaluation of statistical but also dynamical validation tools, such as the Lyapunov exponent and correlation dimension (Mendes 1995). These criteria could add a degree of selectivity to the identification procedure and point to more accurate models. The results presented in this paper demonstrate that formulating the modelling process as a multiobjec-tive optimisation problem can provide a more practical way for solving them. On the other hand, genetic programming gives an alternative approach for generating simple and near-optimal solutions of practical and complex problems.
