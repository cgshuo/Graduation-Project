 The translation quality of the SMT system is highly related to the coverage of translation models. However, no matter how much data is used for training, it is still impossible to completely cover the unlimited input sentences. This problem is more serious for online SMT systems in real-world applications. Naturally, a solution to the coverage problem is to bridge the gaps between the input sentences and the translation models, either from the input side, which targets on rewriting the input sentences to the MT-favored expressions, or from the side of translation models, which tries to enrich the translation models to cover more expressions. 
In recent years, paraphrasing has been proven useful for improving SMT quality. The proposed methods can be classified into two categories according to the paraphrase targets: (1) enrich translation models to cover more bilingual expressions; (2) paraphrase the input sentences to reduce OOVs or generate multiple inputs. In the first category, He et al. (2011), Bond et al. (2008) and Nakov (2008) enriched the SMT models via paraphrasing the training corpora. Kuhn et al. (2010) and Max (2010) used paraphrases to smooth translation models. For the second category, previous studies mainly focus on finding translations for unknown terms using phrasal paraphrases. Callison-Burch et al. (2006) and Marton et al. (2009) paraphrase unknown terms in the input sentences using phrasal paraphrases extracted from bilingual and monolingual corpora. Mirkin et al. (2009) rewrite OOVs with entailments and paraphrases acquired from WordNet. Onishi et al. (2010) and Du et al. (2010) use phrasal paraphrases to build a word lattice to get multiple input candidates. In the above methods, only word or phrasal paraphrases are used for input sentence rewriting. No structured paraphrases on the sentence level have been investigated. However, the information in the sentence level is very important for disambiguation. For example, we can only substitute play with drama in a context related to stage or theatre . Phrasal paraphrase substitutions can hardly solve such kind of problems. 
In this paper, we propose a method that rewrites the input sentences of the SMT system using automatically extracted paraphrase rules which can capture structures on sentence level in addition to paraphrases on the word or phrase level. Without extra paraphrase resources, a novel approach is proposed to acquire paraphrase rules from the bilingual training corpus based on the results of Forward-Translation and Back-Translation. The rules target on rewriting the input sentences to an MT-favored expression to ensure a better translation. The paraphrase rules cover all kinds of paraphrases on the word, phrase and sentence levels, enabling structure reordering, word or phrase insertion, deletion and substitution. The experimental results show that our proposed approach achieves significant improvements of 1.6~3.6 points of BLEU in the oral domain and 0.5~1 points in the news domain. 
The remainder of the paper is organized as follows: Section 2 makes a comparison between the Forward-Translation and Back-Translation. Section 3 introduces our methods that extract paraphrase rules from the bilingual corpus of SMT. Section 4 describes the strategies for constructing word lattice with paraphrase rules. The experimental results and some discussions are presented in Section 5 and Section 6. Section 7 compares our work to the previous researches. Finally, Section 8 concludes the paper and suggests directions for future work. The Back-Translation method is mainly used for automatic MT evaluation (Rapp 2009). This approach is very helpful when no target language reference is available. The only requirement is that the MT system needs to be bidirectional. The procedure includes translating a text into certain foreign language with the MT system (Forward-Translation), and translating it back into the original language with the same system (Back-Translation). Finally the translation quality of Back-Translation is evaluated by using the original source texts as references. 
Sun et al. (2010) reported an interesting phenomenon: given a bilingual text, the Back-Translation results of the target sentences is better than the Forward-Translation results of the source sentences. Clearly, let ( S 0 , T 0 ) be the initial pair of bilingual text. A source-to-target translation system SYS_ST and a target-to-source translation system SYS_TS are trained using the bilingual corpus.  X  X  X  X  X  X  is a Forward-Translation function, and  X  X  X  X  X  X  is a function of Back-Translation which can be deduced with two rounds of translations:  X  X   X   X   X   X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  . In the first round SYS_TS , and we get T 1 and S 1 as translation results. In the second round, we translate S 1 back into the target side with SYS_ST , and get the translation T 2 . The procedure is illustrated in Figure 1, which can also formally be described as: 1. T 1 = FT ( S 0 ) = SYS_ST ( S 0 ). 2. T 2 = BT ( T 0 ), which can be decomposed into 
Using T 0 as reference, an interesting result is reported in Sun et al. (2010) that T 2 achieves a higher score than T 1 in automatic MT evaluation. This outcome is important because T 2 is translated from a machine-generated text S 1 , but T 1 translated from a human-write text S 0 . Why the machine-generated text results in a better translation than the human-write text? Two possible reasons may explain this phenomenon: (1) in the first round of translation T 0  X  S 1 , some target word orders are reserved due to the reordering failure, and these reserved orders lead to a better result in the second round of translation; (2) the text generated by an MT system is more likely to be matched by the reversed but homologous MT system. 
Note that all the texts of S 0 , S 1 , S 2 , T 0 and T sentence aligned because the initial parallel corpus ( S 0 , T 0 ) is aligned in the sentence level. The aligned sentence pairs in ( S 0 , S 1 ) can be considered as paraphrases. Since S 1 has some MT-favored structures which may result in a better translation, an intuitive idea is whether we can learn these structures by comparing S 1 with S 0 . This is the main assumption of this paper. Taking ( S 0 , S 1 ) as paraphrase resource, we propose a method that automatically extracts paraphrase rules to capture the MT-favored structures. 3.1 Definition of Paraphrase Rules We define a paraphrase rule as follows: 1. A paraphrase rule consists of two parts, left-2. LHS must start/end with a terminal. 3. There must be at least one terminal between A paraphrase rule in the format of: which means the words matched by LHS can be paraphrased to RHS. Taking Chinese as a case study, some examples of paraphrase rules are shown in Table 1. 3.2 Selecting Paraphrase Sentence Pairs Following the methods in Section 2, the initial bilingual corpus is ( S 0 , T 0 ). We train a source-to-target PBMT system ( SYS_ST ) and a target-to-source PBMT system ( SYS_TS ) on the parallel corpus. Then a Forward-Translation is performed on S 0 using SYS_ST , and a Back-Translation is performed on T 0 using SYS_TS and SYS_ST . As mentioned above, the detailed procedure is: T 1 = SYS_ST ( S 0 ), S 1 = SYS_TS ( T 0 ), T 2 = SYS_ST ( S Finally we compute BLEU (Papineni et al. 2002) score for every sentence in T 2 and T 1 , using the corresponding sentence in T 0 as reference. If the sentence in T 2 has a higher BLEU score than the aligned sentence in T 1 , the corresponding sentences in S 0 and S 1 are selected as candidate paraphrase sentence pairs, which are used in the following steps of paraphrase extractions. 3.3 Word Alignments Filtering We can construct word alignment between S 0 and S through T 0 . On the initial corpus of ( S 0 , T 0 conduct word alignment with Giza++ (Och and Ney, 2000) in both directions and then apply the grow-diag-final heuristic (Koehn et al., 2005) for symmetrization. Because S 1 is generated by feeding T 0 into the PBMT system SYS_TS , the word alignment between T 0 and S 1 can be acquired from the verbose information of the decoder. 
The word alignments of S 0 and S 1 contain noises which are produced by either wrong alignment of GIZA++ or translation errors of SYS_TS . To ensure the alignment quality, we use some heuristics to filter the alignment between S 0 and S 1 : 1. If two identical words are aligned in S 0 and 2. Stop words (including some function words 
Figure 2 illustrates an example of using the heuristics to filter alignment. 3.4 Extracting Paraphrase Rules From the word-aligned sentence pairs, we then extract a set of rules that are consistent with the word alignments. We use the rule extracting methods of Chiang (2005). Take the sentence pair in Figure 2 as an example, two initial phrase pairs PP 1 =  X   X   X   X  X  X   X  X  X  X  |||  X   X   X  X  X   X  X  X  X   X  and PP 2 =  X   X   X   X   X  X  X   X  X  X  X   X   X  X  X  |||  X   X   X  X  X   X   X   X  X  X   X  X  X  X   X  are identified, and PP 1 is contained by PP 2 , then we could form the rule: The extracted paraphrase rules aim to rewrite the input sentences to an MT-favored form which may lead to a better translation. However, it is risky to directly replace the input sentence with a paraphrased sentence, since the errors in automatic paraphrase substitution may jeopardize the translation result seriously. To avoid such damage, for a given input sentence, we first transform all paraphrase rules that match the input sentences to phrasal paraphrases, and then build a word lattice for SMT decoder using the phrasal paraphrases. In this case, the decoder can search for the best result among all the possible paths. 
The input sentences are first segmented into sub-sentences by punctuations. Then for each sub-sentence, the matched paraphrase rules are ranked according to: (1) the number of matched words; (2) the frequency of the paraphrase rule in the training data. Actually, the ranking strategy tends to select paraphrase rules that have more matched words (therefore less ambiguity) and higher frequency (therefore more reliable). 4.1 Applying Paraphrase Rules Given an input sentence S and a paraphrase rule R part can be replaced by R RHS . An example for applying the paraphrase rules is illustrated in Figure 3. 
From Figure 3, we can see that the words of position 1~3 are replaced to  X   X  X  X  10  X   X  X  X   X . Actually, only the words at position 3 and 4 are paraphrased to the word  X   X  X  X   X , other words are left unchanged. Therefore, we can use a triple, &lt; MIN_RP_TEXT , COVER_START , COVER_LEN &gt; (&lt;  X  X  X  , 3, 1&gt; in this example) to denote the paraphrase rule, which means the minimal text to replace is  X   X  X  X   X , and the paraphrasing starts at position 3 and covers 1 words. 
In this manner, all the paraphrase rules matched for a certain sentence can be converted to the format of &lt; MIN_RP_TEXT , COVER_START , COVER_LEN &gt;, which can also be considered as phrasal paraphrases. Then the methods of building phrasal paraphrases into word lattice for SMT inputs can be used in our approaches. 
Figure 3: Example for Applying Paraphrase Rules 4.2 Construction of Paraphrase Lattice Given an input sentence, all the matched paraphrase rules are converted to phrasal paraphrases first. Then we build the phrasal paraphrases into word lattices using the methods proposed by Du et al. (2010). The construction process takes advantage of the correspondence between detected phrasal paraphrases and positions of the original words in the input sentence, and then creates extra edges in the lattices to allow the decoder to consider paths involving the paraphrase words. An example is illustrated in Figure 4: given a sequence of words { w 1 ,..., w N } as the input, two phrases  X  ={  X  1 ,...  X  p } and  X  = {  X  1 ,...,  X  detected as paraphrases for P 1 = {w x ,..., w y } (1  X  x respectively. The following steps are taken to transform them into word lattices: 1. Transform the original source sentence into 2. Generate extra nodes and edges for each of 
Via step 2, word lattices are generated by adding new nodes and edges coming from paraphrases. 4.3 Weight Estimation The weights of new edges in the lattices are estimated by an empirical method base on ranking positions. Following Du et al. (2010), supposing constructed from k paraphrase rules, which are sorted in a descending order. Then the weight for an edge e i is calculated as: where k is a predefined tradeoff parameter between decoding speed and the number of potential paraphrases being considered. 5.1 Experimental Data In our experiments, we used Moses (Koehn et al., 2007) as the baseline system which can support lattice decoding. The alignment was obtained using GIZA++ (Och and Ney, 2003) and then we symmetrized the word alignment using the grow-diag-final heuristic. Parameters were tuned using Minimum Error Rate Training (Och, 2003). To comprehensively evaluate the proposed methods in different domains, two groups of experiments were carried out, namely, the oral group (G oral ) and the news group (G news ). The experiments were conducted in both Chinese-English and English-Chinese directions for the oral group, and Chinese-English direction for the news group. The English sentences were all tokenized and lowercased, and the Chinese sentences were segmented into words by Language Technology Platform (LTP) 1 . We used SRILM 2 for the training of language models (5-gram in all the experiments). The metrics for automatic evaluation were BLEU 3 and TER 4 (Snover et al., 2005). 
The detailed statistics of the training data in G oral are showed in Table 2. For the bilingual corpus, we used the BTEC and PIVOT data of IWSLT 2008, HIT corpus 5 and other Chinese LDC (CLDC) corpora, including the Chinese-English Sentence Aligned Bilingual Corpus (CLDC-LAC-2003-004) and the Chinese-English Parallel Corpora (CLDC-LAC-2003-006). We trained a Chinese language model for the E-C translation on the Chinese part of the bi-text. For the English language model of C-E translation, an extra corpus named Tanaka was used besides the English part of the bilingual corpora. For testing and developing, we used six Chinese-English development corpora of IWSLT 2008. The statistics are shown in Table 3. In detail, we chose CSTAR03-test and IWSLT06-dev as the development set; and used IWSLT04-test, IWSLT05-test, IWSLT06-dev and IWSLT07-test for testing. For English-Chinese evaluation, we used IWSLT English-Chinese MT evaluation 2005 as the test set. Due to the lacking of development set, we did not tune parameters on English-Chinese side, instead, we just used the default parameters of Moses. 
In the experiments of the news group, we used the Sinorama and FBIS corpora (LDC2005T10 and LDC2003E14) for bilingual corpus. After tokenization and filtering, this bilingual corpus contained 319,694 sentence pairs (7.9M tokens on Chinese side and 9.2M tokens on English side). We trained a 5-gram language model on the English side of the bi-text. The system was tested using the Chinese-English MT evaluation sets of NIST 2004, NIST 2006 and NIST 2008. For development, we used the Chinese-English MT evaluation sets of NIST 2002 and NIST 2005. Table 4 shows the statistics of test/development sets used in the news group. 5.2 Results We extract both Chinese and English rules in G oral , and Chinese paraphrase rules in G news by comparing the results of Forward-Translation and Back-Translation as described in Section 3. During the extraction, some heuristics are used to ensure the quality of paraphrase rules. Take the extraction of Chinese paraphrase rules in G oral as a case study. Suppose ( C 0 , E 0 ) are the initial bilingual corpus of G oral . A Chinese-English and an English-Chinese MT system are trained on ( C 0 , E 0 ). We perform Back-Translation on E 0 (  X   X  Forward-Translation on C 0 (  X   X  e and e 2 i are two aligned sentences in E 1 and E c and c 1 i are the corresponding sentences in C paraphrase rules if two conditions are satisfied: (1) BLEU( e 2 i )  X  BLEU( e 1 i ) &gt;  X  1 , and (2) BLEU( e  X  , where BLEU  X  X  X  X  is a function for computing BLEU score;  X  1 and  X  2 are thresholds for balancing the rules number and the quality of paraphrase rules. In our experiment,  X  1 and  X  2 are empirically set to 0.1 and 0.3. 
As a result, we extract 912,625 Chinese and 1,116,375 English paraphrase rules for G oral , and for G news the number of Chinese paraphrase rules is 2,877,960. Then we use the extracted paraphrase rules to improve SMT by building word lattices for the input sentences. The Chinese-English experimental results of G oral and G news are shown in Table 5 and Table 6, respectively. It can be seen that our method outperforms the baselines in both oral and news domains. Our system gains significant improvements of 1.6~3.6 points of BLEU in the oral domain, and 0.5~1 points of BLEU in the news domain. Figure 5 shows the effect of considered paraphrases (k) in the step of building Corpus #Sen. pairs #Ch. words #En words BETC 19,972 174k 190k PIVOT 20,000 162k 196k CLDC 190,447 1,167k 1,898k Tanaka 149,207 -1,375k develop 
Table 4: Statistics of test/develop sets in G news word lattices. The result of English-Chinese experiments in G oral is shown in Table 7. We make a detailed analysis on the Chinese-English translation results that are affected by our paraphrase rules. The aim is to investigate what kinds of paraphrases have been captured in the rules. Firstly the input path is recovered from the translation results according to the tracing information of the decoder, and therefore we can examine which path is selected by the SMT decoder from the paraphrase lattice. A human annotator is asked to judge whether the recovered paraphrase sentence keeps the same meaning as the original input. Then the annotator compares the baseline translation with the translations proposed by our approach. The analysis is carried out on the IWSLT 2007 Chinese-English test set, 84 out of 489 input sentences have been affected by paraphrases, and the statistic of human evaluation is shown in Table 8. 
It can be seen in Table 8 that the paraphrases achieve a relatively high accuracy, 60 (71.4%) paraphrased sentences retain the same meaning, and the other 24 (28.6%) are incorrect. Among the 60 correct paraphrases, 36 sentences finally result in an improved translation. We further analyze these paraphrases and the translation results to investigate what kinds of transformation finally lead to the translation quality improvement. The paraphrase variations can be classified into four categories: (1) Reordering: The original source sentences (2) Word substitution: A phrase with multi-(3) Recovering omitted words: Ellipsis occurs (4) Removing redundant words: Mostly, para. correct 36 20 4 60 incorrect 1 9 14 24 oral in Chinese-English direction in Chinese-English direction 
Four examples for category (1), (2), (3) and (4) are shown in Table 9, respectively. The numbers in the second column indicates the number of the sentences affected by the rules, among the 36 sentences with improved paraphrasing and translation. A sentence can be classified into multiple categories. Except category (2), the other three categories cannot be detected by the previous approaches, which verify our statement that our rules can capture structured paraphrases on the sentence level in addition to the paraphrases on the word or phrase level. Not all the paraphrased results are correct. Sometimes an ill paraphrased sentence can produce better translations. Take the first line of Table 9 as an example, the paraphrased sentence  X   X  X  X  /How many  X  X  X  /cigarettes  X  X  /can  X  X  X  /duty-free  X  /take  X  /NULL X  is not a fluent Chinese sentence, however, the rearranged word order is closer to English, which finally results in a much better translation. Previous studies on improving SMT using paraphrase rules focus on hand-crafted rules. Nakov (2008) employs six rules for paraphrasing the training corpus. Bond et al. (2008) use grammars to paraphrase the source side of training data, covering aspects like word order and minor lexical variations (tenses etc.) but not content words. The paraphrases are added to the source side of the corpus and the corresponding target sentences are duplicated. 
A disadvantage for hand-crafted paraphrase rules is that it is language dependent. In contrast, our method that automatically extracted paraphrase rules from bilingual corpus is flexible and suitable for any language pairs. 
Our work is similar to Sun et al. (2010). Both tried to capture the MT-favored structures from bilingual corpus. However, a clear difference is that Sun et al. (2010) captures the structures implicitly by training an MT system on (S 0 , S 1 ) and  X  X ranslates X  the SMT input to an MT-favored expression. Actually, the rewriting process is considered as a black box in Sun et al. (2010). In this paper, the MT-favored expressions are captured explicitly by automatically extracted paraphrase rules. The advantages of the paraphrase rules are: (1) Our method can explicitly capture the structure information in the sentence level, enabling global reordering, which is impossible in Sun et al. (2010). (2) For each rule, we can control its quality automatically or manually. In this paper, we propose a novel method for extracting paraphrase rules by comparing the source side of bilingual corpus to the target-to-source translation of the target side. The acquired paraphrase rules are employed to enrich the SMT inputs, which target on rewriting the input sentences to an MT-favored form. The paraphrase rules cover all kinds of paraphrases on the word, phrase and sentence levels, enabling structure reordering, word or phrase insertion, deletion and substitution. Experimental results show that the paraphrase rules can improve SMT quality in both the oral and news domains. The manual investigation on oral translation results indicate that the paraphrase rules capture four kinds of MT-favored transformation to ensure translation quality improvement. This work was supported by National Natural Science Foundation of China (NSFC) (61073126, 61133012), 863 High Technology Program (2011AA01A207). Michael Paul. 2008. Improving Statistical Machine Translation by Paraphrasing the Training Data . In Osborne. 2006. Improved Statistical Machine Translation Using Paraphrases. In Proceedings of 
