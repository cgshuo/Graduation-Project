 A great amount of effort has recently been made in applying statistical topic models (Hofmann, 1999; Blei et al., 2003) to explore word co-occurrence pat-terns, i.e. topics, embedded in documents. Topic models have become important building blocks of many interesting applications (see e.g., (Blei and Jordan, 2003; Blei and Lafferty, 2007; Mei et al., 2007; Lu and Zhai, 2008)).

In general, topic models can discover word clus-tering patterns in documents and project each doc-ument to a latent topic space formed by such word clusters. However, the topical structure in a docu-ment, i.e., the internal dependency between the top-ics, is generally not captured due to the exchange-ability assumption (Blei et al., 2003), i.e., the doc-ument generation probabilities are invariant to con-tent permutation. In reality, natural language text rarely consists of isolated, unrelated sentences, but rather collocated, structured and coherent groups of sentences (Hovy, 1993). Ignoring such latent topi-cal structures inside the documents means wasting valuable clues about topics and thus would lead to non-optimal topic modeling.

Taking apartment rental advertisements as an ex-ample, when people write advertisements for their apartments, it X  X  natural to first introduce  X  X ize X  and  X  X ddress X  of the apartment, and then  X  X ent X  and  X  X ontact X  . Few people would talk about  X  X estric-tion X  first. If this kind of topical structures are cap-tured by a topic model, it would not only improve the topic mining results, but, more importantly, also help many other document analysis tasks, such as sentence annotation and sentence ordering.

Nevertheless, very few existing topic models at-tempted to model such structural dependency among topics. The Aspect HMM model introduced in (Blei and Moreno, 2001) combines pLSA (Hof-mann, 1999) with HMM (Rabiner, 1989) to perform document segmentation over text streams. However, Aspect HMM separately estimates the topics in the training set and depends on heuristics to infer the transitional relations between topics. The Hidden Topic Markov Model (HTMM) proposed by (Gru-ber et al., 2007) extends the traditional topic models by assuming words in each sentence share the same topic assignment, and topics transit between adja-cent sentences. However, the transitional structures among topics, i.e., how likely one topic would fol-low another topic, are not captured in this model.
In this paper, we propose a new topic model, named Structural Topic Model (strTM) to model and analyze both latent topics and topical structures in text documents. To do so, strTM assumes: 1) words in a document are either drawn from a content topic or a functional (i.e., background) topic; 2) words in the same sentence share the same content topic; and 3) content topics in the adjacent sentences follow a topic transition that satisfies the first order Markov property. The first assumption distinguishes the se-mantics of the occurrence of each word in the doc-ument, the second requirement confines the unreal-istic  X  X ag-of-word X  assumption into a tighter unit, and the third assumption exploits the connection be-tween adjacent sentences.

To evaluate the usefulness of the identified top-ical structures by strTM, we applied strTM to the tasks of sentence annotation and sentence ordering, where correctly modeling the document structure is crucial. On the corpus of 8,031 apartment ad-vertisements from craiglist (Grenager et al., 2005) and 1,991 movie reviews from IMDB (Zhuang et al., 2006), strTM achieved encouraging improve-ment in both tasks compared with the baseline meth-ods that don X  X  explicitly model the topical structure. The results confirm the necessity of modeling the latent topical structures inside documents, and also demonstrate the advantages of the proposed strTM over existing topic models. Topic models have been successfully applied to many problems, e.g., sentiment analysis (Mei et al., 2007), document summarization (Lu and Zhai, 2008) and image annotation (Blei and Jordan, 2003). However, in most existing work, the dependency among the topics is loosely governed by the prior topic distribution, e.g., Dirichlet distribution.
Some work has attempted to capture the interre-lationship among the latent topics. Correlated Topic Model (Blei and Lafferty, 2007) replaces Dirichlet prior with logistic Normal prior for topic distribu-tion in each document in order to capture the cor-relation between the topics. HMM-LDA (Griffiths et al., 2005) distinguishes the short-range syntactic dependencies from long-range semantic dependen-cies among the words in each document. But in HMM-LDA, only the latent variables for the syn-tactic classes are treated as a locally dependent se-quence, while latent topics are treated the same as in other topic models. Chen et al. introduced the gen-eralized Mallows model to constrain the latent topic assignments (Chen et al., 2009). In their model, they assume there exists a canonical order among the topics in the collection of related documents and the same topics are forced not to appear in discon-nected portions of the topic sequence in one docu-ment (sampling without replacement). Our method relaxes this assumption by only postulating transi-tional dependency between topics in the adjacent sentences (sampling with replacement) and thus po-tentially allows a topic to appear multiple times in disconnected segments. As discussed in the pre-vious section, HTMM (Gruber et al., 2007) is the most similar model to ours. HTMM models the document structure by assuming words in the same sentence share the same topic assignment and suc-cessive sentences are more likely to share the same topic. However, HTMM only loosely models the transition between topics as a binary relation: the same as the previous sentence X  X  assignment or draw a new one with a certain probability. This simpli-fied coarse modeling of dependency could not fully capture the complex structure across different docu-ments. In contrast, our strTM model explicitly cap-tures the regular topic transitions by postulating the first order Markov property over the topics.
Another line of related work is discourse analysis in natural language processing: discourse segmen-tation (Sun et al., 2007; Galley et al., 2003) splits a document into a linear sequence of multi-paragraph passages, where lexical cohesion is used to link to-gether the textual units; discourse parsing (Soricut and Marcu, 2003; Marcu, 1998) tries to uncover a more sophisticated hierarchical coherence structure from text to represent the entire discourse. One work in this line that shares a similar goal as ours is the content models (Barzilay and Lee, 2004), where an HMM is defined over text spans to perform infor-mation ordering and extractive summarization. A deficiency of the content models is that the identi-fication of clusters of text spans is done separately from transition modeling. Our strTM addresses this deficiency by defining a generative process to simul-taneously capture the topics and the transitional re-lationship among topics: allowing topic modeling and transition modeling to reinforce each other in a principled framework. In this section, we formally define the Structural Topic Model (strTM) and discuss how it captures the latent topics and topical structures within the docu-ments simultaneously. From the theory of linguistic analysis (Kamp, 1981), we know that document ex-hibits internal structures, where structural segments encapsulate semantic units that are closely related. In strTM, we treat a sentence as the basic structure unit, and assume all the words in a sentence share the same topical aspect. Besides, two adjacent segments are assumed to be highly related (capturing cohesion in text); specifically, in strTM we pose a strong tran-sitional dependency assumption among the topics: the choice of topic for each sentence directly de-pends on the previous sentence X  X  topic assignment, i.e., first order Markov property. Moveover, tak-ing the insights from HMM-LDA that not all the words are content conveying (some of them may just be a result of syntactic requirement), we intro-duce a dummy functional topic z B for every sen-tence in the document. We use this functional topic to capture the document-independent word distribu-tion, i.e., corpus background (Zhai et al., 2004). As a result, in strTM, every sentence is treated as a mix-ture of content and functional topics.

Formally, we assume a corpus consists of D doc-uments with a vocabulary of size V , and there are k content topics embedded in the corpus. In a given document d , there are m sentences and each sentence i has N i words. We assume the topic transition prob-ability p ( z | z  X  ) is drawn from a Multinomial distribu-der each topic p ( w | z ) is drawn from a Multinomial distribution Mul(  X  z ) .

To get a unified description of the generation process, we add another dummy topic T-START in strTM, which is the initial topic with position  X -1 X  for every document but does not emit any words. In addition, since our functional topic is assumed to occur in all the sentences, we don X  X  need to model its transition with other content topics. We use a Binomial variable  X  to control the proportion be-tween content and functional topics in each sen-tence. Therefore, there are k +1 topic transitions, one for T-START and others for k content topics; and k emission probabilities for the content topics, with an additional one for the functional topic z B (in total k +1 emission probability distributions).

Conditioned on the model parameters  X  = (  X ,  X ,  X  ) , the generative process of a document in strTM can be described as follows: 1. For each sentence s i in document d :
The joint probability of sentences and topics in one document defined by strTM is thus given by: where the topic to sentence emission probability is defined as:
This process is graphically illustrated in Figure 1.
From the definition of strTM, we can see that the document structure is characterized by a document-specific topic chain, and forcing the words in one sentence to share the same content topic ensures se-mantic cohesion of the mined topics. Although we do not directly model the topic mixture for each doc-ument as the traditional topic models do, the word co-occurrence patterns within the same document are captured by topic propagation through the transi-tions. This can be easily understood when we write down the posterior probability of the topic assign-ment for a particular sentence: p ( z i | S 0 , S 1 , . . . , S m ,  X ) = p ( S 0 , S 1 , . . . , S m | z i ,  X ) p ( z i )  X  p ( S =  X   X 
The first part of Eq(3) describes the recursive in-fluence on the choice of topic for the i th sentence from its preceding sentences, while the second part captures how the succeeding sentences affect the current topic assignment. Intuitively, when we need to decide a sentence X  X  topic, we will look  X  X ack-ward X  and  X  X orward X  over all the sentences in the document to determine a  X  X uitable X  one. In addition, because of the first order Markov property, the local topical dependency gets more emphasis, i.e., they are interacting directly through the transition proba-tion on sentences farther away would get damped by the multiplication of such probabilities. This result is reasonable, especially in a long document, since neighboring sentences are more likely to cover sim-ilar topics than two sentences far apart. The chain structure in strTM enables us to perform exact inference: posterior distribution can be ef-ficiently calculated by the forward-backward algo-rithm, the optimal topic sequence can be inferred using the Viterbi algorithm, and parameter estima-tion can be solved by the Expectation Maximization (EM) algorithm. More technical details can be found in (Rabiner, 1989). In this section, we only discuss strTM-specific procedures.

In the E-Step of EM algorithm, we need to col-lect the expected count of a sequential topic pair ( z, z  X  ) and a topic-word pair ( z, w ) to update the model parameters  X  and  X  in the M-Step. In strTM, E [ c ( z, z  X  )] can be easily calculated by forward-backward algorithm. But we have to go one step further to fetch the required sufficient statistics for E [ c ( z, w )] , because our emission probabilities are defined over sentences.

Through forward-backward algorithm, we can get the posterior probability p ( s i , z | d,  X ) . In strTM, words in one sentence are independently drawn from either a specific content topic z or functional topic z
B according to the mixture weight  X  . Therefore, we can accumulate the expected count of ( z, w ) over all the sentences by:
E [ c ( z, w )] = where c ( w, s ) indicates the frequency of word w in sentence s .

Eq(4) can be easily explained as follows. Since we already observe topic z and sentence s co-occur with probability p ( s, z | d,  X ) , each word w in s should share the same probability of be-ing observed with content topic z . Thus the ex-pected count of c ( z, w ) in this sentence would be p ( s, z | d,  X ) c ( w, s ) . However, since each sentence is also associated with the functional topic z B , the word w may also be drawn from z B . By applying the Bayes X  rule, we can properly reallocate the ex-pected count of c ( z, w ) by Eq(4). The same strategy can be applied to obtain E [ c ( z B , w )] .
As discussed in (Johnson, 2007), to avoid the problem that EM algorithm tends to assign a uni-form word/state distribution to each hidden state, which deviates from the heavily skewed word/state distributions empirically observed, we can apply a Bayesian estimation approach for strTM. Thus we introduce prior distributions over the topic transi-tion Mul(  X  z  X  ) and emission probabilities Mul(  X  z ) , and use the Variational Bayesian (VB) (Jordan et al., 1999) estimator to obtain a model with more skewed word/state distributions.

Since both the topic transition and emission prob-abilities are Multinomial distributions in strTM, the conjugate Dirichlet distribution is the natural choice for imposing a prior on them (Diaconis and Ylvisaker, 1979). Thus, we further assume: where we use exchangeable Dirichlet distributions to control the sparsity of  X  z and  X  z . As  X  and  X  ap-proach zero, the prior strongly favors the models in which each hidden state emits as few words/states as possible. In our experiments, we empirically tuned  X  and  X  on different training corpus to optimize log-likelihood.

The resulting VB estimation only requires a mi-nor modification to the M-Step in the original EM algorithm: where  X ( x ) is the exponential of the first derivative of the log-gamma function.

The optimal setting of  X  for the proportion of con-tent topics in the documents is empirically tuned by cross-validation over the training corpus to maxi-mize the log-likelihood. In this section, we demonstrate the effectiveness of strTM in identifying latent topical structures from documents, and quantitatively evaluate how the mined topic transitions can help the tasks of sen-tence annotation and sentence ordering. 5.1 Data Set We used two different data sets for evaluation: apart-ment advertisements (Ads) from (Grenager et al., 2005) and movie reviews (Review) from (Zhuang et al., 2006).

The Ads data consists of 8,767 advertisements for apartment rentals crawled from Craigslist website. 302 of them have been labeled with 11 fields, in-cluding size , feature , address , etc., on the sentence level. The review data contains 2,000 movie reviews discussing 11 different movies from IMDB. These reviews are manually labeled with 12 movie feature labels (We didn X  X  use the additional opinion anno-tations in this data set.) , e.g., VP (vision effects), MS (music and sound effects), etc., also on the sen-tences, but the annotations in the review data set is much sparser than that in the Ads data set (see in Ta-ble 1). The sentence-level annotations make it pos-sible to quantitatively evaluate the discovered topic structures.

We performed simple preprocessing on these two data sets: 1) removed a standard list of stop words, terms occurring in less than 2 documents; 2) discarded the documents with less than 2 sen-tences; 3) aggregated sentence-level annotations into document-level labels (binary vector) for each document. Table 1 gives a brief summary on these two data sets after the processing.
 5.2 Topic Transition Modeling First, we qualitatively demonstrate the topical struc-ture identified by strTM from Ads data 1 . We trained strTM with 11 content topics in Ads data set, used word distribution under each class (estimated by maximum likelihood estimator on document-level labels) as priors to initialize the emission probabil-ity Mul(  X  z ) in Eq(6), and treated document-level la-bels as the prior for transition from T-START in each document, so that the mined topics can be aligned with the predefined class labels. Figure 2 shows the identified topics and the transitions among them. To get a clearer view, we discarded the transitions be-low a threshold of 0.1 and removed all the isolated nodes.

From Figure 2, we can find some interesting top-ical structures. For example, people usually start with  X  X ize X  ,  X  X eatures X  and  X  X ddress X  , and end with  X  X ontact X  information when they post an apart-ment ads. Also, we can discover a strong transition from  X  X ize X  to  X  X eatures X  . This intuitively makes sense because people usually write  X  X t X  X  a two bed-rooms apartment X  first, and then describe other  X  X ea-tures X  about the apartment. The mined topics are also quite meaningful. For example,  X  X estrictions X  are usually put over pets and smoking, and parking and laundry are always the major  X  X eatures X  of an apartment.

To further quantitatively evaluate the estimated topic transitions, we used Kullback-Leibler ( KL ) di-vergency between the estimated transition matrix and the  X  X round-truth X  transition matrix as the met-ric. Each element of the  X  X round-truth X  transition matrix was calculated by Eq(9), where c ( z, z  X  ) de-notes how many sentences annotated by z  X  immedi-ately precede one annotated by z .  X  is a smoothing factor, and we fixed it to 0.01 in the experiment.
The KL divergency between two transition matri-ces is defined in Eq(10). Because we have a k  X  k transition matrix ( T start is not included), we calcu-lated the average KL divergency against the ground-truth over all the topics: where  X  p ( z | z  X  ) is the ground-truth transition proba-bility estimated by Eq(9), and p ( z | z  X  ) is the transi-tion probability given by the model.

We used pLSA (Hofmann, 1999), latent permuta-tion model (lPerm) (Chen et al., 2009) and HTMM (Gruber et al., 2007) as the baseline methods for the comparison. Because none of these three methods can generate a topic transition matrix directly, we extended them a little bit to achieve this goal. For pLSA, we used the document-level labels as priors for the topic distribution in each document, so that the estimated topics can be aligned with the prede-fined class labels. After the topics were estimated, for each sentence we selected the topic that had the highest posterior probability to generate the sen-tence as its class label. For lPerm and HTMM, we used Kuhn-Munkres algorithm (Lov  X  asz and Plum-mer, 1986) to find the optimal topic-to-class align-ment based on the sentence-level annotations. Af-ter the sentences were annotated with class labels, we estimated the topic transition matrices for all of these three methods by Eq(9).
Since only a small portion of sentences are an-notated in the Review data set, very few neighbor-ing sentences are annotated at the same time, which introduces many noisy transitions. As a result, we only performed the comparison on the Ads data set. The  X  X round-truth X  transition matrix was estimated based on all the 302 annotated ads.
In Table 2, the p-value was calculated based on t-test of the KL divergency between each topic X  X  tran-sition probability against strTM. From the results, we can see that avgKL of strTM is smaller than the other three baseline methods, which means the esti-mated transitional relation by strTM is much closer to the ground-truth transition. This demonstrates that strTM captures the topical structure well, com-pared with other baseline methods. 5.3 Sentence Annotation In this section, we demonstrate how the identified topical structure can benefit the task of sentence an-notation. Sentence annotation is one step beyond the traditional document classification task: in sentence annotation, we want to predict the class label for each sentence in the document, and this will be help-ful for other problems, including extractive summa-rization and passage retrieval. However, the lack of detailed annotations on sentences greatly limits the effectiveness of the supervised classification meth-ods, which have been proved successful on docu-ment classifications.

In this experiment, we propose to use strTM to ad-dress this annotation task. One advantage of strTM is that it captures the topic transitions on the sen-tence level within documents, which provides a reg-ularization over the adjacent predictions.

To examine the effectiveness of such structural regularization, we compared strTM with four base-line methods: pLSA, lPerm, HTMM and Naive Bayes model. The sentence labeling approaches for strTM, pLSA, lPerm and HTMM have been dis-cussed in the previous section. As for Naive Bayes model, we used EM algorithm 2 with both labeled and unlabeled data for the training purpose (we used the same unigram features as in topics models). We set weights for the unlabeled data to be 10  X  3 in Naive Bayes with EM.
 The comparison was performed on both data sets. We set the size of topics in each topic model equal to the number of classes in each data set accord-ingly. To tackle the situation where some sentences in the document are not strictly associated with any classes, we introduced an additional NULL content topic in all the topic models. During the training phase, none of the methods used the sentence-level annotations in the documents, so that we treated the whole corpus as the training and testing set.
To evaluate the prediction performance, we cal-culated accuracy, recall and precision based on the correct predictions over the sentences, and averaged over all the classes as the criterion.

Annotation performance on the two data sets is shown in Table 3 and Table 4. We can see that strTM outperformed all the other baseline methods on most of the metrics: strTM has the best accuracy and re-call on both of the two data sets. The improvement confirms our hypothesis that besides solely depend-ing on the local word patterns to perform predic-tions, adjacent sentences provide a structural reg-ularization in strTM (see Eq(3)). Compared with lPerm, which postulates a strong constrain over the topic assignment (sampling without replacement), strTM performed much better on both of these two data sets. This validates the benefit of modeling lo-cal transitional relation compared with the global or-dering. Besides, strTM achieved over 46% accu-racy improvement compared with the second best HTMM in the review data set. This result shows the advantage of explicitly modeling the topic tran-sitions between neighbor sentences instead of using a binary relation to do so as in HTMM.

To further testify how the identified topical struc-ture can help the sentence annotation task, we first randomly removed 100 annotated ads from the train-ing corpus and used them as the testing set. Then, we used the ground-truth topic transition matrix es-timated from the training data to order those 100 ads according to their fitness scores under the ground-truth topic transition matrix, which is defined in Eq(11). We tested the prediction accuracy of differ-ent models over two different partitions, top 50 and bottom 50, according to this order. where t i is the class label for i th sentence in doc-ument d, | d | is the number of sentences in docu-ment d, and  X  p ( t i | t i  X  1 ) is the transition probability estimated by Eq(9).

The results are shown in Table 5. From this table, we can find that when the testing documents follow the regular patterns as in the training data, i.e., top 50 group, strTM performs significantly better than the other methods; when the testing documents don X  X  share such structure, i.e., bottom 50 group, strTM X  X  performance drops. This comparison confirms that when a testing document shares similar topic struc-ture as the training data, the topical transitions cap-tured by strTM can help the sentence annotation task a lot. In contrast, because pLSA and Naive Bayes don X  X  depend on the document X  X  structure, their per-formance does not change much over these two par-titions. 5.4 Sentence Ordering In this experiment, we illustrate how the learned top-ical structure can help us better arrange sentences in a document. Sentence ordering, or text planning, is essential to many text synthesis applications, includ-ing multi-document summarization (Goldstein et al., 2000) and concept-to-text generation (Barzilay and Lapata, 2005).

In strTM, we evaluate all the possible orderings of the sentences in a given document and selected the optimal one which gives the highest generation probability:  X   X  ( m ) = arg max where  X  ( m ) is a permutation of 1 to m, and  X  [ i ] is the i th element in this permutation.

To quantitatively evaluate the ordering result, we treated the original sentence order (OSO) as the per-fect order and used Kendall X  X   X  (  X  ) (Lapata, 2006) as the evaluation metric to compute the divergency be-tween the optimum ordering given by the model and OSO. Kendall X  X   X  (  X  ) is widely used in information retrieval domain to measure the correlation between two ranked lists and it indicates how much an order-ing differs from OSO, which ranges from 1 (perfect matching) to -1 (totally mismatching).

Since only the HTMM and lPerm take the order of sentences in the document into consideration, we used them as the baselines in this experiment. We ranked OSO together with candidate permutations according to the corresponding model X  X  generation probability. However, when the size of documents becomes larger, it X  X  infeasible to permutate all the orderings, therefore we randomly permutated 200 possible orderings of sentences as candidates when there were more than 200 possible candidates. The experiment was performed on both data sets with 80% data for training and the other 20% for testing.
We calculated the  X  (  X  ) of all these models for each document in the two data sets and visualized the distribution of  X  (  X  ) in each data set with his-togram in Figure 3. From the results, we could ob-serve that strTM X  X   X  (  X  ) is more skewed towards the positive range (with mean 0.619 in Ads data set and 0.398 in review data set) than lPerm X  X  results (with mean 0.566 in Ads data set and 0.08 in review data set) and HTMM X  X  results (with mean 0.332 in Ads data set and 0.286 in review data set). This indi-cates that strTM better captures the internal structure within the documents. We see that all methods performed better on the Ads data set than the review data set, suggesting that the topical structures are more coherent in the Ads data set than the review data. Indeed, in the Ads data, strTM perfectly recovered 52.9% of the original sentence order. When examining some mis-matched results, we found that some of them were due to an  X  X utlier X  order given by the original docu-ment (in comparison to the  X  X egular X  patterns in the set). In Table 6, we show two such examples where we see the learned structure  X  X uggested X  to move the contact information to the end, which intuitively gives us a more regular organization of the ads. It X  X  hard to say that in this case, the system X  X  ordering is inferior to that of the original; indeed, the system or-der is arguably more natural than the original order. In this paper, we proposed a new structural topic model (strTM) to identify the latent topical struc-ture in documents. Different from the traditional topic models, in which exchangeability assumption precludes them to capture the structure of a docu-ment, strTM captures the topical structure explicitly by introducing transitions among the topics. Experi-ment results show that both the identified topics and topical structure are intuitive and meaningful, and they are helpful for improving the performance of tasks such as sentence annotation and sentence or-dering, where correctly recognizing the document structure is crucial. Besides, strTM is shown to out-perform not only the baseline topic models that fail to model the dependency between the topics, but also the semi-supervised Naive Bayes model for the sentence annotation task.

Our work can be extended by incorporating richer features, such as named entity and co-reference, to enhance the model X  X  capability of structure finding. Besides, advanced NLP techniques for document analysis, e.g., shallow parsing, may also be used to further improve structure finding. We thank the anonymous reviewers for their use-ful comments. This material is based upon work supported by the National Science Foundation un-der Grant Numbers IIS-0713581 and CNS-0834709, and NASA grant NNX08AC35A.
