 In statistical machine translation, word alignment at-tempts to find word correspondences in parallel sen-tence pairs. The search space of word alignment will grow exponentially with the length of source and target sentences, which makes the inference for complex models infeasible (Brown et al., 1993). Re-cently, inversion transduction grammars (Wu, 1997), namely ITG, have been used to constrain the search space for word alignment (Zhang and Gildea, 2005; Cherry and Lin, 2007; Haghighi et al., 2009; Liu et al., 2010). ITG is a family of grammars in which the right hand side of the rule is either two nonterminals or a terminal sequence. The most general case of the ITG family is the bracketing transduction grammar (BTG, Figure 1), which has only one nonterminal symbol.

Synchronous parsing of ITG may generate a large number of different derivations for the same under-lying word alignment. This is often referred to as the spurious ambiguity problem. Calculating and saving those derivations will slow down the parsing speed significantly. Furthermore, spurious deriva-tions may fill up the n-best list and supersede po-tentially good results, making it harder to find the best alignment. Besides, over-counting those spu-rious derivations will also affect the likelihood es-timation. In order to reduce spurious derivations, Wu (1997), Haghighi et al. (2009), Liu et al. (2010) propose different variations of the grammar. These grammars have different behaviors in parsing effi-ciency and accuracy, but so far no detailed compari-son between them has been done.

In this paper, we formally analyze alignments un-der ITG constraints and the different causes of spu-rious ambiguity for those alignments. We do an em-pirical study of the influence of spurious ambiguity on parsing and discriminative learning by compar-ing different grammars in both synthetic and real-data experiments. To our knowledge, this is the first in-depth analysis on this specific issue. A new vari-ant of the grammar is proposed, which efficiently re-moves all spurious ambiguities. Our grammar shows advantages over previous ones in both experiments. By lexical rules like A  X  e/f , each ITG derivation actually represents a unique alignment between the two sequences. Thus the family of ITG derivations represents a family of word alignment.
 Definition 1. The ITG alignment family is a set of word alignments that has at least one BTG deriva-tion.

ITG alignment family is only a subset of word alignments because there are cases, known as inside-outside alignments (Wu, 1997), that could not be represented by any ITG derivation. On the other hand, an ITG alignment may have multiple deriva-tions.
 Definition 2. For a given grammar G , spurious am-biguity in word alignment is the case where two or more derivations d 1 , d 2 , ... d k of G have the same underlying word alignment A . A grammar G is non-spurious if for any given word alignment, there exist at most one derivation under G .

In any given derivation, an ITG rule applies by ei-ther generating a bilingual word pair (lexical rules) or splitting the current alignment into two parts, which will recursively generate two sub-derivations (transition rules).
 Definition 3. Applying a monotone (or inverted) concatenation transition rule forms a monotone t-split (or inverted t-split ) of the original alignment (Figure 2). 3.1 Branching Ambiguity As shown in Figure 2, left-branching and right-branching will produce different derivations under A  X  [ AB ] | [ BB ] | [ CB ] | [ AC ] | [ BC ] | [ CC ] B  X  X  AA  X  X  X  BA  X  X  X  CA  X  X  X  AC  X  X  X  BC  X  X  X  CC  X  BTG, but yield the same word alignment. Branching ambiguity was identified and solved in Wu (1997), using the grammar in Figure 3, denoted as LG. LG uses two separate non-terminals for monotone and inverted concatenation, respectively. It only allows left branching of such non-terminals, by excluding rules like A  X  [ BA ] .
 Theorem 1. For each ITG alignment A , in which all the words are aligned, LG will produce a unique derivation.

Proof: Induction on n, the length of A . Case n=1 is trivial. Induction hypothesis: the theorem holds for any A with length less than n.

For A of length n, let s be the right most t-split which splits A into S 1 and S 2 . s exists because A is an ITG alignment. Assume that there exists another t-split s 0 , splitting A into S 11 and ( S 12 S 2 ) . Because A is fixed and fully aligned, it is easy to see that if s is a monotone t-split, s 0 could only be monotone, and S 12 and S 2 in the right sub-derivation of t-split s could only be combined by monotone concatenation as well. So s 0 will have a right branching of mono-tone concatenation, which contradicts with the def-inition of LG because right branching of monotone concatenations is prohibited. A similar contradic-tion occurs if s is an inverted t-split. Thus s should be the unique t-split for A . By I.H., S 1 and S 2 have a unique derivation, because their lengths are less than n. Thus the derivation for A will be unique. 3.2 Null-word Attachment Ambiguity Definition 4. For any given sentence pair ( e,f ) and its alignment A , let ( e 0 ,f 0 ) be the sentence pairs with all null-aligned words removed from ( e,f ) . The alignment skeleton A S is the alignment between ( e 0 ,f 0 ) that preserves all links in A .

From Theorem 1 we know that every ITG align-ment has a unique LG derivation for its alignment skeleton (Figure 4 (c)).

However, because of the lexical or syntactic dif-ferences between languages, some words may have A  X  [ AB ] | [ BB ] | [ CB ] | [ AC ] | [ BC ] | [ CC ] B  X  X  AA  X  X  X  BA  X  X  X  CA  X  X  X  AC  X  X  X  BC  X  X  X  CC  X  no explicit correspondence in the other language and tend to stay unaligned. These null-aligned words, also called singletons, should be attached to some other nodes in the derivation. It will produce dif-ferent derivations if those null-aligned words are at-tached by different rules, or to different nodes.
Haghighi et al. (2009) give some restrictions on null-aligned word attachment. However, they fail to restrict the node to which the null-aligned word is attached, e.g. the cases (a) and (b) in Figure 4. 3.3 LGFN Grammar We propose here a new variant of ITG, denoted as LGFN (Figure 5). Our grammar takes similar tran-sition rules as LG and efficiently constrains the at-tachment of null-aligned words. We will empirically compare those different grammars in the next sec-tion.
 Lemma 1. LGFN has a unique mapping from the derivation of any given ITG alignment A to the derivation of its alignment skeleton A S .

Proof: LGFN maps the null-aligned source word sequence, C s 1 ,C s 2 ,...,C s word sequence, C t 1 ,C t 2 ,...,C t aligned word-pair C 00 that directly follows, to the node C exactly in the way of Equation 1. The brack-ets indicate monotone concatenations.
 The mapping exists when every null-aligned se-quence has an aligned word-pair after it. Thus it requires an artificial word at the end of the sentence.
Note that our grammar attaches null-aligned words in a right-branching manner, which means it builds the span only when there is an aligned word-pair. After initialization, any newly-built span will contain at least one aligned word-pair. Compara-tively, the grammar in Liu et al. (2010) uses a left-branching manner. It may generate more spans that only contain null-aligned words, which makes it less efficient than ours.
 Theorem 2. LGFN has a unique derivation for each ITG alignment, i.e. LGFN is non-spurious.

Proof: Derived directly from Definition 4, Theo-rem 1 and Lemma 1. 4.1 Synthetic Experiments We automatically generated 1000 fully aligned ITG alignments of length 20 by generating random per-mutations first and checking ITG constraints using a linear time algorithm (Zhang et al., 2006). Sparser alignments were generated by random removal of alignment links according to a given null-aligned word ratio. Four grammars were used to parse these alignments, namely LG (Wu, 1997), HaG (Haghighi et al., 2009), LiuG (Liu et al., 2010) and LGFN (Sec-tion 3.3).

Table 1 shows the average number of derivations per alignment generated under LG and HaG. The number of derivations produced by LG increased dramatically because LG has no restrictions on null-aligned word attachment. HaG also produced a large number of spurious derivations as the number of null-aligned words increased. Both LiuG and LGFN produced a unique derivation for each alignment, as expected. One interpretation is that in order to get the 10-best alignments for sentence pairs that have 10% of words unaligned, the top 109 HaG deriva-tions should be generated, while the top 10 LiuG or LGFN derivations are already enough.

Figure 6 shows the total parsing time using each grammar. LG and HaG showed better performances when most of the words were aligned because their grammars are simpler and less constrained. How-ever, when the number of null-aligned words in-creased, the parsing times for LG and HaG became much longer, caused by the calculation of the large number of spurious derivations. Parsings using LG for 10 and 15 percent of null-aligned words took around 15 and 80 minutes, respectively, which can-not be plotted in the same scale with other gram-mars. The parsing times of LGFN and LiuG also slowly increased, but parsing LGFN consistently took less time than LiuG.

It should be noticed that the above results came from parsing according to some given alignment. When searching without knowing the correct align-ment, it is possible for every word to stay unaligned, which makes spurious ambiguity a much more seri-ous issue. 4.2 Discriminative Learning Experiments To further study how spurious ambiguity affects the discriminative learning, we implemented a frame-work following Haghighi et al. (2009). We used a log-linear model, with features like IBM model1 probabilities (collected from FBIS data), relative distances, matchings of high frequency words, matchings of pos-tags, etc. Online training was performed using the margin infused relaxed algo-rithm (Crammer et al., 2006), MIRA. For each sentence pair ( e,f ) , we optimized with alignment results generated from the nbest parsing results. Alignment error rate (Och and Ney, 2003), AER, was used as the loss function. We ran MIRA train-ing for 20 iterations and evaluated the alignments of the best-scored derivations on the test set using the average weights.

We used the manually aligned Chinese-English corpus in NIST MT02 evaluation. The first 200 sen-tence pairs were used for training, and the last 150 for testing. There are, on average, 10.3% words stay null-aligned in each sentence, but if restricted to sure links the average ratio increases to 22.6%.

We compared training using LGFN with 1-best, 20-best and HaG with 20-best (Figure 7). Train-ing with HaG only obtained similar results with 1-best trained LGFN, which demonstrated that spu-rious ambiguity highly affected the nbest list here, resulting in a less accurate training. Actually, the 20-best parsing using HaG only generated 4.53 dif-ferent alignments on average. 20-best training us-ing LGFN converged quickly after the first few it-erations and obtained an AER score (17.23) better than other systems, which is also lower than the re-fined IBM Model 4 result (19.07).

We also trained a similar discriminative model but extended the lexical rule of LGFN to accept at max-imum 3 consecutive words. The model was used to align FBIS data for machine translation exper-iments. Without initializing by phrases extracted from existing alignments (Cherry and Lin, 2007) or using complicated block features (Haghighi et al., 2009), we further reduced AER on the test set to 12.25. An average improvement of 0.52 BLEU (Pa-pineni et al., 2002) score and 2.05 TER (Snover et al., 2006) score over 5 test sets for a typical phrase-based translation system, Moses (Koehn et al., 2003), validated the effectiveness of our experi-ments. Great efforts have been made in reducing spurious ambiguities in parsing combinatory categorial gram-mar (Karttunen, 1986; Eisner, 1996). However, to our knowledge, we give the first detailed analysis on spurious ambiguity of word alignment. Empirical comparisons between different grammars also vali-dates our analysis.

This paper makes its own contribution in demon-strating that spurious ambiguity has a negative im-pact on discriminative learning. We will continue working on this line of research and improve our discriminative learning model in the future, for ex-ample, by adding more phrase level features.
It is worth noting that the definition of spuri-ous ambiguity actually varies for different tasks. In some cases, e.g. bilingual chunking, keeping differ-ent null-aligned word attachments could be useful. It will also be interesting to explore spurious ambi-guity and its effects in those different tasks. The authors would like to thank Alon Lavie, Qin Gao and the anonymous reviewers for their valu-able comments. This work is supported by the Na-tional Natural Science Foundation of China (No. 61003112), the National Fundamental Research Program of China (2010CB327903) and by NSF un-der the CluE program, award IIS 084450.

