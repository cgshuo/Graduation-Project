 The provision of compositionality in distributional models of meaning, where a word is represented as a vector of co-occurrence counts with every other word in the vocabulary, offers a solution to the fact that no text corpus, regardless of its size, is capable of providing reliable co-occurrence statis-tics for anything but very short text constituents. By composing the vectors for the words within a sentence, we are still able to create a vectorial representation for that sentence that is very useful in a variety of natural language processing tasks, such as paraphrase detection, sentiment analysis or machine translation. Hence, given a sentence w 1 w 2 ...w n , a compositional distributional model provides a function f such that: where  X  X  X  w i is the distributional vector of the i th word in the sentence and  X  X  X  s the resulting compos-ite sentential vector.

An interesting question that has attracted the at-tention of researchers lately refers to the way in which these models affect ambiguous words; in other words, given a sentence such as  X  X  man was waiting by the bank X , we are interested to know to what extent a composite vector can appropriately reflect the intended use of word  X  X ank X  in that con-text, and how such a vector would differ, for exam-ple, from the vector of the sentence  X  X  fisherman was waiting by the bank X .

Recent experimental evidence (Reddy et al., 2011; Kartsaklis et al., 2013; Kartsaklis and Sadrzadeh, 2013) suggests that for a number of compositional models the introduction of a dis-ambiguation step prior to the actual composi-tional process results in better composite represen-tations. In other words, the suggestion is that Eq. 1 should be replaced by: where the purpose of function  X  is to return a dis-ambiguated version of each word vector given the rest of the context (e.g. all the other words in the sentence). The composition operation, whatever that could be, is then applied on these unambigu-ous representations of the words, instead of the original distributional vectors.

Until now this idea has been verified on rela-tively simple compositional functions, usually in-volving some form of element-wise operation be-tween the word vectors, such as addition or mul-tiplication. An exception to this is the work of Kartsaklis and Sadrzadeh (2013), who apply Eq. 2 on partial tensor-based compositional models. In a tensor-based model, relational words such as verbs and adjectives are represented by multi-linear maps; composition takes place as the ap-plication of those maps on vectors representing the arguments (usually nouns). What makes the models of the above work  X  X artial X  is that the au-thors used simplified versions of the linear maps, projected onto spaces of order lower than that re-quired by the theoretical framework. As a result, a certain amount of transformational power was traded off for efficiency.

A potential explanation then for the effective-ness of the proposed prior disambiguation method can be sought on the limitations imposed by the compositional models under test. After all, the idea of having disambiguation emerge as a direct consequence of the compositional process, with-out the introduction of any explicit step, seems more natural and closer to the way the human mind resolves lexical ambiguities.

The purpose of this paper is to investigate the hypothesis whether prior disambiguation is important in a pure tensor-based compositional model, where no simplifying assumptions have been made. We create such a model by using lin-ear regression, and we explain how an explicit dis-ambiguation step can be introduced to this model prior to composition. We then proceed by com-paring the composite vectors produced by this ap-proach with those produced by the model alone in a number of experiments. The results show a clear superiority of the priorly disambiguated models following Eq. 2, confirming previous research and suggesting that the reasons behind the success of this approach are more fundamental than the form of the compositional function. Compositional distributional models of meaning vary in sophistication, from simple element-wise operations between vectors such as addition and multiplication (Mitchell and Lapata, 2008) to deep learning techniques based on neural networks (Socher et al., 2011; Socher et al., 2012; Kalch-brenner and Blunsom, 2013a). Tensor-based mod-els , formalized by Coecke et al. (2010), comprise a third class of models lying somewhere in be-tween these two extremes. Under this setting rela-tional words such as verbs and adjectives are rep-resented by multi-linear maps (tensors of various orders) acting on a number of arguments. An ad-jective for example is a linear map f : N  X  N (where N is our basic vector space for nouns), which takes as input a noun and returns a mod-ified version of it. Since every map of this sort can be represented by a matrix living in the ten-sor product space N  X  N , we now see that the meaning of a phrase such as  X  X ed car X  is given by red  X   X  X  X  car , where red is an adjective matrix and  X  indicates matrix multiplication. The same con-cept applies for functions of higher order, such as a transitive verb (a function of two arguments, so a tensor of order 3). For these cases, matrix mul-tiplication generalizes to the more generic notion of tensor contraction . The meaning of a sentence such as  X  X ids play games X  is computed as: where play here is an order-3 tensor (a  X  X ube X ) and  X  now represents tensor contraction. A con-cise introduction to compositional distributional models can be found in (Kartsaklis, 2014). The idea of separating disambiguation from com-position first appears in a work of Reddy et al. (2011), where the authors show that the intro-duction of an explicit disambiguation step prior to simple element-wise composition is beneficial for noun-noun compounds. Subsequent work by Kartsaklis et al. (2013) reports very similar find-ings for verb-object structures, again on additive and multiplicative models. Finally, in (Kartsaklis and Sadrzadeh, 2013) these experiments were ex-tended to include tensor-based models following the categorical framework of Coecke et al. (2010), where again all  X  X nambiguous X  models present superior performance compared to their  X  X mbigu-ous X  versions.

However, in this last work one of the dimen-sions of the tensors was kept empty (filled in with zeros). This simplified the calculations but also weakened the effectiveness of the multi-linear maps. If, for example, instead of using an order-3 tensor for a transitive verb, one uses some of the matrix instantiations of Kartsaklis and Sadrzadeh, Eq. 3 is reduced to one of the following forms: where symbol denotes element-wise multipli-cation and play is a matrix. Here, the model does not fully exploit the space provided by the theo-retical framework (i.e. an order-3 tensor), which has two disadvantages: firstly, we lose space that could hold valuable information about the verb in this case and relational words in general; secondly, the generally non-commutative tensor contraction operation is now partly relying on element-wise multiplication, which is commutative, thus forgets (part of the) order of composition.

In the next section we will see how to apply lin-ear regression in order to create full tensors for verbs and use them for a compositional model that avoids these pitfalls. The essence of any tensor-based compositional model is the way we choose to create our sentence-producing maps, i.e. the verbs. In this paper we adopt a method proposed by Baroni and Zampar-elli (2010) for building adjective matrices, which can be generally applied to any relational word. In order to create a matrix for, say, the intransi-tive verb  X  X lay X , we first collect all instances of the verb occurring with some subject in the train-ing corpus, and then we create non-compositional holistic vectors for these elementary sentences fol-lowing exactly the same methodology as if they were words. We now have a dataset with instances of the form  X   X  X ids X  paired with the holistic vector of  X  X ids play X , and so on), that can be used to train a linear regres-sion model in order to produce an appropriate ma-trix for verb  X  X lay X . The premise of a model like this is that the multiplication of the verb matrix with the vector of a new subject will produce a re-sult that approximates the distributional behaviour of all these elementary two-word exemplars used in training.

We present examples and experiments based on this method, constructing ambiguous and dis-ambiguated tensors of order 2 (that is, matrices) for verbs taking one argument. In principle, our method is directly applicable to tensors of higher order, following a multi-step process similar to that of Grefenstette et al. (2013) who create order-3 tensors for transitive verbs using similar means. Instead of using subject-verb constructs as above we concentrate on elementary verb phrases of the form verb-object (e.g.  X  X lay football X ,  X  X dmit stu-dent X ), since in general objects comprise stronger contexts for disambiguating the usage of a verb. Our basic vector space is trained from the ukWaC corpus (Ferraresi et al., 2008), originally using as a basis the 2,000 content words with the highest frequency (but excluding a list of stop words as well as the 50 most frequent content words since they exhibit low information content). We cre-ated vectors for all content words with at least 100 occurrences in the corpus. As context we considered a 5-word window from either side of the target word, while as our weighting scheme we used local mutual information (i.e. point-wise mutual information multiplied by raw counts). This initial semantic space achieved a score of 0.77 Spearman X  X   X  (and 0.71 Pearson X  X  r ) on the well-known benchmark dataset of Rubenstein and Goodenough (1965). In order to reduce the time of regression training, our vector space was normal-ized and projected onto a 300-dimensional space using singular value decomposition (SVD). The performance of the reduced space on the R&amp;G dataset was again very satisfying, specifically 0.73 Spearman X  X   X  and 0.72 Pearson X  X  r .

In order to create the vector space of the holistic verb phrase vectors, we first collected all instances where a verb participating in the experiments ap-peared at least 100 times in a verb-object relation-ship with some noun in the corpus. As context of a verb phrase we considered any content word that falls into a 5-word window from either side of the verb or the object. For the 68 verbs participating in our experiments, this procedure resulted in 22k verb phrases, a vector space that again was pro-jected into 300 dimensions using SVD.
 Linear regression For each verb we use simple linear regression with gradient descent directly ap-plied on matrices X and Y , where the rows of X correspond to vectors of the nouns that appear as objects for the given verb and the rows of Y to the holistic vectors of the corresponding verb phrases. Our objective function then becomes: where m is the number of training examples and  X  a regularization parameter. The matrix W is used as the tensor for the specific verb. In our first experiment we test the effectiveness of a prior disambiguation step for a tensor-based model in a  X  X andbox X  using supervised learning. The goal is to create composite vectors for a num-ber of elementary verb phrases of the form verb-object with and without an explicit disambiguation step, and evaluate which model approximates bet-ter the holistic vectors of these verb phrases.
The verb phrases of our dataset are based on the 5 ambiguous verbs of Table 1. Each verb has been combined with two different sets of nouns that ap-pear in a verb-object relationship with that verb in the corpus (a total of 343 verb phrases). The nouns of each set have been manually selected in order to explicitly represent a different meaning of the verb. As an example, in the verb  X  X lay X  we im-pose the two distinct meanings of using a musical instrument and participating in a sport; so the first Table 1: Ambiguous verbs for the supervised task. The numbers in parentheses refer to the collected training examples for each case. set of objects contains nouns such as  X  X boe X ,  X  X i-ano X ,  X  X uitar X , and so on, while in the second set we see nouns such as  X  X ootball X ,  X  X aseball X  etc.
In more detail, the creation of the dataset was done in the following way: First, all verb entries with more than one definition in the Oxford Junior Dictionary (Sansome et al., 2000) were collected into a list. Next, a linguist (native speaker of En-glish) annotated the semantic difference between the definitions of each verb in a scale from 1 (sim-ilar) to 5 (distinct). Only verbs with definitions exhibiting completely distinct meanings (marked with 5) were kept for the next step. For each one of these verbs, a list was constructed with all the nouns that appear at least 50 times under a verb-object relationship in the corpus with the specific verb. Then, each object in the list was manually annotated as exclusively belonging to one of the two senses; so, an object could be selected only if it was related to a single sense, but not both. For example,  X  X ttention X  was a valid object for the at-tract sense of verb  X  X raw X , since it is unrelated to the sketch sense of that verb. On the other hand,  X  X ar X  is not an appropriate object for either sense of  X  X raw X , since it could actually appear under both of them in different contexts. The verbs of Table 1 were the ones with the highest numbers of ex-emplars per sense, creating a dataset of significant size for the intended task (each holistic vector is compared with 343 composite vectors).

We proceed as follows: We apply linear regres-sion in order to train verb matrices using jointly the object sets for both meanings of each verb, as well as separately X  X o in this latter case we get two matrices for each verb, one for each sense. For each verb phrase, we create a composite vector by matrix-multiplying the verb matrix with the vector of the specific object. Then we use 4-fold cross validation to evaluate which version of composite vectors (the one created by the ambiguous tensors or the one created by the unambiguous ones) ap-proximates better the holistic vectors of the verb phrases in our test set. This is done by comparing each holistic vector with all the composite ones, and then evaluating the rank of the correct com-posite vector within the list of results.

In order to get a proper mixing of objects from both senses of a verb in training and testing sets, we set the cross-validation process as follows: We first split both sets of objects in 4 parts. For each fold then, our training set is comprised by 3 #1 plus 3 the remaining 1 data points of the training set are presented in the Table 2: Results for the supervised task.  X  X mb. X  refers to models without the explicit disambigua-tion step, and  X  X is. X  to models with that step. learning algorithm in random order.

We measure approximation in three different metrics. The first one, accuracy, is the strictest, and evaluates in how many cases the composite vector of a verb phrase is the closest one (the first one in the result list) to the corresponding holistic vector. A more relaxed and perhaps more repre-sentative method is to calculate the mean recipro-cal rank (MRR), which is given by: where m is the number of objects and rank i refers to the rank of the correct composite vector for the i th object.

Finally, a third way to evaluate the efficiency of each model is to simply calculate the average co-sine similarity between every holistic vector and its corresponding composite vector. The results are presented in Table 2, reflecting a clear supe-riority ( p &lt; 0 . 001 for average cosine similarity) of the prior disambiguation method for every verb and every metric. In Section 6 we used a controlled procedure to col-lect genuinely ambiguous verbs and we trained our models from manually annotated data. In this sec-tion we briefly outline how the process of creat-ing tensors for distinct senses of a verb can be au-tomated, and we test this idea on a generic verb phrase similarity task.

First, we use unsupervised learning in order to detect the latent senses of each verb in the corpus, following a procedure first described by Sch  X  utze (1998). For every occurrence of the verb, we cre-ate a vector representing the surrounding context by averaging the vectors of every other word in the same sentence. Then, we apply hierarchical agglomerative clustering (HAC) in order to cluster these context vectors, hoping that different groups of contexts will correspond to the different senses under which the word has been used in the corpus. The clustering algorithm uses Ward X  X  method as inter-cluster measure, and Pearson correlation for measuring the distance of vectors within a clus-ter. Since HAC returns a dendrogram embedding all possible groupings, we measure the quality of each partitioning by using the variance ratio crite-rion (Cali  X  nski and Harabasz, 1974) and we select the partitioning that achieves the best score (so the number of senses varies from verb to verb).
The next step is to classify every noun that has been used as an object with that verb to the most probable verb sense, and then use these sets of nouns as before for training tensors for the vari-ous verb senses. Being equipped with a number of sense clusters created as above for every verb, the classification of each object to a relevant sense is based on the cosine distance of the object vector with less than 3 training exemplars is merged to the dominant sense of the verb. The union of all object sets is used for training a single unambigu-ous tensor for the verb. As usual, data points are presented to learning algorithm in random order. No objects in our test set are used for training.
We test this system on a verb phase similarity task introduced in (Mitchell and Lapata, 2010). The goal is to assess the similarity between pairs of short verb phrases (verb-object constructs) and evaluate the results against human annotations. The dataset consists of 72 verb phrases, paired in three different ways to form groups of various degrees of phrase similarity X  X  total of 108 verb phrase pairs.

The experiment has the following form: For ev-ery pair of verb phrases, we construct composite vectors and then we evaluate their cosine similar-ity. For the ambiguous regression model, the com-position is done by matrix-multiplying the am-biguous verb matrix (learned by the union of all object sets) with the vector of the noun. For the disambiguated version, we first detect the most probable sense of the verb given the noun, again by comparing the vector of the noun with the centroids of the verb clusters; then, we matrix-multiply the corresponding unambiguous tensor created exclusively from objects that have been classified as closer to this specific sense of the verb with the noun. We also test a number of baselines: the  X  X erbs-only X  model is a non-compositional baseline where only the two verbs are compared;  X  X dditive X  and  X  X ultiplicative X  com-pose the word vectors of each phrase by applying simple element-wise operations. Table 3: Results for the phrase similarity task. The difference between the ambiguous and the disam-biguated version is s.s. with p &lt; 0 . 001 .
The results are presented in Table 3, where again the version with the prior disambiguation step shows performance superior to that of the am-biguous version. There are two interesting obser-vations that can be made on the basis of Table 3. First of all, the regression model is based on the assumption that the holistic vectors of the ex-emplar verb phrases follow an ideal distributional behaviour that the model aims to approximate as close as possible. The results of Table 3 confirm this: using just the holistic vectors of the corre-sponding verb phrases (no composition is involved here) returns the best correlation with human an-notations (0.403), providing a proof that the holis-tic vectors of the verb phrases are indeed reli-able representations of each verb phrase X  X  mean-ing. Next, observe that the prior disambiguation model approximates this behaviour very closely (0.399) on unseen data, with a difference not sta-tistically significant. This is very important, since a regression model can only perform as well as its training dataset allows it; and in our case this is achieved to a very satisfactory level. This paper adds to existing evidence from previ-ous research that the introduction of an explicit disambiguation step before the composition im-proves the quality of the produced composed rep-resentations. The use of a robust regression model rejects the hypothesis that the proposed methodol-ogy is helpful only for relatively  X  X eak X  composi-tional approaches. As for future work, an interest-ing direction would be to see how a prior disam-biguation step can affect deep learning composi-tional settings similar to (Socher et al., 2012) and (Kalchbrenner and Blunsom, 2013b).
 We would like to thank the three anonymous reviewers for their fruitful comments. Support by EPSRC grant EP/F042728/1 is gratefully ac-knowledged by D. Kartsaklis and M. Sadrzadeh.
