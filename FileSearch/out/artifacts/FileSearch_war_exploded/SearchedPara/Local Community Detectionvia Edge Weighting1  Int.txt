 Network is a data structure composed of a series of nodes interconnected by edges, and widely used to model many complex systems, such as social networks [ 6 , 8 , 20 ], collaboration networks [ 13 ], the Internet [ 4 ], and E-mail networks [ 21 ]. A common property of these networks is community structure. Community structure refers to the division of network nodes into groups within which the edges are dense but between fi eld of analyzing online social networks, collaborative tagging systems, biological networks [ 23 ].
 Traditional community detection methods aim at discovering all communities in networks, such as social network and Web network, they are too huge to get the entire network structure nowadays [ 7 ]. The global based methods do not work on these huge networks. For solving this problem, local community detection was proposed. requiring only the information of local network structure, and several algorithms have community by maximizing a certain goodness metric. However, most existing good-ness metrics are based on the assumption that either nodes or edges in network have equal weight. To ignore the weight of both nodes and edges in network is to throw out a lot of data that could help us to detect local community more accurately. of adjacent nodes  X  weights. We next develop an edge weighting method based on this similarity measure. Via edge weighting, every edge in network is assigned with a weight which represents the similarity between two nodes associated with this edge. Furthermore, we propose a new Closeness -Isolation metric to quantify the quality of a local community by integrating the edge weights. Finally, we propose our local community detection algorithm. We evaluate the proposed algorithm on both synthetic and real-world networks with ground-truth community structure. The results of our experiment demonstrate that our algorithm is highly effective at local community detection compared to related algorithms.
 de fi nition of local community detection and reviews the existing methods. Section 3 introduces the edge weighting method and a novel local community quality metric Closeness -Isolation . We describe our algorithm in Sect. 4 and report experimental results in Sect. 5 , followed by conclusions in Sect. 6 . During the past decades, several local community detection algorithms have been munity from a seed node by maximizing a goodness metric. How to design the goodness metric becomes a core problem in local community detection algorithms. In network, and then review some representative goodness metrics. 2.1 De fi nition of Local Community in Network of local community detection in network.
 De fi nition 1 (Network). Let G =( V, E ) be an undirected graph, V is the set of nodes y of edges in G . The set of nodes adjacent to node x is denoted by ( x , y ) 2 E }. The degree of node x is the number of nodes in The problem of local community detection can be presented as: For a network G =( V, E ), given a goodness metric for local community quality, local community detection starts from a seed node s ( s 2 V ), the work is to discover the community D that s belongs to. As shown in Fig. 1 , we can dynamically divide the entire network U = V  X  D  X  N . Each node in N has at least one adjacent node in D . D has two subsets: the core node set C and the boundary node set B . The nodes in C are only connected by nodes in D , but any node in B has at least one neighbor node in N .
 During the process of detecting local community, we have perfect knowledge of the connectivity of nodes in D [ N , but have no knowledge of the connectivity of nodes in U . When local community detection algorithm starts, D ={ s }, N = local community detection algorithm continuously starts from D and expand outward by absorbing external nodes from N into D until the given goodness metric stops improving [ 22 ]. Finally, D is the local community that node s belongs to. Similar de fi nitions of local community detection can be found in [ 2 , 10 , 22 ]. 2.2 Goodness Metrics that Assume All Edges are Equal This kind of goodness metrics assume that all edges in network have equal weight. The representative goodness metrics are R and M .
 Clauset [ 2 ]de fi ned a local community quality metric called R by only considering the linkage information of boundary nodes in B .
 where B in is the number of inward edges that connect boundary nodes in B to other nodes in D, while B out is the number of edges that connect boundary nodes in B to nodes the ratio of the number of internal edges and external edges.
 where E in is the number of edges with two nodes in local community D , while E the number of edges with one node in D and the other in N . M measures the fraction of edges with both nodes in D in edges with one node in D and the other in N . weights are different due to the similarities between each pairs of connected nodes are discover local community structure better. 2.3 Goodness Metrics that Assume All Nodes are Equal local community. For a local community D , the internal similarity of D is the sum of similarities between any two adjacent nodes both in D , while the external similarity of D is the sum of similarities between any two adjacent nodes with one node in D and the other in N . The representative metrics are tightness and Compactness -Isolation . evaluate the similarity between nodes x and y. Based on this measure, they introduced a metric for local community quality called tightness , and present a local community detection algorithm LTE via local optimization of the tightness measure. takes into account non-adjacent nodes within a distance away. s Compactness -Isolation , and proposed a local community detection algorithm called GMAC by maximizing Compactness -Isolation . Index [ 25 ]. The measure of Common Neighbors is directly counting the number of common neighbors two nodes have, while Jaccard Index is the ratio of the number of their common neighbors to the number of their union. All these methods assume that with its adjacent nodes. There are two subproblems in local community detection algorithm: how to design a proper goodness metric for local community quality and how to choose node in N as a member of D . The third problem hidden in these two subproblems is that how to evaluate the edge weights more accurately. In this section, we focus on these three subproblems, and give our solutions. 3.1 Edge Weighting The weight of edge depends on the similarity between two nodes associated with this edge. In this subsection, we fi rst give a new node similarity measure based on weighted neighbor nodes, and then introduce our edge weighting method.
 De fi nition 2 (Node Similarity Based on Weighted Neighbor Nodes). Let G =( V , E ) be a network, for a node x , o 2 C ( x ), we de fi ne the weight of o as s calculated by methods in Subsect. 2.3 . For a pair of nodes, x , y similarity between x and y based on weighted neighbor nodes as ws follows. where the numerator is the sum of their common neighbors  X  denominator is the sum of their neighbors  X  weights. The range of ws nodes x and y have no common neighbors, ws xy = 0, and while they share the same neighbor nodes, ws xy =1.
 Based on the above node similarity measure, we introduce our edge weighting method. For a pair of nodes, x and y , the similarity measure ws of their adjacent nodes, but neglects the fact that whether nodes x and y are directly connected or not. Two nodes tend to have higher similarity if they are directly con-nected. So our edge weighting method is given as follows.
 De fi nition 3 (Edge Weighting). Let G =( V , E ) be a network, for any edge ( x , y ) let w ( x, y ) denote the weight of edge ( x , y ). w ( x, y ) is de edge in network with a weight. 3.2 Our Local Community Quality Metric Closeness -Isolation Inspired by [ 7 , 11 , 12 ], we propose a new local community quality metric Closeness -Isolation ( CI for short) based on the edge weights.
 De Isolation Metric of D , denoted by CI ( D ), is de fi ned as where the numerator is the sum of weights of all edges in D , and the denominator is one plus the sum of weights of all edges with one node in D and the other in N . weights, and is more reasonable than the other metrics. We use CI to measure local community quality in our algorithm. 3.3 Similarity Between Shell Node and Local Community We de fi ne the similarity between shell node and local community in weighted network as follows.
 De fi nition 5 (Similarity Between Shell Node and Local Community). Let G =( V , E ) be a network, the weight of edge ( x , y )is w ( x,y ) node set N , for a node z 2 N , we denote the similarity between z and local community D by sim ( z , D ). sim ( z , D ) can be calculated as follows. by the fact that nodes in the same community are more likely to have higher similarities with each other, we choose the node in N which has highest similarity with local community D as candidate node. With the edge weighting based local community quality metric CI , we propose our local community detection algorithm. 4.1 Our Local Community Detection Algorithm Our local community detection algorithm starts from a given node s without any manual N =
C ( s ) (line (1)). In the while-loop (lines (2)  X  (16)), our algorithm keeps choosing the node a 2 N which has maximal similarity with local community D as candidate node (lines (3)  X  (10)), the similarity between node in N and local community D is calculated then add it to D and update N , otherwise, remove it from N (lines (11) N is empty. Finally, return D as the local community of s (line (17)). 4.2 Time Complexity Analysis In our algorithm, each node in network is denoted by a unique identi stored by a hash table of nodes in the graph, and each node associates with a vector of its adjacent nodes. The values in vectors are sorted for faster access. D [ N , E edges with one node in D and the other in N , k denote the mean node degree of nodes in D [ N . The computational cost of our algorithm mainly consists of two parts: calcu-lating the weight of edges with one or more node in D and choosing a node in N as candidate node. For calculating the weight of edges, we need to compute t nodes neighbor nodes, the weight of neighbor nodes of t nodes, and then compute ( E edges  X  weights. Their time complexity is O ( k t ), O ( k ( E in + E out )) respectively. Adding these together, the time complexity is O (( k + k (4)  X  (9), which is the time to fi nd a 2 N having the maximal similarity with the current local community D . In each while-loop, the time complexity is O (| N | | D | log k ). In this section, we evaluate the effectiveness of our algorithm on synthetic as well as real-world networks. 5.1 Related Methods and Evaluation Criteria We compare our algorithm with three representative local community detection algo-Luo et al.  X  s algorithm [ 11 ] (LWP for short) is a famous algorithm to with maximum metric M . (3) GMAC algorithm [ 12 ] is the most popular algorithm which uses d -neighbors to represent node. We fi x d = 3 as suggested by authors. Our algorithm uses Jaccard Index to calculate neighbor nodes  X  recall and F -score , which are widely adopted by other community detection methods [ 10 , 12 ]. The precision and recall are calculated as follows.
 where C R is the set of nodes in real local community which contains the given node and C is the set of nodes discovered by local community detection algorithm which starts from the given node.
 F -score is the harmonic mean of precision and recall . Its formula is as follows. 5.2 Evaluation on Synthetic Networks For comparing the performance of various local community detection algorithms, we fi rst generate 10 synthetic networks with ground-truth community structure. There are 5000 nodes in every network.
 LFR benchmark networks, introduced by Lancichinetti et al. [ 9 ], are widely used to test community detection methods [ 7 , 12 ]. The important properties of this network generating model are de fi ned as follows: the number of nodes is denoted by n , the average degree of nodes is denoted by k , the maximum degree is denoted by k mixing parameter is denoted by l , minus exponent for the degree sequence is denoted by t1 , minus exponent for the community size distribution is denoted by t2 , number of overlapping nodes is denoted by on , number of memberships of the overlapping nodes is denoted by om , minimum for the community sizes is denoted by minc , maximum for the community sizes is denoted by maxc . The parameters are set as follows: n = 5000, k =10, k max = 50, others except l use default values. Mixing parameter u is the fraction of edges of each node outside its community, which is used to control the dif fi culty of community detection [ 19 ]. So we generate 10 networks with different mixing parameter l ranging from 0.05 to 0.5 with a span of 0.05. These LFR benchmark networks are generated together with ground-truth community structure. For every network in our experiments, we use each node in this network as a seed node once, and repeat the local community detection experiments for 5000 times which start from different node every time, then report algorithmic average precision , recall and F -Score on this network. Figure 2 shows the comparison results of precision , recall , F -score for four algorithms on these networks, respectively. We discuss the experiments result in detail. Firstly, along with the four algorithms suffer varying degrees of performance degradation and become ineffective to detect community structure. This is because the higher the mixing parameter u of a network, the weaker community structure it has.
 Secondly, along with l becomes larger, the performance of both LWP and Clauset drops rapidly, meanwhile GMAC and our algorithm drop slowly. This is because both LWP and Clauset simply depend on the number of edges incident to the node, neglect the fact that the weight of external edges are smaller than the internal edges. Thirdly, our algorithm takes node weights in account, so it outperforms GMAC algorithm which neglects the node weights.
 The precision , recall , and F -score of the LWP algorithm is zero or nearly zero when l 0.35. This is because all the local communities discovered by LWP algorithm satisfy M &gt; 1, which means the number of internal edges should be more than the number of external edges. However, almost no local community can satisfy M &gt; 1 when l 0.35, so LWP algorithm performs badly in this case. This conclusion is in accordance with the results reported in Ref. [ 7 ].
 it performs best on LFR benchmark networks. 5.3 Evaluation on Real-World Networks So far, we have presented the experimental results of the proposed algorithm on synthetic networks. In this subsection, we use additional three real-world networks to evaluate the performance of our algorithm. (1) The fi rst network is Zachary Karate Club Network (Karate for short) [ 24 ], in which n = 34 and m = 78. It describes the friendships among 34 members of a karate club at a US university. (2) The second is NCAA football network (NCAA for short) [ 6 ], in which n = 115 and m = 613. It describes American football games between Division IA colleges during regular season n = 105 and m = 441. It is a network of books about US politics published around the time of the 2004 presidential election and sold by Amazon.com. All of them are available at http://www-personal.umich.edu/ * mejn/netdata/ .
 repeat the local community detection experiments for n times which start from different node every time, where n is the number of nodes in this network, and report algorithmic average precision , recall and F -Score on this network. The comparison result on real-world networks is reported in Fig. 3 . Compared with the other three algorithms, our algorithm has highest precision , recall , and F -score at the same time on these real-world networks. Our algorithm makes use of the weight of both nodes and edges in network, and enhances the algorithmic accuracy. So it outperforms the other algorithms on real-world networks. Discovering local community is an important work in network analysis and many algorithms have been proposed to identify local community from a given node. Dif-ferent from the existing local community detection methods that neglect the weight of both nodes and edges, we take into account the information to enhance the algorithmic accuracy. In this paper, we fi rst propose an edge weighting method based on a new node similarity measure. Then, we introduce a framework for local community detection based on the edge weights. This framework opens a rich space for research, all algorithms can be embedded into this framework differing only in the similarity measures. Compared with other related algorithms, our algorithm doesn manual parameters, and achieves good performance on both synthetic and real-world networks.
 In future, we will apply our algorithm on real-world networks to discover local community and also study the community detection problem in heterogeneous networks.
