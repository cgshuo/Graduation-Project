 Hashtags have been widely used to annotate topics in tweets (short posts on Twitter.com). In this paper, we study the problems of real-time prediction of bursting hashtags. Will a hashtag burst in the near future? If it will, how early can we predict it, and how popular will it become? Based on empirical analysis of data collected from Twitter, we propose solutions to these challenging problems. The performance of different features and possible solutions are evaluated. H.4.m [ Information Systems Applications ]: Miscella-neous Hashtag, burst, real-time prediction
As one of the leading platforms of social communications and information dissemination, Twitter has become a ma-jor source of information for common Web users. Conver-sations on Twitter are featured with their  X  X urstiness X , the phenomenon that a topic of discussion suddenly gains a con-siderable popularity, and then quickly fades away. Such bursting topics are usually triggered by breaking news, real world events, malicious rumors, or various types of behavior cascades such as campaigns of persuasion.

These bursting topics, usually referred to as trending top-ics, provide users with fresh discoveries and timely updates of events. Much research work has investigated the value of the bursting topics in a broader context. Bursts of topics have been demonstrated to have a predictive power of prod-uct sales, stock market, search engine queries, elections, and even outbursts of diseases. Therefore, an earlier detection of such bursting topics implies an increased revenue, a reduced damage, a timely treatment, and better decision-making in general. To help people access bursting topics in time, Twit-ter deploys a list of trending topics as they are detected.
However, it may be already too late to react even if a  X  X urst X  X an be detected in no time. On April 23, 2013, a false claim about explosions at the White House and the injury of the president sent by the hacked account of the Associ-ated Press quickly became an explosive burst on Twitter 1 Although the rumor was debunked as soon as it raised the concern of observers, damage had been made -the bursting topic had shaken the stock market so badly that the Dow Jones Indices experienced a sudden drop of more than 100 points. If only we can predict the outbreak of a topic before it bursts! But can we?
Hashtags, user-specified strings prefixed with a # sym-bol, have been widely used as identities of topics on Twit-ter. From a 10% random sample of the tweet stream, we can identify hundreds of thousands of new hashtags each day. However, only few hashtags can become trending top-ics. Among the few, it is likely that a smaller proportion can be predicted early on. In this study, we present the real-time prediction of these hashtags before they actually burst. There has been some closely related work. Nikolov et al. [6, 1] selected the slice of time series centered at the trend onset of trending topics as reference signals, and new hash-tags were classified by comparing observed time series to these signals. Lin et al. [4] proposed a framework to capture dynamics of hashtags based on their topicality, interactiv-ity, diversity, and prominence. Ma et al. [5] predicted the popularity of hashtags on daily basis. Our work, conversely, concentrates on predicting the bursts of hashtags as early as possible, and the popularity of those hashtags if they burst. Built on top of our preliminary work [3], we present in this paper formal definitions of four different states in the life cy-cle of a bursting hashtag and two corresponding prediction tasks. We provide a detailed examination of the contribu-tion of different types of features. The major contribution of this paper includes: 1. We provide formal definitions of four states in the life 2. We present solutions to the two prediction tasks ( burst htt p://www.foxnews.com/us/2013/04/23/ hackers-break-into-associated-press-twitter-account/
Given a hashtag, the tweets containing this hashtag are counted at equal time intervals to generate a time series  X 
C 1 , C 2 , ..., C t , ...  X  . In this paper the granularity of the time interval is set to 1 minute. For example, C 1 denotes the count of tweets with this hashtag within the very first minute that the hashtag first appears.
 A very small proportion of hashtags will actually burst. We monitor the time series of all hashtags, but only those satisfying certain criteria will trigger the prediction(s). The function that evaluates the criteria is called a  X  X rediction-trigger. X  As described in [3], a prediction-trigger checks the count of a hashtag within a five-minute sliding window ever after its first presence. If the count is greater than a thresh-old, the hashtag is marked active , indicating that it has the potential to burst in the near future. That hashtag thus enters a bursting life cycle consisting of four key states:
State 1. Active . If there exists a time interval t a in the life cycle of a hashtag, where C t a + C t a +1 + C t a +2 C a +4 &gt;  X  , we say that the hashtag becomes active since time t a . Predictions for that hashtag will be triggered as soon as it becomes active.

State 2. Bursting . As defined in [3], within 24 hours after a hashtag becomes active, if there exists a time interval t where the count of a hashtag during that time interval, C is greater than max ( C 1 +  X , 1 . 5 C 1 ), we say that the hashtag bursts and t is the start of the burst. Note the threshold is defined according to the definition of spikes in [2]. When C 1 is sufficiently large (i.e., C 1 &gt; 2  X  ), C 1 +  X  &lt; 1 . 5 C 1 . 5  X  C 1 should be used as the criterion of a burst. Otherwise C 1 +  X  is used as the criterion.

State 3. Off-Burst . For a hashtag that is busting, if starting from a time interval t  X  , all the counts C t  X  are smaller than max ( C 1 +  X , 1 . 5 C 1 ) in the following 24 hours, we say that the hashtag is off-burst and t  X  is the end of the burst.
State 4. Inactive . As the  X  X ff-burst X  state is defined cor-responding to the  X  X ursting X  state, the  X  X nactive X  state is defined according to the  X  X ctive X  state. If a hashtag can no longer meet the condition for triggering another prediction in 24 hours, the hashtag is considered inactive. A complete life cycle of the bursting hashtag comes to an end.
We adopt the same setting in the previous work [3] and set both parameters  X  and  X  to 50. When this bursting hashtag becomes inactive, it is treated as a new hashtag and will be monitored again. In other words, when a hashtag comes to the end of the current life cycle, a next life starts.
Table 1 shows the distribution of bursting hashtags in dif-ference states of their life cycles, estimated from the 10% sample of tweet stream. The three columns in the table, P AB , P OB , and P AI , are proportions defined as follows: Among all hashtags that have ever bursted in their life cy-cles, about 95% started bursting within 6 hours since they became active ; about 96% were off-burst within 24 hours since active; and about 98% were already inactive within 48 hours since active.
Based on the above definitions, multiple prediction tasks can be done in real-time. When a new hashtag appears, it is monitored and checked whether it becomes active. When it satisfies the condition, predictions are triggered. Given a hashtag that has already reached, or is predicted to reach one of the four states, one can attempt to predict whether it will reach the next state and how long it takes to reach the next state. One can also make predictions for the actual statistics of a hashtag when it reaches a particular state. For example, one can predict whether a hashtag is going to burst, and if yes how long it takes to burst, and how long the burst will last. Among many possibilities, we selectively discuss two particular prediction tasks in this paper. Task 1 . Will an active hashtag burst in the near future? This problem is framed as a binary classification task. For a hashtag that is marked as active but is not currently burst-ing, a binary label will be assigned to indicate whether it will burst within 24 hours since active.

Solution : We have reported that weighted SVM achieves the best performance in [3]. In this paper, we provide details on the effectiveness of different types of features.
Task 2 . If a hashtag is detected to be bursting, how popular will it be? Since about 96% of bursting hashtags are off-burst within 24 hours since active, our goal is to predict the popularity of a hashtag in 24 hours since active. The popularity ( P op ) of each bursting hashtag is indicated by the total count of tweets containing the hashtag. Note that predicting the exact value of P op is extremely difficult and generally not necessary. Therefore we relax the problem and predict the natural logarithm of P op , log ( P op ). This problem can be framed as a regression task.

Solution : We explore five different regression models, including Linear Regression (LR), Classification And Re-gression Tree (CART), Gaussian Process Regression (GPR), Support Vector Regression (SVR) and Neural Network (NN). The evaluation results are summarized in Section 4.
The first prediction task is much more challenging. Firstly, our goal is to predict the bursting hashtags before they actually burst, not to detect them when they are already bursting. This is an inherently difficult problem. Secondly, the observations are largely unbalanced. Fig. 1 shows that among the active hashtags that have triggered the predic-Figure 1: Proportions of bursting hashtags in ac-tive hashtags, over time. Positive: hashtags that are going to burst after t ; Negative: hashtags that are active but never burst.
 Table 2: Importance of features in Task 1. Remov-ing time series features results in the largest drop of performance. This decrease is less significant when predictions occur early.
 tion, only a small proportion of them are going to burst. It is quite challenging to precisely predict so few bursting hashtags from the the rest of hashtags that are active but never burst. The proportion of hashtags that are going to be bursting even goes down to 0.8% at the 6th hour after they becomes active. This is not surprising as most bursting hashtags have already bursted at that time.
In this section, we present different types of features which may be effective in predicting whether a hashtag is going to burst and how popular it will become.

Meme Features . This category consists of  X  X ount X  fea-tures and  X  X atio X  features. The former include number of tweets, authors, retweets, and mentions associated with the hashtag; the later include the ratio of authors, retweets, mentions, and urls among tweets with the hashtag.
User Features . Three features about the users who adopted the hashtag are considered: activity of the users, sum of their followers, and maximum number of followers, which may reflect the potential scale of future diffusion.
Content Features . We pay special attention to senti-ment indicators from the content of tweets, including counts of emoticons, strength of word-level sentiments, and num-ber of special signals. Special signals include words with repeated letters (e.g. goooooood), repeated exclamation marks (e.g. !!!) and repeated question marks (e.g. ???).
Network Features . A social network can be constructed through retweets and mentions associated with a hashtag. Several graph features are extracted from this network of users, including graph order, graph density, average degree and entropy of degree distribution.

Hashtag Features . The length of the hashtag, the count of the hashtag with different cases and the co-occurrence frequency of hashtags are considered in this category.
Time Series Features . Coefficients of polynomial curve fitting and symbolic sequences are defined to represent the shape of the time series of the hashtag. Besides, some deriva-tive features are defined to describe the characteristics of the time series, such as dormant period, mean value and stan-dard deviation of the time series, mean value and standard deviation of the absolute first-order derivative, etc.
Prototype Features . Prototypes here refer to historical hashtags that are similar to the one to be predicted. Top-k prototypes for the hashtag to be predicted can be found from the historical data. For Task 1, the number of bursting hashtags among the top-k prototypes is used as a feature. For Task 2, top-k bursting prototypes are extracted, and their weighted average popularity is used as a feature. Con-sidering k from 1 to 10, we can get 10 prototype features.
Predictions were made at six representative moments af-ter a hashtag is marked as active, which can be divided into three stages, early stage (5min, 15min), middle stage (30min, 1h) and late stage (3h, 6h). Predictions after 6 hours since active were not considered because at that time only 5% of bursting hashtags have not started bursting. Our data set consists of a three-month training set (2012.11-2013.1) and a one-month test set (2013.3). Accuracy is not a reasonable metric to evaluate the performance of Task 1. The classifier can easily yield high accuracy by predicting all items into the negative class. F 1 -score, incorporating preci-sion and recall, is used as the performance metric for Task 1. RM SE (Root Mean Square Error), a common metric for regressions, is used as the metric to evaluate Task 2.
Our previous work [3] has already compared different al-gorithms for Task 1. Here we focus on evaluating the con-tribution of different types of features. We apply weighted SVM for a number of times, each time removing only one type of features. From Table 2, it can be observed that:
For those bursting hashtags predicted correctly, how early are they predicted in advance of their bursts? According to the statistics of the results, when predicted at 5 minutes since active , the correct predictions happen on average 55 minutes earlier than the actual bursts. And this value is larger for predictions at later stages of the life cycle. There-fore correct prediction of bursting hashtags is at least an average of 55 minutes earlier than the start of their bursts.
Table 3 shows the comparison of methods for Task 2. GPR achieves the best performance in most cases. Only when pre-dicted 6 hours after becoming active , is SVR slightly better than GPR. Fig. 2 shows the comparison between predicted values and observed values of log ( P op ). It can be seen that the predicted values correlate the observed values very well. Table 3: Comparison of algorithms for Task 2.
 The work is supported by National Natural Science Foun-dation of China (61373022, 61073004, 60773156), and Chi-nese Major State Basic Research Development 973 Program (2011CB302203-2). It is also partially supported by the Na-tional Science Foundation under grant numbers IIS-0968489 and IIS-1054199, and partially supported by the DARPA under award number W911NF-12-1-0037. [1] G. H. Chen, S. Nikolov, and D. Shah. A latent source [2] D. Gruhl, R. Guha, R. Kumar, J. Novak, and [3] S. Kong, Q. Mei, L. Feng, and Z. Zhao. Real-time [4] Y. R. Lin, D. Margolin, B. Keegan, A. Baronchelli, and [5] Z. Ma, A. Sun, and G. Cong. On predicting the [6] S. Nikolov. Trend or No Trend: A Novel Nonparametric
