 David A. Cieslak  X  Nitesh V. Chawla Abstract Classifier error is the product of model bias and data variance. While understanding the bias involved when selecting a given learning algorithm, it is similarly important to understand the variability in data over time, since even the One True Model might perform poorly when training and evaluation samples diverge. Thus, it becomes the points in classifier performance will occur, particularly since contemporary methods such as tenfolds and hold-out are poor predictors in divergent circumstances. This article implement a comprehensive evaluation framework to proactively detect breakpoints in classifiers X  pre-dictions and shifts in data distributions through a series of statistical tests. We outline and utilize three scenarios under which data changes: sample selection bias, covariate shift, and shifting class priors. We evaluate the framework with a variety of classifiers and datasets. 1 Introduction Consider the fundamental task of data mining: given a training sample of data, formulate a model which optimizes some measurement criteria, typically accuracy. This model is then applied to an as yet unseen set of testing examples. Depending on the nature of the data, a practitioner might select a model generated through decision trees algorithms, Bayesian methods, calculating nearest neighbors, or support vector machines. Typically an empirical validation approach is used such as tenfold cross-validation or leave-one out validation on the training set. Structural risk minimization might be used if the Vapnik X  X hervonenkis dimension of the model space is known [ 21 ].
 Assuming that the expression for the OneTrueModel for data is within the set of Turing machines, then it is possible to express a well-calibrated classifier : the proper class occurrence rate is mapped correctly for each unseen example. Caruana and Niculescu-Mizil [ 3 ] further suggests that any reasonable performance metric should be optimized by this one true model and no other model should yield better performance.

Unfortunately, this task makes several fundamental assumptions, namely the  X  X tationary distribution assumption X  [ 23 ] in the machine learning literature and  X  X on-biased distribution assumption X  [ 27 ] in the data mining community.
 Definition 1 The Stationary or Non-Biased Distribution Assumption [ 23 ] states that for each and every training set instance and test set instance is identically and independently drawn from the common distribution Q ( x , y ) .

Previous work [ 4  X  6 , 27 ] has already introduced instances violating this assumption through injection bias in data. In addition to bias, a shift in class priors or a covariate shift may alter the data distribution. In these cases, even the OneTrueModel may become irrelevant when applied to future instances should the data distribution change substantially and unpredictably. In this paper, we explore two issues within the context of this problem. First, can we identify changes in performance attributable to a change in the data distribution? Second, can we detect the presence of shift between two distributions of data?
Generally, we try to determine generalization error based on a training set for a set of classifiers in order to determine which will generally perform best. However, both theoretical and empirical methods can be limited in the presence of such distributional divergences. The structural risk minimization bound established as a function of the VC dimension makes the critical stationary distribution assumption. Thus, implying that the bounds may not hold in the scenarios containing distribution drifts [ 5 , 23 ]. The empirical methods comprising of tenfold cross-validation, bootstrap, leave-one out, etc., generate empirical measures on the generalization performance of a classifier. It is obvious that these measures are limited as they are generated from the validation set, which is derived from a similar distribution as the training set. These measures, by no means, reflect the effective generalization in the presence of changes in testing set distributions. This presents the challenge of establishing a landscape of classifiers X  performance across different data assumption. Kukar [ 14 ] notes the fact that often typical assessment methods cannot produce reliable and unbiased assessments of their predictions X  quality.

Thus, our paper focuses on the following critical components relevant to an application of knowledge discovery and data mining process: (a) detection of deviation in the predictive estimates over the testing set as compared to the validation set; (b) identification of causes for such a drift in distribution that is what feature(s) are responsible for the testing population to change. We believe these issues are pervasive in the real-world deployment and evaluation of data mining solutions. We choose to compare performance between the validation set and the testing set, as the validation set is utilized at the time of training to estimate the  X  X eneralization X  performance. The goal then is to see whether the predictions on the unseen testing set in the future are reflective of the observations on the validation set. What is the uncertainty in the predictive estimates? Contribution This paper outlines a statistical framework, as depicted in Fig. 1 , to identify the fracture points in predictive distributions and alteration to the feature space, where a fracture is considered as the points of failure in classifiers X  predictions X  X eviations from the expected or the norm. We consider changes in data distribution by injecting scenarios of sample selection bias, class prior shift, and covariate shift. We approach the problem in two stages. In stage one, we detect whether there is a statistically significant shift in the predictive distributions. We propose to use the Kruskal X  X allis test [ 7 ] to isolate a change in data through the distribution of probabilities generated by a learning algorithm. Note that the tests are unsupervised as we will not be aware of the actual testing set classes. Thus, we compare the posterior probability distributions between the validation set and testing set. If this test indicates that there is indeed a change to the predictive distribution, a practitioner may then use a series of unsupervised statistical measures based on the Kolmogorov X  X mirnov test [ 12 , 22 ] and Hellinger distance [ 2 ] to indicate the presence or absence of a change in the feature space. With this information, a practitioner becomes aware of alteration in the data distribution and is equipped to make informed classifier choices or take additional corrective steps. We use four different classifiers and nine different datasets to assess the utility of this framework. Thus, the key questions that we address in the paper are: (a) How to detect fracture in the predictive distributions on the testing set? and (b) How to detect the feature(s) responsible for the introduction of distributional divergence to the testing set?
We would also like to point out that this framework can be used to construct a sensitivity index for different classifiers during training. That is, one can simulate different distributional change during validation and observe the variation in the performance of classifiers over these changes. Accordingly, the most generalizable classifier can be chosen, as demanded by an application or domain.

The remainder of this paper is divided as follows: Sect. 2 defines distributional change and our treatment of the same in this paper. Section 3 describes the datasets and classifiers used in the paper. Section 4 presents a case study on performance of classifiers after distributional change. Section 5 then identifies how changes may be detected between data samples; it also provides a thorough description of the statistical methods used in our work. Section 6 discusses the results of the experiments in this article and Sect. 7 draws conclusions to the work presented in this paper. 2 Changes in data distribution We use three methods to establish a violation in the stationary distribution assumption. The drawn independently from a distribution D where the domain is X  X  Y  X  S , with X being the feature space, Y is the class label space, and S is a binary space for which the variable s indicates the example is in the training when s = 1 and is not in the training set when s = 0. Operating in this environment, the following cases emerge regarding the dependency of s on ( x , y ) [ 10 , 17 ]. Definition 2 The missing completely at random (MCAR) sample selection bias occurs when s is independent of both x and y . We thus state that P ( s = 1 | x , y ) = P ( s = 1 ) , thus the sample bias depends on a factor totally independent from the feature vector x and class label y . This implies that the training and testing sets are derived from the same distribution. The stationary distribution assumption theoretically holds under MCAR, but we include it in our paper for completeness.
 Definition 3 Sampling bias is missing at random (MAR) if s depends on x but conditional on x is independent of y , thus, we may state P ( s = 1 | x , y ) = P ( s = 1 | x ) . Therefore, sampling is feature dependent as the sampling probability varies according to the feature vector x , but is independent to the class label y . This situation can occur if the testing set is thresholded on one or more known features.
 Definition 4 Missing not at random (MNAR) bias occurs when there is no independence assumption between x , y , and s . This scenario essentially introduces the sample selection bias, as the cause of distributional shifts may be unknown. That is, one may not have access to the feature leading to the censoring in the dataset. We may state the tautology of P ( s = 1 | training set is different from the observed y in the testing set: P ( y = 1 | x , s = 1 ) = P ( y = 1 | x , s = 0 ) .

We establish the biases as follows. For MCAR, the examples are removed uniformly at random; we remove 25 and 50% of the examples in the testing sets. We also use MAR and MNAR by removing the top 25 and 50% of values along one feature. We first sort the dataset based on one particular feature and then remove the top 25% or the top 50% of examples conditioned on that particular feature value (thresholding). In the case of MNAR, the remaining examples have the chosen feature masked as  X  X nknown X  or missing. By masking the feature as unknown or missing, we are able to inject the  X  X atent X  MNAR bias. We generate separate MAR and MNAR biased testing distributions for each feature within the dataset. The reported results are aggregates to indicate the  X  X verage case X  arising from introduction of biases. For fairness, an equivalent number of MCAR samples were generated; thus, MCAR function of input quality degradation; however, their analysis does uses very different methods to alter data distributions. Groot et al. [ 8 ] also centers on Knowledge-based systems which are designed to mimic human problem-solving through artificial intelligence using a stored information on a particular subject. This study focuses on classifiers, rather than Knowledge-based systems.

In Fig. 2 , we view a single, hypothetical data distribution at t 1. This snapshot is the first that is observed and is used in training a classifier. In the left snap-shot, we view the distribution of data across a single feature as separated two classes. In the right snap-shot, we view the totality of the data distribution. At some point t 2, which is after t 1, the data distribution in Fig. 3 , is observed. We note that the difference between Figs. 2 and 3 is a result of feature bias. Here, we note that at t 2, the top quarter of values has been removed from the distribution, yielding a  X  X ut X  in the sample. This affects the overall shape of P ( X ) , as seen in the right snap-shot of t 2.

The second method used to induce distributional change is covariate shift (CS). The previous method affects how examples in the test set are sampled from the data distribution, but here those examples are fundamentally altered. To incorporate covariate shift, we begin by calculating the standard deviation for a single feature of a dataset. The value for this feature increased by N percent for each testing sample example. Thus, CS 25 has increased each testing example by 25% of one standard deviation. This article uses N  X  25 , 50 , 100 , 200. As with sample selection bias, the results reported in this study are an aggregate by applying covariate shift to each feature to represent the  X  X verage case X  arising from the introduction of covariate shift. We formally define covariate shift as follows.
 Definition 5 Covariate shift (CS) occurs when the data distribution generating the feature vector x and its related class label y changes as a result of a latent variable t .Thus,wemay state that covariate shift has occurred when P ( y | x , t 1 ) = P ( y | x , t 2 ) .
In Fig. 4 , we observe how the original data distribution at t 1inFig. 2 changes to the shape of the data distribution at t 2 as a product of covariate shift. We note how distribution has shifted to its new position at the solid line relative to its original position at the dashed line. While we note the forms of the joint distributions remain unaltered, their absolute position has changed significantly.
 The third method used to violate the stationary distribution assumption is shifting priors . Unlike the previous two methods, which alter the feature space directly and the class dis-tribution only indirectly, this method changes the class distribution directly and the feature space only indirectly. Random undersampling is used to induce varying class skew ratios, has 2,000 examples from class X  X nd 1,000 examples of class + in the testing set. To evaluate on P ( + ) = 0 . 5, 1,000 class X  X xamples are randomly removed from the evaluation set. We formally define shifting priors as follows.
 Definition 6 Shifting priors occurs when s depends on y , thus, we may state P ( s = 1 | x , y ) = P ( s = 1 | y ) . Therefore, sampling is dependent on the class label and independent of the feature vector x .

We note the effects of shifting priors from t 1to t 2 by comparing Figs. 2 , 3 , 4 and 5 .Inthe left snap-shots of t 2, we view the distribution of data across a single feature as separated two classes and note that the relative balance of classes has reversed between t 1and t 2. The right snap-shots contain the joint distribution of all examples and we note that affecting the ratios 3 Datasets and classifiers This paper uses several common UCI [ 18 ] and real-world datasets, summarized in Table 1 . These datasets vary extensively in both size and distribution, offering many different domains. Page, Pendigits, Phoneme, Satimage, and Segment come from the UCI Machine Learning repository [ 18 ]. The Oil dataset contains a set of oil slick images based on live data [ 13 ]. Compustat represents real world finance data and may contain natural bias as the training and testing samples come from different 2-year periods, while Mammography comes from studying calcifications in the medical domain [ 24 ]. E-State consists of electrotopological state descriptors for a series of compounds from the National Cancer Institute X  X  Yeast AntiCancer drug screen [ 9 ].
 For the experiments conducted, we used C4.5 Decision Trees, Naive Bayes, k -Nearest Neighbor (where k = 5), and Support Vector Machines. Each classifier formed probability estimating models. Decision trees were trained as Probability Estimation Trees (PETs) [ 19 ]. k -Nearest Neighbor formed predictive probabilities as the proportion of the classes for the set of nearest neighbors. For SVM, the SVM light software [ 1 ] was used with default parameters to form probabilistic predictions. Naive Bayes naturally forms probabilities. We restrained ourselves to default parameters for all classifiers to establish an even playing-field. These algo-rithms are among the most influential data mining algorithms in the research community [ 25 ]. 4 Case study: impact of distributional shifts Various factors can be responsible for introducing distributional divergences in the testing set. The feature space could be biased through a number of methods, causing the classifier to generate inappropriate predictive distributions. In some cases, divergence occurs as a result of collecting separate sub-populations governed by independent feature and class probability density functions within a single distribution. An example is the frequencies of measured wingspans of one species of bird found on two independent tropical islands. Temporal dis-tance may also incorporate divergence: the rules governing data may change slightly or drastically over time. Such divergences can occur in various applications such as marketing and credit scoring, as the targeted population can change over time.

We now present a case study across classifiers and different datasets to demonstrate the effect of changes on the testing set. We use the Friedman test to statistically validate whether the predictions in the testing set start to significantly differ from the validation set once the different distributional shifts, as defined in the previous Section, are introduced. We will discuss the Friedman test before presenting our results. The goal of this section is to establish the premise of the framework that the classifiers behave differently when distributions change in the testing set. 4.1 Friedman test The Friedman test is a non-parametric statistical test developed by the U.S. economist Milton Friedman [ 16 ]. The Friedman test is used for two-way analysis of variance by ranks. This two-way test assumes that all data comes from populations having the same continuous distribution, apart from possibly different locations due to column and row effects and that all observations are mutually independent. An example Friedman test evaluation is of n welders using k welding torches with the ensuing welds were rated on quality. Is there one torch that produced better welds than the others? rows. r ( x ij ) is then the rank within block (i.e., within its row). The average rank per sample is calculated as k is the number of samples and n represents the number of examples in each sample. With the above ranking, calculate the following: with  X  2 as an associated p -value. This is the p -value for the null hypothesis that the column medians are essentially the same. When the p -value is very low, this indicates that this is likely not the case and the null hypothesis is void.

To apply Friedman, we begin by first randomly partitioning the dataset into 50% for trai-ning, 20% for validation, and 30% for testing. Each classifier learned on the corresponding training set is then applied to the natural validation and testing samples, resulting in proba-bilistic predictions on both sets. This formed the Base results for the stationary distribution assumption, that is both validation and testing sets were derived from the same distribution. 4.1.1 Sample selection bias We introduced the three biases X  X CAR, MNAR, and MAR X  X s follows. Considering a discussed in the previous section. This resulted in as many testing sets as the number of features for each dataset and bias combination. This allowed us to avoid the dominance of results by any one feature in particular. We applied the same classifiers learned on the training set to each of the generated biased testing sets resulting in probabilistic predictions.
Then, we formed 100 bootstraps on each (validation and testing) set of probabilistic predictions for each dataset and calculated accuracies on each. The Friedman test was then used to test the null hypothesis: there is no statistically significant difference between the validation and testing set accuracies for a dataset. Figure 6 shows the resulting p -values. The p -values for a given amount of bias are the averages of the p -values from the application of that particular bias to each feature in the dataset. Thus, it reflects the summarized p -value given a bias, dataset, and classifier. The convention in the figure is: the x -axis domain shows the different testing biases, including the Base stationary distribution. Each bias has a cluster of four lines representing the different classifiers. The y -axis shows the range of p -value across all the datasets for each classifier. As the p -value decreases, the hypothesis is more strongly rejected.

Figure 6 shows a compelling trend. If we run along the x -axis, we observe that the range drops as we go more towards heavily biased testing sets. This confirms the premise that the performances of classifiers will suffer in non-stationary environments. Among the classifiers, decision trees and k -nearest neighbor seem to be less sensitive to distributional biases as compared to SVM and Naive Bayes. Since the y -axis reflects the range over datasets, we observe that some datasets lead to a complete failure of predictive estimates ( p -value of datasets at MNAR-50. This is a strong demonstration of the fragility of classifiers in changing distributions, hence the forming the main motivation of our work. 4.1.2 Covariate shift We test for a performance fracture from covariate shift in an identical fashion as before. The covariate shift is imposed on each feature individually; thus, there are as many cova-riate samples as generated under the sample selection bias experiments. We generate a 100 bootstrap sample for each and test according to Friedman, forming an aggregate across all fea-tures. Figure 7 shows a similarly compelling trend. Moving right along the x -axis reflects an increase in the degree of covariate shift. As with bias, this confirms the premise that classifier performance suffers in a non-stationary environment. Additionally, performance degrades as the degree of shift increases. Throughout, SVM appears the most resilient to covariate shift. Under moderate shift, such as CS25 and CS50, Naive Bayes performs well on some datasets. We note that in general, the classifiers are failing (i.e., have a low p -value) under covariate shift. While SVM and Naive Bayes are resilient to some instances of covariate shift, the average case indicates that overwhelmingly a classifier will fail under covariate shift. 4.1.3 Shifting priors To incorporate a shift in class priors, we use random undersampling on the testing distribution to impose a desired class skew by selecting a P ( + )  X  2 , 5 , 10 , 20 ,... 70. 100 bootstraps of probabilities are generated, which in turn form populations of 100 accuracies. These sets of accuracies are then compared using the Friedman test. Figure 8 shows the effects of prior shift on the Friedman values for produced accuracy. The far right represents distributions with the highest P ( + ) . As before, the premise is confirmed that the performances of classifiers will suffer in non-stationary environments. All classifiers suffer heavily as the P ( + ) increases. This is intuitive, since accuracy is partially class driven. Classifiers tend to perform less accurately on small classes; thus, the relative class balance reversal dictates that the accuracies should generally be driven down as P ( + ) increases. The highest p -values are returned for P ( + ) values of 2, 5, and 10. As we have observed in Table 1 , these values are nearest to the original class distributions. This matches the intuition that produced accuracies should be similar when the training and testing distributions, and hence P ( + ) values, are similar. We do notice an odd fluctuation in some of the p -values from Naive Bayes when P ( + ) has the values of 50, 60, and 70. We note that these values occur from the Compustat, E-State, Oil, and Phoneme datasets and are 0 on all other datasets. In these cases, performance is conserved either fortuitously or because the distributions are relatively similar, despite the shift in priors. This indicates that there is really no cause of alarm for these data sets, even if the priors have shifted. That is the classifier is performing as expected, even if the testing set is now carrying a distributional bias towards the (former) minority class. Our results in the subsequent sections assert this point, establishing a keen highlight for this framework. This further demonstrates how classifiers might fracture as a result of a changing distribution, and it is highly data dependent. Thus it is increasingly important t have such a framework in place.

We note that one can directly use this framework to induce distributional change during the validation process. This can result in an immediate evaluation of sensitivity of different classifiers as the population drifts. Then, conditioned on the nature of the application, one can then choose a classifier that is most consistent, perhaps at the cost of some accuracy at the stationary distribution. 5 Detecting and identifying changes in distribution The goal of this work is to apply unsupervised methods to detect drifts in predictive and data distributions. Unsupervised methods are required as the class of testing data is presumed to be unknown at the time of prediction. The following subsections provide tests for finding bias through three separate tests: the Kruskal X  X allis test in Sect. 5.1 ,the  X  2 test for nominal features in Sect. 5.2 and the Kolmogorov X  X mirnov test for continuous features in Sect. 5.3 , and Hellinger distance in Sect. 5.4 . Together, they provide a statistical framework as shown in Fig. 1 . We split the original data into the 50 : 20 : 30 training, validation, and testing propor-tion, respectively, as described before. We introduce sample selection bias, covariate shift, and shifted classed priors to form a variety of testing samples. The results in Sects. 5.1 , 5.3 , and 5.4 all represent the average values found across bias on all features. This reflects the  X  X verage case X  feature becoming biased in a particular dataset. 5.1 Kruskal X  X allis analysis of generated probability estimates Kruskal X  X allis one-way analysis of variance by ranks is a non-parametric method for testing equality of population medians among groups [ 7 ]. Unlike One-way ANOVA, no assumption regarding a normal distribution is made since the test is non-parametric. There is also no assumption that the population variables between compared groups are the same. This test calculates the following statistic where n g is the number of observations in group g , r gj is the overall rank of observation j in group g , N is the total number of observations,  X  r g is the average rank of the observations within group g ,and  X  r is the average rank of all observations. The p -value is then calculated as
This is the p -value of the null hypothesis that all samples are drawn from the same population or different populations of the same distribution. Therefore, this is a very useful test for determining if sets of probabilities are drawn from the same or different distributions. Here it is applied as a comparison of the probabilities estimated on the validation set against the natural testing distribution and the six other biased distributions. 5.1.1 Sample selection bias In Fig. 9 we observe the calculated set of Kruskal X  X allis p -values under sample selection bias. Those generated in comparing the set of validation probabilities against those of the tes-ting set and distributions formed through MCAR are quite similar, which is expected as there is similarity between the validation sample and the testing and completely randomly biased testing samples. However, there is a substantive difference to the MAR and MNAR biased sets. Under these sophisticated biases, the distribution of probability estimates differs signi-ficantly. With such a drastic change in the estimates, there should follow a fairly substantial change in the classifier performance. We also note that the values captured through Kruskal-Wallis are quite correlated to those found under the supervised (determining accuracy and rank-order requires known classes) Friedman test (Fig. 6 ). 5.1.2 Covariate shift Figure 10 observes the KW p -values during covariate shift. As the shift increases, we note that there is a general drop in p -value. It is evident that as the covariate shift increases, the classifiers start shifting in the predictive distributions. Thus, it is increasingly likely that the pool of probabilities are derived from different populations since the data distribution is moving relative to the trained decision boundaries. Different classifiers are behaving diffe-rently again, and the range of the p -values indicates that the reaction of classifiers to different datasets is also very different. Thus, it is critical to instrument a monitoring framework for a dataset and a chosen classifier as the fracture points may occur at different points. 5.1.3 Shifting priors Additionally, we note that KW is quite effective in identifying a shift in class priors, as seen in Fig. 11 . While there are some odd spikes in the p -values as P ( + ) increases, we note that the average case will warrant further investigation when P ( + )  X  20, since the typical p -value is very low, if not zero. As seen in Fig. 5 , the relative occurrences of examples as a product of the feature vector can change drastically under a prior shift. Assuming that the classifier produces a relatively diverse set of probabilities, it then follows that the population of generated probabilities should change significantly as the distribution in feature space changes. KW can ascertains these differences between populations and is therefore effective in identifying a change in distribution as caused by shifting class priors. We do note that there are some spikes in p -values, which correlate with the previous Friedman results in Fig. 8 . This shows that not all classifiers are failing under the same conditions for all datasets. That is, the data properties dictate different sensitivities in predictions. Again the same set of datasets (Compustat, E-state, Oil, and Phoneme) and classifiers that we observed in Friedman test demonstrate their robustness for shifting priors. As we will see under KS and Hellinger, on these datasets there is a distributional similarity in terms of the feature space. These leads to a similar set of predicted probabilities and the conserved results under Friedman. 5.1.4 Summary a model and predict probabilities on both the validation and testing data samples. Using Kruskal X  X allis, the practitioner may then determine whether the sets of probabilities came from different populations. If so, it is then wise to use the tests in Sects. 5.3 and 5.4 to attempt to determine bias type and isolate biased features. 5.2  X  2 test  X  2 is a statistical test used to compare observed nominal data. This is useful in determining whether the distribution of observations within categorical data are dissimilar. when there are p populations and v values, n p ,v represents the count of value v in population that as we are comparing two distributions, p = 2. To determine a p -value with this test, degrees of freedom are also considered as
Based on the found values of  X  2 and df , a look-up table is then used to determine a p -value. With this test, we may determine an appropriate p -value for nominal features. 5.3 Kolmogorov-Smirnov test The Kolmogorov X  X mirnov test (often called the KS test) determines if there is divergence between two underlying one-dimensional probability distributions or whether an underlying probability distribution differs from a hypothesized distribution, in either case based on finite samples [ 12 , 22 ].

The two-sample KS test is particularly useful as a general non-parametric method of comparing two sample distributions as it detects divergence in both location and shape of the observed distribution functions. KS has an advantage over other statistical methods in that it makes no assumption on the distribution of data, which other methods such as Student X  X  t -test make. However, other methods may be more sensitive if the distributional assumptions are met.

Quite simply, KS makes use of a plot of the Cumulative Fraction Function. Suppose we 1 .  X   X  values of distribution. For each point x ,the y -axis is calculated as the percentage of instances strictly smaller than x ; hence, it is the cumulative fraction of the data which is smaller than x . Figure 12 contains a plot of A against B . Using a planesweep, the KS test then calculates the maximum vertical deviation between the two distributions. For A and B ,Fig. 12 indicates this as D . In this case, the maximum vertical deviation is 0.5. We would like to state whether this value represents a significant distance. We calculate where n 1 and n 2 are the number of examples in the two samples. Using d = 2andthe  X  2 calculation, the resultant p -value suggests whether there is a significant difference between the two distributions and may be compared against a desired confidence level. Within the context of monitoring classifiers X  performance, we may use the KS test to determine if there is a significant distributional difference between the training and testing distributions for continuous features. When features are nominal, a  X  2 test is instead applied to determine p -value.

To do so, we must iterate through both distributions on a feature wise basis, and tabulate the number of failing features, which is why using Kruskal-Wallis on the probability distributions is a better first step. 5.3.1 Sample selection bias Ta b l e 2 represents the proportion of features failing the KS test under each bias. Based on these results, we observe that Compustat, Page, and Segment contain some degree of natural bias between training and testing distributions. Of these, Compustat is the least surprising as its training and testing data come from two independent sets of financial information covering separate and sequential 2-year periods. For these three datasets, it is noted that MCAR actually reduces the failure proportion somewhat, likely because there are unusual values creating large maximum separations. The random bias removes these values and reduces the separation, hence dropping the feature failure rate. In the remaining datasets, MCAR very minimally increases the feature failure rate, if at all. It is observed that the more systematic biases MAR and MNAR increase the feature failure rate substantially. This indicates that the KS test may be used simply and quite effectively to detect a bias incorporated between two data distributions.
 In addition to understanding the degree to which bias causes feature failure under the KS test, we seek to study the interaction of a particular feature failing on other features. This is important as the bias is applied to group of features simultaneously or the MNAR could actually be affecting a collection of features together. Restated, Do features tend to fail independently or concomitantly? It is important to answer this for the sample selection bias scenario. To this end, a Failure Correlation Matrix F was constructed where F i , j represents the count for which features i and j fail under KS concomitantly. Based on the counts within F ,the  X  -correlation is calculated for each pairwise set of features as as  X  is a strong measure of the associativity of two dichotomies and discounts the effects of sample size. The average correlation per pairwise comparison is reported in Table 3 .Values between 0.0 and 0.3 are considered to have little to no associativity, 0.3 to 0.7 have some associativity, and above 0.7 has very strong associativity. The average  X  -correlation is quite low, if not zero, for the baseline comparison and MCAR. Thus, there is little correlation between the failure of features, if failure occurs at all. As MAR and MNAR are introduced, there is a spike in  X  -correlation. This is an expected result as there is some degree of covariance among the measured features; thus, a bias on one feature will to some degree incorporate a bias to related features. The exception to this trend is Mammography, which reports zero correlation categorically, as within each test either all or none of the features fail the KS test except for some MCAR trials for which failure occurred totally at random.

Once bias is suspected through the Kruskal X  X allis test on the set of predicted probabilities, the KS test operates as a  X  X uick X  method to check for the existence of bias to see if a fairly high proportion of the features fail this test (in most cases, 30% feature failure appears to be a reasonable point to presume some bias as observed in Table 2 ). Table 3 reported the  X  -correlation of the KS test as capable of determining groups of features which tend to fail together. Suppose there is a high correlation of failure between two features. In the case that only one fails, one may assume a reasonable correlation between the two features and omit the failing feature during model training confident that the succeeding feature will account for much of the information contained within the failing one. As seen in Table 2 ,theKS test struggles to isolate individual biased features. Thus, it is a good method to confirm the findings from Kruskal X  X allis. To more acutely determine degree and which features are biased, we turn to Hellinger distance, as discussed in Sect. 5.4 . 5.3.2 Covariate shift We now consider the covariate shift scenario. The proportion of features failing in this case are depicted in Table 4 . We note that despite the relative increment (25, 50, 100, or 200%), mechanism, only one feature within the feature vector is altered per experiment. The increase in proportion of features failing in Table 4 relative to the baseline failure rate, as reported in Ta b l e 3 indicates that on average one additional feature is failing X  X nless that feature fails in the baseline. Therefore, the KS test is quite sensitive to even minor covariate shift and is invaluable for detecting this form of distributional change. 5.3.3 Shifting priors Next, we apply the KS test to the changing priors scenarios. To do so, we calculate the KS p -value between training and evaluation samples along each feature. The proportion of features failing KS (i.e., p -value &lt; 0 . 05) is depicted for each dataset in Fig. 13 . Here, we observe that the proportion of features failing KS tends to be the lowest when the relative priors most resemble the original distribution. As the priors diverge from the original, the proportion of features failing KS increases.

The exceptions to this occur in Compustat, E-State, Phoneme, and Oil. We examine these datasets further in Fig. 14 by analyzing feature failure as a product of class. In these cases, we note that the change in features failing as a product of the positive class (Figs. 14 a, c, e) is relatively small as compared to the negative class (Figs. 14 b, d, f). This indicates that at low values of P ( + ) , the KS failure is primarily driven by the negative class. As P ( + ) increases, the relative importance of the negative class is likewise reduced, which in turn leads to an increased impact on KS by the positive class. This explains the reversal in trend for Compustat and Oil in Fig. 13 . Additionally, Compustat, E-State, Phoneme, and Oil occasionally yield high p -values for KW at high values of P ( + ) , which corresponds to a similar conservation in the Friedman performance. This implies that there is no reason for alarm for these data sets, as the class demonstrating the distribution shifts is now undersampled in the testing sets, and does not induce failure of classifiers X  performance. 5.3.4 Summary We have thus demonstrated how the Kolmogorov X  X mirnov test may be used effectively in identifying the proportion of features which are significantly different within two data samples. In the case of bias, a more difficult bias usually causes a greater proportion of features to fail KS. In addition, KS may be combined with  X  -correlation to determine how features fail independently and concomitantly. This test is also extremely sensitive to covariate shift. Finally, KS can be used to detect shifting class priors, although this method is susceptible when feature failure is a product of class, such as in Compustat, E-State, Phoneme, and Oil. 5.4 Hellinger distance Hellinger distance [ 2 ], also referred to as Bhattacharyya Distance [ 11 ],isameasureofdis-tributional divergence. Legendre and Gallagher [ 15 ] concludes that for linear ordination, the Hellinger distance offers a better compromise between linearity and resolution, as compared to similar metrics such as the  X  2 metric and the  X  2 distance. Hellinger distance has been used effectively within the ecological domain and is recommended for clustering or ordination of species abundance data [ 20 ]. This measure has also been used as a means of locating statistical outliers for fraud detection in insurance applications [ 26 ].
 To apply this measure of density, we presume two independent distributions of data X and Y .Both X and Y contain p bins, where each bin contains the count of some logical subunits measured between X and Y . The Hellinger distance between X and Y is then calculated by
Suppose that there exist two populations, Pop 1and Pop 2. The occurrence count of value a , b ,and c within each population have been tabulated and are reported in Table 5 .
Using ( 9 ), Hellinger ( Pop 1 , Pop 2 ) = Hellinger distance. This is expected as Pop 1and Pop 2 are completely divergent: there is no overlap in values a , b ,and c .
Here, we outline a method for using Hellinger distance to quantify distributional divergence. Here, Pop 1and Pop 2 are the Training and Testing distributions and the count values are feature value counts. In the case of continuous features, the Training and Testing sets are temporarily combined to construct 30 equi-width bins. Using ( 9 ), Hellinger distance is calculated for each feature and the average across all features is considered as the Hellinger distance. This method is outlined in Algorithm 1 .
 Algorithm 1 Calc _ Hellinger
In these experiments, we first calculated the distances between both the training set fea-tures and the original testing set, which we call the baseline distance. This reflects the actual distances between the training and testing set features without any bias injection. Then, we ponding distances from the training set features. We are primarily interested in the relative changes in the distances of the altered testing sets from the baseline. 5.4.1 Sample selection bias The observed relative changes as a product of bias are summarized in Fig. 15 . The calculated distances tend to be relatively low between the base training and testing distributions and testing distributions generated through MCAR. There is a substantial increase in Hellinger distance when an MAR or MNAR is at play. Thus, applying Hellinger distance is quite effective in differentiating between the relative level of bias sophistication.

Of additional interest is the skew of Hellinger distances produced. Table 6 demonstrates that there is typically a substantial negative skew to the set of distances calculated, meaning there is a tail of values below the mean. This is indicative that is more data below the mean than would be expected in a normal distribution. There is generally a strong variability in the distances depending on the feature conditioned for injection of bias. This indicates that different feature thresholds have different effects on the testing set distributions, and it is important to consider the different scenarios. We note that Oil violates the typical trend, likely due to the extremely small size of this dataset. In general, Hellinger distance enables the isolation of features along which bias occurs. 5.4.2 Covariate shift We note that covariate shift generates the changes in Hellinger distance noted by Fig. 16 . While doubling bias can significantly increase Hellinger distance (as seen in Fig. 15 ), increasing the degree of covariate shift only increases this distance a relatively minor about beyond the given threshold. As under the KS test, this limited increase is somewhat expected, given that our mechanism for covariate shift only alters a single feature. That said, a change stemming from this type of covariate shift may go unnoticed by Hellinger distance since the relative increase is small, such as in the Compustat, Oil, Satimage, and Segment datasets. Hence, it is important to have the KS test in conjunction for covariate shift, as it reflects the point in separation for one feature versus the sample selection bias that affects all the features conditioned on one feature. 5.4.3 Shifting priors We also consider how Hellinger distance changes as a result of a shift in class priors. The percent change in this distance as a product of P ( + ) is presented in Fig. 17 .We observe for each dataset that the percent change in Hellinger distance is minimal at or near its natural distribution. As P ( + ) moves further from natural, there is a continual increase in Hellinger distance. The change is P ( + ) is altering the percent change; thus, Hellinger distance is highly effective in detecting a change in class priors since the alteration in the class ratio is affective the underlying feature distribution. 5.4.4 Summary From these experiments, we note that Hellinger is able to corroborate the findings of KS and complements the differentiation and determination of biases. The KS test is useful in determining if there is a significant maximal point of separation. Hellinger distance is more distributions. MCAR is the lowest range, then MNAR, then MAR. We expect this ordering: MCAR is sampled at random and should fairly closely resemble the training set. MAR should produce the highest changes in Hellinger: the feature(s) generating bias have been observed and the distributional change will be reflected by this distance. MNAR is expected to produce results between MCAR and MAR since the feature MNAR biases along is hidden, but it is also reasonable to expect some level of correlation to the observed features. When only one feature is altered via covariate shift, the Hellinger distance might not indicate a distributional divergence. Since the KS test easily detected covariate shift and missed some class priors shift and Hellinger easily picked up class prior shift and missed some covariate shift, we recommend the coupled usage of KS test and Hellinger distance to isolate the biased features. 6 Discussion This article has proposed an outline for a statistical framework using three tests to detect divergence between two data samples. This framework has been tested on three engineered data change scenarios. The first of these scenarios is sample selection bias, which removes covary. Under bias, there is a general performance failure according to the Friedman test. This is reflected by an identification of a divergence between probability populations under the KW test, particularly when the bias is the systematic MAR and MNAR. An increase in the degree of bias is reflected by lowered p -values. Likewise, the relative Hellinger distance corroborates the likely presence of bias in the testing distribution.

Our second change scenario directly affected a single feature per experiment, by physically altering its value. KW is effective in identifying the presence of covariate shift, and lower p -values are somewhat indicative of a larger degree of covariate shift. Suspecting a shift, the KS test then effectively confirms a distributional gap along a single feature, although not necessarily the degree of shift. The Hellinger distance is somewhat effective in identifying when covariate shift occurs, but we observe that relative Hellinger distances can be quite effective when establishing the degree of covariate shift.

Our final scenario is unlike the others in that the feature space is manipulated only indirectly as a byproduct of adjusting the class skew ratio. We note that for some instances, the performance is actually conserved. As we have seen through the KW and KS test, this occurs when the distribution is actually similar to the training sample. This is a compelling argument for continuous monitoring of classifiers X  performance for different datasets, as they will reflect different sensitivities to changes in data class skew distribution. For instance, as we see for Compustat and Oil, the larger feature shifts are present in the majority class, which is heavily undersampled in the testing distribution because of feature shift. Now, since there are no drifts in the feature space and the former minority or positive class now dominates the testing set, the classifier performs as expected. No surprising elements are seen in the testing samples. In the general case of class prior shift, KW will indicate further investigation should be pursued and increased Hellinger distance in particular correlates as class skew deviates further from the natural level. 7 Conclusions Data mining is presented with the challenge of drifts in data distribution between the training and testing samples. The basic assumption that the past is a reasonable predictor of future may not hold in different scenarios. This certainly hinders the performance of learning algorithms, as we have also demonstrated in this work. Thus, it becomes critical to identify and react to the changes in data distribution. To that end, we implemented a framework that comprised of a family of statistical measures. We showed that it is possible to proactively detect fractures in classifier performance. Our test suite comprised of a variety of classifiers and data sets with different characteristics.
 Based on our observations, we make the following recommendations. Using Kruskal X  Wallis on the distributions of validation and testing probabilities is useful as a first step. If the practitioner determines there is no significant difference between them, then it is possible to proceed as per typical. Otherwise, the practitioner can use the following steps to isolate altered data. Firstly, the Kolmogorov X  X mirnov or the  X  2 test can be used to detect independent feature failure and is quite strong at detecting bias and covariate shift. Through  X  -correlation analysis, one can then determine the co-failure of features, which we have shown to be quite strong under sophisticated bias. This is relevant for sample selection bias as multiple features are being affected simultaneously by conditioning on one feature X  X  bias. Then, Hellinger distance can be used to readily identify and differentiate the level of bias, even when the factor of bias is unmeasured, such as MNAR. However, we recommend using Hellinger in conjunction with the KS or  X  2 tests as the latter can allow for statistical significance tests and since it is a strong detector for shifting class priors.

We believe that a single statistical measure cannot be used in isolation, rather a family of measures should be used in conjunction to remain more confident in detecting fractures in classifier predictions. We also stress that it is increasingly important to instrument such a comprehensive framework for a continuous monitoring of classifiers X  performance.
 References Author Biographies
