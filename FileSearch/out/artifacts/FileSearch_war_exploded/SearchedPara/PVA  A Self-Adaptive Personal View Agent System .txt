 In this paper, we present PVA, an adaptive personal view information agent system to track, learn and manage, user's interests in Internet documents. When user's interests change, PVA, in not only the contents, but also in the structure of user profile, is modified to adapt to the changes. Experimental results show that modulating the structure of user profile does increase the accuracy of personalization systems. Information Systems -Information Storage and Retrieval -Systems and Software (H.3.4): User profiles and alert services; Information Systems -Information Interfaces and Presentation -User Interfaces (H.5.2), Algorithms, Management, Design, Experimentation, Theory. WWW, Personalization, Personal view, Machine learning. 
Nowadays, the explosive growth of Web documents makes an information search a time consuming job. Even though the current keyword based search technologies could alleviate this pain, the ambiguous queries debase their performances. To tackle this problem, much research is involved on the personalization of WWW access. The personalization systems learn user profiles[5] and assist people when they are surfing the web. In this paper, we present a system, Personal View Agent (PVA), that can automatically organize a personal view by learning the user's interests, and adapt the personal view to the user's changing interests. There are three important features in PVA: (1) PVA learns user profile without intervening in the user's browsing, such as relevance feedback[13]. Although relevance feedback, which asks users to manually rate pages may make sense, it is troublesome to users and seldom done. In PVA, we use a proxy to collect the training data without user intervention. (2) A user may have interests in multiple domains. PVA, like the previous works[2|[14], models each domain in vector space model[13]. personal or classroom use is granted without fee provided that copies requires prior specific permission and/or a tee. KDD 01 San Francisco CA USA Copyright ACM 2001 1-58113-391-x/01/08...$5.00 Furthermore, these vectors are organized into a hierarchical structure (called personal view). Each node in personal view represents a realistic topic. (3) PVA can adapt to changes in the user's interests over time. Since user's interests often change, personalization systems need to have a mechanism to adapt to the changes. While many previous works[2][4][14] are only concerned with the contents of user profile, PVA also modulates the structure of personal view to adapt to changes in user's interests. Most personalization systems need training data to build the initial user profile. Two critical issues should be considered in designing personalization systems. One is modeling user's interests in multiple domains, and the other is incrementally updating user profiles. In general, a user has interests in multiple domains (e.g. baseball, politics). In order to closely track user's interests, personalization systems have to maintain multiple domains of user's interests. WebACE[3] uses the clustering algorithm to partition a user's access log so that each cluster indicates a domain of user preferences. Alipes[14] and WebMate[2] exploit the vector space model for each domain of user's interests represented, as a keyword vector. Naive Bayes[9] is used in News Dude[l] to calculate the probability of a document belonging to a domain of the user's interests. Although these systems can represent the multiple domains of user's interests, the domains of the user profile are orthogonal. Pretschner et all12] proposes a novel model of user profile in which the user profile is organized as a hierarchical structure, rather than a set of independent domains. Thus, there is a to specific relationship in the user profile. Although the representation of this user profile is innovative, Pretschner's work does not make use of the characteristics of hierarchical structure (e.g. to split or to merge nodes in the user profile) to capture the dynamics of user's changing interests. Since user's interests often change, it is important to be able to incrementally adjust user profile. The previous work[l], [2], [4], and [14] utilize relevance feedback to update the user profile. Although relevance feedback is effective, users are overloaded. [10] and [3] utilize a proxy to obtain users' feedbacks implicitly. Techniques, such as page-browsing time and page-view frequency, are used to measure preference for pages. In the discussion of changes in user's interests, [1] and [14] present two types of the user's interests. One is the short-term interest and the other is the long-term interest. The short-term interest is usually caused by a hot news event and quickly disappears. Generally, the long-term interest often reflects a user's real interest. Although each system has its own way to update user profile, they are only concerned with the contents of user profile. The experience from user's short-term interest indicates that not only the contents of the user profile, but also the life cycle of each concepts, should be considered. In PVA, we organize user's interests in a hierarchical structure and apply the theory of artificial life to adjust the structure of user profile. For more information about personalization system, [11] provides a detailed survey of existing systems and approaches in recent years. The user profile of PVA, called personal view, is a category hierarchy whereby each category represents a knowledge domain of user's interests. The general-to-specific property of the personal view enhances the semantics of user profile and is much closer to a human conception. Each category in personal view is described through a keyword vector Vi and an energy value E~. While V~, containing ofkeywords and their corresponding weights, describes the content of user's interests, E~ indicates the favorableness of a category. E~, like the endogenous fitness of artificial life agent[8], controls the life span of a category in personal view. The energy increases when a user is interested in the web pages of a category, and it decreases for a constant value over a period of time. Like feeding in the natural world, categories that have high-energy value would generate sub-categories to describe user's interests at a certain detailed level. Relatively, categories of less interest will become abstracted gradually and finally die out. Based on the energy values of the categories, the structure of personal view can be modulated as user's interests change. To build a personal view, user's interests have to be tracked and categorized. We adopt the classification method based on a pre-defined category hierarchy, called world view, as the superset of the category hierarchy of personal view. PVA consults world view as the reference and extracts interesting categories to build its personal view. In this study, our previous studies, ACIRD[6][7], are selected as the world view. PVA is constituted of three major components: proxy, personal view constructor (PVC), and personal view maintainer (PVM). The following sub-sections provide details of each component. Besides relaying user's browsing requests, a major function of the proxy is to track user preferences. Periodically (e.g. every day), the proxy analyzes the activities of the previous period and sends pages of interest to PVC. Pretschner's article[12] describes visiting time duration of a page as a good measurement of preference. In his experiments, a group of 16 users were monitored for 26 days. During that period, the users jointly surfed 7664 documents. The results indicate that visits to 20% of the pages are less than 5 seconds and the mean time of browsing a page is 54.49 seconds. Hence, in our study, the pages, whose visiting time is longer than a preset threshold (e.g., 2 minutes), are sent to PVC to generate and update user profile. Personal view constructor organizes pages of interest to user in a top-down manner. At first, pages are placed in abstract categories. detailed sub-categories. On the contrary, categories not of interest will be merged into abstract categories. As personal view employs the vector space model, the Web page is parsed in a keyword vector. For each term t~ in a page p, we use the following formula to calculate its weight, W~,p,: is normalized to [0,1]. From [7], it is reported that the pure term frequency keyword weighting function, as used in this study, performs better than the traditional TF*IDF weighting function in a hierarchical category learning system. Since IDF (Inverted Document Frequency) is designed to enhance the discriminating capability of high frequency terms among categories, the TF*IDF scheme is not effective in this hierarchical learning model. Then the parsed keyword vector is sent to an automatic classifier to find the categories that the page belongs to. Each obtained category represents a classification path that is a path from the root to the assigned category in the world view. For example, a Web page of professional basketball team is classified to the category of "NBA" and the classification path of "'/Sport/Basketball/NBA/". To insert the page of interest in personal view, first we check if the category exists in personal view. If the category exists, we insert the page in the category directly. If the category does not exist, the page is inserted in the non-root closest ancestor in personal view. If no non-root ancestor exists, the top category of the classification path is created in personal view and subsequently the page is inserted in that category. After pages are inserted in personal view, the keyword vectors and the energy values of each node of personal view are updated. The keyword vector of category c~ in personal view is updated as follows: Where p~,w is the set of the newly inserted pages assigned to category ci, the absolute value IP~"~i[ is the number of documents in P~i, and Vp is the keyword vector of Web page p. The parameter c~, called aging factor, is used to adjust the contribution of previously inserted documents to categories. The value of o~ is set from 0 to 1; hence, older documents have less effect on the representation of category. The following method is used to calculate new energy value of each category: Where Ei is the energy value of category c~, Vi is the keyword vector of category c~, Vp is the keyword vector of the page p that belongs to the category ci, cos(Vi, Vp) which is the cosine similarity between the two vectors. In other words, the energy value of a category is the sum of similarities between its documents. Defining energy value as the sum of similarities between the newly inserted documents and knowledge of categories is intuitive. 
A category is essential to a user who is interested in documents of that category, and its energy value also increases as more documents are inserted. 
Like many previous studies, the aging mechanism of PVC could update the contents of personal view. incrementally. However, adjustment of the contents of categories is not enough. Users may change their interests frequently. For instance, after the final game of MLB, sport fans may shift attention to NBA. To adapt to the change in user's interests, we need a mechanism to periodically adjust the structure of personal view. 
Two maintenance operators, split and merge, are used to synchronize personal view with user's interests. The following sub-sections provide details of these two operators. 
Since PVC organizes personal view from a top-down manner, a category in the personal view generally comprises the concepts of multiple sub-categories. This situation becomes apparent for the category with high energy value. For instance, the knowledge of category "Sport" in personal view for a sport fan user might consist of concepts of its sub-categories "Basketbalf', "Baseball", and "Tennis". When a user has strong interest in one concept, that concept will dominate the knowledge contained in the category, and knowledge of other concepts may fade. To solve this problem, 
PVM splits a high energy category to generate a more specific category. The following figure shows the algorithm of split. First, each category's energy value is checked against a pre-defined threshold. If the category's energy value is greater than the threshold, the sub-category with most gain after the split is generated in the personal view. Subsequently, the keyword vectors and the energy values of both categories are updated. 
We define a function, called split gain, to measure the gain in the following manner: where C~,~,~-~n,d is C~,~,, excluding C X hitd, the function Ent(C) defined below is the entropy value[9] of category C: 
Where C~b is a set of C's sub-categories, P(c) is the proportion of documents of category c to all documents in C. When PVC inserts new pages in personal view, its elassification information, based on the employed auto-classifier, is also stored in two tables. One table keeps the number of documents per category; and the other records the document frequency[13] of each term. Hence the value P(c) is easily obtained by looking up the tables. Entropy is frequently used to measure the purity of a collection of data. The split gain shows the reduction in entropy after a sub-category is split from its parent category. The sub-category with the maximal split gain is created and it splits from its parent in the personal view. 
After the candidate child category is determined in the high energy parent category, the keyword vectors and energy values of both categories have to be adjusted. The energy values are updated as follows: 
For the child category, we use the following formula to create its keyword vector: 
WiTchil d = Wi, parent * 
The dfi,~had and df,mr~,..~hil a are document frequencies of term i in the child category and split-parent category, respectively. The dfi:hila / (dfi,m,~.t-~hila + df,~hita) in the above formula promotes terms that are specific to the child category having high weights in the child category. 
Since there is information loss in parent category, we have to adjust the weights of terms in parent category. The following formula is used to revise the weights in parent category: 
Wi,parent = Wi,parent Wi'paren' M~{Wj.parent } 
The df, m,~,~.~hila / df,~,~,t-~h,a + df.~nila in the above formula measures the surplus value of a term in parent category after the split. Terms that mainly reside in the child category will lose representation in the parent category. 4.3.2 Merge 
In contrast to the split operation that highlights categories of interest in personal view, the merge operator is the mechanism that removes out-of-favor categories. Following the idea of A-Life agent[8], categories in personal view are charged the energy cost of living. The cost is spent on grabbing food (i.e. documents inserted in the personal view) and generating offspring (i.e. splitting new categories). Categories with an unfailing support of documents can continuously live; otherwise, they will become weak and finally die out. In PVA, every category's energy value will reduce in a certain value for every period of time. When only 259 a few or no interesting documents are added to a category, its energy value will decline gradually. To keep a personal view on par with user's interests and trends, categories with low energy values are removed. Before deleting a low energy category, its knowledge is retumed to its parent node. The following figure shows the algorithm that merges the information of low energy categories with their parent. For each category c in personal view End For; 
Figure 2. Algorithm of decaying and merging categories in The algorithm reduces the energy value of each category periodically. The parameter /3, called decay factor, is used to control the reduction rate. If a category's energy value is less than (or equal to) a pre-defined threshold (i.e. th in the algorithm), we remove the category from personal view and merge its knowledge with its parent, by using the following formula: Wi,parent=Wt,porent*&lt;l+dfi,parent) Wi,parent M/jX{Wj, parent} Two experiments are designed to verify the design concept and to evaluate the performance of PVA. The world view and automatic classifier of PVC are borrowed from an application (automatic news classification) of ACIRD. So far, the world view is a 3-level hierarchy that consists of 55 categories and is trained daily with news from three news agencies. 
This experiment is an observation of personal view over a 21-day period (from October 1, 2000 to October 21, 2000). An expert was requested to use PVA to read news from several news agencies. An average of 14 pages out of 60 pages per day were added to the personal view. Parameters of a and /3 were set as 0.95 and 0.5, respectively. The following figure shows the final structure of personal view, with the expert showing interest in MLB, NBA and politics news. User preferences are shown in different shades, with more interest in darker shades. Figure 4 shows personal view's life cycle and Figures 5 to 7 provide a detailed look of each category. Some interesting phenomena can be observed from these figures. In Figure 5, the category "Olympics" had high energy values in the beginning. This is due to the extensive coverage of the Olympic Games by most sport news. However, after the Olympic Games ended on Oct. 2, energy value of "Olympics" gradually went down from Oct. fall of news events. Another interesting phenomenon appears in the category "MLB" on Oct. 8. Its energy keeps on increasing to finally become the hottest category in the personal view. Oct. 8 was the playoff day of Major League Baseball where this baseball enthusiast (i.e. the expert) would not miss any baseball news. The growth of category "NBA" is similar to that of "MLB". Coincidentally, the creation of the category "NBA" in the personal view was tied to the warm-up period of NBA. From this diagram, we can see that the split operator can catch the short-term events. Figure 6 reveals another kind of user's interest. The life cycle of these interests, unlike those of"MLB" and "NBA", are very steady. These categories can be eonsidered as user's long-term interests, and interesting news from these categories are not restricted from a specific time period. Figure 7 shows some transient categories. Two causes of the situation are: (l) the misclassification of ACIRD. According to [6], Top 1 precision of ACIRD is about 60%. The misclassification of pages results in the creation of categories irrelevant to user's interests. For example, news about traffic accidents are sometimes classified under "Travel" category since they usually contain names of tourist spots and terms of transportation. Fortunately, this misclassification does not happen frequently. The energy decay mechanism and merge operator of PVA can quickly remedy this problem by eliminating these categories. (2) Another cause is called flash event. One of the hottest cvems on Oct. 13 was that Kao XingJian won the Nobel Prize in Literature. The category "Reading" was generated because this topic became interesting news reported by many newspapers. Observations of the personal view's life cycle reveal that "Reading" is not an important part of user's interests. Under the operation of the merge operator, the popularity of "Reading" lasted only for a few days. This experiment shows the effects of split and merge operators. The split operator makes personal view more detailed and specific to user current interests, while the merge operator eliminates noise, which is unavoidable in machine learning, especially in the absence of training data. The merge operator also reduces the interference in user profile. In this experiment, the traditional IR measurement precision and recall are used to evaluate PVA's performance. This experiment was based on the previous example. After a daily training, we randomly selected I00 documents of the same training day, from a testing corpus of 6630 documents with every document in the testing corpus classified manually, and marked as interesting or not-interesting. Testing data are classified by calculating the cosine similarity between documents and categories in personal view. If the cosine similarity values are greater than a threshold, we classify the testing data under categories and define the passing data as filtering data. The precision and recall functions are defined below: Where D~lt,,~a is a set of documents that passes through filtering, and Di,,,~.~..g is a subset of a day's testing documents that are of interest to the user. To examine the benefit of split and merge operators, PVA is compared with two personalization systems, WebMate[2] and Pretsehner's system[12], in which only the contents of user profile adjusts when user's interest changes. The two systems are at two extremes because Pretschner's system builds a more specific user profile, while WebMate formats a more general one. In contrast to these two systems, PVA constructs a user profile midway in between. All these three systems are trained and tested in the same manner. The following figures show the results of the comparison. that Talks, Learns and Explains", Third International 
Conference on Autonomous Agents, 1999. 
Browsing and Searching", proceedings of the second international conference on Autonomous Agents, 1998. Eui-Hong Han, Daniel Boley, Maria Gini, Robert Gross, Kyle Hastings, George Karypis, Vipin Kumar, Bamshad Mobasher, Jerome Moore, "WebACE: A Web Agent for 
Document Categorization and Exploration", proceedings of the second international conference on Autonomous Agents, 1998. Kazuo Hashimoto, "Document Filtering Method Using Non-
Relevant Information Profile", SIGIR, 2000. 
Wiley Computer Publishing, 1997. Ming Ho, Ming-Tat Ko, and Yueh-Ming Huang, "Extracting Classification Knowledge of Internet Documents with Mining Term Associations: A semantic Approach", 
Proceedings of the 21 st annual international ACM SIGIR conference on Research and development in information retrieval, 1998. Ming Ho, Ming-Tat Ko, and Yueh-Ming Huang, "ACIRD: Intelligent Internet Documents Organization and Retrieval", Technical Report, IIS, Academia Sinica. To appear on IEEE 
Transactions on Knowledge and Data Engineering. "Artificial Life Applied to Adaptive Information Agents", 
AAAI Spring Symposium Series: Information gathering from heterogeneous, distributed environment, AAAI, 1995. 1997. WebWatcher", Proc. Of ACAI-99 Workshop on Machine 
Learning and Intelligent Agents, 1999. Web", Technical Report ITTC-FY2000-TR-13591-01, 
Information and Telecommunication Technology Center (ITTC), The University of Kansas, Lawrence, KS, December, 1999. [12]Alexander Pretschner, Susan Gauch, "Ontology Based 
Personalized Search", Proc. 11 th IEEE Intl. Conf. On Tools with Artificial Intelligence, 1999. [13] Gerard Salton, "Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by 
Computer", Addison Wesley, 1989. [14]Dwi H. Widyantoro, Thomas R. Ioerger, John Yen, "An Adaptive Algorithm for Learning Changes in User Interests", Eighth International Conference on Information and 
Knowledge Management (CIKM'99), 1999. 
