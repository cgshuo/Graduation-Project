 1. Introduction
For the design, implementation and testing of systems, which are complex and/or difficult to represent to a sufficiently high degree of accuracy in simulation; it is common practice to adopt a hardware-in-the-loop approach, where some of the control loop components are real items of hardware ( Isermann et al., 1999; Gouvenc et al., 2009 ). In this way, major systems X  components (such as engines in automotive applications) can be evaluated and control systems designed without the expense and complexities of a whole system empirical development programme ( Oh, 2005 ). However, the utilization of real hardware introduces the signifi-cant issue of sensor and measurement noise. The authors have previously conducted research into the development of techni-ques to improve the performance of several standard search heuristics such as gradient descent ( Po et al., 2009; Petter et al., 2004 ), variable neighbourhood search ( Garcia-Martinez and Lozano, 2009 ) and simulated annealing ( Smith et al., 2008 )in supporting hardware-in-the-loop search in internal combustion engine development ( Stewart et al., 2009 ). This produced a methodology, which makes use of the data evaluated by the heuristic during the search, and utilizes this to produce response surfaces. These response surfaces are used to generate probability surfaces to provide the search heuristic with weighted stochastic decision support (WSDS) ( Fig. 1 ).

This operator supports the heuristic and guides the experi-mental process to predicted areas of interest in the search space.
Basic gradient descent, simulated annealing (SA) and variable neighbourhood search (VNS) were supplemented by the WSDS methodology, and performance compared to the basic form of the heuristics. The supplemented heuristics were shown to have significantly improved performance when searching over increas-ingly noisy surfaces.

It would be expected that genetic algorithms (GAs) should be effective in noisy environments, and out-perform basic heuristics ( DeJong, 1975 ). The GA allows for variance in fitness values, and providing that noise is not overwhelming, this is effective, since the GA does not discard useful information too quickly. In comparison, local search may not identify improving moves or local optima without a priori information related to the nature of the noise. For this reason, GAs are studied in this paper. In comparative studies conducted at the time, an initial experimen-tal investigation into the performance of GAs was carried out, resulting in a lower performance level than was anticipated. This motivated the current work, which addresses the application of GAs to real-life experimental decision support applications.
GAs have been shown to be compromised when directing search over significantly rugged surfaces ( Goldberg et al., 1992; Nakama, 2009 ), such as those applications discussed in this work.
As the amount of noise inherent in the surface increases, it is likely that the number of local optima increases and, unless there is sufficient diversity within the populations of the GA, this often causes the GA to converge on these local optima, rather than the global, optimal solution ( Goldberg, 1989 ). Diversity is important in genetic algorithms ( Nsakandaa et al., 2006 ), as crossing over a homogeneous population does not yield new solutions ( Fogel, 2006 ). The parameters of a GA can be improved for such problems, for example using a high, or directed mutation rate ( Muhlenbein, 1992; Li and Ye, 2006 ), larger population sizes ( Furutani et al., 2007; Gong et al., 2008; Alander, 1992 )orby suitable selection techniques ( Eiben et al., 2006; Goldberg, 1991 ).
A priori knowledge is typically required to set these parameters, although solutions such as adapting the parameters throughout the search using deterministic control schemes have been pro-duced ( Chen, 2009; Fogarty, 1989; Baker, 1987 ). However, a most important aspect to be considered here is that for many Hardware in the Loop applications, a priori knowledge is not available, and the search space can be considered unknown and unseen. mutation, which is used to maintain the diversity of the entire population by changing individuals bit by bit with a small probability pm [0,1], termed mutation rate . There is much debate whether high or low mutation rates should be used and whether these should be static or adaptive. A high mutation rate increases the level of exploration creating a more diverse population according to Michalewicz and Fogel (2006) , which is desirable for more complex combinatorial problems. However, there have been many proposed static mutation probabilities which are derived from experience or by trial-and-error. DeJong (1975) suggested pm  X  0.001, with Schaffer et al. (1989) extending this to a range of [0.001,0.005]. Back (1992) used Schaffers results to propose that the mutation rate should be set according to population size and length of individuals, giving pm  X  1.75/( N n L 1/2), where N is the population size and L denotes the length of individuals. Muhlenbein (1992) recommended that pm  X  1 = L is an acceptable mutation rate and should be generally optimal. There is, however, evidence, both empirical ( Fogarty, 1989 ) for learning control rules and theoretical ( Back, 1992 ) that the optimal rate of mutation is not only different for every problem but will vary with evolutionary time according to the state of the search and the nature of the landscape being searched. Work by Thierens (2002) proposes two simple adaptive mutation rate control schemes called constant gain and declining.
Thierens compares these to fixed mutation rates, and other known self-adaptive mutation rates showing that they perform favourably in terms of performance with no initial parameters to configure. Qiu and Ju (2010) proposes a new multi-objective evolutionary algorithm, called selective migration parallel genetic algorithm (SMPGA) in which a new migration strategy develops a searching population and an elite population evolve at the same time to keep and improve the convergence and diversity of the
Pareto optimal set. Power et al. (2005) incorporates a diversity guided selection mechanism, selecting a diverse set of individuals for migration from the evolving populations, and reports good performance.

None of the cited methods report activity in noisy environ-ments, and many require a priori knowledge of the problem domain. In particular, adaptive mutation schemes require con-siderable a priori knowledge and subsequent parameter tuning.
The application domain in which we are working, in particular, the automotive and aerospace sectors have, in general, rugged or noisy search surfaces, with little a priori information. Often, the experimental evaluations of the controller are expensive, and hence it is preferred to use a methodology which requires a minimum of parameter tuning to achieve convergence. Given the prior success of weighted operators in raising the performance of local heuristics, and associated with no a priori tuning require-ment, this approach will be investigated in this paper in conjunc-tion with migration operators, which have been shown recently to have significant potential in this kind of application area. 2. Random migration operators
In this section, we introduce the random migration operator based upon the migration operator that is used in multi-deme (multiple population) GAs ( Liu et al., 2009; Mann et al., 1999 ), and apply this to single-deme GAs supported by a decision support operator to yield a novel operator called controlled migration. It should be noted that controlled migration is equally applicable to the multi-deme case although this is not investigated here. Multi-deme GAs make use of the migration operator to pass individuals between sub-populations according to a pre-determined migra-tion rate and migration interval. During a search, sub-populations will receive a new individual from another sub-population that could be from anywhere in the global search space. The individual that is received is likely to have been evolved in a sub-population that may be converging towards an alternative optimum, thus creating diversity in the receiving population. In a single-deme (single population) GA, a similar scheme can be applied where random individuals are introduced into each generation from the global search space, thus introducing an alternative source of diversity. A typical GA will use either the incremental/steady state genetic algorithm (IGA) model ( AlSharafat and AlSharafat, 2010;
Whitely and Kauth, 1998 ) or the generational genetic algorithm (GGA) ( DeJong, 1992; Vavak and Fogarty, 1996 ). Here we use the
GGA that batch replaces an entire population each generation, as opposed to the IGA which in typical applications only replaces one individual at a time. Fig. 2 represents the GGA methodology that is applied in this section.

To insert random individuals into a generation, the following changes are necessary: In step 4 select fewer individuals that are required to create the next population; step 7 is then altered to insert the processed individuals from step 6 into a new genera-tion, and to also introduce randomly generated individuals termed migrants to maintain the population size ( Fig. 3 ). The term migration rate defines the number of migrants to insert into the new population, and hence the number of individuals to select in step 4 will be equal to the original population size less the migration rate.

For the development of this methodology, a realistic data surface with multiple local minima, plateaus and one global minimum, representative of real-life experimental combinatorial surfaces is considered. Later in this paper, the developed meth-odology will be applied to a real-life hardware-in-the-loop experimental application. Inspection of the experimental surface ( Fig. 22 ) reveals the fundamental similarities of this kind of real problem to the development surfaces presented here. The stan-dard MATLAB peaks surface ( Fig. 4 ) describes a combinatorial process in two variables (Eq. (1)): y  X  3  X  1 x 1  X  2 exp  X  x 2 1 x 2 2  X  10 x 1 5 x 3 1 x 5 2 3 exp  X  X  x 1  X  1  X 
In order to investigate the effects of noise, progressively larger amounts of Gaussian noise are added to the smooth surface (peaks0) to give peaks 1,2,3 ( Figs. 5 X 7 ). For the GA, performance is degraded by the number of local minima in the search space.
Local optima are formed in this case by two mechanisms. The first mechanism is the underlying shape of the search space. Essen-tially, higher order functions tend to create more complex shapes with more local minima. Measurement or process noise adds numerous local minima to the underlying surface. The magnitude of the noise is given as a fraction of the range of values of this input array. The addition of the noise is achieved by utilising the R function jitter written by Werner Stahel and Martin Maechler,
ETH Zurich. The jitter function adds a small amount of Gaussian (white) or uniform noise to a vector, matrix or N X  X  array.
The development surfaces have increasing levels of Gaussian noise imposed on the Peaks0 surface according to: Peaks1 mean 0.1189, variance 0.0836; Peaks2 mean 0.2842, variance 0.3705; Peaks3 mean 1.7277, variance 0.7648.
 search space is introduced, namely the bump problem ( Keane, 1994 ), which is a smooth surface comprising many peaks, all of a similar size. Also the optimal value is defined adjacent to a constraint boundary. The Bump problem is defined as max abs for: 0 o x i o 10, i  X  1, y , n subject to Q n i  X  1 x i the variables (in radians) in the range 0 X 10 subject to two constraints, and n is the number of dimensions.
 difficult for most optimisers to deal with Keane (1995) , ( Figs. 8 and 9 ).
 in Fig. 10 , the range of surfaces Peaks 0to Peaks 3 and Bumps are searched to identify the global minimum. The GGA is run 100 times per surface, producing mean results to negate the effects of the inherently stochastic heuristic.

Fig. 11 shows the effect on computations of inserting random migrants into a population of size 20 for a range of migration rates. A computation is counted as each evaluation of an indivi-dual. It shows that introducing random migration for complex surfaces such as peaks3 and the bump yields a considerable decrease in the number of computations compared to having no migrants. Figs. 12 and 13 illustrate the effects of the different migration rates across these surfaces, clearly showing that increasing the migration rate reduces computations until a critical point where the search starts to degrade. A justification for this y observation is that as the migration rate increases, then so does the diversity of the population with only a small number of highly ranked individuals surviving. As the migration rate nears the population size, then the search is comparable to a random search. Observing the results from the less complex surfaces it can also be seen that a critical point also exists, albeit to a lesser degree, where a random migration rate is present that increases the performance of the GA ( Fig. 14 ).

The results show how introducing random migration into single-deme GAs can increase diversity, and hence lead to dramatic search improvements, particularly on rugged or com-plex surfaces. However, it is apparent that there is a critical migration rate that varies according to the complexity of the surface. A high random migration rate leads to excessive diversity analogous to high mutation rates, where previous work has shown a similar effect ( Zhang et al., 2009; Spears, 1992 ). It can be seen that low to mid random migration rates are a good trade-off between performance gains for complex surfaces, whilst minimising additional computation requirements for less com-plex surfaces. As with other genetic operators, the introduction of random migration has introduced another parameter that for improved effectiveness would require a priori knowledge of the surface to set a random migration rate. However, the next section will show that by applying decision support to random migration, it is possible to minimise penalties for higher random migration rates on less complex surfaces. 3. Controlled migration
We have discussed earlier in this paper how genetic algo-rithms have been shown to be compromised when directing search over noisy evaluation surfaces. As the amount of noise inherent in the surface increases in experimental applications with additive process, measurement and sensor noise, it is likely that the number of local optima increases and, this often causes the GA to converge on these local optima. We have shown in the previous section that the introduction of a random migra-tion operator can reduce the steps to convergence of a GA presented with noisy evaluation surfaces. The authors have previously produced a methodology, which makes use of the data evaluated by the heuristic during the search, and utilizes this to produce response surfaces. These response surfaces are used to generate probability surfaces to provide the search heuristic with weighted stochastic decision support (WSDS). Since this metho-dology has shown excellent results when applied with other heuristics, in this section, we aim to combine the beneficial effects of migration and weighted decision support with the aim of achieving even higher performance levels when searching noisy surfaces. A weighted stochastic decision support ( WSDS )
Operator method introduced in Stewart et al. (2009) is applied to random migration to create a novel operator termed controlled migration.

The methodology updates itself with data as it is gathered, to map areas of potential interest to direct experimentation based upon previous results. It is an extremely compact and tractable representation, based upon polynomial response surfaces, which retains a generalized approximation of the search space. The method approximates the incoming and historical data with a polynomial function, often a second order of the form: Z  X  b 0  X  greater than two, based upon standard Taylor series expansion. In this paper, a standard second order approximation is employed.
The parameter set is estimated by least squares regression analysis. With n o k , an observed response y 1 , Y 2 , y ciated with regression variables such that x ij denotes the i th observation of variable x j . Assuming that the error term e has
E  X  e  X  X  0 and Var  X  e  X  X  s 2 and the e i are uncorrelated variables. The model can now be expressed in terms of the observations: squares of the errors e i are minimised via the least squares function: L  X  the direction of the GA, it is possible to generate a surface approximation for the system under consideration. Since the true system response surface is unknown, this represents the current view of the likely response. It is this polynomial which forms the basis for the controlled migration. The y values are normalized according to y norm  X  1 y  X  max  X  y  X  X  min  X  y  X  X  = 2 which yields a surface over the search space bounded between zero and one, where increasing value represents increasing interest, inferred from previous evaluations. These monotonically increasing values correspond to co-ordinates in a probability space from which migrants are chosen according to random selection, with probability of being chosen based on relative value in the probability space.
 methodology, with the additional steps coloured in red. During the first generation, the evaluation results from each individual in the population are used collectively to provide the data to fit the normalised response surface to. This response surface is then used to create the WSDS surface as defined in the accompanying paper.
According to the controlled migration rate, a number of migrants are then probabilistically selected from the WSDS surface and inserted into the new generation, along with the individuals processed by the standard GGA operators. This procedure is repeated for each generation, with the evaluation of each indivi-dual feeding into the data used to update the normalised response surface, thus the probability of selection of the next controlled migrants is based statistically on the results of the previous generations.

Using the GGA parameters previously presented, the experi-ment from the previous section is repeated replacing the random migrants with controlled migrants using the prescribed method for a range of controlled migration rates. Based on the results of the WSDS methodology applied to gradient descent methods, a second order support surface is chosen. The search is conducted running the GGA on each surface 100 times to yield the mean and maximum number of computations as shown in Fig. 16 .

From the results it is immediately evident that using the controlled migration gives a 35% improvement in performance at migration rates of interest compared to using random migration. Figs. 17 and 18 illustrate this improvement using the total mean and max computations respectively across all the surfaces. Comparing the totals across all surfaces is justified, as although the more complex surfaces contribute mostly to the improvements observed, there are no significant declines in performance for less complex surfaces. Moreover, controlled migration appears to minimise penalties for higher migration rates on the basic surfaces ( Figs. 19 and 20 ). This further endorses the generality of controlled migration as a viable operator to speed-up GA searches, as whilst it appears to cause no significant detrimental affect, it can provide a major performance boost on such surfaces as the bump ( Fig. 21 ). 4. Experimental hardware-in-the-loop application
The method, which in the previous section was applied to test surfaces, is now applied to an experimental automotive combi-natorial search. It is desired to identify the maximum power output of an experimental single-cylinder spark-ignition engine operating under a novel control regime. The programme conducts peak power experiments under combinatorial conditions to identify global peak power for subsequent design procedures ( Stewart et al., 2009 ). In order to evaluate the relative perfor-mance of the controlled migration method, the engine was characterized by exhaustive designed experiment, shown in Fig. 22 .

In the experimental series, both standard and controlled migration, GAs were utilized to guide the search for a maximum power point. Due to the stochastic nature of the Metaheuristics, each method was run 100 times in order to produce mean performance evaluations. A comparison was also performed between population sizes of 20 ( Fig. 23 ) and 40 ( Fig. 24 ).
In both cases, at significant migration performance, the GA running a controlled migration policy outperforms the standard migration operator. 5. Conclusions
This paper introduces a novel decision support methodology based upon response surfaces. The method had been previously applied to add decision support to the previously random jumps of gradient descent methods commonly used in combinatorial experimentation ( Jaskiewiscz, 1998 ). The response surfaces are generated through exploitation of evaluated data that is per-formed during the search, valuable additional information which should not be discarded. These response surfaces are transformed into normalised contours of the search area, providing weighted stochastic decision support for migration.

The decision support methodology was applied to GAs, first investigating a mechanism for the introduction of a decision supported operator. Migration in single-deme GAs of random individuals was investigated as an alternative to mutation as a means of maintaining diversity in each generation. Random migration is then demonstrated to provide substantial improve-ments in the efficiency of a GA when faced with more complex or rugged surfaces that contain many local optima. Moreover, this migration operator provides the mechanism for which to apply decision support, and is introduced as controlled migration.
Through a comparison with random migration, controlled migra-tion is shown to provide an improvement in required computa-tions by up to a factor of two. With both migration operators, it is apparent that there is a critical migration rate that varies accord-ing to the complexity of the surface. A high migration rate leads to excessive diversity analogous to high mutation rates. A low migration rate, whilst providing minimum risk for computation penalties for simple surfaces, does not exploit the benefits attainable when applied to more complex surfaces. However, using controlled migration over random migration is shown to allow higher migration rates, whilst minimising the detrimental effects on simple surfaces. This can be explained as whilst exploring simple surfaces, the decision support surface is more likely to provide a reliable estimate as to where the minimum or maximum lies. Using high controlled migration rates, it is more probable that good candidate individuals are chosen. In the context of hardware-in-the-loop experimentation, the methodol-ogy has the potential for significant cost savings, since each experimental evaluation in the search has associated expense in terms of time and hardware costs.
 References
