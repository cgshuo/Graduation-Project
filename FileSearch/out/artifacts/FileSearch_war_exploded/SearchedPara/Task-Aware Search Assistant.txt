 H.3 [ Information Storage and Retrieval ]: Miscellaneous Search task identification, search history When users search the web, their goal is to accomplish some-thing, which we call a search task . Previous studies have ob-served an average of 2.6 X 3.3 queries per search task [2, 3, 4] and Jones and Klinkner [2] found 16% of tasks were revis-ited over a three-day span of Yahoo! logs. These statistics suggest that a task-aware search assistant may aid users in continuing previous search tasks as well as new ones.
There are several existing tools that are related or similar in nature to a task-aware search assistant, the most basic of which are built-in browser histories and extensions that make them easier to navigate. Both Google and Bing pro-vide search histories over their respective services. How-ever, these lack a task-oriented view of searches. The most closely related work that we are aware of is Yahoo X  X  Search Pad, which attempts to automatically identify that a user is conducting research (e.g., planning a vacation). It then no-tifies the user and begins tracking queries and result clicks in an interface, to which the user can add and remove content. However, like Bing and Google X  X  search histories, Search Pad only works with Yahoo! search. In addition, the interface is built for automatically detected research tasks, whereas we would like to provide assistance across all varieties of tasks.
Our approach to aiding users during search X  X oth for new and continuing tasks X  X s to present them with an easy to use sidebar implemented as a browser extension. The in-terface consists of a collapsible sidebar in the browser with multiple panes that can be paged through using streamlined navigation buttons. The primary pane displays three key groupings: (1) a list of the most recent search tasks, (2) a list of related queries entered in the past, and (3) a list of re-lated tasks conducted in the past. Note that a task consists of a cluster of queries and visited documents. This primary pane is updated with each new query and page visit, ad-justing for new tasks as they are detected. A second pane allows users to search and browse their entire task history as a chronologically ordered list. A third pane provides similar functionality, but without task clustering. We expect these functionalities to aid users in orienting themselves among their current and past tasks, and aid them in pulling in in-formation from previous tasks, whether for refinding or for recalling vocabulary. As a browser extension, the interface can extract search tasks from the existing browser history, making the tool useful right out of the box. Unlike many of the search assistant tools describe above, this interface has access to searches from virtually all search engines and web pages visited at any point during a user X  X  search X  X ot just results clicked from a search results page.

The underlying technology relies on performing same-task classification between pairs of queries. Following previous work [1, 2], we use logistic regression models, which are well-suited for binary classification. We also use many of the same lexical features: Jaccard coefficient, tri-gram charac-ter overlap, and Levenshtein distance. We borrow a feature presented by Lucchese et al. [4], which computes the seman-tic similarity between two queries by the cosine similarity between vectors of tf-idf scores over Wikipedia documents. We also use their weighted connected components clustering method once the pair-wise classifications have been made.
In summary, our prototype provides a novel interface for providing users with information about current and past search tasks. The underlying task-classification is based on a fusion of existing methods.
 Acknowledgments. This work was supported in part by the Center for Intelligent Information Retrieval and in part by NSF grant #IIS-0910884. Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect those of the sponsors.

