 Project Sage is Microsoft X  X  all-purpose recommender sys-tem, designed and deployed as an ultra-high scale cloud ser-vice. Sage focuses on both state of the art research and high scale robust implementation. In the research front, we demonstrate new pre-processing and cleaning techniques, a novel probabilistic matrix factorization model for implicit one-class data, and a relatively new evaluation framework. In the engineering front, we present a working service de-ployed on the Microsoft Azure cloud, which provides easy-to-use interfaces to integrate a recommendation service into any website.
 H.2.8 [ Database Management ]: Data Applications -Data Mining .
 Recommender Systems, Cloud Services
Personalized recommendation systems are becoming in-creasingly popular in many websites and online stores. While there is a clear demand for such systems, there are only few high-scale implementations to choose from. A notable exam-ple is Apache Mahout , which provides source code for several well-established recommendation algorithms. As opposed to Mahout, Sage is a live service on the Microsoft Azure cloud, which exposes easy-to-use interfaces and a dashboard to de-sign and train models, as well as to explore personalized recommendations and item-to-item relations. Our service integrates several novel algorithms, to form an all-purpose recommender, based on one-class implicit feedback.

Figure 1 depicts our system overview. There are 5 main stages: (1) Data collection; (2) Data cleaning and feature se-lection; (3) Variational Bayes matrix factorization; (4) Qual-itative and quantitative evaluation; (5) Online service. Figure 2: Qualitative evaluation dashboard (with books recommendations) ever, MF models based on one-class data are relatively new. Sage uses a novel in-house probabilistic Bayesian algorithm that was recently published in [7]. Based on this model, Sage computes probabilities p mn  X  the probability that user m will consume item n . In this process, Sage also employs items meta-data in a similar fashion to [5]. At the modeling stage, we also extract item-to-item relations (similarities) for common co-occurring item pairs.

After the training stage, Sage performs an evaluation pro-cess. A quantitative evaluation is computed in terms of Mean Percentile Rank (MPR), a relatively new metric in studies of implicit feedback recommenders [9]. Qualitative evaluation is also provided in the form of an interactive dash-board. The dashboard allows users to choose any subset of items, and generate appropriate recommendations as well as explore item-to-item relations (see Figure 2).

Online Module. The online module enables retrieving recommendations either for existing users or for new users (i.e., users not present in the training data). In the former case, recommendations are based on past interactions col-lected during the data collection stage. In the latter case, Sage quickly trains the model, on the fly, to include new users based on a short list of items that the new user is currently considering (click log, shopping cart, etc.). Simi-larly, Sage can update existing users online, based on new observations.

The Sage APIs. As discussed above, an API is pro-vided to allow simple embedding of the recommender ser-vice in a live website. Figure 3 shows an example of the Sage API. The reader will notice methods to build a model and to retrieve item-to-item relations and personalized rec-ommendations ( I2IRecommendation and U2I Recommenda-tion , respectively). Automatic data collection is performed by embedding a Javascript snippet on each item page. Us-age information about the item (purchases, views, etc.) is collected and uploaded directly to Sage.

