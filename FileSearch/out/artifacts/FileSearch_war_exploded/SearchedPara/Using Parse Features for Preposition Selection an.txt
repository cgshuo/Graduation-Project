 The task of preposition error detection has re-ceived a considerable amount of attention in re-cent years because selecting an appropriate prepo-sition poses a particularly difficult challenge to learners of English as a second language (ESL). It is not only ESL learners that struggle with En-glish preposition usage  X  automatically detecting preposition errors made by ESL speakers is a chal-lenging task for NLP systems. Recent state-of-the-art systems have precision ranging from 50% to 80% and recall as low as 10% to 20%.

To date, the conventional wisdom in the error detection community has been to avoid the use of statistical parsers under the belief that a WSJ-trained parser X  X  performance would degrade too much on noisy learner texts and that the tradi-tionally hard problem of prepositional phrase at-tachment would be even harder when parsing ESL writing. However, there has been little substantial research to support or challenge this view. In this paper, we investigate the following research ques-tion: Are parser output features helpful in mod-eling preposition usage in well-formed text and learner text?
We recreate a state-of-the-art preposition usage system (Tetreault and Chodorow (2008), hence-forth T&amp;C08) originally trained with lexical fea-tures and augment it with parser output features. We employ the Stanford parser in our experiments because it consists of a competitive phrase struc-ture parser and a constituent-to-dependency con-version tool (Klein and Manning, 2003a; Klein and Manning, 2003b; de Marneffe et al., 2006; de Marneffe and Manning, 2008). We com-pare the original model with the parser-augmented model on the tasks of preposition selection in well-formed text (fluent writers) and preposition error detection in learner texts (ESL writers).

This paper makes the following contributions:  X  We demonstrate that parse features have a  X  We show that, despite the noisiness of learner  X  We evaluate the accuracy of parsing and T&amp;C08, De Felice and Pulman (2008) and Ga-mon et al. (2008) describe very similar preposi-tion error detection systems in which a model of correct prepositional usage is trained from well-formed text and a writer X  X  preposition is com-pared with the predictions of this model. It is difficult to directly compare these systems since they are trained and tested on different data sets but they achieve accuracy in a similar range. Of these systems, only the DAPPER system (De Fe-lice and Pulman, 2008; De Felice and Pulman, 2009; De Felice, 2009) uses a parser, the C&amp;C parser (Clark and Curran, 2007)), to determine the head and complement of the preposition. De Felice and Pulman (2009) remark that the parser tends to be misled more by spelling errors than by grammatical errors. The parser is fundamental to their system and they do not carry out a com-parison of the use of a parser to determine the preposition X  X  attachments versus the use of shal-lower techniques. T&amp;C08, on the other hand, re-ject the use of a parser because of the difficulties they foresee in applying one to learner data. Her-met et al. (2008) make only limited use of the Xerox Incremental Parser in their preposition er-ror detection system. They split the input sentence into the chunks before and after the preposition, and parse both chunks separately. Only very shal-low analyses are extracted from the parser output because they do not trust the full analyses.
Lee and Knutsson (2008) show that knowl-edge of the PP attachment site helps in the task of preposition selection by comparing a classifier trained on lexical features (the verb before the preposition, the noun between the verb and the preposition, if any, and the noun after the preposi-tion) to a classifier trained on attachment features which explicitly state whether the preposition is attached to the preceding noun or verb. They also argue that a parser which is capable of distinguish-ing between arguments and adjuncts is useful for generating the correct preposition. To test the effects of adding parse features to a model of preposition usage, we replicated the lexical and combination feature model used in T&amp;C08, training on 2M events extracted from a corpus of news and high school level reading ma-terials. Next, we added the parse features to this model to create a new model  X +Parse X . In 3.1 we describe the T&amp;C08 system and features, and in 3.2 we describe the parser output features used to augment the model. We illustrate our features us-ing the example phrase many local groups around the country . Fig. 1 shows the phrase structure tree and dependency triples returned by the Stanford parser for this phrase. 3.1 Baseline System The work of Chodorow et al. (2007) and T&amp;C08 treat the tasks of preposition selection and er-ror detection as a classification problem. That is, given the context around a preposition and a model of correct usage, a classifier determines which of the 34 prepositions covered by the model is most appropriate for the context. A model of correct preposition usage is constructed by train-ing a Maximum Entropy classifier (Ratnaparkhi, 1998) on millions of preposition contexts from well-formed text.

A context is represented by 25 lexical features and 4 combination features: Lexical Token and POS n-grams in a 2 word window around the preposition, plus the head verb in the preceding verb phrase ( PV ), the head noun in the preceding noun phrase ( PN ) and the head noun in the following noun phrase ( FN ) when available (Chodorow et al., 2007). Note that these are determined not through full syntactic parsing but rather through the use of a heuristic chun-ker. So, for the phrase many local groups around the country , examples of lexical features for the preposition around include: FN = country , PN = groups , left-2-word-sequence = local-groups , and left-2-POS-sequence = JJ-NNS .
 Combination T&amp;C08 expand on the lexical fea-ture set by combining the PV , PN and FN fea-tures, resulting in features such as PN-FN and PV-PN-FN . POS and token versions of these fea-tures are employed. The intuition behind creat-ing combination features is that the Maximum En-tropy classifier does not automatically model the interactions between individual features. An ex-ample of the PN-FN feature is groups-country . 3.2 Parse Features To augment the above model we experimented with 14 features divided among five main classes. Table 1 shows the features and their values for our around example. The Preposition Head and Complement feature represents the two basic at-tachment relations of the preposition, i.e. its head (what it is attached to) and its complement (what is attached to it). Relation specifies the relation between the head and complement. The Preposi-tion Head and Complement Combined features are similar to the T&amp;C08 Combination features except that they are extracted from parser output. Figure 1: Phrase structure tree and dependency triples produced by the Stanford parser for the phrase many local groups around the country
Prep. Head &amp; Complement 1. head of the preposition: groups 2. POS of the head: NNS 3. complement of the preposition: country 4. POS of the complement: NN
Prep. Head &amp; Complement Relation 5. Prep-Head relation name: prep 6. Prep-Comp relation name: pobj
Prep. Head &amp; Complement Combined 7. Head-Complement tokens: groups -country 8. Head-Complement tags: NNS -NN
Prep. Head &amp; Complement Mixed 9. Head Tag and Comp Token: NNS -country 10. Head Token and Comp Tag: groups -NN
Phrase Structure 11. Preposition Parent: PP 12. Preposition Grandparent: NP 13. Left context of preposition parent: NP 14. Right context of preposition parent: -
Model Accuracy combination only 35.2 parse only 60.6 combination+parse 61.9 lexical only 64.4 combination+lexical (T&amp;C08) 65.2 lexical+parse 68.1 all features (+Parse) 68.5 Table 2: Accuracy on preposition selection task for various feature combinations The Preposition Head and Complement Mixed features are created by taking the first feature in the previous set and backing-off either the head or the complement to its POS tag. This mix of tags and tokens in a word-word dependency has proven to be an effective feature in sentiment anal-ysis (Joshi and Penstein-Ros  X  e, 2009). All the fea-tures described so far are extracted from the set of dependency triples output by the Stanford parser. The final set of features ( Phrase Structure ), how-ever, is extracted directly from the phrase structure trees themselves. In Section 4.1, we compare the T&amp;C08 and +Parse models on the task of preposition selection on well-formed texts written by native speakers. For every preposition in the test set, we compare the system X  X  top preposition for that context to the writer X  X  preposition, and report accuracy rates. In Section 4.2, we evaluate the two models on ESL data. The task here is slightly different -if the most likely preposition according to the model dif-fers from the likelihood of the writer X  X  preposition by a certain threshold amount, a preposition error is flagged. 4.1 Native Speaker Test Data Our test set consists of 259K preposition events from the same source as the original training data. The T&amp;C08 model performs at 65.2% and when the parse features are added, the +Parse model im-proves performance by more than 3% to 68.5% . 1 The improvement is statistically significant. Table 3: Which parse features are important? Fea-ture Addition Experiment
Table 2 shows the effect of various feature class combinations on prediction accuracy. The results are clear: a significant performance improvement is obtained on the preposition selection task when features from parser output are added. The two best models in Table 2 contain parse features. The table also shows that the non-parser-based feature classes are not entirely subsumed by the parse fea-tures but rather provide, to varying degrees, com-plementary information.

Having established the effectiveness of parse features, we investigate which parse feature classes contribute the most. To test each contri-bution, we perform a feature addition experiment, separately adding features to the T&amp;C08 model (see Table 3). We make three observations. First, while there is overlapping information between the dependency features and the phrase structure features, the phrase structure features are mak-ing a contribution. This is interesting because it suggests that a pure dependency parser might be less useful than a parser which explicitly pro-duces both constituent and dependency informa-tion. Second, using a parser to identify the prepo-sition head seems to be more useful than using it to identify the preposition complement. 2 Finally, as was the case for the T&amp;C08 features, the combina-tion parse features are also important (particularly the tag-tag or tag/token pairs). 4.2 ESL Test Data Our test data consists of 5,183 preposition events extracted from a set of essays written by non-native speakers for the Test of English as a Foreign Language (TOEFL R  X  ). The prepositions were judged by two trained annotators and checked by the authors using the preposition annotation scheme described in Tetreault and Chodorow (2008b). 4,881 of the prepositions were judged to be correct and the remaining 302 were judged to be incorrect.

The writer X  X  preposition is flagged as an error by the system if its likelihood according to the model satisfied a set of criteria (e.g., the difference be-tween the probability of the system X  X  choice and the writer X  X  preposition is 0.8 or higher). Un-like the selection task where we use accuracy as the metric, we use precision and recall with re-spect to error detection. To date, performance figures that have been reported in the literature have been quite low, reflecting the difficulty of the task. Table 4 shows the performance figures for the T&amp;C08 and +Parse models. Both precision and recall are higher for the +Parse model, how-ever, given the low number of errors in our an-notated test set, the difference is not statistically significant. To evaluate parser performance on ESL data, we manually inspected the phrase structure trees and dependency graphs produced by the Stanford parser for 210 ESL sentences, split into 3 groups: the sentences in the first group are fluent and con-tain no obvious grammatical errors, those in the second contain at least one preposition error and the sentences in the third are clearly ungrammati-cal with a variety of error types. For each preposi-tion we note whether the parser was successful in determining its head and complement. The results for the three groups are shown in Table 5. The figures in the first row are for correct prepositions and those in the second are for incorrect ones.
The parser tends to do a better job of de-termining the preposition X  X  complement than its head which is not surprising given the well-known problem of PP attachment ambiguity. Given the preposition, the preceding noun, the preceding Table 5: Parser Accuracy on Prepositions in a Sample of ESL Sentences verb and the following noun, Collins (1999) re-ports an accuracy rate of 84.5% for a PP attach-ment classifier. When confronted with the same information, the accuracy of three trained annota-tors is 88.2%. Assuming 88.2% as an approximate PP-attachment upper bound, the Stanford parser appears to be doing a good job. Comparing the results over the three sentence groups, its ability to identify the preposition X  X  head is quite robust to grammatical noise.

Preposition errors in isolation do not tend to mislead the parser: in the second group which con-tains sentences which are largely fluent apart from preposition errors, there is little difference be-tween the parser X  X  accuracy on the correctly used prepositions and the incorrectly used ones. Exam-ples are (S (NP I) ) in which the erroneous preposition for is correctly attached to the noun trip , and (S (NP A scientist) ) in which the erroneous preposition in is correctly attached to the verb devotes . We have shown that the use of a parser can boost the accuracy of a preposition selection model tested on well-formed text. In the error detection task, the improvement is less marked. Neverthe-less, examination of parser output shows the parse features can be extracted reliably from ESL data.
For our immediate future work, we plan to carry out the ESL evaluation on a larger test set to bet-ter gauge the usefulness of a parser in this context, to carry out a detailed error analysis to understand why certain parse features are effective and to ex-plore a larger set of features.

In the longer term, we hope to compare different types of parsers in both the preposition selection and error detection tasks, i.e. a task-based parser evaluation in the spirit of that carried out by Miyao et al. (2008) on the task of protein pair interaction extraction. We would like to further investigate the role of parsing in error detection by looking at other error types and other text types, e.g. machine translation output.
 We would like to thank Rachele De Felice and the reviewers for their very helpful comments.

