 1. Introduction
The hybrid flow shop (HFS), also called multiprocessor or flow shop with parallel machines, consists of a set of two or more processing stages (or centers) with at least one stage having two or more parallel machines. The hybrid characteristic of a flow shop is ubiquitously found in various industries. The duplication of the number of machines in some stages can introduce additional flexibility, increase the overall capacities, and avoid bottlenecks if some operations are too long. So, scheduling in HFS has a great importance from both theoretical and practical points of view. Most scheduling problems are very difficult to solve (Blazewicz et al., 1996 ; Graham et al., 1979 ). That is why; the majority of the problems addressed in scheduling are only evaluated by a single criterion (such as makespan, total tardiness, workloads of machines, etc.) ( T X  X indt and Billaut, 2005 ). However, in the literature, many researches in scheduling show that the majority of industrial problems involve generally simultaneous incommensurable criteria, which they can sometimes be contra-dictory ( Zitzler and Thiele, 1999 ). So, in this paper, we address a bi-criteria HFS scheduling problem which is the earliness X  tardiness (ET) penalties ( Hoogeveen, 2005 ). The ET problem encompasses a category of problem with the objective to
The remainder of this paper is organized as follows. First, literature review section provides an overview related to the ET problems and the application of ACO method on scheduling. Section 3 is dedicated to the description of the HFS problem.
Section 4 presents some constructive heuristics based on some priority rules for solving the considered problem. In Section 5, we describe the approach to solve the HFS problem with ET penalties.
In order to show the efficiency of the suggested methodology, computational results are provided in Section 6. Finally, Section 7 concludes the paper. 2. Literature review
Next, literature on solution methods developed for the earliness/tardiness scheduling problems and ant colony optimiza-tion applications on scheduling are summarized. 2.1. Earliness/tardiness scheduling problems
For solving scheduling problems, various intelligent heuristics and meta-heuristics have become popular such as simulated annealing (SA), tabu search (TS), multi-agent system (MAS), genetic algorithm (GA) and ACO. Most of the works that tackle
ET problem deal with single machine ( Merkle and Middendorf, 2005; M X  X allah, 2007 ; Valente and Alves, 2007 ). Likewise, many results exist for parallel machines earliness/tardiness scheduling problem, especially when all jobs have the same due date (Balakrishnan et al., 1999 ; Ventura and Kim, 2003 ). However, relatively little researches have considered the ET costs in the objective function on flow shop or job shop environments. So,
Rajendran and Alicke (2007) developed some dispatching rules to solve the flow shop ET problem with bottleneck machines. In
Valencia and Rabadi (2003) , the authors proposed a MAS approach to solve the job shop ET problem with common due date. In Huang and Yang (2007) an ACO algorithm is presented for the job shop ET problem. To deal with the flexible job shop ET problem, a MAS scheduling method is proposed in Wu and Weng (2005) . To our knowledge, there is a limited literature focused on the ET criteria for solving the HFS scheduling problem. In Janiak et al. (2007) three meta-heuristic approaches based on SA, TS and a hybrid SA/TS have been used to solve the HFS problem which minimizes the cost criterion consisting of the total weighted earliness, the total weighted tardiness and the total weighted waiting time. Some existing heuristic solution approaches for the classical permutation flow shop problem have been generalized for the HFS problem with controllable jobs and assignable due dates with the sum of earliness and tardiness penalties, the weighted completion time of jobs and the costs of due date assignments ( Gupta et al., 2002 ). A particular HFS problem with minimization of the ET performance measure is proposed by
Finke et al. (2007) which is known as flow shop with machine tiers (FMT). In this problem, the solution is restricted to permutation schedules as the machine assignment for every job are deterministic and known in advance. To deal with the FMT-ET problem, the authors proposed a TS procedure. 2.2. Ant colony optimization applications
The ACO approaches imitate the behavior of real ants when searching for food. Some observations have shown that: although an ant has limited capacities, it can with the collaboration of the other ants find the shortest path from a food source to their nest without visual cue. To perform complex tasks, a colony of ants uses a chemical substance called  X  X  X heromone X  X , which they be penalized. Earliness and tardiness penalties are the cost per unit of time a job is completed either earlier or later than requested by the customer. For a trivial solution, some jobs will have to finish early and some other will have to finish late ( Finke et al., 2007 ). Consequently, it is suitable to provide schedules that minimize the earliness and tardiness penalties. These penalties could be different for jobs based on their priority importance. The minimization of these costs can be translated to the scheduling objective of minimizing a weighted sum of job earliness and tardiness ET, which is given by ET  X  where E j is the max{0,( d j C j )} is the earliness of job j ; T j the unit of time when job j is produced early; o t j the penalty weight per unit of time when job j is produced late.

To illustrate the problem, let us consider a three-stage HFS scheduling problem where a set of n =7 jobs have to be processed through three stages. The number of machines in each stage is, respectively, m 1 =3, m 2 =2 and m 3 =4. The jobs parameters are described in Table 1 . A feasible schedule is shown in the Gantt Chart (see Fig. 1 ). According to the processing order of the solution, we can determine the completion time C j of each job j , and then calculate their earliness E j and tardiness T j . For the illustrated example, E j = T j =0 for all the jobs except jobs 4 and 5 where T 4 =20 and E 5 =20. So, the objective function value of the proposed schedule: ET  X  P n j  X  1  X  o e j E j  X  o t j T j  X  X  2 20  X  5 20  X  140.

According to the earliness and tardiness penalty weight, the schedule of a job j is preferably inserted into the set of early jobs if o e o o t j , otherwise, preferably into the set of tardy jobs. The Stage 1 Stage 2 Stage 3 scheduling problem, a number of design decisions must be taken into consideration ( Blum and Sampels, 2002 ). So, we have to define the following components: an adequate pheromone model representation, the mechanism of updating the quantity of pheromone trails, a heuristic value which can find information about the specific problem.

In fact, these components are used to guide moves selection of the operations and, as a consequence, they influence system perfor-mance. In order to achieve feasible solutions, we have to respect the precedence constraints of HFS problem at each construction of all the operations that can be selected at each time. In addition, the solution construction of an HFS environment has to consider the assignment of operations to machines and the sequencement of operations on machines. In what follows, we expose these components in details. 5.1. Constructive procedure
While constructing a feasible solution, each ant k builds independently a sequence of operations by performing the construction step. Thus, an ant k has to make two decisions representing, on the one hand, the selection of an operation from the set of candidate list L k and, on the other hand, the selection of an eligible machine to process the selected operation. To respect the precedence constraints of the problem at each construction step, we propose to solve the problem stage by stage. So, the construction procedure (see Algorithm 1) is repeated, for each stage i , until all the operations are selected and affected to an successively stored into a tabu list which is used to record the selected operation of the current schedule. It is noted that tabu list is different from TS procedure and its goal is to avoid an operation to be selected twice.

Algorithm 1. Algorithmic frame of the proposed ACO algorithm for HFS with ET penalties.
 BEGIN
Initialization: Set ACO parameters; while stopping criterion not satisfied do for each ant do rule; pheromone on the selected operation; end for Evaluate current solutions;
Apply global pheromone update to increase pheromone on the current best solution; end while
END 5.1.1. Operation selection
To select an operation from the list L k (that remains to be visited by ant k ) a state transition rule, called a random-proportional rule, is used. This latter gives the probability with which ant k chooses an operation, based on the pheromone trails t and the heuristic information Z . This rule is formally given by the scenarios of the solution-finding process. It depends on instantaneous knowledge of the system: such a rule is called dynamic ( Ghedjati and Portmann, 2009 ). 5.2. Pheromone updating mechanism
The mechanism of updating pheromone is used to simulate the changes in the amount of pheromone during the run of the algorithm through pheromone trail evaporation and pheromone trail reinforcement by the ants ( Dorigo and Gambardella, 1997 ). Then, two kinds of pheromone updating strategies are considered. 5.2.1. Local pheromone updating rule
In order not to influence the choice of the other ants, the local updating rule is executed at the ant X  X  scheduling-construction to control evaporation pheromone level of the selected operation by an ant k . Thus, the selected operation becomes less attractive for the other ants. Indeed, this rule is used to shuffle the tour of the other ants and avoid local optima. A local updating rule is made to modify the quantity of pheromone to the selected operations according to:  X  O ij ; O hl  X  X  X  1 r  X   X  t  X  O ij ; O hl  X  X  r  X  t 0  X  5  X  where t 0 is the initial pheromone level and r  X   X  0 r r  X  r 1  X  is the pheromone evaporating parameter. 5.2.2. Global pheromone updating rule
A global updating rule is applied only on the best obtained solutions after all ants completed their tour, to make it preponderate in the next path-building iteration. The pheromone global updating rule is defined as follows: where D t  X  O ij ; O hl  X  X   X  ET b  X  In the above equation, ET b is the best solution of the schedules and  X  0 r r g r 1  X  is the pheromone evaporating parameter of the global updating rule. According to Eq. (6), global updating rule is applied to intensify the pheromone levels on the operations belonging to the best solution. 6. Computational experiments and results
In this section, we present the results of a series of computational experiments conducted to test the effectiveness of the proposed approach. Henceforth, we call our method ACO-HFSET . Our algorithms are coded in Java and all tests are conducted on a personal computer with 2.26GHz Intel (R) and 3GB of RAM memory. The computational tests are performed on randomly generated benchmark problems. The problem sizes are combination of n =(25, 50, 100) jobs and S =(2, 5, 8) stages. For each combination of n and S , five instances are generated with job processing times p ij uniformly distributed over [1,100] since the processing times of most library benchmark problem are generated in this range. The number of machines m i at stage i was chosen randomly over [1,5]. The due date d j of each job j is determined by the following equation: d  X 
In order to test these problems with our proposed ACO-HFSET algorithm, we have to determine all the parameters of this latter.
ACO-HFSET method can be a promising way for the considered scheduling problems.

In this paper, we have considered the sum of the total earliness and tardiness costs. Practically tardiness is usually worst than earliness ( Wu and Weng, 2005 ). Therefore, the utilization of different specifications of weight values to priority criteria can References
