 Shinsuke Nakajima 1 , Junichi Tatemura 2 , Yoshinori Hara 3 ,KatsumiTanaka 4 , 5 , The broadband infrastructure and ubiquitous computing have created an envi-ronment in which people are continually online on the WWW. Given this envi-ronment, people are increasingly publishing their reactions (e.g., comments and opinions) to current events (e.g., news). Users may state their opinion of a cur-rent news article, followed by other users who react to their opinions by stating differing opinions. In this sense, the web can be seen as a place for conversation rather than for archived documents. Triggered by an event, a hot conversation may quickly propagate from one site to another through the web.

A weblog, or blog for short, is a tool or web site that enables people to publish content promptly. In the blog world, people are not only content consumers, but content suppliers.

According to the  X  X lossary of Internet Terms [1] X :  X  X  blog is basically a journal that is available on the web. The activity of updating a blog is  X  X logging X  and someone who keeps a blog is a  X  X logger. X  Blogs are typically updated daily using software that allows people with little or no technical background to update and maintain the blog. Postings on a blog are almost always arranged in chronologi cal order with the most recent additions featured most prominently. X 
A blog entry, a primitive entity of blog content, typically has links to web pages or other blog entries, creating a conversational web through multiple blog sites. Since conventional search engines treat the web as a snapshot of hyperlinked documents, they are not very effective for capturing conversat ional web content such as blogs. A new approach is required for timely delivery of hot conversations over multiple blogs on the web.

To capture potentially hot conversations on the web, we propose a method for discovering bloggers who take important roles in these conversations. This information can then be used to acquire important hot conversations.
A blog site is usually created by a single owner/blogger and consists of his or her blog entries, each of which usually has a permalink URL to enable direct access to the entry. Blog readers can discover bloggers X  characteristics (e.g., their interests, role in the community, etc.) by browsing their past blog entries. If readers know the characteristics of a particular blog, they can expect similar characteristics to appear in future entries in that blog. Our goal is to develop a method of capturing hot conversations by automating readers X  processes for characterizing and monitoring blogs.

In our method[2], an important blogger is defined on the basis of his or her role in a blog thread, i.e., a set of blog entries comprising a conversation on a specific topic. We think it is likely that bloggers take various roles in a thread, including acting as an agitator who stimulates discussion and have a great influence on discussion. We believe that it is important blogger who is useful for identifying hot conversations.

We first describe related work and describe blogs and a model of blog thread data, and then the extraction of blog threads. This is followed by a discussion of how important bloggers are identified, and the evaluation of our method. We end with a summary and outline our plans for future work. Recently, the number of research activ ities related to blog search[3], blog communities[4][5] and so on have rapidly increased. Several researches have con-ducted research on blogspaces:
Kumar et al. studied the burstiness of blogspace[6]. They examined 25,000 blog sites and 750,000 links to the sites. They focused on clusters of blogs connected via hyperlinks named blogspa ces and investigated the extraction of blog communities and the evolution of the communities.

Gruhl et al. studied the diffusion of information through blogspace[7]. They examined 11,000 blog sites and 400,000 links in the sites, and tried to characterize macro topic-diffusion patterns in blogspaces and micro topic-diffusion patterns between blog entries. They also tried to m odel topic diffusion b y means of criteria called Chatter and Spikes.

Adar et al. studied the implicit structure and dynamics of blogspace[8]. They also examined both the macro and micro behavior of blogspace. In particular, they focused on not only the explicit link structure but also the implicit routes of transmission for finding blogs that are sources of information.
 However, their purpose was not to acquire important web content.
 There are numerous reports of studies on topic detection and tracking[9]. In this paper, we adopt a similar technique to discriminate agitators. Allan et al. studied first story detection[10]. According to this study, when a new story arrives, its feature set is compared to those of all past stories. If it is sufficiently different, the story is marked as a first story; otherwise, it is not.
Though these previous studies of FSD are relevant to us, we cannot adopt these methods directly since blog threads include relations between entries based on replylinks, which are different from a simple news stream. A blog is a website that anybody can easily update and use to express his/her own opinions in a public space. To put it another way, blogs are a storehouse of information that reflects  X  X ublic opinion X . Although there is a lot of trivial information in blogspace, there is also a lot of important information.
Before defining our model of blog thread data , let us discuss these definitions of blog sites and blog entries. Examples are shown in Figures 1. site =( siteURL, RSS, blogger + , siteN ame, entry + ) entry =( permaLink, blogger, time, title ? ,description,comment  X  ) comment =( blogger, permaLink, content, time ) A blog site has a site URL, RSS (Really Simple Syndication / RDF Site Summary), site name, and entries, and is managed by one or more bloggers. A blog entry has a permalink for access, a publication time, title, and entry description. A comment includes the content of the comment and the time when it was written. A blogger posts a blog to an entry identified by a permalink. replyLink =( e i ,e j ) , ( e i  X  e j ) trackbackLink =( e i ,e j ) , ( e i  X  e j ) sourceLink =( e i ,w i ) , ( e i  X  w i ) where e i ,e j  X  E , E is a set of blog entries, and w i  X  W , W is a set of Web pages except blog entries. replyLinks and sourceLinks are hyperlinks to other blog entries or web pages contained in the description of a blog entry. We do not include automatically added hyperlinks, such as links to next or previous entries, or other links unre-lated to the content of the blog entry. This is because we want to remove link noise and to ensure that all blogspot.com pages point to blogger.com, etc. The method for removing link noise is described in Section 4.2. Here, a trackbackLink is a special case of a replyLink.

For trackbackLink =( e i ,e j ), there is not only a replyLink of ( e i  X  e j ) but also a link of ( e j  X  e i ) to indicate the existence of a replyLink.
An example of a blog thread is shown in Fig.2. We define a blog thread as follows. A blog thread is composed of entries connected via replyLinks to a discussion among bloggers. There is one exception. As Fig. 2 indicates, sets of entries that are not connected to each other via replyLinks are considered the same thread if they refer to the sam e website via a sourceLink. Comments attached a blog entry are not used in extr acting the blog thread because we want to identify important bloggers by analyzing blog thread. Namely, a blog thread is a directed connected grap h and is defined as follows. thread := ( V, L ) ,V = W  X  E, L = L s  X  L r
W is a set of websites. E is a set of blog entries. L s  X  X  ( e, e ) | e  X  E, e  X  W } ,L r  X  X  ( e, e ) | e  X  E, e  X  E } L s corresponds to a set of sourceLink. L r corresponds to a set of replyLink.
Ideally, the entries in a blog thread should share common topics. However, it is given that topics will sometimes change. In future research, we will pursue separating blog threads to accommodate this. 4.1 Crawling Through Blog Entries First, our system crawls through blog entries to extract blog threads. The system adds unregistered RSS feeds to the RSS list by crawling through public opml files. The system crawls through RSS feeds reg istered on the RSS list and registers the title, permalink, and list entry date as ungained entry data in the RSS.
The RSS is actually an extension of RDF (resource description framework) language, and it is an XML application that conforms to the W3C X  X  RDF spec-ification. These days, most blog sites sy ndicate their content to subscribers by means of an RSS. OPML (outline processor markup language) is an XML format for outlines. Our system had registered about 1,000,000 RSS feeds (=blog sites) and over 15,000,000 entries as of April 1, 2005. 4.2 Extraction of Blog Threads At first, we need to extract the hyperlinks from descriptions of blog entries to discover possible connections between the entry and other web pages (including blog entries) before extracting blog threads. Therefore, we have to be able to recognize the scope of the description of an entry, based on an analysis of the HTML source. However, since each blog site server has its own tag structure, we need to set up parsing rules for each targ et blog site server. That being said, we limited our target sites to 25 famous blog-hosting sites, and some key famous sites and then set up the appropriate rules.

To extract hyperlinks from blog entries, the system crawls through the perma-links of entries and obtains the entries. Moreover, descriptions of the entries are extracted from the HTML text by analyzing the tag structure, and hyperlinks are extracted from the description and added to the list of links. In this way, the system obtains link list.

Incidentally, a blog thread is a set of entries connected to each other via replylinks and referring to a common web page via a sourcelink (see Fig. 2). The procedure for extracting blog threads is given below. (1) The system judges whether each hyperlink in the link list is a replyLink or sourcelink by checking whether the destination URL of the hyperlink appears in the entry list. (2) If it is a replyLink, the departure and destination URLs of the replyLink are checked to see whether or not they are registered in the existing thread data. If they are, they are added to the existi ng thread data. They become elements of a new thread if they do not. (3) If it is a sourceLink, the departu re URL of the sourceLink is checked to see whether or not it is registered in the existing thread data. The destination URL of the sourceLink is then checked to see whether it matches with the Web page URL referred by a previous entry reg isteredinanexistingthread.Ifthere is an existing thread, it is added to that existing thread data. If not, it becomes an element of a new thread.

The extracted thread data represents se ts of entries, each with a date and link data. Consequently, the system can analyze the time-series data for the entries in a thread and the link structure of a blog thread. 5.1 Agitator in a Blog Thread An Agitator often stimulates the discussion in a blog thread so that it becomes more active. Thus, we may be able to predict whether a blog thread will grow by watching the Agitator X  X  entries. If the system statistically judges that the thread frequently grows just after a particular blogger has published an entry, then that blogger is determined to be an Agitator.

We focus on how to define and find an agitator, because we are interested in discovering important, popular blog conversations on a specific topic. We believe that we can discover important blog conversations by watching agitators on specific topics. 5.2 Discriminants for Agitator In this section, we introduce three aspects that characterize a blogger as an agitator. Given a blog thread, the following aspects discriminate an entry e x from the other entries in the blog thread. We can then characterize the bloggers who publish such entries by aggregating the values from multiple blog threads.  X  Aspect 1: link-based discriminant  X  Aspect 2: popularity-based discriminant  X  Aspect 3: topic-based discriminant 6.1 Observation of Discriminants for Identifying Agitator We discuss the discriminants of aspects of agitator (5.2) by means of examination of real blog data. Examples of real blog thread data are shown below. Fig. 4, 5 and 6 are data of a real thread (A).

In Fig. 4, each circle corresponds to a blog entry. Each arrow corresponds to a replyLink between entries. The numbers in the circles denote the number from the oldest date entry to the newest date entry. The horizontal axis indicates pub-lishing date of entries. Each date is in 2004. The vertical axis values are arbitrary.
There are some replyLinks from older entries to newer entries in Fig. 4. Gener-ally speaking, bloggers can edit their en tries without affecting the publish data, thus some of the older entries have replyLink to newer entries. We allow such hyperlinks from newer entry to older entry as replylink.

As shown in Fig. 4, the entry of No. 5 o f thread (A) seems i mportant in the thread, as it is cited from 9 other entries as well as accompanied by an increase in thread activity. Thus, the entry might be an agitator based on aspect 1. However, many in-links does not always mean an agitator. People also refer via replyLinks when disagreeing with another blogger. Thus, link analysis alone is not sufficient to determine if they are agitators or not.
 Next, let us discuss aspect 2 with regards to the time-series data as shown in Fig. 5. The solid line in Fig. 5 corresponds to the time series data of popularity of the thread (A). The circle in black corresponds to the entry of No. 5. The dashed line corresponds to ( l x /m x ), which is an approximation of a second derivative value of popularity of blog entries, as explained in Section 5.2. In Fig. 5, we can see that the values of ( l x /m x ) are high during the time just before the popularity increases drastically. It is important to detect when the t hread become hot not by subjective means but by objective values.

Next, we will discuss aspect 3 of agitator. Fig. 6 shows the time-series data of popularity and degree of topic-change of the thread (A). The dashed line in Fig. 6 corresponds to the left part of the discriminant for aspect 3 of an agitator. This corresponds to the degree of topic change. There is a fair possibility of the topic change if the degree is high. According to Fig. 6, the degree of topic change becomes high when No. 5 entry is published.

Hence, blogger of No. 5 entry of thread (A) seems to be candidate of agitator since the entry satisfies aspect 1, 2 and 3 of agitator. It turns out that the blogger is a famous blogger who writes about topics of Information Technology. The blog site is  X  X ttp://blog.japan.cnet.com/umeda/ X .

Though we talk about determining candidates of agitator, it is impossible to judge that a blogger is an important blogger or not just based on analyzing one thread. Therefore, it is necessary to analyze multiple threads in order to discover important bloggers. Thus, we need to develop a system of discovering important bloggers using multiple blog threads analysis.

In addition, we have to consider how to remove noises of blog data, since blog data has a lot of noises like miswritten html files, hyperlinks to non-existing url, advertisement links unrelated to the entry content, and so on. 6.2 Evaluation of Discriminants for Identifying Agitators The process for identifying agitators based on the three discriminants (discussed in section 5.2) should be applied to multiple threads to avoid misidentifying agitators. And our method for identifying agitators must have high recall rates as our system X  X  goal is to identify hot conversations using the contents of bloggers who are recognized as agitators. Consequently, we evaluate the recall factor of our system.

We use 6 one month periods of blog data from Nov. 2004 to Apr. 2005. We investigate whether sites determined to be agitator candidates in past months are again judged to be agitator candidates or not. The procedure for the evaluation of discriminants for identifying agitator is given below. 1. Extract each set of blog threads in each period. (We use threads that have 2. Calculate agitator score of each entry in the extracted threads based on the 3. Rank blog sites (=bloggers) based on their agitator scores in each term, and 4. Acknowledge the sites which are agitator candidates filled one of conditions 5. Calculate recall rate of the agitators by investigating if acknowledged agita-
Table 1 shows number of blog entries, target blog threads that have more than 10 entries and blog sites that appear in target threads.

Table 2 shows number of acknowledged agitators.  X  X op 10% X  denotes sites ranked in top 10% of each agitator score -they are considered agitator candi-dates.  X 3months X  denotes sites that are acknowledged as agitator at least twice in past 3months.

As shown in Table 2, the system cannot secure enough acknowledged agitators using only the top 10% and 20%. Thus, the system should use at least top 30% sites when picking agitator candidates.

Table 3 shows recall rate in the case of aspect 1, 2 and 3. The system use top 30% sites when picking agitator candidates.

As Table 3 indicates, all the recall rates are not high enough. However, we believe that the system can find blog entries of important bloggers more easily than a system that does not consider the effect of acknowledged agitators.
Namely, we may say that the acknowledged agitators are helpful to discover hot conversations. However, there is room for improvement for our discriminants for identifying agitators.

In the cases of aspect 1, 2 and 3, they have both common and different agitator candidates. Some candidates of aspect 1 seem to be blog sites similar to original news sources. On the contrary, the some agitator candidates of aspect 2 seem to be opinion leaders of some blog communities. And the some agitator candidates of aspect 3 seem to be another kind of blog site different from aspect 1 and 2. Suf-ficed to say, aspect 1, 2 and 3 differs from each other a little. Thus, it may be pos-sible to identify other types of agitators by using each discriminant individually. We proposed a method for identifying agitators as important bloggers. The re-sults of this study can be summarized as follows: 1. We described a method of extracting blog threads, and extracted threads 2. We described a method for identifying agitators as important bloggers by 3. We evaluate our method for identifying agitators, and the result indicates a
In addition, in future work we plan to improve our discriminants for identify-ing agitator and to develop the system of discovering hot conversations on the Web based on blog contents by agitators.
 This research was partly supported by a grant for Scientific Research (17700132) from the Ministry of Education, Culture, Sports, Science and Technology of Japan.

