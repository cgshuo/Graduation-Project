 Recently, many researchers and companies have explored the area of opinion detection and analysis. With the increased immersi on of Internet users has come a proliferation of opinions available on the web. Not only do we read more opinions from the web, such as in daily news editorials, but also we post more opinions through mechanisms such as governmental web sites, product review sites, news group message boards and personal blogs. This phenomenon has opened the door for massive opinion collection, which has potential impact on various applications such as public opinion moni-toring and product review summary systems. Although in its infancy, many researchers have worked in various facets of opinion analysis. Pang et al. (2002) and Turney (2002) classified senti-ment polarity of reviews at the document level. Wiebe et al. (1999) classified sentence level sub-jectivity using syntactic classes such as adjectives, pronouns and modal verbs as features. Riloff and Wiebe (2003) extracted subjective expressions from sentences using a bootstrapping pattern learn-ing process. Yu and Hatzivassiloglou (2003) iden-tified the polarity of opinion sentences using semantically oriented words. These techniques were applied and examined in different domains, such as customer reviews (Hu and Liu 2004) and news articles 1 . These researchers use lists of opin-ion-bearing clue words and phrases, and then apply various additional techniques and refinements. 
Along with many opinion researchers, we par-ticipated in a large pilot study, sponsored by NIST, which concluded that it is very difficult to define what an opinion is in general. Moreover, an ex-pression that is considered as an opinion in one domain might not be an opinion in another. For example, the statement  X  X he screen is very big X  might be a positive review for a wide screen desk-top review, but it could be a mere fact in general newspaper text. This implies that it is hard to apply opinion bearing words collected from one domain to an application for another domain. One might therefore need to collect opinion clues within indi-vidual domains. In case we cannot simply find training data from existing sources, such as news article analysis, we need to manually annotate data first. 
Most opinions are of two kinds: 1) beliefs about the world, with values such as true, false, possible, unlikely, etc.; and 2) judgments about the world, with values such as good, bad, neutral, wise, fool-ish, virtuous, etc. Statements like  X  X  believe that he is smart X  and  X  X tock prices will rise soon X  are ex-amples of beliefs whereas  X  X  like the new policy on social security X  and  X  X nfortunately this really was his year: despite a stagnant economy, he still won his re-election X  are examples of judgment opinions. However, judgment opinions and beliefs are not necessarily mutually exclusive. For example,  X  X  think it is an outrage X  or  X  X  believe that he is smart X  carry both a belief and a judgment. 
In the NIST pilot study, it was apparent that human annotators often disagreed on whether a belief statement was or was not an opinion. How-ever, high annotator agreement was seen on judg-ment opinions. In this paper, we therefore focus our analysis on judgment opinions only. We hope that future work yields a more precise definition of belief opinions on which human annotators can agree. 
We define a judgment opinion as consisting of three elements: a valence, a holder, and a topic. The valence , which applies specifically to judg-ment opinions and not beliefs, is the value of the judgment. In our framework, we consider the fol-lowing valences: positive, negative, and neutral. The holder of an opinion is the person, organiza-tion or group whose opinion is expressed. Finally, the topic is the event or entity about which the opinion is held. 
In previous work, Choi et al. (2005) identify opinion holders (sources) using Conditional Ran-dom Fields (CRF) and extraction patterns. They define the opinion holder identification problem as a sequence tagging task: given a sequence of words ( quence of labels ( the word is a holder or not. However, there are many cases where multiple opinions are expressed in a sentence each with its own holder. In those cases, finding opinion holders for each individual expression is necessary. In the corpus they used, 48.5% of the sentences which contain an opinion have more than one opinion expression with multi-ple opinion holders. This implies that multiple opinion expressions in a sentence occur signifi-cantly often. A major challenge of our work is therefore not only to focus on sentence with only one opinion, but also to identify opinion holders when there is more than one opinion expressed in a sentence. For example, consider the sentence  X  In relation to Bush X  X  axis of evil remarks, the German Foreign Minister also said, Allies are not satellites, and the French Foreign Minister caustically criti-cized that the United States X  unilateral, simplistic worldview poses a new threat to the world  X . Here,  X  the German Foreign Minister  X  should be the holder for the opinion  X  Allies are not satellites  X  and  X  the French Foreign Minister  X  should be the holder for  X  caustically criticized  X . 
In this paper, we introduce a methodology for analyzing judgment opinions. We decompose the task into four parts: 1) recognizing the opinion; 2) identifying the valence; 3) identifying the holder; and 4) identifying the topic. For the purposes of this paper, we address the first three parts and leave the last for future work. Opinions can be ex-tracted from various granularities such as a word, a sentence, a text, or even multiple texts. Each is important, but we focus our attention on word-level opinion detection (Section 2.1) and the detec-tion of opinions in short emails (Section 3). We evaluate our methodology using intrinsic and ex-trinsic measures. 
The remainder of the paper is organized as fol-lows. In the next section, we describe our method-ology addressing the three steps described above, and in Section 4 we present our experimental re-sults. We conclude with a discussion of future work. In this section, we first describe our methodology for detecting opinion bearing words and for identi-fying their valence, which is described in Section 2.1. Then, in Section 2.2, we describe our algo-rithm for identifying opinion holders. In Section 3, we show how to use our methodology for detecting opinions in short emails. 2.1 Detecting Opinion-Bearing Words We introduce an algorithm to classify a word as being positive, negative, or neutral classes. This classifier can be used for any set of words of inter-est and the resulting words with their valence tags can help in developing new applications such as a public opinion monitoring system. We define an opinion-bearing word as a word that carries a posi-tive or negative sentiment directly such as  X  X ood X ,  X  X ad X ,  X  X oolish X ,  X  X irtuous X , etc. In other words, this is the smallest unit of opinion that can thereaf-ter be used as a clue for sentence-level or text-level opinion detection. 
We treat word sentiment classification into Posi-tive, Negative, and Neutral as a three-way classifi-cation problem instead of a two-way classification problem of Positive and Negative. By adding the third class, Neutral, we can prevent the classifier from assigning either positive or negative senti-ment to weak opinion-bearing words. For example, the word  X  X entral X  that Hatzivassiloglou and McKeown (1997) included as a positive adjective is not classified as positive in our system. Instead we mark it as  X  X eutral X  since it is a weak clue for an opinion. If an unknown word has a strong rela-tionship with the neutral class, we can therefore classify it as neutral even if it has some small con-notation of Positive or Negative as well. 
Approach : We built a word sentiment classifier using WordNet and three sets of positive, negative, and neutral words tagged by hand. Our insight is that synonyms of positive words tend to have posi-tive sentiment. We expanded those manually se-lected seed words of each sentiment class by collecting synonyms from WordNet. However, we cannot simply assume that all the synonyms of positive words are positive since most words could have synonym relationships with all three senti-ment classes. This requires us to calculate the closeness of a given word to each category and determine the most probable class. The following formula describes our model for determining the category of a word: where c is a category (Positive, Negative, or Neu-tral) and w is a given word; syn n is a WordNet synonym of the word w . We calculate this close-ness as follows; where k f is the k th feature of class c which is also a member of the synonym set of the given word w. count(f k ,synset(w)) is the total number of occur-rences of the word feature f k in the synonym set of word w . In section 4.1, we describe our manually annotated dataset which we used for seed words and for our evaluation. 2.2 Identifying Opinion Holders Despite successes in identifying opinion expres-sions and subjective words/phrases (See Section 1), there has been less achievement on the factors closely related to subjectivity and polarity, such as identifying the opinion holder. However, our re-search indicates that without this information, it is difficult, if not impossible, to define  X  X pinion X  ac-curately enough to obtain reasonable inter-annotator agreement. Si nce these factors co-occur and mutually reinforce each other, the question  X  X ho is the holder of this opinion? X  is as impor-tant as  X  X s this an opinion? X  or  X  X hat kind of opin-ion is expressed here? X . 
In this section, we descr ibe the automated iden-tification for opinion holders. We define an opin-ion holder as an entity (person, organization, country, or special group of people) who expresses explicitly or implicitly the opinion contained in the sentence. 
Previous work that is related to opinion holder identification is (Bethard et al. 2004) who identify opinion propositions and holders. However, their opinion is restricted to propositional opinion and mostly to verbs. Another related work is (Choi et al. 2005) who use the MPQA corpus 2 to learn patterns of opinion sources using a graphical model and extraction pattern learning. However, they have a different task definition from ours. They define the task as identifying opinion sources (holders) given a sentence, whereas we define it as identifying opinion sources given an opinion expression in a sentence. We discussed their work in Section 1. 
Data : As training data, we used the MPQA cor-pus (Wilson and Wiebe, 2003), which contains news articles manually annotated by 5 trained an-notators. They annotated 10657 sentences from 535 documents, in four different aspects: agent, expressive-subjectivity, on, and inside . Expressive-subjectivity marks words and phrases that indi-rectly express a private state that is defined as a term for opinions, evaluations, emotions, and speculations. The on annotation is used to mark speech events and direct expressions of private states. As for the holder, we use the agent of the selected private states or speech events. While there are many possible ways to define what opin-ion means, intuitively, given an opinion, it is clear what the opinion holder means. Table 1 shows an example of the annotation. In this example, we consider the expression  X  X he U.S. government  X  X s the source of evil X  in the world X  with an expres-sive-subjectivity tag as an opinion of the holder  X  X raqi Vice President Taha Yassin Ramadan X  . 
Approach: Since more than one opinion may be expressed in a sentence, we have to find an opinion holder for each opinion expression. For example, in a sentence  X  X  thinks B X  X  criticism of T is wrong X , B is the holder of  X  X he criticism of T X , whereas A is the person who has an opinion that B X  X  criticism is wrong. Therefore, we define our task as finding an opinion holder, given an opinion expression. Our earlier work (ref suppressed) fo-cused on identifying opinion expressions within text. We employ that system in tandem with the one described here. To learn opinion holders automatically, we use a Maximum Entropy model. Maximum Entropy models implement the intuition that the best model is the one that is consistent with the set of con-straints imposed by the evidence but otherwise is as uniform as possible (Berger et al. 1996). There are two ways to model the problem with ME: clas-sification and ranking. Classification allocates each holder candidate to one of a set of predefined classes while ranking selects a single candidate as answer. This means that classification modeling 3 can select many candida tes as answers as long as they are marked as true, and does not select any candidate if every one is marked as false. In con-trast, ranking always selects the most probable candidate as an answer, which suits our task better. Our earlier experiments showed poor performance with classification modeling, an experience also reported for Question Answering (Ravichandran et al. 2003). 
We modeled the problem to choose the most probable candidate that maximizes a given condi-tional probability distribution, given a set of holder candidates h The conditional probability P h h can be calculated based on K feature func-tions f for the ranking as follows: Each weight of its feature function. 
Figure 1 illustrates our holder identification sys-tem. First, the system generates all possible holder candidates, given a sentence and an opinion ex-pression &lt;E&gt;. After parsing the sentence, it ex-tracts features such as the syntactic path information between each candidate &lt;H&gt; and the expression &lt;E&gt; and a distance between &lt;H&gt; and &lt;E&gt;. Then it ranks holder candidates according to the score obtained by the ME ranking model. Fi-nally the system picks the candidate with the high-est score. Below, we describe in turn how to select holder candidates and how to select features for the training model.
 would expect most opinion holders to be named entities ( PERSON or ORGANIZATION ) 4 . However, other common noun phrases can often be opinion holders, such as  X  X he leader X ,  X  X hree nations X , and  X  X he Arab and Islamic world X . Sometimes, pro-nouns like he, she, and they that refer to a PERSON , or it that refers to an ORGANIZATION or country, can be an opinion holder. In our study, we consider all noun phrases, including common noun phrases, named entities, and pronouns, as holder candidates. 
Feature Selection: Our hypothesis is that there exists a structural relation between a holder &lt;H&gt; and an expression &lt;E&gt; that can help to identify opinion holders. This relation may be represented by lexical-level patterns between &lt;H&gt; and &lt;E&gt;, but anchoring on surface words might run into the data sparseness problem. For example, if we see the lexical pattern  X &lt;H&gt; recently criticized &lt;E&gt; X  in the training data, it is impossible to match the ex-pression  X &lt;H&gt; yesterday condemned &lt;E&gt; X . These, however, have the same syntactic features in our model. We therefore selected structural features from a deep parse, using the Charniak parser. 
After parsing the sentence, we search for the lowest common parent node of the words in &lt;H&gt; expressed with multiple words). A lowest common parent node is a non-terminal node in a parse tree that covers all the words in &lt;H&gt; and &lt;E&gt;. Figure 2 shows a parsed example of a sentence with the holder  X  X hina X  X  official Xinhua news agency X  and the opinion expression  X  X ccusing X . In this example, the lowest common parent of words in &lt;H&gt; is the bold NP and the lowest common parent of &lt;E&gt; is the bold VBG. We name these nodes Hhead and Ehead respectively. After finding these nodes, we label them by subscript (e.g., NP H and VBG E ) to how Hhead and Ehead are related to each other in the parse tree, we define another node, HEhead, which covers both Hhead and Ehead. In the exam-ple, HEhead is S at the top of the parse tree since it covers both NP H and VBG E . We also label S by subscript as S HE . 
To express tree structure for ME training, we extract path information between &lt;H&gt; and &lt;E&gt;. In the example, the complete path from Hhead to ever, representing each complete path as a single feature produces so many different paths with low frequencies that the ME system would learn poorly. Therefore, we split the path into three parts: HEpath, Hpath an Epath . HEpath is defined as a path from HEhead to its left and right child nodes that are also parents of Hhead and Ehead. Hpath is a path from Hhead and one of its ancestor nodes that is a child of HEhead. Similarly, Epath is defined as a path from Ehead to one of its ances-tors that is also a child of HEhead. With this split-ting, the system can work when any of HEpath, Hpath or Epath appeared in the training data, even if the entire path from &lt;H&gt; to &lt;E&gt; is unseen. Table 2 summarizes these concepts with two holder can-didate examples in the parse tree of Figure 2. 
We also include two non-structural features. The first is the type of the candidate, with values NP, PERSON, ORGANIZATION , and LOCATION . The second feature is the distance between &lt;H&gt; and &lt;E&gt;, counted in parse tree words. This is moti-vated by the intuition that holder candidates tend to lie closer to their opinion expression. All features are listed in Table 3. We describe the performance of the system in Section 4. In this section, we describe a German email analy-sis system into which we included the opinion-bearing words from Section 2.1 to detect opinions expressed in emails. This system is part of a col-laboration with the EU-funded project QUALEG (Quality of Service and Legitimacy in eGovern-ment) which aims at enabling local governments to manage their policies in a transparent and trustable way 5 . For this purpose, local governments should be able to measure the performance of the services they offer, by assessing the satisfaction of its citi-zens. This need makes a system that can monitor and analyze citizens X  emails essential. The goal of our system is to classify emails as neutral or as bearing a positive or negative opinion. 
To generate opinion bearing words, we ran the word sentiment classifier from Section 2.1 on 8011 verbs to classify them into 807 positive, 785 nega-tive, and 6149 neutral. For 19748 adjectives, the system classified them into 3254 positive, 303 negative, and 16191 neutral. Since our opinion-bearing words are in English and our target system is in German, we also applied a statistical word alignment technique, GIZA++ 6 (Och and Ney 2000). Running it on version two of the European Parliament corpus, we obtained statistics for 678,340 German-English word pairs and 577,362 English-German word pairs. Obtaining these two lists of translation pairs allows us to convert Eng-lish words to German, and German to English, without a full document translation system. To util-ize our English opinion-bearing words in a German opinion analysis system, we developed two models, outlined in Table 4, each of which is triggered at different points in the system. 
In both models, however, we still need to decide how to apply opinion-bearing words as clues to determine the sentiment of a whole email. Our previous work on sentence level sentiment classifi-cation (ref suppressed) shows that the presence of any negative words is a reasonable indication of a negative sentence. Since our emails are mostly short (the average number of words in each email is 19.2) and we avoided collecting weak negative opinion clue words, we hypothesize that our previ-ous sentence sentiment classification study works on the email sentiment analysis. This implies that an email is negative if it contains more than certain number of strong negative words. We tune this parameter using our training data. Conversely, if an email contains mostly positive opinion-bearing words, we classify it as a positive email. We assign neutral if an email does not contain any strong opinion-bearing words. 
Manually annotated email data was provided by our joint research site. This data contains 71 emails from citizens regarding a German festival. 26 of them contained negative complaints, for example, the lack of parking space, and 24 of them were positive with complimentary comments to the or-ganization. The rest of them were marked as  X  X uestions X  such as how to buy festival tickets,  X  X nly text X  of simple comments,  X  X uzzy X , and  X  X if-ficult X . So, we carried system experiments on posi-tive and negative emails with precision and recall. We report system results in Section 4. In this section, we evaluate the three systems de-scribed in Sections 2 and 3: detecting opinion-bearing words and identifying valence, identifying opinion holders, and the German email opinion analysis system. 4.1 Detecting Opinion-bearing Words We described a word classification system to de-tect opinion-bearing words in Section 2.1. To ex-amine its effectiveness, we annotated 2011 verbs and 1860 adjectives, which served as a gold stan-dard 7 . These words were randomly selected from a collection of 8011 English verbs and 19748 Eng-lish adjectives. We use training data as seed words for the WordNet expansion part of our algorithm (described in Section 2.1). Table 5 shows the dis-tribution of each semantic class. In both verb and adjective annotation, neutral class has much more words than the positive or negative classes. 
We measured the precision, recall, and F-score of our system using 10-fold cross validation. Table 6 shows the results with 95% confidence bounds. Overall (combining positive, neutral and negative), our system achieved 77.7%  X  1.2% accuracy on verbs and 69.1%  X  2.1% accuracy on adjectives. The system has very high precision in the neutral category for both verbs (97.2%) and adjectives (89.5%), which we interpret to mean that our sys-tem is really good at filtering non-opinion bearing words. Recall is high in all cases but precision var-ies; very high for neutral and relatively high for negative but low for positive. 4.2 Opinion Holder Identification We conducted experiment s on 2822 &lt;sentence; opinion expression; holder&gt; triples and divided the data set into 10 &lt;training; test&gt; sets for cross vali-dation. For evaluation, we consider to match either fully or partially with the holder marked in the test data. The holder matches fully if it is a single entity (e.g.,  X  X ush X ). The holder matches partially when it is part of the multiple entities that make up the marked holder. For example, given a marked holder  X  X ichel Sidibe, Director of the Country and Regional Support Department of UNAIDS X , we consider both  X  X ichel Sidibe X  and  X  X irector of the Country and Regional Support Department of UNAIDS X  as acceptable answers. 
Our experiments consist of two parts based on the candidate selection method. Besides the selec-tion method we described in Section 2.2, we also conducted a separate expe riment by excluding pro-nouns from the candidate list. With the second method, the system always produces a non-pronoun holder as an answer. This selection method is useful in some Information Extraction application that only cares non-pronoun holders. 
We report accuracy (the percentage of correct answers the system found in the test set) to evalu-ate our system. We also report how many correct answers were found within the top2 and top3 sys-tem answers. Tables 7 and 8 show the system accu-racy with and without considering pronouns as alias candidates, respectively. Table 8 mostly shows lower accuracies than Table 7 because test data often has only a non-pronoun entity as a holder and the system picks a pronoun as its an-swer. Even if the pronoun refers the same entity marked in the test data, the evaluation system counts it as wrong because it does not match the hand annotated holder. 
To evaluate the effectiveness of our system, we set the baseline as a system choosing the closest candidate to the expression as a holder without the Maximum Entropy decision. The baseline system had an accuracy of only 21.3% for candidate selec-tion over all noun phrases a nd 23.2% for candidate selection excluding pronouns. 
The results show that detecting opinion holders is a hard problem, but adopting syntactic features (F2, F3, and F4) helps to improve the system. A promising avenue of future work is to investigate the use of semantic f eatures to eliminate noun phrases such as  X  X heap energy subsidies X  or  X  X os-sible strikes X  from the candidate set before we run our ME model, since they are less likely to be an opinion holder than noun phrases like  X  X hree na-tions X  or  X  X alestine people. X  4.3 German Emails For our experiment, we performed 7-fold cross validation on a set of 71 emails. Table 9 shows the average precision, recall, and F-score. Results show that our system identifies negative emails (complaints) better than praise. When we chose a system parameter for the focus, we intended to find negative emails rather th an positive emails because officials who receive these emails need to act to solve problems when people complain but they have less need to react to compliments. By high-lighting high recall of negative emails, we may misclassify a neutral email as negative but there is also less chance to neglect complaints.
 In this paper, we presented a methodology for ana-lyzing judgment opinions, which we define as opinions consisting of a valence, a holder, and a topic. We presented models for recognizing sen-tences containing judgment opinions, identifying the valence of the opinion, and identifying the holder of the opinion. Remaining is to also finally identify the topic of the opinion. Past tests with human annotators indicate that the accuracy of identifying valence, holder and topic is much in-creased when all three are being done simultane-ously. We plan to investigate a joint model to verify this intuition. 
Our past work indicated that, for newspaper texts, it is feasible for annotators to identify judg-ment opinion sentences and for them to identify their holders and judgment valences. It is encour-aging to see that we achieved good results on a new genre  X  emails sent from citizens to a city co-unsel  X  and in a new language, German. 
This paper presents a computational framework for analyzing judgment opinions. Even though these are the most common opinions, it is a pity that the research community remains unable to de-fine belief opinions (i.e., those opinions that have values such as true, false, possible, unlikely, etc.) with high enough inter-annotator agreement. Only once we properly define belief opinion will we be capable of building a complete opinion analysis system. 
