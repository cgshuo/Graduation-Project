 Recent advances in molecular biology have brought about a revolution in our understanding of cellu-lar processes. Microarray technology now allows measurement of mRNA abundance on a genome-wide scale, and techniques such as chromatin immunoprecipitation (ChIP) have largely unveiled the wiring of the cellular transcriptional regulatory network, identifying which genes are bound by which transcription factors. However, a full quantitative description of the regulatory mechanism of transcription requires the knowledge of a number of other biological quantities: first of all the con-centration levels of active transcription factor proteins, but also a number of gene-specific constants such as the baseline expression level for a gene, the rate of decay of its mRNA and the sensitivity with which target genes react to a given transcription factor protein concentration. While some of these quantities can be measured ( e.g. mRNA decay rates), most of them are very hard to measure with current techniques, and have therefore to be inferred from the available data. This is often done following one of two complementary approaches. One can formulate a large scale simplified model of regulation (for example assuming a linear response to protein concentrations) and then combine network architecture data and gene expression data to infer transcription factors X  protein concentrations on a genome-wide scale. This line of research was started in [3] and then extended of a small subnetwork where few transcription factors regulate a small number of established tar-get genes, trying to include the finer points of the dynamics of transcriptional regulation. In this paper we follow the second approach, focussing on the simplest subnetwork consisting of one tran-scription factor regulating its target genes, but using a detailed model of the interaction dynamics to infer the transcription factor concentrations and the gene specific constants. This problem was recently studied by Barenco et al. [1] and by Rogers et al. [9]. In these studies, parametric models were developed describing the rate of production of certain genes as a function of the concentration of transcription factor protein at some specified time points. Markov chain Monte Carlo (MCMC) methods were then used to carry out Bayesian inference of the protein concentrations, requiring substantial computational resources and limiting the inference to the discrete time-points where the data was collected.
 We show here how a Gaussian process model provides a simple and computationally efficient method for Bayesian inference of continuous transcription factor concentration profiles and asso-ciated model parameters. Gaussian processes have been used effectively in a number of machine learning and statistical applications [8] (see also [2, 6] for the work that is most closely related to ours). Their use in this context is novel, as far as we know, and leads to several advantages. Firstly, it allows for the inference of continuous quantities (concentration profiles) without discretization, therefore accounting naturally for the temporal structure of the data. Secondly, it avoids the use of cumbersome interpolation techniques to estimate mRNA production rates from mRNA abundance outstrips MCMC techniques in terms of computational efficiency, which we expect to be crucial in future extensions to more complex (and realistic) regulatory networks.
 The paper is organised as follows: in the first section we discuss linear response models. These are simplified models in which the mRNA production rate depends linearly on the transcription factor protein concentration. Although the linear assumption is not verified in practice, it has the advantage of giving rise to an exactly tractable inference problem. We then discuss how to extend the formalism to model cases where the dependence of mRNA production rate on transcription factor protein concentration is not linear, and propose a MAP-Laplace approach to carry out Bayesian inference. In the third section we test our model on the leukemia data set studied in [1]. Finally, we discuss further extensions of our work. MATLAB code to recreate the experiments is available on-line. Let the data set under consideration consist of T measurements of the mRNA abundance of N genes. t to the concentration of the regulating transcription factor protein f ( t ) , factor and D j is the decay rate of the mRNA. Crucially, the dependence of the mRNA transcription rate on the protein concentration (response) is linear. Assuming a linear response is a crude simplifi-by Barenco et al. [1] to model a simple network consisting of the tumour suppressor transcription factor p53 and five of its target genes. We will consider more general models in section 2. The equation given in (1) can be solved to recover where k j arises from the initial conditions, and is zero if we assume an initial baseline expression level x j (0) = B j /D j .
 We will model the protein concentration f as a latent function drawn from a Gaussian process prior distribution. It is important to notice that equation (2) involves only linear operations on the function f ( t ) . This implies immediately that the mRNA abundance levels will also be modelled as worked out explicitly from the covariance function of the latent function f .
 Let us rewrite equation (2) as where we have set the initial conditions such that k j in equation (2) is equal to zero and yields that Explicitly, this is given by the following formula If the process prior over f ( t ) is taken to be a squared exponential kernel, where l controls the width of the basis functions 1 , the integrals in equation (4) can be computed analytically. The resulting covariances are obtained as where eters { B j , S j , D j } N j =1 . The effect of f ( t ) has been marginalised.
 and f ( t 0 ) , which is obtained as Again, this can be obtained explicitly for squared exponential priors on the latent function f as Standard Gaussian process regression techniques [see e.g. 8] then yield the mean and covariance function of the posterior process on f as where x denotes collectively the x j ( t ) observed variables and capital K denotes the matrix obtained by evaluating the covariance function of the processes on every pair of observed time points. The model parameters B j , D j and S j can be estimated by type II maximum likelihood. Alternatively, they can be assigned vague gamma prior distributions and estimated a posteriori using MCMC sampling.
 In practice, we will allow the mRNA abundance of each gene at each time point to be corrupted by some noise, so that we can model the observations at times t i for i = 1 , . . . , T as, with j ( t i )  X  N 0 ,  X  2 ji . Estimates of the confidence levels associated with each mRNA mea-surement can be obtained for Affymetrix microarrays using probe-level processing techniques such as the mmgMOS model of [4]. The covariance of the noisy process is simply obtained as K yy =  X  + K xx , with  X  = diag  X  2 11 , . . . ,  X  2 1 T , . . . ,  X  2 N 1 , . . . ,  X  2 NT . While the linear response model presents the advantage of being exactly tractable in the important squared exponential case, a realistic model of transcription should account for effects such as satu-ration and ultrasensitivity which cannot be captured by a linear function. Also, all the quantities in equation (1) are positive, but one cannot constrain samples from a Gaussian process to be positive. Modelling the response of the transcription rate to protein concentration using a positive nonlinear function is an elegant way to enforce this constraint. 2.1 Formalism Let the response of the mRNA transcription rate to transcription factor protein concentration levels be modelled by a nonlinear function g with a target-specific vector  X  j of parameters, so that, where we again set x j (0) = B j /D j and assign a Gaussian process prior distribution to f ( t ) . In this case the induced distribution of x j ( t ) is no longer a Gaussian process. However, we can derive the functional gradient of the likelihood and prior, and use this to learn the Maximum a Posteriori (MAP) solution for f ( t ) and the parameters by (functional) gradient descent. Given noise-corrupted data y j ( t i ) as above, the log-likelihood of the data Y = { y j ( t i ) } is given by p ( Y | f, { B j ,  X  j , D j ,  X  } ) =  X  where  X  denotes collectively the parameters of the prior covariance on f (in the squared exponential case,  X  = l 2 ). The functional derivative of the log-likelihood with respect to f is then obtained as where  X ( x ) is the Heaviside step function and we have omitted the model parameters for brevity. The negative Hessian of the log-likelihood with respect to f is given by w ( t, t 0 ) =  X  where g 0 ( f ) =  X  X / X  X  and g 00 ( f ) =  X  2 g/ X  X  2 . 2.2 Implementation We discretise in time t and compute the gradient and Hessian on a grid using approximate Riemann quadrature. In the simplest case, we choose a uniform grid [ t p ] p = 1 , . . . , M so that  X  = t  X  t p  X  1 is constant. We write f = [ f p ] to be the vector realisation of the function f at the grid points. The gradient of the log-likelihood is then given by, and the negative Hessian of the log-likelihood is, +  X  2 where  X  pq is the Kronecker delta. In these and the following formulae t i is understood to mean the points themselves.
 We can then compute the gradient and Hessian of the (discretised) un-normalised log posterior  X ( f ) = log p ( Y | f ) + log p ( f ) [see 8, chapter 3] where K is the prior covariance matrix evaluated at the grid points. These can be used to find the MAP solution  X  f using Newton X  X  method. The Laplace approximation to the log-marginal likelihood is then (ignoring terms that do not involve model parameters) We can also optimise the log-marginal with respect to the model and kernel parameters. The gradient of the log-marginal with respect to the kernel parameters is [8]  X  log p ( Y |  X ) where the final term is due to the implicit dependence of  X  f on  X  . 2.3 Example: exponential response As an example, we consider the case in which which provides a useful way of constraining the protein concentration to be positive. Substituting equation (18) in equations (13) and (14) one obtains  X  log p ( Y | f ) The terms required in equation (17) are, where A = ( W + K  X  1 )  X  1 . To test the efficacy of our method, we used a recently published biological data set which was stud-ied using a linear response model by Barenco et al. [1]. This study focused on the tumour suppressor protein p53. mRNA abundance was measured at regular intervals in three independent human cell lines using Affymetrix U133A oligonucleotide microarrays. The authors then restricted their in-terest to five known target genes of p53: DDB2 , p21 , SESN1/hPA26 , BIK and TNFRSF10b . They estimated the mRNA production rates by using quadratic interpolation between any three consecu-tive time points. They then discretised the model and used MCMC sampling (assuming a log-normal identifiable, the value of the mRNA decay of one of the target genes, p21, was measured experimen-tally. Also, the scale of the sensitivities was fixed by choosing p21 X  X  sensitivity to be equal to one, and f (0) was constrained to be zero. Their predictions were then validated by doing explicit protein concentration measurements and growing mutant cell lines where the p53 gene had been knocked out. 3.1 Linear response analysis We first analysed the data using the simple linear response model used by Barenco et al. [1]. Raw data was processed using the mmgMOS model of [4], which also provides estimates of the credibil-ity associated with each measurement. Data from the different cell lines were treated as independent tial covariance function for the prior distribution on the latent function f . The inferred posterior mean function for f , together with 95% confidence intervals, is shown in Figure 1(a). The pointwise estimates inferred by Barenco et al. are shown as crosses in the plot. The posterior mean function matches well the prediction obtained by Barenco et al. 2 Notice that the right hand tail of the in-ferred mean function shows an oscillatory behaviour. We believe that this is an artifact caused by the squared exponential covariance; the steep rise between time zero and time two forces the length scale of the function to be small, hence giving rise to wavy functions [see page 123 in 8]. To avoid this, we repeated the experiment using the  X  X LP X  covariance function for the prior distribution over f [12]. Posterior estimation cannot be obtained analytically in this case so we resorted to the MAP-Laplace approximation described in section 2. The MLP covariance is obtained as the limiting case of an infinite number of sigmoidal neural networks and has the following covariance function where w and b are parameters known as the weight and the bias variance. The results using this covariance function are shown in Figure 1(b). The resulting profile does not show the unexpected oscillatory behaviour and has tighter credibility intervals.
 Figure 2 shows the results of inference on the values of the hyperparameters B j , S j and D j . The columns on the left, shaded grey, show results from our model and the white columns are the estimates obtained in [1]. The hyperparameters were assigned a vague gamma prior distribution ( a = b = 0 . 1 , corresponding to a mean of 1 and a variance of 10). Samples from the posterior dis-tribution were obtained using Hybrid Monte Carlo [see e.g. 7]. The results are in good accordance with the results obtained by Barenco et al. Differences in the estimates of the basal transcription rates are probably due to the different methods used for probe-level processing of the microarray data. 3.2 Non-linear response analysis We then used the non-linear response model of section 2 in order to constrain the protein concentra-tions inferred to be positive. We achieved this by using an exponential response of the transcription rate to the logged protein concentration. The inferred MAP solutions for the latent function f are plotted in Figure 3 for the squared exponential prior (a) and for the MLP prior (b). In this paper we showed how Gaussian processes can be used effectively in modelling the dynam-ics of a very simple regulatory network motif. This approach has many advantages over standard parametric approaches: first of all, there is no need to restrict the inference to the observed time points, and the temporal continuity of the inferred functions is accounted for naturally. Secondly, Gaussian processes allow noise information to be accounted for in a natural way. It is well known to measure mRNA abundance for low expressed genes, for example), and partly because of the dif-ference between different cell lines. Accounting for these sources of noise in a parametric model can be difficult (particularly when estimates of the derivatives of the measured quantities are required), while Gaussian Processes can incorporate this information naturally. Finally, MCMC parameter estimation in a discretised model can be computationally expensive due to the high correlations be-tween variables. This is a consequence of treating the protein concentrations as parameters, and results in many MCMC iterations to obtain reliable samples. Parameter estimation can be achieved easily in our framework by type II maximum likelihood or by using efficient Monte Carlo sampling techniques only on the model hyperparameters.
 While the results shown in the paper are encouraging, this is still a very simple modelling situation. For example, it is well known that transcriptional delays can play a significant role in determining the dynamics of many cellular processes [5]. These effects can be introduced naturally in a Gaussian process model; however, the data must be sampled at a reasonably high frequency in order for delays to become identifiable in a stochastic model, which is often not the case with microarray data sets. Another natural extension of our work would be to consider more biologically meaningful nonlin-earities, such as the popular Michaelis-Menten model of transcription used in [9]. Finally, networks such as p53. However, our ultimate goal would be to describe regulatory pathways consisting of more genes. These can be dealt with in the general framework described in this paper, but careful thought will be needed to overcome the greater computational difficulties.
 Acknowledgements We thank Martino Barenco for useful discussions and for providing the data. We gratefully acknowl-edge support from BBSRC Grant No BBS/B/0076X  X  X mproved processing of microarray data with probabilistic models X .

