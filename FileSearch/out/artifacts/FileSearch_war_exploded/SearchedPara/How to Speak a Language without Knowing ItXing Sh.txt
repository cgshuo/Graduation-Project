 Can people speak a language they don X  X  know? Actually, it happens frequently. Travel phrase-books contain phrases in the speaker X  X  language (e.g.,  X  X hank you X ) paired with foreign-language translations (e.g.,  X   X  X  X  X  X  X  X   X ). Since the speaker may not be able to pronounce the foreign-language orthography, phrasebooks additionally provide phonetic spellings that approximate the sounds of the foreign phrase. These spellings employ the fa-miliar writing system and sounds of the speaker X  X  language. Here is a sample entry from a French phrasebook for English speakers:
The user ignores the French and goes straight to the Franglish. If the Franglish is well designed, an English speaker can pronounce it and be under-stood by a French listener.

Figure 1 shows a sample entry from another book X  X n English phrasebook for Chinese speak-ers. If a Chinese speaker wants to say  X   X   X   X   X   X   X   X   X   X   X , she need only read off the Chinglish  X   X   X   X   X   X   X   X  X   X   X   X   X , which approximates the sounds of  X  X hank you for this wonderful meal X  using Chinese characters.

Phrasebooks permit a form of accurate, per-sonal, oral communication that speech-to-speech translation devices lack. However, the user is lim-ited to a small set of fixed phrases. In this paper, we lift this restriction by designing and evaluating a software program with the following:  X  Input: Text entered by the speaker, in her own  X  Output: Phonetic rendering of a foreign-
The main challenge is that different languages have different orthographies, different phoneme inventories, and different phonotactic constraints, so mismatches are inevitable. Despite this, the system X  X  output should be both unambiguously pronounceable by the speaker and readily under-stood by the listener.

Our goal is to build an application that covers many language pairs and directions. The current paper describes a single system that lets a Chinese person speak English.

We take a statistical modeling approach to this problem, as is done in two lines of research that are most related. The first is machine transliteration (Knight and Graehl, 1998), in which names and technical terms are translated across languages with different sound systems. The other is re-spelling generation (Hauer and Kondrak, 2013), where an English speaker is given a phonetic hint about how to pronounce a rare or foreign word to another English speaker. By contrast, we aim (yi si ai te e ke lao ke nao) 15  X   X   X   X   X   X   X   X   X   X   X   X  to help people issue full utterances that cross lan-guage barriers. Our system X  X  input is Chinese. The output is a string of Chinese characters that approximate English sounds, which we call Chinglish. We build several candidate Chinese-to-Chinglish sys-tems and evaluate them as follows:  X  We compute the normalized edit distance  X  A Chinese speaker pronounces the system X  X   X  We automate the previous evaluation by re-We seek to imitate phonetic transformations found in phrasebooks, so phrasebooks themselves are a good source of training data. We obtained a col-lection of 1312 &lt; Chinese, English, Chinglish &gt;
We use 1182 utterances for training, 65 for de-velopment, and 65 for test. We know of no other computational work on this type of corpus.

Our Chinglish has interesting gross empirical properties. First, because Chinglish and Chinese are written with the same characters, they render the same inventory of 416 distinct syllables. How-ever, the distribution of Chinglish syllables differs a great deal from Chinese (Table 2). Syllables  X  X i X  and  X  X e X  are very popular, because while conso-nant clusters like English  X  X t X  are impossible to re-produce exactly, the particular vowels in  X  X i X  and  X  X e X  are fortunately very weak.
 Table 2: Top 5 frequent syllables in Chinese (McEnery and Xiao, 2004) and Chinglish
We find that multiple occurrences of an English word type are generally associated with the same Chinglish sequence. Also, Chinglish characters do not generally span multiple English words. It is reasonable for  X  X an I X  to be rendered as  X  X an nai X , with  X  X ai X  spanning both English words, but this is rare. We model Chinese-to-Chinglish translation with a cascade of weighted finite-state transducers (wFST), shown in Figure 2. We use an online MT system to convert Chinese to an English word sequence (Eword), which is then passed through FST A to generate an English sound sequence (Epron). FST A is constructed from the CMU Pro-nouncing Dictionary (Weide, 2007).
 Next, wFST B translates English sounds into Chinese sounds (Pinyin-split). Pinyin is an official syllable-based romanization of Mandarin Chinese characters, and Pinyin-split is a standard separa-tion of Pinyin syllables into initial and final parts. Our wFST allows one English sound token to map Figure 2: Finite-state cascade for modeling the re-lation between Chinese and Chinglish. to one or two Pinyin-split tokens, and it also allows two English sounds to map to one Pinyin-split to-ken.

Finally, FST C converts Pinyin-split into Pinyin, and FST D chooses Chinglish characters. We also experiment with an additional wFST E that trans-lates English words directly into Chinglish. FSTs A, C, and D are unweighted, and remain so throughout this paper. 5.1 Phoneme-based model We must now estimate the values of FST B pa-rameters, such as P( si | S ). To do this, we first take our phrasebook triples and construct sample string pairs &lt; Epron, Pinyin-split &gt; by pronounc-ing the phrasebook English with FST A, and by pronouncing the phrasebook Chinglish with FSTs D and C. Then we run the EM algorithm to learn FST B parameters (Table 3) and Viterbi align-ments, such as: 5.2 Phoneme-phrase-based model Mappings between phonemes are context-sensitive. For example, when we decode English  X  X randmother X , we get: Table 3: Learned translation tables for the phoneme based model where as the reference Pinyin-split sequence is:
Here,  X  X e n X  should be decoded as  X  X an X  when preceded by  X  X  X . Following phrase-based meth-ods in statistical machine translation (Koehn et al., 2003) and machine transliteration (Finch and Sumita, 2008), we model substitution of longer se-quences. First, we obtain Viterbi alignments using the phoneme-based model, e.g.:
Second, we extract phoneme phrase pairs con-sistent with these alignments. We use no phrase-size limit, but we do not cross word boundaries. From the example above, we pull out phrase pairs like:
We add these phrase pairs to FST B, and call this the phoneme-phrase-based model. 5.3 Word-based model We now turn to WFST E, which short-cuts di-rectly from English words to Pinyin. We create &lt; English, Pinyin &gt; training pairs from our phrase-book simply by pronouncing the Chinglish with FST D. We initially allow each English word type to map to any sequence of Pinyin, up to length 7, with uniform probability. EM learns values for pa-rameters like P ( nai te | night ) , plus Viterbi align-ments such as: only on valid outputs (e.g. 29 outputs for word based model).
Notice that this model makes alignment errors due to sparser data (e.g., the word  X  X ips X  and  X  X i pu si X  only appear once each in the training data). 5.4 Hybrid training To improve the accuracy of word-based EM align-ment, we use the phoneme based model to de-code each English word in the training data to Pinyin. From the 100-best list of decodings, we collect combinations of start/end Pinyin syllables for the word. We then modify the initial, uniform English-to-Pinyin mapping probabilities by giving higher initial weight to mappings that respect ob-served start/end pairs. When we run EM, we find that alignment errors for  X  X ips X  in section 5.3 are fixed: 5.5 Hybrid decoding The word-based model can only decode 29 of the 65 test utterances, because wFST E fails if an ut-terance contains a new English word type, pre-viously unseen in training. The phoneme-based models are more robust, able to decode 63 of the 65 utterances, failing only when some English word type falls outside the CMU pronouncing dic-tionary (FST A).

Our final model combines these two, using the word-based model for known English words, and the phoneme-based models for unknown English words. Our first evaluation (Table 4) is intrinsic, measur-ing our Chinglish output against references from the test portion of our phrasebook, using edit dis-tance. Here, we start with reference English and measure the accuracy of Pinyin syllable produc-tion, since the choice of Chinglish character does not affect the Chinglish pronunciation. We see that the Word-based method has very high accuracy, but low coverage. Our best system uses the Hy-brid training/decoding method. As Table 6 shows, the ratio of unseen English word tokens is small, thus large portion of tokens are transformed us-ing word-based method. The average edit dis-tance of phoneme-phrase model and that of hy-brid training/decoding model are close, indicating that long phoneme-phrase pairs can emulate word-pinyin mappings.
 Table 6: Unseen English word type and tokens in test data.
 Hybrid training and decoding 0.496 Table 7: Chinglish-to-English accuracy in dicta-tion task.

Our second evaluation is a dictation task. We speak our Chinglish character sequence output aloud and ask an English monolingual person to transcribe it. (Actually, we use a Chinese synthe-sizer to remove bias.) Then we measure edit dis-tance between the human transcription and the ref-erence English from our phrasebook. Results are shown in Table 7.  X   X   X   X   X  X  X  X   X   X   X   X   X   X   X   X   X   X   X   X   X  Hybrid training and decoding 0.898 Table 8: Chinglish-to-English accuracy in auto-matic synthesis-recognition (ASR) task. Numbers are average edit distance between recognized En-glish and reference English.

Finally, we repeat the last experiment, but re-moving the human from the loop, using both automatic Chinese speech synthesis and English speech recognition. Results are shown in Table 8. Speech recognition is more fragile than human transcription, so edit distances are greater. Table 5 shows a few examples of the Chinglish generated by the hybrid training and decoding method, as well as the recognized English from the dictation and ASR tasks. Our work aims to help people speak foreign lan-guages they don X  X  know, by providing native pho-netic spellings that approximate the sounds of for-eign phrases. We use a cascade of finite-state transducers to accomplish the task. We improve the model by adding phrases, word boundary con-straints, and improved alignment.

In the future, we plan to cover more language pairs and directions. Each target language raises interesting new challenges that come from its nat-ural constraints on allowed phonemes, syllables, words, and orthography.

