 1. Introduction becoming a key component of intelligent information access systems. Taking advantage of the resources avail-able through major search engines can dramatically simplify the process of information access and delivery.
However, accessing topical information through existing search engines requires the formulation of appropri-queries are allowed, they may become too specific, returning very few or no results.
 taxes are used to formulate context-based queries, there is no guarantee that the vocabulary used to describe the context will match the vocabulary by which the relevant resources are indexed. The goal of our research ing topical information when formulating search queries. The proposed framework takes an incremental approach to evolve high-quality queries for retrieving context-relevant textual resources (such as HTML from a thematic context and incrementally evolves those queries based on their ability to retrieve relevant results when presented to a search engine.
 tant impacts on today X  X  information society. These methods can help build systems for a range of information services: cussion of GAs and their suitability for their application to our research problem. It then reviews other pro-posals that have applied evolutionary algorithms to solve similar problems. This is followed by a presentation of the main contribution of our work, a GA approach for evolving high-quality queries, followed by an eval-uation of the proposal. The article closes with a summary of our conclusions and a discussion of future work. 2. Background 2.1. Query adaptation and context-based search
Automatic query expansion or reformulation are information retrieval (IR) techniques based on the use of a set of documents from which additional terms can be obtained ( Attar &amp; Fraenkel, 1977; Gauch &amp; Smith, 1991 ). In recent proposals, query reformulation has been used to automatically augment user queries with other terms selected from the user context. A variety of systems pursuing this approach have obtained encour-aging results. For example, Watson ( Budzik et al., 2001 ) uses contextual information from documents that users are manipulating to automatically generate Web queries from the documents, using a variety of term-extraction and weighting techniques to select suitable query terms. Watson then filters the matching results, clusters similar HTML pages, and presents the pages to the user as suggestions. Another such system is the remembrance agent ( Rhodes &amp; Starner, 1996 ) which operates inside the Emacs text editor and continuously monitors the user X  X  work to find relevant text documents, notes, and emails previously indexed. Other systems such as Letizia ( Lieberman, 1995 ) and WebWatcher ( Armstrong, Freitag, Joachims, &amp; Mitchell, 1995 ) use contextual information compiled from past browsing behavior to provide suggestions on related Web pages igation of information spaces by providing task specific support for consulting heterogeneous search services. The system helps users to examine their present context, move to new contexts or return to previous ones. SenseMaker presents the collection of suggested documents in bundles (their term for clusters), which can be progressively expanded, providing a user-guided form of incremental search. The EXTENDER system (Maguitman, Leake, Reichherzer, &amp; Menczer, 2004, 2005 ) applies an incremental technique to build up con-gather information from the users by monitoring users X  behavior and context, including eye gaze, keyword input, mouse movements, visited URLs and software applications on focus. This information is used to retrieve context-relevant material from the Web and databases. 2.2. An overview of genetic algorithms
GAs ( Holland, 1975 ) are robust optimization techniques based on the principle of natural selection and Therefore, each new generation would contain stronger (fitter) individuals in contrast to its ancestors.
To use GAs in optimization problems we need to define candidate solutions by chromosomes consisting of genes and a fitness function to be maximized. A population of candidate solutions (usually of a constant size) is maintained. The goal is to obtain better solutions after some generations. To produce a new generation GAs typically use selection together with the genetic operators of crossover and mutation. Parents are selected to produce offspring, favoring those parents with highest values of the fitness function. Crossover of population members takes place by exchanging subparts of the parent chromosomes (roughly mimicking a mating pro-cess), while mutation is the result of a random perturbation of the chromosome (e.g., replacing a gene by another). A simple GA works as follows: Step 1 : Start with a randomly generated population Step 2 : Evaluate the fitness of each individual in the population Step 3 : Select individuals to reproduce based on their fitness Step 4 : Apply crossover with probability P c Step 5 : Apply mutation with probability P m purpose is to explore the search space of candidate solutions, improving the population at each generation by adding better offspring and removing inferior ones. A number of introductory books and survey articles are available for a complete study of the topic ( Goldberg, 1989; Mitchell, 1996; Srinivas &amp; Patnaik, 1994 ). 2.3. Genetic algorithms for context-based IR search: was on the use of GA techniques to derive better document descriptions to aid indexing or clustering ( Gordon, 1988; Raghavan &amp; Agarwal, 1987 ). GA techniques have also been applied to term-weight reinforcement in
Nick and Themis (2001) propose to use GAs for Web search by describing an intelligent Web assistant that uses GAs to evolve a set of keywords and logical operators. The evolved set of keywords and operators are then used to construct high-dimensional concepts based on the user X  X  interest. Other Web search approaches have focused on providing the user with a reduced set of pages covering a predefined topic of interest ( Car-Lally, &amp; Chen, 2003 ). A related research area deals with the development of evolving agents that crawl the sen, 1999; Menczer et al., 2004 ). The ultimate goal of a topical crawler is similar to the goal of the methods proposed here, i.e., to collect resources relevant to a topic. However, the techniques used by topical crawlers are different from the ones discussed in this article. Our approach assumes that there is an underlying index, which can be accessed through a search interface. Topical crawlers, on the other hand, build their own indices by visiting pages on the Web graph. A comprehensive literature review of Web-based evolutionary algorithms can be found in ( Kushchu, 2005 ). 3. A genetic approach for evolving high-quality queries
The goal of this research work is to evolve queries that have the capability of retrieving material similar to the user context when presented to a search interface. In order to accomplish this goal we start with a pop-ulation of queries composed of terms extracted from the user context and rate each query according to the quality of the search results.

As generations pass, queries associated with improved search results will predominate. Furthermore, the mating process continually combines these queries in new ways, generating ever more sophisticated solutions. In particular, the mutation mechanisms can be implemented in such a way that novel terms, i.e., terms that are not in the initial user context, are brought into play. 3.1. Population and representation of chromosomes
The search space Q is constituted by all the possible queries that can be formulated to a search engine. Thus the population of chromosomes is a subset of such queries. Consequently, each chromosome is represented as a list of terms, where each term corresponds to a gene that can be manipulated by the genetic operators. The population is initialized with a fixed number of queries randomly generated with terms from the thematic con-text. The number of terms in each of the initial queries will be random, with a constant upper bound on the query size. While all terms in the initial population of queries come from the initial thematic context, novel terms can be included in the queries after mutation takes place. These novel terms are obtained from a muta-tion pool , which is an ever increasing set of terms that may or may not be part of the initial context. 3.2. Fitness function
We associate with the search space Q a fitness function Fitness : Q ! X  0 ... 1 which can numerically eval-c when submitted to a search engine. The function we propose to measure fitness is and r : D D ! X  0 ... 1 is the similarity measure for a pair of documents (note that the context c can be re-garded as a document in D ).
 Different similarity measures, such as the standard cosine similarity or Jaccard similarity ( Baeza-Yates &amp; Ribeiro-Neto, 1999 ), can be used in the implementation of the fitness function. Besides the standard cosine similarity, we use a specialized similarity measure that favors novel content. This measure will be presented in Section 4.4.

One pragmatic difficulty is the use of the complete answer set A q in our definition of fitness. Looking at the (The snippet is a text excerpt from the page summarizing the context where the search terms occur.) 3.3. Genetic operators
A new generation in our GA is determined by a set of operators that select, recombine and mutate queries of the current population.

Selection . A new population is generated by probabilistically selecting the highest-quality queries from the inversely proportional to the fitness of the other queries in the current population. This method is known as the roulette-wheel selection.
 3.4. Mutation pool analysis. As the system collects relevant content, the mutation pool is updated with new terms from the snip-pets returned by the search engine. This procedure brings new terms to the scene, allowing a broader explo-ration of the search space. 3.5. Proposed system architecture search system based on GAs. In the proposed prototype, the system maintains an internal representation of the thematic context. In addition it maintains a population of queries which is incrementally refined as the system evolves. The basic mechanisms that enable the system to evolve queries and retrieve context-based results are the following:
Term extraction . This component uses the content returned by a search engine to extract new terms, which are used to update the mutation pool.

Selection, crossover and mutation . These mechanisms, described in Section 3.3, are in charge of selecting, recombining and mutating the queries of the current population.

Although the sizes of the initial queries are never more than a predefined constant, the sizes of some que-ries in subsequent generations can exceed this limit. This is because applying the crossover operator can change the offspring size. Notice that existing search engines use up to a fixed number of query terms and ignore subsequent ones (e.g., Google X  X  query size limit is 32 terms). Interestingly, the eventual increase of query size beyond this limit captures, in a rough sense, the phenomenon of recessive inheritance: some terms that are ignored in a generation (because they occur beyond the query size limit) may be taken into account in subsequent generations when these terms become part of an offspring query after crossover takes place. 4. Evaluation 4.1. Evaluation criteria
To evaluate the performance of context-based retrieval based on GAs we first had to establish evaluation in advance. In our case, we adopted evaluation criteria based on the quality of the best queries at each gen-eration, and the performance improvement is measured as the increase in the quality value as the generations pass. We consider that a proposed context-based-search GA technique is successful if the query quality signif-generation can be taken as a baseline in the sense that the queries for the initial population are formed using terms selected directly from the thematic context (no evolutionary mechanisms have yet been applied at that point).

In order to propose a measure of query quality we first give a precise definition of similarity between a the-matic context and a retrieved result. Assume c is a thematic context and q a query associated with c . Let A a can be computed using the cosine similarity defined as: resentation of a i based on the terms occurring in the corresponding snippet returned by a search engine. We use r to define query quality based on maximum similarity as follows: Analogously, we define query quality based on mean similarity as:
Notice that the function Quality Max is defined exactly as the fitness function presented in Section 3.2.On task at hand, one notion of query quality may be preferred over the other. For instance, Quality Max is more relevance of a set of results and therefore is more appropriate if several results are expected to be useful. 4.2. The performance evaluation six thematic contexts to conduct six tests by selecting three topics from the DMOZ directory (dmoz.org) and of 60 queries, a crossover probability of 0.7 and a mutation probability of 0.03. The population of queries was randomly initialized using the thematic context. The size of each query was a random number between 1 and 32.
 age quality of the best query (using both Quality Max and Quality Mean) and error bars (at 95% C.I.) result-generations shows that the GA results in statistically significant improvements over the initial generations. bar at some later generation.) In other words, the GA is able to evolve queries with quality considerably supe-rior to that of the queries generated directly from the thematic context. 4.3. The effect of different mutation rates
An important question is how mutation affects performance and diversity. In this section we address this were Business , Recreation and Society and the mechanisms implemented for initializing the GA as well as the parameter values were the same as the ones described earlier. However, to analyze the effect of different muta-tion rates we tested three different settings for the mutation probability: P m = 0 (no mutation), P m = 0.03 (classical mutation) and P m = 0.3 (hypermutation). The results reported in this section measure query quality based on maximum similarity.
 sistent with our intuitions, and highlights the importance of mutation at the moment of exploring the query space.

Society , respectively. For each topic we analyzed the effect of running the GAs without mutation, with clas-sical mutation and with hypermutation. In these figures, we plotted the quality of the best query at each gen-mutation) results in the one with the slowest convergence rate towards high-quality queries.

We performed a statistical analysis to compare the query quality obtained at generation 1 with that obtained at generation 20. Tables 1 X 3 show that for all tests performed there is an important improvement lighted in the tables). 4.4. The effect of elitism and novelty-driven fitness
Some of the figures shown in Section 4.2 indicate that the quality of some queries can decay from one gen-eration to the next one. This is because the roulette selection mechanism, which is the one we have adopted so far, does not guarantee that the best queries will survive across generations.

Elitism is a mechanism used by some GAs which ensures that the fittest individuals are passed on to the next generation without being altered by the mutation or crossover operators. The elitist strategy ensures that the fitness of the best individual in the population can never reduce from one generation to the next. Some of the results obtained using the elitist strategy are reported at the end of this section.

The results reported so far assume that the higher the similarity between the thematic context and retrieved material, the higher the quality of the query. However, a few IR approaches take a different position ( Budzik,
Hammond, Birnbaum, &amp; Krema, 2000; Smyth &amp; McClave, 2001; Maguitman et al., 2005 ) and postulate that in some circumstances conventional notions of similarity may not be the best criteria for retrieval. In certain scenarios, attaining novelty and diversity may be as important, or even more important, than attaining similarity.
As an alternative to the conventional notion of similarity we propose a new measure of similarity r N : Q D D ! X  0 ... 1 defined as follows:
The notation d q corresponding to the terms from query q set to zero (the same applies to the cases where d  X  a i and d  X  c ).
This measure of similarity gives rise to a novelty-driven fitness function Fitness N : Q ! X  0 ... 1 defined as follows: where, as before, A q is the answer set for query q .
 Analogously, we define two new measures of query quality as: and
The purpose of defining such functions was twofold: (1) To ensure that query quality improvement throughout the successive generations was not due only to the (2) We wanted to promote the introduction of novel terms in the queries to bias the search towards novel
An evaluation to address the first point was performed with positive results. To illustrate this, Fig. 9 shows the performance of the GA that applies both elitism and the novelty-driven fitness function for the topic Busi-
Quality Max N and Quality Mean N and error bars (at 95% C.I.) resulting from five runs. Once again, the com-icant improvements. In addition, the elitism mechanism ensured the quality based on maximum similarity function is non-decreasing.
 very good descriptors of the topic at hand, even when those terms were not in the initial thematic context description. For example, for a thematic context related to marketing companies that provide solutions to other companies planning to enter the North-American marketplace our system discovered novel terms such as: grow , collaboration ,and financing , among many others. One of the best individuals evolved by the GA was the query q = X  X  planning Chicago compared competitive focus USA presence North USA requiring marketing uniquely mar-keting uniquely North  X  , with Quality Max N  X  q  X  X  0 : 594. 5. Conclusions and future work most of the existing GA proposals to document retrieval, which attempt to tune the weights of the individual terms, our methods take each query as an individual. The proposed method is fully automatic and does not require relevance feedback from the users. A novel aspect of this method is the use of a mutation pool con-taining new candidate terms collected throughout the successive generations of queries. The use of this incre-mentally generated pool of terms has shown to be effective in aiding the exploration of query space. To further investigate the effect of using new terms to form search queries, we have proposed an alternative fitness func-tion that favors those queries containing novel terms over those in which most terms are extracted from the original context. We have observed that many high-quality queries are composed of terms that are not part of the initial context.
 term-based characterizations of a context. However, query adaptation involves submitting each new query to a search engine to calculate its fitness, which is a time consuming process. Therefore, we expect the pro-posed techniques to have potential applicability to exploiting thematic context for non-real time systems, where slow response times are acceptable.
 parameters. We have used roulette-wheel selection with and without elitism in the implementation of our methods. However, it is known that other selection methods such as tournament selection are better than rou-lette-wheel at maintaining diversity. Therefore, we plan to study the impact that other selection methods have on the overall performance of our techniques.

Many search engines allow the formulation of queries with special syntaxes that help results get more spe-gramming to evolve queries that take advantage of these special syntaxes. In such methods not only terms will be important at the moment of formulating queries, but boolean operators and other special commands will be considered as well.

There is also much to investigate regarding the fitness function. Choosing a good fitness function is one of the most important aspects in the development of GAs. We based our definition of fitness on two forms of the most similar documents. However, alternative fitness functions can be defined depending on the task at hand.

In the future we expect to run additional experiments applying evaluation metrics coming from the infor-mation retrieval community. We expect to adapt these metrics to the Web scenario and to perform human-subject experiments to compare our algorithms to existing ones.
 Acknowledgements
We wish to thank anonymous reviewers for helpful suggestions. This research work is supported by Agen-(PGI 24/ZN13) and Consejo Nacional de Investigaciones Cient X   X  ficas y Te  X  cnicas (CONICET). References
