 1. Introduction
With the rapid growth of the World Wide Web (WWW), there is an increasing need to provide automated assistance to Web users for Web page classification and categorization. Such an assistance is helpful in orga-nizing the vast amount of information returned by keyword-based search engines, or in constructing cata-logues that organize Web documents into hierarchical collections; examples of the latter include the
Yahoo 1 directory and the LookSmart directory. 2 There is evidence that categorization is expected to play an important role in future search services. For example, research conducted by Chen and Dumais shows that users prefer navigating through catalogues of pre-classified content ( Chen &amp; Dumais, 2000 ). Such a strong need, however, is difficult to meet without automated Web-page classification techniques due to the labor-intensive nature of human editing. 3
On a first glance, Web-page classification can borrow directly from the machine learning literature for text ever, the solution is far from being so straightforward. Web pages have their own underlying embedded struc-ture in the HTML language. Apart from the main content, they typically contain some noise (for Web-page classification) such as navigation panels, copyright and privacy notices, and advertisements for business pur-poses and for easy user access. If a pure-text classification method is directly applied to these pages, it will incur much bias for the classification algorithm, making it possible to lose focus on the main topics and impor-of a Web page.

In this paper, we show that using Web-page summarization techniques for preprocessing in Web-page clas-sification is a viable and effective technique. We further show that instead of using an off-the-shelf summari-zation technique that is designed for pure-text summarization, it is possible to design specialized summarization methods catering to Web-page structures. In order to collect the empirical evidence that sum-marization techniques can benefit Web classification, we first conduct an ideal-case experiment, in which each Web page is substituted by its summary generated by human editors. Compared to using the full-text of the
Web pages, we gain an impressive 13.2% improvement in F1 measurement. In addition, in this paper, we also propose a new automatic Web summarization algorithm, which extracts the main topic of a Web page by a page-layout analysis to enhance the accuracy of classification. We evaluate the classification performance with this algorithm and compare to some traditional state-of-the-art automatic text summarization algorithms including supervised methods and unsupervised learning methods. Experiment results on LookSmart Web directory show that all summarization methods can improve the micro F1 measure. Finally, we show that an ensemble of summarization methods can achieve more than 12.0% improvement relatively on micro F1 measure, which is very close to the upper bound achieved in our ideal-case experiment.

The rest of the paper is organized as follows. In Section 2 , we present the related works on Web classifica-tion and summarization. Then we present our proposed unsupervised and supervised summarization algo-rithms in Section 3 . In Section 4 , the experimental results on LookSmart Web directory are shown as well as some discussions. Finally, we conclude our work in Section 5 . 2. Related work Recently much work has been done on Web-page summarization ( Berger &amp; Mittal, 2000; Buyukkokten, tem for summarizing Web pages using probabilistic models to generate the  X  X  X ist X  X  of a Web page ( Berger &amp;
Mittal, 2000 ). The models used are automatically obtained from a collection of human-summarized Web pages. In Buyukkokten et al. (2001) , Buyukkokten et al. introduces five methods for summarizing parts of Web pages on handheld devices where the core algorithm is to compute the words X  importance using TF/
IDF measures and to select important sentences using Luhn X  X  classical method ( Luhn, 1958 ). In Delort et al. (2003) , Delort exploits the effect of context in Web-page summarization, which consists of the informa-tion extracted from the content of all the documents linking to a page. It is shown that summaries that take into account of the context information are usually more relevant than those made only from the target doc-ument. In Sun et al. (2005) , Sun et al. extract the knowledge from the clickthrough data to improve the per-formance of Web-page summarization.

Some research has been conducted to enhance document categorization by summarization ( Ker &amp; Chen, gorization only. In Kolcz et al. (2001) , Kolcz et al. use summarization as a feature selection method and applies a simple extraction-based technique with several heuristic rules. However, most of these heuristic rules are hard to apply on Web-page summarization. In Ko et al. (2004) , Ko et al. adjust the weights of terms according the importance of the sentence in which the terms appear. The importance of a sentence is deter-mined by two straightforward approaches such as their similarity to the title of the document and the impor-a feature(term) in a certain category by borrowing some heuristics from the document summarization litera-ture. Then the predicted categories of a given document are ranked according to the summation of the weights state-of-the-art summarization algorithms to remove the noise in Web pages for improving the Web-page clas-sification performance. To cater for the characteristics of Web pages, a new summarization algorithm is pro-posed and some features related to Web pages are integrated to some existing summarization methods.
In the aspect of removing noise from a Web page, our work is related to Yi, Liu, and Li (2003) . Yi et al. propose an algorithm by introducing a tree structure, called Style Tree, to capture the common presentation to adapt to other sites and it is difficult to build the Style Trees when the number of Web sites is large.
The structure of a Web page is influenced by many factors. Chen, S. Liu, W. Liu, Pu, and Ma (2003) pointed out that when authoring a Web site, the editors usually first conceive the information structure of the site in their mind. They then compile their thoughts into cross-linked Web pages in the HTML language and finally, some extra information, such as navigation bar, advertisement, and copyright information are inserted into the whole page. Since HTML is a visual representation language, much useful information about the content organization is lost after the authoring step. In order to find the important structural information again, two methods have been widely used. One is to extract title and meta-data included in HTML tags to represent the semantic meaning of the Web pages. It is usually true that title and meta-data should be good information to be used by their authors to indicate the main content of Web pages. However, we cannot fully rely on them for the following reasons. First, title and meta-data may be empty in some Web pages. For exam-ple, in our data set, about 24.6% of the pages are without any meta-data and 4.8% pages are without a title.
Second, some of titles and meta-data may be meaningless since Web-page designer may simply set them by default, with such useless names as  X  X  X age1 X  X ,  X  X  X age2 X  X . Finally, Web site designers may misuse or even give the wrong title or meta-data fields to cheat search engines in order to boost up their ranking.
Web page by automatically analyzing their context features, such as the anchor text pointing to a Web page should be done with care; Chakrabarti studied the role of hyperlink in hypertext classification and pointed out formance ( Chakrabarti et al., 1998 ).

To summarize, our aim is to apply Web-page summarization to Web-page classification, rather than using pure-text summarization for the purpose. When summarizing a Web page, we rely on the page itself without leveraging extra knowledge such as clickthrough data and anchor text linking to the page. We leave the inte-gration of extra knowledge to our future work. 3. Web-page summarization
In this section, we consider how to analyze the complex implicit structural information embedded in Web pages, and how to use this information for summarization of Web pages. Our approach is to extract the most relevant content from the Web pages and then pass them on to standard text classification algorithms.
In particular, we will consider six different methods for conducting the Web-page summarization. The first method corresponds to an adaptation of Luhn X  X  summarization technique. The second method corresponds to using Latent Semantic Analysis on Web pages for summarization. The third method corresponds to finding the important content body as a basic summarization component. The fourth one is based on graph analysis.
The fifth method looks at summarization as a supervised learning task. Finally, we combine the results of all five summarization methods into an ensemble of summarizer.
 3.1. Adapted Luhn X  X  summarization method
We adapt Luhn X  X  method that is designed for text summarization for the purpose of Web-page summari-zation. Luhn X  X  method, described in Luhn (1958) , is a systematic approach to perform summarization which factor, and the sentences with the highest significance factor are selected to form the summary. In order to compute the significance factor of a sentence, we need to build a  X  X  X ignificant-words pool X  X  which is defined as those words whose frequency is between high-frequency cutoff and low-frequency cutoff that can be tuned can be computed by Luhn X  X  method as follows: (1) set a limit L for the distance at which any two significant words could be considered as being significantly related. (2) Find out a portion in the sentence that is brack-eted by significant words not more than L non-significant words apart. (3) Count the number of significant words contained in the portion and divide the square of this number by the total number of words within the portion. The result is the significant factor related to S .
 In order to customize this procedure for Web-pages, we make a modification to Luhn X  X  algorithm. In our
Web classification task, the category information of each page is already known in the training data, thus sig-nificant-words selection could be processed within each category. In this way, we build significant-words pool for each category by selecting the words with high frequency after removing the stop words in that category and then employing Luhn X  X  method to compute the significant factor.

There are two advantages for this modification. First, the prior knowledge of categories is utilized in sum-marization. Second, some noisy words which may be relatively frequent in an individual page will be removed through the use of statistics over multiple documents. When summarizing the Web pages in the training set, category label. For a Web page in the test set, we do not have the category information. In this case, we will as S luhn . The summary of this page will be formed by the sentences with the highest scores. 3.2. Latent semantic analysis (LSA) Latent semantics analysis (LSA) has been successfully applied to information retrieval ( Deerwester, Dumais,
Landauer, Furnas, &amp; Harshman, 1990 ) as well as many other related domains. Its power is derived from its ability to represent terms and related concepts as points in a very high dimensional  X  X  X emantic space X  X  ( Landa-successfully applied the LSA to pure text. In this section, we will review how to apply LSA to summarization.
To begin with, LSA is based on singular value decomposition (SVD), a mathematical matrix decomposition technique that is applicable to text corpora as known by people. Given an m n matrix A  X  X  A each column vector A i representing the weighted term-frequency vector of sentence i in the document under consideration, the SVD is defined as where U  X  X  u ij is an m n column-orthonormal matrix whose columns are called left singular vectors; sorted in descending order. V  X  X  v ij is an n n orthonormal matrix whose columns are called right singular vectors ( Press, Teukolsky, Vetterling, &amp; Flannery, 1992 ).

As noted in Berry, Dumais, and O X  X rien (1995), Deerwester et al. (1990) , LSA is applicable in summariza-tion for two reasons. First, LSA is capable of capturing and modeling interrelationships among terms by semantically clustering terms and sentences. Second, LSA can capture the salient and recurring word combi-nation pattern in a document which describes a certain topic or concept. In LSA, concepts are represented by one of the singular vectors where the magnitude of the corresponding singular value indicates the importance of this pattern within the document. Any sentence containing this word combination pattern will be projected this vector. We denote this index value as S lsa and select the sentences with the highest S mary. The pseudo-code of SVD-based summarization method can be found in Gong and Liu (2001) . 3.3. Content Body identification by page-layout analysis
The structured character of Web pages makes Web-page summarization different from pure-text summa-rization. This task is difficult due to a number of  X  X  X oisy X  X  components on a Web page, such as the navigation bar, advertisement, and copyright information. In order to utilize the structure information of Web pages, we employ a simplified version of the Function-Based Object Model (FOM) as described in Chen, Zhou, Shi, Zhang, and Qiu (2001) .

In brief, FOM attempts to understand an authors X  intention by identifying the object X  X  function and cate-gory. In FOM, objects are classified into a Basic Object (BO), which is the smallest information body that cannot be further divided, or a Composite Object (CO) which is a set of Objects (BO or CO) that perform some functions together. An example of a BO is a jpeg file. In HTML contents, a BO is a non-breakable ele-ment within two tags or an embedded object. There is no other tag inside the content of a BO. According to this criterion, it is easy to find out all the BOs inside a Web page. Likewise, COs can be detected by a layout analysis of Web pages. The basic idea is that objects in the same category generally have consistent visual styles so that they are separated by apparent visual boundaries, such as table boundaries, from the objects in other categories.

After detecting all the BOs and COs in a Web page, we could identify the category of each object according view only. First, the categories of objects include: Information Object : this object presents content information.
 Navigation Object : this object provides navigation guide.
 Interaction Object : this object provides user side interaction.
 Decoration Object : this object serves for decoration purpose.

Special Function Object : this object performs special functions such as AD, Logo, Contact, Copyright, Ref-erence, etc.
 In order to make use of these objects, from the above types of objects, we define the Content Body (CB) of a
Web page which consists of the main objects related to the topic of that page; these are the objects that convey important information about the page. The algorithm for detecting CB is as follows: Consider each selected object as a single document and build the TF IDF index for the object.
Calculate the similarity between any two objects using Cosine similarity computation, and add a link between them if their similarity is greater than a threshold. The threshold is chosen empirically. After pro-cessing all pairs of objects, we will obtain a linked graph to connect different objects.
 In the graph, a core object is defined as the object having the most edges.
 Extract the CB as the combination of all objects that have edges linked to the core object.
Finally, we will assign a score S cb to each sentence, for which S tent body X  X ; otherwise, S cb  X  0. Finally, all sentences with S page in question. 3.4. Graph-based summarization
A Web page can be represented as a graph in which each vertex is a sentence and the weight of a edge link-ing two nodes is the similarity between the corresponding sentences. After constructing the graph, some pop-ular graph-based ranking algorithms can be applied to rank the sentences according to certain measurements. Then we can select the top sentences into summary. Mihalcea (2005) studied the application of PageRank and HITS on this problem, where she tried to construct both directed and undirected graph from a document.
Take HITS as an example, the weight of a vertex (corresponding to a sentence), which can be an  X  X  X uthority score X  X  or  X  X  X ub score X  X  is calculated iteratively by
Among the several options studied in Mihalcea (2005) , the method based on the authority score of HITS on the directed backward graph performs best. Therefore, it is taken as a candidate summarization approach in this paper. We denote this method by  X  X  X ITS X  X  and the generated score for each sentence by S tails about the graph-based summarization algorithms can be found in Mihalcea (2005) . 3.5. Supervised summarization
Besides the unsupervised summarization algorithms described above, some researchers also focus on gen-erating the summary using machine learning approaches ( Berger &amp; Mittal, 2000; Chuang &amp; Yang, 2000; also employ a supervised approach for Web summarization, by making full use of the labeled training data.
A set of features are first extracted from each of a Web page. Then, a supervised learning algorithm is applied to train the summarizer to identify whether a sentence should be selected into its summary or not. There are a total of eight features utilized in our algorithm, where five of them are common features for text document and Web page and the rest three of them are specific to Web page layout. Some notations are defined as follows: PN: the number of paragraphs in a document; SN: the number of sentences in a document; PL k : the number of sentences in a certain paragraph k ; Para( i ): the associated paragraph of sentence i ; TF w : the number of occurrences of word w in a target Web page; SF w : the number of sentences including the word w in the Web page;
Given a set of sentences S i  X  i  X  1 ... SN  X  in a page, the eight features are defined as follows: f i 1 measures the position of a sentence S i in a certain paragraph. f i 2 measures the length of a sentence S i , which is the number of words in S also its distribution among sentences. We use it to punish the locally frequent words. sentence and the title. Both the sentence and the title are represented by TF vectors. The same representa-tion method is used for f i 5 and f i 6 . f i 5 is the cosine similarity between S i and all text in the page. f i 6 is the cosine similarity between S i and meta-data in the page. f i 7 is the number of occurrences of word from S i in special word set. The special word set is built by col-lecting the words in the Web page that are italic or bold or underlined. f i 8 is the average font size of the words in S i . In general, larger font size in a Web page is given higher importance.
 marizer for simplicity, as in Kupiec et al. (1995) : cations, p  X  f i  X  is the probability of each feature i and p  X  f
The latter two factors can be estimated from the training corpus. Each sentence will then be assigned a score by the above equation, which is denoted as S sup . 3.6. An ensemble of summarizers
From the previous approaches, we can build various summaries independently for a Web page. These approaches are based on different mechanisms and can be complementary to each other. Therefore, it is ben-eficial to combine them. Similar problems have been studied widely in the field of machine learning and pre-vious works have shown that a proper combination can make improvement ( Alpaydin, 2004; Dietterich, 2000;
Hansen &amp; Salamon, 1990 ). In this paper, we plan to combine the different summarization approaches through a weighted linear combination, which is proved to be effective ( Shen et al., 2005 ): presented in the experiments. After combining the scores, the sentences with the highest S sen into the summary. 4. Experiments
In order to test the effectiveness of summarization for Web classification, several experiments are con-ducted. Firstly, we test the Web-page classification on the human created summaries in order to find out whether summarization can help classification of Web pages at all. Having confirmed this hypothesis, we com-pare our proposed  X  X  X ontent body identification summarizer X  X  with three unsupervised methods including: adapted Luhn X  X  algorithm, LSA-based method and the graph-based method, as well as the supervised summa-rizer. Finally, our ensemble of summarizers is evaluated. In our experiments, we also study the variation of different parameter settings for composing the best summarizer. 4.1. Data set
In our experiments, we use about 2 million Web pages crawled from the LookSmart Web directory ( http:// search.looksmart.com ). Due to the limitation of network bandwidth, we only downloaded about 500 thou-sand descriptions of Web pages that are manually created by human editors. Since it is a time-consuming task to run experiments on this large data set, we randomly sampled 30% of the pages with descriptions for our experiment purpose. The extracted subset includes 153,019 pages, which are distributed among 64 categories (we only consider the top two level categories on LookSmart Website). The largest category (Library n Society)
Tables 1 and 2 show the number of pages for the three largest categories and three smallest categories. In order to reduce the uncertainty of data split, a 10-fold cross-validation procedure is applied in our experiments. 4.2. Classifiers
Since the focus of this paper is to test the effectiveness of Web summarization for classification, we choose two popular classifiers in our experiments. One is a na X   X  ve Bayesian classifier ( McCallum &amp; Nigam, 1998; Mitchell, 1997 ), and another is a support vector machine ( Cortes &amp; Vapnik, 1995; Joachims, 1998 ). 4.2.1. Na  X   X ve Bayesian classifier (NB)
The Na X   X  ve Bayesian classifier (NB) is a simple but effective text classification algorithm which has been shown to perform very well in practice ( McCallum &amp; Nigam, 1998; Mitchell, 1997 ). The basic idea in NB ument. As described in McCallum and Nigam (1998) , most researchers employ NB method by applying Bayes X  rule: where P  X  c j j ^ h  X  can be calculated by counting the frequency with each category c j C j is the number of categories; p  X  w i j c j  X  stands for probability that word w small in training data, so the Laplace smoothing is chosen to estimate it; N  X  w rences of a word w k in d i ; n is the number of words in the training data. 4.2.2. Support vector machine (SVM) Support vector machine (SVM) is a powerful learning method introduced by Vapnik et al. ( Cortes &amp;
Vapnik, 1995; Joachims, 1998; Vapnik, 1995 ). It is well founded in terms of computational learning theory and has been successfully applied to text categorization ( Joachims, 1998, 1999 ). SVM operates by finding a hyper-surface in the space of possible inputs. The hyper-surface attempts to split the positive examples from the negative examples by maximizing the distance between the nearest of the positive and negative examples to to the training data. There are various ways to train SVMs. One particularly simple and fast method is
Sequential Minimal Optimization (SMO) first described by J. Platt which is available online. minimal optimization algorithm breaks the large quadratic programming (QP) problem down into a series of small QP problems to be solved analytically. Thus the SMO algorithm is efficiently applicable for large feature and training sets. In this paper, a linear kernel is used and the one-against-rest approach is applied for the multi-class case. 4.3. Evaluation measure
We employ the standard measures to evaluate the performance of Web classification, i.e. precision, recall and F1-measure ( van Rijsbergen, 1979 ). Precision ( P ) is the proportion of actual positive class members returned by the system among all predicted positive class members returned by the system. Recall ( R )is the proportion of predicted positive members among all actual positive class members in the data. F 1is the harmonic average of precision and recall as shown below:
To evaluate the average performance across multiple categories, there are two conventional methods: micro-average and macro-average. Micro-average gives equal weight to every document; while macro-average gives equal weight to every category, regardless of its frequency. In our experiments, we used both of them to eval-uate the performance of classification. However, we report only the micro-average for simplicity since we came to the same conclusion in terms of macro-average.
 4.4. Experimental results and analysis 4.4.1. Baseline
A simple way to perform Web classification is to treat it as a pure-text document. In our experiment, the state-of-the-art text classification algorithms (NB&amp;SVM) are applied to build the baseline system. Firstly,
Web pages are converted to pure text document by removing the HTML tags. Then, each document is tokenized with a stop-word remover and Porter stemming. 5 of-words, in which the weight of each word is assigned with their term frequency. In order to speed-up the classification, a simple feature selection method,  X  X  X ocument frequency selection (DF) X  X  ( Yang &amp; Pedersen, 1997 ), is applied in our experiment. In our experiments, the words whose DF is lower than a threshold are two tables, we found that SVM achieves 0.651 in micro-F1, which outperform the NB result by about 2.4% relatively. We also found that the variance of 10-fold cross-validation is quite small (about 0.3%), which indi-cates that the classification is stable on this data set. 4.4.2. Results of human X  X  summary
In order to test the effectiveness of summarization techniques for Web classification, we conduct a feasibil-ity study in our experiment. We extract the description of each Web page from the LookSmart Website and consider it as the  X  X  X deal X  X  summary for the page. Since the description is authored by the Web directory edi-tors, the quality is considered to be good enough to be the summary for the page. We apply the classifiers directly on these descriptions instead of the full-text of the Web pages. This experiment can help us understand whether in the best case, summarization can help improve the classification. In addition, the title and meta-data of a Web page can also be considered as a kind of summary. An example of the description, title and meta-data is shown in Table 5 and the classification results on these  X  X  X deal summary X  X  are shown in the related rows of Tables 3 and 4 . Compared to full-text classification, classification on human-authored  X  X  X escription X  X  can significantly improve the F1 measure by more than 13.2% using either classifier. However, classification on because  X  X  X ure title X  X  or  X  X  X ure meta-data X  X  is usually short and do not contain sufficient information. Through digging into the data, we found that Web-page  X  X  X escriptions X  X  can easily help the end-user to understand the meaning of the Web page. Although the title can play this role also to some extent, their short lengths indeed make it impossible to represent the full meaning of the page. The uneven quality of the meta-data prevents them from achieving good results because much of the meta-data is assigned by the designers with default values.

Through the  X  X  X deal-case X  X  experiments, we have found that the  X  X  X deal summary X  X  (such as  X  X  X escriptions X  X ) can indeed help improve the Web classification performance. In addition, if the summary is not done properly, then the  X  X  X ad summary X  X  can hurt the performance. Hence, in the rest of the experiments, we hope to achieve a similar  X  X  X ood X  X  summary by our automatic Web summarization techniques. 4.4.3. Results of unsupervised summarization algorithms
In this section, we evaluate the unsupervised summarization methods, including our proposed  X  X  X ontent body identification X  X  summarizer, adapted Luhn X  X  algorithm, LSA-based methods and the graph-based methods.

As mentioned in Section 3.3 , for the  X  X  X ontent body identification X  X  summarizer, we set a threshold value to determine whether there is a link between the two objects on a Web page. In our experiment, the threshold is set to be 0.1. Through our experiments, we found that most of the unrelated objects in Web pages, such as copyright and advertisement banner, can be easily removed by our algorithm. For the adapted Luhn X  X  algo-rithm, the LSA algorithm and the graph-based algorithm, the compression rate is set as 20%, 30% and 30%, respectively in our experiments. A detailed study of the above parameters is given in Section 4.4.6 .From
Tables 3 and 4 , we found that these four unsupervised summarization algorithms are comparable on classifi-cation experiment, although the graph-based method outperforms the other three a little bit with either NB or
SVM. We can see that all of them can achieve more than 6.5% improvement as compared to the baseline sys-tem, which verifies the effectiveness of the unsupervised summarization methods on reducing noise in Web pages for classification. 4.4.4. Result on supervised summarization algorithm
In order to construct a supervised summarizer as described in Section 3.5 , we need some training data con-sisting of the pairs of a Web page and the corresponding summary generated by human, where a summary is composed of the sentences extracted from a Web page. However, in our data set, the Web-page description is authored by Web-directory editors instead of extracted from the Web pages, we need to tag each sentence as
The F 1 measure of the supervised method (denoted by Supervised) is shown in Tables 3 and 4 (when compres-sion rate equals to 20%). We found it can achieve about 5.0% relative improvement compared to baseline sys-tem, which is a little worse than unsupervised algorithms. The reason may be that our training data selection is not precise since we only rely on the similarity to descriptions. However, the improvement also verifies the effectiveness of summarization methods for classification as proved by the unsupervised summarization methods. 4.4.5. Result on hybrid summarization algorithm
Through the above experiments, we found that both unsupervised and supervised summarization algo-rithms can improve the classification accuracy to some extent. But none of them can approach the upper bound of the system set by human edited summary. Since all of them use different mechanisms, their results may be complementary to each other and a proper ensemble of them is beneficial. The experimental results shown in Tables 3 and 4 verify our hypothesis. As we can see, the ensemble of summarization methods can achieve about an impressive 12.0% improvement as compared to baseline system, which is also very near to the upper bound of the system. In this experiment, we use the same weighting for each summarization algo-rithm. We will consider the different weighting schema in Section 4.4.7 . 4.4.6. Performance using different compression rates
In this section, we conduct an experiment to find the relationship between the performance of classification and the compression rate of summarization. We report only the experimental results with NB for simplicity. The results are shown in Tables 6 and 7 .

From Tables 6 and 7 , we found that all the methods reach their peak performance when the compression rate is 20% or 30% (for  X  X  X ontent Body X  X  when the threshold equals to 0.10). When the compression rate rises to 50%, the performance of some methods such as LSA and supervised summarization method become worse than the baseline. This may be ascribed to the inclusion of noises with the raise of the compression rate. How-ever, in the wide range from 10% to 40%, all the summarization methods can improve the classification per-formance to some extent over baseline. 4.4.7. Effect of different weighting schemata
In the section, experiments are conducted to test the effect of different weighting schema for the ensemble of the different summarizers, with NB as the classifier. We tested six cases denoted by Schemas1 X 6 which assigns different weights (as shown in Eq. (4) ) to different summarization scores, in addition to the original schema which sets an equal weight for each summarization algorithm.
 as one.

Schema6: We assign the weight of each summarization method in proportion to the performance of each method (the value of micro-F 1).
 From the results shown in Table 8 , we can see that different schemata made no obvious difference. 5. Conclusions and future work
In this paper, several Web-page summarization algorithms are proposed for removing the noise from Web pages while keeping the most relevant features for improving the accuracy of Web classification. As illustrated by our ideal-case experiment, the summary created by human editors can achieve more than 13.2% improve-ment by the micro-F 1 measure as compared to the pure text of the Web pages. This observation validates the need to find better Web-page summarization methods. We evaluated Web-page categorization on several state-of-the-art automatic document summarization algorithms, as well as an algorithm by utilizing the layout analysis of Web pages. Experimental results show that automatic summary can achieve a similar improvement (above 12.0% improvement) as the ideal-case accuracy achieved by using the summary created by human editors.

In this paper, we only considered a Web page as an isolated document. However, more and more research works demonstrate that the hyperlink is one of the important features for Web search and analysis. In the future, we will investigate methods for multi-document summarization of the hyperlinked Web pages to boost the accuracy of Web classification. Besides that, we hope to leverage more information such as clickthrough data to increase the summarization performance so that we can further improve the classification result. References
