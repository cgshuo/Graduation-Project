 In this article we address the problem of discovering JEPs and using them for supervised learning in image databases, where the images are described by multi-sets of features. This is an enhancement of the transactional database represen-tation, where instead of a binary relation between items and database records, an occurrence count is associated with every item in a set. We propose a new type of JEPs to accomplish this task, the jumping emerging patterns with oc-currence count (occJEPs), show an outline of an algorithm for finding occJEPs and compare their discrimin ative value with other recent classification methods. The concept of discovering jumping emerging patterns efficiently and using them in the classification of transactional datasets has been introduced in [1]. Such patterns have proved to be a very accurate alternative to previously proposed rule-and tree-based classifiers.
 Formal Definition. We restrict further discussion on emerging patterns to trans-action systems [2]. A transaction system is a pair ( D , I ), where D is a finite se-quence of transactions ( T 1 ,...,T n ) (database), such that T i  X  X  for i =1 ,...,n and I is a non-empty set of items (itemspace). A support of an itemset X  X  X  in
Given two databases D 1 ,D 2  X  X  we define an itemset X  X  X  to be a jumping emerging pattern (JEP) from D 1 to D 2 if supp D set of all JEPs from D 1 to D 2 is called a JEP space and denoted by JEP ( D 1 ,D 2 ). A minimal JEP is a jumping emerging pattern X, such that no proper subset of XisaJEP. We propose an extension of the definition of a transaction system that is nec-essary for the introduction of emerging patterns with occurrence count. The primary motivation for introducing this new type of JEPs is to allow a wider range of problems being directly approachable by means of pattern analysis. Al-though there are many possibilities of transforming data to a transactional form, it may not be a feasible solution due to unacceptable enlarge ment of attribute space, information loss or limited possibility of transformed data interpretation. For example, a relational dataset containing numbers of similarly colored ob-jects visible on an image, may be directly transformed to a transactional form by populating the itemspace with all the possible attribute values or by dis-cretization and crea ting items for each of the resulting discrete ranges. The first solution is in most cases impractical because of the itemspace size, while the second always introduces some loss of information. In both cases the possibility of relating to data semantics is limited in the transactional form of data, as for example discovering patterns between image classes that differ in the number of colored objects by a certain value.
 Formal Definition. Let a transaction system with recurrent items be a pair (
D r , I ), where D r is a database and I is an itemspace (the definition of itemspace remains unchanged). We define database D r as a finite sequence of transactions (
T I} ,where p i : I X  N is a function, which assigns the number of occurrences to each item of the transaction. Similarly, a multiset of items X r is defined as a set of pairs { ( x, q ); x  X  X } ,where q : I X  N .Wesaythat x  X  X r  X  X  X  q ( x )  X  1 and define X = { x : x  X  X r } . We will write X r =( X, Q ) to distinguish X as the set of items contained in a multiset X r and Q as the set of functions, which assign occurrence counts to particular items.
 D three arguments: a multiset X r =( X, Q ), a transaction T r =( T, P )andan occurrence threshold  X   X  1:  X  ( X r ,T r , X  )=1  X  X  X   X  x  X  X  p ( x )  X   X   X  q ( x )and  X  (
X r ,T r , X  ) = 0 otherwise. The occurrence thres hold allows for differentiating transactions containing the same sets o f items with a specified tolerance margin of occurrence counts. is a transaction system with recurrent items and  X  T r  X  X  r | T  X  X  d | =1.Elements of I and I d are called condition and decision items, respectively. A support for a decision transaction system ( D r , I , I d ) is understood as a support in the transaction system ( D r , I X  X  d ).

For each decision item c  X  X  d we define a decision class sequence C c =( T r i ) i  X  K , where K = { k  X  X  1 ,...,n } : c  X  T k } . Notice that each of the transactions from D r belongs to exactly one class sequence. In addition, for a database D = (
T
Given two databases D 1 ,D 2  X  X  r we call a multiset of items X r a jumping emerging pattern with recu rrent items (occJEP) from D 1 to D 2 ,if supp D A set of all occJEPs with a threshold  X  from D 1 to D 2 is called an occJEP space and denoted by occJEP ( D 1 ,D 2 , X  ). We distinguish the set of all minimal occJEPs as occJEP m , occJEP m ( D 1 ,D 2 , X  )  X  occJEP ( D 1 ,D 2 , X  ). Notice also that occJEP ( D 1 ,D 2 , X  )  X  occJEP ( D 1 ,D 2 , X   X  1) for  X   X  2. In the rest of the document we will refer to multisets of items as itemsets and use the symbol X r to avoid confusion.
 Finding occJEPs. We will now give an outline of the algorithm to discover a set of occJEPs in a given decision transact ion system with recurrent items. Let C c be a decision class sequence of a database D r for a given decision item c and C c a complement sequence to C c . We define D 1 = C c , D 2 = C c and the aim of the algorithm to discover occJEP m ( D 1 ,D 2 , X  ).

At first, notice that only the patterns, which are not supported in D 1 are possible candidates for occJEPs. In case of single-item patterns X r =( X, Q ), where X = { x } ,x  X  X  it is the case, when  X  T r =( T,P )  X  D multi-item patterns at least one of the item counts of the candidate pattern has to be larger than the corresponding item count in the database. We can write this as: X r =( X, Q ) is an occJEP candidate  X  X  X   X  T r =( T,P )  X  D
The first step of the algorithm is then to create a set of conditions in the form p ( i k )] for each of the candidate itemsets X r =( X, Q ) ,X  X  2 I ,where j and k are subscripts of items app earing in a particular X r and n is the number of transactions in D 1 . Solving this set of inequalities results in its transformation where r and s are the occurrence counts of respective items. The counts have to be incremented by 1, to fulfill the condition of supp r D
As both the itemspace and database sizes may be large enough to make the solution of the above set of inequalities difficult in practical implementations, we propose the following two countermeasures. Firstly, as the purpose of dis-covering the patterns is to use them in a classifier, we limit the search to only minimal occJEPs. This way we can eliminate all multi-item conditions, for which a condition with a lesser number of items and the same or lower number of item occurrences exists. The second possibilit y of ensuring a limited-time solution to this problem is introducing a maximum pattern size parameter. We reduce the problem of finding all possible occJEP candidates, such that X  X  2 I ,toitemsets not larger than a specified size  X  .

Having found the minimum occurrence counts of items in the candidate item-sets, we then calculate the support of each of the itemsets in D 2 with a threshold  X  . The candidates, for which supp r D
For the example given by Table 1 we can see that the support of candidate patterns supp r D X 3 are thus minimal occJEPs with threshold values By the definition of occJEPs, X r 2 is also an occJEP for  X   X  [1 , 2].
The outline of the complete algorithm is then as follows: (a) formulate mini-mum occurrence conditions for all  X  -sized subsets of items of D 1 ; (b) solve the inequalities, while eliminating non-minimal candidates; (c) count the supports of the resulting candidate itemsets in D 2 , using threshold  X  and having occurrence counts incremented by one; (d) return it emsets with support greater than zero as minimal occJEPs. We use a symbolic, color and texture-based representation of images divided into tiles, to capture enough information to be able to reason about their un-derlying content. The symbolic representa tion also allows for direct discovery of the proposed occJEPs in databases of images and performing a pattern-based classification.

The images are uniformly divided into a grid of x  X  y pixel tiles, where x is the number of rows and y is the number of columns, and for each of the tiles the color and texture features are calculated. This initial procedure may be performed during the database indexing phase and is not tied to the actual classification process. The next step is c reating a dictionary of typical feature values. This is performed by clustering al l available feature vectors of the tiles of the learning database to find a chosen number of group centroids, which then become elements of the dictionary. Th e tiles of images are then labeled with identifiers of the most similar entries present in the dictionary. The representa-tion of a particular image consists of a list of all identifiers associated with its tiles, with or without the occurrence counts. To assess the performance of the proposed jumping emerging patterns with oc-currence count in classification we have a chosen a test dataset of images made available by the authors of the SIMPLI city CBIR system [4]. Presented here are the results of classification b etween the following classes: flower , food , ele-phant and mountain . The accuracy of both the approach described above and the method of classification with class association rules proposed earlier in [3] has been compared with C4.5 classifier and a classifier based on regular JEPs. We have used ten-fold cross-validation to reduce any influence imposed by the partition of the available dataset into training and test images.

The occJEP-based classifier has been crea ted by discovering all minimal oc-cJEPs to each of the classes present in the test data. We can formally define the set of patterns in a classifier occJEP  X  C for a given occurrence threshold  X  sequence for decision item c and C c is a complementary sequence in a learning database D r L . Classification of a particular transaction in the testing database D
T is performed by aggregating all minimal occJEPs, which are supported by it, similarly as in [1].

Classification results of each of the dataset pairs are presented in Table 2. We have performed experiments for threshold  X   X  [1 , 3] and a selection of three values for which the accuracy was the highest is shown here. In most cases  X  =1 . 5gave the best results, in one case there w as no improvement of accuracy for  X &gt; 1. The maximum length of discovered occJEPs was set at  X  = 3. The images were partitioned into 8  X  8 tiles and the dictionary size was set at 8 values.
The comparison of classification performance of the C4.5 algorithm, class as-sociation rules, an occJEP-and JEP-based c lassifiers is presented in Table 3. For occJEPs, we have set the threshold  X  to a value which had previously proved to give the best results (compare with Table 2), while  X  = 3. Apart from classifica-tion accuracy, we also note the average number of found occJEPs, JEPs, CARs and the size of the generated tree, in case of the C4.5 classifier. We can see that in all three test cases the classificat ion accuracy of the proposed method was the highest, as is the number of found patterns. A possible explanation of the poor CARs performance is its too strict rule selection method, as only a few are used during the actual classification. The possibility to adjust the occurrence threshold value is a distinguishing feature of the occJEP classifier and surely accounts for its accuracy.
 We have presented a concept of extending the definition of a jumping emerging pattern to include occurrence counts of its items and use such patterns for classi-fication. Jumping emerging patterns with occurrence count (occJEPs) carry the same highly discriminative information as regular JEPs, but also allow reasoning in databases with transactions of recurre nt items. We have proposed a general-ization of a decision transaction system, where each transaction is a multiset of items, and a new method of counting supports in such databases.

We have experimentally shown that occJEP-based classifiers may outperform the accuracy of other current classification methods, appropriate for relational or recurrent transactional data. The presented method has an advantage over classifying discretized data with current ly used algorithms of a reduced itemspace and allowing the user to adapt the classi fication process to differences between classes by changing the threshold parameter.

