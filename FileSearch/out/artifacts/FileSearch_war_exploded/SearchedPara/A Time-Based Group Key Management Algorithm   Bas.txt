 most important problems that should be addressed in cloud storage applications [1]. 
In recent years, many scholars have proposed the use of encryption methods to pro-cloud storage, and it is also the main motivation of our paper. 
The problem of group key management in cryptographic cloud storage environ-user privacy at the same time. The main contributions of our work are:  X  We propose a suitable group key management method of cloud storage, get the group key.  X  The data owner and authorized group users compute different group keys in different phases with the same seed, rather than always using the same group key, so our method is safer. Besides, because group key in a phase is computed by key seed, the distribute group key number of times is less than traditional method Section 4 details the TGKM. Security analyses of TGKM will be given in Section 5. this paper in Section 7. key management in the network environments, some are depended on a trusted group key server, and others don X  X  need any trusted group key servers. all the private files. 
Goh proposes the SiRiUS which doesn X  X  need a trusted group key server usually let each user has a public and private key pairs to obtain the group key [8]. When a data owner wants to share data, he uses the group key to encrypt the file and uses the au-by different keys. But the processes of key negotiation in TGDH need to replace the storage. 3.1 Proxy Re-encryption Proxy re-encryption schemes are cryptosystems which allow third-parties (proxies) to  X  X  X   X  and  X  X  X  X  X , X  X  X  X  X  X   X  .  X   X 
Re-Encryption Key Generation(RG). A user A delegates to B by publishing the re-encryption key  X  X   X  X  X   X  X   X / X   X  X   X  , computed from B X  X  public key.  X  way that it can only be the holder of  X  X   X  , output c=  X  X   X  X  X   X  X ,  X  ) .  X  way it can be decrypted by user A and his delegates, output c=  X   X   X  X  X   X  X ,  X   X  .  X 
Re-Encryption(R). Anyone can change a second-level ciphertext for A into a first- X  X  X   X  X  X   X ,  X  X  X   X   X  X  X   X  X  X  and publish  X   X   X   X   X   X  X  X   X  X ,  X   X  .  X  with secret key sk=a, compute m=  X  X , X  X  X  X   X   X  X  X   X  . 3.2 Chinese Remainder Theorem following system of simultaneous congruences[11]. N =  X   X   X   X  ...  X   X  , so the value of x mod N is unique. Table 1 shows the notations in the following of this paper. 
Notations Description  X   X   X   X   X  service for the cloud storage applications. The TGKM system model has three parties as follows: (1) Data Owner: data owner encrypts his data and stores data in the cryptographic groups to access his data. to. (3) Cloud Service Provider: the cloud offers data storage and sharing services to secret information as possible. is still secure. 
In the first step, TGKM shares the key seed S key based on proxy re-encryption me-composed of three parts: data owner domain, cloud domain, and authorized user do-main. Data owner domain is a full trusted service domain in which data owner gene-private key. 
In the second step, as shown in the Fig. 1, the authorized group users get a set of U same  X  X   X  X  X  X  X  X  X  X  X  X  of any phase. 
In this work, we just consider honest but curious cloud servers as [2] does. That is as much secret information as possible based on their inputs. 4.1 Cryptographic Cloud Storage Initialization Processes which are two positive pairwise coprime integers. 4.2 User Basic Operations  X   X 
Create a Group . The data owner generates a random number  X  X  X   X   X  as the group is the private key of data owner and uplo ads it to the cryptographic cloud storage including: sales group, finance group, and market group.  X  cloud storage server.  X 
Revoke an Authorized User . The data owner A requests cloud server to delete the deletes the edge from PK mar to U 6 to revoke U 6  X  X  privilege.  X 
Build the Key Management Structure in Cloud . Cryptographic cloud storage shown in cloud domain in Fig.1, each data owner has an authorized tree to describe presents a user group which stores key seed encrypted by the group public key, and every leaf node presents an authorized user stores the key seed encrypted by user X  X  proxy re-encryption key. 4.3 The First Step of TGKM : Key Seed Distribution cloud storage applications. We introduce a key seed mechanism to achieve it. In this section, we introduce the key seed distribution. crypted by A and his delegates. A uploads {  X   X  X  X  X  }  X  X   X  to the cloud server. public key. The transfer from a group to a user is shown in (5) and (6). (7) in which  X  is authorized user X  X  private key.  X   X  X   X  X  S
If the data owner just grants an encrypted file X  X  accessing privilege to a group, he er only allows the market group to access an encrypted file, and then he encrypts the public key of group market to the cloud. 4.4 The Second Step of TGKM: Computing GK file by Key Seed time-based access control. The file encryption key management in TGKM is a time-based dynamic key which uses different key to encrypt files in different period.  X   X  the prior  X   X  X  X  X  X  X  X  X  X  X  X  by another hash function.  X  S time phase.  X  remainder theorem.  X   X  X   X  X  X  X  X  X  X  X  X  X  at a certain period. 4.5 Data Sharing to Group Users and the timestamp to the cloud server.  X   X   X  X  X  X   X   X  X   X  X   X  X  X  X  X  X  X  X  X  X  by the algorithm 1 and decrypts  X   X  X  X  X   X   X  X   X  X  X  X  X  X  X  X  X  X  . the time-based accessing. 5.1 TGKM Correctness Guarantee Because the data owner and the authorized group share the same timestamp, they can determine the time phase which the timestamp is belonged to. They also get the same K mechanism, authorized user can only get the corresponding seed key which is gener-the period of time defined by the data owner. 5.2 Forward Security and Back ward Security Guarantee There are two types of security requirements on a secure group key management sys-tem: the forward security and the backward security . The former refers to a newly keys [14]. The proposed TGKM can fully meet the forward security and the backward forward key seed  X   X  X  X  X  X  X  X  X  X  X  X  X  . It is as the same to the backward key X  X  computation. 5.3 Computing Overhead Analysis rized users. As the TGKM algorithm mentioned above, the computing overhead at the performance of TGKM X  X  efficiency. TGKM. All the experiments are executed under Ubuntu with an Inter Pentium Proxy Re-cryptography Library [12]. We evaluate the efficiency of TGKM including: er and cost of getting the keys at the client. shows the time overhead of TGKM and ABE. With the number of user group increas-ing, our proposed TGKM achieve a better computing performance than ABE. with other group user. 
Fig.5 shows cloud computing time cost. The overload is transfer from data owner pose a novel time-based group key management (TGKM) in cryptographic cloud TGKM can greatly improve the efficiency of key management and can be applied to the cryptographic cloud storage applications. 
