 1. Introduction
The detection of hazardous situations in the road has been a focus of large attention from the research community in the last years. Among the possible appro aches to the problem, some authors dedicate their work to the so-called cooperative systems, in which the vehicles avoid crashes by means of the exchange of relevant information within their environment (other vehicles and the elements of the infrastructure) . For the readers interested in the topic, a relevant project on cooperative systems is the CVIS project ( ERTICO, 2009 ) for Cooperative Vehicle Infrastructure Systems.
The work presented in this paper focuses on the detection of the vehicle maneuvers starting from measures collected by the onboard sensors. Cooperative systems may benefit from this work in such a way that timely detections of the vehicle maneuver may increase the situation awareness of the road sce ne.Asitisprovedintheliterature, the timely predictions of the vehicle maneuvers are useful for scene interpretation and support collision avoidance ( Terroso-Saenz and
Valdes-Vela, 2010 ; Toledo-Moreo et al., 2010 , 2006 ; Toledo-Moreo and Zamora-Izquierdo, 2009b ; Zamora-Izquierdo et al., 2007 ; Zong et al., 2009 ). Additionally, it could allow improvements in the quality of the position of each vehicle given that the proper identification of the vehicle maneuver could raise the accuracy and robustness of the position estimates. This is due to the fact that, when the position is being estimated, the model that represents the vehicle motion is usually simplified and does not represent equally well every maneu-vering mode ( Ndjeng et al., 2008 ). For instance, the movements carried out by a vehicle when it is parking differ significantly from the ones done while driving a highway at constant velocity. To cope with this estimation, the literature shows that it is more efficient to use a finite set of models dedicated to rep resent the different maneuvering modes (constant velocity, constant acceleration/deceleration, and stationary model), rather than a single highly complex model that must consider every possible situation ( Blackman and Popoli, 1999 ).
Therefore, if we can identify the maneuvering mode at a given time t , then we can select the model that matches the best the nature of the vehiclemotionatthatinstant t . A number of publications in this field show that it is possible to improve the position accuracy and its robustness  X  fail tolerance  X  following this approach with a set of very few motion models ( Ndjeng et al., 2007 ; Schubert and GerdWanielik, 2009 ; Toledo-Moreo et al., 2007 ). The potential improvements in the estimation of the vehicle position are, therefore, a consequence of the maneuver detection and not a dire ct benefit of our method. For this reason, this aspect is not covered in this paper.
 measurements of sensors commonl y installed onboard the vehicle, no extra costs are added to the system, apart from a certain  X  reduced  X  demand of computation. Given that we focus on long-itudinal maneuvers and the vehicles are assumed to move on its local tangent plane, only the odometry and an accelerometer aligned with the longitudinal axis are needed. Although positioning systems based on odometry and inertial sensors may suffer from estimate drifts due to the accumulative errors in absence of absolute positioning updates, it is importa nt to notice that input variables of the proposed model are velocity (from the odometry) and accelera-tion (from the accelerometer), and therefore no accumulated error is introduced. For localization purposes, a GPS receiver installed onboard the test vehicle provides absolute values of position, mini-mizing in any case the possible consequences of dead-reckoning errors in the vehicle position estimates.

The noisy and imprecise nature of the data commonly returned by low cost vehicle sensors, led us to consider the use of fuzzy rules ( Zadeh, 1975 ). Fuzzy rules have good skills to deal with this kind of data. Furthermore, given that the set of long-itudinal maneuvers a vehicle can perform is preestablished (cruise, acceleration or deceleration and stop), the problem of selecting the most suitable motion model at the current instant can be seen as a classification task. Therefore, given an input tuple composed of data coming from the previously mentioned sensors, the goal of the set of fuzzy rules is to classify this tuple into one of the existing maneuvers (classes). Once the maneuver is selected, the most appropriate motion model can be easily applied. This latter step can be done following ( Toledo-Moreo et al., 2010 ), and it is out of the scope of this paper.
 The proposed fuzzy classifier has the next features:
Instead of using expert knowledge, the proposed one is extracted from data. Hence, it has being obtained following a fuzzy modeling approach ( Babus  X  ka, 1998 ).

The input variables of the fuzzy classifier are the current instant longitudinal velocity and acceleration. Then, the pro-posed fuzzy classifier is independent from both past sensor measures and past inferred maneuvers. Consequently, it does not need to keep buffered information, which leads to a subsequent saving of memory.

The fuzzy modeling process has been carried out with the only goal of obtaining an accurate fuzzy classifier with no intention of being interpretable for humans. As it will be seen, in the light of the comparison with other proposals in the literature, this accuracy goal has been achieved. Besides, the fuzzy classifier is compact, having a low number of input variables and rules. As a result, little computation time is consumed to infer the output.
Finally, it must be remarked that a simple classifier is advisable given that it has been focused on longitudinal maneuvers.
Therefore, an increase of the mo del complexity is foreseen when the task of transversal maneuver will be undertaken. In that sense, the simpler the longitudinal maneuver model, the simpler the transversal  X  longitudinal one. Besides, simple models are better in order to incorporate expert knowledge and to manually adjust their parameters.

The rest of the paper is organized as follows: in Section 2 the most relevant related works are shown. In Section 3 the fuzzy classifier is introduced. Afterwards, in Section 4 , the fuzzy modeling process is described. Section 5 shows and analyzes the results of the fuzzy modeling experiments. Finally, the main conclusions are presented in Section 6 . 2. Related works
Collision Avoidance Support Systems (CASS) is a key field of research discussed widely in the literature. CASS can be studied from different perspectives. A typical classification can be done regarding the number of elements enrolled in the scene: the ego-vehicle, the infrastructure alone or all vehicles in the scene plus the infrastructure.

Asfarastheego-vehicleisconcerned,wecanfindanimportant number of works based on radar systems ( Jamson et al., 2008 ), vision ( Toulminet et al., 2006 ), or combinations of both ( Amditis et al., 2005 ), to avoid the weak points of ea ch individual solution. There also exist CASS based on GPS aided sensors  X  GPS plus odometry and optionally maps ( Toledo-Moreo and Zamora-Izquierdo, 2009a ). These last systems are independent from the visibility conditions. The second option focuses on the infrastructure-based systems, where warnings and sensor elements are installed in the roadside, for example, message panels ( Creaser et al., 2007 ). Regarding thethirdoption,itisakeyresearchwithalotofinterestinthe communication research community. This new point of view is called Collaborative CASS ( Tan and Huang, 2006 )(CCASS).
Another classification is related to the moment of the man-euver prediction itself, distinguishing between driver intent and trajectory prediction ( McCall et al., 2007 ). Zong et al. (2009) also identify the driving intention and predict the maneuvering behavior of the driver using an integrated model, which combine Neural Networks and Markov Chain Models.

In this work, we have focused in an ego-vehicle CASS using low cost sensors and vehicle dynam ics to predict the maneuvers. Maneuver recognition using diff erent vehicle dynamics has been widely studied in the literature. Kim and Hong (2004) use an UKF (Unscented Kalman Filter) for curvilinear motions in a IMM (Inter-active Multiple Model) algorithm to track a maneuvering vehicle. Two kinematic models are derived: a constant velocity with EKF (Extended Kalman Filter) for lin ear motions and a constant-speed turn with UKF for curvilinear motions. Lately, in Tan and Huang (2006) , it is evaluated the performance of the positioning and communication systems of a CCASS over the model used to predict collision, which estimates future trajectories of surrounding vehi-cles. The communication network was simulated, and therefore the conclusions achieved were limited.

A different proposal can be found in the paper of Polychrono-poulos et al. (2007) , where the authors calculate the path of the ego-vehicle in a dynamic situation adaptive way. The output space of the estimated path was 3-D ( x , y , and t ); it was shown that it is possible to predict the intention of the driver and estimate the path for the future 3 or 4 s with an accuracy less than 50 cm always assigning the correct lane to the vehicle. In this work, three models are proposed in a two level fusion process: CTRA (constant turn rate constant tangential accelera-tion), CTR (constant turn rate), and CM (constant acceleration). Ndjeng et al. (2008) use an IMM for ego localization with low-cost sensors using the well-known models on normal forward driving situations (constant acceleration, constant turning and constant velocity models) and also they consider unusual maneuvers with very strong accelerations, weak radius turns with a high speed, stop and go and backward driving. Finally, an interesting proposal is shown in Toledo-Moreo and Zamora-Izquierdo (2010) where the authors propose a CASS with lateral and longitudinal man-euver prediction using an IMM algorithm, and with source measurement from GPS/INS and a digital custom map.

Artificial Neural Networks have been widely used in navigation systems and vehicle control due to its learning capabilities and practical approach in the modeling of nonlinear systems. Fuzzy approaches have also shown good f eatures in modeling this kind of systems. There are a large numbe r of research proposals in the literature about the use of Neural Network, Fuzzy Systems or a combination of them, to solve different problems, mainly related to the performance of the GPS/INS coupled navigation systems ( Adrian et al., 2004 ; Hang et al., 2006 ; Rashad and Aboelmagd, 2007 .
Regarding maneuver prediction using Neuro-Fuzzy Architec-tures, in Toledo-Moreo et al. (2010) , the authors propose a supervised version of dynamic Fuzzy Adaptive System ART-based used for maneuver predicting and solving the problem of intervehicle collisions in roads using a low-cost navigation unit composed of GPS, odometry and a gyro.

When it comes to revise the literature about application of fuzzy classifiers to the problem of mane uver detection, the preliminary experiments shown in Zamora-Izquierdo et al. (2007) and Terroso-
Saenz and Valdes-Vela (2010) , must be remarked. In the former, a fuzzy model for maneuver detectio n whose parameters were opti-mized from data was obtained. Nevertheless, both a predetermined number of rules and a set of input features were imposed. In the latter, the authors apply fuzzy mode ling techniques to discover the number of rules for different models based on both three and five input feature sets, including past ve locity, acceleration and inferred maneuver values. Both works demonstrated the feasibility and the suitability of the fuzzy approach in the maneuver detection topic. 3. Fuzzy classification
The problem of choosing the driving maneuver that is being carried out from certain set of possible maneuvers is, in fact, a classification problem. In the present work, the different long-itudinal maneuvers are cruise, accelerating or decelerating and stop, giving raise to the set of possible classes O  X f ST , AC , CR , DC g .
The objects that must be classified are represented by vectors x  X  X  X  v t , a t  X  , where v t and a t represent the velocity and the acceleration of the vehicle at instant t respectively.

This work is focused on fuzzy IF-THEN classifiers. Fuzzy classi-fiers have been successfully applied to pattern classification tasks ( Bombardier and Schmitt, 2010 ; Roubos et al., 2003 ). Concretely, we are concerned with TSK models ( Takagi and Sugeno, 1985 ) because they are suitable to be extracted from data as it has been probed in thecurrentproblemhastheform:
IF v t is B v 1 AND a t is B a 1 THEN man 1  X  b 1  X  g v 1
IF v t is B v 2 AND a t is B a 2 THEN man 2  X  b 2  X  g v 2 ^
IF v t is B v r AND a t is B a r THEN man r  X  b r  X  g v r where B j i is the j -th fuzzy set for the i -th rule, man output of the i -th rule, and being b i and g j i the parameters of the consequents, with j A f v , a g and i  X  1 , ... , r ,being r the number of rules.Besides,amodelwherealltheruleshavetheform:
IF v t is B v i AND a t is B a i THEN man i  X  b i , with i  X  1 ; 2 , ... , r , that is, it only comprises constant values b every rule consequent of the model, is called zero-order TSK or singleton model. As regards to the fuzzy reasoning mechanism, it is such that the firing strength t i for the i -th rule given an input x is obtained by the expression:  X  x  X  X  m i  X  v t  X  m i  X  a t  X  , where m i denotes the membership degree to the associated fuzzy set. Then, the partial output man i ( x )isgivenby: man i  X  x  X  X  t i  X  x  X  man i , and the partial outputs are combined to generate the final output man ( x ) of the system according to: man  X  x  X  X  4. The fuzzy modeling process The process to extract a fuzzy model from a set of data
Z  X f z 1 , ... , z n g is called fuzzy modeling . The success of applying fuzzy modeling to obtain fuzzy classifiers from data has been demonstrated in the literature ( Roubos et al., 2003 ). phases. The first task is to decide the number of rules r of the fuzzy model. This problem can be addressed with self-organized clustering methods ( Chiu, 1994 ). These kind of methods are able to determine the number of local behaviors that exist inside the data along with their prototypes. Afterwards, in the rule generation phase, the goal is to obtain a first approximation of the model in form of fuzzy clusters as it is done by Setnes (2000) . Each cluster gives raise to an initial fuzzy rule. After the rules generation phase, it comes the parameter identification , which is encharged of the fine adjustment of the parameters of the fuzzy sets in order to obtain a model with good approximation capabilities.
 data space in which the clustering task will be performed and the way in which the distance between data is calculated. As regards to the former, some authors run the clustering algorithm in the output space of the data ( Emami et al., 1998 ), what is specially useful for systems with large number of input features. This option is not specially suitable here given that, in the current problem, only two input variables are considered.
 product space of input features as in Kroll (1996) . In our case, this space would be V A . Nevertheless, this is considered a blind method since it does not take into account the output informa-tion. Then, with this approach, it is possible to put together in the same group, data with similar inputs but different outputs.
Therefore, data that should clearly belong to different clusters could be merged as if they had similar behaviors.
 available data and hence, performing the fuzzy clustering in the product space of input and output features ( Setnes, 2000 ). There-fore, in the present work, the clustering task is performed in the product space V A O , in order to guide the clustering process with the real maneuver information.
 of the clusters found in the space V A O into each one of the variables V , A and O . In this manner, a set of initial fuzzy rules will be obtained. This process is depicted in Fig. 1 although, for simplicity reasons, only two dimensions are considered. matrix A which induces the way to measure the dissimilarity between the data in Z and every prototype (see Eq. (A.1) in
Appendix). This matrix also influences the shape and orientation of the clusters. The most widely used norms give raise to spherical clusters, ellipsoidal clusters orthogonal to the axes, and oblique ellipsoidal clusters. As it is depicted in Fig. 2 , in this projection process some information is lost, giving raise to the so-called decomposition error ( Babus  X  ka, 1998 ). The decomposition error produced when spherical clusters are projected is smaller than the one produced when clusters that are ellipsoidal and oblique to the axes are projected. For this reason, in this paper the norm A  X  I is used (that is, the Identity matrix ) and then spherical clusters are found. 4.1. Number of rules and initial prototypes
In this work, it is decided to find several sets of initial prototypes with different cardinalities r  X  r min , ... , r to analyze the accuracy of models with different complexities. For this aim, we apply an Agglomerative Hierarchical Clustering Method (AHCM) ( Emami et al., 1998 ). At the beginning of the process each one of the n training examples is considered as it were a cluster ( r  X  n ). Then, an iterative process starts and the two closer clusters are merged (see Eq. (A.2)). As a result of merging two clusters, a new one is created. This new cluster contains the union of the examples of the two merged clusters, and its prototype is the arithmetic mean of the prototypes of the two original clusters.
Therefore, in every iteration of the AHCM, a set of clusters with a concrete cardinality r is obtained. This process finishes when a minimum number of clusters is reached. In fact, this minimum could be r  X  1. The version of AHCM implemented here saves and serializes the sets of prototypes having cardinalities r from r  X  r min , ... , r max , while the remaining ones are discarded in order to avoid too complex models. Let us call C 0 r  X f c 0 1 , ... , c 0 prototypes having cardinality r . 4.2. Rule generation
The well-known Fuzzy C-means Method (FCM) ( Bezdek, 1981 )is one of the most commonly used algorithms to extract fuzzy rules from a set of data Z . Once we have fixed both the clustering space and the matrix A determining the norm to calculate the distance between two points, and given that a set of r initial prototypes C has been generated, this method obtains a fuzzy partition of the data into r clusters and finds its prototypes C r  X f c 1 , ... , c a way that a cost function S w is minimized. S w is a measurement of the compactness of the clusters (see Eq. (A.3)). For this aim this method needs to be supplied with a value m A  X  1 , 1 X  determining the fuzziness of the fuzzy clusters to be found. The larger the value of m is, the more overlapped the clusters are. When m tends towards 1 , every cluster prototype tends towards the center of the data set. Pal et al. (1993) determine that a suitable range for m is [1.5,2.5], being 2 the value preferred by the FCM users. Never-theless, there is no theoretic reason to choose a particular value of m and it is a context-dependant parameter.

In the current work, instead of establishing the fuzziness a priori, a suitable value of m for every number of rules r is automatically obtained from the data, along with the correspond-ing optimal fuzzy cluster set, as it is done in Emami et al. (1998) . The mechanism is based on a cluster validity measure that takes into account the compactness of and the separation between clusters (see Eqs. (A.3) and (A.4)). Therefore, for every number of rules r , m is incremented in m inc until the set of r fuzzy clusters obtained by the FCM algorithm fulfills the cluster validity criterium (see Eqs. (A.5) and (A.6)).

The next task is to separately project the clusters found in the space V A O . The i -th cluster is defined by a vector m ik components, expressing the membership of the k -th datum in Z to the i -th cluster. As a result of the projection, pointwise definitions of the initial fuzzy sets in v t and a t are obtained. They are centered and j A f v , a g . Then, every fuzzy set is approximated by a preestab-lished parametric membership function, obtaining B j i . Afterwards, the antecedents of the fuzzy rules are defined on the basis of those initial fuzzy sets. 4.3. Parameter identification
The goal of this phase is to tune the parameters of the fuzzy sets and the coefficient of the linear functions with the aim of maximizing the accuracy of the TSK model. We have used the Adaptive Neuro Fuzzy Inference System (ANFIS) proposed by Jang (1993) , which is functionally equivalent to a TSK model and combines the backpropagation learning method and the Least Squares Error Method (LSEM) to tune the antecedents and the consequents respectively. Therefore, differentiability constraints must be imposed to the parametric membership function chosen to represent the fuzzy sets (the TSK fuzzy reasoning mechanism also fulfills this requirement). Here the membership function are Gaussian bells: B where c j i is the center of the bell and a j i determines its width with i  X  1 , ... , r , and j A f v , a g .

ANFIS training is carried out during a number ep max of epochs (iterations). Every epoch of the training is compound of a forward and a backward pass. In the forward pass the network is evaluated Acceleration Acceleration for every input datum, and the r ule consequent p arameters are identified by means of the LSEM. In the backward pass, error signals are propagated, and the rule an tecedents are modified through backpropagation. The extent at whi ch the current adjustable para-meter is being modified in the gradient direction is k .Initially, k is set to a certain value. Nevertheless, in order to accelerate the convergence, this value is modified following the next heuristic ( Jang, 1993 ): after x consecutive decreases of the error, k is increased in a percentage a . On the other hand, if the error value oscillates y consecutive steps then k is decreased in a percentage b .
Two versions of ANFIS have been used. The first one obtains a linear TSK model. In the second version, the LSEM has been modified in order to obtain a singleton model. This is done enforcing the coefficient of the dependent terms of the linear functions to be 0. 4.4. Fuzzy modeling algorithm
Given a set of n data Z  X f z 1 , ... , z n g V A O , the algorithm to generate fuzzy classifiers with different number of rules r
A f r min , ... , r max g , is summarized as follows: 1.
 Fix the clustering space as V A O and the norm
A  X  I ; 2.

RUN AHCM in order to obtain several sets of proto-types C 0 c  X f c 0 1 , ... , c 0 c g , with c  X  n , ... , 1 having different cardinalities c ; 3.

Serialize and Save C 0 r with 1 r r min r r r r max r n ; 4.

FOR every r  X  r min , ... , r max 4.1 Initialize m  X  1; 4.2 C r  X  C 0 r ; 4.3 WHILE ( C r does not fulfill the cluster validity ; 4.4 Serialize and Save C r ; 4.5 Project every C r to obtain c i j with j A f v , a g and 4.6 RUN ANFIS during ep max epochs with membership 5. Fuzzy modeling experiments
In this section, the most relevan t issues about the fuzzy modeling experimentation are described. Fi rst, data gathering and preproces-sing are tackled. Afterwards, the settings of the fuzzy modeling process are shown. Finally, once the different classifiers are obtained, their structural characteristics are analyzed. Besides, a further postprocessing so as to reduce the complexity of some selected models has been added. Nevertheless, this part of the research must be understood as a mere sizing up given that the main goal in this work has been to obtain accurate fuzzy classifiers instead of interpretable ones. In order to discover interpretable models from data, many techniques could have been applied from the beginning of the fuzzy modeling process ( Roubos et al., 2003 ).
Notwithstanding, this goal could be undertaken in future researches. 5.1. Data gathering and preprocessing The first step in fuzzy modeling is the acquisition of data. In
Fig. 3 the prototype vehicle used to generate the training sets is shown. It was equipped with two Inertial Measurement Unit (IMU) sensors  X  MT9-B Xsens and Xbow VG-400 IMU units  X  with low cost Micro-electro-mechanical system (MEMS) technology. mately 10 min in order to obtain four data sets. The circuits represent real road traffic conditions. Their trajectories are shown in Fig. 4 . During those tests, odometry and inertial measurements were gathered and manually labeled. Let us remark here that the data collected in our experiments do not represent any possible dynamic state of a road vehicle, what is dependent on the nature of the vehicle, the traffic conditions, the driving style, etc. However, it is essential that datasets appear consistent and show similar dynamics, something that can be verified during the training and validating processes (see Section 5.3 ).Forthisreason,itisthe authors X  recommendation to collect all the data under similar circumstances, i.e. when possible with the same vehicle and similar road environments and driving styles.
 composed of a set of 5892 tuples with the form  X  X  v t , a where v t is the velocity in m / s , a t is the acceleration in m = s 2 ,and man t A O  X f ST , AC , CR , DC g is the real driving maneuver performed at instant t . The distribution of the instances among the different circuits and maneuvers is summarized in Table 1 . We can observe that the percentage of CR tuples is greater than the other maneuvers in all the circuits except circuit 4. On the other hand, the number of
ST tuples is less than the number of tuples corresponding to the other maneuvers. Therefore, at first, a subsampling of CR tuples along with a supersampling of ST instances seems to be suitable in order to avoid a biased learning of the classifier. However, in this job we have considered the original distribution of data so as to reflect different driving situations. On one hand, there are situations in which the vehicle spends a great deal of time in CR maneuver because it does not have to speed up or slow down. For example, this behavior is reflected in circuit 2. On the other hand, there are situations where a vehicle performs many ST maneuvers because there are a large number of traffic lights, zebra crossings or traffic jams. Besides, it remains less time at cruise velocity and more time accelerating and decelerating. Both circuit 1 and circuit 4 reflect this driving situation.

Having a suitable set of data, the next task should be to apply the clustering method explained in Section 4.2 . Due to the fact that the rule generation algorithm is based on measuring dis-tances among the points in the space V A O , it arises the problem of evaluating how the nominal component of every tuple (the class) contributes to the distance calculus. One solution is to translate nominal features into numeric ones. This process is called numerization ( Orallo and Quintana, 2004 ). In numerization 1to n , one nominal feature with n possible nominal labels is replaced with n numerical features. The 1 to n 1 method follows the same idea, but it includes n 1 new numerical features.
Finally, the 1 to 1 method is the most advisable since it does not need to incorporate additional complexity to the model.
However, this technique can only be applied whether some kind of total order can be established among the nominal values. In our case, it is obvious that we can define, for example, the partial order: 1 ST ,2 AC ,3 CR , given that a stopped vehicle (1) needs to accelerate (2) so as to reach a cruise velocity (3). Another partial order could be 3 CR ,2 DC ,1 ST . Then, the problem is to find a logical total order among the four maneuvers. However, the differentiation between AC and DC is not very relevant because acceleration and deceleration maneuvers share the same motion model (see Section 1 ). Therefore, the initial idea of considering four different classes is dismissed and we join together accelera-tion and deceleration maneuvers into a single class called AC = DC ,
Finally, 1 to 1 numerization is applied through the order 1 ST , 2 AC = DC ,3 CR . 5.2. Experiment settings
Table 2 summarizes the setting of the parameters mentioned in the paper for the whole fuzzy modeling process. The reader can look up the values for the omitted parameters in the specialized literature ( Babus  X  ka, 1998 ; Bezdek, 1981 ; Emami et al., 1998 ; Jang, 1993 ; Pal et al., 1993 ) since the typical settings have been used here.
As regards to the experiments, a cross validation methodology ( Orallo and Quintana, 2004 ) has been carried out in order to assess the generalization capability of the fuzzy classifiers. The experiments are summarized in Table 3 . 5.3. Fuzzy modeling results
From Figs. 5 X 7 , the results obtained across the different experiments for every type of fuzzy classifier and varying the number of rules are shown.

The behavior of these fuzzy classifiers is about uniform across the experiments. This highlights the suitability of the fuzzy modeling approach to solve the maneuver detection process and its generalization capacity when it is validated with an indepen-dent set of data. There are no significative improvements in the matching rates as the number of rules of the linear TSK model increases. This behavior can be observed in each experiment. In fact, the linear TSK classifiers with optimal matching rates for each experiment are the ones having about four and five rules.
Let us keep in mind the singleton TSK models graphics. As it is well known, in general this kind of models tend to be less accurate than the linear ones, due to the little degree of freedom provided by the constant consequents. However, this behavior is not totally present in the singleton models obtained here. As we can see, the matching rates of the singleton classifiers with four and five rules are comparable with the ones obtained with linear TSK models. This is because fuzzy classifiers, whose outputs are crisp and discrete values, do not need the degree of freedom supplied by the consequents of the linear TSK models which, on the other hand, are very advisable when the goal is approximation of complex system. 5.4. Discussion
Given that the simpler the model, the easier to incorporate expert knowledge and to manually adjust their parameters, simple models are more advisable than complex models. The fuzzy classifiers obtai-ned here are pretty simple. In fact, they are near to be compact fuzzy models according to the definition given in Jin et al. (1999) :theyhave few rules and few input variables . However, the involved fuzzy sets are not shared among the rules . Besides, according to de Oliveira (1999) ,it is also advisable a moderate number of distinguishable fuzzy sets, that is to say, not much overlapped membership functions.

Let us see Fig. 8 . As it is shown, in the acceleration part of the graphics, undistinguishable fuzzy sets are produced. This undistinguishability has been due to the process of numerization. Although the join of AC and DC tuples into the same maneuver
AC = DC has sense from a kinematical point of view, it must be underlined that it entails a trend to merge tuples with clearly positive acceleration and tuples with negative acceleration in the same cluster and, therefore, a wide enveloping bell is generated starting from this cluster. On the contrary, ST tuples with accel-eration near zero, that is to say, situated in the middle between being positive and negative tend to belong to another different cluster. This causes the appearance of a narrow bell around zero and within the previously mentioned wide bell. As a result, this leads to a lost of transparency in the generated fuzzy rule system.
Nonetheless, as it is argued in Babus  X  ka (1998) , when the fuzzy models are generated from data, some degree of redundancy cannot be avoided, and it entails unnecessary complexity. compact, specially, the four and five rules linear and singleton TSK models. Therefore, it is worth applying the Similarity-driven Rule
Base Simplification Method (SRBSM) proposed in Roubos et al. (2003) to these most accurate models so as to eliminate, as far as possible, the redundant and undistinguishable fuzzy sets. The method uses a similarity measure to quantify the redundancy among the fuzzy sets in the rule base (see Eq. (A.7)). In that way, for the j -th input variable, fuzzy sets A j and B j are merged if they are similar enough. Besides, if a fuzzy set is similar to the universal set (the one having membership degree equal to 1 along the whole domain) then it is released from the rule. In this way the number of different fuzzy sets used is reduced.
 selected models and their respective reduced ones are displayed.
Besides, the results are compared with the matching rates obtained with SdFasArt, the algorithm presented in Toledo-Moreo et al. (2010) , that shows good results and can be considered a good representative of the state of the art in this field. From Table 4 it can be observed that: Percentage of correct matches
SdFasArt. It is also remarkable the low number of rules needed to obtain better results than SdFasArt. In the case of linear TSK classifiers, the minimum number of rules for that aim is four for every experiment. 17 of the 20 test rates for the reduced models are better than the corresponding SdFasArt rates (the three worst values are highlighted in cursive letters).

In general, the matching rates of the reduced models do not suffer great decreases when they are c ompared with their correspond-ing original fuzzy models. In fact, in some cases the rates of the reduced models are better than the ones of the corresponding original models. This corroborates the unnecessary complexity entailed when the models are extracted from data as it is reported in Babus  X  ka (1998) .

The best matching rates across the tests are remarked in bold letters. As it can be observed for the experiment E1, the best results are the ones of the five-rule reduced singleton TSK model for the two test circuits. Moreover, the same type of model is the most accurate in experiment E3 in its two tests. The best rate in
E2 is reached by the four-rule reduced linear TSK model. It must be remarked that, for each experiment, the best results in all the tests have been obtained by an only model. This highlights the generalization capability of the ex tracted classifiers. This beha-vior is remarked in Table 4 with shadowed cells.

The reduced models corresponding to the original ones depicted in Fig. 8 , are shown in Fig. 9 (in fact, the models shown are the ones that obtain the best results of Table 4 remarked as shadowed cells). It highlights that the reduction of complexity has been accomplished. For these models they are also shown the confusion matrixes from Table 5 X 7 .

In these matrixes, a cell in row R and column C with R a C , contains the percentage of tuples whose real maneuver is R but it is wrongly classified as C . In general, the main errors occur in adjacent maneuvers, that is more justifiable than if there were errors between ST and CR maneuvers. In fact, only a few CR tuples are wrongly classified as ST and vice versa.

Besides, from Figs. 10 X 12 , the variation through time of the maneuver inferred by the most accurate reduced fuzzy models are depicted. As it has being said, the fuzzy classifiers do not take into account the maneuver inferred in t 1 in order to infer the maneuver in t . This is the reason why there are some isolated instants within intervals of real AC = DC maneuver that are wrongly classified as CR or even as ST . Nevertheless, as it has been previously mentioned, these errors correspond to adjacent maneuvers that are cases in which, even in the manual labeling phase, it is not clear how to categorize them. 6. Conclusions
A classifier based on fuzzy rules extracted from data was developed and applied to the problem of timely identification of the maneuvers made by a road vehicle. This results of great interest for supporting collision avoidance in roads. Additionally, an indirect benefit of our method is the possibility of improving the estimation of the vehicle position by means of choosing the motion model that represents better the state of the vehicle anytime.

The fuzzy rules were extracted directly from the data collected by onboard sensors, following a fuzzy modeling approach. Hence, the need of using experts to train the system was saved.
The experiments performed in four different scenarios show very good results in terms of correct matches and number of input variables and rules. In every experiment, the classifier presented in this work outperforms the results published in the state-of-the-art literature. Even when a reduced version of the classifier that simplifies significantly its complexity is tested, still in the 98.5% of the cases, the correct match rate is higher than the best number reported in the specialized literature.
 Acknowledgments This work has been supported by the Fundacio  X  nSe  X  neca under the Program for Helping the Excellence Research Groups 04552/GERM/06 the seABilla project (FP7-SEC-2009-1 Grant Agreement No 241598). Appendix A. Main formulae of the algorithms
Orthogonal distance between datum z k and prototype c i in the norm A :
J z k c i J A  X  Similarity between hard clusters C i and C j for AHCM algorithm: where n i y n j are the number of examples of C i y C j respectively and c i y c j are their prototypes.

Measure of compactness. Sum of fuzzy squared distances within-cluster used in FCM: Measure of separation. Sum of fu zzy distances between-clusters:
Cluster validity criterium for a given set of r fuzzy clusters and a value of m . For a given number of clusters r , a value of m is suitable if it keeps the trace of S T r somewhere in the middle of its domain  X  0 , K : tr  X  S r W  X  S r B  X  K = 2 o g ,  X  A : 5  X  where K  X  tr being z  X  1 n Similarity measure used in SRBSM:
S  X  A j , B j  X  X  where A j and B j are two fuzzy sets for j A f v , a g , and cardinality of a fuzzy set.
 References
