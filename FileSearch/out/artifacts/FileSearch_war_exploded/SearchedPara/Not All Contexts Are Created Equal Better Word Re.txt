 Learning word representations using raw text data have been shown to improve many NLP tasks, such as part-of-speech tagging (Collobert et al., 2011), dependency parsing (Chen and Manning, 2014; Kong et al., 2014) and machine transla-tion (Liu et al., 2014; Kalchbrenner and Blunsom, 2013; Devlin et al., 2014; Sutskever et al., 2014). These embeddings are generally learnt by defining an objective function, which predicts words con-ditioned on the context surrounding those words. Once trained, these can be used as features (Turian et al., 2010), as initializations of other neural net-works (Hinton and Salakhutdinov, 2012; Erhan et al., 2010; Guo et al., 2014).

The continuous bag-of-words (Mikolov et al., 2013) is one of the many models that learns word representations from raw textual data. While these models are adequate for learning semantic fea-tures, one of the problems of this model is the lack of sensitivity for word order, which limits their ability of learn syntactically motivated em-beddings (Ling et al., 2015a; Bansal et al., 2014). While models have been proposed to address this problem, the complexity of these models ( X  X truc-tured skip-n -gram X  and  X  X Window X ) grows lin-early as size of the window of words considered increases, as a new set of parameters is created for each relative position. On the other hand, the continuous bag-of-words model requires no addi-tional parameters as it builds the context repre-sentation by summing over the embeddings in the window and its performance is an order of magni-tude higher than of other models.

In this work, we propose an extension to the continuous bag-of-words model, which adds an at-tention model that considers contextual words dif-ferently depending on the word type and its rela-tive position to the predicted word (distance to the left/right). The main intuition behind our model is that the prediction of a word is only dependent on certain words within the context. For instance, in the sentence We won the game! Nicely played! , the prediction of the word played , depends on both the syntactic relation from nicely , which narrows down the list of candidates to verbs, and on the semantic relation from game , which further nar-rows down the list of candidates to verbs related to games. On the other hand, the words we and the add very little to this particular prediction. On the other hand, the word the is important for pre-dicting the word game , since it is generally fol-lowed by nouns. Thus, we observe that the same word can be informative in some contexts and not in others. In this case, distance is a key factor, as the word the is informative to predict the immedi-ate neighboring words, but not distance ones. 2.1 Continuous Bag-Of-Words (CBOW) The work in (Mikolov et al., 2013) is frequently used to learn word embeddings. It defines pro-bedding dimension with the vocabulary V . These parameters are optimized by by maximizing the likelihood that words are predicted from their con-text. Two models were defined, the skip-gram model and the continuous bag-of-words model. In this work, we focus on the continuous bag-of-words model. The CBOW model predicts the center word w 0 given a representation of the sur-rounding words w  X  b , . . . , w  X  1 , w 1 , w b , where b is a hyperparameter defining the window of con-text words. The context vector is obtained by averaging the embeddings of each word c = ter word w 0 is obtained by performing a softmax over all the vocabulary V . More formally, define context vector c into a | V | -dimensional vector rep-resenting the predicted word, and maximizes the following probability: where Oc corresponds to the projection of the context vector c onto the vocabulary V and v is a one-hot representation. For larger vocabu-laries it is inefficient to compute the normalizer P ing the hierarchical softmax objective function (Mikolov et al., 2013) or resorting to negative sampling to approximate the normalizer (Gold-berg and Levy, 2014).

The continuous bag-of-words model differs from other proposed models in the sense that its complexity does not rise substantially as we in-crease the window b , since it only requires two extra additions to compute c , which correspond to d w operations each. On the other hand, the skip-n -gram model requires two extra predictions cor-responding to d w  X  V operations each, which is an order of magnitude more expensive even when subsampling V . However, the drawback the bag-of-words model is that it does not learn embed-dings that are prone for learning syntactically ori-ented tasks, mainly due to lack of sensitivity to word order, since the context is defined by a sum of surrounding words. Extensions are proposed in (Ling et al., 2015a), where the sum if replaced by the concatenation of the word embeddings in the order these occur. However, this model does not scale well as b increases as it requires V  X  d w more parameters for each new word in the win-dow.

Finally, setting a good value for b is difficult as larger values may introduce a degenerative behav-ior in the model, as more effort is spent predict-ing words that are conditioned on unrelated words, while smaller values of b may lead to cases where the window size is not large enough include words that are semantically related. For syntactic tasks, it has been shown that increasing the window size can adversely impact in the quality of the embed-dings (Bansal et al., 2014; Lin et al., 2015). 2.2 CBOW with Attention We present a solution to these problems while maintaining the efficiency underlying the bag-of-words model, and allowing it to consider contex-tual words within the window in a non-uniform way. We first rewrite the context window c as: where we replace the average of the word embed-dings with a weighted sum of the individual word embeddings within the context. That is, each word is w i at relative position i is attributed an attention level representing how much the attention model believes this it is important to look at in order to predict the center word. The attention a i ( w ) given to word w  X  V at the relative position i is com-puted as: of parameters that which determines the impor-tance of each word type in each (relative) position, the relative position. As this is essentially a soft-max over context words, the default bag-of-words model can be seen as a special case of this model where all parameters K and s are fixed at zero. Computing the attention of all words in the input requires 2 b operations, as it simply requires re-trieving one value from the lookup matrix K for each word and one value from the bias s for each word in the window. Considering that these mod-els must be trainable on billions of tokens, effi-ciency is paramount. Although more sophisticated attentional models are certainly imaginable (Bah-danau et al., 2014), ours is a good balance of com-putational efficiency and modeling expressivity. 2.3 Parameter Learning Gradients of the loss function with respect to the parameters ( W , O , K , s ) are computed with backpropagation, and parameters are updated after each training instance using a fixed learning rate. 3.1 Word Vectors We used a subsample from an English Wikipedia ing a total of 530 million tokens. We built word embeddings using the original CBOW and our proposed attentional model on this dataset.

In both cases, word vectors were constructed us-ing window size b = 20 , which enables us to cap-ture longer-range dependencies between words. We set the embedding size d w = 50 and used a negative sampling rate of 10. Finally, the vocabu-lary was reduced to words with more than 40 oc-currences. In terms of computational speed, the original bag-of-words implementation was able to compute approximately 220k words per second, while our model computes approximately 100k words per second. The slowdown is tied to the fact that we are computing the gradients, the atten-tion model parameters, as well as the word embed-dings. On the other hand, the skip-n -gram model process words at only 10k words per second, as it must predict every word in the window b .

Figure 1 illustrates the attention model for the prediction of the word south in the sentence an-tartica has little rainfall with the south pole mak-ing it a continental desert . Darker cell indicate higher attention values from a ( i, w ) . We can ob-serve that function words (has, the and a) tend to be attributed very low attentions, as these are gen-erally less predictive power. On the other hand, Figure 1: Illustration of the inferred attention pa-rameters for a sentence from our training data when predicting the word south ; darker cells in-dicate higher weights. content words, such as antartica, rainfall, conti-nental and desert are attributed higher weights as these words provide hints that the predicted word is likely to be related to these words. Finally, the word pole is assigned the highest attention as it close to the predicted word, and there is a very likely chance that south will precede pole . 3.2 Syntax Evaluation For syntax, we evaluate our embeddings in the domain of part-of-speech tagging in both su-pervised (Ling et al., 2015b) and unsupervised tasks (Lin et al., 2015). This later task is newly proposed, but we argue that success in it is a com-pelling demonstration of separation of words into syntactically coherent clusters.
 Part-of-speech induction. The work in (Lin et al., 2015) attempts to infer POS tags with a standard bigram hmm, which uses word embed-dings to infer POS tags without supervision. We use the same dataset, obtained from the ConLL 2007 shared task (Nivre et al., 2007) Scoring is performed using the V-measure (Rosenberg and Hirschberg, 2007), which is used to predict syn-tactic classes at the word level. It has been shown in (Lin et al., 2015) that word embeddings learnt from structured skip-ngrams tend to work better at this task, mainly because it is less sensitive to larger window sizes. These results are consistent with our observations found in Table 1, in rows  X  X kip-ngram X  and  X  X Skip-ngram X . We can ob-serve that our attention based CBOW model (row  X  X BOW Attention X ) improves over these results for both tasks and also the original CBOW model (row  X  X BOW X ). per column) using different types of embeddings (one per row). Part-of-speech tagging. The evaluation is per-formed on the English PTB, with the standard train (Sections 0-18), dev (Sections 19-21) and test (Sections 22-24) splits. The model is trained with the Bidirectional LSTM model presented in (Ling et al., 2015b) using the same hyper-parameters. Results on the POS accuracy on the test set are reported on Table 1. We can observe our model can obtain similar results compared to the struc-tured skip-ngram model on this task, while train-ing the model is significantly faster. The gap be-tween the usage of different embeddings is not as large as in POS induction, as this is a supervised task, where pre-training generally leads to smaller improvements. 3.3 Semantic Evaluation To evaluate the quality of our vectors in terms of semantics, we use the sentiment analysis task (Senti) (Socher et al., 2013), which is a binary classification task for movie reviews. We sim-ply use the mean of the word vectors of words in a sentence, and use them as features in an ` 2 -regularized logistic regression classifier. We use the standard training/dev/test split and report ac-curacy on the test set in table 1.

We can see that in this task, our models do not perform as well as the CBOW and Skipngram model, which hints that our model is learning em-beddings that learn more towards syntax. This is expected as it is generally uncommon for embed-dings to outperform existing models on both syn-tactic and semantic tasks simultaneously, as em-beddings tend to be either more semantically or syntactically oriented. It is clear that the skipn-gram model learns embeddings that are more se-mantically oriented as it performs badly on all syntactic tasks. The structured skip-ngram model on the other hand performs badly on the syntactic tasks, but we observe a large drop on this semanti-cally oriented task. Our attention-based model, on the other hand, out performs all other models on syntax-based tasks, while maintaining a compet-itive score on semantic tasks. This is an encour-aging result that shows that it is possible to learn representations that can perform well on both se-mantic and syntactic tasks. Many methods have been proposed for learning word representations. Earlier work learns em-beddings using a recurrent language model (Col-lobert et al., 2011), while several simpler and more lightweight adaptations have been pro-posed (Huang et al., 2012; Mikolov et al., 2013). While most of the learnt vectors are semantically oriented, work has been done in order to ex-tend the model to learn syntactically oriented em-beddings (Ling et al., 2015a). Attention models are common in vision related tasks (Tang et al., 2014), where models learn to pay attention to cer-tain parts of a image in order to make accurate predictions. This idea has been recently intro-duced in many NLP tasks, such as machine trans-lation (Bahdanau et al., 2014). In the area of word representation learning, no prior work that uses at-tention models exists to our knowledge. In this work, we presented an extension to the CBOW model by introducing an attention model to select relevant words within the context to make more accurate predictions. As consequence, the model learns representations that are both syntac-tic and semantically motivated that do not degrade with large window sizes, compared to the orig-inal CBOW and skip-ngram models. Efficiency is maintained by learning a position-based atten-tion model, which can compute the attention of surrounding words with a relatively small number of operations. Finally, we show improvements on syntactically oriented tasks, without degrading re-sults significantly on semantically oriented tasks. The PhD thesis of Wang Ling is supported by FCT grant SFRH/BD/51157/2010. This research was supported in part by the U.S. Army Re-search Laboratory, the U.S. Army Research Office under contract/grant number W911NF-10-1-0533 and NSF IIS-1054319 and FCT through the pluri-anual contract UID/CEC/50021/2013 and grant number SFRH/BPD/68428/2010.

