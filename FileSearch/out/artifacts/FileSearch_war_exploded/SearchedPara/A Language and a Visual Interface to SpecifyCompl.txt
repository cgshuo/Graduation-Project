 Mining implicit, potentially useful, and previously unknown patterns from spa-tial data is becoming increasingly important due to the availability of large spatial database collected by inexpressi ve location enabled devices such as GPS and RFID. The applications of spatial data mining range from animal movement tracking, environmental monitoring, transportation, to national security [6,14].
Mining spatial co-location patterns [9,15,7,17] is an important spatial data mining task with broad applications. Let F = { f 1 ,f 2 ,...,f n } be a set of spa-tial features. A spatial feature categorizes or groups spatial objects that have the same characteristics t ogether. Example spatial fea tures include car accident, traffic jam, Chromium 6 polluted water source, West Nile disease, and deforesta-tion. Consider a number of l spatial datasets { SD 1 ,SD 2 ,...,SD l } , such that SD i ,i  X  [1 ,l ] contains all and only the objects that have the spatial feature f i , e.g. the spatial objects of West Nile disease. Let R be a given spatial neigh-bor relation (e.g. distance less than 1.5 miles). A set of spatial features X  X  X  is a co-location if its value im ( X ) of an interesting measure, which is speci-fied differently by variants of the mining problem, is above a threshold min im . The problem of finding the complete set of co-location patterns is called the co-location mining problem.

Recently, co-location pattern has been ex tended to include positive relation-ships, self-co-location/ self-exclusion relationships, one-to-many relationships, and multi-feature exclusive relationships [2]. Mining complex spatial patterns from large spatial datasets is an emerging area in data mining [12]. Many spa-tial features interact with each other through complex spatial relationships, e.g. topological and directional [16], other than metric ones. A complex spatial pat-tern refers to a subset of spatial feature s whose spatial objects tend to appear in some spatial configuration specified by some spatial predicate. An example complex spatial pattern may be (car accide nt, yield sign, service road) with the spatial predicate (yield sign on service road AND car accident close yield sign). These complex spatial patterns may be summarized by the interactions of their spatial objects. When happenings of this configuration are observed and the pat-tern is significant enough according to some significant measure ,wereportsuch pattern.

Most current spatial data mining algorithms follow an almost exhaustive ex-ploration of the problem space and recommends a large set of non-trivial, po-tentially useful, and previously unknown patterns. This mining process entails costly computational cost. However, most of the time domain experts posses some basic knowledge about the data and this knowledge may be used to guide the mining process. So a spatial data mining language that is both expressive and easy to use will allow domain experts to incorporate their interests and knowledge to specify complex spatial patterns. In this patter, we describe such a language and a visual inte rface to accept visual query which will be translated into the proposed language.

We make the following two contributions in this paper. First, we provide a spatial pattern language called CSPML to specify complex spatial pattern. The language allows users to specify a large set of complex patterns that they are interested in. Second, we design a visual i nterface to relieve users from writing CSPML queries. Existent data mining query languages are not sufficient for spatial data min-ing. DBQL (Data Mining Query Language) [8] is a general purpose data mining language and does not allow expression of spatial patterns. SDMOQL ( Spatial Data Mining Object Query Language) [11] is a spatial mining language designed for INGENS(Inductive Geographic Information System). It trains the inductive geographic information system by inductive queries first and creates a special user view. SDMOQL focuses more on querying spatial database than retrieving spatial patterns. ATLaS (Aggregate and Table Language and System) [10] is an native extension of SQL language which adds to SQL the ability of defining new User Defined Aggregates and Table Functions. It extends DBMS to support efficiently database-centric data mining , stream computation, and decision sup-port applications. Snoop [3] is a model independent event specification language. It distinguishes events from conditions of event and allows the construction of complex events needed for a large class of applications.

A user friendly visual interface to alleviate users from the burden of writing sophisticated query language, is important for both spatial query language and spatial pattern mining. Topological relationships among arbitrary spatial objects using 9-intersection model is discussed in [5]. Regions, lines and points and all the possible relations between them were defined [5] using point topology. Spatial-Query-by-Sketch tries to offer an efficient v isual interface for retrieving spatial objects satisfying a spatial query in geographic information systems [4]. Twelve positional operators and a set of their specifications in object-oriented geographic database are considered in PQL(Pictorial Query Language) in [13]. The system developed in this context aims at providing a visual interface with the expressive power of a database query language such as SQL. It concerns less about spatial pattern mining where users are more interested in patterns than spatial objects. In this section, we introduce the definition of the proposed pattern mining lan-guage for complex spatial patterns (CSPML). The formal definition of CSPML is of the form: where t is variable to present an ordered (al phabetically by spatial feature name) subset of all the spatial features in F , P is a formula , interestingness speci-fies the interestingness measures used for the complex spatial pattern,  X  is a comparison operator that includes &lt;,  X  ,&gt;, and  X  ,and c is a constant to spec-ify the interestingness measure threshold. The formula P ( t ) is built up using conjunctive forms, which may be one of the following: 1. t.size  X  c where t.size is the cardinality of the spatial feature set t and c is 2. Q ( t )where Q ( t ) is a constraint a conjunctive form with components from 3. s  X  t { Q ( s, t )] } ,where s is any ordered (again alphabetically) subset of the 4. t.pairwise ( ), meaning pairwise spatial features in t satisfying spatial pred-
Spatial predicate in the formula P ( t ) may be metric, topological, and direc-tional [16] relationships. The interestingness measure can be anything that is well defined for a complex spatial pattern, such as participation index [9], join cardinality, join selectivity and support [17]. We now describe a few examples using the proposed language to illustrate its expressiveness: 1. Find all patterns with less than 5 spatial features, spatial predicate pairwise 2. Find all patterns which contains 3 features and one feature is Chromium 6 3. Find all patterns with three features two of which are forest and river. The 4. Find all the patterns of sizes from 3 to 5 and contain feature volcano. One There are three kinds of spatial features in spatial databases, namely geo-point, polyline and geo-area [13]. Geo-point is a zero dimensional point to represent events such as location of an accident. Polylines are used to represent spatial objects such as roads and rivers. Geo-are a can be used to represent forest stands or lakes. We consider the meaningful relationships among these three features. In all figures in this section, geo-point, polyline and geo-area are represented a dot, a straight line (we do not consider polylines that can turn around), and a rectangle (without holes) respectively. Due to space constraint, we could not describe the prototype system that we implemented based on JUMP [1] architecture and the four examples specified using our vis ual interface in this paper. Interested readers should refer to the full version of the paper available from the second author X  X  website.
 Geo-point. Figure 1(a) and Figure 1(b) represent a geo-point on and close to a polyline respectively. A buffer is crea ted around the polyline to indicate the close to relationship. The point may stand for an accident while the polyline may stand for a road. Figure1(a) shows the accident happened on the roads while Figure 1(b) shows that although geo-point is not on the polyline but is still within certain distance. We use the re presentation in Figure 1(c) to specify that we do not care about the relationship between the geo-point and polyline, i.e. we want all patterns with any spatial predicate, e.g. on or close to .
Figure 1(d), 1(e) and 1(f) are the three kinds of relationships between a geo-point and a geo-area. They are geo-point in, on and close to the geo-area respectively. If a user does not care exac tly what kind of relationship is between the geo-point and the geo-area, users could use the representation of figure 1(g) to find the pattern whose features may be any one of the three relationships. Polyline. The relationship of a polyline and goe areaisbasedontheinteriors, boundaries and exteriors of the objects [5]. A spatial relationship can be specified by a matrix representing if the interior( A  X  )/boundary(  X  X  )/exterior( A  X  )ofone object A intersects with the interior/boundary/exterior of another object B . Thirty-three possible relationships betw een two simple polylines were considered in [5]. We only consider straight lines and do not distinguish the boundaries from the interiors of the polyline, only five possible relationships between two simple polyline remain with four of them shown in figure 2 and the symmetric relationship of 2 (d) omitted due to space constraint.

The relationships specified in 2(b) to 2(d) can be further abstracted into a high level relationship called intersect , depending if the two polyline have any common points or not as shown in Figure 3(b). Users may define the a intersection relationship by using the specification as in figure 3(a). Otherwise, users may define specify the relationship by that in Figure 3(a). Figure 3(c) means the two polylines do not inters ect while Figure 3(c) is used to express any kind of the relationships between two polylines.

Based on the twenty relationships between a polyline and a geo-area [5], we found that the exteriors of a polyline always intersect with the interiors, bound-aries and exteriors of a geo-area. We do not distinguish the boundary from the interior of a polyline, so we only consider the relationships between the interiors of a polyline with a geo-area. Figure 4 shows the matrix representation and the five relationships between a polyline and a geo-area. Figure 4(b) and 4(c) can be combined into a touch relationship as show in Figure 5(b).

The polyline could be in,touch,across, and out of a geo-area which are shown in Figure 5. If a user wants to find all relationships involving a polyline and a geo-area without providing a certain kind of relationship between them, they could just use the speci fication in figure 5(e). Geo-area. We allow the specification of 5 rela tionships between two geo-areas out of the 8 relationships specified in [5] as shown from Figure 6(a) to Figure 6(d) (the symmetric relationship of Figure 6(a) is omitted). If the users do not care the exact relationship between two feature s, they could specify the relationship as in figure 6(e). In this paper, we designed and developed a pattern mining language called CSPML for specifying complex spatial patterns. CSPML allows users to choose between exhaustive pattern search and targeted pattern mining constrained by prior knowledge about the datasets. We also proposed a pictorial language which has the equivalent expressive power to the proposed CSPML language. Efficient mining algorithms utilizing as much as the JTS tools of JUMP [1] will be im-plemented in the future.

