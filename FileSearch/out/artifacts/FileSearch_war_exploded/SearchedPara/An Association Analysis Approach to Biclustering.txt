 The discovery of biclusters, which denote groups of items that show coherent values across a subset of all the transactions in a data set, is an important type of analysis performed on real-valued data sets in various domains, such as biology. Several algorithms have been proposed to find different types of biclusters in such data sets. How-ever, these algorithms are unable to search the space of all possible biclusters exhaustively. Pattern mining algorithms in association analysis also essentially produce biclusters as their result, since the patterns consist of items that are supported by a subset of all the transactions. However, a major limitation of the numerous tech-niques developed in association analysis is that they are only able to analyze data sets with binary and/or categorical variables, and their application to real-valued data sets often involves some lossy trans-formation such as discretization or binarization of the attributes. In this paper, we propose a novel association analysis framework for exhaustively and efficiently mining "range support" patterns from such a data set. On one hand, this framework reduces the loss of information incurred by the binarization-and discretization-based approaches, and on the other, it enables the exhaustive discovery of coherent biclusters. We compared the performance of our frame-work with two standard biclustering algorithms through the eval-uation of the similarity of the cellular functions of the genes con-stituting the patterns/biclusters derived by these algorithms from microarray data. These experiments show that the real-valued pat-terns discovered by our framework are better enriched by small biologically interesting functional classes. Also, through specific examples, we demonstrate the ability of the RAP framework to discover functionally enriched patterns that are not found by the commonly used biclustering algorithm ISA. The source code and data sets used in this paper, as well as the supplementary material, are available at http://www.cs.umn.edu/vk/gaurav/rap.
 H.2.8 [ Information Systems ]: Data Mining; J.3 [ Computer Ap-plications ]: Life and Medical Sciences Algorithms, Experimentation, Measurement Real-valued data, biclustering, association analysis, range support, microarray data, functional modules
A wide variety of data sets, such as microarray gene expression data, earth science data and stock market measures, are real-valued, and several binary data sets have real-valued versions as well, such as reliability scores attached to edges in protein-protein interaction networks and word frequencies in document data sets. These data sets can be represented as a matrix M ,where M ij denotes the value of item j in transaction i . An important type of unsupervised analy-sis performed on such real-valued data sets in several domains, such as biology, is the discovery of biclusters , which are groups of items that show coherent values across a subset of transactions or exam-ples, and thus represent a coherent sub-matrix in M , unlike cluster-ing, where each cluster is discovered using all the transactions. An important example of the utility of biclustering is the discovery of transcription modules from microarray data, which denote groups of genes that show coherent activity only across a subset of all the conditions constituting the data set, and may reveal important in-formation about the regulatory mechanisms operating in a cell [21]. However, since the "coherence" of a bicluster can be defined in sev-eral ways, different formulations of the biclustering problem have been proposed in the literature. F or instance, Figure 1 illustrates a classification of biclusters proposed by Madeira et al [22], partic-ularly in the context of microarray data. They classified different types of biclusters into four categories: (i) constant value biclusters (Figure 1(a)), (ii) constant row (Figure 1(b)) or column biclusters, (iii) biclusters with coherent values, where each row and column is obtained by addition or multiplication of the previous row and column by a constant value (Figure 1(c)), and (iv) biclusters with coherent evolutions, where the direction of change of values is im-portant rather than the coherence of the values (Figure 1(d)). Each of these types of biclusters holds different types of significance for discovering important knowledge from real-valued data sets.
Given the importance of these types of biclusters , a wide variety of algorithms have been developed to find them [22]. Some of the prominent algorithms include ISA [20], SAMBA [37], Cheng and Church X  X  biclustering method [10] (CC), xMotifs [24], CTWC [15], OPSM [5], LCD [29] and co-clustering techniques [13, 32]. Al-though the principles underlying these algorithms hold for a wide variety of real-valued data, most of them algorithms were devel-oped for or tested using the analysis of microarray data [26], par-ticularly to find transcription modules i.e. the groups of genes that are co-expressed under a subset of conditions. Similar biclusters have been found to be useful for other types of data as well, in-cluding genomic data, such as genetic interaction data [29] and model) (d) Coherent evolution biclusters. integrated data sets [36]. Interes tingly, each of these biclustering algorithms can be viewed from a conceptual perspective accord-ing to the classification of biclusters shown in Figure 1. For in-stance, while SAMBA and co-clustering are designed to find con-stant value biclusters shown in Figure 1(a), Cheng and Church X  X  method can naturally find both constant value and constant row or column biclusters (Figure 1(b)). Similarly, xMotifs is meant to find biclusters with constant columns in a gene expression data ma-trix (counterpart of (Figure 1(b)), while OPSM is designed to find coherent trends of up-or down-regulation in biclusters, and thus is suitable for find biclusters like the ones shown in Figure 1(d). However, despite the differences in all these biclustering methods in terms of the type of biclusters they seek, they suffer from some common issues. First, most of the approaches are top-down greedy schemes that start with either all rows and columns, and then iter-atively eliminate them to optimize the objective function [13, 32, 10, 15, 29], or they start with a random initial seed and use heuris-tics to converge to the final bicluster [20, 37, 5]. In either case, the scheme is unable to search the space of all possible biclusters ex-haustively. In particular, small patterns tend to get overshadowed by noise and/or by larger biclusters. Another critical issue with at least some of the biclustering methods is with their inability to identify overlapping biclusters. For instance, while ISA, SAMBA and OPSM can find overlapping biclusters, co-clustering (which is designed to only look for disjoint patterns) and Cheng and Church X  X  method (which masks the identified bicluster with random values in each iteration) find it hard to discover such biclusters.
Interestingly, pattern mining algorithms in association analysis [1, 9, 17] also produce biclusters as their result, since the patterns consist of items that are supported by a set of transaction (For this reason, we will use the terms pattern , itemset and bicluster interchangeably in the rest of this paper.). These algorithms en-able the exhaustive and efficient discovery of all patterns satisfy-ing the specified thresholds, and these patterns can also overlap with each other. However, traditional association analysis algo-rithms can only find constant value biclusters (Figure 1(a)) in bi-nary data. Most common efforts to make these techniques usable for real-valued data include discretization [33, 14, 30], binariza-tion [4, 12, 11, 23], and rank-based transformations [8]. How-ever, these data transformation-based approaches face several chal-lenges in addressing the bicluster discovery problem. Most impor-tantly, since all the real values constituting a data set have been transformed to fixed values apriori, these techniques can not distin-guish between the different types of biclusters shown in Figure 1, which are defined completely on the basis of these real values, and thus can not ensure the discovery of biclusters of a specific type. Similar challenges are faced by the binarization-based biclustering method BiMax proposed by Prelic et al [28]. Some approaches have also been proposed to mine association patterns directly from real-valued data [18, 35, 16]. However, they do not capture some key properties of complex real-valued data sets, such as the distinc-tion between positive and negative values, and the need for values of items in a transaction to be within a range to ensure coherence.
In this paper, we present a novel association pattern discovery framework for data sets where all the attributes are real-valued, i.e. they may take any values in R . This framework is best suited for the type of biclusters shown in Figure 1(b), namely the constant row biclusters, which subsume the constant value biclusters shown in Figure 1(a). The coherence over the rows in these biclusters is ensured using the novel range support measure, an integral compo-nent of our proposed framework, which ensures that the values of the items constituting a meaningful pattern are coherent for a sub-stantial fraction of transactions in the data set. Since this measure is anti-monotonic, it can be used within an Apriori-like framework [1] to exhaustively discover all the constant row patterns, that satisfy the specified constraints in a given data set (It can also be used to produce constant column biclusters by transposing the original data matrix). Thus, on one hand, this framework reduces the loss of information incurred by discretization-and binarization-based approaches, and on the other, it enables the exhaustive discovery of coherent biclusters, which is currently a limitation of the com-monly used biclustering algorithms. We refer to this framework as the RAP (RAnge support Pattern) discovery framework, and the resultant patterns as RAP patterns.

In order to understand the relative effectiveness of our range support-based association analysis methods, we compare RAP X  X  performance with Cheng and Church (2000) X  X  algorithm [10] (CC) and the Iterative Signature Algorithm (ISA) [20] in the context of microarray data analysis. Comparison with CC is natural, since both RAP and CC find constant row biclusters. ISA, which is one of the most widely used biclustering algorithms, is chosen as a rep-resentative of the general class of biclustering algorithms. Thus, comparison against ISA is expected to help indicate the comple-mentarity between biclusters generally found by biclustering tech-niques and specific constant row patterns found using association analysis. To make this study manageable, other algorithms are ex-cluded from this comparison, either because they are focused on biclusters other than constant row biclusters (eg., OPSM), or are known to have poor performance (eg., xMotifs [28]), or find non-overlapping biclusters (eg., co-clustering). The latter algorithms may not be appropriate for biological data, since genes and pro-teins are known to be multi-functional [27].

More specifically, in this comparison, we present experiments based on an objective evaluation measure and functional analysis of patterns and biclusters derived from microarray data. Objective evaluation using the mean squared error (MSE) error shows that the patterns derived using our framework indeed capture the constant row model accurately. In functional analysis, we analyze the abil-ity of RAP patterns for extracting co-expression modules (groups of genes) from microarray data that are also functionally coherent, i.e., contain genes that perform the same function in an organism, as indicated by their enrichment by interesting functional classes in the GO Biological Process ontology [2]. This enrichment is mea-sured as the probability of a group containing the same number of genes as the given pattern having the same or better annotations by a given class by random chance [7], and the lower this probably the more enriched a gene group is with a given functional class. These experiments show that the real-valued patterns discovered by the RAP framework are better enriched by small functional classes, which are considered very interesting for biological analysis [25, 38, 40], than the relatively larger biclusters produced by the CC and ISA algorithms. We also demonstrate the ability of RAP to find novel patterns using specific examples of functionally enriched pat-terns, as well as functions that are covered by patterns discovered by RAP but not by ISA. These results assert the utility of range support patterns as a potential method for discovering novel coher-ent biclusters from real-valued data sets in general, and functional modules from microarray data in particular.

The rest of the paper is organized as follows. We provide a brief overview of the CC and ISA algorithms in Section 2. The concepts related to range support patterns are defined and their properties are discussed in Section 3. Section 4 details the experimental method-ologies adopted for evaluating the efficacy of range support pat-terns, and the results obtained. We present a summary of the find-ings in Section 5, and conclude with the limitations of the proposed framework and possible approaches to address them in Section 6. We discuss the basic principles underlying the CC (Cheng and Church X  X ) and ISA algorithm in this section.
Cheng and Church (2000) [10] proposed a greedy heuristic algo-rithm to find biclusters in a microarray data set that consist of a set of genes having coherent expression values across a set of condi-tions. They use the mean squared error (MSE) measure to capture the coherence of expression levels of a subset of genes across a sub-set of conditions. If I and J are the set of genes and conditions that define the sub-matrix, and a ij is the expression value of i under j th condition, the MSE score is defined as ues in the i th row and the j th column respectively, while a minimum value of MSE, i.e. 0, is attained when all the rows and/or columns of the sub-matrix under consideration have constant val-ues, and thus this measure can be used for identifying constant row/column biclusters. Naturally, constant value biclusters are a special case of these biclusters.

However, since the problem of finding all biclusters having the minimum MSE scores in a given data matrix is NP-hard, CC em-ploys a greedy heuristic algorithm for finding bicluster with low MSE scores. This algorithm works in two stages. In the first stage, genes and conditions that provide the maximum reduction in the current MSE score are sequentially removed, and the remaining set of genes and conditions when the MSE score is less than a user-specified threshold  X  is reported as a bicluster. The entries in the matrix that correspond to this bicluster are then masked by replac-ing them with random values to avoid finding duplicate biclusters. This process is iterated several times until desired number of biclus-ters are found. In the second stage of the algorithm, the genes and conditions deleted earlier are added to each bicluster discovered as Ta b l e 1 : Example table of values for a pa ttern of four items (columns) transaction to RangeSupport . long as the MSE score is still within  X  . Thus, this row/column ad-dition stage uses the original mat rix to add genes or conditions that may belong to another bicluster, to enable the discovery of overlap-ping biclusters.
Ihmels et al proposed the Iterative Signature Algorithm (ISA) [20] for finding biclusters that consist of genes that show significant ex-pression individually, and also a high degree of co-expression with each other over a group of conditions . In this algorithm, two ver-sions of the original microarray data matrix E , normalized across conditions ( E C ) and genes ( E G ) respectively, are maintained. A score for each gene is defined as the average expression (in E the selected conditions, weighted by the condition score. Analo-gously, the condition score is defined as the average expression (in E ) of each selected gene, weighted by the gene score.

The algorithm iterates over two steps. In the first step, a group of genes G 0 is chosen randomly, and a gene score of 1 is assigned to each of them. The conditio n scores for all the conditions are com-puted over these genes, and the conditions whose absolute score is greater than a user specified threshold t c are selected as C second step, the gene scores for all genes are computed over these selected conditions and the genes with gene scores greater than a user specified threshold t g are selected as G 1 . These two steps are repeated until the algorithm converges to a group of genes G that G n = G n  X  1 . Note that the selection of conditions is based on the absolute values of condition scores and the selection of genes is based only on positive gene scores. This ensures that all genes are either significantly positively or negatively expressed for the conditions included in the bicluster.
In this section, we define a theoretical framework for applying association analysis to real-value data. For this purpose, we in-troduce the range support measure that capture different semantics of such data, and prove that it is anti-monotonic. Using this anti-monotonicity, we describe an Apriori algorithm-like framework for efficiently extracting range support patterns from data sets. Note that we assume that all the items in the given data set are homoge-neous in nature, such as genes in a microarray data set.
Much of the work on the design of efficient algorithms for ex-tracting various types of association patterns from binary data is based on the anti-monotonicity property of various measures, such as the support and con f idence of an itemset. Of these, the anti-monotonicity of support is particularly critical, since it enables the pruning of items that do not have a significant support in the data set, and thus avoids the combinatorial explosion in the number of patterns discovered.

In order to enable association pattern discovery from real-valued data, we need to define an appropriate anti-monotonic measure, which can be a challenging task. One possible way to formulate a support measure for deriving association patterns from a real-valued data set is as follows. Assuming that a data set only con-tains positive real values, we define that a transaction supports a pattern if the values of all the items constituting the patterns are within a (user defined) range in the transaction. More formally, given a data set D consisting of a set of transactions T , which con-tains a value V t , a for each item a in each transaction t ,wedefine the range support of a pattern I = { i 1 , i 2 ,..., i k } PositiveRangeSupport ( I )=  X  t  X  T S ( t , I ) ,where
S ( t , I )=
Thus, according to this definition, the contribution of each trans-action to an itemset X  X  range support is measured as the minimum of the values taken by any of the items in the itemset in that trans-action, if the relative range of these values is within a pre-specified threshold  X  . Thus, this measure captures the requirement for the values of the items in an itemset to be coherent, or within a range, across several transactions for a pattern to be considered interest-ing, and can be used to mine interesting patterns from several real-valued data sets, such as document-word tf  X  id f matrices.
However, in the more general case of real-valued data sets that contain both positive and negative values, such as microarray data, it is important to incorporate the requirement of coherence in the sign or parity of the values also to discover meaningful patterns from such data sets. This requirement can be addressed by enforc-ing that a transaction can only contribute to the range support of an itemset if the values of all the items in it are of the same sign. This leads us to define the more general support measure RangeSupport for real-valued data, that is used in our study.
 Formally, given a data set D consisting of a set of transactions T , which contains a value V t , a for each item a in each transaction t , and a range threshold  X  ,the RangeSupport of a real-valued itemset I = { i 1 , i 2 ,..., i k } is defined as RangeSupport ( I )=  X  where RS ( t , I ) is defined as
RS ( t , I )=
Thus, RangeSupport considers the contribution of a transaction towards the support of an itemset as the minimum absolute value of the constituent items in that transaction, if it satisfies the require-ment for RangeSupport and all these values are of the same sign. Table 1 demonstrates an example of the computation of RangeSupport measure for a simple data set. Also, as Theorem 1 shows, this mea-sure is anti-monotonic.
 T HEOREM 1. The RangeSupport measure is anti-monotonic.

P ROOF . See appendix for the proof. The intuition here is that the minimum absolute value of an item in an itemset can only de-crease if another item is added to it, if the new itemset still satisfies the requirements for a transaction to have a non-zero contribution to RangeSupport . Else the contribution is zero.

This anti-monotonicity property of the RangeSupport ,which makes it possible to use it within a standard pattern discovery al-gorithm, such as Apriori [1], to exhaustively discover meaningful range support patterns, which accurately capture the constant row biclusters (Figure 1) that we are interested in finding, from a given real-valued data set.

In conclusion, the RangeSupport measure captures two impor-tant characteristics of real-valued data, namely the range and sign of values of the itemsets in a patterns, that are important for the analysis of several such data sets, particularly microarray data, which is the primary data type we have focused on. To the best of our knowledge, none of the current approaches have combined both these factors for defining an anti-monotonic support measure for pattern mining. For instance, Huang et al  X  X  measure [18] does not take the range of values explic itly into account, while the gener-alized support measure proposed by Steinbach et al [35] focuses on data sets with only positive values. However, we would like to stress here that for data sets of other types, it may be important to define other variants of the RangeSupport measure, but designing those measures is outside the scope of our study.
In the above section, we defined the RangeSupport measure for real-valued data, that tries to ensure the coherence and sign of val-ues in a group of items in a pattern, while maintaining the anti-monotonicity property. Due to this property, it is straightforward to employ this measure within an Apriori-like algorithm [1] for find-ing range support patterns from a data set. In our implementation, we made the pattern search more efficient by representing the set of items and itemsets as a prefix tree [6]. Also, we generated only the closed itemsets [41] as the final output of our pattern discovery algorithm, since they represent a lossless compression of the full set of frequent patterns. We refer this entire framework for min-ing range support patterns from a real-valued data set as the RAP (RAnge support Pattern) framework.

In summary, this section details a complete framework for ef-ficiently computing coherent patterns from a real-valued data set. The patterns that are eventually extracted are named as RAP pat-terns. In the next section on experimental evaluation, we describe how RAP can be used for discovering constant row biclusters in mi-croarray data, and examine its efficacy for discovering functionally enriched modules of genes.
In this section, we present the results of our evaluation of the efficacy of our range support pattern mining technique for finding coherent gene groups from microarray data, and compare these re-sults with those obtained from a similar analysis the CC and ISA biclusters. Our evaluation is based on two major methodologies:  X 
Evaluation using an objective measure of coherence, namely the mean square error (MSE) of the values in a bicluster, as defined by Cheng and Church (2000) [10] and formulated in Equation 1.  X 
Evaluation of biclusters in terms of functional coherence: Since the result of the different pattern discovery techniques applied to microarray data is groups of genes that co-express with each other strongly, and are expected to perform the same (or similar) func-tions in an organism, we evaluate the patterns derived in terms of their functional coherence. We selected the Gene Ontology (GO) Biological Process hierarchy [2] as the source for the functions to be studied, and used the principle of the functional enrichment of a group of genes by these classes [7]. This generates a p  X  which denotes the probability of observing a group of genes of the same size as the one under consideration to be annotated to a certain functional class to the same or greater extent as com-pared to the original group purely by chance [7, 28, 27]. However, since this probability can be influenced by the size of the func-tional class, we only considered the classes containing at least 1 and at most 500 genes from S. cerevisiae as of 27 th January 2009, when these annotations were downloaded from the GO website (www.geneontology.org). 2652 such classes existed as of this date.
Both these evaluations were carried out on Hughes et al  X  X  widely used S. cerevisiae (yeast) microarray data set [19]. This dataset has been prepared by treating yeast cells with different chemical com-pounds and inducing mutations, and is meant to study the functions of yeast genes on a large scale. Its dimensions are 6316 genes conditions, and thus, its large scale nature justifies the use of so-phisticated data mining algorithms for extracting useful knowledge about functions of the c onstituent genes. In our experiments, we applied all the techniques only on the 4684 genes  X  300 conditions subset of this data set, since the other 1632 genes are not included in any of the functional classes we considered, and will affect the en-richment scores of different algorithms adversely. Also, note that all the values in this data set, which denote the log 10 of the ratio of the expression of the corresponding gene under the correspond-ing condition to its expression unde r a control condition, lie in the range [  X  2 , 2 ] , with a substantial fraction lying close to zero, which denotes the inactivity of the corresponding gene under the corre-sponding condition.
 We used the BicAT tool [3] for implementations of the ISA and CC biclustering algorithms, and our own implementation of the RAP framework for the range support pattern discovery algorithms. Also, since the patterns derived by all the algorithms often have a significant overlap with one or more of the other patterns, which is expected to bias their evaluation, we used Prelic et al  X  X  methodol-ogy [28], as implemented in BicAT and also used by others [37, 21], for controlling the redundancy between the patterns. This methodology greedily selects up to 100 biggest patterns (size of pattern=|genes|  X  |conditions| in it) that have an overlap of at most 25% with the current set of selected patterns, starting with the largest pattern output by the algorithm and terminating when all the patterns have been examined, or 100 have been selected. Note that, for this data set, CC generated a selected pattern that included all the genes in the data set, and thus has a poor p-value. To avoid biasing against this pattern, we eliminated this pattern when col-lecting performance statistics for these algorithms.
 We now discuss the results obtained from our evaluation studies. Note that all the figures shown in this section are best viewed in color, and in a size larger than shown here.
Table 2 details various statistics about the biclusters/patterns dis-covered using the RAP, CC and ISA algorithm using various pa-rameter settings. The size range and coverage numbers are com-puted only for the finally selected non-overlapping patterns, since, as mentioned above, only those are used for further analysis. As can be seen, a variety of RAP patterns are produced using different  X  and RangeSupport thresholds. Since almost all of them produced similar results in experiments presented later in this section, we only present results from RAP3 and RAP5, with the former repre-senting a set of patterns derived using tight range (  X  = RangeSupport (8) thresholds, while the latter represents patterns from a relatively loose range (  X  = 1) and high RangeSupport (12) configuration. Also, note that CC produced essentially the same set of biclusters at different thresholds, and thus, only one set of bi-clusters, namely CC1, was used for further analysis. ISA produced a variety of biclusters when its parameters, namely t g , t size of the initial random gene set (|Initial|), are varied, as shown by the corresponding rows in Table 2. However, we observed that the results from biclusters derived using |Initial|=500 were gener-ally better that those derived using |Initial|=100, and they also pro-duced comparable number of selected non-overlapping patterns as the other algorithms. Thus, we only used these sets of biclusters, namely ISA2, ISA4 and ISA6, for our comparative evaluation pre-sented in the following subsections.

Several trends can be observed from Table 2. First, it can be seen that the biclusters produced by ISA and CC generally contain larger number of genes than those found by RAP . This is expected, since ISA and CC adopt a top-down approach and achieve the specified thresholds of their objective functions with larger groups of genes and conditions, while RAP searches for patterns that satisfy the specified thresholds exhaustively, starting from single genes, and progressing in a bottom-up fashion. This variation in size has a sig-nificant impact on the functional classes that these biclusters rep-resent, as discussed in Section 4.3. Another important observation from Table 2 is that CC and ISA biclusters generally cover many more genes than RAP patterns, which again can be explained on the basis of the exhaustive nature of the RAP algorithm. These dif-ferences illustrate the important distinctions between the operation of the traditional biclustering and association analysis algorithms.
Finally, a note about the run time of RAP as compared to other biclustering algorithms, which are provided in the last column of Table 2. For all the parameter settings, some of which produced over 80 , 000 patterns, RAP produced the corresponding patterns within an hour, which is comparable to the ISA runs. On the other hand, CC took over a day for computing its biclusters, thus pro-hibiting its extensive use for large data sets. These numbers show that, despite its exhaustive discovery process, RAP is quite efficient due to the anti-monotonicity of the RangeSupport measure. How-ever, these results should be treated as preliminary, and we believe that the run times of all the algorithms can be improved by using more efficient data structures and better implementations.
With this understanding of the difference between the nature of the resultant biclusters from the different algorithms, we proceed to their evaluation using objective measures and biological func-tional enrichment. Note that the results for each set of patterns are referred to by the title assigned to them in Table 2.
In the first evaluation, we measured the coherence of each bi-cluster using the MSE score defined in Equation 1, and analyzed the distribution of these scores for all the sets of biclusters discov-ered by the different algorithms considered. This score and the corresponding distribution is suitable for testing the coherence of the types of patterns we are aiming to find, namely constant row biclusters, since it can be easily verified that the value of this func-tion for such a bicluster having strictly constant rows will be zero. Thus, the closer the distribution of scores for a set of biclusters is to zero, the closer they are expected to capture the constant row model. These distributions for the biclusters produced by the RAP and CC algorithms are shown in Figure 2(a), and another set for the ISA algorithm at various parameter settings is shown in Figure 2(b) (shown separately due to the difference in the scales of the scores).
The results in Figure 2(a) show that the scores for the range sup-port patterns in RAP3 and RAP5 are almost all zero, with very few outliers. On the other hand, CC1 patterns have a much wider vari-ability of these scores, which is intriguing, as the CC algorithm attempts to discover biclusters that have the least possible MSE scores. Also, it can be seen from Figure 2(b) that the MSE scores for ISA biclusters are generally quite variable, regardless of the pa-rameters used, with almost all of them having higher MSE scores than both RAP and CC biclusters. However, this is not surprising since the objective function that ISA tries to optimize indirectly is not based on the MSE of the bicluster, but instead the inner prod-uct of each included gene X  X  signature row and the module signature of the bicluster. An impact of this is a bias towards higher values in the final bicluster, which can result in a higher MSE even for relatively coherent signatures.

The quantitative results shown in Figures 2(a) and 2(b) can also be qualitatively examined by visualizing individual biclusters pro-duced by these algorithms. For this, we show in Figures 2(c) and 2(d) the sub-matrices of the data set corresponding to the biclusters from CC1 and ISA2 for which the MSE scores (0 . 0024 and 4 . 3843 10  X  4 respectively) are the minimum among their corresponding sets of biclusters. It can be seen from these figures that, despite the low MSE scores of these patterns, neither of them show much coherence in their rows, columns or both. In fact, most of the co-herence in the CC1 bicluster is contributed by entries having almost neutral (close to zero) values in the range [  X  0 . 05 , 0 count for 77 . 9% of all the entries. In contrast, Figure 2(e) shows the sub-matrix of the data set corresponding to the RAP3 pattern that has the highest MSE among all the patterns, and the coherence of the expression of each gene (c olumn) over each condition (row) can be easily observed. This coherence can also be observed for RAP patterns of larger size, such as the pattern of size 7 in RAP3, whose corresponding data sub-matr ix is shown in Figure 2(f). Also, observe that because of the wide range of values constituting these patterns, it is difficult to determine binarization or discretization thresholds apriori for applying binary association analysis meth-ods. Thus, using fixed thresholds for these transformations will lead to this pattern or significant subset of it being missed. In summary, this quantitative and qualitative evaluation using the MSE score illustrates the ability of RAP patterns to find accurate constant row biclusters.
Given the coherence of patterns derived from Hughes et al  X  X  mi-croarray data set in terms of their MSE scores, an interesting ques-tion to ask is whether the co-expression of the genes constituting a pattern translates into a common function for them. This is a valid hypothesis to be tested for such patterns, since the co-expression of a set of genes over several experimental conditions indicates that they are involved in the same cellular or biological process [27]. An effective and standard way of measuring this functional coher-ence ,or enrichment , is to compute a p  X  value for a pattern to be (b) Functional enrichment by small classes (1-30 members) (d) Coverage of small functional classes by biclusters enriched by a given functional class. This p  X  value is essentially the probability of observing a group of random ly selected genes of the same size to be co-members of this class to a higher extent than the gene group under consideration (details in [7]). Thus, the lower this p  X  value , the more functionally enriched this gene group is with this class. Now, given a set of functional classes taken from the Biological Process hierarchy of the Gene Ontology [2], a stan-dard methodology for evaluating the quality of a given set of pat-terns is to determine what fraction of the patterns have a p smaller than a specified threshold for at least one of the functional classes in the consideration set [28, 27]. Using this methodology, we illustrate the efficacy of RAP patterns for the task of discov-ering functionally enriched groups of genes from microarray data, and also compare their performance with biclustering algorithms (CC and ISA), which are the more widely accepted methods for this task. Note that we also performed the analyses described in this section on 100 sets of randomly generated patterns showing the same distribution of sizes and pattern overlap, for each of the sets of biclusters evaluated here, to determine the statistical signif-icance of results obtained. As shown by the results in Figure 1 in the supplementary material, it can be concluded that the results ob-served at lower p  X  value thresholds, particularly less than 0 were the most statistically significant, and hence the most reliable for this evaluation.

Now, in order to perform a fair analysis, it is important to distin-guish between large and small classes in our entire collection of GO BP functional classes, since the size of a class can have an impor-tant impact on the p  X  values computed for the gene group being tested. Using one such definition of small classes as those that have 1  X  30 members, and big classes as those that have 31  X  500 mem-bers, we computed the fraction of selected non-overlapping pat-terns generated by each biclustering algorithm that were enriched by at least one class in each of these categories at p  X  value thresh-olds varying from lenient (0 . 01) to strict (1  X  10  X  5 ). These results are shown in Figures 3(a) and 3(b) for the large and small classes respectively. It can be seen from Figure 3(a) that biclusters from ISA are better enriched with larger classes, which can be explained by their generally larger sizes, which make then more capable of capturing larger classes accurately. Here, RAP patterns are only able to match the performance of the ISA biclusters at relatively weak p  X  value thresholds. However, interestingly, most of the bi-clusters produced by CC do not achieve a significant enrichment with large classes even at moderate p  X  value thresholds, such as 5  X  10  X  3 , because of its tendency to find near-zero biclusters, as discussed in the previous subsection. The same analysis on ran-domly generated patterns also showed the ISA and RAP patterns to be significantly enriched, but not CC patterns.

We also computed the same enrichment statistics for all the sets of biclusters for small functional classes (1  X  30 members). These statistics, shown in Figure 3(b), show that RAP patterns, partic-ularly RAP5, are able to obtain better enrichment than all the ISA and CC biclusters at all the statistically significant p  X  olds, particularly at the strict threshold of 1  X  10  X  5 . This result is very interesting, since recent literature in functional analysis of genomic data [25, 38, 40] has suggested that such small and spe-cific classes are often more interesting for further understanding and exploration than larger and more general classes, an underlying design principle for hierarchical functional classification schemes, such as Gene Ontology [2]. Thus, despite their generally small size, RAP patterns are able to cover several small functional classes quite accurately, which shows the advantages of a bottom-up exhaustive approach for discovering biclusters from genomic data.

The above analysis on enrichment with small classes can be ex-tended to consider other definitions of small classes also, in terms of the maximum number of members in a class for it to be consid-ered small. Figure 3(c) shows the results of the above evaluation at different values of this number in the range of 10  X  50, at the strict and most reliable p  X  value threshold of 1  X  10  X  5 . CC biclusters are not included in this set of results, since they did not produce any significantly enriched patterns at this threshold. It can be seen that for all these sizes, the patterns included in RAP3 and RAP5 are the most enriched among all the sets of patterns, although the results from RAP3 become comparable to the ISA biclusters at 50 and, beyond this class size, the enrichment statistics are expected to favor biclusters from ISA, due to their larger size, and hence a better opportunity to capture a relatively large class. Also, note that the enrichment statistics can be viewed from a complemen-tary perspective, where instead of the patterns, we compute what fraction of all the functional classes considered are captured by at least one pattern at this strict p  X  value threshold. These results are shown for the same range of sizes in Figure 3(d). The trends here are similar to the fraction of patterns enriched case, although the advantage of RAP patterns is lost over ISA biclusters much ear-lier. Still, in summary, range suppor t patterns are quite likely to be useful for exhaustively and efficiently discovering patterns that represent smaller functional classes, and can be used for scientific investigation at a much finer scale than the larger biclusters.
Finally, another benefit of using an approach such as RAP, which adopts a very different pattern discovery algorithm as compared to the more traditional biclustering algorithms such as ISA, is the ability to find finer or completely novel patterns. As an illustration of this, consider the pattern {YAR010C,YBL005W-A,YBR012W-A,YJR026W,YJR028W,YML040W,YMR046C,YMR051C}, which is found among the RAP5 patterns discussed above, but not in ISA4 and ISA6, and is exclusively enriched by the RNA-mediated trans-position class (GO:0032197) with a low p  X  value of 4 . 64 This pattern is not found among the ISA4 and ISA6 biclusters, and among the ISA2 biclusters, it is embedded within a large bicluster consisting of 138 genes. However, GO:0032197 is ranked eighth in the list of functions this pattern is enriched by. Thus, by adopting a bottom-up algorithm, RAP is able to obtain a pattern of finer gran-ularity, which may otherwise be hidden in a larger biclusters found by other algorithms
Similar observations can be made from the functional coverage viewpoint also. For instance, 48 small classes (having less than 30 members) were over-represented in at least one pattern in the RAP5 setatthe p  X  value threshold of 1  X  10  X  5 , but none in the ISA2, ISA4 and ISA6 sets. In particular, one pattern {YDR158W,YER052C, YOR130C,YPR145W} was found to be enriched at this thresh-old for three very small functional classes, namely GO:0009088 (6 members), GO:0009090 (3 members) and GO:0009092 (7 mem-bers). However, this pattern was not found in the ISA6 biclusters, and was embedded within large biclusters of sizes 211 and 104 among ISA4 and a bicluster or size 211 in ISA2. Due to their large sizes, these small classes were not found to be significant for these functions. This is another example of RAP patterns being able to capture very small classes that ISA biclusters are not enriched by.
These examples illustrate the complementarity that RAP can pro-vide to standard biclustering algorithm for domain scientists who are trying to find interesting patterns or biclusters, such as groups of functionally related genes, from their real-valued data sets.
In this paper, we presented an efficient framework named RAP (RAnge support Patterns) for directly mining association patterns from real-valued data sets. This algorithm is based on the novel anti-monotonic range-support measure, which ensures that the val-ues of the attributes constituting a meaningful pattern are coherent for a substantial fraction of transactions in the data set. The pat-terns generated by this algorithm are focused on finding constant row/column biclusters, for which no exhaustive discovery algo-rithm is currently available. On one hand, this framework reduces the loss of information incurred by discretization-and intervalization-based approaches, and on the other, it enables the exhaustive dis-covery of coherent biclusters, which is currently a limitation of the commonly used biclustering algorithms.

We compared the efficacy of the range support patterns discov-ered from microarray data with biclusters produced by Cheng and Church X  X  algorithm for discovering constant row/column biclusters, and ISA, a commonly used biclustering algorithm, using the mean squared error (MSE) coherence measure and their functional en-richment in terms of GO biological process annotations. RAP pat-terns are found to have the lowest MSE scores among all the sets of biclusters evaluated. In terms of functional enrichment also, the RAP patterns are significantly more enriched by small and specific functional classes as compared to the generally larger in size ISA and CC biclusters, thus indicating their potential for making novel biological discoveries, such as the functions of unannotated genes. We also illustrated that RAP can complement standard bicluster-ing algorithms by finding gene groups not discovered and cover-ing functions not captured by the latter. In summary, these results demonstrate the ability of the RAP framework for discovering pre-viously unavailable knowledge from real-valued data sets.
Although the evidence presented in this paper suggests impor-tant utility for ra nge support patterns discovered using the RAP algorithm, there are some limitations that can be addressed using other ideas to enhance this promise significantly. We discuss some of these limitations and possible ideas to address them below:  X 
Size of patterns : Due to the hard range support thresholds im-posed on RAP, some larger patterns that do not satisfy these thresh-olds might be split into smaller ones, thus placing a limit on the size of the patterns produced. Concepts such as colossal patterns [42] for merging the core patterns may be useful for this problem.  X 
Coverage of items : An adverse effect of performing an exhaus-tive search for patterns is the inability to explore the entire itemset lattice in an acceptable amount of time. This limitation can be ad-dressed using ideas such as length-varying support [31] and support envelopes [34], as well as simple heuristics for including currently uncovered items.  X 
Enhancing scalability : An orthogonal direction for addressing the above issues is to design more efficient data structures to en-hance the efficiency of the pattern search process. Ideas from the TAPER algorithm [39] can be explored for improving the efficiency of the computation of item-pairs, which often turns out to be the bottleneck in this process.

In addition to addressing these challenges, an important direc-tion for further research will be to extend the RAP framework to capture constant additive/multiplicative biclusters (Figure 1(c)) and biclusters with constant evolutions (Figure 1(d)). It will also be in-teresting to examine the impact of pre-processing operations, such as normalization and sparsification or denoising, as well as on the quality of the patterns obtained. In the latter operation, one partic-ularly useful study will be a comparison of the relative strengths and weaknesses of RAP and pattern discovery from binarized ver-sions of a real-valued data set, and the development of a hybrid of both these approaches. Finally, an interesting extension of this work will be adapting the RAP framework to data sets where the items are heterogeneous in nature. This work was supported by NSF grant CNS-0551551 and a UMR BICB seed grant. Computing facilities were provided by MSI. Proof of Theorem 1 (Using the same notation as Section 3.1): Let I be an itemset, and I be another itemset, where I = I x is an item that is not included in I . Then, for a transaction t the computation of RS ( t , I ) can be broken down into the following cases:  X 
The items in I have different signs in t : In this case, RS Also, RS ( t , I )  X  0. Thus, RS ( t , I )  X  RS ( t , I )  X 
The items in I havethesamesignin t : Two sub-cases may occur here: If ( max i  X  I V t , i  X  min i  X  I V t , i ) &gt;  X  ( 0, and as in the previous case, RS ( t , I )  X  RS ( t , I RS ( t , I )= min we get RS ( t , I )  X  RS ( t , I ) .
 Thus,  X  t  X  T , RS ( t , I )  X  RS ( t , I ) , and thus, This proves that RangeSupport is anti-monotonic.
