 Rece n t ly, the  X  c lo ud  X  has attracted c on s i derab l e atte n t ion s in h i gh perf o rma n ce a n dsca l ab l ed i str i buted s y stems research .In these s y stems , a l arge n umber o f ser v ers are lin ed up a n d wo rk in para ll e l. M a ny d i str i buted e x ecut ion frame -wo rks ha v ebee n pr o p o sed ,inw h i ch ,M ap -Reduce [ 2 ]i s on e o fthem o st fam o us frame wo rks in these wo rks .T here are n umer o us academ i ca n dc o mmerc i a li m -p l eme n tat ion s o f M ap -Reduce frame wo rk because i t off ers a s i mp l e , fu n ct ion a l in terface that tra n spare n t ly e x ecutes the c o mputat ion s wi th a g oo ds y stem sca l ab ili t y.

T he m o st p o pu l ar a n d pub li ca v a il ab l e M ap -Reduce based pr oj ect i s H ad oo p [ 8 ], a no pe n s o urce v ers ion u n der de v e lo pme n tb yA pache So ft w are Fo u n dat ion. I ts c o re c o mp on e n ts in c l ude a ni mp l eme n tat ion o f M ap -Reduce ,wi th a pr i mar y st o rage s y stem ca ll ed  X  X  ad oo p Di str i buted Fil e Sy stem (HDFS) X  t o pr ovi de ac on ceptua lly s i mp l epr o gramm in gm o de l a n dabstracta w a y a ny k nowl edge o f w here the data liv es .T heref o re ,H ad oo phasbee nwi de ly used in b o th c o mmerc i a l a n dacadem i c wo r l d , a n dsh ow sh i gh perf o rma n ce in ma ny para ll e l pr o cess in g tasks [9], [10].

O n the o ther ha n d , ma ny data access meth o ds in para ll e l databases [3], [ 4 ], [5], are o ther ch oi ces f o rdatapr o cess in g on the  X  c lo ud  X . B es i des the c on tr i but ion s made b y a l m o st a ll the fam o us database v e n d o rs that are attracted in para ll e l databases ov er the past t wo decades , ma ny on g oin gacadem i cpr oj ects are a l s o e n gaged t o pr ovi de better perf o rma n ce , sca l ab ili t y a n dfa il ure t ol era n ce para ll e l database s y stems [11], [1 2 ], [13], [1 4 ]. Al th o ugh the para ll e l database a n d M ap -Reduce based s y stems ma y seem t o target d iff ere n tapp li cat ion s ,i t i s in fact p o ss i b l et ow r i te the para ll e l pr o cess in gtasksf o ra l m o st a ll the app li cat ion s wi th M ap -Reduce jo bs o r database quer i es wi th these t wo s y stems ,in d ivi dua lly [15]. T heref o re ,i t i smea nin gfu l t o ha v es o me c o mpar i s on sbet w ee n these t wo s y stems f o r the users in f o rmat ion.

In add i t ion, in m o st rece n t ly, there i sa n e w tre n ds in the para ll e l pr o cess in g s y stem w h i ch tr i es t o bu il dah y br i ds y stem based on M ap -Reduce frame wo rk a n d P ara ll e lDBMS t o a llow better c o de reusab ili t y, data in depe n de n ce a n d aut o mat i cquer yo pt i m i zat ion [15]. How e v er , a l m o st a ll the f o reru nn ers d ono t ach i e v etheperf o rma n ce o fpara ll e l databases as w e ll as the sca l ab ili t y, fau l t t ol era n ce o f M apReduce -based s y stems . O n e o fthereas on s i sthed iff ere n tthe st o rage l a y ers , the HDFS l a y er o r DBMS l a y er , the y ad o pted .B ecause these st o rage l a y ers ha v ed iff ere n tperf o rma n ce in st o r in gd iff ere n ts i ze o fdata ,i t seems in terest in ga n d n ecessar y t o c o mpare these t wo bas i cs y stems in d iff ere n t fi l e I/ Oapp li cat ion s , a n dth i sc o mpar i s on resu l ts ma y be referred in the des i g n o f future h y br i d M ap -Reduce /DBMS s y stems .

T he purp o se o fth i spaper i st o sh ow the d iff ere n t I/ Operf o rma n ce o f H ad oo p in the app li cat ion s o fd iff ere n tfi l es i zes , espec i a lly f o rthesma ll fi l e I/ Ocase .W e c o mpare the t i me c on sumed b yH ad oo pa n dapara ll e lDBMSinini t i a li z in ga n d access in ga ll the i rdata ,in d ivi dua lly. T he ov erhead f o r access in gfi l es in H ad oo p i sthe n d i scussed .In add i t ion, apara ll e l database s y stem based on F at -B tree in de x[5]i s in tr o duced a n dused in th i sc o mpar i s on, w h o se better sca l ab ili t y a n da v a il ab ili t y tha n the H ad oo p  X  sarea l s o sh own thr o ugh the e x per i me n ts a n d d i scuss ion.

T he rest o f the paper i s o rga ni zed as f ollow s :Fi rst ly, w eprese n tbackgr o u n d wo rk in S ect ion 2 .T he nw e o ut lin ethed iff ere n tma in ta in c o st in H ad oo pa n d para ll e lDBMS fr o march i tecture perspect iv e in S ect ion3.InS ect ion 4 w edem on-strate a n da n a ly ze the d iff ere n tperf o rma n ce in H ad oo pa n dpara ll e lDBMSin d iff ere n tfi l e I/ Oapp li cat ion sthr o ugh e x per i me n ta l resu l ts .Fin a lly, w eprese n t re l ated wo rk in S ect ion 5 a n dc on c l ude o ur wo rk in S ect ion 6. 2.1 Map-Reduce M ap -Reduce m o de l(Fi g .1) c on s i sts t wo ma in fu n ct ion s , ca ll ed M ap a n d Reduce .
In the  X  X  ap  X  fu n ct ion, the master no de reads a set o f  X  rec o rds  X , ch o ps i tup in t o sma ll er in termed i ate rec o rds in af o rm o f n e w( ke y, v a l ue ) pa i rs , dur in gth i s pr o cess , a  X  sp li t  X  hash fu n ct ion part i t ion stherec o rds in t o Rd i s join t buckets . Each map bucket i s w r i tte n t o the pr o cess in g no de  X  sd i sk wi th these R o utput fi l es .Sin ce each map in sta n ce i sass i g n ed a d i st in ct p o rt ion o f in put  X  rec o rds  X  b y the schedu l er , the t o ta lin termed i ate fi l es created in th i spr o cess i s M *R , i fthereare M such d i st in ct p o rt ion s .T he n,  X  Reduce  X  fu n ct ion tra n sferred the in termed i ate fi l es ov er n et wo rk fr o mthe M ap no de  X  s lo ca l d i sks t oin d ivi dua l reducers ,w h i ch i sca ll ed  X  shu ffl e  X . No te that a ll the in termed i ate rec o rds wi th the same hash v a l ues are se n d in t o the same reducer a n deachreducerpr o cesses o rc o mb in es the rec o rds in t o the fi n a lo utput fi l e .

T he ad v a n tage o fthe M ap -Reduce i s that the para ll e l a n dd i str i buted pr o-cesses are actuated aut o mat i ca lly j ust b y ca llin gthe MAP a n d Reduce o perat ion s pr ovi ded wi th in th i sm o de l. O n the c on trar y para ll e lDBMS sma y requ i re the i r pr o grammers t o part i c i pate in t o th i spr o cess ,li ke pr ovi d in gthe M ap a n d Reduce pr o cessers wi th U ser D efi n ed F u n ct ion sa n d aggregat ion o perat ion s in DBMS. 2.2 Hadoop w h i ch has t wo ma in c o mp on e n ts : afree ly a v a il ab l e i mp l eme n tat ion o f M ap -Reduce frame wo rk a n da H ad oo p Di str i buted Fil e Sy stem (HDFS) [ 8 ].

HDFS i sad i str i buted fi l es y stem w h i ch i ssu i tab l ef o rd i str i buted pr o cess in g on c o mm o d i t y hard w are .I trep li cas the datasets on mu l t i p l e no des t o make the data a v a il ab l ee v e n there i safa il ure o f no des .T here are t wo k in ds o f no des in HDFS: a metadata ser v er ca ll ed N ame no de a n da l arge n umber o fdatast o rage no des ca ll ed D ata no de .T he N ame no de i s in charge o fa ll metadata a n ds y stem act ion sdata wi th in the HDFS. T he D ata no de i s in charge o fa ll read /w r i te a n d data rep li cat ion requests acc o rd in gt o the d i rect ion fr o m N ame no de .B ecause there i s only on e N ame no de in H ad oo pa n d i t keeps a ll the metadata in ma in mem o r y, i tappearst o be the b o tt l e n eck f o rha n d lin g metadata requests in the app li cat ion s , espec i a lly f o rtheapp li cat ion s on sma ll fi l es [16]. In add i t ion, th i s cr i t i ca lN ame no de in tr o duces a nSP O F(Sin g l e Poin t o f F a il ure )o fthes y stem , w h i ch i s no teas y t o rem ov e [ 24 ]. 2.3 Fat-Btree T he F at -B tree i sak in d o fpara ll e lB-tree structure ,w h i ch i spr o p o sed t o pr ovi de d yn am i cdatama n ageme n t , h i gh thr o ughput a n deffic i e n tske w ha n d lin g [5].
A ssh own in Fi g . 2 , the l eaf pages o f the para ll e lB-tree are d i str i buted am on g the  X  X  r o cess E l eme n ts  X (P Es ). Each P E has a subtree o fthe w h ol e B-tree c on-ta inin gther oo t no de a n d in termed i ate in de xno des bet w ee n the r oo t no de a n d l eaf no des a llo cated t o that P E .In the F at -B tree structure ,in de xno des c lo se t o the r oo t no de ha v emu l t i p l ec o p i es but wi th a re l at iv e ly low update freque n c y, on the o ther ha n d ,l eaf no des ha v eare l at iv e ly h i gh update freque n c y but are no t dup li cated .T hus ,no des wi th h i gher update freque n c i es ha v e low er s yn chr oni za -t ion ov erhead .T heref o re , the ma in ta in c o st in F at -B tree i smuch low er tha n the o rd in ar y para ll e lB tree structure , such as C o p y-W h ol e -B tree a n d Sin g l e -In de x-B tree [5]. W eha v epr o p o sed a para ll e l database s y stem based on th i s F at -B tree in de xin[ 2 0].
 In th i s sect ion, w ed i scuss s o me o fthes y stem o perat ion c o st in H ad oo pa n d F at -B tree DBMS.

In H ad oo parch i tecture ,M ap -Reduce m o de loff ers a s i mp l e , fu n ct ion a lin ter -face f o rd i str i buted pr o cess in g ,w h il e HDFS pr ovi des a re li ab l e , shared vi rtua l st o rage de vi ce .

HDFS st o res the datasets a n da ll the in termed i ate resu l ts w h i ch are ge n erated dur in g M ap -Reduce pr o cesses acr o ss mu l t i p l e no des .In add i t ion, HDFS ca nno t be d i rect ly m o u n ted on a n e xi st in g o perat in gs y stem ,li ke G oo g l e Fil e Sy stem ( G FS), data n eeds t o be lo aded in t oHDFS bef o re a n d after each e x ecut ion in H ad oo p .T h i sca n be v er y t i me c on sum in ga n d w e will e x am in eth i s in the n e x t sect ion. Mo re ov er , the HDFS st o re the fi l es in each in d ivi dua l X  X lo ck  X , thus i t n eeds t o d ivi de o ru ni te the fi l es a n dfu l fi ll the  X  X lo ck  X  X  h i ch i s 6 4 MB b y de -fau l t .T heref o re , e x tra metadata will be ge n erated in the N ame no de .T h i sspace ut ili zat ion i s determ in ed b y three space requ i reme n t : metadata o fd i rect o r i es , fi l es a n db lo cks .In the HDFS w h i ch has 6 4users : Di rect o r y e n tr y f ollow sthef o rmu l aas : 1 44 By tes + the l e n gth o fthed i rect o r yn ame ; Fil ee n tr y f ollow sthef o rmu l aas : 11 2 By tes + the l e n gth o fthefi l e n ame ; Blo ck f ollow sthef o rmu l aas : 11 2 By tes + 24 By tes * N umber o frep li cas ;
In th i spaper ,w e assume that the d i rect o r yn ame i s in a n a v erage l e n gth o f 16 characters , the fi l e n ame i s in a n a v erage l e n gth o f 13 characters , the n umber o frep li cas i s2 in the s y stem .T he b lo ck s i ze i s the defau l t v a l ue o f 6 4 MB. T ab l e 1 sh ow s the metadata s i ze f o rf o ur d iff ere n tfi l es i ze app li cat ion s in w h i ch data vol ume i ssameas 1 G By tes .A s i tsh ow s , the metadata s i ze will in crease t o gether wi th the n umber o ffi l es o rthet o ta l fi l es i ze .

O n the o ther ha n d ,M ap -Reduce m o de l requ i res the N ame no de t o keep a ll the metadata in ma in mem o r y s in ce the y are regu l ar ly accessed .How e v er , t oo ma ny o f these sma ll fi l es will e x ceed the address in g capac i t ywi th in th i s no de a n dth o se sma ll fi l e I/ Os ca nfloo dthe n et wo rk in g n ear N ame no de , e v e n tua lly. T hus ,i tpre v e n ts the perf o rma n ce o fthes y stem a n d l ea v es the rema inin gst o rage capac i t y u n ut ili zed .Mo re ov er ,H ad oo phast o start n e w pr o cess f o re v er y map task .T hese start -up pr o cesses will o ccup y agreatp o rt ion o ft i me f o rthesma ll fi l e I/ Oapp li cat ion w h o se e x ecut ion t i me o f each task i sre l at iv e ly sh o rt .In add i t ion, the D ata no des in H ad oo pma y ha v e l arge states t o checkp oin t , the y c on te n df o r d i sk a n d n et wo rk ba n d wi dth res o urces , s lowin gd own in d ivi dua l checkp oin ts .
W h il ef o rthe F at -B tree database , the metadata n eeded t o be st o red f o reach tup l eare li m i ted .D ur in g data access in gpr o cess , the in de x pages are requ i red only f o r lo cat in gthe l eaf pages st o red in each P E .T heref o re ,i thasah i gh cache h i trate i fthe in de x pages are cached in each P E .B ecause o fth i sh i gh cache h i tratea n d low ma in ta in c o st (S ect ion 2 .3), se l ect a n dupdatepr o cesses in F at -B tree are much faster tha no ther c onv e n t ion a l para ll e lB-tree structures [5]. In add i t ion, the DBMS i sab l et o ach i e v eh i gh perf o rma n ce b y us in gthe in de x t o acce l erate join o perat ion s .

Sin ce there i satrade -off in H ad oo p w h oin her i ts the features o fh i gh sca l ab ili t y a n dperf o rma n ce fr o m M ap -Reduce w h il ec on ta in s the dra w backs me n t ion ed ab ov e ,w e wo u l d li ke t o e v a l uate H ad oo pperf o rma n ce u n der d iff ere n tfi l e I/ O app li cat ion sa n dc o mpare i t wi th a para ll e l database i mp l eme n ted wi th the o pe n s o urce DBMS Po stgres a n dthe F at -B tree in de x[ 2 0]. In th i s sect ion w e descr i be the e x per i me n ts o f H ad oo pa n d o ur F at -B tree database . W ef o cus on e v a l uat in gdata lo ad (ini t i a li ze ) t i me a n d data access in gt i me , as w e ll as s y stem sca l ab ili t y. 4.1 Environmental Setup Fo r o ur e x per i me n ts ,w eusedac l uster o fupt o3 2 no des .T ab l e2sh ow s o ur e x per i me n ta l e nvi r on me n t .

All the no des ru n the H ad oo p v ers ion 0. 2 0.1 on JDK 1.6.0, a n d w edep loy the s y stem wi th the defau l tc on figurat ion sett in gs , e x cept f o rcha n g in gtherep li cas n umber t o1w h i ch i s the same as that in F at -B tree database s o as t o c o mpare wi th i t l ater .W ed ono tusemu l t i p l erep li cas because w ef o cus on the fi l e I/ O perf o rma n ce in H ad oo phere .In add i t ion, w eusea nin d ivi dua lno de as the N ame no de in the e x per i me n ts t o e n sure that the perf o rma n ce o f D ata no des will no tbea ff ected . 4.2 Data Load Performance In th i se x per i me n t ,w e lo ad the same datasets as sh own in TABL E 1, fr o mthe no de  X  s lo ca l d i sk in t o each s y stem  X  s in ter n a l st o rage t o stud y the i rperf o rma n ce b y e x am inin gthet i me i ttakes .Al th o ugh H ad oo phasbee n des i g n ed t o ru non a v er yl arge n umber o f no des , the D ata no de n umber in o ur e x per i me n ts i s only up t o3 2 no des .T h i s i s because b yo ur o bser v at ion s , th i ss o ft w are i st y p i ca lly used wi th s i g ni fica n t ly l ess in sta n ces in curre n tc o mputat ion c lo uds .Fo re x amp l e , A maz on li m i ts the n umber o f no des f o rthe i r H ad oo papp li cat ion t o 2 0 u nl ess the respect iv ecust o mer passes a n e x te n ded reg i strat ion request [ 2 6].
W efirstusethedataset -{ a , b , c , d , e } in th i se x per i me n tt olo ad HDFS b y the c o mma n d -lin eut ili t y pr ovi de in H ad oo p .T he fi l es in these datasets are in p l a in te x tma nn er t o e n ab l e  X  X o rdc o u n t  X  fu n ct ion a v a il ab l e in l ater e x per i me n ts .
Fi g .3 sh ow s the data lo ad perf o rma n ce o f lo ad in gthesame vol ume o f dataset -1 G B. T he data lo ad in gt i me i s no tsamefr o meach o ther i fthes i ze per each fi l e i sd iff ere n t .T he t i me requ i red f o r dataset -{ a , b , c } are a l m o st same .T he li tt l e d iff ere n ce ma yli e in the d iff ere n tfi l esp li ta n dc o mb in at ion c o st w he n fi ll the data in t o b lo cks .Fo r the dataset -{ d , e } H ad oo pc on sumed much l arger t i me .T h i s reas on ma y be that H ad oo pf o rces each task t o ru nin a nin d ivi dua l pr o cess , thus each task has t o red o the same ini t i a li zat ion in i ts pr o cess .W he n the fi l e n umber i s in creas in g , the pr o cess start -up ov erhead will s oon c o me t o be u n-i g no rab l e .
Now, w e use dataset -{ f , g , h } , asma ll fi l e dataset t o make a c o mpar i s on bet w ee nH ad oo pa n d F at -B tree database in the data lo ad e x per i me n t .
 In th i se x per i me n t ,F at -B tree DBMS lo ads the data b y e x ecut in gthe L O AD S Q L c o mma n dseque n t i a lly fr o m on e no de .T he n the F at -B tree e v e nly d i str i butes these tup l es acr o ss the c l uster aut o mat i ca lly. T he tup l es w h i ch are in serted in t o F at -B tree DBMS c on ta in the same c on te n tasthesma ll fi l es that lo aded in t o H ad oo p .Fi g4sh ow sthet i me n eeded t olo ad the same vol ume o f datasets b o th in H ad oo pa n d F at -B tree DBMS. A s i tsh ow s , the data lo ad t i me i s in creased w he n the in d ivi dua l data s i ze i s decreas in g in b o th s y stems .No te that w he n the data ( fi l e / tup l e ) s i ze i s l arger tha n 100K, the lo ad t i me in b o th H ad oo pa n d F at -B tree DBMS d ono tgr ow o b vio us ly, because a great p o rt ion o fc o st in w r i t in g on ep i ece o fdata i sthefi l e I/ Oc o st .How e v er ,w he n the data s i ze bec o mes sma ll er ,w h i ch mea n sthefi l e I/ Oc o st in each pr o cess decreased , the e x tra c o st tur n st o be d o m in ate .T heref o re , the lo ad t i me in H ad oo ps oon ov erc o mes that in F at -B tree DBMS because the H ad oo phasa l arger pr o cess ini t i a li zat ion, data c o mb in at ion a n d metadata ma n ageme n tc o sts in st o r in gthesame vol ume o f data ,w h il ethesee x tra c o sts ma y be u no b vio us in the para ll e l databases ,w h i ch ha v e o pt i m i zed a n ds o ph i st i cated pr o cess a n dst o rage ma n ageme n tmeth o ds .
In ash o rt c on c l us ion, t olo ad the dataset fr o m lo ca l d i sk in t oH ad oo p  X  s vi rtua l d i sk ,lo ts o fdata in put / sp li ttasks will be l au n ched as se v era lin d ivi dua l pr o-cesses .I fthe in put fi l e i s in asma ll s i ze ( e . g .l ess tha n 50K in th i se x per i me n ta l e nvi r on me n t ), the lo ad perf o rma n ce o f H ad oo p will decrease dramat i ca lly, a n d u n derperf o rm the F at -B tree DBMS. 4.3 Data Access Performance Now, w estud y the data access perf o rma n ce o f H ad oo p ,in c l ud in gthethr o ughput a n dsca l ab ili t y, a n dmakeac o mpar i s on wi th F at -B tree DBMS.
 Fi rst ly, w em o d i f y the dem on strat ion M ap -Reduce pr o gram  X  X o rdc o u n t  X  X n H ad oo ps o urce c o de .To test H ad oo p I/ Operf o rma n ce :T he M ap fu n ct ion in  X  X o rdc o u n t  X  X  sm o d i fied t o read a ll the wo rds in the sma ll fi l es on HDFS a n d w r i te rec o rd o feach wo rd in t o a no utput fi l easthe ( ke y, 1) pa i rs , there i s no ca l cu l at ion fu n ct ioninM ap t o get the summar yo feach wo rd  X  sappeara n ce t i mes .An dthe n, w erem ov e the Reduce fu n ct ion in the pr o gram , thus the o utput ge n erated b y each M ap in sta n ce i sthefi n a lo utput o f the pr o gram . Our purp o se o fthesem o d i ficat ion s i st o get the t i me requ i red b yH ad oo pt o read a n d w r i te e v er ywo rd in a ll the fi l es in HDFS w h il ee li m in ate the e x tra c o st o fca l cu l at in g , gr o up in ga n dshu fflin g .T hus the e x ecut ion t i me o fth i spr o gram i sma inly the t i me f o rthefi l e I/ Opr o cess in H ad oo p , the nw eca n c o mpare th i st i me wi th that requ i red b y the F at -B tree DBMS.
 O n the o ther ha n d ,w eusethe S Q L C o mma n d li ke :S E L EC T * F RO MTABL E WH ERE ID ==  X  X  X ; t o fetch a ll the c on te n ts fr o mthetup l es in F at -B tree DBMS a n dusethe S Q L C o mma n d li ke :UPDAT E TABL E S E TT E XT =  X  X T R IN G  X  WH ERE ID ==  X  X  X  t oov er w r i te the same data . Each no de has 4 c li e n t threads t o e x ecute these c o mma n ds in para ll e l t o read a n d w r i te a ll the data in the database .

A ssh own in Fi gure 5, H ad oo ptakesse v era l h o urs t o fi ni sh the  X  X o rdc o u n t  X  tra n sact ion, w h il e F at -B tree o utperf o rms H ad oo pb y afact o rab o ut 4 00, w h i ch only n eeds se v era l m in utes t o read a n d w r i te a ll the data .T h i s i s because the start -up c o sts f o rthesma ll fi l e I/ Oapp li cat ion sared o m in ated in the e x ecut ion t i me . O n a v erage , each task in H ad oo p n eeds ab o ut 2 0 sec on ds t o start a n dru n at fu ll speed .
 In add i t ion, Fi g .5 a l s o sh ow sthed iff ere n tsca l ab ili t i es o f H ad oo pa n d F at -B tree s y stems .W efi n dthat w he n the no de n umber i s in creased b y t wi ce fr o m 8t o3 2 , the sca l ab ili t yo f H ad oo pdec lin es fr o m 96% t o 8 5% c o mpared t o that o f F at -B tree w h i ch only decreases s li ght ly. T h i s i s because H ad oo pusethe jo b tracker t o c oo rd in ate D ata no de act ivi t i es , a n d i ts ov erhead will in crease as m o re no des are added in t o the s y stem .How e v er ,F at -B tree DBMS d o es no tc on ta in these ce n tered no des , thus the p o te n t i a l b o tt l e n ecks are e li m in ated fr o mthe s y stem .T he reas on f o rthes li ght dec lin ema y be the ra i se o fc o mmu ni cat ion c o st wi th in the F at -B tree w he n the no de n umber in creas in g .

In ash o rt c on c l us ion, f o rthesma ll fi l e I/ Oapp li cat ion s ,H ad oo p  X  sperf o r -ma n ce decreased dramat i ca lly because the ov erhead in pr o cess start -up .I tma y cause e v er y task t ow a i t2 0 sec on ds on a v erage bef o re the y are e x ecuted in fu ll speed . O n the o ther ha n d ,F at -B tree DBMS d o es no tsu ff er th i spr o b l em a n d ach i e v e a better sca l ab ili t y. A sa no pe n s o urce s o ft w are w h i ch i mp l eme n ts a frame wo rk o f M ap -Reduce , H ad oo phasbee n embraced b ylo ts o fdata -in te n s iv ed i str i buted app li cat ion s b o th in c o mmerc i a l a n dacadem i cs o c i et i es .How e v er ,H ad oo p seems only t o be ab l et o ru nl arge -sca l ea n a ly ses on b i gdata .Al m o st a ll the app li cat ion sad o pt H ad oo pe n g in ef o rthec o mputat ion on huge datasets [1 7 ], [1 8 ], because the perf o rma n ce f o rtheapp li cat ion on sma ll o rm i dd l es i ze dataset in H ad oo p i s no t as attract iv eas DBMS. A lo t o f researches that f o cus on these pr o b l ems ha v e bee n pr o p o sed .Fo r in sta n ce ,[19]o pt i m i zes the H ad oo p in i ts bra n ch pr oj ect o f HPM R ,w h i ch f o cuses on cutt in g off the c o st in the  X  Reduce  X  pr o cess wi th the Hi gh P erf o rma n ce M ap -Reduce E n g in e .[1 7 ] pr o p o ses a meth o dt o reduce the metadata f o rthesma ll fi l es in H ad oo pb y c o mpress in gthesma ll data w h i ch has s o me k in d o fsema n t i cre l at ion s in the spec i fic app li cat ion st o gether .In [1], the sma ll fi l e metadata pr o b l em i ss li ght ly addressed in the o r i g in a lw eb i mp l eme n tat ion o f H ad oo p .How e v er , there seem no e ff ect iv es ol ut ion s in these f o rmer researches f o r i mpr ovin gthesma ll fi l e I/ Operf o rma n ce in H ad oo pas d i scussed in th i spaper .

T heref o re , rece n t researches ,w h i ch use H ad oo pas i ts e x ecut ion e n g in e , ad o pt a li ght database s y stem in t o the s y stem f o r o rga ni zat ion the in termed i ate resu l ts a n dtr i a l datasets , as in [ 2 1], [ 22 ], [ 2 3], [ 2 5]. T hese s y stems tr y t o br in g M ap -Reduce i deas t o gether wi th DBMS s y stem a n da i mt oin tegrate dec l arat iv equer y c on structs fr o m the database c o mmu ni t yin t oM apReduce -li ke s o ft w are t o a llow better c o de reusab ili t y, data in depe n de n ce a n daut o mat i cquer yo pt i m i zat ion. Diff ere n tfr o mab ov e in terface l e v e l s ol ut ion s ,H ad oo p DB [6] in tegrates H ad oo p wi th Po stgres in s y stems -l e v e l, w h i ch ma y be the first pract i ce that bu il ds a rea l h y br i ds y stem o f M ap -Reduce a n d P ara ll e lDBMS.W hat i sm o re , th i sk in d o f h y br i d M ap -Reduce /DBMS s y stem i s loo ked up on as a no pt i ma l s ol ut ion f o r para ll e l pr o cess in gs y stems in rece n t future [15].

How e v er ,H ad oo p DB d o es no t in ge n era l match the perf o rma n ce o fpara ll e l database s y stems espec i a lly in data se l ect ion. Sin ce H ad oo p DB use the databases t o st o re a ll the data s o urces s i m il ar t o data b lo cks in HDFS, the l arge s i ze o f data used in [6] ma y be on e o fthereas on sthath in ders the data access effic i e n c y o f H ad oo p DB. T heref o re ,i t i s v er yi mp o rta n tt o ch oo se the better st o rage l a y er , database o r HDFS l a y er , d yn am i ca lly in the future h y br i d M ap -Reduce /DBMS s y stems t o st o re the fi l es in the app li cat ion s .To make th i sdec i s ion, the c o mpar -i s on bet w ee nH ad oo pa n dpara ll e lDBMSin the i rfi l e I/ Operf o rma n ce on the datasets o fd iff ere n tdatas i ze i s n eeded f o rthefutures y stem des i g nin f o rmat ion.
A s far as w ek now, there seems no f o rmer wo rk that g iv es the c o mpar i s on. In rece n t ly, there i sas i m il ar c o mpar i s on wo rk as o urs [ 7 ], w h i ch c o mpares H ad oo p wi th o ther t wo para ll e lDBMS s i spr o p o sed .How e v er , the y f o cus on the a n a ly ses o fd iff ere n tst o rage mecha ni sm ( r ow-based / c ol um n based ) a n d aggregat ion per -f o rma n ce in the v ert i ca l/ h o r i z on ta l part i t ion DBMS wi th H ad oo p .In add i t ion, the s i ze o f in d ivi dua l data used in the i re x per i me n ta l datasets i smuch l arger tha n that o f o urs .W hat i sm o re , the tra n d i t ion a l hash a n dc l ustered in de x used in these para ll e lDBMS sma y h in der the database s y stems sca l ab ili t y. No te that the data lo ad perf o rma n ce e x per i me n tresu l t i she n ce d iff ere n t wi th o urs ; the sca l ab ili t y c o mpar i s on resu l tbet w ee no ur para ll e lDBMS a n d H ad oo p i sa l s o d iff ere n tfr o mthatdec l ared in [ 7 ]. In th i spaper ,w ef o cus on c o mpar in gthe H ad oo p ,w h i ch i sa ni mp l eme n tat ion o fmap -reduce parad i gm ,wi th a para ll e l database s y stem that w as de v e lo ped ear li er at To k yo In st i tute o f T ech nolo g y. W eha v etake n e i ght d iff ere n t datasets t o e x am in e the data lo ad in g , access in ga n dm o d i ficat ion c o st o ftheset wo s y stem espec i a lly f o rsma ll fi l e I/ O .T hese c o mpar i s on resu l ts c o u l dbea no te f o rthe in f o rmat ion o f future h y br i d M ap -Reduce a n d P ara ll e lDBMS des i g n.
Our resu l ts sh ow that ,H ad oo phass i g ni fica n t ov erheads due t o task ini t i a l-i zat ion; the N ame no de appears as the b o tt l e n eck w he n the s y stem sca l es up , espec i a lly f o rha n d lin gthesma ll fi l es . Our para ll e lDBMS sh ow s i ts h i gher per -f o rma n ce ,ov er a fact o r o f4 00 in the sma ll fi l e I/ Operf o rma n ce , a n dsh ow s i ts better sca l ab ili t y tha n that o f H ad oo p .No te that s o me o fthes y stem features in b o th H ad oo pa n d DBMS are no lon ger the same as the y used t o be in f o rmer researches w h i ch ma inly c on s i dered the data in l arge fi l es i ze .A sthere i sagreat c on trast in fi l e I/ Operf o rma n ce o f H ad oo pa n dpara ll e lDBMSw he n ha n d lin g the sma ll s i ze o fdata , a fl e xi b l est o rage l a y ers mecha ni sm sh o u l dbec on s i dered in the des i g no fthefutureh y br i d M ap -Reduce /DBMS s y stems .
 T h i s research w as supp o rted in part b yM E XT Gra n t -in-Ai df o r S c i e n t i fic Re -search on P r io r i t yA reas (# 2 101301 7 ).

