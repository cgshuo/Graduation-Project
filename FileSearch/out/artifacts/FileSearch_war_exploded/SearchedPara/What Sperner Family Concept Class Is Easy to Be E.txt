 We study the problem of enumerating concepts in a Sperner family concept class using subconcept queries [7], which is a general problem including maximal frequent itemset mining as its instance. Though even the theoreti-cally best known algorithm needs quasi-polynomial time to solve this problem in the worst case, there exist practically fast algorithms for this problem. This is because many in-stances of this problem in real world have low complexity in some measures. In this paper, we characterize the complex-ity of Sperner family concept class by the VC dimension of its intersection closure and its characteristic dimension , and analyze the worst case time complexity on the enumeration problem of its concepts in terms of the VC dimension. We also showed that the VC dimension of real data used in data mining is actually small by calculating the VC dimension of some real datasets using a new algorithm closely related to the introduced two measures, which does not only solve the problem but also let us know the VC dimension of the intersection closure of the target concept class. Enumeration is very popular in the area of data mining. Many enumeration problems for itemsets, sequences, trees and graphs that satisfy the constraint of frequency have been studied so far. Among them, problems of enumeration of maximal patterns only [2, 4, 7, 6, 12] are very important to reduce the complexity of computational time and outputted results.

In this paper, we study a general problem, the problem of enumerating concepts in a Sperner family concept class us-ing subconcept queries , which was first studied by Gunopu-and a Sperner family concept class is a family of concepts in which no concept is a superset of any other concept. A subconcept query for subset T is a query that asks if there is a concept which contains T . In the case of enumerating maximal frequent itemsets, a maximal frequent itemset c is a concept, and a query that asks if an itemset is frequent is a subconcept query. In addition to enumeration of maxi-mal frequent itemsets, this problem is known to have many instance applications such as minimal keys in a relational database and learning monotone Boolean functions [7].
According to the theoretical worst case analysis, the fastest conventional algorithm for this problem is the du-alize and advance algorithm called ALL MSS using the al-gorithm developed by Fredman and Khachiyan [5] as a sub-routine calculating the transversal hypergraph of D for a family of concepts D found so far, where D denotes the family of complements of concepts in D . However, time complexity of this algorithm for a Sperner family concept that fast implementation of this algorithm is difficult [7, 12]. Here, | X | denotes the number of elements in set  X   X   X , and Tr is the transversal hypergraph of family  X   X   X .

On the other hand, recently, p ractically fast algorithms [2, 4, 6, 12] for this problem have been developed in the area of maximal frequent itemset mining. Why are these algorithms practically fast? This is because the complex-ity of instance problems in real world is usually low. Then, for a target concept class C X  2 X , what are good measures for such complexity in addition to domain size | X | and the number of concepts |C| ?The rank of C , the maximum size of concepts in C , may be a good measure, but these algo-rithms ran fast even when | X | , |C| and the rank of C are all relatively large in their experiments.

In this paper, we characteriz e the complexity of Sperner family concept classes C by two measures, the VC dimen-tic dimension d CH ( C ) , which is always smaller than d The characteristic dimension of a concept c is defined as the minimum number of elements in c needed to identify it uniquely, and the characteristic dimension d CH ( C ) of a con-cept class C is the maximum characteristic dimension of any c  X  X  . Note that d tion of intersection closure may increase the number of ele-ments exponentially. The VC dimension d VC ( C ) is closely related to the rank r ( Tr ( C )) of the transversal hypergraph of
C . The maximum rank of Tr ( C ) for any subclass C of C is d VC ( C ) or d VC ( C )+1 . As a complexity measure for d tonically increase when a new concept is added to C ,which is not possessed by the rank of Tr ( C ) and | Tr ( C ) |
We analyzed the worst case time complexity on the enu-meration problem of Sperner family concept class C on X using subconcept queries in terms of d VC ( C ) in addition to |
X | and |C| . First, we showed that any algorithm for enu-merating concepts in C needs at least |C| +2 d VC ( C )+1 cept queries in the worst case, which is also a lower bound on worst case time complexity of the problem. This means that the problem is hard for some C with large VC dimen-sion even if the number of concepts in C is small. Actually, a concept class achieving the lower bound has only d VC ( C )+1 concepts. We also showed that an upper bound on the worst case time complexity on the problem is O ( |C|| X | d VC ( This upper bound can be achieved by one instance of algo-rithm ALL MSS described above, Irredundant Border Enu-merator (IBE) developed by Uno and Satoh [12], which is the fastest implementation of such algorithms that use an incremental algorithm to calculate Tr ( D ) for a family of concepts D X  X  found so far. This upper bound is better tained from the best bound with respect to |C| + | Tr ( C ) | described above. This indicates that IBE may be even theo-retically faster in worst case than the instance of ALL MSS using Fredman and Khachiyan X  X  algorithm when d VC ( C ) is small, though the above upper bounds might not be tight. We also developed a new instance of ALL MSS, EnumSpernerFamily, which is closely related to the two complexity measures we introduced. Our algorithm is not fast practically, but the following interesting properties: (1) an upper bound on worst case time complexity is proved to one shown for IBE, (2) concepts with small characteristic dimension are guaranteed to be found in early stages and a lower bound of d CH ( C ) can be calculated without any addi-tional cost, and (3) the exact d VC ( C ) can be also calculated without any additional cost. Ma king use of Property (3), we investigated the VC dimension for datasets in the real world by running EnumSpernerFamily and found that it is really small as we conjectured.

This paper is organized as follows. We introduce some background notions and notation in Sec. 2. For a Sperner family concept class, the VC dimension of its intersection closure and its characteristic dimension are defined and sev-In Sec. 4, the worst case time complexity on the enumera-tion problem of Sperner family concept classes is analyzed in terms of VC dimension. A new instance of ALL MSS closely related to the two introduced dimensions is de-scribed and its time complexity is analyzed in terms of VC dimension in Sec. 5. For two instance problems, the VC dimension of the intersection closure of a Sperner family concept class in several datasets is investigated in Sec. 6. Our future work is described in Sec. 7.
A subset of a set X is called a concept on X , and a family of concepts on X is called a concept class on X . A concept class C is a Sperner family if no element is contained in another, formally, Note that X and C correspond to sets of vertices and hy-peredges, respectively, in the context of hypergraphs. A hy-pergraph ( X, C ) with Sperner family C is said to be simple . A hypergraph ( X, C ) is also denoted by its hyperedge set alone when the vertex set X is clear from the context. We assume that any concept class considered in this paper is non-empty.

We assume existence of a teacher (or oracle) who can answer subconcept queries which ask if a subset T of X is contained in some concept c belonging to a target concept class C . The answers of the teacher are  X  X es X  or  X  X o X . In this paper, we consider the following problem using this query studied by Gunopulos et al. [7]. (The problem is called Problem MaxTh in [7].) Problem 1 Enumerate concepts in an unknown Sperner family concept class C on X using subconcept queries for C .

This problem is known to have many instance applica-tions including enumeration of maximal frequent itemsets, minimal keys in a relational database and learning mono-tone Boolean functions [7]. For example, in the case of enu-merating maximal frequent itemsets, C is the family of max-imal frequent itemsets, and a subconcept query is a query that asks if an itemset is frequent.

In the following, we describe notions and a proposition necessary in this paper. A concept class C is intersection closed [1] if c  X  X  c  X  X  holds for every non-empty sub-family U X  X  .Let C be a concept class on X .Foran arbitrary subset S of X , define a concept class  X  C ( S ) as { S  X  c : c  X  X } .Set S is said to be shattered by C if  X 
C ( S )=2 S holds. The VC dimension [3] of C is the size of a maximum-sized set shattered by C , where the size of a set is the number of elements in a set.

The next proposition holds for intersection closed con-cepts.
 Proposition 1 Let C be an intersection closed concept class. Then, a subset S of X is shattered by C if and only if the following conditions (1) and (2) hold: (1) S  X  c for some c  X  X  and, (2) for all x  X  S , there exists c  X  X  such that S  X  X  x } X  is shattered by C . We prove the opposite direction. As-sume that conditions (1) and (2) hold. For each x  X  S ,let c x denote the concept c that satisfies condition (2). Then, for an arbitrary proper subset S of S , S  X  x  X  S  X  S c x holds because C is intersection closed. This, together with condition (1), proves that S is shattered by C . In this subsection, we characterize complexity of Sperner family concept classes by two measures, the VC dimension and the characteristic dimension .

First, let us consider characterization by the VC dimen-sion. We do NOT directly characterize a Sperner family concept class C by its VC dimension but characterize it by the VC dimension of its intersection closure cl { boolean functions on 2 X defined by C .

InSomeCon C ( T )= true
ExcludeEachOne C ( T )= true
Since cl ( C ) is intersection closed, the following corollary of Proposition 1 holds.
 Corollary 1 Let C be a Sperner family concept class on X . Then, a subset T of X is shattered by cl ( C ) if and only if both InSomeCon C ( T ) and ExcludeEachOne C ( T ) are true.
By Corollary 1, we do not have to consider concepts c  X  cl ( C )  X  X  to check whether T is shattered by cl ( C ) or not. We l e t d VC ( C ) denote the VC dimension of cl ( C ) paper.
 Next, we give the definition of characteristic dimension . Let C be a Sperner family concept class on X . For each c C , a subset T of X satisfying the following two properties is called a characteristic set of c .
 Property 1 c is an unique member of C that contains T . Property 2 for each x  X  T , there exists c x  X  X  s.t. T  X 
Note that  X  is a characteristic set of C that is composed of one concept only. For each concept c  X  X  , there exists a characteristic set T of c because of the following reason. First, let T = c . Note that T satisfies Property 1 trivially. Remove as many elements as possible from T while Prop-erty 1 is satisfied. Then, the contracted T must satisfy Prop-erty 2. There may exist more than one characteristic sets for one concept and the sizes of those may be different. Example 1 Let X be R 2 , and consider a set of 10 positive elements { 1 , 2 , ..., 10 } and 4 negative elements shown in Figure 1. Let C be the family of maximal positive-element sets that are contained in some axis-parallel rectangles which contain no negative instances. Trivially, C is a Sperner family composed of 5 concepts { 1 , 2 , 3 , 6 , 9 } , { 2 , 3 , 4 , 5 , 6 } , { 2 , 3 , 5 , { 2 , 3 , 5 , 6 , 8 , 9 } are { 2 , 5 , 6 , 9 } , { 2 , 6 , 8 } { 3 , 8 } . Proposition 2 If T  X  X is a characteristic set of some con-cept c in a Sperner family concept class C , then the number of elements in T must be at most d VC ( C ) . both InSomeCon C ( T ) and ExcludeEachOne C ( T ) are true. InSomeCon C ( T ) is true by Property 1. ExcludeEachOne C ( T ) is also true because, if c Property 2 contains x ,then c x  X  T , which contradicts the uniqueness of c in Property 1.

The characteristic dimension of a concept c is the num-ber of elements in the minimum-sized characteristic sets of c . The maximum characteristic dimension of the concepts in a Sperner family concept class C is the characteristic di-mension of C , which is denoted by d CH ( C ) in this paper. The following corollary of Proposition 2 is trivial. Corollary 2 d CH ( C )  X  d VC ( C ) for an arbitrary Sperner family concept class C .
 Remark 1 d CH ( C ) can be smaller than d VC ( C ) . Actually, d is 4.
Let C be a concept class on X .Aset T  X  X is a transversal of hypergraph C if T  X  c =  X  for each c  X  X  . The transversal hypergraph Tr ( C ) of hypergraph C is a hy-pergraph whose hyperedges are the minimal transversals of C . Note that we let Tr ( C ) also denote its hyperedge set. The rank r ( C ) of hypergraph C is defined as the maximum set berofelementsin c . The complement of c is denoted by c , and C denotes the family of complements c for all c  X  X  . Proposition 3 Let C be a Sperner family concept class on X . Then, if T is a minimal transversal of C , T  X  X  x } is shattered by cl ( C ) for any x  X  T . (Proof) Let T be a minimal transversal of C and let x be an element of T . From the minimality of T , for each y  X  T , there is a set c  X  C with c  X  T = { y } . This means that there is a set c  X  X  with T  X  X  y } X  c and y  X  c . Thus, InSomeCon C ( T  X  X  x } ) is true because there exists a set c  X  X  with T  X  X  x } X  c . ExcludeEachOne C ( T  X  X  x } ) is also true because, for each y  X  T  X  X  x } , there exists c such that ( T  X  X  x } )  X  X  y } X  T  X  X  y } X  c and y  X  c . Corollary 3 r ( Tr ( C ))  X  d VC ( C )+1 .
 Remark 2 From Corollary 3, we know d VC ( H )+1 is an upper bound of the rank of the transversal hypergraph of H . Is this upper bound always tight? Unfortunately, the answer is no. Consider hypergraph H = { S 0 ,S 1 , ..., S where S 0 = { 1 , 2 , ..., k } and S i = S 0  X  X  k + i } X  X  i =1 , 2 , ..., k . In this case, d only 2 . Note that d CH ( H ) is also k .Let H = H X  X  S 0 } tight. In this case, d CH ( H ) is only 1 . This phenomenon occurs because the VC dimension and characteristic di-mension always increase when new concept (hyperedge) is added but this is not true as for the rank of the transver-sal hypergraph. Furthermor e, addition of one new concept changes the VC dimension by at most one, but it may dras-tically change the characteristic dimension and the rank of the transversal hypergraph.
 Proposition 4 max C  X  X  r ( Tr ( C ))  X  d VC ( C ) . (Proof) Let T be a set shattered by cl ( C ) with | T | = Let C be { c x  X  X  : T  X  X  x } X  c x ,x  X  c x ,x  X  T } . Then, T is a minimal transversal of C .
 Remark 3 By Corollary 3 and Proposition 4, max C  X  X  r ( Tr ( C )) is d max C  X  X  r ( Tr ( C )) = d C defined in the proof of Propos ition 4 and c  X  X  with T  X  c such that
In this section, we analyse Problem 1 in terms of d VC ( C ) About Problem 1, nice research have been already done by Gunopulos et al. [7]. Using the relation between d VC ( C ) and Tr ( C ) , here, we obtain some bounds on the complexity complexity analyses, we u se the number of concepts |C| and domain size n as parameters in addition to d VC ( C ) . Remark 4 By Sauer X  X  lemma [10], |C| X | cl ( C ) | X  this upper bound may be very loose because it becomes n |C| X  1 in the worst case. Thus, we use |C| itself as a pa-rameter of complexity in our analyses. Proposition 5 There is a Sperner family concept class C such that | Tr ( C ) | is at least 2 d VC ( C )+1 . (Proof) Let n be a positive even number and let X = { 1 , 2 , ..., n } and C = { X  X  X  i, i +1 } : i = 1 , by C . Thus, d VC ( C )= n/ 2  X  1 . On the other hand, |
Tr ( C ) | = |{{ x 1 ,x 2 , ..., x n/ 2 } : x i  X  X  2 i  X  1 1 , 2 , ..., n/ 2 }| =2 n/ 2 . Therefore, | Tr ( C ) | =2 d VC this case.

Mannila and Toivonen [9] have proved that |C| + | Tr ( C ) | is a lower bound on the number of subconcept queries. The following corollary can be obtained from this lower bound using Proposition 5.
 Corollary 4 There is a Sperner family concept class C such that any algorithm for Problem 1 must ask at least |C| + 2
The above corollary means that Problem 1 is hard when d Remark 5 Note that |C| = n/ 2= d VC ( C )+1 for the con-cept class C used in the proof of Proposition 5. Thus, d VC is large while |C| is small for this concept class C .
Here, we consider upper bounds obtainable by the dual-ize and advance algorithm developed by Gunopulos et al. [7].

Let C be a target Sperner family concept class on X with |
X | = n , and assume that D (  X  X  ) is known to the algo-rithm. The key of the algorithm is subsets T of X with the following property.
 Property A Subset T is included in some concept c  X  X 
The essential two facts for subsets T with Property A are the followings. 1. One concept in C X  X  can be found by adding as 2. T must be a transversal of D . This is trivial because, FindOneConcept ( T ) input: T : subset of some concept in C output: c : one concept in C that contains T . 2: for each x  X  X do 3: if SubCon C ( c  X  X  x } ) then 4: c  X  c  X  X  x } 5: end if 6: end for 7: output c Using these facts, C ( =  X  ) can be enumerated by starting D =  X  , repeatedly finding a set T satisfying Property A and adding c found by FindOneConcept( T )to D .Furthermore, aset T satisfying Property A is a set T  X  Tr ( D ) such that SubCon C ( T )=  X  X rue X . Thus, a Sperner family concept class can be enumerated using subconcept queries by repeatedly executing an algorithm to calculate a transversal hypergraph Tr ( D ) for a subfamily D of C found so far. This dualize and advance algorithm is called algorithm ALL MSS [7].
Algorithm ALL MSS has a freedom for the choice of an algorithm for calculating the transversal hypergraph Tr ( D ) The theoretically fastest algorithm for the task is the one de-veloped by Fredman and Khach iyan [5], and its time com-al. [7] showed that the same time complexity is enough for ALL MSS to solve Problem 1. Since | Tr ( C ) | X  n d VC ( C by Corollary 3, we obtain the following corollary. Corollary 5 ALL MSS using Fredman and Khachiyan X  X  al-gorithm for calculating a transversal hypergraph runs in
The above algorithm, however, is not considered to be of implementation. The most appropriate conventional al-gorithms for calculating Tr ( D ) used in ALL MSS are in-cremental ones [7, 8, 12]. Here, an incremental algorithm culates Tr ( D 1 ) ,next Tr ( D 2 ) ,..., and finally Tr mental algorithms are easy to be implemented, and they are suited for ALL MSS because concepts in C are found one by one in ALL MSS. In the worst case, those algo-rithms are known to possibly spend time exponential to |D| + | Tr ( D ) | because | Tr ( D come exponential. However, by Corollary 3, r ( Tr ( D i ))  X  d X d VC ( D )+1 for all i&lt; |D| . This means that incremen-tal algorithms are efficient when d VC ( D ) is small. In IBE [12], a kind of algorithm ALL MSS using the most effi-cient incremental algorithm for calculating Tr ( D ) , enumer-ation of hyperedges in i  X |D| Tr ( D i ) is done by the depth first transversal of a tree whose nodes correspond to hyper-edges in i  X |D| Tr ( D i ) , and computational time needed at each node is O ( n |D| ) ,where n = | X | . Since this enu-meration is the bottleneck of IBE, its total running time is O
From the above argument, we obtained the following theorem.
 Theorem 1 Algorithm IBE [12] runs in O ( |C| n d VC ( C )+2 ) time using subconcept queries.
In this subsection, we describe a new dualize and ad-vance algorithm EnumSpernerFamily for enumeration of a Sperner family concept class C on X with | X | = n us-ing subconcept queries, whi ch is closely related to d VC and the characteristic dimension of each concept in EnumSpernerFamily is not fast practically, but has the fol-lowing interesting properties: 1. an upper bound on worst case time complexity is 2. concepts with small characteristic dimension are guar-3. the exact d VC ( C ) can be also calculated without any
EnumSpernerFamily shown in Figure 3 is an algorithm of repeatedly executing the procedure that finds a seed (sub-set) of a concept which has not been found yet and obtains one concept by making the seed grow up using subrou-tine FindOneConcept. The first seed is the empty set and one concept c 0 in the target Sperner family concept class can be found by the assumption that C =  X  . In the algo-rithm, i is the seed size and increased from 0 until either InSomeCon D ( T ) or ExcludeEachOne D ( T ) is false for any seed T with size i .
 EnumSpernerFamily output: D : Sperner family concept class on X equal to 1: c 0  X  FindOneConcept(  X  ) 2: D X  X  c 0 } 3: i  X  0 4: while there exists an i -element subset T of X s.t. both 5: i  X  i +1 6: for all T : i -element subsets of X s.t. 7: if SubCon C ( T ) then 8: c  X  FindOneConcept( T ) 9: D X  X  X  X  c } 10: end if 11: end for 12: end while 13: output D Lemma 1 For any T  X  X , either InSomeCon D ( T ) or ExcludeEachOne D ( T ) is true before the for-loop with i |
T | in EnumSpernerFamily if there exists a concept c  X  X  that contains T . (Proof) Assume that both InSomeCon D ( T ) and ExcludeEachOne D ( T ) are false at right before the for-loop with i = | T | in the algorithm though there exists a concept in C that contains T . Consider D at right before the for-loop 2 with i = | T | .SinceInSomeCon D ( T ) is false, any concept c  X  X  including T is not contained in D Furthermore, there exists an x  X  T such that no concept c that ExcludeEachOne D ( T ) is false. These two facts imply that no concept including T  X  X  x } is contained in D . Now, redefine T as T  X  X  x } , a set of one element smaller. Then, even for this redefined T , both InSomeCon D ( T ) and ExcludeEachOne D ( T ) are false at right before the for-loop with i = | T | by the following reason. InSomeCon D ( T ) false trivially. Let us assume that ExcludeEachOne D ( T ) true. Then, while the for-loop with i = | T | is executed, must be updated so as to contain some concept c containing this redefined T , but this contradicts the fact. On the other hand, when the algorithm stops without executing the for-loop with i = | T | , consider D at the end of the algorithm. For this D , ExcludeEachOne D ( T ) is false because the as-sumption that ExcludeEachOne D ( T ) is true implies satis-faction of the while-loop condition for all i  X | T | ,which contradicts the fact the algorithm has already stopped.
By repeating this argument, there exists a further re-defined T = { x } such that both InSomeCon D ( T ) and ExcludeEachOne D ( T ) are false right before the for-loop with i =1 . Then, D must be  X  , which contradicts the as-sumption that C is non-empty.
 Therefore, either InSomeCon D ( T ) or ExcludeEachOne D ( T ) becomes true before the for-loop with i = | T | for the original T .
 Theorem 2 Let c be a concept of a Sperner family concept class C . Then, c is added to D in algorithm EnumSperner-Family by the end of the for-loop with i = d c ,where d c the characteristic dimension of c . (Proof) Let T be a characteristic set of c that is composed of just d c elements. Note that c is the unique concept that contains T . Then, by Lemma 1, either InSomeCon D ( T or ExcludeEachOne D ( T ) becomes true before the for-loop with i = d c . In the case that InSomeCon D ( InSomeCon D ( T ) is false but ExcludeEachOne D ( T ) is true, c is added to D during the execution of the for-loop with i = d with i = d c . Remark 6 The algorithm cannot be stopped even if no con-cept is found in the for-loop. For example, consider a set of in
R 2 shown in Figure 4. Let C be the family of maximal positive-point sets that are contained in some axis-parallel rectangles which contain no negative instances. C is com-posed of 5 concepts { 1 , 2 , 4 , 7 } , { 2 , 3 , 4 , 5 } { 2 , 5 , 7 , 8 } and { 4 , 5 , 6 , 7 } . Four concepts { 1 , 2 , 4 , 7 } , { 2 , 3 , 4 , 5 } , { 2 , 5 , 7 , 8 } and characteristic dimension 1 are found by the end of the for-loop with i =1 , but the concept { 2 , 4 , 5 , 7 } with characteristic dimension 4 might not be found until the seed size i becomes 4 .
Figure 4. Example of the case that a concept is possibly found after the for-loop in which no concept is found.
 Corollary 6 EnumSpernerFamily outputs a concept class D that is equal to C . Besides, it stops just after executing the for-loop with i = d VC ( C )+1 . (Proof) By Theorem 2, all the concepts in C are added to D in the algorithm. Thus, the outputted D is trivially equal to
C . The procedure inside the while-loop is executed for i +1 while i -element set is shattered by D . Therefore, the algorithm stops just after executing the for-loop with i = d Theorem 3 EnumSpernerFamily runs in O (( d VC ( C )+ (Proof) By Corollary 6, the number of subset T of X checked in the for-loop whether InSomeCon D ( T ) and ExcludeEachOne D ( T ) aretrueornotisatmost n d VC ( C )+1 in total. This check can be done in time O ( | T ||D| ) for each T and D at that point by keeping a sorted id list of found concepts containing an element x for each x in X . Thus, this is upper bounded by O (( d VC ( C )+1) |C| ) . Total time needed by execution of the procedure FindOneConcept is O ( bound O (( d VC ( C )+1) |C| n d VC ( C )+1 ) .
Algorithm EnumSpernerFamily is a kind of the dualize and advance algorithm because of the following proposi-tion.
 Proposition 6 For a subset T of X and a hypergraph D with vertex set X , InSomeCon D ( T ) is false but ExcludeEachOne D ( T ) is true if and only if T is a minimal transversal of D . (Proof) Assume that InSomeCon D ( T ) is false but ExcludeEachOne D ( T ) is true. Then, T is a transversal of D because InSomeCon D ( T ) is false. T is also minimal be-cause, for each x  X  T , there exists c  X  X  such that ( T  X  { x } )  X  c =  X  by the assumption that ExcludeEachOne D ( T ) is true. Conversely, assume that T is a minimal transver-sal of D . T is a transversal so InSomeCon D ( T ) is false. ExcludeEachOne D ( T ) holds because there is a c  X  D such that T  X  c = { x } for each x  X  T from the minimality of T .
By the above proposition, T that satisfies the condition of line 6 in algorithm EnumSpernerFamily is a minimal transversal of D . Indeed, EnumSpernerFamily is an in-stance algorithm of ALL MSS that uses algorithm Enum-MinTrans shown in Figure 5 as the subroutine for calculat-ing Tr ( D ) .
 EnumMinTrans ( X, H ) input: ( X, H ) : hypergraph output: G : transversal hypergraph of H 1: G X  X  X  2: i  X  0 3: while there exists an i -element subset T of X s.t. both 4: i  X  i +1 5: for all T : i -element subsets of X s.t. 6: G X  X  X  X  T } 7: end for 8: end while 9: output G
All the minimal transversals of H are enumerated by al-gorithm EnumMinTrans because, at the exit of the while-r (
Tr ( H ))  X  i using Corollary 3 while all minimal transver-sals with size at most i are already enumerated by that time. The computational time of EnumMinTrans is O (( d VC ( H )+ rem 3. EnumMinTrans is independent from the already found transversals. So the algorithm can forget the previ-ously found transversals if they are not needed finally. EnumMinTrans is not directly used by EnumSperner-Family but embedded into it in a way that EnumMinTrans is executed only once 3 and as a result no set T is reproduced. This good property is also possessed by IBE [12]. Remark 7 Note that not all transversals of D are seeds of concepts c  X  X  . Indeed, Theorem 2 means that transversals with the size at most d CH ( C ) are enough for the seeds. As mentioned in Remark 2, d CH ( C ) is sometimes smaller than r (
Tr ( C )) , so in such a case EnumSpernerFamily might be-come more efficient if it could exit its while-loop at the end of the for-loop with i = d CH ( C ) .
We investigated VC dimensions of intersection closure of MFI(Maximal Frequent Itemsets) families for bench-mark datasets used in [2, 4, 6, 12] by running EnumSperner-Family. Note that running EnumSpernerFamily for a dataset reveals the VC dimension of the intersection closure of the target family by Corollary 6 and also reveals a lower bound of its characteristic dimension by Theorem 2. Datasets used in our investigation is shown in Table 1. Note that the max-imum pattern length of MFIs is a trivial upper bound on the VC dimension of intersection closure of the MFI family.
The results are shown in Figure 6. In [4], datasets were classified into two classes, a dense class { chess,connect-4, mushroom,pumsb  X  ,pumsb } and a sparse class { T10I4100K, T40I10D100K } . The VC dimensions of intersection closure of datasets in the sparse class is low compared to those in the dense class. Generally, the VC di-mension increases as the number of MFIs increases. How-ever, as for connect-4 dataset, its VC dimension increases by only one as the number of MFIs increases from 222 to 11,044. Especially, the complexity of the MFI family for this dataset with support 30% seems comparatively low in spite of the large cardinality (11,044) and the long maximal pattern length (25) of the MFIs. Let B be an intersection closed concept class on X . Consider a mining problem of finding rules in the form
Figure 6. VC dimensions of intersection clo-sure of MFI sets. The numbers shown nearby points are given supports.  X  x  X  c (  X  X  )  X  x is positive X  for given positive and neg-ative instances. Let S + and S  X  denote the sets of positive and negative instances, respectively. Since B is intersection closed, for any set S  X  S + , the minimally generalized rule  X  x  X  S  X  c  X  X  c  X  x is positive X  is obtainable. Here, we consider the problem of enumerating rules corresponding to maximal sets of positive instances whose minimally gener-alized rules are consistent with all negative instances. Note that the family of such maximal sets of positive instances, which is denoted by  X ( S + ,S  X  , B ) , is a Sperner family con-cept class.

Assume that X be a product space of l numerical at-tribute spaces N 1 ,N 2 , ..., N l and m categorical attribute |
N use the concept class R Then, the following theorem can be proved.
 (Proof) Omitted due to space limitation. 2 l rules represented by this concept class is studied in [11]. several datasets in UCI Machine Learning Repository by running EnumSpernerFamily.
 The result is shown in Table 2. d VC ( X ( S + ,S  X  , is significantly smaller than the d VC ( B ) for most datasets, where d VC ( B ) denotes the VC dimension of B . It is only 37.7% of the VC dimension of a base concept class B in av-erage. The lower bound on d CH ( X ( S + ,S  X  , B )) is further smaller, 71% of d VC ( X ( S + ,S  X  , B )) in average.
We proposed a method of an analysis that measures the complexity of a Sperner family concept class by the VC dimension of its intersection closure, and proved that the problem of enumerating its member concepts using subcon-cept queries can be solved efficiently even in the worst case when that complexity is low by a kind of the dualize and advance algorithm using incremental algorithm to calculate the transversal hypergraph of D for subfamily D found so far. One of such algorithms is IBE developed by Uno and Satoh [12], which is one of practically fast algorithms ap-plied to maximal frequent itemset (MFI) mining. Sperner family concept classes dealt with in real world are conjec-tured to have small VC dimension of its intersection closure when their member concepts can be efficiently enumerated. This is one explanation for practically fastness of IBE. Ac-tually, we demonstrate that the above conjecture is true for some benchmark datasets used in MFI mining and simple rule mining.

In MFI mining, the search-tree-traversal algorithms us-ing superset checking and dynamic reordering [4, 6, 2] are another kind of practically fast algorithms. Can the fastness of these algorithms be also explained in terms of the VC di-mension of the intersection closure of target MFI families? We would like to make it clear in the future.
 viation of  X ( S + ,S  X  , B ) .
B d VC ( B ) d VC ( X ) ) 18 5 4 820 ) 18 7 5 1906
