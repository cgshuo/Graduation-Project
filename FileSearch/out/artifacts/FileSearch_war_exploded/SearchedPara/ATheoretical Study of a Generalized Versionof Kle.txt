 1. Introduction and related works Kleinberg X  X  HITS (Hyperlink-Induced Topic Search) algorithm (Kleinberg 1999) is a link analysis algorithm which was originally developed in a Web context; HITS is thought to be useful for inferring Web pages that would be considered authorities for a particular query made to a search engine. This deduction uses only the information from the structure of a directed graph built on the basis of the particular query, and which is a subgraph of the directed graph representing the Web. The algorithm selects some nodes of this directed graph through the exploitation of a mutual reinforcing relationship. Recent applications of the HITS algorithm in fields far removed from that of Web searching, such as that of word stemming (Bacchin, Ferro and Melucci 2002), and the discovery of a connection between the technique of HITS and the Latent Semantic Indexing technique (Ng et al. 2001), have led us The purpose of this analysis is that of deriving properties to decide if the algorithm could reasonably be applied in other fields. 220 AGOSTI AND PRETTO
In this paper we perform this mathematical analysis, considering a general formulation of the algorithm from which the original algorithm can be deduced as a particular case; we focus on the convergence of the algorithm and on the study of its symmetry. We have tried to carry out this analysis examining the algorithm independently of its Web application, so that we address some aspects of the algorithm that are crucial to having a wider knowledge of its general behaviour.
 The analysis of retrieval algorithms in general is not yet typical in Information Retrieval. A technical survey on Information Retrieval on the Web can be found in Agosti and Melucci (2001) and Henzinger (2001) is a brief survey focused on hyperlink analysis for the Web. Kleinberg X  X  original work is described in Kleinberg (1999). The cited article introduces the HITS algorithm in a Web context; HITS is used to rank the Web pages retrieved by a text-based search engine in response to a specific query. Since Kleinberg X  X  algorithm works on dependent ranking, as opposed to the algorithms giving a query-independent ranking, such as PageRank (Page et al. 1998), used by the Google search engine (Brin and Page 1998). SALSA, another famous link analysis algorithm for performing query-dependent ranking, is described in Lempel and Moran (2001). These and other link analysis algorithms are algorithms are also defined. The stability of link analysis algorithms, i.e. how much these algorithms are perturbed by the changing of a portion of the set of Web pages on which they are working, is studied in Ng et al. (2001). We have been led towards the mathematical analysis of the HITS algorithm described here by the results presented in Bacchin, Ferro and Melucci (2002). This latter work uses the core of Kleinberg X  X  algorithm in a context fa r removed from that of Web searching, that is the context of word stemming. In Ng et al. (2001) there is another interesting application of the algorithm in a different context, the attempt to see the connections between HITS and the well-known Latent Semantic Indexing that try to overcome these limitations.

This paper is structured as follows. In Section 2 we give some mathematical results that should be remembered in order to understand the progression of the paper. Section 3 sets out Kleinberg X  X  algorithm and the generalization of the algorithm we are considering here. Sections 4 and 5 study the convergence of the algorithm. Section 6 studies the symmetry of the algorithm and proves the equivalence between symmetry and the order of the basic update operations. Since this work has a theoretical aim, we do not give a list of all its possible applications. In Section 7, however, we expound some interesting consequences of our theoretical results. 2. Some preliminary mathematical results In this section we present the main mathematical results that will be used throughout this paper. Our aim is to remind the reader of these results and to fix terminology and notation. THEORETICAL STUDY OF A GENERALIZED VERSION 221 this paper we will explicitly give proofs of our original results.

We consider a graph as consisting of a vertex set V and an edge set E , where an edge is arc set A , where an arc is an ordered pair of nodes. In the following, we will consider the |
V |= n can be represented by an n  X  n adjacency matrix A , whose generic entry ( i , j ), ( A ) ij a ij ,isgivenby A weighted graph G w = ( V w , E w ), where | V w |= n ,i sa graph whose edges have an associated positive weight, so that for example the edge between vertices i and j has a weight e ij . The n  X  n matrix W whose generic entry ( i , j )is is referred to as the matrix whose underlying graph is G w .O n the other hand, we say that G w is the graph described by the matrix W . Similar definitions can be given for digraphs.
Let us denote by R the set of real numbers and by C the set of complex numbers. Let L be and a vector v  X  L , v = 0 ,itis Av =  X  v we say that  X  is an eigenvalue of A belonging to the eigenvector v , and that v is an eigenvector of A with the eigenvalue  X  .A matrix A is said to be symmetric if A = A T , where A T denotes the transpose of matrix A .F or real symmetric matrices the following fundamental facts hold (Godsil and Royle 2001): Theorem 2.1. The eigenvalues of a real symmetric matrix A are real numbers.
 Theorem 2.2. Let A be a real symmetric n  X  n matrix. Then R n has an orthonormal basis consisting of eigenvectors of A .
 Corollary 2.3. If A is an n  X  nr eal symmetric matrix , then there are real matrices L and D such that L T L = LL T = I and LAL T = D , where I is the identity matrix and D is the diagonal matrix of eigenvalues of A .
 An n  X  n real symmetric matrix A is positive semidefinite if u T Au  X  0 for all vectors u  X  R n ;itis positive definite if it is positive semidefinite and u T Au = 0i f and only if u = 0 . These terms are used only for symmetric matrices.
 Theorem 2.4. Ar eal symmetric matrix is positive semidefinite if and only if its eigenvalues are nonnegative. A real symmetric matrix is positive definite if and only if its eigenvalues are positive. 222 AGOSTI AND PRETTO Theorem 2.5. Ar eal symmetric matrix A is positive semidefinite if and only if there is a r eal matrix B such that A = B T B .

Let A be a square matrix. The spectral radius  X  ( A )i s the maximum of the moduli of the a dominant eigenvector .An n  X  m real matrix A is said to be positive if all its entries are A is said to be nonnegative if all its entries are nonnegative numbers: ( A ) ij a ij  X  0 , i = 1 , 2 ,..., n , j = 1 , 2 ,..., m .A nonnegative square matrix A is said to be irreducible use these results (Godsil and Royle 2001, Salce 1993): Theorem 2.6 ( Fr obenius ) . Let A be a real nonnegative and irreducible square matrix. Then : 1.  X  ( A ) &gt; 0; 2.  X  ( A ) is an eigenvalue of A belonging to a real positive eigenvector ; 3.  X  ( A ) has 1 as algebraic multiplicity.
 A real nonnegative and irreducible square matrix A is said to be primitive if its spectral that equals  X  ( A ).

Using the results presented in Theorems 2.4 and 2.6 we can get what is stated in the following corollary: Corollary 2.7. Let A be a positive semidefinite real symmetric matrix. If A is nonnegative and irreducible , then A is primitive.
 If  X  is a strictly dominant eigenvalue belonging to the eigenvector v , then v is said to be a strictly dominant eigenvector. 3. Kleinberg X  X  algorithm revised In this section we describe Kleinberg X  X  HITS algorithm (Kleinberg 1999) and we extend the algorithm to make it more general. Even though we are describing the algorithm using in contexts far removed from that of Web searching.

It is useful to our analysis to underline that the HITS algorithm is composed of two particular application of the algorithm. The second, bringing hubs and authorities to the deduce which nodes of the digraph can be considered particularly  X  X mportant X  (authorities) and which nodes give a particular importance to other nodes (hubs); this work is done considering only the structure of the directed graph built in the first part. THEORETICAL STUDY OF A GENERALIZED VERSION 223 3.1. Construction of the directed graph This part is strongly dependent on the particular application of the algorithm. In fact, the directed graph may represent different entities and relationships between entities, depend-nodes may represent Web pages and the arcs may represent links between Web pages; in a stemming application, the nodes may represent prefixes and suffixes of words and the arcs may represent the existence of words with some prefixes and suffixes and so on. Here we give a brief description of this part of the algorithm with regard to its Web applica-tion, as proposed in the original paper by Kleinberg. In its classical Web application, the adoption of Kleinberg X  X  algorithm has the target of improving the performance of Web search engines. To be more precise, the main goal of its use is that of arranging for the search engine to retrieve a list of important, or authoritative, Web pages as an answer to a query  X  .

The beginning of the algorithm is dedicated to the construction of a root set R  X  of Web pages retrieved by a text-based search engine as an answer to the query  X  . This root set is made of the first m pages in the list of pages retrieved by the search engine; typically m  X  = 200. Then a base set S  X  of Web pages is built, considering the pages in the root set, plus all the Web pages that are pointed to by at least one page of the root set and the Web pages pointing to at least one of the pages of the root set. Since the number of Web pages pointing to a certain Web page can be very large, it is necessary to limit the number that has to be taken into consideration by the algorithm. Let k be the maximum number actually pages which can be represented by a directed graph G  X  .I n this directed graph each node represents a Web page and each arc from node i to node j represents a link from page i W ith regard to the query  X  , the algorithm tries to infer the importance of each Web page i graph, a slight change is made on it: all the arcs representing a link between two pages with the same domain name are removed, as they logically have the purpose of helping navigation inside a Web site, more than that of conferring authority to the pointed Web page. 3.2. Bringing hubs and authorities to the surface This part is the core of the algorithm, working on the digraph G  X  = ( N  X  , A  X  ). In the page; but if these in-links come from pages that are for the most part linking to the same mere popular pages. This can be done by exploiting a kind of mutual reinforcing approach. 224 AGOSTI AND PRETTO To make this mutual reinforcement appear, a hub weight h i and an authority weight a i are assigned to each node i of the digraph G  X  . These two weights are both initially set to 1, and then authority weights and hub weights are updated according to the formulas: where k is the step of the iterative procedure we are considering and the symbol  X   X   X  means We b pages j that point to page i , and the second to all the pages j that are pointed to by v ectors of authorities and hubs: we can express the formulas (1) through: k = 1 , 2 ,.... Moreover, since the value of some authorities and hubs could become too large, a normalization is imposed at each step.
 THEORETICAL STUDY OF A GENERALIZED VERSION 225
Let us formalize this part of the algorithm. Let Let M &gt; 1b ea n integer number that gives the number of iterations when applying the bu ti n the Web application of the algorithm it has been noted in experiments that a number the algorithm as follows: a h for k : = 1to M do a : h : At the end of the iterations, a gives the authority vector and h the hub vector. Since the choice of the norm to normalize vectors does not influence the behaviour of this algorithm, uses  X  2 . After k steps, k &gt; 0, we have, normalization apart:
In this paper we are interested in introducing an extension to Kleinberg X  X  algorithm. This e xtended algorithm can be obtained from the one previously described, by considering the possibility of giving a positive weight to each arc of the digraph. This weight may have different meanings, depending on the applications of the algorithm: in a Web context the weight can be applied with the meaning of the probability that a particular arc indeed gives a measure of authoritativeness. Therefore we can consider an n  X  n matrix W = [ w ij ] 226 AGOSTI AND PRETTO whose generic entry ( i , j ) is: Obviously, if e ij = 1 for every arc from node i to node j ,s o that one. Let G  X  = ( N  X  , A  X  ), with | N  X  |= n ,b e the weighted digraph we are considering, described with matrix W .I n this revised formulation of the algorithm we get, normalization apart: where k = 1 , 2 ,... .

It is clear that matrices W T W and WW T play a fundamental role in the study of the convergence of this algorithm, so that it is worthwhile studying their properties. 4. Properties of the matrices W T W and WW T Let us consider some properties of the matrix W T W that will be useful to see deeper inside the behaviour of Kleinberg X  X  algorithm and its revised version.

Let us say ( W ) ij w ij the entry ( i , j )o f the matrix W . Moreover, let B W T W and outgoing arcs towards nodes i and j at the same time. Matrix W T W is an n  X  n real and nonnegative symmetric matrix with a particular structure, so that all its n eigenvalues are real and nonnegative, as we can get from Theorems 2.1, 2.5 and 2.4. It is useful to consider matrix W T W as having an underlying weighted graph G w , where an edge between vertex outgoing arcs towards nodes i and j .S ow e can consider the graph G w as to be composed of a certain number of connected components, with no connections between each other. With all the vertices belonging to the same connected component are identified by consecutive THEORETICAL STUDY OF A GENERALIZED VERSION 227 B is a matrix with diagonal blocks, with this structure: where B i is the matrix having as underlying graph the weighted component i . From (2) we get that the eigenvalues of B are given by the eigenvalues of B 1 , plus the eigenvalues nonnegative eigenvalues, since the eigenvalues of W T W are real and nonnegative. Note that some of these matrices can be 0 , i.e. a 1  X  1 matrix with a single zero entry. Since we are not considering the trivial case, that is the case in which W T W = 0 ,i n the following we From Corollary 2.7 and Theorem 2.6 we get that each of the matrices B i , i = 1 , 2 ,..., m which is different from 0 has a strictly dominant eigenvalue, i.e. an eigenvalue which is associated eigenvector are greater than 0. We can see that the eigenvectors of matrix B can i.e. the eigenvector k of matrix B j , for matrix B we get the eigenvector: 228 AGOSTI AND PRETTO in the following, so that even B will have an orthonormal basis. Finally, since each matrix B is real and symmetric, from Corollary 2.3 we get that B i is orthogonally diagonalizable, meaning that an orthogonal matrix Q i such that does exist, where  X  1 i , X  2 i ,..., X  k these eigenvalues are not necessarily all different from each other. From the considerations developed before, we have: Theorem 4.1. Matrix W T W has a strictly dominant eigenvalue if and only if one of the dominant eigenvalue of every other matrix of this multiset of matrices.
 dominant eigenvalue.
 All the results obtained for the matrix W T W can also be obtained for the matrix WW T . Besides, these two matrices have the same characteristic polynomial and so the same eigen-v alues, with the same algebraic multiplicity (Salce 1993).

Note that if W = A ,s o that we get the matrix A T A which has an interesting interpretation in bibliometrics. In fact, interpreting each arc from node i to node j as a citation of the document represented by node j from the document represented by node i ,( A T A ) ij gives the number of documents that cite the documents i and j at the same time; this quantity is called co-citation .Onthe cited by both nodes i and j ; this quantity is called bibliographic coupling . 5. Convergence of the revised algorithm Now we are ready to investigate the convergence of Kleinberg X  X  HITS algorithm in its revised formulation. In his seminal paper (Kleinberg 1999) Kleinberg asserts that the classic HITS dominant eigenvector of matrix W T W if this strictly dominant eigenvector exists, and the THEORETICAL STUDY OF A GENERALIZED VERSION 229 matrix WW T if this strictly dominant eigenvector exists. If these matrices do not have a strictly dominant eigenvector, i.e. two or more eigenvalues have the maximum value, in Kleinberg (1999) it is merely asserted that the algorithm converges anyway. As we have mathematical treatment of this subject has to deal with this problem. Moreover, we are dealing with a more general formulation of Kleinberg X  X  algorithm, and we want to see if the conclusions drawn for the classic algorithm are also valid for the general one.
So, let us consider the formula: before normalization. The linearity of the system we are considering allows us to work with this formula, and to consider its normalization only when we need it, since it makes no difference whether we consider a normalization at each step or only the final normalization. the formula (4), and suppose that matrix W T W has the eigenvalues  X  1  X   X  2  X  X  X  X  X  X   X  n  X  0 matrix B i has a strictly dominant eigenvalue equal to  X  1 , i.e. the dominant eigenvalue of B , then we have an example of the more general case, that is the one we discuss in this we have r eigenvalues with maximum value. Their eigenvectors v 1 , v 2 ,..., v r are related to the r different matrices B h corresponding to the diagonal block B h B { v of v 1 , v 2 ,..., v n : Since B is an orthonormal basis, where W T u , v j denotes the scalar product between W T u and v j . Moreover we can note row of B h and that all the entries of v j in the rows corresponding to B h 230 AGOSTI AND PRETTO can write, from (4): Setting  X   X  1 =  X  2 = X  X  X =  X  r we have where since  X  i / X  &lt; 1if r + 1  X  i  X  n . The algorithm makes us compute v ariables x 1 , x 2 ,..., x n (Comincioli 1995): so that particular case, Kleinberg X  X  HITS algorithm X  X onverges to a unit authority vector which is a linear combination of all the dominant eigenvectors of W T W .

F ollowing the same line of reasoning we can obtain for the hub vector: THEORETICAL STUDY OF A GENERALIZED VERSION 231 where we have denoted with w 1 , w 2 ,..., w r the r dominant eigenvectors of WW T and with  X  i , i = 1 , 2 ,..., r , the scalar product: of dominant eigenvectors for the two matrices W T W and WW T is the same, since these two matrices have the same characteristic polynomial and Theorem 2.2 holds. From (6) we get that under whatever norm, the revised HITS algorithm X  X nd so, as a particular case, Kleinberg X  X  HITS algorithm X  X onverges to a unit hub vector which is a linear combination of all the dominant eigenvectors of WW T . 6. Order of operations and symmetry In the classic HITS algorithm the order of the basic operations on the hub and authority v ectors is fixed, since the algorithm starts from the definition of the hub vector and it carries out the following steps: as we have seen in Section 3. Since this seems an arbitrary choice, we might wonder if it is the same to start with the update of hub values, that is hub vectors we have at step k following the algorithm with the basic operations inverted, we would like to know if 232 AGOSTI AND PRETTO and if
This study concerns not only the problem of the order of the basic operations but also that of the symmetry of the algorithm. According to Borodin et al. (2001), a link analysis algorithm simply interchanges the hub and authority values. The problem of symmetry is not a mere curiosity about the behaviour of the algorithm. For example, if we consider a stemming application of the algorithm, it can seem more  X  X atural X  to consider a link from authority weight of the prefix provided by the algorithm which uses inverted links, that is in the original formulation as to consider their authority weights using the inverted links?
The first result we have obtained on this point regards the equivalence between the problem here we have presented the question by referring to the classic HITS algorithm, from now on we can work again on the revised algorithm; studying this more general form does not affect the complexity of the treatment.
 Theorem 6.1. The revised HITS algorithm X  X nd so , as a particular case , the HITS algorithm X  X re symmetric if and only if the changing of the order of the basic operations does not affect the results provided by the application of the algorithm.
 section, it is where again k = 1 , 2 ,... .O n the other hand, the digraph with inverted arcs is described describing the original digraph. Therefore, the authority and hub vectors for the digraph with inverted arcs are given by: THEORETICAL STUDY OF A GENERALIZED VERSION 233 where k = 1 , 2 ,..., so that From (7) the result immediately follows.

We can now prove that the HITS algorithm, and so its revised version, are not symmetric, Let us consider the digraph in figure 2 and suppose that each arc has weight 1; the related adjacency matrix A is given by: 234 AGOSTI AND PRETTO so that The eigenvalues of this matrix are given by:  X   X  1 =  X  2 = 2,  X  3 =  X  4 =  X  5 =  X  6 = 0; it has two dominant eigenvectors, with eigenvalue 2, given by: Now w ehave THEORETICAL STUDY OF A GENERALIZED VERSION 235 Thus, using the theory developed before, we can say that the sequence of authority vectors converges to the following vector, before normalization: Fo re xample, using  X  2 , the limit vector is given by
Now, if we consider the digraph obtained by inverting the arcs of the digraph depicted in figure 2, we get the digraph depicted in figure 3. Its adjacency matrix is given by: 236 AGOSTI AND PRETTO so that  X  THEORETICAL STUDY OF A GENERALIZED VERSION 237 and we have so that the sequence of the hub v ectors has a limit of: that is, using  X  2 : which differs from (8). This proves that the algorithm is not symmetric.

From this counter example, and using the equivalence stated in Theorem 6.1, we can see limit vector that depends on the starting vector. 7. Some interesting consequences general, so independently of its specific Web application. Our aim was to try to illuminate the behaviour of this algorithm, since some recent works have convinced us that interesting we were interested in studying a generalized version of the algorithm, which we called the revised HITS algorithm, so that the classic version of the algorithm is a particularization of the revised one. Following these starting ideas we found that the key to mathematically understanding the behaviour of this algorithm is in the structure of two matrices, W T W and WW T .W e found that these matrices can always be transformed into block diagonal matrices, where each block can be seen as representing a connected component of a weighted graph. This analysis formed the basis to proving the convergence of the algorithm to a limit 238 AGOSTI AND PRETTO v ector, even in the cases in which these matrices have more than one dominant eigenvector; moreover, we found the analytic expression of this limit vector. Finally, we proved the equivalence between the problem of the symmetry of the algorithm and that of the order of the basic operations performed over the hub and authority vectors, and we found that the algorithm is not symmetric.

The theoretical analysis performed here has the purpose of throwing light on the behaviour of the algorithm, and so its range should be broad. Pursuing this aim, we have generalized beyond the mathematical explanation of some experimental results. Moreover, the possible applications of its results could go beyond the ideas the authors of the analysis now have. This is a common situation in theoretical analyses. In this section, however, we would like to qualitatively explain the correlation between the dominant eigenvalues of a nonnegative real symmetric matrix and the structure of the weighted graph underlying it. Afterwards we would like to indicate a couple of situations in which our analysis clarifies the actual behaviour of the algorithm, or its right application. 7.1. Graphs and dominant eigenvalues In the analysis we have developed in Sections 4 and 5 we have proved that the revised all the dominant eigenvectors of W T W . Moreover, we have proved a similar result for WW T .

Using the results of our analysis, now we know that the limit vector has a block structure, where the generic block j is a nonzero block if and only if B j has a dominant eigenvalue which equals the dominant eigenvalue of B . Since B j represents a weighted connected graph that is the j -th connected component of the weighted graph represented by B ,itisa central point to grasp which are the relations between a weighted graph and the dominant eigenvalues of the matrix representing it. So, what does it mean if a weighted connected graph is represented by a matrix whose dominant eigenvalues are large? Which are the qualitative differences between weighted connected graphs that are represented by matrices with different dominant eigenvalues?
To try to answer these questions, we need to remind the reader of the following theo-rem (Godsil and Royle 2001): Theorem 7.1. Suppose A is a real nonnegative n  X  n matrix whose underlying di-= A .
 Applying this theorem to our case, it is easy to see that if we have an initial weighted connected graph G 1 and we move to another graph G obtained from G 1 just adding one THEORETICAL STUDY OF A GENERALIZED VERSION 239 or more edges with positive weights, or increasing the weights of one or more pre-existent edges, the new weighted graph is represented by a matrix with larger dominant eigenvalues. v ertices 2 and 4. Graph G 3 is obtained from graph G 2 by increasing the weight of the edge we can say that each block B j has a dominant eigenvalue which gets bigger as each one of the block B j , when the number of nodes k pointing to i and j simultaneously becomes larger.
 Moreover, keeping in mind the following theorem (Salce 1993): with a ij , we have : we can see that there is a kind of relation between the size of the dominant eigenvalue of a block B j and the size of the block (number of rows, and so number of columns). with comparable values, the largest one has probably a larger dominant eigenvalue. This means, of course, that between two weighted connected graphs with edges with comparable weights, the one with a larger number of vertices is probably represented by a matrix with a larger dominant eigenvalue. 240 AGOSTI AND PRETTO 7.2. How the HITS algorithm works on the Web application. To make our explanation concrete, let us suppose there are a couple of Web depicted in figure 5. This figure represents a simple and neat topology; the actual digraphs on which the algorithm works can, of course, have a much more complex topology.
At a quick glance at the figure, one could imagine that the algorithm will give, as au-thorities, a combination of the pages in the left community and in the right one. In other w ords, we might assume that some pages with high authority weight could be in one of the two communities and some other pages with high authority weight in the other. Our results show that this is generally false: unless the first eigenvalue of the two blocks of W
T W representing the two authorities communities is the same, a rather improbable event as we can infer from the facts shown in the previous subsection, one community wins, and the weights of the authorities of the other community vanish. On the other hand, all the authority weights of the authorities of the winning community will be positive. For example, in the simple case of figure 5, the left community wins, and the algorithm gives a positive 5, while all the other nodes X  authority weight equals zero. This means that the algorithm is intrinsically community-oriented, that is it tends to emphasize one authorities community. So our analysis can, at least partially, explain the so-called tightly knit community (TKC) effect (Lempel and Moran 2001): it was experimentally seen that, especially with some queries, Kleinberg X  X  algorithm tends to emphasize only one of the communities of Web pages in the answer, missing the topics in the other communities. 7.3. An application to stemming Here we have the purpose of giving an idea of an application of the algorithm in a field fa r removed from that of Web searching. Moreover, we would like to show how in this and Melucci (2002), in which the idea of applying the core of Kleinberg X  X  algorithm to stemming is enriched by statistical interpretations; in Bacchin, Ferro and Melucci (2002) and in Di Nunzio et al. (2003) many experimental results can be found.
 THEORETICAL STUDY OF A GENERALIZED VERSION 241
The stemming process (Baeza-Yates and Ribeiro-Neto 1999) consists of reducing each w ord of a document or of a query to its grammatical root. This process can improve both the effectiveness and efficiency of information retrieval systems. Among stemming strategies, the most commonly used is the suffix removal strategy, whose purpose is to divide each w ord into two parts, a stem and a derivation, appropriately removing the last part of the w ord, i.e. its suffix. For instance, in the words connected , connecting , connection and connections , connect is the stem, and ed , ing , ion and ions are the derivations, respectively.

The first part of the algorithm proposed in Bacchin, Ferro and Melucci (2002) divides (stem , derivation) for each word? The idea underlying the algorithm is that even between prefixes and suffixes there is a kind of mutual reinforcement, that is a good prefix points to many good suffixes, while a good suffix is pointed to by many good prefixes. To better understand the idea underlying this application, let us see figure 6, taken from Di Nunzio et al. (2003). In this figure, the mutual reinforcement between the stems read , comput , compil , accus and the derivations ability , er , ed , ation is shown. Note that if we considered generic pairs (prefix , suffix), the digraph would be more sparse, without the above illustrated mutual reinforcement.

The considerations made above suggest that we apply the core of Kleinberg X  X  algorithm to the prefixes-suffixes digraph, to find the stems of words. In this case we have a typical situation in which the symmetry problem arises: in fact, what we are looking for are good with reversed arcs? The theory developed in Section 6 allows us to reply in the negative to this question. Therefore, the theory developed in Section 6 could suggest the application of the core of Kleinberg X  X  algorithm to a new digraph, with inverted arcs, to tackle the stemming problem in an innovative way.
 242 AGOSTI AND PRETTO 8. Future work Our future work will focus on two specific topics: Acknowledgments During the preparation of this paper we greatly benefited from the stimulating working environment provided by Michela Bacchin, Nicola Ferro and Massimo Melucci. We would also like to thank the anonymous reviewers of this paper for the suggestions they gave us to improve its quality.
 Note References THEORETICAL STUDY OF A GENERALIZED VERSION 243
