 1. Introduction complex and involve several technologies at the same time. More-over, design time is reduced, add ing new constraints during pre-industrialization phases. In this context, sharing experience feedback and lessons learned is a key issue to improve the performance of organizations over time. However, sharing this knowledge is made difficult in large organizations for two main reasons: feedback and lessons learned repository can be of major interest to share knowledge through time and space. This is made all the more relevant that, during the past decades, considerable efforts have been made by industrial firms in order to standardize their products and their processes. Therefore, from a representational point of view, the knowledge acquired from previous problem solving experiences should be reused as much as possible to allow the domain experts to find appropriate solutions with minimal effort. After solving one problem (leading to an experience) of many to be solved, experts can transfer lessons learned from one context to another without having to achieve the whole problem solving process. However, in some fuzzy domains, experts may sometimes be more overconfident and they may miss very obvious features without a root cause problem analysis or with a misleading problem analysis. These new constraints are rarely taken into account in traditional problem solving methods.
The concern of this work is to address the knowledge capitaliza-tion and exploitation for continuous improvement in the resolu-tion of industrial problems. Different tools and approaches for the acquisition, representation and exploitation of knowledge have been proposed especially in knowledge engineering sciences ( Hicks, 2004 ). However, these methods dedicated to model expert knowledge modeling, show some practical difficulties: experts often lack motivation, skills and time to document their exper-tise, a mediator is often needed to remove semantic distance between the expert and the knowledge-based system, the regular update of the knowledge referential is difficult. Thus, experience feedback, which advocates a capitalization during the activities of experts, helps to overcome these disadvantages ( Henninger, 2003 ). Naturally, the captured knowledge remains fragmentary and requires additional efforts if it is to be generalized. Finally, a compromise appears between the quality and generality of knowledge and the effort required to acquire it. In a context of rapidly evolving knowledge (such as encountered in continuous improvement processes), it may be interesting to focus on reduc-ing the effort to obtain knowledge allowing experience feedback ( Weber et al., 2001 ). Besides, in many companies, quality certifi-cation requirements have led to standardized problem-solving processes in which experts investigate the causes of the problems and attempt to eradicate them.

In this context, the experience feedback approaches based on standardized problem solving meth ods can contribute to continuous improvement in business proces ses. In an experience feedback approach of this kind, the knowledge is generated, on one hand, from the capitalization of knowledge and know-how used in industrial processes and, on the other hand, formalized through the tools and methods used by actors in their work ( Jacobsson et al., 2010 ). For example, in the Swedish Center for Lessons Learned from Incidents and Accidents (NCO), learning from accidents is institu-tionalized in order to overcome various social barriers and to disseminate information so that new insights in accident prevention are as widely applied as possible ( Lindberg et al., 2010 ).
Historically, experience feedback was mainly based on statis-tical methods to identify some failure laws. However, this kind of feedback does not allow the extraction of expert knowledge from the technical data. This is made possible by the  X  X  X ognitive approach X  X  of experience feedback modeling. It models the expert knowledge of the organization and facilitates the enrichment of knowledge repository by using methods from artificial intelli-gence. The cognitive vision framework of experience feedback provides means of understanding, interpreting, storing and index-ing the activities of experts ( Weber and Aha, 2003 ).
This work specifically focuses on issues in the  X  X  X nalysis X  X  activity (mainly oriented towards the search of the root causes of a problem) of experience feedback processes. It uses semantic technologies and reasoning mechanisms to refine indexation and adaptation steps by keeping track of the analysis per formed. The analysis model must incorporate the possibility for an expert to appoint the most significant descriptors necessary for the best explanation of factors affecting problem occurrence and severity ( Beler, 2008 ). The result-ing analysis would correspond to a combination of relevant pieces of cognitive task analysis on which the domain expertise has asso-ciated a degree of belief that takes into account all the available evidence ( Shafer, 1990 ). Indeed, knowledge related to cognitive elements underlying the analysis generation and lessons learned can be produced by tools that enable the formal description of physical tasks and cognitive plans required from a user to accom-plish a particular work goal ( Militello and Hutton, 1998 ).
The paper is structured as follows. Section 2 exposes a state of the art concerning knowledge management for experience feedback and a comparison between the potentially relevant semantic technologies is discussed. Section 3 presents the three-layer model proposed for analysis improveme nt in experience feedback frame-work. An illustrative application example is exposed in Section 4. Finally, Section 5 concludes and discusses future challenges. 2. Knowledge management for experience feedback: state of the art 2.1. Modeling of cognitive experience feedback
Experience Feedback is a structured process of capitalization and exploitation of information extracted from the analysis of positive and/or negative events. Here, the term  X  X  X vent X  X  is used to generically identify occurrences that may pro duce safety, health, environmen-tal, quality, reliability or production impacts. Experience Feedback uses a set of human and technological resources that must be managed to reduce the repetition of errors and to promote effective practices ( Hermosillo et al., 2005 ). In all cases, the Experience Feedback process reveals two phases: the capitalization phase which allows the construction of the experience feedback repository and the exploitation phase which consists in the reuse of the capitalized experiences. In cognitive experience feedback, the capitalization phase can rely on problem solving methods commonly used in the industrial field (such as 9S ( IAQG, 2010 ), 8D ( Rambaud, 2006 ), 7-Step ( Shiba, 1997 ), PDCA, Six Sigma-DMAICS ( Geoff, 2001 )). The main activities in the problem solving process are ( Hicks, 2004 ): The composition of a problem solving team.

The description and assessment of the problem highlighted by events.

The analysis of events to identify their root causes and the validation of this analysis.

The formulation of the problem solutions and its application checking (corrective actions).

The action suggestions to prevent a new occurrence of the problem (preventive actions and lessons learned).

Our work fits into the scheme of the experience feedback framework detailed in Rakoto (2004 ). In this framework, a struc-tured description of gradual transformation, by actors, of an event into knowledge is proposed. For example, this can be used in a continuous improvement process through a problem solving method use (e.g. 8D or Six Sigma-DMAICS) for the Quality Assurance department assisting a supplier in improving the quality of its products/services. Despite the s eeming disparity in purpose and definition among the different problem solving methods, they have some base component features in common ( Fig. 1 ). The four components ( X  X  X ontext X  X nalysis X  X olutions X  X essons learned X  X ) of cog-nitive experience feedback process are described as follows:
The first level leads to the event description: we call it the context level. Context provides a general picture of the problem to solve prior to in depth analysis. It contains for instance the description of a faulty product and its use conditions when the problem occurred ( Bre  X  zillon, 1999 ).
Context is useful in representing and reasoning about a restricted state space within which a problem can be solved.
The identification of critical events is often made by a multi-disciplinary committee. In this case, risk criteria are the terms of reference (standards, measures, or expectations) used to make a judgement or a decision on the significance of risk to be assessed ( Gouriveau and Noyes, 2004 ). Risk criteria may include: associated costs and benefits, legal and statutory requirements or stakeholders concerns. Thus, beyond a critical threshold, the experience feedback is recorded systematically.
The second level leads to the definition and implementation of solutions for the event: we call this the case or experience level. An event must be analyzed according to its context (search of the causes and evaluation of the effects on the system) to propose corrective actions. A Tree Analysis Diagram is often used to list the various potential causes and their weighting factor that characterizes their degree of plausibility ( Smets and Kennes, 1994 ). In a causal tree, the worst thing that happened or almost happened is placed at the top. This formalization is important, since it focuses on the most likely branches (e.g. safety nets) to validate the root causes.
The  X  X  X nowledge X  X  level refers to the knowledge of one or several experiences, summarizing the involved analysis (knowledge by establishing semantic correspondences between activities of different problem solving metho ds. Using the suggested meta-model ( X  X  X ontext X  X nalysis X  X olutions X  X essons learned X  X ) a translation between the various underlying met hods is possible even though it may lead to the loss of some semantics or information. For each activity, we seek the semantic des cription, which accounts for which problem solving phenomena the activity is intended to represent.
The representation mapping of each activity into a common meta-model has been achieved thanks to a modeling process described in Anaya et al. (2010 ) which relies on the following three axes: the process itself, and includes evaluation activities that lead to improvements in the process. For example, in the CHAIN model of experience feedback ( Lindberg et al., 2010 ), six evaluation activ-ities have been developed to ensure that all important phases of the process are covered. These activities are as follows: 2.2. Semantic technologies in experience feedback exchanged by heterogeneous and geographically distributed organizations/systems is meaningful and that all the communi-cating parts interpret it in the same way (e.g., Chituc et al., 2008 ).
They provide means to describe knowledge about an application domain, to use systematically and to share this domain knowl-edge in order to achieve the tasks of the problem-solving process. way is the use of semantics which describe the meaning of a word or a concept. Indeed, the semantic annotation and reconciliation using ontology is a systemic solution to solve an important conceptual barrier for interoperability, namely the semantic incompatibility ( Chen et al., 2008 ).
 integration of knowledge in a way that is reusable by several applications across industrial processes, from design to control and execution. For instance, for process automation, semantic description of products and services allows the sharing of product definitions between companies ( Zhao and Liu, 2008 ). Ontologies are formal shared conceptualization in which the semantics are embodied in descriptions of the concepts of the application domain, the relationships between them and their properties ( Gruber, 1993 ). Decision support systems based on semantic technologies have already been applied for the optimization of industrial processes ( Kamsu Foguem et al., 2008 ).
 tation languages (e.g. Description Logics (DLs) ( Borgida, 1996 )) or specifically developed ontology representation languages (e.g. OWL (Web Ontology Language) ( Casteleiro and Diz, 2008 )). The language semantics are commonly expressible through first order logic and may contain different features depending on what was considered important by the language developers. But it should also be chosen according to the needs of the resulting ontology-based application. At least three trends relating to ontology languages ( Van Eck et al., 2001 ) can be listed: the information modeling trend, wherethefocusisonobjectsand object properties (e.g. frame logics ( Angele and Lausen, 2004 )).
Here, relations and interactions are considered as secondary. the semantic network trend (e.g. Resource Description Frame-work Schema (RDFS) ( Yao and Etzkorn, 2006 ) with a less strict semantics and where the ontology is usually described like as an arbitrary graph. the description logics trend (e.g Description Logics (DLs)) ( Borgida, 1996 ) and Conceptual Graphs (GCs) ( Sowa, 1984 ), where the focus is on concepts and their roles. It uses first order predicate logic as the underlying formalism and makes use of abstraction and refinement as structuring primitives.
This trend combines well-defined logical semantics with efficient reasoning.

The information modeling and semantic network trends lack formal (logic-based) semantics or are generally undecidable, whereas the description logics trend overcomes these deficiencies ( Baader et al., 2007 ). Besides, on the basis of several criteria (expressive power, reusability, fo rmal precision), our work relates to the description logics trend because, it provides means to under-stand the application domain and to make reliable automated formal reasoning. Particularly, t he ontology with conceptual graphs approach undertaken in this paper is very interesting for problem solving. Indeed, the properties (e.g . formal semantics, separation of knowledge types and possible translations into other languages ( Sowa, 2000 )) of conceptual graphs make them suitable for model-ing and specifying experiences feedback processes in which reason-ing plays an essential role. 2.3. Reasoning techniques in experience feedback
In our works, we have considered that an experience feedback framework should rely on the conceptualization of domain vocabulary and relevant knowledge relating to the activities of an organization. The objectives are to explicitly represent experi-ential knowledge in an organization, and allow its access and re-use by members. Capitalization and Exploitation are the two main sub-processes of an experience feedback process ( Rakoto, 2004 ). Capitalization is based on the industrial problem solving method as introduced in Section 2.1. Each step is a capitalization sub-process (event and context description, analysis and solution determination). Exploitation is based on the following sub-pro-cesses: retrieval, adaptation and generalization. These steps are the core techniques that support the Experience Feedback pro-blem solving cycle and have been inspired by the Case Based reasoning (CBR) cycle ( Aamodt and Plaza, 1994 ). A general CBR cycle may be described by the following four cyclical steps: (a) Retrieve the experienced cases from the case-base whose (b) Reuse the solutions from the retrieved cases to elaborate a (c) Revise (adapt) the proposed solution to take into account the (d) Retain the new problem and its revised solution as a new
Case-based reasoning is  X  in effect  X  a cyclic and integrated process of problem solving, learning from this experience, and solving a new problem. However, the reuse of experiences poses multiple problems, often poorly resolved, including the reuse of analysis elements. For instance, similar cases may not have similar output/event states since problem solver may have different way to break down the problem. Therefore, some researchers previously proposed the clustered ontology approach to represent the semantic meaning of a case ( Lau et al., 2009 ). To overcome the analysis reuse difficulty, we consider appropriate to provide key contextual information of analysis associated to experience feedback and lessons learned. This is based on seman-tic annotation, which enriches the unstructured or semi-struc-tured data with a context that is further linked to the structured knowledge of a domain. More formally, semantic annotation is the act of attaching metadata information about the semantic content of a document, in such a way as to tag ontology class instance data and map it into ontology classes ( Uren et al., 2006 ). The main requirement for appropriate analysis reuse is to provide the references from the lessons learned to a semantic repository, containing further knowledge. Such semantic annotation in a lesson learned document is built on a controlled vocabulary (ontology) and the generated additional information identifies or defines a concept in a semantic model in order to describe the analysis part of that document. Compared with traditional case representations (e.g. frame logics ( Angele and Lausen, 2004 )), conceptual graphs formalism has the advantages of enriched semantic representation with its native ontology integration.
The conceptual graphs formalism has a set of reasoning operations using some mappings between two graphs that respect their structure. These reasoning operations rely on the mathematical field of graph theory, but keep the properties of consistency and completeness with respect to the first order predicate logic, which gives a  X  X  X ormal semantic X  X  ( Mugnier, 1995 ). Some researchers have adopted Conceptual Graphs directly as a formalism for representing semantic annotations in different contexts ( Dieng-Kuntz and Corby, 2005 ). The use of conceptual graphs operations in a structured problem solving approach can help by stipulating which analytical tools (e.g. diagnostic tools) to use and when. A structured graph-based method can also offer a guide as to when a particular tool is inappropriate (e.g. poor equipment or tool placement) during experience feedback reasoning. Conceptual graph operations (projection, rules and constraints) ( Baget and Mugnier, 2002 ) serve as reasoning mechanisms for experiences retrieval. Thus the matching of relevant experiences in a given context is based on semantic similarity measurement between conceptual graphs built from the same ontology ( Corby et al., 2006 ). Ontology-guided search using similarity measurement of domain-specific ontologies, enables to judge the relevance of information dealing with the subject expressed in a request, and provides a ranking of responses ( Genest and Chein, 2005 ). 3. Improving the  X  X  X nalysis X  X  activity of experience feedback processes: a three-layer model
This section focuses on the  X  X  X nalysis X  X  activity of the experi-ence feedback processes, since it influences both what is assumed to be important causal factors behind problems (e.g. accidents resulting from organizational failures) and what types of remedial actions are proposed during knowledge exploitation. Usually, case adaptation knowledge is harder to acquire and demands a significant knowledge engineering effort ( Policastro et al., 2004 ).
An alternative to overcome such difficulties in acquiring adapta-tion knowledge, is the improvement of the  X  X  X nalysis X  X  activity, where case adaptation knowledge is extracted from previously obtained knowledge associated to underlying reasoning of analy-sis models. We emphasize the importance to go into  X  X  X nalysis X  X  activity thoroughly with structured mechanisms to define, recog-nize and reuse the problem-solving trace of the experience feed-back process.
 or Root Cause Analysis) may be used to analyze and bring back knowledge on problems and near-problems ( Katsakiori et al., 2009 ).
Such analysis methods are closely associated with analysis models that reflect the different views of causality, human agency, and moral responsibility. Analytic models postulate clear cause X  X ffect links whereas the systemic models treat problems as emergent phenomena of complex systems ( Hollnagel, 2004 ). The purpose is to provide information that is useful for correct knowledge reuse and for the prevention of future problems.
 improvement of the  X  X  X nalysis X  X  activity of the experience feedback process. It allows a truly semantic representation of knowledge and a more flexible reasoning about modeling expertise (including the quality of context information) ( Fig. 2 ). This model consists of an operational layer (described with Root Cause Analysis), a semantic layer (specified with conceptual graphs model) and a belief level (represented with Transferable Belief Model). 3.1. Operational layer using Root Cause Analysis (RCA), which aims at identifying, correcting and eliminating the root causes of problems or events. General principles of Root
Cause Analysis include activities that take place before or after the occurrence of the problem, such as initial reporting for identifica-tion of root causes, problem investigation with understandable conclusions, selection of one true root cause, establishment of a sequence of events, and experience-based problem prevention ( Wilson et al., 1993 ). The RCA process involves data collection, cause charting, root cause identification and recommendation generation and implementation. There are many analytical meth-ods and tools available for determining root causes to unwanted occurrences and problems ( Vanden Heuvel et al., 2008 ). Useful tools for Root Cause Analysis are, for example: the  X  X 5 Whys X  X  ( Ohno, 1988 ), the Ishikawa diagrams (also called Fishbone Dia-grams) ( Ishikawa, 1990 ) or the Failure Modes Effects Analysis (FMEA) ( Stamatis, 2003 ).
 the  X  X 5 Whys X  X  that is a RCA technique for engineers or technically shrewdness individuals to help get to the true causes of problems.
The method consists in constructing a representation graph of the chain of causes that led the main fault. It is used to explore the cause/effect relationships underlying a particular problem. In fact, as a question-asking method, it allows the domain experts to gradually identify the origin of a problem (root cause). The  X  X 5 Whys X  X  technique postulates that five iterations of asking why are generally sufficient to get to a root cause. Basic categories of root causes are the following: material cause (e.g. defective raw material), equipment cause (e.g. incorrect tool selection), envir-onment cause (e.g. forces of nature), management cause (e.g. poor management involvement), method cause (e.g. poor procedures), and management system cause (e.g. training lacking).
 steps of RCA in order to understand the relationships between contributory factors, the root cause and the defined problem. This validation process displays causal factors (such as human errors and component failures) in a tree-structure and includes the following elements ( Fig. 3 ): something happened X  X  is required to unearth all underlying issues.
This corresponds to a practical compromise between the depth of investigation and the corresponding effort. The method proposed in this paper is not limited to this level of investigation. For general analysis of the cause of any problem, usually in a multi-disciplinary team setting, contributory factors are discussed and in-depth causal factors are written down and traced back until a clear understanding of the root cause is reached. In the proposed framework, the agreement among experts is reached according to a hierarchical fusion of expert opinion in the Transferable Belief
Model (TBM) ( Smets and Kennes, 1994 ), which is an elaboration on the Dempster X  X hafer theory ( Shafer, 1976 ). The general idea is to merge conjunctively subgroups of expert opinions in each domain of expertise (e.g. design or production areas), before disjunctively merging the different results ( Minh Ha-Duong, 2008 ). This hierarchical fusion emphasizes the agreement and ignores conflict between the original beliefs, as far as the degree of conflict remains low between experts. 3.2. Semantic layer using formal ontology
This layer is intended to provide an appropriate domain voca-bulary with the description of a formal ontology allowing the formalization of knowledge coming from experience feedback. By providing controlled structured vocabularies for the consistent descriptions of entities of different sorts and the semantics frame-work for capturing the relevant relationship between these entities, ontologies support retrieval of data and semantic enhancement of a domain of knowledge or discourse ( Gruber, 1995 ). In this frame-work, a general description of causal factors is provided with sufficient background informat ion about their meaning and con-straints on their logically consistent application. Since synonym problems may cause the mismatching of similar cases, an ontology provides a formal semantic representation of the objects for case representation. For instance, th e semantic layer is used to ensure that two concepts, which might appear in different databases in different forms with different n ames, can be described as truly equivalent (i.e. they describe the same object). This enables a more shareable and consistent descriptive representation of all of the available information, showing what things interact with and what role they might have in a given context ( Guarino, 1995 ). An ontology thus describes the logical structure of a domain, its concepts and the relations between them. The ontology of a problem domain specifies concepts and relations about which knowledge is to be accumulated and processed. It helps to keep the domain knowledge separate from the operational knowledge so that both can be altered without affecting the other ( Uschold and Gruninger, 1996 ). Ontology devel-opment is fundamentally a creative modeling activity of several domain experts that define the basic domain concepts and axioms for communication between softwar e systems and interoperability between concurrent engineering teams. This in turn improves problem solving and decision making, since it permits to keep track of everyone X  X  experiences and to provide well documented work specifications. A formal specific on tology for experience feedback processes can be a very useful tool for conveying an accurate meaning to collaborative work environment between domain experts ( Dieng-Kuntz et al., 2006 ). As a result, it is shown that shareable ontologies are a fundam ental precondition for reusing knowledge, serving as means for integrating problem-solving, domain-representation, a nd root cause analysis.

Conceptual graphs ( Sowa, 2000 ) are clearly a relevant formal-ism for representing such an ontology, since it supports structur-ing of enterprise information and knowledge management with formal semantics allowing unambiguous understanding of the meaning of information exchanged (e.g. messages, business documents) ( Khelif et al., 2007 ). Another aspect of knowledge structuring is that semantically related pieces of information are gathered together. Hence, it is possible to really report as much as possible experiences analysis and solution(s).

As a short definition, a conceptual graph is a directed, finite, connected graph consisting of concepts and conceptual relations. Concepts and relations represent d eclarative knowledge. Conceptual graphs are provided with a semantics in first-order-logic, defined by a mathematical mapping classically denoted by F ( Sowa, 1984 ).
This shows how the symbols of conceptual graphs theory map into corresponding quantities in logic theory, transforming the axiomsofitsdomainintoaxiomsortheoremsoffirst-order-logic. Concept types are translated into unary predicates and relations into predicates of the same arity. Indiv idual markers become constants. To an ontology O is assigned a set of formulas F (O) which translates the partial orders on concept types and relations: if t and t 0 are concept types, with t 0 o t , one has the formula 8 x ( t 0 ( x ) similarly, if r and r 0 are n -ary relations, with r 0 o r , one has the formula 8 x 1 , y , x n ( r 0 ( x 1 , y , x n ) -r ( x 1, mapping provides a vehicle for the formalization of ontologies with mathematical rigor.

From a conceptual point of view, we choose to represent basic elements of root cause in a tree structure showing the possible hierarchical organization of an ontology. For instance, in Fig. 4 ,  X  X  X efective raw material X  X  is a sub-concept of  X  X  X aterial Cause X  X  and the others basic elements (Wrong type for job, Lack of raw material) of  X  X  X aterial Cause X  X  are tree down from it.
Procedural knowledge can be attached through graph opera-tions exploiting the graph-theoretic features of the networks during reasoning processes that preserve the mathematical semantics ( Chein and Mugnier, 2008 ):
With respect to graph rules, semantic-based reasoning are executed for inferring new context information grounded on 3.3. Belief layer using Transferable Belief Model is capturing and making sense of imprecise and sometimes conflicting data, about the physical world. This section addresses the problem of representing, reasoning about and overcoming uncertainty in experience feedback information. It aims to provide a way to manage and integrate uncertainty at different stages of the analysis phase in order to have the most suitable analysis information.
 tainty: improving the quality of analysis information, and infer-ring new kinds of analysis information ( Bettini et al., 2010 ).
Reasoning to improve the quality of analysis information typically takes the form of multi-expertise fusion where data from differ-ent expertises are used to increase confidence, resolution or accuracy. Reasoning for the purpose of inferring new analysis information typically takes the form of deducing higher-level Relation analysis (like the Failure analysis) from lower-level analysis (like the Spectroscopic Analysis, Surface Analysis or Software Based Fault Location Techniques).

Different approaches have been used for reasoning on uncer-tain context information (fuzzy logic ( Zadeh, 1999 ), probabilistic logic ( Fagin et al., 1990 ), Bayesian networks ( Ranganathan et al., 2004 ), Hidden Markov models ( Liao et al., 2007 ), and the Dempster X  X hafer theory of evidence ( Shafer, 1976 )). In this work, the Dempster X  X hafer theory is chosen to represent any form of uncertainty (full knowledge, partial or total ignorance), since it is a generalization of the Bayesian theory of subjective probability and enables the assessment of the degree of belief in a fuzzy event. Dempster X  X hafer theory is a mathematical theory of evidence based on belief functions and plausible reasoning, which is used to combine separate pieces of information (evidence) to calculate the probability of an event ( Shafer, 1990 ). Specifically, we use reasoning mechanisms of the Dempster X  X hafer theory for combining the independent analysis of multiple expertises each of which analyses one and the same problem. The belief in a hypothesis is constituted by the sum of the masses of all subsets of the hypothesis. In fact, the belief level is supported by the Transferable Belief Model (TBM) ( Smets and Kennes, 1994 ), which is an elaboration on the Dempster X  X hafer theory. Beliefs can be held at two levels: (1) a credal level where beliefs are interpreted and quantified by belief functions, (2) a pignistic level where beliefs can be used to make decisions and are quantified by probability functions ( Smets, 2005 ). When a decision must be made, beliefs at the credal level induce a probability measure at the pignistic level, i.e. there is a pignistic transformation from belief functions to probability functions.

Some general evidence properties, such as the independence or the level of conflict, are considered in the choice of the appropriate combination rule. Therefore some authors (e.g. Minh Ha-Duong, 2008 ; Klein et al., 2010 ) have proposed a hierarchical approach with different combination rules used f or different source clusters and fusion level. The general idea is to merge conjunctively coherent sources, before disjunctively merging the different results. We propose a hierarchical fusion procedure based on this idea. Experts are not combined symmetri cally, but grouped into expertise domains where they share a domain specific explanation of the way the world works, including the relevant perceptual features in their domain. Within groups, beliefs are combined using the cautious conjunction rule ( Denoeux, 2008 ), whereas across groups the non-interactive disjunction ( Shafer, 1990 ) is used. As a way to add doubt to a Basic Belief Assignment, the discounting rule is useful for adding lots of doubt to experts X  opinions, or saying that some experts are less qualified than others ( Shafer, 1976 ). Expert group opinions are taken as not independent information sources, the cautious con-junction operator emphasizes the agreement and ignores conflict between the original beliefs (as far as the degree of conflict remains low between experts). As shown in Fig. 5 , a two-level fusion scheme is proposed: the first-level outputs of each group are the inputs of the fusion second-level, which are thus combined to obtain the second-level output across groups . This more comprehensive infor-mation is the basis on which a belief-based decision is made, in order to determine the most credible root cause with the paths leading to this root cause and the plausibility of their occurrence. Since root cause analysis provides accurate information for solving problem, tasks become easier. 4. Application example 4.1. The T-REX project
In order to foster transfer of innovation between academic and industry, the AVAMIP (regional agency for the promotion of research in Midi-Pyre  X  ne  X  es (France)) has supported the T-REX project launched by the ENIT (National Engineering School of Tarbes, Southern France). The T-REX project aimed at offering methodological and software support for knowledge manage-ment (KM), and in particular for capitalization and exploitation phases of experience feedback processes. This project is carried out in collaboration with Alstom Transport that develops and markets the most complete range of systems, equipment and services in the railway sector (e.g. rail vehicles, rail infrastructure, and associated maintenance services). Particularly, Tarbes plant provides throughout the world electric range of products and services for traction systems (e.g. electric propulsion systems, electronic power modules and switchgears).
 client X  X erver architecture in which the user interface, functional process logic ( X  X  X usiness rules X  X ), computer data storage and data access are developed and maintained as independent modules.
This application displays information related to such services as: analyze an event according to its context. The analysis level is handled for use in investigating and categorizing the root causes of events with their degree of plausibility. Following the analysis level (identification of the most plausible root cause for a major contributor to the event) and solution level (sp ecification of workable corrective actions), achievable recommendat ions for preventing their recur-rences are then generated (lesso ns level). These recommendations are implemented by the scheduling or tracking of work activities (e.g. modification of the risk assessment process, development of a preventive maintenance strategy or review of the vocational training development process). It is also possible to ensure an efficient retrieval of experience feedback elements by enabling multi-criteria search and inferences based on domain knowledge ( Fig. 7 ). 4.2. Case study: a breakage failure in the ignition system
In this case study from the railway industry, a concrete example is described showing, step-by-step, the three layers of the proposed model. The context description is a failure such as a breakage in the MOS driver component for an ignition card. The deterioration of the ignition system tends to restrain the perfor-mance of the traction system. To cope with such a situation it is important, as described above, to handle the problem and therefore to determine what corrective/preventive actions are appropriate. 4.2.1. Operational layer: root causes investigation
The fishbone diagram is used to identify root causes that potentially contribute to a breakage of the MOS driver component for an ignition card. Fig. 8 shows equipment, materi-als and methods factors that may cause the overall problem. Causes are traced back to root causes with the  X  X 5 Whys X  X  technique. 4.2.2. Semantic layer: ontology description
The ontology description enables to capture the semantics of domain expertise by deploying knowledge representation primi-tives, allowing handling a more specific vocabulary pertaining to the case study. The domain ontology of Fig. 4 is enriched (from the general to the specific) in Fig. 9 in which the additional concepts are written in bold. If needed, further knowledge can be captured by logical rules (e.g. low magnetic noise design rules) or constraints (e.g. traction characteristics) which give deep under-standing on application. 4.2.3. Belief layer: fusion of domain expert opinions
Some lessons learned are generated by domain experts during the problem solving process and they may help to prevent similar problems from occurring in the future. We now describe all the hypotheses that are specified by the three different experts involved in the problem solving process:  X  Hypothesis-A from electrical expert :  X  X  X hermal overheating resulting in short circuits (e.g. latchup) X  X .  X  Hypothesis-B from design expert :  X  X  X ncorrect design of the ignition card X  X .  X  Hypothesis-C from electromagnetic expert:  X  X  X river X  X  high sensi-bility to magnetic fields X  X .

Two qualitatively different groups of distributions can be identified (a  X  X  X roduction X  X  group and a  X  X  X esign X  X  group): Group 1  X  { Electrical expert , Electromagnetic expert }, Group 2  X  { Design expert }.

We use the two qualitative groups outlined above for the hierarchical approach ( Fig. 10 ): (i) the beliefs of Electrical expert and Electromagnetic expert are combined using a cautious con-junction operator; (ii) the second stage combines the two groups together using the non-interactive disjunction operator.
In Table 1 , each line describes aspects of the basic belief assignment using for the hierarchical fusion approach. For any subset X , the basic belief assignment with the mass m ( X ) repre-sents the certain belief that the state of the world is in X . For decision-making in the Transferable Belief Model, the pignistic probability function of m , defined by Smets (2005 ) is used: BetP  X  o  X  X  1 1 m  X  | BetP  X  A  X  X  X  0  X  0 : 0425 = 2  X  0 : 125 = 3  X  1 = 0 : 55 0 : 11 BetP  X  C  X  X  X  0  X  0 : 3315 = 2  X  0 : 125 = 3  X  1 = 0 : 55 0 : 38
In the case study a decision-maker should select first Hypoth-esis-B from the design expert, because it maximizes the expected utility. In summary for the breakage failure in the ignition system, the action that provides an optimal answer is  X  X  X o redesign of the ignition card without using MOSFET driver function with an alternative supplier X  X . 4.3. Evaluation of the framework At Alstom Transport Tarbes, it was decided to implement an Action Plan Management System that would support consolida-tion of process solving tools according to methods adopted by the company. This software system is intended to allow users to easily define action plans, manage their progress and follow up, and monitor the results to ensure the improvement of the operational activities. The current version of this framework enables users to share actions or action plans across different sites of ALSTOM Transport, but they can only create and manage corrective, preventive or improvement actions from various sources (e.g. 8D, customer complaints, audits and board reviews). The T-REX project is specialized by studies made for the railway industry sector about the integration of a knowledge package in the Action Plan Management System. The proposed framework will be integrated into such industrial applications via a colla-borative portal available throughout the ALSTOM Transport sites. At present, the analysis module of T-REX has given some satisfac-tions and early outcomes assessments by end-users are very encouraging. This module endeavors to provide a challenging and supportive experience feedback environment for users by enhancing the key analysis and subject knowledge appropriate to validate the most plausible root cause of an event. Such causal factor is the greatest contributor that, if eliminated, would have either prevented the occurrence or reduced its severity. A pre-liminary evaluation of the T-REX application has resulted in encouraging results with respect to both increasing the speed of problem solving processes by experts, compared to a previous mean (developed in Excel), and enhancing the accuracy of the analyses. Enhancing models analysis of root causes allows the development of systematic improvements and assessment of the impact of corrective programs with respect to the top management quality objectives.

The work presented in this paper has some common features with the Decisional DNA approach ( San X   X  netal.,2009a , 2009b ): Experience Knowledge Structure, formal ontology and uncertainty management. However, the approach proposed by Sanin has some restrictions: (i) some formal models (such as physical equations) are needed to describe the knowledge experience of a specific domain. Such models generally do not exist for the systems and the problems tackled in our study. (ii) Given the multiple Sets of Experience, if partial knowledge is encoded by the function of certainty; their combination is not described in an explicit way. Our work complements the Deci sional DNA approach with the process used to find root causes of problems and a hierarchical fusion of set of Experience Knowledge in the Transferable Belief Model. The strength of the DNA approach is that it proposes a multi-domain knowledge structure able to be adaptable and multipurpose. 5. Conclusion
As presented in this paper, the proposed approach relates to knowledge management in problem solving and experience feed-back processes. The main contribution is the proposition of a dedicated analysis model relying on three complementary layers: operational, semantic and belief. This model helps to support experts:
When they look for the most plausible root causes for a problem (use previous analysis),when they elaborate an action plan to solve and eradicate the problem (use previous solutions).
More specifically, with this cognitive approach of experience feedback, root causes are reasonab ly identifiable and the analysis model associated to lessons learned indicates the arguments in favor of the chosen solution according to experiential knowledge exploitation.

There are several practical industrial benefits of the proposed technologies/methodologies experimented in the railway indus-try sector:
The description of the basic elements of root cause at the semantic level prevents a model analysis to be misunderstood and facilitates the reasoning processes over the expert opi-nions. Moreover, the semantic enhancement of experience feedback modeling makes it possible to better identify major issues for industrial processes improvement.

The knowledge exploitation is possible asynchronously and remotely throughout the organization: the expertise assets are enriched over time and shared.

The explicit integration of the expert opinions on the plausi-bility of hypotheses during root cause analysis enables to better take into account this expertise for reasoning. The use of the Transferable Belief Model and related fusion mechan-isms facilitates the inference. However, some work still remains to make this representation more easily accessible to practitioners.

From a more global perspective, the knowledge engineering technology implemented enables to collect and exploit experi-ential knowledge in continuous improvement processes of any complex system in which problematic events require in depth (expert) analysis.

Several issues requiring additional efforts are currently under investigation: an improved support of experts when they split masses between hypotheses since the use of the TBM at an operational level may not be intuitive, the active dissemination (push) of experiences to the relevant actors by integrating the actor profiles (expertise domain, competences), the coupling of the experience feedback model with specific architectural principles ( Krishnan and Bhatia, 2009 ) to foster better interoperability with business applications.
 Acknowledgment
The authors wish to thank Elisabeth Kuntz and Eric Reubrez, employees of the  X  X  X nformation, Decision and Communication for Enterprises Center X  X , for the development of the software T-REX. References
