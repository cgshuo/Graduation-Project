 In recent years, there is a growing interest in sharing personal opinions on the Web, such as product reviews, economic analysis, political polls, etc. These opinions cannot only help inde-pendent users make decisions, but also obtain valuable feedbacks (Pang et al., 2008). Opinion oriented research, including sentiment classifica-tion, opinion extraction, opinion question ans-wering, and opinion summarization, etc. are re-ceiving growing attention (Wilson, et al., 2005; Liu et al., 2005; Oard et al., 2006). However, most existing works concentrate on analyzing opinions expressed in the documents, and none on how to represent the information needs re-quired to retrieve opiniona ted documents. In this paper, we focus on opinion retrieval, whose goal is to find a set of documents containing not only the query keyword(s) but also the relevant opi-nions. This requirement brings about the chal-lenge on how to represent information needs for effective opinion retrieval. 
In order to solve the above problem, previous work adopts a 2-stage appro ach. In the first stage, relevant documents are determined and ranked an opinion score is gene rated for each relevant document (Macdonald and Ounis, 2007; Oard et al., 2006). The opinion score can be acquired by either machine learning-based sentiment classifi-ers, such as SVM (Zhang and Yu, 2007), or a sentiment lexicons with weighted scores from training documents (Amati et al., 2007; Hannah et al., 2007; Na et al., 2009). Finally, an overall score combining the two is computed by using a score function, e.g. linear combination, to re-rank the retrieved documents. 
Retrieval in the 2-stage approach is based on document and document is represented by bag-of-word . This representation, however, can only ensure that there is at least one opinion in each relevant document, but it cannot determine the relevance pairing of individual opinion to its target. In general, by simply representing a document in bag-of-word , contextual informa-tion i.e. the corresponding target of an opinion, is neglected. This may result in possible mismatch between an opinion and a target and in turn af-fects opinion retrieval performance. By the same token, the effect to documents consisting of mul-tiple topics, which is common in blogs and on-line reviews, is also significant. In this setting, even if a document is regarded opinionated, it cannot ensure that all opinions in the document are indeed relevant to the target concerned. Therefore, we argue that existing information representation i.e. bag-of-word , cannot satisfy the information needs for opinion retrieval. 
In this paper, we propose to handle opinion re-trieval in the granularity of sentence. It is ob-served that a complete opinion is always ex-pressed in one sentence, and the relevant target of the opinion is mostly the one found in it. Therefore, it is crucial to maintain the associative information between an opinion and its target within a sentence. We define the notion of a top-ic-sentiment word pair, which is composed of a topic term (i.e. the target) and a sentiment word (i.e. opinion) of a sentence. Word pairs can maintain intra-sentence contextual information to express the potential relevant opinions. In addi-tion, inter-sentence contextual information is also captured by word pairs to represent the relation-ship among opinions on the same topic. In prac-tice, the inter-sentence information reflects the degree of a word pair. Finally, we combine both intra-sentence and inter-sentence contextual in-formation to construct a unified undirected graph to achieve effective opinion retrieval. The rest of the paper is organized as follows. In Section 2, we describe the motivation of our approach. Section 3 presents a novel unified graph-based model for opinion retrieval. We evaluated our model and the results are presented in Section 4. We review related works on opi-nion retrieval in Section 5. Finally, in Section 6, the paper is concluded and future work is sug-gested. In this section, we start from briefly describing the objective of opinion retrieval. We then illu-strate the limitations of current opinion retrieval approaches, and analyze the motivation of our method. 2.1 Formal Description of Problem Opinion retrieval was first presented in the TREC 2006 Blog track, and the objective is to retrieve documents that express an opinion about a given target. The opinion target can be a  X  X radi-tional X  named entity (e.g. a name of person, lo-cation, or organization, etc.), a concept (e.g. a type of technology), or an event (e.g. presidential election). The topic of the document is not re-quired to be the same as the target, but an opi-nion about the target has to be presented in the document or one of the comments to the docu-ment (Macdonald and Ounis, 2006). Therefore, in this paper we regard the information needs for opinion retrieval as relevant opinion . 2.2 Motivation of Our Approach In traditional information retrieval (IR) bag-of-word representation is the most common way to express information needs. However, in opinion retrieval, information need target at re-levant opinion , and this renders bag-of-word re-presentation ineffective. 
Consider the example in Figure 1. There are three sentences A , B , and C in a document d Now given an opinion-oriented query Q related to  X  Avatar X  . According to the conventional 2-stage opinion retrieval approach, d i is represented by a bag-of-word . Among the words, there is a topic term Avatar ( t 1 ) occurring twice, i.e. Avatar in A and Avatar in C , and two senti-ment words comfortable ( o 1 ) and favorite ( o 2 (refer to Figure 2 (a)). In order to rank this doc-ument, an overall score of the document d i is computed by a simple combination of the rele-vant score (  X  X  X  X  X   X  X  X  ) and the opinion score (  X  X  X  X  X   X  X  ), e.g. equal weighted linear combination, as follows.  X  X  X  X  X   X  X  be computed by using lexicon-based Figure 1: A retrieved document d i on the target  X  Avatar X  . 
Although bag-of-word representation achieves good performance in retr ieving relevant docu-ments, our study shows that it cannot satisfy the information needs for retrieval of relevant opi-nion . It suffers from the following limitations: (1) It cannot maintain contextual information; thus, an opinion may not be related to the target of the retrieved document is neglected. In this example, only the opinion favorite ( o 2 ) on Avatar in C is the relevant opinion . But due to loss of contextual information between the opinion and its corresponding target, Avatar in A and com-fortable ( o 1 ) are also regarded as relevant opi-nion mistakenly, creating a false positive. In re-ality comfortable ( o 1 ) describes  X  X he seats in IMAX X , which is an irrelevant opinion, and sen-tence A is a factual statement rather than an opi-nion statement. Figure 2: Two kinds of information representa-tion of opinion retrieval. ( t 1 =  X  X vatar X  o 1 =  X  X om-fortable X , o 2 =  X  X avorite X  ) (1) Current approaches cannot capture the re-lationship among opinions about the same topic. Suppose there is another document including sentence C which expresses the same opinion on Avatar . Existing information representation simply does not cater for the two identical opi-nions from different documents. In addition, if many documents contain opinions on Avatar , the relationship among them is not clearly represented by existing approaches. 
In this paper, we process opinion retrieval in the granularity of sentence as we observe that a complete opinion always exists within a sentence (refer to Figure 2 (b)). To represent a relevant opinion , we define the notion of topic-sentiment word pair, which consists of a topic term and a sentiment word. A word pair maintains the asso-ciative information between the two words, and enables systems to draw up the relationship among all the sentences with the same opinion on an identical target. This relationship informa-tion can identify all documents with sentences including the sentiment words and to determine the contributions of such words to the target (topic term). Furthermore, based on word pairs, we designed a unified graph-based method for opinion retrieval (see later in Section 3). 3.1 Basic Idea Different from existing approaches which simply make use of document relevance to reflect the relevance of opinions embedded in them, our approach concerns more on identifying the re-levance of individual opinions. Intuitively, we believed that the more relevant opinions appear in a document, the more relevant is that docu-ment for subsequent opinion analysis operations. Further, since the lexical scope of an opinion does not usually go beyond a sentence, we pro-pose to handle opinion retrieval in the granularity of sentence. 
Without loss of generality, we assume that  X ,  X   X ,  X   X , X ,  X  are query keywords. Opinion re-trieval aims at retrieving documents from  X  with relevant opinion about the query  X  . In ad-dition, we construct a sentiment word lexicon  X   X  and a topic term lexicon  X   X  (see Section 4). To maintain the associative information between the target and the opinion, we consider the document set as a bag of sentences , and define a sentence capture the intra-sentence information through the topic-sentiment word pair. Definition 1 . topic-sentiment word pair  X   X  X  X  con-sists of two elements, one is from  X   X  , and the other one is from  X   X  . 
The topic term from  X   X  determines relevance by the query term matching, and the sentiment word from  X   X  is used to express an opinion. We use the word pair to ma intain the associative in-formation between the topic term and the opinion word (also referred to as sentiment word). The word pair is used to identify a relevant opinion in a sentence. In Figure 2 (b), t 1, i.e. Avatar in C , is a topic term relevant to the query, and o 2 ( X  favo-rite  X ) is supposed to be an opinion; and the word levant opinion . Similarly, we map each sentence in word pairs by the following rule, and express the intra-sentence information using word pairs. 
For each sentiment word of a sentence, we choose the topic term with minimum distance as the other element of the word pair: 
According to the mapping rule, although a sentence may give rise to a number of word pairs, only the pair with the minimum word distance is selected. We do not take into consideration of the other words in a sentence as relevant opinions are generally formed in close proximity. A sen-tence is regarded non-opinionated unless it con-tains at least one word pair. 
In practice, not all word pairs carry equal weights to express a relevant opinion as the con-tribution of an opinion word differs from differ-ent target topics, and vice versa. For example, that, inter-sentence contextual information is ex-plored. This is achieved by assigning a weight to each word pair to measure their associative de-grees to different queries. We believe that the more a word pair appears the higher should be the weight between the opinion and the target in the context. 
We will describe how to utilize intra-sentence contextual information to express relevant opi-nion , and inter-sentence information to measure the degree of each word pair through a graph-based model in the following section. 3.2 HITS Model We propose an opinion retrieval model based on HITS, a popular graph ranking algorithm (Kleinberg, 1999). By considering both in-tra-sentence information and inter-sentence in-formation, we can determine the weight of a word pair and rank the documents. 
HITS algorithm distinguishes hubs and au-thorities in objects. A hub object has links to many authorities. An authority object, which has high-quality content, would have many hubs linking to it. The hub scores and authority scores are computed in an iterative way. Our proposed opinion retrieval model contains two layers. The upper level contains all the topic-sentiment word level contains all the docum ents to be retrieved. Figure 3 gives the bipartite graph representation of the HITS model. 
For our purpose, the word pairs layer is consi-dered as hubs and the documents layer authori-ties. If a word pair occurs in one sentence of a document, there will be an edge between them. In Figure 3, we can see that the word pair that has links to many documents can be assigned a high weight to denote a strong associative degree between the topic term and a sentiment word, and it likely expresses a relevant opinion . On the other hand, if a document has links to many word pairs, the document is with many relevant opi-nions , and it will result in high ranking. 
Formally, the representation for the bipartite and sentiment words, which appear in one sen-tence.  X   X   X  X  X  X   X   X  is the set of documents. connection between documents and top-contribution of  X   X  X  X  to the document  X   X  . The word pair  X   X  X  X  in all sentences of  X   X  as follows:  X   X  is introduced as the trade-off parameter to  X   X  X  X  X  X   X   X ,  X   X  is computed to judge the relevance and word  X   X  appears in. where  X  X  X  is the average number of sentences in lan et al., 2003; Otterbacher et al., 2005). 
It is found that the contribution of a sentiment word  X   X  will not decrease even if it appears in all the sentences. Therefore in Equation 4, we to normalize long sentences which would likely contain more sentiment words. of  X   X  X  X  at the  X 1 X  X  X  X   X  X  iteration are computed based on the hub scores and authority scores in the  X   X  X  iteration as follows. matrix. of authority scores for documents at the  X   X  X  ite-vector of hub scores for the word pairs at  X   X  X  iteration. In order to ensure convergence of the iterative form,  X   X  and  X   X   X  are normalized in each iteration cycle. 
For computation of the final scores, the initial scores of all documents are set to  X  ic-sentiment word pairs are set to  X  above iterative steps are then used to compute the new scores until convergence. Usually the convergence of the iteration algorithm is achieved when the difference between the scores computed at two successive iterations for any nodes falls below a given threshold (Wan et al., 2008; Li et al., 2009; Erkan and Radev, 2004). In our model, we use the hub scores to denote the associative degree of each word pair and the au-thority scores as the total scores. The documents are then ranked based on the total scores. We performed the experiments on the Chinese benchmark dataset to verify our proposed ap-proach for opinion retrieval. We first tested the effect of the parameter  X  of our model. To demonstrate the effectiveness of our opinion re-trieval model, we compared its performance with the same of other approaches. In addition, we studied each individual query to investigate the influence of query to our model. Furthermore, we showed the top-5 highest weight word pairs of 5 queries to further demonstrate the effect of word pair. 4.1 Experiment Setup 4.1.1 Benchmark Datasets Our experiments are based on the Chinese benchmark dataset, COAE08 (Zhao et al., 2008). COAE dataset is the benchmark data set for the opinion retrieval track in the Chinese Opinion Analysis Evaluation (COAE) workshop, consist-ing of blogs and reviews. 20 queries are provided in COAE08. In our experiment, we created re-levance judgments through pooling method, where documents are ranked at different levels: irrelevant, relevant but without opinion, and re-levant with opinion. Since polarity is not consi-dered, all relevant docum ents with opinion are classified into the same level. 4.1.2 Sentiment Lexicon In our experiment, the sentiment lexicon is composed by the following resources (Xu et al., 2007): (1) The Lexicon of Chinese Positive Words, (2) The opinion word lexicon provided by Na-(3) Sentiment word lexicon and comment word The different graphemes corresponding to Traditional Chinese and Simplified Chinese are both considered so that the sentiment lexicons from different sources are applicable to process Simplified Chinese text. The lexicon was ma-nually verified. 4.1.3 Topic Term Collection In order to acquire the collection of topic terms, we adopt two expansion methods, dictio-nary-based method and pseudo relevance feed-back method. 
The dictionary-based method utilizes Wikipe-dia (Popescu and Etzioni, 2005) to find an entry page for a phrase or a single term in a query. If such an entry exists, all titles of the entry page are extracted as synonyms of the query concept. For example, if we search  X   X  X  X   X  (Green Tsu-nami, a firewall) in Wikipedia, it is re-directed to an entry page titled  X   X  X  X  X  X   X  (Youth Escort). This term is then added as a synonym of  X   X  X  X   X  (Green Tsunami) in the query. Synonyms are treated the same as the original query terms in a retrieval process. The content words in the entry page are ranked by their frequencies in the page. The top-k terms are returned as potential ex-panded topic terms. 
The second query expansion method is a web-based method. It is similar to the pseudo relevance feedback expansion but using web documents as the document collection. The query is submitted to a web search engine, such as Google, which returns a ranked list of docu-ments. In the top-n documents, the top-m topic terms which are highly correlated to the query terms are returned. 4.2 Performance Evaluation 4.2.1 Parameter Tuning We first studied how the parameter  X  (see Equ-ation 1) influenced the mean average precision (MAP) in our model. The result is given in Fig-ure 4. Figure 4: Performance of MAP with varying  X  . Best MAP performance was achieved in COAE08 evaluation, when  X  was set between 0.4 and 0.6. Therefore, in the following experi-ments, we set  X 0.4 X  . 4.2.2 Opinion Retrieval Model Comparison To demonstrate the effectiveness of our proposed model, we compared it with the following mod-els using different evaluation metrics: (1) IR: We adopted a classical information re-trieval model, and further assumed that all re-trieved documents contained relevant opinions . (2) Doc: The 2-stage document-based opinion retrieval model was adopted. The model used sentiment lexicon-based method for opinion identification and a co nventional information retrieval method for relevance detection. (3) ROSC: This was the model which achieved the best run in TREC Blog 07. It employed ma-chine learning method to identify opinions for each sentence, and to determine the target topic by a NEAR operator. (4) ROCC: This model was similar to ROSC, but it considered the factor of sentence and re-garded the count of relevant opinionated sen-tence to be the opinion score (Zhang and Yu, 2007). In our experiment, we treated this model as the evaluation baseline. (5) GORM: our proposed graph-based opinion retrieval model. Table 1: Comparison of different approaches on COAE08 dataset, and the best is highlighted. 
Most of the above models were originally de-signed for opinion retrieval in English, and re-designed them to handle Chinese opinionated documents. We incorporated our own Chinese sentiment lexicon for this purpose. In our expe-riments, in addition to MAP, other metrics such as R-precision (R-prec), binary Preference (bPref) and Precision at 10 documents (P@10) were also used. The evaluation results based on these me-trics are shown in Table 1. 
Table 1 summarized the results obtained. We found that GORM achieved the best performance in all the evaluation metrics. Our baseline, ROSC and GORM which were sentence-based ap-proaches achieved better performance than the document-based approaches by 20% in average. Moreover, our GORM approach did not use ma-chine learning techniques, but it could still achieve outstanding performance. 
To study GORM influenced by different que-ries, the MAP from median average precision on individual topic was shown in Figure 5. Figure 5: Difference of MAP from Median on COAE08 dataset. (MAP of Median is 0.3724) 
As shown in Figure 5, the MAP performance was very low on topic 8 and topic 11. Topic 8, i.e.  X   X  X  X   X  (Jackie Chan), it was influenced by topic 7, i.e.  X   X  X  X  X   X  (Jet Lee) as there were a number of similar relevant targets for the two topics, and therefore many word pairs ended up the same. As a result, documents belonging to topic 7 and topic 8 could not be differentiated, and they both performed badly. In order to solve this problem, we extracted the topic term with highest relevant weight in the sentence to form word pairs so that it reduce the impact on the topic terms in com-mon. 24% and 30% improvement were achieved, respectively. 
As to topic 11, i.e.  X   X  X  X  X   X  (Lord of King), there were only 8 releva nt documents without any opinion and 14 documents with relevant opinions . As a result, the graph constructed by insufficient documents wo rked ineffectively. 
Except for the above queries, GORM per-formed well in most of the others. To further in-vestigate the effect of word pair, we summarized the top-5 word pairs with highest weight of 5 queries in Table 2. 
Table 2 showed that most word pairs could represent the relevant opinions about the corres-ponding queries. This showed that inter-sentence information was very helpful to identify the as-sociative degree of a word pair. Furthermore, since word pairs can indicate relevant opinions effectively, it is worth further study on how they could be applied to othe r opinion oriented appli-cations, e.g. opinion summarization, opinion prediction, etc. Our research focuses on relevant opinion rather than on relevant document retrieval. We, there-fore, review related works in opinion identifica-tion research. Furthermore, we do not support the conventional 2-stage opinion retrieval approach. We conducted literature review on unified opi-nion retrieval models and related work in this area is presented in the section. 5.1 Lexicon-based Opinion Identification Different from traditional IR, opinion retrieval focuses on the opinion nature of documents. During the last three years, NTICR and TREC evaluations have shown that sentiment lex-icon-based methods led to good performance in opinion identification. 
A lightweight lexicon-based statistical ap-proach was proposed by Hannah et al. (2007). In this method, the distribution of terms in relevant opinionated documents was compared to their distribution in relevant fact-based documents to calculate an opinion weight. These weights were used to compute opinion scores for each re-trieved document. A weighted dictionary was generated from previous TREC relevance data (Amati et al., 2007). This dictionary was submit-ted as a query to a search engine to get an initial query-independent opinion score of all retrieved documents. Similarly, a pseudo opinionated word composed of all opinion words was first created, and then used to estimate the opinion score of a document (Na et al., 2009). This me-thod was shown to be very effective in TREC evaluations (Lee et al., 2008). More recently, Huang and Croft (2009) proposed an effective relevance model, which integrated both query-independent and query-dependent senti-ment words into a mixture model. 
In our approach, we also adopt sentiment lex-icon-based method for opinion identification. Unlike the above methods, we generate a weight to a sentiment word for each target (associated topic term) rather than assign a unified weight or an equal weight to the sentiment word for the whole topics. Besides, in our model no training data is required. We just utilize the structure of our graph to generate a weight to reflect the as-sociative degree between the two elements of a word pair in different context. 5.2 Unified Opinion Retrieval Model In addition to conven tional 2-stage approach, there has been some research on unified opinion retrieval models. 
Eguchi and Lavrenko proposed an opinion re-trieval model in the framework of generative language modeling (Eguchi and Lavrenko, 2006). They modeled a collection of natural language documents or statements, each of which con-sisted of some topic-bearing and some senti-ment-bearing words. The sentiment was either represented by a group of predefined seed words, or extracted from a training sentiment corpus. This model was shown to be effective on the MPQA corpus. 
Mei et al. tried to build a fine-grained opinion retrieval system for consumer products (Mei et al., 2007). The opinion score for a product was a mixture of several facets. Due to the difficulty in associating sentiment with products and facets, the system was only tested using small scale text collections. 
Zhang and Ye proposed a generative model to unify topic relevance and opinion generation (Zhang and Ye, 2008). This model led to satis-factory performance, but an intensive computa-tion load was inevitable during retrieval, since for each possible candidate document, an opinion score was summed up from the generative prob-ability of thousands of sentiment words. 
Huang and Croft proposed a unified opinion retrieval model according to the Kullback-Leib-ler divergence between the two probability dis-tributions of opinion relevance model and docu-ment model (Huang and Croft, 2009). They di-vided the sentiment words into query-dependent and query-independent by utilizing several sen-timent expansion techniques, and integrated them into a mixed model. However, in this model, the contribution of a sentiment word was its corres-ponding incremental mean average precision value. This method required that large amount of training data and manual labeling. 
Different from the above opinion retrieval ap-proaches, our proposed graph-based model processes opinion retrieval in the granularity of sentence. Instead of bag-of-word , the sentence is split into word pairs which can maintain the contextual information. On the one hand, word pair can identify the relevant opinion according to intra-sentence contextu al information. On the other hand, it can measure the degree of a rele-vant opinion by considering the inter-sentence contextual information. In this work we focus on the problem of opinion retrieval. Different from existing approaches, which regard document relevance as the key in-dicator of opinion relevance, we propose to ex-plore the relevance of individual opinion. To do that, opinion retrieval is performed in the granu-larity of sentence. We define the notion of word pair, which can not only maintain the association between the opinion and the corresponding target in the sentence, but it can also build up the rela-tionship among sentences through the same word pair. Furthermore, we convert the relationships between word pairs and sentences into a unified graph, and use the HITS algorithm to achieve document ranking for opinion retrieval. Finally, we compare our approach with existing methods. Experimental results show that our proposed model performs well on COAE08 dataset. 
The novelty of our work lies in using word pairs to represent the information needs for opi-nion retrieval. On the one hand, word pairs can identify the relevant opinion according to in-tra-sentence contextual in formation. On the other hand, word pairs can measure the degree of a relevant opinion by taking inter-sentence con-textual information into consideration. With the help of word pairs, the information needs for opinion retrieval can be represented appropriate-ly. 
In the future, more resear ch is required in the following directions: (1) Since word pairs can indicate relevant opi-(2) The characteristics of blogs will be taken (3) Opinion holder is another important role of 
Acknowledgements: This work is partially supported by the Innovation and Technology Fund of Hong Kong SAR (No. ITS/182/08) and National 863 program (No. 2009AA01Z150). Special thanks to Xu Hongbo for providing the Chinese sentiment resources. We also thank Bo Chen, Wei Gao, Xu Han and anonymous re-viewers for their helpful comments. 
