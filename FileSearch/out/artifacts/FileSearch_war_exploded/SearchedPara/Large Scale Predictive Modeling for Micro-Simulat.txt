 T his paper outlines the approach developed together with the Radio Network Strategy &amp; Design Department of a large European telecom operator in order to forecast the Air-Interface load in their 3G network, which is used for planning network upgrades and budgeting purposes. It is based on large scale intelligent data analysis and modeling at the level of thousands of individual radio cells resulting in 30,000 models per day. It has been embedded into a scenario simulation framework that is used by end users not experienced in data mining for studying and simulating the behavior of this complex networked system, as an example of a systematic approach to the deployment step in the KDD process. This system is already in use for two years in the country where it was developed and it is a part of a standard business process. In the last six months this national operator became a competence center for predictive modeling for micro-simulation of 3G air interface load for four other operators of the same parent company. H .2.8 [Database Management]: Database Applications -Data mining A lgorithms, Management, Measurement, Economics, Performance, Experimentation M obile Network, Air-Interface Load, Linear Regression, Simulation. This paper reports on a deployed data mining application that has b een developed by one of the largest European telecom operators and has been constantly used ever since. In order to accommodate the continuing strong increase of mobile internet traffic, the operator X  X  Radio Network Department has to persistently monitor and upgrade the 3G Radio Access Network. This requires an Air-interface Load forecast for every radio cell in the network, including indications of denial or interruption of service delivery. However, such a detailed forecast was not readily available. Furthermore, there is a need to simulate different scenarios for different parts of the network. Given the complexity of the problem, the dimension of the network and the repetitiveness of the task, a manual approach is out of the question. In this paper we present a fully automated approach that generates multi-variate linear regression models on a grand scale, using primarily open source tools. The key business benefit of this research is that it solves a very complex and high impact business problem that cannot be approached by using general planning methods. The traditional methods to mobile network load forecasting have a number of practical issues. They are most often analytical or Monte Carlo based approaches [1]. The load formula used is typically a general purpose analytical model, derived from physics knowledge and theory rather than from modeling on actual data, let alone being based on data from a specific operator. Furthermore, the inputs required are difficult to measure and forecast, or do not relate to changes in customer behavior such as call usage which is easier to understand and use for scenario purposes. Our approach makes it easier to translate customers and their usage into network load. To our knowledge, this is the first time a data mining approach has been used for Air Interface load prediction of a 3G mobile network. In terms of business benefits, the exact return is confidential, but cellular network infrastructure forms a major part of an operator investment budget, and this is a key system for tactical and strategic network investment decisions. In the group where this operating company belongs, up to 50% of wireless CAPEX investments are spent on the radio access network. For reference, operators worldwide invest more than 20 billion USD into cellular network infrastructure. Our methodology is first and foremost intended to ensure that capacity is added in time and at the right place, thus avoiding inefficient investments and poor customer experience due to traffic congestion, which can ultimately lead to churn. Last but not least, Internet access is recognized as a right by law by several countries, as a part of the rights to Freedom and Expression of Opinion. By adding capacity at the right places, operators provide a valuable social service, given the growing importance of communications and social media in everyday life. This is a data mining application in telecommunications that does not raise the usual privacy concerns; on the contrary it serves a social function by mediating high quality internet access. An early version of our approach has been published in [2]. Since then, our system has been rolled out in full use in the operator where it was developed. None of the other operator companies in this telecommunications group used a similar fine grained approach. Therefore, a more universal approach applicable to the other operators as well had to be developed.This involved dealing with complexities such as different network equipment vendors using different performance management systems and lack of certain measurements we have introduced in [2]. Nevertheless, the results of our new approach were very positive. Hence, in the past six months this operator became a competence center for Predictive Modeling of 3G Air Interface Load and it is performing this task for operators of the same telecommunications group in four countries. Whilst the core intelligent data analysis algorithms used are not novel, we apply these on a large scale by modeling individual radio cells across a variety of dimensions (section 3 motivates why we model at cell level). This has also been embedded into a simulation framework targeted at non-data miners using tools they are familiar with, thus enabling them to run low level simulation scenarios. Hence, our goal is to provide a case example of an embedded, deployed intelligent data analysis system, dealing with real world aspects such as scale and having major business impact. Extensive simulations have been carried by the operating companies using the system, and novel use cases for scenario simulation analysis have been developed and applied. As discussed, the technical novelty is not determined by the complexity of the base estimators used. We use simple linear regression models as data inspection has shown that the behavior to be predicted is primarily linear, and experiments confirmed that complex algorithms actually performed worse given the high variance associated with these models. This is not uncommon in real world data mining problems [3]. What makes this problem out of the ordinary is the massive number of models. For each of cell in the network we create four models to predict different kinds of outcomes, resulting in a total of 30,000-100,000 models, depending on the amounts of cells in the network. Model parameters are estimated using ten-fold cross validation, which increases the number of models estimated to over 1 million. This process is repeated on a regular basis, given that the customer base and its behavior, as well as the cellular network itself change constantly. Finally, we do not just deploy the forecasted loads. The underlying regression formulas are provided by the data miners to the end user analysts as simple spreadsheets, which enables them to tune various simulation and forecasting scenarios without further involvement from the data miners. This turned out to be not just a practical benefit, but a major opportunity for the business as a range of simulation use cases were explored that were not envisioned by the data miners up front. We think that this approach, including the concept of decoupling data mining from forecasting and simulation processes, can easily be replicated and applied to problems from other industries. Examples are problems that require similar predictive models and simulation of networked systems on a large scale, such as for instance sensor networks, retail outlet planning, supply chain logistics and revenue predictions for products with a complex billing process (which we have already applied). The rest of the paper is structured as follows. Section 2 describes the load parameters. Section 3 discusses the complex nature of network load and how to approximate it, including a motivation for modeling at the granular cell level. Section 4 describes the construction of the load formulas and the forecasting of the future load of the network using simulation, as well as other simulation scenarios. Limitations and future work are discussed in section 5. Finally, we present our conclusions in section 6. In this section we will describe how we measure the load for a c ell, plus the underlying attributes that we will use to predict future load. Both output and input parameters are measured per individual cell per hour. The communication between a network cell site (radio network e lement that provides access to the mobile network) and a user X  X  mobile device is separated into downlink communication-directed from the cell to the mobile device and uplink communication-directed from the mobile device to the cell site. One cell site can serve multiple network cells. Therefore, the Air-interface load for a cell consists of the Downlink Load (DL) and Uplink Load (UL). Multiple measures of both DL and UL can be devised. A cell is considered to be in overload if either the uplink or the downlink load is above a certain threshold. When a cell is in overload, it cannot adequately serve customers that demand its resources. Obviously, all cells in overload require an adequate upgrade. Most of the background literature on telecom networks is related to network optimization or load control rather than load prediction [4, 5, 6, 7]. In our previous research [2] we used the following measurements of load as output parameters: Count of RAB (Radio Access Bearer) Releases Due To Interference [4], Average Noise Rise (ANR) [5] and Average Noise Rise on Channels Dedicated to Release 99 Capable Devices (refers to lower data transfer speed up to 384 Kbps). Two additional uplink measures were considered: Count of RAB (Radio Access Bearer) Setup Failures and Count of RRC (Radio Resource Control) Setup Failures . These measurements were discarded at later stages of the process due to the very low number of models that could be generated because of too many zero-values. The parameters used as measures for downlink load in [2] were the following. Firstly, we used Percentage of Consumed Downlink Power (CDP) [6] and Count of  X  X o Code Available X  Situations (NCA) [7].
 However, some of these measures were specific to Nokia Data Warehouse [8], a performance management tool deployed at the operator where our research originated, or were not measured by other operators that were looking to use our system. Therefore, we used universal measurements, which are applicable to performance management systems of other vendors, such as Ericsson [9], Huawei [10] or MyCom [11]. Therefore, in our new approach we picked measurements that are both compliant to the 3gpp Mobile Broadband Standard [12] and universally defined and measured across the operators which are part of this international group. Percentage of Uplink Load, also known as UL Carrier Load Percentage [12] is the ratio between the total received power level on that carrier and the maximum acceptable level of interference. UL_LOAD= 100  X  (1  X  ) w here MeanRTWP is mean Received Total Wideband Power per cell; MinRTWP is minimum Received Total Wideband Power per cell, used as the noise floor. In other words MeanRTWP is mean of the power assigned to users, while MinRTWP is the power measured when no users are using cell resources. Percentage of Downlink Load, also known as DL Carrier Load Percentage [12] is the ratio between the total transmitter power level on that carrier and the maximum acceptable transmitter power. DL_LOAD= 100  X  10 where MeanTCP is mean Total Transmitted Power per cell; MaxTxPower is maximum transmit power of the cell. In other words MeanTCP is mean of the power assigned to users, while MaxTxPower is the cell power capacity. We used two additional measures for downlink load, based on code capacity, namely Code Utilization and Count of  X  X o Code Available X  situations. Each cell has 256 codes that can be assigned to a mobile device for a voice call or a data session. The higher the downlink bandwidth required, the higher the number of codes will be assigned. For example, voice calls require 12.2 Kbps (translates into 2 codes), while Data Sessions can require up to 14.4 Mbps (which would consume all the codes of that cell). Code Utilization -Measures the fraction of codes used vs. codes available at the cell. It is averaged over an hour.
 Count of  X  X o Code Available X  situations  X  After all the codes have been assigned, the next devices that requests a code from the cell, gets a  X  X o code available X  message and cannot use the cell resources. This variable measures the count of occurrences of this message per hour, and will be abbreviated as NCA. As input parameters in [2] we used different measures from the N okia Data Warehouse [8], a tool that is used in telecom operators to monitor Radio Network Performance. Even though we included input parameters related to voice services, most of the input parameters are related to consumption of Data Services, because they require more of the cell resources. These include the following: Average Voice Call Users, Average Release 99 Uplink users, Average Release 99 Downlink users, Average High Speed Uplink Packet Access (HSUPA) users, Average High Speed Downlink Packet Access (HSDPA) users, Maximum HSUPA users, Maximum HSDPA users, Total RRC attempts, Total Active RABs, Total Voice Call RAB Attempts, Total Data Session RAB Attempts, Average Downlink Throughput, Average Uplink Throughput, Average Soft Handover Overhead Area (measures the intersection of coverage of the particular cell with other cells), Average Proportion of Voice Traffic originated in that cell (as opposed to traffic originated in other cells and handed over to that cell), Average Proportion of Data Traffic originated in that cell. Forecasts for future values of the input parameters were available at the operator. However, due to constraints mentioned in section 2.1, namely different performance management tools from different vendors, not all these could be measured. Therefore, we reduced the input parameter set to the following: Count of RRC attempts per hour -Radio Resource Control (RRC) attempts are related to the signaling exchange between the mobile device and the network cells. There can only be one RRC connection open per mobile device at a time. Count of Data Session RAB Attempts per hour  X  Radio Access Bearer (RAB) is necessary to be assigned to a user in order to make voice call or a data session. Multiple RABs can be assigned to the same device. This variable measures the RAB attempts (not necessarily successful) for a data session in a cell in an hour. Count of Voice Call RAB Attempts per hour -This variable measures the RAB attempts (not necessarily successful) for a voice call in a cell in an hour. It is the only variable that addresses usage of voice services exclusively. Average Count of Release 99 Uplink users per hour -Average number of users that consumed uplink cell resources on a R99 capable device (throughput of up to 384 Kbps). Average Count of Release 99 Downlink users per hour -Average number of users that consumed downlink cell resources on a R99 capable device (throughput of up to 384 Kbps). Average Count of HSUPA users per hour -Average number of users that consumed uplink cell resources on a HSUPA (High Speed Uplink Packet Access) capable device (up to 5.76 Mbps). Average Count of HSDPA users per hour -Average number of users that consumed downlink cell resources on a HSDPA (High Speed Downlink Packet Access) capable device (bandwidth up to 14.4 Kbps). Most of the current mobile devices are HSDPA capable. But, an HSDPA device can also be assigned to a R99 downlink (slower) channel, if there are no HSDPA cell resources available. Average Downlink Throughput per hour -Average per hour of the sum of downlink bandwidths consumed by all users served by the cell. Average Uplink Throughput per hour -Average per hour of the sum of uplink bandwidths consumed by all users served by the cell. The traditional approaches to mobile network load forecasting are m ost often analytical or Monte Carlo based approaches [1]. However, the inputs required are difficult to measure and forecast, or do not relate to customer behavior such as call usage which is easier to understand and use for scenario purposes. Most of the data mining related literature on load forecasting is related to electrical networks. A good overview is presented in [13]. Various methods have been deployed for this purpose: regression models, time series, neural networks, expert systems, fuzzy logic etc. The authors state a need for load forecasts for sub-areas (load pockets) in cases when the input parameters are substantially different from the average, which is a case similar to different cells in a mobile telecom network. Related to mobile telecommunications, data traffic load (which is different than air interface load) focusing on a highly aggregated link has been forecasted in [14], comparing time series (moving averages and dynamic harmonic regression) with linear and exponential regression. Also, Support Vector Regression was used by [15] for link load prediction in fixed line telecommunications. In order to forecast the future load for each cell in the network, it is necessary to understand the relationship between the input parameters (causing the load situation) and the current load. The input parameters in case of the Air Interface load are all parameters which can be made accountable for the load situation in the cell (Section 2). Therefore, the load parameter (output) can a given time could be expressed as the sum of all users consuming Theoretically, even higher speed scan be achieved for both 
HSUPA and HSDPA-21Mbps and 42Mbps, respectively resources of that cell at the particular time multiplied by the amount of resources they use plus the interference between that cell and all the other cells in the network (in practice limited to the neighboring cells): L(x) = ! ! User &amp;  X  Resource + , + -+ / &amp; -! i nterference ( x, y ) 7 w here m is the count of users that are using the resources of cell x, the network and interference(x, y) is the interference measured between cell x and y. Unfortunately, there was no tool that would provide such a detailed overview. In order to approximate the load function, we recorded the different load parameters (outputs) and input parameters described in section 2, on an hourly basis during 1,5-8 weeks, depending on the operator. This provided approximately between 200 and 1,000 instances per cell or 20,000,000 instances in total on a network of 20,000 cells. The operators did not store data on lower granularity than one hour. Trials on daily averages were made, but these were not successful, due to the huge the load differences between night and daytime. Also, in this case there was a trade-off between a smaller sample and a longer period of data collection, which does not yield stability given all optimization changes in the network. One of the choices to be made was whether a distinct formula for every cell shall be built or  X  alternatively  X  a common formula valid for all cells should be used. The approach where a model is created for each cell was chosen, due to the network experts X  conviction that each cell is different, and a unified approach simply would not work, because some of the parameters influencing the load of each cell were immeasurable and unpredictable. Next, the domain experts were intrinsically interested in being able to model cells that actually do not behave like other cells, especially when these are highly loaded. Furthermore, there would be a challenge in normalizing with respect to the varying capacity of the cells, i.e. what where the cell sized to handle. Finally, we hypothesized that not just model parameters could differ by cell, but also the optimal selection of features, similar to the load pockets explained by [13]. The choice of linear regression [16] was made due to several reasons. First of all, even though the distribution of the values of each of the load measures we are trying to predict vary between close to linear and close to exponential, we are only interested in the higher values of the load curve, and this can be approximated quite well with linear regression, as shown on Figure 1. For this purpose, before constructing the regression formulas, we remove all zero instances. Furthermore, linear regression is a very fast algorithm compared to other methods, which is very useful when it is necessary to develop a large number of models in a short time. Even though it is imaginable that better results might be achieved by using non-linear regression, regression trees, or other algorithms, this might not be necessary in most cases (Figure 1). Also, simple low variance methods such as linear regression frequently perform much better in practice than more complicated algorithms, which can very often over fit the data (e.g. high variance algorithms such as neural networks). In other words, in real world problems variance is typically a more important problem than bias when it comes to data preparation and algorithm selection [3]. Trials on a smaller sample were already made with regression trees, but apart from the visibly increased time consumption, the accuracy did not improve. On the contrary, in some instances it decreased. Last but not least, linear regression is easy to implement, easy to explain and its results and models are easy to export for other use. Exporting the models to Excel was of crucial value, as analysts would use them in order to predict the future load of each cell, by scaling the input parameters, based on internal forecasting models. In other words, this allows non data miners to simulate future network load based on changes in the various type of network traffic, using simple tools they are familiar with. In this section we will describe how the models are being g enerated and put to work. This includes the tools that were used, a detailed description of the approach, the results of this mass modeling process, the process of forecasting the future load and additional simulation scenarios. The tools used in this research are either open source, or can be f ound in the IT portfolio of any telecom operator. These are the following: Radio Network Performance Management System. As stated above, this research was using data from four different operators belonging to a large telecom group. Most of them have radio networks produced by different vendors, which means that also different Radio Network Performance Management Systems were used for data collection of both the input and the output parameters. In this research, we used Performance Management Systems of Nokia [8], Ericsson [9], Huawei [10] and MyCom [11], depending on the operator. These software tools were already a part of the Network/IT infrastructure of the operators. They contain technical parameters related to the mobile network performance. The most important feature of these tools for our research was that they contained hourly aggregates of all the input and output parameters we used (Section 2). These are the only domain specific tools from our process. Load Prediction and Simulation Data Mart. This is an Oracle Database 10g-64 bit v10.2.0.5.0 [17] used for all our task specific data preparation and manipulation .
 Due to the fact that the necessary input and output parameters were stored at different tables in the respective Performance Management Systems, we needed a separate database where we could manipulate the data easier (e.g. merge tables, create indexes, and build the final flat table). In the case of Nokia Data Warehouse [8] this reduced the duration of the data collection and data preparation process from two weeks to 1 day by productizing data collection. Because we are rebuilding and rescoring models on a continuous and automated basis, this was a key improvement. Any other database platform (commercial or open source) could have been used. We opted for Oracle based on license availability. WEKA 3.6.4 x64 , an open source data mining platform [18], was used for building the linear regression formulas and validating them. Of course, any other tool capable of deriving linear regression can also be used for this purpose. That said, this shows that even a research focused open source tool like WEKA can be used in critical commercial settings, at high complexity (e.g. 20.000 cells, 4 models each, around 1000 instances each). Strawberry Perl for Windows v5.12.3 [19] is an open source scripting language that we used in order to create the script that is the core of this approach. Our script creates WEKA input files by querying the Oracle database, generates the regression models by executing calls to WEKA, and stores the regression formulas and the cross-validation outputs (Correlation Coefficient, Mean Absolute Error, Root Mean Squared Error, Relative Absolute Error, Root Relative Squared Error, and Total Number of Instances used to build the model) in csv files. MS Excel 2010 [20]  X  part of MS Office 2010, was used to predict the future load of cells, using the regression formulas created by WEKA and extrapolations of the input values using a internet traffic model scaling factors based on handset/internet usage developments (internal to the operator). A graph of how our approach uses these tools to derive and store t he regression models is presented on Figure 2. First, the data is extracted from the Network Performance Management Tools, e.g. Nokia Data Warehouse (NDW). The core of our approach is a Perl [21] script that automated the derivation of the regression formulas for each cell. This script executed calls to WEKA and queries the Oracle Database. It works in the following manner: We did not want noisy data. Cells/instances with no load are of no interest. While generating the models/regression formulae, we used a wrapper [22] approach. Wrapper approaches automatically select the best variables for predicting the outcome, taking into account the algorithm to be used, which in our case is linear regression. Wrapper approaches do not necessarily perform better or worse than filter approaches [23]. Our motivation to use the wrapper approach was to avoid human interaction with the model building process as much as possible, which obviously makes the process much faster. It is worthwhile mentioning that the optimal feature and linear regression model selection were performed using 10-fold cross validation [16]. This was done in order to balance between cells with large sample of non-zero instances and cells with a smaller sample. The reported correlation coefficient, MAE and RMSE are averages from the 10 repetitions. Using 10-fold cross validation already provides a good estimate of the accuracies of these formulas. Of course, we do test them on completely new datasets, not only to confirm the accuracies achieved, but also to find out when is a good time to update the model. We expect that updates should be necessary every few months, because of the reconfiguration of the network, additions of new cells and upgrades to the existing ones. Using this process we were able to run 30,000 regressions per d ay, by just one click. This does not necessarily result in 30,000 models, because in some cases it was impossible to derive a formula due to the large number of instances that were filtered out for zero load. But, in order to measure the load of a cell, it is sufficient that a model is generated for at least one output variable. Cases of cells where it was not possible to generate a model for any of the variables were rare. Furthermore, cells that do not show any load by the means of the output variables are not of interest for our problem situation. For practical purposes, we will only present the modeling results for two of the four output variables we used to describe the air interface load in section 2. We chose to present the results for the uplink and downlink load. All tables have the same structure. In the first column Bands of Averages for the respective output variables Downlink Load (DL_Load) and Uplink Load (UL_Load) are given. The second column contains the count of cells that falls into this band. The third column presents the average count of non-zero instances (NZI) in each band. In other words, it presents the number of instances used to build the regression, because we only took non-zero output values into account. The fourth column presents the average Correlation Coefficient (CC) between the predicted and actual values of the variables in the particular band. These Correlation Coefficients are the result of the 10-fold cross validation. 
Table 1. Regression Modeling Results for Downlink Load (DL) Downlink 
DL&lt;1 642 / / / 1&lt;=DL&lt;5 132 504.2 0.906 99% 5&lt;=DL&lt;10 450 528.5 0.920 100% 10&lt;=DL&lt;20 2995 507.7 0.914 100% DL&gt;=20 4120 511.1 0.955 100% Table 2. Regression Modeling Results for Uplink Load (UL) for Uplink Load 
UL&lt;1 643 579 0.254 1% 1&lt;=UL&lt;5 693 513.94 0.536 96% 5&lt;=UL&lt;10 2880 522.06 0.676 100% 10&lt;=UL&lt;20 3405 516.14 0.756 100% UL&gt;=20 718 503.05 0.776 99%
Table 3. Regression Modeling Results for Downlink Load (DL) Downlink Load 
DL&lt;1 683 / / / 1&lt;=DL&lt;5 2379 155.4 0.777 80% 5&lt;=DL&lt;10 9406 247.9 0.824 96% 10&lt;=DL&lt;20 4550 271.7 0.846 95% DL&gt;=20 1697 284.7 0.872 92% Table 4. Regression Modeling Results for Uplink Load (UL) for Uplink Load 
UL&lt;1 431 172.8 0.554 17% 1&lt;=UL&lt;5 138 247.5 0.649 84% 5&lt;=UL&lt;10 909 273.9 0.565 87% 10&lt;=UL&lt;20 9649 294.7 0.617 95% UL&gt;=20 7816 288.8 0.801 98%
Table 5. Regression Modeling Results for Downlink Load (DL) Downlink Load 
DL&lt;1 387 / / / 1&lt;=DL&lt;5 2447 142.5 0.854 84% 5&lt;=DL&lt;10 2428 155.9 0.907 95% 10&lt;=DL&lt;20 2114 175.5 0.935 99% DL&gt;=20 746 184.6 0.945 100% Table 6. Regression Modeling Results for Uplink Load (UL) for Uplink Load 
UL&lt;1 160 56.6 0.382 11% 1&lt;=UL&lt;5 715 120.6 0.482 77% 5&lt;=UL&lt;10 1909 146.4 0.546 92% 10&lt;=UL&lt;20 3195 162.4 0.677 98% UL&gt;=20 2143 171.2 0.668 96%
Table 7. Regression Modeling Results for Downlink Load (DL) Downlink Load 
DL&lt;1 5 952.4 0.449 100% 1&lt;=DL&lt;5 604 949.7 0.705 100% 5&lt;=DL&lt;10 3801 958.0 0.776 100% 10&lt;=DL&lt;20 4802 957.9 0.807 100% DL&gt;=20 1020 958.2 0.848 100% Table 8. Regression Modeling Results for Uplink Load (UL) for Uplink Load 
UL&lt;1 0 / / / 1&lt;=UL&lt;5 0 / / / 5&lt;=UL&lt;10 674 948.2 0.461 98% 10&lt;=UL&lt;20 4187 955.5 0.598 100%
UL&gt;=20 5371 957.2 0.669 100% The last column presents the ratio between the number of formulas that were generated and the total count of cells in each band. Namely, for certain cells it was not possible to build the regression because of a very low number of non-zero instances. The results of the Regression Modeling for Downlink and Uplink load for four different countries are shown in tables 1-8. In Tables 1 and 2 are the modeling results of the same operator published in [2]. However, this operator is still undergoing a full network swap, which means every cell in the network is either already replaced or will be replaced by a new one from a different network equipment vendor. At the moment, this operator is running both networks in parallel, which creates an additional level of complexity. However, the results presented in Tables 1 and 2 are referring to the modeling process on the swapped part of the network using the new vendor X  X  equipment. Hence, the total number of cells is smaller than reported in [2]. For this reason, and the fact that we are presenting different output variables in this paper, the results of [2] and these results should not be compared. The results can be evaluated by using two criteria: The Correlation Coefficient and The Ratio of The Models Built (the last two columns in Tables 1 to 8). Obviously, the Ratio of the Number of Formulas built for DL and UL grows alongside the number of instances for operators in all four countries, which is to be expected. We chose the correlation coefficient because it X  X  a relative measure, and therefore more intuitive than the Mean Average Error of Root Mean Square Error. As mentioned above, we report the average correlation coefficient of each load band. The confidence intervals for the average correlation coefficient at 95% confidence level were not wider than  X 0.02 in any operator in any of the Downlink or Uplink load bands, due to the relatively low standard deviations. Furthermore, because of the choice we made at the beginning of the research, to focus on the higher levels of load and eliminate the zero values, the Average Correlation Coefficient between actual and predicted values also grows as the Load is higher, both for Downlink and Uplink. In the lowest Load bands, the performance of models is not good. However, this is of no interest, as these are not the situations that we are trying to predict. These cells are not likely to be in overload in the foreseeable future. However, when analyzing the Average Correlation Coefficient (ACC) between the predicted and actual values there is a visible difference between Downlink and Uplink load: The ACC for Downlink Load (Tables 1, 3, 5, 7) is much higher than the ACC for Uplink Load (Tables 2, 4, 6, 8). Uplink Load seems more difficult to predict using linear regression. There are two possible reasons for this: A crucial input parameter (predictor) may be missing; or the Uplink Load has less of a linear nature. Last but not least, model performance across operators cannot be compared due to differences in network vendors, software versions, geography, population density and smartphone penetration rates (which cause higher network load). The importance of the smartphone penetration and population density was also confirmed by the automated feature selection, where variables such as the combined throughput (uplink or downlink), which is highly influenced by smartphones and the number of HSDPA/HSUPA users per hour (which are smartphone users) were the most often selected when building the respective load formulas. Once the load formulas have been derived it is possible to forecast t he future load situation if the changes in the describing parameters are known. These changes of the input parameters are described by means of scaling factors. The scaling factors are calculated by using a traffic forecast model developed by the operator (out of scope of this paper). A cell is upgraded if any of the four output variables used as measures of Uplink or Downlink load, is above a critical value. This is done in the following way: The forecasting model provides better and more sophisticated f orecasts and as such supports better network investment decisions, which account for the major part of the entire operator CAPEX cost. In simple terms, no money is wasted by investing in unnecessary network upgrades, providing two benefits: lower cost and redirecting investments into areas that have a higher impact on a positive network experience for the customers. Also, the forecasted capacity issues are addressed and solved before they become a problem for the customers. This is a huge advantage, especially when compared to the reactive, fire-fighting like model previously deployed at the operator to address network capacity issues. In addition, note that this part of the process is performed in a tool as simple as MS Excel. This was a key driver for the business success of the solution. In our experience the importance of the Deployment step in the data mining process is generally underestimated. By providing not just the scores but also the underlying models in a format and tool that was immediately usable and tunable to end users who are not data miners, the solution was readily accepted and also used in new ways not necessarily intended by the data miners, for instance detailed simulation scenarios. In our view, this approach may be applicable to many other domains. Initially, the only application of this research envisioned by the a uthors was the deployment scenario for forecasting future load and predicting necessary network upgrades due to  X  X egular X  traffic growth, as described in section 4.4. This has already been used in four different country operators belonging to the telecom group. However, due to the flexibility of the approach, meaning using simple tools such as Microsoft Excel for implementation, the system developed a life of its own: the end users in the operator where this research was originally developed started creating simulation scenarios suited for different needs. Step 1.1.3 of the algorithm described in the previous section mentions feeding scaling factors for the input parameters based on a traffic model. What if this traffic model is replaced by a different one? In that case, a new simulation scenario is generated. Using our approach, all it takes to generate a new scenario is to change the values of the input parameters in MS Excel. The output of the model (Downlink and Uplink Load) is automatically recalculated and the user can immediately see the effect. In the next paragraphs we will explain a few actual use case scenarios. One of the first use cases generated was to predict future network load and evaluate network investments, based on proactive localized marketing campaigning. It was a co-operation between the Marketing and Network Technology Department. The Marketing Department provided their campaign description and expected benefits, namely new customers and increased service usage, which were trended in terms of the input parameters described in section 2. These were fed into the model as described in section 4.4, so the increased future load can be predicted and the necessary network improvements can be made, even before the marketing campaign is launched. A very similar scenario is in use for opening new stores, due to the fact that increased number of customers is expected when opening a brick-and-mortar store. This allows for the network to be prepared to accept the new customers without impacting the experience of the existing ones. Another very powerful application of this model is evaluating a business case for adding a new wholesale client-or an MVNO (Mobile Virtual Network Operator). This is an operator that does not own a network; instead a MVNO is renting the network of a bigger telecom operator in order to provide services. In this case, the localized traffic growth for predicting the future load is based on the location (or the evaluation of) the customers of the MVNOs and their respective service usage. These are then trended and fed into our model (via MS Excel) in order to evaluate the necessary network improvements, so there is no degradation of service for the customers of the host operator. However, these upgrades come at a certain cost, which is attributed to accepting the MVNO onto the host network. If the benefit (revenues) generated by accepting the MVNO are lower than the costs incurred, the business case is negative and therefore, rejected. This approach was used in the country where the research originated to reject a business case for adding an MVNO. At the moment, a MVNO business case is being evaluated for another operator from the same telecom group. Last but not least, this approach was used as one of the criteria to determine the strategy for the network swap and deployment of LTE (4G) network in the originating operator. As mentioned in section 4.3, this operator is undertaking a major network infrastructure investment, namely replacing the entire radio network (every cell) in order to modernize it and allow for deployment of 4G. Of course an undertaking of this size cannot be performed all at once; thus clusters of cells are being planned for replacement at a certain time. Our load prediction method was one of the criteria used for giving priority to certain clusters, thus reducing the need of unnecessary investments into the  X  X ld X  network. The underlying assumption here is not only that the  X  X ew X  generation radio network has more efficient resource use and therefore can handle the load better, but also that a certain amount of customers will start using 4G services, therefore offloading the 3G network. None of the use case analyses described above were possible prior to the deployment of our method. They all require localized load predictions, which simply did not exist. The exact monetary return is once again confidential. The regression formulas developed by this approach can be used o n a long term basis only if the mobile network stays the same (is frozen) over a longer period. But, this is not the case. The cellular network is a system of very complex dynamics. The many changes that occur, such as hardware and software updates, network reconfigurations and optimizations, as well as network upgrades and roll-out of new cell sites, which reduce the load of the existing cells, cannot be taken into account in advance. It is necessary to collect a new dataset and rebuild the regression formulas, in order to incorporate all these changes into the model. This is why the process described in this paper is scheduled for execution every 3-4 months. Next, we intend to improve prediction for uplink load. One method would be searching for additional input parameters to improve the performance of predicting uplink load using linear regression. Alternatively, we could look for a substitute for linear regression better suited for modeling uplink load on the cells where linear regression does not deliver. However, this algorithm should not substantially slow down the whole process and must be easily transferable to MS Excel, in order to keep the flexibility and the ease of building simulation scenarios. Further evaluation of the quality of the derived load formulas of course also involves the comparison of the predicted load with the actually measured load in the future. It should however be noted that there a lot of factors impeding a direct comparison. As noted above, all changes to the settings of a cell within the forecasting timeframe affect the load formula, which means that after such changes the derived formula is -at least to some degree -no longer correct. For this reason it will be challenging to really quantify the accuracy of the predictive model. Developing a fair method of evaluation, which would incorporate the network changes, would be beneficial. In terms of the core algorithms, we do want to keep the benefit of using a simple, fast and robust low variance approach such as linear regression. However, we do plan to explore a methodology that would allow us to combine a global network model with local models for each cell, for instance multitask or transfer learning [24]. In principle, we have almost infinite data available for most cells, so local models cannot be improved by a global model. Nevertheless, there could be exception for a non select small number of cells. Next, a clustering approach could be devised to group cells with similar formulas or levels of load, thereby generating new knowledge for the telecom domain experts. Furthermore, we do intend to investigate additional simulation scenarios for our approach, beyond those described in Section 4.5. Last but not least, this research has been implemented in four operators of this telecom group. Other operators from the same group are still to follow, with their use cases and applications of their own. In this paper we presented a very simple yet effective approach of d eploying data mining in commercial surroundings. Unfortunately, data mining is still seen as a black box in many industries, telecom not excluded. Even though some data mining activities are taken, typically in the Marketing/Customer Retention field, there is a myriad of other possibilities in business where data mining can be applied. In our opinion, it is better to start with simple methods, such as regression, because it is easier to understand them. Once these simple approaches gain acceptance, and familiarize the industries with data mining, opportunities to apply more advanced techniques will arise. In our result section we show that it is easier to accomplish a target, if one is focused on it. Namely, with our approach we wanted to target cells where some load (non-zero load) occurs, in order to predict the part that really matters more correctly: the high end part of the load curve (the cells in overload). In other words, as the network load grows, so does the quality of the model X  X  predictions. We willingly sacrificed the models X  performances within the lower loaded cells, because they are of no interest. Next, one of the key values of the approach is that a large number of regression models (close to 30,000 per day) are developed in a very short period of time with minimum human interaction. In order to do this, we deployed a simple algorithm such as linear regression, motivated by its speed and other benefits explained earlier, a wrapper feature selection, in order to avoid human interaction, and 10-fold cross validation which makes the models statistically sound. Manually, this task would be impossible. Obviously, the possibility to generate these formulas was crucial to the operator. At the moment, the commercial tools for this purpose offer only load predictions based on single variable regressions [11], which is not as robust as our approach. Typically, planning network upgrades is a reactive process. Our approach makes it proactive, which was acknowledged by the operator, who has fully integrated our approach into its network upgrade planning and budgeting activities. Of course, due to the fast pace network changes, the formulas need to be upgraded every 3-4 months, but this is also scheduled as a part of a standard process. Due to confidentiality, we cannot disclose the exact return of this project, but given that the network is the key resource of an operator, the investments into its upgrades are quite sizeable. To our knowledge, this is the first time a telecom operator has applied data mining in order to create a proactive network upgrade management process. This allows the operator to manage network performance better and avoid extreme congestion situations, which can result in degraded customer experience and loss of reputation for the operator. As mentioned at the beginning, the research was performed at a large telecom operator with branches in many European countries. At the moment, our research is deployed in four of the countries where this operator is present, but efforts are made to make it universal to the telecom group and replicate it in the other branches as well. Potentially the greatest benefit of our approach is the decoupling of the data mining process from simulation scenarios. This is accomplished by exporting the models into Excel sheets after they have been have been generated by our data mining process. Then, the end users, a team of radio network analysts who are not data miners, are able to use these formulas resulting from a data mining process for forecasting the future network load. This allows them to simulate multiple traffic scenarios by scaling the current input parameters, which is as simple as changing values in their respective columns in Excel. These scenarios include  X  X egular growth X  scenarios, evaluations of network investments necessary to accommodate localized user growth due to targeted marketing campaigns, adding a new wholesale client (an MVNO-Mobile Virtual Network Operator) and prioritizing clusters for deployment of new technologies such as LTE/4G. Next, we would like to point out the possibility of applying our research onto problems other than telecom network load. This approach would be applicable to any other industry where large scale regression models are necessary. This can be accomplished simply be replacing the data source, in this case the Radio Network Performance Management Tools, with a data source suitable for the industry that would like to apply our research. The decoupling of the data mining process from the simulation scenarios makes our approach more general to situations where detailed simulations are necessary, but the domain experts are not data miners. We already tested this approach for cluster based revenue predictions, which is a topic from the finance domain. Last but not least, perhaps one of the most interesting aspects of our approach is the extremely low cost. Given that we used the existing IT infrastructure (Server, Radio Network Performance Management Tools, Oracle, Excel) combined with open source tools (WEKA, Perl), the only cost that incurred are the 1 week Processing Time Cost (of the Server) and the labor cost of the employees in this project. Also, the Oracle Database that we used can be replaced with a less expensive or free database alternative in order to further reduce the cost, in case the potential user of our approach does not have an Oracle License. These amounts are insignificant compared to the actual investments being made into the network. [1] M  X der, A., Staehle, D. 2004. Analytic modeling of the [2] Radosavljevik, D., van der Putten, P., Kyllesbech Larsen, K. [3] van der Putten, P., van Someren, M. 2004. A Bias-Variance [4] Yates, R. 1995. A framework for uplink power control in [ 5] Geijer Lundin, E., Gunnarsson, F., Gustafsson, F. 2003. [6] Muckenheim, J., Bernhard, U. 2001. A Framework for Load [7] Natalizio, E., Marano, S., Molinaro A. 2005. Packet [8] Nokia Siemens Networks. 2008. Nokia Siemens Networks [9] Ericsson. 2013. Ericsson Performance Management. DOI= [10] Huawei.2013. iManager M2000. DOI= [11] MyCom. 2013. NIMS-PrOptima Service &amp; Network [12] 3gpp.1999. RNSAP Cell Load Information procedure and [13] Feinberg, E.A., Genethliou, D. 2005. Load Forecasting. In: [14] Svoboda, P., Buerger, M., Rupp, M. 2008. Forecasting of [15] Bermolen, P., Rossi, D. 2009. Support vector regression for [16] Witten, I. H., Frank, E. 2005. Data Mining: Practical [17] Oracle, 2011. Oracle Database Documentation Library. [18] Hall, M., Frank, E., Holmes, G., Pfahringer, B., Reutemann, [19] Strawberry Perl, 2011. DOI= http://strawberryperl.com/ [20] Microsoft Corporation, 2010. Microsoft Excel. DOI= [21] Christiansen, T., Torkington, N. 2003. Perl Cookbook (2nd [22] Kohavi, R., John, G. 1997. Wrappers for feature subset [23] Tsamardinos, I., Aliferis, C. 2003. Towards principled [24] Caruana, R. 1997. Multitask learning. Machine Learning 28, 
