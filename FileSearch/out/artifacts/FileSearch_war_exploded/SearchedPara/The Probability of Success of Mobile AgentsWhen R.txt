 A mobile agent is a program entity that is capable of migrating autonomously from node to node and acts on behalf of a user to perform intelligent decision-making tasks. in an information network, when a mobile agent is encapsulated with a task, it can be dispatched to a remote node. Once the agent has com-pleted its tasks, the summary report for its trip is sent back to the source node. Since there are very few communications between the agent and the source node during the process of searching, the network traffic generated by mobile agents is very light. The potential benefits of using mobile agents includes reducing network load, overcoming network latenc y, encapsulating pro tocols, executing asynchronously and autonomously, adapting environment dynamically, etc. [11]. It has drawn a great deal of attention in both academia and industry [3,11,19,20].
Routing is an important issue for network management. Mobile agent-based network routing is a recently proposed met hod for use in large dynamic networks [5, 7, 13, 15, 17, 21]. For an agent-based network, agents can be generated from every node in the network, and each node in the network provides to mobile agents an execution environment. A node which generates mobile agents is called the server of these agents. Once a request for sending a packet is received from a server, the server will generate a number of mobile agents. These agents will then move out from the server to search for the destination. Once a mobile agent finds the destination, the information will be sent back to the server along the same path. When all (or some of) the mobile agents come back, the server will determine the optimal path and send the packet to the destination along the optimal path. At the same time, the server will update its routing table.
In this paper, we describe a general mobile agent-based routing model and classify it into two cases based on the reaction capability of mobile agents to a system failure. To compare their performances, we analyze the probability of success of mobile agents. Our contri butions are summarized as follows:  X  A general agent-based routing model is described and is classified into two  X  The probability of success is analyzed for each case, which serves as an
Our paper is organized as follows. Sectio n 2 discusses related work. Section 3 describes our model. Section 4 introduces the notations used in this paper and presents the analytical results for mobile agents. Section 5 concludes the paper. A mobile agent is an autonomous object that possesses the ability for migrating autonomously from node to node in a computer network. Usually, the main task of a mobile agent is determined by specified applications of users, which can range from E-shopping and distributed computation to real-time device con-trol. In recent years, a number of research institutions and industrial entities have been engaged in the development of elaborating supporting systems for this technology [11, 23]. In [11], several merits for mobile agents are described, including network load and latency reduction, protocol encapsulation, adaption, heterogeneity, robustness and fault-to lerance. Successful examples using mobile agents can be found in [10, 12].

Network routing is a problem in network management. Ant routing is a re-cently proposed mobile agent based network routing algorithm for use in these environments [21,22]. The continuing investigation and research of naturally oc-curring social systems offer the prospect of creating artificial systems that are controlled by emergent behavior and prom ise to generate engineering solutions to distributed systems management problems such as those in communication networks [5, 17].

Real ants are able to find the shortest path from a food source to the nest without using visual cues. Also, they ca n adapt to changes in the environment, for example finding a new shortest path once the old one is no longer feasible due to a new obstacle [2,9]. In the ant routing algorithm described in [7,18], artificial ants are agents which concurrently explore the network from node to node and exchange collected information when the y meet each other. They irrespectively choose the node to move by using a probabilistic function which was proposed here to be a function of the connecting situation of each node. Artificial ants probabilistically prefer nodes that are connected immediately. Initially, a number of artificial ants are placed on randoml y selected nodes. At each time step they move to new nodes and select useful information. When an ant has completed it X  X  task, it will send a message back to the server.

In [4], Brewington et al formulated a method of mobile agent planning, which is analogous to the travelling salesman problem [8] to decide the sequence of nodes to be visited by minimizing the total execution time until the destination is found. In the preliminary work of this paper [16], the probability of success of mobile agents is analyzed. The model can be seen as a special case of the one in this paper. Assume that in a network with n nodes, agents can be generated from every node. Each node in the network provides mob ile agents an execution environment. A node which generates mobile agents is called the server of these agents. Initially, there are a pile of requests for sending packets in the network. Then, a number of mobile agents are generated for each request. At any time t , the expected number of requests received from one node is m . Once a request arrives, k agents are created and dispatched into the network. Those agents traverse the network from the server to search for the destination. Once an agent reaches a node, it will check whether the node is its destination or not. If so, the agent will turn back to the server with information of the searched path. Otherwise, it will select a neighboring node to move on. The server will compare all the path collected and pick up the optimal path. Then, the packet is sent out to the destination along the optimal path. At the same time, the server updates its routing table. To avoid the user from waiting for a too long time, an agent will die if it cannot find its destination within a given time bound, which is called the agent X  X  life-span limit in this paper.

As we know, any component of the network (machine, link, or agent) may fail at any time, thus preventing mobile agents from continuing their trip. Mobile agents have to dynamically adopt to the environment during their trip. In this paper, we study two cases based on mobile agents reaction to a system failure. One is that a mobile agent will die if it subjects to a failure; the other is that if a mobile agent subject to a failure, it will return back to the previous node, reselect another neighboring node of the previous node, and move to it. Obviously, there is a trade-off between these two case. S ince mobile agents will be generated frequently in the network, there will be many agents running in the network. If the the death rate is high (for example, the first case), the number of agents working for the request is small, we cannot get a high probability of success. On the other hand, if there are too many mobile agents running in the network (for example, the second case), they will cons ume too much computational resource, which will affect the network performance due to the limited network resource and ultimately block the entire network. In the following, we will analyze both the number of mobile agents and the probability of success for evaluating the network performance for both cases.
 Suppose that the network topology we used is a connected graph so that there is at least one path (directly or indirectly) between any two nodes. Matrix  X  = (  X  ij ) n  X  n is the connectivity matrix which describes the connectivity of the graph, i.e., if there is a direct link between node i and node j ,then  X  ij =  X  ji = 1; otherwise,  X  ij =0.Let  X  j be the j -th column vector of matrix  X  :  X  = (  X  neighboring nodes of the j -th node including itself, and  X  1 =max  X  .

For a network with n nodes (i.e., n 1 , n 2 ,  X  X  X  , n n ), every node can be the destination of a request, and each node has an independent error rate. Let X i be a binary valued variable defined as follows: with a probability Pr { X i =1 } = p . Then, the parameter p measures the in-cidenceoffailureinthenetwork.Wesayanodeisdownifitisoutofwork; otherwise, it is up. Once a point-to-point request 1 is made, a number of agents are generated and dispatched into the network. Once an agent reaches an up node, it will find its destination locally with a probability 1 n . If the agent cannot find its destination here, it will select a neighboring node and move on. 4.1 Case 1 For the first case, assume that the probability of jumping to any neighboring nodes or die in the current node is same. Regarding to the probability that an agent can find the destination in d jumps, we have the following theorem: Theorem 1. The probability, P  X  ( n, d, p, k ) , that at least one agent among the k agents can find the destination in d jumps satisfies the following equality: where a =(1  X  p ) /n , b = E [1 /c i ] ,and  X  =(1  X  a )(1  X  b ) .
 Proof. The theorem can be easily proved similar to that in [16].

The value of b is depended on the probability distribution of c i . For example, if c i (1  X  i  X  n ) are independent and satisfy the uniform distribution, we have
From theorem 1, it is easy to estimate P  X  ( n, d, p, k ) as follows. Corollary 1. The probability P  X  ( n, d, p, k ) satisfies the following inequalities: where a =(1  X  p ) /n ,  X  1 and  X  n are the maximum and minimum number of c i . Proof. The first inequality can be easily proved due to the fact that Similarly, the seconde inequality can be proved.

The probability that an agent can find its destination is decided by the con-nectivity of network and parameters k and d , which coincides with practice. From the theorem above, we can easily get that the probability that none of those k agents can find the destination is less than 1  X  a 1+ a X  1  X  a all the k agents can find the destination is less than a  X   X  1 1+ a X  1  X  a 4.2 Case 2 For the second case, since an agent will not die if it has not reached its destination within its life-span, the probability of success equals to r/n where r is the number of nodes that the agent has entered and checked. Denote the i -th node that an agent enters by h i , the number of neighboring nodes of the i -th node c i ,andthe number of neighboring nodes that the agent has selected by v i (i.e., the agent fails to enter the first v i  X  1 nodes and can only enter the v i -th selected node). Regarding to the average number of nodes selected, we have the following result. Lemma 1. The average number of neighboring nodes selected by an agent at Proof. The probability that an agent can enter the first selected node, h 1 i ,in NB ( i ), equals to 1  X  p , and the probability that the agent can enter the second selected node equals to p (1  X  p ). By recursion, the probability that the agent enters the v i -th node equals to p v i  X  1 (1  X  p ). Therefore, the average number of nodes the agent selected in NB ( i )satisfies Thus, the average number of nodes the agent selected at each node during the agent X  X  trip satisfies Hence, the lemma is proven.
 Regarding the estimation of r , we have the following result.
 Lemma 2. Let r be the number of nodes that the agent visits, then the average number of nodes that an agent enters satisfies where x indicates the greatest integer less then or equal to x (i.e., x  X  1 &lt; x  X  x ).
 Proof. Denote the j -th selected node from the neighboring nodes of node h i by h  X  X  X  ,h are 2( v i  X  1) + 1 jumps the agent takes. Since an agent will die if it cannot find its destination in d jumps, we have Taking expectation on the inequality, we have since l and v i are independent to each other, and the distributions of v i are same for 1  X  i  X  l .Let r =max { l } , then the lemma is proven.
 From Lemma 1 and Lemma 2, it is readily to get the following theorem. Theorem 2. The probability, P  X  ( n, d, p, k ) , that at least one agent among k agents can find the destination in d jumpsequalsto 1  X  [1  X  E ( r ) /n ] k ,where
Table 1 compares the probability of success P  X  ( n, d, p, k ) between two cases with different n , d ,and k .Since a node failure is a rare event, we set p =0 . 001 in this simulation. From the table, It can be seen that P  X  ( n, d, p, k )forthefirst case is greater than that for the seco nd case with the same parameters n , d , p , and k . In this paper, we addressed the problem of network routing by deploying mobile agents. We described a general agent-based routing model and analyzed the probability of success of mobile agents for both cases. Based on our theoretical results, we can dispatch a small number of mobile agents and achieve a good probability of success by selecting an optimal number of mobile agents generated per request and giving them an optimal life-span limit.

