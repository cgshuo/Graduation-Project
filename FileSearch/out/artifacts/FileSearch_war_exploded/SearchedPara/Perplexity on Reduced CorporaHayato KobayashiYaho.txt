 Removing low-frequency words from a corpus (often called cutoff ) is a common practice to save on the computational costs involved in learning language models and topic models. In the case of language models, we often have to remove low-frequency words because of a lack of com-putational resources, since the feature space of k -grams tends to be so large that we sometimes need cutoffs even in a distributed environment (Brants et al., 2007). In the case of topic models, the in-tuition is that low-frequency words do not make a large contribution to the statistics of the models. Actually, when we try to roughly analyze a corpus with topic models, a reduced corpus is enough for the purpose (Steyvers and Griffiths, 2007).

A natural question arises: How many low-frequency words can we remove while maintain-ing sufficient performance? Or more generally, by how much can we reduce a corpus/model us-ing a certain strategy and still keep a sufficient level of performance? There have been many stud-ies addressing the question as it pertains to differ-ent strategies (Stolcke, 1998; Buchsbaum et al., 1998; Goodman and Gao, 2000; Gao and Zhang, 2002; Ha et al., 2006; Hirsimaki, 2007; Church et al., 2007). Each of these studies experimen-tally discusses trade-off relationships between the size of the reduced corpus/model and its perfor-mance measured by perplexity, word error rate, and other factors. To our knowledge, however, there is no theoretical study on the question and no evidence for such a trade-off relationship, es-pecially for topic models.

In this paper, we first address the question from a theoretical standpoint. We focus on the cutoff strategy for reducing a corpus, since a cutoff is simple but powerful method that is worth study-ing; as reported in (Goodman and Gao, 2000; Gao and Zhang, 2002), a cutoff is competitive with sophisticated strategies such as entropy prun-ing. As the basis of our theory, we assume Zipf X  X  law (Zipf, 1935), which is an empirical rule repre-senting a long-tail property of words in a corpus. Our approach is essentially the same as those in physics, in the sense of constructing a theory while believing experimentally observed results. For ex-ample, we can derive the distance to the landing point of a ball thrown up in the air with initial speed v 0 and angle  X  as v 0 2 sin(2  X  ) /g by believ-ing in the experimentally observed gravity acceler-ation g . In a similar fashion, we will try to clarify the trade-off relationship by believing Zipf X  X  law. The rest of the paper is organized as follows. In Section 2, we define the notation and briefly ex-plain Zipf X  X  law and perplexity. In Section 3, we theoretically derive the trade-off formulae of the cutoff for unigram models, k -gram models, and topic models, each of which represents its per-plexity with respect to a reduced vocabulary, un-der the assumption that the corpus follows Zipf X  X  law. In addition, we show an approximate behav-ior of each formula under certain conditions. In Section 4, we verify the correctness of our theory on synthetic corpora and examine the gap between theory and practice on several real corpora. Sec-tion 5 concludes the paper. Let us consider a corpus w := w 1  X  X  X  w N of cor-pus size N and vocabulary size W . We use an abridged notation { w } := { w  X  w } to repre-sent the vocabulary of w . Clearly, N = | w | and W = |{ w }| hold. When w has additional nota-tions, N and W inherit them. For example, we will use N  X  as the size of w  X  without its definition. 2.1 Power law and Zipf X  X  law A power law is a mathematical relationship be-tween two quantities x and y , where y is propor-tional to the c -th power of x , i.e., y  X  x c , and c is a real number. Zipf X  X  law (Zipf, 1935) is a power law discovered on real corpora, wherein for any word w  X  w in a corpus w , its frequency (or word count) f ( w ) is inversely proportional to its frequency ranking r ( w ) , i.e., Here, f ( w ) := |{ w  X   X  w | w  X  = w }| , and r ( w ) := |{ w  X   X  w | f ( w  X  )  X  f ( w ) }| . From the definition, the constant C is the maximum fre-quency in the corpus. Taking the natural loga-rithms ln(  X  ) of both sides of the above equation, we find that its plot becomes linear on a log-log graph of r ( w ) and f ( w ) . In fact, the result based on a statistical test in (Clauset et al., 2009) reports that the frequencies of words in a corpus com-pletely follow a power law, whereas many datasets with long-tail properties, such as networks, actu-ally do not follow power laws. 2.2 Perplexity Perplexity is a widely used evaluation measure of k -gram models and topic models. Let p be a pre-dictive distribution over words, which was learned from a training corpus w based on a certain model. Formally, perplexity PP is defined as the geomet-ric mean of the inverse of the per-word likelihood on the held-out test corpus w  X  , i.e., Intuitively, PP means how many possibilities one has for estimating the next word in a test cor-pus. According to the definition, a lower perplex-ity means better generalization performance of p . Another well-known evaluation measure is cross-entropy. Since cross-entropy is easily calculated as log 2 PP , we can apply many of the results of this paper to cross-entropy. Now let us consider what a cutoff is. In our study, we simply define a corpus that has been reduced by removing low-frequency words from the origi-nal corpus with a certain threshold. Formally, we say w  X  is a corpus reduced from the original cor-pus w , if w  X  is the longest subsequence of w such sequence can include gaps in contrast to a sub-string. For example, supposing we have a corpus w = abcaba with a vocabulary { w } = { a, b, c } , w  X  1 = ababa is a reduced corpus, while w  X  2 = aba and w  X  3 = acaa are not.

After learning a distribution p  X  from a re-duced corpus w  X  , we need to infer the distri-bution p learned from the original corpus w . Here, we use constant restoring (defined below), which assumes the frequencies of the reduced low-frequency words are a constant.
 Definition 1 (Constant Restoring) . Given a pos-itive constant  X  , a distribution p  X  over a reduced corpus w  X  , and a corpus w , we say that  X  p is a  X  -restored distribution of p  X  from w  X  to w , if  X 
Constant restoring is similar to the additive smoothing defined by  X  p ( w )  X  p  X  ( w ) +  X  , which is used to solve the zero-frequency problem of lan-guage models (Chen and Goodman, 1996). The only difference is the addition of a constant  X  only to zero-frequency words. We think con-stant restoring is theoretically natural in our set-ting, since we can derive the above equation by and defining a restored frequency function as fol-lows: Informally, constant restoring involves padding the vocabulary, while additive smoothing involves padding the corpus. Smoothing should be carried out after restoring. 3.1 Perplexity of Unigram Models Let us consider the perplexity of a unigram model learned from a reduced corpus. In unigram mod-els, a predictive distribution p  X  on a reduced cor-pus w  X  can be simply calculated as p  X  ( w  X  ) = f ( w  X  ) /N  X  . We shall start with an analysis of training-set perplexity, since we can derive an ex-act formula for it, which will give us a sufficient idea for making an approximate analysis of test-set perplexity.

Let  X  PP 1 := of a  X  -restored distribution  X  p on a unigram model. The next lemma gives the optimal restoring con-stant  X   X  minimizing  X  PP 1 .
 Lemma 2. For any  X  -restored distribution  X  p of a distribution p  X  from a reduced corpus w  X  to the original corpus w , its perplexity is minimized by Proof. Let w R be the longest subsequence such remainder of w  X  , N R = N  X  N  X  and W R = W  X  of  X  p of Definition 1 into  X  PP 1 , we have  X 
PP 1 = We obtain the optimal smoothing factor  X   X  when
By using a similar argument to the one in the above lemma, we can obtain the optimal constant sufficiently large.

The next theorem gives the exact formula of the training-set perplexity of a unigram model learned from a reduced corpus.
 Theorem 3. For any distribution p  X  on a unigram model learned from a corpus w  X  reduced from the original corpus w following Zipf  X  X  law, the per-plexity  X  PP 1 of the  X   X  -restored distribution  X  p of p  X  from w  X  to w is calculated by where H ( X ) :=  X  Proof. We expand the first part of  X  PP 1 in the proof of Lemma 2 using  X   X  as follows: 1 + W R  X   X  The second part of  X  PP 1 is as follows: (  X  We obtain the objective formula by putting the above two formulae together with N = CH ( W ) and N  X  = CH ( W  X  ) , which are derived from Zipf X  X  law.

The functions H ( X ) and B ( X ) are the X -th partial sum of the harmonic series and Bertrand series (special form), respectively. An approxima-tion by definite integrals yields H ( X )  X  ln X +  X  , where  X  is the Euler-Mascheroni constant, and B ( X )  X  1 proximate analysis.

Now let us consider an approximate form of  X  PP 1 ( W  X  ) in Theorem 3. For further discussion, we define the last part of  X  PP 1 ( W  X  ) as follows:
F ( W, W  X  ) := Since W  X  =  X W holds for an appropriate ratio  X  , we have
F ( W,  X W ) = Therefore, when W is sufficiently large, we can use F ( W, W  X  )  X  W for any ratio  X  : 0 &lt;  X  &lt; 1 . Using this fact, we obtain an approximate formula  X  PP 1 of  X  PP 1 as follows:
PP 1 ( W  X  ) = ln W exp
The complexity of  X  PP 1 is quasi-polynomial, i.e.,  X  PP 1 ( W  X  ) = O ( W  X  ln W  X  ) , which behaves as a quadratic function on a log-log graph. Since  X  its gradient  X  we infer that low-frequency words may not largely contribute to the statistics.

Considering the special case of W  X  = W , we obtain the perplexity PP 1 of the unigram model learned from the original corpus w as Interestingly, PP 1 is approximately expressed as a simple elementary function of vocabulary size W . This suggests that models learned from cor-pora with the same vocabulary size theoretically have the same perplexity.

For the test-set perplexity, we assume that both the training corpus w and test corpus w  X  are gen-erated from the same distribution based on Zipf X  X  law. This assumption is natural, considering the situation of an in-domain test or cross validation test. Let w  X   X  be the longest subsequence of w  X  such that for any w  X  w  X   X  , w  X  w  X  holds. For-mally, we assume p  X  ( w )  X  p  X   X  ( w ) for any w  X  w  X   X  of Lemma 2 and Theorem 3 for w  X  , we obtain an approximation formula for the test-set perplex-ity, where we simply substitute W and W  X  in the exact formula for the training-set perplexity with W only consider training-set perplexity from now on, since we can make a similar argument for the test-set perplexity in the later analysis. 3.2 Perplexity of k -gram Models Here, we will consider the perplexity of a k -gram model learned from a reduced corpus as a standard extension of a unigram model. Our theory only assumes that the corpus is generated on the basis of Zipf X  X  law. Thus, we can use a simple model where k -grams are calculated from a random word sequence based on Zipf X  X  law. This model seems to be stupid, since we can easily notice that the bigram  X  X s is X  is quite frequent, and the two bi-grams  X  X s a X  and  X  X  is X  have the same frequency. However, the experiments described later uncov-ered the fact that the model can roughly capture the behavior of real corpora.

The frequency f k of k -gram word w k  X  w k in the model is represented by the following formula: where C k is the maximal frequency in k -grams, r k is the frequency ranking of w k over k -grams, and g k expresses the frequency decay in k -grams. For example, the decay function g 2 of bigrams is as follows: ( g 2 ( i )) i := ( g 2 (1) , g 2 (2) , g 2 (3) ,  X  X  X  ) This is an inverse of the sum of Piltz X  X  divisor functions d 2 ( n ) := the number of divisors of an integer n (cf. (OEIS, 2001)). In general, we formally define g k through its inverse: g  X  1  X  ( g k ( i )) i is a sorted sequence of the elements of the k -th tensor power of vector (1 ,  X  X  X  , W ) , we can calculate the maximum frequency C k as follows. Lemma 4. For any corpus w following Zipf  X  X  law, the maximum frequency of k -grams in our model is calculated by where D denotes the number of documents in w . Proof. We use
The sum S k (  X  ) of Piltz X  X  divisor functions can be approximated by  X  X  k (ln  X  ) , where P k ( x ) is a polynomial of degree k  X  1 with respect to x , and the main term of  X  X  k (ln  X  ) is given by the the Riemann zeta function (Li, 2005). Using this fact, we obtain an approximation ln ( g  X  1 ln  X  + O (ln (ln  X  ))  X  ln  X  , when  X  is sufficiently large. Thus, when the corpus is sufficiently large, we can see that the behavior of f k is roughly linear r
Unfortunately, however, most corpora in the real world are not so large that the above-mentioned relation holds. Actually, Ha et al. (Ha et al., 2002; Ha et al., 2006) experimentally found that although a k -gram corpus roughly follows a power law even when k &gt; 1 , its exponent is smaller than 1 (for Zipf X  X  law). They pointed out that the exponent of bigrams is about 0.66, and that of 5-grams is about 0.59 in the Wall Street Journal corpus (WSJ87). Believing their claim that there exists a constant  X  k such that f k ( w k )  X  r ( w k )  X   X  k , we estimated the exponent of k -grams in an actual situation in the form of the following lemma.
 Lemma 5. Assuming that f k ( w k )  X  r k ( w k )  X   X  k holds for any k -gram word w k  X  w k in a corpus w following Zipf  X  X  law, the optimal exponent in our model based on the least squares criterion is calculated by Proof. We find the optimal exponent  X  k by mini-mizing the sum of squared errors between the gra-dients of g  X  1  X  { where y = ln r .

In the case of unigrams ( k = 1 ), the formula exactly represents Zipf X  X  law. In the case of k -grams ( k &gt; 1 ), we found that the formula ap-proaches Zipf X  X  law when W approaches infinity, i.e., lim W  X  X  X   X  k = 1 .

Let us consider the perplexity of a k -gram model learned from a reduced corpus. We im-mediately obtain the following corollary using Lemma 5.
 Corollary 6. For any distribution p  X  on a k -gram model learned from a corpus w  X  reduced from the original corpus w following Zipf  X  X  law, assuming that f k ( w k )  X  r k ( w k )  X   X  k holds for any k -gram word w k  X  w k and the optimal exponent  X  k in Lemma 5, the perplexity  X  PP k of the  X   X  -restored distribution  X  p of p  X  from w  X  to w is calculated by  X  PP k ( W  X  ) = H  X  where H a ( X ) :=  X 
H a ( X ) is the X -th partial sum of the P-series or hyper-harmonic series, which is a generaliza-tion of the harmonic series H ( X ) . B a ( X ) is the X -th partial sum of the Bertrand series (another special form of B ( X ) ). When 0 &lt; a &lt; 1 , we can easily calculate  X  PP k ( W  X  ) by using the following approximations:
H a ( X )  X 
B a ( X )  X  By putting the approximations of H a ( X ) and B a ( X ) into the formula of Corollary 6, we ob-This implies that  X  PP k ( W  X  ) is approximately linear on a log-log graph, when  X  k is close to 1, i.e., k is relatively small and W is sufficiently large. Note that we must use the approximation of H ( X ) , not H a ( X ) , when a = 1 .

The fact that the frequency of k -grams follows a power law leads us to an additional convenient property, since the process of generating a cor-pus in our theory can be treated as a variant of the coupon collector X  X  problem. In this problem, we consider how many trials are needed for col-lecting all coupons whose occurrence probabilities follow some stable distribution. According to a well-known result about power law distributions (Boneh and Papanicolaou, 1996), we need a cor-when  X  k = 1 for collecting all of the k -grams, the number of which is W k . Using results in (Atso-nios et al., 2011), we can easily obtain a lower and upper bound of the actual vocabulary size  X  W k of k -grams from the corpus size N and vocabulary size W as  X  W k  X  (  X  k + 1)  X  W This means that we can determine the rough sparseness of k -grams and adjust some of the pa-rameters such as the gram size k in learning statis-tical language models. 3.3 Perplexity of Topic Models In this section, we consider the perplexity of the widely used topic model, Latent Dirichlet Alloca-tion (LDA) (Blei et al., 2003), by using the nota-tion given in (Griffiths and Steyvers, 2004). LDA is a probabilistic language model that generates a corpus as a mixture of hidden topics, and it allows us to infer two parameters: the document-topic distribution  X  that represents the mixture rate of topics in each document, and the topic-word dis-tribution  X  that represents the occurrence rate of words in each topic. For a given corpus w , the model is defined as where d i and z i are respectively the document that includes the i -th word w i and the hidden topic that is assigned to w i . In the case of infer-ence by Gibbs sampling presented in (Griffiths and Steyvers, 2004), we can sample a  X  X ood X  topic as-signment z i for each word w i with high probabil-ity. Using the assignments z , we obtain the pos-terior distributions of two parameters as  X   X  d ( z )  X  n z +  X  and n z respectively represent the number of times assigning topic z in document d and the number of times topic z is assigned to word w .

Since an exact analysis is very hard, we will place rough assumptions on  X   X  and  X   X  to reduce the complexity. The assumption placed on  X   X  is that the word distribution  X   X  z of each topic z follows Zipf X  X  law. We think this is acceptable since we can re-gard each topic as a corpus that follows Zipf X  X  law. Since  X   X  z is normalized for each topic, we can as-sume that for any two topics, z and z  X  , and any two words, w and w  X  ,  X   X  z ( w )  X   X   X  z  X  ( w  X  ) holds if r ( w ) = r z  X  ( w  X  ) , where r z ( w ) is the frequency ranking of w with respect to n ( w ) z . Note that the above assumption pertains to a posterior, and we do not discuss the fact that a Pitman-Yor process prior is better suited for a power law (Goldwater et al., 2011).

The assumption placed on  X   X  may not be reason-able in the case of  X   X  , because we can easily think of a document with only one topic, and we usu-ally use a small number T of topics for LDA, e.g., T = 20 . Thus, we consider two extreme cases. One is where each document evenly has all topics, and the other is where each document only has one topic. Although these two cases might be unreal-istic, the actual (theoretical) perplexity is expected to be between their values. We believe that analyz-ing such extreme cases is theoretically important, since it would be useful for bounding the compu-tational complexity and predictive performance.
We can regard the former case as a unigram model, since the marginal predictive distribution  X  dependent of d ; here we have used  X   X  d ( z ) = 1 /T from the assumption. In the latter case, we can obtain an exact formula for the perplexity of LDA when the topic assigned to each document follows a discrete uniform distribution, as shown in the next theorem. Note that a mixture of corpora fol-lowing Zipf X  X  law can be approximately regarded as following Zipf X  X  law, when W is sufficiently large.
 Theorem 7. For any distribution p  X  on the LDA model with T topics learned from a corpus w  X  re-duced from the original corpus w following Zipf  X  X  law, assuming that each document only has one topic which is assigned based on a discrete uni-form distribution, the perplexity  X  PP restored distribution  X  p of p  X  from w  X  to w is calcu-Table 1: Details of Reuters , 20news , Enwiki , Zipf1 , and ZipfMix .
Reuters 70,258 2,754,800 18,118 20news 192,667 4,471,151 19,997 Enwiki 409,902 16,711,226 51,231
ZipfMix 70,093 2,754,800 18,118 lated by  X  PP Proof. We can prove this by using a similar argu-ment to that of Theorem 3 for each topic.

The formula of the theorem is nearly identical to the one of Theorem 3 for a 1 /T corpus. This implies that the growth rate of the perplexity of LDA models is larger than that of unigram mod-els, whereas the perplexity of LDA models for the original corpus is smaller than that of unigram models. In fact, a similar argument to the one in the approximate analysis in Section 3.1 leads to an approximate formula  X  PP  X  PP when W is sufficiently large. That is,  X  PP also has a quadratic behavior in a log-log graph, i.e.,  X  PP We performed experiments on three real corpora ( Reuters , 20news , and Enwiki ) and two syn-thetic corpora ( Zipf1 and ZipfMix ) to verify the correctness of our theory and to examine the gap between theory and practice. Reuters and 20news here denote corpora extracted from the Reuters-21578 and 20 Newsgroups data sets, re-spectively. Enwiki is a 1 / 100 corpus of the En-glish Wikipedia. Zipf1 is a synthetic corpus gen-erated by Zipf X  X  law, whose corpus is the same size as Reuters , and ZipfMix is a mixture of 20 syn-thetic corpora, sizes are 1/20th of Reuters . We used ZipfMix only for the experiments on topic models. Table 1 lists the details of all five corpora. Fig. 1(a) shows the word frequency of Reuters , 20news , Enwiki , and Zipf1 versus frequency ranking on a log-log graph. In all cor-pora, we can regard each curve as linear with a gradient close to 1. This means that all corpora roughly follow Zipf X  X  law. Furthermore, since the curve of Zipf1 is similar to that of Reuters , Zipf1 can be regarded as acceptable.

Fig. 1(b) plots the perplexity of unigram mod-els learned from Reuters , 20news , Enwiki , and Zipf1 versus the size of reduced vocabu-lary on a log-log graph. Each value is the aver-age over different test sets of five-fold cross val-idation. Theory1 is calculated using the for-mula in Theorem 3. The graph shows that the curve of Theory1 is nearly identical to that of Zipf1 . Since the vocabulary size W  X  of each test set is small in this experiment, some errors appear when W  X  is large, i.e., W  X  &lt; W  X  . This clearly means that our theory is theoretically correct for an ideal corpus Zipf1 . Comparing Zipf1 with Reuters , however, we find that their perplex-ities are quite different. The reason is that the gap between the frequencies of low-ranking (high-frequency) words is considerably large. For ex-ample, the frequency of the 1st-rank word of Reuters is f ( w ) = 136 , 371 , while that of Zipf1 is f ( w ) = 234 , 705 . Our theory seems to be suited for inferring the growth rate of perplexity rather than the perplexity value itself.

As for the approximate formula  X  PP 1 of Theo-rem 3, we can surely regard the curve of Zipf1 as being roughly quadratic. The curves of real corpora also have a similar tendency, although their gradients are slightly steeper. This difference might have been caused by the above-mentioned errors. However, at least, we can ascertain the important fact that the results for the corpora re-duced by 1/100 are not so different from those of the original corpora from the perspective of their perplexity measures.

Fig. 1(c) plots the frequency of k -grams ( k  X  { 1 , 2 , 3 } ) in Reuters versus frequency ranking on a log-log graph. TheoryFreq (1-3) are calcu-lated using C k in Lemma 4 and  X  k in Lemma 5. A comparison of TheoryFreq and Zipf verifies the correctness of our theory. However, comparing Zipf and Reuters , we see that C k is poorly es-timated when the gram size is large, whereas  X  k is roughly correct. This may have happened because we did not put any assumptions on the word se-calculated using the formula in Theorem 7. quences in our simple model. The frequencies of high-order k -grams tend to be lower than in real-ity. We might need to place a hierarchical assump-tion on the a power law, as in done in hierarchical Pitman-Yor processes (Wood et al., 2011).

Fig. 1(d) plots the exponent of the power law over k -grams in Reuters versus the gram size on a normal graph. We estimated each exponent of Reuters by using the least-squares method. TheoryGrad is calculated using  X  k in Lemma 5. Surprisingly, the real exponents of Reuters are almost the same as the theoretical estimate  X  k based on our  X  X tupid X  model that does not care about the order of words. Note that we do not use any information other than the vocabulary size W and the gram size k for estimating  X  k .

Fig. 1(e) plots the perplexity of k -gram mod-els ( k  X  { 1 , 2 , 3 } ) learned from Reuters versus the size of reduced vocabulary on a log-log graph. Theory2 and Theory3 are calculated using the formula in Corollary 6. In the case of bigrams, the perplexities of Theory2 are almost the same as that of Zipf2 when the size of reduced vocab-ulary is large. However, in the case of trigrams, the perplexities of Theory3 are far from those of Zipf3 . This difference may be due to the sparse-ness of trigrams in Zipf3 . To verify the correct-ness of our theory for higher order k -gram models, we need to make assumptions that include backoff and smoothing.

Fig. 1(f) plots the perplexity of LDA models with 20 topics learned from Reuters , 20news , Enwiki , Zipf1 , and ZipfMix versus the size of reduced vocabulary on a log-log graph. We used a collapsed Gibbs sampler with 100 iterations to infer the parameters and set the hyper parameters,  X  = 0 . 1 and  X  = 0 . 1 . In evaluating the perplexity, we estimated a posterior document-topic distribu-Table 2: Computational time and memory size for LDA learning on the original corpus, (1/10)-reduced corpus, and (1/20)-reduced corpus of Reuters . corpus time memory perplexity original 4m3.80s 71,548KB 500 (1/10) 3m55.70s 46,648KB 550 (1/20) 3m42.63s 34,024KB 611 tion  X   X  d by using the first half of each test document and calculated the perplexity on the second half, as is done in (Asuncion et al., 2009). Each value is the average over different test sets of five-fold cross validation. Theory1 and TheoryMix are calculated using the formulae in Theorem 3 and Theorem 7, respectively. Comparing Zipf1 with Theory1 , and ZipfMix with TheoryMix , we find that our theory of the extreme cases discussed in Section 3.3 is theoretically cor-rect. TheoryAve is the average of Theory1 and TheoryMix . Comparing Reuters and TheoryAve , we see that their curves are almost the same. If theoretical perplexity  X  PP has a similar tendency as real perplexity PP on a log-log graph, i.e., ln PP ( W  X  )  X  ln  X  PP ( W  X  ) + c for some constant c , we can approximate its deterioration rate as PP ( W  X  ) / PP ( W )  X  exp (ln  X  PP ( W  X  ) + c ) / exp (ln  X  PP ( W ) + c ) =  X  PP ( W  X  ) /  X  PP ( W ) . Therefore, we can use TheoryAve as a heuristic function for estimat-ing the perplexity of topic models. Since we can calculate an inverse of TheoryAve from the bisection or Newton-Raphson method, we can maximize the reduction rate and ensure an acceptable perplexity based on a user-specified deterioration rate. According to the fact that the three real corpora with different sizes have a similar tendency, it is expected that we can use our theory for a larger corpus.

Finally, let us examine the computational costs for LDA learning. Table 2 shows computa-tional time and memory size for LDA learning on the original corpus, (1/10)-reduced corpus, and (1/20)-reduced corpus of Reuters . Comparing the memory used in the learning with the origi-nal corpus and with the (1/10)-reduced corpus of Reuters , we find that the learning on the (1/10)-reduced corpus used 60% of the memory used by the learning on the original corpus. While the computational time decreased a little, we believe that reducing the memory size helps to reduce computational time for a larger corpus in the sense that it can relax the constraint for in-memory com-puting. Although we did not examine the accuracy of real tasks in this paper, there is an interesting report that the word error rate of language mod-els follows a power law with respect to perplexity (Klakow and Peters, 2002). Thus, we conjecture that the word error rate also has a similar tendency as perplexity with respect to the reduced vocabu-lary size. We studied the relationship between perplexity and vocabulary size of reduced corpora. We de-rived trade-off formulae for the perplexity of k -gram models and topic models with respect to the size of reduced vocabulary and showed that each formula approximately has a simple behavior on a log-log graph under certain conditions. We veri-fied the correctness of our theory on synthetic cor-pora and examined the gap between theory and practice on real corpora. We found that the es-timation of the perplexity growth rate is reason-able. This means that we can maximize the reduc-tion rate, thereby ensuring an acceptable perplex-ity based on a user-specified deterioration rate. Furthermore, this suggests the possibility that we can theoretically derive empirical parameters, or  X  X ules of thumb X , for different NLP problems, as-suming that a corpus follows Zipf X  X  law. We be-lieve that our theoretical estimation has the advan-tages of computational efficiency and scalability especially for very large corpora, although exper-imental estimations such as cross-validation may be more accurate.

In the future, we want to find out the cause of the gap between theory and practice and extend our theory to bridge the gap, in the same way that we can construct equations of motion with air re-sistance in the example of the landing point of a ball in Section 1. For example, promising re-search directions include using a general law such as the Zipf-Mandelbrot law (Mandelbrot, 1965), a sophisticated model that cares the order of words such as hierarchical Pitman-Yor processes (Wood et al., 2011), and smoothing/backoff methods to handle the sparseness problem.
 The author would like to thank the reviewers for their helpful comments.
