 Faculty of Computer Science, Dalhousie University, Halifax, Nova Scotia, Canada 1. Introduction
It is no longer news to state that the use of Wireless Fidelity (WiFi) networks introduces security risks to which traditional wired networks are not susceptible. Despite these well known vulnerabilities [1], the use and deployment of WiFi networks has continued to grow. This has made the IEEE 802.11 protocol, on which WiFi networks are based, by far the most widely used wireless networking standard in the world today.

While there are several classes of WiFi speci fi c attacks that exploit these vulnerabilities, our work focuses on Denial of Service (DoS) attacks, which exploit Management Frames at the Media Access Control (MAC) or Data Link layer. This attack class is important because such attacks are relatively easy to implement and can cause a WiFi network to become unusable. The Data Link layer is the second layer of the Open System Interconnect (OSI) protocol stack and it is above the physical layer. Unless new security features are introdu ced into the 802.11 protocol [2], the only means of mitigating this class of attacks is through the use of Intrusion Detection Systems (IDSs). The current set of security features incorporated into the 802.11 protocol such as data encryption and client authentication are not able to guard against these attacks. Thus, in this work, we focus speci fi cally on the three most popular attack types from this category. These are: de-authentication fl ood attack, authentication fl ood attack and association fl ood attack. These attacks are named after the subset of the IEEE 802.11 Management Frames, which they exploit.
Recent research has proposed machine learning solutions for data link layer attacks, including DoS attacks, in 802.11 networks. Machine learning techniques include Genetic Programming (GP) [3], and Arti fi cial Neural Networks ( ANNs) [4]. Moreover, it has been show n that GP based solutions are more adaptable than conventional IDSs such as Snort-Wireless to modi fi ed versions of known attacks [5]. Speci fi cally, it was shown that a machine learning (GP)based IDS was very successful under stealth conditions, whereas Snort-Wireless, a well known conventional IDS, failed to perform under the same conditions [5]. While these r esults are valuable, more research still needs to be done to ascertain the robustness of the proposed machine learning based solutions.

Thus, in this paper, we investigate the robustness of a machine learning based detector in terms of cross-platform robustness and cross-attack robustness. By cross-platform robustness, we refer to the ability of seamlessly porting an IDS solution, without a drop in performance, from one physical network to another with little or no change to the IDS. Conventional signature based IDSs such as Snort-Wireless and Kismet that can be used for detecting data link layer attacks are cross-platform robust because anyone on any network can simply install and use them to monitor a given network without changing any attack signatures..

On the other hand with cross-attack robustness, we mean the ability for a detector trained on one attack type to detect a different but similar attack, which it is not trained on or seen before. For example the de-authentication and dissociation wireless DoS attacks are very similar in implementation but differ only in the management frame exploited. Even though these attacks are quite similar, the signatures for the De-Authentication attack in a conventional IDS like Snort-Wireless will not detect the dissociation GP based IDSs, which are cross-attack robust, has been investigated in [3], the results showed promise.
With this in mind, our objective in this work is to investigate the cross-platform robustness and cross-of two machine learning t echniques namely, GP and ANN, to this problem. These two techniques are chosen because to the best of our knowledge they are the only machine learning techniques previously applied to Wireless network IDS in the litera ture [3 X 6].

The remainder of this paper is organised as follows. Section 2 discusses WiFi networks and data link layer attacks. Section 3 discusses different methods of detecting data link layer attacks investigated. Section 4 outlines the problem and the proposed solu tion. Section 5 outlines the MAC address mapping techniques used in our experiments in detail. Section 6 outlines our methodology and experimental setup while Section 7 presents the results. Finally, conclusions are given and future work is discussed in Section 8. 2. Data link layer attacks and WiFi networks 2.1. WiFi networks
WiFi networks generally consist of one or more Access Points (APs) and a number of clients, the clients can be any device from laptop computers to wireless Personal Digital Assistants (PDAs). These networks communicate over a wireless medium using the IEEE 802.11 standard. Variants based on the IEEE 802.11 standard include 802.11b, 802.11g and others. These variants differ from each other, amongst other things, by the frequency at which they operate and the bandwidth that they are able to deliver. In this paper, we deal speci fi cally with 802.11b networks but our results can be generalized to the 802.11 protocol [7].
 WiFi Access Points (APs) act as base stations or servers for Wireless Local Area Networks (WLANs). Using BeaconFrames, they periodically broadcasttheir Service Set Identi fi er (SSID), which is a character string identifying the AP. This way, any authorised client machine that is within the range of the AP and that can pick up the SSID signal can choose to join the network.

However,security is ofgreatconcern in WiFinetworks. Severalprotocols,which use authentication and cryptographic techniques like Wireless Encryption Protocol (WEP) and WiFi Protected Access (WPA), as well as wireless Virtual Private Networks (VPN), have been used to ameliorate these vulnerabilities. These protocols, however, do not deal with attacks that target the physical and/or data link layers of the network protocol stack. Some of these attacks are DoS attacks, which usually exploit data link layer management frame s. These attacks cause the network to b ecome unusable or inacce ssible to legitimate clients.

Management frames are used by stations to establish and maintain connections. It is important to note frames can be exploited to craft novel DoS attacks, which aim to make a WiFi network unusable. Types of management frames include: Association, Disassociation, Authentication, De-authentication, Beacon and Probe frames. Full discussion on the uses of these frames is beyond the scope of this paper, however the reader can refer to [7] for a more detailed explanation of these frame types.

WiFi speci fi c data link layer attacks are very easy to implement. An attacker simply eavesdrops on a network and gathers information about the stations on the network. The attacker then uses this information to create forged management frames with a spoofed data link layer (MAC) address of a station or an AP on the network. If the attacker chooses to target a speci fi c client, it creates a management frame with the address of the target client as the destination and the address of the AP as the source. The attacker can also choose to vary the scope of the attack i.e. by focusing on the AP to take down the data link layer attacks i.e. De-authentication, Authentication and Association attacks. Figure 1 visually depicts how these attacks can be executed on a WiFi network. 2.2. Attacks and void11
Void11 is a free software implementation of some common 802.11b attacks, such as the De-authentication fl ood, Authentication fl ood and Association fl ood [8]. The basic implementation works in a command line Linux/Unix environment, though it has a GUI implementation called gvoid11, too. Table 1 shows the default values for the parameters used to launch an attack. For void11 to work on a computer, the computer must have a prism based wireless Network Interface Card (NIC) and must have hostap drivers installed. The hostap drivers allow the machine to act as a wireless AP [9].
Void11 implements the three data link layer attacks that we utilize in this work. 1 The basic goal of each of the attacks is to fl ood the network with management frames causing random clients to loose their connection with the AP or keep the AP busy dealing with client requests, which slows down the network. The end result of each of these attack types differs based on the rate of injection of the frames in our experiments are executed using void11, with the default values of its command line arguments, see Table 1. It should be noted that void11 does not simulate the DoS attacks it implements but mounts the actual attacks. 3. Detecting data link layer attacks
Intrusion Detection Systems (IDSs) are used to detect attacks against the integrity, con fi dentiality and availability of computer networks [3,10]. They are analogous to burglar alarms, which monitor the premises to fi nd evidence of break-ins. These operations aim to catch attacks and log information about the incidents such as source and nature of an attack. An IDS can be a combination of software and hardware, which collects and analyzes data collected from a network(s) and/or a host(s).
 In this section, we brie fl y discuss the intrusion detection systems utilised in this work i.e. Snort-Wireless, Arti fi cial Neural Network (ANN) based IDS and G enetic Programming (GP) based IDS. 3.1. Snort-wireless based detection
There are several open source and commercial IDSs available in the market today but Snort stands out as being one of the most popular. Developed in 1998 by Martin Roesch, Snort is an open source, real-time intrusion detection system [11]. Using signature based metrics, it detects and prevents attacks by utilizing a rule-driven langua ge. It is the most widely deploy ed open source IDS in industry and research.

Snort-Wireless [12], which is utilized in our work is an extension of Snort, with signatures which allow the detection of WiFi speci fi c attacks included.

Snort-Wireless is employed in this work for two reasons:
To achieve this, we set up physical networks and attacked them using void11. The network traf fi c from these physical networks was logged using the traf fi c logging features of Kismet. This logged network traf fi cdata fi les, which consists of frames which the machines on network send when communicating with each other, were later replayed to Snort-Wireless in their raw tcpdump format. 3.2. Machine learning based systems
Unlike their conventional counterparts, machine lear ning based detectors utilize detection signatures, which are not produced by human experts. Their signatures are learnt automatically through a learning phase, which is done using labelled network traf fi c data. Recent research has focused on the use of Programming (GP) and Arti fi cial Neural Networks ( ANNs) have been used. Also in [5], a GP based IDS which was evolved to classify between normal and intrusion states for the de-authentication attack was compared against Snort-Wireless. The paper showed that a GP based IDS was capable of detecting the IDS was still able to detect the attack, the stealth attack was not detected by Snort-Wireless.
This success in the use of machine learning based solutions in the detection of 802.11 data link layer attacks in part forms the motivation for our work. If machine learning based solutions are to be seriously considered as replacements for conventional detectors like Snort, more research needs to be carried out to ascertain their robustness. So far not much has been done in this respect and our work attempts to fi ll this gap. Under cross-platform and cross-attack conditions, we ascertain the robustness of machine learning based IDSs, hereby shedding more light on their strengths and weaknesses. 4. Proposed system
In this section we discuss the Machine Learning (ML) based IDSs proposed. We provide details of the methods utilized in data preprocessing and the para meter values utilized during training of the proposed 4.1. Machine learning ( ML ) based IDSs
The proposed ML based IDS, as with all machine learning based solutions, relies on the use of labelled Thus, in this work, the network data was collected on live networks, which were set up in our laboratory. A detailed description of our laboratory test network is given in Section 6.4.

Once this data is collected, it can then be used to train the ML solution to produce rules that detect the network attacks. The network traf fi c data used in training is usually not used in its native format during the training and testing phases of most ML based solutions and this is no different in our case. of features chosen, an appropriate mapping needs to be performed. For example, GP and ANN classi fi ers can only work on numerical values, so all non-numeric features need to be mapped to numeric values. This problem reared its head with regard to data link layer (MAC) addresses in our feature set, our work shows that this mapping is important for the production of robust solutions. This forms the rationale for the address mapping techniques proposed in Section 5 of our work. The mapping techniques in Sections 5.2 and 5.3 are our novel contributions, while the technique highlighted in Section 5.1 is from previous work [3,5].

In this work, the input data for the training does not consist of individual frames from the network traf fi c data (network data collected on live networks in the lab) but each input exemplar comprises of a the training phase. This testing phase validates the rules produced by the system for correctness. The remainder sub-sections detail how the GP and ANN classi fi ers work and the parameter settings used by the classi fi ers during the rule learning phase of developing the signatures automatically. 4.2. GP based IDS training parameters
GP is an extension of the Genetic Algorithm (GA); which is an evolutionary computation (EC) method proposed by John H. Holland [13]. GP extends the GA to the domain of evolving complete computer programs [14]. Using the Darwinian concepts of natural selection and fi tness proportional breeding ( fi tness is determined using a fi tness function), populations of programs are genetically bred to solve problems. These populations of programs can either be represented as tree like LISP structures or as binary strings, which represent integers. These integers are then mapped onto an instruction set and a set of source and destination registers. Each individual can thus be decoded into a program, which takes the form of assembly language type code for a register based machine. This is known as the Linear Page Based GP (L-GP) [13]. Our work utilizes the L-GP approach.

L-GP alongside the Random Subset Selection  X  Dynamic Subset Selection (RSS-DSS) algorithm [15] has been used successfully by other researchers in the realm of IDSs, based on its successful use in detecting the deauthentication attack [3] and other higher level attacks [16]. Moreover, because of its this work.

The parameter settings for the GP employed in this work in all cases are given in Table 2. In addition to the GP parameters, the fi tness function utilised in this work is the switching fi tness function [3]. The switching fi tness function assigns credit to a member of the population depending on whether the During each generation, the variables Fitness ( n ) and Fitness ( n +1) represent the fi tness value of an generation proceeds by consecutively testing each member of the population against the exemplars in using either Eq. (1) or Eq. (2). A run of the GP would consist of a predetermined number of generations. A higher credit value (Fitness) assignment at the end of the run indicates a poor performing individual. 4.3. ANN based IDS training parameters
An ANN can be described as a massively parallel distributed processor, which consists of connected individual processing units called nodes, which is capable of storing experiential knowledge it gets from its environment in internode connectors as weights [17]. An ANN also has the property of being able to make its acquired knowledge av ailable for use. An ANN, speci fi cally a Dynamically Growing Neural Network (DGNN) was used in the training of an anomaly based wireless IDS in [4]. Liu et al., utilized the Improved Winner Takes It All (IWTA) algorithm to successfully select a feature set and train an anomaly based detector for wireless attacks [4].

In order to employ an ANN based IDS, we use the ANN implementation from WEKA [18]. WEKA is a suite of Machine Learning and Data Mining algorithms developed at the University of Waikato by Ian H. Witten and Eibe Frank. The neural network algorithm used in these experiments consists of a very simple multilayer perceptron feed forward network for building the classi fi er. The multilayer perceptron has an input layer, one hidden layer and an output layer. The output layer has two outputs indicating whether the exemplar is an attack or normal. The network uses a sigmoid function as its activation function and back propagation as its learning algorithm. The parameter settings for the ANN in all cases are given in Table 3. These parameters are the default values for multilayer perceptrons in WEKA. Results using a simple ANN are included in our discussion to reinforce the fact that the issues investigated in this work potentially pertain to all Machine Learning based IDSs. 5. Data link layer ( MAC ) address mapping techniques
This section explains the mapping schemes used for the three data link layer identi fi er/address fi elds Basic Service Set Identi fi er (BSSID).
 The data link layer (MAC) address is a unique address attached to every Network Interface Card. The MAC address enables each station to have a unique identi fi er on a network. Although a machine on a network may identify itself differently depending on the network layer at which the communication is taking place, the MAC address acts as the identi fi er at Layer-2. Indeed other attributes such as IP addresses and hostnames used at higher layers of the protocol stack, all map back to MAC addresses. MAC addresses are usually represented with the hexadecimalequivalent of each octet separated by a dash or colon. The following are valid MAC addresses: FF-FF-FF-FF-FF-FF, FF:FF:FF:FF:FF:FF. While the other fi elds of the frame used in our feature set are numerical variables, the MAC addresses are nominal variables. However, the machine l earning algorithms i.e. GP and ANN, employed in this work, can only deal with numeric variables. Thus, this makes it imperative for us to come up with an address mapping scheme, which can represent MAC addresses by unique numbers in the datasets while still providing meaningful patterns that can be deciphered by the learning algorithm in the training and testing phases.
In our work, we compare fi ve different techniques for mapping MAC addresses. For a machine between each participant (host) on the network and differentiate them based on what role they play on the network, information that is also important to the formulation of the attack. It is shown in [6] that the Simple MAC address mapping technique can capture this information when used within one given platform, i.e. network, but fails when used across different platforms since the mapping is not consistent i.e. in this case, a physical machine will be mapped to a different numerical value each time its physical network location changes. With this intu ition, in this work, we investigate more appropriate mapping techniques, which can ensure that a MAC address can be mapped to the same numerical value, irrespective of its physical network location or the role it plays on a given physical network.
With this in mind, we designed two novel mapping techniques. These are: (i) The Decimal-Sum technique, a hashing function, which produces a numeric representation for each MAC address based on the MAC address itself; and (ii) The Role-Based technique, which maps the MAC addresses based on the role they play in the network. It should be noted here that we designed three variants of the Role-Based are highlighted below. 5.1. Simple mapping This is the mapping scheme used in [5]. It maps the identi fi ers based on the ordinal position of the MAC addresses in a sorted list. The simple MAC mapping technique is detailed in Algorithm 1. It is shown in [6] that this technique does not lead to cross-platform robustness for the IDS.
 5.2. Decimal-sum mapping
Each MAC identi fi er is unique i.e. theoretically no two Network Interface Cards have the same MAC the Local Identi fi er. Thus, the combination of these two numbers makes the identi fi er unique. The decimal-sum technique is therefore designed to give a unique decimal number representation for each hexadecimal MAC identi fi er. Thus, the decimal-sum mapping technique is designed to achieve a balance between mapping the MAC addresses to large integers and the need to achieve a perfect hash. The scheme will map the addresses to integers in the range of 0 X 765,765 and has a 2  X  90  X  10  X  12 chance of a collision occurring. The mapping scheme is provided in Algorithm 2 and is also a diagram is shown in Fig. 4.
 5.3. Role based mapping
This novel technique maps MAC addresses based on the role, which the machine of origin plays on the network in question or the role of the MAC address (i.e. special/reserved). The recognized roles in our scheme are:  X  Broadcast  X  Access Point  X  Station/Client  X  Host  X  Other
We designed three variants of this technique. Each one of the role based techniques maps a MAC address to a positive integer based solely on its role in the network.

The fi rst variant, Algorithm 3, assigns a fi xed integer to each role and maps each MAC address to between two stations on the network where they share the same role without performing an analysis of the fragment and sequence numbers. For this reason the second variant, Algorithm 4, is designed. This variant introduces elements of the Simple addressing technique into the Role-Based technique by mapping MAC addresses to numeric representations, which are based on a combination of both its role and its ordinal position in a sorted list of MAC addresses of the same role. Creating a sorted list of MAC addresses might be dif fi cult to implement in an on-line network, as wireless networks are very dynamic, especially with regards to the clients. For this reason a third variant, Algorithm 5, of the Role-Based technique is designed. This variant simply takes the second variant a step further by using the Decimal-Sum technique for clients alone, and maintaining the role based mapping for other roles. 6. Experimental setup
Our experiments require labelled (i.e., each packet is labelled as attack vs normal) wireless network we had to generate such datasets in a lab environment. To this end, we set up three separate physical networks i.e. Network-I, Network-II and Network-III, as shown in Fig. 2. The components of these networks include APs, a number of PDAs, laptops and desktop machines. While Network-I and Network-II are set up in the same manner, see Fig. 2(a), Network-III is set up as an ESS (Extended Service Set) with two APs, see Fig. 2(b). The only difference between Network-I and Network-II are their APs. In Network I, an Airport based AP is employed, whereas in Network II a Cisco based AP is employed. In doing so, our aim is to create two different network environments. An AP is central to any infrastructure based wireless network, creating two networks with different APs implies different network environments. In an infrastructure based wireless network, the AP acts as the central server. For this reason all communication must pass and all traf fi c must be routed through the AP. This fact makes two networks with different APs suf fi ciently different enough to be considered as being different platforms. By setting up Network-III, our aim is to create a network environment, which involves more than one AP, and therefore represents more closely a real-world enterprise network. All the clients on all three networks are connected to the APs via 802.11 connections on channel 6. Attacks are generated on all networks using void11 installed on the attack machine. Data is collected on the monitoring machine using the data logging features of Kismet Wireless [19].

All the datasets collected on Network-I and Network-II have approximately 30 minutes worth of WiFi During the traf fi c logging period, we attacked the network twice. Each attack lasting for approximately between 2 X 5 minutes. 6.1. Normal traf fi c generation
To ensure that normal traf fi c is also generated on our test networks while we collect our data, we implemented a web crawler using the Java 2 Platform, Micro Edition (J2ME) and installed it on all the clients on the network. This web crawler ensures a continuous stream of web browsing requests from the clients as the background normal traf fi c. The queue of web browsing requests is generated from parsing the html code of each site visited. This stream of web requests continued throughout the data collection period and was only interrupted during the course of an attack.
 6.2. Attack traf fi c generation
The attack traf fi c consisted of the intermittent release of a stream of management frames into the for an explanation of the parameters used by void11. 6.3. Feature selection Tcpdump traf fi clog fi les collected by Kismet wireless can be automatically replayed through Snort-Wireless but requires further processing before they can be employed for training and testing on the GP and ANN based IDSs. To this end, an appropriate feature set is employed. 802.11 frames consist of several features but not all of them are relevant to this attack. Thus, based on the feature selection in previous work [3,5], the following subset of features are used:
All the features mentioned above were preprocessed and were converted to integers before being presented as input to the machine learning algorithms during the training phase employed in this work. 6.4. Data set generation
A total of 26 tcpdump traf fi clog fi les were collected during the course of our work. These log fi les were then passed through several processing stages, which include feature extraction, feature mapping for appropriate data types and the grouping of individual frames to form sessions. The processing of the dataset fi les was achieved by passing the tcpdump fi les through a number of scripts. Table 4 gives a summary of the resulting 26 dataset fi les. The table outlines the attack type, the physical network on they were employed. Each line in the datasets consists of the features extracted from 8 consecutive frames. Moreover, when at least one of these frames was part of the attack, the exemplar is labeled as attack, otherwise it was labeled normal. For more detailed statistics on our datasets, please see the the aforementioned Machine Learning Based IDSs, while the objective of the second set of experiments is to test for cross-attack robustness. 7. Results
In intrusion detection, two metrics are typically used to quantify the performance of the IDS, (ii) False Positive Rate (FP) which are Eqs (3) and (4) respectively. A high DR and a low FP rate would be the desired outcomes. Evaluation of our results is based on the above criteria.
 7.1. Snort-wireless validation
We replayed the raw tcpdump fi les, which were preprocessed to produce the datasets in Table 4 through Snort-Wireless. This was done to validate the data. Snort-Wireless was able to detect the attacks that we launched using void11 against the networks in the datasets. The following is an example of Snort-Wireless de-authentication alert: [**] [211:1:1] ( spp_deauthflood ) Deauthflood detected! Addr src: 00:03:93:ec:64:55 -&gt; Addr dst: ff:ff:ff:ff:ff:ff, Bssid: 00:03:93:ec:64:55. [**]
The result of these tests show that Snort-Wireless, the conventional IDS, is robust in terms of cross-platform but is not robust in terms of cross-attack unless it is faced with a known attack. 7.2. Cross-platform robustness
Recent research has shown that machine learning based IDS for 802.11 data link layer attacks unlike their conventional counterparts are indeed susceptible to diminished performance when used on networks other than that on which they were trained if no attention is paid to the representation of features employed [6]. In [6], it was shown that from one network to another, the performance of both Arti fi cial Neural Network(ANN) and GP based IDSs can drop to 46% and 75% respectively, if no attention is paid to the feature representation technique, especially with the MAC addresses. In other words, the way a feature set is preprocessed for presentation to the learning algorithms plays an important role in cross-platform robustness. This forms the rationale behind the various map addressing schemes we developed in our research.

Our work in investigating cross-platform robustness was carried out by performing a 20-fold cross validation using the 20 datasets collected on Network-I and Network-II, see Table 4. This means that results were produced from all possible combinations of training and testing pairs of the datasets. Given the small size of our datasets, we believe that such an approach eliminates the effect of any artifacts of the datasets. The cross validation was performed using both GP and ANN algorithms. The fi nal results were divided into four groups for each learning algorithm: (a) Group-1: Results of Testing On Network-I datasets using solutions trained on Network-I datasets (b) Group-2: Results of Testing On Network-II datasets using solutions trained on Network-II datasets (c) Group-3: Results of Testing On Network-I datasets using solutions trained on Network-II datasets (d) Group-4: Results of Testing On Network-II datasets using solutions trained on Network-I datasets
Group-1 and Group-2 are called within-platform results, whereas Group-3 and Group-4 are cross-platform results. The experiments were carried out using each one of the MAC address mapping techniques and the results are presented in the following sections. 7.2.1. Simple MAC address mapping
All the runs of the GP and ANN algorithms using this MAC mapping technique are able to produce best case solutions that achieved a 100% detection rate and a 0% FP rate, however we present the mean in Tables 5 and 6.
An analysis of the results show that a difference can be noticed in the detection rates from one platform to another. Within-Platform the mean DRs for both GP and ANN solutions are above 99% but this reduces to 75% and 46% respectively, for cross-platform experiments. Thus, we observe a signi fi cant drop in performance. These results show that the Machine Learning based solutions would have to be to the con fi guration of the network, if they were to be employed on a real-life network. 7.2.2. Decimal-sum
The results for the mean performance using Decimal-Sum mapping technique with GP and ANN can be found in Tables 5 and 6 respectively. These results show that this technique is able to increase the DR across platform for GP and ANN solutions. However, Fig. 3 shows that Decimal-Sum mapping performs worse than Simple mapping technique within platform. We speculate that this might be as a result of the large numerical values produced by this mapping technique. 7.2.3. Role-based MAC address mapping
The mean results for the three variants of this mapping technique can be found in Tables 5 and 6. The-se techniques all map based on the role of the MAC addresseson the network. We see that FP rates remain drop in performance when comparing DRs within-platform with those across platform as observed with the Simple mapping technique. The average DRs remain relatively constant whether solutions are used within-platform or across platform. The mean DRs of all the three Role-Based techniques were higher than the mean DR for the Decimal-Sum technique both within-platform and across platform conditions. signi fi cance, we performed an ANOVA (Analysis of Variance) Test [20]. The results of the ANOVA test shows that we can claim a statistically signi fi cant difference in the mean DRs of the different mapping techniques with 99% con fi dence. See Tables 12 and 13 in the Appendix for more detail on the results of our ANOVA test. Finally, Table 7 gives an overview of our evaluation of the mapping techniques used here according to the criteria of information loss, cross-platform robustness and whether they are implementable on an on-line network. It is important to take information loss into consideration because mapping several MAC addresses to the same numerical value in the preprocessed datasets makes it dif fi cult to differentiate between two stations on the network, which share the same role, a situation, which is undesirable. On the other hand, creating a sorted list of all MAC addresses on a network might be dif fi cult on an online wireless network due to their dynamic nature, so it is important to consider how easy it will be to implement the mapping technique on an online network. A fact that may be forgotten when dealing with previously collected network traf fi c data. It is our opinion that the Role Based techniques show the best promise, with the Role Based III having the edge.

Further experiments were carried to ascertain cross-platform robustness with GP learning algorithm using the 6 datasets collected on Network-III, Table 2. In these experiments, using the Role-Based III mapping schemealso achieves99.9%detection rate with 0.3%false positive rate as its mean performance. In summary, we believe Role-Based III mapping technique is very successful in terms of providing cross-platform robustness in both single or multiple AP networks. While the ANN based solutions produce more transparent solutions, which can be analysed manually, if desired and second, the GP based solutions required signi fi cantly less time for training as shown in Tables 5 and 6. 7.3. Cross-attack robustness
The Association Flood and the Authentication Flood are very similar attacks, differing only in the ma-nagement frame exploited. Thus, we also investigate whether a machine learning based IDS solution trained on the Authentication attack can detect the Association attack and vice versa, because this can demonstrate its dependability and survivability under similar DoS attacks.

The results presented here followed the same training and testing procedures outlined in our previous set of experiments. The only difference is that in this case, only the four Association and Authentication datasets presented in Table 4 are used.

Table 8 shows the results for the FP and DRs, using the Role-Based III mapping scheme. We are able to achieve above 98% DR when employing the authentication solution against the association attack and 71% DR vice versa. Keeping in tune with idea of paying attention to feature representation, the Authentication and Association subtypes were represented as 11(1011) and 13(1101) respectively, in the datasets used in these experiments. This potential to be able to detect similar unseen attacks is an advantage for machine learning based detectors, conventional detectors like Snort-Wireless are incapable of detecting any exploit other than the one for which they have a signature, even if the new exploit is similar. Indeed, further experiments are needed to improve and analyse the implications of these results. 8. Conclusion and future work
In this work, we investigate the robustness of machine learning based 802.11 IDSs by building on previous work, which showed that machine learning based IDSs are more adaptable than conventional systems in the case of stealth attacks. In our fi rst set of experiments, using only the de-authentication attack and using GP and ANN based classi fi ers, we ascertained that issues exist with cross-platform ro-bustness in machine learning based solutions for 802.11 Link Layer DoS Attacks if simple representation techniques are used for the features employed. By focusing on the feature set, we identi fi ed the MAC a number of novel schemes for mapping the MAC addresses. Our results show that the Role-Based mapping paradigm proposed is not onl y able to maintain detection cap ability within-platform but also signi fi cantly improves the detection rate in cross-platform situations in terms of the mean performance.
In our second set of experiments, we extended our analysis further by testing our techniques on data sets collected on larger, more realistic real-world networks and using other link layer attacks. Our results showed that GP-based classi fi ers in such environments achieve a mean performance of 99% on cross-platform experiments. Moreover, cross-attack environment results also show that a GP based IDS, trained on one type of DoS attack can even detect a different DoS attack from the one it was trained on. These results show that a machine learning IDS, such as the one evolved by GP, not only has high IDS such as Snort-Wireless.

Ourwork has ascertained thatusing a Role Based paradigmin the mapping ofMAC address information in data used for training machine learning based detectors is imperative to producing robust detectors in WiFi networks. This conclusion is not limited to MAC addresses or WiFi networks but can be extended to other network addresses like IP addresses and to other types of computer networks. We also ascertain that machine learning based detectors are capable of detecting DoS attacks that they were not trained to detect when the mode of launching the attack is suf fi ciently similar. These conclusions imply that the goal of developing a commercially viable machine learning based IDS that can be used to detect a variety of WiFi attacks is achievable. Future work would explore not only similar experiments on bigger DoS.
 Acknowledgements
This research is s upported by the NSERC Discovery and the CFI New Opportunities grants. The authors would also like to acknowledge the staff of Palomino System Innovations Inc., based in Toronto, Ontario and Telecoms Applications Research Alliance (TARA), based in Halifax, Nova Scotia for their support in completing this work. This work is conducted as part of the Dalhousie NIMS Lab at http://www.cs.dal.ca/projectx/. Appendix Client De-authentication, Authentication and Association Attacks on Network-III
Our rationale for running this new set of experiments u sing the all the datasets collected on Network-III is based on the following reasons:  X  Our experiments are performed using only a broadcast de-authentication fl ood attack (for cross- X  We have only trained network based IDSs. Client de-authentication attacks can present a chance to  X  Except in the case of small home networks, most real world 802.11 networks contain more than one  X  Data link layer wireless DoS attacks cannot be directed at an entire wireless network (except if
In this case, we only present the results of the Role Based III mapping technique here because we observe it is the best option among the other mapping techniques based on our evaluation criteria. The results presented here followed the same training and testing procedure outlined in our previous set of experiments. Final results are divided into four groups: (a) Group-1: Results of testing on datasets that contain attacks on AP1 (or clients attached to AP1) (b) Group-2: Results of testing on datasets that contain attacks on AP2 (or clients attached to AP2) (c) Group-3: Results of testing on datasets that contain attacks on AP1 (or clients attached to AP1) (d) Group-4: Results of testing on datasets that contain attacks on AP2 (or clients attached to AP2) Groups (1) and (2) are called results within-platform, whereas (3) and (4) are called cross-platform. Table 9 shows the mean detection and false positive rates for each of the three attack types investigated. The results show that the GP solutions are able to detect all the attack types both within platform and across platform (as de fi ned for this experiment).
 Dataset statistics
The tables in this section i.e. Tables 10 and 11, give details of the datasets which were used to train and test our GP and ANN IDSs.
 Anova results
The tables in this section i.e. Tables 12 and 13, provide detail results of the Two-Factor ANOVA tests which we performed on our results for GP classi fi er and the ANN classi fi er respectively. References
