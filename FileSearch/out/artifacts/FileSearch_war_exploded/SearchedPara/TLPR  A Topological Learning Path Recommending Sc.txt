 MOOCs ( Massive Open Online Courses ) have attracted the interest of many teachers MOOCS are faced with the challenge of deciding which courses to follow and in what research of recommender systems for MOOCs has gained increasing attention. And how to choose a suitable course to learn among the massive courses has become a key issue.

Recomm ender system is to recommend suggestions or useful information that users achieved great performance in fields such as e -commerce and movies [6,7] , there are commerce, users are treated the same; while in MOOC s, learners usually have different learning background s and knowledge levels [ 9 ] . 
One of the main tasks of MOOCs is to identify the way a learner would like to learn ing recommender system in MOOCs, only a few of them has proposed feasible methods higher education qualification. To our knowledge, there is no learning path recommen-dation designed for learners and recommend successive courses to them.
Motivated by the above observations, to better hel p learners make informed course on their preference s and similar learners. 
The main contributions of this paper can be summarized as follows: dynamic programming algorithm to generate recommendations. learn. Rather than recommending independent courses, it recommend s a learning path to learners, which concerns more about their long -term learning and learning process, and forms a better learning system , especially for learners without higher education qualifications . selection recordings are carried out. The experimental result s are acceptable on real word data, and the precision of the method demonstrate s that the proposed scheme has a good performance. There are already some studies about recommender systems in MOOCs. The existing works can be grouped into several major categories as follows.

Group recommendation. Many researchers considered building learner groups for recommendation. In a group based personalized system, each learner belongs to a group based on the group features. D anuta Zakrzewska buil t recommendations by using N a-been created and can not dynamically add new learners to groups , which c an not avoid information about the learners), which is not practical sometimes .

Bayesian Models. Modeling is also one of the main techniques used in personalized on the basis of their behaviors and compared the performance of different classifiers. bine Bayesian networks with data mining to build a model of online learner behaviors, learning process and learners without higher education qualifications. Recommending Agent. Another commonly used tec hnique is constructing an ag ent . Andronico et al. intro duced their agent system to recommend students learning materi-als in the learning process. They generate d recommendations based on both learners X  agent system, called ISABEL, which provides each student with a device agent to mon-sented an agen t based platform for providing intelligent assessment services based on Bayesian Networks and Genetic Algorithms. They used the platform for assessment of considered the special feature of MOOCs, especially the learning process of learners.
Association rules is an efficient discover relations between items in large databases and many researchers used it to recommend courses. N . Bendakir proposed a course recommender system based on association rules [ 16 ] . The work in [ 5 ] combined clus-tering and association rules algorithm to select appropriate lessons for respective stu-dents. These recommender systems mainly r ecommend courses according to support erence.
 focuses on the sequencing of courses, not the operations included in one course.
There are few works that recommend learning path to distinct lea r ners. Moreover, we exploit dynamic programming algorithm on graphs to generate recommendations, term learning . 3.1 Definition Learners are overwhelmed by the massive courses available in MOOCs [ 8 ] . In MOOCs it is difficult to model each learner accurately and recommend courses . Thus an adaptive recommender system is essential. Moreover, for learners who have not gone gramming algorithm to build recommendations. Rather than recommending courses to learners, we recommend learning paths. These learning paths will be recommended by learn .

The TLPR scheme utilizes most usable learners X  c ourse selection information to gen-method can be described as follows:  X  Find ing learner  X  object learner (the corresponding algorithm CTKL is shown in Fig.3); information (the corresponding algorithm GDWG is shown in Fig.4);  X  Comput ing the topological sequence with the maximum weight (the corresponding algorithm FTLP is shown in Fig.5);  X  Generat ing recommendations for the object learner.
 To better understand the procedure of TLPR method, we provide an illustrative exam-ple in Fig. 1.
Definition 1 (Learning Path). For each learner, we get the course sequence he ( or For example, in Fig.1 (a) learner Claus has taken Data Mining, Programming in R and Spark in chronological order, then Claus  X  X  learning path is Data Mining  X  Program-ming in R  X  Spa rk , as illustrated in Fig. 1 (b).

Definition 2 (Similarity between Two Learners). This paper compute s the cosine profiles, learner X  X  knowledge, learner X  X  educational preference and courses they set of courses learned by  X   X  and C  X  = { c The similarity between  X   X  and  X   X  is
Definition 3 (Top -K Similar Learners for the Object Learner). For a g iven learners with  X   X  . Formally, let  X  X  X  X   X  similar with  X   X  , where m &lt;  X  .  X  X  X  X   X  learners with  X   X  on condition that for each learner  X   X   X   X  X  X  X   X   X  X  X  X   X 
Definition 4 (Topological Sequence). According to Fig. 1 ( b ), we can get a edge of the graph connects two courses that are learned by a learner. The direction of weighted directed graph containing all learning paths. Topological sequence is a sub-learner Claus .
 similar learners are Bob and Dan . The algorithm ignores the links between the courses  X  Machine Learning  X  Information Retrieval  X  Hive . 3.2 Algorithm des cription Algorithm TLPR
The algorithm TLPR includes three key functions and its pseudo code is illustrated in Fig.2.
 TLPR (  X   X  ,  X   X  X  X  X  X  X  X  ,  X  ) recommend learning path to object learner are mos t similar ones with learn  X   X  .
 Output:  X  X  X  X   X  : the learning path recommended to object learner  X   X  . 1: // find learner  X   X   X  X  interests 2: //compute top -k similar learners for learner  X   X  3: Sim i (k)  X  CTKL (  X   X  ,  X   X  X  X  X  X  X  X  ,  X  ) 4: //get the directed weighted graph from the top -k learners X  enrollment infor-5:  X  X  X  X  X  X   X   X  GDWG (  X  X  X  X  (  X  ) ,  X  ) 6: //get the topological sequence with the maximum weight 7:  X  X  X  X   X   X  FTLP (  X  X  X  X  X  X   X  ) 8: //generate learning path to recommend to learner li 9: return  X  X  X  X   X  Function 1 CTKL is Dan and Bob .
 CTKL (  X   X  ,  X   X  X  X  X  X  X  X  ,  X  ) Description: compute the top -k similar learners for learner  X   X  . who are most similar ones with learn  X   X  .
 Output:  X  X  X  X  (  X  ) : a set that keeps top -k similar learners with  X   X  . 1: Obtain the set of learners  X  from  X   X  X  X  X  X  X  X  ; 2: Obtain the key -value sets of learners (  X   X  ,  X   X  ) from  X   X  X  X  X  X  X  ; 3: for each learner  X   X   X   X  do 4:  X  X  X   X  (  X   X  ,  X   X  )  X   X  ; 6: if  X   X  ,  X  is not null then 7: Calculate Sim (  X   X  ,  X   X  ) ; 8: pu t  X   X  into Sim (  X  ) ; 9: end if 10: end for 11: Sort  X  X  X  X  (  X  ) in non  X  increasing order; 12: return  X  X  X  X  (  X  ) Function 2 GDWG learner in time order .
 GDWG (  X  X  X  X  (  X  ) ,  X  )
Description: generate the directed weighted graph from the top -k learners X  enroll-ment information.
 set, including learner, course, enrollment time and other attributes.
Output:  X  X  X  X  X  X  X  (  X  X  X  X  X  X  X  X  X  ,  X  X  X  X  X  ) : the set that keeps edge and its weight . 1: Obtain the set  X  from  X   X  X  X  X  X  X   X  2: Sort set  X  , first by learner, then by enrollment time in non -descending order 3: Initialize  X  X  X  X  X  X   X   X   X  0 4: Initialize  X  X  X  X  X  X  X  X  X  X   X   X  5: for each enrollment  X   X   X   X  6: if  X   X  is not the last enrollment 7:  X   X   X   X   X   X  s next enrollment 8: if  X   X  .  X  X  X  X  X  X  X  X  X  X  and  X   X  .  X  X  X  X  X  X  X  X  X  X  are the same 9:  X  X  X  X  X  X   X  (  X   X  .  X  X  X  X  X  X  X  X  X  ,  X   X  .  X  X  X  X  X  X  X  X  X  ) 10:  X  X  X  X  X  X   X   X  (  X  X  X  X  X  X  )  X   X  X  X  X  X  X   X   X  (  X  X  X  X  X  X  ) + 1 11: end if 12: end if 13: end for 14: return  X   X  X  X  X   X  (  X  X  X  X  X  X  X  X  X  ,  X  X  X  X  X  X  ) Function 3 FTLP
Given the directed weighted graph, we apply the Floyd Algorithm and Dynamic Pro-gr a mming to find the longest path. The path with the maximum weight represents the pick the path that most matches the object learner  X  X  interest, thus we recommend this  X  X  X  X   X  (  X  ) records the precursor vertex of  X  .
 FTLP (  X  X  X  X  X  X   X  ) Descr iption: get the topological sequence with the maximum weight.
 directed weighted graph.

Output:  X  X  X  X  X  X  : the learning path recommended to object learner  X   X  . 1. Initialize  X  X  X  X  X  X  X  X  X  X  X  X   X   X  2. Sort the graph in topological order 3. Obtain vertices set  X  from the  X   X  X  X  X   X  4. Let  X  be the set of vertices with  X  X  X  X  X  X  X  X  X  X  X  X  =  X  //initialize the indegree of 5. for each vertex  X   X   X  do 6.  X  X  X  X  X  X  X  X  X  X   X  (  X  )  X   X  7. end for 8. for each  X   X   X  \  X  in Topological Sorting order do 9.  X  X  X  X  X  X  X  X  X  X  X  (  X  ) =  X  X  X  X  (  X  ,  X  )  X   X  {  X  X  X  X  X  X  X  X  X  X  X  X  (  X  ) +  X  X  X  X  X  X  X  X  X  (  X  ,  X  ) } 10. Let (  X  ,  X  ) be the edge to get the maximum value 11.  X  X  X  X  X  X  (  X  ) =  X  ; 12. end for 13. Get the  X  X  X  X  X  X  X  X  X  X  X  with maximum value 14. Remove from  X  X  X  X  X  X  the courses weakly correlated with learner  X   X   X  s interests 15. Return  X  X  X  X  X  X  the KDD cup 2015 ( http://kddcup2015.com/information.html ) .
 ings about enrollment information of 79186 distinct learners . 
As we also know that association rules are often used in course recommender sys-experiments respectively based on the method proposed in this paper and Apriori algo-rules. Impact of the parameter  X  Fig.6 (a)~(d) show four experiments of comparison between the two methods respec-ers and different recommended course length.

As Fig.6 (a) , under given the learning length of recommended courses=1 when pa-courses=1 is the general case to recommend onl y one course a time, and corresponds much the same. After several experiments, we set the minimum support to be 2% and the minimum confidence to be 20% of the associat ion rules method. Fig.6 (b)~(d) is correspond to the antecedents=2, 3 and 5 of the Apriori algorithm.

In this group of experiments, we probe the impact of parameter k wh ere k is ranged of precision increases. It means the accuracy of the recommendation performance in-creases. The reason is that more similar learners  X  enrollment inform ation used can im-prove the accuracy, but the growth is becoming slowly. Thus, we take an appropriate k that can get a good performance and the complexity of the graph is acceptable at the of the courses Apriori generate is meaningless.
 Impact of the length of learning path due to the fact that as the learner tak e courses, the match courses of the recommended And the precision of the len gth five is s t ill acceptable. In this paper, a novel TLPR scheme is proposed to recommend learning path to learners in MOOCs. This scheme combines user -based collaborative filtering and dynamic pro-different knowledge levels, especially those who are less qualified, and aims at recom-mending a learning path that can guide them to learn and help them in the long -term. is effective and acceptable.

TLPR is a promising approach . In the future, w e would like to do more research by duct extensive experiments on sufficient data.
