 Many Internet users have encountered serious information overload problem on social networks such as Facebook and Twitter, where users can consume the streams of social up-dates from their social connections. Traditional methods solving this problem include collaborative filtering and in-formation diffusion modeling. Both methods answer the  X  X ho will adopt what X  question from different perspective, while either of them only captures single-faceted knowledge of evidences. In this paper, we solve the personalized social update recommendation problem by proposing a framework which integrates the advantages of collaborative filtering and the characteristics of diffusion processes. The main contribu-tions of this paper are three folds. First, we propose a plenty of diffusion features which capture the characteristics of dif-fusion processes. Second, we build a joint model which takes the advantages of both collaborative filtering and the charac-teristics of diffusion processes for recommendation. Finally, experiments on two real-world datasets show that our join-t model outperforms the methods capturing single-faceted knowledge and several other baselines.
 H.3.3 [ Information Systems ]: Information Search and Re-trieval X  Information filtering Collaborative Filtering, Information Diffusion, Social Up-dates, Personalized Recommendation
Many Internet users have encountered serious informa-tion overload problem on information-driven social network-s, such as Facebook [23], Twitter[8], LinkedIn[18]. The most distinguishing feature of information-driven social networks is that they allow users to share their updates with their neighbors, and users can consume the streams of social up-dates from their connections via customized news feeds in their homepages. However, this characteristic is a double-edged sword in a way [23]. On one hand, it accelerates the propagation of information, because some popular informa-tion will reach more users via the sharing mechanism. On the other hand, this leads to hundreds or even thousands of updatespostedtomanyuserseveryday. Itisveryincon-venient for many users, especially those who are active and have many neighbors to find what they want, as personally useful social updates may be flooded by many others.
Some recent works have tried to tackle information over-load problem via developing social update recommendation techniques in different social networks [8, 19]. Collaborative filtering, as a promising technology for recommender sys-tems, has played an important role in solving information overload problem [11]. Collaborative filtering has attracted much attention since the Netflix Prize [5] in the academia and also been applied in some successful commercial sys-tems, including Amazon [28], Netflix and Google News [11]. Collaborative filtering aims to build a recommender system by learning users X  preferences based on the community da-ta. It infers the unobserved user preferences by discovering the correlation between users and items based on observed user preferences. The most popular collaborative filtering method nowadays is the latent factor model, as it has helped winning prizes in a lot of competitions.

On the other hand, some research works have accom-plished the recommendation task on social networks in the view of information diffusion [36, 25], as information access behaviors of social network users can be modeled as an in-formation diffusion issue. Research works on information diffusion mainly focus on examining the characteristics of d-iffusion processes [6] and modeling the diffusion by detecting the factors that influencing the diffusion processes [14, 38]. Social networks play important roles in determining whether a user will adopt an item [17, 3], as user behaviors are con-founding results driven by homophily [31], social influence and some other external influence [32, 1].

Collaborative filtering and information diffusion modeling on social networks have many internal correlations, as they are targeting the similar problem to some extent in different views. As a technique for recommender systems, collabo-rative filtering tries to answer whether a user will adopt or give positive feedback for a specific item. Once whether a user will adopt an item is well predicted, the details of in-formation diffusion process can be well described, such as whether an item will generate a large cascade [4, 37], what is the depth and the width of dissemination trees [27]. Both collaborative filtering and information diffusion modeling fo-cus on answering the  X  X ho will adopt what X  question, but they are based on different assumptions. As collaborative filtering assumes users who agreed in the past are likely to a-gree again in the future, it infers individual preferences from those people with similar tastes. Collaborative filtering ac-tually used the similarity ties [9] as information sources for predicting users X  adoption. On the other hand, information diffusion modeling often use the social ties as information sources for dictating users X  behaviors [14, 3], as the actions of neighbors in a social network are highly correlated. The emphasis of diffusion model is usually the relationships be-tween users in diffusion graph.

In this paper, we solve the personalized social update recommendation problem by proposing a framework which takes the advantages of collaborative filtering and the char-acteristics of diffusion processes. As we see, social ties and similarity ties play different roles for predicting future be-haviors, and this suggests combining them in a hybrid rec-ommender system will become a promising approach [9]. Our proposed model caters for this intuition by integrat-ing collaborative filtering and the characteristics of diffusion processes, as the former captures the predicting power from similarity ties and the latter captures predicting power from social ties. Some previous works have used the social net-work structure to help improve the collaborative filtering recommender systems, but they only considered the social relations rather than the dynamic diffusion processes. Some other previous works have used information diffusion pro-cesses for recommendation, but the knowledge inside each node of the diffusion graph is ignored.

The main contributions of this paper are three folds. (1)We propose plenty of diffusion features which are helpful for pre-diction by capturing the characteristics of diffusion process-es; (2)We propose a joint model which naturally embeds the the diffusion features in the traditional collaborative filter-ing model to simultaneously capture the predicting power of collaborative filtering and diffusion features. As far as we know, this is the first work to combine the two parts togeth-er; (3)We examine our method on two real-world datasets, Twitter and Sina Weibo. The evaluation results verify that our joint model utilizing all the diffusion features outper-forms several baselines.
Information diffusion, or information dissemination, infor-mation propagation in online social networks has attracted much attention in research field of online social network min-ing. Information diffusion in social network is mainly driven by word-of-mouth spread via social ties and social networks represent a fundamental medium. As more and more online social networks such as Facebook, Twitter, Flickr have pro-vided much real world data, research works on information diffusion have become easier to study[24, 35].

Discovering the characteristics of diffusion processes is a central issue on information diffusion in online social net-works and many experimental results of qualitative and quan-titative analyses across different networks have been pro-posed. Cha [6] analyzed large-scale traces of information diffusion in the Flickr social network and found that even popular photos spread narrowly and slowly. Romero [35] ex-plored the diffusions of hash tags on Twitter and found that according to their types and topics they exhibited different mechanics, which was interpreted as X  X tickiness X  and  X  X ersis-tence X . After examining the characteristics of the diffusion processes, diffusion models were proposed to mimic diffu-sion processes that had characteristics consistent with the real data [27, 13]. Though most online social networks are user-centric, they may have totally different diffusion char-acteristics, as the behaviors of users and the social relations shaped by different mechanisms of networks are semantically different.

Some other research works tried to infer and recover the complete and exact diffusion process when the underlying propagation networks were unobserved [15], or when some confounding factors such as homophily, external influence made it difficult to measure the spread of information shar-ing behaviors [15, 2, 32]. In our experiments, we use the retweeting actions of microblog users to construct the ex-plicit diffusion networks and do not introduce many con-founding factors.
Recommender systems have enjoyed a surge of interest in academia since Netflix Prize competition and been adopt-ed in many commercial systems [5, 21]. Towards building a personalized recommender system, collaborative filtering is a promising technology by learning users X  preferences based on the community data [21, 34]. It works by discovering the correlation between users and items based on observed user preferences so that unobserved user preferences can be in-ferred. Collaborative filtering methods have been very pop-ular methods since they help win many open competition including Netfix Prize and KDDCUP.

Social update recommendation has recently attracted much attention to solve the information overload problems in so-cial networks [23, 8, 19, 10, 7]. Different from previous rec-ommendation problems, social update recommendations fo-cus more on incorporating some other special characteristics, such as the sharing behaviors of users, social influence and correlations. The most related category of research works are personalized social recommendation [20, 30, 16, 40, 41]. Most of these works were based on the intuition that us-er tastes were highly correlated to the ones of their friends or people they trusted then used this to make more accu-rate guess of user behaviors for improving recommendation. But their works only considered the user-neighbor interac-tion rather than the characteristics of information diffusion process, which revealed the dynamics of user adoption be-haviors and help improve recommendation experimentally. Some other previous works used information diffusion for recommendation [36], but they did not take the similari-ty ties into consideration, which were the main information source of making collaborative filtering effective for recom-mendation. Our method takes advantage of collaborative fil-tering and information diffusion characteristics to deal with the recommendation problem to greatly improve the person-alized social update recommendation performance.
In this section, we first introduce the diffusion features used in our work. We then propose the joint model which integrates collaborative filtering and diffusion processes in social update recommendation.
Previous works solving personalized social update recom-mendation ignore the effect of information cascades. Cas-cades are subgraph of the social networks which are con-sisted of the infected users. However, cascades contain lots of important information, which can greatly influence users X  behavior. For example, users are more likely to adopt the information when the cascade contains lots of people they are interested in. Diffusion features are usually varied by the time and are different for each user. Figure 1 shows the evolution of the cascades. The user number is ordered by the time each user received this information. Each time there is only one user who is currently receiving the infor-mation. As the time passed, some users are infected while some are not and the cascade becomes bigger and more com-plex. Each user in the cascade has own attributes such as the time joined into the cascade, number of followees and number of followers. What X  X  more, users in the cascade or path also have strong relations between each other such as distance between them and their common interests. These attributes and relations inside the cascade and path can be used to help predicting the users X  behaviour more accurate-ly. In the following, we propose all the features of cascades and propagations paths which are used in our work.
Popularity related features refer to those features which are highly relevant to the popularity of cascades. General speaking, users in social networks tend to adopt more pop-ular information.
Neighbor related features measure the relation between target user and infected neighbors of target user in cascades. Here neighbors are refer to users who are close to target user in distance or have similar interests. If cascades are highly related to neighbors of the target user, the target user will more easily adopt the information. Unlike popularity related features, neighbor related features are personalized.
Combining all these cascades features showed above, re-gression models can be used to predict the extent of prefer-ence toward the information given its cascade.
In the previous part, we introduce the diffusion features in diffusion processes. In this part, we will show how we utilize these features in our joint model. The joint model is an extension of our previous work[8]. In the following, we will propose the principle of this diffusion-aware model and explain the parameters. We divide this joint model into several parts for introduction. In the first place , we pro-pose the diffusion level decomposition strategy in the joint model. We then introduce the method incorporating all d-iffusion based explicit features. Finally, we introduce the collaborative ranking methods for model training.
Our previous model[8] improves traditional collaborative filtering by decomposing the latent factor of items. It works well especially when the latent factor of words and publish-ers are very closed to the latent factor of items. However, our previous model loses a lot of information from the per-spective of diffusion. When we need to recommend an item to a user, it is highly related to who have adopted the same or similar items. It leads to a great influence from the past users who have adopted this item. For example, the decision of a user to adopt an item will be influenced by his friends who have already adopted. From the view of diffusion graph and collaborative filtering, if a user adopts an item, the la-tent factor of this user should be very similar to the users who have already adopted the item in the past. If a user adopts an item, we decompose the latent factor of a user into a combination of latent factors of similar users, to get the following factorization model: Here bias denotes any form of possible bias, C i is the cascade of tweet i in the past, p s represents the latent factor of each infected user in C i and  X  s denotes the weight parameter of each user in the cascade. As the influence of people who have adopted the information differs from each other, the weight  X  s is usually different for each C i . For instance, the publisher of an information and the neighbours are usually the most important influencers to a user whom we want to recommend item to.

In many cases, if we want to select part of users in cas-cade as the influencers, we can make  X  s of the other users equal 0. In the final joint model, we make  X  s =1ifand only if user s is the direct sender of user i .That X  X tosaywe only use the user who delivers the information instead of all users who have adopted the information in the past. The most important reason is that we found users are usually influenced by their closest users in the cascade. This obser-vation makes sense in many social networks such as Twitter and Sina Weibo. The direct sender of the information in a cascade is the followee even the friend of user i who is par-ticular in the cascade. While the rest of users in a cascade usually have less relationship with the user i .
 This decomposition strategy matches our intuition well. Firstly, it gets more opinions at diffusion level, which help-s collaborative filtering based methods get better perfor-mance. What X  X  more, it overcomes the problem of data scarcity for analyzing users. The latent factor of an un-known user can be estimated from the infective in the past. Moreover, this model not only considers the details inside a node but also leverages the global dynamics of diffusion graph, which unifies the recommendation and diffusion pro-cess together.
Besides the latent factors, all the features of the diffusion tree shown in 3.1 are considered in this part. These features directly measure whether an information will be accepted. We use a linear combination of these features to get the bias prediction: , where b is a weight parameter vector and  X  d is a diffusion explicit feature we extracted.

Combining two strategies shown above, we get the final joint model as following:  X  y , where T i is the term set of tweet i , Z is the normalization term for features and d p ( i ) is a latent factor of the publisher of tweet i .
Ranking-oriented personalized recommendation has attract-ed much attention in recent years [39, 29, 22, 33]. To adapt to the scenario that rank results of items are presented to users, the idea of ranking-oriented methods is more natural and better than the traditional collaborative filtering meth-ods which aims at predicting the ratings of users [21]. Most of these methods take advantages of the learning to rank techniques [26, 12] to optimize the final ranking criterion for personalized recommendation results.

Under the scenario of social update recommendation, we also introduce optimizing the ranking criterion and collabo-rative ranking for personalized tweet recommendation. Col-laborative ranking is a ranking version of collaborative filter-ing and provides item ranking results according to relative preference rather than user rating estimation. The collabo-rative ranking method we used here is an extension of the latent factor model with ranking optimization criterion. In the latent factor model, each user u and item i have a low di-mensional representation p u  X  R d and q i  X  R d in the latent feature space. The rating score is predicted by measuring the affinity between user and item: Where y is the predicted preference of user u for item i .  X  is the overall average rating, and b u and b i are user bias and item bias on rating score.

To adapt to the scenario of tweet ranking, we modify the model for the collaborative ranking setting according to ranking optimization criterion. Give a user u and two items k and h the pairwise ranking model for preference is defined as follows: (a) Cascade count distribu-tionovercascadesizein
Sina Weibo , where  X  y u,k is the predicted preference of user u for tweet k , r is short notation for rank order. Equation 12 models the probability of item pairs X  rank orders for a given user. We can get preference pair of items for a given user by assuming a user prefer the tweets he retweeted to the rest of tweets. Formally, we define rank preference set D as follows: , where Re ( u )isthesetoftweetsuser u retweeted. Because the number of possible choices of negative sample h is large, we use sampling techniques to get negative samples in the training procedure. To learn the model, we maximize the log-likelihood over the D to estimate parameters. The max-imizing procedure is converted to solve the objective below: min
L2 regularization is used as the default choice of regular-ization term. It can be considered as involving the prior probability for model parameters in a Bayesian view. We evaluate our model in two datasets, Sina Weibo and Twitter. Sina Weibo is the most popular social network in China. Just like posting tweets, users of Sina Weibo share their updates by posting weibos. The data of Sina Weibo is downloaded from WISE 2012 Challenge. We random-ly select users who posted more than 1000 weibos. After randomly selecting 11786 qualified users, we got 36311395 weibos in our database. We then randomly split these wei-bos into training set with possibility of 0.8 and test set with possibility of 0.2. Finally the dataset is split into a training set with 29054037 weibos and test set with 7257358 weibos. The forwarded weibos are regarded as positive samples and the others are negative samples in experiments. With one positive, we have another 20 negatives in both training set and test set. Figure 2(a) shows the real cascade size with count of cascades in Sina Weibo dataset. From the figure, we can see that most of the cascades are very small, which makes diffusion-based recommendation more difficult.
To create the Twitter data set, we began with a randomly selected user and expanded the user-base by following their followers and followees X  links. After following several steps of links, we got 28925 users in our base and downloaded all the statuses they had posted. The retweeted tweets are regard-ed as positive samples and the others are negative samples in experiments. To simulate the timeline of a user, we get one positive sample with another nineteen negative samples from the scanned tweets and sort them in chronological or-der. We performed standard data preprocessing including stop word removal and stemming on the raw text. Then we randomly split the samples into test set and training set with possibility of 0.2 into test set and possibility of 0.8 in-to training set. Each of them had about 199 messages on average. Finally the dataset is split into a training set with 4601966 tweets and test set with 1149389 tweets. Figure 2(b) shows the real cascade size in our dataset. Every tweet in cascade can be found in our base. From the figure, we can see that most tweets are not retweeted or are only retweeted a few times, which shows the sparsity of the dataset. It also shows the fact that most of the cascades are very small as the dataset of Sina Weibo.

Each dataset has its own characteristic. Among two dataset-s, Sina Weibo is more suitable for cascades evaluations as this dataset records the diffusion path of each weibo. While on Twitter, we can only guess the diffusion path by looking for which followee posted the tweet with same source tweet ID, as each tweet only records the source tweet ID but not the diffusion path. If more than one followees have posted a tweet with same source tweet ID, we can X  X  make sure which one among them exactly delivered this tweet to the user. In this case, we assume that the user is influenced by all these followees. Though having the data of diffusion path, the dataset of Sina Weibo is lack of content data. The dataset of Twitter offsets this drawback and makes it possible to compare our joint model with the best baseline.
In the evaluations, tweet ratings are considered binary in our scenario. Retweeting a tweet corresponds to a 1 rat-ing, while not retweeting correspond to a 0 rating. We use Mean Average Precision (MAP), a popular rank evaluation method to evaluate the proposed model. For a single user, average precision is defined as the average of the standard P @ n values for all retweeted tweets: , where n is the number of tweets; | R | is the total number of retweeted tweets for the given user; retweet ( n ) is a binary function to describe whether the user has retweeted the n th tweet in the result list. Finally, MAP can be obtained by averaging the AP values of all the users.

We also use P@n to evaluate our model. As there are limited positives in our Twitter dateset, we modify the s-tandard P@n to show more obvious results. We define the P@n as following: , where TP n is known as the number of true positives in top n tweets and R n is number of retweeted Tweets in top n tweets. In this part, we compare our models to several others. As lots of baseline methods such as RankSVM, LDA and JointMF have been beaten by CTR model, we only list some important baselines here. The detailed implementations are listed below:
Figure 3 shows the performance comparison results of each model mentioned above. Although lack of term fac-tor, the performance of CTRW model are still better than Figure 4: Components Comparison of the Joint Model in Sina Weibo the chronological and retweeted times. The main reason is that the model of chronological and retweeted times don X  X  take personalized knowledge into consideration. On the oth-er hand, CTRW and the joint model gets the MAP value of 0.465351 and 0.945481 respectively. The performance of CTRW is much lower than the joint model. The most possi-ble reason is that the joint model improves the personalized collaborative filtering by considering in the background of information diffusion. By leveraging collaborative filtering and information diffusion, the joint model captures users X  interests both from the personal features inside a user node and the global dynamic in the diffusion graph. What X  X  more, using all of diffusion features in this work, logistic regression model achieves the MAP value of 0.831853. The perfor-mance is much better than CTRW, but lower than the joint model. The joint model improves logistic regression mod-el by combining collaborative filtering model. This result shows that the latent factor parts do bring improvement on the performance.

Also it is interesting to know which part of our joint model affords the most contribution. We evaluate each part of the joint model and show the effectiveness of each component in Figure 4. The latent factor number of all three components are set to 32. Here the chronological model and the joint model are used as references. From the figure, we can see that the MAP value of explicit features is 0.368272, which is better than the chronological model. It proves these explicit features are useful. The social factor achieves the MAP val-ue of 0.420642, which is a little better than explicit features. The performance of diffusion factors is 0.851439, which s-tands out among all the components in the final model. This reflects the fact that the influence of the specific followees are quite enormous in social update recommendation. In addi-tion, combining all three parts, the joint model achieves the best MAP value, which verifies our intuition that combining diffusion processes and collaborative filtering are meaning-ful.
Although our model integrating diffusion process and col-laborative filtering achieves good performance, the Sina Wei-bo dataset does not have contents. It is unknown whether our combined model can beat CTR model when considering content of the information. The dataset of Twitter over-comes this drawback. In this part, we evaluate our model on Twitter and compare our model with the complete CTR model and some other baselines. The parameters setting of CTR model is as same as CTRW which is shown in 4.3.1. Figure 5 shows the performance comparison results of CTR, the joint model and some other models mentioned above. As what have showed in our previous work, it is not surprising that the performance of CTR model are bet-ter than the chronological and retweeted times. Unlike Sina Weibo, the performance of retweeted time is much better in the dataset of Twitter. This is due to the API of Twitter can exactly return the retweeted time of each tweet, while this value in Sina Weibo can only be estimated by count-ing the number of weibos in incomplete cascades. On the other hand, CTR and the joint model gets the MAP value of 0.709184 and 0.809394 respectively. The performance of CTR is lower than the joint model. This shows the result that our joint model can still beat CTR when considering the influence of social content in the meantime.

We also compare the term factor and diffusion factor in this graph. The diffusion factor and term factor achieves the MAP value of 0.355297 and 0.691963 respectively. The performance of diffusion factor is lower than the term factor. The most probable reason is that the dataset of Twitter is not suitable for cascades evaluation. As explained in 4.1, we can X  X  get the exact information sender and diffusion path in Twitter. Another reason is that there are 3080 weibos for each user in Sina Weibo dataset on average, while only 199 tweets in Twitter. The diffusion part of the joint model may not be sufficiently trained in Twitter. On the other hand, this may be also caused by the fact that the preference of the users to the tweets are mainly determined by the con-tents of the tweets instead of who delivers the information. However, the performance of the term factors can be greatly improved by combining diffusion factor, which still verifies our intuition that information diffusion modeling and col-laborative filtering capture different kind of characteristics in personalized social update recommendation.
Information diffusion modeling and collaborative filtering on social networks are highly related. In this paper, we propose a plenty of meaningful diffusion features which cap-ture the characteristics of diffusion processes. What X  X  more, we introduce a joint model leveraging collaborative filter-ing and information diffusion. Our approach both takes the advantages of information diffusion characteristics and col-laborative filtering. Experiments on two real-world datasets show that the diffusion part of our model achieves good per-formance and our joint model outperforms several baseline methods.

One of our future work is to take time into considera-tion. The time information can help recommendation sys-tem to recommend right thing at right time, which makes the recommendation more suitable. Also it can make diffu-sion prediction more accurate considering when and where will a specific information flow to. Since the framework of our model is generic, it will be convenient to incorporate other information.
 Another interesting issue is to solve cold start problem. New users or inactive users usually have few information for our methods to detect their interests. One possible approach is to transfer the actions of users from other domains. For instance, users who are not active in Twitter may be active in Facebook. Thus the actions of users in Facebook may help improving the recommendation in Twitter.
