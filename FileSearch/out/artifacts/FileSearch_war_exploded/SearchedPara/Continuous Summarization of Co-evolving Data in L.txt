 With the development of technology, chemical sensors can be deployed in the water distribution system to monitor various substances in the water such as chlorine in real-time instead of the traditional sample collecting way. All the sensor measurements network. Therefore, having an accurate picture of the overall data pattern becomes more and more crucial in understanding network behavior and characteristics, track-ing important trends, and making informed judgments about measurement or utiliza-tion patterns. For example, we want to know the time-evolving patterns about the chlorine concentration level to decide the re-chlorination time and location. 
Because of massive data streams coming at every timestamp, there are lots of chal-lenges to do online summarization on multiple data streams. Most previous pattern discovery studies for data streams have focused on solving the problem in single stream [16], or choosing a sliding window size [11]. Recently, multiple streams have also attracted significant interest [8][9], but most of those methods use the PCA tools data coordinates participate in the linear combination that might mix both positive and continuously find hidden time-evolving patterns and detect the summarization lems that need to be solved:  X  How to summarize multiple streams continuously or incrementally to adapt to  X  How to effectively detect the summarization changes X  timestamp?  X  How to summarize in an interpretable and intuitive way? Here we propose the continuous summarization approach to address all of the above problems. We employ an algorithm to incrementally detect the summarization change point and split data streams into episodes, which requiring no user parameters by using the Minimum Description Length (MDL) [6]. We propose the novel Represen-tative Pattern idea for describing the spatial-temporal pattern about water data in each episode. Thus, we find and maintain the current representative pattern continuously until the splitting point comes, then create a new representative pattern. Furthermore, we evaluate our approaches on a real water distribution network from the Battle of the Water Sensor Network (BWSN) [1]. Experiment results show that our online summa-time-evolving patterns on the chlorine data. Our contributions can be summarized as follows: The rest of the paper is organized as the follows. Section 2 discusses the related work. Then Section 3 formally defines the problem and introduces the key definitions. Section 4 presents our core algorithm on summarization. In Section 5 we extensively conclude in Section 6. Next, we will discuss the related work in two aspects: data stream and water network. Data stream. Data mining on streams have received tremendous attention in various communities. StatStream [11] employs the DFT to summarize streams within a finite window and compute the highest pairwise correlations among all pairs of streams. BRAID [12] solves the problem of discovering lag correlations among multiple streams. The goal is on time and space efficient methods for finding the earliest and neither StatStream nor BRAID explicitly aims to find the hidden time-evolving pat-terns. Lin et al. [13] performed clustering on different levels of wavelet coefficients of multiple time series which require having all the data in advance. 
Recently, Papadimitriou et al. [8] designed an online algorithm that summarizes the multiple streams incrementally to find hidden variables and Sun et al. [9] did ten-sor analysis on graph streams. Both algorithms adopted the PCA tools, which made naMMo for summarization of co-evolving sequences with missing values. Sun et al. [7] proposed a GraphScope algorithm to find interesting time-evolving patterns of graphs X  structure on graph streams. However, GraphScope focused on the graph streams with source-destination structure, while our summarization on water quality data streams considers not only the rigid structure but also the data characteristics. Water distribution network. For the last decade there has been increasing interest in the development of sensor networks to monitor the water quality in water distribution network. In August 2006, the Battle of Water Sensor Networks (BWSN) [1] was (but anonymized) metropolitan area water distribution network. The U.S. Environ-mental Protection Agency (EPA) exploited the EPANET [2] to simulate the hydraulic and chemical phenomena within drinking water distribution systems and developed CANARY [3] which analyses single stream by statistical and mathematical algo-them, we mainly focus on the whole picture of the spatial-temporal patterns. Now, we first formally define the notations of snapshot pattern, representative pattern and other relative concepts. Then we formulate the problems of summarization. First of all, we assume the network infrastructure as following: wireless sensor network is formed by a set of sensors S which are selected from nodes number, from 1 to s . Every sensor can sense a variety of attributes, such as: the resid-ual chlorine, PH, temperature and so on. By transmitting all the sensor data to a cen-tral site, we can acquire the raw snapshot data at every time click. We mainly discuss and time-evolving trend by real-time summarization of the chlorine data. 3.1 Notation and Definition Definition 1. (SNAPSHOT PATTERN) A snapshot pattern t SP is a clustering C of set In our paper, we employ the snapshot pattern t SP to depict the data distribution struc-ture by clusters of the raw sensory data of s sensor nodes. Here, we cluster the sensor by the sensory data. Every cluster (or partition) and the overall data feature of the cluster. The members are the sensor node ids, and the cluster data feature is the average value of the members X  sensory data. 
We focus on detecting the structure changing in data streams as we observed that has strong spatial correlation. While the cluste ring structure changes flatly as the time goes by, there will appear an important pattern. However, we don X  X  abandon the data feature but tag the cluster with the cluster X  X  data feature. Definition 2. (CLUSTERING CONDITION MATRIX) A clustering condition matrix to which the node i belongs, so we get the formal definition as following: {0.16,0.2,0.87,0.85,0.45,0.48} . If C = {{1, 2}, {3, 4}, {5, 6}} then the cluster num-ber k =3, and the member of 1 C is {1, 2}, while data feature is 0.18(average of 0.16 and 0.2). It is easy to get the clustering condition matrix of snapshot pattern as Fig.1. versa. In fact, we just need the colored upper triangular matrix in Fig. 1. Definition 3. (DIFFCOST) A difference cost is the clustering structure difference cost between two SPs. W e denote the clustering structure X  X  difference by the XOR opera-tion between the SPs X  conMatrix. After the XOR operation, the same part of two SPs turn to 0, and the different left as 1.Therefore, the number of 1 is the diffcost between the two SP X  X . Because of the characteristic of water data changes smoothly in consecutive time-feature and the significant changes, or temporal patterns, shown in structure. Fig. 1. An example of clustering condition matrix of Clustering C = {{1, 2}, {3, 4}, {5, 6}} Definition 4. (SNAPSHOT PATTERN STREAM) A sequence of snapshot patterns 
SP SP SP , is called a snapshot pattern stream if n is an integer that increases with time. snapshot pattern stream. To this end, we split consecutive timestamps into consecu-tive episodes by meeting the significant summarization change. Definition 5. (SNAPSHOT PATTERN EPISODE) The sequence of snapshot patterns 
ESPSP SP snapshot pattern stream. Definition 6. (REPRESENTATIVE PATTERN) A representative pattern is a typical pattern RP r that can best represent the l r snapshot patterns of episode r E . In our paper X  X  context, the  X  X ypical X  and  X  X est X  means that the representative pattern RP r has a voteMatrix to denote structure difference of snapshot patterns in r E. Definition 7. (VOTE MATRIX) The voteMatrix (r) presents the current clustering vote condition of episode r E . clusters in these consecutive snapshot patterns 3.2 Problem Formulation evolving snapshot pattern stream. Thus, we list the sub-problem as follows: Problem 1. (GENERATE REPRESENTATIVE PATTERN). To adapt to the streaming between the timestamps r t and 1 r t + . Problem 2. (EPISODE SPLIT). Give a snapshot pattern stream SP= {SP 1 , SP 2 , ......SP n }, how can we continuously and incrementally detect the summarization change point to splitting SP into episodes. sodes. We give the detail explain as follows: 4.1 Get Snapshot Pattern As mentioned in the definition of snapshot pattern of section 3.1, we employ the clus-tering algorithm in the literature [5] that finds all density connected clusters having no dense threshold parameter x = 2 which is sufficient for tight clusters suggested in the literature. In fact, any clustering algorithm on numeric data is sufficient, but the algo-rithm based on density is more suitable in this context. After clustering on raw data, we get the snapshot pattern at each time click. Next, we should begin to discuss the key technology of summarization. 4.2 Representative Pattern Generation First we will discuss our method to solve the problem 1 . The goal is how to generate and update the representative pattern which is the summarization of episode r E con-tinuously in streaming situation. 
In our algorithm, we employ the idea of voteMatirx and update the overall cluster-update the RP . Difference between our algorithm and clustering aggregation is: clus-tering aggregation solves the clustering problem of the static data, while our algorithm ing structure changes slowly as the time goes by, we adopt the clustering aggregation idea here to discover representative pattern. 
Having the same flavor with clustering aggregation X  X  distance matrix, we use the voteMatrix to describe correlation between two nodes. We map our problem to clus-tering aggregation by considering the tuples of the sensor nodes as vertices of a graph and summarizing the information provided by the input clusterings of snapshot pat-terns in current E r by weights on the edges of the graph. The weight X uv of the edge (u, v) is the fraction of clusterings that pl ace u and v in different clusters. Therefore, we can compute the distance matrix by transforming the voteMatrix divided by the SP s number in current E r . 
The pseudo-code is listed in Algorithm 1.We compute the RP r incrementally: firstly, initial it as the first snapshot pattern current clustering vote condition of E r from trix ( r ) of E r , we adopt the LocalSearch or Agglomerative algorithm in clustering ag-gregation to cluster nodes by the new voteMatrix ( r ) . 
The LocalSearch starts with some clustering of the nodes, then goes through the nodes and it considers placing them into a di fferent cluster, or creating a new single-weights the disagreements between clusterings as mentioned in clustering aggrega-tion. While agglomerative is a standard bo ttom-up procedure for the correlation clus-improved cost, the algorithm stops. 
When joining a new SP t in the RP r , it also has to update the data feature of RP r .As defined in section 3.1, the data feature of each node is the average value in those SP s data feature which can be updated as the new cluster X  X  data feature. 4.3 Episodes Splitting change point incrementally. In general, we wish the most similar consecutive SPs can episode splitting which satisfies the whole storage cost is smallest. It formulates as: Definition 8. (Episode Storage Cost) Give the episode E r , and the representative pattern RP r , the episode storage cost is denoted as: storage condition just with the information of RP r  X  X  storage condition. Definition 9. (STREAMS SUMMARIZATION) A representative pattern set R= 
R RP RP RP = can best describe the original snapshot pattern stream by minimizing the whole storage cost function Where the SC is the whole storage cost of snapshot pattern stream and SC i is the stor-age cost in the episode E i , and m is the number of episodes. 
Find the best episodes to make the whole storage cost minimum is our ultimate goal, however getting the optimal solution is NP-hard 1 .We propose an algorithm based on one form of the Minimum Description Length (MDL) principle to split the snapshot pattern stream into episodes incrementally when the new snapshot pattern arrives. Consider when new snapshot pattern SP t arrives at every timestamps, how to E E explanation in the Fig. 2. 
To make the storage cost small, we need to compare the cost for joining with that of splitting at time t. Recall the storage cost definition, following is the detail formula of the two choices X  cost: diffCost in E r+1 is 0. So, we avoid this cost part in Cost (split). 
Specifically, the major point is to reduce the storage point. Thus, our algorithm will benefit; otherwise we split at current time tick and start a new episode E r+1 . The main steps are listed in Algorithm 2. In this section, we evaluate the proposed methods on real water distribution network which is provided by BWSN. Section 5.1 introduces the datasets and Section 5.2 studies the effectiveness interpretability and scalability of our methods. Every ex-periments were conducted on a Windows system equipped with an Intel Core 2G processor and 1 GB of RAM. Our algorithm is implemented in JAVA. 5.1 Datasets Here, we describe the datasets in our experiments. The water distribution network we used is a real water distribution system referred to in BWSN (The Battle of the Water Sensor Network).This network (Fig.3 (a)) is comprised of 128 nodes, one constant variable demand patterns (time tick is half an hour) which are collection of multipliers that can be applied to a quantity to allow it to vary over time, and the major demand pattern is in Fig.3 (b). 
The dataset of water distribution network was generated by EPANET 2.0 that accurately simulates the hydraulic and chemical phenomena within drinking water distribution systems. And in our experiments, we monitor the chlorine concentration level at all 128 nodes for 288 timestamps during 16 days (one time tick every 1 hour). 5.2 Evaluations (1) Effectiveness We first discuss the effectiveness of our methods about summarization on chlorine concentration. With the knowledge from literature [10], the chlorine concentration in pipe correlates significantly with demand, flow velocity and some other factors. Here, first 4 days, the distribution water network is just initialized and not stable. Thus, we discuss the last 12 days of 16 days in Fig.4. Refers to analysis the representative pat-terns that be generated automatically by our algorithms, we are surprised to discover four hidden periodic representative patterns in purple color in table 2. (2)Interpretability With the RP  X  X  structure and data feature we recorded in algorithm, we draw the spa-pattern we discover in the network of 16 days. For every point on the map, we think its value should be estimated by the pipe whose distance to the point is minimal. As-the value v1 and v2 which are monitored by sensors, then the value of point p is v = and quickly, while others use PCA methods that need the statistics knowledge and result transforming support. (3) Scalability Finally, we illustrate scalability of our online summarization which weighs by the smooth over time in the whole summarization when adopting LocalSearch or Ag-glomerative algorithm to generate the new RP and the LocalSearch is much faster and timesaving. In Fig.6. (b), we do experiments with 1000 nodes which picked from Wolf network provided by University of Exeter . The experiment result is the average value of six experiments X  CPU time (per node). We can see the CPU time (per node) curve grows approximately linear when increasing the network size. Therefore, we have the reason to believe that our methods are scalable to streaming environments. In this paper, we discussed a continuous summarization framework which incremen-tally mines and summarizes representative patterns of the multiple data streams in large water distribution network. We propose the representative patterns idea for describing summarization and employ a fully-automatic algorithm based on the Minimum Description Length (MDL) Principle to incrementally detect the summari-zation change point .We also provide experiments on chlorine concentration from a real water distribution network of BWSN. A ccording to experiment results, we find out the interesting periodic time-evolving patterns on the chlorine data, and our online summarization is effective, interpretable and scalable. 
Moreover, we look forward to create hierarchical structure and index on represen-tative patterns for event detection in large water distribution network. Acknowledgements. We are pleased to acknowledge the Centre for Water Systems at the University of Exeter for providing the BWSN X  X  dataset. 
