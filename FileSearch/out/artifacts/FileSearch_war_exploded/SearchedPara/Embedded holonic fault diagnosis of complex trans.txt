 1. Introduction
To deal with the complexity of modern transportation systems (e.g., commercial aircrafts, trains, ships), an efficient maintenance strategy is essential for maintaining and improving the availabil-ity and reliability of assets, while minimizing maintenance and total life-cycle ownership costs ( Discenzo et al., 2002 ). Norma-tively, maintenance is classified as preventive or corrective maintenance ( DIN EN 13306, 2010 ). While preventive mainte-nance focuses on reducing the probability of failures by replacing components before they fail, corrective maintenance has the objective of returning an item back to service after a failure occurrence. Before any corrective actions can be taken, one of the most time-consuming step of corrective maintenance is the fault diagnosis procedure, which consists of identifying the faulty components to be repaired ( Feldman, 2010 ; Khol and Bauer, 2010 ).

Unlike diagnosing complex industrial systems and static machines, several considerations must be taken into account when diagnosing complex transportation systems. In this paper, we assume that complex transportation systems are character-ized by the following properties:
To allow the diagnosis of this kind of complex transportation systems, a diagnosis system must be defined. This diagnosis system must not interfere with the normal operation of any sub-system. This no-intrusiveness constraint is mandatory.
In this paper, a diagnosis system is assumed to fulfill the following requirements:
Accuracy  X  the diagnosis system must be adapted for isolating uniquely the faulty components among various intercon-nected sub-systems.

Ease of explanations  X  the diagnosis system must allow a user to understand how the diagnosis procedure came to the results.

Adaptability  X  the diagnosis system must be adapted when changes in components and sub-systems design occur.

Reactivity  X  diagnosis results must be delivered in a timely manner to the maintenance center in order to improve the maintenance management.

Confidence  X  the diagnosis system must avoid producing false alarms.

Through the continued advances in infotronics and in com-munication technologies ( Clarhaut et al., 2011 ), intelligent diag-nosis systems based in particular on artificial intelligence (AI) and multi-agents (MAS) allow the diagnosis procedure to be auto-mated on-line, observing continuously the system ( Campos, 2009 ; Ng and Srinivasan, 2010 ). In this context, the main contribution of this paper is to propose a fault diagnosis approach that supports all the previously introduced assumptions.
This approach is applied within a joint research-industry project, called SURFER ( SURveillance active FERroviaire , translated as  X  X  X ctive train monitoring X  X ), led by Bombardier-Transport. The aim of the SURFER project is to provide a more advanced solution for the on-line diagnosis of incipient failures and faults that can occur during the train service, besides the existing ORBITA system developed by Bombardier-Transport in 2006 ( Orbita-BT, 2006 ).
This paper is organized as follows. Section 2 presents a literature review about condition monitoring and diagnosis stan-dards, along with the main diagnosis methods. This section highlights the limits of currently-used diagnosis approaches, emphasizing the need of a robust embedded diagnosis. Section 3 proposes an embedded decentralized cooperative fault diag-nosis approach, based on a generic holonic model. Section 4 applies the proposed embedded diagnosis model for advanced fault diagnosis of train door systems, within the context of the
SURFER project. Section 5 presents the experimental platform used for the implementation of the holonic diagnosis architecture.
Section 6 exhibits the first results obtained in the implementation in a real train. Finally, Section 7 offers conclusions and perspec-tives for future research. 2. Condition monitoring for diagnosing transportation systems
A condition monitoring system involves raw data acquisition, processing, analysis and interpretation of faults to provide useful maintenance information ( Campos, 2009 ). In this section, we refer to condition monitoring as a means of applying on-line fault diagnosis procedure to a complex transportation system, focusing on diagnosing abrupt faults rather than diagnosing incipient faults or performance degradation. Then, the literature is sur-veyed on condition monitoring, diagnosis standards, and diag-nosis architectures. Next, the main diagnosis methods are analyzed. According to the requirements of a diagnosis system, first a diagnosis architecture is chosen, followed by the selection of a relevant diagnosis method. 2.1. Condition monitoring and diagnosis standards
The reference standards for condition monitoring in industry and transportation have been registered under the ISO 13374.
This standard defines a generic model of a condition monitoring architecture, using six-layer processing blocks ( ISO 13374-1, 2003 ). These successive layers progress from raw data acquisition to useful maintenance advisories, as the data evolve into informa-tion. The layers defined by this standard are: (1) data acquisition, (2) data manipulation, (3) state detection, (4) health assessment, (5) prognostic assessment and (6) advisory generation. In the prescribed model, the first three layers are assumed to be technology-dependent on the monitored system. From there, the diagnosis layer #4 (health assessment) may handle incipient or abrupt faults, while the prognosis layer #5 is specific for incipient faults analysis ( IAEA, 2007 ). The last layer aims at delivering recommendations on maintenance actions or opera-tional changes based on information delivered by lower layers. 2.2. Condition monitoring and diagnosis architectures
Focusing on the diagnosis layer of the prescribed model (i.e, layer #4), Fig. 1 illustrates the two fundamental partitioning approaches: off-board diagnosis and on-board diagnosis ( Alanen et al., 2006 ; Bengtsson, 2003 ).
 2.2.1. Off-board diagnosis
In the off-board diagnosis approach, layers 1 X 3 exist in the on-board system, while layers 4 X 6 are performed on-ground. This approach is presently widely used in transportation ( Umiliacchi et al., 2011 ). Essentially, the diagnosis procedure centrally stores and processes the raw data and gives alarms in the remote center. This is called as Remote Centralized Diagnosis (RCD) ( Fig. 1 (a)). RCD is a common standard solution that is easy to support with a traditional company information system, taking full advantage of the available remote computational capabilities.
When considering the requirements for the diagnosis system, some drawbacks of the RCD approach arise:
In the ORBITA railway system ( Orbita-BT, 2006 ), data about sub-system states (e.g., air conditioning, brakes, doors) are col-lected in real-time from the vehicle and are sent in a remote maintenance center, where they are analyzed for troubleshooting purposes. A huge amount of data is sent to a central database via General Packet Radio Service (GPRS) or wireless links in the railway stations, involving a very significant delay between the fault occurrences and the appropriate diagnosis. 2.2.2. On-board diagnosis
In the on-board diagnosis approach, layers 1 X 4 of the ISO 13374 are embedded inside the transportation system ( Benedettini et al., 2009 ), while layers 5 to 6 are performed off-board ( Fig. 1 (b)). This provides more reactivity, allowing raw data measurements to be analyzed during the system X  X  operation, reducing communica-tion costs considerably. Only diagnosis information is transmitted ( Byington et al., 2003 ). According to the main approaches in the literature for diagnosing distributed systems ( Roychoudhury et al., 2009 ; Ferrari, 2009 ), on-board diagnosis architectures are divided into three major categories: centralized, decentralized, and decen-tralized &amp; cooperative diagnosis.

In Embedded Centralized Diagnosis (ECD), a central diagnosis entity, called diagnoser , is responsible for computing the raw data measurements acquired from the sub-systems, and delivering a global diagnosis. In the aeronautical field, Lefebvre et al. (2007) computed centrally on-board the time when the alarm occurs by various sub-systems. However, ECD can be unrealistic when dealing with large complex systems because the system is too complex to be diagnosed as a whole ( Pencole  X  and Cordier, 2005 ). Also, ECD architecture has several limitations linked to on-board computational requirements (e.g., large amount of data to be analyzed) and the modularity of the architecture ( Kurien et al., 2002 ).

Alternatively, embedded diagnosis can also be deployed in a decentralized way. This architecture, called Embedded Decentra-lized Diagnosis (EDD), promotes closer computation, in which a diagnoser is assigned to each sub-system. With this architecture, each diagnoser is responsible for delivering a local diagnosis of its monitored sub-system, which is then reported to the remote maintenance center. Usually, some fusion mechanisms (e.g., coordinator, supervisor) are implemented in order to merge these local diagnoses ( Nasri et al., 2012 ). However, each diagnoser operates independently, without communication among diagno-sers ( Qiu and Kumar, 2004 ). This architecture can have significant drawbacks, especially when a fault with the same origin is detected and reported by several diagnosers.

In order to deal with the lack of robustness of decentralized approaches, local diagnosers could evolve toward proactive enti-ties, by exchanging information during the diagnosis task execu-tion. This architecture is called as Embedded Decentralized &amp;
Cooperative Diagnosis (EDCD). Provan (2002) proposed an example of EDCD architecture for diagnosing distributed systems. These authors employ generic diagnosers, along with a message-passing algorithm, for delivering a system-level diagnosis. In the aero-space industry, Koutsoukos et al. (2010) and Dievart et al. (2010) presented other examples of EDCD implementations. The coop-eration among diagnosers can prevent from erroneous fault detection and misdiagnosis, by taking into account current environmental and operational information, as well as status of neighboring sub-systems (e.g., stress on a specific sub-system, condition of other similar sub-systems, mission profile). As a result, only diagnosis information, without any false alarms, is transmitted to the remote maintenance center.

As a summary, Fig. 2 proposes a typology organized according to three axes: (1) embeddability, (2) diagnoser mapping, and (3) organization. Focusing primarily on embedded diagnosis, the last two axes are only considered for on-board diagnosis architectures.

As stated previously, the lack of robustness and the introduc-tion of significant delays in data analysis, preventing corrective maintenance reactivity, make the RCD architecture inefficient for transportation systems. Among on-board diagnosis architectures,
EDCD is the most appropriate architecture for preventing false alarms and delivering pertinent diagnoses. Thus, the EDCD architecture is chosen. The next sub-section describes different methods for fault diagnosis. Section 2.4 presents an analysis of the potential benefits for the EDCD architecture that was chosen. 2.3. Relevant methods for fault diagnosis
Fault diagnosis is an important research domain, mainly studied by the Artificial Intelligence (AI) and Fault Detection &amp;
Isolation (FDI) communities ( Cordier et al., 2000 ; Simeu-Abazi et al., 2010 ). Fig. 3 presents two major categories based on the classification schemes proposed by Venkatasubramanian et al. (2003a) and Katipamula and Brambley (2005) . The first category (Model-based methods) uses quantitative or qualitative models.
Quantitative models are based on explicit mathematical relation-ships describing the physical system to be diagnosed; qualitative models exploit more qualitative relationships describing the system. Unlike the first category in which a priori knowledge of the system is assumed, the second category (Process-History-based methods) employs a huge amount of historical data to perform diagnosis.

The significant diagnosis methods belonging to these categories are introduced below.
 2.3.1. First Principle Reasoning (FPR)
At the heart of any First Principle Reasoning method is the comparison between the observed behavior of the system and its predicted behavior, inferred by an explicit model of the system ( De Kleer and Williams, 1987 ). The system X  X  faulty behavior leads to discrepancies when the observed behavior differs from the expected behavior. Then, a list of possible fault candidates that might explain these discrepancies is computed. The FPR X  X  accu-racy is closely linked to the quality and the validity of the system model used. Azarian et al. (2011) present an example of an FPR method and its performance for an automotive application. 2.3.2. Fault trees (FT)
Fault trees are cause/effect models used for analyzing system safety and reliability. A fault tree graphically represents the fault interaction within a system. Basic events (e.g., component or human faults) at the bottom of the tree are linked via logic symbols, called gates, to one or more top events, called dreaded events. Diagnosing such events tests each of the possible causes, going through the fault tree gates until a root cause is identified.
Lefebvre et al. (2007) used fault trees for on-line fault diagnosis in aeronautics. These authors did experiments with dynamic fault trees for modeling temporal dependencies between alarms and failure rules. However, the accuracy of fault-tree diagnosis is limited to analyzing common-cause failure, and it is more a safety/risk assessment method rather than a pure fault diagnosis method ( Ribeiro and Barata, 2011 ). 2.3.3. Rule-based reasoning (RBR)
Rule-based reasoning methods are used to solve diagnosis problems by using human expert knowledge. These methods implement a knowledge base that represents the required exper-tise to diagnose the system, usually described as a set of rules (e.g., if-then-else rule statements ( Zaki et al., 2007 )). This knowl-edge is then used by the inference engine to assess abnormal behaviors, providing possible explanations to maintenance opera-tors. RBR methods need enough experience about the system to constitute the knowledge base, which can be difficult to maintain and expand. They are limited to already known faults ( Rao et al., 1998 ). Li and Shen (2007) present examples of expert systems for diagnosing avionic devices. 2.3.4. Case-based reasoning (CBR)
In case-based reasoning methods, a knowledge base contain-ing a set of experiences is used to solve new diagnosis problems. An important feature of the CBR methods is their learning capabilities ( Berenji et al., 2005 ). Unlike rule-based systems, the knowledge base is enriched automatically through experience. In order to solve new diagnosis problems, the system X  X  observed behavior is matched with similar cases that have already been solved or remain unsolved. A solved problem allows the diagnosis system to reuse the solution for future similar cases. Otherwise, the system proposes possible explanations by retrieving past cases that are most relevant for the observed situation. In transportation systems, Vong et al. (2011) worked on a CBR method for diagnosing automotive engines. 2.3.5. Artificial neural networks (ANN)
Inspired by the structure of biological neural networks, Arti-ficial Neural Networks are layered, interconnected processing elements, used for modeling complex relationships between inputs and outputs, capable of non-linear modeling and pattern recognition. In fault diagnosis, ANNs are attractive for their learning capabilities and useful for classification tasks. Several ANN structures can be used for fault diagnosis, such as multi-layer perceptions and radial basis function networks ( Yang et al., 2002 ). When used for fault classification, ANNs are time-consuming for training, and maintenance operators risk not understanding the diagnosis reasoning. 2.3.6. Support vector machines (SVM)
Support Vector Machines are l earning machines that are able to recognize patterns. They are mainly used for fault classification tasks. After a learning phase, the classification is carried out following decision planes for separating data into two or more classes. In fault diagnosis, SVMs are widely used for recognizing fault patterns using data features. Ganyun et al. (2005) present examples of SVMs methods for fault diagnosis. Although SVMs provide accurate results, these methods remain computationally costly for classification of various faults, and they require additional methods for extracting features from raw data measurements. 2.3.7. Bayesian networks (BN)
Bayesian networks are based on a directed acyclic graph, in which each node of the network represents an event, and the arcs between nodes rely on conditional probabilities. An important feature of BNs is their ability to model uncertainties, as well as their learning capabilities. In fault diagnosis, BN classifiers are primarily established using expert knowledge for encoding prob-abilistic information between the nodes, which represent either observable or non-observable events, in order to compute the probabilities of the faults. ( Ferreiro et al., 2012 ) present several examples of BN applications in fault diagnosis. 2.4. Comparative analysis of diagnosis methods for the EDCD architecture Inspired by the feedback of Ribeiro and Barata (2011) and Venkatasubramanian et al. (2003a , b) , Table 1 summarizes the advantages and limitations of the previously cited methods when applied with the EDCD architecture. Six criterias were retained for the comparative analysis, corresponding to the rows of the table.
The first five are issued from the requirements presented in the introduction. To deploy EDCD architecture, an additional embedd-ability criterion was examined (e.g., algorithm complexity, response time, memory size).

FPR methods present the advantage of accuracy, delivering useful explanations with reasonable computing time ( Azarian et al., 2011 ,
Chittaro and Ranon, 1999 ). However, the model is dependent on the system and can be time-consuming to develop ( Zaki et al., 2007 ).
FT is based on a reliability analysis, which is highly dependent on the system properties. Although FT provides explanation and confidence, the accuracy is closely linked to the reliability assessment. In addition, FT lack in adaptability and computation ( Ribeiro and Barata, 2011 ).

RBR methods are very fast for isolating faults since fault symptoms are matched directly with the expert knowledge, but they lack the diagnosis of unforeseen faults ( Zaki et al., 2007 ). In addition, the adaptability can be difficult when revising the rules in case of system change ( Ribeiro and Barata, 2011 ).
The CBR methods provide accurate results in a timely manner, but need enough feedback about the system. In addition, CBR is system-dependent and delivers poor explanations about the results obtained ( Azarian et al., 2011 ).

ANNs provide confident rapid isolation time, but they have several limitations for the ease of explanations and adaptability ( Ribeiro and Barata, 2011 ; Venkatasubramanian et al., 2003b ).
SVMs are highly accurate methods for fault classification with fast response time, but require prior knowledge on fault features and tends to be memory intensive for multi-class classification ( Widodo and Yang, 2007 ).

BNs provide confident results, assuming that preliminary stochas-Ribeiro and Barata, 2011 ).

The current phase of the SURFER project is focused on the commissioning and commercializing new trains. As a result, the process-history-based methods cannot be applied because no feedback is available. As shown in Table 1 ,amongthe model-based candidates, the FPR and RBR methods are the only ones that provide the most numerous advantages and are compatible with embeddability criterion. Due to this train commissioning phase, it is important to validate the model used for the diagnosis. This involves understanding accurately how the diagnosis procedure finds the faulty components.
Consequently, accuracy and ease of explanations become major criteria, and finally leading us to choose the FPR method. This does not prevent considering other interesting embeddable methods (e.g., RBR, CBR or SVM) in future phases of SURFER, for example, during the commercial train opera-tions, where feedback is available. 3. Proposed approach for the embedded fault diagnosis of complex transportation systems
This section describes the proposed generic approach for diagnosing complex transportation systems, by combining the
EDCD architecture and the FPR method. The holonic view clarifies and expands the usual systemic framework ( Koestler, 1967 ). Its major advantages are: a holon is capable of autonomous decision-making in relation to its objectives and cooperation with other holons (this is one way towards an autonomous, cooperative diagnosis). a complete holon is composed of physical and informational parts, making it possible to model the two important aspects of complex transportation systems. the holonic view is associated to recursive decomposition (i.e., a holon is both a part of a whole and a whole composed of other holons), thus meeting the systemic principle of decomposition.

The capacity of autonomy and cooperation of the holonic view is very pertinent for supporting proactive diagnosers and infor-mation exchange during the diagnosis task execution ( McFarlane et al., 1995 ; Jarvis and Jarvis, 2003 ; Vinatoru, 2008 ). This holonic view is very appealing for designing the EDCD architecture proposed in the sub-Section 2.2.2 . 3.1. Architectural model for embedded diagnosis
The generic holonic architectural model proposed for the diagnosis of a complex system is depicted in Fig. 4 . Based on our experiments in manufacturing systems ( Sallez et al., 2010 ;
Trentesaux, 2009 ), this model is composed of recursive diagnosis structures. This generic model shows the decomposition of the system into sub-systems and their associated diagnosis methods. As shown in Fig. 4 , a system S i is decomposed in sub-systems.
S is a j sub-system of the system i . For example, S12 is a sub-system of S 1 , and S 112 is a sub-system of S 11 . At one level in the decomposition of the system in sub-systems, one system S i associated with its context and is diagnosed by a diagnosis method f i (Eq. (1) ).

D  X  X f e ip = 0 o p r ND i g , f L ig = 0 o g r card f e ip gg X   X  f i  X  C i , S i , M i , D n i  X  X  1  X  where:
D i is the result of the diagnosis for the system S i , which consists of a set of discrepancies, denoted f e ip g , together with the set of the lists of the possible faulty components, denoted f L g , that may explain these discrepancies, ND i being the total number of discrepancies that might occur in the system i .
C i denotes the context associated to the S i system.

S
M i is the model of S i according to the system X  X  abstraction level (e.g., structural and/or behavioral model).
 (i.e., e ij , L ij ) recursively issued from the different sub-systems composing S i . card  X  S i  X  is the total number of sub-systems of the system S is defined. For example, in Fig. 4 , the triplet ( f 1 , C the holon H 1 . Moreover, each holon H i is characterized by its two main properties: Autonomy: at level i , a holon elaborates auton-omously a diagnosis ( D i ) by using a model-based fault diagnosis method ( f i  X  . This diagnosis is performed based on observation of its S i system and its associated context C i . The accuracy of the diagnosis is closely linked to the quality of the system observa-tions, so the diagnosis has to be executed as close as possible to each sub-system. Cooperation: at level i , in order to elaborate the diagnosis D i , a holon can interact with other holons located on level i , and with the holons on level i 1 and i  X  1 of the holonic architecture. This collaboration occurs in a collaboration space (see Fig. 4 ). A collaboration space represents an area where an information exchange takes place for a diagnosis, taking into account C i , S i and D n i . 3.2. Diagnosis method for embedded diagnosis
A systemic and functional view of the diagnosis method is shown in Fig. 5 . Each diagnosed system S i is composed of a control part and a controlled part, which operate in a context C i (1) in Fig. 5 ). The control part executes an algorithm to control the controlled part and, in return, the controlled part adopts an expected behavior. At the lowest level of the holonic structure, the controlled part is typically composed of physical elements (e.g., sensors, switches and actuators) that are linked to mechan-ical and electrical constraints.

The system S i may be affected by failures either in the control part or in the controlled part. Possible faults for the control part concern physical faults (e.g., hardware faults) or design faults (e.g., software bugs). For the lowest level of the holonic structure, only physical faults are considered (e.g., broken sensors and actuators, component hardware or electrical discontinuities).
Two cases can be distinguished when the holon executes the fault diagnosis method f i , due to the holonic architecture used:
The holon analyzes the observed behavior of the system S continuously. Based on processed data and the system model ( M i in Fig. 5 ), the holon detects any abnormal behavior (i.e., fault symptoms) and generates discrepancies (output of the block (2), denoted e i in Fig. 5 ). These discrepancies are then analyzed by the diagnosis algorithm (block (3) in Fig. 5 ), which uses the system model to provide a list of the potential faulty components related to these discrepancies ( D i ).

The holon receives diagnoses from holons of level i 1( D i
The context analysis process (block (4) in Fig. 5 ) is one of the innovative features of the proposal. Fig. 6 shows this process, which is modeled using Petri Nets. In cases of e i or D i analyzes the system context and exchanges with other holons to elaborate the system X  X  enriched context, which is useful for refining the diagnosis results. If the enriched context explains
D related D i * or e i to prevent a misdiagnosis. If the enriched context at the system X  X  level i does not provide an explanation to D the resulting diagnosis at level i ( D i ) is not inhibited. Then, the holon X  X  diagnosis results ( D i ) are sent to the holons at level i  X  1.
Some features of the well-known subsumption architecture ( Brooks, 1986 ) are reflected in the inhibition principle.
Another approach would use a previous filtering principle instead of the inhibition principle, used once a diagnosis has been computed. This filtering principle would be executed before the diagnosis process (block (3) in Fig. 5 ). This approach will be considered in future research for a comparative performance analysis. The main difference with the inhibition principle is that, in the filtering principle, no diagnosis occurs if the context analysis does not allow it. In the inhibition principle, even if a context analysis inhibits the diagnosis, the diagnosis has never-theless been made. 4. Applying the holonic approach to a railway transportation system
The following sections illustrate the corresponding instantia-tion in the passenger access function, which is a safety critical function ( Umiliacchi et al., 2011 ). 4.1. Instantiation of the holonic approach for the diagnosis of a train system
A train is a complex transportation system ( S i ) that has several vehicles, according to the model, denoted S ij , S i 0 j 0 composed of a certain number of distributed sub-systems (e.g.,
S , S i 0 j 0 k 0 ), including door sub-systems located at either side of the vehicle ( Fig. 7 ). Each part of the train system has its correspond-composed of a door control part (i.e., door control unit) and a controlled electromechanical part (i.e., a door mechanism and one or two moving steps). All the door sub-systems receive control information (e.g., closing order) from the centralized vehicle control system. Each vehicle control system in the train receives information from the centralized train control system.
The centralized train control system, the centralized vehicle control system and each door sub-systems are equipped with a or sub-systems. Due to the hierarchical decomposition of the train system, the holon in the centralized train control system has a higher functional level than holons in the centralized vehicle control system. Similarly, vehicle holons have a higher functional level than the holons in the door sub-systems.

Each diagnosis method at the lowest holon level (e.g., f ijk implements a specific FPR diagnosis method, developed by PRO-
SYST, a company involved in the SURFER project. This innovative method, called  X  X  X utomatic diagnosis X  X , has been successfully applied to solve diagnosis problems in industrial applications ( Willaeys and
Asse, 2011 ). This method has the objective to achieve a complete automation of the fault detection and the fault isolation steps, using the structural model of the monitored system. In this method, the systems to be diagnosed belong to the class of discrete events systems, since the signals exchanged between the control part and the controlled part consist of a timed sequence of discrete events.
The  X  X  X utomatic diagnosis X  X  is implemented in each holon in each passenger door sub-system (i.e., the architecture X  X  lowest holon level) and is not implemented for holons at higher levels. The holon analyzes the observed behavior of the system S i 0 jk continuously (block (1) in Fig. 7 ). The outputs of the door control part, denoted
O , allow the expected future information to be predicted based on the system model (block (2) in Fig. 7 ). At the same time, if one or more components of the electromechanical part have failed, dis-crepancies appear (denoted e i 0 jk in Fig. 7 ) between the predicted set of information and the monitored feedback information, denoted
I . These discrepancies are automatically analyzed by the diagnosis algorithm (block (3) in Fig. 7 ).

The next section describes the context analysis algorithm, which is the most innovative feature in the proposal. 4.2. The train system X  X  context analysis algorithm and the inhibition principle
The algorithm described below implements the inhibition principle in a holon on the level ij (i.e., the vehicle system level) in this example. It is assumed that holons on the same hierarch-ical level (e.g., train door sub-systems) cannot cooperate with each other. Holons cooperate only with holons on a higher level. Once the system has been initialized, a holon monitors its system continuously, whatever the occurring events (i.e., discrepancies or diagnoses).
 Algorithm 1. Holon X  X  behavior on level ij (vehicle system) 1. Begin 2. Initialization of system S ij model 3. Initialization of context inhibition table at level ij 4. While (true) 5. Monitor system S ij and wait for event (discrepancies e 6. If ( e ij ) Then 7. Diagnose S ij and generate D ij 8. EndIf 9. If ( D ijk * ) Then 10. Analyze D ijk * and generate D ij 11. EndIf 12. Acquisition of context C ij 14. For (each Cij of the context inhibition table at level ij ) 15. Find the event ( e ij OR D ijk * ) 16. Find the acquired context C ij 17. Obtain the resulted inhibition value 18. EndFor 19. EndFor 20. If (inhibition  X  TRUE) Then 21. D ij is inhibited for event  X  e ij OR D ijk * ) 22. Else 23. D ij is sent to the  X  X  X ather X  X  holon at level i 24. EndIf 25. EndWhile 26. End
For the train example, due to the three-level holonic view proposed (i.e., train, vehicle and doors), holons use three tables ( Tables 2 X 4 for door diagnosis). In these tables, several discrepancies or diagnoses and various contexts may be chosen depending on the situation. Each context corresponds to its hier-archical level (e.g., door sub-system: door obstructed for level ijk ; vehicle system: the vehicle is tilted at station for level ij ). Discre-pancies, diagnoses and contexts from these tables are obtained from railway standards and expert feedback. For level ij (vehicle system), a holon has two different ways to process the diagnosis ( Fig. 6 )
In case of discrepancies, a holon diagnoses system S ij and generates D ij .
 Every time a holon receives a D ijk * , this holon analyzes this D ijk * and generates D ij .

In the Petri Nets model in Fig. 6 , a holon acquires its correspond-ing context C ij . To determine if a holon can explain e ij C and inhibit, or not, D ij , a holon uses the context inhibition table at or D ijk * ), the holon lists the corresponding discrepancy or D table. Then, for this precise event, the holon lists all the possible contexts, finds the acquired context C ij , and directly obtains the result (i.e., D ij inhibitedornot).Forexample,atlevel ij (vehicle system), a holon uses Table 3 for the analyzing the fault symptom: Door closed with a delay ( D T ), the context analysis concludes with and the diagnosis is inhibited.

To illustrate potential benefits of the proposed approach, some simulated scenarios of the cooperative mechanisms among hierarchically-dependent holons are presented in the following sub-section. These scenarios will also be used to validate the diagnosis algorithms embedded into holons. 4.3. Examples of cooperative mechanisms in a railway system
To illustrate the dynamic behavior of the fault diagnosis methods based on the simulations of the algorithm introduced above, three possible fault diagnosis scenarios in train passenger doors are presented. A door sub-system can be affected by various fault symptoms that produces discrepancies (e.g., door is still open after a close order signal, referred to as  X  X  X ont. open X  X ; door is closed with a delay). For these three following diagnosis scenar-ios, the centralized train control system (i.e., S 1 ) is composed of two vehicles (i.e., S 11 , S 12 ). Each vehicle is equipped with three door sub-systems (e.g., for S 11 : S 111 , S 112 and S 113 and sub-system is associated with a holon (i.e., H 1 , H 11
H 112 and H 113 ) and its corresponding system context (i.e., C
C 4.3.1. Scenario #1: fault on a single door (true alarm) On this example, where behaviors of holons are presented on
Fig. 8 , a true alarm scenario is studied. Fig. 8 presents the behaviors of the holons. Due to a faulty sensor, a single door sub-system ( S has a specific discrepancy: the door is still opened after a close order signal. The holon H 111 detects this discrepancy, diagnoses S e e
Since context C 111 doesn X  X  give an explanation, H 111 generates a message to H 11 with the diagnosis D 111 * .H 11 analyzes this diagnosis and its corresponding context ( C 11 ) in order to explain diagnosis
D * . Since context C 11 does not give an explanation, H 11
S , thanks to diagnosis D 111 * , and generates a diagnosis D with the confirmed single failure mode of S 111 .

This scenario was given to illustrate the behaviors of the holons during the fault diagnosis process. In this scenario, holon
H sends an internally confirmed diagnosis to the maintenance center, using exchanges among hierarchical holons. 4.3.2. Scenario #2: faults on all train doors (false alarm)
In this scenario, a false alarm scenario is studied. Fig. 9 presents the behaviors of the holons. Due to the train being tilted at the station because of the inclination of the track, the vehicle X  X  three doors (i.e., S 111 , S 112 and S 113 ) have the same discrepancy simultaneously: the doors take a longer time to close themselves.
H , H 112 and H 113 detect this discrepancy, but their limited sub-system context ( C 111 , C 112 and C 113 ) cannot provide an explana-tion for this discrepancy. H 111 , H 112 and H 113 generate messages to H 11 with diagnoses D 111 * , D 112 * and D 113 * .H 11 analyzes D
D * and D 113 * and generates a diagnosis D 11 . Then, H 11 the vehicle X  X  context ( C 11 ) in order to explain these diagnoses. Since C 11 provides an explanation (i.e., vehicle being tilted at the station) for the sublevels diagnoses, H 11 inhibits the resulting diagnosis D 11 , for the specific diagnoses D 111 * , D 112 prevent new false alarms (see Petri Nets model in Fig. 6 ).
This second scenario was given to illustrate the efficiency of the holonic approach for eliminating false alarms. Using the analysis of its higher-level context, a holon can detect and eliminate false alarms from lower-level holons due to their limited local contexts. In comparison, a traditional decentralized embedded approach would have sent a large amount of mis-diagnosis information to the maintenance center, without first verifying the vehicle context. 4.3.3. Scenario #3: faults on all doors of a specific vehicle
In this scenario, a common cause failure is studied. Fig. 10 presents the behaviors of the holons. Due to an electrical ground connection problem between the centralized vehicle control system and the door sub-systems, the door close order signal is sent by the centralized train control system but is not received by the door sub-system. Consequently, all the vehicle X  X  doors ( S , S 112 and S 113 ) remain open. H 111 , H 112 and H 113 cannot detect this discrepancy because, at their local context, the situation is normal. So, they don X  X  send a diagnosis to H 11 .H 11 monitors S when it doesn X  X  receive diagnoses from lower levels. H 11 discrepancy (a missing closing confirmation feedback event from its sub-systems) and analyzes the context C 11 in order to explain this discrepancy. Since C 11 does not explain this discrepancy, H generates and sends diagnosis D 11 to H 1 with a signal reception problem between S 11 and its corresponding sub-systems S 111 and S 113 .

This last scenario is intended to illustrate the efficiency of the holonic approach for diagnosing common cause failures. In this scenario, due to their hierarchical level at the door sub-systems, the holons cannot detect and diagnose this kind of failure. The proposed holonic architecture, with a higher-level holon that monitors the global system when it does not receive diagnoses from lower levels, is intended to improve the detection of common cause failures. In comparison, a traditional decentralized embedded approach would not have given a diagnosis to the maintenance center or operators since there are no functional anomalies for a local door sub-system.

These scenarios will be used on an experimental platform, called EMAPS (Experimental Multi-Agent Platform for the SURFER project), which is briefly introduced in the next section. 5. Experimentation platform
The EMAPS platform will allow the holonic diagnosis approach to be validated before the final embedding in the trains. This platform is intended to: develop the various configurations depending on the architec-tures proposed (i.e., mapping of monitoring and diagnosis functions to hardware systems), validate the internal algorithms of the embedded holons, which compose the train diagnosis system, assess the appropriateness and reliability of fault diagnosis processes obtained from the cooperation of several holons.
This platform will be initially tested on the door sub-systems and later on the air-conditioning sub-systems of a passenger train. As shown in Fig. 11 , EMAPS will emulate two train vehicles and their corresponding doors. The Multi-Agent System (MAS) paradigm ( Wooldridge, 2002 ) will be used to implement the holons and their algorithms. More precisely, one agent will be associated to diagnose one specific door. Each agent could cooperate with other agents through the dedicated diagnostic network. The train X  X  signals (e.g., process data, context data) are obtained either from real recordings or from signals generated by a train simulator. The resulting train data are available via an OPC server.

The EMAPS has the following hardware and software compo-nents ( Fig. 11 ):
A MAS development environment, JADE, which defines various architectural configurations for diagnosing sub-systems ( Bellifemine et al., 2007 );
Four computers, each one integrating the behavior of one of the four embedded diagnostic agents;
A train data playback system with an OPC data server, which allows signals to be disseminated through an emulated inter-nal train network with a TCP/IP protocol;
A supervisory system (in Fig. 11 , the GUI agent), which provides the operators with an overview of the emulated train network X  X  signal data and the inter-agent information exchanges throughout the diagnostic network and also pre-sents final diagnosis results.

The next section describes the first results obtained in real train X  X  exploitation and first lessons learnt from real experi-ments. 6. The implementation in a real train, first results and lessons learned
Low-level diagnosis functions (e.g., monitoring layers) were implemented and embedded in real trains to monitor train signals continuously. Along with information about the system X  X  operating context, this monitoring system stores the raw data measurements on-board as a collection of log files. These log files provide useful support for understanding the faults that occurred while the train was in service, especially for the door sub-systems. The log files analysis demonstrated that particularly abnormal behaviors can only be explained by using a continuous embedded monitoring and cannot be explained by using the current RCD Bombardier-Transport approach: Orbita ( Orbita-BT, 2006 ).

In addition to this partial implementation, a specific FPR method, based on a structural model of the door sub-system, is currently being validated off-board. This FPR method analyzes log files from trains (blocks (2) and (3) shown in Fig. 7 ). Although the approach is used off-board without context analysis (block (4) shown in Fig. 7 ) and high-level diagnosis processes, the first results are already very promising.

Table 5 presents a comparison of the FPR method with the RCD approach and a human analysis based on a manual diagnosis making from log files. This comparison is based on two criteria:
Analysis time , corresponding to the average time for analyzing train data and determining diagnoses, and
Diagnosis success rate , corresponding to the ratio between the number of successful diagnoses obtained and the total number of reported faults.

As Table 5 shows, the proposed approach with the FPR method has the same diagnosis success rate as the human analysis (95%), but it is significantly faster than the t wo other approaches. In addition, after three months of continuous embedded monitoring in trains in real exploitation conditions and log files analysis, Bombardier-
Transport has calculated that the time needed to identify root causes of reported faults was reduced by an average of 40%.

However, understanding and analyzing the root cause of reported faults from log files with the approach in off-board use is not enough. For example, a door lock signal is sent to a train line composed of two interconnected trains: train #1 and train #2. Due to a problem with physical data transmission between train #1 and train #2, this signal was only received by train #1.
Only a manual cross-tabulation analysis of the two log files from the interconnected trains showed this transmission problem and the root cause. These results encourage us to pursue our research, implementing the proposed on-board holonic diagnosis approach, including the specific FPR method and the context analysis. 7. Conclusion and future works
In this paper, a holonic cooperative approach for diagnosing complex transportation systems was proposed. The main contribu-tion of this proposal is the combination of a holonic cooperative diagnosis architecture with a FPR method for the embedded fault diagnosis. The proposed holonic architecture is based on the decomposition of a complex sys tem into sub-systems and is composed of recursive diagnosis holons. At each level in the decomposition, each holon is characterized by its system to be diagnosed, its context and its di agnosis method used. In order to increase the diagnosis confidence and decrease the number of false alarms, a holon considers its system context and may exchange information with holons located at the same level, at a higher level, or at a lower level of the holonic architecture.

The holonic approach was applied to the on-board monitoring of a train system in the scope of the industrial SURFER project. A holonic train architecture, coupled with an FPR method and relevant diag-nosis algorithms, is proposed. Three diagnosis scenarios with a specific train function (i.e., passenger access) were provided, high-lighting the information exchanged among holons. These scenarios illustrate the expected benefits of the approach compared to the other existing diagnosis architectures. In the near future, in order to validate the approach completely, an experimental platform, called EMAPS, is currently being implement ed. This platform reproduces the behavior of a train system and will be applied to monitor various emulated sub-systems (i.e., doors, for this first milestone).
The encouraging first results make us confident for the project X  X  continuation and provide some future research topics:
The short-term perspectives will concern the implementation of collaboration strategies among holons of the same hier-archical level to improve the context analysis. (In this paper, no cooperation was assumed among holons on the same level.)
Another study will focus on the development of the concurrent filtering principle for the context analysis, instead of the inhibition principle proposed in this paper, and relevant comparisons will be made using the EMAPS platform.
 The mid-term perspectives will focus on another part of the SURFER project for the preventive maintenance (Condition-Based Maintenance) rather than corrective maintenance.
This future research will integr ate damage diagnosis and prog-nosis methods into the proposed holonic architecture. This integration will allow us to define prognosis holons for incipient fault detection and localization. In this extended approach, which combines spatially and semantically distributed diagnosis, fault diagnosis holons and prognosis holons will exchange information with each other to refine the diagnosis accuracy.

The long-term perspectives are of two types. The first, more theoretical, will consist of studying other interesting embeddable diagnosis methods (i.e., RBR, CBR and SVM) and comparing with reference method FPR . The second will focus on applying the holonic approach for diagnosing other systems than doors, such as the air-conditioning system, leading to a new generalization of the promising approach presented in this paper.
 Acknowledgments The project presented in this paper is led by Bombardier-Transport in collaboration with PROSYST, HIOLLE Industries Group, Universite  X  de Valenciennes et du Hainaut-Cambre  X  sis (UVHC) and agement et des re  X  seaux (IFSTTAR). This resear ch is supported finan-cially by French Inter-ministeria l Funds (FUI) and the Nord/Pas-de-
Calais Region, and sponsored by the i-Trans and Advancity competi-tiveness clusters. The authors gra tefully acknowledge the support of these institutions.
 References
