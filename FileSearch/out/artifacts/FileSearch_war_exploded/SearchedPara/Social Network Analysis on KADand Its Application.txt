 In today X  X  Internet, peer-t o-peer (P2P) file sharing applications become more and more popular [1]. According to the 2008/2009 Internet traffic report of Ipoque [2], 43%  X  70% of the Internet traffics are from P2P applications and services, where eMule constitutes the majority (up to 47%). To facilitate the delivery of content, eMule deploys its distributed network (i.e., KAD) based on Kademlia [3], a robust distributed hash table (DHT) protocol. Along with the popularity of eMule, KAD is also being widely used.
 Social network analysis has been applied in many research fields including P2P networks. Khambatti et al. [4] was the first to apply social network analysis on P2P networks; they proposed efficien t methods to discover the formation of self-configuring communities in P2P networks. Afterwards, many community formation and discovery methods (e.g., [5]) in P2P network were put forward.
Moreover, the results of social network analysis can be utilized to improve the performance of traditional applications. For instance, Liu et al. [6] proposed that web content could be delivered much fa ster through buildin g interest-based communities. Tian et al. [7] proposed that in BitTorrent network, the lifetime of a torrent could be greatly prolonged, when taking priority to share files among peers with similar-number chunks. Yu et al . [8] made social network analysis on the graph formed by sybil peers and honest peers which are connected by trust relationship. Then they proposed a decen tralized approach, Sy bilGuard, to limit the corruptive influence of Sybil attacks (i.e., the forging of multiple identities).
Despite the wide use of KAD, existing works mainly focused on the analy-ses of its common characteristics, such as the peer churn (i.e., the phenomenon that peers joining or leaving a network frequently). In this study, we try to identify characteristics of the social network of KAD, which is formed based on the information of how peers share files in KAD (see details in Section 2). We further discuss how these characteristics could be used and misused. Especially, we propose a new routing table maintenance algorithm (i.e., RTMA-2, see de-tails in Section 4) to improve the routing performance of KAD based on the characteristic of its community structure. We use Rainbow, a P2P crawler for Kademlia-based DHT networks, to collect data of KAD. Rainbow had run on a server from May 29, 2009 to June 9, 2009. We obtained a data set of how 39 , 941 peers were sharing 7 , 172 , 189 files. Note that we did not download the content of files, but just collected the meta-information of files including filename and file size. Then we formed a graph of KAD, through connecting p eers with edges if they share at least one file, and giving the weight on this edge as the number of shared files. In this way, we obtained a weighted non-directed graph named  X  X ullgraph X , which has 39 , 941 peers and 30 , 151 , 958 edges. Next we set a threshold value 1 to filter those unsta-ble relationships whose weight is 1, and to simplify the analysis of  X  X ullgraph X . Finally, we formed the largest connected subgraph ( LCS , i.e., the social network of KAD) whose weights are over 1, with the peer number n =36 , 757 and the edge number m =6 , 523 , 043. The rest analyses of this paper will mainly focus on LCS .

We conduct a series of analyses on the characteristics of LCS , which include the degree distribution, the clustering coefficient, the mean shortest distance and the community structure. Specifically, given a graph G =( V , E ), where V is the vertex set which satisfies V = { v i | i =1 , 2 ,...,n } and E is the edge set which satisfies E = { e i | i =1 , 2 ,...,m } , the degree of a vertex v i is the number of edges incident on v i ; the frequency of degree k , denoted by p k , is the fraction of vertices in the graph that have degree k ; the degree distribution refers to the p k vs. degree relation; the clustering (or transitivity) coefficient (i.e., C ) measures the extent of inter-connectivit y between the neighbors of a vertex; the from vertex i to j ; on the characteristic of comm unity structure, we focus on how peers are distributed in communities and how the identified characteristic of community structure could be applied to improve the routing performance of KAD.
 We find that the degree distribution (Fig. 1) fits a power law distribution p k  X  k  X  with  X  =0 . 9938. Furthermore, we observe that peers with high degree tend to own more files. For example, the top 10 highest degree peers averagely own 10 , 761 files, which is much (33 . 7 times) larger than 319 files which all peers averagely own. Thus we infer that KAD is vulnerable to targeted attacks, which are launched targeting at the peers playing important roles (e.g., to remove the high-degree peers from KAD), and is robust against random attacks, which are launched without target.
Moreover, we reveal that for LCS : (1) the clustering coefficient C =0 . 49, which is a high value and indicates that LCS is a network with high transitivity; (2) the mean shortest distance l =2 . 80. According to Watts et al. [9], a network with a small mean shortest distance and a large clustering coefficient is a small world network, thus the small l and high C of LCS suggest that LCS is a small world network. Consequently, this will make the sharing of files between peers in KAD very efficient, yet this may also be exploited by malicious attackers to spread viruses more quickly through KAD, according to the general properties of the small world network.

In [5], the quality of community structure is measured by the modularity, a scalar value between -1 and 1 which measures the density of links inside com-munities as compared to links between co mmunities [10]. Usually, modularity takes values 0 . 3to0 . 7 to mean a distinguishable community structure. In our experiment, we produced 31 communities with a high modularity value of 0 . 5928, through running the fast community discovery algorithm [5] on LCS .Wefur-ther observe that the top 3 largest communities account for 91% of peers, and that there are 20 communities each of wh ich contains less than 10 peers. This indicates that the distribution of the sizes of communities fits power law to some extent.

Moreover, we observe that peers in a community are mainly distributed in only a few countries (Fig. 2). For example, 86% of peers in community No.24 are distributed in France. Thus, we infer that peers tend to share files with the peers in the same country. We consider this is due to that peers in the same coun-try are more closely-linked and have more similar tastes than peers in different countries. As we know, the allocations of IP address space are globally man-aged by the Internet Assigned Numbers Authority (IANA). It usually allocates neighboring IP address blocks to Interne t service providers or other entities in each country. Thus, we deduce that IP addresses 1 in the same country should be near. Therefore, we conclude that peers tend to share files with IP-address-near peers. Based on the above conclusion that peers tending to share files with IP-address-near peers, we may improve the routing performance of KAD, trying to make more IP-address-near peers as neighbors through modifying the routing table maintenance algorithm of KAD.

We illustrates the routing table (i.e., the structure which contains the neigh-boring peers of the local peer) of KAD in Fig. 3. Note that the routing table is an unbalanced binary tree, where the root denotes the upmost node in level 0, and the zone denotes an arbitrary node in the routing table. If a zone is a leaf zone, it has a k-bucket which contains at most k contacts (k is set as 10 in eMule); if not, it has two subnodes and has no k-bucket. For example, one can see that the non-leaf zone x in Fig. 3 has two subtrees named subtree[0] and subtree[1].

We consider the original routing table maintenance algorithm (i.e., RTMA-1) as a black-box algorithm. To improve the routing performance of KAD, we mod-ify RTMA-1 into the new routing table maintenance algorithm (i.e., RTMA-2, see Alg. 1), through adding two operations to RTMA-1. Specifically, the first operation is to compute the IP-address distances of contacts (i.e., the candidate neighbor peers which are returned from UDP messages), according to the for-mula: IP-address distance = | IP address of contact  X  IP address of local peer | ;the second operation is to rank those 2 to 20 contacts returned from UDP message, according to their IP-addres s distances from the local peer. After these opera-tions, those IP-address-near contacts will be processed first. Since the routing table of KAD can only contain at most 6,360 contacts [11], the chance of RTMA-2 for those IP-address-near contacts being inserted into the routing table will be higher than that of RTMA-1. Consequently, RTMA-2 will have advantages over RTMA-1 in the aspects of routing speed and the speed of locating sources of files.
 Algorithm 1. RTMA-2 In this paper, we conducted a series of social network analyses on the KAD (i.e., the DHT network deployed by eMule) on many aspects: the degree distribution, the clustering coefficient, the mean distance and the community structure. We revealed many interesting characteristics of the social network of KAD (i.e., LCS ), such as:  X  the degree distribution of LCS fits a power law;  X  LCS demonstrates high transitivity and is a small world network;  X  the peers in a community of LCS are mainly distributed in only a few We also discussed the uses and misuses of these characteristi cs. Especially, we have shown that the characteristic of the community structure of LCS could be applied to improve the routing performance of KAD.
 This work is supported in part by C hina NSF under Gra nts No. 60803085 and No. 60873245.

