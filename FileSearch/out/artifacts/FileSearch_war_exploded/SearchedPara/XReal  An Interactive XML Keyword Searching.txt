
Keyword search over XML data usually brings irrelevant results especially when the keywords in a user query have ambiguities. We demonstrate a statistic-based approach to identify the search targets and constraints of a user query in the presence of keyword ambi-guities, and come out a relevance oriented result ranking scheme called XML TF*IDF. Since the search intention of a same query may even vary from user to user, we provide an interactive search strategy by allowing user to simply tick their desired search tar-gets from a list of suggestions recommended by the search engine. In this way, we can acquire more precise results and also take the burden of learning the schema of XML data off users.
 H.3.3 [ Information Systems ]: Information Search and Retrieval
Management, Experimentation
In this paper, we would like to demonstrate how to build an effec-tive XML keyword search engine. Specifically, we aim to resolve the following issues that are unique to XML keyword search. (1) Identify the target that a user query intends to search for. As compared to the traditional IR-style web search whose search tar-get is certainly flat document, the search target of an XML keyword query is usually implicit or unknown. (2) Identify and quantify the possibility of potentially various search constraints of a user query. (3) Rank query results in consideration of their relevance scores with the query and their structural features.

Unfortunately, recent literatures focus on designing either the re-sult matching semantics by enforcing the occurrences of each query keyword in a subtree as compact as possible, or the result ranking scheme based on a certain matching semantics. However, regard-less of the validity of matching semantics itself, without figuring out the search target of a user query, the matching results associ-ated with different search targets are messed up together, which badly annoys user in result consumption.

We take a widely adopted matching semantics called smallest lowest common ancestor (SLCA) [2] as example to illustrate the importance of search target identification. Each SLCA result of a keyword query is a subtree containing all query keywords but has no subtree which also contains all the keywords.

E XAMPLE 1. Consider Q = X  customer, interest, art " issued on the bookstore data in Figure 1, most likely intending to find cus-tomers who are interested in art. The SLCA results can be classified in four types: (1) the customer interested in art (e.g. customer C2, C4), (2) the customer whose name contains  X  X rt" and has an inter-est (e.g. C3), (3) the customer whose address contains  X  X rt" and has an interest, (4) the book whose title contains all keywords (book B1). SLCA neither distinguishes the search target i.e. customer or book , nor distinguishes the above four search constraints. 2
Another problem which is not studied by any existing work is the keyword ambiguity problem . Since XML data contains both the structural and content information, XML keyword queries usually contain various ambiguities: (1) A keyword can appear both as an XML tag name and as a text value of some other nodes. (2) A key-word can appear as the text values of different types of XML nodes and carry different meanings. (3) A keyword can appear as an XML tag name in different contexts and carry different meanings.
The keyword ambiguity problem may lead to various interpreta-tions of the search target and constraint. E.g. in Figure 1, customer and interest appear as both an XML tag name and a text value; art appears as a text value of interest, address and name node. It is such ambiguity that causes two interpretations of search target and four interpretations of search intention of Q as mentioned in Example 1. Therefore, we need to find the potential interpretations, and also quantify their respective confidence to be the desired search target (constraint).
In order to resolve the above challenges in the presence of key-word ambiguities, we present our XML keyword search prototype XReal. In particular, we distinguish the type of a node in XML data by its prefix path from root node, and the search target is referred as node type. Then we devise a series of novel statistic terms, such as XML document frequency (XML DF) and XML term frequency (XML TF) for a certain node type T . Next, we propose a series of guidelines to capture human intuitions for the job of measuring the confidence of a certain node type T as the desired search target of a query Q . After the desired search target T is fixed, we compose the result as a subtree rooted at T . Lastly, we propose a novel XML TF*IDF result ranking scheme, which not only inherits the objec-tive relevance nature between user query and matching results as done in traditional TF*IDF, but also captures the confidence of a node n to be searched via (as a constraint) and the structural rela-tionship of nodes. Readers can refer to [1] for detailed formulae and rational behind. An example is given to illustrate how XReal infers user X  X  desired result and puts it as a top-ranked answer.
E XAMPLE 2. Recall the query in Example 1. XReal interprets that customer is the 1 st desired search target, as all three key-words have high frequency of occurrences in customer nodes; while book is the 2 nd desired target. Similarly, since keywords  X  X nterest X  and  X  X rt X  have high frequency of occurrences in subtrees rooted at interest nodes, it is considered with high confidence that this query wants to search via interest nodes, and we incorporate this confidence into our ranking formula. Besides, customers interested in  X  X rt X  should be ranked before those interested in (say)  X  X treet art X . Thus, C4 is ranked before C2, and further before customer with address in  X  X rt street X (e.g. C1) or named  X  X rt X  (e.g. C3). 2
As shown in Figure 2, XReal system consists of four core parts. In this demo, we would like to show two major features of XReal. First , we aim at showing an important yet unstudied topic in XML keyword search: resolve the keyword ambiguity problem in identifying the search target and search constraint of a user query. We will illustrate how XReal adopts a heuristic and interactive way to guide user to tell the search engine his potential search intention through a series of live interactions, without requiring user to learn any query language or schema of XML data. When a user issues a query to XReal, our search target identifier first computes the con-fidence of each node type in XML data as the desired search target, and returns the top-n targets (n is user-specified and is 3 by default). User can choose his favored target (by just ticking the checkboxes associated with the suggested targets), and specify how many top-k results expected (as shown in Figure 3(a)). Then, XReal will keep interacting with user whenever any ambiguity is encountered in judging the search constraints, e.g. whether a keyword can be the value of different node types. If so, it returns the possible in-terpretations of search constraints of the query for user to choose again. Through the above two-step interaction (as denoted by the dashed arrows in Figure 2), both the keyword ambiguity in resolv-ing the search target and constraint are cleared off, and the final results are computed and ranked for final display (as shown in Fig-ure 3(b)). We believe our interaction design provides user a much improved search experience and helps minimize the user efforts in result consumption, as compared to mixing and returning the indi-vidual results of different search intentions as a whole.
Note that, for novice user who is unwilling to participate the interactions, XReal will automatically choose the most promising search target and search constraint (according to its confidence mea-surement schemes) to conduct the query answering in a one-stop service. (a) Search Target Identifier (b) Result Explorer &amp; Ranker
Second , we may show some advanced search features for expert user to investigate the rationale and importance of various rank-ing factors designed in our XML TF*IDF ranking scheme [1] in depth. Specifically, XReal will offer user a list of important rank-ing factors for him to specify those that compose the overall rank-ing scheme. User can compare the relevance of results returned by various combination of these ranking factors. DLBP (500MB), as a large-scaled real-life data set, is used throughout the demo.
In a nutshell, this work exploits purely the statistics of under-lying XML database to address search intention identification, re-sult retrieval and relevance oriented ranking as a single problem for XML keyword search, without relying on any schema information of XML data such as DTD or XML Schema. Jiaheng Lu was partially supported by 863 National High-Tech Research Plan of China (No: 2009AA01Z133), IBM Research -China Fund(Project No. JSA200909010) and SRF for ROCS, SEM.
