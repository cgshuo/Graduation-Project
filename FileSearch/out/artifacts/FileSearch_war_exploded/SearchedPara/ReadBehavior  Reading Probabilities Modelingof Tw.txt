 Micro-blog services, such as Twitter , have grown rapidly in recent years. It has more than 500 million registered users and 200 million active users. More than 400 million tweets are posted per day 1 .On twitter , the user whose tweets are followed is called friend , while the user who is following is called follower .
Followers may get lots of tweets from their friends 2 . One scenario is that the user has too many active friends, who post tweets very frequently. In this scenario, he/she is unable t o read all the tweets. Previous works, such as on iden-tifying influential users [1], assumed that followers could read all the tweets on their micro-blog spaces. However, it is a ctually untrue most of the time. Another work [2] systematically investigated the underlying mechanism of the retweeting behaviors, and divided the tweets int o three categories: retweet, ignore 3 ,and miss. Nonetheless, it is not obvious to detect whether the tweets are missed or ignored in some situations, even with the help of users X  login time.
In this paper, we propose a ReadBehavior model to measure the reading probability of each tweet, where reading probability means the probability of a tweet that is read by a user. The model is based on the user X  X  retweeting behavior, which is the correlation between the tweet X  X  original posting time and the corresponding retweeting time. ReadBehavior is of practical importance and can be beneficial for various applications, such as social influence analysis. To illustrate the effectiveness of ReadBehavior , we develop an I mproved P age R ank ( IPR ) algorithm, which is an extension of the PageRank [3] algo-rithm. Both IPR and PageRank find influential users on the whole network. PageRank assumes that all the tweets are read by the user, whereas IPR calcu-lates the reading probability of tweets, and then estimates the number of tweets that are read.

Experiments are then conducted to evaluate the performance of our proposed model. The results show that IPR outperforms other related algorithms, such as PageRank , FollowersNum ,and TweetsNum . Consequently, the results also verify the effectiveness of ReadBehavior .

The main contributions of this paper include: 1. We propose a ReadBehavior model to measure the reading probability of 2. Based on our proposed model, we develop an IPR algorithm to find influ-The rest of this paper is organized as follows. A review of related work is given in section 2. Section 3 pr esents the proposed ReadBehavior model in detail. Follow-ing that, in Section 4, we present IPR , which is based on ReadBehavior . Then, experimental results are presented in Sect ion 5. Finally, Section 6 concludes this paper. There have been quite some studies on micro-blog services, especially on Twit-ter , e.g., identifying influential users. The Web Ecology project [4] measured influential users for a 10-day period. This work performed a comparison of three measures of influence -retweet, reply, and mention. Cha et al. [5] used men-tions, retweets, and the number of followers as influence measurement. Kwak et al. [6] used PageRank of the network constructed by followers .Bakshyet al. [7] used the information cascades. R ecently, researchers also studied social influence from the topics perspective [8,9,10,11,12]. Romero et al. [1] designed the influence-passivity algorithm to measure influential users. However, all these methods assumed that followers could read all the tweet s. Whereas in reality, users may miss some of the tweets.

Other works studied the retweeting behav iors. Boyd et al. [13] treated retweet-ing behaviors as conversations inside Twitter, and studied the basic issues about retweet. Hong et al. [14] studied the pro blem of predicting popular tweets ac-cording to the future retweets. Petrovic et al. [15] explored tweets features to predict whether a tweet would be retweeted. Benevenuto et al. [16] analyzed the user workloads based on users X  behaviors. Uysal and Feng [17,18] proposed a tweet ranking method to help users to catch up with valuable tweets based on the retweet history. Compared with our m odel, they always ignored the tweets time (tweets X  posting time), which we treat as an important factor.

There were some works that mentioned t he tweets time. Yang et al. [2] studied the underlying mechanism of the retweeting behaviors. They divided the tweets into three categories -retweet, ignore, and miss, and then classified the retweeting delay into short-term intervals and long-term intervals. However, they did not mention how to deal with the situation when it was not clear whether a tweet was missed or ignored. Dabeer et al. [19] proposed response probability that bear the similarity with susceptibility using the tweets time. However, as far as we know, very few researchers have studied the tweets time in the view of measuring the reading probability. To measure the reading probabilities of the tweets on users X  micro-blog spaces, we propose the ReadBehavior model according to users X  retweeting behaviors. In this section, we will describe the model in detail. 3.1 Terminology , Assumption ,and Fact When users reading tweets on their micr o-blog spaces, the timeline lists the tweets in reverse chronological order. O nce they find an interesting tweet, they will retweet it. This is denoted as the retweeting behavior.

For the simplicity of the analysis, we have the following terms , assumptions , and facts . We should make it clear that our assumptions are based on users X  general reading habits. Although we do not think about special cases, the ex-perimental results in Section 5 still show the advantages of our model.
Term. Check means the user X  X  reading behavior. Check period means a period when the user is continuously reading the tweets, and check time means the start time of the check period .

Assumption 1 . Users read the tweets from top to bottom, i.e., they read from the latest one to the earliest one. Although the mobile Twitter client starts from the last tweet that was shown to the user, he/she must refresh to get new tweets with the latest one on the top.

Assumption 2 . If users encounter a tweet which they have already read, they will not read the tweets below it.

Assumption 3 . Once users read an interesting tweet, they will retweet it, i.e., they will not read back to retweet a tweet.

Assumption 4 . Assume that time t i and time t j are two adjacent retweets time during one check period ,and t i and t j are the corresponding tweets time, between t i and t j . Because we think he/she is continuously reading the tweets.
Fact 1 . Given a tweet posted at time t i , and it was retweeted at time t i .The check time of this reading behavior must be between t i and t i .
 Fact 2 . If a user retweets a tweet, he/she must have read the tweet.
Fact 3 . Tweets, which are posted after the check time , are not able to be read by the user in this check period . If users refresh to get new tweets, we treat it as a new check period . 3.2 ReadBehavior Model Two Retweeting Behaviors. In the proposed ReadBehavior model, we study the retweets time and the corresponding original tweets time. For example, as-sume that user A was reading the tweets. When he/she found an interesting After that, he/she may continue reading or become idle. Assume that there also exists another retweeting behavior at time t j , and the original tweet C j was time sequence if t i &lt;t j : Scenario 1: t i &lt;t j &lt;t j &lt;t i Scenario 2: t i &lt;t i &lt;t j &lt;t j
Scenario 3: t i &lt;t j &lt;t i &lt;t j
For scenario 1, we show an intuitive example in Fig. 1(a). When the user was reading the tweets, he/she retweeted C 2 at t 2 . Then he/she continued reading the tweets, and retweeted C 5 at t 5 . As the user was continuously reading the tweets, he/she read the tweets posted between t 2 and t 5 . It was not sure whether C
The reading probability is illustrated by Fig. 1(b). According to Fact 2 ,the two retweeting behaviors take place in one check period . The reading probability of every tweet posted between t i and t j (including t i and t j ) is 1 according to Assumption 4 .The check time is between t j and t j according to Fact 1 . Similarly, the reading probabilities of tweets newer than C j are 0 according to Fact 3 . Because the reading probabilities of tweets posted between t j and t j are descending, we assume that the reading probabilities are linearly descending. So given t x which is between t i and t i , then the reading probability of C x in this check period is measured by:
Fig. 2(a) is an example of scenario 2. The user retweeted C 5 at t 5 in a check period . Then he/she stopped reading the tweets. In the next check period ,he/she retweeted C 2 at t 2 . It was not sure whether C 1 , C 3 ,and C 4 were read or missed. Here t i and t j are corresponding to t 5 and t 2 , respectively.
 We can infer that the two retweeting behaviors take place in two check periods . Consequently, we calculate the reading probability for these two check periods respectively, as shown in Fig. 2(b). The black line and the blue line illustrate the reading probability of C x measured by the former check period (where C i was retweeted) and the latter check period (where C j was retweeted), respectively. For the former check period , similar to the analysis of scenario 1, the reading probabilities of tweets posted at t i and t i (if exist) are 1 and 0, respectively. If t &lt;t x &lt;t i , the reading probability of C x is t i  X  t x is between t j and t j , the reading probability of C x is t j t and t j , the reading probability of C x is t x  X  t i t C i are not read according to Assumption 2 . Now we take both the check periods into account. When the reading probability of C x can be measured by two check periods , we will choose the higher one.

To sum up, the reading probability of C x posted between t i and t j is measured by: Fig. 3(a) is an example of scenario 3. Similar to scenario 2, C 6 was retweeted at t in the first check period . C 4 was retweeted at t 4 in the second check period . Here t i and t j are corresponding to t 6 and t 4 , respectively.
The main difference of this scenario fr om scenario 2 is that the retweet time t is just after the tweet time t j . It means that the first check time is between t and t i (just after t j ), as shown in Fig. 3(b). Then similar to scenario 2, the reading probability of C x posted between t i and t j is measured by:
For tweets which are earlier than both of the original tweets, the reading probabilities of them can be measured by earlier check periods , which will be discussed in the following section.
 Three and More Retweeting Behaviors. The above three scenarios are the essential situations. Now we expand them to three and more continuous retweeting behaviors, which are the comb ination of the three scenarios. We can summarize that if t x is between t i and t j , the reading probability of C x can be measured by one of the three scenarios, otherwise, the reading probability of C x can be measured by additional boundary conditions.
 the end time of the dataset. If C x is between two adjacent retweeting behaviors, t and t j are the former tweet time and the latter tweet time, respectively, then the reading probability of C x is measured by Algorithm 1.
 Algorithm 1. Reading probability of tweet C x posted at time t x
With the reading probability of each tweet, we estimate the number of tweets read by a user. Assume that user B is a friend of A , and the number of tweets B posted is n , then the number of tweets read by A from B is measured by: In this section, we will describe the IPR algorithm with our proposed ReadBe-havior model. First of all, we have the following definition: Definition 1. G =( N,E,W ) is a directed graph. N is the set of nodes. E is the set of arcs. W is the set of arc weights. If user i has ever retweeted from user j , then there is a directed arc ( i, j ) between them.

Based on the proposed model, we develop an IPR algorithm, which extends from the well-known PageRank algorithm. PageRank [3] was used by researchers to find influential users in social media. It took both the pairwise influence and the link structure into accoun t. The main difference between IPR and PageRank is the calculation of the arc weight in Definition 1. The arc weight of PageRank is measured by: where S ij is the number of tweets that i has retweeted from j ,and Q j is the number of tweets posted by j .

While the arc weight of IPR is measured by: where S ij is the number of tweets posted by j and retweeted by i ,and Num ij is the estimated number of tweets read by i from j according to Equation 4.
With the directed graph G ,both PageRank and IPR iteratively compute to find influential users. Since G is weighted, the random surfer probability from i to j is measured by w ij To evaluate the effectiveness of our prop osed model, we present the experiments on a large-scale Twitter dataset in this section. 5.1 Twitter Dataset Asetof Twitter data from [6] is prepared for this study. The dataset contains a continuous stream of about 132 million tweets. In order to compare with the work in [1], we also use the tweets with URLs. We get about 3.38 million users posting at least one URL. In the following descriptions, we will use  X  X weets X  to represent  X  X weets with URLs X  in short. Si milarto[1],wechoosetoconcernusers who have at least 7 tweets with URLs, and exclude the invalid users whose user ID cannot be accessed with the usernames. After that, we get 497,782 users with 17,592,586 tweets. We then strike out the isolated users (users that never retweet or are retweeted by others). Finally, we get 74,813 users who post 3,150,334 tweets. Among them, 83,356 pairs of users have retweeting relationships, and the number of retweets is 103,774. 5.2 Comparison of IPR with Other Related Algorithms In this section, we study the effectiveness of IPR in finding influential users. Several related comparison algorithms are conducted, which include:  X  Fol lowerNum , which measures the influence of users by the number of  X  TweetsNum , which measures the influence of users by the number of tweets  X  PageRank , which measures the influence of users taking both link structure Evaluation Method. All the four algorithms can find influential users. How-ever, there is no existing method to dir ectly compare their performances. We use a cross-validation method [20] to compare these algorithms. The method is described as below:
Given four algorithms A , B , C ,and D ,andthesetsofTop-K influential is denoted as:
I Then, the precision of algorithm X is: The recall is: A better algorithm will get a higher precision score and a higher recall score. Because the best algorithm should have the greatest contribution to the criterion set.
 Performance and Analysis. We compare the precision , recall, and F measure four algorithms. Fig. 4 shows the results.

We see from Fig. 4(a) that the precisions of all the algorithms increase when the parameter K increases. In addition, as K increases, the precisions of IPR and PageRank significantly increase, w hereas the precisions of FollowersNum and TweetsNum only increase little. This is because both IPR and PageRank have greater contributions to the criterion set in Equation 7. The greater contributions cause the numerator of Equation 8 to grow at faster rate comparing with the denominator. We also find that the precisions of all the algorithms are low. The reason is that the Top-K influential users discovered by these algorithms are rarely correlated with each other. However, as K increases, the correlation between IPR and PageRank becomes stronger. This also indicates the significant performance increasing of IPR and PageRank .

Fig. 4(b) shows the recalls of different algorithms. Surprisingly, as K increases, the recalls of FollowersNum and TweetsNum decrease. We note that the decrease in recall can be attributed to two main factors: first, both algorithms have little contribution to the criter ion set, and second, both algorithms do not correlate with other algorithms. So these two factors cause the value of the numerator of Equation 9 to be small. We also observe that the recalls of IPR and PageRank are really high, which indicates that most elements of the criterion set are consist of the influential users discovered by the two algorithms.
By combining precision and recall, we get a comprehensive measurement-F measure-of those algorithms, as shown in Fig. 4(c). It is clear that IPR out-performs other algorithms in most cases except K = 450. When checking in detail, we find that the influential users (discovered by IPR ), whose ranks are between 400 and 450, post and retweet small number of tweets containing URLs. Moreover, we find that IPR and PageRank significantly outperform Follower-sNum and TweetsNum in all of the measurements, which suggests that both the number of followers and the number of tweets may not be good measures of influence.
We also compare the average precision , recall, and F measure of different algorithms. Fig. 5 clearly shows that IPR outperforms other algorithms. All the experimental results verify the effectiveness of the proposed model. This is because the pairwise influence measured by ReadBehavior is more ac-curate than traditional methods, and this leads to more precision results of the global influence. The number of messages on the micro-blog space is large, and it is almost im-possible for users to catch up with all the messages. Motivated by the fact, this paper focuses on proposing a ReadBehavior model to measure the reading probabilities of tweets posted by a user X  X  friends according to his/her retweeting behaviors. To the best of our knowledge, this work is the first to measure the reading probabilities of tweets. To illustrate the effectiveness of our proposed model, an I mproved P age R ank ( IPR ) algorithm is proposed to find influential users on the whole network. We find from the experimental results that IPR outperforms its competitors, which indi cate the effectiveness of our model. We should emphasize that the model not only can be used to measure influential users, but also can be used to a lot of applications which capture the reading behaviors of users.

Nevertheless, as the first attempt, it still has spaces for improvement. First, as a preliminary model, the linear approximation is used due to its simpleness. In the future, a more appropriate method should be used to better simulate users X  reading behaviors. Second, the cu rrent model takes only the retweeting behaviors into account. So the reading probability cannot be measured by our model in the extreme situation when a use r never retweets others. Although this does not impact the calculation in the current application, in our future work, we consider taking other user information into account. User behaviors, such as reply and mention, could also contribute to the reading probability estimation. Last but not least, Twitter Lists and Groups may be other factors that influence the reading probability. This would be an exciting direction for future work. Acknowledgments. This work is funded by the National Program on Key Ba-sic Research Project (973 Program, Grant No. 2013CB329605), National Nat-ural Science Foundation of Chin a (NSFC, Grant Nos. 60873237, 61300178 and 61003168), and Beijing Higher Education Young Elite Teacher Project (Grant No. YETP1198).

