 REGULAR PAPER Bertrand Co  X  uasnon Abstract We will show in this paper one of the numerous interests of designing a generic recognition system, i.e. the possibility of producing either general or specific systems. We propose the Description and Modification of Segmenta-tion (DMOS) method, which is made of a new grammati-cal language (Enhanced Position Formalism X  X PF) and an associated parser able to deal with noise. From an EPF de-scription of a kind of document structure, a new recognition system is produced by compilation. This method has been successfully used to produce recognition systems on mu-sical scores, mathematical formulae and even tennis courts in videos. This DMOS generic method separates knowledge from program. Therefore, for a same kind of document like table structures, it is possible to define with EPF, more or less specific descriptions to produce more or less specific recognition systems. For example, we have been able to pro-duce a general recognition system of table structures. It can recognize the hierarchical organization of a table made with rulings, whatever the number/size of column/rows and the deep of the hierarchy contents in it, as soon as the document has a not too bad quality (no missing rulings for example). We will present the way the description is done using EPF to be general enough to recognize very different table orga-nizations. With the same DMOS generic method, we have also been able to easily define a specific recognition sys-tem of the table structure of quite damaged military forms of the 19th century. This specific description was necessary to compensate some missing informations concerning the table structure of those military forms, due to a very bad quality or hidden part of the table. This system has been success-fully validated on 88,745 images, showing that this DMOS generic method can be used at an industrial level.
 Keywords Recursive table recognition  X  Archives document  X  Grammar  X  Generic system  X  Structured documents 1 Introduction Literature shows that structured document recognition sys-tems are long and difficult to develop. Moreover, we usually find systems specifically developed for one kind of document X  X or example mathematical formulae X  X hich cannot be easily adapted to another kind of document like ta-ble forms. A new kind of document often means a complete development of a new recognition system. This is a real lost of energy which can be avoided by defining a generic sys-tem: a generator of recognition systems for structured docu-ments.
 change from one kind of document to another, only what really changes: the apriori knowledge, which can be seen as a description of each kind of document. To be able to change in an easy way this apriori knowledge, we propose to separate it from program. Indeed, if it is not separated, this knowledge is diffused, split into the code, and when you want to change the knowledge, you have in fact to change the whole code, so the whole system.
 of Segmentation (DMOS) a generic recognition method for structured documents. This method, presented in various pa-pers [1 X 3], is made of:  X  The grammatical formalism Enhanced Position Formal- X  The associated parser, which is able to change the parsed  X  The equivalent of lexical parsers to detect in the image The parsed structure is made of all the detected line seg-ments and the connected components (for symbols) of the image.
 automatic generator of structured document recognition sys-tems. Using this generator, adaptation to a new kind of doc-ument is then simply done by defining a description of the document with an EPF grammar. This grammar is compiled to produce a new structured document recognition system. Each system can then use a classifier to recognize symbols that can be seen as characters.
 classifier when needed, we produced automatically by com-pilation various recognition systems: one for musical scores [ 3 ], one for mathematical formulae [ 5 ], and one to recognize tennis courts in videos [ 1 ].
 ing a new system from scratch for each new kind of docu-ment. In this article, we will present another great advantage of a generic recognition system: the possibility to produce, for a kind of document, either a general recognition system or a specific recognition system, according to the document quality.
 the DMOS method, we defined a general EPF description of what a table made with rulings is. This description is not only a graphical description but also a syntactical description of the hierarchical organization of such a table. This descrip-tion is general enough to produce a recognition system able to detect and recognize this table organization whatever the number or size of rows or columns and whatever the deep of the recursive organization. However, this system will only work if all the information (here the rulings) exists in the analysed image document. In fact, all information is present when documents have a quite good quality.
 ments, it is not more possible to apply this recognition sys-tem produced by a general description of tables. Indeed, on archives documents, table structures can be hidden by pieces of papers, rulings can be hardly broken by a bad printing quality, etc. It is then necessary to introduce more apri-ori knowledge to compensate this lack of information. A generic method is then very useful to define a specific recog-nition system. With the DMOS method, we produced a spe-cific recognition system for military forms of the 19th cen-tury, found in French Archives. This system recognition has been validated on 88,745 images, showing that the DMOS generic method can be used at an industrial level.
 cific description for table structures. These are examples to illustrate the ability of the DMOS generic method to define more or less precise description according to the quality of documents. Of course, this kind of continuum between gen-eral and precise description can be applied on other kinds of document.
 document analysis. This study will show that the grammati-cal formalisms for document recognition found in the litera-ture do not have enough expressiveness. We then present the DMOS generic method and the EPF language for describ-ing document structure. As we illustrate on table structure the interest of the DMOS method for defining more or less general descriptions, in Sect. 3 we study the related work on table structure recognition. It is followed by a presenta-tion of the general description of recursive table structure done with EPF. After presenting various difficulties of rec-ognizing the table structure of the military form of the 19th century, we show the specific description we have done with EPF to produce a specific recognition system. We end this paper by results on a large validation on 88,745 images. 2 DMOS: a generic method for structured document recognition Before presenting the DMOS generic method, we start this section by related work on generic methods in structured document recognition and on knowledge formalization. 2.1 Related work on generic methods for structured document recognition We can find, in the literature, various document recognition systems, but usually those systems are specifically adapted to one kind of document, for example mathematical formu-lae. It is impossible to adapt them to a new kind of document, for example table structure, without re-writing them almost completely.
 they do not introduce apriori knowledge in a formal way. As knowledge is not formalized, it is not possible to separate it from the rest of the program. And if apriori knowledge is not separated, when it needs to be changed in a domain specific recognition system to adapt it to another domain, a large part of program code needs to be re-written.
 used in industry. We can find some examples like smart-Fix [ 6 ], which offers an industrial framework for designing new recognition systems through a graphical interface. But it seems limited to business document domain like invoices, letters, forms, etc. and could not be applied to more graphi-cal documents like mathematical formulae without building a specific module (defined almost from scratch) for this kind of document. Then it could be inserted in the framework to be called as an independent module, like the already existing table recognition module.
 trial systems. In [ 7 ] is presented a way a postal address read-ers is made adaptive. These adaptive properties are impor-tant to make the reader system more accurate and to make it rapidly usable in many different countries with different alphabets. But the way it is adaptive is too specific to make it usable on very different documents.
 physical structure of a document. It proposes a first-order rule learning system based on a logical labelling of seg-mented blocks of text. It has been applied on scientific jour-nals for document classification and understanding. This system could be applied to other kind of journals or letters, but once again could not be used on other kind of documents like table structures for example.
 in [ 9 ] (DocMining) or in [ 10 ]. They propose architectures to plug various document image processing together to pro-duce a document analysis system. These architectures allow to define an arrangement in any sequences of processing and offer a way to reuse some software components. But they do not propose a way to define complex knowledge needed for structured document analysis. When complex knowledge is needed in such frameworks, it will be introduced in a ded-icated way, through new specific modules (defined almost from scratch) for each new kind of documents, like mathe-matical formulae or table structure.
 ing strongly apriori knowledge are not: they are very do-main specific.
 been done to build really generic tools. Mao et al. [ 12 ] con-sider that document structure analysis systems have been limited mainly because:  X  they have not been based on formal models,  X  much of the work on logical structure analysis of docu- X  and they fail in the presence of noise or ambiguity, erature are usually bi-dimensional extensions of mono-dimensional grammars defined for object and document recognition.
 siveness with a quite complex syntax as production rules have to be build with trees.
 as they are a generalization of Tree and Web grammars. However, they also suffer from a complex syntax due to the way connections are defined.
 ness. They have been used for example on musical scores and mathematical formulae recognition [ 16 ]. But one impor-tant problem  X  like others formalisms  X  is a complex defini-tion of production rules, as they are made with graphs. This makes difficult an implementation of a graph grammar when knowledge is quite complex.
 too difficult to implement because of a complex syntax. Moreover, no grammatical formalism and their associated parsers can deal with noise. All of them are used in a bottom X  X p manner to syntactically confirm a previously made segmentation. They do not propose a solution to in-troduce context in segmentation. Therefore, we need a new grammatical formalism with a syntax as simple as possible while having an important expressiveness. 2.2 Presentation of the EPF formalism The DMOS method is made of a grammatical language to describe documents (EPF) and an associated parser. This parser is able to make a contextual segmentation to improve the recognition quality.
 pose to extend classical mono-dimensional grammars to bi-dimensional. We choose to extend Definite Clause Gram-mars (DCG) [ 17 ], a formalism for mono-dimensional gram-mars which can be translated in the Prolog language. dimensional grammars, we defined a formalism on two kinds of terminals: line segments and pixel arrays (compo-nents, connected or not, which represent a symbol). Those terminals allow to represent the most important part of ele-ments which can be found in a structured document.
 mono-dimensional grammars like the following.
 Position Operator (encapsulated by AT ): Factorization Operator (##, in association with the posi-Save Operators ( ---&gt; and &lt;---): directional relation between A and B . This is very important to be able to describe a document. This bi-directional rela-tion is possible if we can use the same instance of A . There-fore, we propose to save (using the operator ---&gt; stance of a terminal or a non-terminal. This backup of A gives then the possibility to refer (using the operator &lt;---much as necessary.
 with the following rule: where segH and segV will match horizontal or vertical line segments in the image. segLeftSide is the label to save the left vertical line segment of the rectangle.
 operator ( @ ) in Prolog (used for example in [ 18 ]), they are much more powerful thanks to two elements:  X  ---&gt; makes a save of the non-terminal including the at- X  The scope of a label is limited to the static body of a tor. It allows to specify the scope of this label. All the rules and sub-rules can then use this label to refer to the same non-terminal. We present here an example of a rule which describes the geometric diagram of Fig. 1 .Therule rectan-gle is exactly the same as before.
 Declaration Operator ( DECLARE ): Space Reduction Operator (IN ... DO) : EPF offers also the IN DO operator allows to limit the recursive description in the part of the image under the square root. The position operator rightSqrt specifies the position of expression rel-atively to termSqrtSign .
 Terminals Operators (TERM SEG and TERM CMP) to pass elements that must not be recognized (mostly noise). This pre-condition is also very useful to select for example the longest line segment. The parser will search for the near-est element having the pre-condition, in the area defined by the position operator. The &lt;PostCond&gt; argument is a post-condition which must be verified by the element found with the pre-condition. &lt;Label&gt; is used to build the result (the ter-minal) found in &lt;Seg&gt; or &lt;Comp&gt; .
 Find Operator (FIND ... UNTIL) until it applies. To deal with noise, we propose this oper-ator FIND which transposes the parsing: a rule is tried on each element of the structure until it match or until a stop condition.
 very different kinds of documents even if there is not a pre-ferred reading order. Descriptions can use recursivity and bi-directional relations between objects. Moreover, as EPF is an extension of DCG (used for natural language analysis), it is possible to use its ability to define syntactical or seman-tical knowledge. 2.3 Associated parser The EPF language allows to define a description of a doc-ument. From this description, we produce by compila-tion, a parser with specific properties needed for parsing bi-dimensional documents. Compared to classical mono-dimensional parsers, the main properties of the bi-dimen-sional parser we develop are as follows:  X  Changing the parsed structure during parsing for contex- X  Detecting of the next element to parse. Indeed, in clas- X  Dealing with noise.
 finding the next element to parse even when there is a lot of noise in the parsed structure. To do so, we propose to work on two levels [ 1 ]:  X  The first level is for terminals. We use the pre-condition  X  The second level is for non-terminals, with the operator description is written in LambdaProlog [ 19 ]. It is then an LL(k) parser that will give a solution only if a global match-ing is possible. This also improves the way the parser deals with noise.
 able to produce various recognition systems on different kinds of document: one for musical scores [ 3 ], one for math-ematical formulae [ 5 ], and one to recognize tennis courts in videos [ 1 ]. In next sections, we will show one more exam-ple of the DMOS method genericity on another kind of doc-ument: table structures. We will also present another great advantage of a generic recognition system: the possibility to produce, for a kind of document, either a general recogni-tion system or a specific recognition system, according to the quality of the document. Before that, we study related work on table structure recognition. 3 Related work on table structure recognition General and specific descriptions of table structures we will present after this section, are done for tables with rulings. We saw in Sect. 2.1 about related work on generic meth-ods that structured document recognition systems are usu-ally specifically adapted to one class of document, even if some of them can offer adaptability. Indeed, adaptive sys-tems are usually limited inside a class of document. We con-sider that this lack of genericity is due to a lack of formal models of apriori knowledge. This is also the case in table structure recognition, where we can find adaptive methods, but they are limited to an adaptation inside the class of table structure documents.
 methods for analysing table-forms structures [ 20 , 21 ]. Meth-ods using rulings are usually limited to the detection of cells boundaries, without really trying to understand the table or-ganization. Some methods (for example [ 22 , 23 ])usealow-level detection of specific points like crossings, corners, etc. Those methods are not very robust when rulings are bro-ken. Some authors, like in [ 24 ], proposed to work on a re-duced image to be able to deal with those broken rulings. However, this solution is limited to small breaks. For a big-ger tolerance, Xingyuan et al. [ 25 ] proposed a rule-based approach, but this method cannot deal with a partial hid-ing of the table-form structure like we can have in the mil-itary forms. On old documents, we only found work done on British and US census [ 26 ], but the proposed method is limited to forms with no variation in cells size according to a model. We could not find in the literature any results on old, damaged and partially hidden forms, like we have in military forms.
 based on rulings. They are less concerned with problems re-lated to image analysis, like segmentation, as they do not take systematically image as input. For example [27 X 29] use plain ascii text. Some methods use text blocks like [30 X  32]. Various systems have been proposed to detect columns, lines and headers: graph representation of cells relationship [ 28 , 31 ], probability optimisation on distance between text blocks [ 32 ], heuristics on block text organization [ 30 ], three different approach for each element in [ 36 ]. A graph gram-mar has been proposed in [ 34 ]. All those systems do not seem able to extract recursive organization which can be found in tables. 4 General description for recursive table structures recognition 4.1 Principle The general description for table we propose is, for the mo-ment, only defined on the rulings organization. We consider in this first description that a table structure can be organized in the following four ways:  X  A bi-dimensional table, made at minimum of four cells  X  An horizontal form, in fact an horizontal mono- X  A vertical form, in fact a vertical mono-dimensional ta- X  A frame, in fact a cell.
 sively: each cell in a bi-dimensional table can contain one of the four table organizations. This table description is of course independent of the number of cells, rows, columns, cells size, and depth of recursion. We propose to find the first level in a recursive table structure by searching the biggest cross made by rulings (line segments). These two line seg-ments are then used to select rulings which are involved in the first level of the table. 4.2 General EPF description The definition of table we proposed in the previous section can be expressed using EPF. From the EPF description, we will be able to produce by compilation a recognition system for these kind of tables.
 ready to compile. For reading reasons, they are presented without the synthetic attributes used to build the result struc-ture. The other needed attributes are still presented (identi-fiers starting with a capital letter).
 table structure which can be found in an image. This rule can be used by another rule to detect all the tables of an image. line segment touching the longest horizontal line segment, and store them under labels longestVseg and longestHseg . firstLastHseg will label the upper horizontal line segment (firstHseg) touching longestVseg with the same size as longestHseg and will label the down horizontal line segment (lastHseg) . All those labelled line segments will then be used in tableStructure to detect the table. Hseg with the value labelled by longestHseg . This is done using the operator &lt;-+-which is just a line segment typed version of &lt;---. The other typed version of &lt;---is components. Vseg gets the value labelled by longestVseg .At the upperTip of Vseg , TERM SEG looks for an horizontal line segment with the same length as Hseg . This is done by the pre-condition condSameLengthHSeg and this line segment is labelled by firstHseg . The argument first is used to build the result (the terminal) found in Hseg1 (this synthetic attribute is then not used here for reading reasons). tion we presented in the previous section. Its description starts by the declaration of four labels which will be initialised in the rule frame with the help of four previously declared labels: longestVseg , longestHseg , firstHseg and lastHseg . The eight labels are used in insideTableStruc-ture to detect the recursive table. description: the horizontal rulings making each border of this first line. These rulings are then stored in the synthesised attributes given in the following rule: sideLeft is used to instanciate Vseg1 . The attributes Vseg1 , Vseg2 , HsegTop and HsegBot represent the border of the cell. They are given to tableIn-Cell to recognize a recursive table, using the IN ... operator. insideTableStructure after the instanciation of the new four border labels in the same way the frame rule did it in tableStructure . The recursion stops when insideTa-bleStructure is empty. The other rules of the general description of a table follow the same principles. 4.3 Results From one general table description made in EPF, we pro-duced by compilation a recognition system. We present some examples (five different images) of results produced by this system. We give the detected table structure with an im-age for each level of recursion. Even if we represent each cell by a rectangle, the recognition system is of course able to lo-cate precisely the rulings which are the border of the cell. the first level is a table2D with six rows and two columns, in the second level there is two table2D (dark grey, one 3  X  and one 2  X  6) and four horizontalTable1D (light grey), and in the third level one horizontalTable1D .
 giveninFigs. 3 and 4 .
 thing, can detect a table whatever its position in the image. Figure 5 gives the first level of the detected table in the page 222 of the ICDAR X 97 proceedings.
 old documents. Figure 6 gives the first and second level on a military form of the 19th century found in French Archives. Even if rulings are broken, not rectilinear, with a poor quality, intersection with handwritten text, some skew, etc. the system can detect at the first level a table2D rows and two columns). At the second level, we presented only the table2D : a the top-right a table of two rows and two columns, in the middle-right a table of three rows and two columns and in the bottom-right a table of two rows and two columns. Broken rulings are correctly detected with the help of the line segments extractor [ 4 ]attheimage level.
 EPF produce, with the DMOS method, one system that can recognize different kind of table even in a poor-quality im-age. Moreover, this description can call in each cell, for ex-ample the mathematical formulae EPF axiom, to get a de-scription (and a recognition system) of a table of mathemat-ical formulae.
 old documents like the military form of Fig. 6 , it is not always the case. Indeed, if a military form is much more damaged than the one of Fig. 6  X  which appends a lot on old documents  X  the general table description will not recognize correctly the structure, simply because some structural information is missing. This is why we propose to define a specific description, with more apriori knowledge to compensate some lack of information in images (missing rulings for example). 5 Specific description for military form of the 19th century recognition 5.1 A difficult document These documents are made of quite damaged military enrolment form of the 19th century, found in French Archives. The size of the cells change from year to year, making impossible to use a fixed model to recognize the structure. There is a lot of pasted sheets of paper which hide the form structure, sometimes those papers contains also a table structure, we can find stamps on the document, ink can bleed through the paper, etc. Due to the bad quality of the document, rulings are really often broken (Fig. 7 ). All this makes the recognition of the initial table structure a lot more difficult.
 conditions making it warp. This is a problem because a lot of documents are digitised with a camera without pressing the paper with a glass. Therefore, in the image, lines are trans-formed into curves.
 ical informations. For individual privacy protection, the French law makes private those medical informations during 150 years. Therefore, these informations make impossible a public diffusion of the forms. With the recognition of cells positions, it is possible to automatically hide the medical cells to make other cells available to public.
 handwritten name to do handwriting recognition to make an automatic access to these documents by handwritten content.
 difficulties of old and archives document recognition. 5.2 Specific EPF description We show in Sect. 4.3 that the general description could be used on military forms. But it is possible only if the doc-ument is not too damaged. When part of the structure is hidden by pasted papers or when gaps in rulings are too large, the general description will not be usable as there are some missing information (hidden rulings). In this case, it is necessary to introduce more knowledge in the system to compensate this lack of information. This introduction cor-responds to a specific description of the document when the whole structure is visible.
 easily this specific description of military forms to get a spe-cific recognition system. This illustrates the strong advan-tage of a generic recognition system: the possibility of defin-ing a general or a specific system according to the document quality.
 rolment forms describes its rulings structure. It is based on one quite stable information: the vertical central ruling. As in the general description, we present only the beginning of the grammar without the synthetic attributes used to build the result structure. The axiom of the grammar is: choose to describe it only by its four corners (posi-tioned relatively to the centralRuling with the help of the label centralVseg ) to recognize it even with hidden rulings. we want to recognize. All of them are also positioned relatively to the centralRuling . form. The grammar was then compiled to automatically pro-duce a recognition system. In this grammatical description of the documents, the position operators define very wide re-gions (length and width of several centimetres). It allows the system to recognize the form even with an important vari-ation in the size of the structure. The sizes of the position operators do not have to be precisely defined because the associated parser will try to find the global structure in the image. This is a real advantage because the grammar needs very little tuning.
 form if it does not fit the grammatical description. Like a compiler, it is able to explain the reason of the reject. This is very useful for building the grammar: we need to introduce more knowledge only in the failed rules to compensate a lack of information in the image. 5.3 Results We have first successfully tested this recognition system on 5,268 images [ 35 ]. Then we made another test, with-out changing the grammar, on 88,745 forms. These images came from 140 registers between 1878 and 1900 from the Archives d  X  epartementales de la Mayenne and73registers between 1878 and 1885 from the Archives d  X  epartementales des Yvelines .
 The images were rejected because they were so damaged that they could not be processed even by a human opera-tor (missing parts, wrong documents, etc.), or because of a structural incorrectness due to physical defects. Eighty-seven thousand six hundred and ninety-six images had a correct structure detected (98.82%) with absolutely no false recognition. This zero-error rate is really important in a con-text of huge quantities of documents found in the Archives (where the measure unit is km of shelves). We considered a structure recognition as correct when the borders of the needed cells are positioned with a precision of 1 mm. An ex-ample of the structure recognition is given in Fig. 7 .Table 1 sums up the results of this experiment.
 2,000  X  3,000 pixels). To process an image it takes around 40 s (25 s for image processing and 15 s for parsing) on a Sun Ultra 60.
 protected information by using the geometric annota-tions automatically produced) are publically available on the Archives d  X  epartementales de la Mayenne web site (at http://www.cg53.fr/Fr/Archives/ follow Archives en ligne then Conscrits de la Mayenne ).
 worked on the handwriting recognition of handwritten last names in these documents. We have been able to produce a system which automatically selects the right documents from a textual request on the name. Moreover, we defined a platform for managing all annotations produced by docu-ment image analysis [ 36 ]. The platform with an automatic access by handwritten last names on those military forms is now available at the Archives d  X  epartementales des Yvelines in the reading room. It will be open on Internet in 2005 (a link will be found on http://imadoc-ar.irisa.fr as soon as available). At now, 28,000 pages are open to public (Fig. 8 ). In 2005, 150,000 pages will then also be available. 6Conclusion Building a generic system is a great challenge for document image analysis. We presented DMOS, a generic recognition method for structured documents. This method is made of a grammatical formalism (EPF) and an associated parser, which allows to modify the parsed structure during parsing to deal with segmentation problems. The genericity of this method has been validated by the number of kinds of docu-ments it has been applied on: musical scores, mathematical formulae, recursive table structures, archives documents like military forms of the 19th century or naturalization decrees of the 19th century [ 36 ], and even tennis courts in videos. course the possibility to avoid rewriting a new recognition system from scratch from one kind of document to another. The adaptation is limited to the definition (using the EPF language) of apriori knowledge corresponding to a descrip-tion of the kind of document.
 ture of generic recognition systems: the possibility to define either a general description or a specific description accord-ing to the document quality. We illustrated this feature by presenting a general description of recursive table structure build on rulings. From this general description, a recognition system has been produce by compilation. Some examples of recognition of different table organizations have been pre-sented. We have seen that when the document is too dam-aged, like on military forms of the 19th century with pieces of paper hiding the structure, this general description could not be used.
 forms to produce a specific recognition system that is able to deal with the damaged documents. This specific description was possible and easy to do, thanks to the genericity of the DMOS method. This specific recognition system has been validated on 88,745 images. This experimentation demon-strates the possibility of using DMOS at an industrial level. handwritten last names on those military forms. This plat-form uses the results produced by the specific recognition system and is now available at the Archives d  X  epartementales des Yvelines in the reading room. It will be open on In-ternet in 2005 (a link will be found on http://imadoc-ar.irisa.fr , as soon as available).
 ning of 2005, 150,000 pages will then be available. References
