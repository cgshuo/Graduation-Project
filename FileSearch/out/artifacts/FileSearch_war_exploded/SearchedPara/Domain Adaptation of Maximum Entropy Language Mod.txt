 In large vocabulary speech recognition, a language model (LM) is typically estimated from large amounts of written text data. However, recogni-tion is typically applied to speech that is stylisti-cally different from written language. For exam-ple, in an often-tried setting, speech recognition is applied to broadcast news, that includes introduc-tory segments, conversations and spontaneous in-terviews. To decrease the mismatch between train-ing and test data, often a small amount of speech data is human-transcribed. A LM is then built by interpolating the models estimated from large corpus of written language and the small corpus of transcribed data. However, in practice, differ-ent models might be of different importance de-pending on the word context. Global interpola-tion doesn X  X  take such variability into account and all predictions are weighted across models identi-cally, regardless of the context.
 In this paper we investigate a recently proposed Bayesian adaptation approach (Daume III, 2007; Finkel and Manning, 2009) for adapting a con-ditional maximum entropy (ME) LM (Rosenfeld, 1996) to a new domain, given a large corpus of out-of-domain training data and a small corpus of in-domain data. The main contribution of this paper is that we show how the suggested hierar-chical adaptation can be used with suitable pri-ors and combined with the class-based speedup technique (Goodman, 2001) to adapt ME LMs in large-vocabulary speech recognition when the amount of target data is small. The results outper-form the conventional linear interpolation of back-ground and target models in both N -grams and ME models. It seems that with the adapted ME models, the same recognition accuracy for the tar-get evaluation data can be obtained with 50% less adaptation data than in interpolated ME models. Maximum entropy (ME) modeling is a framework that has been used in a wide area of natural lan-guage processing (NLP) tasks. A conditional ME model has the following form: where x is an outcome (in case of a LM, a word), h is a context (the word history), and x 0 a set of all possible outcomes (words). The functions f i are (typically binary) feature functions. During ME training, the optimal weights  X  i corresponding to features f i ( x,h ) are learned. More precisely, find-ing the ME model is equal to finding weights that maximize the log-likelihood L ( X ;  X ) of the train-ing data X . The weights are learned via improved iterative scaling algorithm or some of its modern fast counterparts (i.e., conjugate gradient descent).
Since LMs typically have a vocabulary of tens of thousands of words, the use of a normalization factor over all possible outcomes makes estimat-ing a ME LM very memory and time consuming. Goodman (2001) proposed a class-based method that drastically reduces the resource requirements for training such models. The idea is to cluster words in the vocabulary into classes (e.g., based on their distributional similarity). Then, we can decompose the prediction of a word given its his-tory into prediction of its class given the history, and prediction of the word given the history and its class : Using such decomposition, we can create two ME models: one corresponding to P ( C ( w ) | h ) and the other corresponding to P ( w | h,C ( w )) . It is easy to see that computing the normalization factor of the first component model now requires only looping over all classes. It turns out that normalizing the second model is also easier: for a context h,C ( w ) , we only need to normalize over words that belong to class C ( w ) , since other words cannot occur in this context. This decomposition can be further extended by using hierarchical classes.

To avoid overfitting, ME models are usually smoothed (regularized). The most widely used smoothing method for ME LMs is Gaussian pri-ors (Chen and Rosenfeld, 2000): a zero-mean prior with a given variance is added to all feature weights, and the model optimization criteria be-comes: where F is the number of feature functions. Typi-cally, a fixed hyperparameter  X  i =  X  is used for all parameters. The optimal variance is usually estimated on a development set. Intuitively, this method encourages feature weights to be smaller, by penalizing weights with big absolute values. Recently, a hierarchical Bayesian adaptation method was proposed that can be applied to a large family of discriminative learning tasks (such as ME models, SVMs) (Daume III, 2007; Finkel and Manning, 2009). In NLP problems, data often comes from different sources (e.g., newspapers, web, textbooks, speech transcriptions). There are three classic approaches for building models from multiple sources. We can pool all training data and estimate a single model, and apply it for all tasks. The second approach is to  X  X npool X  the data, i.e, only use training data from the test domain. The third and often the best performing approach is to train separate models for each data source, apply them to test data and interpolate the results.
The hierarchical Bayesian adaptation method is a generalization of the three approaches de-scribed above. The hierarchical model jointly optimizes global and domain-specific parameters, using parameters built from pooled data as priors for domain-specific parameters. In other words, instead of using smoothing to encourage param-eters to be closer to zero, it encourages domain-specific model parameters to be closer to the corresponding global parameters, while a zero mean Gaussian prior is still applied for global pa-rameters. For processing test data during run-time, the domain-specific model is applied. Intu-itively, this approach can be described as follows: the domain-specific parameters are largely deter-mined by global data, unless there is good domain-specific evidence that they should be different. The key to this approach is that the global and domain-specific parameters are learned jointly, not hierarchically. This allows domain-specific pa-rameters to influence the global parameters, and vice versa. Formally, the joint optimization crite-ria becomes: L hier ( X ;  X ) = where X d is data for domain d ,  X   X  ,i the global parameters,  X  d,i the domain-specific parameters,  X   X  the global variance and  X  variances. The global and domain-specific vari-ances are optimized on the heldout data. Usually, larger values are used for global parameters and for domains with more data, while for domains with less data, the variance is typically set to be smaller, encouraging the domain-specific parame-ters to be closer to global values.

This adaptation scheme is very similar to the ap-proaches proposed by (Chelba and Acero, 2006) and (Chen, 2009b): both use a model estimated from background data as a prior when learning a model from in-domain data. The main differ-ence is the fact that in this method, the models are estimated jointly while in the other works, back-ground model has to be estimated before learning the in-domain model. In this section, we look at experimental results over two speech recognition tasks. 4.1 Tasks Task 1: English Broadcast News. This recog-nition task consists of the English broadcast news section of the 2003 NIST Rich Transcription Eval-uation Data. The data includes six news record-ings from six different sources with a total length of 176 minutes.

As acoustic models, the CMU Sphinx open source triphone HUB4 models for wideband (16kHz) speech 1 were used. The models have been trained using 140 hours of speech.

For training the LMs, two sources were used: first 5M sentences from the Gigaword (2nd ed.) corpus (99.5M words), and broadcast news tran-scriptions from the TDT4 corpus (1.19M words). The latter was treated as in-domain data in the adaptation experiments. A vocabulary of 26K words was used. It is a subset of a bigger 60K vocabulary, and only includes words that occurred in the training data. The OOV rate against the test set was 2.4%.

The audio used for testing was segmented into parts of up to 20 seconds in length. Speaker diarization was applied using the LIUM SpkDiarization toolkit (Del  X  eglise et al., 2005). The CMU Sphinx 3.7 was used for decoding. A three-pass recognition strategy was applied: the first pass recognition hypotheses were used for calculating MLLR-adapted models for each speaker. In the second pass, the adapted acoustic models were used for generating a 5000-best list of hypotheses for each segment. In the third pass, the ME LM was used to re-rank the hypotheses and select the best one. During decod-ing, a trigram LM model was used. The trigram model was an interpolation of source-specific models which were estimated using Kneser-Ney discounting.
 Task 2: Estonian Broadcast Conversations.
 The second recognition task consists of four recordings from different live talk programs from three Estonian radio stations. Their format con-sists of hosts and invited guests, spontaneously discussing current affairs. There are 40 minutes of transcriptions, with 11 different speakers.
The acoustic models were trained on various wideband Estonian speech corpora: the BABEL speech database (9h), transcriptions of Estonian broadcast news (7.5h) and transcriptions of radio live talk programs (10h). The models are triphone HMMs, using MFCC features.

For training the LMs, two sources were used: about 10M sentences from various Estonian news-papers, and manual transcriptions of 10 hours of live talk programs from three Estonian radio sta-tions. The latter is identical in style to the test data, although it originates from a different time period and covers a wider variety of programs, and was treated as in-domain data.

As Estonian is a highly inflective language, morphemes are used as basic units in the LM. We use a morphological analyzer (Kaalep and Vaino, 2001) for splitting the words into mor-phemes. After such processing, the newspaper corpus includes of 185M tokens, and the tran-scribed data 104K tokens. A vocabulary of 30K tokens was used for this task, with an OOV rate of 1.7% against the test data. After recognition, morphemes were concatenated back to words.

As with English data, a three-pass recognition strategy involving MLLR adaptation was applied. 4.2 Results For both tasks, we rescored the N-best lists in two different ways: (1) using linear interpolation of source-specific ME models and (2) using hi-erarchically domain-adapted ME model (as de-scribed in previous chapter). The English ME models had a three-level and Estonian models a four-level class hierarchy. The classes were de-rived using the word exchange algorithm (Kneser and Ney, 1993). The number of classes at each level was determined experimentally so as to op-timize the resource requirements for training ME models (specifically, the number of classes was 150, 1000 and 5000 for the English models and 20, 150, 1000 and 6000 for the Estonian models). We used unigram, bigram and trigram features that occurred at least twice in the training data. The feature cut-off was applied in order to accommo-date the memory requirements. The feature set was identical for interpolated and adapted models.
Adapta-tion data (No of words) 147K 2 e 8 3 e 5 5 e 7 2 e 7 2 e 6 292K 2 e 8 5 e 5 5 e 7 2 e 7 2 e 6 591K 2 e 8 1 e 6 5 e 7 2 e 7 2 e 6 1119K 2 e 8 2 e 6 5 e 7 2 e 7 5 e 6 104K 5 e 8 3 e 5 5 e 7 1 e 7 2 e 6 Table 1: The unnormalized values of Gaus-sian prior variances for interpolated out-of-domain (OD) and in-domain (ID) ME models, and hierar-chically adapted global (*), out-of-odomain (OD) and in-domain (ID) models that were used in the experiments.

For the English task, we also explored the ef-ficiency of these two approaches with varying size of adaptation data: we repeated the exper-iments when using one eighth, one quarter, half and all of the TDT4 transcription data for interpo-lation/adaptation. The amount of used Gigaword data was not changed. In all cases, interpolation weights were re-optimized and new Gaussian vari-ance values were heuristically determined.

The TADM toolkit 2 was used for estimating ME models, utilizing its implementation of the conju-gate gradient algorithm.

The models were regularized using Gaussian priors. The variance parameters were chosen heuristically based on light tuning on develop-ment set perplexity. For the source-specific ME models, the variance was fixed on per-model ba-sis. For the adapted model, that jointly models global and domain-specific data, the Gaussian pri-ors were fixed for each hierarchy node (i.e., the variance was fixed across global, out-of-domain, and in-domain parameters). Table 1 lists values for the variances of Gaussian priors (as in equa-tions 3 and 4) that we used in the experiments. In other publications, the variance values are often normalized to the size of the data. We chose not to normalize the values, since in the hierarchical adaptation scheme, also data from other domains have impact on the learned model parameters, thus it X  X  not possible to simply normalize the variances.
The experimental results are presented in Table 2. Perplexity and word error rate (WER) results of the interpolated and adapted models are compared. For the Estonian task, letter error rate (LER) is also reported, since it tends to be a more indicative measure of speech recognition quality for highly inflected languages. In all experiments, using the adapted models resulted in lower perplexity and lower error rate. Improvements in the English ex-periment were less evident than in the Estonian system, with under 10% improvement in perplex-ity and 1-3% in WER, against 15% and 4% for the Estonian experiment. In most cases, there was a significant improvement in WER when using the adapted ME model (according to the Wilcoxon test), with and exception of the English experi-ments on the 292K and 591K data sets.
 The comparison between N -gram models and ME models is not entirely fair since ME models are actually class-based. Such transformation in-troduces additional smoothing into the model and can improve model perplexity, as also noticed by Goodman (2001). In this paper we have tested a hierarchical adapta-tion method (Daume III, 2007; Finkel and Man-ning, 2009) on building style-adapted LMs for speech recognition. We showed that the method achieves consistently lower error rates than when using linear interpolation which is typically used in such scenarios.

The tested method is ideally suited for language modeling in speech recognition: we almost always have access to large amounts of data from written sources but commonly the speech to be recognized is stylistically noticeably different. The hierarchi-cal adaptation method enables to use even a small amount of in-domain data to modify the parame-ters estimated from out-of-domain data, if there is enough evidence.

As Finkel and Manning (2009) point out, the hierarchical nature of the method makes it possi-ble to estimate highly specific models: we could draw style-specific models from general high-level priors, and topic-and-style specific models from style-specific priors. Furthermore, the models don X  X  have to be hierarchical: it is easy to gen-eralize the method to general multilevel approach where a model is drawn from multiple priors. For
Adaptation data (No. of words)
N-instance, we could build a model for recognizing computer science lectures, given data from text-books, including those about computer science, and transcripts of lectures on various topics (which don X  X  even need to include lectures about computer science).

The method has some considerable shortcom-ings from the practical perspective. First, train-ing ME LMs in general has much higher resource requirements than training N -gram models which are typically used in speech recognition. More-over, training hierarchical ME models requires even more memory than training simple ME mod-els, proportional to the number of nodes in the hi-erarchy. However, it should be possible to allevi-ate this problem by profiting from the hierarchi-cal nature of n -gram features, as proposed in (Wu and Khudanpur, 2002). It is also difficult to deter-mine good variance values  X  2 i for the global and domain-specific priors. While good variance val-ues for simple ME models can be chosen quite re-liably based on the size of the training data (Chen, 2009a), we have found that it is more demand-ing to find good hyperparameters for hierarchical models since weights for the same feature in dif-ferent nodes in the hierarchy are all related to each other. We plan to investigate this problem in the future since the choice of hyperparameters has a strong impact on the performance of the model. This research was partly funded by the Academy of Finland in the project Adaptive Informatics, by the target-financed theme No. 0322709s06 of the Estonian Ministry of Education and Research and by the National Programme for Estonian Lan-guage Technology.

