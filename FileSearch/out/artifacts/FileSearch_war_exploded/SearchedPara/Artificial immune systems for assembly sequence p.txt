 1. Introduction
Recently, the type of bill of order in enterprises has been transformed into a customer-oriented manufacturing mode.
Instead of mass production of fewer types of products, more varieties of product configurations with smaller batches can be seen under this trend of mass customization. Therefore, the fast change of customers X  needs draws forth a tremendous impact upon the current design of the manufacturing system indeed (Eimaraghy, 2006 ). Based upon the concept of concurrent engineering (CE), if the planning of manufacturing can be integrated in the stage of product design, both the lead time and production costs will be reduced noticeably. For most industrial products, the assembly costs take up 10 X 30% of total production costs ( Hong and Cho, 1997 ). Therefore, from the viewpoint of CE, if the Research and Development (R&amp;D) of new products can be integrated with assembly planning at the early stage, the effectiveness will be uplifted. In assembly planning problems, many relevant constraint factors will be taken into consideration; for example, the geometric and tool factors. For that reason, how to work out a specific assembly sequence quickly and correctly and assemble parts into a product is one of the important issues in current manufacturing environment we cannot overemphasize.

Assembly planning problems can be divided into two major parts: assembly modeling and assembly sequence planning (ASP) (Fujimoto and Sebaaly, 2000 ). In assembly modeling, data for computer-aided design are transformed into constraints and regulations of assembly procedure. Such kinds of data consist of geometric and non-geometric information through which con-straints for assembly sequence will be formed and followed.
Generally, these constraints are presented by the precedence graph. In the past, the Liaison graph proposed by De Fazio and
Whitney (1987) and the graphic exhaustive search were used to solve the ASP problem ( Baldwin et al.,1991 ; Homem De Mello and
Sanderson, 1991 ; Gottipolu and Ghosh, 1997 ). Though it is possible to find feasible solutions or even the optimal solution from the graphic methodology, the time and problem scale is largely limited. Moreover, because Liaison graph solves assembly planning problems with information of parts, when the number of parts increases dramatically, the amount of information will also increase astonishingly, adding difficulties to the searching of solutions.

To cope with the considerable expand and change of solution space in the mass customization environment, many researchers have tried AI-related methodologies. Such methodologies include
A* algorithms ( Laperrie ` re and Eimaraghy, 1996 ), AO* search method ( Kim et al., 1996 ), neural networks ( Hong and Cho, 1995 ), simulated annealing method ( Motavalli and Islam, 1997 ), and genetic algorithms (GAs) ( Smith and Smith, 2003 ). Among the approaches, genetic algorithms have been attempted by most researchers in that GAs can effectively expand the solution space in the traditional graphic methods.

Reconsideration of the information of assembly parts of a product offers another approach to ASP problems. Tseng and Li (1999) once proposed a connector-based assembly planning. The so-called connector is a way of product description based upon the combination of parts. It acts as a sort of concept product building block at the design stage and may contain more engineering information to incorporate with product functions.
Connectors come in various types. Sonnenberg and Sodhi (2003) have tried to generate categorizations of connectors. Chung and
Peng (2006) incorporated the concept of connectors into the combination of selective disassembly planning and genetic algorithms. In order to solve complex constraints caused by large numbers of parts, Tseng (2006) proposed a Guided genetic algorithms (Guided-GAs) in which the mechanisms in GAs were changed to adapt to the ASP environment. Later, the concept of memetic algorithms (MAs) was used to upgrade the quality of solution searching but the solution time had often been found longer than that in Guided-GAs ( Tseng et al., 2007 ).
Taking the quality and time of solution searching into consideration, the present study is focused upon uplifting the effectiveness of genetic algorithms. More importantly, it is another reasonable way to apply artificial immune systems (AIS) (De Castro and Timmis, 2003 ). The good quality of solution searching in its application in other domains demonstrates that
AIS has been progressively accepted by researchers. For example, it has been applied in PCB flow shop scheduling ( Alisantoso et al., 2003 ), a redundant reliability problem with multiple component choices ( Chen and You, 2005 ) and the facility layout problem (Khilwani et al., 2008 ).

In addition, Cao and Xiao (2007) used the random searching method to generate the initial solution and tried an immune approach to solve the ASP problem, in which the affinity values of antibody (Ab) and antigen (Ag) were compared. In their study, a controller assembly case made up of 19 components as used to illustrate their algorithm. As mentioned earlier, in the liaison-based ASP approach, when the case is complicated, it is difficult to generate solutions because of the complex constraint factors. At the present study, the connector-based approach was used and the Adjacency List method was adopted in the generation of initial solutions so that all of them were feasible ones. Hence, it is not necessary to compare the affinity value of antibody and antigen.
Instead, the variety among antibodies was investigated. More importantly, the variety among in the memory zone was maintained by deleting the affinity values between antibodies.
Briefly, it is easy to combine the concept of AIS with genetic algorithms for ASP problems. Reasonable outputs can be seen from the addition of AIS mechanism in the original GAs structure.
In this paper, the relationships and application of AIS in ASP is discussed in Section 2. The concept of connectors is delineated in Section 3. In Section 4, modified AIS algorithms are proposed.
Practical examples are illustrated to verify the proposed method in Section 5 and finally some concluding remarks are reached in
Section 6. 2. Outline of artificial immune systems
The immunity system refers to the procedure of immune cells to resist infection from microorganisms or viruses, especially as a result of antibody formation. The viruses or organisms that trigger the immune system to react are defined as an antigen. From the stimulus of antigens, the immune cells that are combined with antigens are the antibody. There are many levels of defense in an organism X  X  immune system. And the algorithm derived from the immune system boasts of specialization and memory character-istics from the adaptive immune response ( De Castro and Von Zuben, 2002 ).

Among immune cells, B cell and T cell are the focus of people X  X  attention. The so-called B cell refers to B lymphocyte, which is generated by the bone marrow. From the stimulus of antibody, B cell will have a reaction and secrete some antibody to combine with the antigen. T cell is the T lymphocyte that gets ripe in the thymus. T cell X  X  major function is to recognize and destroy the outer invader. In other words, whether B cell can effectively produce antibody to resist from outer viruses depends on the help of T cell. There are many receptors on the surfaces of B cell and T cell. Through the immune stage, different epitopes will be produced from the antigen. Some bio-chemical reaction happens when these two things contact each other. The degree of their combination is called the affinity. The more closely the receptor combines with the epitope, the higher the degree of the affinity. This is the specialization characteristic of immune systems.
From the recognition in immune system, B cell will be stimulated and activated if the affinity between B cell and the antigen exceeds a threshold value. Such an affinity selection is called the affinity maturation. By doing this way, the immune system will generate a specific integrated cell to clone in a large quantity. And most of the newly generated B cells will become plasma cells serving as the antibody and the rest as the memory cells. Through blood circulation, the memory cells will reach the lymphocyte structure and be stored in T cells and B cells. The memory cells have the prevention function. If the immune system detects the infection from the same antigen, the lymphocyte cells will be reactivated. Such a procedure is called the clonal selection (De Castro and Von Zuben, 2002 ).

An overview of AIS can be found by some articles ( De Castro and Timmis, 2003 ; Musilek et al., 2006 ). Furthermore, many studies have explored ASP and outstanding achievements can be seen from the investigation of GAs. With AIS, some problems in GAs can be overcome. First of all, the searching of solutions in original GAs mainly uses the fitness function to find the near-optimal solution. In AIS, the affinity between antibodies and the objective functions are mixed to find the near-optimal solution. In addition, the control strategy used in AIS differs from that in GAs. AIS take advantage of the memory characteristic to speed up the algorithm for local searching. The variety in memory units is sustained to keep from the falling of local solutions. Without evident memory units, GAs keep on the evolutionary procedure lacking in the stopping mechanism, making it easy to get into the local optimal solution.

If we define the antigen as the objective function for a connector-based assembly planning, the antibody can be defined as the solution to the corresponding objective function. And the affinity serves as an index for the combination of the antibody and antibody in AIS. In ASP, the variety of assembly sequence is emphasized. The fundamental concepts of the AIS algorithm specially designed for ASP are listed below: (1) The initial solution is built-up through greedy algorithms that meet the constraints described in the precedence graph so as to generate feasible solutions. Furthermore, the concept of clonal selection is used to select better antibodies in the memory cells, and split into a proper number of new cells required. (2) The crossover and mutation mechanisms in GAs are used to generate multiple feasible solutions to reach the variety goal of antibodies. (3) In terms of memory, each solution searching is recorded. The selected antibody in the memory cell area will react quickly to the antigen. Finally, an optimal antibody will be generated from the memory cell area. 3. Concepts and information content of connectors 3.1. Connector concepts
Connectors indicate the connecting way between parts. They can serve as the concept product building block at the early product design stage. Fig. 1 shows the connection of a bolted joint and bolt X  X ut X  X asher. With the description of connectors, the complexity of product description can be largely reduced due to fact that the assembly properties of these three parts are integrated in the basic units of connectors ( Tseng and Li, 1999 ).
In this study, the combination property, assembly tool, assembly direction, and the precedence relationships of connec-tors are considered. They are discussed as follows:
Combination property : From Table 1 , four types of connectors can be categorized. They include disassembleable fixed connectors, undisassembleable fixed connectors, disassemble-able movable connectors, and undisassembleable movable connectors ( Akagi et al., 1980 ). They can serve as references for initial categorization of parts.

Tool property : In assembly planning, the selection of assembly tool will influence the efficiency and fluency of the assembly task. According to the difficulties of assembly tasks, four types of assembly tools are specified ( Table 2 ).

Direction property : The assembly direction will influence the process of assembly task. Six indexes, 7 x , 7 y , and 7 z , are used in this study to describe the accessed direction.

Precedence relationship : The precedence relationship of con-nectors is judged according to the engineering attributes or geometric information of the parts belonging to the connector.
At the present study, the precedence relationships among connectors are assumed to be preliminarily set.
 Take the stapler as an example. There are 18 parts in the stapler (Fig. 2 (a)). Nine connectors can be assigned ( Table 3 ) according to the combination, assembly tool and assembly direction properties. For instance, connector 7 ( C 7 ) is composed of three parts, steel cover, bracket spring, rivet1 compose. Its combination property belongs to tight fastening, a disassembleable fixed connector; the assembly direction is y ; the assembly tool uses a hand vice ( T 3 ). Fig. 2 (b) shows the precedence graph of the connectors in a stapler. 3.2. Describing precedence sequence by adjacency list
The adjacency listing technique in data structure is used to deal with the precedence graph of connectors. First, the Outdegree and Indegree are defined as follows:
Outdegree : The number of nodes connected after a specific node. Take node C i for instance, its Outdegree means the number of nodes after C i .If C i -C j in the sequential order, then the number of C j is the Outdegree node of C i .

Indegree: The number of nodes connected before a specific node. Take node C i as an example, its Indegree means the number of nodes before C i .If C j -C i in the sequential order, then the number C j is the Indegree node of C i .

In this study, the Outdegree and Indegree are used to construct the successor lists (SL) and predecessor lists (PL). SL represents the lists where successors in each node in the forward searching, from the source to the sink, are recorded while PL represents the lists in which predecessors in each node in the backward searching, from the sink to the source, are taken down.
 17
The algorithm to generate SL list based upon the Outdegree is listed below:
Step 1: Enter information for the precedence graph of connec-
Step 2: From the precedence graph, find the nodes after the first
Step 3: Connect the nodes after the first node. In the sequential
Step 4: Repeat the above steps searching for the nodes in the
Take the stapler parts in Fig. 2 (a) as an example. Fig. 3 shows the adjacency list for stapler under the precedence situations of
Fig. 2 (b). The transformation procedure is described in the following two parts:
As can be seen in Fig. 3 (a), the above algorithm is used to generate successor lists according to the Outdegree.
 Step 1: Enter the data of the precedence graph in Fig. 2 (b).
Step 2: In Fig. 2 (b), specify the nodes connected after the first
Step 3: Connect the nodes C 0 , C 1 , C 2 , C 5 , C 6 , C
Step 4: Step 2 is repeated because some other nodes can be
Step 2: Based upon the data of Outdegree, node C 8 will be
Step 3: Connect node C 8 to node C 0 as can be seen on second Step 4: Execute Step 2.

Step 2: According to the Outdegree of node C 1 , node C 8
Step 3: After node C 1 , place node C 8 as can be seen on third row Step 4: Execute Step 2.

Step 2: For node C 2 , the Outdegree data shows that nodes C
Step 3: After node C 2 , place nodes C 3 and C 4 on fourth row in Fig. Repeat the process until eighth row is constructed. The whole Successor list is then completed.
 Besides, the predecessor lists can be generated from the Indegree data. This is described in the following steps. Step 1: Enter the connector data in the precedence graph.
Step 2: Check the nodes connected after the first node in the Step 3: Connect all the nodes after node C i and we can find that
Step 4: Repeat the above steps and check whether there exist in
In Fig. 3 (b), Indegree is used to generate PL in a way simi-lar to the generation of SL. This part is omitted. In this study, SL and PL lists are used to record the precedence graph.
The data will be used in Section 4.3 to search for the initial solution. 3.3. Connector engineering data similarity matrix SS
At the present study, the engineering information similarity of connector is employed for the evaluation of the value of the design objective function. According to Go  X  ngo  X  r and Gupta X  X  study (1997) , when the frequency of alternation of the precedence sequence for a product is lower, the probability it will fit and survive is higher. To compare connector C i with connector C from a connector set V whose precedence sequence has been set, if the contents of engineering information (combination, direc-tion, and tools) for connectors C i and C i+ 1 are similar, it is more likely that they will survive. To do this, we need to build up the engineering information similarity matrix SS first. SS i,j engineering information similarity of the cell of i th row and j th column in a symmetrical matrix; i.e., the engineering similarity between i th connector and j th connector. SS i,j can be calculated from Formula (1): SS where SS i,j is the engineering similarity between i th connector and j th connector. If i  X  j , they represent the same connectors and it is meaningless to give values to them, as shown in Fig. 4 ; i and j  X  1,2, y , m , where m is the number of connectors. C i,j combination condition between the connectors. When the combination property of connector C i and C j is the same, C otherwise, C i,j  X  0; D i,j the direction condition between the connectors. When the direction property of connector D i and D between the connectors. When the tool property of connector T and T j is the same, T i,j  X  1; otherwise, T i,j  X  0. W c combination property; W d the weight of the assembly direction and W t the weight of the assembly tool.

Take the stapler as an example. To compare with Guided-GAs (Tseng, 2006 ) and MAs ( Tseng et al., 2007 ), the relative weight for combination, assembly tool and assembly direction properties are set to be equal. Since W c W d W t  X  1, W c  X  W d  X  W t  X  Formula (1), SS 0,1 in SS matrix is 2 6 1  X  2 6 1  X  2 6 0  X  0 : 6667. Other elements in SS matrix can be obtained in the same way. The result is shown in Fig. 4 .

Antibody value
Antibody p osition 3.4. Representation scheme
In this study, decimal numbers are used to represent the chromosomes of a solution (an antibody). The length of the chromosomes is equal to the number of connectors in a product.
Each connector has a number of which the position represents the assembly sequence of the specific connector. In the case of stapler (Fig. 5 ), an antibody represents the assembly sequence of stapler X  X  connectors, 3 -2 -0 -1 -4 -8 -5 -6 -7. Here, the arrow mark  X  X  - X  X  denotes the priority order in connector X  X  precedence sequence. For example, 1 -4 means that the priority order of C is higher than that of C 4 in precedence sequence.

The main reason to take engineering information similarity between connectors into consideration is that if the similar connectors are connected together, the number to change the assembly tool and assembly direction will reduce, thus saving assembly time and cost ( Tseng et al., 2004 ). Therefore, the design objective function ( OF ) in AIS is based upon the similarity matrix of connectors. Then the sum of engineering information similarity in an antibody can be calculated from formula (2): OF  X  where SS h,h +1 is the engineering information similarity between the h th and h +1th connectors in the antibody, h  X  1,2,3, m is the the number of connectors.

In the case of the antibody in the stapler example ( Fig. 5 ), the value of the objective function of the antibody, OF  X  SS 3,2
SS
Formula (3) and the similarity matrix SS in Fig. 4 . 4. Artificial immune systems for assembly sequence problems 4.1. Framework of artificial immune systems for ASP
Fig. 6 shows the AIS framework for ASP. Detailed steps are listed and described as follows:
Step 1: Construct the SL and PL (refer to Section 3.2) : The
Step 2: Generate the initial population from the concept of
Step 3: Calculate the value of the objective function : Calculate the
Step 4: Clonal selection (see Section 2) : From the ranking order of
Step 5: Gene reorganization (see Section 4.3) : The guided cross-Step 6: Guided mutation method (see Section 4.4).
 Step 7: Calculate the affinity and redo the selection (see
Step 8: Check if the termination condition is satisfied : The 4.2. Apply the adjacency list to generate initial population (Step 2) the assembly sequence SEQ can be represented by an ordered list of connector, in which SEQ i indicates the i th solution in the memory zone. If H ( i ) is a set of the candidate notes ( i is the parent1 parent2 parent1 parent2 offspring parent1 parent2 offspring parent1 parent2 offspring cursor), then the cursor i will point to the last connector in the set
SEQ . With SL and PL lists, connectors can be placed in H ( i ). Step by step, a complete SEQ will be found for the initial solution. The algorithm to generate the initial solution is listed below:
Step 2.1: Because the set of the initial candidate connectors is c ,
Step 2.2: Because S possesses Outdegree only, the SL list is used to Step 2.3: If the current cursor points to S , then directly update
Step 2.4: Because node C i has been found from SL, nodes after C Step 2.5: Use PL to find the nodes before C i according to the Step 2.6: End the algorithms and find an initial feasible solution.
Using the stapler in Fig. 2 as an example, the procedure to find antibodies for the initial solution is listed below:
Step 2.1: Because SEQ 1  X  { f }, and from Fig. 3 (a), the cursor i is Step 2.2: From SL, find nodes before S in Fig. 3 (a) and add them to
Step 2.3: Because S is a virtual node, from the candidate initial
Step 2.4: From SL in Fig. 3 (a), we know that only C 8 can be found
Step 2.5: From PL in Fig. 3 (b), we know that { C 0 , C 1
Step 2.3: From connector S , H ( C 0 )  X  { C 1 , C 2 , C 5
Step 2.4: From SL in Fig. 3 (a), we can find only node C 8
Step 2.5: From PL in Fig. 3 (b), we know that { C 1 , C 3
Step 2.3: From the candidate initial connector set H ( C 1
Repeat Steps 2.1 X 2.6, we can obtain a complete initial antibody with SEQ 1  X  { S -C 0 -C 1 -C 7 -C 5 -C 2 -C 4 -C 3 4.3. Gene reorganization (Step 5)
In this study, a guided crossover mechanism is used to reorganize genes ( Tseng, 2006 ). The crossover procedure is listed below:
Step 5.1: Randomly select two parent antibodies, parent1 and
Step 5.2: From these two parent antibodies, randomly generate
Step 5.3: From one of the parent antibodies, reproduce the gene 4 2 50 17 6 8 3
Step 5.4: According to the precedence relationships of the con-Step 5.5: According to the precedence relationships of the con-4.4. Guided mutation method (Step 6)
The adding of mutation mechanism in AIS for ASP helps with the variety of the antibody, which can prevent the problem of premature convergence. In this study, the guided muta-tion method is adopted. Such a mutation procedure is listed below: Step 6.1: Randomly select an antibody from the initial population.
Step 6.2: Randomly generate a cut-point , and set combine-
Step 6.3: Check the assembly precedence relationship between
Step 6.4: Insert the connector on the cut-point to the location of
Step 6.5: Repeat the procedure form Step 6.1 to Step 6.5 m/3 4.5. Affinity maturation (Step 7)
The calculation of affinity function is mainly based on the similarity between antibodies. Greater values of affinity mean higher similarities between antibodies. To maintain the variety of antibodies in the memory zone, some antibodies that are too similar to one another will be deleted. In this study, the antibody whose objective value is best in the memory zone in each generation is considered as the base for other antibodies in terms of the gene sequential positions for the calculation of similarity between antibodies. All the other antibodies will be compared with the base antibody one by one for counting the number of different chromosome position. Then, the affinity function is used to transform the similarity data into percentage from which a threshold value is set for further selection. The calculation of affinity (Formula (3)) between antibodies is described below:
Affinity value  X  k m (3) where k is the number of gene codes the same as those in the best antibody and m the number of connectors.

Step 7.1: From memory zone, calculate the antibody whose value
Step 7.2: Contrast and mark the gene codes of the second best
Step 7.3: Calculate k for every antibody whose gene codes are the
Step 7.4: According to the threshold value, select the proper 4.6. An illustrated example
The stapler example in Fig. 2 is used as an example to illustrate the algorithms in this section:
Step 1: Enter the connector engineering information, the precedence graph and engineering information similarity data for the construction of SL and PL ( Fig. 3 ).

Step 2: Construct the initial solution data from SL and PL. As mentioned in Section 4.3, the current memory zone is set to 3. Then three initial solutions can be generated:
Step 3: Calculate the values of objective function : Through engineering similarity matrix SS and Formula (2), the values of objective function for all antibodies can be calculated. For example, SEQ 1  X  { S -C 0 -C 1 -C 7 -C 5 -C 2 -C 4 -
C 8 -F } and its objective value  X  SS 0,1 + SS 1,7 + SS 7,5 Fitness value AIS
Step 4: Clonal selection : According to the objective values of antibodies, select the best n antibodies and clone them into a new population. In this case, n  X  3. As can be seen in Fig. 7 , these better antibodies are SEQ 1 , SEQ 2 , and SEQ 3 . Then step by step, clone the first antibody into 3 antibodies; the second into 2; the third into 1 and save them in the memory zone. Step 5: Guided crossover method Step 6: Guided mutation method Step 7: Calculate the affinity and redo the selection.
Step 8: Satisfy stopping criteria and stop the algorithms. 5. Practical examples
Borland C++ Builder 6.0 is used in this study for AIS-related programming. Under the computer specification of an Intel Celeron CPU 2.67GHz CPU and 512Mb memory, a stapler, an electric fan and a laser printer are used as practical examples to compare the results of AIS algorithm with those of Guided-GAs (Tseng, 2006 ) and MAs ( Tseng et al., 2007 ). 5.1. The stapler example
In the stapler example, both Guided-GAs and MAs reach the objective value 5.667. Under the conditions of the crossover rate 70%, mutation rate 30%, parent population size 21, maximum generation 1500, cloning number 3, threshold value of affinity 80%, 10 experiments were conducted for AIS, Guided-GAs and MAs. Table 4 shows the average quality and time in solution searching, the maximum objective values of AIS, Guided-GAs and MAs.
Because the stapler is an easier example, all of three algorithms can find the optimal assembly sequence of stapler in a very short period of time. Overall, the quality for solution searching in AIS and MAs is a little bit better than that of Guided-GAs ( Table 4 ). 5.2. The electric fan example
The electric fan is composed of 40 parts ( Fig. 11 ). Through the rules of connector, these parts can be divided into 25 connectors. Fig. 12 shows the precedence graph of the connectors in the electric fan. The execution of AIS is under the conditions of the crossover rate 70%, mutation rate 30%, parent population size 51, maximum generation 1500, cloning number 10, and threshold value of affinity 75%.

Table 5 lists the results of 10 tests of three algorithms. In terms of the average solution searching time, AIS is 20% better than MAs. For maximum objective value, AIS is 12% better than Guided-GAs and about 2% better than MAs. Generally speaking, AIS and MAs are better than Guided-GAs in the quality of solution searching. In solution searching time, AIS is better than MAs. Moreover, it can be seen from Fig. 13 that Guided-GAs converges in less than 200 generations. However, both AIS and MAs have the ability to escape from local optimization; AIS runs away from 1100 generations and MAs get free about 850 generations. For AIS, the algorithms of
Affinity maturation play the role of escaping mechanism. The experiment demonstrates that both AIS and MAs are able to keep away from early convergence and jump from the local optimal solutions. 5.3. The laser printer example
The laser printer is made up of 92 parts ( Fig. 14 ) and 91 connectors. The precedence graph of the connectors in the laser printer is shown in Fig. 15 . The execution of AIS is under the conditions of the crossover rate 70%, mutation rate 30%, parent population size 51, maximum generation 1500, cloning number 15, and threshold value of affinity 85%.
 The results of 10 trials of three genetic algorithms are listed in
Table 6 . In terms of the average solution searching time, AIS is 26.6% better than MAs. For maximum objective value, AIS is 7.4% better than Guided-GAs and about 2.9% better than MAs.
Generally speaking, AIS and MAs are approximately the same in the quality of solution searching. But, in solution searching time, AIS is better than MAs. Moreover, Fig. 16 clearly shows that Guided-GAs converges in about 230 generations. However, both
AIS and MAs have the ability to evade from local optima; AIS gets away from 1000 generations and MAs break out in 1120 generations. This demonstrates that both AIS and MAs are able to keep away from early convergence and generate better solutions. 6. Conclusion
In this study, an AIS algorithm was mainly proposed to solve the assembly planning problem. Moreover, its performance was compared with those of Guided-GAs and MAs ( Tseng, 2006 ; Tseng et al., 2007 ). Such an AIS algorithm has two advantages. First of all, it uses the adjacency list to generate proper initial solutions. Then, the crossover and mutation mechanisms in genetic algorithms are used to upgrade the quality in solution searching. To avoid the impairment of the quality in searching solutions, common immune algorithms often eliminate the crossover mechanism. It has been demonstrated in this study that in ASP problems, a better initial solution will have more effectiveness in the quality than traditional immune algorithms. Secondly, the proposed AIS algorithm is different from traditional GAs in that it makes use of the variety characteristic of artificial immune systems, keeping from falling in the difficulty of local optimal.

Compared with past genetic algorithms, AIS is about 20% better than Guided-GAs in solution searching time and about 12% better than Guided-GAs and about 2% better than MAs in maximum objective value, taking the electric fan as an example. In the case of the laser printer, AIS is 26.6% better than MAs in average solution searching time and about 7.4% and 2.9% better than
Guided-GAs and MAs, respectively, in maximum values. This demonstrates that AIS can offer effective solutions to ASP problems with more constraints, longer time for solution search-ing, or of the local optimal dilemma. Overall, AIS can be used to help solve the difficulty of falling in local optimization in ASP problems in Guided-GAs. Compared with MAs, AIS is about the same in quality of solution searching. But the solution searching time can be effectively shortened in AIS. However, the upper limit of the number of connectors in this study is 91 (i.e. the laser printer).

For future work suggestions, the integrations of assembly modeling and assembly sequence generator related to CAD will be helpful to the implementation of computer-aided automatic assembly planning. In addition, the parameters of AIS algorithm are obtained through constant trials and experiments. The optimal combination of parameters will differ with cases. There-fore, the dynamic adjustment of control of parameters is a direction worth of further investigation.
 References
