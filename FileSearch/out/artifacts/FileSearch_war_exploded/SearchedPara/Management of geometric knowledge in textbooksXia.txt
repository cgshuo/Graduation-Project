 1. Introduction ical knowledge [17] .
 MKM may also be applied to managing the knowledge of other domains.
 the three vertices of a triangle are collinear) [60] .
 developed for producing short, elegant, and readable proofs [11] .
 them useful tools for geometry research and education.
 visualization, which require the support of effective algebraic methods, priate for a systematical study in the context of knowledge management. briefly in Section 6 . 2. Mathematical/Geometric Knowledge Management 2.1. Introduction to GKM an instruction to draw the locus for displaying the circle on the screen, an algebraic equation ( x is the pair of coordinates of point O , or a pair of parametric equations x  X  consists of two aspects: knowledge bases and communication functions. geometric knowledge). The design and creation of geometric knowledge bases cover the following topics. support the implementation of automated statement transformation, theorem proving, and diagram construction.
Structuring . Geometric knowledge exists in some context (in the form of explicit chapter domain knowledge. Modeling metaknowledge is essential for efficient knowledge management. Communications between knowledge data and their consumers require the following functions. data should also be checked to ensure the reliability of the knowledge base. printers, visualization tools, and DGSs, for humans to read and/or to explore. systems and programs.
 2.2. The relationships between MKM and GKM lemmas). We analyze three aspects of the relations and distinctions between GKM and general MKM. 2.2.1. Representation, presentation, and exchange programs by using machine-readable but normally informal content dictionaries that define the sentation formats. Drawing instructions (or construction commands), such as  X  integrating applicable software tools. 2.2.2. Structuring and maintenance managing process. 2.2.3. Processing ometry software systems (and CASs) for computation, reasoning, and visualization. 3. Methods and techniques for GKM 3.1. Creating geometric knowledge data 3.1.1. Acquiring geometric knowledge hand, the same notation may be understood differently in different situations, such as  X  accessed, and reliably transferred. 3.1.2. Formulating geometric knowledge propositions, problems, and procedure rules for transforming notions [7] . In this language, m ::Line), [ A ::Point where and (incident ( A , l ), incident ( A , m ))], not (parallel ( l , m ))) current (medians (triangle ( A , B , C ))))  X  represents the centroid theorem;
Point),  X  A , B , and C are collinear  X  , en)  X  denotes the translation rule for transforming  X  diagrammatic rule for transforming  X  perpendicularline ( A , l )  X 
AlgebraicScript (line ( A ::Point, B ::Point), ( x , y ), x [1] * y =0)  X  denotes the algebraic rule for transforming  X  line ( A , B ) 3.2. Constructing metaknowledge data 3.2.1. Encapsulating knowledge objects data), and so on. These data elements have values  X  incenter, [concurrentpoint (innerbisectors (triangle( A , B , C )))], null), of application requirements. 3.2.2. Creating knowledge graphs multiple relations, is defined as follows.

De fi nition 1. A knowledge graph on N is an ordered pair N ; L  X  X  with (b) L the set of names for the types of relations among nodes, whose elements are called labels, and (c) L X  A  X   X  BA  X  N  X  B  X  N  X   X   X  L jg whose elements are called links. can be created effectively and pragmatically.
 A hierarchy, used to illuminate how knowledge objects are grouped and arranged, is defined as follows.
De fi nition 2. A hierarchy is an ordered set { S , K 1 , ... , K (a) n  X  1, (b) each K i (1  X  i  X  n ) is a knowledge object or a hierarchy, called a member of the hierarchy, and (c) S is an object used to encapsulate data for summarizing the contents of K If a member of a hierarchy is also a hierarchy, then it is called a subhierarchy . 3.2.3. Acquiring metaknowledge geometric libraries of proof assistants such as Coq. Metainformation, such as cross references and chapter unpublished (meta-)knowledge from geometry experts. 3.3. Geometric Knowledge Management process 3.3.1. Manipulating and verifying knowledge data in the knowledge base. Currently, a feasible mode for maintaining a knowledge base is human 3.4. Computation, reasoning, and visualization of knowledge objects into equivalent ones according to the definitions of the  X  4. Design of an electronic geometry textbook of the textbook may be enhanced progressively. This can be seen from the following two aspects.  X  efficiently in real time.  X  knowledge may serve automated knowledge processing activities.
 principles for the EGT system. 4.1. Design of a geometric knowledge base edge objects to define the structure of a knowledge base [8] . 4.1.1. Creation of knowledge objects
By the markup infrastructure at the statement level of OMDoc dynamic figures in DGS formats), and keyWords .

To depict the internal structures of knowledge classes, we use Entity knowledge classes as entities and  X  inclusion  X  as relationships (as shown in Figs. 1 and 2 to deal with multiple values and components. 4.1.2. Organization of knowledge objects which includes the following data elements: role (with values
Euclidean Geometry  X  ), title (e.g., with value  X  Note to the Reader objects with hierarchy and range constraints as follows.  X 
Inheritance:  X 
A  X  inherit B means that A is a special case of B , where A and B are both definition objects.  X 
Dependency:  X   X  object;  X  be either a proof or a solution object;  X  proposition object;  X   X  knowledge object except a note object;  X  except a note object;  X 
A  X  complicate B means that A is more complicated than B , where both A and B can be problem objects;  X 
A  X  solve B means that A is a solution for B , where A is a solution object, and B is a problem object;  X  a method, an algorithm, or a subject object.  X 
Aggregation:  X  object;  X   X  lem, a method, or an algorithm object;  X   X  A  X  equal B means that A has the same meaning as B , where both A and B can be knowledge objects. theorem; T 1 is the Steiner  X  Lehmus theorem; P 1 is the proof for T that the three inner angle bisectors of a triangle are concurrent; D are two lemmas that are used in P 1 ; P 11 and P 12 are the proofs for L
T ; R 1 is a remark on the history of T 1 ; R 2 is a remark on P are the solutions for E 1 and E 2 , respectively. 4.2. Design of interfaces the presentation structure and the completeness and redundancy of the constructed textbook contents. 4.2.1. Textbook creation assistant introduce a binary relation  X  over T to denote the order of the elements in means that a is arranged or placed before b . Thus, for all a , b , and c in or b  X  a . Actually,  X  is a strict total order on T and the textbook can be represented by a chain in the textbook. Let N be a set of target objects. We introduce a binary relation
N .For A and B in N , A  X  B means that A is expected to appear before B in the textbook. For instance, the centroid theorem means that the median definition should be introduced before giving the
B ,and C in N ,(i)  X  ( A  X  A ); (ii) if A  X  B ,then  X  ( B order over N . We call the corresponding directed acyclic graph
De fi nition 3. Let N ;  X   X  X  be a dependency graph. A textbook T ;  X  consistent under N ;  X   X  X  .
 (where  X  means that the dependency cannot be acquired). Let ordered set N ;  X   X  X  from N ; L  X  X  , where the order  X  is defined as { a
N ;  X  the knowledge graph (see Fig. 4 ).

De fi nition 4. Let a textbook T ;  X   X  X  and a dependency graph N ;  X  The set bb ; a  X  X   X   X  P  X  a  X  T jg f is called the closure of the textbook under to be complete under N ;  X   X  X  ; otherwise, the textbook is said to be incomplete and the elements in objects of the textbook under N ;  X   X  X  .

De fi to the respective values of those of b , then the textbook is said to be redundant . textbooks in real time can be developed.
 textbook being constructed, and T ; L  X  X  is the knowledge graph on for checking the completeness of the textbook in real time can also be designed.
Algorithm 1. Checking the consistency of a textbook T ;  X  Input: T ;  X   X  X  , T ; L  X  X 
Output: the set of inconsistent instances 1 Generate the poset T ;  X   X  X  derived from T ; L  X  X  through Table 1 ; 2 T ;  X   X  := T ;  X   X  X  ; 3 while T ;  X   X  is not a dependency graph do 4 T ;  X   X  := modified T ;  X   X  ; 5 T ;  X   X  := transitive closure of T ;  X   X  ; 6 P d := xx ; O  X  X   X   X   X  7 S d : = yO ; y  X  X   X   X   X  8 P t := { z |( z , O )  X  X  X  }; 9 S t := { t |( O , t )  X  X  X  }; 10 P h := {( m , O )| m  X  P t and m  X  S d }; 11 S h := {( O , n )| n  X  S t and n  X  P d }; 12 Return P h  X  S h ; 5. Implementation and prototyping 5.1. Creation of the geometric knowledge base sentation are formulated in GDL.
 their proofs), 125 definitions, and some introductions and remarks, as well as knowledge graphs on them. 5.2. EGT user interface book are realized on the basis of this user interface (see Fig. 5 ). 5.3. EGT usability example, for producing an English textbook, the values of the data elements in the version of ducing a formalized textbook, the values of formalRepresentation must be assembled. The resulting XHTML documents are loaded via JDesktop Integration Components (JDIC) [27] in the client. 6. Conclusions and future work features of EGT for automatic checking of the consistency, redundancy, and completeness in real time. representing versions must also be further investigated.
 Acknowledgments 2009AA043303, and the ANR-NSFC Project ANR-09-BLAN-0371-01/60911130369 (EXACTA). Appendix A. Relationships between knowledge classes and data elements
References
