 Online recruiting systems have gained immense attention in the wake of more and more job seekers searching jobs and en-terprises finding candidates on the Internet. A critical prob-lem in a recruiting system is how to maximally satisfy the desires of both job seekers and enterprises with reasonable recommendations or search results. In this paper, we inves-tigate and compare various online recruiting systems from a product perspective. We then point out several key func-tions that help achieve a win-win situation between job seek-ers and enterprises for a successful recruiting system. Based on the observations and key functions, we design, implement and deploy a web-based application of recruiting system, named iHR , for Xiamen Talent Service Center. The system utilizes the latest advances in data mining and recommen-dation technologies to create a user-oriented service for a myriad of audience in job marketing community. Empirical evaluation and online user studies demonstrate the efficacy and effectiveness of our proposed system. Currently, iHR has been deployed at http://i.xmrc.com.cn/XMRCIntel . Categories and Subject Descriptors: H.3.3[Information Search and Retrieval]: Information filtering.
 General Terms: Algorithms, Design, Management Keywords: Job Matching System, Reciprocal Recommen-dation, Job Recommendation, Bilateral Recommendation
Online recruiting systems, as effective tools of recruiting services, have emerged and enjoyed explosive growth in the last decades. By using online recruiting systems, enterprises release their recruiting information, and job seekers look for jobs [12]. With the emergence of Web2.0 technologies, a gigantic amount of information relevant to job seekers and enterprises has been collected and kept increasing exponen- X  Lei Li and Wenxing Hong contribute equally to this work. tially. As a result, the information becomes overloaded, which renders traditional recruiting systems ineffective.
A practical way to handle the aforementioned issue is to employ recommendation techniques to obtain the informa-tion relevant to a target user (a job seeker or a recruiter). By analyzing the characteristics of users and profiling users X  personal preferences, online recruiting systems with person-alized recommendation are capable of automatically retriev-ing a list of job positions that satisfy a job seeker X  X  desire, or a list of talent candidates that meet the requirement of a recruiter. With the great convenience and effectiveness for both recruiter and job seekers, job recommender systems have gained broad attention in both academia [11, 19, 22, 27] and industries (e.g., Monster.com and Yahoo! Careers). However, most online recruiting systems in industries aim at providing search services for users, or simple recommenda-tions via analyzing the unilateral preferences of users, which cannot effectively handle the mutual relations between job seekers and recruiters, or called the reciprocity . A successful example in the job marketing community is Linkedin.com, which breaks through the traditional unilateral-oriented job recommendation paradigm. In Linkedin, the recommendation for jobs or candidates is achieved by con-structing and analyzing the social network that embraces a target user. The user X  X  personal network effectively reflects the social environment and personal preference. However, Linkedin asks the user to explicitly manage his/her social relations. In most cases, users are not willing to proactively search jobs or candidates once they feed their personal pref-erences into the system. The way that Linkedin collects the user X  X  profile requires much efforts from the user, and there-fore renders the procedure of profiling less efficient.
Existing online recruiting systems apply different recom-mendation strategies for users. The techniques for recom-mendation include content-based (CBR) [22, 31, 32], col-laborative filtering (CFR) [7], knowledge-based recommen-dation (KBR) [5, 11], etc. Among these techniques, CBR is frequently used by most recruiting systems, due to the convenience of collecting users X  demographic information. However, it is often difficult to achieve good user satisfaction solely based on recommendation strategies. In practice, a re-cruiting system should be designed and implemented from a product perspective, including user profiling, recommenda-tion strategies, recommendation representation, user feed-back, reciprocity between job seekers and enterprises, etc. For comparison, we investigate four existing recruiting sys-tems based on these aspects, including CASPER, Proactive, PROSPECT and eRecruiter. CASPER is a classical job application system used for enhancing the performance of JobFinder 1 . Proactive has different recommendation mod-ules applied to its own website 2 . PROSPECT 3 is developed by analyzing and mining the resumes of users. eRecruiter is designed for expanding the functionality and improving the accuracy of the Absolventen.at 4 . Differences among these systems as well as our developed iHR are shown in Table 1. Table 1: The comparison of recruiting systems.

As shown in Table 1, the first 4 systems utilize limited information to construct user profiles, and the recommen-dation strategies applied to each system only focus on uni-lateral aspects. In practice, job recommender systems deal with people-to-people recommendation, and hence it is nec-essary to consider the information need of both parties be-ing involved. In this paper, we design, develop, and deploy a web-based online recruiting application for Xiamen Talent Service Center, named as iHR . A screenshot of the system is shown in Figure 1. We highlight the major differences between iHR and other recruiting systems as follows: http://www.jobfinder.com. http://www.proactiverecruitment.co.uk. http://www.prospects.ac.uk. http://www.absolventen.at.
In addition, iHR provides comprehensive explanations on the recommendation results based on the characteristics of the recommended items. Such a representation can help enhance the user experience to a great extent. We also pro-vide an interactive channel for job seekers and recruiters, by which job seekers can give comments on the job positions being viewed, and recruiters can send messages to job seek-ers. Comments are treated anonymously, and are sent back to recruiters and job seekers to help them improve the de-scription or representation of their profiles. These features are not supported by other recruiting systems in Table 1.
For over five years, a multi-disciplinary team of researchers and officers from Florida International University, Xiamen University, Xiamen Talent Service Center and Xiamen Well Software have been working together to investigate the way of job matching. Now, iHR has become the official online recruiting website for Xiamen talent market. Under the supervision of Xiamen Talent Service Center, iHR provides an interactive platform for both job seekers and recruiters around Xiamen and adjacent areas. Over 1,700,000 individ-ual resumes are possessed in iHR , and over 230,000 verified job positions are posted online. On average there are over 699,600 visits per day. With the considerable user reposi-tory, iHR is expected to serve as a scalable recruiting system, and to provide professional search and recommendation for both job seekers and recruiters.
Based on the observations we have made during our pre-liminary research, we have identified two key issues that need to be addressed in iHR job recommender system: 1. How to effectively construct profiles of job seekers and 2. How to provide effective recommendations? Due to the
Our proposed system provides effective ways to construct user profiles and incorporates the reciprocity between job seekers and recruiters into the process for more reasonable results. In particular, to address challenge 1, we analyze users X  information from different sources, and then encap-sule such information into users X  self-description and users X  preference; To address challenge 2, we enrich the recommen-dation experience by combining results from different rec-ommendation strategies, and particularly, focusing on the reciprocity between job seekers and recruiters.
In summary, iHR is essentially a collaborative platform for job matching and selection that helps both job seekers and recruiters find their expected information. By optimally integrating advantageous resources from Xiamen Talent Ser-vice Center, Xiamen job market and Xiamen talent network, iHR has been selected as one of the most prominent and in-fluential job matching platforms in China 5 .

The rest of the paper is organized as follows.  X  2 presents the system overview of iHR ;  X  3 discusses our profiling strat-egy; In  X  4, we describe the recommendation process of iHR including three different strategies for recommendation;  X  reports the system evaluation; Finally,  X  6 describes the sys-tem deployment and operation and concludes the paper. iHR is a collaborative solution designed for job markets, on which job seekers and recruiters are able to cooperatively build an effective job matching platform. It provides users functionalities to organize their career development, to im-prove their corporation culture, and to construct extensive relation network. In iHR , registered users are categorized into two groups: job seekers and recruiters. For job seekers, iHR enables them to input their basic information, to upload and update their resumes, and to receive instant recommen-dation for job positions; For recruiters, similar functional-ities are provided, except for the recommendation of job applicants. Figure 2 shows the system overview of iHR .
The information processing and representation functional-ities are integrated into the following critical modules: User http://www.xmrs.gov.cn/zwgk/gzdt/201008/t20100810 368778.htm Profiling , Advanced Search and Recommendation .Theseam-less integration of these modules makes the system more user-friendly and customer-centric. In the following, we will provide functional details of these modules.
 User Profiling (cf.  X  3): To construct user profiles for job seekers and recruiters, iHR considers multiple information resources, including users X  basic information, extracted text from uploaded files or links and user X  X  behavioral informa-tion. The fusion of different types of information enables us to comprehensively understand a user X  X  exact interest. Advanced Search :In iHR , advanced search functionality for users is provided in order to quickly obtain the informa-tion they are interested in. Although search is commonly used in most job matching systems, iHR uses some query expansion techniques [20] to expand the query keywords for more comprehensive results. In this paper, we will not focus on introducing the search service as it has been extensively studied by many existing systems[1, 28].
 Recommendation (cf.  X  4): iHR provides flexible interfaces for users to obtain recommendation results related to their preferences. We implement three distinct recommendation strategies, including content filtering, collaborative filtering, and reciprocal recommendation, and also provide integrated recommendation results to users. For reciprocal recommen-dation, we extensively investigate the bilateral correlation between job seekers and recruiters, i.e., the reciprocity, and therefore help achieve the win-win situation among them.
Besides the major modules mentioned above, in iHR we also provide an interactive channel for job seekers and re-cruiters, as discussed in  X  1.1. Figure 3 shows an example of a job seeker X  X  comment management.
 Figure 3: The comment management of job seekers.
A natural way to enhance the search and recommendation experience is to maintain and utilize a user X  X  profile. Users X  profiles provide us extensive evidence to understand the ma-jor preference of both job seekers and recruiters, and great facilities to adjust the search and recommendation output for individuals. In iHR , a user X  X  profile is composed of three components, i.e., the basic information, the extracted infor-mation and the behavioral information. In the following, we describe the detailed profiling for each component. features, whereas the others are the self-description features.
A user X  X  basic information includes demographic data and explicit preference specified by the user. Such information is common in most job matching systems. Table 2 shows sam-ple features of the basic information we collect from users.
In general, the user-specified features can be scalar, cat-egorical or free text, as shown in Table 2. For scalar fea-tures, we first transform them into different ranges, e.g., we can transform the length of working experience as 0-3 years, 3-5 years, 5-10 years and 10+years. We then encode these ranges as binary features, e.g., if a user X  X  working experience falls into the range of 0-3 years, then this feature (0-3 years) would be set to true (1), and all other ranges would be set to false (0). With categorical attributes, we use the same strat-egy of dealing with working experiences ranges. For free text features, we transform the text into an l 2 -normalized tf.idf-based term vector, and then combine this vector with the vector obtained based on other types of attributes. Note that the demographic information and the preference are separately processed. We denote the demographic vector as p s and the preference vector as p p .
Another way to collect a user X  X  information is to ana-lyze his/her external information, e.g., resumes and home pages. In general, such information might be represented as .doc, .pdf, or .html files, and the text information can be extracted from these files. Take the resumes as an example. The text in resumes contains multiple types of information, e.g., personal information (demographics), educational de-tails (graduation school, degree, major), experiences (activ-ities, research, skills), etc. Automatically extracting struc-tured information from resumes of different styles and for-mats would be challenging. [32] analyzes the hierarchy of resume information, and then proposes a cascaded two-pass information extraction framework to automatically extract useful features. However, such a paradigm requires substan-tial effort to estimate parameters in the model, and therefore cannot handle large-scale resume extraction task.
In our system, we simplify the extraction procedure by treating each resume as a text document, and then extract-ing important features from the text. Specifically, we sample 20% of resumes from the resume repository and transform them to plain text. To ensure the coverage of sampling, we sample resumes from different domains, e.g., Internet Tech-nology , Chemical Engineering and Business Management , etc. We then select a pool of features (words) from each do-main, according to the weight information of each feature. Here the weight is represented as the tf.idf value of the cor-responding word. For each domain, we empirically choose 1,000 features and then finalize the extracted profile as a fea-ture vector. We concatenate such vector to p s introduced in  X  3.1. Note that each user X  X  p s has an additional label, i.e., the domain name, for further comparison.
Besides the static information provided by users, the sys-tem has various ways to interact with users, and conse-quently collects users X  behavioral activities. For instance, we provide functionalities such as searching and recommen-dation: users can feed some input, e.g., keywords, into the system, and then click on some preferred profiles from the search result; users can also receive recommendations from the system, and then choose some of them to view. Such behavioral information would be helpful to construct the preference of users and improve the quality of user profiles.
In our system, a user X  X  activities, including searching and clicking, are automatically recorded and maintained in the format of log files. Table 3 shows an interpreted log file ex-ample of recruiters searching job applicants. Note that in Search Criteria , the three values correspond to Keywords , Domain and Working years ,andthe Duration means that the time that the user spends on reading candidates profiles. The log file in our system is parsed into two components: the search interest and the click interest . Search interest is ob-tained from the Search Criteria , presented by an interest vector, where each entry denotes a keyword associated with the domain, and the weight of the entry is the normalized duration. This vector is concatenated to the user X  X  prefer-ence vector. Click interest is obtained from the Clicks . Such information is useful when we perform collaborative filtering based recommendation to individuals.
The recommendation module is designed for users who do not have definite preferences on either job positions or job applicants. For example, for job seekers who only have some general career interest with a broad range of preferences ,the results generated purely based on the job search module might not be able to satisfy such users X  appetite, i.e., the results need to be further refined to help the job seeker figure out his/her preferred jobs.

The recommendation module includes three different sub-modules, categorized by the recommendation techniques, i.e., content-filtering module, collaborative filtering module, and reciprocal recommendation module. In the following, we will discuss the algorithmic details within each submodule.
The principle of content filtering methods is to sequen-tially find items from the search result similar to the target user X  X  preference in terms of  X  X ontent X . In iHR , the  X  X ontent X  refers to user profiles that are generated in  X  3, including job seekers X  and recruiters X  profiles. Specific similarity measure-ments can be adopted to evaluate the relatedness between the target user and items in the search result, e.g., the re-latedness between a job seeker and a series of job posts.
In this module, we focus on evaluating how relevant the users in the search result are to the target user. Formally, given a target user u  X  X  profile p u and a set of search result Q u , our goal is to select a subset  X  Q u  X  X  u such that  X  v  X   X  Q u , v  X  X  profile p v is relevant to p u in terms of a predefined relevance measurement. Under the scenario of job matching, we only consider the features that indicate the preference of the target user when calculating the relevance. For example, assume a job seeker u has his/her preference profile p p u what types of jobs and which salary range that u prefers. After u feeds some keywords into the system, the system returns a set of job posts Q u .Within Q u ,werankallthe candidates v based on the similarity and then choose the top ranked ones as the final recom-mendation result. Note that in our system p p u and p s v processed to have the same cardinality. In summary, this module is built purely based on the content of users X  profiles (i.e., job seekers and recruiters).
Collaborative filtering methods are designed based on user X  X  historical accessing behaviors, e.g., what kinds of job posts have been clicked by a job seeker before. It considers  X  X im-ilar X  users X  accessing history, and then recommends to the target user a list of items that have been accessed by these  X  X imilar X  users. Therefore, the key step is to find  X  X imilar X  users in terms of the accessing history.

In our system, we expand the concept of collaborative filtering to a broader case, i.e., to consider some content information when calculating the similarity between users. Specifically, we take into account a user u  X  X  preference pro-file p p u and the search history profile p h u . The similarity be-tween two users u and v (both are job seekers or recruiters), sim ( u, v ), can be calculated as
After obtaining a list of users similar to the target user u , we sequentially check the search result to see if users in the list have accessed them or not. We then rank the search result based on the access count and recommend top ranked ones to the target user.
The aforementioned two modules do not take into account the properties of job matching systems. In this module, we analyze the special characteristics within the job matching domain, and then propose a reciprocal strategy.
Recently, a special class of recommender systems, called reciprocal recommender, has emerged. Reciprocal recom-mender systems refer to systems from which users can obtain recommendations of other individuals by satisfying prefer-ences of both users being involved. Examples of recipro-cal recommenders include online dating services, mentor-mentee matching, consumer-to-consumer marketplaces, and etc. The job matching system is also a type of reciprocal rec-ommender systems. Reciprocal recommendation has gained increasing attention in academia in the last decade [2, 3, 4, 6, 10, 16, 23, 24, 25, 29]. Most of the existing works focus on the domain of online dating. Reciprocity : In traditional user  X  item recommender sys-tems, only unilateral preferences are considered, i.e., the users X  preferences on items. However, in the domain of job matching, both users being involved in the recommendation have their preferences against with each other; in such a situation, only considering unilateral preference might not be reasonable. In other words, the success of a match de-pends on the bilateral preference, but not solely on the user who receives the recommendation. This is the key feature of a reciprocal recommender that differentiates it from the traditional user  X  item recommendation paradigm.

In our system, job seekers and recruiters have their self-descriptive information, and also the preferences on either job positions or applicants. Given a target user u and a search result list Q u , we are interested in finding a rele-vant user v  X  X  u , such that ( u , v ) is a successful match. By relevance , we mean that the self-description of user v , matches the preference profile of user u , p p u ,andatthe meantime, the self-description of user u , p s u ,matchesthe preference of user v , p p v . Therefore, the relevance includes two components, rel ( u  X  v )and rel ( v  X  u ). Here the rel-evance is calculated using the cosine similarity between the vectors. We then formalize the relevance between u and v as rel ( u, v )= rel ( u  X  v )  X  rel ( v  X  u ).
 Availability : In traditional recommenders, an item can be preferred by a great amount of users, e.g., a music album by the musician Michael Jackson. However, in a job matching system, people have limited availability towards other peo-ple, e.g., a job seeker cannot have 100 interviews with dif-ferent companies simultaneously. Therefore, when designing the recommendation strategy for job matching systems, we need to consider the availability of users so that all the users can obtain reasonable recommendation results.

In iHR , we intentionally record the number of times that a user has been recommended to other users. If a user has been recommended to other users so many times in a time range, e.g. a week, we regard the availability of this user as low; similarly, if a user is a new registered user, then this user has higher availability. Particularly, for job seekers and recruiters, we set different thresholds to indicate the extent of their availability. For example, the threshold for job seekers is set to be 20, i.e., if the number of times that a job seeker is recommended to other users exceeds 20 in a time range, we will not recommend this job seeker any more. Similarly, the threshold for recruiters is set to be 50. Diversity : In general, the search result contains a lot of records, some of which might be similar in terms of specific features. For example, two job candidates may have the same GPA and similar education background. If we recom-mend both of them to a recruiter, the recruiter may spend time and other resources to distinguish which candidate is better. In our system, we try to go beyond such estab-lished paradigm. Instead, we provide users diverse recom-mendation results to help them efficiently classify the candi-dates. Here  X  X iverse X  means that the candidates in the rec-ommended result might exhibit different personal strengths.
In job matching system, when a user, e.g., a job seeker, searches job positions, he/she might have more preference on the top ranked results. When the user scrolls down the browser and clicks on the job posts, he/she might lose pa-tience to view the details of the result. In other words, the interestingness of job posts with respect to a job seeker could be regressive (the situation also holds when a recruiter searches job candidates), which is known as the  X  X ubmod-ularity X . In this recommendation module, we model the recommendation problem as a budgeted maximum coverage problem [9], and incorporate the special properties intro-duced in  X  4.3.2 into the solution.
 Introduction to Submodularity :Let E be a finite set and f be a real valued nondecreasing function defined on the subsets of E that satisfies where S  X  T , S and T are two subsets of E ,and  X   X  E \ T Then f is called a submodular function [21]. By adding one element to a larger set T , the value increment of f can never be larger than that by adding one element to a smaller set S . Submodularity modeling has been employed into mul-tiple research areas, e.g., document summarization [14, 18], news recommendation [15], graph mining [30], etc.
The budgeted maximum coverage problem is then de-scribed as: given a set of elements E where each element is associated with an influence and a cost defined over a domain of these elements and a budget B , the goal is to find out a subset of E which has the largest possible influ-ence while the total cost does not exceed B . This problem is NP-hard [9]. However, [9] proposed a greedy algorithm which picks up the element that increases the largest possi-ble influence within the cost limit each time and guarantees the influence of the result subset is (1  X  1 /e )-approximation. Submodularity resides in each  X  X ick up X  step. A key obser-vation is that submodular functions are closed under non-negative linear combinations [13].
 Submodularity Model : In our recommendation model, we consider the properties introduced in  X  4.3.2, i.e., Reciprocity , Availability and Diversity . Given a target user u and a search result Q , we try to sequentially select items from and then put them into a new set S . The selection strategy can be described as follows (note that  X  is the item being selected). After selection  X  ,weexpectthat(1) S should provide more relevance to the target user u ; and (2) The diversity in S should not deviate too much. Per the above strategy, we define a function f to measure the quality of the current selected set S against Q as f (
S )= 1 where v 1 and v 2 denote users in Q ,  X  indicates the availabil-ity of the user v 1 , rel (  X  ,  X  ) represents the relevance between two users (e.g., a job seeker and recruiter), and sim (  X  ,  X  notes the similarity between two users (e.g., two job seekers).
In Eq.(4), two components are involved corresponding to the user selection strategy listed above. The former aims to evaluate how relevant that the selected user set S is to the target user u , whereas the latter gives us the evidence that how diverse the selected set S is. Note that we use  X  to indicate the availability of a user, i.e., the number of times that the user has been recommended to other users. We take the reverse of  X  to reduce the possibility of the user being selected into S . f ( S ) balances the contribution of different components, and clearly the two components are naturally submodular functions. Based on the non-negative linear invariability of the submodularity function [13], f is also a submodular function.

Suppose  X  is the candidate user, the quality increase is therefore represented as The goal is to select a list of users from Q with the largest possible quality increase under the budget. A greedy algo-rithm is employed to solve this problem. Note that in iHR the budget is set to 100, i.e., to provide users at most 100 candidates by refining the search result.
The aforementioned recommendation methods capture dif-ferent aspects of the relevant results. In our system, we provide a recommendation fusion strategy to integrate the recommended results. Specifically, different weights are as-signed to the ranking scores of results obtained from the three methods. Formally, let r cot , r cof and r rep denote the ranking scores from content filtering, collaborative filtering and reciprocal filtering, our recommendation fusion model towards selecting an item i can be described as where  X  ,  X  and  X  represent the weights of the corresponding scores, s.t.  X  +  X  +  X  = 1. Different weighting schemes of  X  and  X  characterize different information needs of users: Figure 4: An illustrative example of the recommen-dation fusion model.
 In our current system, the three scores are treated equally. For our future work, the parameters,  X  ,  X  and  X  , will be tuned incrementally as the system collects more information about users. Figure 4 shows some recommended results to a job seeker who is looking for  X  X anager X  positions. The left part of the figure describes the scores of the recommended job positions in a scale of 1-5.
Up to now, iHR has been deployed online for practical use, with over 699,600 visits per day. In our system, we propose a reciprocal recommendation method that emphasizes the bilateral correlations between job seekers and recruiters.
We perform quantitative evaluation on our proposed re-ciprocal recommendation strategy. The data used for experi-ments is a sampled data set collected from iHR , including the profiles and activities for users from Jan, 2008 to Oct, 2011. We transform the features using the strategy described in  X  3.1, and then calculate the user relevance based on the new feature space. The data statistics is depicted in Table 4.
For experiments, we split the data set into training and testing sets. Each set includes two sets of users, associated with their interactive activities, as shown in Table 4. For each user in the testing set, we recommend top ranked users (top@10, top@20 and top@30) at each week of the testing range using different strategies. Within the testing set, each user has a series of activities, e.g., adding job positions as favorite. Based on these activities, we use different metrics to evaluate the quality of the recommended list.

Set Evaluation : For comparison, we compute the averaged precision and recall based on users X  activities. Specifically, the ground truth of a user u  X  X  activities, including who have been clicked or contacted by u , is denoted by M ,andthe recommended user list by algorithms is denoted by N .Then the precision ( P )andrecall( R ) can be computed as We then compute the F 1 -score of the recommendation re-
Ranking Evaluation : We employ Normalized Discount Cu-mulative Gain (NDCG) to evaluate the ranking quality of the recommended list based on a user X  X  actual activity se-quence. NDCG at position n is defined as where N ( n ) is the NDCG at n of the ideal ranking list, and r i is the relevance rating of item at rank i .Inour scenario, r i = 1 if the user has clicked on or contacted with the recommended users and 0 otherwise.
Here we only compare the reciprocal strategy in iHR with other existing methods. We choose two recently published collaborative filtering methods [8, 17] as our baselines. [8] (CFIF for short) proposed treating the data as indication of positive and negative preference associated with vastly varying confidence levels, which is a pure collaborative fil-tering approach. [17] (OCCF for short) exploited the rich user information available in community-based interactive information systems, and incorporated user information into modeling the recommendation. For this method, we use the neighborhood model as the baseline. We also implement GBDTs [6], RECON [23] and CCR [2] for comparison. We use F 1 -score and NDCG to compare these algorithms with iHR . The feature set used in all the methods are identical to the one in our proposed method, and also the parameters are optimally tuned.
 Table 5: Comparison with existing methods. (Bold indicates the best performance. * indicates the sta-tistical significance at p&lt; 0 . 01 .)
The results are shown in Table 5. It is evident that iHR significantly outperforms the baselines on both F 1 -score and NDCG. The two collaborative filtering based methods can-not effectively handle the reciprocal task. We investigated the recommendation results of both methods and found that users in most recommended matches are relevant. However, a significant reason that both users in a match have few or even no interactions is that the recommended user has been recommended to multiple users, and therefore he/she has limited availability . The three reciprocal methods being compared can slightly improve the recommendation perfor-mance; however, they only focus on different aspects of the reciprocal community. Instead, iHR with reciprocal recom-mendation provides a comprehensive overview of the recip-rocal network, and therefore achieves the best.
In order to evaluate the efficacy of iHR , we present a survey to each valid user to collect user experiences. The purpose of the survey is to evaluate how users feel about the results generated by different algorithms. These three methods are parallel in the system, i.e., users have the choice to check different recommendation results from different algorithms. The survey covers several aspects for evaluation, including relevance , interpretability , diversity and ordering .Sample questionnaire statements [26] are listed in Table 6. Table 6: Sample questionnaire statements used in our survey. (Remark: The scale is 1-5. 1  X  worst, 5  X  best. Reverse scale: 1  X  best, 5  X  worst.) Aspects Statements
Relevance
Interpret-ability
Diversity
Ordering
Based on these aspects, we define the corresponding in-dices to measure the satisfaction of online users (i.e., job seekers and recruiters). Each experience index is rated by users in a range of 1 to 5, where 1  X   X  X xecrable X , 2  X   X  X elow Average X , 3  X   X  X verage X , 4  X   X  X bove Average X , and 5  X   X  X x-ceptional X . We collect users X  feedbacks on these experience indices from October 2011 to January 2012. At the end of the evaluation period, we have obtained over 500,000 valid feedbacks from users. To analyze the experience result, we calculate the percentages of users with different ratings on the indices, and then plot them in Figure 5.

From the result, we observe that the reciprocal recom-mendation method outperforms the other two methods in terms of user experience. Particularly, for the  X  X elevance X  index, over 50% of users vote the reciprocal method as above average, thanks to the paradigm that considers the mutual Figure 5: User experience results on different expe-rience indices. For each index, Bar1 represents the results of content filtering, Bar2 shows the results of collaborative filtering, and Bar3 indicates the results of reciprocal recommendation. relevance between job seekers and recruiters. For the  X  X nter-pretability X  index, over 65% of users regard the recommen-dation result more interpretable, since we explicitly present the bilateral relations between job seekers and recruiters, which renders the result more explainable. For the  X  X iver-sity X  X nd X  X rdering X  X ndices, over 51% and 54% of users vote the reciprocal method as above average. The underlying rea-son is that we elaborately design the selection strategy by considering the properties of job matching systems.
Xiamen Talent Service Center has spent over $300K in the development, deployment and maintenance of iHR , and has received over $150K in sponsored government funding. The system is maintained 24/7 to ensure the smooth running of database, web server and hardware. The system is used by over 1,770,000 users, including job seekers (1,700,000) and enterprises (70,000) from local and adjacent job marketing communities. iHR facilitates the booming of the careers fair, and therefore stimulates healthy economic development in the city of Xiamen. With the development over five years, iHR has been selected as one of the most prominent and in-fluential online recruiting platforms in China .

In iHR , we employ pragmatic techniques in data mining and recommendation to help strengthen the system experi-ence. To effectively construct the users X  profiles, we synthe-size information from three different channels to maximally discover and understand users X  preferences. To satisfy differ-ent information needs, we integrate search and recommen-dation into a mutually promoted framework. To enhance the recommendation for more effective information refining, we propose a comprehensive strategy to simultaneously con-sider the appetite of job seekers and recruiters. The poten-tial impact of this research on the development of job market community is enormous.

Due to the expensive maintenance of the system, in prac-tice it is very difficult to evaluate the effect of each compo-nent in our running system, such as the profile construction (using users X  demographic information, extracted informa-tion and behavioral information for profile fusion) and the individual characteristic of reciprocal recommendation (in-cluding reciprocity, availability and diversity). In the future, we plan to perform comprehensive evaluation on these as-pects to learn how well each component works in our system. The project was supported by the Natural Science Founda-tion of Fujian Province of China under Grant No. 2011J05157 and by the National Natural Science Foundation of China under Grant No. 61070151. The work of Lei Li and Tao Li was supported in part by the US National Science Founda-tion under Grant DBI-0850203, HRD-0833093, DMS-0915110, and CNS-1126619, and by the Army Research Office under Grant W911NF-12-1-0431.
