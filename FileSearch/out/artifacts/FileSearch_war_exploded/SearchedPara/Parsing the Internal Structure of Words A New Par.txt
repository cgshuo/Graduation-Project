 Research in Chinese word segmentation has pro-gressed tremendously in recent years, with state of the art performing at around 97% in precision and recall (Xue, 2003; Gao et al., 2005; Zhang and Clark, 2007; Li and Sun, 2009). However, virtually all these systems focus exclusively on recognizing the word boundaries, giving no consideration to the internal structures of many words. Though it has been the standard practice for many years, we argue that this paradigm is inadequate both in theory and in practice, for at least the following four reasons.
The first reason is that if we confine our defi-nition of word segmentation to the identification of word boundaries, then people tend to have divergent opinions as to whether a linguistic unit is a word or not (Sproat et al., 1996). This has led to many dif-ferent annotation standards for Chinese word seg-mentation. Even worse, this could cause inconsis-tency in the same corpus. For instance,  X   X   X   X  X ice president X  is considered to be one word in the Penn Chinese Treebank (Xue et al., 2005), but is split into two words by the Peking University cor-pus in the SIGHAN Bakeoffs (Sproat and Emerson, 2003). Meanwhile,  X   X   X   X  X ice director X  and  X   X   X   X  X eputy manager X  are both segmented into two words in the same Penn Chinese Treebank. In fact, all these words are composed of the prefix  X   X  X ice X  and a root word. Thus the structure of  X   X   X   X  X ice president X  can be represented with the tree in Fig-ure 1. Without a doubt, there is complete agree-ment on the correctness of this structure among na-tive Chinese speakers. So if instead of annotating only word boundaries, we annotate the structures of every word, 1 then the annotation tends to be more consistent and there could be less duplication of ef-forts in developing the expensive annotated corpus.
The second reason is applications have different requirements for granularity of words. Take the per-sonal name  X   X   X   X  X hou Shuren X  as an example. It X  X  considered to be one word in the Penn Chinese Treebank, but is segmented into a surname and a given name in the Peking University corpus. For some applications such as information extraction, the former segmentation is adequate, while for oth-ers like machine translation, the later finer-grained output is more preferable. If the analyzer can pro-duce a structure as shown in Figure 4(a), then ev-ery application can extract what it needs from this tree. A solution with tree output like this is more el-egant than approaches which try to meet the needs of different applications in post-processing (Gao et al., 2004).

The third reason is that traditional word segmen-tation has problems in handling many phenomena in Chinese. For example, the telescopic compound  X   X   X  X  X   X  X niversities, middle schools and primary schools X  is in fact composed of three coordinating el-ements  X   X   X  X niversity X ,  X   X   X  X iddle school X  and  X  X  X   X  X rimary school X . Regarding it as one flat word loses this important information. Another example is separable words like  X  X  X   X  X wim X . With a lin-ear segmentation, the meaning of  X  X wimming X  as in  X   X   X   X  X fter swimming X  cannot be properly rep-resented, since  X  X  X   X  X wim X  will be segmented into discontinuous units. These language usages lie at the boundary between syntax and morphology, and are not uncommon in Chinese. They can be adequately represented with trees (Figure 2). (a) NN
The last reason why we should care about word structures is related to head driven statistical parsers (Collins, 2003). To illustrate this, note that in the Penn Chinese Treebank, the word  X   X   X   X   X  X n-glish People X  does not occur at all. Hence con-stituents headed by such words could cause some difficulty for head driven models in which out-of-vocabulary words need to be treated specially both when they are generated and when they are condi-tioned upon. But this word is in turn headed by its suffix  X   X  X eople X , and there are 2,233 such words in Penn Chinese Treebank. If we annotate the struc-ture of every compound containing this suffix (e.g. Figure 3), such data sparsity simply goes away.
Had there been only a few words with inter-nal structures, current Chinese word segmentation paradigm would be sufficient. We could simply re-cover word structures in post-processing. But this is far from the truth. In Chinese there is a large number of such words. We just name a few classes of these words and give one example for each class (a dot is used to separate roots from affixes): personal name:  X   X   X   X   X  X agao Makoto X  location name:  X   X   X   X   X  X ew York State X  noun with a suffix:  X   X   X   X   X  X lassifier X  noun with a prefix:  X   X   X  X  X   X  X other-to-be X  verb with a suffix:  X   X   X   X   X  X utomatize X  verb with a prefix:  X   X   X   X  X aterproof X  adjective with a suffix:  X   X   X   X   X  X omposite X  adjective with a prefix:  X   X   X   X   X  X nformal X  pronoun with a prefix:  X   X   X   X  X verybody X  time expression:  X   X  X  X   X   X   X   X  X he year 1995 X  ordinal number:  X   X   X   X   X  X leventh X  retroflex suffixation:  X   X   X   X   X  X lower X  This list is not meant to be complete, but we can get a feel of how extensive the words with non-trivial structures can be. With so many productive suf-fixes and prefixes, analyzing word structures in post-processing is difficult, because a character may or may not act as an affix depending on the context. For example, the character  X   X  X eople X  in  X   X   X   X  X he one who plants X  is a suffix, but in the personal name  X   X   X   X  X hou Shuren X  it isn X  X . The structures of these two words are shown in Figure 4.
A second reason why generally we cannot re-cover word structures in post-processing is that some words have very complex structures. For example, the tree of  X   X   X   X   X   X   X  X narchist X  is shown in Figure 5. Parsing this structure correctly without a principled method is difficult and messy, if not im-possible.

Finally, it must be mentioned that we cannot store all word structures in a dictionary, as the word for-mation process is very dynamic and productive in nature. Take  X   X  X all X  as an example. Standard Chi-nese dictionaries usually contain  X   X   X   X  X ibrary X , but not many other words such as  X   X   X   X  X quar-ium X  generated by this same character. This is un-derstandable since the character  X   X  X all X  is so pro-ductive that it is impossible for a dictionary to list every word with this character as a suffix. The same thing happens for natural language processing sys-tems. Thus it is necessary to have a dynamic mech-anism for parsing word structures.
 In this paper, we propose a new paradigm for Chinese word segmentation in which not only word boundaries are identified but the internal structures of words are recovered (Section 3). To achieve this, we design a joint morphological and syntactic pars-ing model of Chinese (Section 4). Our generative story describes the complete process from sentence and word structures to the surface string of char-acters in a top-down fashion. With this probabil-ity model, we give an algorithm to find the parse tree of a raw sentence with the highest probabil-ity (Section 5). The output of our parser incorpo-rates word structures naturally. Evaluation shows that the model can learn much of the regularity of word structures, and also achieves reasonable ac-curacy in parsing higher level constituent structures (Section 6). The necessity of parsing word structures has been noticed by Zhao (2009), who presented a character-level dependency scheme as an alternative to the lin-ear representation of words. Although our work is based on the same notion, there are two key dif-ferences. The first one is that part-of-speech tags and constituent labels are fundamental for our pars-ing model, while Zhao focused on unlabeled depen-dencies between characters in a word, and part-of-speech information was not utilized. Secondly, we distinguish explicitly the generation of flat words such as  X   X   X   X  X ashington X  and words with inter-nal structures. Our parsing algorithm also has to be adapted accordingly. Such distinction was not made in Zhao X  X  parsing model and algorithm.

Many researchers have also noticed the awkward-ness and insufficiency of current boundary-only Chi-nese word segmentation paradigm, so they tried to customize the output to meet the requirements of various applications (Wu, 2003; Gao et al., 2004). In a related research, Jiang et al. (2009) presented a strategy to transfer annotated corpora between dif-ferent segmentation standards in the hope of saving some expensive human labor. We believe the best solution to the problem of divergent standards and requirements is to annotate and analyze word struc-tures. Then applications can make use of these struc-tures according to their own convenience.
Since the distinction between morphology and syntax in Chinese is somewhat blurred, our model for word structure parsing is integrated with con-stituent parsing. There has been many efforts to in-tegrate Chinese word segmentation, part-of-speech tagging and parsing (Wu and Zixin, 1998; Zhou and Su, 2003; Luo, 2003; Fung et al., 2004). However, in these research all words were considered to be flat, and thus word structures were not parsed. This is a crucial difference with our work. Specifically, consider the word  X  X   X   X  X live oil X . Our parser output tree Figure 6(a), while Luo (2003) output tree (b), giving no hint to the structure of this word since the result is the same with a real flat word  X   X   X   X  X os Angeles X (c). (a) NN
The benefits of joint modeling has been noticed by many. For example, Li et al. (2010) reported that a joint syntactic and semantic model improved the accuracy of both tasks, while Ng and Low (2004) showed it X  X  beneficial to integrate word segmenta-tion and part-of-speech tagging into one model. The later result is confirmed by many others (Zhang and Clark, 2008; Jiang et al., 2008; Kruengkrai et al., 2009). Goldberg and Tsarfaty (2008) showed that a single model for morphological segmentation and syntactic parsing of Hebrew yielded an error reduc-tion of 12% over the best pipelined models. This is because an integrated approach can effectively take into account more information from different levels of analysis.

Parsing of Chinese word structures can be re-duced to the usual constituent parsing, for which there has been great progress in the past several years. Our generative model for unified word and phrase structure parsing is a direct adaptation of the model presented by Collins (2003). Many other ap-proaches of constituent parsing also use this kind of head-driven generative models (Charniak, 1997; Bikel and Chiang, 2000) . Given a raw Chinese sentence like  X   X   X   X   X   X   X   X  , a traditional word segmentation system would output some result like  X   X   X   X   X   X   X   X  ( X  X in Zhihao X ,  X  X s X ,  X  X hief engineer X ). In our new paradigm, the output should at least be a linear se-quence of trees representing the structures of each word as in Figure 7.

Note that in the proposed output, all words are an-notated with their part-of-speech tags. This is nec-essary since part-of-speech plays an important role in the generation of compound words. For example,  X   X  X erson X  usually combines with a verb to form a compound noun such as  X   X   X   X  X esigner X .

In this paper, we will actually design an integrated morphological and syntactical parser trained with a treebank. Therefore, the real output of our sys-tem looks like Figure 8. It X  X  clear that besides all the information of the proposed output for the new paradigm, our model X  X  output also includes higher-level syntactic parsing results. 3.1 Training Data We employ a statistical model to parse phrase and word structures as illustrated in Figure 8. The cur-rently available treebank for us is the Penn Chinese Treebank (CTB) 5.0 (Xue et al., 2005). Because our model belongs to the family of head-driven statisti-cal parsing models (Collins, 2003), we use the head-finding rules described by Sun and Jurafsky (2004).
Unfortunately, this treebank or any other tree-banks for that matter, does not contain annotations of word structures. Therefore, we must annotate these structures by ourselves. The good news is that the annotation is not too complicated. First, we ex-tract all words in the treebank and check each of them manually. Words with non-trivial structures are thus annotated. Finally, we install these small trees of words into the original treebank. Whether a word has structures or not is mostly context indepen-dent, so we only have to annotate each word once. There are two noteworthy issues in this process. Firstly, as we X  X l see in Section 4, flat words and non-flat words will be modeled differently, thus it X  X  important to adapt the part-of-speech tags to facili-tate this modeling strategy. For example, the tag for nouns is NN as in  X   X   X   X  X raq X  and  X   X   X   X  X or-mer president X . After annotation, the former is flat, but the later has a structure (Figure 9). So we change the POS tag for flat nouns to NNf, then during bot-tom up parsing, whenever a new constituent ending with  X  X  X  is found, we can assign it a probability in a way different from a structured word or phrase.
Secondly, we should record the head position of each word tree in accordance with the requirements of head driven parsing models. As an example, the right tree in Figure 9 has the context free rule  X  X N  X  JJf NNf X , the head of which should be the right-most NNf. Therefore, in  X   X   X   X  X ormer president X  the head is  X   X   X  X resident X .

In passing, the readers should note the fact that in Figure 9, we have to add a parent labeled NN to the flat word  X   X   X   X  X raq X  so as not to change the context-free rules contained inherently in the origi-nal treebank. Given an observed raw sentences S , our generative model tells a story about how this surface sequence of Chinese characters is generated with a linguisti-cally plausible morphological and syntactical pro-cess, thereby defining a joint probability Pr( T,S ) where T is a parse tree carrying word structures as well as phrase structures. With this model, the pars-ing problem is to search for the tree T  X  such that
The generation of S is defined in a top down fash-ion, which can be roughly summarized as follows. First, the lexicalized constituent structures are gen-erated, then the lexicalized structure of each word is generated. Finally, flat words with no structures are generated. As soon as this is done, we get a tree whose leaves are Chinese characters and can be con-catenated to get the surface character sequence S . 4.1 Generation of Constituent Structures Each node in the constituent tree corresponds to a lexicalized context free rule where P , L i , R i and H are lexicalized nonterminals and H is the head. To generate this constituent, first P is generated, then the head child H is generated conditioned on P , and finally each L i and R j are generated conditioned on P and H and a distance metric. This breakdown of lexicalized PCFG rules is essentially the Model 2 defined by Collins (1999). We refer the readers to Collins X  thesis for further de-tails. 4.2 Generation of Words with Internal Words with rich internal structures can be described using a context-free grammar formalism as Here the root is any word without interesting internal structures, and the prefixes and suffixes are not lim-ited to single characters. For example,  X   X   X  X sm X  as in  X   X   X   X   X  X odernism X  is a well known and very productive suffix. Also, we can see that rules (4) and (5) are recursive and hence can handle words with very complex structures.

By (3) X (5), the generation of word structures is exactly the same as that of ordinary phrase struc-tures. Hence the probabilities of these words can be defined in the same way as higher level constituents in (2). Note that in our case, each word with struc-tures is naturally lexicalized, since in the annotation process we have been careful to record the head po-sition of each complex word.

As an example, consider a word w = R ( r ) S ( s ) where R is the root part-of-speech headed by the word r , and S is the suffix part-of-speech headed by s . If the head of this word is its suffix, then we can define the probability of w by This is equivalent to saying that to generate w , we first generate its head S ( s ) , then conditioned on this head, other components of this word are generated. In actual parsing, because a word always occurs in some contexts, the above probability should also be conditioned on these contexts, such as its parent and the parent X  X  head word. 4.3 Generation of Flat Words We say a word is flat if it contains only one mor-pheme such as  X   X   X   X  X raq X , or if it is a compound like  X   X   X  X evelop X  which does not have a produc-tive component we are currently interested in. De-pending on whether a flat word is known or not, their generative probabilities are computed also dif-ferently. Generation of flat words seen in training is trivial and deterministic since every phrase and word structure rules are lexicalized.

However, the generation of unknown flat words is a different story. During training, words that oc-cur less than 6 times are substituted with the symbol UNKNOWN . In testing, unknown words are gener-ated after the generation of symbol UNKNOWN , and we define their probability by a first-order Markov model. That is, given a flat word w = c 1 c 2  X  X  X  c n not seen in training, we define its probability condi-tioned with the part-of-speech p as where c 0 is taken to be a START symbol indicating the left boundary of a word and c n +1 is the STOP symbol to indicate the right boundary. Note that the generation of w is only conditioned on its part-of-speech p , ignoring the larger constituent or word in which w occurs.

We use a back-off strategy to smooth the proba-bilities in (7): where  X  1 +  X  2 +  X  3 = 1 to ensure the conditional probability is well formed. These  X  s will be esti-mated with held-out data. The probabilities on the right side of (8) can be estimated with simple counts: The other probabilities can be estimated in the same way. 4.4 Summary of the Generative Story We make a brief summary of our generative story for the integrated morphological and syntactic parsing model. For a sentence S and its parse tree T , if we denote the set of lexicalized phrase structures in T by C , the set of lexicalized word structures by W , and the set of unknown flat words by F , then the joint probability Pr( T,S ) according to our model is
Pr( T,S ) = Y In practice, the logarithm of this probability can be calculated instead to avoid numerical difficulties. To find the parse tree with highest probability we use a chart parser adapted from Collins (1999). Two key changes must be made to the search process, though. Firstly, because we are proposing a new paradigm for Chinese word segmentation, the input to the parser must be raw sentences by definition. Hence to use the bottom-up parser, we need a lex-icon of all characters together with what roles they can play in a flat word. We can get this lexicon from the treebank. For example, from the word  X   X  /NNf  X  X enter X , we can extract a role bNNf for character  X   X  X iddle X  and a role eNNf for character  X   X  X enter X . The role bNNf means the beginning of the flat la-bel NNf, while eNNf stands for the end of the label NNf. This scheme was first proposed by Luo (2003) in his character-based Chinese parser, and we find it quite adequate for our purpose here.

Secondly, in the bottom-up parser for head driven models, whenever a new edge is found, we must as-sign it a probability and a head word. If the newly discovered constituent is a flat word (its label ends with  X  X  X ), then we set its head word to be the con-catenation of all its child characters, i.e. the word itself. If it is an unknown word, we use (7) to assign the probability, otherwise its probability is set to be 1. On the other hand, if the new edge is a phrase or word with internal structures, the probability is set according to (2), while the head word is found with the appropriate head rules. In this bottom-up way, the probability for a complete parse tree is known as soon as it is completed. This probability includes both word generation probabilities and constituent probabilities. For several reasons, it is a little tricky to evaluate the accuracy of our model for integrated morphological and syntactic parsing. First and foremost, we cur-rently know of no other same effort in parsing the structures of Chinese words, and we have to anno-tate word structures by ourselves. Hence there is no baseline performance to compare with. Secondly, simply reporting the accuracy of labeled precision and recall is not very informative because our parser takes raw sentences as input, and its output includes a lot of easy cases like word segmentation and part-of-speech tagging results.

Despite these difficulties, we note that higher-level constituent parsing results are still somewhat comparable with previous performance in parsing Penn Chinese Treebank, because constituent parsing does not involve word structures directly. Having said that, it must be pointed out that the comparison is meaningful only in a limited sense, as in previous literatures on Chinese parsing, the input is always word segmented or even part-of-speech tagged. That is, the bracketing in our case is around characters instead of words. Another observation is we can still evaluate Chinese word segmentation and part-of-speech tagging accuracy, by reading off the cor-responding result from parse trees. Again because we split the words with internal structures into their components, comparison with other systems should be viewed with that in mind.

Based on these discussions, we divide the labels of all constituents into three categories: Phrase labels are the labels in Peen Chinese Tree-POS labels represent part-of-speech tags such as Flat labels are generated in our annotation for With this classification, we report our parser X  X  ac-curacy for phrase labels, which is approximately the accuracy of constituent parsing of Penn Chinese Treebank. We report our parser X  X  word segmenta-tion accuracy based on the flat labels. This accu-racy is in fact the joint accuracy of segmentation and part-of-speech tagging. Most importantly, we can report our parser X  X  accuracy in recovering word structures based on POS labels and flat labels, since word structures may contain only these two kinds of labels.

With the standard split of CTB 5.0 data into train-ing, development and test sets (Zhang and Clark, 2009), the result are summarized in Table 1. For all label categories, the PARSEEVAL measures (Abney et al., 1991) are used in computing the labeled pre-cision and recall.

Though not directly comparable, we can make some remarks to the accuracy of our model. For constituent parsing, the best result on CTB 5.0 is reported to be 78% F 1 measure for unlimited sen-tences with automatically assigned POS tags (Zhang and Clark, 2009). Our result for phrase labels is close to this accuracy. Besides, the result for flat labels compares favorably with the state of the art accuracy of about 93% F 1 for joint word segmen-tation and part-of-speech tagging (Jiang et al., 2008; Kruengkrai et al., 2009). For ordinary word segmen-tation, the best result is reported to be around 97% F 1 on CTB 5.0 (Kruengkrai et al., 2009), while our parser performs at 97.3%, though we should remem-ber that the result concerns flat words only. Finally, we see the performance of word structure recovery is almost as good as the recognition of flat words. This means that parsing word structures accurately is possible with a generative model.

It is interesting to see how well the parser does in recognizing the structure of words that were not seen during training. For this, we sampled 100 such words including those with prefixes or suffixes and personal names. We found that for 82 of these words, our parser can correctly recognize their struc-tures. This means our model has learnt something that generalizes well to unseen words.

In error analysis, we found that the parser tends to over generalize for prefix and suffix characters. For example,  X   X   X   X  X reat writer X  is a noun phrase consisting of an adjective  X   X  X reat X  and a noun  X   X   X  X riter X , as shown in Figure 10(a), but our parser in-correctly analyzed it into a root  X   X   X  X asterpiece X  and a suffix  X   X  X xpert X , as in Figure 10(b). This is because the character  X   X  X xpert X  is a very pro-ductive suffix, as in  X   X   X   X  X hemist X  and  X   X   X   X  X iplomat X . This observation is illuminating because most errors of our parser follow this pattern. Cur-rently we don X  X  have any non-ad hoc way of prevent-ing such kind of over generalization. In this paper we proposed a new paradigm for Chi-nese word segmentation in which not only flat words were identified but words with structures were also parsed. We gave good reasons why this should be done, and we presented an effective method show-ing how this could be done. With the progress in statistical parsing technology and the development of large scale treebanks, the time has now come for this paradigm shift to happen. We believe such a new paradigm for word segmentation is linguisti-cally justified and pragmatically beneficial to real world applications. We showed that word struc-tures can be recovered with high precision, though there X  X  still much room for improvement, especially for higher level constituent parsing.

Our model is generative, but discriminative mod-els such as maximum entropy technique (Berger et al., 1996) can be used in parsing word struc-tures too. Many parsers using these techniques have been proved to be quite successful (Luo, 2003; Fung et al., 2004; Wang et al., 2006). Another possible direction is to combine generative models with discriminative reranking to enhance the accu-racy (Collins and Koo, 2005; Charniak and Johnson, 2005).

Finally, we must note that the use of flat labels such as  X  X Nf X  is less than ideal. The most impor-tant reason these labels are used is we want to com-pare the performance of our parser with previous re-sults in constituent parsing, part-of-speech tagging and word segmentation, as we did in Section 6. The problem with this approach is that word structures and phrase structures are then not treated in a truly unified way, and besides the 33 part-of-speech tags originally contained in Penn Chinese Treebank, an-other 33 tags ending with  X  X  X  are introduced. We leave this problem open for now and plan to address it in future work.
 I would like to thank Professor Maosong Sun for many helpful discussions on topics of Chinese mor-phological and syntactic analysis. The author is sup-ported by NSFC under Grant No. 60873174. Heart-felt thanks also go to the reviewers for many per-tinent comments which have greatly improved the presentation of this paper.

