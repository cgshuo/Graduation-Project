 Protein complexes play essential roles in biological process and they are also important to discover drugs in pharmaceutical process. Recent progress in expe rimental technolo-gies has led to an unprecedented growth in binar y protein-protein in teraction (PPI) data. Despite this accumulation of PPI data, consid erably small amount of protein complexes are identified in vitro. Thus, computational approaches are used to overcome the tech-nological limit for detecting protein complexes. It becomes one of the most important challenges for modern biology to identify protein complexes from binary PPI data. Pro-teins are represented as vertices and their in teractions are represented as edges in the PPI network. Since protein complexes are shown as densely connected subgraphs in PPI network, clustering methods are applied to find them from the network. For example, some used clique finding algorithms to predict protein complexes from PPI network (Spirin and Mirny [23] and Liu et al.[18]). They devised their own methods to merge overlapping cliques.

Besides, Van Dongen (2000)[27] introduced MCL (Markov Clustering) as graph par-titioning method by simulating random walks. It used two operators called expansion and inflation, which boosts strong connections and demotes weak connections. Brohe  X  e et al. (2006)[6] shows the robustness of MCL with comparison to three other clustering algorithms (RNSC[12], SPC[5], MCODE[4]) for detecting protein complexes.

One of the recent emerging techniques is t o use protein core a ttachments methods, which identify protein-complex cores and add attachments into these cores to form pro-tein complexes (CORE[15] and COACH[28]). Li et al.(2010)[17] shows that COACH performs better than seven other clustering algorithms (MCODE[4], RNSC[12], MCL[27], DPClus[3], CFinder[1], DECAFF[16], and CORE[15]) when they are ap-plied to two PPI datasets (DIP[30] and Krogan et al.[13] data).

PPI data has increased by about forty times for the last six years from 50,726(July 2006) to 2,013,176(April 2012) in Biogrid database[25] for Sacchromyces Cerevisiae called baker X  X  yeast, while number of yeast p roteins has grown by just 1.2 times from 5,300 to 6,226 for the same period. It means that PPI networks become more com-plicated and tightly interc onnected. For example, DIP and Krogan data have average degrees of 6.98 and 7.86, respectively, but Biogrid 3.1.85 has an average degree of 62.22 for Sacchromyces Cerevisiae.

Even though the clustering methods which we mentioned before prove their compe-tency in the small size of PPI data (DIP and Krogan data), they show poor performance in the large size of tightly interconnected PPI network (Biogrid 3.1.85). The existing clustering methods are not suitable to detect protein complexes from the tightly inter-connected network such as Biogrid 3.1.85. Normally, they has been experimented with the yeast datasets produced before 2006.

Since Biogrid 3.1.85 is densely connected and hard to partition as shown in Fig.1, the existing algorithms do not perform very well. MCL has low F-measure of 0.0261 by producing 52 clusters for Biogrid 3.1.85 and one of the clusters has included 5,786 proteins out of 6,194 total proteins in PPI network. COACH has predicted a large num-ber of clusters as many as 3,138 and it also shows low F-measure of 0.055 for Biogrid 3.1.85 Scchromyces Cerevisiae.

To detect clusters in such a tightly interconnected network, we introduce new algo-rithm called B3Clustering which finds densely connected subgraphs from tightly inter-connected PPI network. B3Clustering trie s to get protein complexes from each pair of proteins by bisecting vertices of paths with distance of 3 into two groups and calculat-ing the probability of interaction between th em. It chooses vertices with the probability of interaction and check how much two groups have common vertices. If there remain vertices in each group and two groups overlap more than the given threshold, then we identify the union of two groups as a complex. We evaluated B3Clustering using three PPI datasets and compared the results with MCL and COACH. We used CYC2008[22] as a benchmark of protein complexes. B3Clustering shows capability to identify protein complexes in the tightly intercon-nected PPI network as well as partially missing PPI network. We found that it achieved higher F-measure than MCL and COACH.

All the proteins that we mentioned in t his paper are those of Sacchromyces Cere-visiae, so to speak, a baker X  X  yeast. We introduce the basic concepts and explain the methods which B3Clustering uses in the next section. In section 3, we give full details of PPI data and complex benchmark data which we use in this paper. In section 4, we explain the evaluation methods we hire here. We show the results of our experiments in section 5. In the last section, we summarize our project and suggest future improvement of B3Clustering. Protein-protein interaction(PPI) data come in the form of connections between proteins, which is easily described as a graph model. Prot eins are represented as vertices and their interactions are represented as edges in the graph. Since protein complexes are shown as densely connected subgraphs in PPI network, clustering methods are applied to find them from the PPI network. We introduce B3Clustering to identify clusters in the graph and we apply it to detect protein complexes in the PPI network.

B3Clustering proceeds clustering in three st eps. Firstly, it selects vertices and we call it vertex selection step. Secondly, it decides if the vertices can form clusters or not and it is called cluster selection step. Lastly, it merges clusters, which is called trimming step. We introduce terminology we use before we explain three steps. 2.1 Terminology For graph G =( V , E ) , V ( G ) and E ( G ) denote the sets of vertices and edges of G ,re-spectively. We assume that graph G is an undirected and simple graph. One of important objects in B3Clustering is a path with distance of 3. A path in a graph is a sequence of vertices which are connected to the next vertex in the sequence. We use paths with distinct vertices in B3Clustering.
 Definition 1 (3-Path Reachable). Let a graph G on a vertex set V ( G ) be an undirected and simple graph with an edge set E ( G ) . Given two vertices u , v  X  V ( G ) , we say that uis 3-path reachable to v if there exists a path with two distinct internal vertices and three different edges between u and v. We also say that the path is 3-path reachable fromutov.
 That is, u is 3-path reachable to v if there exists a path whose distance is 3. Definition 2 (3-Path Set). Pat h 3 ( u , v ) is defined as the set of paths 3-path reachable fromutov.
 We assume that u , i , j , v are member of V ( G ) and they should be different from each have paths with distance of 3 as members.
 Pat h 3 ( u , v ) .
 Each set includes u and v . Additionally, D u ( u , v ) includes the set of vertices which are linked to v in paths  X  Pat h 3 ( u , v ) . 2.2 Vertex Selection Step B3Clustering detects clusters from every pair of vertices in PPI network. It has three steps to proceed clustering. The first step is vertex selection. We assume that a vertex late the probability to interact with members of other set for each vertex. We define the probability of interaction p u ( i ) and p v ( j ) as follows. w ( i , j ) is an edge weight between i and j . If there exists an edge between i and j ,then w ( i , j ) should be 1. If i is the same vertex with j ,then w ( i , j ) should 1. Otherwise, w ( i , j ) should be 0. j  X  D we remove j from D v ( u , v ) .  X  is the threshold which decides lowest margin for probability of interaction. As the protein complex consist of more proteins, they show lower connectivity, Therefore, we set  X  a lower value when there are more paths with distance of 3, and vice versa.
Let X  X  see Fig.2 as a example. If we start from ( YOR 110 W , YDR 362 C ) ,thenweget
If we calculate the probability of interaction for each vertex in D 1and D 2, each vertex has a value in Table 2.

If We set that  X  is equal to 0.5, then YDR087C is removed from D1 and YDL397C and YDL097C are removed from D2. Finally, we get the D1 and D2 as shown in Table 3. 2.3 Cluster Selection Step After we get D1 and D2 after removing vertices with lower probability of interaction value than  X  , we decide whether the union of D1 and D2 can be a cluster or not. We use similarity value s ( D 1 , D 2 ) between D1 and D2 and define s ( D 1 , D 2 ) as follows. 0.6 in this paper.
 Let X  X  look at example in Table 3. Then the union of D 1and D 2 has 6 members. Since D 1and D 2 has 5 common vertices, s ( YOR 110 W , YDR 362 C ) = 0.833. Hence, D 1  X  D 2 is considered as a cluster because it has higher similarity value than  X  . 2.4 Merging Step Since B3Clustering calculates similarity value from every pair of vertices, it can pro-duce a large number of overlapping clusters. Therefore, we need to merge similar clus-ters together. We calculate the overlapping ratio between clusters and merge similar clusters. We define overlapping ratio l ( C 1 , C 2 ) between cluster C1 and cluster C2 as follows. where  X  is a marginal overlapping threshold. We set  X  = 0 . 9inthispaper.

After merging step, we get final clusters. 3.1 Data We use three PPI datasets for Saccharomyces cerevisiae . One is a dataset from Krogan et al.(2006)[25] and another comes from Dip database[30]. The last dataset is biogrid 3.1.85 downloaded from BIOGRID[25] database 1 .
Krogan and dip datasets are used by Li et al.(2010) to evaluate the performance of several clustering algorithms[17]. As shown in Table 4, Krogan and dip dataset has similar number of average degree, but biogrid has much higher average degree than them. Biogrid has about ten times higher average degree then dip dataset.

PPI data have a high rate of false positives, which has been estimated to be about 50% [24]. The noise of the data disturbs clustering methods to detect protein complexes from PPI data.

We use CYC2008 complexes as a benchmark set. CYC2008 is published by Pu et al.(2008)[22] and it can be downloaded from ( http://wodaklab.org/cyc2008/). CYC2008 provides a comprehensive catelogue of manually curated 408 protein complexes in Sac-charoyces cerevisiae.

CYC2008 complexes consists of 1627 proteins, which is about one quarter of pro-teins in Biogrid 3.1.85. Among the 408 protein complexes, 259 protein complexes are composed of less than four proteins with 97% of connectivity. As the protein complex consist of more proteins, they have lower connectivity.

There are 172 protein complexes consisting of two proteins out of 408 total protein complexes in CYC2008. Two-member complexes exist as a form of edge in a graph so that they should be chosen from edges in PPI networks. For example, we try to detect 172 protein complexes from 193,679 edges in Biogrid 3.1.85.
 3.2 F-Measure Precision, recall, and F-measure have been us ed to evaluate the performance in infor-mation retrieval and data mining. We calculate affinity score used by Li et al.[17] to get F-measure. The neighbourhood affinity score NA(p,b) is defined as follows. where P =( V p , E p ) is a predicted complex and B =( V b , E b ) is a benchmark complex. Precision. Precision is calculated as follows.
 Recall. Recall is calculated as follows.
 F-measure. F-measure is the geometric mean of Precision and recall as follows. We experiment B3Clustering with three datasets. Three databases are Biogrid 3.1.85, Dip, and Krogan as describes in section 3. We experiment MCL and COACH with the same datasets to compare the performance of B3Clustering. We set  X  to be 0.7,  X  to be 0.6, and  X  to be 0.9.
From the results, B3Clustering has the highest F-measure in Krogan data and Biogrid data, but it has lower F-measure than COACH in Dip data. COACH and B3Clustering score F-measure twice higher than MCL in Krogan and Dip datasets as shown in Fig. 4. MCL supposes to have the lowest F-measure because it partitions PPI graph. On the contrary, COACH and B3Clustering consider some of vertices and overlap clusters instead of partitioning.

For Biogrid 3.1.85 data, MCL has a F-measure of 0.0261 by producing 52 clusters, one of which includes 5,786 proteins out of 6,194 total proteins. COACH predicts a large number of clusters as many as 3,138 and only 105 are similar to protein complexes in CYC2008. Since COACH has low precision for Biogrid 3.1.85, it shows low F-measure of 0.055 as well.

B3Clustering has the similar F-measure to COACH in Krogan and Dip data, but it has six times higher F-measure than COACH in Biogrid 3.1.85.

The experimental results show that B3Clustering has the capability to detect clusters from the noisy graph as well as tightly interconnected graph. They support the efficiency and robustness of B3Clustering for protein complex prediction in PPI networks. There exist several clustering algorithms applied to biological networks in order to find protein complexes. One of traditional clustering approaches are maximal clique finding algorithm, which induces complete subgraphs that is not a subset of any larger sub-graph. Clique finding algorithms have been used to predict protein complexes from PPI network (Spirin and Mirny [23] and Liu et al.[18]). They devised their own meth-ods to merge overlapping cliques. Liu et al.[18] proposed an algorithm called CMC (Clistering-based on Maximal Cliques), which used a variant of Czekanowski-Dice dis-tance to rank cliques and merged highly overlapped cliques. If the interaction networks are accuate and complete, then maximal c lique finding algorithm [26] can be ideal for detecting protein complexes from the networks. However, since biological data is highly noisy and incomplete, protein complexes are not formed as shapes of complete sub-graphs in the biological networks. To reduce the impact of the noise in the network, Pei et al.[21] proposed using quasi-cliques instead of maximal cliques. Other approaches employ vertex similarity measures to improve confidence of noisy networks [14].
Besides, Van Dongen (2000)[27] introduced MCL (Markov Clustering) as graph par-titioning method by simulating random walks. It used two operators called expansion and inflation, which boosts strong connections and demotes weak connections. Iter-ative expansion and inflation separate the graphs into many subgraphs. Brohe  X  eetal. (2006)[6] shows the robustness of MCL with comparison to three other clustering algo-rithms (RNSC[12], SPC[5], MCODE[4]) for detecting protein complexes. Each clus-tering algorithm was applied to binary PPI data in order to test the ability to extract complexes from the networks and the clusters were compared with the annotated MIPS complexes [20]
MCODE [4] uses a vertex-weighting method based on the clustering coefficient which assesses the local neighbourhood density of a vertex. MCODE is the overlap-ping clustering approach which allows to overlap clusters.

One of the recent emerging techniques is t o use protein core a ttachments methods, which identify protein-complex cores and add attachments into these cores to form pro-tein complexes (CORE[15] and COACH[28]). Li et al.(2010)[17] shows that COACH performs better than seven other clustering algorithms (MCODE[4], RNSC[12], MCL[27], DPClus[3], CFinder[1], DECAFF[16], and CORE[15]) when they are ap-plied to two PPI datasets (DIP[30] and Krogan et al.[13] data). As the advances of technologies has produced a wealth of data, data becomes compli-cated and erroneous. The noise of the data makes it hard to find desirable results from the overflow of data. We introduce B3Clustering to detect clusters in the complicated and noisy graph. B3Clustering controls the connectivity of clusters according to the size of clusters by two thresholds. Since protein complexes has lower connectivity with larger size, it is reasonable to control thres hold according to the size of protein com-plexes. As we can see in the experimental results, B3Clustering performs better than the existing state-of-art clustering methods in the densely connected graph as well as noisy graph.

In the future, data size will be bigger and data may be more complicated. For saving operation time, we may consider B3Clustering detect clusters from the selected vertex pairs instead of all the vertex pairs.

