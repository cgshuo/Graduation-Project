 We present an extensible java-based platform for contex-tual retrieval based on the probabilistic information retrieval model. Modules for dual indexes, relevance feedback with blind or machine learning approaches and query expansion with context are integrated into the Okapi system to deal with the contextual information. This platform allows easy extension to include other types of contextual information. H.3.3 [ Information Systems ]: Information Retrieval Design Contextual Information Retrieval, Probabilistic Model
Most information retrieval systems do not consider the context information related to a query. Given a query, this type of systems returns a set of documents that are related to this specific query. The retrieval decision is made pri-marily based on the current query and the document col-lection. However, different users may have different needs even though they submit the same query. For example, if the user wants to search  X  X nformation Retrieval in Context (IRIX) X  related articles, and inputs  X  X RIX X  in Google, it will return a mixture of articles about the IRIX operat-ing system and  X  X nformation Retrieval in Context (IRIX) X . However, if the user provides additional information, say  X  X nformation Retrieval X , then the search system can distin-guish documents between the IRIX operating system and IRIX information retrieval. Therefore, it is reasonable that an IR system should consider the contextual information. When there is additional contextual information available, the system should make use of this contextual information to retrieve and rank relevant documents. Okapi, one of the most famous IR systems, does not contain any functional-ity for handling the contextual information. To enrich the Okapi system, we developed an extensible platform for con-textual retrieval.

Figure 1 depicts the overall structure of the platform. We use Okapi BSS as the underlying retrieval system. On top of it, we implement a prototype system to deal with contextual retrieval and develop our own dual index module, machine learning feedback module and query expansion with context module [1]. The context information we consider in this platform includes clarification forms (CF) and some meta-data 1 associated with each topic.

The system takes the clarification forms (CF) as explicit feedback from users. The topic processing module loads the topic files, extracts relevant fields and converts them into the format acceptable by the term processing module. The term processing module extracts terms from the processed topic in full text paragraphs. The machine learning feed-back model takes the blind feedback passages from the result processing module, applies machine learning algorithms to select more relevant passages that are not in the blind feed-back, and passes the new expanded set of feedback passages back to the term processing module. The term process-ing module then expands query terms, updates statistics for the terms, and issues a new query to Okapi BSS. This java based platform also allows us to add more modules into the existing system easily. We are currently implementing the implicit user feedback module which includes search his-tory, past queries and clicked search results. This module will capture a user X  X  implicit search context and can be in-tegrated into the system X  X  retrieval process. such as Genre, Geography, Granularity, Familiarity, Sub-ject and Related Text
