 1. Introduction
Ad hoc wireless networks find applications in civilian opera-tions, emergency search-and-rescue, etc., where setting up and maintaining a communication infrastructure is very difficult.
Multicast thereby becomes a challenge issue in a wireless ad hoc network in recent years due to the necessity of providing communication and coordination among a given set of nodes in all these applications. Meanwhile, it is advantageous to use multicast rather than multiple unicast, especially in ad hoc environment, where bandwidth comes at a premium.

Several multicast routing schemes have been proposed for ad hoc wireless networks in the literature. They are classified as either mesh based or tree based. In a tree-based multicast routing protocol, there is only one path between a pair of source and receiver, thus it can provide more efficiency than mesh-based multicast routing protocol. In a mesh-based multicast routing protocol, there may be more than one path between a pair of source and receiver to delivery data packets, thus it can provide more robustness than tree-based multicast routing protocols.
ODMRP ( Xie et al., 2006 ) is a representative of mesh construction multicast routing protocol. It uses a soft state approach to maintain the mesh, thus making it highly robust. But the robustness is at the expense of high control overhead.
Another disadvantage of ODMRP is that the propagation of same data packets through multiple paths to a receiver makes ODMRP less efficient. A shared-mesh-based approach for multicast communication for ad hoc wireless networks was proposed in the dynamic core-based multicast routing protocol (DCMP) ( Das et al., 2002 ). DCMP ( Das et al., 2002 ) was proposed to overcome these disadvantages in ODMRP. However, DCMP still cannot meet the dynamic changing behavior of ad hoc environment due to the characteristic of ad hoc networks, especially in multimedia traffic that requires high QoS restriction.

In recent years, there have been several approaches proposed for addressing the problems of QoS provision at different levels in mobile ad hoc networks. INSIGNIA ( Lee, 2000 ) attempted to provide QoS guarantees for real-time traffic by adopting an in-band signaling system which contains reservation, restoration and adaptation algorithms. However, one of the constraints in INSIGNIA is that it considers only the bandwidth QoS parameter.
FQMM ( Xiao et al., 2000 ) used a hybrid approach combining the advantage of per-class granularity of DiffServ with per-flow granularity of IntServ. FQMM is a good solution for small and medium size ad hoc networks, but is not suitable for large networks. SWAN ( Ahn et al., 2002 ) adopted distributed control algorithms to provide a stateless service differentiation model in wireless ad hoc networks. One of the drawbacks of SWAN is the local rate control system may not be sufficient to fully support real-time traffic.

With the increasing demand for the provision of multimedia applications, such as Video on Demand (VoD), videoconference, and many WWW-based applications, a great deal of attention is also paid to provide seamless multimedia access in the multicast protocol supported for ad hoc networks. Since the multimedia applications are very sensitive to the available bandwidth, jitters or delays in the networks, some sorts of service quality guarantees are desperately needed. The challenges increase even more for those ad hoc networks that support both best effort services and those with QoS guarantees. In this work, we try to tackle the critical challenge issue by presenting a multicast routing protocol using particle swam optimization (PSO) ( del Valle et al., 2008 ), which not only tries its best to meet the dynamic behavior of network topology and satisfy QoS requirements of multimedia traffic, but also overcome the above-mentioned disadvantages of
ODMRP and DCMP multicast protocols. Meanwhile, a packet scheduler with PSO is employed to provide improved packet delivery for multimedia traffic in a mobile ad hoc network (MANET). The motivation of adopting PSO in our scheme is that
PSO algorithm itself is simple and involves adjusting a few parameters. With little modification, it can be applied to a wide range of applications. Because of this, PSO has received growing interest from researchers in various fields. The proposed approach is also compared with ODMRP and DCMP to verify its feasibility.
The remainder of the paper is organized as follows. In Section 2, we review and give a survey of several representative multicast routing algorithms in the literature. Section 3 presents the proposed protocol, and a priority packet scheduler is proposed in Section 4. In Section 5, our scheme is compared to above-mentioned approaches using GloMoSim wireless network simu-lator. Conclusions are given in Section 6. 2. Related work
As mentioned above, multicast is a challenge issue due to the behavior of the ad hoc networks, such like the frequent path breaks due to mobility of nodes. Hence it is necessary to have efficient multicast group maintenance. Maintaining the multicast group can be generally classified as either soft state approach or hard state approach. In the soft state approach, the multicast group membership and associated routes are refreshed periodi-cally which necessitate flooding of control packets. On the contrary, the routes are reconfigured only when a link breaks in the hard state approach, thus making it a reactive scheme. Some examples of tree-based multicast protocols are Ad hoc Multicast Routing (AMRoute) ( Chen et al., 2006 ), Ad hoc Multicast
Routing protocol utilizing Increasing id-numberS (AMRIS) (Mazinan et al., 2008 ), Bandwidth Efficient Multicast Protocol (Ozaki et al., 2001 ), Multicast operation of the Ad hoc On demand
Distance Vector (MAODV) routing protocol ( Krishna and Sebas-tain, 2006 ), and Multicast Core-Extraction Distributed Ad hoc
Routing (MCEDAR) protocol ( Sinha et al., 1999 ). AMRoute ( Chen et al., 2006 ) assumes the existence of a unicast routing protocol in the network environment. This protocol has two main phases  X  mesh creation and tree creation. After formation of mesh by the mesh. This multicast tree uses unicast tunnels to connect group members. AMRoute is less efficient due to loop formations in the multicast tree. AMRIS ( Mazinan et al., 2008 ) is an on-demand, source-initiated, shared tree-based multicast protocol. In this protocol, each node in a multicast session generates session-specific multicast session member id (msm-id). The msm-id increases from the root towards leaf nodes radially, which indicates the flow of multicast data. The protocol uses periodic, short broadcast beacon packets to determine whether a link has been broken. Upon link break, it executes a branch reconstruction process to maintain the multicast tree. AMRIS endures less control overhead because it avoids loop formations, and link breaks are repaired locally. However, the bandwidth is wasted due to the usage of beacons and unexpected data packet loss caused by the collisions with beacons.
 Unlike soft state multicast protocols, the Bandwidth Efficient Multicast routing protocol ( Ozaki et al., 2001 ) uses a hard state approach. That is, there is no periodic transmission of control messages. Nodes join the multicast group through the nearest forwarding node, thus minimizing the number of added forward-ing nodes and eventually leading to a high multicast efficiency. Since a node joins the multicast group through its nearest forwarding node, the distance between source and receiver increases and the probability of path break is augmented, which in turn give rise to an increase in delay and reduction in the packet delivery ratio. In Krishna and Sebastain (2006) , an on-demand multicast protocol was proposed, which is the multicast extension of AODV ( Cerri and Ghioni, 2008 ). MCEDAR ( Sinha et al., 1999 ) is the multicast extension of the Core-Extraction Distributed Ad hoc Routing ( Sivakumar et al., 1999 ) protocol. To provide robustness and efficiency, it uses an underlying mesh over which it constructs a forwarding tree. These tree-based multicast routing protocols have the common disadvantage of poor packet delivery under mobility and possible congestion along links in the tree.
 Some of the existing mesh-based multicast protocols are ODMRP ( Xie et al., 2006 ), Forwarded Group Multicast Protocol (FGMP) ( Chiang et al., 1998 ), Core-Assisted Mesh Protocol (CAMP) (Wang and Chang, 2001 ), Neighbor Supporting Ad hoc Multicast routing Protocol (NSMP) ( Lee and Kim, 2000 ), and Location-Based Multicast Protocols ( An and Papavassiliou, 2003 ). In comparison with the tree-based protocols, mesh multicast protocols may have more than one path between a pair set of source and receiver, thus they provide richer connectivity among multicast members. ODMRP is a representative mesh-based protocol which uses a forwarding group concept for multicast packet delivery. Like ODMRP , FGMP ( Chiang et al.,1998 ) is also based on the forwarding group concept. But the major difference between them is that the former one is a source-initiated multicast protocol, while the latter one is receiver-initiated multicast protocol. Both FGMP and ODMRP protocols adopt flooding of control packets to construct the multicast mesh, thus they result in considerable control overhead. To eliminate flooding of control packets, CAMP ( Wang and Chang, 2001 ) uses core nodes in the mesh. This protocol expands the idea of core-based tree ( Das et al., 2002 ) to form the mesh. But unlike the core-based tree protocol, it contains more than one core. In contrast to ODMRP and FGMP, CAMP depends on the underlying unicast routing protocol.

In NSMP ( Lee and Kim, 2000 ) protocol, maintenance of the mesh is done by local route discovery. In other words, when a source floods control information to refresh the route, it is forwarded only by mesh nodes and neighboring nodes which are one hop away from any mesh node. In Location-Based Multicast protocol ( An and Papavassiliou, 2003 ), location infor-mation is used to reduce the control overhead. To deliver the data packets to all of the nodes in the same geographical region, a limited flooding approach is used. Before forwarding the data packets, a source defines a forwarding zone. A node forwards the data packets if it belongs to the forwarding zone. 3. The proposed multicast routing protocol
Similar to DCMP ( Das et al., 2002 ), the sources in the proposed scheme are classified into three categories: Active sources, Core active sources and Passive sources.
 Active sources are similar to sources in ODMRP which flood
JOIN REQ control packets at regular intervals. Core Active sources are those Active sources which act as core for one or more Passive sources. These core nodes are dynamic in nature and they are responsible for creating a shared mesh on behalf of the Passive sources which are associated with them. A Passive source does not transmit JOIN REQ control packet for creation of multicast mesh.
A Passive source depends on a nearby Active source for forwarding its data packets. The maximum number of Passive sources that can be supported by a Core Active source is limited by a parameter called MaxPassSize. The hop distance between a Core Active source and a Passive source is bounded by the MaxHop parameter.
These parameters basically discourage a large number of Active sources becoming Passive sources in the mesh. These help in maintaining the robustness of the mesh. The mesh establishment protocol is similar to that in ODMRP. Data packets of active sources and core active sources are sent over the mesh created by them, while passive sources forward the packets to their proxy core active node, which in turn send it over its mesh. The control overhead is reduced, as compared to ODMRP, because there are a fewer number of sources which flood their JOIN REQ packets, and the number of forwarding nodes is also fewer. In mesh maintenance, we use a soft state, similar to those of ODMRP and
DCMP. Thus, the mesh is reconstructed periodically and the forwarding nodes cancel their forwarding status after a timeout period. Fig. 1 shows an example of mesh construction. The parameters MaxHop and MaxPassSize are both set to two in this example. There are four sources in the multicast group, S1, S2, S3, and S4 and three receivers R1, R2 and R3. Since S3 and S4 are at a hop distance of two from each other (which is equal to MaxHop),
S3 goes passive and uses a proxy in the core active node S4. No other set of sources is within a hop distance of two from each other, so eventually S1 and S2 are the active sources, S3 is a passive source, and S4 is a core active source. The mesh consists of the shortest path between the sources S1, S2 and S3 and the three receivers R1, R2 and R3. Thus, the number of forwarding nodes is reduced, as compared to ODMRP, without much reduction in robustness and packet delivery ratio.
 In mesh maintenance, we use a soft state, similar to those of
ODMRP and DCMP. Thus, the mesh is reconstructed periodically and the forwarding nodes cancel their forwarding status after a timeout period. In Fig. 2 , source S3 has moved away from its core active node S4, with the hop distance between them increasing to three, which is greater than the setting of MaxHop(  X  2). Thus, S3 goes active, and begins flooding its own JOIN REQ control packets periodically.

As mentioned above, the shared mesh and the proxy core node are employed to reduce the number of same data packets propagating through multiple paths to a receiver. Thus, the high control overhead in ODMRP is overcome by reducing the number of sources. However, the fixed setting of the parameters,
MaxPassiveSize and MaxHop, still cannot reflect the networks traffic load, which is dynamically changing all the time in ad hoc networks.

To allow the mesh to have enough forwarding nodes for robust operation, the number of passive sources has to be limited: This is done by limiting the maximum number of passive sources, called
MaxPassSize. Meanwhile, the maximum hop distance between a passive source and its proxy core active node, called MaxHop, is also limited to ensure that the packet delivery ratio is not reduced
S
S
S due to the fact that the average passive sources-to-receiver distance is likely to be higher. Since these two parameters are likely to depend on the network load conditions, group size, and number of sources, etc., we accordingly avoid the usage of the above-mentioned parameters in our protocol and use the following equation instead to decide whether the passive node should choose the target core node as its proxy: s  X  v  X  X  x 1 p  X  t  X  where p ( t ) denotes the current number of passive sources of the target proxy core candidate, if too many passive sources belong to the target proxy core candidate, this target core candidate should not accept the request of the node, h ( t ) represents the hop distance between the passive node and the target core candidate, the hop distance between the passive node and the core node should be as small as possible, d ( t ) stands for the target value of end-to-end delay, when the target value of end-to-end delay is larger, the passive node can tolerate more delay time. As for the output, s ( t ), it is compared with a predetermined threshold to decide whether the passive node should select the target core node candidate as its proxy. The parameters x 1 , x 2 , x expected to be determined by PSO technique. Notably, the fitness function used in PSO is the packet delivery ratio for multimedia packets at the intermediate node, which is the forwarding node in the multicast group, because the achievement of the high packet delivery ratio is the main goal of this work. Meanwhile, packet delivery ratio achieved by the best particle on each active route is passed by JOIN REQ message during each fixed time interval.
Notably, we make an extension on the JOIN REQ message in order to meet the QoS requirements of multimedia traffic, including of end-to-end delay target, the longest distance hop between source and receiver pairs, and those parameters used in PSO. 3.1. Particle swarm optimization (PSO) approach
PSO ( del Valle et al., 2008 ) is a computational intelligence approach to optimization that is based in the behavior of swarming or flocking animals, such as birds or fish. In PSO, every individual moves from a given point to a new one which is a weighted combination of the individual X  X  best position ever found, and of the group X  X  best position. PSO algorithm itself is simple and involves adjusting a few parameters. With little modification, it can be applied to a wide range of applications.

A summary of PSO algorithm used in this work is given below: (1) Initialize the swarm of the particles such that the position (2) Compare the fitness function of each particle, F  X  ~ x (3) Compare F  X  ~ x ij  X  t  X  X  to the global best particle, gbest (4) Revise the velocity for each particle: (5) Move each particle to a new position: (6) Repeat steps (2) through (5) until convergence. 4. Packet scheduler
In conventional ODMRP, the packets are processed in first-in-first-out (FIFO) manner and there is more chance that either more packets may be dropped or may not meet the QoS requirement. There have been several priority schedulers pro-posed in the literature to improve the performance of the mobile ad hoc networks ( Kanodia et al., 2002 ; Karthigeyan et al., 2004, 2005 ; Gomathy and Shanmugavel, 2004 ). Kanodia et al. presented two mechanisms for providing QoS support for connections in ad hoc wireless networks ( Kanodia et al., 2002 ). The first scheme, called distributed priority scheduling (DPS), piggy-backs the priority tag of a node X  X  head-of-line packet onto handshake and data packets. By retrieving information from such packets transmitted in its neighborhood, each node maintains a scheduling table to determine its rank compared to other nodes in its neighborhood. A back-off calculation uses this rank to approximate the idealized schedule. Based on DPS scheme, Kanodia et al. carried out scheduling over multi-hop paths. The downstream nodes in the path to the destination increase the relative priority of a packet to make up for excessive delays incurred upstream.

The distributed laxity-based priority scheduling (DLPS) scheme proposed in Karthigeyan et al. (2005) makes scheduling decisions based on the states of neighbor nodes and the feedback from the destination regarding packet losses. Packets are reordered according to their uniform laxity budgets and packet delivery ratios of the flows to which they belong. Although it was claimed in Karthigeyan et al. (2005) that DLPS delivers a higher percentage of packets within their delay targets and has lower average end-to-end delay in packet delivery when compared to the 802.11 distributed coordination function (DCF) and DPS ( Kanodia et al., 2002 ) schemes, the computation of priority index for the packet still ignores the dynamically changing behavior of network topology. The packet delivery ratio might be dropped drastically when mobile nodes move faster. DLPS was further adapted to  X  X  X ulticast Priority Scheduling Protocol (MPSP) X  X  to support multicast mechanism ( Karthigeyan et al., 2004 ). MPSP modified the DLPS protocol to suit the characteristics of multicast transmissions.
 A fuzzy logic-based scheduler was proposed in Gomathy and Shanmugavel (2004) to determine the priority index for each packet transmitted at each node in an ad hoc network. The three inputs used in the fuzzy scheduler are the expiry time of the packet, data rate of the packet, and queue length of the nodes to which the packet is associated with, respectively. Again the selection of the input parameters used in this fuzzy scheduler overlooked the volatile characteristic of ad hoc network topology. Furthermore, the fixed shape and parameters used in the membership functions cause the fuzzy scheduler more difficult to meet the stringent QoS requirements of multimedia traffic under volatile states of mobile nodes.

In this work, we attempt to employ particle swarm optimiza-tion to realize the prediction mechanism in the design of the priority scheduler. Similar to Eq. (1) that we derived for the dynamic selection of proxy core node approach, we assume that the priority index for each packet is computed by
P  X  t  X  X  where v k ( t ) denotes speed of the node that moves fastest among the nodes on the active route, h k ( t ) represents remaining hop counts, d k ( t ) stands for remaining end-to-end deadline target of the packet, and r k ( t ) is packet delivery ratio of the flow, determined by PSO technique.

In Eq. (9), we allow the packets with shorter end-to-end deadline to have higher priority. When more packets belonging to a flow meet their delay targets, priority index for those packets of that flow would be increased, and the actual priority of the packets would be lower. When a packet is close to its destination, the fewer hop counts to be traversed tends to increase the priority index, thereby lowering its priority. We also raise the priority of the packets if some of the mobile nodes on the active route move fast since there would be more chances that alternate route construction is required due to the rapid position change of the mobile node.

PSO algorithm used for deriving priority index is exactly the same as the one described at Section 3.1. Meanwhile, the fitness function used in PSO is also the packet delivery ratio for multimedia packets at the mobile node and packet delivery ratio achieved by the best particle on each active route is passed by
JOIN REQ message during each fixed time interval. 5. Simulation and analysis
We conducted a series of simulations to evaluate the performance and behavioral specifics of the ad hoc QoS routing protocols by using GloMoSim network simulator. Our proposed multicast protocol (DMPSP), which is embedded with a PSO priority scheduler, is compared with ODMRP ( Xie et al., 2006 ),
DCMP ( Das et al., 2002 ), and MPSP priority scheduler ( Karthigeyan et al., 2004 ), respectively. 5.1. Simulation scenario
The simulation environment is a 1000 1000 m 2 , the number of sources is taken as 5 for both of multicast group size, and 50 nodes are randomly distributed within this network. The detailed simulation parameters are listed in Table 1 . Notably, CBR/UDP traffic is generated between randomly selected source nodes and the bandwidth for each channel is 2M bps. The CBR data packet size is 512 byte and packet rate is 4 packets per second. Each node randomly selects a target location, and moves toward that location by a random speed. Once it reaches that position, it will stay still for a random pause time. After that pause time, it selects another target location and repeats the process. 5.2. Simulation results
As mentioned above, we compared the performance of the proposed multicast protocol embedded with a PSO priority scheduler (DMPSP) with ODMRP, DCMP, DCMP embedded with a PSO scheduler (DCMP-PSO), and MPSP, respectively. As shown in
Figs. 3 and 4 , the proposed DMPSP protocol achieves better performance than the other four protocols as expected when the packet delivery ratio is used as the performance metric. We believe that the better achievement accomplished by the proposed DMPSP is contributed by dynamic selection of Core
Active Source node as given in Eq. (1) via PSO technique, as well as the consideration of the factor of network topology change in the computation of decision of proxy core node for the transmitted packets.

The real-time end-to-end delay and control overhead as, respectively, shown in Figs. 5 and 6 demonstrate that the computation overhead of PSO is small and no further control message is required for computation of priority index for the transmitted packets in PSO approach. Significantly, the real-time end-to-end delay is shown to have a slightly improvement in our proposed protocol. We believe it is contributed by accurate derivation of parameters used in Eq. (9) via PSO technique and the consideration of the factor of network topology change in the computation of priority index for the transmitted packets. 0.64 0.66 0.68 0.7 0.72 0.74 0.76 0.78 0.8 0.82 0.68 0.7 0.72 0.74 0.76 0.78 0.8 0.82 0.84 0.86 0.88 6. Conclusion
In this paper, we presented a multicast routing protocol that not only attempts to satisfy the demand of Quality-of-Service (QoS) requirements in many multimedia applications but also attempts to find the appropriate proxy core node in order to reduce control overhead based on the computation result of PSO technique. A priority scheduler is also incorporated into the multicast routing scheme to improve the performance of ad hoc networks. The simulation results show that the proposed approach achieves better performance than ODMRP, DCMP, and MPSP protocols when packet delivery ratio is used as the performance metric. Hence the proposed multicast routing protocol is proved to be able to deliver multimedia data packets effectively in an ad hoc network which is notorious for the volatile change of network topology. Furthermore, the small computation overhead boosts the feasibility of the PSO technique in the real-time applications such as the priority scheduler used in ad hoc networks as illustrated in this work. Subsequent research will investigate the feasibility of applying other intelligent tools such as neuro-fuzzy and genetic algorithms into the proposed scheme to further improve the performance of choosing the proxy core node process.
 References second 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8
