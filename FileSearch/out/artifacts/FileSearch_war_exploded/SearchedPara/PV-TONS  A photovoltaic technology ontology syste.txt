 1. Background disputed. The impacts manifest differently in different regions of the universe. The causes of wars in many countries are not unconnected to the finite crude oil reserves drying up at an alarming rate ( Nord  X  as andGleditsch, 2007 ). Air pollution, droughts and famines are increasingly becoming sources of international/national concerns in a significant number of coun-tries ( Stern, 2006 ). The number of catastrophic floods has been growing at an alarming rate. Some major examples include the
December 2004 Indian Ocean Tsunami ( Seno and Hirata, 2007 ), hurricanes Katrina and Rita that struck some regions in the US in
August and September 2005, respectively ( Cruz and Krausmann, 2008 ; Link, 2010 ) and the series of multi-faceted floods that hit some cities in Australia in December 2010 and January 2011.
Tragedies from recent earthquakes in Haiti that occurred on the 12th of January 2010 and New Zealand on the 22nd of February 2011 are still fresh in the minds of the international community.
At the time of commencement of the writing of this article, Japan was still struggling to cope with the aftershocks of the March 11, 2011 earthquake and tsunami with unimaginable magnitude of impacts that has never been experienced in the history of the country since World War II. While these phenomena may not be directly related to climate change, their direct and indirect implications and impacts are nonetheless often great and may require communities to live and use systems, technologies and natural resources in such a way that if they do occur the impacts will be minimal.

Although there are international debates as to whether these catastrophes are induced by climate change or are natural occurrences, many studies tend to point to the fact that there is need to mitigate or adapt to them (e.g., Stern (2006) ). Renewable energy technologies provide an excellent opportunity in strate-gies aimed at mitigating and adapting to climate impacts. The use of renewable energy technologies contributes in reducing the emission of greenhouse gases (GHG), a major factor that con-tributes to climate change. Furthermore, the fact that renewable energy technologies substitute crude oil minimizes resource depletion and global climate change that would otherwise have occurred ( Moriarty and Honnery, 2011 ). As of 2004, the renew-able energy sources constituted about 14% of the total world energy demand ( UNDP, 2004 ). This share is likely to increase as the market for renewable energy technologies is growing at an alarming rate. Partly based on these availability and market potentials, researchers have advocated the increased uptake of renewable energy technologies ( Moriarty and Honnery, 2011 ). Furthermore, various governments and international climate change agencies are also recommending the increased uptake of innovative technologies including renewable energy technologies. Perhaps, because of its sheer portion of impacts on the environ-ment, the building industry has been identified as a sector where greater opportunities to mitigate climate change impacts exist (  X 
Urge-Vorsatz and Novikova, 2008 ). Thus, new markets for renewable energy technologies have emerged in the building industry. These markets have been characterized by different stakeholders including architects, engineers, installers, econo-mists, surveyors, environmentalists, lobbyists, environmental journalists, etc. These stakeholders have been publishing infor-mation about renewable energy products using different media. Perhaps, based on their different backgrounds, different vocabul-aries about the renewable energy technologies are now common in textbooks, catalogues, peer-reviewed papers, companies X  fact-sheets and the internet. This is reflected in the different literature where information about renewable energy technologies is found. Moreover, the non-standardized format of information about the different technologies published by these disparate stakeholders hampers the optimal exploitation of knowledge about these technologies.

Recently, findings from computer science and artificial intelli-gence research points to the need for a machine processable language with rich semantics for modelling disparate knowledge about different domains ( Alesso and Smith, 2009 ; Fensel et al., 2005 ). Ontology has emerged as the most powerful machine processable language for representing domain knowledge. Its strengths have been reflected in the overwhelming number of ontologies that exist in various domains including bioinformatics, energy, telecommunications, law, construction, agriculture and land economy. The development of ontologies and their uses is key to the next generation of the Web generally referred to as the Semantic Web. The vision of the Semantic Web is for machines to  X  X  X nderstand X  X  and process information, provide structure to the meaningful content of Web pages, creating an environment where software agents roaming from page to page can readily undertake sophisticated tasks for users ( Berners-Lee et al., 2001 ). Since the emergence of the Semantic Web, significant progress has been made in terms of technological development that can be used in the realization of the Semantic Web X  X  vision.
This article investigates how the emerging Semantic Web enabling technologies can be exploited to represent information and knowledge about renewable energy technologies and to facilitate system decision-making in recommending appropriate choices for use in different situations. To facilitate understanding, an overview about the emerging Semantic Web enabling tech-nologies has been provided in Section 2 . In addition to overview clarity about the: relationship between ontologies and the Semantic Web, key components of the Semantic Web architec-ture, ontology methodologies, ontology editors and ontology evaluations amongst others have been provided. To establish the rationale for the need of a Semantic Web application in the renewable energy domain, an overview of renewable energy technologies, PV-systems characteristics and the overall PV-system design process has been examined in Section 3 . Consequently, the application of Semantic Web technologies in managing photovoltaic system knowledge has been examined in Section 4 . The investigation culminates in a prototypical photo-voltaic technology ontology system (PV-TONS) that can be used in sizing and selecting different PV-system components such as the PV-system modules, batteries and inverters for different types of buildings. The Oxford Solar House, the first house in the UK designed to maximise energy efficiency with a fully integrated photovoltaic roof was employed as a case study to validate the
PV-TONS system. The paper concludes in Section 5 by a way of a reflective discussion with an appropriate recommendation for further research and practice. 2. Overview of emerging Semantic Web enabling technologies 2.1. Ontology and the Semantic Web architecture
In the early 1990s, researchers in the Semantic Web technolo-gies recognized the need for an ontology Web language. As a result, several proposals for new ontology Web languages emerged. Based on the diverse nature of the different ontology Web languages being developed as part of the Semantic Web vision, a layering approach is often adopted ( Antoniou and van Harmelen, 2008 ).
This layering concept is often called the Semantic Web architec-ture. The key components of the Semantic Web architecture are the
Extensible Markup Language (XML), Resource Description Frame-work (RDF) and Web Ontology Language (OWL).

XML is a meta-language for specifying syntax only, with no semantics. Although XML provides features for representing and interchanging information, it lacks the capability or the semantics to support Semantic Web requirements. XML defines syntax not semantics and its descriptions are ambiguous to a computer.
Thus, the need for a more powerful data model for describing resources such as RDF emerged.

RDF provides the Semantic Web X  X  basic relational language layer of data representation. It can be used to make statements with attributes/value pairs that describe objects. It introduces some standardisation to descriptions and more complex semantic relationships to objects in a domain. However, RDF is unable to completely support the Semantic Web as it lacks the concepts of enumeration and data-types other than typed literals. Hence, a more powerful language such as the OWL has emerged.

OWL dialects are ontological languages used for the specifica-tion of classes, properties and related restrictions. OWL is designed for use by applications that need to process the content of information instead of just presenting to humans ( McGuinness and van Harmelen, 2004 ). OWL comes in three dialects, i.e., OWL
Lite, OWL description logics (DL) and OWL Full ( Horridge et al., 2007 ). OWL Lite supports those users primarily needing a classi-fication hierarchy and simple constraints. For example, while it supports cardinality constraints, OWL Lite only permits cardin-ality values of 0 or 1. OWL DL supports those users interested in the maximum expressiveness while retaining computational completeness (all conclusions are guaranteed to be computable) and decidability (all computations will finish in finite time). OWL
DL includes all OWL language constructs, but they can be used only under certain restrictions (for example, while it may be a subclass of many classes, a class cannot be an instance of another class). OWL DL is so named due to its roots in DL, a field of study upon which OWL DL is built. OWL Full is meant for users who want maximum expressiveness and the syntactic freedom of RDF with no computational guarantees. In other words, OWL Full is undecidable as it does not include restrictions on the use of transitive properties required to maintain decidability ( Horrocks et al., 1999 ). For example, in OWL Full, a class can be treated simultaneously as a collection of individuals and as an individual in its own right. OWL Full allows an ontology to augment the meaning of the pre-defined (RDF or OWL) vocabulary. It is unlikely that any reasoning software will be able to support complete reasoning for every feature of OWL Full. Based on the facts that OWL Lite is limited in capturing class hierarchies in ontologies and also that OWL Full is unlikely to have reasoning software to support complete reasoning of OWL, most studies often adopt OWL DL. It is in the interest of this article to maintain this tradition; hence OWL DL will be adopted.

OWL knowledge bases are structural inferences such as subsump-tion and identity ( Walton, 2007 ). This type of inference does not take into account the precise meaning of the information or semantics represented in the OWL knowledge base. In real life situations, it is always desirable to go beyond structural infer-ences and infer new knowledge from existing knowledge base which is not quite common with conventional database systems.
To deal with this situation, SWRL has been proposed to extend specifically OWL Lite and OWL DL with first-order-rules ( Walton, 2007 ). The limitation of OWL in providing deductive reasoning capabilities prompted the birth of SWRL ( Horrocks et al., 2004 ;
O X  X onnor et al., 2007 ). SWRL overcomes this deficiency of OWL by providing deductive reasoning capabilities that infer new knowl-edge from an OWL ontology knowledge base. SWRL is designed as a rule language for the Semantic Web and includes a high-level abstract syntax for Horn-like rules  X  a subset of predicate logic with efficient proof systems ( Antoniou and van Harmelen, 2008 ).
Like Horn-like rules, SWRL takes the form of an implication between an antecedent (body) and a consequent (head), each consisting of a set of atoms. The intended meaning is read as: whenever the conditions specified in the antecedent hold, then the conditions in the consequent must also hold. The above statement is represented symbolically as:
A 1 , ::: , A n 1 , A n -B  X  r 1  X  where A i and B are atomic formulas, where i  X  1,2,3, y , n . range, P is an OWL property, r is a built-in relation, x and y are either variables, OWL individuals or OWL data values, as appro-priate. In the context of OWL Lite, descriptions in atoms of the form C( x ) may be restricted to class names ( Horrocks et al., 2004 ).
Based on the ease of use of the SWRL syntax and on the kinds of reasoning to be performed in PV-TONS, the PV-system OWL ontology developed in this article was extended to include
SWRL rules. 2.2. Ontology editors the development of ontology editors that can facilitate the design of ontologies. Based on a review of the literature, it was found that most ontology editors depend directly on ontology languages and methodologies, reflected in the ease or difficulty in developing the ontology. Some common ontology editors reviewed in Corcho et al. (2003) include KAON, OilEd, Ontolingua Server, OntoSaurus, WebODE, WebOnto and Prote  X  ge  X  -OWL. After a critical comparison,
Prote  X  ge  X  -OWL was chosen because it offers support to ontology libraries and the OWL languages. Also, Prote  X  ge  X  -OWL exists in different versions and each version has a set of compatible plug-
OWL 3.4.4 has a plug-in for SWRL while Prote  X  ge  X  -OWL 4.0.2 lacks this plug-in. On the other hand, Prote  X  ge  X  -OWL 4.0.2 has a Query Tab plug-in, a tool for editing DL while Prote  X  ge  X  -OWL 3.4.4 does not was chosen. 2.3. Ontology methodologies employed in the development of Semantic Web knowledge-based systems. The most commonly used ontology methodologies are the Uschold and King Ontology Development Method, Toronto
Virtual Enterprise Method, Methontology, On-To-Knowledge (reviewed in Antoniou and van Harmelen (2008) ) and Horrocks Ontology Development Method ( Breitman et al., 2007 ). Also,
Ontology Development 101 ( Noy and McGuinness, 2001 ) has emerged as one of the most widely used methodology guidelines for the development of ontologies. From the literature, it emerged that some methodologies address ontology development from scratch or from using existing ontologies, and that the suitability of each of these methodologies depends on the purpose of the ontology. Furthermore, some of the methodologies have been developed based on their compatibility with ontology languages and editors that will be used in developing the required ontology.
An example is the Ontology Development 101. This methodolo-gical guideline uses the OWL language paradigm and easily implemented in Prote  X  ge  X  -OWL editor. Hence, the Ontology Devel-opment 101 was used in this study. 2.4. Anomalies discovery in ontologies
In the design process of ontologies, anomalies can often be created unknowingly and often there is a need for the anomalies to be resolved for the ontology to be explored. Common ontolo-gical activities such as ontology merging and extending ontolo-gies, the inclusion of rules is likely to generate anomalies ( Horridge et al., 2007 ). Discovering anomalies can be conducted manually or automatically (i.e., using reasoners) during and/or after the development of ontologies. It is an iterative process until the ontology engineer developing the ontology is satisfied with the state of the ontology. 2.5. Ontology evaluation
With an increase in the use of ontologies in developing appli-cations, the need to evaluate ontologies for use in respective applications is equally becoming increasingly important. Evalua-tion provides the basis upon which to judge the fitness of an ontology. Evaluation is a broad term that encompasses two terms including verification and validation ( Kendal and Creen, 2007 ).
While verification mainly refers to technical activities that ensure syntactic correctness and cleanness of a knowledge base or an ontology ( Kendal and Creen, 2007 ), validation refers to the process of ensuring that the ontology or knowledge base corre-sponds to the phenomenon that it is supposed to represent ( Sommerville, 2007 ).

With regards to semantic verification, two main methods can be pursued depending on how the ontology was designed. If the ontology was developed from scratch, then consultation with domain experts to verify the concepts modelled in the ontology is often recommended. This is often time consuming and costly ( V  X  olker et al., 2008 ). In the second approach, if the ontology is developed from the concept abstraction or the re-use of existing ontologies, then the automated or manual alignment/merging semantic verification techniques can be used ( Hovy, 2001 ; Noy and Musen, 2003 ). In these techniques, a given ontology is aligned to another ontology often referred to as a reference ontology or golden standard ontology ( Hovy, 2001 ). For instance, ontology evaluation through alignment is described as an activity that given two arbitrary ontologies O1 and O2, aims to find for each concept in the ontology O1 a corresponding concept in ontology
O2 that has the same intended meaning. By the latter methodol-ogy, if the re-used ontology has been adopted in its entirety, then there is no need to semantically verify the ontology. On the other hand, if it is partially re-used the new ontology components introduced need to be semantically verified most preferably by domain experts and the re-used component by the alignment or comparison technique.

After semantically verifying the ontology it is imperative to syntactically check the ontology X  X  consistency. With respect to consistency checking, the developed ontology is checked against subsumption, equivalence, instantiation and consistencies ( Antoniou and van Harmelen, 2008 ). Syntactic verification is often conducted using reasoners such as Pellet 1.5.2 and FaCT  X  X  which 4.0.2, respectively. The use of reasoners eliminates anomalies in the ontology. After the semantic and syntactic verification of ontologies, it is tested for the purpose for which it was developed. In the literature, case studies are often employed in establishing whether the developed ontology meets the ontology require-ments or does what it was developed to do ( Sommerville, 2007 ). Having provided an overview of some key aspects of the Semantic Web technologies, an investigation into how they can be used in managing renewable energy technology information will be conducted. Leading questions such as: How can renewable energy technology information be represented using Semantic Web techniques? What are the types of result outputs from querying renewable energy domain knowledge modeled in a Semantic Web environment? How can the query results be used in decision-making? In order to conduct this investigation, it is necessary to review the domain of renewable energy technology, the subject of the next section. 3. An overview of renewable energy technology The current UK energy supply sector accounts for about 38% GHG emissions ( Allen et al., 2008 ). Approximately 65% of the primary energy is lost as wasted heat during the production of electricity using centralised production systems ( Allen et al., 2008 ). Renewable energy technologies have the potential of dramatically reducing these losses because when fossil fuels are used, the heat generated by localised electricity production can be captured and utilised for space and water heating. Heat and electricity can also be produced locally by renewable sources. Another great importance of renewable energy source is the fact that it is carbon neutral ( Allen et al., 2008 ). A renewable source is said to be carbon neutral if the amount of carbon dioxide (CO emitted during the sourcing of the energy is off-set with an equivalent amount sequestered from the atmosphere.

The UK government has been proactive towards the reduction of GHG emissions. For instance, the UK is now legally bound by the Kyoto protocol to reduce its CO 2 emissions by at least 12.5% below the 1990 levels between the 2008 X 2012 time frame ( Stolarski et al., 2010 ). Furthermore, the UK government X  X  Climate Change Act 2008 sets a legally binding target of 80% reduction in national CO 2 emissions by 2050 compared to 1990 levels ( DECC, 2009 ). To achieve these targets, while at the same time providing affordable and clean energy to buildings, a wide range of renew-able energy technologies is being recommended by the govern-ment ( DECC, 2009 ), including combined heat and power, geothermal, hydro, tidal, wind, wave and solar energy (thermal and PV) systems. In a research endeavour of this nature with limited resources, it is not possible to tackle the full range of the afore-listed renewable technologies. For exploratory reasons, the focus will be on PV-systems, a subset of the technologies with the hope to develop insights that can be applicable to the full range of renewable energy technologies. Other than its enticing environ-mental credentials, the PV-systems are currently gaining interest from different renewable energy businesses and are expected to be the dominant energy source in the near future.

At present, the PV-system market is growing rapidly at an annual rate of 35 X 40%, with PV-systems production around 10.66 GW in 2009 ( Razykov et al., 2011 ). It has been argued that by 2020, PV-systems will account for a significant share of the global electric market ( Zhang et al., 2011 ). The PV-systems market growth is characterized by different stakeholders includ-ing different manufacturers and clients or buyers. From the literature, PV-systems are produced in standard sizes and each manufacturer can boast of a wide range of standard PV-systems.
Information and knowledge about these systems are often struc-tured in catalogues, fact sheets and in websites of manufacturers.
In particular the different information and knowledge are proper-ties that characterize the different PV-systems. Although these properties are meant to facilitate the process of choosing different
PV-systems, their huge number, formats, contents and units pose great challenges for their optimal exploitation. Thus, potential clients and users are faced with significant challenges in selecting the right products to meet their particular needs. This makes this particular area suitable for exploration for the potential applica-tion of Semantic Web techniques to help users locate specific products that meet their different needs. To investigate the use of
Semantic Web technologies in managing PV-system knowledge, a brief description of PV-systems will be presented. 3.1. PV-systems
The PV-system technology has been widely researched ( Roaf et al., 2007 ; Sick and Erge, 1996 ) and it is not in the interest of this article to duplicate these studies. However, to facilitate under-standing of PV-system concepts, a summary of the different PV-system components will be reviewed. A PV-system can be grid-connected or they can be stand-alone. A typical  X  X rid-connected X  system allows the installation to put power into the building mains electricity supply in parallel with the local grid. When the building demands more electricity than the PV-system can provide, the grid provides the  X  X op-up X . When the PV-system is generating more energy than the building needs, the excess is exported to the grid. For illustrative purposes, a simplified grid-connected PV-system diagram depicting its main components is presented in Fig. 1 . The key component in such a system is the inverter, which converts the direct current (DC) generated by the
PV-system into alternating current (AC), and does so in synchrony with the mains. Grid-connected systems require very little main-tenance, generally limited to ensuring that the panels are kept relatively clean. The wiring and components of the system need to be checked regularly by a qualified technician. Stand-alone systems, i.e., those not connected to the grid, need maintenance on other system components, such as batteries. The size of the system is dictated by the amount of electricity required by the building on which the PV-system is to be installed. 3.2. Design and selection of PV-systems and components
Based on the fact that a PV-system is made up of different components, its design translates to the design of its different components. In practice, a decision is made on whether to commence the design process from the sizing of the PV-module or PV-array. As depicted in Fig. 1 , PV-array consists of PV-modules assembled and bonded together with an external frame. The external frame is chosen by different suppliers or developers depending on their respective interests. Based on the fact that the external frames can be made of different materials such as timber and steel, the external frame can influence the overall conversion efficiency of the PV-array, hence the design results of PV-systems.
Also, most literature provides con version efficiencies of PV-modules and not PV-arrays. In this study, the choice was made to focus on
PV-modules rather than on PV-arrays as the PV-module is a subset of a PV-array with a well-defined conversion efficiency. Moreover, in the literature data are often available for
PV-modules rather than PV-arrays. Design here simply means determining the appropriate components to form a PV-system that can meet the power requirement of a building. It therefore varies with respect to different components. The design of: (a) a
PV-module translates to determining its appropriate size or physical dimensions; (b) an inverter translates to determining its operational power rating that can match the building X  X  energy use; (c) a PV-battery translates to determining the quantity of electrical current or charge it can store or dispense; (d) a cable translates to determining the sectional area and length of cable that will support a given quantity of electrical current flowing through it. Although different techniques have been used in the design of PV-systems, they tend to share three key steps. These will be examined in the ensuing sub-sections. 3.2.1. The determination of the energy load of the building the building. Energy consumption patterns can be determined from the energy bill of the building, the household appliances X  ratings, or by using energy simulation software. In this study the determination of energy consumption from energy bills and household appliances X  ratings were considered. Based on these choices different activities are undertaken. If the energy con-sumption is determined from the former, then a single reading from the energy bill will suffice. If energy consumption is to be determined from the latter, then different household appliances X  ratings are added up to obtain a single value. The summation of the household appliances ratings provides an energy consump-tion pattern depending on the different times of the day. The energy consumption pattern provides different values at different times of the day. The peak, minimum and average values are most commonly used in the sizing of PV-systems. 3.2.2. The sizing of the PV-module respect to the different times of the day. There are times when the energy consumption is maximum (peak value), minimum or average of the maximum and the minimum. It is the designer X  X  choice to decide which type of daily energy load to use in the sizing of a PV-system. Any of the decisions have both economic and technical implications. For example, if a PV-system is designed with a peak energy load, then a grid-connected system may be required to tap the excess energy produced by the PV-system. This also means the PV-system may be oversized and hence may be expensive. On the other hand, if a PV-system is designed with a minimum daily energy load, technically a battery is required to store energy for later use. Although the PV-system may be under-designed and hence cheap, the additional cost of the battery needs to be considered. Once the size of the PV-module is determined, the design of the corresponding PV components can be conducted. 3.2.3. The sizing of the PV-components
Based on the energy load chosen, the other components are chosen to match the energy load. Thi s includes the design of inverters, batteries and cables. For example, if the PV-system will be designed for the peak energy load, then an inverter will be designed to match the peak energy of the building. Similarly, the batteries and cables will be design to match the peak energy of the building.
In Section 2 , the key Semantic Web technologies have been reviewed and the suitability of each of the technologies identified.
In Section 3 , the PV-system and its design process have been reviewed. An examination of how the different Semantic Web technologies are used in representing knowledge about the PV-system domain will be conducted in Section 4 . This will culminate in embedding the knowledge base with SWRL rules and queries that can be used in manipulating information about PV-systems and their suppliers. 4. Design and implementation of the PV-TONS
A pre-requisite to developing a Semantic Web-based application is the establishment of an ontology for the application domain.
Where ontologies already exist for a domain, it may be simply a case of adopting one or more of these and extending and enriching them where necessary. The ontology developed by Tah and Abanda (2011) served as a basis to further explore the different Semantic
Web enabling technologies in this study. Based on the practicality of this study, i.e., the fact that a case study will be used, it was necessary to enrich the photovoltaic system ontology in Tahand and Abanda (2011) . Thus factors such as the availability of sunlight, the presence of tree shades, the exposure of the PV-panels to the wind, the orientation of the roof which often influence PV-system design ( Roaf et al., 2007 ; SEI, 2010 ) although not purely PV-system characteristics were considered. These factors were captured and representedbytheconcept ExternalFactor . To facilitate graphical representation and visualization of concepts and relationships between them, the Unified Modelling Language (UML) was used to model the ontology as presented in Figs. 2 and 3 . To minimize space for representing the number of data-type properties of concepts in Fig. 2 , only the data-type properties of the key PV-system concepts have been represented in Fig. 3 .

For the purposes of this paper the models of Figs. 2 and 3 have been expressed using OWL constructs and extended to include
SWRL rules that can facilitate reasoning. An implementation of the enriched and extended knowledge models in a software environment is examined in the ensuing section.
 4.1. System requirements
The choice of software to use depends greatly on the purpose or intended use of the system. The purpose of the system is understood if what is expected of the system often called require-ments consideration is well-established. The general guides for establishing system requirements often used in requirement engineering ( van Lamsweerde, 2009 ) have been pursued. These guidelines were supported by the overall goals of the Semantic Web vision and the purpose of ontologies. Questions like: why develop an ontology? who will use the ontology? were considered to arrive at the following requirements to be achieved by PV-TONS:
Provision of a central knowledge base where PV-system information can be stored and/or retrieved;
The system should support reasoning. That entails the creation of some constraints and rules that may contextualize the information related to the role of class and properties for reasoning;
Provision of the possibility of the PV-TONS to adapt and evolve with minimal disruption. New ontologies can be defined and added incrementally without the need for the redesign of the PV-TONS.

To meet the afore-mentioned requirements, the following software and components have been used:
Prote  X  ge  X  -OWL 3.4.4: It is an open-source tool that enhances end-users X  skills in creating, visualizing, and updating ontolo-gies. Its other advantages over other ontology editors are its ease of integration with other software such as Netbeans and Eclipse and compatibility with most OWL syntax validators. Some studies have proven that it takes a shorter time to learn Prote  X  ge  X  -OWL than other ontology editors such as Ontolingua, WebOnto, ProtegeWin, ODE, Ontosaurus ( Duineveld et al., 2000 ).
Furthermore, Prote  X  ge  X  -OWL comes with so many different plug-ins vital for ontology developments. The Prote  X  ge  X  -OWL 3.4.4 plug-ins chosen for this study are:
SWRLTab: This is a Prote  X  ge  X  -OWL 3.4.4 plug-in and editor that facilitates the writing of SWRL rules;
JessTab: This is a Prote  X  ge  X  -OWL 3.4.4 plug-in that allows the use of Jess (a rule engine) and Prote  X  ge  X  together; and
Pellet 1.5.2: Pellet is an OWL 2 reasoner which provides standard and cutting-edge reasoning services for OWL ontologies. 4.2. The Implementation of the Photovoltaic System Ontology
The ontology was implemented in two environments  X  ontology editor (to contain the knowledge model) and reasoning environment (to facilitate reasoning). Although we have used Prote  X  ge  X  -OWL 3 .4.4, any other ontology editor containing a Jess rule-based reasoning environment and an OWL 2 reasoner running on any computer system is a minimum requiremen t to implement the PV-system ontology. The implementations in the two environments are exam-ined in the ensuing sections. 4.2.1. Implementation in an ontology editor
The PV-system UML knowledge model of Fig. 2 and the data-type model of Fig. 3 were manually edited in Prote  X  ge  X  -OWL 3.4.4. The instances from the Green Book live were used in populating
PV-TONS. The Green Book live is a free online resource designed by UK Building Research Establishment which can help specifiers and end-users identify products and services that can help to reduce their impact on the environment ( GBL, 2011 ).To facilitate implementation, the Ontology Development 101 method ( Noy and McGuinness, 2001 ), compatible with Prote  X  ge  X  -OWL 3.4.4 was pursued. The outcome of the implemented knowledge model is presented in Fig. 4 . 4.2.2. Implementation in a rule-based system
This was undertaken using the SWRL plug-in called SWRLTab incorporated in Prote  X  ge  X  -OWL 3.4.4. The SWRL language syntax is used in editing rules and Semantic Query-Enhanced Web Rule Language (SQWRL) is used in supporting OWL queries in
SWRLTab. The SWRL syntax used are the conjunction symbol, the implication symbol, the rule variables, the individual syntax, class atomic syntax, individual property atoms syntax and datavalue property atoms and SWRL built-ins. Recently, the degree sign ( ) used in separating a collection construction clause and a standard
SWRL pattern specification has been introduced. The conjunction syntax is denoted as K and the implication symbol as -. The rule variables are represented by the interrogation identifier ?, e.g., ? x .
The class atoms are constructed from an OWL class name followed by one variable or individual name in parenthesis, e.g.,
PV-array(? x ). The individual property atoms are constructed from an OWL object property name followed by two arguments in the parenthesis, e.g., hasEfficiency (? x ,? y ). In like manner, the data-value property atoms are represented in the same way as individual property atoms. Operations such as sizing of PV-modules were modeled using SWRL built-ins. Some examples of
SWRL built-ins used in this study are swrlb:lessThan(?a, m), swrlb:moreThan(?b, n) , swrlm:multiply(?area,?l,?w), swrlm:divi-de(?area,?y,?e), swrlm:eval(?area,  X  X  X /z X  X ,?y,?z) and sqwrl:select(....).-
With respect to sqwrl:lessThan(?a, m) and sqwrl:moreThan(?b, n) the relations between variables a and b are less than m and greater than n where m and n are both real numbers. A restriction on the size of a PV-module can be modeled as  X  X  swrlb:lessThan(s, 2.3)  X  X . This restriction can be used in selecting PV-modules based on the size criterion, such that all PV-modules should be of size less than 2.3 m 2 .In swrlm:multiply(?area,?l,?w), the value of the area of an object is related to its length ( l ) and width ( w ) through the swrlm:multiply built-in function. In a similar manner, the value of the area of an object is related to its peak daily power output ( y ) and conversion efficiency ( e ) through the swrlm:divide built-in function. The swrlm:eval(?area,  X  X  X /z X  X ,?y,?z) built-in func-tion provides the capability of computing the  X  X  X rea X  X  of a PV-module given the nominal power (y) and the energy efficiency (z) of the PV-module. The sqwrl:select(....) is a built-in that selects rule variables. Examples of rules written in SWRL are:
PV-module(?p) L has Efficiency(?p,?e) L sqwrl:greater Than (?e, 0.8) -HighlyEfficient (? p )( r 2) Rule r-2implies that if there is a PV-module p and that
PV-module has an efficiency e such that e is greater than 0.8 then classify the PV-module as HighlyEfficient. Likewise, a query for finding the different PV-module names using the sqwrl:select built-in can be modeled as in query q 1.

PV-module(?p) L hasName(?p,?name) -sqwrl:select(?name) Query q 1 means if there is a PV-module p and the
PV-module has a name then select the name. By using the syntax in SWRL syntax, a set of SWRL rules for the design and selection of PV-system components is developed and incorporated into the
PV-system ontology. A snapshot of the developed SWRL rules are presented in Fig. 5 . The composite PV-system OWL knowledge model and the SWRL rules and queries required for querying the former constitute what is referred to as PV-TONS in this paper. 4.3. Validation of the PV-TONS 4.3.1. Semantic and syntactic verification of PV-TONS
Although the ontology adopted from Tah and Abanda (2011) has been semantically verified, the extension to include new
Disjoint siblings of the module class concepts, e.g., ExternalFactor (its sub-concepts and data-type properties) can potentially introduce semantic inconsistencies in the ontology. Thus techniques by Hovy (2001) and Noy and
Musen (2003) were employed in semantically verifying the newly introduced concepts and the PV-system ontology as a whole.
Furthermore, the enrichment and extension to include OWL constructs and SWRL in the PV-system ontology and the process of editing into Prote  X  ge  X  -OWL 3.4.4 are likely to introduce anoma-lies. An example of an anomaly that may arise from manual editing of an ontology is the incompatibility of data and its type.
This required syntactic verification. The anomalies were checked against subsumption, instantiation and consistencies ( Antoniou and van Harmelen, 2008 ). Currently, there exist two major methods of checking anomalies of an ontology, i.e., manually and automatically. Automatic checking or validation is achieved through the use of DL reasoners. To minimise the risk of allowing anomalies, both manual and automatic anomaly detections were conducted. While the manual process was through a careful visual perusing of the ontology in PV-TONS system, the automatic process was through the use of the Pellet 1.5.2 reasoner. This choice was guided by the availability of the reasoner Pellet 1.5.2 plug-in incorporated in Prote  X  ge  X  -OWL 3.4.4. Both methods involve iterative processes until no more anomalies can be identified. The result of the check is presented in Fig. 6 .
 indicated in red reads  X  X  X his class duplicates restriction from parentsisComponentOf min 1 X  X . The error message is fixed by manually taking off one of the  X  X  X odulePanel X  X  and then re-running the Pellet 1.5.2 reasoner. No errors emerged and the ontology is said to be complete and free of anomalies and thus said to be syntactically verified. 4.3.2. Validation with a case study syntactically verified we now validate the PV-TONS by establish-ing whether it does what it was intended for. This is achieved through the employment of a case study. 4.3.2.1. Description of the case study. For the purpose of this study, a building that uses a PV-system as its power source has been selected. The Oxford Solar House is a classic example appropriate for this purpose. It is the first house in the UK designed to maximise energy efficiency with a fully integrated PV roof ( Roaf et al., 2007 ). The Oxford Solar House is a six bedroom family home. It produces only 130 kgCO 2 /annum/m 2 , in contrast to comparable UK houses that produce 5000 kgCO 2 /annum/m 2 .

The main reason for choosing the Oxford Solar House is that it is well documented to facilitate a detailed abstraction of the various knowledge resources needed to validate PV-TONS. From well-documented literature about the Oxford Solar
House, an expert from BP Solar helped in selecting the most appropriate PV-modules on the market. These were the robust mono-crystalline, high-efficiency BP Saturn 585 cells. In total, 48 modules required a flat roof size of 6.8 m 5 m and were arranged in four vertical rows of 12 modules in each row.
Although in this project the choice of the best PV-module to match the Oxford Solar House energy requirements was deter-mined by an expert ( Roaf et al., 2007 ), in practice, making this choice is a huge challenge. This is because of the huge number of different components in a PV-system, the availability of the different types of PV-systems in the market, the huge number of suppliers and the variability of the different parameters that are considered in the design of the PV-system. Thus, the task of choosing a PV-module for a building is highly complex and therefore presents a good problem domain to validate a Semantic Web decision support system such as PV-TONS.

After the description of the case study, it is important to provide clarity on how the case study is related to the PV-TONS system. This will be achieved by specifying the knowledge concepts of the case study and showing how these concepts fit with PV-TONS. Furthermore, the way in which the case study knowledge is elicited and mapped into PV-TONS will be pre-sented. Three main literature sources were used. First, the book authored by the designer of Oxford Solar House ( Roaf et al., 2007 ) was used. Second, two peer-reviewed papers by Dichler (1994) and Fuentes et al. (1996) that provide the technical design process of the PV-system for the Oxford Solar House were also explored.
The third literature source-the PV-system supplier X  X  website was explored (BP Solar, 2011a ). These literature sources provided the bases to abstract knowledge concepts and data useful in model-ling knowledge about the Oxford Solar House. The information about Oxford Solar House was edited in PV-TONS. The Oxford Solar House was edited into PV-TONS as an instance of the
Building concept and associated properties tagged on it. The way in which information about the Oxford Solar House was abstracted is examined in the ensuing sections. 4.3.2.2. Oxford Solar House knowledge modelling. Based on analysis of the Oxford Solar House literatur e, four main concepts emerged. These are the Oxford Solar House building structure, the Solar House
PV-system, the supplier of the PV-system (BP Solar) and the concept of energy consumption by Oxford S olar House building. These four concepts reflect the top level PV-sy stem ontology previously defined in Fig. 3 . In this regard, the Oxford Solar House is considered an instance of the Building concept, the Solar House PV-system is considered an instance of the PhotovoltaicSystem concept, BP Solar is considered an instance of the Organisation concept. The attributes of the Solar House were abstracted from Dichler (1994) , Fuentes et al. (1996) and Roaf et al. (2007) while the attributes of the Solar House PV-system and BP solar were abstracted from the PV-system factsheet obtained from BP Solar website. The different knowledge concepts about the Solar House are presented in Table 1 .
The Oxford Solar House knowledge concepts were manually edited into PV-TONS. It is important to note that PV-TONS has already been populated with instances from the Green Book live database. In the ensuing section, the design and selection of PV-system and components for the Oxford Solar House using PV-TONS will be demonstrated. This demonstration will exploit the knowl-edge concepts of the Oxford Solar House presented in Table 1 . 4.3.2.3. The use of PV-TONS in the design and selection of PV-systems fortheOxfordSolarHouse. The first step in the design process is to determine the daily peak energy load of the Oxford Solar House. This can be done from the analysis of household energy appliances X  rating or monthly energy bills. None of these were available for use in this case study. However, it was highlighted that any PV-module of 4 kW will meet the energy requirement of the Oxford Solar House ( Roaf et al., 2007 ). Hence, the daily peak energy load of 4 kW was chosen for the computation of the PV-module size. This choice is the worst case scenario  X  as any market PV-module with nominal energy load of 4 kW will provide energy to any building of peak daily energy of less than or equal to 4 kW. Having obtained the daily peak energy load, it is now certain that a PV-module of nominal energy load of 4 kW will provide sufficient energy for the building, the conversion efficiency of the PV-module is chosen. The conversion efficiency is a measure of how efficient a PV-module can convert solar radiation into useful energy. The conversion efficiency was not available. However, a conversion efficiency of the BP 7180, the latest version of BP 585 module ( Mason et al., 2004 ) was obtained from the BP Solar website. BP 7180 has conversion efficiency of between 14 X 15%. We assumed 14.5% in this study. Thenextstageishowtodeterminetheappropriatesizeofthe required PV-module. According to Roaf et al. (2007) the daily peak energy load should be divided by the conversion efficiency of the PV-module. In PV-TONS, this has been modeled using the SWRL built-in and is represented as swrlm:eval(?area,  X  X  X /z X  X ,?y,?z) . The second design requirement involves the constraint that the nominal power load of the inverter should be at least equal to the nominal load of the PV-module. This constraint has been modelled using swrlb:greaterThanOrEqual . The function for computing module areas and the constraint are combined with other SWRL syntax to form an SWRL rule and the details are presented in query q 2. Building(?f) L Module(?x) L hasNominalPowerOutput(?x,?y)
L Inverter(?a) L hasNominalPowerOutput(?a,?e)
L hasDailyPeakEnergyLoad(?f,?g) L swrlb:greaterThanOrEqual(?y,?g) L hasConversionEfficiency(?x,?z) L hasPVComponentWidth(?x,?b)
L hasPVComponentLength(?x,?c) L swrlb: multiply (?d,?b,?c) L swrlm:eval(?area,  X  X  X /z X  X ,?g,?z)
L swrlb:equal(?y,?e) -sqwrl:select(?x,?z,?e,?y,?g,?area,?b,?c,?d,?a,?f) (q 2)
The output from the execution of query q 2 in PV-TONS is presented in Fig. 7 .
 The nominal power outputs of the different modules in the PV-
TONS are compared with the peak daily energy load and only PV-modules with higher values than the peak daily energy load are selected. From the results  X  X  X odule 9 X  X  and  X  X  X odule The Oxford
Solar House X  X  had nominal power output of 4 kW equal to the peak daily energy load. These peak daily energy load outputs are divided by the modules X  efficiencies ( z ) to obtain the module area.
The calculated module areas are compared with the standard module areas in the knowledge base. The larger calculated module area is 28.57 m 2 . When this is compared with the
PV-modules in the knowledge base, two modules (i.e.,  X  X  X odule 9 X  X  and  X  X  X odule The Oxford Solar House X  X ) with the standard sizes of 34 m 2 and 30 m 2 are retrieved. A corresponding inverter with nominal power output equal to the module X  X  nominal output is selected. The inverter that meets this require-ment is  X  X  X nverter 10 X  X . Given that the nominal power output-peak daily energy output and the nominal power output requirements have been met, the modules and inverter that meet these requirements can now be confirmed as the designed PV-system components. The alternative modules and inverter that meet the requirements are  X  X  X odule 9 X  X ,  X  X  X odule The Oxford Solar House X  X  and  X  X  X nverter10 X  X , respectively. The corresponding dimensions of 6.8 m 5 m and 6 m 5 m are selected. The first dimension corresponds to the designed values obtained for  X  X  X he Oxford Solar House X  X  according to Roaf et al. (2007) .

In the previous application, only the peak daily energy load was available for sizing the PV-module. In practice, it is more complex as there may be need to determine the energy load from the different household appliance ratings. Also a more generalised approach is used to demonstrate how different PV-systems can be designed. This is examined in the ensuing section. 4.3.2.4. Generalized PV-system design selection of components.
This example demonstrates how the total peak daily energy is computed from summing the individual household appliances before using it in the design of PV-systems. In determining the total amount of power used by household appliances, the hasPowerRating data-type property is used. The total sum of these power ratings is computed using sqwrl:makeSet(?s,?h)
L sqwrl:sum(?sum,?s). It is important to note that the sizing of module and the inverter depends on this maximum power rating of the household appliances. The sum of all the power ratings of household appliances were determined using the two SWRL functions sqwrl:makeSet(?s,?h) and sqwrl:sum(?sum,?s).
The function defines a container s and the sum of the power rating is computed by using sqwrl:sum(?sum,?s) and stored in s for later use. The area of the module is computed by using the function swrlb:divide(?area,?sum,?z) . This takes into consideration the fact that the total power rating has been captured by the data-type property hasPowerRating . Also the inverters X  nominal power output has been obtained from Green Book live database and captured by the data-type property hasNominalPowerOutput . The sizing of the PV-modules using swrlb:divide(?area,?sum,?z) yields different sizes of modules found in the PV-TONS system. The challenge is how to select the appropriate module that will provide enough energy to meet the maximum operating power of the building conditioned by the power rating of household appliances. Furthermore, how can an inverter be chosen to handle the total maximum power rating of the household appliances.
These two challenges were overcome by using swrlb: equal and swrlb:greaterThan SWRL built-ins. For optimal design, it was opted that the nominal power output of the inverter and the module should be equal and that these nominal power outputs should both be greater than the total power ratings of the household appliances. These were captured with the built-ins swrlb:equal and swrlb:greaterThan . The combination of the SWRL atoms, SWRL built-ins and SQWRL built-ins has been combined in the antecedent of query q 3.
 Module(?x) L hasNominalPowerOutput(?x,?y) L hasConversion Efficiency(?x,?z) L Inverter(?a) L hasNominalPowerOutput(?a,?e) L HouseholdAppliance(?g) L hasPowerRating(?g,?h) 1 sqwrl:make Set(?s,?h) 1 sqwrl:sum(?sum,?s) L swrlb:equal(?e,?y) L swrlb: greaterThanOrEqual (?y,?sum) L swrlb:divide (?area,?sum,?z) sqwrl:select(?x,?a,?y,?e,?z,?sum,?area) (q 3).

The execution of query q 3 gives the module type, the module size, the inverter type, and the inverter X  X  power rating. The output of executing query q 3 is presented in Fig. 8 . These results meet the house energy demand of a particular building in which an end-user wants to use a PV-system.
 Other than the fact that PV-TONS can be used for the design of PV-system and components, it can also be used as a selection decision support system. For example, PV-TONS can be used in finding the different PV-system suppliers. Furthermore, it can simply be used in selecting the different components with their characteristics such as cost, energy savings, and CO 2 savings. An example of how PV-TONS can be used in selecting a PV-system supplier is examined in the ensuing section. 4.3.2.5. Finding PV-system suppliers. Query q 4 explores the semantic relationships between PV-systems and their suppliers starting from interpreting the PV-system products rather than the suppliers in selecting the different suppliers. For example, the following SWRL antecedent asserts that the combination of
PhotovoltaicSystem , isSuppliedBy , isComposedOf atoms implies that the different PV-systems, components and respective suppliers are selected in one goal.
 Photovoltaic System(?x) L isComposedOf(?x,?z) L isSupplied-By(?x,?y) -sqwrl:select(?x,?y,?z (q 4)
From q 4, the PhotovoltaicSystem(?x) captures the instances of the different types of PV-systems. These components are grid-connected or non-grid-connected. By using the object property isSuppliedBy(?x,?y), individual suppliers of the instances of sub-classes of the PhotovoltaicSystem(?x) are captured. The individual components of these instances are captured through the use of a composition relationship denoted as isComposedOf(?x,?z). The consequent part of the query uses the sqwrl:select(?x,?y,?z) built-in function to simply retrieve the different PV-systems, their components and their respective suppliers.

In determining the suppliers for PV-system using query q 4, the suppliers of components were tagged onto the different types of PV-systems, i.e., when end-users query for different suppliers, the system reveals the suppliers while at the same time it proposes a combination of the components to form a particular type of PV-system. The output of executing query q 4 for selecting the different suppliers of PV-system components is presented in Fig. 9 .
 voltaicSystem and their components. When the query is executed, the instances of PhotovoltaicSystem are retrieved. Examples of two of the instances are GridConnected 5 and PhotovoltaicSystem 2 . The output is in conformity with how the relation between the class PhotovoltaicSystem and GridConnected System was defined in Fig. 2 . From Fig. 2 , GridConnectedSystem is a type of PhotovoltaicSystem.
Based on the fact that there is a composition relationship between the class Component and the class PhotovoltaicSystem , PV-TONS retrieves the corresponding instances of Component that consti-tute a PhotovoltaicSystem . An example is GridConnected 5 which is composed of instances Battery 35, MovingMounting 55 and Array 11. The suppliers of the different instances of Photovoltaic
System are also retrieved. 5. Conclusion technologies with a focus on the SWRL. The growing importance of mitigating environmental impacts from buildings and the need for more energy efficient or environmental-friendly buildings create the need for the incorporation of more renewable energy technologies into buildings. Knowledge dissemination can con-tribute towards the uptake of these technologies in building development projects. Therefore, the management of information and knowledge being generated from renewable energy technol-ogies is an effective way of disseminating knowledge about these technologies. To this end, a prototypical Semantic Web system
PV-TONS has been developed and validated through the use of a real-life case study. By validating the PV-TONS system, three main achievements have been accomplished. Firstly, the results obtained from the validation of PV-TONS using the Oxford Solar House agreed with those obtained from the designer X  X  literature.
Although PV-TONS has been tested using Oxford Solar House, it was also shown that it could be used in designing other PV-systems. Secondly, the PV-TONS system can be used in the selection of PV-systems, PV-system components and suppliers for use in different building applications. Thirdly, as an ontology knowledge-based system, PV-TONS can be re-used in other Semantic Web applications.

Although this study focused on PV-systems, the Semantic Web technologies applied can be extended to other areas of renewable energy technologies. This will be investigated as part of future research.
 Acknowledgement
This work has been undertaken as part of the collaborative virtual prototyping research platform initiative funded through the Oxford Brookes University Central Research Funding scheme to encourage interdisciplinary work. The authors gratefully acknowledge the financial support received.
 References
