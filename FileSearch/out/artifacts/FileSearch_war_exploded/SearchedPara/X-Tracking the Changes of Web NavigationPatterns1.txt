 Web searching and navigation activities have been widely discussed, and various techniques are used to mine types of navigation patterns. However, discovering the evolutions and representatives hidden in patterns from different time spans is always challenging. Some efforts are paid on detecting structural changes of web usage behaviors [1,3,8]. On the other hand, conceptual similarity computing has been deeply discussed in text mining, duplication deletion in XML and extracting representatives from frequent patterns[2,9,6].

The goal of detecting changes in web navigation patterns is to discover the differences in the compositions of content and structure, and the variations of the underlying populations. We propose an x-tracking method to detect the changes of web navigation patterns. The changes are described from two layers in an x-shape shown in figure 1. On microcosmic layer, we define two kinds of changes:  X  Internal Change : refers to the internal difference synthesizing the content  X  External Change : considers the varying of the external form of a single On macroscopic layer, the changes of underlying populations are depicted from two aspects:  X  Local Change : concerns the changing of popularity of a single pattern be- X  Global Change : computes the changes of popularity over the whole time The rest of the paper is organized as: section 2 gives the formalization of changes and x-tracking method; we show the experiment results and performance discussion in section 3; the paper ends with the conclusion and future work in section 4. In this section, we will give our x-track ing strategy to detect the changes of nav-igation patterns. We firstly define the basic terms used in the following sections:  X  t i :the i th time span along the entire time line T ,and T = { t 0 , ..., t n } ;  X  U i : the usage data collected at t i ;  X   X  i : the set of navigation patterns discovered at t i based on a defined model;  X  X : one navigation pattern, and X i is the pattern in  X  i mined at t i . 2.1 Measuring Internal Change Edit distance is widely used in computing structural similarity ranging from string-to-string difference [7] to tree structure comparison [9]. Originally, edit distance between two structures is computed based on the smallest sum of cost of the basic edit operations that change one structure to the other. The basic edit operations are often defined as insertion , deletion and updating .
In order to amend precision and accuracy of pattern changes, we integrate the semantic distance in the structure-bas ed edit distance. Semantic distance that one node changes to the other, or the di stance between two versions of the same labeled node, is used in our algorithm as the cost for the basic changing opera-tions. As explained in section 2.4, each web document d is represented by a term vector composed by the extracted terms with their weights. Computing simi-larity recursively has been explored in the specific context of database schema-matching. The semantic distance between two web documents d 1 and d 2 from where sSim ( d 1 ,d 2 ) is the semantic similarity between d 1 and d 2 .Weusethe cosine to compute the semantic si milarity between two vectors of d 1 and d 2 : Definition 1 (Internal Distance). Let X 1 and X 2 be two navigation patterns, the internal distance iDist ( X 1 ,X 2 ) between X 1 and X 2 is computed as edit distance integrated with the  X  semantic distance  X  between the corresponding web pages from these two patterns, in which the cost of every basic edit operation is computed as the semantic distance .
 We overlook the effect of domain-specific taxonomy on computing importance similarity between two keywords, howe ver, this taxonomy can be defined with the help of domain-experts [5].
 Definition 2 (Internal Differential). The internal differential between X 1 iDis (  X  ,X i )( i  X  X  1 , 2 } ) is the internal distance of building the entire X i from empty based on the basic edit operations.
 Definition 3 (Similar Pattern). Given X i and X j ,wecall X j a X  X imilar internal differential.
 Definition 4 (Most Similar Pattern). Given X i and X j ,wecall X j the  X  X ost similar pattern X  for X i in  X  j ,if X j is one similar pattern for X i ,and  X  X  X sent the most similar pattern for X i in  X  j .
 Definition 5 (Internal Unchanged Pattern). Given X i and its most similar pattern M X i  X  j ,wecall X i  X  X nternal unchanged X  pattern iff Diff I ( X i ,M X i  X  j ) and X i is called the i th  X  X ersion X  of M X i  X  j .
 Definition 6 (Emerged Pattern). We call X i  X  X merged pattern X  if no ver-sion of X i is found in the pattern sets from  X  0 to  X  i  X  1 .
 Mining emerging patterns was discussed in [3,8], in which a pattern is consid-ered as  X  X merging X  if its support is over a threshold, while not considered as its conceptual and structure. From the definitions above, it is drawn that an  X  X nternal unchanged X  pattern is discovered by being compared with patterns in its posterior time spans, while an  X  X merged X  pattern is concluded based on the patterns in its prior time spans. Given two pattern sets  X  i and  X  j ( i&lt;j ), detect-ing internal unchanged patterns in  X  i is based on locating most similar patterns in  X  j for the patterns in  X  i . All the detected internal unchanged patterns from  X  form a subset of  X  i , and we use  X  i  X  j to denote this subset and M  X  i  X  j to represent the subset of  X  j which is composed by their corresponding versions in  X  .  X  i  X  j and M  X  i  X  j give the internally stable elements from  X  i to  X  j .Onthe and  X  j . Based on our definitions,  X  i  X   X  i  X  j is composed by all the  X  emerged  X  patterns in  X  j , while  X  i  X   X  i  X  j are  X  perished patterns  X  X rom  X  i to  X  j . 2.2 Measuring External Change The form size is the basic symbol showing the information quantity. Form size of pattern X , named as | X | , is the happening number of pages in X , including requests that involved revisits. The external differential between X i and its j th version is computed by: Diff E ( X i ,M X i  X  j )= M
X i  X  j , there are two possible variations of external feature:  X  the pattern expands: if Diff E ( X i ,M X i  X  j ) &gt; 0.  X  the pattern shrinks: if Diff E ( X i ,M X i  X  j ) &lt; 0. 2.3 Measuring Local Popularity Change The local change concerns the popular ity difference between two time spans, while the global is for that over the whole history. The popularity support Sup for X i has two forms: support number and support ratio . The local popularity change from X i to its j th version M X i  X  j is computed by: Diff L ( X i ,M X i  X  j )= ity change, a pattern suffers local popularity change in two directions:  X  the pattern floats: Diff L ( X i ,M X i  X  j ) &gt; X  l .  X  the pattern sinks: Diff L ( X i ,M X i  X  j ) &lt;  X   X  l . 2.4 Measuring Global Popularity Change Based on local popularity change, we model the life cycle of a pattern to gain the insights on the evolution of the population against the entire time spans. Definition 7 (Degree of Floats). For an emerged pattern X i , the degree of d Definition 8 (Degree of Sinks). For an emerged pattern X i , the degree of sinksalongthewholetimelineisdefinedas: DoS ( X i , X  l )= n j = i +1 d j n  X  1 ,where d Degree of floats and sinks for a pattern reflect the changes in two directions over the history. So the global popularity change for a pattern is measured by DoS ( X i , X  l )). 2.5 Algorithm for X-Tracking Changes Givenanemergedpattern X i , the pseudo-code algorithm for x-tracking the changes of X i in the rest of time spans is shown in algorithm 1.

Before tracking the changes of a pattern, the time span in which it was firstly emerged has to be detected. The changes of a pattern is tracked against the whole history, and a pattern needs to compute its internal differentials with all the patterns before finding its most similar pattern from another time span. Scanning the patterns in a posteriori time span for a priori pattern distinguishes the newly formed patterns in a posteriori time span. On the other hand, the final formation of the subset E i of newly emerged patterns at t i ( E i  X   X  i ) is purified and decided by all the sets o f newly emerged patterns before t i : E
The accumulation of scanning reduces the expense on tracking the changes for the patterns firstly emerged in a posteriori time span. The following algorithm gives the formation of the subset of newly emerged patterns at n time spans. M E j E i is the subset of E i , in which each element is the version for one pattern in E . Based on the definition on locating most similar pattern, it can not guarantee that every element in E j could find its version in E i . We have experimented our x-tracking method on HPI (www.hpi.uni-potsdam.de) web site, and the usage data were taken from 2007.1 to 2008.2, from which we filtered 165535 valid usage sessions made by 79216 users. These valid usage ses-sions are monthly split into 14 sub sets from t 0 to t 13 , and we mined three kinds of navigation patterns for each sub set: frequent page sets, frequent navigation paths and frequent tree navigation structures.

Figure 2 shows the number of patterns in different time spans. The set of frequent navigation paths, in 2007.05, compared with other time spans, has the Algorithm 1. Tracking the Changes for a newly Emerged Pattern biggest number of paths under threshold  X  =0 . 01, but has a relative small num-ber under  X  =0 . 02. On the other hand, we can discover the same results in figure 2 (a). The numbers of navigation patterns are decided by the thresholds and the types of patterns, however, the variations or differences of these numbers are ma-nipulated by the compositions of individual behaviors and such differences are multi-facets. The variations of numbers of patterns could not show the difference of the compositions of patterns.
 The methods we used to extract semantics from web pages is refereed from Lucene [10], but adjusted to our applications. We selected 2851 web pages from our target site, and Lucene generated 43126 searchable terms, from which 20654 terms are removed as n-grams, 2640 numeric terms are out filtered. After remov-ing 6392 non-significant words including pronouns, articles, adjectives, adverbs and prepositions, 13440 meaningful term candidates are extracted and the aver-age number of extracted terms for each page is 120.

The changes an emerged pattern suffe red are computed by comparing with its versions in posterior time spans, two thresholds,  X  s and  X  u , are defined. For example, under  X  u =0 . 3and  X  s =0 . 5, the distribution of emerged patterns at different time spans is given in figure 3. In this figure, the gap between the  X  X um raw X  and  X  X um unchanged X  presents the number of emerged patterns at different time spans. The high percentage of emerged patterns compared with unchanged patterns reminds the big internal change of usage patterns, which reflects the semantical drifting of usage interest. Shown from figure 3, all patterns at t 0 are newly emerged, and t 8 has a highest percentage of emerged patterns. Pattern sets with the remarkable internal change could be selected, and the most unimportant patterns are removed. This is one significance of detecting internal changes among navigation patterns. However, only concerning the occurrence of Algorithm 2. Formation of newly Emerged Patterns at i th Time Span newly emerged patterns could not reveal their evolution in the posterior time spans and the relationship among the unchanged patterns in different time spans. We track the life cycle of one emerged pattern by computing its external change, local and global population change with its unchanged pattern in posterior time spans.

The life time of a pattern X i is the number of time spans, in which X i has its versions. Shown in figure 4, a pattern emerged in priori time span has a higher possibility to have a long life time than that emerged in posterior time span, this is usually related to the periodic updates of the web site. However, a pattern with only 1 life length indicates a temporal variation of usage interest and such variation could be unexpected interesting, noise from robots or due to special events. Though t 8 has the highest percentage of newly emerged patterns due to the big updates on the site, these patterns did not survive after t 8. In practice, the manager possibly has interest on the changing history of a runtime pattern, especially the changes on its external form and support population suffered in its life cycle. This can be drawn by querying the DB table about the relations between every emerged pattern and its ve rsions with their external and local popularity changes.

Here we only discuss the performance of x-tracking algorithm. The sizes of patterns and pattern sets have great imp act on the effectiveness and efficiency, and the internal differential computation between two pages relies on the di-mension of the extracted terms. The biggest part of time consuming is semantic extraction and data cleaning before mining and x-tracking, and depends highly on manually terms and data purifying. Two thresholds  X  s and  X  u decide the number of emerged patterns from every time spans and further affect the times on tracking the versions for internal unchanged patterns. Figure 5 collects the time consuming on x-tracking changes among patterns in two different scenarios. In scenario 1, there are altogether 585 patterns in 14 time spans, and the average size of pattern is 4.4; while 960 patterns in scenario 2 with an average size 5.8 for a pattern. From this figure, we see that x-tracking algorithm is effective in a reasonable application, though the time consuming in theory is O ( n 3 )withthe increasing of pattern sets and their lengths.
 In this paper, we propose an x-tracking method to detect the changes of web navigation patterns from four aspects. The x-tracking method we propose is to detect the newly emerged patterns bas ed on  X  X nternal X  feature integrating semantic distance with structural distance. We are working on two directions: one is the asynchrony between the changes of site semantics and navigation patterns; the other is the presentation on the multi-facet changes.

