 We present a novel system that combines the advantages of social communication and Web search by simultaneously dis-covering important pages and users. First, the system pro-vides a communication interface attached to pages, which al-lows users to talk with each other in real time while browsing the same page, i.e., page-centric communication. Then, the system can efficiently provide two ranking lists of pages and users by analyzing a hybrid structure of hyperlinks (page-page relationship) and social links (page-user relationship and user-user relationship). Thus, users can efficiently search for important pages as well as important users related to their queries through the ranking function, and immediately obtain useful information or knowledge from not only pages themselves but also from other users.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  retrieval models, search process Communication, Search, Social networking, Ranking
People can use two main methods to obtain information or knowledge from the Web. One is search engines and the other is social networking services (SNS). Search engines have the advantages in high speed search and high data cov-erage, and the disadvantage in the absence of flexibility. On the other hand, communication through SNS services can overcome the problem. However, the response may need longer time and may have lower knowledge coverage.
Although several techniques on communication and search have been studied [1, 2, 3], they do not solve the mentioned problems. We have proposed a system that combines the ad-vantages of both social communication and Web search [4]. T he system provides a ranking function for simultaneously evaluating pages and users (Page A in Fig. 1) and a commu-nication function attached to all pages which allows users to chat (Page B in Fig. 1). In this paper, we briefly explain a proposed ranking model and a developed system.

For the rankings, we construct a hybrid space of pages and users including hyperlinks between pages, social page links between users and pages, and social user links between users. Social page links are generated based on browsing his-tory, and social user links are generated by the relationship between users based on analyzing their browsing logs and their similarities. Then a link analysis is performed based on the hybrid links as explained in section 3.

After a user clicks a page ranking result (or a user ranking result), the clicked page (or the page that the clicked user is accessing) is presented to the user. The system have two main features: 1) user avatars are shown on each page, which display the users who are browsing or have browsed this page or who are highly evaluated in the ranking function; 2) a conversation window is attached to each page so that users can communicate with each other. I n the preprocessing, the system crawls Web pages using Apache Nutch and indexes them using Apache Solr. To use this system, users are first required to simply install a toolbar (a browser plug-in). Then, users can configure their options such as the nickname and the avatar icon, etc. Once the user browses a page or chat at that page with other users, the system records the information into a database, which is used for future ranking.

The flow of the system is as follows: 1. After a user submits a query, the system returns a page 2. When the user follows a page link on the search result 3. When the user follows a user link on the search result
A page-user graph is first constructed. The nodes of the graph consist of pages and users. The links of the graph consist of four parts: hyperlinks between pages, social page links from users to pages, social page links from pages to users, and social user links from users to users. Based on an example shown in Fig. 4, we explain four parts of this graph (left part of Fig. 4) and its corresponding adjacency matrix (right part of Fig. 4). 1. Hyperlinks between pages (Part I) 2. Social page links from users to pages (Part II) 3 . Social page links from pages to users (Part III) Figure 2: Page A (rankings of pages and users)
Figure 3: Page B (browsing and communication) 4. Social user links from users to users (Part IV)
We next describe the construction of probability transition matrix from the adjacency matrix. For the example in Fig. 4, it can be transformed to a probability transition matrix as shown in Fig. 5.  X  ,  X  and  X  are the weights assigned to the hyperlinks between pages, the social links from pages to users who are browsing them, and the social links from pages to users who have browsed them before. x , y and z are the weights assigned to the social links from users to pages that they are browsing, the social links from users to pages that they have browsed before, and the social links from users to similar users. Notice that the conditions of  X  +  X  +  X  = 1 and x + y + z = 1 should be satisfied.

These weights are assigned by users according to their re-quirements. For example, if a user attaches more importance
Figure 4: Page-user graph and adjacency matrix to the links representing the current browsing relationship (i.e., gives higher values to  X  and x ), the pages that are cur-rently being browsed by many users are highly evaluated. We next calculate the scores of pages and users called PURank. It can be calculated by the following equation. where n is the total number of pages and users in the page-user graph, d is a damping factor given by a user, A de-notes the probability transition matrix, and e denotes an n -dimension column vector with all elements set to 1. All elements of r are initialized to 1 and the calculation termi-nates when r converges.

In the implementation, the PURank scores of pages and users can be obtained by calculating the eigenvector of the probability transition matrix corresponding to the largest eigenvalue. For the acceleration of eigenvector calculation, we use a library SLEPc that can support parallel computing. For a matrix with 100 thousand * 100 thousand elements, the calculation time can be controlled to tens of seconds by using 8 processors. The server side is built using Apache Tomcat 6.0.32 and Java Servlet on JDK 1.7. The servlet can perform paral-lel processing for multiple requests because it makes a  X  X ser thread X  for each request. The user thread receives the re-quests from the clients. Then it parses them, performs the corresponding action, returns information to the requesting user, and sends information to other users. The browsing and communication logs are stored in the server database using PostgreSQL 9.1.1.
The client side is implemented as a toolbar (browser plug-in). The browser interface is programmed using XUL (ex-tensible user-interface language) and the development is pro-grammed using JavaScript. A user is connected to the server using an asynchronous communication program running in an Ajax script and using Comet.
Users will be able to freely interact with the system. The preliminary version of the developed system is now available
Users can perform a keyword search and simultaneously obtain the ranking lists of important pages and important users (Fig. 2). The acceleration based on SLEPc for calcu-lating the eigenvalue and the eigenvector of the probability transition matrix is also simulated in this demonstration.
Since our system attaches user avatars to all pages and each user avatar is linked to the page that he is browsing, users can surf the Web not only through hyperlinks on a page but also through user avatars on the page. Users can communicate with other users in real time (Fig. 3). If the user has a question about something on the page, he can immediately ask other users.

For some unpopular pages, the number of users accessing them may be small. Our system also supports asynchronous communication, making the past conversation logs on a page available to the current users. A user may find the answer to a previous question similar to his or her current one from the conversation logs. In order to encourage users to talk more, if a user enters more sentences, the avatar is enlarged.
This work was partially supported by SCOPE (Ministry of International Affairs and Communications, Japan) and by JSPS KAKENHI Grant Number 24780248. [1] E. Agichtein, E. Brill, and S. Dumais. Improving Web [2] R. W. White, M. Bilenko, and S. Cucerzan. Studying [3] X. Si, E. Y. Chang, Z. Gyongyi, and M. Sun. Confucius [4] Y. Shiraishi, J. Zhang, Y. Kawai, and T. Akiyama. [5] Demonstration Site of Developed System. [6] Demonstration Video of Developed System.
