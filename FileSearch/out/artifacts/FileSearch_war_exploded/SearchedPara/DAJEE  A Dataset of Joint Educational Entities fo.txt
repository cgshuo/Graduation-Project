 In the Technology Enhanced Learning (TEL) community, the problem of conducting reproducible evaluations of rec-ommender systems is still open, due to the lack of exhaustive benchmarks. The few public datasets available in TEL have limitations, being mostly small and local.

Recently, Massive Open Online Courses (MOOC) are at-tracting many studies in TEL, mainly because of the huge amount of data for these courses and their potential for many applications in TEL. This paper presents DAJEE , a dataset built from the crawling of MOOCs hosted on the Cours-era platform. DAJEE offers information on the usage of more than 20,000 resources in 407 courses by 484 instruc-tors, with a conjunction of different educational entities in order to store the courses' structure and the instructors' teaching experiences.
 TEL dataset, Educational Dataset, MOOC, Coursera
The increasing trend of contributions on Information Re-trieval (IR) and recommender systems in TEL brought to the attention of the research community the lack of large and exhaustive datasets for a reproducible and signi cant evaluation of those systems [1, 5].

At the same time, the idea of Massive Open Online Courses (MOOCs) has raised the interest of the TEL community [2, 1]. These courses are publicly available worldwide and usually offer a very qualitative learning service. One of the largest and popular platform hosting MOOCs is Coursera [2] of Stanford University. On Coursera there are hundreds of high-quality courses delivered by prestigious universities all around the world. It is not difficult to see MOOCs platforms, specially Coursera, as a potential dataset of educational re-sources and data in general. Although usually MOOCs re-sources do not include metadata, it is still possible to derive some educational traits of resources from the data about courses. Other information about courses and instructors can be extracted too.

Hence, this paper presents DAJEE , a DAtaset of Joint Ed-ucational Entities, to gather this information from MOOCs and provide an important asset for IR applications in TEL. Presently, the most used datasets in TEL are based on Learning Objects (LO) available on Learning Object Repos-itories (LORs). One of the most popular LOR is MER-LOT 1 [5], referencing to more than 40.000 LOs on the Web. MERLOT does not store the materials, just the URL and the metadata. However, there is some concern about the completeness of the metadata of LOs in LORs [6], and the inability of current schemata of metadata to provide useful information for the recommendation of LOs [3].

Similarly to MERLOT, this contribution presents a ref-erence dataset of teaching resources, where only the data about the resources are stored in the repository. Unlike MERLOT and other LORs, our dataset also stores contex-tual information about how resources have been practically used in courses by instructors, with a clear distinction of the different educational entities (lessons, concepts and re-sources). A LO indeed can vary from a very small lesson about one concept to an entire course. Instead, the goal of this dataset is to provide educational data of resources, courses, lessons and instructors independently, so that a wider variety of IR systems in TEL can be proposed and evaluated with such a dataset.
At the moment, Coursera is recognised as the largest plat-form hosting MOOCs with more than 1,700 courses deliv-ered by 147 institutions 2 . The Coursera APIs v1 3 deliver little information, only a few attributes of about 100 courses. For these reasons, we have developed a crawler of data from Coursera in order to build a dataset of teaching resources. The dataset actually stores the URL to the resources on https://www.merlot.org
Source: https://www.coursera.org on 22/01/2016 https://tech.coursera.org/app-platform/catalog/ accessed on 22/01/2016 Coursera, not the resources themselves, with information about i) the resources, ii) the courses where they have been delivered, and iii) the instructors who delivered them on Coursera. We brie y present the structure of Coursera 4 and the data that we have been able to crawl.

The courses are divided into weeks, which are, in essence, lessons. Usually, a course has a presentation page with a section for the abstract, the course syllabus and instructors among other information. In Coursera we have found two types of courses: learn and course ; this distinction is stated directly in the URL of the courses. The course-type courses offer a more informative presentation page reporting also the category of a course (not available for the other type). In-stead, the learn-type courses have a more meaningful inter-nal structure, where a concept can be associated with more than one resource. In course-type courses, resources are di-rectly delivered in lessons with no mention of concepts, so for those courses we considered the title of the resources as the target concept. Independently of the course type, not all courses have a preview of their content and structure. When there is a preview, the content of the course can be accessed without enrolling; it is sufficient to be logged in on Coursera. Figure 1a shows the structure of a learn-type course with a preview available. As we can see, i) the course has at least one instructor, ii) it is divided into weeks or lessons, iii) each lesson is divided into concepts and iv) the concepts contain the resources. Such structure is maintained in our dataset.
The resources delivered on Coursera are mostly videos, but in learn-type courses there are other types of resources. Interestingly, most of the videos have downloadable tran-scripts; valuable data for applying text-mining and IR tools.
This analysis of Coursera unveiled the potential of a big and well-characterized dataset of teaching resources. Hence, we designed and implemented a crawler for extracting re-sources and educational data around them. An educational entity from Coursera was saved in this dataset, upon con-dition that all the compulsory attributes (reported in bold in Section 3) were extracted. In addition, some learn-type courses allowed access only to the rst week of the course, so only the data of the rst lesson have been crawled. More-over, some instructors did not present their affiliation in
Th e structure presented here is related to the time of the crawling design, implementation and running that took place in from August to November 2015.
 T able 1: Summary of educational entities of Cours-era included in DAJEE . their page, so they have not been included in the set of in-structors of a course. Consequently, a course resulting with no instructors has not been recorded in the dataset. Ta-ble 1 reports the amount of the crawled data that are in DAJEE . T able 2: Pattern of resource titles and URL for some resource types in Coursera.

While exploring the resources delivered on Coursera, we found a number of different resource types, mostly in learn-type courses. This difference is reported directly in the URL of the resource, corresponding to this pattern: :::= &lt; course U RL &gt; = &lt; resource ty pe &gt; =::: . So, during the crawling phase, the type of a resource is ex-tracted from the URL and associated with the resource, with two exceptions. The type lecture has been renamed to video because a lecture was always delivered with video resources. The crawled resources of type supplement always refer to further reading or insights, so the type for those resources is document and the purpose is supplement . With these con-si derations, the types of resources available in DAJEE are: exam , peer , quiz , document , video and programming .
In addition, when analysing the title of the crawled re-sources, we identi ed a pattern that is applied to all the resource types, with the exception of videos and supple-ments. The rst terms of the title specify the purpose of the resource with this pattern: &lt; resource pur pose &gt; : &lt; resource titl e &gt; . Moreover, all the resources of type peer have their URL ending with =give f eedback . Table 2 sum-marises these patterns used for attaining the purpose of the resources, where a title pre x is the substring until the rst occurrence of colon, and the URL suffix is the substring from the last occurrence of '/'. Taking into account the latter considerations, the dataset offers resources for the following purposes: presenting , examination , supplement , feedback , as-sessing and practice quiz .
DAJEE is a MySql Database (DB) that hosts the data of the educational entities reported in Table 1 and described afterwards. For a better understanding, Figure 2 shows the E-R diagram of the DB reporting all the entities in DAJEE . We chose a low level of normalization of the DB because it is for consulting purposes only. Bear in mind that the bold attributes of an entity had to be crawled from Coursera, otherwise the entity would not have been included in the dataset. Furthermore, if a course did not have the compul-sory data, then all the related entities were discarded.
It just reports the name and URL of the universities of courses and instructors. It also has an id eld for being identi ed within the DB; this is the key of this entity.
It also has an id eld as key. Other information is about the name , university , position in the university (it can be NULL ) and the website (it may be empty). In addition, the pair name and university must be unique.
This entity has many attributes, being one of the most informative entity in Coursera. These are the attributes: id (key), title , URL , course c ode , language , id un iversity , length , length de scription ( NULL ), short de scription (it can be empty), description and subtitles (it can be empty). More in depth, the course c ode is extracted from URL and uniquely identi es courses in Coursera. The length is not always re-ported in the presentation page of the course. If not avail-able, it is determined as the sum of the duration of the re-sources delivered in the course. The eld length des cription is an indicative duration of the course; usually they show ei-ther the following wording, "6 weeks of study, 5-7 hours/week" or the following one, "4-6 hours/week". The attribute short de scription is extracted for only the course-type courses (41 courses) when provided; it is not reported for learn-type courses. Finally, category is a comma-separated list of ids of the table Category .
This entity represents a category with the following at-tributes: id (key), id r oot c ategory (equal to -1 if the cate-gory is root) and name .
This entity is very simple and consists of id (key), name and language (can be empty). The name of a concept is composed by the title of the concept (as found on the web-page) and the name of the lesson, following this pattern: &lt; concept name &gt; :: &lt; lesson name &gt; . We chose such rep-resentation since some concepts have very generic titles; it is more expressive to include the name of the lesson, with an easy separation using two colons. The language of a con-cept is not speci ed on Coursera, but it has been derived analysing the transcripts of its video resources. If no video resources are associated with the concept, then language is empty.
This entity is a container of concepts and it is not directly reported in Coursera. It is recognized from headers of a course web-page that either contains the concepts, for learn-type courses (refer to Figure 1a), or resources, for course-type courses (see Figure 1b). In case of learn-type courses, a lesson matches with a week, while for course-type courses that may not be the case. The following attributes exist for this entity: id (key), name , concepts , prerequisites , description , id cm (i d of the concept map), version cm (v ersion of the concept map). Concepts is a collection of id of the table concept , separated by a comma, and it refers to the concepts taught in the lesson. Prerequisites reports the list of ids of the previous lessons (for Coursera only one), in order to keep trace of the sequencing of the lessons as found in the course. Description of a lesson is not always available on Coursera, but it is never empty in the dataset. The descriptions of lessons start with a pre x reporting the number of the week in which the lesson is delivered (i.e. week 1 -descriptionText). We adopted this approach because a week in course-type courses usually refers to more than one container (headers) of concepts, as Figure 1b shows. Finally, the attributes id cm an d version cm id entify the concept map of a course.
In education, a concept map is a very powerful way to represent the course domain, namely the concepts taught in a course and their arrangement. In this dataset, a concept map (table conceptmap ) consists of the concepts and their sequencing in a course on Coursera, connecting a course with its concepts. A concept map is related to only one course, thus the id consists of the pre x "coursera:" and the course code (e.g. coursera:positive-psychology). The pre x is help-ful to distinguish possible matching of course codes from other MOOCs platforms. With a different crawling of the same platform, we may nd some differences for a concept map, so the attribute version identi es a particular arrange-ment of the map. To sum up, a concept map is uniquely identi ed by id and version . For an id of a concept map, there is a record for each concept of the map, reporting the id of the concept ( conceptID ) and the id of the previous concept ( prerequisite ), if any.
This entity connects together concept maps , instructors and courses via the following attributes: id cm , vers ion cm , id c ourse and id in structor (foreign keys to the respective tables).
A resource entity has the following attributes: id (key), title , type , URL , length and language . The attribute type consists of six values introduced in Section 2.1. The length can be zero, specially for document and programming re-sources where the duration was never speci ed. The lan-guage of a resource is determined by extracting the language of the transcript using the tool Apache Tika 5 . If the tran-script was not available or not provided, the language of the concept to which it belongs was assigned (it can be empty).
For copyright issues, the transcripts of the video resources are not included in this dataset. However, the table named resource ter ms f requency provides the frequency and nor-malised frequency of each stemmed term in the transcript of a resource. The stop words are not included in this table. For further text analysis, the plain transcript can be easily downloaded from the web-page of the resource, following the URL in table resource .
This is a relationship with attributes connecting concept and resource . The table that implements the relationship that a resource is for a concept is named association c oncept r esource . The key of this table consists of concept and re-source (foreign keys), and the attribute is purpose . The purposes available in DAJEE are reported in Section 2.1.
This paper presents DAJEE , a dataset for TEL applica-tions obtained from the crawling of data in MOOCs hosted on Coursera. DAJEE presently refers to more than 20.000 resources, which is already half of the number of LOs in MERLOT. In the future, the number of resources is ex-pected to increase signi cantly with the crawling of other MOOCs platforms.

DAJEE provides data about lessons, courses and instruc-tors when resources have been delivered. Therefore, data mining and IR techniques can be employed to extract the teaching patterns and preferences of instructors by analysing h ttps://tika.apache.org/ the resources and their arrangement in courses. Text-mining tools can also be applied to the transcripts of resources for discovering further knowledge about instructors and courses. This knowledge can be helpful for supporting course design and lesson planning [4], helping in the creation of learning activities [3] among other applications. Moreover, DAJEE is expected to be useful for conducting a comparative and re-producible evaluation of recommender systems in TEL [5, 1]. Finally, it may also help to address the cold start problem of recommender systems [7] in TEL.

DAJEE can be accessed publicly for research purposes only, following the authors' approval. Researchers can apply for it by lling in the form at http://144.6.235.142/dajee. [1] Drachsler, H., Verbert, K., Santos, O. C., and [2] Kay, J., Reimann, P., Diebold, E., and [3] Krieger, K. Creating learning material from web [4] Limongelli, C., Lombardi, M., Marani, A., [5] Lombardi, M., and Marani, A. A comparative [6] Palavitsinis, N., Manouselis, N., and [7] Shani, G., and Gunawardana, A. Evaluating
