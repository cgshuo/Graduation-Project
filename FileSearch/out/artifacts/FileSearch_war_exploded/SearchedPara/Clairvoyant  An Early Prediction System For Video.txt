 Our slogan for the proposed Clairvoyant system is \with several clicks, the future is in your hand, the plan comes into your mind". Clairvoyant is to predict the future of new videos with only few data. The core function in the sys-tem is the novel shifted shape match prediction algorithm, based on a K-Nearest Neighbor model. Tons of experiments have been conducted on the open data sets. The experi-mental results con rm that the proposed SSMP algorithm is promising and outperforms the baselines with signi cant improvements on various evaluation methods. A demonstra-tion video has been published at http://1drv.ms/1nyH3hD .
Since people like video producers, the VOD (video on de-mand) service providers and advertisers desire to know the future of all their video programs, especially the new ones, we propose our Clairvoyant system to give an early predic-tion on video hits to support their decisions. A demonstra-tion video about three minutes can be online reached at http://1drv.ms/1nyH3hD . We highly recommend the read-ers kindly download the demo for better quality.

Traditional time series prediction algorithms have the re-strictions as (1) the parameters need to be learnt from a large amount of historical data in the series and (2) most algorithms are only suitable for stationary time series. Un-fortunately, for the early prediction problems, these two re-strictions are difficult to be satis ed, where the available series is not only short but also unstable.

In the Clairvoyant system, the core function is the novel shifted shape match prediction (SSMP) algorithm. SSMP can effectively and efficiently nd the high quality neighbors and give out the video hits prediction in the early stage of a new video's lifetime, through the proposed scaling , shift-ing and smoothing techniques. Therefore, our target users can not only get the visualized prediction results, but also discover the underlying patterns behind different programs through the neighbor nding interface.
 Fi gure 1: The hit prediction and its real value for \Doctor Who Season 6[6]".
 Fi gure 2: The selected neighbors for \Doctor Who Season 6[6]".
Fi gure 3: Architecture of the Clairvoyant system. [6 ] proved that there is a high correlation between total hits in the rst K days and the following N days (N &gt; K). Moreover, [ 5] con rmed that different trends in the rst K days also affect the future hits. We are then intuitively mo-tivated that the video hits series can be predicted through nding their similar neighbors, such as adopting K-Nearest Neighbor regression (KNN). However, traditional Euclid dis-tance can't nd suitable neighbors.

Here is an example of Clairvoyant only given the data of the rst 7 days. Figure 1 shows the day-to-day predictions for the following 30 days on \Doctor Who Season 6[6]". The real series is also plotted for evaluation. Figure 2 presents the found neighbors, using the scaling, shifting and smooth-ing techniques. The quality of neighbor is listed in details as well. It's interesting that the hit series of an English drama is quite similar to some Chinese and even Korean programs. Furthermore, our Clairvoyant system can t multiple lan-guages, multiple devices so that the users can visit Clair-voyant anytime and everywhere.
Clairvoyant runs automatically at the background every-day. As shown in Figure 3, the data of both the new videos and sample videos are extracted, transformed and loaded from the user's log system through the\data pre-processing" module. Following\system con guration",\matching &amp; pre-dicting" module matches the new series with the sample se-ries selected by the\sample selection"module as well as gives out the nal prediction result. All the prediction results are stored into the database. Our users can see the visualized result through the web interfaces.

In details, \data pre-processing" transforms the log data into time series data. New series, whose length is 7 according to our demo con guration, are stored into the \new series" le and waited for prediction. Other series are recorded in the \sample series" database. \System con guration" loads the algorithm parameters including the input length ( T train ), the output length ( T and the number of neighbors ( K ) from the \con guration le". Meanwhile, the paths of the \new series" le, the se-lected samples and the prediction results are also loaded. \Sample selection" chooses series whose length is larger than 2 T train + T pred 1 from the \sample series" database an d smooths the rst T train elements with moving average algorithm. \Matching &amp; predicting" nds K best neighbors for each of the \new series" among the samples selected by the \Sample selection" module and nally produces the predic-tion result using the SSMP algorithm.
The SSMP algorithm includes the basic KNN model and the scaling, shifting and smoothing techniques. Throughout the whole paper, the notations are all listed in Table 1.
When using KNN to predict the future of a new series, K nearest neighbors are selected according to a distance met-ric, like Euclid distance. The prediction result is calculated according to Equation 1.
The key of this prediction model is the distance/similarity metric, but Euclid distance is not good enough.
To make the similarity measurement irrelevant to the mag-nitude, scaling technique mentioned in [ 3] is adopted. We de ne a similarity measurement as shown in Equation 2: where  X  :  X  represents the Euclid distance, is the scaling parameter applied on s b . Note that can be solved by set
M oreover, the scaling operation is also applied in the nal calculation to improve equation 1. Neighbor series are scaled to t s new [0 : T train ]. s predict new is also scaled to ensure that has reached the minimum point.
Furthermore, besides the magnitude difference, we ignore the affect of different spike time when calculating similarity. Thus, Equation 2 can be rewritten with the shift operation as shown in Equation 3:
If &gt; 0, s b will be moved steps forward and the rst elements will be lled with 0. Otherwise, s b will be moved steps backward and the last elements will be lled with 0. Equation 3 is the similarity metric that is nally adopted in SSMP.
Since the smoothing technique has been proved to be ef-fective for noise reduction, s new will be smoothed before the similarity calculation, so as to improve the effect of trend extracting. Similar to the \Sample Selection" module, the moving average with the same window size will be adopted.
All in all, combining these three ideas, the s predict new calculated according to Equation 5. where total is the nal scaling parameter which minimizes T train ]. i s are the parameters that t the neighbors to s new [0 : T train ]'s magnitude.

In the real application, we claw the up-to-date videos world widely, such as from IMDb, YouTube, China Bestv and Youku etc.

In order to validate the effect of our Clairvoyant system, we conduct the experiments on the following open data sets. The data sets contain 3854 TV-drama videos, in which 3126 videos from December 1st, 2012 to March 31st, 2013 are selected as the training data set, and 728 between April 1st, 2013 and May 31st, 2013 as the testing data set. T train is set to 7 according to our Kendall's [7 ] comparing experiments and the real needs. T pred is set to 30.

We apply the mean absolute error (MAE) [4 ], mean abso-lute percentage error (MAPE) [ 4] and R squared [ 2] as the evaluation metrics.
We present the experimental results in Table 2: (1) KNN is the baseline; (2) SSMP is the proposed algorithm with scaling, shifting and smoothing; (3) SSMPNS stands for SSMP without considering smoothing; (4) the Random For-est (RF) regression [1 ], as a state-of-the-art regression algo-rithm, is adopted to be an outside comparison to the above three methods; (5) we exhaustively test K in the experi-ments to get the local optimization value, here we only list K = f 5 ; 10 ; 15 ; 20 ; 30 ; 40 g as the samples; (6) the best result is shown with the best K after @.

We draw the rst conclusion as that scaling and shift-ing work very well, since the performance of SSMP without smoothing is much better than the performance of KNN. The second conclusion is that smoothing plays a very impor-tant role as well, because SSMP outperforms SSMP without smoothing. We dig into the experimental details and con-rm that less is more. We observe that SSMP can nd more accurate neighbors, but the number of neighbors is less than that of SSMP without smoothing.

For the tuning of parameter K , we conduct a 5-fold cross validation on the training data set, such that we get the best K of SSMP around 13 in terms of MAE, MAPE and R . However, in the testing data sets, the best K is around 20 in terms of all the evaluation methods. Therefore, we suggest tunning K dependently on the dataset when using SSMP.
With the smoothing, scaling and shifting techniques, SSMP outperforms the traditional KNN regression and the state-of-the-art random forest regression. Furthermore, this early prediction system is exible enough to t all kinds of videos, since the only thing it needs is the data in the rst 7 days. And the neighbor information can also help dig more from the data. The experiments have con rmed that the proposed SSMP algorithm is promising. The parameter K has also been discussed and suggested to be tuned according to the data sets. With the visualized result provided by Clairvoy-ant, the future can be seen, and the decisions are supported.
In the future, we will extend Clairvoyant to deal with the long-term prediction problems. This is also our ongoing work.
This research is funded by Ministry of Science and Tech-nology of the People's Republic of China (2012BAH74F02) and Science and Technology Commission of Shanghai Mu-nicipality (No.13511507902). We also thank the anonymous reviewers for their comments on this work.
