 Many users need to refer to content in existing files (pictures, tables, emails, web pages and etc.) when they write doc-uments(programs, presentations, proposals and etc.), and often need to revisit these referenced files for review, re-vision or reconfirmation. Therefore it is meaningful to dis-cover an approach to help users revisit these references effec-tively. Traditional approaches(file explorer, desktop search, and etc.) fail to work in this case. In this paper, we propose an efficient solution for this problem. We firstly define a new personal data relationship: Context-based Reference(CR), which is generated by user behaviors. We also propose ef-ficient methods to identify CR relationship and present a new type of query based on it: Context-based Query(C-Query), which helps users efficiently revisit personal docu-ments based on CR relationship. Our experiments validate the effectiveness and efficiency of our methods.
 H.2.m [ Database Management ]: Miscellaneous Algorithms, Human Factors, Performance Context, Query, Personal DataSpace
With development of information technology, more and more personal data items are collected, and Personal Infor-mation Management (PIM) [1] becomes a critical problem and a promising research area. Studies show that many personal data accesses( &gt; 58%) are  X  X evisit X  [3, 4, 5], and  X  X eaningful X  data relationships(senderOf, authorOf, pub-lishedIn and etc.) can help users relocate expected items more effectively [2]. However, there are two basic questions need to be answered: (1)what relationships are  X  X eaningful X  and (2) how to identify these  X  X eaningful X  relationships.
Since the aim of identifying data relationships is to im-prove effectiveness of data query, the definition of  X  X eaning-ful X  depends on user query requirements. When users pro-duce personal documents(programs, presentations, propos-als, and etc.), they often refer to some contents in existing files. In addition, when a user accesses one of her documents or redo a task, she often needs to revisit its references for revision or reconfirmation. Therefore  X  X eferenceOf X  is one of the  X  X eaningful X  relationships of personal data.

The popular tools used by persons to revisit expected doc-uments are folder explorer and desktop search. Folder ex-plorer demands users remember path and name of the ex-pected files. If a user can only remember fuzzy information, she has to try possible paths many times. Therefore folder explorer can not work well in this case. Desktop search de-mands users remember keywords included by the expected files, which does not work well when a user can not remem-ber exact keywords.

There are also some works on Personal DataSpace(PDS) model [6], personal data integration [7, 8], index [9] and query [11]. But all these works focus on improving efficiency of personal data operation by identifying objective associa-tions of items(senderOf, authorOf, and etc.). Our work is different, we focus on proposing a new personal data rela-tionship based on user behaviors and a new type of query. Our main contributions can be summarized as below.
The rest of this paper is organized as follows: In Section 2, we give a solution framework. In Section 3, we describe the algorithms for identifying CR relationship. In Section 4, we introduce the approach for C-Query processing. Section 5 evaluates our measures and section 6 concludes this paper.
As shown in Figure 1. Our solution framework includes four parts: CR Database(CDB), Context-based Reference Relation(CRR) Identifier, C-Query Engine and Query In-terface.
Figure 1: C-Query Implementation Framework
In this framework, CRR identifier is the basis of our so-lution, and is also a big challenge, because (1) there is no explicit information for mining this relationship and (2) the approach for identifying CRR shouldn X  X  increase users X  bur-den. Studies [10] show that the two items accessed contin-uously often has associations. Inspired from this idea, we propose a method for identifying CR relationship based on user behaviors. To make it more clear, we first introduce the following concepts.

Definition 2.1 (Personal Data Item). A personal data item(PDI) is the basic element of personal data, and is the smallest unit of personal data operation(read, modify, delete, and etc.).

There are multiple data relationships among personal data items, such as senderOf, authorOf, referenceOf, and so on. Based on personal data items and their relationships, we propose a new concept: Personal DataSpace.

Definition 2.2 (Personal DataSpace). A Personal dataspace D is described as a 2-tuple ( N , R ), where N is a set of personal data items and R is a set of personal data relationships.
 Definition 2.3 (Context-based Reference Relation). We denote it as R CR ( I 1 , I 2 , U ) , where I 1 and I 2 sonal data items, and U is a user, which means there is a reference relationship between I 1 and I 2 , which is generated by activities of U .
In this section we first overview CR relationship, then present algorithms for identifying CR-Relationship.
To tackle the problem of absence of public personal data set, we implement a prototype to capture user access behav-iors(operations on desktop, email box and web pages). We run it in personal computers of five persons of our group, and obtain a data set, which includes the access logs of the five users in two months. Based on analyzing these user access logs we propose a new concept: Time Sequential List . Definition 3.1 (Time Sequential List). A Time Sequential List(TSL) is an item list ordered by access se-item, and  X  i , if 1  X  i  X  n  X  1 , I i &lt;&gt; I i +1 .
In a TSL, there is no two sequent items mapping to a same item. Figure 2 shows an example of time sequential list. By analyzing the access logs of the five users, we dis-cover three types of CR relationship: Sequence Adjacent Relation(SAR), Sequential Inclusive Relation(SIR) and Lin-eage Relation(LR). To make them clear, we define them as below.
 Definition 3.2 (Sequencial Adjacent Relation).
 We denote it as binary relation. Let I i and I j are two items of PDS, if I i and I j appear in TSL sequentially, ( I i , I R
We define SAR as a symmetrical relation, it means if ( A, B )  X  R SAR , ( B, A )  X  R SAR . Take the access list shown in figure 2 for example, A and C are accessed frequently, then ( A, C )  X  R SAR and ( C, A )  X  R SAR .

Definition 3.3 (Item Sequential Loop). Let L 0 be a TSL and L 0 = ( X 1 , X 2 , ..., X n ) . If L 00 = ( X i is a sub list of L 0 , j  X  i  X  2 and X i .item = X j .item . We call L 00 an item sequential loop(ISL). We call X i .item the master item, and call the items of { X i +1 , ..., X j  X  1 } slave items.
In the example shown by figure 2, there are following ISLs (A,B,A), (A,C,D,A), (B,E,F,G,B), and so on.
 Definition 3.4 (Sequential Inclusive Relation).
 A sequential inclusive relation R SIR is a binary relation. Let L 0 be an item sequential loop, X 0 is the master item, and Y 1 , Y 2 , .., Y m are the slave items of it, { ( X 0
In the example shown by figure 2, ( A, C, D, A ) is a ISL, then { ( A, C ) , ( A, D ) } X  R SIR .
 Definition 3.5 (Lineage Relation). We denote it as R LR ( I 1 , I 2 ) , where I 1 and I 2 are two items of PDS, R denotes I 1 and I 2 are two versions of a same personal data item. We define LR as symmetrical relation.

Figure 2 shows an example of user access sequential list, where A is the early version of H, therefore ( A, H )  X  R and ( H, A )  X  R LR . LR is also generated by user behav-iors(copy to, save as, and etc.).
We take a triple set TS = { ( x i , x j , w ) } to specify SAR relationship, where x i and x j are two items and w is the weight of R SAR ( x i , x j ). We define w as the times the two items orderly appear in ISL. Based on the access sequence list, we can construct TS easily. Its input is an item access list ( X 1 , X 2 , ..., X n ), and its output is a triple set T list each X i represents an operation, and X i .I represents the item referenced by X i . Firstly, we scan the items of the ac-cess list one by one, if ( X i .I, X i +1 .I )  X  T 0 , W ( X is added by 1, otherwise we insert a new tuple ( X i .I, X and set its weight as 1. It is an incremental process to build TS. Every time when a new operation is monitored, TS will be updated at once.
Based on Item Sequence Loop(ISL), we can derive Se-quence Inclusive Relation(SIR). In the definition of ISL, we do not set limitation for the length of ISL, obviously it re-sults in low precision. Therefore we propose a new concept.
Definition 3.6 (Minimum Sequential Loop). Let L 0 be a SL, and @ L 00 , L 00 be a SL and L 00  X  L 0 , we call L minimum sequential loop(MSL).

For example, as shown in figure 3, SL 2 is included in SL and SL 3 is included in SL 5 , thus SL 3 and SL 5 are not MSL. Because there are not SLs in SL 1 , SL 2 and SL 4 , they are MSLs.

Our method for identifying SIR is based on MSL. Let ( X 1 , X 2 , ..., X n ) be a time sequence list, and ( I 1 , I the corresponding item list. Assume a new operation X n +1 is monitored, and its item is I n +1 , we scan backwards to find a MSL mastered by the new item I n +1 . When we find the nearest X i , where Xi.I = X n +1 .I , and there does not exist a SL in the list ( X i , X i +1 , ..., X n +1 ), it means we find a MSL ( X i , X i +1 , ..., X n , X n +1 ), and we can identify the following inclusive relations: { ( I n +1 , I i +1 ) , ( I n +1 , I The same as SAR, We take a triple set to describe SIR.
As the naive method, we can identify it by monitoring the special operations of users(copy to, save as, and etc.). Because this method depends on monitoring specific appli-cations, it is a challenging problem to monitor all possible applications. By analyzing user access logs we find there is a high similarity between the names of two personal files which are two different versions of one document. And users prefer to name different versions of a document with simi-lar strings, and tend to distinct them with prefix or postfix. Based on the observation, we present an edit distance-based approach to decide LR by computing the name similarity of two files. For the reason of space limitation, we do not introduce it in details here.
After identifying CR relationship, we can revisit personal data items based on it. In this section, we introduce the processing of C-Query. In our method, we take three adja-cency matrixes M SAR , M SIR and M LR to specify the three relationships SAR, SIR and LR. Therefore we can compute the query results based on the following formula:
Here M I is an entry vector ( x 1 , x 2 , ..., x n ), if I to the input items, x i = 1, else x i = 0. Based on the for-mula, we can get a result vector M R . Let t be the threshold predefined, if M R ( i ) &gt; t then I i is one item of the query results. To get a high recall here we take a relax policy: if M
R ( i ) &gt; 0, we think item I i belongs to the result set. It means we take all  X  X uspicious X  items as results.

According to the characteristics of C-Query, we design a friendly and flexible interface. Users can input an existing item, or select it by exploring personal resources. It also provides multiple ways for users to refine query results, such as filter or sort the results based on type, access time, key-words, and etc. If the input is a multi-version item, it can display all versions of it and all references of each version.
We selected 5 students(2 undergraduate students, 2 mas-ter students and 1 PhD student) as participants of our ex-periments. They run our prototype on their computers. By this way we collected a data set for experiments. We collected two-month access logs(include accesses to desktop files, emails and web pages) of each participant. Table 1 shows the specification of the data set. The meaning of each column is specified as follows.
Our aim is to help users revisit personal documents based on CR relationship. Therefore effectiveness and efficiency are the key factors of our approach. Let I 0 be the input item, based on the three CR relationships(SAR, SIR and LR), we derive several algorithms to identify CR relation-ship. (1) SIR. It takes the items with SIR to I 0 as re-sults. (2) SAR. It takes the items with SAR to I 0 as results. Table 1: Specification on dataset of experiments (3)SIR+SAR. It takes the items with SIR or SAR to I 0 as results. (4)SIR+SAR+LR. It takes the items with SIR or SAR or LR to I 0 as results.

For each user, we select ten  X  X epresentative X  documents from her access logs.  X  X epresentative X  means that the se-lections should not only include  X  X ightweight X  personal doc-uments, but also contain some  X  X eavyweight X  documents, which cost users more energy, such as paper drafts, presen-tation slides and etc. These documents often have more Context-based References. We deliver the selected docu-ments to participants and ask them give  X  X tandard answer X  to each document.
 To test the effectiveness of our methods for identifying CR relationship, we take recall and precision to evaluate. We take each selected document as input, and assume that each user U i submits 10 C-Queries. By comparing the re-sults produced by our algorithms and the right answer given by users, we can compute the recall and precision of each al-gorithm. We take traditional F-measure method to compute F-score of each method and give evaluation of them.
Figure 4 shows the results of our experiments. Figure 4(a) compares recall of the four methods, Figure 4(b) compares their precision, and Figure 4(c) compare their F-score based on F-measures. The results show that the SIR+SAR+LR method has the best effectiveness. It shows that although we take a relax method, the average precision still reach 60%, and the average recall is more than 90%. In this paper we propose a new semantic relationship Context-based reference(CR) and present a new type of query of PDS Context-based Query(C-Query) . We also propose an efficient method to identify CR relationship based on user operation logs, and present the processing method of C-Query. This is only a preliminary work on supporting context-based query in personal dataspace. In the future, we will try to improve the precision of identifying CR rela-tionship by considering more user-related information, and will study the ranking approaches of C-Query results.
This research was partially supported by the grants from the National High-Tech Research and Development Plan of China (No:2007AA01Z155, 2009AA011904); the Natural Science Foundation of China under grant number 60833005. And the authors would like thank Xin Dong, Xiaodong Zhou and Wei Lu for some discussions regarding this work. [1] W. Jones and H. Bruce. A Report on the [2] M. J. Franklin, A. Y. Halevy, and D. Maier. From [3] L. Catledge. and J. Pitkow. Characterizing browsing [4] B. McKenzie and A Cockburn. An empirical analysis of [5] L. Tauscher and S. Greenberg. How people revisit Web [6] J.-P. Dittrich and M.A.V. Salles. iDM: A Unified and [7] X. Dong and A.Y. Halevy. A Platform for Personal [8] M.A.V. Salles, J.-P. Dittrich, S.K. Karakashian, O.R. [9] X. Dong and A. Halevy. Indexing Dataspace. SIGMOD [10] P.-A. Chirita and W. Nejdl. Analyzing User Behavior [11] C. Peery, W. Wang, A. Marian and T. D. Nguyen.
