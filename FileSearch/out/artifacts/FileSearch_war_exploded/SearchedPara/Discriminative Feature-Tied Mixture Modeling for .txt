 Significant progress has been made in statisti-cal machine translation (SMT) in recent years. Among all the proposed approaches, the phrase-based method (Koehn et al., 2003) has become the widely adopted one in SMT due to its capability of capturing local context information from adja-cent words. There exists significant amount of work focused on the improvement of translation perfor-mance with better features. The feature set could be either small (at the order of 10), or large (up to mil-lions). For example, the system described in (Koehn et al., 2003) is a widely known one using small num-ber of features in a maximum-entropy (log-linear) model (Och and Ney, 2002). The features include phrase translation probabilities, lexical probabilities , number of phrases, and language model scores, etc. The feature weights are usually optimized with min-imum error rate training (MERT) as in (Och, 2003).
Besides the MERT-based feature weight opti-mization, there exist other alternative discriminative training methods for MT, such as in (Tillmann and Zhang, 2006; Liang et al., 2006; Blunsom et al., 2008). However, scalability is a challenge for these approaches, where all possible translations of each training example need to be searched, which is com-putationally expensive.

In (Chiang et al., 2009), there are 11K syntac-tic features proposed for a hierarchical phrase-based system. The feature weights are trained with the Margin Infused Relaxed Algorithm (MIRA) effi-ciently on a forest of translations from a develop-ment set. Even though significant improvement has been obtained compared to the baseline that has small number of features, it is hard to apply the same approach to millions of features due to the data sparseness issue, since the development set is usu-ally small.

In (Ittycheriah and Roukos, 2007), a maximum entropy (ME) model is proposed, which utilizes mil-lions of features. All the feature weights are trained with a maximum-likelihood (ML) approach on the full training corpus. It achieves significantly bet-ter performance than a normal phrase-based system. However, the estimation of feature weights has no direct connection with the final translation perfor-mance.

In this paper, we propose a hybrid framework, a discriminative mixture model, to bridge the gap be-tween the ML training and the discriminative train-ing for SMT. In Section 2, we briefly review the ME baseline of this work. In Section 3, we introduce the discriminative mixture model that combines various types of features. In Section 4, we present experi-mental results on a large-scale Arabic-English MT task with focuses on feature combination, alignment combination, and domain adaptation, respectively. Section 5 concludes the paper. In this section we give a brief review of a special maximum-entropy (ME) model as introduced in (It-tycheriah and Roukos, 2007). The model has the following form, where s is a source phrase, and t is a target phrase. j is the jump distance from the previously translated source word to the current source word. During training j can vary widely due to automatic word alignment in the parallel corpus. To limit the sparse-ness created by long jumps, j is capped to a win-dow of source words (-5 to 5 words) around the last translated source word. Jumps outside the window are treated as being to the edge of the window. In Eq. (1), p izing term, and  X  model, each being a binary question asked about the source, distortion, and target information. The fea-ture weights  X  Iterative Scaling (IIS) algorithm (Della Pietra et al., 1997), a maximum-likelihood-based approach. 3.1 Mixture Model Now we introduce the discriminative mixture model. Suppose we partition the feature space into multiple clusters (details in Section 3.2). Let the probabil-ity of target phrase and jump given certain source phrase for cluster k be where Z
We propose a log-linear mixture model as shown in Eq. (3). It can be rewritten in the log domain as log p ( t , j | s ) = log
The individual feature weights  X  feature in cluster k are estimated in the maximum-entropy framework as in the baseline model. How-ever, the mixture weights w rectly towards the translation evaluation metric, such as BLEU (Papineni et al., 2002), along with other usual costs (e.g. language model scores) on a devel-opment set. Note that the number of mixture com-ponents is relatively small (less than 10) compared to millions of features in baseline. Hence the opti-mization can be conducted easily to generate reliable mixture weights for decoding with MERT (Och, 2003) or other optimization algorithms, such as the Simplex Armijo Downhill algorithm proposed in (Zhao and Chen, 2009). 3.2 Partition of Feature Space Given the proposed mixture model, how to split the feature space into multiple regions becomes crucial. In order to surpass the baseline model, where all features can be viewed as existing in a single mix-ture component, the separated mixture components should be complementary to each other. In this work, we explore three different ways of partitions, based on either feature types, word alignment types, or the domain of training data.
 In the feature-type-based partition, we split the ME features into 8 categories:  X  F1: Lexical features that examine source word,  X  F2: Lexical context features that examine  X  F3: Lexical context features that examine  X  F4: Lexical context features that examine  X  F5: Segmentation features based on mor- X  F6: Part-of-speech (POS) features that examine  X  F7: Source parse tree features that collect the  X  F8: Coverage features that examine the cover-All the features falling in the same feature cate-gory/cluster are tied to each other to share the same mixture weights at the upper level as in Eq. (3).
Besides the feature-type-based clustering, we can also divide the feature space based on word align-ment types, such as supervised alignment versus un-supervised alignment (to be described in the exper-iment section). For each type of word alignment, we build a mixture component with millions of ME features. On the task of domain adaptation, we can also split the training data based on their do-main/resources, with each mixture component rep-resenting a specific domain. 4.1 Data and Baseline We conduct a set of experiments on an Arabic-to-English MT task. The training data includes the UN parallel corpus and LDC-released parallel corpora, with about 10M sentence pairs and 300M words in total (counted at the English side). For each sentence in the training, three types of word alignments are created: maximum entropy alignment (Ittycheriah and Roukos, 2005), GIZA++ alignment (Och and Ney, 2000), and HMM alignment (Vogel et al., 1996). Our tuning and test sets are extracted from the GALE DEV10 Newswire set, with no overlap between tuning and test. There are 1063 sentences (168 documents) in the tuning set, and 1089 sen-tences (168 documents) in the test set. Both sets have one reference translation for each sentence. In-stead of using all the training data, we sample the training corpus based on the tuning/test set to train the systems more efficiently. In the end, about 1.5M sentence pairs are selected for the sampled training. A 5-gram language model is trained from the En-glish Gigaword corpus and the English portion of the parallel corpus used in the translation model train-ing. In this work, the decoding weights for both the baseline and the mixture model are tuned with the Simplex Armijo Downhill algorithm (Zhao and Chen, 2009) towards the maximum BLEU.
 4.2 Feature Combination We first experiment with the feature-type-based clustering as described in Section 3.2. The trans-lation results on the test set from the baseline and the mixture model are listed in Table 1. The MT performance is measured with the widely adopted BLEU metric. We also evaluate the systems that uti-lize only one of the mixture components (F1 to F8). The number of features used in each system is also listed in the table. As we can see, when using all 18M features in the baseline model, without mixture weighting, the baseline achieved 3.3 points higher BLEU score than F5 (the worst component), and 0.8 higher BLEU score than F7 (the best component). With the log-linear mixture model, we obtained 0.6 gain compared to the baseline. Since there are ex-actly the same number of features in the baseline and mixture model, the better performance is due to two facts: separate training of the feature weights  X  within each mixture component; the discrimina-tive training of mixture weights w . The first one al-lows better parameter estimation given the number of features in each mixture component is much less than that in the baseline. The second factor connects the mixture weighting to the final translation perfor-mance directly. In the baseline, all feature weights are trained together solely under the maximum like-lihood criterion, with no differentiation of the vari-ous types of features in terms of their contribution to the translation performance.
 4.3 Alignment Combination In the baseline mentioned above, three types of word alignments are used (via corpus concatenation) for phrase extraction and feature training. Given the mixture model structure, we can apply it to an align-ment combination problem. With the phrase table extracted from all the alignments, we train three feature mixture components, each on one type of alignments. Each mixture component contains mil-lions of features from all feature types described in Section 3.2. Again, the mixture weights are op-timized towards the maximum BLEU. The results are shown in Table 2. The baseline system only achieved 0.3 minor gain compared to extracting fea-tures from ME alignment only (note that phrases are from all the alignments). With the mixture model, we can achieve another 0.5 gain compared to the baseline, especially with less number of features. This presents a new way of doing alignment com-bination in the feature space instead of in the usual phrase space.
 4.4 Domain Adaptation Another popular task in SMT is domain adapta-tion (Foster et al., 2010). It tries to take advantage of any out-of-domain training data by combining them with the in-domain data in an appropriate way. In our sub-sampled training corpus, there exist three subsets: newswire (1M sentences), weblog (200K), and UN data (300K). We train three mixture com-ponents, each on one of the training subsets. All re-sults are compared in Table 3. The baseline that was trained on all the data achieved 0.5 gain compared to using the newswire training data alone (understand-ably it is the best component given the newswire test data). Note that since the baseline is trained on sub-sampled training data, there is already certain do-main adaptation effect involved. On top of that, the mixture model results in another 0.45 gain in BLEU. All the improvements in the mixture models above against the baseline are statistically significant with p-value &lt; 0.0001 by using the confidence tool de-scribed in (Zhang and Vogel, 2004). In this paper we presented a novel discriminative mixture model for bridging the gap between the maximum-likelihood training and the discriminative training in SMT. We partition the feature space into multiple regions. The features in each region are tied together to share the same mixture weights that are optimized towards the maximum BLEU scores. It was shown that the same model structure can be ef-fectively applied to feature combination, alignment combination and domain adaptation. We also point out that it is straightforward to combine any of these three. For example, we can cluster the features based on both feature types and alignments. Further im-provement may be achieved with other feature space partition approaches in the future.
 We would like to acknowledge the support of DARPA under Grant HR0011-08-C-0110 for fund-ing part of this work. The views, opinions, and/or findings contained in this article/presentation are those of the author/presenter and should not be in-terpreted as representing the official views or poli-cies, either expressed or implied, of the Defense Ad-vanced Research Projects Agency or the Department of Defense.

