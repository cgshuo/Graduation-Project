 We present and evaluate various content-based recom mendation models that make use of user and item profiles defi ned in terms of weighted lists of social tags. The studied approach es are adaptations of the Vector Space and Okapi BM25 info rmation retrieval models. We empirically compare the recomm enders using two datasets obtained from Delicious and Last .fm social systems, in order to analyse the performance of the approaches in scenarios with different domains and tagging behavi ours. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  information filtering, retrieval models . Algorithms, Experimentation, Performance. Recommender systems, personalization, social taggin g, folksonomy. In recent years, we have witnessed an unexpected su ccess and increasing proliferation of social tagging systems. In these systems, users create or upload content (items), annotate it with freely chosen words (tags), and share it with other users. The whole set of tags constitutes an unstructured collaborative clas sification scheme that is commonly known as folksonomy . This implicit classification is then used to search for and discover items of in terest. In such systems, users and items can be assigned pr ofiles defined in terms of weighted lists of social tags. In gener al, users annotate items that are relevant for them, so the tags they provide can be assumed to describe their interests, tastes and nee ds. Moreover, it can be also assumed that the more a tag is used by a certain user, the more important that tag is for her. Analogously , tags assigned to items usually describe their contents. The more users annotate a certain item with a particular tag, the better that tag describes the item contents. The previous assumptions, however, h ave to be carefully taken into account. Tags used very often by users to annotate many items may not be useful to discern in formative user preferences and items features [8]. We address this issue herein. Adomavicius and Tuzhilin [1] formulate the recommen dation problem as follows. Let U ... be a set of users, and let I ... be a set of items. Let U I R , where R is a totally ordered set, be a utility function such tha t measures the gain of usefulness of item to user . Then, for each user U , we want to choose items , I , unknown to the user, which maximise the utility function : In content-based recommendation approaches, is formulated as:  X  ' is the content-based preferences of user , i.e., the item content features that describe the interests, taste s and needs of the content features characterising item ( . These descriptions are usually represented as vectors of real numbers (wei ghts) in which each component measures the  X  X mportance X  of the cor responding feature in the user and item representations. The f unction sim computes the similarity between a user profile and an item profile in the content feature space. From the previous formulations, in this paper, we c onsider social tags as the content features that describe both use r and item profiles, and we investigate two issues. First, we study several weighting schemes to measure the  X  X mportance X  of a given tag for each user and item. Some of these weighting schemes are based on single profiles, while others make use of the wh ole folksonomy. Second, for each tag weighting scheme, we propose and evaluate a number of similarity functions. The studied approaches are adaptations of the well known Vector Space and Okapi BM25 information retrieval models [2]. By usi ng two datasets obtained from Delicious and Last.fm social systems, we analyse the performance of the approaches in scenar ios with different domains and tagging behaviours. The rest of the paper has the following structure. Section 2 introduces definitions and notation used in the stu died profile and recommendation approaches. Sections 3 and 4 present such approaches. Section 5 describes the datasets utilis ed to evaluate the recommendation models, while Section 6 explains the conducted experiments and obtained results. Finally , Section 7 ends with some conclusions and future research line s. A folksonomy F can be defined as a tuple F T U I A where T * is the set of tags that comprise the vocabulary expressed by the folksonomy, U + and I that annotate and are annotated with the tags of of each tag -to an item ( by a user # . Based on this notation, the simplest way to define the profile of user # is as a vector # #, #,* , where #,-annotated items with tag -. Similarly, the profile of item defined as a vector ( (, (,* , where (,--( A U is the number of times the item has been annotated with tag -. In this work, we extend the previous definitions of user and item profiles by using different expressions for the vec tor component weights. These expressions are explained in Section 4. The proposed user and item profiles are then exploi ted by a number of different content-based recommendation mo dels. These recommenders are adaptations of the well known Vect or Space and Okapi BM25 ranking models [2], and are describe d in detail in Section 3. For a better understanding of both user/item profil es and content-based recommenders, Table 1 gathers the definition of common elements appearing in the profile and recommendatio n models. Table 1. Definition of elements used in the propose d profile and recommendation models. In this section, we present different schemes to we ight the components of tag-based user and items profiles. So me of them are based on the information available in individua l profiles, while others consider information from the whole folksono my. The simplest approach for assigning a weight to a p articular tag in a user or item profile is by counting the number of times such tag has been used by the user or the number of times th e tag has been used by the community to annotate the item. Thus, o ur first profile model for user # consists of a vector # #, #,* , where Similarly, the profile of item ( is defined as a vector In an information retrieval environment, common key words that appear in many documents of a collection are not in formative, and may not allow distinguishing relevant documents for a given query. To take this into account, TF-IDF weighting scheme is usually applied to the document profiles [2]. We adopt that principle, and adapt it to social tag ging systems, proposing a second profile model, defined as: As an alternative to TF-IDF, Okapi BM25 weighting s cheme follows a probabilistic approach [2] to assign a do cument with a ranking score given a query. We propose an adaptation of such model by assigning each tag with a score (weight) given a certain user or item. Our third profile model has the following expressions: where and are set to the standard values of 0.75 and 2, respectively. In this section, we describe a number of content-ba sed recommendation models that are defined as similarit y measures between user and item profiles introduced in Sectio n 3. Two of these models are state of the art approaches [5][8] , and others were investigated by the authors in the context of personalised Web search [7]. To compute the preference of a user for an item, No ll and Meinel [5] propose a personalised similarity measure based on the user X  X  tag frequencies: The model utilises the user X  X  usage of tags appeari ng in the item profile, but does not take into account their weigh ts in such profile. In the formula, we introduce a normalisati on factor that scales the utility function to values in the range [0,1], without altering the user X  X  item ranking. To measure the impact of personalisation in Noll an d Meinel X  X  approach, we propose a similarity measure based on the tag frequencies in the item profiles: A direct extension of Noll and Meines X  X  approach is to exploit the weights of both user and item profiles by computing the cosine between their vectors as similarity measure: Xu et al. [8] use the cosine similarity measure to compute the similarity between user and item profiles. As profi le component weighting scheme, they use TF-IDF 1 . Following our notation, their approach can be defined as follows: Analogously to the similarity based on tag frequenc ies described in Section 4.1, but using a BM25 weighting scheme, we propose a couple of similarity functions that only take into account the weights of either the user profile or the item prof ile. These two recommendation models are: Xu et al. [8] also investigate the cosine similarit y measure with a BM25 weighting scheme. They use that model on perso nalised Web Search. We adapt and define it for social taggin g as follows: In order to evaluate the presented tag-based recomm endation models under different domain and tagging condition s, we run them using datasets obtained from two different soc ial systems: Delicious and Last.fm. Delicious is a social bookma rking site for Web pages. By the end of 2008, the service claimed more than 5.3 million users and 180 million unique bookmarked URL s. On the other hand, Last.fm is an on-line radio site for mu sic. By the beginning of 2009, it claimed over 40 million activ e users and 7 million tracks. As collaborative social tagging platforms, Deliciou s differs from Last.fm in the fact that it contains tagged items ( Web pages) belonging to practically any domain, while Last.fm tagged items (tracks) belong to the music domain. Moreover, the users X  tagging behaviour is also different in both systems. As sho wn in Table 2, in Delicious dataset, the average number of tags pe r user is greater than in Last.fm dataset. However, taking into accou nt the tags provided by the entire community of users, a track in Last.fm receives more tags than a Web page in Delicious. Th is apparent contradiction can be explained through the inverse relation between the numbers of users and items registered i n such systems. Xu et al. do not specify if they use user-based or item-based inverse tag frequencies, or both. We chose to use b oth, since this configuration gave the best performance values . We created a dataset formed by 1,000 Delicious user s. These users were chosen as follows. First, we randomly selected 50 users who bookmarked the top Delicious bookmarks on 14 th May 2009 and had at least 20 bookmarks in their profiles. Then, we extended this set of users through their social network in Delici ous. A maximum distance of 2 user contacts was allowed in such ext ension. Due to limitations of Delicious API, we only extracted the latest 100 bookmarks of each user. The final dataset contained 84,005 different bookmarks and 42,324 distinct tags. On av erage, each user profile had 95 bookmarks and 480 distinct tags . In the case of Last.fm dataset, we aimed to obtain a representative set of users, covering all music genres. We first i dentified the most popular tags related to the different music ge nres in Last.fm. Then, we used Last.fm API to get the top artists ta gged with the previous tags. For each artist, we gathered his/her fans along with their direct friends. Finally, we retrieved all tag s and tagged tracks of the user profiles. The final dataset contained 5 0,202 different tracks and 16,687 distinct tags. On average, each u ser profile had 66 tracks and 149 distinct tags. In this section, we explain the experiment methodol ogy we followed to evaluate the described recommendation m odels, and present the obtained results of that evaluation. Figure 1 depicts the followed experimental methodol ogy. 
Figure 1. Description of the followed experimental methodology. significant (Wilcoxon, p&lt;0.05) except those among th e results marked with We randomly split the set of items tagged by the us ers in the database in two subsets. The first subset contained 80% of the items for each user, and was used to build the reco mmendation models (training). The second subset contained the remaining 20% of the items, and was used to evaluate the recommen ders (test). Specifically, we built the recommendation models wi th the whole users X  tag-based profiles formed by tags annotating the training items. We evaluated the recommenders with the tag-b ased profiles of the test items. In the evaluation, we computed seve ral metrics (see Section 6.2), and performed a 5-fold cross validati on procedure. We assumed a content retrieval scenario where the s ystem provides the user a list of N recommended items based on her content-based profile. To evaluate the performance of each recomm ender, we took into account the percentage and ranking of rel evant items appearing in the provided lists. For that purpose, we computed three metrics often used to evaluate information re trieval systems [2]: Precision at the top N ranked results (P@ N ), Mean Average Precision (MAP), and Discounted Cumulative Gain (DC G). Precision is defined as the number of retrieved rel evant documents divided by the total number of retrieved documents. MAP is a precision metric that emphasises ranking relevant d ocuments higher. Finally, DCG measures the usefulness of a d ocument based on its position in a result list. In our evaluation framework, retrieved documents were all the items belonging to each test set (see Section 6.1). Thus, the whole test set contained items belo nging to the active user X  X  profile (relevant documents), and items from other users X  profiles (assumed as non relevant documents for the active user). recommendation models using Delicious and Last.fm d atasets. In general, as expected, the models focused on user pr ofiles ( tf outperformed the models oriented to item profiles ( tf i , bm25 not true with BM25 model in Last.fm. We believe thi s is due to the small size of user profiles in that dataset. Regarding cosine-based models, by performing a weig hting scheme that exploits the whole folksonomy ( cos tf-idf , cos enhance the classic frequency profile representatio n ( cos that even outperforms LM in Delicious dataset. Thus, it seems that those tags appearing in many user and it em profiles have to be penalised, since they are not informative to discern relevant user preferences and item characteristics. In the s ame context, BM25 was better than TF-IDF weighting scheme. This could be explained by the fact that, in social tagging syste ms, most popular tags should be penalised more carefully as they usu ally describe the item contents more precisely (through community con sensus). Comparing results from Delicious and Last.fm, we ob tained higher precision values in the former. In Last.fm, users l isten to music and do not always tag their favourite tracks. In contra st, the main use of Delicious is to bookmark and tag Web pages for orga nisational and searching purposes. Thus, user profiles in Deliciou s are larger than in Last.fm, and content-based recommendation perfor ms better. In this paper, we have evaluated a number of conten t-based recommendation models that make use of user and ite m profiles described in terms of weighted lists of social tags . The studied approaches are adaptations of the Vector Space and Okapi BM25 ranking models [2]. The presented work is only the beginning of our exploration of how the above and other informat ion retrieval models could be applied in social recommender syste ms. We plan to extend our analysis in two directions. First, we want to study alternative tag-based profile and recommendation mo dels. Specifically, as proposed in [6], we shall investig ate the application of tag clustering techniques for user profiling. Se cond, we do not want to restrict our research to content-based reco mmenders. We shall investigate adaptations of collaborative filt ering and hybrid recommendation strategies, as done for example in [ 3][4][9]. 
