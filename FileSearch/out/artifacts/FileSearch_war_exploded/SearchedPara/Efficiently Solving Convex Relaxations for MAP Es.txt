 M. Pawan Kumar pawan@robots.ox.ac.uk Department of Engineering Science, University of Oxford P.H.S. Torr philiptorr@brookes.ac.uk Department of Computing, Oxford Brookes University The problem of obtaining the maximum a posteri-ori ( map ) estimate of a discrete random field plays a central role in various applications, e.g. stereo recon-struction (Szeliski et al., 2006) and protein side-chain prediction (Sontag &amp; Jaakkola, 2007). Furthermore, it is closely related to many important combinatorial optimization problems such as maxcut (Goemans &amp; Williamson, 1995) and 0-extension (Karzanov, 1998). It is therefore not surprising that a number of approx-imate map estimation approaches exist in the litera-ture. One such class of approaches which provides a good approximation, both in theory and in practice, is based on convex relaxations (e.g. see (Kumar et al., 2007) for an overview). In this work, we focus on the issue of solving these relaxations efficiently with the goal of handling a large number of random variables, e.g. variables corresponding to pixels in an image. A discrete random field is defined over random vari-ables v = { v 0 ,  X  X  X  , v n  X  1 } , each of which can take a label from the set l = { l 0 ,  X  X  X  , l h  X  1 } . Throughout this paper, we will assume a conditional random field ( crf ) while noting that all our results are applicable to the Markov random field framework. A crf describes a neighbourhood relationship E between the variables such that ( a, b )  X  X  if, and only if, v a and v b are neigh-bours. A labelling of the crf is specified by a function f : { 0 ,  X  X  X  , n  X  1 } X  X  X { 0 ,  X  X  X  , h  X  1 } (i.e. variable v takes label l f ( a ) ). Given data D , the energy of the labelling is given by unary and pairwise potentials respectively, and  X  de-notes the parameter of the crf . The problem of map estimation is to obtain the labelling f  X  with the min-imum energy (or equivalently the maximum posterior probability), i.e. f  X  = arg min f Q ( f ; D ,  X  ). Related Work: We build upon the linear program-ming ( lp ) relaxation of (Wainwright et al., 2005), which we call lp-s (since it was first proposed by (Schlesinger, 1976) for the special case of hard con-straint pairwise potentials). Although the lp-s relax-ation can be solved in polynomial time using Interior Point algorithms, the state of the art softwares can only handle up to a few hundred variables due to their large memory requirements. To overcome this prob-lem, two iterative algorithms were proposed by (Wain-wright et al., 2005) for solving the dual of the lp-s re-laxation. Similar to min-sum belief propagation ( bp ), these algorithms are not guaranteed to converge. The work of (Kolmogorov, 2006) addressed this problem by proposing a convergent sequential tree-reweighted mes-sage passing ( trw-s ) algorithm for solving the dual. Despite its strong theoretical foundation, it was ob-served that trw-s yields labellings with very high energies when the energy function contains non-submodular terms (Kolmogorov, 2006). This is not surprising since the lp-s relaxation provides an inac-curate approximation in such cases (e.g. see (Kumar et al., 2007)). In this work, we address this deficiency of trw-s by appending the lp-s relaxation with some useful constraints.
 Our Results: We show how the dual formulation of the lp-s relaxation can be extended to include lin-ear cycle inequalities (Barahona &amp; Mahjoub, 1986) (section 3). Furthermore, we incorporate the recently proposed second order cone ( soc ) constraints of (Ku-mar et al., 2007) within this framework (section 4). Note that although the importance of cycle inequali-ties and soc constraints is well-recognized, their use has been limited to a small number of random vari-ables due to the lack of efficient algorithms (Sontag &amp; Jaakkola, 2007). Our results on including these con-straints within the trw formulation allow us to develop efficient convergent algorithms for solving the result-ing duals. We successfully apply these algorithms to several synthetic and real problems containing a large number of variables which could not be handled by pre-vious approaches (section 5). Our experiments indicate that incorporating these constraints provides a much better approximation for the map estimation problem within reasonable computational times compared to several state of the art algorithms. Additional exper-imental results and proofs are provided in (Kumar &amp; Torr, 2008). We begin by introducing some notation which would allow us to describe our results concisely.
 Optimal Energy and Min-Marginals: The en-ergy of the optimal labelling and the min-marginals of random variables and neighbouring random variables is given by the following equations respectively: where the term D is dropped from the lhs to make the notation less cluttered.
 Reparameterization: A parameter  X  is called a reparameterization of the parameter  X  (denoted by  X   X   X  ) if, and only if, Over-complete Representations: A labelling f can be represented using an over-complete set of boolean variables y defined as We also define variables ( x , X ) such that x We will sometimes specify the additional constraints (i.e. cycle inequalities and soc constraints) using vari-ables ( x , X ), since they will allow us to write these constraints concisely.
 The lp-s Relaxation: The lp-s relaxation of the map estimation problem is given by The term LOCAL ( v , E ) stands for local consistency polytope (Wainwright et al., 2005) and denotes the fea-sibility region of the lp-s relaxation (specified by the above constraints for all v a  X  v , ( a, b )  X  X  , l i , l Dual of the lp-s Relaxation: Let T denote a set of tree-structured crf s defined over subsets of the given random variables. For a crf T  X  X  , we denote its ran-dom variables by v T , its neighbourhood relationship by E
T and its parameter as  X  T . The parameter  X  T con-sists of unary potentials  X  T 1 a ; i and pairwise potentials ab ; ij . Let  X  = {  X  ( T ) , T  X  X } be a set of non-negative real numbers which sum to one. Using the above nota-tion, the dual of the lp-s relaxation can be written as follows (Kolmogorov, 2006; Wainwright et al., 2005): The trw-s Algorithm: Table 1 describes the trw-s algorithm (Kolmogorov, 2006) which attempts to solve the dual of the lp-s relaxation. In other words, it solves for the set of parameters  X  T , T  X  X  , which maximize the dual (9). There are two main steps: (i) reparameterization, which involves running one pass of bp on the tree structured crf s T; and (ii) averaging operation. trw-s is guaranteed not to decrease the value of the dual (9) at each iteration. Further, it can be shown that it converges to a solution which satisfies the weak tree agreement ( wta ) (Kolmogorov, 2006). 3. Pick an element  X   X  v S E . P We now show how the results of (Kolmogorov, 2006; Wainwright et al., 2005) can be extended to include an arbitrary number of linear cycle inequalities (Barahona &amp; Mahjoub, 1986; Kumar et al., 2007). This requires us to incorporate cycle inequalities into the dual (11). We begin by briefly describing cycle inequalities. Con-sider a cycle of length c in the graphical model of the given crf , which is specified over a set of ran-dom variables v C = { v b , b = a 1 , a 2 ,  X  X  X  , a c } such that E E
F  X  X  C such that |E F | (i.e. the cardinality of E F ) is odd. Using these sets of edges, a cycle inequality can be specified as where l i fined in equation (7). It can be shown that adding cycle inequalities to lp-s , i.e. problem (8), provides a better relaxation than lp-s alone. Their importance is reflected in their wide use in recent literature such as (Sontag &amp; Jaakkola, 2007; Zwick, 1999). In general, a set of N C cycle inequalities defined on a cycle C = ( v C , E C ) (using different labels l i ables v a words, for every cycle we can define up to h c cycle in-C be a set of cycles in the given crf . Theorem 1 (given below) provides us with the dual of the lp relaxation obtained by appending problem (8) with cycle inequal-ities (defined over cycles in the set C ). We refer to the resulting relaxation as lp-c (where c denotes cycles). Theorem 1: The following problem is the dual of problem (8) appended with a set of cycle inequalities A
C y  X  b C , for all C  X  X  (hereby referred to as the lp-c relaxation): Here  X   X  = {  X   X  ( C ) , C  X  X } is some (fixed) set of non-negative real numbers which sum to one, and u C = k , k = 1 ,  X  X  X  , N C } are some non-negative slack vari-ables.
 Similar to the dual (9), the above problem cannot be solved using standard software for a large number of variables v . In order to overcome this deficiency we propose a convergent algorithm (similar to trw-s ) to approximately solve problem (11). We call our ap-proach the trw-s ( lp-c ) algorithm. In order to de-scribe trw-s ( lp-c ), we need the following definitions. We say that a tree structured random field T = ( v
T , E T )  X  X  belongs to a cycle C = ( v C , E C )  X  X  (denoted by T  X  C ) if, and only if, there exists an edge ( a, b )  X  X  T such that ( a, b )  X  X  C . In other words, T  X  C if they share a common pair of neighbouring random variables ( a, b )  X  X  . We also define the follow-ing problem: for some parameter  X  C . The variables of the above ( a, b )  X  X  T T E C for some T  X  C . In other words, problem (12) has fewer variables and constraints than dual (11) and can be solved easily using standard In-terior Point algorithms for small cycles C . As will be seen, even using cycles of size 3 or 4 results in much better approximations of the map estimation problem for non-submodular energy functions.
 Table 2 describes the convergent trw-s ( lp-c ) algo-rithm for approximately solving the dual (11). The algorithm consists of two main steps : (i) solving prob-lem (12) for a cycle; and (ii) running steps 4 and 5 of the trw-s algorithm. Note that our approach is dif-ferent from other generalizations of trw , e.g. (Wieger-nick, 2005) which computes marginals. Specifically, we do not cluster random variables but include additional constraints to reduce the feasibility region of the re-laxation. Our experiments in section 5 show that, un-like (Wiegernick, 2005), we always outperform bp . The properties of the trw-s ( lp-c ) algorithm are summa-rized below.
 3. Pick an element  X   X  v S C .
 3.1. Properties of the trw-s(lp-c) Algorithm. Property 1: At each step of the algorithm, the repa-rameterization constraint is satisfied, i.e.
 The constraint in problem (12) ensures that parameter vector  X  C of cycle C remains unchanged. Hence, after step 4 of the trw-s ( lp-c ) algorithm, the reparameter-ization constraint is satisfied. It was also shown that step 5 (i.e. running trw-s ) provides a reparameteriza-tion of  X  (see Lemma 3.3 of (Kolmogorov, 2006) for details). This proves Property 1.
 Property 2: At each step of the algorithm, the value of the dual (11) never decreases. Clearly, step 4 of the trw-s ( lp-c ) algorithm does not decrease the value of the dual (11) (since the objective function of prob-lem (12) is part of the objective function of dual (11)). The work of (Kolmogorov, 2006) showed that step 5 (i.e. trw-s ) also does not decrease this value. Note that the lp-c relaxation is guaranteed to be bounded since it dominates the lp-s relaxation (Kumar et al., 2007), which itself is bounded (Kolmogorov, 2006). Therefore, by the Bolzano-Weierstrass theorem (Fitz-patrick, 2006), it follows that trw-s ( lp-c ) will con-verge.
 Property 3: Like trw-s , the necessary condition for convergence of trw-s ( lp-c ) is that the parameter vec-tors  X  T of the trees T  X  X  satisfy wta . This follows from the fact that trw-s increases the value of the dual in a finite number of steps as long as the set of param-eters  X  T , T  X  X  , do not satisfy wta (see (Kolmogorov, 2006) for details).
 Property 4: Unlike trw-s , wta is not the sufficient condition for convergence. One of the main drawbacks of the trw-s algorithm is that it converges as soon as the wta condition is satisfied. Experiments in (Kol-mogorov, 2006) indicate that this results in high energy solutions for the map estimation problem when the energy function is non-submodular. Using a counter-example, it can be shown that wta is not the sufficient condition for the convergence of trw-s ( lp-c ) (Kumar &amp; Torr, 2008).
 Obtaining the Labelling: Similar to the trw-s al-gorithm, trw-s ( lp-c ) solves the dual (11) and not the primal problem. In other words, it does not directly provide a labelling of the random variables. In order to obtain a labelling, we use the same scheme as the one suggested in (Kolmogorov, 2006) for the trw-s algorithm. Briefly, we assign labels to the variables variable v 0 , followed by variable v 1 and so on). Let  X  T = P signed the label l f ( a ) such that f ( a ) = arg min potentials corresponding to the parameter  X  T respec-tively. It can be shown that under certain condi-tions the above procedure provides the optimal la-belling (Meltzer et al., 2005). We now show how second order cone ( soc ) constraints can be added to the dual (9). Specifically, we consider the two soc constraints proposed in (Kumar et al., 2007) which result in the socp-c and socp-q relax-ations described below.
 The socp-c Relaxation: Consider a set of random variables v C = { v b , b = a 1 ,  X  X  X  , a c } X  v such that E C = { ( a 1 , a 2 ) , ( a 2 , a 3 ) , ( a c , a 1 ) } X  X  (i.e. v cycle of length c ). We define a vector x C whose k th ele-ment is given by x a element is given by X a socp-c specifies constraints || U  X  x C || 2  X  C  X  X C where C = D c +  X  c I = UU  X  and (  X  ) represents the Frobenius inner product. The c  X  c matrix D c is given by
D c ( i, j ) = and  X  c is the absolute value of the smallest eigenvalue of D c .
 The socp-q Relaxation: Consider a set of random variables v C = { v b , b = a 1 ,  X  X  X  , a c } X  v such that E
C = { ( a i , a j ) , i, j = 1 ,  X  X  X  , c } X  X  (i.e. v C form a clique of size c ). socp-q specifies constraints of the form || U  X  x C || 2  X  C  X  X C where C is a matrix whose elements are all 1.
 In general, a set of N C soc constraints on a cy-cle/clique can be defined as || A C k y + b C k || X  y  X  c C k + d C k , k  X  X  1 , 2 ,  X  X  X  , N Let C be a set of cycles/cliques in the graphical model of the given random field. The following theorem pro-vides us with the dual of the socp relaxation obtained by appending problem (8) with soc constraints defined over the set C .
 Theorem 2: The following problem is the dual of problem (8) appended with a set of soc constraints || A C k y + b C k || X  y  X  c C k + d C k for k  X  X  1 , 2 ,  X  X  X  , N C  X  X  . where Here u C k and v C k are some slack variables. We can define up to h c soc constraints for a cy-cle/clique, where c is the size of the cycle/clique (i.e. N
C  X  X  0 , 1 ,  X  X  X  , h c } ). Before proceeding further, we also define the following problem: where  X  C is some parameter vector. The variables of ab ; ij where ( a, b )  X  X  T T E C . Like problem (12), we can solve problem (20) using standard Interior Point algorithms for small cycles/cliques C .
 Similar to trw-s ( lp-c ), a convergent algorithm can now be described for solving the dual (17). This algo-rithm differs from trw-s ( lp-c ) in only step 4, where it solves problem (20) for a cycle/clique C instead of problem (12). We refer to this algorithm as either trw-s ( socp-c ) or trw-s ( socp-q ) depending upon the socp relaxation that we are solving. When using the trw-s ( socp-q ) algorithm, we include all slack vari-ables corresponding to the cycle inequalities defined over the cycles in clique C . It can easily be shown that both trw-s ( socp-c ) and trw-s ( socp-q ) satisfy all the properties given in  X  3.1. Note that, like trw-s and trw-s ( lp-c ), these algorithms do not directly pro-vide a labelling for the random variables of the crf . Instead we use the procedure described in  X  3.1 to ob-tain the final solution. We tested the approaches described in this paper using both synthetic and real data. For synthetic data ex-periments, we closely follow the setup of (Kolmogorov, 2006). We show that our algorithms overcome a well-known deficiency of trw-s , namely that it does not provide good map estimates for non-submodular en-ergy functions. Next, we consider the problem of seg-mentation using real data and show favourable compar-ison between our methods and several other standard map estimation techniques. 5.1. Synthetic Data Datasets: We conducted two sets of experiments us-ing binary grid crf s (i.e. h = | l | = 2) of size 30  X  30. In the first experiment the edges of the graphical model, i.e. E , were defined using a 4-neighbourhood system while the second experiment used an 8-neighbourhood system. Similar to (Kolmogorov, 2006), the unary po-tentials  X  1 a ;0 and  X  1 a ;1 were generated using the normal distribution N (0 , 1). The pairwise potentials  X  2 ab ;00  X  ab ;11 were set to 0 while  X  ated using N (0 ,  X  2 ). For both experiments, 50 crf s were generated using the method described above. All the crf s defined non-submodular energy functions (i.e. there exists an ( a, b )  X  X  such that  X  ab ;01 +  X  ab ;10 which are in general np -hard to minimize. As noted in (Kolmogorov, 2006), trw-s performs considerably worse than bp on such examples.
 Implementation Details: We tested the lp-c and the socp-c relaxations in the first experiment. Con-straints were defined on all cycles of size 4. The lp-c and socp-q relaxation were tested in the second exper-iment. Cycles inequalities were defined on all cycles of size 3. In addition, for socp-q , soc constraints were defined on all cliques of size 4. In both the experiments, our algorithms were tested using trees defined by indi-vidual edges of the graphical model for ease of imple-mentation. In other words, a tree T = ( v T , E T )  X  X  such that v T = { v a , v b } and E T = { ( a, b ) } X  X  . How-ever, we note here that our algorithms are general and can be applied for any choice of trees. Although our current set of trees are quite restrictive, the results show that they outperform several state of the art al-gorithms. The trw-s algorithm, as well as other stan-dard approaches, was tested using the publically avail-able code which uses monotonic chains as trees. The terms  X  ( T ) and  X   X  ( C ) were set to 1 / |T| and 1 / |C| respectively for all T  X  X  and C  X  X  . We found it suf-ficient to define one cycle inequality per cycle C using a set of labels { l i
P for all sets of labels { l j { ( a 1 , a 2 ) ,  X  X  X  , ( a n , a 1 ) } and E F  X  X  C such that |E 3. As proposed in (Kumar et al., 2007), we also define only one soc constraint per cycle/clique when consid-ering the socp-c and the socp-q relaxations. At each iteration, problems (12) and (20) were solved using the mosek software (available at http://www.mosek.com). Results: Figure 1 (a) shows the results obtained for the first experiment using  X  = 10  X  gree of the variables in the graphical model). Note that since the energy functions are non-submodular, trw-s provides labellings with higher energies than bp as ob-served in (Kolmogorov, 2006). However, the additional constraints in the lp-c and socp-c algorithm enable us to obtain labelling with lower energies than bp . Fur-ther, unlike bp , they also provide us with the value of the dual at each iteration. This value allows us to find out how close we are to the global optimum (since the energy of the optimal labelling cannot be less than the (a) (b) value of the dual). Also note that the value of the lp-c dual is greater than the value of the socp-c dual. This provides empirical evidence that lp-c dominates socp-c as conjectured in (Kumar et al., 2007). The results of the second experiment are shown in Fig-ure 1 (b) using  X  = 10  X  while lp-c and socp-q provide better approximations. The soc constraints defined over cliques in socp-q pro-vide a greater value of the dual compared to the lp-c relaxation. The complexity and timings for all the al-gorithms are given in tables 3 and 4. 5.2. Real Data -Segmentation We now present the results of our method on interac-tive segmentation (Boykov &amp; Jolly, 2001) where, given some seed pixels for all the segments present in an im-age, we wish to obtain the segmentation of the image. Problem Formulation: The problem of obtaining the segmentation of an image can be cast within the crf framework. Specifically, we define a crf over ran-dom variables v = { v 0 ,  X  X  X  , v n  X  1 } , where each variable corresponds to a pixel of the frame. Each label in the set l = { l 0 ,  X  X  X  , l h  X  1 } corresponds to a segment (where h is the total number of segments). The unary poten-tial of assigning a variable v a to segment l i is specified by the negative log-likelihood of the rgb value of pixel a given the seed pixels of the segment l i . The pair-wise potentials encourage continuous segments whose boundaries lie on image edges. For more details, we refer the reader to (Boykov &amp; Jolly, 2001). The prob-lem of obtaining the segmentation of a frame then boils down to that of finding the map estimate of the crf . Datasets and Implementation Details: We used the well-known  X  X arden X  sequence to conduct our ex-periments (with frame size 120  X  175). The seed pixels were provided using the ground truth segmentation of a keyframe as shown in Fig. 2.
 Similar to the synthetic data experiment, we defined the trees as individual edges of the graphical model of the crf for our algorithms. Other algorithms were tested using publically available code (including trw-s which uses monotonic chains as trees). We specified one cycle inequality and one soc constraint for each cy-cle/clique (as described in the previous section). The terms  X  ( T ) and  X   X  ( C ) were set to 1 / |T| and 1 / |C| re-spectively for all T  X  X  and C  X  X  . Once again, prob-lems (12) and (20) were solved using mosek .
 Results: For the first set of experiments, we used a 4-neighbourhood system and tested the following algo-rithms: trw-s , lp-c , socp-c ,  X  X  -swap,  X  -expansion and bp . Fig. 3 shows the segmentations (of frames other than the keyframe) and the values of the energy function obtained for all algorithms. Note that, by in-corporating additional constraints using all cycles of length 4, lp-c and socp-c outperform other methods. Further, the cycle inequalities in lp-c provide better results than the soc constraints of socp-c . Table 5 provides the average time for all algorithms. The second set of experiments used an 8-neighbourhood system and tested the following algorithms: trw-s , lp-c , socp-q ,  X  X  -swap,  X  -expansion and bp . For the lp-c algorithm, cycle inequalities were specified for all cycles of size 3. In addition, the socp-q algorithm specifies soc constraints on all cliques of size 4. Fig. 4 shows the segmentations and energies obtained for all the algo-rithms. The average timings per iteration are shown in table 5. Note that, similar to the synthetic data examples, socp-q outperforms lp-c by incorporating additional soc constraints. We extended the lp-s relaxation based approach of (Kolmogorov, 2006; Wainwright et al., 2005) for the map estimation problem. Specifically, we showed how cycle inequalities and soc constraints can be in-corporated within the trw framework. We also pro-posed convergent algorithms for solving the result-ing duals. Our experiments indicate that these ad-ditional constraints provide a more accurate approxi-mation for map estimation when the energy function is non-submodular. Although our algorithm is much faster than Interior Point methods, it is slower than trw-s and bp . An interesting direction for future re-search would be to develop specialized algorithms for solving problems (12) and (20) (which are used in our approach).

