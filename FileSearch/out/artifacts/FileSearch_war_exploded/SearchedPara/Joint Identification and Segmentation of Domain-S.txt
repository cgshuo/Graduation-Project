 Natural language understanding (NLU) at the level of speech acts for conversational dialogue systems can be performed with high accuracy in limited do-mains using data-driven techniques (Bender et al., 2003; Sagae et al., 2009; Gandhe et al., 2008, for example), provided that enough training material is available. For most systems that implement novel conversational scenarios, however, enough exam-ples of user utterances, which can be annotated as NLU training data, only become available once sev-eral users have interacted with the system. This situ-ation is typically addressed by bootstrapping from a relatively small set of hand-authored utterances that perform key dialogue acts in the scenario or from utterances collected from wizard-of-oz or role-play exercises, and having NLU accuracy increase over time as more users interact with the system and more utterances are annotated for NLU training.

While this can be effective in practice for ut-terances that perform only one of several possible system-specific dialogue acts (often several dozens), longer utterances that include multiple dialogue acts pose a greater challenge: the many available combi-nations of dialogue acts per utterance result in sparse coverage of the space of possibilities, unless a very large amount of data can be collected and anno-tated, which is often impractical. Users of the dia-logue system, whose utterances are collected for fur-ther NLU improvement, tend to notice that portions of their longer utterances are ignored and that they are better understood when they express themselves with simpler sentences. This results in generation of data heavily skewed towards utterances that corre-spond to a single dialogue act, making it difficult to collect enough examples of utterances with multiple dialogue acts to improve NLU, which is precisely what would be needed to make users feel more com-fortable with using longer utterances.

We address this chicken-and-egg problem with a data-driven NLU approach that segments and iden-tifies multiple dialogue acts in single utterances, even when only short (single dialogue act) utter-ances are available for training. In contrast to previ-ous approaches that assume the existence of enough training data for learning to segment utterances, e.g. (Stolcke and Shriberg, 1996), or to align spe-cific words to parts of the formal representation, e.g. (Bender et al., 2003), our framework requires a relatively small dataset, which may not contain any utterances with multiple dialogue acts. This makes it possible to create new conversational dialogue sys-tem scenarios that allow and encourage users to ex-press themselves with fewer restrictions, without an increased burden in the collection and annotation of NLU training data. Given (1) a predefined set of possible dialogue acts for a specific dialogue system, (2) a set of utterances each annotated with a single dialogue act label, and (3) a classifier trained on this annotated utterance-label set, which assigns for a given word sequence a dialogue act label with a corresponding confidence score, our task is to find the best sequence of dia-logue acts that covers a given input utterance. While short utterances are likely to be covered entirely by a single dialogue act that spans all of its words, longer utterances may be composed of spans that corre-spond to different dialogue acts. bestDialogueActEndingAt( Text , pos ) begin end
Algorithm 1: The function classify ( T ) calls the single dialogue act classifier subsystem on the in-put text T and returns the highest scoring dia-logue act label c with its confidence score p . The function words ( T,i,j ) returns the string formed by concatenating the words in T from the i th to the j th included. To obtain the best segmenta-tion of a given text, one has to work its way back from the end of the text: start by calling  X  k,  X  c,p  X  X  = bestDialogueActEndingAt ( Text,numWords ) , where numWords is the number of words in Text . If k &gt; 0 recursively call bestDialogueActEndingAt ( Text,k  X  1) to obtain the optimal dialogue act ending at k  X  1 .

Algorithm 1 shows our approach for using a sin-gle dialogue act classifier to extract the sequence of dialogue acts with the highest overall score from a given utterance. The framework is independent of the particular subsystem used to select the dialogue act label for a given segment of text. The constraint is that this subsystem should return, for a given se-quence of words, at least one dialogue act label and its confidence level in a normalized range that can be used for comparisons with subsequent runs. In the work reported in this paper, we use an existing data-driven NLU module (Sagae et al., 2009), de-veloped for the SASO virtual human dialogue sys-tem (Traum et al., 2008b), but retrained using the data described in section 3. This NLU module per-forms maximum entropy multiclass classification, using features derived from the words in the input utterance, and using dialogue act labels as classes.
The basic idea is to find the best segmentation (that is, the one with the highest score) of the portion of the input text up to the i th word. The base case S i would be for i = 1 and it is the result of our classi-fier when the input is the single first word. For any other i &gt; 1 we construct all word spans T j,i of the input text, containing the words from j to i , where 1  X  j  X  i , then we classify each of the T j,i and pick the best returned class (dialogue act label) C j,i (and associated score, which in the case of our maxi-mum entropy classifier is the conditional probability Score ( C j,i ) = P ( C j,i | T j,i ) ). Then we assign to the best segmentation ending at i , S i , the label C k,i iff:
Algorithm 1 calls the classifier O ( n 2 ) where n is the number of words in the input text. Note that, as in the maximum entropy NLU of Bender et al. (2003), this search uses the  X  X aximum approxi-mation, X  and we do not normalize over all possible sequences. Therefore, our scores are not true proba-bilities, although they serve as a good approximation in the search for the best overall segmentation.
We experimented with two other variations of the argument of the argmax in equation 1: (1) in-stead of considering Score ( S h  X  1 ) , consider only the last segment contained in S h  X  1 ; and (2) instead of using the product of the scores of all segments, use the average score per segment: ( Score ( C h,i )  X  number of segments in S i . These variants produce similar results; the results reported in the next sec-tion were obtained with the second variant. 3.1 Data To evaluate our approach we used data collected from users of the TACQ (Traum et al., 2008a) dia-logue system, as described by Artstein et al. (2009). Of the utterances in that dataset, about 30% are an-notated with multiple dialogue acts. The annotation also contains for each dialogue act the correspond-ing segment of the input utterance.
 The dataset contains a total of 1,579 utterances. Of these, 1,204 utterances contain only a single di-alogue act, and 375 utterances contain multiple dia-logue acts, according to manual dialogue act anno-tation. Within the set of utterances that contain mul-tiple dialogue acts, the average number of dialogue acts per utterance is 2.3.

The dialogue act annotation scheme uses a total of 77 distinct labels, with each label corresponding to a domain-specific dialogue act, including some semantic information. Each of these 77 labels is composed at least of a core speech act type (e.g. wh-question, offer), and possibly also attributes that reflect semantics in the domain. For example, the dialogue act annotation for the utterance What is the strange man X  X  name? would be whq(obj: strangeMan, attr: name) , reflecting that it is a wh-question, with a specific object and at-tribute. In the set of utterances with only one speech act, 70 of the possible 77 dialogue act labels are used. In the remaining utterances (which contain multiple speech acts per utterance), 59 unique dia-logue act labels are used, including 7 that are not used in utterances with only a single dialogue act (these 7 labels are used in only 1% of those utter-ances). A total of 18 unique labels are used only in the set of utterances with one dialogue act (these labels are used in 5% of those utterances). Table 1 shows the frequency information for the five most common dialogue act labels in our dataset.

The average number of words in utterances with only a single dialogue act is 7.5 (with a maximum of 34, and minimum of 1), and the average length of utterances with multiple dialogue acts is 15.7 (max-imum of 66, minimum of 2). To give a better idea of the dataset used here, we list below two examples of utterances in the dataset, and their dialogue act an-notation. We add word indices as subscripts in the utterances for illustration purposes only, to facilitate identification of the word spans for each dialogue act. The annotation consists of a word interval and a Single DA Utt. [%] Multiple DA Utt. [%] Wh-questions 51 Wh-questions 31 Yes/No-questions 14 Offers to agent 24 Offers to agent 9 Yes answer 11 Yes answer 7 Yes/No-questions 8 Greeting 7 Thanks 7 dialogue act label 1 . 1.  X  0 his 1 name, 2 any 3 other 4 informa-2.  X  0 I 1 can X  X  2 offer 3 you 4 money 5 but 6 I 7 can 3.2 Setup In our experiments, we performed 10-fold cross-validation using the dataset described above. For the training folds, we use only utterances with a sin-gle dialogue act (utterances containing multiple dia-logue acts are split into separate utterances), and the training procedure consists only of training a max-imum entropy text classifier, which we use as our single dialogue act classifier subsystem.

For each evaluation fold we run the procedure de-scribed in Section 2, using the classifier obtained from the corresponding training fold. The segments present in the manual annotation are then aligned with the segments identified by our system (the alignment takes in consideration both the word span and the dialogue act label associated to each seg-ment). The evaluation then considers as correct only the subset of dialogue acts identified automatically that were successfully aligned with the same dia-logue act label in the gold-standard annotation.
We compared the performance of our proposed approach to two baselines; both use the same max-imum entropy classifier used internally by our pro-posed approach. 1. The first baseline simply uses the single dia-2. For the second baseline, we treat multiple dia-3.3 Results Table 2 shows the performance of our approach and the two baselines. All measures show that the pro-posed approach has considerably improved perfor-mance for utterances that contain multiple dialogue acts, with only a small increase in the number of er-rors for the utterances containing only a single dia-logue act. In fact, even though more than 70% of the utterances in the dataset contain only a single di-alogue act, our approach for segmenting and iden-tifying multiple dialogue acts increases overall F-score by about 4% when compared to the first base-line and by about 2% when compared to the sec-ond (strong) baseline, which suffers from the addi-tional deficiency of not identifying what spans cor-respond to what dialogue acts. The differences in F-score over the entire dataset (shown in the Over-all portion of Table 2) are statistically significant ( p &lt; 0 . 05 ). As a drawback of our approach, it is on average 25 times slower than our first base-line, which is incapable of identifying multiple di-alogue acts in a utterance 4 . Our approach is still about 15% faster than our second baseline, which identifies multiple speech acts, but without segmen-tation, and with lower F-score. Figure 1 shows the execution time versus the length of the input text. It also shows a histogram of utterance lengths in the dataset, suggesting that our approach is suitable for most utterances in our dataset, but may be too slow for some of the longer utterances (with 30 words or more).

Figure 2 shows the histogram of the average error (absolute value of word offset) in the start and end of the dialogue act segmentation. Each dialogue act identified by Algorithm 1 is associated with a start-ing and ending index that corresponds to the por-tion of the input text that has been classified with the given dialogue act. During the evaluation, we find the best alignment between the manual annota-tion and the segmentation we computed. For each of the aligned pairs (i.e. extracted dialogue act and dialogue act present in the annotation) we compute the absolute error between the starting point of the extracted dialogue act and the starting point of the paired annotation. We do the same for the ending point and we average the two error figures. The result is binned to form the histogram displayed in figure 2. The figure also shows the average error and the standard deviation. The largest average er-ror happens with the data annotated with multiple dialogue acts. In that case, the extracted segments have a starting and ending point that in average are misplaced by about  X  2 words. We described a method to segment a given utter-ance into non-overlapping portions, each associated with a dialogue act. The method addresses the prob-lem that, in development of new scenarios for con-versational dialogue systems, there is typically not enough training data covering all or most configu-rations of how multiple dialogue acts appear in sin-gle utterances. Our approach requires only labeled utterances (or utterance segments) corresponding to a single dialogue act, which tends to be the easiest type of training data to author and to collect.
We performed an evaluation using existing data annotated with multiple dialogue acts for each utter-ance. We showed a significant improvement in over-all performance compared to two strong baselines. The main drawback of the proposed approach is the complexity of the segment optimization that requires calling the dialogue act classifier O ( n 2 ) times with n representing the length of the input utterance. The benefit, however, is that having the ability to identify multiple dialogue acts in utterances takes us one step closer towards giving users more freedom to express themselves naturally with dialogue systems.
 The project or effort described here has been spon-sored by the U.S. Army Research, Development, and Engineering Command (RDECOM). State-ments and opinions expressed do not necessarily re-flect the position or the policy of the United States Government, and no official endorsement should be inferred. We would also like to thank the anonymous reviewers for their helpful comments.
