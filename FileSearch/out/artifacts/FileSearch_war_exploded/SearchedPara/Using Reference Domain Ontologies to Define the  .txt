 munication, understanding and problem solving regarding a universe of discourse. cussed by a number of authors [2, 3], 
A language designer must, therefore, understand the phenomena (or domain) that should be covered by the language and propose symbolic structures that will empower represented phenomena. 
This requires the design of a language with some form of  X  X orrespondence between real-world semantics , following [5]. Consider for example a domain-specific lan-would provide meaning for the various language constructs in terms of parenthood or ancestry relations between persons, thereby enabling its expressions (or models) to be used as a vehicle to talk about parenthood or ancestry between persons of interest. 
Although essential to language design and semantic interoperability tasks, the real-world semantics is often defined only informally for modeling languages. As a conse-quence, no systematic treatment of real-world semantics is possible, and the designer must face semantic issues with little methodological support. In this paper, we address representation of the admissible states of the world through a reference domain ontol-world semantics of the language). These th ree elements are axiomatized in three cor-including formal tooling to support la nguage design and assessment. 
From the methodological perspective, the approach promotes the separation of concerns enabling designers to handle semantic issues separately from other language design concerns. By defining the semantics of a language in terms of a reference do-main ontology, the language designers explicitly account for the language X  X  ability to represent domain features truthfully [6] .
 should ideally be isomorphic to an ontology underlying the language, this would only quirement, supporting thus a more flexible relation between language metamodels and reference ontologies. 
The remainder of the paper is structured as follows: section 2 discusses the notion of reference domain ontology contrasting it with the notion of language metamodels; ontology for genealogy; section 5 defines the syntax of a domain-specific language to section 8 discusses related work and section 9 presents conclusions and future work. An ontology can be defined as a set of entities acknowledged by a theory or system of Foundational Ontologies [ 8 can be traced back to Hay e particular engineering artif a ture, namely, those entities a particular area of applica t ware engineering). These a r
In the past 15 years, an i constructed in a number o f can play an important rol e main-specific conceptual m abstract syntax and formal efficient systems of visual ontologies must be constru c with the sole objective of m portion of reality, capturi n particular, these ontologie s states which are deemed a author demonstrates in [6], ontologies should be const r In this sense, a foundation a to fundamental ontologica l event, action, etc.). A dom a a subset of these states sel e in Fig. 1 (for a foundationa l Language metamodels a r MOF, Ecore) and enriche d rules of the language that Examples of language use d order logic. In the remaind e to the syntactic rules impli c
Fig. 2 illustrates the rol e tactically valid models of a instantiated from metamod e Note that Fig. 1 and Fig Fig. 1 concerns states of t h gies, Fig. 2 concerns sy m specific languages. In our and a language X  X  abstract similar fashion, the logic t ontology should aim solel y conceptualization and is n o that captures a reference o metamodel (and additiona l meeting information dem a Thus, it quantifies over sy m In order to provide real-wo r valid models of the langua g ble by a reference domain o ontologies are axiomatize d third logic theory that qua same time. The resulting re l
By formalizing the corr e can characterize an import a well-defined real-world se m (syntactically-correct) mod e ontology. A language that f of meaningless models, i. e intend to represent. We co n
This approach also allows us to formally characterize an important class of syntac-tic constraints, those we call semantically-motivated syntactic constraints. These con-straints have the purpose of reflecting real-world rules into a language abstract syntax. If a language admits models that are not about any admissible world state, it suggests all its semantically-motivated syntactic constraints should be entailed by the remaind-er of the unified theory, i.e. by the semantic mapping axioms in tandem with the on-tology axioms. This means that the ontology axioms may be used to shape the defini-tion of the language, in particular, helping in abstract syntax definition. 
To illustrate the approach and its implications, we present an example to show how We show the use of the Alloy formal method [11] to guarantee that the unified theory is consistent and to identify which syntact ic constraints are semantically-motivated. This section presents an ontology in the genealogy domain which will be used later to define the semantics of a domain-specific language. Our approach to present this on-that are not implied by this diagram. 
OntoUML specializes the UML class diagram by differentiating various categories (UFO) [8]. In an OntoUML diagram some ontological distinctions of UFO are its instances (e.g., instances of Person cannot cease to be so without ceasing to exist) and provides a uniform principle of identity for them. A class stereotyped as through the relation properties the instances bear in the scope of a relational context. event (e.g., a Man plays the role of MaleProcreator only in the scope of a Conception phases: LivingPerson or DeceasedPerson). Fig. 4 depicts the OntoUML diagram that illustrates the main concepts of the ontology. 
The proposed domain reference ontology defines that the (biological) ancestry rela-male sperm unites with a human female oocyte egg. Thus, each human being ( Person ) is the product of a Conception event. For the sake of simplicity, we consider that, in Man, playing the role of MaleProcreator and (ii) a Woman on the role of FemalePro-creator. We assume that the product of the Conception event is considered a Living-Person (i.e., a fetus is a living person even before its birth). On the other hand, both (i.e., the ontology considers the possibility of artificial insemination). 
We formalize the ontology as a theory in many-sorted first-order logic, quantifying (events). Thus, we assume two disjoint sets of entities: a set W of worlds and a set U of entities that are typed by the classes present in the OntoUML diagram. In order to consider next represents an asymmetric, irreflexive, transitive and completely ordered binary predicate for each kind, subkind and phase from the OntoUML diagram, name-ly, Person(w,p), Man(w,p), Woman(w,p), LivingPerson(w,p) and DeceasedPer-tion(w,c) holds if c is an occurrence of Conception that happens in the time boundary 
For the sake of brevity, the axioms implied by the OntoUML diagram (classes X  ri-gidity, lower and upper bound for cardinality constraints, specialization relations) are omitted. Those not expressed by the OntoUML diagram are presented in Table 1. 
Axioms A1 and A2 determines that every Person must play the role of Offspring of one Conception event in which two other Persons play the role of Procreators, except Persons is outside the scope of this ontology (as it is neutral with respect to accounts of the origin of humans such as biological evolution, theological creation). 
Axioms A6 and A7 state that the Man and the Woman who play the roles of pro-A9 defines the ancestry relationship based on the parenthood relation (defined in A8). ing the concepts of parent and ancestor in terms of the concept of Conception event. In this section, we define the abstract syntax of a DSL for describing genealogy trees, and later we define the semantics for this language in terms of the genealogy ontology presented in the previous section. 5.1 Abstract Syntax D e Considering that a genealo g for representing genealogy represent parenthood. Fig. Ecore. From now on we wi elements are prefixed with  X 
In the depicted metam o tree itself. An MGenealog y construct represents person nealogyTree are divided i n MPerson , identified by the cestry is modeled by the t r MPersons that composes t h represent the ancestors of t one MMan through an m F used to associate an MPer s constructs represent the pa r
We define the language logic, quantifying over we l instances of the language c entities: a set M of well-fo r logyTree ), and a set P of i Binary predicates to repre s relations, namely mRefPe r holds if an entity p is the represent the constructs M man(m,p) (e.g. MMan(m,p) model m ), and; (iii) Ternar tions, namely MFatherOf( m if, in a model m  X  M, an in s mFatherOf relation). For t are implied by the metamo d
The syntactic constraint s constraint C1 is a helper d e rOf and MMotherOf relati o all connected. C3 ensures t fines that the father and the 5.2 Real-World Semantics Definition ous semantic issues for genealogy trees. For example, it does not define whether the language represents biological or legal parenthood (or both), if an (unborn) fetus may be represented in a model as a person, if a deceased person may be represented. These here as a logic theory binding the reference ontology and the abstract syntax. 
Considering that a DSL1 model aims to represent information about a set of admissi-u  X  U. Table 3 shows the axioms that formalize the definition of the predicate isAbout , thereby characterizing the real-world semantic definition formally. 
S1 relates the MMan construct to the ontology concept of Man, defining that if we in w. S2 is similar to S1 dealing with the relation between the MWoman construct and between an instance a of MMan and an instance b of MPerson, then there must be, in referred by b. S4 places a similar statement on the relation between MMotherOf and DSL1 is about a world w.
 about a world w. We have used Alloy to analyze some properties of DSL1 . Alloy is a structural model-ing language based on first-order logic [11]. A software framework named Alloy Analyzer supports model simulation and consistency checking assuming the small scope hypothesis in order to ensure tractability [11]. 
To enable the analysis, we have represented the three logic theories in three Alloy modules. The module corresponding to the genealogy ontology was derived automati-cally using the transformation from OntoUML to Alloy [12]. The module correspond-patterns defined in [13]. In this way, we have ensured the correspondence between the Alloy specifications and the models presented in Figures 4 and 5. The module allowing us to verify that the combined specification is consistent. 
In order to automatically verify which of the syntactic constraints are semantically-motivated, we have added the assumption that for every model m there is at least one well-defined real-world semantics. Then, we have verified each syntactic constraint as an assertion. When no counter-example is found, the Alloy Analyzer guarantees that, straint is semantically-motivated . 
Using this method, we have found that the syntactic constraint C3 (Table 2) is se-mantically-motivated . In fact, C3 reflects, in DSL1 abstract syntax, the rule that ance-stry cycles are not allowed by the ontology. Note that, assuming that for every model axioms S3 and S4. Thus, considering the abstr act syntax in isolation, if C3 were miss-ing there would be syntactically valid expressions of DSL1 with no semantics. 
Applying the same method, we have concluded that the syntactic constraints C2 mother of the mRefPerson must be represented). Consequently, the syntactic con-structs mRefPerson and mRefAncestors, used in those constraints, are not mapped into ontological concepts by the DSL1 real-world semantics definition. Another conse-again can be checked automatically. 
The minimum and maximum cardinality constraints of the mFatherOf and the mantically-motivated . This is because the maximum cardinality constraint reflects the ontological rule that every Person has at most one father and one mother. The analy-sis also reveals that the minimum cardinality constraint is not semantically-motivated.  X  X riginal persons X  which do not have parents). 
This divergence between the ontological rules and syntactic constraints is a conse-world states. In the genealogy case, it is reasonable to imagine that no one has infor-conceptualization of the reality and shall not be influenced by pragmatic issues, as the need to foresee a lack of information. It is worth noticing that this difference on con-model must refer to a Man that exists in the worlds described by that model. So, if a model or he is an  X  X riginal X  Person . No syntactic or semantic inconsistences arise. ontology accounts for the parenthood and ancestry relationships in terms of participa-representing the parenthood relationship (instead of aiming at grounding the concept of parenthood), the DSL1 metamodel represents the concepts of MotherOf and Fathe-rOf as primitive syntactic constructs, not including constructs to represent Conception events . In this example we can observe that, the real-world semantics definition expli-hood (as grounded on Conception events). This is of course a particular worldview or conceptualization (or to be more precise, a particular ontological commitment) which is reflected by the ontology. 
Furthermore, considering that it is assumed here unnecessary to know if a person is alive or not in the context of a genealogy tree specified in DSL1 and aiming to reduce the language complexity (another example of pragmatic issue that may influence DSL metamodels) the concepts of LivingPerson and DeceasedPerson have no counterpart in the language metamodel. Thus, the approach of using a domain ontology to define language without creating a counterpart construct for each real-world concept. 
We should finally note that, when selecting a domain reference ontology to define the semantics of a language one must carefully analyze the suitability of assuming the cording to our ontology, a person exists as a result of the Conception event in which it used this ontology as a basis to define DSL1 X  X  real-world semantics, this has the con-sequence that fetuses may appear in a geneal ogy tree. If this is considered undesirable by language designers, a domain ontology that would provide a distinction between a fetus and a person who is already born would be required. (This could possibly be a refinement of the ontology used in this paper). relation between ontologies and language metamodels in the literature. Some authors depicted with the same or similar languages, such as variants of frame-based languag-explore their relations. It is worth to note that various authors propose different crite-issue in the literature. 
For example, Bezivin et al. [17] and Atkinson [18] suggest that the distinction be-tween ontologies and model engineering artefacts (such as metamodels) is primarily a clear distinct roles in language engineering. Thus, while they can be harmonized into the same overall framework eliminating accidental differences from technical spaces (as we have done here with axiomatic logic theories) they serve different yet comple-mentary purposes. 
The integration of modeling languages is the focus of [16]. The authors argue that zens X . While the presented patterns are shown to be useful, we argue that the semantic issues are more complex than what can be addressed by metamodel refactoring, which does not address explicitly choices concerning the semantics of language elements. 
In [15] the authors discuss the use of ontologies, models and metamodels in model-meta-pyramid of MDA. This proposal argues that role of ontologies is to describe the world objects and software objects at M0 ( X  X s described by X ). However, they position ontologies at M1 and do not elaborate on a possible relation between reference ontol-ogies and language metamodels (at M2). We believe this is an important gap in their ontology-aware meta-pyramid for MDE, which we address in this paper. 
The work of Ciocoiu and Nau [19] also consider the problem of providing seman-show that information in language expressions may be incomplete or partial, and that a mapping to a domain ontology will reveal assumptions that are implicit in language not on implications for the language engineering effort. language design and could also be applied to the area of database design. In particu-lar, we believe that the so-called  X  X emantic integrity constraints X  in database systems systems is  X  X o avoid database states for which no correspondence can exist in the real world X . While great importance has been given to the management of  X  X emantic inte-necessary constraints or how to control their quality. Thus, the data modeler (not un-like the language designer) must face semantic issues (e.g., the definition of  X  X emantic implications to the design of database systems, in that it could account for  X  X emantic approach can be extended to cover both the so-called static and dynamic constraints. show clear examples of how reference ontologies and language metamodels differ. reference ontologies and language metamodels, separating syntactic and semantic understanding and capturing a domain conceptualization (a concern of ontology engi-neering) and dealing with abstract syntax de sign (a concern of language engineering). 
Our approach is grounded on the fact that the relation between a language and real-ity is always mediated by a certain conceptu alization [21]. If nothing is said about the based on his/her own concepts about reality. Thus, the formal definition of a language nicate about reality. 
Besides its importance to avoid misunderstandings in a communication process, the explicit real-world semantics representation may bring some additional benefits to of truthfulness of a language with respect to a specific domain conceptualization; (iii) models using the semantic mapping and the ontological axioms. 
Moreover, by formally characterizing the syntactic constraints, ontology axioms veraging the existing transformations from OntoUML to Alloy, we have shown that it is possible to automatically verify which of the syntactic constraints are semantically-motivated. Without these constraints the language would produce models with no meaning. We believe the formal approach discussed here can be used to support more advanced evaluation of DSL semantics, systematizing the application of the ontologi-cal analysis approach discussed in [6]. We also intend to use the presented approach to enable the semantic interoperation of languages in multi-viewpoint modeling. These are topics for further investigation. of the language designer. However, we should emphasize that our approach does not applications, e.g., the design of several languages, (semantic) language interoperabili-real-world semantics of a DSL and guidelines for developing reusable ontologies. Acknowledgments. This research is funded by the Brazilian Research Funding Agencies CAPES and CNPq (grants number 310634/2011-3, 311578/2011-0 and 485368/2013-7). 
