 WIS design has to take various aspects such as intention, usage, content, func-tionality, context and presentation into account [1, 2, 3, 8]. In this paper we will deal with the usage aspect, in particular with the question how a WIS can adapt itself to the preferences and goals of its users, a problem that is commonly re-ferred to as personalisation . In continuation of our approach in [8] we start from a system description by a story space , which consists of abstract locations called scenes and transitions between these scen es that are enabled by user actions. This can be formalised by an algebraic expression using the theory of Kleene algebras with tests (KATs) [5]. Then user preferences can be modelled by equations, and personalisation becomes a reasoning task with these equations. In this paper we continue this line of research and investigate decidability and complexity of this reasoning process. We will base our study on the results in [6]. The results will have an impact on turning equational reasoning with KATs into an algorithmic approach to personalisation. For this we develop a Knuth-Bendix-type algorithm based on critical-pair completion [4]. The story space of a WIS can be decribed by a edge-labelled directed multi-graph, in which the vertices represent the scen es, and the edges represent transitions between scenes. Looking at this from a d ifferent angle, we may concentrate on the flow of actions. Actions can be treated as being atomic, i.e. we are not yet interested in how an underlying database might be updated. Then each action also belongs to a uniquely determined s cene. Actions have pre-and postcondi-tions, so we can use annotations to express conditions that must hold before or after an action is executed. Actions can be executed sequentially or parallel, we must allow choice between actions, and a ctions can be iterated. As shown in [8] this leads to a story algebra . Thus, we can describe a story space by an element of a suitable story algebra, which giv es rise to Kleene algebras with tests. to denote iteration. In addition we use 1 for an action that does nothing (usually called skip), and 0 for an undefined action (usually called fail or abort). A Kleene algebra (KA) K consists of a carrier-set K containing at least two different elements 0 and 1, a unary operation  X  , and two binary operations + and  X  such that the following axioms are satisfied:  X  +and  X  are associative, i.e. for all p, q, r  X  K we must have p +( q + r )=  X  + is commutative and idempotent with 0 as neutral element, i.e. for all  X  1 is a neutral element for  X  , i.e. for all p  X  K we must have p 1=1 p = p ;  X  for all p  X  K we have p 0=0 p =0;  X  p  X  q ist the least solution x of q + px  X  x and qp  X  is the least solution of (
K, + ,  X  ,  X  , 0 , 1), a subset B  X  K containing 0 and 1 and closed under + and  X  , and the operator  X expresses negation.
 Example 1. Take a simple example, where the WIS is used for ordering products. In this case we have actions  X  1 = select product,  X  2 =payment by card,  X  3 = payment by bank transfer,  X  4 =payment by cheque,  X  5 =enter address, and  X  6 = confirm order.
 the price of the selected product(s) lies w ithin the range of acceptance of credit card payment,  X  2 =payment by credit card,  X  3 =payment by bank transfer and  X  4 =payment by cheque to express that the user has selected the op-tion to pay by credit card, bank transfer or cheque, respectively, and  X  5 = order confirmed to express that the user has confirmed the order.
 spaces. However, we do not just want to derive equations from the KAT axioms, which would mean to exploit the equational theory of KATs, but we want to derive such equations under the assumption of other equations that describe user preferences and other constraints for th e story space expression. In particular, we obtain the following types of equations: A preference equation of the form  X  (  X  +  X  )=  X  X  expresses that a user condi tionally prefers action  X  over action  X  , where the condition is expressed by  X  .A precondition equation of the form  X   X  X  = 0 (or equivalently  X  =  X  X  ) expresses that the condition  X  is a precondition for the action  X  .A postcondition equation of the form  X   X   X  = 0 (or equivalently  X  =  X  X  ) expresses that the condition  X  is a postcondition for the action  X  . An invariance equation of the form  X  X  =  X  X  , which is equivalent to  X   X  X  =  X   X   X  and to  X  X   X   X  +  X   X  X  X  = 0, expresses that the condition  X  (and so its negation  X   X  ) is invariant under the action  X  .An exclusion equation of the form  X  X  =0 expresses that the conditions  X  and  X  exclude each other. An equation of the form  X  X  =  X  X  expresses that the order of the actions  X  and  X  is irrelevant, hence they behave as if they were executed in parallel.
 Given a process p  X  K that represents a story space, and a set  X  of equations on K that represents (among other constraints) user preferences and a postcondition  X   X  B , we look for a minimal process p  X  K such that  X  | = p X  = p  X  holds. user intention formalised by  X  .
 Example 2. Let us continue Example 1 and localise the story space, i.e. person-alise with respect to the location of its us ers. Say, for a European user the option to pay by cheque should be invalidated. So we obtain the equation  X  4 =0.Fur-thermore, assume that this us er prefers to pay by credit card, if this turns out to  X   X  1) + 1)  X  , i.e. the option to pay by cheque has been removed, and the option to be out of range for credit card payment.
 problems have been investigated so far, we rephrase our problem by the following decision problem: Given process p, p  X  K such that p represents a story space and p  X  p holds, and a set  X  of equations on K that represents (among other constraints) user prefer ences and a postcondition  X   X  B , then decide, whether  X  | = p X  = p  X  holds.
 complete. That is, we can decide in polynomial space, whether p = q can be derived from the axioms of KATs. However, the decision problem we are dealing KATs. From [6] we already know that such problems are undecidable in general. Even if we reduce ourselves to Kleene a lgebras instead of KATs, we already get  X  0 1 -completeness, i.e. the problem is in g eneral recursively enumerable hard. However, in our case  X  only contains equations of a particular form, and we can reduce equations of the form r = 0 to the equational theory [7]. Instead of showing r =0  X  p X  = p  X  we can equivalently show p X  + uru = p  X  + uru with u =(  X  1 +  X  X  X  +  X  m )  X  ,wherethe  X  i are all the atomic actions that are not tests. exclusive postcondition  X   X  and  X   X  for  X  and  X  , respectively. Thus, we have the equations  X   X   X   X  =0,  X   X   X  =0,and  X   X   X  = 0, and we can replace the preference equation by  X  (  X  +  X  )  X   X  = 0. For the equations arising from parallelism we apply a different trick replacing p p by pp + p p . These tricks reduce the problem to a decision problem in the equational theory of KATs, which is PSPACE-complete. With respect to to the original minimisation problem it seems to be a promising idea to start with the term p X  and to rewrite the term until we obtain an irreducible term of the form p  X  , i.e. none of the rewrite rules can be applied anymore. If we guarantee that each application of a rewrite rules leads to a smaller term with respect to the order  X  , this irreducible term must be minimal and p must be the solution to the personalisation problem. The Knuth-Bendix-algorithm from [4] provides the necessary technique and theoretical justification for this approach. Basically, it is a term-rewriting approach that is coupled with so-called  X  X ritical-pair completion X  (C PC), a method that per mits the generation of new rewriting rules during rewriting.
 For KATs we need an order-sorted approach, as we have a sort B of Booleans, a sort K for the Kleene algebra terms, and B  X  K .Thenwehavetodealwith conditional rewrite rules in order to capture the axioms of the star-operator. For this we use co-routines, which validate the preconditions of a rule in a separate rewriting process. Finally, we have to deal with commutativity, in particular with equations arising from parallelism. For this we take the pragmatic approach to use simultaneous rewriting considering all alternatives at the same time. K ordered by B  X  K , and the following (nullary, unary, binary) operators : 0 , 1:  X  B ,+ ,  X  : KK  X  K ,  X  : K  X  K and  X : B  X  B . Using these sorts and operators we can define terms in the usual way. We use p,q,r,... (if needed with additional indices) as variables of sort K ,and a,b,c,... (also with indices) as variables of sort B . Then each variable of sort B or K is also a term of sort B B is also a term of sort K .
 same sort, such that the variables on the right hand side are a subset of the variables on the left hand side  X  .A conditional rewrite rule is an expression of the form t 1 = t 2  X   X  , in which in addition the terms t 1 and t 2 contain the same variables and these form a superset of the set of variables in the left hand side term  X  . The application of a rewrite rule  X  toaterm t is standard: if t contains a subterm t that can be matched with  X  , i.e. there is a substitution  X  such that the application of  X  to  X  results in t (denoted  X . X  = t ), then replace t in t by  X . . The application of a conditional rewrite rule t 1 = t 2  X   X  to a term t is defined analogously. In this case we have to show that  X .t 1 =  X .t 2 can be derived in order to use the substitution  X  .
 mulate the axioms of KATs and the personalisation equations as (conditional) rewrite rules, then start with p X  (as in Example 2) and apply the rules until we finally obtain a term of the form p  X  to which no more rule can be applied. Note that p X  is closed, i.e. it does not contain variables, so during the whole rewriting process we will only have to deal with closed terms. Following this idea we use the following general (conditional) rewrite rules: pq + q = q  X  p  X  q + q qqp + q = q  X  qp  X  + q q ther rewrite rules: co nditional preferences a ( p + q ) ap , preconditions  X  ap 0, lelism pq qp . The basic rewriting procedure from [4] uses only unconditional rewrite rules, for which a Church-Rosser property can be shown. For a condi-tional rewrite rule t 1 = t 2  X   X  whenever  X  matches a subterm t using the substitution  X  , the equation  X .t 1 =  X .t 2 has to be verified. In this case we equation. While this co-routine is processed, the rewriting of the original term can be continued until the condition is verified or disproven. In the latter case backtracking has to be applied.
 rewriting chain, i.e. we can replace all equality symbols by .Note,however that our algorithm would compute much more branches simultaneously, none of which will lead to a different result.
 rewrite a term t to terms t 1 and t 2 , but neither can we rewrite t 1 to t 2 nor the other way round. In this case t 1 and t 2 represent a critical pair , which allows us to add a new rewrite rule t 1 t 2 (and its reverse) and continue the rewriting process. This process is called critical-pair completion. arose from conditional rewriting rules, in which case we would obtain a new conditional rewriting rule. Pragmatically speaking it would be better to wait for the successful termination of the co-routine before adding such conditional rules. In this paper we continued the research from [8] on an inferential approach to personalisation using Kleene algebras with tests (KATs) [5]. Based on the observation that a story space can be r epresented by a KAT expression, we showed that personalisation leads to an optimisation problem in the Horn theory of KATs. Pragmatically, this can be further translated into a decision problem. While this is undecidable in general, we showed that the special equations we obtain for user preferences and other ru les that govern state spaces, we obtain a decidable  X  yet PSPACE-complete  X  problem.
 that reifies this approach. In addition to the classical approach from [4], which is based on term-rewriting together with critical-pair-completion, we exploited co-routines to cope with conditional rewriting rules. Furthermore, we incorpo-rated the simultaneous handling of several terms in order to capture parallelism. The advantage of our approach to personalisation is that it separates on a high conceptual level the preferences and goal s that are the input to personalisation from the story space. As a consequence, pe rsonalisation is deduced from these preferences and goal rather than hard-wired into the story space design.
