 This article tries to give an answer to a fundamental question in temporal data mining:  X  X nder what conditions a temporal rule ex-tracted from up-to-date temporal data keeps its confidence/support for future data X . A possible solution is given by using, on the one hand, a temporal logic formalism which allows the definition of the main notions ( event, temporal rule, support, confidence ) in a for-mal way and, on the other hand, the stochastic limit theory. Under this probabilistic temporal framework, the equivalence between the existence of the support of a temporal rule and the law of large numbers is systematically analyzed.
 H.2.8 [ DATABASE MANAGEMENT ]: Database Applications X  data mining ; G.3 [ Mathematics of Computing ]: PROBABILITY AND STATISTICS X  Stochastic processes ; F.4.1 [ MATHEMATICAL LOGIC AND FORMAL LANGUAGES ]: Mathematical Logic X  temporal logic THEORY Consistency of temporal rules, stochastic limit theory, stochastic processes, temporal data mining, temporal logic formalism
The domain of temporal data mining focuses on the discovery of causal relationships among events that are ordered in time and may be causally related. The contributions in this domain encom-pass the discovery of temporal rule, of sequences and of patterns. However, in many respects this is just a terminological heterogene-ity among researchers that are, nevertheless, addressing the same problem, albeit from different starting points and domains.
For the temporal data mining task which consists in extracting knowledge represented as temporal rules (expressing the intrinsic Copyright 2007 ACM 978-1-59593-609-7/07/0008 ... $ 5.00. dependence between successive events in time), one of the most important goals is to guarantee that a rule learned from a local data subset keeps its  X  X orrectness X  (expressed by the confidence measure) when applied on future data subsets. In a simplistic ap-proach we could affirm that this guarantee is made if the data model does not change over time. In fact, if temporal data is modelled by a stochastic process, the model is characterized not only by the marginal distribution of the coordinates of the process, but also by the amount of dependence between these coordinates. And if these coordinates represent real events occurring at time moment i , it is possible to have such a great amount of dependence between all events over time that all rules learned from a local set of events (those occurring in a given period of time) are effective only for this events set. This effect, which is similar to the overfitting effect for the classification trees, can be avoided only if different local sets of events are  X  X lmost X  independent. It is obvious the trade-off we must assure between the necessity of dependency between events nearby in time (which makes the rules meaningful) and the neces-sity of independence between events faraway in time (which makes the rules effective for all data).

Before defining a stochastic model for a temporal data mining task, we need to give a formal definition for the basic notions such as event, temporal rule or confidence . Although there is a rich bib-liography concerning formalism for temporal databases, there are very few articles on this topic for temporal data mining. In [1, 2, 16] general frameworks for temporal mining are proposed, but usually the research on causal and temporal rules is more concen-trated on the methodological/algorithmic aspect, and less on the theoretical aspect. Based on a methodology for temporal rule ex-traction, described in [4], we proposed in [5, 6] an innovative for-malism based on first-order temporal logic, which permits an ab-stract view on temporal rules. The formalism is developed around a time model for which the events are those that describe system evolution (event-based temporal logics).

If first-order logic is widely recognized as being a fundamental building block in knowledge representation, it does not have, how-ever, the expressive power to deal with many situations of interest, especially those related to uncertainty [15]. And if the uncertainty is a fundamental and irreducible aspect of our knowledge about the world, the probability is the most well-understood and widely applied logic for computational scientific reasoning under uncer-tainty. By attaching a probabilistic model (more precise, a stochas-tic process  X  ) to our formalism we obtain a probabilistic tempo-ral framework. An important concept defined in this formalism is the property of consistency , which guarantees the preservation over time of the confidence/support of a temporal rule. Even if the condition of independence for the stochastic process is sufficient to induce the property of consistency for a temporal structure gen-erated by  X  , this condition is not suitable for modelling temporal data mining tasks. By using advanced theorems from the stochastic limit theory, we succeeded improving that a certain amount of de-pendence of the stochastic process (called near-epoch dependence) is the highest degree of dependence which is sufficient to induce the property of consistency.

The rest of the paper is structured as follows. In the next sec-tion, the first-order temporal logic formalism is briefly described (definitions of the main terms  X  event, temporal rules, confidence  X  and concepts  X  consistent linear time structure, general interpre-tation ). The definitions and theorems concerning the extension of the formalism towards a stochastic temporal logic and a deep anal-ysis of the influence of different types of stochastic dependencies on the model consistency are presented in Section 3. Finally, the last section summarizes our work.
Time is ubiquitous in information systems, but the mode of rep-resentation/perception varies in function of the purpose of the anal-ysis [3]-[9]. Firstly, there is a choice of a temporal ontology , which can be based either on time points (instants) or on intervals (peri-ods). Secondly, time may have a discrete or a continuous structure. Finally, there is a choice of linear vs. nonlinear time (e.g., acyclic graph). Our choice is a temporal domain represented by linearly ordered discrete instants.

For the purpose of our approach we consider a restricted first-order temporal language L which contains only constant symbols { c,d,.. } , n-ary ( n  X  1 ) function symbols { f,g,.. } , variable sym-bols { y 1 ,y 2 ,... } , n-ary predicate symbols ( n  X  1 , so no proposi-tion symbols), the set of relational symbols { = ,&lt;,  X  ,&gt;,  X } , the logical connective AND with two graphical forms (  X  and 7 X  ) and a temporal connective of the form  X  k , k  X  Z , where k strictly pos-itive means after k time instants , k strictly negative means before k time instant and k = 0 means now .

Definition 1. An event (or temporal atom) is an atom formed by the predicate symbol E followed by a bracketed n -tuple of terms ( n  X  1) E ( t 1 ,t 2 ,...,t n ) . The first term of the tuple, t constant symbol representing the name of the event and all other terms are expressed according to the rule t i = f ( t i 1 short temporal atom (or the event X  X  head) is the atom E ( t
Definition 2. A constraint formula for the event E ( t 1 ,t is a conjunctive compound formula, E ( t 1 ,t 2 ,...t n )  X  C  X  X  X  X  C k . Each C j is a relational atom t X c , where the first term t is one of the terms t i , i = 1 ...n ,  X  is a relational symbol and the second term is a constant symbol.
 For a short temporal atom E ( t 1 ) , the only constraint formula that is permitted is E ( t 1 )  X  ( t 1 = c ) . We denote such constraint formula as short constraint formula .

Definition 3. A temporal rule is a formula of the form H 1 H m 7 X  H m +1 , where H m +1 is a short constraint formula and H ,i = 1 ..m are constraint formulae, prefixed by the temporal connectives  X   X  k , k  X  0 . The maximum value of the index k is called the time window of the temporal rule.
 If we change in Definition 1 the conditions imposed on the terms t ,i = 1 ...n to  X  X ach term t i is a variable symbol X , we obtain the definition of a temporal atom template. We denote such a template as E ( y 1 ,...,y n ) . Following the same rationale, a constraint for-mula template for E ( y 1 ,...,y n ) is a conjunctive compound for-mula, C 1  X  C 2  X  X  X  X  X  C k , where the first term of each relational atom C j is one of the variables y i , i = 1 ...n . Finally, by replac-ing in Definition 3 the notion  X  X onstraint formula X  with  X  X onstraint formula template X  we obtain the definition of a temporal rule tem-plate.

The semantics of L is provided by an interpretation I over a do-main D (in our formalism, D is always a linearly ordered domain). The interpretation assigns an appropriate meaning over D to the (non-logical) symbols of L . Usually, the domain D is imposed dur-ing the discretisation phase, which is a pre-processing phase used in almost all knowledge extraction methodologies. Based on Def-inition 1, an event can be seen as a labeled (constant symbol t sequence of points extracted from raw data and characterized by a finite set of features (terms t 2 ,  X  X  X  ,t n ). Consequently, the do-main D is the union D e  X  D f , where the set D e contains all the strings used as event names and the set D f represents the union of all domains corresponding to chosen features.

Example 1. Consider a temporal database containing the results of a series of experiments, each experiment being characterized by a decision ( { Run, Stop } ) and by a real positive parameter h (the average of two measurements). In the frame of our formalism, the language L will contain a 2-ary predicate symbol E , two variable symbols y 1 ,y 2 , a 2-ary function symbol h , two sets of constant symbols  X  { d 1 ,d 2 } and { c 1 ,...,c n }  X  and the usual set of re-lational symbols and logical(temporal) connectives. According to the syntactic rules of L , an event is defined as E ( d i event template as E ( y 1 ,y 2 ) , whereas  X   X  2 ( y 1 = d d  X  y 2 &lt; c j ) 7 X  ( y 1 = d 1 ) is an example of a temporal rule template with a time window of 2. Concerning the semantics of L , the domain D is defined as the union of D e = { Run,Stop } and D f = &lt; + .

To define a first-order linear temporal logic based on L , we need a structure having a temporal dimension and capable of capturing the relationship between a time moment and the interpretation I at this moment.

Definition 4. Given L and a domain D , a (first order) linear time structure is a triple M = ( S,x, I ) , where S is a set of states, x : N  X  S is an infinite sequence of states ( s (1) ,s (2) ,...,s and I is a function that associates with each state s an interpretation I of all symbols from L.
 In the framework of linear temporal logic, the set of symbols is di-vided into two classes, the class of global symbols and the class of local symbols. The formalism of temporal rules assumes that all function symbols (including constants) and all relational symbols are global, whereas the predicate symbols and variable symbols are local. Consequently, the meaning of truth for temporal atoms, con-straint formulae, temporal rules and the corresponding templates depends on the state at which they are evaluated. Given a first or-der time structure M and a formula p , we denote the instant i (or ( M,i ) | = p ), i.e. at time instant i the formula p is true. Therefore, i | = E ( t 1 ,...,t n ) means that at time i an event with the name I ( t 1 ) and characterized by the global features I ( t 2 ) ,..., I ( t curs.

The connection between the restricted first-order temporal logic and the temporal data mining task this logic tries to formalize (tem-poral rules extraction) is made by the following assumptions:
A. For each formula p in L , there is an algorithm that calculates
B. There are states (called incomplete states) that do not con-
C. It is possible to establish a measure, (called general inter-
The first assumption expresses the calculability of the interpre-tation I . The second assumption expresses the situation when only the body of a temporal rule can be evaluated at a time moment i , but not the head of the rule. Therefore, for the state s ( i ) not calculate the interpretation of the temporal rule, and the only solution is to estimate it using a general interpretation. This solu-tion is expressed by the third assumption. ( Remark: The second assumption violates the condition about the existence of an inter-pretation in each state s ( i ) , as defined in Definition 4. But it is well known that in data mining sometimes data is incomplete or is miss-ing. Therefore, we must modify this condition as  X  I is a function that associates with almost each state s an interpretation I all symbols from L  X ).

Example 2. (cont.) The database of events contains tuples with two values, ( v 1 ,v 2 ) . For a tuple with a recording index i , the first value expresses the name of the event  X  Run , Stop  X  which occurs at time moment i and the second is the value of the pa-rameter h . Therefore, to specify a linear time structure M = ( S,x, I ) we define the state s as a tuple ( decision i ,h ble 1), the set S as the set of all tuples from database and the se-quence x as the ordered sequence of tuples in the database. At this
Table 1: The first ten states of the linear time structure M stage the interpretation of all symbols (global and local) can be de-fined. For the global symbols, the interpretation is quite intuitive: the meaning I ( d 1 ) is Run , I ( d 2 ) is Stop and I ( h ) is the function f : R 2 7 X  R,f ( x 1 ,x 2 ) = ( x 1 + x 2 ) / 2 . For the local symbols (the predicate symbol E and the variables y 1 ,y 2 ), the interpreta-tion depends on the state s i : if s 1 = ( Run, 30) , as example, then I ( y 1 ) = Run , I s 1 ( y 2 ) = 30 , I s 1 ( E ( d 2 ,h (10 , 30)) = false and I s i ( E ( d 1 ,h (20 , 40))) = true . Having defined the language L , the syntax and the semantics of L , as well as the linear time structure M , we can construct the temporal atoms evaluated as true at the time moment i (see Table 2).
 Table 2: The temporal atoms (templates) evaluated as true
To ensure that the concept of general interpretation (introduced by assumption C) is well defined, the linear time structure must present some property of consistency. In practical terms, this means that if we take any sufficiently large subset of time instants, the con-clusions (rules) we may infer from this subset are sufficiently close to those inferred from the entire set of time instants. Therefore, Definition 5. Given L and a linear time structure M , we say that M is a consistent time structure for L if, for every formula p , the limit supp ( p ) = lim ity X  and A = { i = 1 ..n | i | = p } . The notation supp ( p ) denotes the support (of truth) of p.

Now we define the general interpretation for an n-ary predicate symbol P as:
Definition 6. Given L and a consistent linear time structure M for L , the general interpretation I G for an n-ary predicate P is a function D n  X  [0 , 1] , such that, for each n-tuple of terms { t I ( P ( t 1 ,...,t n )) = supp ( P ( t 1 ,...,t n )) .

The general interpretation is naturally extended to constraint for-mulae, temporal rules and the corresponding templates. There is another useful measure, called confidence , but available only for temporal rules (templates). This measure is calculated (as we ex-pect) as a limit ratio between the number of certain applications (time instants where both the body and the head of the rule are true) and the number of potential applications (time instants where only the body of the rule is true).

Definition 7. The confidence of a temporal rule (template) H  X  X  X  X  H m 7 X  H m +1 is the limit lim { i = 1 ..n | i | = H 1  X  X  X  X  X  H m  X  H m +1 } and B = { i = 1 ..n | i | = H 1  X  X  X  X  X  H m } .
 The relation between the property of consistency and the existence of the confidence for a temporal rule is expressed in the following lemma.
 Lemma 1 If M is a consistent linear time structure for L then every temporal rule (template) H 1  X  X  X  X  X  H m 7 X  H m +1 for which supp ( H 1  X  X  X  X  X  H m ) 6 = 0 has a well-defined confidence. For different reasons, (the user has no access to the entire sequence of states, or the states he has access to are incomplete), the general interpretation cannot be calculated. A solution is to estimate I using a finite linear time structure, i.e. a model.

Definition 8. Given L and a consistent time structure M =( S,x, I ) , a model for M is a structure  X  M = (  X  T,  X  x ) where  X  ral domain { i 1 ,..,i n } ,  X  x is the subsequence of states { s (the restriction of x to the temporal domain  X  T ) and for each i 1 ,...,n , the state s ( i j ) is a complete state.
 For a given model  X  M , the local support for a formula p (denoted supp ( p,  X  M ) ) is defined as the ratio # A #  X  T , where A = { i  X  p } . Similarly, the estimation of the confidence for a temporal rule (template) is defined as:
Definition 9. Given a model  X  M = (  X  T,  X  x ) for M , the estimation of the confidence for the temporal rule (template) H 1  X  X  X  X  X  H H m +1 is the ratio (# B )  X  1 # A , where A = { i  X   X  T | i | = H  X  X  X  X  H m  X  H m +1 } and B = { i  X   X  T | i | = H 1  X  X  X  X  X  H
Example 3. (cont.) Consider the following temporal rule (de-noted H ): ( y 1 = d 1 )  X  ( y 2 &gt; 28)  X  X  X  1 ( y 1 = d 1 )  X  X  X  1 ( y 2  X  32) 7 X  X  X   X  X ranslated X  in a natural language as:
If M is a consistent time structure, then the model  X  M formed by the first ten states s i (Table 1) can be used to estimate the confi-dence of the temporal rule. And, due to the consistency property, this estimation (0.4) represents reliable 1 information about the suc-cess rate for this rule when applied to future data.
The concept of consistency has deep consequences for any method-ology of temporal rule extraction from high-dimensional data. Since it is (almost) impossible to use all data, the process of knowledge extraction is applied on subsets of data. For an end-user, the main question is if a temporal rule extracted from such a subset may be applied, with the same confidence, to any part of data (current or future). And the answer is positive if the linear time structure which models the process and data is consistent.

According to Definition 5, to verify the consistency of a time structure involves verifying the existence of the support for each well-defined formula. Because this approach is hard to apply in practice, we decided to concentrate on particular behaviors for the sequence of states x , behaviors which (as we will prove) are suffi-cient to ensure the existence of the consistency property. And the key to this approach is given by the observation that the sequence x may be considered as a particular realization of a stochastic pro-cess.

To extend our formalism with a probabilistic model we start by adding probabilities to a first order time structure M = ( S,x, I ) . If S = { s 0 ,s 1 ,... } is a countable set of states, consider  X  ( S ) the  X   X  algebra generated by S . The probability measure P on  X  ( S ) is defined such that P ( s i ) = p i &gt; 0 ,  X  i  X  N . Consider now a ran-dom variable X : S  X  R such that the probability P ( X = s for all i  X  N  X  this condition assures that the probability sys-tems ( S, X  ( S ) ,P ) and ( R , B ,P X ) model the same experiment. If S N = {  X  |  X  = (  X  1 , X  2 ,..., X  t ,... ) , X  t  X  S,t  X  N variable X induces the stochastic sequence  X  : S N  X  R N , where  X  (  X  ) = { X t (  X  ) ,t  X  N } and X t (  X  ) = X (  X  t ) for all t  X  The fact that each  X   X  S N may be uniquely identified with a func-tion x : N  X  S and that X is a bijection between S and X ( S ) allows us to uniquely identify the function x with a single realiza-tion of the stochastic sequence. In other words, the sequence x = ( s (1) ,s (2) ,...,s ( i ) ,... ) from the structure M can be seen as one of the outcomes of an infinite sequence of experiments, each exper-iment being modelled by the probabilistic system ( S, X  ( S ) ,P ) . To each such sequence corresponds a single realization of the stochas-tic sequence,  X  ( x ) = ( X ( s (1) ) , X ( s (2) ) ,...,
Definition 10. Given L and a domain D , a stochastic (first or-der) linear time structure is a quintuple M = ( S,P, X , X , I ) , where
In practice, the size of the model  X  M must be at least of order of hundreds states to be able to consider the confidence estimate as truly reliable information To each realization of the stochastic sequence  X  , obtained by ran-dom drawing of a point in R  X  (or equivalently, of a point  X  in realization (in the following called  X  X orld X ) is given by the (ordi-nary) linear time structure M  X  = ( S, X , I ) , which implies that the semantics attached to the symbols of L, described in Section 2, are totally effective.
Much of the largest part of stochastic process theory has to do with the joint distribution of sets of coordinates, under the general heading of dependence. The degree to which random variations of sequence coordinates are related to those of their neighbors, in the time ordering, is sometimes called the memory of a sequence; in the context of time-ordered observations, one may think in terms of amount of information contained in the current state of the se-quence about its previous states. A sequence with no memory is a rather special kind of object, because the ordering ceases to have significance. It is like the outcome of a collection of independent random experiments conducted in parallel, and indexed arbitrarily. Indeed, independence and stationarity are the best-known restric-tions on the behavior of a sequence. But while the emphasis in our framework will mainly be on finding ways to relax these condi-tions, they remain important because of the many classic theorems in probability and limit theory which are founded on them.
The amount of dependence in a sequence is the chief factor deter-mining how informative a realization of given length can be about the distribution that generated it. At one extreme, the i.i.d. se-quence is equivalent to a true random sample. The classical the-orems of statistics can be applied to this type of distribution. At the other extreme, it is easy to specify sequences for which a single realization can never reveal the parameters of the distribution, even in the limit as its length tends to infinity. This last possibility is what concerns us most, since we want to know whether averaging operations applied to sequences have useful limiting properties.
Let { X t }  X  1 be a stochastic sequence and define X n = n Suppose that E ( X t ) =  X  t and n  X  1 P n 1  X  t converges to  X  , with |  X  | &lt;  X  . In this simple setting, the sequence is said to obey the weak law of large numbers (WLLN) when X n converges in prob-ability to  X  , and the strong law of large numbers (SLLN) when X n converges almost sure to  X  . To obey the law of large numbers, a sequence must satisfy regularity conditions relating to two dis-tinct factors: the probability of extreme values (limited by bound-ing absolute moments) and the degree of dependence between co-ordinates. The necessity of a set of regularity conditions is usually hard to prove (except if the sequences are independent), but vari-ous configurations of dependency and boundedness conditions can be shown to be sufficient. These results usually exhibit a trade-off between the two dimensions of regularity; the stronger the moment restrictions are, the weaker the dependence restrictions can be, and vice-versa.

Consider now the sequence of the indicator function for an event A (i.e. X t = 1 A for all t ). In this case,  X  t =  X  = P ( A ) and (  X  ) = n  X  1 P n t =1 1 A (  X  ) = n  X  1 # { i  X  1 ..n | X i M  X  is a realization of a stochastic structure, p a formula defined on language L and A the event  X  X he interpretation of the formula p is
In this context, an event is a set of possible outcomes of a random experiment true X , then the expression for X n (  X  ) is equivalent (under some con-ditions) with the expression which gives, at the limit, the support of p . Indeed, X n (  X  ) = = Consequently, supp(p) exists (almost sure) if the stochastic se-quence { 1 A }  X  1 satisfies the strong law of large numbers .
Given a stochastic linear time structure M = ( S,P, X , X , I ) , the sequence { 1 A }  X  1 is obtained  X  as we will prove in the following  X  by applying a particular transformation to the random sequence  X  . Therefore, the sufficient conditions for { 1 A }  X  1 to obey SLLN are inherited from the regularity conditions the  X  X asic X  stochastic process  X  must satisfy. And because all absolute moments of 1 are finite (bounded by 0 and 1 ), the only regularity condition we may modify concerns the degree of dependence for  X  .

Example 4. If the first ten realizations of the stochastic process  X  are those for Table 1 and p is the temporal rule H , then the corre-sponding sequence { 1 A }  X  1 has at the first eight positions the values 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 .
In this case the stochastic process  X  = { X (  X  i ) }  X  1 let p be a temporal free formula (e.g. a temporal atom). On the probabilistic system ( S, X  ( S ) ,P ) one defines the event A S | I s ( p ) = true } .
 Lemma 2 If { X (  X  i ) }  X  1 is i.i.d. then { ( 1 A p ) i is also i.i.d.

The proof is elementary and is based on the fact that if the ran-dom variables X i (  X  ) = X (  X  i ) and X j (  X  ) = X (  X  dent then the random variables 1 A p (  X  i ) and 1 A p (  X  dependent (see [18]).

As we mentioned, the regularity conditions for SLLN concern the dependence restrictions and the moment restrictions. For the independence case, the Kolmogorov classical version of the SLLN may be applied to the sequence { 1 A p (  X  i ) }  X  1 . Therefore, we may conclude that
Corollary 1. If the random process  X  from the stochastic first-order linear time structure M is i.i.d., then for almost all worlds M the support of p , supp ( p ) , where p is a temporal free formula in L, exists and it is equal to P ( A p ) .
 Consider now the temporal formula  X  k p , k &gt; 0 . For a fixed world M  X  , we have ( M  X  ,i ) | =  X  k p iff ( M  X  ,i + k ) | = p . There-fore, the stochastic sequence corresponding to  X  k p is given by quence being the one corresponding to the formula p , but without the first k coordinates. Because the approach for k &lt; 0 is similar, we may conclude that:
Corollary 2. If the random process  X  from the stochastic first-order linear time structure M is i.i.d., then for almost all worlds M  X  the support of  X  k p , where p is a temporal free formula in L and k  X  N , exists and it is equal to P ( A p ) .
 The last type of formula we consider is  X  k 0 p 0  X  X  X  k 1 p  X  n p n , where 0 = k 0  X  k 1  X   X  X  X   X  k n (e.g. a temporal rule). If Tp is an abbreviation for this formula and M  X  is a fixed world, we have ( M  X  ,i ) | = Tp if and only if ( M  X  ,i + k j ) | = p j = 0 ..n . To construct the stochastic sequence corresponding to Tp we first introduce the following Borel transformation g Therefore, the stochastic sequence for the formula p was obtained by applying to { X i } the transformation g 0 p , whereas for the formula  X  k p one applied the transformation g k p . Given the formula Tp, consider the stochastic sequences corresponding to the formulae  X  k 0 p 0 ,  X  k 1 p 1 ,...,  X  these sequences we define the stochastic sequence { G i } Q j =0 j G i (  X  ) . According to the following lemma, { G i quence corresponding to the formula Tp.
 Lemma 3 G i (  X  ) = 1 if and only if ( M  X  ,i ) | = Tp.
 Because g k j p j ( X i ) = g 0 p j ( X i + k j ) , the random variable expressed as h ( X i ,..., X i + k n ) , where h is a Borel function (a composition between the product function and the g k j p j The sequence { G i } is identically distributed (condition inherited from the sequence { X i } by applying the function h ), but it is not independent (the events  X  X p true at i  X  and  X  X p true at i +1  X  are not independent). In exchange we may prove the following result: Lemma 4 For all i  X  N and all m  X  N ,m  X  k n + 1 , the random variables G i and G i + m are independent.
 This Lemma affirms that the sequence { G i } is what is called in stochastic process theory a k n -dependent sequence, which is a par-ticular case of a mixing sequence. In a brief description, we say that a sequence is  X  -mixing (or strong mixing) if the supremum of the strong mixing coefficient 3  X  m , which is a measure of the de-pendence between coordinates situated at a distance m , converges to zero for m  X  X  X  . A consequence of Lemma 4 is that  X  m is zero for m  X  k n + 1 , and evidently { G i } is a strong mixing sequence. The importance of this result lies in the fact that this kind of de-pendence is sufficient, under certain conditions, that { G i SLLN.
 Theorem 1 ([11], pp. 40) Let { X t }  X  1 be a  X  -mixing sequence such that E ( X t ) =  X  and E ( X 2 t ) &lt;  X  ,t  X  1 . Suppose that where { b t } is a sequence of positive constants increasing to  X  . Then For the particular case b n = n , the conclusion of the theorem be-comes X n a.s.  X  X  X   X  . It is not difficult to prove that the sequence { verifies the hypothesis of Theorem 1. In conclusion  X  m = sup sup
Corollary 3. If the random process  X  from the stochastic first-order linear time structure M is i.i.d., then for almost all worlds M  X  the support of Tp, where Tp is a temporal formula  X  k 0  X  1 p 1  X  ...  X  X  X  k n p n , exists and it is equal to Q
Finally, based on Corollaries 1-3, we can prove the following fundamental theorem: Theorem 2 (Independence and Consistency) If the random pro-cess  X  from the stochastic first-order linear time structure ( S,P, X , X , I ) is i.i.d., then almost all worlds M  X  = ( S, X , I consistent linear time structures.

But the independence restriction for the random process  X  , even if it is a sufficient condition for the property of consistency for lin-ear time structures M  X  , represents a serious drawback for a tem-poral data mining methodology. Indeed, what we try to discover are temporal rules expressing a dependence between the event oc-curred at time t and the events occurred before time t . It X  X  obvious that the independence implies a null correlation between the body and the head of the temporal rule  X  in other words the rule is not meaningful. The question is how much do we have to relax the independence condition for  X  to still conserve the property of con-sistency.
Since mixing is not so much a property of the sequence { X i as of the sequence of  X  -fields generated by { X i } , it holds for any random variables measurable on those  X  -fields. More generally, we have the following important implication: Theorem 3 ([7]) Let Y i = g ( X i , X i  X  1 ,.., X i  X  k ) be a Borel func-tion, for finite k . If X i is  X  -mixing, then Y i is too.
This theorem is the key to proving that  X   X  -mixing is a sufficient condition for consistency. Indeed, the previously defined functions g j and h = Q the sequence { g 0 p ( X t ) } (corresponding to temporal free formula p ), the sequence { g k p ( X t ) } (corresponding to temporal formula  X  and the sequence { h ( X t ) } (corresponding to temporal formula Tp) are also  X  -mixing. Because all these sequences fulfil the conditions of Theorem 1 we can conclude that for any formula p in L the support of p exists (but, unlike in the independent case, we can not give an exact expression for the support of a temporal formula like Tp). This result is formalized in the following theorem. Theorem 4 (Mixing and Consistency) If the random process  X  from the stochastic first-order linear time structure M = ( S,P, is  X  -mixing, then almost all worlds M  X  = ( S, X , I s ) are consistent linear time structures.
 Remark If  X  is i.i.d., a consequence of Corollary 3 is that the con-fidence of the rule Tp is P ( A p n ) . If  X  is  X  -mixing, we can obtain only an upper bound for the confidence of the temporal rule. By denoting A the event  X  X he implicated clause of the rule is satisfied X  and B the event  X  X mplication clauses of the rule are satisfied X  then the following Lemma holds.
 Lemma 5 If  X  is  X  -mixing, the confidence of the temporal rule (template) Tp satisfies the relation
The mixing concept has a serious drawback from the viewpoint of applications in stochastic limit theory, in that a function of a mix-ing sequence (even of an independent sequence) that depends on an infinite number of coordinates of the sequence is not generally mix-ing. Let X i = g ( ..., V i  X  1 , V i , V i +1 ,... ) , where mixing processes. The idea is that although X i may not be mixing, if it depends almost entirely on the  X  X ear epoch X  of { V i often have properties permitting the application of limit theorems, including SLLN. Near-epoch dependence 4 is not an alternative to a mixing assumption; it is a property of the mapping from { { X i } , not of the random variables themselves.

The main approach we applied in the previous cases is the prop-erty of a Borel transformation g to inherit the type of dependence (the independence or the mixing dependence) from the initial se-quence. For the near-epoch dependence this property is achieved only if the function g satisfies additional conditions and only for particular L q -NED sequences. Concretely, let g ( x ) : D  X  D  X  R n be a Borel function and consider the metric on R n  X  ( x 1 , x 2 ) = P n 1 | x 1 i  X  x 2 i | for measuring the distance between points x 1 and x 2 . If g satisfies ii. | g ( X 1 )  X  g ( X 2 ) | X  M X  ( X 1 , X 2 ) a.s., where X then the following theorem holds: Theorem 5 ([7], pp. 269) Let X ji be L 2 -NED of size  X  a on { then { g ( X 1 i ,..., X ni ) } is also L 2 -NED on { V i constants a finite multiple of max i { d ji } .
 Suppose the process  X  = { X i } is L 2 -NED of size  X  a on { we have already seen in the previous cases, for p a temporal free formula, the corresponding sequence is { g 0 p ( X i ) } . The function g (  X  ) , as defined in (1), doesn X  X  satisfies the condition (i). But it is possible to define a function  X  g p which takes the value one for the arguments x  X  X ( A p ) = { X ( s ) : s  X  A p } , the value zero for the arguments x  X  X  X ( s ) : s  X  S  X  A p } and to be continuous for x  X  R support of X being a discrete set) to choose the constant M that |  X  g p ( x )  X   X  g p ( y ) | X  M p | x  X  y | , for any x,y  X  the conditions of Theorem 5 are verified and so {  X  g p ( is also L 2 -NED of size  X  a on { V i } .

For the temporal formula  X  k p , the corresponding sequence is { g argument as in the previous paragraph proves that {  X  g p L -NED. Finally, consider the temporal formula  X  k 0 p 0  X  ...  X   X  n p n . The corresponding sequence is where X 0 ij = X i + k j . Concerning the transformation  X  fies (i) as being a product of continuous functions and satisfies (ii) because, by denoting X i = ( X i ,..., X i + k n ) , { V t }  X   X  X  X  . If, for q &gt; 0 , a sequence of integrable r.v.s { X satisfies k X t  X  E ( X t |X t + m t  X  m ) k q  X  d t  X  m , where  X  and { d t }  X   X  X  X  is a sequence of positive constants, X t near-epoch dependent in L q norm ( L q -NED) on { V t } . The first inequality comes from the fact that | Q i x i  X  Q P i | x i  X  y i | if x i ,y i  X  { 0 , 1 } and the second inequality is the condition (ii) for the transformations  X  g p j . Therefore, Theorem 5 holds and so the sequence corresponding to the temporal formula Tp is L 2 -NED. In conclusion,
Corollary 4. If  X  is L 2 -NED then for any formula in L the cor-responding sequence is also L 2 -NED.
 The following step is to establish the sufficient condition for the ap-plication of SLLN to an L q -NED sequence. In [8] are summarized the up-to-date strong laws for dependent heterogeneous processes, including NED sequences. We consider the following form for the limit theorem, which includes the case q = 2 .
 Theorem 6 ([8]) Let a sequence { X i } with means {  X  i } be L NED, q  X  [1 , 2] , of size  X  b , on a sequence { V i } which is  X  -mixing of size  X  a . If a n / where
It is not difficult to verify that an L 2 -NED sequence bounded by 0 and 1 fulfils the hypotheses of this theorem and so obeys the SLLN. Therefore, as in the previous cases, we may conclude that Theorem 7 (Near-Epoch Dependence and Consistency) If the ran-dom process  X  from the stochastic first-order linear time structure M = ( S,P, X , X , I ) is L 2 -NED on an  X  -mixing sequence, then al-most all worlds M  X  = ( S, X , I s ) are consistent linear time struc-tures.

The near-epoch dependence is, according to the stochastic limit theory, the highest degree of dependence for which theorems con-cerning SLLN still hold.
From a theoretical viewpoint, proving that a certain amount of dependence for the stochastic process  X  is a sufficient condition for the consistency of the linear time structure M  X  it is a useful achievement. But from a practical viewpoint, checking that a sam-ple series (two series in our example, the series of h values and the series of decisions ) holds a given amount of dependence is a difficult task [17]. Serial dependency is often characterized by the standardized spectral density function where i = constant then the series is independent, if  X  is bounded above and below then the series has a short memory (or is n -dependent) and if  X  (0) is infinity then the series has a long memory (is  X  -mixing or L -NED). Nonparametric tests for serial independence were con-structed based on spectral density or on higher-order spectra, but the need of Gaussian assumption and of restrictive moment condi-tions when testing for a specific type of dependence makes these tests unappropriate in our case [10]. A possible solution is given by the generalized spectral density [12, 13, 14], which needs no moment condition: generated from either discrete or continuous distribution with pos-sibly infinite moments, as is often encountered in high-frequency economic and financial data. This is appropriate for temporal data mining, because data for which temporal rules are extracted contain at least a series of discrete events (as in our example, the series of possible decisions , { Run , Stop } ). The estimates of the generalized spectral function and of its derivatives can be used to test generic serial dependence and hypotheses of various specific aspects of se-rial dependence (serial uncorrelatedness, martingale, conditional homoscedasticity, conditional symmetry, etc.). The computational complexity of these estimates is high, involving the selection of a data-dependent asymptotically optimal bandwidth (or lag order) for the kernel and a four-dimensional integration, but remains manage-able for the present generation of computers.
To give an answer to the practical question  X  X ow we can be sure that a temporal rule learned from a data subset can be applied with the same confidence on future data? X  we developed a probabilis-tic temporal logic framework by combining stochastic theory with first-order temporal logic. The connection between a practical tem-poral data mining methodology and the abstract framework is rep-resented by the sequence of states  X  from the linear time structure M  X  = ( S, X , I ) . This sequence is constructed based on raw data, and by modeling it as a realization of a stochastic process  X  we achieve two goals: i ) we express the intrinsic dependency of tem-poral raw data and ii ) we get a certain  X  X ndependence X  for the analy-sis of the confidence/support preservation regardless of the original raw data.

According to the proposed formalism, a temporal rule preserves its confidence over future data sets if the model satisfies the prop-erty of consistency. The model is consistent if each formula p has a support or, as we proved, if a particular stochastic sequence (de-pending on p ) obeys the strong law of large numbers. And because the sequence corresponding to formula p is constructed from the stochastic sequence  X  , using appropriate transformations, we stud-ied the necessary conditions for  X  which assures the applicability of SLLN.

The independence of  X  is a sufficient condition for the consis-tency, but it is not useful for temporal rule extraction. For other two type of dependence, the  X  -mixing (the degree of dependence converges to zero if the distance between coordinates converges to  X  ) and the near-epoch dependence (a function of a mixing se-quence with an infinite number of parameters) we could prove that the linear time structure M  X  = ( S, X , I ) is consistent. Only a de-gree of dependence greater than L 2 -NED makes any temporal rule extracted (anyhow) from a local data set inappropriate for forecast-ing use. In our opinion, these results also imply that future research must concentrate on the connection between the degree of depen-dence of raw data and the quality (and efficiency) of temporal rules extraction algorithms. [1] S. Al-Naemi. A theoretical framework for temporal [2] X. Chen and I. Petrounias. A Framework for Temporal Data [3] J. Chomicki and D. Toman. Temporal Logic in Information [4] P. Cotofrei and K. Stoffel. Classification Rules + Time = [5] P. Cotofrei and K. Stoffel. From temporal rules to temporal [6] P. Cotofrei. Methodology for Mining Meta Rules from [7] J. Davidson. Stochastic Limit Theory . Oxford University [8] J. Davidson and R. de Jong. Strong laws of large numbers for [9] E. A. Emerson. Temporal and Modal Logic. Handbook of [10] C. Granger and T. Terasvirta. Modelling Nonlinear Economic [11] P. Hall and C. Heyde. Martingale Limit Theory and Its [12] Y. Hong. Hypothesis Testing in Time Series via the [13] Y. Hong and T. H. Lee. Diagnostic checking for adequacy of [14] Y. Hong and T. H. Lee. Generalized spectral tests for [15] D. Koller and J. Y. Halpern. Irrelevance and conditioning in [16] D. Malerba, F. Esposito, and F. Lisi. A logical framework for [17] P. Nze and P. Doukhan. Weak dependence: models and [18] P. Pfeiffer. Probability for Applications . Springer Texts in
