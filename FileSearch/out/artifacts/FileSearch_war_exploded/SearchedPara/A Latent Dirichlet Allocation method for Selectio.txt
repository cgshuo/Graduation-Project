 Selectional Preferences encode the set of admissi-ble argument values for a relation. For example, locations are likely to appear in the second argu-ment of the relation X is headquartered in Y and companies or organizations in the first. A large, high-quality database of preferences has the po-tential to improve the performance of a wide range of NLP tasks including semantic role labeling (Gildea and Jurafsky, 2002), pronoun resolution (Bergsma et al., 2008), textual inference (Pantel et al., 2007), word-sense disambiguation (Resnik, 1997), and many more. Therefore, much atten-tion has been focused on automatically computing them based on a corpus of relation instances.
Resnik (1996) presented the earliest work in this area, describing an information-theoretic ap-proach that inferred selectional preferences based on the WordNet hypernym hierarchy. Recent work (Erk, 2007; Bergsma et al., 2008) has moved away from generalization to known classes, instead utilizing distributional similarity between nouns to generalize beyond observed relation-argument pairs. This avoids problems like WordNet X  X  poor coverage of proper nouns and is shown to improve performance. These methods, however, no longer produce the generalized class for an argument.
In this paper we describe a novel approach to computing selectional preferences by making use of unsupervised topic models. Our approach is able to combine benefits of both kinds of meth-ods: it retains the generalization and human-interpretability of class-based approaches and is also competitive with the direct methods on pre-dictive tasks.
 Unsupervised topic models, such as latent Dirichlet allocation (LDA) (Blei et al., 2003) and its variants are characterized by a set of hidden topics, which represent the underlying semantic structure of a document collection. For our prob-lem these topics offer an intuitive interpretation  X  they represent the (latent) set of classes that store the preferences for the different relations. Thus, topic models are a natural fit for modeling our re-lation data.
 In particular, our system, called L DA -SP , uses LinkLDA (Erosheva et al., 2004), an extension of LDA that simultaneously models two sets of dis-tributions for each topic. These two sets represent the two arguments for the relations. Thus, L DA -SP is able to capture information about the pairs of topics that commonly co-occur. This information is very helpful in guiding inference.

We run L DA -SP to compute preferences on a massive dataset of binary relations r ( a 1 ,a 2 ) ex-tracted from the Web by T EXT R UNNER (Banko and Etzioni, 2008). Our experiments demon-strate that L DA -SP significantly outperforms state of the art approaches obtaining an 85% increase in recall at precision 0.9 on the standard pseudo-disambiguation task.

Additionally, because L DA -SP is based on a for-mal probabilistic model, it has the advantage that it can naturally be applied in many scenarios. For example, we can obtain a better understanding of similar relations (Table 1), filter out incorrect in-ferences based on querying our model (Section 4.3), as well as produce a repository of class-based preferences with a little manual effort as demon-strated in Section 4.4. In all these cases we obtain high quality results, for example, massively out-performing Pantel et al. X  X  approach in the textual inference task. 1 Previous work on selectional preferences can be broken into four categories: class-based ap-proaches (Resnik, 1996; Li and Abe, 1998; Clark and Weir, 2002; Pantel et al., 2007), similarity based approaches (Dagan et al., 1999; Erk, 2007), discriminative (Bergsma et al., 2008), and genera-tive probabilistic models (Rooth et al., 1999). Class-based approaches , first proposed by Resnik (1996), are the most studied of the four. They make use of a pre-defined set of classes, ei-ther manually produced (e.g. WordNet), or auto-matically generated (Pantel, 2003). For each re-lation, some measure of the overlap between the classes and observed arguments is used to iden-tify those that best describe the arguments. These techniques produce a human-interpretable output, but often suffer in quality due to an incoherent tax-onomy, inability to map arguments to a class (poor lexical coverage), and word sense ambiguity.
Because of these limitations researchers have investigated non-class based approaches, which attempt to directly classify a given noun-phrase as plausible/implausible for a relation. Of these, the similarity based approaches make use of a dis-tributional similarity measure between arguments and evaluate a heuristic scoring function:
S
Erk (2007) showed the advantages of this ap-proach over Resnik X  X  information-theoretic class-based method on a pseudo-disambiguation evalu-ation. These methods obtain better lexical cover-age, but are unable to obtain any abstract represen-tation of selectional preferences.

Our solution fits into the general category of generative probabilistic models , which model each relation/argument combination as being gen-erated by a latent class variable. These classes are automatically learned from the data. This re-tains the class-based flavor of the problem, with-out the knowledge limitations of the explicit class-based approaches. Probably the closest to our work is a model proposed by Rooth et al. (1999), in which each class corresponds to a multinomial over relations and arguments and EM is used to learn the parameters of the model. In contrast, we use a LinkLDA framework in which each re-lation is associated with a corresponding multi-nomial distribution over classes, and each argu-ment is drawn from a class-specific distribution over words; LinkLDA captures co-occurrence of classes in the two arguments. Additionally we perform full Bayesian inference using collapsed Gibbs sampling, in which parameters are inte-grated out (Griffiths and Steyvers, 2004).

Recently, Bergsma et. al. (2008) proposed the first discriminative approach to selectional prefer-ences. Their insight that pseudo-negative exam-ples could be used as training data allows the ap-plication of an SVM classifier, which makes use of many features in addition to the relation-argument co-occurrence frequencies used by other meth-ods. They automatically generated positive and negative examples by selecting arguments having high and low mutual information with the rela-tion. Since it is a discriminative approach it is amenable to feature engineering, but needs to be retrained and tuned for each task. On the other hand, generative models produce complete prob-ability distributions of the data, and hence can be integrated with other systems and tasks in a more principled manner (see Sections 4.2.2 and 4.3.1). Additionally, unlike L DA -SP Bergsma et al. X  X  sys-tem doesn X  X  produce human-interpretable topics. Finally, we note that L DA -SP and Bergsma X  X  sys-tem are potentially complimentary  X  the output of L
DA -SP could be used to generate higher-quality training data for Bergsma, potentially improving their results.
Topic models such as LDA (Blei et al., 2003) and its variants have recently begun to see use in many NLP applications such as summarization (Daum  X  e III and Marcu, 2006), document align-ment and segmentation (Chen et al., 2009), and inferring class-attribute hierarchies (Reisinger and Pasca, 2009). Our particular model, LinkLDA, has been applied to a few NLP tasks such as simul-taneously modeling the words appearing in blog posts and users who will likely respond to them (Yano et al., 2009), modeling topic-aligned arti-cles in different languages (Mimno et al., 2009), and word sense induction (Brody and Lapata, 2009).

Finally, we highlight two systems, developed independently of our own, which apply LDA-style models to similar tasks.  X  O S  X  eaghdha (2010) pro-poses a series of LDA-style models for the task of computing selectional preferences. This work learns selectional preferences between the fol-lowing grammatical relations: verb-object, noun-noun, and adjective-noun. It also focuses on jointly modeling the generation of both predicate and argument, and evaluation is performed on a set of human-plausibility judgments obtaining im-pressive results against Keller and Lapata X  X  (2003) Web hit-count based system. Van Durme and Gildea (2009) proposed applying LDA to general knowledge templates extracted using the K NEXT system (Schubert and Tong, 2003). In contrast, our work uses LinkLDA and focuses on modeling multiple arguments of a relation ( e.g. , the subject and direct object of a verb). We present a series of topic models for the task of computing selectional preferences. These models vary in the amount of independence they assume between a 1 and a 2 . At one extreme is Indepen-dentLDA, a model which assumes that both a 1 and a 2 are generated completely independently. On the other hand, JointLDA, the model at the other extreme (Figure 1) assumes both arguments of a specific extraction are generated based on a single hidden variable z . LinkLDA (Figure 2) lies be-tween these two extremes, and as demonstrated in Section 4, it is the best model for our relation data.
We are given a set R of binary relations and a corpus D = { r ( a 1 ,a 2 ) } of extracted instances for these relations. 2 Our task is to compute, for each argument a i of each relation r , a set of usual ar-gument values (noun phrases) that it takes. For example, for the relation is headquartered in the first argument set will include companies like Mi-crosoft, Intel, General Motors and second argu-ment will favor locations like New York, Califor-nia, Seattle . 3.1 IndependentLDA We first describe the straightforward application of LDA to modeling our corpus of extracted rela-tions. In this case two separate LDA models are used to model a 1 and a 2 independently.

In the generative model for our data, each rela-tion r has a corresponding multinomial over topics  X  , drawn from a Dirichlet. For each extraction, a hidden topic z is first picked according to  X  r , and then the observed argument a is chosen according to the multinomial  X  z .

Readers familiar with topic modeling terminol-ogy can understand our approach as follows: we treat each relation as a document whose contents consist of a bags of words corresponding to all the noun phrases observed as arguments of the rela-tion in our corpus. Formally, LDA generates each argument in the corpus of relations as follows: for each topic t = 1 ...T do let distribution Dir(  X  ). end for for each relation r = 1 ... | R | do tion Dir(  X  ). nomial  X  z end for
One weakness of IndependentLDA is that it doesn X  X  jointly model a 1 and a 2 together. Clearly this is undesirable, as information about which topics one of the arguments favors can help inform the topics chosen for the other. For example, class pairs such as ( team , game ), ( politician , political is-sue ) form much more plausible selectional prefer-ences than, say, ( team , political issue ), ( politician , game ). 3.2 JointLDA As a more tightly coupled alternative, we first propose JointLDA, whose graphical model is de-picted in Figure 1. The key difference in JointLDA (versus LDA) is that instead of one, it maintains two sets of topics (latent distributions over words) denoted by  X  and  X  , one for classes of each ar-gument. A topic id k represents a pair of topics,  X  k and tracted relations. Common examples include (Per-son, Location), (Politician, Political issue) , etc. The hidden variable z = k indicates that the noun phrase for the first argument was drawn from the multinomial  X  k , and that the second argument was drawn from  X  k . The per-relation distribution  X  r is a multinomial over the topic ids and represents the selectional preferences, both for arg1s and arg2s of a relation r .

Although JointLDA has many desirable proper-ties, it has some drawbacks as well. Most notably, in JointLDA topics correspond to pairs of multi-nomials (  X  k , X  k ); this leads to a situation in which multiple redundant distributions are needed to rep-resent the same underlying semantic class. For example consider the case where we we need to represent the following selectional preferences for our corpus of relations: ( person , location ), ( per-son , organization ), and ( person , crime ). Because JointLDA requires a separate pair of multinomials for each topic, it is forced to use 3 separate multi-nomials to represent the class person , rather than learning a single distribution representing person and choosing 3 different topics for a 2 . This results in poor generalization because the data for a single class is divided into multiple topics.

In order to address this problem while maintain-ing the sharing of influence between a 1 and a 2 , we next present LinkLDA, which represents a com-promise between IndependentLDA and JointLDA. LinkLDA is more flexible than JointLDA, allow-ing different topics to be chosen for a 1 , and a 2 , however still models the generation of topics from the same distribution for a given relation. 3.3 LinkLDA Figure 2 illustrates the LinkLDA model in the plate notation, which is analogous to the model in (Erosheva et al., 2004). In particular note that each a i is drawn from a different hidden topic z i , however the z i  X  X  are drawn from the same distri-bution  X  r for a given relation r . To facilitate learn-
Figure 1: JointLDA ing related topic pairs between arguments we em-ploy a sparse prior over the per-relation topic dis-tributions. Because a few topics are likely to be assigned most of the probability mass for a given relation it is more likely (although not necessary) that the same topic number k will be drawn for both arguments.

When comparing LinkLDA with JointLDA the better model may not seem immediately clear. On the one hand, JointLDA jointly models the gen-eration of both arguments in an extracted tuple. This allows one argument to help disambiguate the other in the case of ambiguous relation strings. LinkLDA, however, is more flexible; rather than requiring both arguments to be generated from one of | Z | possible pairs of multinomials (  X  kLDA allows the arguments of a given extraction to be generated from | Z | 2 possible pairs. Thus, instead of imposing a hard constraint that z 1 = z 2 (as in JointLDA), LinkLDA simply assigns a higher probability to states in which z 1 = z 2 , be-cause both hidden variables are drawn from the same (sparse) distribution  X  r . LinkLDA can thus re-use argument classes, choosing different com-binations of topics for the arguments if it fits the data better. In Section 4 we show experimentally that LinkLDA outperforms JointLDA (and Inde-pendentLDA) by wide margins. We use L DA -SP to refer to LinkLDA in all the experiments below. 3.4 Inference For all the models we use collapsed Gibbs sam-pling for inference in which each of the hid-den variables ( e.g. , z r,i, 1 and z r,i, 2 in LinkLDA) are sampled sequentially conditioned on a full-assignment to all others, integrating out the param-eters (Griffiths and Steyvers, 2004). This produces robust parameter estimates, as it allows computa-tion of expectations over the posterior distribution as opposed to estimating maximum likelihood pa-rameters. In addition, the integration allows the use of sparse priors, which are typically more ap-propriate for natural language data. In all exper-iments we use hyperparameters  X  =  X  1 =  X  2 = 0 . 1 . We generated initial code for our samplers us-ing the Hierarchical Bayes Compiler (Daume III, 2007). 3.5 Advantages of Topic Models There are several advantages to using topic mod-els for our task. First, they naturally model the class-based nature of selectional preferences, but don X  X  take a pre-defined set of classes as input. Instead, they compute the classes automatically. This leads to better lexical coverage since the is-sue of matching a new argument to a known class is side-stepped. Second, the models naturally han-dle ambiguous arguments, as they are able to as-sign different topics to the same phrase in different contexts. Inference in these models is also scalable  X  linear in both the size of the corpus as well as the number of topics. In addition, there are several scalability enhancements such as SparseLDA (Yao et al., 2009), and an approximation of the Gibbs Sampling procedure can be efficiently parallelized (Newman et al., 2009). Finally we note that, once a topic distribution has been learned over a set of training relations, one can efficiently apply infer-ence to unseen relations (Yao et al., 2009). We perform three main experiments to assess the quality of the preferences obtained using topic models. The first is a task-independent evaluation using a pseudo-disambiguation experiment (Sec-tion 4.2), which is a standard way to evaluate the quality of selectional preferences (Rooth et al., 1999; Erk, 2007; Bergsma et al., 2008). We use this experiment to compare the various topic mod-els as well as the best model with the known state of the art approaches to selectional preferences. Secondly, we show significant improvements to performance at an end-task of textual inference in Section 4.3. Finally, we report on the quality of a large database of Wordnet-based preferences ob-tained after manually associating our topics with Wordnet classes (Section 4.4). 4.1 Generalization Corpus For all experiments we make use of a corpus of r ( a 1 ,a 2 ) tuples, which was automatically ex-tracted by T EXT R UNNER (Banko and Etzioni, 2008) from 500 million Web pages.

To create a generalization corpus from this large dataset. We first selected 3,000 relations from the middle of the tail (we used the 2,000-5,000 most frequent ones) 3 and collected all in-stances. To reduce sparsity, we discarded all tu-ples containing an NP that occurred fewer than 50 times in the data. This resulted in a vocabulary of about 32,000 noun phrases, and a set of about 2.4 million tuples in our generalization corpus.
We inferred topic-argument and relation-topic multinomials (  X  ,  X  , and  X  ) on the generalization corpus by taking 5 samples at a lag of 50 after a burn in of 750 iterations. Using multiple sam-ples introduces the risk of topic drift due to lack of identifiability, however we found this to not be a problem in practice. During development we found that the topics tend to remain stable across multiple samples after sufficient burn in, and mul-tiple samples improved performance. Table 1 lists sample topics and high ranked words for each (for both arguments) as well as relations favoring those topics. 4.2 Task Independent Evaluation We first compare the three LDA-based approaches to each other and two state of the art similarity based systems (Erk, 2007) (using mutual informa-tion and Jaccard similarity respectively). These similarity measures were shown to outperform the generative model of Rooth et al. (1999), as well as class-based methods such as Resnik X  X . In this pseudo-disambiguation experiment an observed tuple is paired with a pseudo-negative, which has both arguments randomly generated from the whole vocabulary (according to the corpus-wide distribution over arguments). The task is, for each relation-argument pair, to determine whether it is observed, or a random distractor. 4.2.1 Test Set For this experiment we gathered a primary corpus by first randomly selecting 100 high-frequency re-lations not in the generalization corpus. For each relation we collected all tuples containing argu-ments in the vocabulary. We held out 500 ran-domly selected tuples as the test set. For each tu-ple r ( a 1 ,a 2 ) in the held-out set, we removed all tuples in the training set containing either of the rel-arg pairs, i.e. , any tuple matching r ( a 1 ,  X  ) or r (  X  ,a to infer a distribution over topics,  X  r , for each of the relations in the primary corpus (based solely on tuples in the training set) using the topics from the generalization corpus.

For each of the 500 observed tuples in the test-set we generated a pseudo-negative tuple by ran-domly sampling two noun phrases from the distri-bution of NPs in both corpora. 4.2.2 Prediction Our prediction system needs to determine whether a specific relation-argument pair is admissible ac-cording to the selectional preferences or is a ran-dom distractor ( D ). Following previous work, we perform this experiment independently for the two relation-argument pairs ( r,a 1 ) and ( r,a 2 ) .
We first compute the probability of observing a 1 for first argument of relation not a distractor, P ( a 1 | r,  X  D ) , which we approx-imate by its probability given an estimate of the parameters inferred by our model, marginalizing over hidden topics t . The analysis for the second argument is similar.

A simple application of Bayes Rule gives the probability that a particular argument is not a distractor. Here the distractor-related proba-bilities are independent of r , i.e. , P ( D | r ) = P ( D ) , P ( a 1 | D,r ) = P ( a 1 | D ) , etc. We estimate P ( a 1 | D ) according to their frequency in the gen-eralization corpus.
 4.2.3 Results Figure 3 plots the precision-recall curve for the pseudo-disambiguation experiment comparing the three different topic models. L DA -SP , which uses LinkLDA, substantially outperforms both Inde-pendentLDA and JointLDA.

Next, in figure 4, we compare L DA -SP with mutual information and Jaccard similarities us-ing both the generalization and primary corpus for Figure 3: Comparison of LDA-based approaches on the pseudo-disambiguation task. L DA -SP (Lin-kLDA) substantially outperforms the other mod-els. Figure 4: Comparison to similarity-based selec-tional preference systems. L DA -SP obtains 85% higher recall at precision 0.9. computation of similarities. We find L DA -SP sig-nificantly outperforms these methods. Its edge is most noticed at high precisions; it obtains 85% more recall at 0.9 precision compared to mutual information. Overall L DA -SP obtains an 15% in-crease in the area under precision-recall curve over mutual information. All three systems X  AUCs are shown in Table 2; L DA -SP  X  X  improvements over both Jaccard and mutual information are highly significant with a significance level less than 0.01 using a paired t -test.

In addition to a superior performance in se-lectional preference evaluation L DA -SP also pro-duces a set of coherent topics, which can be use-ful in their own right. For instance, one could use them for tasks such as set-expansion (Carlson et al., 2010) or automatic thesaurus induction (Et-Table 2: Area under the precision recall curve. L
DA -SP  X  X  AUC is significantly higher than both similarity-based methods according to a paired t -test with a significance level below 0.01. zioni et al., 2005; Kozareva et al., 2008). 4.3 End Task Evaluation We now evaluate L DA -SP  X  X  ability to improve per-formance at an end-task. We choose the task of improving textual entailment by learning selec-tional preferences for inference rules and filtering inferences that do not respect these. This applica-tion of selectional preferences was introduced by Pantel et. al. (2007). For now we stick to infer-ence rules of the form r 1 ( a 1 ,a 2 )  X  r 2 ( a 1 ,a though our ideas are more generally applicable to more complex rules. As an example, the rule (X defeats Y)  X  (X plays Y) holds when X and Y are both sports teams, however fails to produce a reasonable inference if X and Y are Britain and Nazi Germany respectively. 4.3.1 Filtering Inferences In order for an inference to be plausible, both re-lations must have similar selectional preferences, and further, the arguments must obey the selec-tional preferences of both the antecedent r 1 and the consequent r 2 . 4 Pantel et al. (2007) made use of these intuitions by producing a set of class-based selectional preferences for each relation, then filtering out any inferences where the argu-ments were incompatible with the intersection of these preferences. In contrast, we take a proba-bilistic approach, evaluating the quality of a spe-cific inference by measuring the probability that the arguments in both the antecedent and the con-sequent were drawn from the same hidden topic in our model. Note that this probability captures both the requirement that the antecedent and con-sequent have similar selectional preferences, and that the arguments from a particular instance of the rule X  X  application match their overlap.

We use z r the j th argument of relation r i . The probability that the two arguments a 1 , a 2 were drawn from the same hidden topic factorizes as follows due to the conditional independences in our model: 5
To compute each of these factors we simply marginalize over the hidden topics: where P ( z = t | a ) can be computed using Bayes rule. For example, 4.3.2 Experimental Conditions In order to evaluate L DA -SP  X  X  ability to filter in-ferences based on selectional preferences we need a set of inference rules between the relations in our corpus. We therefore mapped the DIRT In-ference rules (Lin and Pantel, 2001), (which con-sist of pairs of dependency paths) to T EXT R UN -NER relations as follows. We first gathered all in-stances in the generalization corpus, and for each r ( a by concatenating the arguments with the relation string between them. Each such simple sentence was parsed using Minipar (Lin, 1998). From the parses we extracted all dependency paths be-tween nouns that contain only words present in the T EXT R UNNER relation string. These depen-dency paths were then matched against each pair in the DIRT database, and all pairs of associated relations were collected producing about 26,000 inference rules.

Following Pantel et al. (2007) we randomly sampled 100 inference rules. We then automati-cally filtered out any rules which contained a nega-tion, or for which the antecedent and consequent contained a pair of antonyms found in WordNet (this left us with 85 rules). For each rule we col-lected 10 random instances of the antecedent, and generated the consequent. We randomly sampled 300 of these inferences to hand-label. 4.3.3 Results In figure 5 we compare the precision and recall of L
DA -SP against the top two performing systems described by Pantel et al. (ISP.IIM- X  and ISP.JIM, both using the CBC clusters (Pantel, 2003)). We find that L DA -SP achieves both higher precision and recall than ISP.IIM- X  . It is also able to achieve the high-precision point of ISP.JIM and can trade precision to get a much larger recall. Figure 5: Precision and recall on the inference fil-tering task.
 Table 3: Top 10 and Bottom 10 ranked inference rules ranked by L DA -SP after automatically filter-ing out negations and antonyms (using WordNet).
In addition we demonstrate L DA -SP  X  X  abil-ity to rank inference rules by measuring the Kullback Leibler Divergence 6 between the topic-distributions of the antecedent and consequent,  X  r 1 and  X  r 2 respectively. Table 3 shows the top 10 and bottom 10 rules out of the 26,000 ranked by KL Divergence after automatically filtering antonyms (using WordNet) and negations. For slight varia-tions in rules ( e.g. , symmetric pairs) we mention only one example to show more variety. 4.4 A Repository of Class-Based Preferences Finally we explore L DA -SP  X  X  ability to produce a repository of human interpretable class-based se-lectional preferences. As an example, for the re-lation was born in , we would like to infer that the plausible arguments include ( person , location ) and ( person , date ).

Since we already have a set of topics, our task reduces to mapping the inferred topics to an equivalent class in a taxonomy ( e.g. , WordNet). We experimented with automatic methods such as Resnik X  X , but found them to have all the same problems as directly applying these approaches to the SP task. 7 Guided by the fact that we have a relatively small number of topics (600 total, 300 for each argument) we simply chose to label them manually. By labeling this small number of topics we can infer class-based preferences for an arbi-trary number of relations.

In particular, we applied a semi-automatic scheme to map topics to WordNet. We first applied Resnik X  X  approach to automatically shortlist a few candidate WordNet classes for each topic. We then manually picked the best class from the shortlist that best represented the 20 top arguments for a topic (similar to Table 1). We marked all incoher-ent topics with a special symbol  X  . This process took one of the authors about 4 hours to complete.
To evaluate how well our topic-class associa-tions carry over to unseen relations we used the same random sample of 100 relations from the pseudo-disambiguation experiment. 8 For each ar-gument of each relation we picked the top two top-ics according to frequency in the 5 Gibbs samples. We then discarded any topics which were labeled with  X  ; this resulted in a set of 236 predictions. A few examples are displayed in table 4.

We evaluated these classes and found the accu-racy to be around 0.88. We contrast this with Pan-tel X  X  repository, 9 the only other released database of selectional preferences to our knowledge. We evaluated the same 100 relations from his website and tagged the top 2 classes for each argument and evaluated the accuracy to be roughly 0.55. Table 4: Class-based Selectional Preferences.
We emphasize that tagging a pair of class-based preferences is a highly subjective task, so these re-sults should be treated as preliminary. Still, these early results are promising. We wish to undertake a larger scale study soon. We have presented an application of topic mod-eling to the problem of automatically computing selectional preferences. Our method, L DA -SP , learns a distribution over topics for each rela-tion while simultaneously grouping related words into these topics. This approach is capable of producing human interpretable classes, however, avoids the drawbacks of traditional class-based ap-proaches (poor lexical coverage and ambiguity). L
DA -SP achieves state-of-the-art performance on predictive tasks such as pseudo-disambiguation, and filtering incorrect inferences.

Because L DA -SP generates a complete proba-bilistic model for our relation data, its results are easily applicable to many other tasks such as iden-tifying similar relations, ranking inference rules, etc. In the future, we wish to apply our model to automatically discover new inference rules and paraphrases.

Finally, our repository of selectional pref-erences for 10,000 relations is available at http://www.cs.washington.edu/ research/ldasp .
 We would like to thank Tim Baldwin, Colin Cherry, Jesse Davis, Elena Erosheva, Stephen Soderland, Dan Weld, in addition to the anony-mous reviewers for helpful comments on a previ-ous draft. This research was supported in part by NSF grant IIS-0803481, ONR grant N00014-08-1-0431, DARPA contract FA8750-09-C-0179, a National Defense Science and Engineering Grad-uate (NDSEG) Fellowship 32 CFR 168a, and car-ried out at the University of Washington X  X  Turing Center.
