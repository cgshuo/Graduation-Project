 Query suggestions represent one of the most popular techniques to help users create queries in information retrieval [1, 2]. Many commercial search engines like Google, Bing, and Yahoo! offer interfaces called query auto-completion interfaces to display query suggestions to users . They display a list of suggested queries in response to the query that users input into the search box . Query auto-completion interfaces (called query suggestion interfaces after this) help users create appropriate queries. 
However, we think conventional query suggestion interfaces still have a problem in that it is difficult for users to determine whether they can obtain the relevant information by issuing a target suggested query until they actually issue the query and check its search results . Users with this problem cannot recognize useful information to determine whether they can obtain relevant information apart from the query suggestions themselves. If users could check useful information before they issued a query, the information would help them make appropriate decisions as to whether they should issue the query. 
We propose a method of incorporating such information extracted from query suggestions into the conventional query suggestion interface. We define  X  X  feature of a query suggestion X  as an item of useful information for assessing whether users can satisfy their information needs by issuing the suggested query. 
We categorized features that we incorpor ated into a query suggestion interface into of the query ( meaning features ), and (3) the scope of the topic that the query specified ( topic features ). We also propose methods of obtaining such features. Incorporating the features into query suggestions helps users assess which query suggestion they should issue and it hence helps their search tasks to become more efficient and effective. 2.1 Search Result Features Raw Search Results. The purpose of incorporating the search result feature of a suggested query into a query suggestion in terface is to help it express the search of the top search results of a suggested query as they are, users can easily expect its search results before issuing it. This method displays top-k 1 search results as they are. Feature Words of Search Results. The interface proposed above displays raw search results. However, if we display too much information to users as features, they would feel high cognitive load to the interface, which might affect search performances of users. Thus we propose a method of obtaining feature words extracted from the Web search results of a suggested query as search result features. 
The method of extracting feature words of search results for suggested query q i works as follows: 1. We obtain top-k 2 search results R i = { r i1 , r i2 , ..., r ik 2. We extract titles and snippets of R i and obtain the set of words appear in them. We 3. For each word w ij in W i , we calculate the score of word according to the following 4. We extract the top-k 1 words according to the value of f sr ( w ij ), as the search result 2.2 Meaning Features by Using Feature Images The purpose of incorporating the meaning feature of a suggested query into a query suggestion interface is to help it express the meaning of the query accurately. We propose a method of obtaining feature images extracted from the image search results of a suggested query as meaning features. 
The method of extracting images of suggested query q i works as follows: 1. We obtain top-k 2 image search results A i = { a i1 , a i2 , ..., a ik 2.3 Topic Features by Using Suggest ed Queries for Suggested Query The purpose of incorporating the topic feature of a suggested query into a query search results. To help users determine they should issue more generalized/specialized queries, we propose a method of obtaining query suggestions of query suggestions and extracting feature words from them as topic features. 
Give a suggested query q i , the method first obtains the set of suggested queries Q i For example, for the query suggestion  X  X yoto University, X  if the method obtains the  X  X yoto University. X  As shown in Figure 1, we implemented five interfaces: (a) conventional query suggestions, (b) raw search results as search results features (Section 2.1), (c) feature words as search results features (Section 2.1), (d) feature images as meaning features (Section 2.2), and (e) query suggestions as topic features (Section 2.3). From the preliminary experiment, we set k 1 = 5 (the number of features to be displayed) and k 2 = 10 (the number of results used for extracting features) in the study. 
We asked 10 subjects, 9 males and a female who were in their 20s, to participate in the study. They performed two tasks for each interface (a) X (e), i.e., a total of 10 tasks in the appropriate order. After the subjects had performed each task, they were asked to answer a post-task questionnaire. Also, when they had finished all assigned tasks, the subjects were asked to answer an exit questionnaire. Search Efficiency. Table 1 shows the results of the study related to search efficiency obtained from the log data. The  X  X elevant pages for a search task X  in the table represent the average number of Web pages that they determined to be relevant to the topic of the task. The  X  X elevant pages for a suggested query X  represent the average number of relevant pages of query suggestions that the subjects issued. 
From the results for the  X  X elevant pages for a search task X , we can see that the subjects could find the most relevant pages when they used interface (a). This suggests that the other interfaces required the subjects to spend longer looking at the additional information and thus they took more time to find relevant pages. The  X  X elevant pages for a suggested query X , on the other hand, indicate that they could find more relevant pages when they used interface (c). The results imply that by displaying the content of search results as feature words in advance, we prevented them from issuing unnecessary query suggestions. Subjective Preferences. Table 2 summarizes the participants X  subjective preferences obtained from the results for the post-task (Q1) and exit (Q2) questionnaires. With regard to Q1, they awarded interface (d) the lowest value compared with the other interfaces. They also considered the additional information in interface (d) to be useless for choosing a suggested query. With regard to Q2, on the other hand, they awarded interfaces (b) X (e) much higher values than interface (a). The especially high values were remarkable for interface (b). It seemed easy for them to assess the for this seems to be that the search result feature and the topic feature become clues to assess whether the search results of a query are relevant to their information needs. We proposed methods of obtaining information useful for assessing whether users could obtain information they required from suggested queries and of incorporating such information into query suggestion interfaces as additional information. We proposed three features: search result features, meaning features, and topic features and the methods for extracting these features. In the future, we plan to devise methods of changing the kinds of features according to queries issued by users. Acknowledgement. This work was supported in part by KAKENHI (# 24240013).

