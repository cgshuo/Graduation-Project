 In the heterogeneous water resource information management domain, a large amount of water resource ontology models are produced, such as meteorological ontology, spatial data ontology. Because more and more water resource informa-tion (data, knowledge) need to be reused by different computation domains, the interoperation among the different water resource ontology models has been the necessary part of ontology research. Many ad-hoc mapping technologies [1],[2] which can only be used in some specific applications have been provided. How-ever, a general technology which can be used in any scenarios to solve all water resource ontology mapping problems still dose not come into being. Therefore, the current real situation is that most of water resource ontology models are loosely coupled or completely separated, which leads the result that the related ontology models can not be effectively managed.

Object-oriented analysis, design and implementation is a maturing filed with many industry standards, and Unified Modeling Language (UML) has been accepted as a general modeling language together with its associated Object Constraint Language( OCL ). At the same time, UML can also be used in rep-resenting ontologies [3],[4], and the related OCL can be extended to satisfy the requirement of the ontology field [5],[6], which provides the possibility of the general ontology mapping technology. There are already several papers in intro-ducing the UML profiles for ontology [7], the focus of this paper is how to use OCL to implement the unified water resource ontology mapping mechanism.
Our solution is an ontology mapping meta-model based on OCL, OCL is a kind of model constraint language, it is flexible and expressive enough for defining all kinds of ontology model definition rules and mapping rules. But the problem is how to describe a large variety of ontology elements in OCL, the kinds and granularity of ontology elements that people cared may be totally different in different scenarios. Set and relation theory solves the problem, it not only has strong expressive power, but also has strong computation capability. Object Constraint Language based on set &amp; relation theory has been the ground of the construction of ontology mapping meta-model.

The remained part of this paper is stru ctured as following. Section 2 mainly introduces the ontology mapping meta-m odel, section 3 mainly introduces the OCL extension for ontology mapping, a case study will be introduced in section 4 and section 5 is a conclusion. A lot of water resource ontology models are loosely coupled or completely sep-arated so that many problems such as synchronization are not possible to be solved. In this paper, a unified ontology mapping mechanism is proposed to re-alize the unified mappings among different water resource ontology models. The key point of the unified mappings mechanism is the unified specification of the ontology mapping. The mapping specification among several ontology models is called mapping model. For different mapping models, they have some com-mon elements and associations. An ontology mapping meta-model is produced to introduce the common structure of mapping models.

Just because OCL is chosen as the model constraint language and set &amp; relation theory is chosen as the theoretical foundation of ontology mapping meta-model, a mapping model can be represented as a relationship set with some constraint rules. The binary mapping model between two ontology models is most basic and common in the ontology mapping, and also is the focus point of this paper. The preliminary UML class diagram [8] of the ontology mapping meta-model is given in Fig.1.

All the elements of the ontology mapping meta-model are classified as 2 kinds: ontology related elements, mapping related elements. These 2 kinds of elements will be introduced separately in the following sections. 2.1 Ontology Related Elements An ontology model composed of some ontology elements is represented as a tuple satisfy in the related domain.

While defining one mapping, it is possible that more than one element in an ontology model is mapped with the other ontology model. Therefore, all these elements related to ontology mappings construct another basic unit that we concerned. This unit is called an ont ology element Set, abbreviated with OESet which is represented as a tuple OESet ( C OESet ,P OESet ,T OESet ), where P
General speaking, an ontology model usually has a large amount of OESets, cording to their types or other criterions, These OESets that have some common characters are called a group of these OESets, shown as OESetGroup in the ontol-ogy mapping meta-model which is represented as a tuple OESetGroup ( Group, T ( C of OESets in this OESetGroup.
 according to these common c haracters: each OESet only has one element; and the type of that element is Class. The common c haracters of this O ESetGroup are de-scribed in a GroupDefinitionRule described in OCL as below: Context Class inv: elements  X  forAll(e | e.size()=1 and ( e.element.type= X  X lass X )). 2.2 Mapping Related Elements A mapping model may include a large amount of mappings which can be clas-MappingClassification is produced, and these common constraint rules are de-fined as MappingDefinitionRule which is also described with OCL like GroupDef-initionRule.

For two ontology models, Ontology M and Ontology N , they are described with two tuples, Ontology M =( M : C set ,M : P set ,M : T set )and Ontology N = is a relationship between these 2 tuples which is represented as: MappingModel M,N =( MC 1 , ..., M C i , ..., M C k ) , ( i =1 ......k ); MC i =( MGroup i ,MT i );
MGroup i =( M apping i, 1 , ...., M apping i,j , ..., M apping i,L M apping i,j =( M : OESet, N : OESet, MT i,j ); MT i = MC i : the NO i mapping classification; MT i : common mapping definition rules set of the NO i mapping classification; MGroup i : the mapping set in the NO i mapping classification; L i : the mapping number of the NO i mapping classification; M apping i,j : the NO j mapping in the NO i mapping classification;
MT i,j : the mapping definition rule set of the NO j mapping in the NO i mapping classification.

Every mapping is an ordered OESet pair, and each of them is a transformation from some elements in Ontology M to some elements in Ontology N.

For example, OESet { Class : m 1 ,Class : m 3 , P roperty : m 5 } is mapped to In the recent years, more and more people adopt UML as ontology modeling language, and OCL defined as a standard  X  X dd-on X  to UML will be widely used in ontology research field. Originally, OCL is the description of complex constraint relation among software models in object oriented software design and development, and now OCL can also b e extended to describe the complex constraint relations among different ontology elements in the ontology modeling and mapping domain[9],[10].

According to the structure of ontology mapping meta-model, OCL can be used in the description of 2 kinds of on tology mapping meta-model elements: OCL for Ontology Related Elements, OCL for Mapping Related Elements. 3.1 OCL for Ontology Related Elements The foundation of ontology related elements is OntologyElement. There are 2 other ontology elements can be represent ed using these 2 elements. Therefore, the OCL constraints in ontology related elements mainly focus on the OCL for ontology property and the OCL for ontology class.

Firstly, the ontology property can be classified as 2 kinds: object property and datatype property, which can be distinguished according to whether they relate individuals to individuals (object properties) or individuals to datatypes (datatype properties). But for brevity, the OCL for these 2 kinds properties will be represented in unified format: P(x,y)(that is: property P relates x to y ).
A number of property characters described in OCL will be defined on the ontology property: (1) An operation which gets the domain or range of the property. context Property::domain (): Set(X) result=elements.x  X  asSet() context Property::range(): Set(Y) result= elements.y  X  asSet() (2) An operation which makes sure whether an ontology property is a transi-tive property. context Property::TransitiveProperty():Boolean p.xandf.y=q.y) (3) An operation which gets the inverse property individual of a certain prop-erty individual. context Property::inverseOf( Property:p ): Property (4) An operation which makes sure whether an ontology property is a sym-metric property. context Property::Symme tricProperty():Boolean (5) An operation which makes sure whether an ontology property is a func-tional property context Property::FunctionalProperty():Boolean (6) An operation which makes sure whether an ontology property is a sym-metric functional property context Property::SymmetricFunctionalProperty():Boolean (7) Some invariant constraints which describe some features of the ontology property context Property
The new OCL keywords:  X  X llPropety X ,  X  X llValuesFrom X ,  X  X omeValuesFrom X ,  X  X ardinality X  have been added into the OCL keyword list to satisfy the require-ment of ontology field.

Secondly, a number of OCL constraint operations about ontology class will be defined on the ontology class: (1) Intersection: get the inters ection of several ontology class context OWLClass::intersectionOf(OWLClass:a,OWLClass:b) : OWLClass ements  X  include(e) ) /*TSet stands for the set of all ontology instance in the domain*/ (2)Union: get the union of several ontology class context OWLClass::unionOf(OWLCl ass:a,OWLClass:b,TSet) : OWLClass ents  X  include(e)) (3)Complement: get the complement of certain ontology class context OWLClass::complemen tOf( OWLClass:a ) : OWLClass (4) DisjointWith: ensure whether a ontology class is disjoint with another ontology class context OWLClass::disjointWith(OWLClass:a, OWLClass:b) : Boolean
These OCL constraints for ontology property and class can be used in the definition of GroupDefintionRule. 3.2 OCL for Mapping Related Elements For a concrete binary mapping, generally speaking, mapping starts from an OESet and ends in another OESet, these 2 OESets will have different names: the previous is  X  X omain X , the latter is  X  X ange X , and each mapping pair has 2 members: xandy,  X  x, y, x  X  domian, y  X  range . For this kind of binary mapping, there are several general basic OCL constraint rules. 9 of them are listed in the below: (1)An invariant constraint ensures that the elements of mapping pairs in the mapping are selected from the 2 OESets (domain and range).

Context MappingPair (elements.y  X  asSet()) (2)An invariant constraint ensures that no 2 mapping pairs in the mapping refer to exactly the same domain and range elements.

Context MappingPair inv: elements  X  forAll(e,f | (e.x =f.x and e.y=f.y) im-plies e=f) (3)An image operation which gets the set of elements from the range actually mapped onto, under the mapping.

Context MappingPair:: image(): Set(Y) post: result = elements.y  X  asSet (4) An inverse image operation which gets the set of elements from the domain actually mapped from, under the mapping.

Context MappingPair:: inverseimage(): Set(X) post: result=elements.x  X  asSet (5) The mapping is surjection, if the image is the range and the inverse image is the domain
Context MappingPair:: surjection(): Boolean (6) The mapping is functional, if and only if an element of the domain maps to at most one element in the range.

Context MappingPair:: isfunctional(): Boolean (7) The mapping is an injection, if and only if, an element of the domain maps to at most one element in the range and an element of the range is mapped to from at most one element in the domain.

Context MappingPair:: isinjection(): Boolean (8) The mapping is a bijection if it is both an injection and surjection.
Context MappingPair:: isbijection(): Boolean (9) Finding all the mapping pairs in the mapping which mention an element in the range or domain.

Context MappingPair:: domainFinding( x ) : Set( MappingPair )
Context MappingPair:: rangeFinding( y ) : Set( MappingPair ) These OCL constraints for binary mapping can be used in the definition of MappingDefintionRules. Here we discuss a very typical example to show the main principle of our ap-proach.

Let us assume that there are two UML formatted ontologies A (English On-tology about Vehicle in Water Resource Equipment Domain) and B (Chinese Ontology about Che in Water Resource Equipment Domain), see the Fig.2.
An ontology mapping model of this paper is for two ontology models, and mapping models are often defined with some GroupDefinitionRules and Map-pingDefinitionRules. In the Ontology Mapping Meta-model, a GroupDefinition-Rule is used to define an OESetGroup, and a MappingDefinitionRule is used to define a MappingClassification.

Group 1 ( OESetGroup ) is defined in the Ontology A, its OCL GroupDefi-nitionRule is as follow: GroupDefinitionRule1: nctionalProperty()) and exists ( ec.ConnectWith. TransitiveProperty())))
This GroupDefinitionRule indicates that each concept (class) of the OESets in the Group1 has a functional property(HasMaker) and a transitive prop-erty(ConnectWith), and all concepts of an OESet are disjointed with each other. Truck, Motorcycle, Train } , { Truck, Bus, Salooncar } ,...... } (see the Fig.2).
There are 2 OESetGroups defined in the Ontology B: Group2 and Group3, their OCL GroupDefinitionRules are as follow: GroupDefinitionRule2: nctionalProperty()))) This GroupDefinitionRule indicates that each concept of the OESets in the Group2 has a functional property(Changjia). This OESetGroup can be repre-(see the Fig.2).
 GroupDefinitionRule3: nctionalProperty() ) ) ) This GroupDefinitionRule indicates that each concept of the OESets in the Group3 has a functional property(Changjia), and all concepts of an OESet are disjointed with each other. This OESetG roup can be represented as the following set: { ......, { JiaoChe, KeChe, KaChe } ,...... } (see the Fig.2).
It is clear that each MappingDefinitionRule can generate a MappingClassifi-cation for two ontology models, and a set of MappingDefinitionRules together with associated GroupDefinitionRules can construct a mapping model for two ontology models. For the ontology mapping model between Ontology A ( En-glish Ontology about Vehicle ) and Ontology B(Chinese Ontology about Che), the following 2 MappingDefinitionRules described in OCL can be given: MappingDefinitionRule1 ( X  X roup1-Group2 X ): in the range*/ Group2OESet.includes(Sety) and Mappings.link (Setx,Sety) )
MappingDefinitionRule1 has defined the characters of the MappingClassifica-jection and functional, and the previous OESet (Setx) belongs to Group1OESet, the latter OESet ( Sety ) belongs to Group2OESet, and the returned result of Mappings.link ( Setx, Sety ) is true. MappingClassification1 can be repre-{ ZiXingChe, QiChe, MotuoChe, HuoChe } ),...... } .
 MappingDefinitionRule2( X  X roup1-Group3 X ): Group3OESet.includes(Sety) and Mappings.link(Setx,Sety) )
MappingDefinitionRule2 has defined the characters of the MappingClassifi-cation2, this rule indicates that each mapping of the MappingClassification2 is bijection, and the returned result of Mappings.link ( Setx, Sety ) is true. Map-Salooncar } , { JiaoChe, KeChe, KaChe } ),...... } .
 Where link (Set, Set) is predefined operation as below:
Context Mappings:: linkelement ( x : Class , y : Class ): Boolean /*return the relation between x and y */
Context Mappings:: link ( setx : Set, sety : Set ): Boolean element in the range*/ (sety=NULL) Just because UML has been used as ontology modeling language, and OCL can be extended to satisfy the requirement of the ontology engineering, we have presented an water resource ontology mapping approach based on OCL which can be easy understood through an ontology mapping meta-model. This mapping meta-model contains 2 kinds of elements: ontology related elements and mapping related elements, and OCL has been extended to define the constraint rules of these two kinds of mapping meta-model el ements: 7 OCL constraint rules about ontology property and 4 rules about ontology class are listed in the section 3.1, and 9 rules for mapping are listed in the section 3.2.

Finally, a case study about water resource ontology mapping between the ontology A:  X  X nglish Ontology about Vehicle in Water Resource Equipment Do-main X  and ontology B  X  X hinese Ontology about Che in Water Resource Equip-ment Domain X : is introduced, a lot of new OCL constraints mentioned above have been used and combined.

We have done a lot of experiments on the approach. The approach has been applied in three projects. One is funded by the National High Technology Re-search and Development Program of China (No. 2002AA411420), another is sup-ported by the Natural Science Funds of China(60374071), and the third one is supported by the Shanghai Commission of Science and Technology Key Project (03DZ19320). In the experiments we found that object constraint language with a little extension can be used to describe almost all MappingDefinitionRules and GroupDefinitionRules.

