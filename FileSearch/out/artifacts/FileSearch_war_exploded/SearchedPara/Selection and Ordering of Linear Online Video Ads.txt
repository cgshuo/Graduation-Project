 This paper studies the selection and ordering of in-stream ads in videos shown in online content publishers. We pro-pose an allocation algorithm that uses a collective measure of price and quality for each ad and factors in slot-specific con-tinuation probabilities to maximize publisher revenue. The algorithm is based on cascade models and uses a dynamic programming method to assign linear (video) ads to slots in an online video. The approach accounts for the negative externality created by lower quality ads placed in a video, leading to viewer exit and thereby preventing the publisher from showing the subsequent ads scheduled in that session. Our algorithm is scalable and suited for real-time applica-tions. A large log of viewer activity from a video ad platform is used to empirically test the algorithm. A series of sim-ulations show that our algorithm, when compared to other algorithms currently practiced in industry, generates more revenue for the publisher and increases viewer retention. Information systems [ World Wide Web ]: Online adver-tising; Theory of computation [ Algorithm design tech-niques ]: [dynamic programming]; Information systems ap-plications [ Multimedia information systems ]: [Multi-media streaming] Linear online video ads; Revenue maximization; Viewer re-tention; Dynamic program; Scalable real-time algorithm.
In this paper, we study the linear ad allocation problem in an online video. A linear ad is an in-stream interactive advertising medium, in which the ads appear before, during, and after an online video. According to the 2013 annual rev-enue report from the Interactive Advertising Bureau, digital video has grown into a $2.8 billion industry and remains the c  X  one of the fastest growing format of the display market [1]. The rise of online video has motivated the rapid growth of video ads in this medium.

We approach the allocation process of linear ads by con-sidering the externality that each ad imposes on subsequent ads. An inferior ad can make the viewer leave the session or even the publisher X  X  site or application [2]. This exter-nality on the publisher reduces the opportunities to show ads because unlike other types of in-stream ads, like overlay and companion ads, linear ads interrupt the video. When a viewer quits a session due to linear ad, subsequent ads in that video are not watched and need to be rescheduled to a different video session. Therefore, decisions related to the choice and positioning of ads in these videos should account for this externality.

In this paper we propose an algorithm that selects and orders linear ads for a video session through a dynamic pro-gramming approach that accounts for ad prices, ad quality, and externalities from other ads. Our algorithm also consid-ers the slot-specific continuation probabilities, i.e. the effect of slot (or the position of the ad in the video) on viewer re-tention. It is assumed that ads are non-skippable and each slot has only one ad. The objective of this algorithm is to se-lect ads for each slot so that publisher revenue is maximized and retention is increased. Our paper is the first empirical work on the ad allocation problem in linear ads. Method-ologically, we contribute to the existing body of work on Internet ads, by proposing an algorithm that accounts for slot-specific continuation probabilities, but still maintains a compute-time and scalability fit for real-time applications.
We apply the proposed approach to data from a video ad platform that manages the selection and positioning of ads for online video publishers. A series of simulations are done to determine the effectiveness of the proposed algorithm over the existing system. We show that our algorithm improves the revenue of the publisher by nearly 9% compared to al-ternative common practices and increases average retention in the video by nearly 14%.
 The paper continues with a literature review in Section 2. The description of the industry and dataset is presented in Section 3; Section 4 explains the ad allocation model and the dynamic programming algorithm, Section 5 discusses the relative performance of our algorithm compared to other methods, and Section 6 concludes.
In the last two decades, there has been substantial volume of work done on online advertising, particularly in revenue management through ad allocation. In sponsored search, advertisers participate in auctions for slots and search en-gines use these bids to allocate slots [2, 3, 4, 5, 6, 7]. A comprehensive summary of sponsored search auctions could be found in Qin et al. [8]. Methods have also been explored to optimize allocation with respect to target number of im-pressions for each ad, by using linear programming [9, 10] or dynamic programming [11, 12, 13]. Further, authors have proposed ad allocation algorithms along with new pricing structures, for broadcasting media and online media [12, 13, 14, 15, 16].

In order to measure ad quality, which affects the efficiency of allocation, researchers have suggested using click-through rates as a metric of ad quality, and consequently proposed showing online ads based on the decreasing order of the product of bid values and click-through rates [17, 18, 19, 20]. Other measures of ad quality have been conversion rate and bounce rate [21]. Since none of these measures of quality are known a priori , scheduling ads must balance exploration with exploitation [22]. With the probability of clicks or con-versions being very low in video ads, few recent papers have explored statistical models based on logistic regressions to evaluate ad quality of video ads [2, 23, 24, 25].

Besides its own quality, an ad in a video session is also affected by the externality imposed by other ads shown be-fore it. Kempe and Mahdian, in [12], and Aggarwal et al. , in [13], addressed this issue by extending the work of Craswell et al. , in [26], on cascade models and proposed a theoreti-cal cascade model for search advertising that accounts for price bids and externalities created by the ad quality on total viewership. In their models, they design an optimal algorithm to assign the ads to different slots of sponsored search through a dynamic program where a viewer makes independent decisions with ad specific probabilities whether to continue scanning or to exit. But the optimality of the above algorithms is lost when slot-specific effects on viewer retention are considered. A similar problem is studied by Wilbur et al. in the context of television, where they solve the assignment of TV ads in a commercial break for het-erogeneous viewer segments to maximize the audience value to the advertiser [2]. However, this algorithm cannot be implemented for real-time applications.

More recently, models proposing contextual advertising, and calculating optimal number of ad slots in online videos have been studied [27, 28]. In this paper we assume slots are pre-determined by publishers. We extend the analytical work on cascade models in sponsored search to an allocation algorithm for linear ads in digital videos. Our work adds to this literature by proposing a real-time, scalable algorithm which accounts for slot-specific ad tune-away propensities along with ad prices, ad quality and the externality experi-enced by each ad from other ads.
With the significant growth in viewership of digital con-tent, linear ads have become a major source of revenue for online publishers. These ads are generally shown at the be-ginning of the video (pre-roll), during the video (mid-roll), or at the end of the video (post-roll). The position of an ad in a particular video becomes very significant as the rate of completion of the ad vary based on the slot in which it is placed. Although absent in our data set, each break can have multiple ads for some publishers.

Traditionally, the target impressions for an ad is deter-mined by dividing the budget of the ad campaign (set by the advertiser) with the cost per mille (one thousand) im-pressions or CPM (set by negotiation between publisher and advertiser). An advertiser, at a premium, also has the option of selecting priority levels, where an ad with higher prior-ity gets higher preference in selection and slot-positions in a video session.

There are often intermediate video ad platforms who em-bed and select ads in the video stream for different publish-ers, and are also responsible for meeting the target impres-sions for each ad. Our data comes from one such video ad platforms. The data has information on viewer activity dur-ing linear ads shown in online videos on a popular publisher. We use log data collected over a period of one month, with the volume of the data running into billion of events per day.
In our dataset, we chose ads for which we have complete information. We further restrict our data set to heavy users who has at least 10 sessions per month and a maximum of 20 sessions per day. This kind of selection also helped us to create state dependence variables for each user, which we use in calculating ad quality. We limit the dataset to the US viewers given that this was the largest geographic group in our dataset. With this selection, we have 19 ads shown in 19.09 million video sessions accessed by 650,000 users.
Figure 1 shows the slot-specific continuation probabilities for the ads in our data set and highlights an interesting viewing behavior. The continuation rates of ads in pre-roll (83%) is less than that in the first mid-roll (92%). However after the first mid-roll, the continuation rates monotonically decrease, almost linearly, until the post-roll (19%), where there is a sharp decline. Thus the effect of slot on contin-uation becomes an important factor in the measurement of ad quality. We note that there is a selection issue since a viewer can only reach a mid-roll ad if she has watched the pre-roll ad. Similar selection issue stands for post-roll ads.
For each ad placed in a video, we have information on video characteristics (genre, duration), ad characteristics (industry of the advertiser, duration), session characteristics (when the video was viewed, weekday/weekend, whether the ad was clicked on, slot of the ad) and viewer characteristics (how many times a viewer has watched the ad before, and ad viewing propensity). We utilize this information to con-struct a quality measure of an ad based on viewer retention. This measure, called the continuation rate , is defined as the probability that a viewer will watch an ad completely and will continue to the rest of the video [2, 24]. Continuation rate of an ad is estimated by an econometric model pro-posed in Kar et al. [24], where along with the ad-intrinsic Note: Real CPMs have been scaled for data confidentiality. features, factors like video characteristics, ad characteristics, session information, and viewer behavior are factored in to create the quality metric. In Table 1, we show the CPM of the ads and their estimated continuation rates. Construct-ing ad continuation rates specific to users and videos would further enrich the efficiency of our proposed algorithm and could be pursued in future research.

Please note that the dataset has some limitations: it is limited regarding viewer demographics, capturing only geo-graphical information and the platform (e.g., Windows, Mac OS, etc.). Further, the data in our sample covers only those videos in which ads cannot be skipped and where users can-not start a video from the middle without going through the pre-roll. Finally, in our sample data we observe that, on an average, fifteen percent of viewers have watched only one video in fifteen days. We overcome this limitation by restricting our data to only heavy users.
In our framework, we have three agents: the viewer, the advertisers, and the publisher. Once a video is selected by a viewer, the publisher X  X  decision is to define the number and position of the slots in that video, and choose ads to show in those slots. The viewer X  X  decision is whether or not to watch through an ad and continue to the rest of the video. A publisher chooses ads from a set of N ads to display in J slots in an online video session (assume, without loss of generality N  X  J ). Linear ads could be placed in slots before, during, or at the end of a video. Each advertiser i -with a certain campaign budget -negotiates with the publisher a CPM, b i for its ad a i and also a target number of times t i that the ad needs to be shown. Therefore b i  X  t i is the campaign budget of the advertiser. Any ad shown beyond the target impressions is not paid by the advertiser. The publisher X  X  revenue from each video comes from the cumulative price of the ads watched by the viewer in the video. In our model, each ad, a i , has a continuation rate c i . If the viewer decides not to watch the ad, she starts a different video or moves to a different website, with a probability of 1  X  c i .
In our model, we assume the following: 1. Each video starts with a pre-roll ad and ends with a 2. The model assumes that none of the ads can be skipped. 3. The model also assumes that only one ad is placed in 4. The viewer decides to continue watching the video be-5. In addition to a continuation rate ( c i ) of an ad, the re-
We build our model as a cascade model [12, 13, 26]. Cas-cade models have been previously used to solve ad assign-ment problems in search ads. In both search ads and linear ads, a publisher is trying to determine which ads to pick and in what sequence to show them.

We first illustrate how the expected revenue is calculated with two ads in a video and then extend that to a generic form. Let a i and a i 0 be two ads selected for two consecutive slots in a video. The CPM and continuation rates of each specific continuation probability is  X  j . The expected revenue from ad a i in slot 1 would be b i .c i . X  1 . For the second slot, the expected revenue from ad a i 0 is also influenced by the probability of reaching that slot, given by the continuation rate of ad a i . So the overall expected revenue from second from ads a i and a i 0 placed consecutively in the first two slots is given by b i .c i . X  1 + b i 0 .c i 0 c i . X  2 given an assignment ( a 1 ,...,a j ) of ads to J slots, the overall expected revenue is given by:
As shown in Equation 1, the probability of reaching a slot j is affected by the continuation rates of the previous ads. We express this as a Cascade Probability for slot j , i.e. where c i is the estimated continuation probability of ad a and C j is the estimated cascade probability of reaching slot j starting from slot 1. In order to maximize revenue, the publisher has the following objective function:
At each slot j , b j i -the price b i for ad a i placed in slot j , is scaled by three factors: c j i (which is the continuation rate c i of ad a i placed in slot j ), the slot-specific continu-ation probability (  X  j ) and a cascade probability C j carried over from the ads shown before it. An ad a i is valid for selection at time t only when the total number of impres-sions ( P t  X  1 1 n ( a i )) shown for that ad till time t  X  1 has not reached the target impressions t i as specified by the adver-tiser i . Since impressions shown beyond the target are not paid by the advertiser, the target impressions is used as a constraint for the revenue maximization function. To maxi-mize this function, we require the values b i ,  X  j , c i each slot j . While b i is decided through negotiation between the advertiser and the publisher; c i and  X  j are estimated from log data of viewer activity; and C j is calculated from the product of continuation rates ( c i ) of ads placed before slot j .

In our model the revenue function, as described in Equa-tion 3, is dependent on the characteristics of the ad as well as on the slot-specific continuation rates. We solve the revenue maximization problem in two stages:
Stage 1: We consider the case where the slot-specific prob-ability (  X  j ) is linearly decreasing in j . Under this restrictive assumption, we find an optimal solution to the maximize revenue by using a dynamic programming algorithm.

Stage 2: We relax the assumption that slot-specific con-tinuation probabilities linearly decrease as the video session progresses. We assume that the slot-specific continuation probability increases from pre-roll to the first mid-roll, and decreases linearly after that (see Figure 1). Further, we give a near-optimal heuristic solution to the revenue maximiza-tion problem.
Before we describe the algorithm, we describe some prop-erties of the optimal assignment.
As shown in Figure 1, other than the pre-roll, the reten-tion in ads drops almost linearly through the mid-roll till it reaches the post-roll. Let us assume that the retention is lin-early decreasing across all the slots. This assumption allows us to create a constant,  X  , which is the ratio between the slot-specific continuation probability of the next slot com-pared to the present slot, i.e.  X  =  X  j +1 / X  j .
Extending the proposal given by Aggarwal et al. [13], we further define a slot-adjusted CPM for each ad a i , which impression multiplied by the inverse of the negative effect of the ad. Therefore, slot-adjusted CPM is a combined measure of price and quality of the ad. We explain the importance of this quantity through Lemma 1 .

Lemma 1: In the most efficient assignment, the selected ads are placed in the decreasing order of slot-adjusted CPM (
Aggarwal et al. [13] proposed that selected ads are placed in the decreasing order of ( b i .c i 1  X  c However, this order does not account for slot-specific con-tinuation probability (  X  j ). Once  X  j is considered, the order does not hold when extended to more than two ads.

Proof: Suppose that the optimal assignment is ( a i , a i The CPM and continuation rates of each ad is given by ( b ,c i ) and ( b i 0 c i 0 ); and the slot-specific continuation prob-abilities are  X  1 , X  2 . The corresponding expected revenue, as explained in Equation 1, is given by
Since the above arrangement is optimal, then the alternate sequence, i.e. where ad a i 0 is shown before ad a generate a sub-optimal revenue ( R 0 ).

Since R  X  R 0 , algebraic manipulation yields,
Dividing both sides of Equation 4 by  X  1 , implies
Since the ratio of  X  j +1 / X  j will vary between every pair of slots, the above order between two ads cannot be generalized to all ads in J slots.

But if we assume that the continuation rates are decreas-ing linearly across the slots, then  X  j +1 / X  j is a constant. Let
Substituting  X  in Equation 5, implies
This assumption of linearity allows us to extend the above order between a pair of ads to any number of ads in our inventory, i.e. for J chosen ads the following relationship Lemma 1 ensures that an ad with higher slot-adjusted CPM will always come before an ad with lower slot-adjusted CPM under the most efficient assignment. This property helps to reduce the number of combinations of ads to be compared to find the optimal allocation. Thus, Lemma 1 provides an important simplification to the algorithm needed to solve Equation 3. However, Lemma 1 does not tell us which ads to choose. Selecting top J ads from the decreasing order of slot-adjusted CPMs would not necessarily give the optimal assignment, as that selection does not account for the externalities imposed on an ad by ads shown before it.
Usual allocation of linear ads in online video is based on a simple ranking system, i.e. an ad a i dominates ad a i a specific slot j , by having a higher CPM, i.e. ad a always appear whenever ad a i 0 appears and in an earlier position. However as shown in Lemma 1, whether an ad a is shown before a i 0 will also depend on the order of the slot-adjusted CPM. So higher CPM alone is not sufficient to guarantee selection and an earlier slot. But, as proved in Aggarwal et al (2008), if a i has a higher CPM as well as a higher slot-adjusted CPM then it does ensure the selection and positioning of a i before a i 0 . So an ad a i is dominant
To maximize publisher X  X  revenue from a video session, a dynamic programming method is used, which finds the op-timal allocation by iterating over all possible combinations after arranging ads according to decreasing order of slot-adjusted CPM. Given N ads and J slots, the problem of assigning ads to slots translates to a problem of optimal selection of J ads out of N . This problem boils down to selecting ads based on whether the selection improves the total revenue.

First, we sort ads according to slot-adjusted CPM as de-scribed in Lemma 1. Let R [ i,j ] be the optimal solution (the maximum expected revenue) of assigning ads from the set { a i ,a i +1 ,...,a N } ads into slots j,j +1 ,..,J , where 1  X  i  X  N and 1  X  j  X  J . The dynamic program is solved in a back-ward recursive way. If ad a i has been selected in slot j , then the optimal value of R [ i,j ] accrues values from ad a i as from the ads in the subsequent slots. Otherwise, R [ i,j ] should be assigned the value of R [ i + 1 ,j ]. Assuming that R [ i + 1 ,j ] is computed optimally, R [ i,j ] would also yield the optimal value. So, R [ i,j ] can be recursively defined as
R [ i,j ] = max { R [ i + 1 ,j ] ,b i .c i . X  j + R [ i + 1 ,j + 1] .c
The above recursive equation represents an optimal se-lection of J ads. For N = J , there is only one selection possible -all ads must be selected. For N &gt; J , for each i and j , R [ i,j ] can be computed based on whether the selec-tion of ad a i in slot j increases the total value. So, a be selected in slot j if b i .c i . X  j + c i .R [ i + 1 ,j + 1] has higher value than R [ i + 1 ,j ]. On the other hand, if R [ i + 1 ,j ] is greater that signifies that an ad which is lower in the order is adding more value to the allocation -therefore ad a i not be selected for slot j . Since this recursive function is solved backwards, the maximum expected revenue is given by the entry in R [1 , 1].

While the R matrix stores the maximum expected rev-enue for every ad-slot combination, it does not store the ad allocation. For that we define a selection matrix S with di-mensions i  X  j where each cell represents whether ad a i is a viable candidate for selection in slot j . If ad a i could be selected in slot j , then ( S [ i,j ] = 1), otherwise ( S [ i,j ] = 0). Then, S [ i,j ] can be defined as  X  S [ i,j ] = Intuitively, an ad a i is suitable for slot j, only if its inclusion in the ad sequence adds more to the accrued revenue (from ads in subsequent slots) than the revenue accrued at the ( i + 1) th position. Once S i,j is calculated for every ad-slot combination, we know which ads are viable for selection in each slot. Beginning with the first slot, we choose the one with the highest slot-adjusted CPM among all viable ads for each slot. Please note that once an ad has been chosen for any slot, it cannot be chosen again for any of the subse-quent slots even if the selection matrix S shows it as a viable candidate for one or more of the following slots.

The above algorithm runs in time O ( n log n + nj ) and brings down the computational complexity from exponen-tial ( O ( n j )) to linear. As the dynamic programming uses a backward recursion, an ad could be selected for a slot only after the ads for subsequent slots have been selected. So the entire allocation needs to be done before the video is played, and thus the algorithm needs to be run in real-time.
In this section we consider an extension of the publisher X  X  revenue maximization problem. Specifically, we relax the assumption that the slot-specific continuation probability is monotonically decreasing over the course of the video. This is a much harder problem to solve than what we addressed in Section 4 . 2. The key to solving the optimization problem in Section 4 . 2 was Lemma 1 which does not hold in this case (as  X  is no longer constant). As exhibited in Figure 1, the decreasing monotonicity is broken by the fact that the first mid-roll has a higher continuation probability than pre-roll.
However, we note that the mid-roll slots tend to exhibit decreasing monotonicity. This leads to a 2-step heuristic algorithm (2SHA) which we describe in more detail below. The basic idea is to first solve the sub-problem of which ads to place in the mid-roll slots. We will solve this problem by exploiting the decreasing monotonicity of the slot-specific probabilities in the mid-roll slots. Then in the second step, we find the best ads to show in the pre-roll and post-roll.
Step 1: Here we introduce a sub-problem that will aide us in selecting the mid-roll ads. Our original optimization problem is as shown in Equation 3. In our sub-problem, we define a new optimization problem as where our decision variable is to allocate ads only in the mid-roll. Our approach is to use dynamic programming, in a way similar to Section 4.2.4.

We define the function a as the configuration of ads to be shown, i.e. a j gives the ad that is shown in the j th slot of the video, for j  X  { 1 , 2 ,...,J } . Now we run the following sequence: i. Let N be the set of all available ads and denote the configuration of this sub-problem as a s = { a 2 ,...,a and denote the set of all ads shown as A = { a 2 ,...,a j  X  1 ii. Solve sub-problem again with N  X  X  ads and define the sequence of ads chosen as a 0 s = { a 0 2 ,...,a A
Step 2: With the selected allocation for mid-roll spots from Step 1, in this step we find the ads for pre-roll and post-roll as follows: i. Exhaustively try all combinations of ads in pre-roll. For each ad a that is selected in the first slot (pre-roll), if a /  X  X  then the ad with maximum revenue in the set N X  X  X  X  a } is assigned as a j (post-roll ad), otherwise if a  X  X  then the ad with maximum revenue in the set N  X  X  0  X  X  a } is assigned as a j (post-roll ad). ii. For every ad a in pre-roll, the configuration chosen is given by ( a,a 2 ,...,a j  X  1 ,a j ) if a /  X  A , otherwise the config-uration is given by ( a,a 0 2 ,...,a 0 j  X  1 ,a j ) if a  X  X  , and denote the resulting expected revenue by R a . iii. Select the configuration with the maximum revenue.
In Step 1 of 2SHA, we select the top two configurations ( a s and a s 0 ) for the mid-roll slots. Assuming there is a huge repository of ads, then the top two candidates should give similar expected revenue. Next, we exhaustively try all ads in pre-roll. For each ad that is selected in pre-roll, we use the configuration a s in mid-rolls if possible. However, it might be possible that the ad that is selected for pre-roll has already been selected in mid-roll. In that case for mid-roll we choose to show the alternative configuration a 0 s does not change the expected revenue significantly. Finally, in the last slot, from the ads which are not yet selected, we select the one that gives the maximum revenue, since the continuation probability at this point is irrelevant.
The primary objective of 2SHA was to maximize the ex-pected revenue for the publisher and increase viewer reten-tion. In this section, we present a series of simulations to as-sess the performance of 2SHA toward achieving these goals. To run the simulations we need the CPM of each ad, tar-get impressions for each ad, continuation rates for each ad and the slot-specific continuation probabilities. Ad continu-ation rates and slot-specific continuation probabilities are es-timated from our dataset; CPMs and target impressions are deduced from the data we have on advertisers X  campaigns.
As explained in Section 4 . 3, 2SHA assumes that the slot-specific continuation probabilities are linearly decreasing in mid-rolls. This approximation will always provide an allo-cation whose expected revenue would be sub-optimal com-pared to the one where we enumerate over all possible com-binations of ads. In this section we run simulations to see if the loss in having a sub-optimal allocation by 2SHA is sub-stantial to render this algorithm ineffective. We also high-light how the computation time required to find the global maximum makes it impractical for real-time application.
To run this simulation, we set J = 4 , 5 and the inven-tory of ads N = 20 , 25 , 30. We run 50 simulations for each combination of J and N where we vary the CPM of the ads between $100 to $500. In order to have a greater variance between retentive and less retentive ads, we vary the contin-uation rates between 0 . 5 and 0 . 95. The cost of finding the global optimum increases exponentially as we increase the slots ( J ) and inventory of ads ( N ). Therefore the compari-son is made only for smaller values of J and N.

Table 2 shows that difference in average revenue between allocation by 2SHA and by enumeration is less than 5% in all the simulations. But most importantly when an ad in-ventory reaches 30, computation time by enumeration is to the order of one hour and thirty minutes and increases ex-ponentially as J and N increase -which makes it infeasible for real-time application. However the computation time in 2SHA never exceeds 0 . 1 seconds on an Intel Core i 7 2 . 7 GHz processor with 16 GB RAM. In this section, we compare 2SHA with two other methods. The objective of this simulation is to quantify the increase in revenue and audience retention by implementing 2SHA. The publisher has two goals to accomplish through the ad allo-cation process: monetization and audience retention. The former goal can be achieved by choosing the ad with highest CPM for a slot; and the later by choosing the ad with highest continuation rate for the slot. However these two goals can often be in conflict with each other and can be viewed as a trade-off. Ideally, to maximize revenue, the publisher would want the trade-off between these two goals to change as the video progresses. At the beginning of the video, retention is most important and toward the end of the video mon-etization is more critical. The dynamic program in 2SHA ensures that the best possible trade-off is made in selecting ad in every slot. The two alternatives that we compare with 2SHA are: i. Sorting based on CPM : In this method, ads are ar-ranged according to the descending order of their CPMs and the publisher chooses the top J ads to fill the slots in a video session. The objective behind this method is to maximize the immediate revenue available from a single slot by showing the ad with the highest CPM first. This method completely ignores the continuation rates of the se-lected ads. In this situation, it is possible that an ad placed earlier on in the video has a low continuation probability and the viewer quits the video during that ad. Therefore the publisher might maximize revenue from that particu-lar slot, but might lose overall revenue expected from ads in the subsequent slots. This is the most common method practiced in this industry. ii. Sorting based on Slot-Adjusted CPM : In this paper we have defined slot-adjusted CPM as b i c i 1  X   X .c collective measure of the price and the quality of the ad. In this rule, the ads are sorted based on slot-adjusted CPM and the top J ads are selected for J slots in a video session. This method provides a trade-off between monetization and retention, but the trade-off does not change as the video progresses.
To compare the three algorithms described above, we run the following simulation 100 times. For each simulation, we assume that the publisher needs to design an allocation of ads for 50 video sessions. Each video session is assumed to have 5 slots and in each slot only one ad can be inserted. Showing the same ad more than once is not allowed within a video session, maintaining conformity with the publisher X  X  practice. With 50 video sessions and 5 spots in each session, publisher now has the opportunity to show 250 impressions. We choose a cumulative target impressions for the focal 19 ads as 300. Individual target impression of these ads are computed from the original ratios between target impres-sions of these ads as provided in the data. The total target has been set as 300 so that during allocation the individual target of some of the ads are reached and thereby identical sets of ads are not selected for all video sessions. For 2SHA, we also need to have an estimate of  X  -the factor by which the slot-specific continuation rates decreases in consecutive mid-rolls. For our algorithm, we use  X  = 0 . 8 which was calculated from the ratios of the mean drop in viewer pop-ulation during successive mid-rolls in our data. The CPMs and ad continuation rates used for these 19 ads are the ones presented in Table 1. For every ad in a video session, we ran-domly draw from uniform distribution [0 , 1] to simulate the continuation rate for a viewer to continue with the ad. If the simulated rate is higher than the estimated ad continuation rate, the viewer exits the session.
Three algorithms were compared: sorting based on CPM, sorting based on slot-adjusted CPM, and 2SHA. Table 3 presents the performance statistics of these algorithms in terms of publisher revenue and audience retention. Revenue is calculated by the sum of cpms of ads seen by viewers and retention is calculated by the ads seen divided by the ads scheduled. On average, 2SHA outperforms the other two algorithms, both in terms of revenue and viewer retention. Sorting based on slot-adjusted CPM does the worst in terms of revenue. This essentially shows that a constant trade-off between monetization and retention is not optimal and the weightage needs to shift from retention to monetization as the video progresses -as achieved by the dynamic pro-gram proposed in 2SHA. 2SHA generates 9% more average revenue and 14% more audience retention than the sorting based on CPM. This shows that maximizing revenue from each slot may not maximize overall revenue, and that the continuation rates of ads and their externality should be also considered for optimal allocation.
Table 3 shows that 2SHA generates more revenue and in-creases retention compared to the other algorithms investi-gated. However, unlike the other sorting based algorithms which are not iterative, 2SHA is more complex as it needs to explore several combinations of ads to find the optimal sequence. However, we claim that it is still suitable for real-time applications.

To prove this, we run simulations where we vary the num-ber of ads ( N ) available for selection, and the number of slots ( J ) in a video and register the computation time for each simulation. We assume that on a daily basis, a publisher needs to select ads from an inventory that varies between 500 ads to 1500 ads. In our simulation we vary the number of slots from 2 to 7.

As shown in Figure 2, the computation time of 2SHA in-creases almost linearly with the number of ads ( N ) and in the number of slots ( J ). The results show that the maxi-mum computation time registered is 0 . 55 secs which 2SHA requires to find the allocation for 7 slots ( J ) from an inven-tory ( N ) of 1500 ads. Therefore we can see that 2SHA is highly scalable and well suited for real time applications.
Viewership of online video has grown tremendously in the last decade and linear ads have become a potential source of revenue. Our paper develops an allocation mechanism for linear ads in a single video session. For this allocation, we account for ad prices and target impressions provided by the advertisers. Subsequently, we estimate ad and slot-specific continuation rates from a large log dataset of viewer activity. We employ a cascade model in which our dynamic program accounts for slot-specific tune-away probabilities and proposes a scalable algorithm which would run in real-time.

Our results highlight several significant insights. We show that publishers, by accounting for externalities imposed by the ads, generate more revenue than their current practice of selecting based on decreasing order of CPM. In our method, the revenue is maximized by changing the trade-off between monetization and retention at every slot, i.e. placing highly retentive ads in the early slots and gradually shifting to costlier ads at the later slots of the video. Further, we show that our algorithm, compared to alternate algorithms, in-creases viewer retention which helps in building publisher loyalty. Our approach can be generalized for allocation of ads on any digital media.

We conclude with a few comments on the limitations of our model and possible extensions. In our paper we have only accounted for ad externalities for a single video session. It would be interesting to model the impact of ad external-ity on the viewership during multiple video sessions watched by a viewer. Further, our model addresses the target num-ber of impressions as a constraint in the maximization func-tion i.e. an ad could only be considered if the target is not yet met. Additionally, ads with low continuation rates would never be picked. This could lead to underachieving the target and potential loss of clients. So one could explore how the target could be included in the maximization func-tion. Further, algorithms to allocate skippable ads could be explored, which would make the model less restrictive (al-though prohibitively more complex) and increase its appli-cability. Finally, while the linearity assumption significantly reduces the run-time of the algorithm and makes it suit-able for real-time applications, it would be useful to explore other algorithms that could relax this assumption and still generate an allocation close to the global optimum. [1] Internet Advertsing Bureau. Iab internet advertising [2] Kenneth C Wilbur, Linli Xu, and David Kempe.
 [3] Hal R Varian. Position auctions. International Journal [4] Benjamin Edelman, Michael Ostrovsky, and Michael [5] Gagan Aggarwal, Ashish Goel, and Rajeev Motwani. [6] S  X ebastien Lahaie, David M Pennock, Amin Saberi, [7] Li Liang and Qi Qi. Cooperative or vindictive: [8] Tao Qin, Wei Chen, and Tie-Yan Liu. Sponsored [9] David Maxwell Chickering and David Heckerman.
 [10] John Turner, Alan Scheller-Wolf, and Sridhar Tayur. [11] Guillaume Roels and Kristin Fridgeirsdottir. Dynamic [12] David Kempe and Mohammad Mahdian. A cascade [13] Gagan Aggarwal, Jon Feldman, S Muthukrishnan, and [14] VF Araman and K Fridgeirsdottir. Online advertising: [15] Alf Kimms and Michael Muller-Bungart. Revenue [16] Victor F Araman and Ioana Popescu. Stochastic [17] Thorsten Joachims, Laura Granka, Bing Pan, Helene [18] Kinshuk Jerath, Liye Ma, Young-Hoon Park, and [19] Susan Athey and Glenn Ellison. Position auctions [20] Matthew Richardson, Ewa Dominowska, and Robert [21] D. Sculley, Robert G. Malkin, Sugato Basu, and [22] Paat Rusmevichientong and David P Williamson. An [23] Peter McCullagh, John A Nelder, and P McCullagh. [24] Wreetabrata Kar, Viswanathan Swaminathan, and [25] Dan Zigmond, Sundar Dorai-Raj, Yannet Interian, [26] Nick Craswell, Onno Zoeter, Michael Taylor, and Bill [27] Tao Mei, Xian-Sheng Hua, and Shipeng Li.
 [28] Karthik Yadati, Harish Katti, and Mohan
