 DNA Microarray provides a powerful basis for analysis of gene expression. Data mining methods such as clustering have been widely applied to microarray data to link genes that show similar expression patterns. However, this ap-proach usually fails to unveil gene-gene interactions in the same cluster. In this paper, we propose to use graphical modeling based interaction analysis for this purpose. We apply graphical gaussian model to discover pairwise gene interactions and use loglinear model to discover multi-gene interactions. We have constructed a prototype system that permits rapid interactive exploration of gene relationships; results can be validated by experts or known information, or suggest new experiments. We have tested our methodology using the yeast microarray data. Our results reveal some previously unknown interactions that have solid biological explanations.
 Graphical Modeling, Loglinear Modeling, Microarray Data Analysis With the completion of the human DNA sequence as part of the Human Genome Project [27], studies of gene-gene in-teractions are playing an increasingly important role in the search for the causes of human diseases. While individual genes may be responsible for making proteins, proteins usu-ally interact in different physiological processes and path-ways. Clues to the function of an unknown protein can be determined by investigating its interaction with other pro-teins whose functions are already characterized.
 DNA microarrays provide a  X  X napshot X  of transcription lev-els within the cell. It allows the simultaneous examination of thousands of genes in a single experiment. The raw microar-ray images are transformed into gene expression matrices where the rows usually denote genes and the columns denote various samples, conditions, or time points. The unique-ness of microarray data is that genes in rows are of very high dimensionality (e.g., 10 3 -10 4 genes) while samples in columns are of relatively low dimensionality (e.g., 10 1 -10 samples). A major challenge in computational biology is to uncover from such measurements, gene/protein interactions and biological pathways at the molecular level. Exploration of coregulated genes can identify potential members of gene groups responsible for specific physiological processes. In this paper, we investigate two graphical modeling tech-niques (Graphical Gaussian Modeling and Loglinear Mod-eling) for discovering gene interactions based on the cor-relation of their expression profiles. Graphical Gaussian Models (GGM) [28] assume a family of normal distributions for underlying data constrained to satisfy the pairwise con-ditional independence restrictions inherent in the indepen-dence graph. The independence graph generated from GGM is defined by a set of pairwise conditional independence re-lationships that determine the edge set of the graph. The weight of an edge denotes the partial correlation between two genes. The independence graph generated by graph-ical gaussian modeling can give domain users a basic un-derstanding of interactions among a relatively large gene set. This large set might contain several pathways, as it is very likely that multiple signaling pathways interact with one another and the final biological response is shaped by interaction between pathways.
 However, GGM can only detect dependencies that are close to linear. In particular, it is not likely to discover combi-natorial effects (e.g., a gene has an extremely large prob-ability to be over expressed only if several other genes are jointly over expressed, but not if at least one of them is not overexpressed). In this paper, we apply loglinear modeling [2], a methodology for approximating discrete multidimen-sional probability distributions, to discover the multi-way interactions. Loglinear modeling assumes multinomial dis-tributions and needs a discretiztion of microarray expres-sion data. For example, the gene expression values may be discretized to 2 categories, e.g., under-expressed and over-expressed, depending on whether the expression level is sig-nificantly lower than, or higher than control . The multi-way interactions have the potential to reveal complex (and often hidden) gene interactions, which cannot be discovered by other techniques (e.g., association rule, bayesian network, graphical gaussian model ). However, the application of loglinear modeling is constrained by the size of samples as loglinear modeling requires the size of samples should be significantly larger than the number of cells in the contin-gency tables. For example, if the gene expression values are discretized to 2 categories, the contingency table built by 7 genes has 128 (2 7 ) cells which require more than 128 sam-ples. In practice, many biological pathways and processes are known to involve interactions among a relatively large number of genes. For instance, the human p53 signaling pathway contains 16 proteins, while the human integrin sig-naling pathway contains 36 proteins. Hence it is infeasible to apply loglinear modeling directly on those pathways with a relatively large number of genes. In this paper we also in-vestigate graphical decomposition techniques to decompose independence graph into components and apply loglinear modeling on each component.
 Our approach can effectively discover both pairwise inter-actions and multi-way interactions between genes. Further-more, the edge weights of independence graph and the pa-rameters of loglinear modeling can also be used to quantize the interactions between genes. We believe this work will complement current research on gene interactions [26; 4; 32] and can significantly contribute towards the biological an-notations of genes including GENMAPP [9], Gene Ontology [3].
 The remainder of the paper is structured as follows. In Section 2 we review the related work. Section 3 presents our interactive gene interaction analysis framework. We present details of graphical modeling in Section 4. Experimental results are discussed in Section 5. In Section 6 we draw conclusions and describe directions for future work. Clustering algorithms (e.g., CAST [5], MST [33], HCS [15], CLICK [22], BICLUSTER [7]) have been quite successful in the molecular profiling of human cancers, however they are insufficient to identify molecular networks. It is impos-sible to determine the interactions that can exist between different genes from one cluster, especially when a gene can participate in more than one gene network.
 The graphical gaussian models were previously applied for gene expression analysis in [18] where they applied multiple regression procedures with variable selection to get approx-imate partial correlations between any pair of genes. How-ever, multiple regression procedures are infeasible for mi-croarray data sets with thousands of genes because of high computational cost.
 In [8], association rules [1] are applied to investigate how the expression of one gene may be associated with the ex-pression of a set of genes. The kind of rule can be dis-covered is, for example,  X  X hen gene A and gene B are over expressed within a sample, then often gene C is also over ex-pressed X . Theoretically, the association rule method is able to resolve the drawbacks of existing clustering approaches by assigning a gene to many subsets, however, the associa-tion rule method can only capture gene co-expression, and not interactions because it is exclusively based on support measure. Some measures, such as lift [23], pairwise associa-tions [10] have been investigated to overcome the limitations of support-based association algorithms. In this paper, we extend and generalize the previous work by the all k-way interaction model. k -way relationships have the potential to reveal complex (and often hidden) gene interactions, which cannot be explained by any low level interactions. Further-more, our model can also interpret the interestingness of associations by examining loglinear parameters.
 Both graphical gaussian modeling and loglinear modeling are based on correlation measure instead of causality mea-sure. Bayesian network, which is based on directed acyclic graph (DAG) and can provide models of causal influence, has recently been investigated for gene regulatory networks [13; 21]. The advantage of bayesian network is that it gen-erates a directed graph that suggests causal influence. How-ever, bayesian network cannot discover multi-way effects as it assumes only linear interactions. Another difficulty with this technique is that learning the bayesian network struc-ture is an NP-hard problem, as the number of DAGs is superexponential in the number of genes, and exhaustive search is intractable. In microarray data sets, genes in rows and samples in columns are of very different dimensionality (e.g., 10 3  X  10 4 genes ver-sus 10 1  X  10 2 samples). Thus, microarray data sets are very sparse in high-dimensional gene spaces. Our approach is to explore inter-relationships between a subset of genes. Figure 1 shows the framework of our prototype system for interac-tive gene interaction analysis. Specifically, it involves the following steps: 1. Preprocessing: We subject the input data to hierar-2. Graphical Gaussian Modeling: Subsets of genes (clus-3. Decomposition: The independence graph from graph-4. Loglinear Modeling: The genes included in each com-5. Visualization: The user may explore the output of The reason we subject the input data to hierarchical cluster-ing or association rule mining prior to analyzing gene inter-actions has two folds. First, due to the large data size, it is infeasible to apply the GGMs directly to the original data; Second, the correlation matrix is inevitably degenerate, as the matrix rank is bounded by the sample size. Here in our framework, the number of genes contained in each cluster or frequent itemset is usually less than the size of samples, which avoids the matrix rank problem.
 The graphical gaussian modeling method is statistically sound and computationally tractable for analyzing microarray data and inferring pairwise biological interactions from them. As the number of cells in contingency table (which is deter-mined by the number of genes and the number of categories for each gene) may significantly exceed the number of sam-ples, it may be inaccurate to apply for loglinear modeling directly on each subset. Hence, we decompose each subset into components by graphical decomposition techniques and each component is then analyzed by loglinear models. Given the inaccuracies and limitations of clustering and as-sociation rule mining, one cannot assume that the identified subsets of genes are completely independent of the remain-ing genes of the whole genome. Thus, we apply interactive techniques whereby a user can interactively analyze gene interactions by adding or removing any number of genes to/from one subset. To make this interactive exploration intuitive and efficient, we apply information visualization techniques, whereby visual representations present the in-terface to interactive exploration. In this work, we use au-tomatic graph drawing techniques to display and edit gene subsets and their 2-way relationships and use parallel co-ordinate techniques to display multi-gene interactions from loglinear models. We are also working on interactive visual representations for cluster hierarchies as well as association rule mine sets, so as to rapidly focus, view and interactively edit gene subsets of interest. Let S = { s 1 , s 2 ,  X  X  X  , s m } be the set of samples or conditions and G = { g 1 , g 2 ,  X  X  X  , g n } be the set of genes. The microar-ray data can be represented as X = { x ij k i = 1 ,  X  X  X  , n, j = 1 ,  X  X  X  , m } ( n m ), where x ij corresponds to the expression value of the sample s j on gene g i .
 In Section 4.1 and Section 4.2, we discuss graphical gaussian modeling and loglinear modeling respectively. We leave the discussion of graphical decomposition in Section 4.3 and as-sume the number of genes is low or medium (depending on the number of samples and the discretization levels for each gene). Graphical Gaussian Models, also known as covariance se-lection models, assume a family of normal distributions for underlying data constrained to satisfy the pairwise condi-tional independence restrictions inherent in the indepen-dence graph. The microarray expression data, which are log transformed from the raw microarray images, satisfy near multivariate normal distribution due to the nature of exper-imental errors. The independence graph is defined by a set of pairwise conditional independence relationships that deter-mine the edge set of the graph. A crucial concept of applying GGM is that of partial correlation. That is, measuring the correlation between two variables after the common effects of all other variables in the genome are removed. Equation 1 shows the form for partial correlation of two genes g x and g y while controlling for a third gene variable g , where r xy denotes Pearson X  X  correlation coefficient. The partial correlation ( pr xy.z ) of genes g x and g y with respect to gene g z may be considered to be the correlation ( r xy of g x and g y after the effect of g z is removed. If there is no difference between pr xy.z and r xy , we can infer that the control variable g z has no effect. If the partial correlation approaches zero, the inference is that the original correlation is spurious (i.e., there is no direct causal link between the two original gene variables because the control gene variable is either common anteceding cause, or intervening variables). Partial correlations that remain significantly different from zero may be taken as indicators of a possible causal link. It is important to note that partial correlation is different from standard correlation, indicates better evidence for ge-netic regulatory links than standard correlation, as shown from our preliminary results [31], and is in agreement with biological interpretation. Consider the example in Figure 2, that shows the correlation and partial correlation graph over a subset of genes from the yeast data[16]. Figure 2(b) shows pairwise correlations with correlation coefficient greater than 0.65, which indicates positive correlations between any pair partial correlation. of genes. However, partial correlations in Figure 2(a) show no interaction between 15 pairs of genes (genes with high correlations may be controlled by a common gene and not directly linked in the pathway) and even negative interac-tions between three pairs of genes.
 With a set of genes g , the partial correlation can be com-of the inverse of variance matrix ( S = V  X  1 ). It is known that conditional independence constraints are equivalent to spec-ifying zeros in the inverse variance [28]. The method can be sketched as follows: In this section we describe in detail how we screen gene in-teractions by means of building all k-way interaction mod-els and examining their parameters and residuals using mi-croarray data. Here we assume a set of components, S (0) , are given by graphical decomposition techniques, users, or maximal frequent itemset by using Apriori algorithm. For each component, we build all k-way interaction models it-eratively, and screen large gene sets based on the estimates from k-way interaction model. The method can be sketched as follows: The key to finding interactions worthy of examining (those that will join the lists S ( k ) ), is to compute its standardized residual e ( k ) . Equation 2 shows the standardized residual form used in our framework, where y is the actual support of s and  X  y ( k ) is the estimated value given by the k -way in-teraction model. When the model holds, e ( k ) is asymptotically normal with mean 0. In comparing standardized residuals to standard normal percentage points, we obtain conservative indica-tions of cells having lack of fit. When the residual is large, it means that the support of s cannot be explained by the k -way interactions, thus higher order interactions (larger that k ) are at play. Loglinear modeling is a methodology for approximating dis-crete multidimensional probability distributions. The multi-way table of joint probabilities is approximated by a product of lower-order tables.
 Given a value y i 1 i 2  X  X  X  in at position i r of the r th dimension d (1  X  r  X  n ), we define the log of anticipated value  X  y i 1 as a linear additive function of contributions from various higher level group-bys as where the  X  terms are the coefficients of the model. The coefficients corresponding to any group-by G are obtained by subtracting from the average l value at group-by G all the coefficients from higher level group-by-s.
 For instance, in a 4-dimensional table with dimensions A , B , C , D , we use ( i, j, k, l, y ijkl ) to denote the cell in a 4-D cube space, where i = 0 ,  X  X  X  , I  X  1, j = 0 ,  X  X  X  , J  X  1, k = 0 ,  X  X  X  0 ,  X  X  X  , L  X  1. Equation 4 shows the saturated loglinear model which contains all the possible k -factor effects, all the pos-sible k  X  1-factor effects, and so on up to the 1-factor effects and the mean  X  . For example,  X  A i is one-factor effect,  X  AB ij is two-factor effect which shows the dependency within the distributions of the associated attributes A and B ,  X  ABC ijk is three-factor effect which shows the dependency within the distributions of all the associated attributes A, B, and C . It is important to note the multiple-factor effects can capture the complex in-teractions such as catalysis and cooperativity in biology. For example, if all two-factor effects of A,B,C (  X  AB ij ,  X  are insignificant (close to 0) and the three-factor effect (  X  may well discover the rule such as  X  a gene is over (or under) expressed only if several genes are jointly over (or under) ex-pressed X .
 The loglinear theory requires the loglinear parameters sum to 0 over all indices. For example,  X  AB i. = a dot  X . X  means that the parameter has been summed over the index. Equation 5 shows how to compute the coefficients in a 4-dimensional table. In [20] a fast computation technique called the UpDown method that makes this approach feasible for large sets is described. In this paper we apply UpDown approach to compute the parameters of all k-way interaction models. For each component, we build one contingency table which will be analyzed by all k-way loglinear models. Table 1 shows one contingency table built from yeast data based on one component with four genes (e.g., YHR071W, YMR094W, YMR096W, YMR095C). Each expression is discretized into three categories: overexpressed, normal, and underexpressed. It is important to notice that gene expression values can be discretized into any number of categories and our k-way interaction loglinear model can be built directly over the transformed contingency table. Equation 6 and 7 shows all 1-way and all 2-way interaction model respectively. Equation 6 assumes the independence model and includes all-one-factor (main) effects and grand mean. Equation 7 includes all-two-factor effects apart from all-one-factor effects and grand mean. The comparison be-tween the observed value y with either  X  y (1) or  X  y (2) screen interesting item sets in [23] or [10] respectively. How-ever, the assumed independence model or pairwise model may be insufficient to fit some high factor gene interactions. In [10], they only distinguish between multi-item associ-ations that can be explained by all pairwise associations, and item sets that are significantly more frequent than their pairwise associations would suggest. In our framework, we extend to all k-way interaction models (e.g., as shown in Equation 8). Furthermore, we may interpret associations by examining the  X  -terms of fitted loglinear models instead of by only examining the differences between observed fre-quencies of item sets and expected frequencies computed from assumed models. If the gene expression values are discretized to 2 categories, over-expressed and under-expressed, our previous results [29] have two important conclusions: Figure 3 shows the parameter values from the saturated model. Each of the  X  -term in the saturated loglinear model describes the interaction of item variables. For example,  X 
AB represents the interaction between gene A and B. For example,  X  AB = 0 . 275 in Figure 3 implies  X  AB 00 = 0 . 275,  X  01 =  X  0 . 275,  X  AB 10 =  X  0 . 275, and  X  AB 11 = 0 . 275. It can be interpreted that the overexpression (underexpression) of A implies the overexpression (underexpression) of B with interaction effect of 0.275. Furthermore, the comparison of  X 
BD (0.278) and  X  AD (0.052) implies the interaction of BD is more significant than that of AD.
 Though two-category discretization is enough for most cases (especially during exploratory phase), the users may need to investigate the interactions at finer levels (e.g., what is the effect of weak-overexpressed of gene A on gene B) which re-quires multiple-category discretization. In this case we can-not compare the magnitude of  X  -terms directly. This is due to several reasons. Firstly, the degree of freedom (d.f.) for each particular interaction varies (however, in two-category case, the d.f. for each particular interaction is always 1). YMR096W, YMR095C respectively. The cell ( A  X  , B  X  , C  X   X  ) with value 54 is large item set discovered by association rule method.
 B B  X  A A  X  A  X  A A  X  Figure 3: Lattice for the data set with four dimensions de-noted by A, B, C, D respectively. The value in () denotes the value of  X  -term of saturated loglinear model Secondly, the variance for each interaction varies (in two-category case, the variances for all  X  -terms are the same). So in the general case, we have to compute the standard-ized parameter value (  X / X  (  X  )) for each  X  -term in order to compare the significance of each interaction. Thirdly, there can be more than one absolute value for each  X  -term and we have to combine the estimates in some way to form an overall test statistic [14].
 All k-way interaction loglinear models are built from trans-formed contingency table where we may lose some informa-tion due to discretization when preprocessing raw data. The all 2-way interaction loglinear model is a direct parallel to the graphical gaussian model. In both the all 2-way inter-action loglinear model and the graphical gaussian model, conditional independence between any pair of genes is pa-rameterised by a single scalar, the mixed derivative measure of partial interaction. We can see there is no information loss in graphical gaussian models as we do not need to discretize the expression values. However, the graphical gaussian mod-els can not capture k-way ( k &gt; 2) interactions. As we stated in the introduction, we cannot build loglin-ear models over the very sparse and large contingency table that results from gene subsets with large number of genes. For example, Figure 4 shows an independence graph with 9 genes. If each expression value is discretized into three categories, the number of cells in the contingency table will be 3 9 which is much larger than samples (usually 10 1 -10 Hence we need to decompose independence graph into sub-graphs.
 Graph-theoretical results show that if a graph correspond-ing to a graphical model is decomposable into subgraphs by a clique separator 1 , the MLEs for the parameters of the model can easily be derived by combining the estimates of the models on the simpler subgraphs. Hence, applying a divide-and-conquer approach based on the decompositions will make the procedure applicable to much larger subsets of genes.
 The theory may be interpreted by the following way as shown in Figure 4: if two disjoint subsets of vertices S and S b are separated by a subset S c in the sense that all paths from S a to S b go through S c , then the variables in S are conditionally independent of those in S b given the vari-
A clique is a subset of vertices which induce a complete subgraph for which the addition of any further vertex ren-ders the induced subgraph incomplete. A graph is complete if all vertices are joined with undirected edges. In other words, the clique is maximally complete.
 Figure 5: Snaphot of prototype system for gene interaction analysis ables in S c . The subgraphs may be further decomposed into subgraphs S a  X  S c and S b  X  S c . The requirement that the subgraph on S c is complete implies that there is no further independence constraints on the elements of S c , so that this factorization contains all the information about the joint dis-tribution. To find the clique separators of a graph or to find the vertex-sets of the irreducible components of the graphs, an algorithm with a complexity of O ( ne + n 2 ) can be used [25], where n is the number of vertices and e is the number of edges. The experiments were conducted in a DELL Precision 340 Workstation (Redhat Linux 9.0 operating system), with one 2.4G processor, and 1G bytes of RAM.
 In this section we show the results on yeast data [16] which contains expression profiles for 6316 transcripts correspond-ing to 300 diverse mutations and chemical treatments in yeast. In [8], this yeast data set is transformed by binning an expression value greater than 0.2 for the log base 10 of the fold change as being up; a value less than -0.2, as being down; and a value between -0.2 and 0.2 as being neither up nor down. We apply the same discretization strategy in our experiment.
 Figure 5 shows a snapshot of our prototype system for gene inteaction analysis . Our system has features that allow its users to choose frequent itemset mining [6] and various clus-tering methods [11] to get subsets of genes. For each subset, the independence graph is generated by using GGMs. The users may interactively add or remove some genes from the independence graph and the new independence graph will be generated interactively. We use automatic graph drawing tools [12] to represent gene networks. Our implementation is in C++ on Unix workstations using FLTK [24] for the user interface. The preprocesing data mining techniques to get gene sub-sets we applied in this experiment include frequent item set and maximal frequent item set mining method with differ-ent support, K-mean, SOM, PCA, and Hierarchical cluster-ing methods. Table 2 shows the size of gene sets obtained using frequent itemset and maximal frequent itemset min-Table 2: Size of gene sets obtained using frequent itemset and maximal frequent itemset with different support and execution time (in seconds) of frequent itemset mining( T GGMs ( T g ) and loglinear modeling ( T l ) support(%) frequent max. frequent T f T g T l Table 3: Execution time ( T c ) using various clustering meth-ods ing method with different support. We can see the size of frequent item set and maximal frequent item set under low support values is large.
 Table 2 also shows the execution time of preprocessing (fre-quent itemset mining by Apriori) and that of GGMs and loglinear modeling over all subsets. We can see the exe-cution time of GGMs is trivial as it is even less than that of frequent itemset mining. However, the execution time of loglinear modeling is increasing significantly when more subsets need to be built on. As loglinear modeling is mainly used for interactive analysis, the execution for each subset is still fast. Table 3 shows the execution times using different clustering methods which are larger than that of loglinear modeling. Figure 6 demonstrates the pairwise interaction for one se-lected gene group with 11 genes (We omit biological infor-mation for each gene due to space limitation.). Briefly, nine genes have known functions and seven genes encode proteins that are involved in biosynthesis/metabolism. Some facts that can be inferred from the interaction graph include: Our results receive some solid biological explanations. For example, SNZ1 (YMR096W) belongs to three-member gene families SNZ1-3 whereas SNO1 (YMR095C) belongs to an-other three-membered gene families SNO1-3 (Snz-proximal open reading frame). The DNA sequences and relative po-sitions of SNZ and SNO genes have been phylogenetically conserved. SNZ-SNO gene pairs are co-regulated under var-ious conditions. Recent studies indicated that SNZ1 and SNO1 are involved in cellular responses to nutrient limita-tion. Both of them are required for yeast to grow in pyri-doxine (vitamin B6) lacking media, indicating that they are involved in pyridoxine metabolism. Table 4 shows size of gene sets using k-way interaction model with different support. We can see many gene sets are screened by all k-way interaction model when we increase k .
 Table 5 shows the frequencies and estimates from all k-way interaction model for Large 4-gene sets 2 . For the com-ponent with four genes YJR109C, YMR094W, YMR096W, and YMR095C (line 3 in table 5, we use A, B, C, D to
The information of each ORF (open reading frame) can be retrieved from the Saccharomyces Genome Database (http://genome-www.stanford.edu/Saccharomyces/). denote each gene respectively), we get multi-way interac-tions among ABC (-0.006), ABD (0.108), ACD (-0.01), and BCD (0.127). All the pairwise interactions are above 0.13. We can easily derive significant positive interactions exist among ABD and BCD while non-significant negative inter-actions exist among ABC and ACD.
 We can see our results agree to some previously known bi-ological interactions or reveal some previously unknown in-teractions that have solid biological explanations.
S in each set represent the gene being up in the sample. In this paper we have applied a combination of graphical gaussian modeling and loglinear modeling to find meaning-ful interactions among sets of genes in gene expression data collected by microarrays. The graphical gaussian modeling can effectively discover pairwise interactions between genes while the loglinear modeling can discover multi-way inter-actions hidden in components. We have shown that the ap-plication of the method to yeast microarray data uncovers a set of interactions that can be explained using biological ar-guments, and thus are meaningful. As such, we believe that this method complements the typical clustering approaches used to analyze microarray data.
 There are some aspects of this work that merits further re-search. Among them, we are studying how to better deal with sparse data when either structural zero cells present or it contains many small cell values. It is known that loglinear model can still work for small incomplete table with struc-tural or sampling zeros. We will investigate other techniques such as shrinkage estimates [10] for large sparse microarray data. This paper is an extension and combination of two previ-ous workshop papers [31; 30] and was supported, in part, by funds provided by the University of North Carolina at Char-lotte. The authors would like to thank Christian Borgelt for his implementation of the Apriori algorithm and Michael Ellson for his implementation of clustering program which makes our system possible. Our system can be downloaded via http://www.cs.uncc.edu/ xwu/bio/GenExplore.html. We also would like to thank Daniel Barbar  X  a and Kalpathi Sub-ramanaian for useful discussions in building the prototype system. [1] R. Agrawal, T. Imilienski, and A. Swami. Mining asso-[2] E. Andersen. The statistical anlysis of categorical data . [3] M. Ashburner, C. Ball, J. Blake, and et al. Gene ontol-[4] G. Bader and C. Hogue. Bind: a data specification [5] A. Ben-Dor, R. Shamir, and Z. Yakhini. Clustering gene [6] C. Borgelt. Association rule in-[7] Y. Cheng and G. Church. Biclustering of expression [8] C. Creighton and S. Hanash. Mining gene expression [9] K. Dahlquist, N. Salomonist, K. Vranizan, S. Lawlor, [10] W. DuMouchel and D. Pregibon. Empirical bayes [11] M. Eisen. Cluster analysis and visualization. [12] J. Ellson and S. North. Graph visualization project [13] N. Friedman, M. Linial, I. Nachman, and D. Peer. Using [14] L. Goodman. The analysis of multidimensional conti-[15] E. Hartuv and R. Shamir. A clustering algorithm based [16] T. Hughes, M. Marton, A. R. Jones, C. Roberts, [17] D. Kinney and C. Lusty. Arginine restriction induced by [18] H. Kishino and P. J. Waddell. Correspondence analysis [19] P. A. Padilla, E. K. Fuge, M. E. Crawford, A. Er-[20] S. Sarawagi, R. Agrawal, and N. Meggido. Discovery-[21] E. Segal, M. Shapira, A. Regev, D. Peer, D. Botstein, [22] R. Shamir and R. Shamir. Click: A clustering algo-[23] C. Silverstein, S. Brin, and R. Motwani. Beyond market [24] B. Spitzak and et. al. The fast light toolkit(fltk). [25] R. Tarjan. Decomposition by clique separators. Discrete [26] P. Uetz, L. Giot, G. Cagney, and et al. A comprehen-[27] J. Venter, M. Adams, E. Myers, and et al. The sequence [28] J. Whittaker. Graphical Models in Applied Mathemati-[29] X. Wu, D. Barbar  X  a, and Y. Ye. Screening and interpret-[30] X. Wu, D. Barbar  X  a, L. Zhang, and Y. Ye. Gene interac-[31] X. Wu, Y. Ye, K. Subramanian, and L. Zhang. Inter-[32] I. Xenarios, L. Salwinski, X. Duan, P. Higney, S. M. [33] Y. Xu, V. Olman, and D. Xu. Clustering gene expres-
