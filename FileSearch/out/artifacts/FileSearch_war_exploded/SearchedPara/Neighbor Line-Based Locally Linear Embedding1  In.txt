 Many real-world problems suffer from a large amount features [5]. Therefore, dimensionality reduction techniques are needed. Popular linear dimensionality reduction methods such as Pca [7] and Mds [2] are easy to implement. The main idea of Pca is to find the projection direction with the largest possible variance and then project the original data onto that direction, while that of Mds is to find the low-dimensional embeddings which best restore the pair-wised distances between the original samples. Although these linear methods have achieved some success, most real-world data are non-linearly distributed and therefore, these methods can hardly work well.

Recently, a number of non-linear dimensionality reduction methods have been proposed, e.g. the manifold learning methods Lle [9], Isomap [10], etc. Lle preserves the information of local dist ance between the concerned data and its neighbors, while Isomap preserves the pairwise geodesic distances between the original samples. Both Lle and Isomap have been applied to data visualiza-tion [6][9][10], and encouraging result s have been reported when the data are densely sampled and there is no serious noise in the data.

De Silva and Tenenbaum [4] proposed two improved Isomap algorithms, namely, C-Isomap and L-Isomap .C-Isomap has the ability to invert confor-mal maps while L-Isomap attempts to reduce the computational load. Unfortu-nately, similar to Isomap ,C-Isomap performs pool when the training data are not densely sampled [4][10]. Even more worse, C-Isomap requires more samples than Isomap [4]. L-Isomap reduces computational complexity by mapping only the landmark points. Unfortunately, it is more unstable than Isomap since the landmarks may be not densely sampled [4]. Like Isomap series of algorithms [10], given sufficient data, Lle is guaranteed asymptotically to recover the geometric structure [9]. Recently, Lle and Lda have been combined as new classification algorithms [3][12], which work well only with dense samples either. Since in real-world tasks it is hard to guarantee that the data is densely sampled, the performance of these manifold learning algorithms are often not satisfying. In this paper, the Nl 3 e (Neighbor Line-based Lle ) method is proposed. Through generating virtual samples with the help of the neighbor line , Nl 3 e can work well in some cases where the data are not densely sampled.
 The rest part of this paper is organized as follows. In section 2, the Lle and Nnl algorithms and some works utilizing virtual samples are introduced. In section 3, the Nl 3 e method is proposed. In section 4 , experiments are reported. Finally, in section 5, conclusions are drawn. 2.1 L LE Lle [9] maps a data set X = { x 1 , x 2 ,  X  X  X  , x n } , x i  X  X  d ,toadataset Z = { z dimensional manifold which can be approximated linearly in a local area of the high-dimensional space. Roughly speaking, Lle firstly fits hyperplanes around each sample x i , based on its k nearest neighbors, and then calculates the recon-struction weights. After that, it finds the lower-dimensional coordinates z i for each x i , which preserve those reconstruction weights as good as possible.
Formally, the k nearest neighbors of x i are identified according to Euclidean distance at first. Then the neighboring points are used to reconstruct x i ,andthe total reconstruction error over all the x i  X  X  is defined as Eq. 1, where x ij is the j th neighbor of x i ,and w ij encodes the contribution of x ij to the reconstruction of x
Then, the weights w  X  X  are fixed and the corresponding z i  X  X  are sought through minimizing Eq. 2. Like Eq. 1, Eq. 2 is based on local linear reconstruction errors, but here the weights w  X  X  are fixed while the coordinates z i  X  X  are optimized.
The Lle algorithm has been applied to visualization and achieved some suc-cess [9]. It is noteworthy that the original Lle algorithm was mainly designed for visualization, which does not take into account the label information. However, the working scheme of Lle can be modified to utilize the label information, and therefore it can also be used in classificat ion [3][12]. Nevertheless, as mentioned before, like other existing manifold learning algorithms, Lle can hardly work well when the data are not densely sampled. 2.2 N NL The Nfl (Nearest Feature Line) method was originally proposed for face recog-nition [8]. In Nfl , feature line is defined as the line passing through two points from a same class. The distance between an unseen point to the line is regarded as a measurement of the strength of the point belonging to the concerned class. Besides suffering from large computational costs, Nfl often fails when the query point, i.e. the unseen data point to be classified, is far from the prototype points because in this case, unreliable extrapola ted points may be queried for classify-ing the unseen data. In order to reduce the influence of this problem, the Nnl (Nearest Neighbor Line) method, which is a modified version of Nfl , was pro-posed, where only the neighbors of the query point instead of all the possible feature lines are used [13].
 c is the number of classes, x i j is the j th sample of the i th class, and N i is the number of the samples belonging to the i th class. Let x denote the query sample. Suppose x i a and x i b denote the two nearest neighbors of x in the i th class. Then, x in the i th class. The neighbor line distance between x and x i a x i b is given by dist ( x , x i a x i b )= x  X  I x i I root. Then, x is classified as belonging to the class corresponding to its nearest neighbor line, that is, 2.3 Virtual Samples In pattern recognition, much effort has been devoted to tackling the small sample problem , where the utilization of virtual samples is an effective scheme. For example, in the (PC) 2 A method designed for face recognition with one training image per person [11], the horizontal and vertical projections of the original face image are used to help create some virtual face images such that the intra-class differences can be computed in Pca .

In machine learning, virtual samples have been used in comprehensible learn-ing . For example, virtual samples were gene rated to help extract symbolic rules from complicated learning systems such a s neural network ensembles [16]. In the twice-learning paradigm [14][15], a learner with strong generalization ability is used to generate virtual samples which are then given to a learner with good comprehensibility, such that the learning results are with high accuracy as well as good comprehensibility.

Virtual Samples are also useful in learning with imbalanced data sets. For example, in the Smote algorithm [1], virtual samples of the minority class are generated such that the number of minority training samples is increased. Here the virtual samples are generated through interpolating between each minor-ity class point and its k nearest neighboring minority class points, which looks somewhat like the interpolating scheme used in Nfl [8] and Nnl [13]. In fact, the Nfl and Nnl algorithms have implicitly utilized virtual samples since they use a virtual point instead of a real data point to help compute the distance between a data point and a class. Since many real-world data sets are no t densely sampled, the performance of manifold learning algorithms are often not satisfying. It can be anticipated that if more samples with helpful information are available, the learning results could be better. As introduced in section 2.3, virtual samples are useful in many areas. However, almost all the existing techniqu es for generating virtual samples were developed in fields other than manifold learning. In order to design suitable methods for manifold learning, the characteristics of manifold learning algo-rithms must be taken into account. Here only Lle is considered.

The principal idea of Lle is to keep the local relationship between the samples during the mapping process. Therefore, in order to keep the local relationship, virtual samples must be created in local areas. Thus, the neighbor line used in Nnl seems helpful.

Here the neighbor line method is gener alized. In its original form, the in-terpolated points on only the nearest neighbor line could be used as potential virtual samples. Here the interpolated points on a number of neighbor lines can be used as virtual samples. It is anticipated that through generating more virtual samples, the data set will become densely distributed meanwhile the underlying distribution is reserved.

In Lle ,thereisa neighbor selection parameter, k . When the input samples are not densely sampled, if k is set to a large value, Lle may return invalid answer due to the lose of locality; but if k is set to a small value, Lle can hardly get sufficient information. In Nl 3 e ,the k -nearest neighboring points of the concerned data point will be identified, as that in Lle . But rather than using only these k neighboring points as Lle does, Nl 3 e can obtain more data points to use because a number of virtual sampl es on the neighbor lines corresponding to the identified k neighboring points will be generated. Therefore, with the same setting of k , the samples used by Nl 3 e can cover the local area better than that used by Lle . Fig. 1 gives an illustration.

In Fig. 1, the concerned point is x i , and its four nearest neighbors, i.e. x ij ( j =1 ,  X  X  X  , 4) , have been identified. Assume the circle around x i specifies the underlying locality of x i .Thus, x i has only one neighbor, i.e. x i 1 ,locatinginthe real local area. It is obvious that x i can hardly be faithfully reconstructed when the local information is too little. Fortunately, Nl 3 e can use virtual samples to enrich the local information. As Fig. 1 shows, there are six virtual samples created with the help of the neighbor lines. In this case, if k is set to 1 in the original data set to find neighborhood area, then after virtual sample creation, 7 points should be selected in order to g et a neighbor area with similar size. In general, in order to obtain the local area with similar size, the neighbor selection parameter used after the virtual sample generation process should be bigger than k .Let p denote the number of virtual examples generated when k is 1. Then, the neighbor selection par ameter used after the virt ual selection process could be determined according to k =(1+ p )  X  k because roughly p virtual samples will be generated based on every points of the k nearest neighbors.

Note that the neighbor area used for generating virtual examples is not needed to be the same as that used for reconstructing the concerned data point x i . Actually, Nl 3 e identifies a big neighbor area through consulting the l ( l  X  k ) nearest neighbors of x i , in which the virtual exampl es are generated. Then, on the enriched training set, k ( k =(1+ p )  X  k )nearestneighborsof x i will be used to reconstruct x i according to Eq. 1.

When a big l value is used, a lot of virtual samples will be created. Considering that in a d -dimensional space ( d + 1) neighbors are sufficient for reconstructing a data point, in Nl 3 e the number of virtual samples t o be generated is restricted to ( d +1). That is, only ( d + 1) number of virtual samples is really generated among the C 2 l possible virtual samples.

The pseudo-code describing the Nl 3 e algorithm is shown in Table 1. In con-trast to Lle , Nl 3 e has only one more parameter to set, that is, l . For visualization, the goal is to map the original data set into a two-or three-dimensional space that preserves as much as possible the intrinsic structure. In many previous works on visualization, the results are mainly compared through examining the figures to point out which looks better. To compare the results more impersonally, it was suggested to use the variance fraction to measure the visualization effect [10]. H owever, variance fraction i n fact measures the rela-tionship between the reconstructed pairw ise geodesic distances and the lower-dimensional distances, not the structure inflexibility. In another work, the cor-relation coefficient between the distanc e vectors, i.e. the vectors that comprises the distances between all pairs of the true structure and that of the recovered structure, was used [6]. It has been shown that this method provides a good measurement of the validity of the visualization [6]. Suppose the distance vector of the true structure is DV and that of the recovered structure is DV , then the correlation coefficient between DV and DV is computed by where ( A  X  B ) is the inner product of A and B , U returns the average value of U and  X  ( U ) is the standard deviation of U . Generally, the larger the  X  , the better the performance.

Several synthetic data sets are used in the experiments. First, a two-dimensional rectangle is selected as the basic structure, and then 200, 300, or 400 points are randomly sampled from the structure. After that, the points are separately embedded onto  X  X curve X  (SC) or  X  X wiss roll X  (SW). So there are 6 data sets, i.e.SC-200, SC-300, SC-400, SW-200, SW-300 and SW-400. SC-400 and SW-400 are shown in Fig. 2. The colors reveal the structure of each data set.
Nl 3 e is used to map these data sets onto two-dimensional space, and then the visualization effect is evaluated. The performance of Nl 3 e is compared with that of Lle according to the correlation coeffici ent. Since the data sets are gener-ated through embedding some two-dimensional samples onto higher-dimensional space, the intrinsic dimension of these data sets are all two. The parameter l of Nl 3 e is set from 6 to 10. The experiments are repeated for 5 times under each configuration, and the average value of  X  which is denoted by  X  is recorded. The parameter k of both Nl 3 e and Lle is set from 3 to 7.
 In Table 2, the performance measured by  X  is reported ( k =6, l =8),where R i ( i =1 , 2 , Nl 3 e outperforms Lle in most situations. Only on SW-300, the average value of  X  of Nl 3 e is worse than that of Lle .

Fig. 3 shows the visualization results of Nl 3 e and Lle on the SC series data sets when k =6and l = 8. Note that under each configuration the experiment has been run for 5 times, and Fig. 3 shows the situation where the  X  value is the median in these 5 runs. Colors reveal the structure of embedding samples. It is obvious that Lle  X  X  performance is poor while the result of Nl 3 e are quite well.

Fig. 4 shows the visualization results of Nl 3 e and Lle on the SW series data sets when k =6and l = 8. It can be found that the performance of Nl 3 e is not so good as that in Fig. 3. This can also be observed in Table 2, where the  X  value of Nl 3 e on the SW series data sets are lower than these on the SC series data sets. Nevertheless, it is obvious that Nl 3 e still performs better than Lle .
For studying how the parameter l affecting the performance of Nl 3 e ,more experiments are conducted. The results are shown in Fig. 5, where k = 6 while l changes from 6 to 10. It X  X  obvious that no matter which value l takes, except on SW-300, the performance of Nl 3 e is better than that of Lle in most cases. In order to explore the influence of the parameter k on the performance of Nl 3 e , further more experiments are performed. The results are shown in Fig. 6, where l =8and k changes from 3 to 7. As this figure tells, when k increases, firstly Lle  X  X  performance becomes better and Nl 3 e  X  X  becomes better too. If k continuously increases, Lle  X  X  performance may decrease. This can be observed clearly on SC-200, SW-300 and SW-400. Although Nl 3 e  X  X  effect may decrease either, it is more slowly. Almost in every point, Nl 3 e is better than Lle .Infact, no matter which value is set to k , the performance of Nl 3 e remains quite well. Many manifold learning algorithms often return invalid results when the data is not densely sampled. This paper proposes the Nl 3 e algorithm, which is a variant of Lle but can work well in some cases where the data is not densely sampled. The reason lies in the fact that using virtual samples, Nl 3 e can use more information. Experiments on synthetic data sets show that the performance of
Nl 3 e is better than that of Lle . The performance of Nl 3 e on real-world data will be evaluated in the future.

In this paper, the virtual samples gen erated with the help of neighbor lines are all plumb roots in a local area, therefore the local information is enriched while the locality is kept. It is evident that such kind of virtual samples can also be used by other manifold learning algorithms such as Isomap ,C-Isomap , etc. to relax the requirement of dense samples. This will be studied in the future.
 Note that in order to enrich the local information, the computational cost of Nl 3 e is bigger than that of Lle . Fortunately, the computational cost of Nl 3 e can be reduced by using smaller number of virtual samples. Nevertheless, de-signing efficient virtual sample utilization scheme is also an important future work.
 This work was supported by the Foundation for the Author of National Excellent Doctoral Dissertation of China under t he Grant No. 200343, the National Science Fund for Distinguished Young Scho lars of China unde r the Grant No. 60325207, and the Fok Ying Tung Education F oundation under the Grant No. 91067.
