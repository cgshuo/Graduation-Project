 Recommender systems have become de facto tools for suggesting items that are of potential interest to users. Predicting a user X  X  rat-ing on an item is the fundamental recommendation task. Tradi-tional methods that generate predictions by analyzing the user-item rating matrix perform poorly when the matrix is sparse. Recent ap-proaches use data from social networks to improve accuracy. How-ever, most of the social-network based recommender systems only consider direct friendships and they are less effective when the tar-geted user has few social connections. In this paper, we propose two alternative models that incorporate the overlapping commu-nity regularization into the matrix factorization framework. Our empirical study on four real datasets shows that our approaches outperform the state-of-the-art algorithms in both traditional and social-network based recommender systems regarding both cold-start users and normal users.
Recommender systems have become essential tools for suggest-ing items of potential interest to users and they have successfully been deployed in the industry, with applications such as movie rec-ommendations (Netflix), product recommendations (Amazon), and music recommendations (Last.fm).

The various definitions of the recommendation problem all boil down to predicting the ratings of a target user on items (e.g., movies) that the user has not rated before (e.g., unwatched movies). Specifi-cally, consider a set of m users and a set of n items in a rating-based recommender system: each user u can rate any item by giving it a score. Given a target user u , for each item i that u has not rated, the system predicts the rating, based on the existing ratings of other users. Then, the unrated items with high predicted rating scores are offered as suggestions to u .

Traditional recommender systems [9, 3, 11, 24, 10, 5, 26, 31, 14] are effective for target users who have rated many items, since it is easy to find other users that have rated these items. However, they perform poorly for cold-start users who have very few ratings; in c  X  this case, it becomes hard to find similar users to the target user, in order to generate recommendations based on their ratings.
The increasing popularity of online social networks offer chances to improve the accuracy of rating predictions; as sociologists pos-tulate, people tend to relate to people with similar preferences and people that influence each other become more similar [27]. [2] also confirm that a social network provides an independent source of in-formation which can be exploited to improve the quality of rating predictions. Based on the rationale that a user X  X  interest is similar to or influenced by her/his friends, several social-based recommender systems [17, 16, 7, 18, 15, 30, 12] have recently been proposed. Ex-periments demonstrate that making recommendations based on the ratings of the users socially connected to the target user improves traditional techniques, especially when the user-item rating matrix is sparse. However, in the literature, the most effective social-based recommenders systems [7, 18, 30] only consider direct friendships in the network. As shown in our empirical study, they become less effective for target users who have few ratings ( rating-cold-start users) or few social connections ( social-cold-start users).
In this paper, we exploit information about the communities formed by users in social networks, to improve the recommendation accu-racy. Social network users tend to establish relationships with peo-ple who share similar interests with them. For example, Figure 1 il-lustrates user communities in a book recommender system 1 on different topics. The members in the same community usually share characteristics and can be an alternative of direct friends for social recommender systems. Aiming at solving the problems of social-based recommenders discussed in the previous paragraph, we propose two models that incorporate the overlapping commu-nity regularization into the matrix factorization framework differ-ently. The communities are detected based on the social network structure; a user may belong to multiple communities with differ-ent interests. One of our models (MFC) ensures that the distance between the latent feature vectors of users u and u 0 is low if u and u belong to the same community c . Our other model (MFC forces the user latent feature vectors to be close to those of her/his communities. Empirical studies on four real datasets show that our approaches outperform the state-of-the-art traditional and social-based recommenders by 6%-42% for general users. Moreover, we put emphasis on cold-start users. While the problem of rating-cold-start users is studied in previous research on social recommender systems, social-cold-start users are ignored by previous work. Our methods consider both cases and beat baselines by 7%-32% for rating-cold-start users and 4%-37% for social-cold-start users.
The rest of the paper is organized as follows. Section 2 formally defines the problem. Section 3 reviews major rating prediction approaches in the literature. Section 4 introduces our MFC and MFC + models. The results of our empirical study are reported in Section 5. We conclude in Section 6.
In a traditional ratings-based recommender system, there are m items form a m  X  n rating matrix R = [ r ij ] where r ij is the rating of user u i on item v j . Typically, 5-scale or 10-scale rating systems are used.

In a social recommender system, we have a social network graph where each node represents a user and edges model the social rela-tionships between users (e.g., friendship or influence). The social graph can also be modeled by a m  X  m adjacency matrix S = [ s where s ij represents the similarity between users u i and u much user u i trusts user u j . Figure 2 shows a toy example of a so-cial recommender system with 5 users and 5 items. Figure 2(a) is the social network graph and Figure 2(b) is the corresponding adja-cency matrix S = [ s ij ] where a positive s ij indicates a social edge between user u i and user u j . Figure 2(c) is an exemplary user-item rating matrix where questionmarks are unknown ratings. Fig-ure 2(d) illustrates the possible output of the social recommender system where any unknown ratings are predicted.

The basic task of a social recommender is as follows: given the user-item rating matrix R = [ r ij ] and the adjacency matrix S = [ s ij ] , predict an unknown rating r ij for user u i on item v
This section reviews important rating prediction approaches in traditional and social-based recommender systems.
One of the most commonly-used and successfully-deployed rat-ing prediction approaches in traditional recommender systems is collaborative filtering (CF). Two classes of CF methods are widely used. Memory-based methods predict ratings for the target user based on the ratings of similar users [9] or the computed infor-mation of items similar to those chosen by the target user [3, 24]. Model-based methods make predictions using a trained compact model from the user-item rating matrix. Various training models have been investigated, such as the clustering model [10], the as-pect models [5, 26], the Bayesian hierarchical model [31], and the ranking model [14]. None of these traditional approaches take so-cial network data into account.
Most of the social-based approaches [17, 16, 7, 18, 15, 30] fol-low the matrix factorization (MF) framework [11, 23], due to its effectiveness and efficiency in dealing with large user-item rating matrices. Let R be an m  X  n matrix with the ratings of m users on n items. The basic MF method shown in Figure 3(a) predicts the rating matrix R by multiplying a d -rank user-specific matrix U  X  R d  X  m with a d -rank item-specific matrix V  X  R d  X  n R  X  U T V , where d min( m,n ) . Column vectors U i and V represent the d -dimensional latent feature vectors of user u item v j , respectively. The latent vectors can be learnt by minimiz-ing the following sum-of-squared-errors objective function with two quadratic regularization terms to avoid overfitting: where k X k 2 F denotes the Frobenius norm and I R ij is equal to 1 if user u rated item v j and equal to 0 otherwise. Gradient descent can be applied to find a local minimum. Having latent feature vectors U and V j , the unknown rating on item v j for user u i is predicted as  X  R
SoRec [17] extends the basic MF model by integrating the social network, as shown in Figure 3(b). T is the matrix representation of the social network; I T ik =1 if users u i and u k are friends and I otherwise. Matrix T is factorized into a user-specific matrix U and a factor-specific matrix W . The latent feature vectors of users are learnt based on both the rating and social network matrices. The objective function to be minimized is: 1 2
X +  X  U
Later, as shown in Figure 3(c), STE [16] modified the basic MF model so that each rating R ij in the user-item matrix R reflects (i) user u i  X  X  favor on item v j and (ii) the favors of user u ( N ( i ) indicates u i  X  X  friends) on item v j . The objective function is: 1 2
X +  X  U where T is the matrix representation of the social network, N ( i ) is the friend set of user u i , and  X  controls the effect of friends on the rating estimation.

A recent model, SocialMF [7], learns the latent feature vectors of users based on the latent feature vectors of their friends, as shown in Figure 3(d). SR model [18] improves SocialMF by treating friends with dissimilar tastes differently, so as to consider the diversity of each user X  X  friends. SR X  X  objective function is: where S ik is the similarity between users u i and his/her friend u Concerning the social-cold-start users who have few friends in the social network, in the SR + model [15], the latent feature vectors of users depend on the latent feature vectors of both their friends and the users with high similarities. However, SR + requires an a priori similarity threshold. The CircleCon model [30] refines So-cialMF by considering category-specific friends and the intuition is that a user may trust different subsets of users regarding differ-ent domains. GSBM [8] extends the mixed membership stochastic blockmodel [1] to capture both the social relations and the rating behavior for groups of users and items. However, its rating predic-tion accuracy is worse than that of SocialMF.

PSLF [25] is a unified probabilistic model for social recommen-dation. It extracts the social factor vectors of users from the so-cial network based on the mixture membership stochastic block-model [1] and integrates them into the user-item space.

In summary, most of the social-based approaches only consider direct friendships in the social network. They become less effective when a user has few social connections.
We propose two models, MFC and MFC + , that incorporate the overlapping community information as regularization terms into the widely used MF framework. We first introduce the concept of overlapping community in Section 4.1. The two models MFC and MFC + are presented in Sections 4.2 and 4.3. The time complexity is analyzed in Sections 4.4.
Community structures are quite common in social networks. The users in the same community share characteristics (e.g., they may have common locations, interests, occupations, etc.). In some real applications (e.g., Douban which is an online recommender system for book, movie and music and Shelfari which is a recommender system for book), there are some manually formed communities which represents members X  interests. It is natural that a user may belong to multiple communities and overlapping communities can represent the users X  diverse characteristics. For example, a user may join a group for mystery novels and a group for historical nov-els at the same time.

We derive the rating vector of a community as the mean vector of the rating vectors of all the users in the community. We adopt the widely used Pearson Correlation Coefficient (PCC) [22] to measure the similarity S ij between two users based on their rating vectors. The interest Z ih of a user u i on community c h is the PCC between the rating vectors of user u i and community c h . We map PCC into range [0 , 1] using function f ( x ) = ( x + 1) / 2 . PCC is defined as: where P is the intersection of the two vectors.
The SR model [18, 15] improves ratings prediction by imposing similarity constraints between users and their friends. Given the social network, model SR can be easily extended by considering all the members in the community where the target user belongs to. However, taking the individual influence based on the user-to-user similarity constraints may cause overfitting.
Our proposed MFC model, shown in Figure 4, injects commu-nity interest constraints into the SR model. Our motivation is that users who belong to different communities should be treated differ-ently, as opposed to the SR model, which treats them equally. If the target user is more interested in music than sports, users belonging to the music community should be weighed higher. In MFC, the latent feature vector of user u i depends on the users belonging to the same communities as u i . The regularization term in MFC con-siders both the user similarity S ik and the community interest Z where M U ih contains the users in the same community c h u , I Z ih equals 1 if user u i belongs to c h and equals 0 otherwise. The objective function E to be minimized is
E = 1
A local minimum of the above function E can be found by per-forming gradient descent in U i and V j : where G = { u p | X  h,u i  X  M U ph &amp; I Z ph = 1 } and F = { c M ph &amp; I Z ph = 1 } .
In real life, it is common for users to seek advice from members in different groups and summarize suggestions as an overall view of a group. For example, John, who joined two groups Comedy and Romance in a social-based movie recommender system, wants to watch a movie on the weekend. After reading comments, he chooses Four Weddings and a Funeral with high average ratings in these two groups.

Model MFC + , shown in Figure 5, learns the latent feature vec-tor of the target user u i based on the latent feature vectors of the communities where u i belongs. The latent feature vector C community c h is defined based on the latent feature vectors of the users that belong to c h and the interests of these users for c user with high interest in community c h contributes more to the la-tent feature vector of c h . Also, each user X  X  latent feature vector can contribute to multiple community latent feature vectors. The latent feature vector of a community is calculated as: where M C h contains the users belonging to community c h that C h is a latent feature vector, while the community vector we used in Section 4.1 to calculate Z is a ratings vector. The overlap-ping community-based regularization term in the MFC + model is in MFC + is:
E = 1
A local minimum of objective function E can be found by per-forming gradient descent in U i and V j :  X  X   X  X  where G = { u p | X  h,u i  X  M C h &amp; I Z ph = 1 } and F = { c M h &amp; I Z ph = 1 } .
Let d be the dimensionality of the latent space, m be the number of users, n be the number of items,  X  r be the average number of rat-ings per user gave,  X  f be the average number of communities where to each user belongs, and  X  w be the average number of members per community. The complexity of evaluating the objective function is O (  X  rmd +  X  f  X  wmd ) , while the cost of computing the gradients is O (  X  rnd +  X  f  X  wmd ) . These costs are linear with respect to  X  r and Since the rating matrix is very sparse,  X  r is relatively small. Accord-ing to the analysis of real networks including information network (Wikipedia), content-sharing network (Flickr) and social networks (Facebook, Google+ and Twitter) [29],  X  f and  X  w are also small. We conducted an empirical study using four public datasets, Yelp, Flixster, Douban and Dianping, to evaluate MFC and MFC + com-pared to the state-of-the-art approaches. different kinds of communities in Dianping when CPM is employed.
In this paper, we improved the effectiveness of social-network based recommendation, by proposing two models that incorporate the overlapping community regularization into the matrix factor-ization framework differently.

The idea of utilizing communities to enhance the accuracy of rating prediction should not be confined to social network based recommender systems. When more information is available, it is also possible to consider communities of items and plug item-community regularization into our models. Communities of items can be obtained via item clustering based on the item features or the user-item bipartite network. In addition, explicit relationships (e.g., similar tastes and frequent interactions) can also be taken into consideration instead of only considering implicit social relation-ships. By considering information from both the implicit relation-ships and item network, traditional recommender systems without a supporting social network can benefit from social recommendation models and the idea of social collaborative filtering can be applied in a much broader context. Besides the above possible enhance-ments, in our future work, we also intend to further analyze the re-lationship between different community members and explore how these relationships affect users X  rating behaviors, and, in turn, im-prove our approaches based on these results.
