 The existing data warehousing is based on a two-step process. First, data dispersing in relevant enterprise information systems (EIS) is extracted, transformed and loaded into a data warehouse (DW) server accord ing to predefined algorithms and data models. Then analytical engines for predefined, ad hoc, OLAP or data mining analyses are linked to the DW to present reporting results based on the existing models. This process makes the current DW inflexible, non-ease of use and heavily human-dependent. In our previous work [1-6], we have addresses a series of issues and proposed ontology-based approaches to more flexible integration of EIS, more adaptive data modeling and easier personalization in a business-oriented way. 
The basic theory of ontological engineering of data warehousing is as follows. We first build the ontology profile for the DW in terms of a specific problem domain. Second, we analyze the ontological commitment and semantic relationships among ontological items. Third, certain specificati ons are developed to depict and represent the ontology profile. Fourth, a proper architecture must be built to integrate the multiple domains in warehousing. Finally, semantic rules are developed to aggregate, transform, map and query the multi-domain ontological items in ontological DW. A fundamental step in the ontology-based warehousing is to build a comprehensive ontology profile which transforms a domain problem and its problem-solving (DW) system to domain ontology (DO) and problem-solving ontology (PSO). Figure 1 shows the structure of such a ontological profile, where the PSO is further divided into categories as task, method, business logic (BL) and resource ontology. 
As the first step, domain ontology (DO) extracts the essence of conceptual items in a problem domain. DO consists of reusable vocabularies of concepts and relationships within a domain, activities taking place in that domain, and theories and elementary principles governing that domain. Taking the capital markets as an instance, Figure 2 illustrates an excerpt of the relevant concepts and their relations in stock market microstructure. In the stock, the Financial Order is categorized as Limit Order, Market Dealer, Date, Time, Volume and so forth. 
Due to the complexity of data warehousing and customer feedbacks in the real world, we emphasize the involvement of business requirements and domain knowledge. Therefore, we highlight relevant concepts and their relationships associated with solving the domain problem in terms of business-oriented task , method , business logic and resource ontologies . Taking the financial trading and mining analysis system F-Trade [7] as an instance, Figure 3 illustrates the main high-level tasks the system must conduct to support the designed goals of the system. The whole system is decomposed into five main tasks (corresponding to five Centers): system administration, algorithm plug-in and evaluation, service providing, system contro l and evolution, and user interaction and management. Every task may be divided into subtasks. Correspondingly, ontological items will be specified for them respectively. ontological attributes related to a method. For instance, the task Algorithms Logon Configuration can be handled via man-machine interaction or interface agents. Every method is relevant to one or many BL. A BL is a functional and computational unit in a problem-solving system. It may be divided into smaller units on demand. It involves system architecture and design patterns, and working flow and the processes. BL ontology consists of ontological items used for the management and execution of the above aspects in the problem-solving system. action, model, controller and view in terms of MVC design patterns, which are algorithm is decomposed into four classes as AlgoExeAction , AlgoExeModel , AlgoExeController and AlgoExeView (shown in Figure 4) linked via some business logic interactions. knowledge base storing all algorithms, data models and rules, and (iii) system base keeping all configuration and management information of the system, and so forth. Resource ontology captures all objects and relations in all these resources. management in the knowledge base of the F-Trade. As shown in Figure 5, algorithms consist of trading strategies and data mining algorithms. With regard to data mining, algorithms can be categorized as classifi cation &amp; model construction, stream data Following this framework, we can go deep into lower levels to define ontological items if applicable. In building the mapping from a natural concept to its ontological item or between two ontological domains, an essential work is to deal with the synonymous and multivocal phenomena widely seen in business world. This is handled by ontological commitment . Ontological commitment defines an agreement to use a shared ontology library in a coherent and consistent way. It permits ontologists to share and instantiate ontological items with committed freedom. C and O can also refer to two varied ontological domains. 
To manage the above mentioned mapping, we need to build corresponding mechanisms for the identification and aggregation of semantic relationships between ontological items across domains in the warehousing. Varying combinatory scenarios of natural terminologies and their notations furthermore result in different semantic relationships among ontological items. In [2,6], we identify seven types of semantic relationships from them. They are Aggregation , Association , Disjointness , Generalization , Instantiation , Overlap , and Substitution . For space limitations, please refer to [2,6] for details. In Section 2, ontological items are visually presented as tree with terms and their relationships. On the other hand, formal or semi-formal specifications can present the ontological structure more precisely. In our work, we define ontological grammar in description logics (DL) since it supports intentional concepts and properties of concepts, and allows the construction of composite descriptions. 
Furthermore, we develop specifications for representing domain ontologies, problem-solving ontologies. With respect to domain ontologies, for instance, a domain ontology Closing Price can be informally expressed as: It can be formally expressed in terms of the DL as: 
It means that there is at most one value of the closing price for a stock in a day; if there is a value existing, then its value is in float. 
PSO consists of ontologies for tasks, methods, business logics and resources. The relationships among them are as follows. A task is fulfilled by some methods. A method is instantiated into some business logics, and supported by some resources. In most conditions, a task is divided into multiple sub-tasks; these sub-tasks are satisfied by some alternative methods. Correspondingly, these alternative methods are implemented by alternative business logics and relevant resources. PSO diagram as shown in Figure 6 is developed to present these items and their relationships. This diagram should be instantiated to include sets of PSO items from task, method, BL and resources in a real example. 
To present these types of PSO items, the following specification is built based on first-order logics: 
Furthermore, a PSO item can be presented as: Type_AlgoInputs to fill in Algo_Name as MovingAverage via the method RegisterAgent . After defining and building semantic relationships and the representation of ontological items, relevant mechanisms must be developed for ontological aggregation, transformation, mapping and queries either intra or inter domains [2,3,5,6]. A key step is to build some proper ontological architecture first. An ontological architecture indicates the relationship, organization and management of the mapping and integration of ontology crossing domains. Please refer to [2,3,6] for more information about our proposed ontological architecture for DW.

Furthermore, a fundamental issue is how to aggregate, transform, map and query ontological items in the DW ontological domains. To this end, semantic rule [5] is an effective approach. Thus, we need to develop semantic rules for the aggregation of ontological items and semantic relationships, the rules for ontological transformation and mapping. These rules define what the resulting logical output should be for a given input logical combination with some semantic relationship inside. [5,6] present more information about these issues. For instance, the following rule aggregate the semantic relationship part_of . input item, O , O 1 and O 2 are candidate items in the target domains. In our previous work, we have proposed ontology-based business intelligence for improving the performance of existing commercial DW systems. This paper outlines the basic picture of ontological engineering in data warehousing. It has demonstrated mechanisms for: (i) building ontology profiles for a domain problem, (ii) defining ontological commitment and semantic relationships, (iii) presenting ontological items, and (iv) aggregating and transforming items in one domain or across domains. This actually forms the foundations for analyzing, designing and implementing ontology-based data warehouse systems in business world. 
