 In this paper we report our progress in the first application of iterative probabilistic algorithms in the design and evalua-tion of recommender systems. The proposed iterative recom-mender system (referred to as BPRS) is based on the belief propagation, a powerful decoding algorithm for turbo codes and Low-Density Parity-Check (LDPC) codes. The belief propagation algorithm relies on a graph-based representa-tion of an appropriately chosen factor graph for the recom-mender systems. The factor graph representation of the rec-ommender systems turned out to be a bipartite graph, where the users and products are arranged as two sets of variable and factor nodes that are connected via some edges. Rec-ommendations (predicted ratings) for each particular user can be computed by probabilistic message passing between nodes in the graph. We provide an evaluation of BPRS via computer simulations using the MovieLens dataset. We observed that BPRS iteratively reduces the error in the pre-dicted ratings of the users until it converges. Further, our initial results indicate an improvement in the Mean Average Error (MAE) and Root Mean Square Error (RMSE) over the Item Averaging. Therefore, we are confident that the belief propagation is a new promising approach which will offer robustness and accuracy for the recommender systems. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering ; H.3.5 [ Information Storage and Retrieval ]: On-line Information Services X  Web-based services Algorithms, Design Recommender systems, Iterative algorithms, Belief propa-gation, Online services, E-commerce
In most online systems, a user has no choice but to rely on the systems X  X  foresight about his taste on a product based on the existing feedbacks from different users. Recommender systems form a specific type of information filtering tech-nique that aim to support users in their decision-making while interacting with large information spaces. A recom-mender system is a promising mechanism to help the user by forming the users X  X  predicted taste on the products before using them. A recommender system compares the user X  X  profile to some reference characteristics and recommends items of interest to the user based on preferences he has ex-pressed. Recommender systems are evaluated based on the accuracy of their recommendations (how closely predicted ratings of items match subsequent actual ratings). They are widely used in many websites and are believed to lead the social web in near future.

Most well-known commercial websites such as eBay, Ama-zon, Netflix and Google use some types of recommender sys-tems. Further, recommender systems have applications in advertisements; which is a successful source of income for Google and social networking websites. By finding simi-larity among people X  X  choices, recommender systems can be used for the customer directed advertising in which users are directed toward those items that meet their needs and pref-erences the best. Hence, it is foreseeable that the social web is going to be driven by these recommender systems. De-spite recent advances in recommender systems, there is yet a need to develop reliable, scalable and dependable schemes that would also be resilient to various ways a recommender system may be attacked. Moreover, new and untested ap-plications open up new vulnerabilities, and hence, requiring specific solutions for recommender systems.

In this paper we introduce the first application of iterative probabilistic algorithms in the design and evaluation of rec-ommender systems. In our previous work, inspired by our earlier work on iterative decoding of error-control codes in the presence of stopping sets [9], we proposed an algebraic it-erative algorithm [1] for reputation systems and showed the benefit of using iterative algorithms for trust and reputa-tion management. Here, instead of the algebraic approach, we expand the idea and introduce a fully probabilistic ap-proach for recommender systems based on the belief propa-gation. Belief propagation has been successfully applied to the decoding of turbo codes and Low-Density Parity-Check (LDPC) codes [7]. In iterative decoding of LDPC, every check-vertex (in the graph representation of the code) has some opinion of what the value of each bit-vertex should be. The iterative decoding algorithm would then analyze the collection of these opinions to decide, in each iteration, what value to assign for the bit-vertex under examination. Once the values of the bit-vertices are estimated, in the next iteration, those values are used to determine the satisfaction of the check-vertex values. The contribution of our research stems from the observation that a similar approach can be adapted to provide recommendations (i.e., compute the pre-dicted ratings for the users). Further, to some extent, the analysis of recommender systems resembles that of the code design problem.

We introduce the X  X elief Propagation Based Iterative Rec-ommender System X (BPRS). Belief propagation [7] is a mes-sage passing algorithm for performing interface on graphical models such as Bayesian networks or Markov random fields. It is used for computing marginal distributions of the unob-served nodes conditioned on the observed ones. The belief propagation algorithm is usually described in terms of oper-ations on factor graphs. The factor graph representation of the recommender systems turned out to be a bipartite graph, where the products and users are arranged as two sets of variable and factor nodes that are connected via some edges. The predicted ratings of a user can be computed by message passing between nodes in the graph. In each iteration of the algorithm, all the variable vertices (products), and subse-quently all the factor vertices (users), pass new messages to their neighbors along with their edges until the recom-mendations converge. Our preliminary results indicate that belief propagation based recommender systems are promis-ing both in terms of performance and efficiency. Therefore, we are very optimistic that the outcome of this research will result in a new class of the recommender system which will be robust and accurate.

The rest of this paper is organized as follows. In the rest of this section, we summarize the related work. In Section 2, we describe the proposed BPRS in detail. Next, in Sec-tion 3, we evaluate BPRS via computer simulations using the MovieLens dataset. Finally, in Section 4, we conclude our paper.
In this section, we briefly review the main works in the context. The list of references is not exhaustive due to the page limit. Techniques to build recommender systems can be classified into two main categories: i) content-based fil-tering [2] in which the system uses behavioral data about a user to recommend items similar to those previously con-sumed by the user, and ii) collaborative filtering in which the system compares one user X  X  behavior against the other users X  behaviors and identifies items which were preferred by similar users. Collaborative filtering algorithms also fall into two general classes: i) memory-based algorithms [3, 5] in which the value of an unknown rating is computed by aggregating the ratings of some other users for the same item, and ii) model-based algorithms [6, 8] in which the system uses the collection of the ratings to learn a model that is then used to make rating predictions. Some well known memory-based collaborative filtering algorithms are k-nearest neighbors [5], cosine similarity (vector space sim-ilarity) and Pearson X  X  correlation coefficient based schemes [3]. On the other hand, model-based algorithms include clus-tering methods [8], probabilistic methods [6] and methods exploiting Singular Value Decomposition (SVD), Principal Component Analysis (PCA), or Maximum Margin Matrix Factorization (MMMF) techniques [4, 10]. Different from the existing schemes, the proposed BPRS algorithm is a graph-based iterative probabilistic algorithm motivated by previous success of message passing techniques and belief propagation algorithms in decoding error correcting codes as well as the reputation systems [1,7].
As in every recommender system, our main goal is to pro-vide accurate recommendations for each user by computing the predicted ratings of each user for the items that it did not rate before. We assume two different sets in the system: i) the set of users, and ii) the set of items (products) which are rated by the users and recommended to the users by the system. Users provide feedbacks, in the form of ratings, about the items for which they have an opinion. We let R ij be the predicted rating of user i for the item j .Further, represents the rating previously provided by user i about the item j .

We apply the proposed BPRS algorithm for each user to compute the predicted ratings of that user for the items that it did not rate before. Here, we consider the particular user and compute the predicted ratings for user f to describe the algorithm in detail. The first step in applying belief propaga-tion is to represent the recommender system by a graphical model. For the factor graph representation, we arrange the collection of the users and the items together with their as-sociated relations (i.e., the ratings of the items by the users) as a bipartite graph in Fig. 1. In this representation, each user corresponds to a check vertex in the graph, shown as a square. On the other hand, each item is represented by a bit vertex shown as a hexagon in the graph. Each rating (which is directly provided by a user) is represented by an edge from the check-vertex to the bit-vertex. Hence, if a user i has a rating about the j th item, we place an edge with value R from the i th check-vertex to the bit-vertex representing the j th item. Since we consider the particular user f , the bipar-tite graph is reduced such that only the users that connected via a path to f are kept and all the others are removed from the graph together with their edges. In each iteration, the probabilities are exchanged over the edges of the bipartite graph in Fig. 1, estimating probabilistically the predicted ratings of the items which were not previously rated by user f . We assume that the rating values are integers from the using the R ij values to obtain the predicted ratings for user f (i.e., R fj ).
 Figure 1: Graphical representation of the scheme from user f  X  X  point of view.

Details of BPRS may be described by the following proce-dure. Let R fj at the iteration  X  of the BPRS algorithm. For simplicity, we consider the network in Fig. 1 and describe message ex-change between user k and item a . Werepresentthesetof neighbors of item a and users k and f (for whom we are find-ing the predicted ratings) as N a , N k ,and N f , respectively. Note that neighbors of an item are the users who rated it and neighbors of a user are the items whom it rated. Further, let  X = N a \{ k } and  X  = N k \{ a } ,where X = {  X  1 , X  2 ,..., X  and  X  = {  X  1 , X  2 ,..., X  |  X  | } .

We denote the messages from items to users as  X  and from users to items as  X  . The message vector  X  (  X  ) a  X  k [  X  R fa = (  X   X ) at the  X  th iteration. In other words,  X  (  X  ) is the probability that R fa = at the  X  th iteration. On the other hand,  X  (  X  ) k  X  a denotes the belief (confidence) of user that the R fa value is equal to R ka at the  X  th iteration. This resembles the belief/plausibility concept of the Dempster-Shafer Theory [11]. Given R ka =1,wedenote  X  (  X  ) k  X  a as the belief of the k th user that the R fa must be one (at the iteration). Further, since there is no evidence contrary to the hypothesis R fa = 1, the plausibility that R fa =1is equal to one. In other words, from user k  X  X  point of view, the R fa value is equal to one with probability  X  (  X  ) k  X  a it is equal to one, two, three, four or five with probability (1 tainty in the belief of user k . In order to remove this un-certainty and express  X  (  X  ) k  X  a as a probability of R (  X   X ), we distribute the uncertainty among the pos-sible outcomes (one to five) in proportion to the average point of view, R fa value is equal to one with probability  X  above discussion assumed R ka =1. Wenotethatasimilar statement holds for the case when R ka =2 , 3 , 4 , 5.
For item a , we calculate the probability of R fa being (i.e., the message  X  (  X  ) a  X  k ( ), where  X   X ) by multiplying all probabilities it received from its neighbors excluding the one from user k , as shown in Fig. 2. We note that the previous ratings of user f for whom the recommendations are computed are the base for the algorithm. Hence, the R fj values of the items which are rated by user f are set to the values of edges R fj (i.e., R fj = R fj when j  X  N Therefore, if a  X  N f , the messages generated from item a are constant (do not change from one iteration to the next) since the R fa value of this items is fixed based on the ratings of user f . Hence, the message  X  a  X  k from item a to user at the  X  th iteration is given by  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X  Figure 2: Message from item a to user k at the  X  th iteration.

This computation is repeated for every neighbors of each item. This finishes the first half of the  X  th iteration. During the second half, for each user, we generate the messages (  X  ) and pass to its neighbors. For user k , we calculate its confidence on its ratings by computing the deviation in its ratings R ki ( i  X   X ) based on the messages  X  (  X  ) i  X  k received from its neighbors. Thus, the message from user k to item a at the  X  th iteration is formed using the principles of the belief propagation as where h ( x ) is a mapping defined as h ( x )=  X  i if x = Further,  X  , which is the highest possible deviation of a user is set to 4 in this particular rating system, where the rating values are integers from the set  X . The above equation can be interpreted as one minus the average inconsistency of user k calculated by the messages received from its neighbors (excluding item a ). In other words, reliability of users (in their ratings) is measured by their relative similarity to user f (for whom we compute the recommendations). Hence, the most reliable user in the system is the user with the most similar rating pattern to the user f . This message transfer is illustrated in Fig. 3. Further, it can be shown that (3) can be simplified to The algorithm proceeds to the next iteration in the same way as the  X  th iteration. We clarify that the iterative algorithm starts by computing  X  (1) a  X  k in (1) by using  X  (0) i  X  a and (2)) as initial values for all items, where 0 &lt; &lt; used =0 . 8 throughout the evaluation of BPRS. Figure 3: Message from user k to item a at the  X  th iteration.

At the end of each iteration the predicted ratings of user f are calculated using modified (1). That is, we use the set N a instead of  X  in (1) to compute  X  (  X  ) a ( )(  X   X ). Then we set R fa the predicted rating of every item for user f (for which it did not have any rating). The iterations stop when the R fj values converge for every item. We evaluated the performance of BPRS using the 100K MovieLens dataset 1 via MATLAB. The dataset contains 100 , 000 ratings from 943 users on 1682 items (movies) in which each user has rated at least 20 items. Further, the rating values are integers from 1 to 5. We used the Mean Average Error (MAE) and Root Mean Square Error (RMSE) metrics over the predicted ratin gs (the ones in the test dataset) to measure the performance of BPRS. Furthermore, we com-pared the performance of BPRS with the Item Averaging technique, in which the recommendations are calculated by averaging over all ratings of each item. We illustrated the re-sults in Table 3. Our initial results indicate an improvement of 11% in MAE and 6% in RMSE over the Item Averaging. Therefore, we believe that BPRS is a promising method that will result in a new class of recommender system which will be robust and accurate. Finally, assuming N U users and N items in the system, we obtained the computational com-of multiplications, where c is the average number of nonzero elements in each row of the user-item matrix. We note that due to the sparseness of the user-item matrix, the coefficient c is a small number.
 Table 1: Performance of BPRS and Item Averaging in MAE and RMSE.
Available at: http://www.grouplens.org/node/73. In this paper, we introduced the Belief Propagation Based Iterative Recommender System (BPRS). The scheme is an iterative probabilistic algorithm motivated by the prior suc-cess of message passing techniques and belief propagation al-gorithms on decoding of turbo codes and low-density parity-check codes. BPRS relies on a graph-based representation of an appropriately chosen factor graph for recommender systems. The predicted ratings of users on the products are computed by message passing between nodes in the fac-tor graph until the convergence. We showed that BPRS is a promising method via computer simulations using the MovieLens dataset. Further, our initial results indicated an improvement in the Mean Average Error (MAE) and Root Mean Square Error (RMSE) over the Item Averaging. Therefore, we believe that the outcome of this research will result in a new class of the recommender system which will be robust and accurate. [1] E. Ayday, H. Lee, and F. Fekri. An iterative algorithm [2] M. Balabanovic and Y. Shoham. Fab: Content-based, [3] J. S. Breese, D. Heckerman, and C. Kadie. Empirical [4] K. Goldberg, T. Roeder, D. Gupta, and C. Perkins. [5] J.Herlocker,J.A.Konstan,andJ.Riedl.An [6] T. Hofmann. Latent class models for collaborative [7] F. Kschischang, B. Frey, and H. A. Loeliger. Factor [8] B. Mobasher, H. Dai, T. Luo, and M. Nakagawa. [9] H. Pishro-Nik and F. Fekri. On decoding of [10] B. M. Sarwar, G. Karypis, J. A. Konstan, and J. T. [11] G. Shafer. The Dempster-Shafer theory. Encyclopedia
