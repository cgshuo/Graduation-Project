 The creation, customization, and maintenance of knowledge resources are essential for fostering the full deployment of Language Technologies. The definition and refinement of knowledge resources are time-and resource-consuming ac-tivities. In this paper we explore how the Wiki paradigm for online collaborative content editing can be exploited to gather massive social contributions from common Web users in editing knowledge resources. We discuss the Wikyoto Knowledge Editor, also called Wikyoto. Wikyoto is a collab-orative Web environment that enables users with no knowl-edge engineering background to edit the multilingual net-work of knowledge resources exploited by KYOTO, a cross-lingual text mining system developed in the context of the KYOTO European Project.
 H.4 [ Information Systems Applications ]: Miscellaneous Experimentation, Design Web and Social Knowledge Management, Collaborative edit-ing Web applications, Knowledge resources, Wiki paradigm During the last few years the development of Language Technologies has become more and more dependent on the possibility to rely on sets of properly-structured, rich, and updated Knowledge Resources . Knowledge Resources constitute the background knowledge exploited in several applicative contexts to (semi) automatically interpret, or-ganize, and integrate data that, when we deal with Lan-guage Technologies, are often represented as textual con-tents. Each Knowledge Resource can provide information related to a general or a specific domain (i.e., environment, biology, genomics, etc.) with a proper type and level of data structuring, varying from simple lists of words, to complex semantic networks like lexicons and ontologies. The cre-ation and maintenance of knowledge resources are essential for fostering the full deployment of Language Technologies, but requires a lost of efforts in terms of time and resources invested .

Together with the central role played by Knowledge Re-sources, the last decade has been characterized by the huge diffusion experimented over the Web by the Wiki Paradigm . By means of this expression we refer to the collaborative editing of a specific type of content by exploiting Web-based tools called Wiki environments. The core feature of the Wiki Paradigm is the social aspect of content creation . A Wiki en-vironment indeed enables distributed communities of users to actively contribute to the editing activities of shared con-tent . The users of this kind of tool are pushed to create and share these contents because they feel they are contribut-ing to a community effort useful for producing knowledge for the entire community. Wikipedia together with all the related Wikimedia Foundation Projects 1 represent relevant examples of Wiki environments.

Several distinctive tasks related to the creation and man-agement of Knowldge Resources can be collaboratively per-formed by exploiting the Wiki Paradigm . The content of Knowledge Resources is characterized by continuous change since the knowledge it formalizes is usually in constant evo-lution . In order to be kept up-to-date, Knowledge Resources need editing contributions from editors that are spread over different locations all over the world . Editors usually have different levels of expertise ranging from knowledge engi-neers to domain experts lacking any notion of knowledge formalization. In Wiki environments, editing can be per-formed over the Web, often through a Web browser. There-fore, distributed communities of users can contribute with-out location-or time-related constraints and can cooper-ate to keep the formalized knowledge up-to-date. Intuitive visual Web interfaces can be exploited by users with no knowledge engineering background to edit the set of com-plex knowledge structures that characterize Knowledge Re-sources such as OWL ontologies.

Currently several knowledge editing tools are available, both collaborative and not. These tools can be grouped into two broad categories: http://wikimediafoundation.org/wiki/Our projects
Considering the analysis of the features of these knowledge editing tools, we have designed and developed Wikyoto, the Web-based Wiki environment developed in the context of the KYOTO Project that will be described in the rest of this paper.
After a brief introduction of the KYOTO System and the organization and structure of its knowledge resources, in this Section we focus on the description of Wikyoto.
KYOTO is an information and knowledge sharing system that relies on cross-lingual text mining procedures to inter-pret the meaning of documents in multiple languages. By processing textual content, KYOTO enables the extraction of deep semantic relations and facts as well as their exploita-tion across languages and cultures to support users X  infor-mative needs by means of semantically enhanced searches. KYOTO has been developed since 2008 in the context of the KYOTO European FP7 Project. The interested reader is referred to the Official Web Site of the KYOTO Project, http://www.kyotoproject.eu/.

All the knowledge mining tasks of KYOTO are carried out by exploiting the Multilingual Knowledge Base (MKB), a collection of lexical and ontological knowledge resources. In particular KYOTO mines textual contents by means of a collection of WordNets [6] mapped to the language-independent knowledge items encoded in the KYOTO Central Ontology (see Fig. 1).

The KYOTO Central Ontology is an OWL DL ontol-ogy composed by three layers with a growing level of spe-cialization. The linguistic information characterizing each language involved in KYOTO is encoded in a set of Word-Nets , one for each language. These are computational lex-icons adhering to the WordNet model. As shown in Fig. 1, seven European and Asian languages are addressed by the KYOTO Project (English, Spanish, Italian, Dutch, Basque, Chinese and Japanese). For each language KYOTO includes a Generic WordNet (WN in Fig. 1) and one or more domain
NeOn Toolkit -http://neon-toolkit.org/wiki/Main Page
TopBraid Composer http://www.topquadrant.com/products/TB Composer.html Figure 1: Structure of the KYOTO Multilingual Knowledge Base WordNets (DW in Fig. 1). The Generic WordNet encodes all the generic linguistic information characterizing that lan-guage. The Domain WordNets can be figured out as domain specializations of the Generic one. It is possible to develop each Domain WordNet independently from the Generic one. Proper mappings can be created so as to link synsets (con-cepts) from a Domain WordNet to other synsets belonging to the Generic one.

Wikyoto, one of the core components of the KYOTO sys-tem has been developed to enable KYOTO users (who usu-ally have little or no experience in knowledge engineering) to easily edit the knowledge structures of the MKB. By ac-cessing Wikyoto, users can exploit a visual intuitive inter-face and simplified language-driven interactions to collabo-ratively enrich and refine the Domain WordNet of KYOTO by hiding the complexity of the edited knowledge structures.
Wikyoto is accessible at http://www.wikyoto.net/. From the Wikyoto Web Site, users can browse the user manual and a set of video-tutorials introducing the main features of the tool and showing some example of knowledge editing patterns. A detailed technical description of the system is also available. Wikyoto has been designed and implemented as a Rich Web Application in order to allow users to access it online by means of a browser, anywhere, anytime. The global or-ganization of Wikyoto is outlined in Fig. 2. Wikyoto users with little or no experience in knowledge engineering can: Thanks to Wikyoto, users can also access and exploit a set of external knowledge resources to obtain useful suggestions to enrich the MKB. These resources are: the KYOTO Ter-minology , domain specific SKOS Thesauri and DBpedia 4 .
In Wikyoto, users point out knowledge objects of interest by adding and interlinking new concepts thus collaboratively tailoring the knowledge resources of KYOTO to a specific do-main . By doing so, they implicitly define their information needs. Since users tend to formalize the knowledge struc-tures they consider relevant by adding them to the MKB, the text mining procedures of KYOTO will be automatically targeted to more accurately parse that kind of information from texts, making it available to semantic searches.
We can define Wikyoto as a balance between semantic wikis and ontology editors . Wikyoto aims to build a Web environment with a shallow learning curve for users without experience in knowledge formalization, such as in semantic wikis. By exploiting an interactive Web interface, users are invited to enrich the linguistic knowledge of Domain Word-Nets starting from natural language interactions, but also by browsing domain terminologies. However, as in ontology editors, the resulting knowledge has a degree of formaliza-tion useful for supporting the cross-lingual knowledge min-ing tasks of KYOTO.
We present a brief overview of the layout and the inter-action patterns exploited in the browser-based interface of Wikyoto. By accessing Wikyoto online it is possible to ex-perience the tool.
 Wikyoto users, once authenticated and after having chosen a language to browse and enrich the corresponding Domain WordNet, can access the Web interface of Wikyoto (see Fig. 3).

The interface is divided into two parts: on the right side there is the Domain WordNet Browser and Editor and on the left side the Semantic Resources Browser . Users DBpedia http://wiki.dbpedia.org/ Figure 3: The layout of the Wikyoto Web interface can browse and edit the Domain WordNet of their language of choice through the Domain WordNet Browser and Edi-tor. The Semantic Resource Browser enables users to browse four kinds of Semantic Resources with knowledge import and mapping purposes, through each one of the Semantic Resources Tabs. Since browsing networks of concepts and in particular subsumption hierarchies of concepts is one of the most effective ways to get a sense of how knowledge re-sources are structured, tree-based interface widgets have been extensively exploited in Wikyoto to navigate terminolo-gies and hierarchies of both WordNet synsets and ontolog-ical concepts. Intuitive drag&amp;drop actions allow users to easily rearrange the nodes of hierarchies of concepts as well as to map Domain WordNets of different languages on the language-independent entities of the KYOTO Central Ontology.
Wikyoto has been structured as a Rich Web Application that strongly relies on client-side Web technologies, lan-guages, and standards that are widely supported by the majority of Web browser. HTML and CSS are exploited to define the layout and graphical features of the interface and Javascript to enable client-side user interactions and data elaborations. In particular, the Ext.js Javascript library and AJAX interactions are extensively used in order to:
The high level architecture of Wikyoto is constituted by two main building blocks (see Figure 4):
Ext.js -http://www.sencha.com/products/extjs/
Wikyoto faces several core software design concerns of browser-based real-time collaborative editing systems such as client-server partitioning, data aggregation, and client-side logic design issues. In order to manage concurrent access to data, Wikyoto implements a pessimistic locking protocol managing the synsets as locking data unit. Content ver-sioning is managed by defining the synset as a versioning unit.
This paper has introduced the design and the architec-ture of Wikyoto, the collaborative Web environment useful to gather contributions from non expert users in the editing the multilingual knowledge resources of KYOTO.

By means of Wikyoto several patterns and methods for collaboratively editing knowledge structures useful for min-ing textual content have been exploited and implemented. Although there is still room for further improvement, Wiky-oto is important because it has proposed and experimented a wide range of user interaction possibilities, and has identified critical issues that should be addressed in future projects. [1] Souzis A. Bringing the wiki-way to the semantic web [2] Riechert T. Auer S., Dietzold S. Ontowiki -a tool for [3] El Jerroudi Z. Bai F. Interactive and collaborative [4] Ereteo G. Sander P. Faron C. Buffa M., Gandon F. [5] Tazzoli R. Campanini SE., Castagna P. Platypus wiki: [6] Fellbaum C. (Ed.). Wordnet an electronic lexical [7] Bontcheva K. Cunningham H. Davis B. Handschuh S. [8] V  X  olkel M. Kr  X  otzsch M., Vrandecic D. Semantic [9] Kobayashi I. Loskyll M., Heckmann D. Ubiseditor 3.0: [10] Weiten M. Ontostudio as a ontology engineering [11] Gruber A. Schaffert S., Westenthaler R. Ikewiki: A [12] Kuhn T. Acewiki: Collaborative ontology management [13] Noy N. Tudorache T. Collaborative prot  X eg  X e. [14] Noy NF. Tudorache T., Vendetti J. Web-prot  X eg  X e: A [15] Noy NF. Nyulas C.  X  Ust  X  un TB. Storey MAD.
