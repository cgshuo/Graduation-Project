 With the wide spread use of positioning technology and the increasing deploy-movement of people and other objects (e.g., vehicles). The availability of such trajectories gives rise to a dazzling array of location-based applications, such as ation in such applications is predicting the next location of a moving object. For example, if we could predict the next locations of vehicles given the past trajectories, this knowledge can help us forecast traffic conditions and routes the drivers so as to alleviate traffic jams.
 As another example, consider the location-based social network applications (e.g., Foursquare) that allow users to automatically check in at locations they are visiting. A set of check-ins can be regarded as a trajectory because each check-in has a location tag and a time-stamp respectively, corresponding to where and when the check-in is made. For instance, let us assume that Emma has just checked in at a shopping mall in Foursquare. If we could predict the location (the area in the mall) that she will pass by, we can provide some useful information to her, such as the dress on promotions or the most popular restaurant in the area. ing the individual movement patterns [ 15 ], the collective movement patterns of a group [ 10 ], or both of them [ 3 ]. However, these methods have some serious drawbacks. First, prediction based on individual patterns may suffer from the data sparsity problem, as in some circumstances (e.g., social check-in, and traffic surveillance), an object usually has few past trajectories available, and mean-ingful movement patterns thus cannot be mined. Second, both individual and collective patterns fail to give proper consideration to the similarity between objects. Since different objects may have different travel preferences, objects with similar preferences tend to have similar moving patterns. Finally, methods based on collective patterns of all available trajectories make predictions at too coarse a granularity, and do not make good use of the inherent similarity between some trajectories.
 moving objects, given the sequences of locations that they have just passed by. Inspired by user-based collaborative filtering adopted in recommender systems, we first propose a model named object-clustered Markov model ( object-MM ). The basic idea of object-MM is to predict the next location of an object using the mobility patterns of similar objects. We first compute the spatial distribution of order Markov models are constructed with trajectories in each cluster, which can quantify the movement patterns within that cluster.
 Markov model ( tra-MM ) that exploits the similarity between trajectories. In tra-MM , we first cluster similar trajectories according to a given similarity metric, and then for each cluster, train a variable-order Markov model using the trajecto-ries contained therein. Since object-MM and tra-MM focus on different aspects of the movement patterns and thus complement each other, we propose to combine them using logistic regression. This results in a new model termed objectTra-MM , which is capable of producing more complete and accurate predictions. passed by, we first identify the most relevant cluster based on the object (for object-MM ) or the sequence (for tra-MM ), and then obtain the probability of reaching each possible next location. Finally, the top ranked ones are returned as answers.
 passage records over a period of 31 days in a metropolitan area. The quantita-tive results show that objectTra-MM significantly outperforms the other existing methods. The contributions of this paper can be summarized as follows.  X  X epropose object-MM , an object-clustered Markov model that utilizes the past trajectories of similar objects to predict the next location of a given object.  X  X epresent tra-MM , a trajectory-clustered Markov model that predicts the next location using patterns mined from similar trajectories.  X  We build objectTra-MM , a model that integrates object-MM and tra-MM .
To the best of our knowledge, objectTra-MM is the first model that takes a holistic approach and considers the similarity between objects and the similarity between trajectories in making next location predictions.  X  We conduct extensive experiments with real-world traffic data to investi-gate the effectiveness of objectTra-MM , showing remarkable improvement as compared with baselines.
 Roadmap. The rest of the paper is organized as follows. We review the related work in Section 2, and give the preliminaries of our work in Section 3. In Section 4, we present an object-clustered Markov model. In Section 5, we propose a trajectory-clustered Markov model, and integrate the proposed two models. We present the experimental results and performance analysis in Section 6, and conclude this paper in Section 7. 2.1 Trajectory Mining There have appeared a considerable body of studies that use only the individ-traces to construct a Probabilistic Suffix Tree and predict short-term routes with Variable-order Markov Models. Simmons et al. [ 12 ] build a hidden Markov model (HMM) for every driver, which can predict the future destination and route of the target driver. Liao et al. [ 9 ] introduce a hierarchical Markov model that can learn and infer a user X  X  daily movements through an urban community. The other direction focuses on predicting next locations with the historical pattern tree with all the trajectories to make future location predictions. Morzy [ 11 ] uses all the moving objects X  locations to discover frequent trajectories and movement rules with the PrefixSpan algorithm. Xue et al. [ 14 ] decompose histori-thesised X  trajectories, and then predict the destination with a Markov model. In addition, Chen et al. [ 3 ] consider both individual and collective movement patterns in predicting next locations. 2.2 Social-Media Mining In addition to the trajectories of moving objects, there has also appeared work users X  GPS trajectories. Yin et al. [ 17 ] investigate the problem of trajectory pattern ranking and diversification based on geo-tagged social media. Hasan et al. [ 6 ] analyze urban human mobility and activity patterns using location-based data collected from social media applications.
 [ 16 , 18 ] on predicting next locations with semantic trajectories, where semantic trajectories are a sequence of visited places tagged with semantic information. Ye et al. [ 16 ] first predict the category of user activities with a hidden Markov model and then predict the most likely locations, given the estimated category by integrating the semantic information with the location data. In this section, we first introduce some concepts which are required for the subsequent discussion, and then give an overview of the problem addressed in this paper.
 Definition 1 (location). An object o passes through a set of locations ,where each location l is defined as a point or a region where the position of Definition 2 (Trajectory). The trajectory T is defined as a time-ordered sequence of locations: &lt;l 1 ,l 2 ,...,l n &gt; .
 Definition 3 (Prefix Sequence). For a location l i and a given trajectory T = &lt;l 1 ,l 2 ,...,l n &gt; ,its prefix sequence L j i refers to a length-of
T ending with l i . A naive approach to predicting next locations is to train a Markov model for each object using his/her past trajectories. However, this can be problematic: the individual trajectories are often spotty, and when the object goes to some locations that he (she) has not visited before, the Markov model has no ground to make a prediction. Indeed, the movement patterns of different objects exhibit similarity, and we can infer some unseen patterns of an object through modeling the trajectories of similar objects. This prompts us to propose an object-clustered Markov model (object-MM) . jectories of similar objects. The group of similar objects can be identified by analyzing the spatial distributions. For a known object X  X  testing trajectory, only the trajectories of similar objects are used, and the posterior probabilities are computed with variable-order Markov models. 4.1 Computing the Spatial Locality Matrix For the objects, who are usually localized to the same area are more likely to have similar. So the spatial localities of objects may be expressed as the frequency of each location that one object has visited, which can be described with the formalized definition of global location probability .
 Definition 4 (global location probability). For an object tion probability of location l i  X  X  o is defined as In the above definition, L o is the location set of object number of corresponding location.
 We then build an object spatial locality matrix P with global location prob-ability. The row of P represents the objects; the column stands for the locations; the element of P represents the frequency that an object arrives at a location. A row vector reflects the frequency that one object arrives at every location. The matrix P can be described as follows: p stands for the global location probability of object i arriving at location The matrix P may contain a few zero probabilities, and we can adopt a standard technique (e.g., smoothing) to obtain non-zero conditional probabilities for such states. 4.2 Clustering Objects Having computed the spatial locality matrix, we cluster the similar objects to mine some unseen patterns. Here, the similarity between two objects can be measured by calculating the Kullback-Leibler divergence [ 4 ] between the corre-sponding row vectors of P , but the same methodology still applies when other distance metrics (e.g., the cosine value) are used.
 For the object i and j , P i and P j respectively stand for the row vector of P , which indicates the object X  X  frequency of arriving at different locations, and the similarity between object i and j is measured by With the similarity metric defined, we use a method like K-means[ 5 ]toperform clustering for the objects.
 4.3 Markov Modeling similar objects. We then train K c Markov models for each cluster using only the trajectories contained therein. Let T be an object X  X  trajectory of length arrive at location l n +1 next. The location l n +1 is given by where L is the set of all the locations. The number m is the order of the Markov model.
 sequence containing m locations, L m n = l n  X  ( m  X  1) ,...,l the various conditional probabilities, where ( L m n ) is the number of times that prefix sequence ingset,and ( L m n ,l i ) is the number of times that location after L m n .
 first-order to the m th-order with trajectories in every cluster. For the cluster the location l n +1 that the object will arrive at next is given by where T c is the training set of trajectories in cluster c number of times that prefix sequence L m n occurs in T c ,and ( number of times that location l i occurs immediately after has just passed by, we first identify the cluster that o belongs to, and then adopt the principle of longest match to predict next locations with the most relevant model. That is, if we build the first-, second-, and m th-order Markov models, for the given sequence, we first try to make predictions using the If this model does not contain the corresponding state, we then try to predict next locations using the ( m  X  1)th-order model, and so on. The movement of people often exhibits strong collective characteristics, and we can build a Markov model using the trajectories of all moving objects. How-ever, the model makes predictions at too coarse a granularity, and does not con-sider the inherent similarity between different trajectories. Therefore, we present a trajectory-clustered Markov model (tra-MM), which predicts next locations with the mobility patterns mined from the historical trajectories similar to the testing trajectory sequence. 5.1 Trajectory Clustering One critical step in tra-MM is to cluster the similar trajectories. A trajectory There exist a large volume of distance measures for similarity of time series data, e.g., Euclidean distance and Dynamic Time Warping (DTW). Every distance measure has its own particular superiority, and here we choose to use DTW to measure the distance between two trajectories, but other distance metrics can also be used. The distance between trajectory T i and T j DT W ( T i ,T j )=  X   X   X   X   X   X   X   X   X  0if | T i | = | T j | =0  X  if | T i | =0 or | T j | =0 dist ( l i
DT W ( Rest ( T i ) ,T j ) ,DTW ( T i ,Rest ( T j )) } , where | T | is the length of trajectory T and Rest ( T ) is the subsequence of and l j 1 ,inwhich l i 1 and l j 1 represent the first location in the trajectory T respectively. In our experiments, we set dist ( l i 1 ,l j as l and 0 otherwise.
 With the distance metric defined, we perform clustering on the trajectories. Since huge amounts of trajectories are often received incrementally, clustering should be processed efficiently. However, traditional clustering algorithms are jectory clustering. Therefore, we propose an Incremental Trajectory Clustering method similar to Trajectory Micro-Clustering used in [ 8 ], which is detailed in Algorithm 1. 5.2 Next Location Prediction After clustering trajectories, we train a variable-order Markov model with order therein. Specially, we first compute the transition probability of prefix sequence L 1 n to next location l n +1 , followed by tra-MM . For a given trajectory, we first compute its closest cluster and then choose the corresponding model of the cluster to predict the next locations. Algorithm 1. Incremental Trajectory Clustering 5.3 Integration of object-MM and tra-MM object-MM and tra-MM concentrate on different aspects of the movement pat-terns and thus complement each other, so we integrate them through logistic regression to obtain the final objectTra-MM .
 p i = p i 1 ,p i 2 ,  X  X  X  ,p i n ( w =1for object-MM and w =2for tra-MM ), where n is the number of the locations, and p i j is the probability of location trajectory sequence, and We also have a vector of indicators r i =( r i 1 ,r i 2 ,  X  X  X  ,r i sequence, where r i j = 1 if the actual next location is j predict r i through the logistic regression approach: sion approach. Then the proposed objectTra-MM is trained again using the same parameters on the entire training set. For a testing trajectory sequence, we can We present experiments using a real vehicle passage data set to conduct quan-titative evaluation for the proposed models. In this section, we first describe the data set and settings adopted in our empirical study, and then present the experimental results of our proposal. Finally, we compare the objectTra-MM with other state-of-the-art strategies. 6.1 Datasets and Settings In our study, we exploit a real vehicle passage data set which is collected over 10,344,058 records from the data center during a period of 31 days. Each record here contains a vehicle ID, a location of the surveillance camera, and a timestamp of passage. We pre-process them to formulate trajectories, and only consider tra-jectories that contain at least three locations to make the model more robust. According to statistics, one vehicle only has about 28 trajectories in a month on average, which validates the data sparsity problem mentioned above. In the to construct the models, and adopt the data in the next 7 days to fine tune the parameters. Next, 746,790 trajectories in the first 27 days are used to train the final models with the tuned parameters. Finally, we use the remaining 4-day 104,129 trajectories to formulate the test data set.
 To compare different Markov model-based methods, we use two evaluation metrics, namely, accuracy and average precision .
 Accuracy is defined as the ratio of the number of trajectories for which the model is able to correctly predict to the total number of trajectories in the test set. That is, accuracy = p ( l ) / |T | , where |T | is the number of trajectories in the testing set, and p ( l )is1if l is the true next location and 0 otherwise. Average precision is defined as ap = ( p ( l i ) /i ) / |T | position in the predicted list, and p ( l i ) takes the value of 1 if the predicted 6.2 Evaluation of Models In this section, we evaluate the performance of our proposed models, namely, object-MM , tra-MM and their integration objectTra-MM . For each experiment, we perform 50 runs and report the average of the results. First, we study the effect of the order of Markov model by varying order from 1 to 5. We respectively set different parameters for the models: object-MM (cluster number 80), tra-MM (distance threshold  X  = 6, 8), and objectTra-MM ( Since the values of cluster number and distance threshold are estimations, we vary them in a range to obtain more comprehensive performance evaluation. We demonstrate the performances using top-1 accuracy (accuracy@1) and top-5 average precision (ap@5).
 AsshowninFig. 1 , the accuracy and average precision of all the models have an apparent improvement when the order increases from 1 to 2, and start to decrease as we further continue to increase the order. The higher-order model has a number of limitations associated with high state-space complexity, and gradually deteriorates the overall prediction accuracy. So we set the order of Markov model at 2 in the following experiments.
 Next, We study the effect of the cluster number K c on the performance of object-MM . To this end, we vary K c from 5 to 200 at a step of 5, and demonstrate the results in Fig. 2 (a). Clearly, as we increase the cluster number, the object-MM achieves its maximum accuracy at the cluster number 80, and the accuracy starts to decrease when we continue to further increase the cluster number. The decrease is because having too many or too few clusters with either hurts the cohesiveness or the separation of the clusters. The average precision has similar change, and comes to the maximum when the cluster number is around 80. it on tra-MM . The results are shown in Fig. 2 (b). Initially an increase in the threshold, is accompanied by an increase in the accuracy and average precision, and they reach the peak values when the threshold is 8. As we continue to further increase the distance threshold, the accuracy and average precision start to decrease and remain stable. This decrease is because we have to put some dissimilar trajectories in the same cluster, affecting the overall accuracy. K c = 80) , tra-MM (distance threshold  X  =8) and objectTra-MM (  X  =8) , and evaluate their performances. A number of interesting observations can be made from Fig. 3 . On one hand, for the three models, it is obvious that the accuracy and average precision improve as we increase k . On the other hand, for any k , tra-MM performs better than object-MM ,and objectTra-MM obtains the best performance, validating the effectiveness of the integration of two models. 6.3 Comparisons with Baselines To evaluate the effectiveness of objectTra-MM , we compare against some start-of-the-art approaches including VMM [ 15 ], WhereNext [ 10 ]and NLPMM [ 3 ]. VMM discovers individual patterns for each object based on its own historical data; WhereNext uses the previous movements of all moving objects to make future location predictions; NLPMM considers both individual and collective movement patterns in making predictions. We choose the optimal parameters for the start-of-the-art approaches after many experiments. The parameters of VMM are set as follows: memory length N =2,  X  =0.3, and N min the support for constructing T-pattern tree is 20. For the NLPMM ,theMarkov order is 2. For the objectTra-MM , the cluster number K c threshold  X  is 8. Fig. 4 shows the performance comparison of objectTra-MM with baselines in terms of top-1 accuracy and top-5 average precision. objectTra-MM performs addition, we also evaluate the performances of all the models with different sizes of training set. It is apparent that objectTra-MM has the best top-1 accuracy over other methods for any training set size.
 In this paper, we have proposed a next location predictor objectTra-MM to predict the next location of an object with a given sequence of locations. The proposed objectTra-MM consists of two models: object-clustered Markov model (object-MM) and trajectory-clustered Markov model (tra-MM). object-MM ana-For each cluster, object-MM trains a variable-order Markov model using the tra-jectories contained therein. tra-MM clusters trajectories using a given similarity metric, and trains a series of Markov models with trajectories in each cluster. We have evaluated the proposed models using a real vehicle passage record data set, and the experiments show that the proposed model significantly outperforms the state-of-the-art methods ( VMM , WhereNext and NLPMM ).

