
In recent years, data mining techniques h ave been extended beyond traditional do-mains such as business and marketing and applied to the physical science arena.
Many of the hallmark characteristics of dat a mining, including detection of import-ant patterns, handling of large search sp aces, and coping with noisy datasets, are well suited for the unique challenges presented by chemical domains. The substructure discovery subdomain is a classic example of the need for powerful, efficient tools to discover unknown patterns. The motivation is that the structure of a molecule is believed to be linked to its biochemical function. This structure X  X unction relationship is critical to understanding the mechanisms of drug activity, toxicity, and disease. which is suitable for domains such as toxicology and drug discovery. Macromolec-ular research has traditionally involved sequence and metastructural mining since existing structural algorithms do not scale well or handle noise appropriately. Macro-molecules have large numbers of atoms, large interesting substructures, and a high amount of three-dimensional coordinate noise due to limitations of current coor-dinate retrieval techniques. Macromolecule size can produce an enormous search space, and macromolecules can have thousands of atoms, each analogous to an object in a spatial database. Even smalle r combinations of these atoms can lead to a computationally infeasible search space. For instance, a macromolecule con-taining 5000 atoms contains 12.5 million 2 -atomsets and 20 billion 3-atomsets.
The problem is exacerbated by the fact that interesting patterns in macromolecules often contain at least 5 atoms and perh aps 20 or more. This is because macro-molecules are polymers, consisting of repeated similar subcomponents. Thus, inter-esting patterns are typically particular conformations and sequences of these sub-components.
 they target, it is highly desirable to have a g eneral structural mining algorithm that is robust enough to find complex motifs in noisy data but can also identify substructures in small organic compounds.
 traditional frequent-pattern techniques with search space and noise-handling opti-mizations to efficiently identify both intramolecular and intermolecular substructures even in large coordinate datasets. One of the key advantages of our approach is its relative independence from detailed chemical domain knowledge. While this algo-rithm was designed to address issues related to macromolecules, it is fully capable of efficiently identifying substructures in any spatial coordinate data, without the need for in-depth scientific understanding of the dataset X  X  properties.
 fied range, an optimization that is possibl e because atom X  X tom interaction is inversely related to distance. This and other search space reductions allow efficient construction of larger substructures. Furthermore, we employ an approximate counting mechanism and distance binning to minimize coordinate data noise.
 ciently identifying the peptide backbone and secondary structures of several proteins.
This serves as a validation that our technique can indeed find meaningful substruc-tures without protein-specific chemical knowledge. We then show that the approach is more robust than traditional sequence-based approaches at determining structural sim-ilarity between proteins, including high structural similarity of Ribonuclease A from two evolutionarily diverse species. Last, we demonstrate that our approach, when adapted for intermolecular substructure discovery, identifies discriminating motifs in drug compounds that successfully classify th e molecules into their respective func-tional classes.
 ing process. Frequent substructures identified by this toolkit can then be fed into var-ious data mining techniques, including classification (Quinlan 1996), clustering (Jain and Dubes 1988), and sequence mining (Parthasarathy et al. 1999) algorithms, to identify structure-derived functional classes. Not only does this dramatically reduce the time to develop such classes, but the technique is likely to improve the quality of the classes since they are formed directly from the three-dimensional structure.
We begin in Sect. 2 by presenting related work. We then present the support framework for the algorithm in Sect. 3. The al gorithm itself is presented in Sect. 4, followed by various optimizations for addressing issues related to studying macro-molecules in Sect. 5. Finally, we present e xperimental results for both performance and accuracy in Sect. 6.
Many of the techniques recently developed f or efficient data mining of frequent pat-terns are applicable to substructure discovery in molecules. The Apriori algorithm presented in Agrawal and Srikant (1994) dramatically reduces the search space of a database through use of antimonotone frequency constraints. The algorithm com-bines smaller patterns to produce only those candidate larger patterns that can pos-sibly be frequent. Recent research has exa mined spatial data for such domains as cartography, network topography, and geographical information systems (Koperski et al. 1998). Sequence analysis and episodes have been analyzed as well (Agrawal and
Srikant 1995; Mannila and Toivonen 1996).
Application of data mining to discover frequent substructure patterns in three-dimen-sional graphs is not novel; however, previous research targeted primarily small molecules and did not address issues of scalability and minimization of noise ef-fects. The work of Wang et al. (1997) detects substructures of three-dimensional graphs, but the algorithm does not consider atom type, which due to steric and electrostatic behavior is critical to the quality of discovered substructures. Dehaspe et al. (1998) more explicitly target the chemical domain by considering atom and bond types as well as background biological information. However, this approach ap-pears to have scalability issues for even sma ll toxicological compounds, let alone for macromolecules. Other techniques utilize g raph theory to perform topological pattern matching (Borgelt and Berthold 2002; Kuramochi and Karypis 2002); however, these techniques require that bond information be known, which for macromolecules may not be the case. Djoko et al. (1995) and De Raedt and Kramer (2001) present more general and scalable approaches to substructure discovery, including using compres-sion and interestingness heuristics as well as domain knowledge bias.
Recently macromolecules such as proteins and nucleic acids have received in-creased attention in data mining (King et al. 2000; Pan et al. 2002; Zheng and
Chan 2002). Most macromolecular analysis has focused primarily on sequence an-alysis, which at best only approximates structure X  X unction relationships. For example,
Jonassen and Eidhammer (2000) analyze a small group of PDB protein data for sub-structure patterns through sequences of proximal amino acids. This technique does consider some metastructure information, but it still does not fully model structural aspects of the proteins. Kim et al. (2002) present a powerful method for obtaining useful metastructural information when obtaining coordinate data from crystallogra-phy is infeasible. This approach comp lements the work presented here.
 and Coatney (2002), providing a general toolkit framework for mining motifs, a for-mal description of the algorithm, several performance optimizations, and quantified experimental results for the algorithm and optimizations. This paper also extends the analysis of secondary structures to include a  X  using substructure fingerprints for finding similarity between proteins. We also in-clude more recent work extending Motif Miner into new structural domains.
The MotifMiner toolkit was designed t o accommodate both macromolecule mining specifically and scientific motif mining generally. The following tenets guided the project development:  X  Provide scientists with a set of core, commonly used molecular services. This  X  Define an abstract middle-layer data model that provides a common interface for  X  Provide a simple mechan ism for converting molecular data from new domains  X  Provide a means to extend the system at all levels of the framework. allows for rapid development of the mining algorithms. An overview of this frame-work is shown in Fig. 1. The remainder of the section describes the framework in more detail.
The MotifMiner toolkit is a Java-based application. We choose an object-oriented language primarily to support the flexibility requirements of our design. Java has rich support for interfaces that facilitate communication between subsystems, and subclasses provide the required extensibility. The MotifMiner framework is composed of three components: converters ,the abstract data model ,andthe core toolkit . Each is explained in more detail below.
Molecules are represented in a variety of ways, depending on the chemical domain X  X  needs and current technology. One representation is a three-dimensional coordinate graph, where atoms are nodes and bonds are edges. This is applicable primarily to small organic compounds such as drugs, where the complete chemical structure is known. An example is the commonly used MDL MOL format. This type of repre-sentation is insufficient for molecules that only have their atom coordinates defined.
This may be due to limitations in empirical techniques such as X-ray crystallography or simplifications made in molecular simulation software. An example of this is the PDB format for macromolecules.

To provide a common framework for mining structural data, MotifMiner defines a structure converter interface and uses v arious implementations to transform an ex-ternal structure format into the data model X  X  abstract representation. Once a domain X  X  data have been converted into the common r epresentation, the user is immediately able to run a host of core services.
 MotifMiner explicitly supports several co mmon structural formats; these include PDB, MOL (V2000), MOL2 (V3000), and basic Euclidean coordinate (x,y,z) formats.
A parsing service automatically determines the correct converter and applies it to the incoming data. Extending MotifMiner X  X  structure format support is trivial. It simply requires writing a new converter that adhere s to an interface; for the formats listed above, this amounts to less than 100 lines of code.
The fundamental object in the MotifMiner data model is the structure. In an effort to be as general as possible and mine on exact three-dimensional structural infor-mation, MotifMiner X  X  structure contains only atoms and their three-dimensional Eu-clidean coordinates. Actual bonds are ignored; instead the framework considers vir-tual bonds known as  X  X ining bonds X . These bonds describe the two atoms X  types and the distance between them, capturing interatom relationships without specific domain knowledge. Actual bonds are implicitly handled th rough these distance relationships, and even normalized aromatic bonds are h andled without specialized chemical do-main knowledge. In addition, nonconnected spatial interactions are described in this manner.

A motif is an abstract substructure, irre spective of its orientation in space. We define a new concept, the atomset , that captures all information of a particular three-dimensional substructure in a form that f acilitates quick comparison without the need for coordinate translation. We store three-dimensional information between a pair of atoms, A i and A j ,ina mining bond . The mining bond M ( form
Ak-atomset X , which is a substructure containing k connected atoms, is then defined as a tuple of the form where A i is the i -th atom and S X is the set of mining bonds describing the atom-set. By defining atom pair combinations with mining bonds, the three-dimensional subgraph is completely represented in a redundant form such that two atomsets X and Y are considered to be the same motif if S X = S Y . While stereochemistry is not explicitly handled by this representation, it can be implicitly handled by appending a chirality label (e.g., L or R) to the atom type, such that different stereoisomers produce different, nonequivalent atomsets.
 a discrete number of atom types exist, we can provide an enumeration of these and store the types as an integer index. Furthermore, the binned distance can also be represented as the integer bin value. Thus we can represent an entire mining bond efficiently as a single numeric value, where the highest bits represent the types of the two atoms and the lower bits represent the binned distance between them. The toolkit provides implementation support for mining bonds from 8 to 64 bits, configurable by the user. Small mining bonds are provided for small memory footprint applications, while larger mining bonds are suitable for more complex analysis.
 for each atom pair. The list is sorted in inc reasing order such that two motifs can be compared in linear time by comparing their sorted numeric lists. Generating hash codes for individual mining bonds and motifs is trivial and simply requires hashing on the numeric values.
 print is constructed from a set of interesting motifs for a given set of structures. The fingerprint is either a binary or frequency vector describing which motifs appear in that particular structure. This is a common metastructure representation and is used both in several services and as an export format for results.
 parameters. These parameters may be pro vided from a variety of sources, including file, command-line, and GUI dialog. Parameters even exist for dynamic selection of data model objects and services based on the user X  X  needs.
The core toolkit provides services for the MotifMiner X  X  abstract data model and per-forms most of the computational work for the framework. MotifMiner defines inter-faces for each service, specifying the exp ected inputs, outputs, and behavior of the service. Implementations then conform to t his interface such that the best one for a particular task may be chosen dynamically.
 tions. Users may use these complex services or design their own combinations for a particular purpose. MotifMiner provides sev eral core services that attempt to cover the most common structural pattern mining task including the intramolecule and in-termolecule frequent-motif discovery algorithms detailed in Sect. 4.
A universal-motif toolkit is not a realistic goal; there may be problems that require new services (i.e., searchin g tools), algorithm developments that provide faster im-plementations of existing services, new or emerging structure formats that must be supported (i.e., CML), etc. As such, not only do we attempt to provide the most general toolkit possible, but we have designed the toolkit to be readily extensible.
MotifMiner supports two fundamentally different types of extension: implementa-tion extension and framework extension. Implementation extension simply enhances one of the existing MotifMiner components by providing a new implementation for a standard interface. An example is providi ng a new structure converter for a pro-prietary coordinate format.

Framework extension involves a wholesale addition to, rather than enhancement of, the existing MotifMiner framework. This is primarily done when the existing framework is insufficient for solving the scientist X  X  current problem. While this re-quires more work than implementation extension, the MotifMiner still provides rich support mechanisms to assist the scientist X  X  development. The application environ-ment, configuration, I/O, data model objects, and services are all available to the scientist and can function as a library for building more complex systems. An ex-ample is extending MotifMiner to consider experimental data.

The extensibility of the MotifMiner tool kit has been validated through our own research. We have implemented new services, enhanced structure format support, and branched out into different bioch emical domains. We not only accomplished these tasks with minimal isolated changes, we also validated their usefulness against manual research of domain experts (details in Sect. 6).
We now turn our attention to our frequent-motif mining algorithms, which have been implemented on top of the MotifMiner framework. We first describe key concepts used in the algorithms and then provide algorithm details.
An exhaustive analysis of possible atom combinations, even at lower levels, is computationally infeasible for large gra phs such as macromolecules. Application of chemical domain knowledge through range pruning affords a great reduction in search space and allows us to fully describe the three-dimensional representation of a substructure with fewer mining bonds. Range is a user-specified constraint defined as the maximum allowable Euclidean distance between two atoms for them to be considered an atom pair.

The optimization relies on the fact th at the associated energy between any two atoms in a molecule is inversely related to the interatom distance. Beyond a certain range, atom X  X tom interaction is negligible and the two atoms can be considered independent of one another. Thus, we can lim it the space of atom pairs for candidate 2-atomset generation, ignoring atom combinations outside of the range.

The range of interaction differs depending on the atom types involved. For biomolecules, the predominant atom by far is carbon, so we ensure that the range sufficiently describes possible carbon X  X arbon interactions. The typical carbon X  X arbon single bond has a bond length of 1 . 54  X , with double and triple bonds having shorter lengths. We have found that a range of 4 . 5  X , roughly three times a carbon X  X arbon single bond, is sufficient for encompassing all possible carbon X  X arbon interactions (Li and Parthasarathy 2001) and hydrogen bonding.
 relax this restriction when building up larger substructures such that two atoms may be included in an atomset even if they do not satisfy the range constraint, so long as they share common atoms that do meet the range constraint. For instance, if we have two atomsets X and Y with atoms ( A 1 , A 2 , A 3 )and( A we allow the creation of a candidate atomset Z with atoms ( A distance ( A 1 , A 4 ) &gt; range.
 substructures; this in turn would limit range pruning X  X  ability to reduce the search space, which is a key optimization of this a lgorithm. Also, such a relaxation allows us to reduce the number of mining bonds needed to fully describe the atomset since atoms not directly joined by mining bonds are still indirectly associated through mining bonds with their shared atoms. This si gnificantly improves both computational performance and memory efficiency.
Our approach to generating incremental k-atomsets from two (k-1)-atomsets is simi-lar in concept to frequent-pattern discovery algorithms. However, our approach is distinctly different from traditional tec hniques in that removal of internal elements can cause the resulting substructures to become infrequent based on the range con-straint. We describe here a range-based antimonotone frequency restriction for the chemical domain.

Definition 4.1. Extremal atoms for a given k-atom structure are the two or more atoms that are furthest away from each other within the structure.

Definition 4.2. Extremal (k-1)-atom substructures for a given k-atom substructure are those substructures that contain at least one of the extremal atoms.
These definitions lead to the statement of Lemma 4.1, which will help prune the number of potentially frequent patterns (candidate atomsets) that will need to be evaluated.

Lemma 4.1. Any frequently occurring k-atom structure has at least two (k-1)-atom substructures that are frequent and tha t satisfy the input range criteria (R).
Corollary 4.1. For any frequently occurring k-atom structure, all of its extremal substructures are frequent and satisfy the input range criteria (R).
It is trivial to show that all substructures of a given frequent substructure must be frequent. However, not all of these substructures will satisfy the range criteria. A sim-ple example that shows why this is so involves a line of points each separated by a distance corresponding to the range. If one takes out any of the points except the two end points, the resulting substructure will not satisfy the range criteria be-cause eliminating such a point breaks the linkage. The rest of the proof is based on the fact that eliminating either of the extremal points cannot possibly break the linkage.

Now assume we are given the set S of frequently occurring (k-1)-atomsets. By the above lemma and its corollary, the set C of potentially frequent k-atomsets is limited to those candidates whose extremal substructures are in S . In essence, if the extremal substructures are not in S , then the potential candidate can never be frequent.
Candidate generation and pruning of (k+1)-a tomsets from frequent k-atomsets require special consideration. In a standard frequent-pattern discovery approach, (k+1)-sets are constructed from k-sets without regard to the source from which the sets origi-nated. Infrequent (k+1)-sets are then pruned by rescanning the source and counting the number of occurrences for each (k+1)-s et. This approach in a molecular context is computationally very expensive due to the vast number of possible structural per-mutations. Rather, candidate generation and pruning are performed using only the available atomsets and do not rescan the entire molecule. (k+1)-atomsets are formed using only frequent k-atomsets; this approach is pos-sible since atomset frequency is antimonotone. Rather than simply generating incre-mented substructure patterns , which would then be used to query the molecule for frequency, all instances of (k+1)-atomsets are generated by combining the atoms of frequent k-atomsets. This is detailed in Fig. 2.

Pruning is then accomplished simply by counting the number of atomsets that define, based on their mining bond sets, the same substructure, keeping those whose count is above a user-specified minimum support. This approach is faster than tra-ditional approaches both because coun ting occurs without the need to go back to the entire molecule and becau se counting is done through pattern X  X attern instead of pattern X  X ataset matching, which results in far fewer comparisons. Standard pruning is straightforward and can be accomplishe d simply by hashing atomsets into bins of substructures based on the set of mining bonds. More advanced approaches to pruning are needed when handling noisy data; this will be discussed in Sect. 5.
The complete algorithm is shown in Fig. 3. This algorithm is general enough to handle substructure analysis for any type of molecule and with additional optimiza-tions is suitable for analyzing macromolecules.
 The intramolecule discovery algorithm is ideal for analysis of complex molecules.
However, often we are interested in analyzing chemical patterns common across aset of relatively simple compounds. Here, we describe an adaptation of our intramolecule discovery to handle sets of structures.
 the same service but provide a new implem entation of the structure interface, the multistructure, that is an aggregate of a set of structures. Since the intrastructure service uses range pruning to restrict initial motif generation, we can displace the coordinates of each structure in the multistr ucture such that each or iginal structure is effectively isolated from the others. The multistructure maintains an index of atoms to original structures such that we can map motifs to structures.
 lyzes it in fundamentally the same way as before; the main difference is that the substructures are actually interstructure motifs disguised as intrastructure mo-tifs of the multistructure. With this extension, we have a fully functioning in-termolecule discovery algorithm with less than 100 new lines of code. The de-velopment of this algorithm is a testament to the generality and extensibility of
MotifMiner.
Distance binning and resolution for noise handling: Macromolecules are difficult to isolate, crystallize, and analyze; even with impressive advances in the field, the resulting data are still relatively noisy. One approach to handling this noise is dis-cretization, a common data mining technique (Dougherty et al. 1995). We discretize the raw Euclidean distance between two atoms by binning; a resolution value is cho-sen that divides the distance into equiwidth bins, represented efficiently as bits in the mining bond. Binning of the data not only simplifies calculations (thus improving performance), but it also handles minor fluctuations in distance. Initial studies on a PDB protein dataset suggest that algorithm resolutions between 0 best minimize noise effects while maintaining meaningful atom X  X tom relationships.
Studies have also revealed a direct relationship between crystallography resolutions and algorithm resolutions suitable for detecting meaningful substructures.
Recursive fuzzy hashin g for noise handling: Due to the high level of noise inherent in current macromolecule structure deduction techniques, strict matching of patterns, even with binning, leads to poor results. What is needed is a pruning mechanism that relaxes the strict matching criteria such that two atomsets X and Y are considered to be the same chemical substructure if S X  X  S Y . One such approach is recursive fuzzy hashing (RFH), in which atomsets are analyzed one mining bond at a time and hashed (using the current mining bond X  X  integer value) both to the exact and neighboring locations.

This is significantly more computationally expensive than the standard approach; however, it is essential for effectively minimizing noise effects to allow for identifi-cation of larger substructures. This will be quantified in the next section; we present the technique in Fig. 4.

RFH produces a top-down hash tree [see Coffman and Eve (1970) for a thorough description of hash trees], with the root node representing the set of candidate atom-sets for the particular k. We recursively split the nodes into child hash bins based on the atomsets X  mining bond for a particular tree level. We hash both to the exact hash location and  X  1 resolution unit. Hash bins whose atomset count is less than a user-specified minimum support are pruned from further consideration. Once the tree is constructed, a new set of pruned atomsets is generated from the remaining leaf nodes.

Depth-first pruning for performance: Hash trees produced by RFH are only as deep as the number of mining bonds used to represent the atomsets. The tree is significantly wider, however, due both to the large numbers (thousands or tens of thousands) of atomsets and the use of fuzzy hashing, which can triple the width of the tree.

Breadth-first tree analysis must generate all hash bins for a particular depth before being able to prune away infrequent bins and free up memory. This can be quite memory intensive and does not scale well to deeper depths, where the tree width explodes. Depth-first analysis, on the other hand, analyzes only one branch of the tree at a time, which is a fraction of the tree X  X  width. This results in a much smaller memory footprint.

As an example, let us consider a hash tree g enerated for hemoglobin. For a breadth-first analysis at level 7, the memory foot print includes 15,000 bins, each including a group of atomset references. A depth-first analysis considers only 80 bins at any given time, requiring 1 2 % of the memory. In larger substructure analyses, this ratio will be even more pronounced. Clearly the dep th-first approach is more memory ef-ficient. Without further optimizations the breadth-first approach leads to an explosion of the memory space at moderate ( k = 6) levels, while depth-first analysis maintains a small memory footprint even at higher ( k  X  9) levels.

Dynamic duplicate screening for performance: The RFH approach is not with-out its drawbacks. Its primary issue is redundant recursive calculations caused by overlapping hash bins. A naive approach to RFH prunes all duplicate substructure bins once the hash tree has been fully formed. However, this leads to a tremendous amount of redundant work.
 dles duplicates during the run. At each level of the hashing algorithm, the set of substructure bins are analyzed and duplicat es are discarded from further consider-ation. While the analysis itself is expensive, significant time is saved in avoiding redundant calculations. In addition to speed improvements, this technique also has the benefit of significantly reducing the memory footprint needed for the hash tree by decreasing its width.

Analyzing polymer backbones for performance: Often we are interested primarily in only the global conformation and superstructures of macromolecules. When this is the case, we can further reduce the search space of a given macromolecule by considering only the polymer X  X  backbone. Such an approach has the advantage of reducing the number of atoms and candidate atomsets through a preprocessing step.
We applied this approach to the protein domain to analyze backbone conformations, and the results were promising. As an example, the backbone-only approach iden-tified the same peptide substructures of lysozyme as the full-blown search and ran five times faster . All experiments were conducted under the Java 1.4 runtime environment on a 4 CPU
Sun 420R workgroup server and were allocated 1 GB of memory. The program uti-lizes multithreading to take advantage of an SMP architecture.
The initial algorithm presented in Li and Parthasarathy (2001) utilized k generation in which k-atomsets were co mbined with 2-atomsets to produce (k+1)-atomsets. This approach was taken prior to full development of the range pruning theory presented in Sect. 4.2. With completion of this theory, we are now able to take full advantage of range pruning through k + k candidate generation. k atomsets with themselves for a more restricted superset of the frequent incremented (k+1)-atomsets than k + 2.
 space, the k + k approach generates 13% of 4-atomsets produced by k 1% of 5-atomsets. The result is a threefold improvement in performance at k a fourfold improvement at k = 5. The benefit of using k + larger substructure size; this is due to the larger number of possible combinations in the k + 2 approach and the increased ability of k + k to restrict atomset permutations.
For the remaining experiments, we utilize only k + k candidate generation.
Range pruning, as mentioned before, has a dramatic impact on reduction of search space. Table 1 demonstrates this for the prot ein lysozyme for several different ranges.
As expected, search space, and thus runtim e, decreases as the range becomes more restrictive. So long as the range incorpor ates all atom X  X tom interactions of inter-est, there is no loss of domain-relevant information. Traditional substructure dis-covery approaches do not consider range pruning and thus fail to scale for macro-molecules.
The benefits of the DDS optimization are quite pronounced, particularly at higher levels, due to its ability to handle the exponential growth of redundant calculations.
This is illustrated in Table 2. Clearly, DDS maintains a manageable number of dupli-cates even at higher levels. On the other ha nd, the standard approach, which screens duplicates only at the end of the run, suffers from an explosive exponential growth rate of duplicate calculations, as evide nced by over 2.5 million atomsets in dupli-cate substructures during level 5 of the run. For this same level, DDS produces only 19,000 atomsets, a mere 1% of the standard approach.

At higher levels, the impressive gains of DDS become evident. For instance, a hemoglobin run to identify  X  -helices using 9-atomsets took 90 min without DDS. With the optimization, the run took only 5 min, resulting in an 18-fold increase .
We combined all optimizations and compared the performance with traditional struc-ture discovery techniques. The optimized run used k depth-first RFH pruning with DDS. The standard run used k with standard breadth-first RFH. The run analyzed the first subunit of hemoglobin (PDB ID: 1BZ0) with minimum support of 70, resolution of 0.06, and range of 4.5.
Note that the runs located the same substructures; they merely differed in their ap-proach to generating candidates and locating these substructures.
 mization approach is capable of efficiently detecting large substructures while main-taining a small memory footprint. On the other hand, the standard run exhibits an explosive search space; this leads to poor performance and memory use.
We now turn to identifying relevant substructures in protein macromolecules as vali-dation of our technique. We begin by analyzing the 128-amino-acid protein lysozyme (PDB ID: 193L) for 5-atomset peptide substructures. We configured the algorithm with a minimum support of 100 and range of 4 . 5  X . A resolution of 0 settled on for RFH after attempting a series of values.
 cantly increases computation and thus runtime when compared to traditional stan-dard hashing techniques. The impact this has on performance can be pronounced, as shown by the large increase in runtime. We also analyzed lysozyme without using
RFH, and the strength of RFH for handling noise is evident; RFH was able to find 128 5-atomsets that describe the same peptide substructure. Thus, RFH is capable of fully defining lysozyme X  X  peptide bac kbone. Even with significant optimizations to resolution, the standard approach found at most 125 atomsets. Above k standard approach could not reliably detect any substructures. We therefore rely on RFH to identify interesting protein substructures.

The 5-atomsets found in lysozyme represent one substructure pattern, that of a peptide. The substructure is shown in Fig. 5a. This includes the backbone oxygen and carbon, the  X  -carbon of residue i , and the backbone nitrogen and residue i + 1. Combining the atomsets, we can reconstruct the peptide backbone of lysozyme in its entirety and compare it with the original protein structure, shown in Fig. 5b,c;  X  -helices are indicated by red cylinders, and blue arrows.
We now extend the application of our algorithm to identification of we consider the first 141-amino-acid subunit of hemoglobin (PDB ID: 1ZB0). We first attempt to identify smaller substructures that are indicative of alpha helices. We supply the algorithm with a minimum support of 80 and same resolution and range, and we consider 6-atomsets. Two unique substructures consisting of 212 6-atomsets were found, as shown in Fig. 6.
 seems to indicate that in an  X  -helix-rich protein such as hemoglobin, the residue i + 1 is more likely to form a certain conserved structure, as represented by the first substructure. This suggests that protein secondary structures can be detected even at lower substructure sizes. The second substructure appears to be simply an incremented version of the peptide bond and s o is of little interest to the identification of  X  -helices.
 structures. We apply the algorithm on a smaller section of the hemoglobin subunit, which contains the first two  X  -helices. We set a minimum support of 15, range of 4 . 5  X , and resolution of 0 . 07  X .
 amino acid residues. The substructure is shown in Fig. 7a. The substructure contains terminal atoms that are outside the specified range; such a substructure can be formed since we relax range pruning during larger candidate atomset generation. The atoms that form the 9-atom substructure are mostly backbone atoms and in the helical region. Based on a comparison between the full structure and the algorithmically reformed helices, as shown in Fig. 7b and c, we conclude that this substructure is one of the basic structural units of the
We next set out to discover  X  -sheets. We examined the antibody decarboxylase cata-lytic antibody 21D8-hapten complex (PDB ID: 1C5C), a two-chain tein. We considered the first 73 residues of the first chain; this portion contains 3 sheets composed of 11  X  -strands.
 we employed the backbone optimization for preprocessing the protein. This reduced the search space by a factor of 2. A larger range of 6 . 5  X  was chosen to accommodate for the linear nature of these strands. We set the minimum support to 10 in an attempt to capture all 11 strands of interest. Lastly, we used a higher resolution, 0 to poor coordinate resolution.
 describe different portions of the same substructure. This substructure consists of three linear, connected peptides. These re sults are validated by biochemical data showing that  X  -strands have a linear structure a nd consist of at least three amino acids.

Figure 8 shows the first two  X  -strands of Antibody 21D8 along with two differ-ent atomset representations. The results when compared against the original antibody are impressive: between the fi ve classes of atomsets, all constructed. Furthermore, a smaller portion (15%) of atomsets describes the ends of beta -strands and is distinct from central beta -strand atomsets. This shows the power of the algorithm for detecting subtle yet important differences in three-dimensional structure.
Last, we demonstrate how structural features, represented by substructure fingerprints, provide better insight into structure X  X unction relationships than traditional sequence analysis. A substructure fingerprint is a vector representation of a set of interesting substructures. Elements contained in that molecule are marked either with a 1 for a bit vector or with the occurrence count for a frequency vector. Elements not in the molecule are marked with a 0.

We consider the protein Ribonuclease A from two disparate species: bovine (PDB ID: 1JVT) and rat (PDB ID: 1RRA), as well as a similar protein from a re-lated protein kinase class (PDB ID: 1BDY) and a significantly different protein, the  X  transcription terminator (PDB ID: 1A8V). The coordinate sets all have compa-rable resolution (between 2.0 and 2 . 5  X ) and chain lengths (between 120 and 125 residues).

We ran our algorithm using the following parameters: 0 range, minimum support of 20, and backbone optimization. From the run we col-lected all substructure motifs with five or more atoms and generated bit vector sub-structure fingerprints. We then analyzed fingerprints and sequences using the common Tanimoto similarity coefficient, defined as
Table 5 shows the results of the similarity analysis. The traditional sequence-based approach using the primary amino acid sequence gave only moderate similarity between the two Ribonuclease A proteins; this is a sign of evolutionary divergence and demonstrates the main limitation of sequence analysis. However, when com-paring the Ribonuclease A substructure-based bit vector fingerprints generated from MotifMiner, we obtain a significant improvement over the sequence-based approach.
This is to be expected since functional structures are evolutionarily conserved despite innocuous sequence mutations.
 nase (functionally related) and transcription terminator (functionally unrelated) pro-teins does not identify a meaningful relationship. Yet our approach detects substantial structural similarity between Ribonuclease A and the related kinase, which is con-sistent with the similar function of the proteins X  classes. Furthermore, our approach detects little structural similarity between the Ribonuclease A and transcription ter-minator, a result consistent with the disparity in function.
 based technique such as ours is capable of mo re robust macromolecule classification than traditional sequen ce-based approaches.
The pharmaceutical domain is one of the most h eavily studied regarding structural patterns. The motivation is that once a pharmacophore (motif related to activity) is identified, new drugs with the same activity but more desirable drug-like properties (absorption, nontoxicity, etc.) can be predicted and synthesized. We demonstrate that the general toolkit is capable of perform ing as well as customized, domain-specific approaches in identifying meaningful substructures.
 benzodiazepine. This dataset was previously analyzed using a cust omized substruc-ture discovery technique presented in Wang et al. (1997). This approach classified the compounds 90% of the time, with several undecided compounds.
 specify a fuzziness of 0 since these structures X  three-dimensional coordinates have been theoretically generated and thus do not have experimental noise. We also spec-ify a resolution of 0 . 1  X  to allow for slight variations in motifs due to steric and electrostatic environment. We choose a standard range of 4 support to 15 structures.
 dataset. The class of each compound was the n appended to the resulting fingerprints, and these compounds were classified by motifs using a standard C4.5 classifier with 10-way cross validation.
 the approach in Wang et al. (1997), classifying all compounds with 95% success.
Furthermore, we determined discriminating motifs from the classification, and from this we can elucidate the chemical substructures directly responsible for defining the drug family. Some of these discriminating motifs are shown in Fig. 9.
For the antiadrenergic class, three motifs are highly discriminating. Two are simi-lar and describe a nitrogen associated with three carbons. The last motif is that of an unsubstituted benzene ring. The mechanism of antiadrenergic drugs has already been discovered, and a benzene and substituted nitrogen are two key features in this class X  X  pharmacophore.

For the sulfa antibiotic class, several distinct motifs are responsible for classi-fication. The majority of these involved proximal sulfur, oxygen, carbon, and ni-trogen atoms near the core of the structure. By considering the distances between these atoms, we can determine that the sulfur is double-bonded to two oxygens and single-bonded to a nitrogen and carbon. This exactly describes the core of the sulfa phamacophore. This sulfur-based analog of PABA inhibits folic acid production in bacteria, thus providing antibiotic activity.

Last, the benzodiazepine class has five di scriminating motifs. Two of these in-volve a chlorine atom in proximity to a rigid, symmetric carbon structure. We de-duce that this refers to a chlorine substituted on a benzene ring, and we validate this through examination of the structures. We also observe a motif containing two carbons, an oxygen, and a nitrogen. Through examining distances, we determine this refers to a motif with two carbons, one double-bonded to oxygen and one single-bonded to nitrogen. The final motifs refer to carbon-substituted benzene rings. We validate that the benzodiazepine scaffold c ontains two substituted benzenes connected in part by the carbon-oxygen-nitrogen motif.

Not only does the more general MotifMiner algorithm perform similarly to other implementations, when combined with another general data mining tool it is able to automatically identify motifs responsible for a class X  X  activity without the need for specific pharmaceutical domain knowledge .
This paper presents a novel toolkit and seve ral key optimizations for mining frequent substructures in complex, noisy spatial data such as macromolecules. One of the hall-marks of this toolkit is its ability to analyze disparate chemical datasets without the need for extensive expert knowledge. The MotifMiner framework unifies previously independent areas of scientific research using a common core chemical knowledge.
This permits rapid analysis of new and emerging chemical domains with little to no effort.
 designed specifically to address scalability and noise issues chronic to the macro-molecule domain. Furthermore, it operates on exact structures instead of sequences or metastructural information, and it is cap able of analyzing many different types of molecules. Through a series of experiments, the algorithm is validated both for good performance when compared to standard t echniques and for good frequent substruc-ture identification as evidenced by its ability to detect meaningful substructures in proteins as well as common structural features between similar proteins and between compounds from the same drug class.
 tion and is critical to the good scalability of our approach. In addition to restricting the search space, it also permits us to store l ess information per atomset, improv-ing both memory efficiency and performan ce. Recursive fuzzy hashing and distance binning minimize the effects of coordinate noise, permitting detection of larger sub-structures where traditional techniques fail.
 datasets, and such research is in progress for further optimizing analysis based on both domain knowledge and computer science principles. One domain-centered ap-proach for proteins is consideration of peptide  X  and  X  angles in reduction of search space. More efficient approximate pruning, such as the use of a three-dimensional sliding box and graph compression techniques (Djoko et al. 1995), are under con-sideration. We are currently designing a general mechanism for embedding domain knowledge into the toolkit, and we are considering the possibility of extending our approach to substructure querying.
 cal molecules, we are now able to conduct further research in a timely manner. In addition to applying MotifMiner to diffe rent domains such as physics MD simula-tions, future work includes the analysis of higher-order substructures in an attempt to discover novel secondary structures and the development of functionally significant classification models for proteins based on discovered substructures. In addition, we are extending this approach to other types of biologically significant macromolecules such as DNA and RNA.

