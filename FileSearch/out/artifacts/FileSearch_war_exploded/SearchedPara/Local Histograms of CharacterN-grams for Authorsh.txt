 Authorship attribution (AA) is the task of deciding whom, from a set of candidates, is the author of a given document (Houvardas and Stamatatos, 2006; Luyckx and Daelemans, 2010; Stamatatos, 2009b). There is a broad field of application for AA meth-ods, including spam filtering (de Vel et al., 2001), fraud detection, computer forensics (Lambers and Veenman, 2009), cyber bullying (Pillay and Solorio, 2010) and plagiarism detection (Stamatatos, 2009a). Therefore, the development of automated AA tech-niques has received much attention recently (Sta-matatos, 2009b). The AA problem can be natu-rally posed as one of single-label multiclass clas-sification, with as many classes as candidate au-thors. However, unlike usual text categorization tasks, where the core problem is modeling the the-matic content of documents (Sebastiani, 2002), the goal in AA is modeling authors X  writing style (Sta-matatos, 2009b). Hence, document representations that reveal information about writing style are re-quired to achieve good accuracy in AA.

Word and character based representations have been used in AA with some success so far (Houvar-das and Stamatatos, 2006; Luyckx and Daelemans, 2010; Plakias and Stamatatos, 2008b). Such rep-resentations can capture style information through word or character usage, but they lack sequential in-formation, which can reveal further stylistic infor-mation. In this paper, we study the use of richer document representations for the AA task. In partic-ular, we consider local histograms over n -grams at the character-level obtained via the locally-weighted bag of words (LOWBOW) framework (Lebanon et al., 2007).

Under LOWBOW, a document is represented by a set of local histograms, computed across the whole document but smoothed by kernels centered on dif-ferent document locations. In this way, document representations preserve both word/character usage and sequential information (i.e., information about the positions in which words or characters occur), which can be more helpful for modeling the writ-ing style of authors. We report experimental re-sults in an AA data set used in previous studies un-der several conditions (Houvardas and Stamatatos, 2006; Plakias and Stamatatos, 2008b; Plakias and Stamatatos, 2008a). Results confirm that local his-tograms of character n -grams are more helpful for AA than the usual global histograms of words or character n -grams (Luyckx and Daelemans, 2010); our results are superior to those reported in re-lated works. We also show that local histograms over character n -grams are more helpful than lo-cal histograms over words, as originally proposed by (Lebanon et al., 2007). Further, we performed experiments with imbalanced and small training sets (i.e., under a realistic AA setting) using the aforementioned representations. We found that the LOWBOW-based representation resulted even more advantageous in these challenging conditions. The contributions of this work are as follows:
AA can be faced as a multiclass classifica-tion task with as many classes as candidate au-thors. Standard classification methods have been applied to this problem, including support vec-tor machine (SVM) classifiers (Houvardas and Sta-matatos, 2006) and variants thereon (Plakias and Stamatatos, 2008b; Plakias and Stamatatos, 2008a), neural networks (Tearle et al., 2008), Bayesian clas-sifiers (Coyotl-Morales et al., 2006), decision tree methods (Koppel et al., 2009) and similarity based techniques (Keselj et al., 2003; Lambers and Veen-man, 2009; Stamatatos, 2009b; Koppel et al., 2009). In this work, we chose an SVM classifier as it has reported acceptable performance in AA and because it will allow us to directly compare results with pre-vious work that has used this same classifier.
A broad diversity of features has been used to rep-resent documents in AA (Stamatatos, 2009b). How-ever, as in text categorization (Sebastiani, 2002), word-based and character-based features are among the most widely used features (Stamatatos, 2009b; Luyckx and Daelemans, 2010). With respect to word-based features, word histograms (i.e., the bag-of-words paradigm) are the most frequently used representations in AA (Zhao and Zobel, 2005; Argamon and Levitan, 2005; Stamatatos, 2009b). Some researchers have gone a step further and have attempted to capture sequential information by using n -grams at the word-level (Peng et al., 2004) or by discovering maximal frequent word se-quences (Coyotl-Morales et al., 2006). Unfortu-nately, because of computational limitations, the lat-ter methods cannot discover enough sequential in-formation from documents (e.g., word n -grams are often restricted to n  X  { 1 , 2 , 3 } , while full se-quential information would be obtained with n  X  { 1 . . . D } where D is the maximum number of words in a document).

With respect to character-based features, n -grams at the character level have been widely used in AA as well (Plakias and Stamatatos, 2008b; Peng et al., 2003; Luyckx and Daelemans, 2010). Peng et al. (2003) propose the use of language models at the n -gram character-level for AA, whereas Keselj et al. (2003) build author profiles based on a selection of frequent n -grams for each author. Stamatatos and co-workers have studied the impact of feature se-lection, with character n -grams, in AA (Houvardas and Stamatatos, 2006; Stamatatos, 2006a), ensem-ble learning with character n -grams (Stamatatos, 2006b) and novel classification techniques based on characters at the n -gram level (Plakias and Sta-matatos, 2008a).

Acceptable performance in AA has been reported with character n -gram representations. However, as with word-based features, character n -grams are unable to incorporate sequential information from documents in their original form (in terms of the positions in which the terms appear across a doc-ument). We believe that sequential clues can be helpful for AA because different authors are ex-pected to use different character n -grams or words in different parts of the document. Accordingly, in this work we adopt the popular character-based and word-based representations, but we enrich them in a way that they incorporate sequential informa-tion via the LOWBOW framework. Hence, the pro-posed features preserve sequential information be-sides capturing character and word usage informa-tion. Our hypothesis is that the combination of se-quential and frequency information can be particu-larly helpful for AA.

The LOWBOW framework has been mainly used for document visualization (Lebanon et al., 2007; Mao et al., 2007), where researchers have used in-formation derived from local histograms for dis-playing a 2D representation of document X  X  con-tent. More recently, Chasanis et al. (2009) used the LOWBOW framework for segmenting movies into chapters and scenes. LOWBOW representa-tions have also been applied to discourse segmen-tation (AMIDA, 2007) and have been suggested for text summarization (Das and Martins, 2007). How-ever, to the best of our knowledge the use of the LOWBOW framework for AA has not been studied elsewhere. Actually, the only two references using this framework for text categorization are (Lebanon et al., 2007; AMIDA, 2007). The latter can be due to the fact that local histograms provide little gain over usual global histograms for thematic classification tasks. In this paper we show that LOWBOW rep-resentations provide important improvements over global histograms for AA; in particular, local his-tograms at the character-level achieve the highest performance in our experiments. This section describes preliminary information on document representations and pattern classification with SVMs. 3.1 Bag of words representations In the bag of words (BOW) representation, docu-ments are represented by histograms over the vo-cabulary 1 that was used to generate a collection of documents; that is, a document i is represented as: where V is the vocabulary and | V | is the number of elements in V , d i,j = x i,j is a weight that denotes the contribution of term j to the representation of document i ; usually x i,j is related to the occurrence (binary weighting) or the weighted frequency of oc-currence (e.g., the tf-idf weighting scheme) of the term j in document i . 3.2 Locally-weighted bag-of-words Instead of using the BOW framework directly, we adopted the LOWBOW framework for document representation (Lebanon et al., 2007). The underly-ing idea in LOWBOW is to compute several local histograms per document, where these histograms are smoothed by a kernel function, see Figure 1. The parameters of the kernel specify the position of the kernel in the document (i.e., where the local his-togram is centered) and its scale (i.e., to what extent it is smoothed). In this way the sequential informa-tion in the document is preserved together with term usage statistics.

Let W i = { w i, 1 , . . . , w i,N (in order of appearance) in document i where N i is the number of terms that appear in document i and w i,j  X  V is the term appearing at position j ; let v i = { v i, 1 , . . . , v i,N in the vocabulary V of the terms appearing in W i , such that v i,j is the index in V of the term w i,j let t = [ t 1 , . . . , t N scalars that determine intervals, with 0  X  t j  X  1 and P j =1 t j = 1 , such that each t j can be associated to a position in W i . Given a kernel smoothing function K  X , X  : [0 , 1]  X  R with location parameter  X  and scale parameter  X  , where  X   X  [0 , 1] . The LOWBOW framework computes a local histogram for each position  X  j  X  X   X  1 , . . . ,  X  k as follows: where dl i,v and d i,j is defined as above. Hence, a set dl { 1 ,...,k } of k local histograms are computed for each doc-ument i . Each histogram dl j i carries information about the distribution of terms at a certain position  X  j of the document, where  X  determines how the nearby terms to  X  j influence the local histogram j . Thus, sequential information of the document is considered throughout these local histograms. Note that when  X  is small, most of the sequential informa-tion is preserved, as local histograms are calculated at very local scales; whereas when  X   X  1 , local his-tograms resemble the traditional BOW representa-tion.

Under LOWBOW documents can be represented in two forms (Lebanon et al., 2007): as a single his-togram d L i = const  X  BOW histograms) or by the set of local histograms itself dl { 1 ,...,k } i . We performed experiments with both forms of representation and considered words and n -grams at the character-level as terms (c.f. Sec-tion 5). Regarding the smoothing function, we con-sidered the re-normalized Gaussian pdf restricted to [0, 1]: where  X  ( x ) is the cumulative distribution function for a Gaussian with mean 0 and standard deviation 1 , evaluated at x , see (Lebanon et al., 2007) for further details. 3.3 Support vector machines Support vector machines (SVMs) are pattern classi-fication methods that aim to find an optimal sepa-rating hyperplane between examples from two dif-ferent classes (Shawe-Taylor and Cristianini, 2004). Let { x i , y i } N be pairs of training patterns-outputs, where x i  X  R d and y  X  { X  1 , 1 } , with d the di-mensionality of the problem. SVMs aim at learn-ing a mapping from training instances to outputs. This is done by considering a linear function of the form: f ( x ) = W x + b , where parameters W and b are learned from training data. The particular linear function considered by SVMs is as follows: that is, a linear function over (a subset of) training examples, where  X  i is the weight associated with training example i (those for which  X  i &gt; 0 are the so called support vectors) and y i is the label associated with training example i , K ( x i , x j ) is a kernel 2 func-tion that aims at mapping the input vectors, ( x i , x j ), into the so called feature space, and b is a bias term. Intuitively, K ( x i , x j ) evaluates how similar instances x i and x j are, thus the particular choice of kernel is problem dependent. The parameters in ex-pression (4), namely  X  { 1 ,...,N } and b , are learned by using exact optimization techniques (Shawe-Taylor and Cristianini, 2004). For AA we represent the training documents of each author using the framework described in Sec-tion 3.2, thus each document of each candidate au-thor is either a LOWBOW histogram or a bag of lo-cal histograms (BOLH). Recall that LOWBOW his-tograms are an un-weighted sum of local histograms and hence can be considered a summary of term us-age and sequential information; whereas the BOLH can be seen as term occurrence frequencies across different locations of the document.
 For both types of representations we consider an SVM classifier under the one-vs-all formulation for facing the AA problem. We consider SVM as base classifier because this method has proved to be very effective in a large number of applications, including AA (Houvardas and Stamatatos, 2006; Plakias and Stamatatos, 2008b; Plakias and Stamatatos, 2008a); further, since SVMs are kernel-based methods, they allow us to use local histograms for AA by consid-ering kernels that work over sets of histograms.
We build a multiclass SVM classifier by con-sidering the pairs of patterns-outputs associated to documents-authors. Where each pattern can be ei-ther a LOWBOW histogram or the set of local his-tograms associated with the corresponding docu-ment, and the output associated to each pattern is a categorical random variable (outputs) that asso-ciates the representation of each document to its cor-responding author y 1 ,...,N  X  { 1 , . . . , C } , with C the number of candidate authors. For building the multiclass classifier we adopted the one-vs-all for-mulation, where C binary classifiers are built and where each classifier f i discriminates among exam-ples from class i (positive examples) and the rest j : j  X  { 1 , . . . , C } , j 6 = i ; despite being one of the simplest formulations, this approach has shown to obtain comparable and even superior performance to that obtained by more complex formulations (Rifkin and Klautau, 2004).

For AA using LOWBOW histograms, we con-sider a linear kernel since it has been success-fully applied to a wide variety of problems (Shawe-Taylor and Cristianini, 2004), including AA (Hou-vardas and Stamatatos, 2006; Plakias and Sta-matatos, 2008b). However, standard kernels can-not work for input spaces where each instance is de-scribed by a set of vectors. Therefore, usual kernels are not applicable for AA using BOLH. Instead, we rely on particular kernels defined for sets of vectors rather than for a single vector. Specifically, we con-sider kernels of the form (Rubner et al., 2001; Grau-man, 2006): where D ( P, Q ) is the sum of the distances between the elements of the bag of local histograms asso-ciated to author P and the elements of the bag of histograms associated with author Q ;  X  is the scale parameter of K . Let P = { p 1 , . . . , p k } and Q = { q 1 , . . . , q k } be the elements of the bags of local histograms for instances P and Q , respectively, Ta-ble 1 presents the distance measures we consider for AA using local histograms.

Diffusion, Euclidean, and  X  2 kernels compare lo-cal histograms one to one, which means that the lo-cal histograms calculated at the same locations are compared to each other. We believe that for AA this is advantageous as it is expected that an author uses similar terms at similar locations of the docu-ment. The Earth mover X  X  distance (EMD), on the other hand, is an estimate of the optimal cost in tak-ing local histograms from Q to local histograms in P (Rubner et al., 2001); that is, this measure com-putes the optimal matching distance between local histograms from different authors that are not neces-sarily computed at similar locations. For our experiments we considered the data set used in (Plakias and Stamatatos, 2008b; Plakias and Sta-matatos, 2008a). This corpus is a subset of the RCV1 collection (Lewis et al., 2004) and comprises documents authored by 10 authors. All of the docu-ments belong to the same topic. Since this data set has predefined training and testing partitions, our re-sults are comparable to those obtained by other re-searchers. There are 50 documents per author for training and 50 documents per author for testing.
We performed experiments with LOWBOW 3 rep-resentations at word and character-level. For the ex-periments with words, we took the top 2,500 most common words used across the training documents and obtained LOWBOW representations. We used this setting in agreement with previous work on AA (Houvardas and Stamatatos, 2006). For our character n -gram experiments, we obtained LOW-BOW representations for character 3-grams (only n -grams of size n = 3 were used) considering the 2 , 500 most common n -grams. Again, this set-ting was adopted in agreement with previous work on AA with character n -grams (Houvardas and Stamatatos, 2006; Plakias and Stamatatos, 2008b; Plakias and Stamatatos, 2008a; Luyckx and Daele-mans, 2010). All our experiments use the SVM im-plementation provided by Canu et al. (2005). 5.1 Experimental settings In order to compare our methods to related works we adopted the following experimental setting. We perform experiments using all of the training doc-uments per author, that is, a balanced corpus (we call this setting BC ). Next we evaluate the perfor-mance of classifiers over reduced training sets. We tried balanced reduced data sets with: 1 , 3 , 5 and 10 documents per author (we call this configura-tion RBC ). Also, we experimented with reduced-imbalanced data sets using the same imbalance rates reported in (Plakias and Stamatatos, 2008b; Plakias and Stamatatos, 2008a): we tried settings 2  X  10 , 5  X  10 , and 10  X  20 , where, for example, setting 2-10 means that we use at least 2 and at most 10 doc-uments per author (we call this setting IRBC ). BC setting represents the AA problem under ideal con-ditions, whereas settings RBC and IRBC aim at em-ulating a more realistic scenario, where limited sam-ple documents are available and the whole data set is highly imbalanced (Plakias and Stamatatos, 2008b). 5.2 Experimental results in balanced data We first compare the performance of the LOWBOW histogram representation to that of the traditional BOW representation. Table 2 shows the accuracy (i.e., percentage of documents in the test set that were associated to its correct author) for the BOW and LOWBOW histogram representations when us-ing words and character n -grams information. For LOWBOW histograms, we report results with three different configurations for  X  . As in (Lebanon et al., 2007), we consider uniformly distributed locations and we varied the number of locations that were in-cluded in each setting. We denote with k the number of local histograms. In preliminary experiments we tried several other values for k , although we found that representative results can be obtained with the values we considered here.

From Table 2 we can see that the BOW repre-sentation is very effective, outperforming most of the LOWBOW histogram configurations. Despite a small difference in performance, BOW is advanta-geous over LOWBOW histograms because it is sim-pler to compute and it does not rely on parameter selection. Recall that the LOWBOW histogram rep-resentations are obtained by the combination of sev-eral local histograms calculated at different locations of the document, hence, it seems that the raw sum of local histograms results in a loss of useful informa-tion for representing documents. The worse perfor-mance was obtained when k = 2 local histograms are considered (see row 3 in Table 2). This re-sult is somewhat expected since the larger the num-ber of local histograms, the more LOWBOW his-tograms approach the BOW formulation (Lebanon et al., 2007).

We now describe the AA performance obtained when using the BOLH formulation; these results are shown in Table 3. Most of the results from this table are superior to those reported in Table 2, showing that bags of local histograms are a better way to exploit the LOWBOW framework for AA.
 As expected, different kernels yield different results. However, the diffusion kernel outperformed most of the results obtained with other kernels; confirming the results obtained by other researchers (Lebanon et al., 2007; Lafferty and Lebanon, 2005).

On average, the worse kernel was that based on the earth mover X  X  distance (EMD), suggesting that the comparison of local histograms at different loca-tions is not a fruitful approach (recall that this is the only kernel that compares local histograms at differ-ent locations). This result evidences that authors use similar word/character distributions at similar loca-tions when writing different documents.

The best performance across settings and kernels was obtained with the diffusion kernel (in bold, col-umn 3, row 9) ( 86 . 4% ); that result is 8% higher than that obtained with the BOW representation and 9% better than the best configuration of LOWBOW histograms, see Table 2. Furthermore, that result is more than 5% higher than the best reported re-sult in related work ( 80 . 8% as reported in (Plakias and Stamatatos, 2008b)). Therefore, the consid-ered local histogram representations over character n -grams have proved to be very effective for AA.
One should note that, in general, better per-formance was obtained when using character-level rather than word-level information. This confirms the results already reported by other researchers that have used character-level and word-level infor-mation for AA (Houvardas and Stamatatos, 2006; Plakias and Stamatatos, 2008b; Plakias and Sta-matatos, 2008a; Peng et al., 2003). We believe this can be attributed to the fact that character n -grams provide a representation for the document at a finer granularity, which can be better exploited with local histogram representations. Note that by considering 3-grams, words of length up to three are incorpo-rated, and usually these words are function words (e.g., the, it, as, etc.), which are known to be in-dicative of writing style. Also, n -gram information is more dense in documents than word-level infor-mation. Hence, the local histograms are less sparse when using character-level information, which re-sults in better AA performance.

Table 4 shows the confusion matrix for the setting that reached the best results (i.e., column 3, last row in Table 3). From this table we can see that 8 out of the 10 authors were recognized with an accuracy higher or equal to 80% . For these authors sequential information seems to be particularly helpful. How-ever, low recognition performance was obtained for authors BL (B. K. Lim) and JM (J. MacArtney). The SVM with BOW representation of character n -grams achieved recognition rates of 40% and 50% for BL and JM respectively. Thus, we can state that sequential information was indeed helpful for mod-eling BL writing style (improvement of 28% ), al-though it is an author that resulted very difficult to model. On the other hand, local histograms were not very useful for identifying documents written by JM (made it worse by  X  8% ). The largest improvement ( 38% ) of local histograms over the BOW formula-tion was obtained for author TN (T. Nissen). This result gives evidence that TN uses a similar distri-bution of words in similar locations across the doc-uments he writes. These results are interesting, al-though we would like to perform a careful analysis of results in order to determine for what type of au-thors it would be beneficial to use local histograms, and what type of authors are better modeled with a standard BOW approach. 5.3 Experimental results in imbalanced data In this section we report results with RBC and IRBC data sets, which aim to evaluate the perfor-mance of our methods in a realistic setting. For these experiments we compare the performance of the BOW, LOWBOW histogram and BOLH repre-sentations; for the latter, we considered the best set-ting as reported in Table 3 (i.e., an SVM with dif-fusion kernel and k = 20 ). Tables 5 and 6 show the AA performances when using word and charac-ter information, respectively.

We first analyze the results in the RBC data set (recall that for this data set we consider 1 , 3 , 5 , 10 , and 50 , randomly selected documents per author). From Tables 5 and 6 we can see that BOW and LOWBOW histogram representations obtained sim-ilar performance to each other across the different training set sizes, which agree with results in Table 2 for the BC data sets. The best performance across the different configurations of the RBC data set was obtained with the BOLH formulation (row 6 in Ta-bles 5 and 6). The improvements of local histograms over the BOW formulation vary across different set-tings and when using information at word-level and character-level. When using words (columns 2-6 in Table 5) the differences in performance are of 15 . 6% , 6 . 2% , 6 . 8% , 2 . 9% , 3 . 8% when using 1 , 3 , 5 , 10 and 50 documents per author, respectively. Thus, it is evident that local histograms are more beneficial when less documents are considered. Here, the lack of information is compensated by the availability of several histograms per author.
 When using character n -grams (columns 2-6 in Table 6) the corresponding differences in perfor-mance are of 5 . 4% , 6 . 4% , 6 . 4% , 6% and 11 . 4% , when using 1 , 3 , 5 , 10 , and 50 documents per au-thor, respectively. In this case, the larger improve-ment was obtained when 50 documents per author are available; nevertheless, one should note that re-sults using character-level information are, in gen-eral, significantly better than those obtained with word-level information; hence, improvements are expected to be smaller.

When we compare the results of the BOLH for-mulation with the best reported results elsewhere (c.f. last row 6 in Tables 5 and 6) (Plakias and Sta-matatos, 2008b), we found that the improvements range from 14% to 30 . 2% when using character n -grams and from 1 . 2% to 26% when using words. The differences in performance are larger when less information is used (e.g., when 5 documents are used for training) and we believe the differences would be even larger if results for 1 and 3 documents were available. These are very positive results; for example, we can obtain almost 71% of accuracy, us-ing local histograms of character n -grams when a single document is available per author (recall that we have used all of the test samples for evaluating the performance of our methods).

We now analyze the performance of the different methods when using the IRBC data set (columns 7-9 in Tables 5 and 6). The same pattern as before can be observed in experimental results for these data sets as well: BOW and LOWBOW histograms ob-tained comparable performance to each other and the BOLH formulation performed the best. The BOLH formulation outperforms state of the art ap-proaches by a considerable margin that ranges from 10% to 27% . Again, better results were obtained when using character n -grams for the local his-tograms. With respect to RBC data sets, the BOLH at the character-level resulted very robust to the re-duction of training set size and the highly imbal-anced data.
 Summarizing, the results obtained in RBC and IRBC data sets show that the use of local histograms is advantageous under challenging conditions. An SVM under the BOLH representation is less sen-sitive to the number of training examples available and to the imbalance of data than an SVM using the BOW representation. Our hypothesis for this behavior is that local histograms can be thought of as expanding training instances, because for each training instance in the BOW formulation we have k  X  training instances under BOLH. The benefits of such expansion become more notorious as the num-ber of available documents per author decreases. We have described the use of local histograms (LH) over character n -grams for AA. LHs are enriched histogram representations that preserve sequential information in documents (in terms of the positions of terms in documents); we explored the suitabil-ity of LHs over n -grams at the character-level for AA. We showed evidence supporting our hypothe-sis that LHs are very helpful for AA; we believe that this is due to the fact that LOWBOW representations can uncover, to some extent, the writing preferences of authors. Our experimental results showed that LHs outperform traditional bag-of-words formula-tions and state of the art techniques in balanced, imbalanced, and reduced data sets. The improve-ments were larger in reduced and imbalanced data sets, which is a very positive result as in real AA applications one often faces highly imbalanced and small sample issues. Our results are promising and motivate further research on the use and extension of the LOWBOW framework for related tasks (e.g. authorship verification and plagiarism detection).
As future work we would like to explore the use of LOWBOW representations for profile-based AA and related tasks. Also, we would like to develop model selection strategies for learning what combi-nation of hyperparameters works better for modeling each author.
 We thank E. Stamatatos for making his data set available. Also, we are grateful for the thought-ful comments of L. A. Barr  X  on and those of the anonymous reviewers. This work was partially sup-ported by CONACYT under project grants 61335, and CB-2009-134186, and by UAB faculty develop-ment grant 3110841.

