 Modelling term dependence in IR aims to identify co-occur-ring terms that are too heavily dependent on each other to be treated as a bag of words, and to adapt the indexing and ranking accordingly. Dependent terms are predominantly identified using lexical frequency statistics, assuming that (a) if terms co-occur often enough in some corpus, they are semantically dependent; (b) the more often they co-occur, the more semantically dependent they are. This assump-tion is not always correct: the frequency of co-occurring terms can be separate from the strength of their seman-tic dependence. E.g. red tape might be overall less fre-quent than tape measure in some corpus, but this does not mean that red+tape are less dependent than tape+measure . This is especially the case for non-compositional phrases , i.e. phrases whose meaning cannot be composed from the indi-vidual meanings of their terms (such as the phrase red tape meaning bureaucracy).

Motivated by this lack of distinction between the frequency and strength of term dependence in IR, we present a princi-pled approach for handling term dependence in queries, us-ing both lexical frequency and semantic evidence. We focus on non-compositional phrases, extending a recent unsuper-vised model for their detection [21] to IR. Our approach, integrated into ranking using Markov Random Fields [31], yields effectiveness gains over competitive TREC baselines, showing that there is still room for improvement in the very well-studied area of term dependence in IR.
 H.4 [ Information Systems Applications ]: Miscellaneous; H.3.3 [ Information Search and Retrieval ] c  X  Theory, Experimentation
Frege X  X  principle of compositionality posits that the mean-ing of an expression is a function of the meanings of its con-stituent expressions and the ways they combine [59]. Ap-plied to linguistics by Montague, this principle implies that the meaning of some text is not just the collective mean-ing of its words, but also a function of how these words are arranged. Whereas this holds most of the times, oc-casionally language is non-compositional , i.e. the meaning and arrangement of words alone is not enough to convey the overall semantics. E.g. the phrase red tape (meaning bureaucracy) is not a tape of type red . This linguistic phe-nomenon is known as non-compositionality .

The challenges posed by non-compositionality have spur-red Natural Language Processing (NLP) research in auto-matic non-compositionality detection, e.g. in nouns [1, 47], verb-noun [20] and verb-particle [30] combinations, using techniques such as latent semantic analysis [20], composi-tional translations to multiple languages [44], sense induc-tion [22] and word space models [23, 42]. An active line of research focuses on distributional and vector-based models of word and phrase meaning leading to vector-space models for compositionality [8, 35, 41]. These advances have not penetrated IR research notably (with the exception of [33], discussed in Section 2), despite long and persistent IR inter-est in term dependence. A resulting risk is that the strength of term dependence may be consistently miscalculated in IR. We explain this next.

In IR, dependent terms are predominantly identified using lexical frequency statistics: if terms co-occur often enough in some typically large dataset, they are assumed to be depen-dent, and the strength of their dependence is typically as-sumed proportional to their frequency of co-occurrence, e.g. see [10, 34]. Simply stated, the more frequently two terms co-occur, the more dependent we assume they are. This as-sumption is not always correct. In linguistics, the frequency of term co-occurrence can be somewhat separate from the strength of semantic dependence. Even though the former can be indicative to some extent of the latter, their relation is not symmetric. E.g. red tape might be overall less fre-quent than tape measure in some corpus, but this does not mean that red+tape are semantically less dependent than tape+measure ; quite the contrary. Non-compositionality lies at the heart of this because non-compositional terms are maximally dependent, regardless of their frequency of co-occurrence. So, whereas the strength of term depen-dence within compositional phrases, e.g., tape measure, white horse , can be reasonably approximated by their fre-quency of co-occurrence in a corpus, this is not true for non-compositional phrases, like red tape, dark horse .
Motivated by this lack of distinction in IR between fre-quency of term co-occurrence and strength of term depen-dence, we present a principled approach for treating term dependence in queries. This approach extends a recent un-supervised model for detecting non-compositional phrases using lexical frequency and semantic evidence [21]. The main idea consists of (a) substituting a term in a phrase by a synonym (e.g. red tape would become scarlet tape ) and (b) measuring the semantic divergence of the replacement phrase from the original phrase. If their meanings diverge, the original phrase is more likely to be non-compositional. If however their meanings do not diverge much (e.g. tax of-fice would become tax bureau ), then the original phrase is less likely to be non-compositional. We extend the vec-tor space model proposed for measuring this divergence in [21] with a probabilistic model that measures the Kullback-Leibler divergence between the language models of the orig-inal and replacement phrase (Sections 3-4). We apply both approaches to detect strongly dependent query terms, which we then treat in a non-bag of words fashion during ranking (Section 6). Experiments with 350 TREC queries show that our approaches consistently outperform competitive base-lines, and are particularly effective for 2-, 3-, and 4-term queries in the web search task.
Broadly speaking, efforts to model term dependence, also known as term co-occurrence, adjacency and lexical affini-ties 1 in IR, typically model phrases found in queries and/or documents, motivated by the intuition to consider as more relevant those documents in which terms appear in the same order and patterns as they appear in the query, and as less relevant those documents in which terms are separated [51]. These efforts were initiated mainly in the 1980s, and intensi-fied in the 1990s, reporting retrieval benefits. Later, efforts decreased: baseline performance improved, and the cost as-sociated with linguistic processing was not worth the small benefits over the already improved baselines [54].

Generally, term dependence is detected using either sta-tistical or linguistic information. Research began with the early work on statistical term associations [6, 14, 24, 56] and syntax-based approaches [3, 7, 45], continuing with work on probabilistic term dependence models [15, 46, 60, 61, 63], syntactic methods [5, 32, 49, 50] and statistical approaches [10, 25, 26]. From the mid-1990s onwards, research focused on hybrid methods combining syntactic and statistical ap-proaches of phrase processing [9], phrase-based enhancement of the indexed term representations [64], and phrase-based term weighting [37, 39, 57]. More recent research has focused on statistical methods, primarily using language modelling
Dependence, co-occurrence, adjacency and lexical affinities are not synonyms [16], but in IR they are used interchange-ably. [31, 34, 36, 52, 55] but not exclusively [28, 40], while atten-tion has also been given to term dependence and efficient large-scale indexing [12, 27]. The Markov Random Field (MRF) model of term dependence [31] reported significant improvements in retrieval effectiveness.

Several more recent studies address term dependence, for instance using heuristics [58], formalising the term position in the document [29], or extending the MRF model to con-cepts [4], all reporting positive findings. This continued in-terest in term dependence may indicate that it is still an open problem. However, to our knowledge, none of these approaches addresses non-compositionality, except Michel-bacher et al. [33], who focus primarily on the automatic de-tection of the head modifier inside non-compositional phrases and use IR as a task illustrating that the information they detect can be useful. They experiment with a small non-TREC dataset and report statistically significant gains in retrieval precision.
Non-Compositionality Detection (NCD) aims to identify the presence and strength of non-compositional phrases in language. This is typically realised as a measurement, i.e. through some function that outputs a compositionality score for a phrase. Given a scale of such scores, the minimum and maximum reflect the total absence of compositionality (non-compositionality), e.g. red tape , and complete composi-tionality, e.g. tax office , respectively. Sliding along such a scale corresponds to moving across phrases of various levels of compositionality, practically facilitating the comparison of phrases on the grounds of their term dependence. We reason that such a comparison may be useful to IR, where systems need to process differently queries at different po-sitions of this scale, i.e. keyword-based (= compositional) queries such as London transportation , and queries con-taining heavily dependent terms (=non-compositional) such as red tape AL register car .

This section presents how we use non-compositionality to model term dependence in IR. Among the various NCD ap-proaches outlined in Section 1, we use the recent approach of [21] because it is unsupervised, resource-efficient, and per-forms competitively on benchmark tests. We extend this NCD approach, which uses vector spaces, by adding a sec-ond estimation of non-compositionality, this time probabilis-tic. In addition, we formally express the methodological de-scription of [21] as a model of query perturbation, and we model non-compositional term dependence specifically for IR queries, not general phrases like [21], with considerations to data constraints in an IR context.
Given a query, we aim to detect the presence and strength of non-compositionality in it. Kiela and Clark [21] posit that non-compositional phrases can be identified by substituting each of the original words in them, one at a time, by some other relevant/synonymous term, and comparing the mean-ing of each phrase resulting from the substitution to the meaning of the original phrase. The more they diverge, the less compositional the original phrase is. E.g. replacing car by vehicle in import car gives import vehicle , which is semantically similar to the original, but replacing red by scarlet in red tape gives scarlet tape , which is seman-tically different from the original. Hence, red tape is less compositional than import car . The core idea is that such substitutions are likely to have a low impact on the semantics of compositional phrases, but a high impact on the seman-tics of non-compositional phrases. The resulting semantic divergence is then approximately inversely proportional to compositionality.

Conceptually, we see this approach as applying perturba-tions over some signal in order to study the resulting effects upon the signal. In our case, the signal is the query and the perturbation is the replacement of a query term by another term. We express this perturbation as follows: Let S q ( I ; T ) be the semantic space S of query q containing the ordered set of terms T , where I is the information conveyed by T . Let denote the ordered set of query terms where one of them has been replaced by another term (e.g., a synonym). I.e.,  X  the perturbation of T . Then, the non-compositionality N and the compositionality C q of query q , can be expressed as a function of the divergence  X  of the resulting seman-resulting from all substitutions: where f is typically some summation or averaging function over the set of divergences, and g is some decreasing func-tion, e.g. g ( x ) 7 X  1 /x . Thus, non-compositionality increases with semantic divergence, but compositionality de creases with semantic divergence.

Unless constrained, such perturbations risk drifting se-mantically further away than intended, e.g., if two out of all three terms in a query are replaced simultaneously. Kiela &amp; Clarke address this using two constraints, which we also adopt: (a) only one term is replaced at a time, and (b) a term is replaced by its synonym or a closely related term such as a hyper-or hyponym 2 . We identify a further risk of degrad-ing performance by considering too many synonyms: The set of perturbations for query q consisting of terms t 1  X  X  X  t where s j is a synonym of t j , is: where p m denotes the m th perturbation. As a term may have more than one synonym, of various grades of synonymity, the set of perturbations can grow to include all synonyms of the query terms. A selection process must control the perturba-tions so that: (a)  X  X est possible X  synonyms (as opposed to near-synonyms) are used, and (b) the number of perturba-tions is minimised, i.e. we perturb the queries no more than necessary for computing their compositionality. We thus use one perturbation per query term and experimentally show (in Section 6) that this suffices for IR. Other tasks, including NCD per se , may require more perturbations per term.
We henceforth refer to all forms of closely related terms as synonyms.
Computing the divergence in Equation 1 requires that both the query and perturbations be represented in some semantic space that is tractable and amenable to measure-ment. Kiela &amp; Clarke propose vector spaces (Section 3.2.1). We propose probability spaces as a complementary repre-sentation (Section 3.2.2). We present and experiment with both. We re-express the vector space representation of Kiela &amp; Clarke for queries and their perturbations as follows. Let ~v ( q ) and ~v ( p j ) be the vector of query q and its perturba-tion p j respectively. The semantic divergence  X  between the query and its perturbation can be modelled as the dis-tance d between their vectors (  X   X  d ), where d is some appropriate distance function. This d can be chosen as any vector distance function, e.g. Euclidean, Chebychev, or the better-known Cosine we use here. Then, assuming a sum-mation function f in Equation 1, the non-compositionality of a query containing terms t 1  X  X  X  t m of k synonyms is: where p ij is the perturbation t 1  X  X  X  t j  X  1 s ij t j +1 is the i th synonym of term t j . Using one synonym per term only (as we do) reduces this to:
The main idea is to represent a query and its perturba-tion as vectors, so that we can interpret their distance as se-mantic divergence. Practically this means mapping  X  from Equation (1) to d above. Dating back to Salton, the IR and NLP literature abounds with variations of how the above vector representation can be implemented and interpreted, any of which can be used here. We describe how we build the vectors and how we compare their distance in Section 4.
We now present our probabilistic representation of queries and their perturbations. The high-level difference from the previous representation is that instead of representing a query as a vector of terms, we represent it as a distribution of events, where the events correspond to terms. Such repre-sentations are called probabilistic because they allow com-puting the probability of an event occurring, i.e. the proba-bility of a term occurring in the query. When these probabil-ities are interpreted in a frequentist way, they are approxi-mated by relative frequencies (i.e. normalised word counts). In text processing, this is known as language modelling.
We reason that, if queries and their perturbations are rep-resented as event distributions, then their divergence can be computed using standard methods, one of the better known being their Kullback-Leibler divergence (KLD). Even though KLD is not a distance metric (it is not symmetric), it is widely used in IR to approximate the semantic distance between texts, where higher KLD values indicate more di-vergence. We apply this to compute the semantic divergence  X  in Equation 1, by building a language model for the query and each perturbation. Then, their KLD should be pro-portional to the semantic divergence  X  in Equation (1), i.e. (  X   X  KLD ). Let LM q and LM p denote the language mod-els of query q and perturbation p respectively. Their KLD is:
We next describe how we build LM q ,LM p and how we operationalise Equation (5).
Both vector and probability space representations pre-sented above approximate how different a perturbation is from the original query, albeit in different ways. This sec-tion describes their exact mechanics.

We start by describing what the above vectors and lan-guage models actually consist of. As the approach is the same for both queries and their perturbations, we hence-forth refer to their union as Q . For each term t  X  Q , we build a context window as follows: we extract bags of terms occurring within a window of maximum n terms away from t in some large document corpus, so that the window con-sists of 2 n + 1 terms. E.g., if n =5, then we consider 11 terms in total: 5 (immediately preceeding t ) + t + 5 (im-mediately succeeding t ). The underlying assumption is that all the terms in a document have some relationship to all other terms in the document, modulo window size, outside of which the relationship is not taken into consideration. In statistical NLP this is a standard way of inducing word se-mantics from  X  X he company they keep X , a.k.a. distributional semantics [11]. These context windows provide the ingre-dients of the vector and probabilistic representation of our queries and perturbations, explained next.
After all context windows of a term t  X  Q are extracted, we compute a term weight vector w t for t with the aim of capturing the salience of term t . Kiela &amp; Clarke show that such weights can function in a discriminative way for the task of NCD. For each query, we generate a term weight vector by combining the term weight vectors of the terms in the query. Next we explain how we compute the weights of the individual query terms and the weight of the whole query or perturbation.
Kiela &amp; Clarke experiment with these five well-known weighting schemes, adapted to the context window scenario, (even though they only report results from LTU), which we also use: w where w it is the weight of term t in context window i ; f is the frequency of t in context window i ; N is the total number of context windows; n ( t ) is the number of context windows containing t ; M i is the number of terms in context window i ; av.M is the average number of terms in all context windows; and max f is the maximum frequency of any term in any context window.

To construct a vector ~v ( t ) for each t  X  Q , we extract the context windows for t , which we denote cw t . For each term, t , represented by an entry in ~v ( t ), the corresponding weight is computed as the average of w it 0 for i  X  cw t .
Having built such a vector for each t  X  Q , the vector of the entire query or perturbation can be constructed in several ways, for instance as the element-wise sum of the vectors of its terms, or as their dilation, or as their pointwise multiplication. We choose the latter because it has been shown more effective for semantic vector representations in NLP [21, 35]. The final query vector ~q for query q consisting of terms t 1  X  X  X  t m is: where is the binary operator on equal-length vectors of real numbers defined by ( x 1 ,...,x n ) ( y 1 ,...,y n ) = ( x y ,...,x n  X  y n ). The perturbation vectors are built identi-cally to this. Note that as is associative and commutative, the j th component of ~v ( q ) is simply the product of all the j th components of the vectors ~v ( t 1 ) ,...,~v ( t m ).
As Kiela &amp; Clarke point out, using pointwise multiplica-tion has a somewhat  X  X everse X  effect on the semantic dis-tance: overlapping components (i.e. terms appearing in common contexts) are stressed; since their vectors have little overlap outside the non-compositional meaning, their per-turbations also have little overlap, resulting in a smaller change in distance when perturbed. Another effect of point-wise multiplication is that the frequency of terms occurring in the context windows of a query term will be strength-ened: if a term t has a high weight in both ~v ( t ) and ~v ( t will have a high weight in ~v ( t ) ~v ( t 0 ); however, low weight in either one of ~v ( t ) or ~v ( t 0 ) will correspond to low weight in ~v ( t ) ~v ( t 0 ). This means that the vectors of the terms of non-compositional queries, which will in general occur in very different contexts, will have entries with fairly low ab-solute values. In contrast, for compositional queries, substi-tuting a term by its synonym may yield constructions that can be expected to occur in a number of contexts wildly dif-ferent from the original, hence will have markedly different contextual statistics and thus greater distance d .
The alternative representation we propose for queries and perturbations is to use the set of all context windows of the terms in a query or perturbation to build a respective lan-guage model LM q ,LM p (introduced in Equation 5). There exist various ways of building language models from term counts, involving some sort of smoothing of the counts; we use two among the best known, Laplace and Simple Good-Turing .

Laplace (or add-one) estimates the probability of a term t in the language model of query q , P LP ( q,t ), as: where c q,t is the count of t in q , C q is the count of all terms in the context windows of q , and V is the number of terms in the language model of q . We compute it identically for perturbations (replacing q by p above).

For sparse data over large vocabularies, Laplace tends to make a very big change to the counts and resulting prob-abilities because it moves too much probability mass to all unseen events (zero counts). We could move a bit less mass by adding a fractional count rather than 1 (e.g. add  X   X  -smoothing X  [17]), but that would require choosing  X  dynami-cally, risking inappropriate discounting for many counts, and producing overall counts with poor variances [19]. For these reasons, we also apply Simple Good-Turing [13] smoothing, which uses (i) the counts of hapax legomena (events occur-ring once) to estimate the counts of unseen events, and (ii) double counts , i.e. the frequency of a frequency. Simple Good-Turing estimates the probability of a term t with fre-quency r in the language model of query q , P GT ( q,t ), as: where ff is a vector with frequencies for term frequencies, C q is as defined as in Equation 12, and S is a function fitted through the observed values of ff to get the expected count of these values (see [13] for more). For zero count values the probability is calculated as follows: where ff 1 is the frequency of frequency of hapax legomena . We normalise the resulting language model to sum to 1. Simple Good-Turing is known to perform well, especially for large numbers of observations drawn from large vocabu-laries.

The above two smoothing methods produce a language model for each term per query or perturbation. To produce one language model for the whole query or perturbation, we sort the language models of their terms and combine them in four different ways: (1) summing their values in quantiles multiplying their values; (4) using the median of their values. Overall, the above 2 smoothing methods  X  4 combinations produce 8 language modelling variations of NCD.
We use quantiles 2 &amp; 3 to avoid outliers. Both representations (vector and probability space) of the NCD approach we present are parameterised over the no-tion of semantic divergence, which we operationalise with different weightings, each corresponding to some variation of computing this divergence. Our use of semantic diver-gence, measured typically as a real number in the model, corresponds to the observation that compositionality is not dichotomous: phrases in general are not only compositional or non-compositional; rather, a fine-grained range of compo-sitionality exists, a fact corroborated by human raters asked to score degrees of compositionality [2, 30]. Suitable diver-gence functions that could mimic the scores of human raters may exist, but we have not attempted to do so.

We have also not attempted to estimate the semantic  X  X c-curacy X  of the phrases resulting from each perturbation, i.e. the extent to which they are non-sensical, even though Kiela &amp; Clarke state that this is possible with their approach [21]. We estimate solely the divergence between the query and a perturbation, and not how much sense the perturbed phrase makes, for two reasons: (a) we reason that the semantic di-vergence should in principle suffice for indicating composi-tionality as we intend to use it in IR; (b) to our knowledge, no scalable automatic approach can adequately approximate such a semantic assessment for query logs.

Another point of departure from Kiela &amp; Clarke is our treatment of query terms as a list, i.e. a set endowed with a strict order. In principle, all computations presented, both by Kiela &amp; Clarke and by us, can be used with ordinary (i.e., unordered) sets of terms too, as has also been done with term dependence models in IR [31]. We use strictly ordered sets because non-compositionality is never manifested in lan-guage in any other way, for instance by mixing the order of non-compositional terms, or by interrupting them by an-other term. E.g., red tape can function non-compositonally (and mean bureaucracy) only when the terms red and tape appear adjacent and in that specific order. Ergo, no vari-ation of red .+ tape or tape .+ red (in RegEx notation) can have the non-compositional meaning of bureaucracy.
Finally, perturbations are common in science, and the practice of perturbing queries has even been used in IR be-fore, albeit for different reasons. For instance Vinay et al. [62] employ different query (and document) perturbations for query performance prediction: by altering the query term weights, they observe the documents retrieved, and study the relationship between the amount, or sensitivity of per-turbation and the quality of the ranking. Our approach, apart from having a different overall scope, namely term de-pendence as opposed to query performance prediction, also differs from [62] in that it applies a linguistically informed selection process for each perturbation: we replace query terms by their synonyms, not by varying their respective term weights within some range.
This section presents experiments aiming to quantify the effectiveness of processing query term dependence, not as a bag of words, but as a  X  X et phrase X  of strict ordered ad-jacency, i.e. matching documents that contain an identical (ordered &amp; uninterrupted) sequence of terms. The main idea is to use NCD to select which among a batch or stream of queries contain dependent terms, and process only those queries as a  X  X et phrase X ; the rest of the queries can be pro-cessed as a bag of words. For this initial study, we focus on the non-compositionality of the whole query , not of phrases within queries.

We use the non-compositionality score of each query (com-puted with any of the 5 vector space or 8 language modelling variants presented in Section 4) as a proxy of term depen-dence. This allows to detect queries more likely to be non-compositional , hence more likely to contain highly depen-dent terms, rather than those queries that are strictly non-compositional . We do this by ranking queries by their non-compositionality and selecting the  X  least compositional. These  X  queries are processed with the MRF model of fully dependent query terms; the rest of the queries in the batch are treated as a bag of words.
We use three baselines: (1) bag of words for all queries, which allows for no term dependence; (2) the MRF model of sequentially dependent query terms [31], which treats as a  X  X et phrase X  only adjacent query terms; (3) the MRF model of fully dependent query terms [31], which treats as a  X  X et phrase X  the whole query. We compare these baselines against our selective term dependence approach that treats as a  X  X et phrase X  the whole query iff the NCD score of this query indicates that it is likely to be non-compositional; this is controlled by the threshold  X  presented above.

All three baselines and our 13 NCD variants use a uni-gram, query likelihood, Dirichlet-smoothed language model for ranking. Note that we use  X  X anguage model X  in two dif-ferent ways in this work, for two entirely different compu-tations: (a) to estimate the semantic divergence between queries and perturbations (in Section 3.2.2), and (b) to rank documents with respect to queries.
We use the TREC 6-8 queries (301-450, title only) of the AdHoc track with Disks 4-5 (minus the Congressional Records for TREC7-8), and queries 1-200 of the Web AdHoc tracks of TREC 2009-2012 with ClueWeb09B 4 (see Table 1). We extract the distributional semantics of the NCD model (i.e. build the context windows) from Disks4-5 for queries 301-450, and from ClueWeb09B for queries 1-200. We use no stemming and remove stop words from the queries only (as in [31]). We use Indri 5.8 5 for indexing and retrieval of at most 1000 documents per query. We evaluate retrieval effec-tiveness using standard measures of early and deep precision (MAP, NDCG@10, P@10).

The Dirichlet ranking model includes a parameter  X  that we tune as follows:  X   X  X  100 , 500 , 800 , 1000 , 2000 , 3000 , 4000 , 5000 , 8000 , 10000 } . We also vary the number  X  of least com-positional queries selected each time:  X   X  1 ... 45 per TREC batch of 50 queries. All tuning is done per evaluation mea-sure using 3-fold cross validation. We report the average of the three test folds. For NCD we extract the first syn-onym suggested by WordNet 6 (to be used for perturbing the query). For these initial experiments, we do not vary the http://lemurproject.org/clueweb09.php/ http://www.lemurproject.org/ http://wordnet.princeton.edu # Documents 556077 50220423 # Queries 301-450 1-200 TREC track TREC6-8 AdHoc Web09-12 AdHoc value of the window of co-occurrence described in Section 4: we set n = 5, i.e. the context window size is 11. Table 3 shows the retrieval precision of our baselines and NCD approaches. Each cell also displays the % of queries that are treated as a  X  X et phrase X . For the MRF models, 100% means that all queries are treated as a  X  X et phrase X , in-cluding single-term queries, for which this treatment makes no difference over a bag of words treatment. Overall, our NCD approaches outperform all baselines at all times. The improvement over the strongest baseline is modest (up to &gt; +3 . 5% for MAP with ATC, &gt; +3 . 3% for NDCG@10 with MI, and &gt; +4 . 5% for P@10 with MI), however it is con-sistent for both datasets and for all evaluation measures (deep and early precision). This means that the performance gain spans across the range of relevant documents (those re-trieved in the top ranks, but also those retrieved further down). Unlike earlier findings that the use of co-occurrence information tends to reduce retrieval effectiveness [46], pos-sibly due to the fact that the term relationships modelled may have little discriminating power [31], we notice an over-all modest but clear gain in effectiveness.

Breaking this down to a per-query basis (cf. the two top plots in Fig. 1), the following two findings emerge. (I) The scale of improvement is higher than that of deterioration: between  X  +0.13 and -0.07 for MAP; and between +0.68 and -0.4 for NDCG@10, for our Laplace sum approach (chosen illustritatively) from the strongest baseline (MRF with full dependence). (II) More queries improve than deteriorate by our approach. Hence, the improvements in Table 3 are not artificially inflated by outliers that might affect the means of the evaluation measures, but are rather representative of the whole body of queries.

Furthermore, we show examples of queries yielding the highest and lowest precision difference from the strongest baseline in Table 5. The best queries are not strictly non-compositional; however they do have strongly contextualised semantics and term co-dependence. E.g. french lick re-sort casino does not denote some other meaning than a particular casino, but it is presumably irrelevant to the se-mantics of the verb to lick and french as a language or na-tionality. Most of the best queries in Table 5 are web queries, which often tend to include abbreviations and acronyms, e.g. vbart sf . These are not non-compositional either, but rather idiomatic or colloquial phrases of strong term dependence, and are selected by our NCD approach be-cause they are likely to diverge in meaning if perturbed (i.e. it is not possible to express their meaning alterna-tively, for instance by near-synonyms). Hence, using NCD to approximate strong term dependence is effective in these cases. Our worst performing queries consist of phrases for which many more variants that denote the same meaning exist. E.g. tv show, television programme/broadcast, signs/symptoms/indications heart attack/failure , etc. Restricting this type of queries to strict  X  X et phrase X  match-ing limits the retrieval scope significantly with resulting drops in performance.

Next we focus the analysis on two pertinent aspects of our approach: the number of strongly term dependent queries selected and retrieval performance for 2-4 term queries.
The number of queries treated as a  X  X et phrase X  is lower for our approach than for MRF by  X  1/3 for Disks4-5 and  X  2/3 for ClueWeb09B, or by  X  1/4 for Disks4-5 and  X  1/3 for ClueWeb09B if we ignore 1-term queries (statistics in Table 2). Compositionality and term dependence in general cannot be measured for single terms, hence 1-term queries are ignored.

Since we treat the number  X  of least compositional queries as a tuneable parameter, one may wonder to what extent the gains we report are due to tuning as opposed to the inherent strength of our approach in detecting term dependence. To answer this, Fig. 2 shows the MAP and NDCG@10 of our MI approach across the range of  X  values for ClueWeb09B (we can confirm similar trends for P@10 and Disks4-5, and our other NCD approaches). We see that our approach outper-forms the strongest baseline (marked by a horizontal line) consistently across the range of  X  , peaking when roughly  X  =80 least compositional queries (out of 200, or 143 if one excludes 1-term queries) are treated as strongly term depen-dent. Practically this means that our approach can be used without necessarily tuning  X  and is likely not to give large fluctuations in both early and deep precision.
Finally, we focus on queries of 2, 3 and 4 terms because these are the most likely to include strong term dependence, hence they are ideal for comparing our approaches to the MRF models.

Table 4 shows the retrieval precision of our baselines and our three best NCD approaches (marked by * in Table 3) specifically for queries of these lengths. Again all our ap-proaches outperform all baselines at all times. The only exception is for 4-term queries in Disks4-5 and P@10, where our methods perform equally to the strongest baseline (no gain, no loss). Overall, our NCD approaches outperform the strongest baseline by up to  X  &gt; +5% for MAP,  X  &gt; +6% for NDCG@10, and  X  &gt; +8% for P@10, on average. The two middle and lower plots in Fig. 1 show that these im-provements are not due to outliers, but are instead spread over the queries. Fig. 1 illustrates this for 2-and 3-term queries w.r.t. MAP and NDCG@10, but we confirm that the same trend applies to 4-term queries and P@10. Hence, for queries of length 2-4, i.e. predominantly phrasal queries, our approaches outperform all baselines notably. This find-ing, combined with the relative robustness of the threshold  X  discussed above, mean that our approach could be used as part of the IR pipeline, e.g. for  X  80% of the incoming queries of length 2-4. Note that these types of queries form the majority of all queries, at least in our TREC data (see Table 2), hence they are not a negligible sample. Fig ure 1: Sorted per-query difference (y-axis) in MAP/NDCG@10 between the strongest baseline ( Full Dependence ) and our Laplace sum method, for all, 2-term, &amp; 3-term queries in DISKS4-5 &amp; CWEB09B. The horizontal line marks the baseline (points above are gains). Each point is a query. Fig ure 2: MAP &amp; NDCG@10 (y-axis) vs.  X  most non-compositional queries in CWEB09B according to MI (x-axis). The horizontal line marks the base-line. Each point is a query.
 Table 5: Queries with most gain/loss from NCD.

The relative gains in retrieval precision reported above should not be considered as indications of accurate non-compositionality detection. The suitability of our proposed probabilistic representation of queries and their perturba-tions in particular remains to be evaluated for NCD accu-racy. Moreover, several of our choices of NCD settings can be further explored, e.g. synonymy selection or smoothing choices. In this initial study we opted for default or popu-lar settings, where possible. For these reasons, we have re-frained from making a quantitative comparison between the vector space and probability space NCD variations, other than reporting the retrieval precision they yield. This means that the NCD variations we present are not necessarily cal-ibrated to this domain or task. Calibrating them could po-tentially improve performance even more, but would incur some computational cost, the major bulk of which would likely lie in the extraction of context windows from some large dataset. In an IR scenario, this can be done offline, and is perhaps not too distant from the query analytics widely used.

Regarding our data, the query sets we use are  X  X urated X  by TREC, in the sense that those queries that are perhaps not understood by human assessors, or for which no rele-vant documents are easily found during pooling, may have been omitted. This selection may have affected non-or low-compositionality queries. This agrees with the finding that the number of IR benchmark queries that contain strongly dependent terms in general is small [65]. Unfiltered query logs may contain more such queries, making our approach potentially even more useful in such a practical setting.
We presented an approach for detecting strongly depen-dent query terms using the linguistic property of non-compo-sitionality. Non-compositional meaning cannot be induced from the meanings of individual words or their arrangement in a query. E.g., hot dog is not a type of dog that is hot , but rather a type of food. We used unsupervised measure-ment of non-compositionality to approximate the detection of strongly dependent query terms. Such queries are chal-lenging to IR because they cannot be processed to some reasonable accuracy by bag of words approaches. Moti-vated by this, we focussed not on how these queries can be treated during ranking (there is a lot of literature in this area generally for term dependence, which can be ap-plied here), but on how these queries can be selected from a batch or stream of incoming queries. This specific ques-tion has so far been addressed by assuming that the more frequently terms co-occur in a query, the more dependent they are. This assumption is however not always true, be-cause frequency is not always proportional to the strength of semantic association. The unsupervised method for mea-suring non-compositionality that we used is recent and uses vector spaces [21]. We extended it by adding a probabilis-tic representation that uses Kullback-Leibler divergence. We experimentally showed that all variants of our approach were effective in selecting which queries to treat as term depen-dent and resulted in gains for both early and deep precision ( &gt; 5%) with respect to a range of baselines (standard bag of words and competitive MRF with sequential and full de-pendence [31]).

In the future we plan to analyse the amount of non-or low-compositionality queries in real-life query logs, as op-posed to TREC data. As discussed in Section 7, there may be more low-compositionality queries in those samples. We also intend to investigate optimal ways of measuring non-compositionality within a query, as opposed to considering the non-compositionality of a query as a whole as we did here. Another interesting direction is the direct mapping of the non-compositionality score of a query into the strength of its term dependence used during ranking. In this initial study we treated all queries selected as least-compositional in the same way as fixed phrases processing them identically; in doing so, we ignored their grades of non-compositionality. Modelling this may yield further improvements and is an interesting research question in its own right.

Partially funded by the first author X  X  FREJA research ex-cellence fellowship (grant no. 790095).
