 Entities are centric to a large number of real world applications. Wikipedia shows entity infoboxes for a large number of entities. However, not much structured information is available about char-acter entities in books. Automatic discovery of characters from books can help in effective summarization. Such a structured sum-mary which not just introduces characters in the book but also pro-vides a high level relationship between them can be of critical im-portance for buyers. This task involves the following challenging novel problems: 1. automatic discovery of important characters given a book; 2. automatic social graph construction relating the discovered characters; 3. automatic summarization of text most re-lated to each of the characters; and 4. automatic infobox extraction from such summarized text for each character. As part of this demo, we design mechanisms to address these challenges and experiment with publicly available books.
 H.2.8 [ Information Systems ]: Database Applications X  Data Min-ing ; H.4.0 [ Information Systems Applications ]: General Analysis of Books, Character Infoboxes, Person disambiguation, Person-person network
Given a book, can we automatically discover all person men-tions in the book, and organize them in an interesting way? Such a person knowledge base could be important in helping users un-derstand the characters in the book better. It could also serve as a repository that connects books with different characters (or per-sons). The characters could be fictional or real. In this demo, we will showcase a system CharBoxes which not just discovers all characters from books but also extracts details about each character using deep natural language processing and some domain-specific heuristics.

To the best of our knowledge, the proposed system is the first to focus on extraction of character infoboxes from books. The system takes the book text as an input and outputs an infobox for every character which includes the following about the character. We  X  The first two authors have equal contribution.
 moving names with frequency less than a threshold, merging names considering different variations, etc. This gives us a list of all char-acters in the book.
 Co-reference Resolution and Dependency Analysis
For deeper analysis related to these characters, first the chap-ter boundaries need to be detected. For books with clear chapter boundaries, hints are obtained from word clues like  X  X hapter X X  or  X  X esson X, X  and also from the table of contents. If page boundaries are available, an incompletely filled page also denotes a chapter boundary. For books without any clear page boundaries or chap-ter boundaries, TextTiling algorithm [3] is used for topic shift de-tection. Co-reference resolution is performed on each chapter fol-lowed by Stanford dependency analysis 1 . Co-reference resolution ensures that all mentions of the person names get resolved. This processing results into a linguistically analyzed book text. Person-Person Graph Construction
This text is used to build a person-person graph based on dia-logue extraction (using presence of words like  X  X ay, said, tell, told, screamed X ). Next, person name disambiguation is performed us-ing the graph. The text may refer to some character using the last name, e.g.,  X  X easley X  in  X  X arry Potter and the Philosopher X  X  Stone X . Based on the context, a human can disambiguate this  X  X easley X  to  X  X on Weasley X . Such a disambiguation is essential for accurate understanding of sentences. Hence, disambiguation is performed for last names based on: (1) Context words, (2) Mention of full name in vicinity, (3) Frequency of co-occurrence with other en-tities in the vicinity based on the graph. Once disambiguation is done, the resolution is used to refine the person-person graph also. The person-person graph is further annotated with a few select re-lationships that can be inferred using relationship words observed in the context of the two persons (mother, father, sibling), or using dialogues between the two persons (friend/enemy).
 Related Places and Organizations Extraction Given a character, all mentions of the character are identified. Next, most frequent places and organizations associated with the character are discovered by scores them based on frequency and distance from the character mentions. Also, the linking verb is used to establish the relationship of the character with the place or the organization. For example,  X  X tudies X  could be the most frequent verb linking  X  X arry Potter X  with  X  X ogwarts. X  Thus, we obtain most frequent related places and organizations for every character and also define the type of relationship using the connecting verb. Character-Centric Summary Generation
All sentences which mention a character are collected to get all text related to a character. This text is processed to extract subject, predicate and object triplets. These triplets are then summarized using a mix of two mechanisms: (1) using the semantic subgraph using triplets as discussed in [5], and (2) based on the strength of the sentiments around that sentence. The intuition is that sentences with extremely sentimental context are important.
 Character-Centric Facts Extraction
The character-specific summary is further analyzed to obtain the following information about the character: (1) year of birth/death, (2) looks, qualities of the person (either direct text mentions or in-ferred from the spoken sentences), (3) overall sentiment of the per-son (hero/villian), (4) frequently mentioned facts (like relation be-tween  X  X arry Potter X  and  X  X uidditch X  linked by the verb  X  X lays X ), (5) sociability of the person (based on number of other characters it interacts with).
