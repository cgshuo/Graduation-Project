 Role discovery in graphs is an emerging area that allows analysis of complex graphs in an intuitive way. In contrast to community discovery, which finds groups of highly con-nected nodes, role discovery finds groups of nodes that share similar topological structure in the graph, and hence a com-mon role (or function) such as being a broker or a periphery node. However, existing work so far is completely unsuper-vised, which is undesirable for a number of reasons. We provide an alternating least squares framework that allows convex constraints to be placed on the role discovery prob-lem, which can provide useful supervision. In particular we explore supervision to enforce i) sparsity, ii) diversity, and iii) alternativeness in the roles. We illustrate the usefulness of this supervision on various data sets and applications. H.2.8 [ Database Applications ]: Data mining; E.1 [ Data Structures ]: Graphs and networks Algorithms, Design, Performance, Experimentation Role discovery; constrained clustering; graph mining
Role discovery is a developing area that allows the sim-plification of graphs in a user-interpretable way. Consider a graph of n nodes specified in an adjacency matrix A . Earlier efforts convert this matrix into a new n  X  f matrix V so that each node in the graph has a list of f features [15]. Role dis-covery is then the computation of converting V so that each node/user is mapped to a combination of roles (denoted by the n  X  r matrix G ) and each role is defined with respect to the f features (denoted by the r  X  f matrix F ). This is accomplished by performing a non-negative matrix factor decomposition as shown below:
The n  X  r matrix G when read row-wise indicates which of the r roles each node plays and to what degree. The r  X  f matrix F when read row-wise defines each of the r roles with respect to the f features. The entries in G and F are positive real numbers signifying that each node can play each role to varying degrees and that different features define a role in varying degrees. This simplification of graphs into roles is not only intuitive for a domain expert, but it has been shown to be useful in a number of interesting settings including prediction, transfer learning, and sense making [14].
However, all work developed so far has been completely unsupervised in that the domain expert cannot easily in-ject their expertise and expectations into the simplification. Having this ability is useful in a variety of settings. Consider a domain expert that is looking for the simplest explanation of a graph during their exploratory phase of analysis. Ex-isting work cannot specify how to emphasize this simplicity apart from requiring a small number of roles to be used. Other forms of parsimonious guidance such as requiring a node only be assigned to a few roles or making each role defined by only a small set of features is desirable but cur-rently not possible. Similarly, if a decomposition yields a set of roles that are not actionable, not interesting or already known, the domain expert cannot enforce an alternative set of roles. These two recent trends in data mining  X  explor-ing the addition of positive and negative guidance  X  have been shown to have wide-scale application in the data min-ing literature [2][24]; but to our knowledge have not been applied to role discovery. Hence this work marks the first paper exploring guided role discovery.

Our work makes several contributions to the field of role discovery in graphs:
In the next section, we describe related work and then an algorithm for incorporating convex constraints in non-negative matrix decomposition. Section 4 presents how con-vex constraints can naturally encode guidance in the form of sparsity and diversity on both the role assignment matrix ( G ) and role explanation matrix ( F ). We also present how these constraints can encode the notion of alternativeness to find a different set of roles to another set that are for instance non-actionable or trivial. Our experiments, in Sec-tion 5, demonstrate the usefulness of these forms of guidance in a number of applications and real-world graphs. We show how sparsity and diversity guidance can improve upon pre-diction performance for the application of identity resolution via roles. We also show how alternativeness can be used to find an alternative set of roles to the underlying community structure.
The basis for role discovery in graphs using non-negative matrix factorization (NMF) was first proposed in a series of papers at KDD [15][14]. The method ReFeX [15] described a recursive method to take a n  X  n adjacency matrix ( A ) and compute a set of f salient features for each of the n nodes represented as a matrix V . The RolX method [14] made use of NMF to simplify the features into a set of roles and explored their use for graph matching, sense making and transfer learning. Many previous works had applied NMF to other data mining problems (e.g. [27][18]) but theirs was the first to apply it to role discovery. Other methods for role discovery are not scalable to huge graphs and include Bayesian frameworks using MCMC sampling methods [25] and semi-supervised role labeling [11].

The addition of guidance to matrix decomposition is a rel-atively new area with most work involving spatial data and properties such as unimodality as we have done for tensors [8]. Of course much work exists on very basic constraints such as non-negativity and minimal rank decompositions. The area of constraints for matrix decomposition takes on several different meanings to our own work. For example in [19] the authors propose the use of labeled information to guide the decomposition. Perhaps the closest to our own work is the use of sparseness constrains in NMF [16].
To the best of our knowledge the encoding of guidance for role discovery and the encoding of diversity and alterna-tive constraints for NMF as described in this paper has not been addressed before. However, the notion of guided and alternative is popular in the clustering field with work by ourselves and others [2][24].
In this section, we discuss our algorithm for solving the guided role-discovery problem. We present a general algo-rithm that is well-suited for large-scale problems, and is ca-pable of being extended to different forms of guidance. The different supervisions (described in Section 4) are solvable using this algorithm.

Our algorithm for solving the guided role discovery prob-lem is a constrained NMF approach used to find the decom-position shown in Equation 2. Like many unconstrained NMF solvers, it uses the alternating least squares approach [23, 4]. Nonnegative least squares is a well-studied problem, and can be utilized to find an NMF solution by solving for one matrix at a time ( G or F ), while holding the other con-stant which is generally known as alternating least squares (ALS). NMF is known to be intractable; and the ALS ap-proach is not guaranteed to find global solutions but will converge to a local minimum. In this work, we add addi-tional constraints to the problem and therefore need more sophisticated methods.

The method we chose was motivated by gradient pro-jection methods, which are known for being well-suited to quickly finding good but not highly accurate solutions for large problems, by sacrificing some of the theoretical con-vergence guarantees of methods such as interior point [3]. Projected gradient descent methods can be summarized as those that iteratively find better points by following the gra-dient of the objective function, and subsequently find the closest point that meets the constraints. Since the objective we are solving is least squares, we have a closed form solution to the unconstrained minimum from which we subsequently find the closest constrained solution. It is known, that for a class of constrained least squares solution, this approach will lead to an exact global solution in one iteration (see Lemma 1).

Therefore, our algorithm has the advantage that each sub-problem (but not the entire problem) can be solved exactly by reducing it into an unconstrained least square problem [26][1] and an Euclidean projection problem [10][21], both of which have efficient solutions. Additionally, this approach to optimization (projected gradient descent) has been shown in the past to work well on large-scale problems, at the ex-pense of accuracy, and is used by state of the art solvers [20].
 The outline of the remainder of this section is as follows. First, we formally describe the convex constrained NMF problem and discuss how ALS can be used to solve it. Then, we explain how ALS can also be used to solve for individual role assignment vectors, as well as role definition vectors. Fi-nally, we describe how ALS over definition/assignment vec-tors can be solved using a projection method by first solving an unconstrained least squares problem and then finding the closest point in the constrained space.

In Equation 2, there are two variables G and F that are being simultaneously optimized. If either is treated as a constant, the problem becomes convex and can be solved exactly using any method for solving convex optimization problems. One can alternate between solving for G and F this way until convergence. Although each iteration finds a global optimum to this modified problem, the result of this procedure (alternating optimization) is not guaranteed to find a global minimum to the original problem in Equation 2. In the following, we describe our method for transforming the formulation into a series of convex programming prob-lems, which are generally easy to solve.
Rather than alternating between solving for the entire ma-trices G and F , we can instead solve for one column of G or one row of F at a time. This is possible if convex constraints can be specified in terms of these columns, which is the case in this work. Without loss of generality, Equation 3 shows an individual sub-optimization problem in terms of one of the columns of G , denoted x .

In Equation 3, R represents the residuals of all other fac-tors not being solved for (sum of outer products of corre-sponding columns of G and rows F ). F k is the k th row of the role/feature explanation matrix that corresponds to the k th column of the role assignment matrix. So with this formulation, we alternate between learning single role as-signments, followed by learning a role definition. Next we explain how we solve the convex constrained problem shown in Equation 3.

Our projection method is as follows. First, solve Equation 3 with all constraints removed using standard least squares solvers. Second, find the closest point to the unconstrained solution, that satisfies the given constraints. This projec-tion method takes advantage of standard and very fast least squares solvers and the subsequent nearest feasible point problem is relatively simple to solve. In addition, Lemma 1 shows that performing these two steps will exactly solve the original problem in Equation 3. Applications of this theorem and its proof can be found in [6][13].

Lemma 1. Projection Equivalence Result. The following constrained optimization problem: where c i are convex functions on x , is equivalent to: where x  X  is the optimal to the optimization problem in Equa-tion 4 without contraints.
 This leads to the following algorithm for convex constrained NMF presented in Figure 1. Like ALS for unconstrained NMF, this heuristic is not guaranteed to meet a global opti-mum, even though all subproblems are solved exactly. How-ever, each step will lead to a reduction in the global objective (Equation 2). Thus, in practice the algorithm will find local minima that meet all specified constraints.
 Inputs: Outputs: Algorithm: Figure 1: Our algorithm that will be used to encode all guidances described in Section 4. The algorithm uses a least squares approach and allows additional convex constraints to be added to the NMF formu-lation.

The advantage of solving for one role at a time rather than the entirety of G or F as is generally done with ALS, is that it allows the problem to be broken down into smaller parts that then fit into fast solvers. In general, projection meth-ods have been found to be better suited to larger problems and we found this to be the case as well. Using this method allows us to solve much larger problems than we had previ-ously been able to using standard constrained optimization solvers [8]. The final constrained optimization problem (i.e., closest constrained point problem) is simple enough that we find for even medium-sized problems we could utilize high level solvers such as CVX [7][12], which makes experiment-ing with new types of constraints very simple.
In the previous section, we discussed a novel and general algorithm that can easily handle convex constraints. Convex constraints can encode a variety of useful guidances. In this section, we show how they can be used to enforce sparsity, diversity and alternativeness. In the experimental section, we show applications which exploit these forms of guidance.
The area of sparsity has recently attracted much atten-tion. In a general context, sparsity has been shown to have two main benefits: (1) parsimony and (2) improved predic-tive performance, with the later being motivated by Occam X  X  razor. Sparse learning formulations exist for many learning settings such as linear regression (LASSO), Kernel methods (SVM) and covariance estimation.
 In our work, we can place sparsity constraints on both the G or F matrices leading to an objective function of:
Previous works have shown the effectiveness of using L1 norm as a penalty in model learning. In our formulation the L1 penalty is encoded as a constraint rather than a penalty in the objective, but it is known that these formulations are theoretically equivalent [5]. However, another twist to our formulation is that we do not constrain the entire matrix but instead constrain each column of G and each row of F . This was done because our solver requires constraints to be formulated only over one role vector at a time. The effect of this technical difference is that the sparsity must be more uniformly spread across each role definition or role assignment which is a benefit of this method.

Sparsity constraints on G and F have easy to understand intuitive interpretations. If G is sparse, it means that nodes are assigned to as few roles as possible; and it is possible for some nodes to be assigned to no roles. If F is sparse, it means that the roles are defined with respect to as few features as possible. Both of these extensions allow for a simple explanation of the data, and lead to improved pre-diction performance.
In the NMF forms of role discovery, nothing prevents the roles to which nodes are assigned (i.e., the G matrix) and the role definitions (i.e., the F matrix) to be highly overlap-ping. This can be undesirable particularly for the F matrix since it means all roles are highly similar. This can be over-come by enforcing a diversity requirement so that each role Figure 2: Visualization of diversity constraints on role explanation matrix F (roles  X  features) for DBLP dataset. The top matrix shows the uncon-strained result; the bottom matrix is constrained to be completely diverse ( = 0) ; and the middle matrix shows a middle ground. From the top matrix to the bottom matrix, the number of black cells (i.e. zero values) increases since roles definitions must be ex-plained with completely different sets of features. uses a different set of features (for the F matrix) and nodes are assigned to different combinations of roles (for the G matrix).

Our formulation for role allocation diversity ( G matrix) and role definition diversity ( F matrix) makes use of orthog-onality as follows:
When = 0, our constraint will exactly match the def-inition orthogality, and when  X  0 the constraint can be viewed as limiting the angular similarity between two vec-tors. The effect of combining this constraint with non-negativity constraints is that no role definitions will have any common features and no role assignments will have over-lapping populations for = 0. This is so since G T  X  i G  X  j if and only if these two vectors do not share any non-zero entries. Figure 2 shows such an example, where none of the three roles have any overlapping features. In the context of our solver which solves for one vector at a time, this con-straint will be linear (a weighted sum).
Recent work on another unsupervised problem, clustering, has explored the area of alternativeness [24, 9]. In that liter-ature, the term alternativeness and orthogonality are used interchangeably, but we only use the term alternativeness for clarity.

The motivation for alternativeness in unsupervised learn-ing is strong. Most interesting problems are on large data for formulation of each constraint type).
 sets that contain complex phenomena and there may exist multiple explanations of the data. However, most unsuper-vised learning algorithms expect that there exists only one good explanation of the data and return one explanation.
In many situations, it may be the case that the returned explanation is undesirable since it is either unactionable or not novel. Consider the IMDB (Internet Movies Database) dataset. If the resultant roles map actors to the studios for which they work, then this is not particularly novel. Here, the work on alternative role discovery allows a previously discovered set of role allocations ( G  X  ) or role definitions ( F to be specified as a counter-example of what not to find. The challenge though is to find another good explanation of the data that is different to those already found.

The optimization problem to find alternative roles is then:
Our experiments demonstrate how constraints on graph role discovery can be useful. Role discovery requires the user to specify the number of roles to use and a set of fea-tures for a graph. For the former, we used the Minimum Description Length (MDL) described in [14] to automati-cally select the number of roles; and for the later, we used the approach described in [15]. We show that role discovery can be used to improve the results of the identity resolution problem between two graphs, and that they can be further improved by using sparsity or diversity constraints. By using sparsity or diversity constraints, we improve the role defini-tions which leads to more meaningful role assignments and more accurate identity resolutions. See Section 5.1 for these experiments. We also experimentally verify the solutions to the alternative role discovery formulation presented in Sec-tion 4.3 and observe that they indeed produce significantly different results. The purpose of our experimental section is to address the questions: 1. Does adding constraints to the NMF-based role dis-2. What effects do diversity constraints have on role dis-3. Can our alternative role discovery formulation produce
In this experiment, we show that by adding sparsity and diversity constraints to the NMF formulation of role discov-ery, the resulting role definitions are of higher quality. We measure this improvement in quality indirectly by showing how role definition matrices can be used for resolving iden-tities of nodes across graphs, and that constrained role def-initions perform better than unconstrained role definitions for that problem.

From the DBLP data-set [17], we extracted a co-author graph from each of the following related conferences from 2005 to 2009: KDD, ICDM, SDM, CIKM, SIGMOD, VLDB (see Table 2 for detailed information about each co-author graph). We extract a set of relevant structure features for the KDD graph using REFEX [15], and compute these same features for all of the co-author graphs. We subsequently learn a set of role definitions from the KDD graph using compared to the population size in each graph.
 Table 2: Information about DBLP co-author networks for each conference. Data was col-lected for five years (2005-2009). | V | =number of vertices, | E | =number of edges, k=average de-gree, | LCC | =size of largest connected component, #CC=number of connected components. standard RolX [14] as well as the sparse and diverse ver-sions of GLRD. For each of these competing role definitions, we assign each vertex from each graph to the roles whose function they most exhibit. As a baseline, we also explore author identification without roles by using the raw graph features as described in ReFeX.

We use the role assignments to resolve the identities of vertices from each graph (namely, ICDM, SDM, CIKM, SIG-MOD, and VLDB) to the vertices in the KDD graph. With-out loss of generality, assume we are resolving identity of au-thors from the KDD graph to the authors in ICDM graph. For each author in both conferences, we select the corre-sponding row vector from the node by role matrix G kdd and find the k closest neighbors (row vectors) from G icdm the original author from KDD graph is present in the set of k closest neighbors, we count the result as a match. We re-peat this experiment using sparsity and diversity constraints on F kdd . We also repeat the experiment using the ReFeX features, comparing author feature vectors from V kdd and V icdm . Figures 3 and 4 shows how the different decompo-Figure 4: Comparison of role discovery techniques for identity resolution experiments. Authors from each conference paired with the nearest 32 neighbors from KDD conference; the resulting recall accuracy is reported. The percentage number (on the x-axis) is the fraction of authors that overlap between the two conferences. Nearly all experiments show better results with sparsity and diversity constraints except when the authors do not share similar roles in the two conferences (SIGMOD and VLDB). sition methods compare in this setting for all graphs paired with KDD.

Our method of utilizing role discovery results for the au-thor identification task is described formally in the following set of steps: 1. Extract features from co-authorship graphs to get graph 2. From the graph features matrix V kdd perform role dis-3. Transfer the role definition matrix F kdd (role by fea-
Our experiments with graph identity-resolution show that diversity and sparseness constraints almost universally im-prove the quality of learned role-definition matrix. This is not unexpected since there is a long tradition in machine learning of using sparsity to prevent overfitting. As men-tioned previously we can view diversity as enforcing sparsity since a diverse set of roles as per our definition do not share many overlapping features and hence each role definition is concise.

Figure 3 shows that role definitions learned using sparsity and diversity outperform standard unconstrained role dis-covery (RolX) in almost every setting and problem parame-terization. Figure 4 more clearly shows the general trend by considering the results for a particular problem parameteri-zation. In that figure, we observe that diversity constraints lead to the most improvement over RolX, while sparsity im-provements are lesser. We also observe that transferring the KDD role definitions to some graphs (like VLDB and SIG-MOD) does not compare well to the baseline method that does not use any roles (such as ReFeX). We believe this is because the same participants in conferences such as VLDB and SIGMOD do not have a similar role to the ones they play in KDD; and hence, using the raw features (without roles) produces better results.

We believe that sparsity improves the quality of role defi-nitions by reducing the ability of unconstrained NMF-based role discovery to overfit the problem. Features that only slightly add to the definition of a role are more likely to be explaining noise; and by forcing those values to zero, we end up with more robust definitions. Furthermore, the diversity constraints help by removing redundancy in role definitions, which leads to definitions that are more easily comparable. For example, if a feature is used to define every role, then it is not essential in defining any of them.
In this section, we show that our alternative role discov-ery formulation (presented in Section 4.3) can discover sig-nificantly different role definitions, as well as show that the formulation can be used to improve the role definitions when there are ground-truth communities. In Table 3, we show the difference between an alternative role discovery result and an original role definition found using unconstrained role discovery (via RolX). In Table 4, we show that we can use our formulation to get more consistent assignments of roles when ground-truth communities are known.

In our first experiment, we explore the difference between the roles of the original and alternative role discovery. Using the KDD co-authorship graph, we find a set of roles and con-strain a new solution to have a significantly different role def-inition ( F matrix). We then compare the results by assign-ing each vertex to its most dominant role in both results to create two separate partitions of the vertices. We then mea-sure the difference between the two partitions using Jaccard distance. Table 3 shows that all of the Jaccard distances are far from 0 meaning that the alternative role assignments are very different than the original ones. Figure 5 illustrates the alternative roles found in the largest connected component of the KDD coauthorship graph. Note, the reader can zoom in on this figure to read the names of each author. The fol-lowing is a description of the original roles and the roles that GLRD(Alternative) found. These description are based on sense-making analysis [14]. As the descriptions show these roles are capturing alternative concepts.
 Table 3: Jaccard distance matrix comparing original role assignments (rows) to alternative role assign-ments (columns). Jaccard distance of 0 represents an exact match between clustering and 1 represents no overlap. The relative error for the two decom-positions was similar: 0 . 12% and . 5% (where relative error is error = || V  X  GF || / || V || ).
 Original Roles:
Role 1: Nodes here have high eccentricity. These are
Role 2: Nodes here have high eccentricity and high clus-
Role 3: Nodes here have high degree and high clustering
Role 4: Nodes here have high PageRank, high degree, Alternative Roles:
Role 1: Nodes here have high PageRank and high bicon-
Role 2: Nodes here have high clustering coefficient but
Role 3: Nodes here have high eccentricity and high clus-
Role 4: Nodes here have high eccentricity and high de-Figure 5: A visualization of our alternative role dis-covery results for the KDD co-authorship graph X  X  largest connected component. All the colored nodes belong to the same primary role under the origi-nal factorization. However, they belong to different primary roles under the alternative factorization, as indicated by the various colors. We observe that the alternative roles are able to separate the 3 blue  X  X ocal-star X  nodes (namely, Jun Zhu, Lei Zhang, and Evimaria Terzi) from the red  X  X lobal-broker X  nodes (namely, Christos Faloutsos, Heikki Mannila, Vipin Kumar, etc). The alternative roles also separate out the 4 yellow  X  X eriphery-cliquey X  nodes. Note, the reader can zoom in on this figure to read the names of each author.

We next experiment with a YouTube dataset, which is a network of users with known ground-truth communities [22]. This graph was created by crawling the YouTube site in 2007 and creating directed edges between a pair of users a and b if a  X  X  profile page linked to b  X  X  profile page. Ground-truth communities were assigned by collecting all users belong-ing to the same group, which were pages that allowed com-munications between users on given topics. The graph has 1,134,890 vertices, 2,987,624 edges, and 8,385 communities. We selected all communities with over 100 users of which there were 105. The largest community has 2,217 users.
There is an inherent complementariness between role dis-covery and community detection. The former is about struc-tural similarity; while the latter is based on proximity in the graph. Role discovery finds functions/roles of users but does not find the communities themselves. However, there may be multiple interesting sets of communities within the same network and those communities may be characterized by very different roles. In this experiment, we encode the set of ground-truth communities for which our role discovery technique should find roles.

The way we encode the YouTube ground-truth commu-nities into our analysis is by providing the communities as G  X  to our alternative role discovery formulation. This will force our discovered roles to have a role assignment that is different than ground-truth communities, which matches the semantic relationship between the two problems.

To evaluate the effectiveness of this result we measured the proportion of members in each community belonging to each role. We then calculated the standard deviation over all such communities per role and report the results in Table 4. The assumption for this evaluation is that each role should be equally represented in each community. Our results show that the alternative role discovery formulation can indeed be used to normalize the roles with respect to a set of ground-truth communities. After applying sense-making [14], the six roles that our GLRD(Alternative) finds are as follows: Alternative Role 1: Nodes here are global hubs. They Alternative Role 2: Nodes here are on the periphery of Alternative Role 3: Nodes here are authorities. They have Alternative Role 4: Nodes here are very cliquey. They Alternative Role 5: Nodes here are local hubs. They have Alternative Role 6: Nodes here are the majority of the
Role discovery is an emerging and important area of graph mining. It looks at discovering nodes that perform similar functions in networks, but do not necessarily belong to the same community. Existing work so far has been completely Table 4: For each role, we report the standard de-viations of role proportions over all communities. The result shows that our alternative role discovery formulation can be used to find roles whose mem-bers are better distributed across a set of interesting communities. The values are scaled by 10 2 . unsupervised. We propose a framework that allows incor-porating convex constraints into NMF to allow a rich set of guided role discovery formulations.

In particular we explore three types of guidance: sparsity, diversity and alternativeness. Sparsity and diversity can be used to create simpler and more interpretable role definitions and role allocations. Also they can reduce overfitting and produce better predictive results for matching authors be-tween the KDD conference and a variety of other conferences provided they perform similar roles in both conferences. The notion of alternativeness has been explored in the clustering literature and is useful if the given explanation is not valid and an alternative is required. Here we show that not only do alternative roles exist in co-author networks, but that we can find an alternative to the community structure in a very large YouTube graph.

We view our work as a framework for incorporating guid-ance into role discovery and in the future will explore other forms of guidance such as partial role definitions and extend our solvers to tensor settings to allow evolving roles.
The authors gratefully acknowledge support of this re-search via ONR grants N00014-09-1-0712, N00014-11-1-0108 and NSF Grant NSF IIS-0801528. This work was also supported in part by IARPA via AFRL Contract No. FA8650-10-C-7061 and in part by DAPRA under SMISC Program Agreement No. W911NF-12-C-0028. [1] B. W. Bader, T. G. Kolda, et al. Matlab tensor [2] S. Basu, I. Davidson, and K. Wagstaff. Constrained [3] A. Beck and M. Teboulle. Mirror descent and [4] M. W. Berry, M. Browne, A. N. Langville, V. P. [5] S. Boyd and L. Vandenberghe. Convex Optimization . [6] R. Bro and N. D. Sidiropoulos. Least squares [7] CVX Research. CVX: Matlab software for disciplined [8] I. Davidson, S. Gilpin, and P. B. Walker. Behavioral [9] I. Davidson and Z. Qi. Finding alternative clusterings [10] J. Duchi, S. Shalev-Shwartz, Y. Singer, and [11] H. Furstenau and M. Lapata. Semi-supervised [12] M. Grant and S. Boyd. Graph implementations for [13] W. Heiser and P. Kroonenberg. Dimensionwise fitting [14] K. Henderson, B. Gallagher, T. Eliassi-Rad, H. Tong, [15] K. Henderson, B. Gallagher, L. Li, L. Akoglu, [16] P. O. Hoyer. Non-negative matrix factorization with [17] M. Ley. DBLP, computer science bibliography. [18] T. Li and C. Ding. The relationships among various [19] H. Liu, Z. Wu, X. Li, D. Cai, and T. Huang.
 [20] J. Liu, S. Ji, and J. Ye. SLEP: Sparse Learning with [21] J. Liu and J. Ye. Efficient Euclidean projections in [22] A. Mislove, M. Marcon, K. P. Gummadi, P. Druschel, [23] P. Paatero and U. Tapper. Positive matrix [24] Z. Qi and I. Davidson. A principled and flexible [25] M. Somaiya, C. Jermaine, and S. Ranka. Mixture [26] L. N. Trefethen and D. Bau. Numerical Linear [27] F. Wang, T. Li, X. Wang, S. Zhu, and C. Ding.
