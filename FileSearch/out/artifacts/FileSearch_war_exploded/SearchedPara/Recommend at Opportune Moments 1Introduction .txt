 solve. Fig. 1 is an example to illustrate our problem. One user is used to watching the latest action movie in the first few weeks of the release date and giving it a high rating user at start because of his previous high rating scores on action movies. Nevertheless, after weeks, if the user still did not watch the movie, should we assume that the user just missed the movie information and keep recommending the movie to the user? Or stop recommending the movie to the user? 
People watch a movie for several reasons. If we group people by their reasons and analyze their timestamps, we would find an interesting cascading process. First, film critics would watch a movie at the release date. Then stars X  fans and people appealed friends X  recommendation or positive feedback from the public would watch it. Afterward people who enjoy watching movies at home can rent a DVD or watch it on Cable TVs. In the previous example of the first paragraph, the user is one of the 2nd weeks, we will assume that the user does not like the movie and then stop recommending the movie to the user. In other words, if he liked the movie, he would watch in the early time. 
Coincidentally, Diffusion of Innovations theory [3], one of the most frequently cited books in Management Science 2 , demonstrated a similar idea. The theory divides users of a product into 5 categories by their adoption time: Innovators, Early are 2.5%, 13.5%, 34%, 34% and 16%. It inspired researchers [8][14] to discover the laggards follow their lead. 
However, what attracts our attention more is not only the trust relationship between the innovators and followers. First, the theory infers that similar products have similar followers. Second, users of a product are categ orizable. That is, if the categorization is good enough, partial users may represent the composition of whole users of a product. Fig. 2 illustrates the main idea of this paper. Similar products may have similar users in each corresponding category and vice versa. 
In this paper, we propose a new approach rather than the trust network. We adapt latent suggested to be users of the corresponding categories among similar movies. Most existing works [1][4][12] on recommendation problems focus on the like / dislike problem. A recommender system is measured by MAE and RMSE of its predictions on the unknown rating scores so that it can recommend users X  likes accurately. Other works focus on the purchase / not purchase problem by optimizing some evaluation metrics such as Precision and Recall. [5] used the item-to-item collaborative filtering algorithm,  X  X ustomers who bought items in your shopping cart also bought X , to improve Precision of a recommendation list. Our work focuses on the purchase / not purchase problem and uses time factors to improve a recommendation list. Due to the lack of real  X  X urchase X  logs, we consider each rating to be that the user really purchases the item. information into graphical network. S. K. Tyler [14] modeled user adoption behaviors by creating a total ordering. It showed that by using order sequences, a recommender system could more accurately predict the category of a new product as well as predict which users will follow. Noriaki Kawamae [8] proposed a recommendation algorithm that focuses on the search time that, in th e absence of any recommendation, each user algorithm considers both innovators X  preferences and trends for identifying items with leader group. A leader group influences a follower group; similar leader groups may have similar follower groups. 3.1 Motivation shopping behaviors: favorite &amp; habit. 
For favorite, people give each movie a rating with a score to show their feelings of it. A recommender system analyzes users X  previous ratings and predicts that one user would like other similar movies (Item-Based CF Algorithm). For Habit, people have different attitudes toward new products: some people rush to the store whenever it has new products, and some people would like to try after many people saying it is good. Timestamps. X  Rating scores represent personal favorites, which most conventional recommender systems addressed. Rating timestamps represent personal shopping habits which we address in this work. The following formula describes the function of our recommender system: 1. Opportuneness during a specific period of time -t specific = [t lb ,t ub ] 2. Recommend m id to u id or not during t specific 3. Evaluated by Precision Other than conventional recommender systems which predict personal favorites: f(m id ,u id )  X  rating scores 1. Rating prediction 2. Recommend users X  likes 3. Evaluated by MAE &amp; RMSE of rating scores  X  X urchase X  does happen according to logs. Beyond the reasons of the purchase, should we recommend movies to user all the time or recommend movies to user the recommendation cost. Since every recommendation has an opportunity cost, so we have to recommend at opportune moments. 3.2 Group Dependency group), movie to compute the similarity. Fig. 3 illustrates how we divide users of each movie. In the following, we will choose a boundary the relation between the early part similarity -( ] ( ] ) , ( and the late part similarity -( ] ( ] ) , ( because there is no user at t 0% so set a period of time which excludes the left boundary and includes the right boundary. part similarity and y = the late part similarity. Then we plot these tuples on a scatter graphs with the boundaries from t 10% to t 90% show the robustness of our observation of the group dependency. That is, the early part is positive related to the late part. 3.3 Main Idea Due to the group dependency, If m i (a new movie) and m j (an old movie) are highly recommended to watch m i during (t x% ,t 100% ]. In other words, we prefer recommending movies to users in the corresponding time -t specific . leave-one-out new movie would have 3 recommendation lists during t specific : 1. List OUR is composed of users of the late parts of similar movies. 2. List CV is composed of all users of similar movies 3. List CT is composed of users of the early parts of similar movies. Of course, users who watched the new movie in the early time would be deleted from the recommendation lists. We take List CV to be the baseline for our experiments since List CT ? X  4.1 The Proposed Approach similarity between movies by the early parts and select Top-K (Given K=47) similar experimental results. 4.2 Theory-Based Boundary (t 2.5% , t 16% , t 50% , t 84% ) The inspiration of the theory-based boundary is from Diffusion of Innovations theory [3]. It divides users of a product into 5 categories: Innovators, Early Adopters, Early Majority, Late Majority and Laggards and the proportions of them are 2.5%, 13.5%, where the accumulated user amount reaches 2.5%, 16%, 50% and 84% respectively. 4.3 Global Optimal Boundary The global optimal boundary is a heuristic boundary. We test all possible boundaries from t 2% to t 98% with a fixed interval  X  2%. There are two problems have to be solved movie database. So once the accumulated user amount of the new movie reaches x%, we can make an optimal recommendation list. Of course, t x% is the earlier the better. On the other hand, we want to know whether the more information of the early part -(t 0% ,t x% ], the better Precision we can get on predicting the late part -(t x% ,t 100% ]. 4.4 Local Optimal Boundary This section, we use a dynamic boundary other than a fixed one. Fig. 7 illustrates the The idea of the local optimal boundary is th at not all movies are ideal distributed. leader groups affects similar follower groups to purchase the item. Finally, we merge users of the follower groups to be List OUR . 5.1 Dataset boundaries between t 2% to t 98% in 4.3 and 4.4, the minimal rating amount is necessarily required for each interval. We filter out all movies with ratings less than 100, so every information of the filtered dataset. 5.2 Evaluation Metric In our experiments, we use Precision and Recall to evaluate the three recommendation lists. A perfect precision score of 1.0 means every user in the recommendation list can ground truth can be found in the recommendation list. We will analyze Precision and Recall of the top 1, 5 and 20 users in the recommendation lists of each movie. 5.3 Experimental Result one-out new movie -m new , so our recommender system only knows the rating Theory-based From the results, we can see the Precision is maximized with the boundary t 20% , hence we three recommendation lists in Table 4. List CT , and the results show how importance to recommend at opportune moments. 
Furthermore, on answering the second problem mentioned in 4.3,  X  X he more part, X  we check Fig. 8 and find the P@1 is maximized at t 20% . So if we are at the time before the boundary t 20% , we had better use all information we know because the P@1 because the P@1 is decreasing after the boundary t 20% . boundary is to divide all users of a product into two groups  X  the leader group and the follower group may be similar too. In other words, the local optimal boundary doesn X  X  the results of the different boundary cases of the leave-one-out new movies solved by the local optimal boundary. The results look good at any time. by Local Optimal In the paper, we propose an approach to adapt the existing item-based (movie-based) collaborative filtering algorithm based on the timestamp of ratings to recommend movies to users at opportune moments. We first present the observation and bring up performance of our system is very promising on MovieLens Data Sets. computational cost. Researchers have been working on the problem of a small group represent whole users of the product. 
In the future, to add one more boundary is a good further development in our recommendation list more accurate. However, a system with two boundaries is more complex than it with only one boundary. For example, the definition of the best case complicated. We hope we can find out the solution in the near future. 
