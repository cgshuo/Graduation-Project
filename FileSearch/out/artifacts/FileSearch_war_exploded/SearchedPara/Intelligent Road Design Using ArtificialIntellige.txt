 Camilo Isaza Fonseca 1 , Octavio J. Salcedo Parra 2 , and Lewys Correa Sanchez 3 The TSP problem is one of the most commonly encountered when computing routes between two points that are distant from n sub-points that must be part of the route. This type of problem has many postulated solutions (as expected), although in general, for the case of this work should be sought the most optimal solution that allows finding the indicated routes in the shortest possible time. For this, a Research to determine the main needs of a city with a population of more than 5,000,000 inhabitants making use of new cutting-edge technologies applying artificial intelligence techniques. That provide an optimal solution that transport to the cities to improve their paths Vials (in terms of technology) with traffic lights and traffic regulators that contribute to the improvement of people X  X  quality of life and the development of a clean and self-sustaining ecosystem.
For a city with a high population density and in which approximately half a million vehicles circulate [1] it is essential to propose tools that optimize mobility and contribute to economic and cultural development through the modification of the archaisms that have been marking the Methodologies that have been used in the design of roadways and traffic manipulation models. For a city such as Bogot  X a, a design can be proposed that modifies the use of traffic controls that have been used for ever traffic lights. That is why to apply techniques, which can represent a solution. That provides a remarkable improvement around the average waiting times per traffic light, decreasing them by at least 10%. It is also expected to obtain improvement in the number of vehicles that are stopped to wait in each cycle of the semaphore decreasing this amount in at least a 60% reflected with the data obtained in the work of O. Salcedo[2]. In addition, it is also expected to be able to obtain a benefit in terms of the average speed of the vehicles that transit in the way object by at least 40%. Which could obtain a real and direct benefit compared to the models previously proposed and that were proposed in this work, as it is, for example, the ANFIS model of O. Salcedo [2].
Artificial intelligence techniques have undoubtedly represented the most impor-tant and convenient paradigm in solving problems requiring real-time assistance. Among the most outstanding and most used methodologies, we can find models of fuzzy logic in which parameters intervene that are obtained through measure-ment elements that are strategically located as required so that a timely response can be offered to the needs that it demands the problem. In addition, fuzzy logic has been closely related to the problem solving of vehicular traffic detection and manipulation, as was already observed in the work of O. Salcedo [2]. Moreover, in the work of K. Jena [3], a tool developed using fuzzy logic techniques can be used to control a vehicle remotely as a cruise control. For purposes of this work will be used one of the most modern artificial intelligence techniques, simulation automata), with this will develop systems that manipulate traffic lights as they have the ability to act as independent entities and in society in a multi-agent design. This is a solution that promises to effectively meet the waiting times improvement and also provides the ability to mutate against unexpected changes and also provides the possibility to act differently depending on the date, time and climatic situation. To carry out the programming of the fundamental soft-ware of the design will be used a language of high level (Python) that will provide the necessary tools and that also provide to the sufficient support to be executed in any class of machine independent of its operating system. Implementing this solution in the object of study can be expensive and risky, that is why a state-of-the-art simulator is used in which we can implement a tool that allows emulating the behavior of different road paths that have traffic lights and other elements that are part of real life and that will be programmed through the Transmodeler interface. This allows us to construct a scale-based design of the object that will be taken for the study (explained later) and will allow implementing the result version of the model. In order to obtain the data on which it is going to work, it is possible to choose to use magnetic loop sensors (as was previously done in [2]). Because these provide true and accurate information without giving way to the mistakes that may be made by human agents in the performance of this work. In addition, these sensors allow us to obtain the information at any time of the day and in almost any climatic condition, although, in order to obtain an initial sample to check the effectiveness of the model, we opt for a manual data collection. In the work of the modular implementation of the traffic, controllers will be used techniques based on automata with independent behaviors oriented to the behavior in neighborhoods. Simulating the behavior of the cellular au-tomata but obtaining the benefits of the techniques of diffuse logic, which will define a hybrid interleaving of technologies, which, as expected, provide a solu-tion that meets the objectives proposed in the present work. Specifically, in the city of Bogota, a system of 15 traffic lights that in certain conditions seem not to work optimally, these crosses correspond to the four that are included between Carrera 97 between streets 24 and 24C and Carrera 100 between streets 24 And 24C, this can be seen in Fig. 1 These crossings control all traffic from the town of Fontibn to 26th and 24th Street (Avenida Esperanza), which represents a bottleneck that would affect the mobility of users by lengthening waiting times and reducing average speed considerably. For the purposes of data collection, a checker shall be assigned at each junction to take the corresponding information, in addition to waiting times at traffic lights in a peak hour (5:30 p.m.) and 1 hour (10:00 a.m.) with in order to obtain information that will be verified as the case may be. This will later be loaded in the simulator to perform the verifica-tion with the intelligent system running and thus be able to obtain information about the changes that are presented with this. High-level programming greatly facilitates the work of programmers; in partic-ular, Python, which will be the main language of this work, provides a special facility in developing robust tools that can offer greater guarantees to users, has a variety of libraries that provide very good utilities to the software developed in this. To structure a fuzzy logic the first thing we must do is to define the main element to be measured and to establish parameters that allow to quantify with ordinality a certain amount of these elements taking as reference an initial measure. This means that for the specific case, the first thing to be done is to make an average vehicle measurement at each of the traffic lights to be studied be assigned by adding or decreasing (depending on the case) between 3 and 5 vehicles, an example illustrating this situation is presented below: done as follows: N one = 0 vehicles F ew = x  X  5 vehicles Some = x vehicles M any = x + 5 vehicles F ull = x + 10 vehicles observed, the quantification would be: obtained according to the parameter that has been observed. A response should calibrated to authorize passage for and seconds, the ratio between the time to increase and the number of vehicles to be passed is directly proportional. That is to say, the greater number of vehicles, the longer the time must be increased to the standard time of the traffic light, for example: find a balance that allows to obtain a value between few and many for the next data acquisition. This contingency value will not change over time as follows. assign a random value between 5 and 10 which will be the contingency value. Therefore, the value of the semaphore time for the next execution is: time = n + random (5 , 10) follows: time = time + random (1 , 5) extent in order not to re-saturate the traffic at this traffic light as follows: time = time  X  random (3 , 8) increase.
 it would operate normally: time = time  X  period traffic equivalent to none the traffic light time will correspond to 5 seconds that will allow pedestrians to cross at complementary traffic lights. With the above, we would have a fuzzy logic design capable of operating on a simple network of traffic lights. For purposes of a large city, it is necessary to choose to couple all these intersections in a system that allows establishing a connection between them so that the control of the traffic is complete and allows working together will be used a unidirectional graph that allows obtaining information about the nearby traffic lights in order to provide a timely response. The implementation in python for this system will use a semaphore type element which will act as a node, this lead to I get a dictionary-like element that will have content to the predecessor nodes, or in other words, earlier traffic lights. The implementation will then be a recursive, so, being in any node, we can reach the first semaphore Algorithm 1.1, which is responsible for establishing a path between two traffic lights, is shown below.
 def s e t c h i l d (G, u , v ) : #G i s current graph , u i s c u r r e n t node , v i s next node according to the characteristics of these in python, we must assign a unique element That allows us to locate them quickly in the dictionary (in constant time). Therefore, it could be suggested to establish a coding according to the sector in which the semaphore is located, which would have advantage over other systems because a remote coding could be performed with only the information used the signal of the traffic light, in cities where this information does not rest checking traffic lights after traffic lights. This would greatly increase the costs of implementing such a solution especially where the geographic territory is too large. For the answer according to the values obtained in the traffic valuation at each semaphore a special method was designed, which would work with the logic that was already proposed in both types, numerical and with our quantitative organization. The Algorithm 1.2 shows the code used for this.
 x=10 #mean value of cars s t i m e = 15 #Standar time value c u r r e n t t i m e = s t i m e #Actual time def g e t t i m e ( xx ) : #xx i s the current value a t  X  + t i m e . s t r f t i m e (  X %H : %M: %S X )+ X  i n  X  + i d r e t u r n s t i m e t i m e . s t r f t i m e (  X %H : %M: %S X )+ X  i n  X  + i d t i m e . s t r f t i m e (  X %H : %M: %S X  ) +  X  i n  X  + i d &gt; =20): \ # Ejecution 3 with f u l l &gt; =8): \ # Ejecution 2 with f u l l + random ( 1 , 5 ) \ # Ejecution 1 with f u l l + random ( 5 , 1 0 ) xx= g e t t r a f f i c ( ) c u r r e n t t i m e = g e t t i m e ( xx ) at a traffic light and provides the time and its identification to obtain real-time traffic information in the city. Note the implementation for each of the cases that were previously proposed for fuzzy logic.
 a roadmap was established that would be used to avoid obtaining information that does not correspond or that is not valid. Specifically, the methodology for this data collection focuses on a resource that was delivered to the observers at the site to take the information through a manual timer. This sheet consists of a table in which to take the arrival time of 30 vehicles, the time in green of the traffic light, the red time of the traffic light, the average arrival of vehicles and the number of vehicles remaining in the Traffic waiting for the junction. The design will be presented later in the implementations where the data taken for the 15 traffic lights of our test or initial sampling will be attached. discrete events is used to connect directly to the TransModeler platform through a pipe provided by the operating system. This simulation is designed in layers like this: storing the main structure of intersections.
 the traffic lights of each intersection, that is, for a system with n intersections, instances of the intersection class will be used.
 this being the one in charge of obtaining information about traffic and also provide information about the time it needs to evacuate traffic.
 can be seen in Fig. 2.
 that would give validity to the time of departure of the vehicles, clearly these should have a waiting time according to their position in the queue that is done at the traffic light. This time was calculated manually from the reaction of the first driver, performing the test with a manual transmission vehicle, the start time circulates around the 3.0 seconds. In addition, starting a vehicle that is in position x and if you have correct visibility of vehicles ahead, would have a duration of: S ( x ) = 3 . 0 + 0 . 7 x the function for the first 10 cars in the queue.
 estimated according to the number of vehicles capable of leaving the traffic light and the number of vehicles that remain queued after the traffic light, in order to obtain this information. Would require the use of magnetic sensors but these will not be used for implementation in this work.
In our case study, we have 15 traffic lights located strategically in the two main exits of Fontibon to the north. The first and most important thing was to define a coding for intersections, according to what was proposed in the design section, each traffic light code should be different and comply with the system protocol so that it could be easily located in the simulator. The coding of the intersections can be seen in Table 1.
 simple coding, the traffic lights that are located to the north of the intersection would carry the letter  X  X a X  X  in its code, in the same way for the following traffic lights can be seen in Table 2.
 tablished, as all traffic lights are bidirectional, this means that all traffic lights are designed to be activated simultaneously if they are NORTH AND SOUTH (A AND C), EAST AND WEST (B AND D). Then, in the execution of the simulator, the following structure was used to execute a complete cycle of change of lights in the traffic lights of each intersection, The Algorithm 1.3 show the code used.
 def c i c l e ( s e l f ) : traffic lights that are separated with a 90  X  configuration. For example, North and East or South and West. This would be the main property of traffic lights when it comes to avoiding traffic accidents, without the existence of this would semaphores in the simulator is shown in The Algorithm 1.4.
 i n t e r s = [ ] a = semaphore (  X  1 a  X  , 2 0 , 7 . 4 , 8 , 4 0 ) c = semaphore (  X  1 c  X  , 20 , 8 . 2 , 6 , 4 0 ) b = semaphore (  X  1b X  , 40 , 1 4 , 3 . 5 , 2 0 ) d = semaphore (  X  1d X  , 40 , 1 1 . 5 , 5 , 2 0 ) i n t e r 1 = i n t e r s e c t i o n (  X  C a r r e r a 1 0 0 #24 X  , a , b , c , d , 4 ) i n t e r s . append ( i n t e r 1 ) a = semaphore (  X  xx  X  , 0 , 0 , 1 0 0 0 0 0 , 0 ) #The t r a f f i c l i g h t d o e s not e x i s t c = semaphore (  X  2 c  X  , 20 , 8 . 2 , 7 , 3 5 ) b = semaphore (  X  2b X  , 35 , 1 2 . 1 , 4 , 2 0 ) d = semaphore (  X  2d X  , 35 , 1 2 , 4 , 2 0 ) i n t e r 2 = i n t e r s e c t i o n (  X  C a r r e r a 1 0 0 #24C X  , a , b , c , d , 3 ) i n t e r s . append ( i n t e r 2 ) a = semaphore (  X  3 a  X  , 5 0 , 4 . 2 , 7 , 4 0 ) #The t r a f f i c l i g h t d o e s not e x i s t c = semaphore (  X  3 c  X  , 50 , 7 . 8 , 3 . 5 , 4 5 ) b = semaphore (  X  3b X  , 25 , 5 . 2 , 9 , 2 0 ) d = semaphore (  X  3d X  , 25 , 0 . 8 , 4 0 , 2 0 ) i n t e r 3 = i n t e r s e c t i o n (  X  C a r r e r a 9 7 #24 X  , a , b , c , d , 4 ) i n t e r s . append ( i n t e r 3 ) a = semaphore (  X  4 a  X  , 2 2 , 4 . 5 , 1 1 , 2 0 ) #The t r a f f i c l i g h t d o e s not e x i s t c = semaphore (  X  4 c  X  , 22 , 8 . 1 , 6 , 2 0 ) b = semaphore (  X  4b X  , 20 , 0 . 5 , 6 0 , 2 2 ) d = semaphore (  X  4d X  , 20 , 4 . 2 , 1 0 , 2 2 ) i n t e r 4 = i n t e r s e c t i o n (  X  C a r r e r a 9 7 #24C X  , a , b , c , d , 4 ) i n t e r s . append ( i n t e r 4 ) s i m u l a c i o n = s i m u l a t o r ( 4 , i n t e r s ) time, and the waiting time of the semaphore at 90  X  . The rate of arrival of the vehicles and the codes of the intersections. Then, in order to know the results of the simulation, a method was designed to initialize the intersections with the vehicular seeds, in addition, this would run the simulation for the sector with the fuzzy system and without it and then compare the results and obtain the percentage of Effectiveness of the system vs. the standard configuration. on the data collection. As can be seen in the attached sheets at the end of this work, the data observed in the sampling are presented in Table 3.
 ing cycles and with a vehicular seed, this was done because the system should be used to solve a traffic chaos situation, shown in The Algorithm 1.5. For ex-ample, when agglomerating large quantities of vehicles that hinder traffic. This is the main test of the fire for the simulator because with this should be able to suppress the most traffic.
 def s i m u l a t i o n ( s e l f , c y c l e s , x ) : + s t r ( c i c l e s )+  X  X YCLES OF SEMAPHORES AND A SEED OF X  + s t r ( x)+ X  X EHICLES X  s i m u l a t i o n w i t h t h e d i f f u s e s y s t e m :  X  + s t r ( s e l f . d e n s i t y ) s i m u l a t i o n w i t h o u t t h e d i f f u s e s y s t e m :  X  + s t r ( s e l f . d e n s i t y ) w i t h r e s p e c t t o t h e s i m u l a t i o n w i t h o u t t h e d i f f u s e s y s t e m  X + s t r ( ( ( s e l f . d e n s i t y  X  temp )  X  1 0 0 ) / s e l f . d e n s i t y )
The results of a project, in addition to reflecting the effectiveness of an alter-native, serve to open a field of research that allows other interested people to go deeper into the subject. For example, if the results of this project become unfavorable, other researchers who read this article may choose to present an improvement. A modification or simply, they might discover that studying this topic has no relevance because it has already been shown that this technique does not work with the field of study.
 Avenida Esperanza and 24C Street, main departures from Fontibon to the East the algorithm to load the traffic lights demonstrated a strong advantage over the traditional system. With a notable improvement in vehicle density at the sector, intersection and traffic light levels, which is around 60% in a low number of executions and 98% in a remarkably high number of executions, the results can be seen in Fig. 4.
 paper, with an execution such as that given by Salcedo for his ANFIS model, shows an improvement in traffic between 68% and 72%. That compared to ANFIS would mean an improvement of 10% on average. This would demonstrate that there is a viable way to optimize the ANFIS model in order to improve its results. For the other values that are evaluated in [2] would require the use of a magnetic loop sensor to allow us to obtain information about it.
 sector, an improvement of 35% can be seen in the Travel times. While in the CityHall sector, a 20% improvement can be observed using only the traffic light modification technique, because Cao X  X  work is much more efficient when using his combined techniques. The above allows us to show that the work presented here has the conditions to operate with greater efficiency than that of Cao. Even if it is evaluated in the same road corridors (if you take the model that modifies the traffic lights, LCO, only).
 also perform a simulation based on a number of semaphore switching cycles. In their work, they perform two types of simulations, one based on a system with a single intersection and a moderate source of traffic and the other operates on a system with more than one intersection. Our system presents an improvement that oscillates in the 60% reduction of traffic for systems with these characteris-tics. While in systems with multiple intersections (as in the case of this work), our model reaches 65% of effectiveness by operating with a certain number of cycles that does not exceed 100. For these cases, the TSTMA model by Khalil [5] has an arrangement to cease to function effectively at a greater number of intersections.
 system like the one proposed in this work, a very considerable improvement can be observed in a sudden case of vehicular chaos. Moreover, if the execution were extended to infinity, the traffic would improve completely in the sector with an observable result of up to 98%, which positions a diffuse system like this in a position that would allow it to be part of the future solutions for the traffic of a city.
The TSP Traveler Salesman Problem is a rather exotic source of study as you can find important information from a large number of sources. As well as historical references that can serve as guidance in choosing the technologies and strategies that will be used to solve instances of this problem over time. into account since we will have at our disposal tools that will be working in real time and that can directly affect the integrity, health and life of the people. [6] the technological media that we know today, gaining a direct influence on the tools that are used daily and in community. Likewise as in the decisions, that are made regarding the implementation of new technologies that are part of the common and daily life of societies.
 alternative to reduce traffic in big cities. As well as optimizing people X  X  time and improving the environment by reducing the pollution of vehicles and the time, they last lit up in the streets. In addition, we are delivering to the big without a doubt, by taking advantage of this work, the beneficiaries can be millions. We are giving an opportunity to new technologies to emerge and we can make the most of their benefits.
 regulators, has a very good performance and a low cost implementation, in addi-tion, provides a very good performance in terms of the solution be concerned. To conclude, traffic is a colossus that we must combat and the best way is to make use of the technological means that we have at hand applying the techniques of networks, interconnection and artificial intelligence that allow us to recognize and identify adaptive patterns to predict and control The excessive growth of agents involved in this problem.

