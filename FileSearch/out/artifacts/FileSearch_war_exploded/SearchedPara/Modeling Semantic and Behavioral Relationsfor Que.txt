 Users submit queries to express their inform ation needs in a typical search scenario. However, most of time, original queries can not accurately express users X  search inten-tion. On one hand, queries are too short to make intentions clear. By analysis of the AOL click logs recording over three months in 2006, we observe that 14% of queries contain a single word, and 78.6% contain less than 4 words. On the other hand, queries are always ambiguity or various intentions[1]. For example,  X  X pple X  may refer to  X  X ruit X ,  X  X  company X  or  X  X lectronic products X . In a ddition, sometimes users are lack of enough knowledge to construct a succinct and precise query.

In order to help users describe their exact information needs, search engines widely employ query suggestion technologies. Typically, query suggestion is based on docu-ment analysis[2], or query log analysis[3,4]. The former techniques mainly find similar terms in related documents, while the latter mainly find queries that have similar click behavior. Because of sparseness of clicks in logs, fuse models[5] combining clicks in-formation and relevant documents are also studied. As important guiding information from people, click graphs in a query log have been widely studied to mine user pref-erence and user behavior for query suggestion. We define the task: Given a query and a query log, the system recommends a list of semantic similar or related queries to the given query.

In this paper, we study both semantic relations and user behavioral relations from click-through data to suggest proper queries for multiple user intentions. At the begin-ning, query semantics and user behaviors in a log are analyzed separately. Then, two hybrid methods considering both sides are proposed. The details are as follows: On one hand, in order to avoid the sparseness of click-through data, we establish a semantic relation graph ( X  X emantic graph X  for shor t) to describe a query. The graph is a hybrid bipartite graph, in which nodes are morpheme s such as queries, keywords, phrases and entities, and edges are semantic relations between queries and other types of nodes. Hence, similar queries are collected as descriptions for the source query by searching corresponding morphemes on the semantic graph. On the other hand, by analyzing dif-ferent user behaviors, we construct a behavi oral relation graph ( X  X ehavioral graph X  for short) to find related queries for multiple user intents and preferences. It is a hybrid bipartite graph built by multiple granularity. A coarse-grained graph is built by global clicks of all users to describe the common behaviors, and a fine-grained one is built by a local click history of a single user to describe personal preference, and a third one is by temporary relationship between queries. As a result, three bipartite graphs are es-tablished: a global query-URL bipartite graph, a local user-query bipartite graph and a query-query bipartite graph extracted fro m sessions. Furthermore, two hybrid sugges-tion methods are proposed to fuse both semantic and user behavioral relations in the log. We consider unsupervised linear combinations, and supervised machine learning combinations respectively. Experimental results show that the hybrid methods generate semantic related queries to users, and improve the recommendation quality as well.
The rest of the paper is organized as follows. We discuss related work in the next section. Section 3 introduces common information for click graphs. We propose two hybrid methods with semantic and behavioral graphs in Section 4. Section 5 presents experiments and the empirical analysis of our models. Finally, conclusions are given in Section 6. Query suggestion based on log analysis attr acts considerable atte ntion in recent years. Click logs provide researchers a whole view o f users X  behavior during search, includ-ing submitting queries, clicking URLs and formulating queries. According to differ-ent user behaviors, methods can mainly be divided into three categories: click-based, session-based and content-based methods. In order to find related queries, click-based approaches mainly discover global relati onship between queries and URLs by all users, while session-based ones provide a detailed analysis to individuals X  activities during search. Content-based methods focus on finding similar queries that have similar se-mantic relevance.

The main idea of click-based methods is that if people click similar URLs for two queries, then the two are related. Many research works[3,4,6] employ random walk al-gorithms on a click bipartite graph to suggest re lated queries. Specially, Deng etc[4] propose a CF-IQF model considering that URLs have different importance for each query. Because of its outstanding performan ce, we employ this model as our basic model. Ma etc[7] construct both query-URL and user-query bipartite graphs to find re-lated queries, then a content similarity metric is applied to find semantic related queries. It is a similar work as ours, but we consider both semantic and behavioral relations by establishing a semantic graph a nd a behavioral graph instead.

In session-based approaches, they share the assumption that users express the same intent in a short period of time, so that queri es are related in the same session. Hence, similar metric[8], Mutual Information usi ng co-occurrence[9], time distance between consecutive queries[10], and sequence analy sis[11] are applied to query suggestion. Specially, [10] considers that queries are more relevant when they are closer by time in a session. We build a bipartite graph between queries in sessions, so that queries in the same session still keep association with each other.

In content-based methods, researchers mainly find similar queries to suggest. Be-cause queries are consisted of terms and marks as texts, traditional methods on text mining are able to utilize. In order to describe a query, Bendersky and Croft[12] build a hypergraph using various morphemes such a s terms, bigrams, nouns and entities. How-ever, a query is too short to find relatedness with each other. To overcome the problems, researchers do query expansion using relevant documents. Sahami etc[13] select top K pseudo-relevance documents returned by a search engine to describe a query. Thus, query similarity can be replaced by document similarity.

Moreover, some fuse methods are proposed. Yates[14] identifies five relation graphs from a query log. In all graphs, nodes are queries, and edges are introduced if two nodes contain common words, common urls, common terms in urls, belong to the same session, have a link between two clicked urls. Kelly etc[15] suggest related queries using term relevance feedback techniques. Yi and Allan[5] add missing clicks to click graphs employing content similarity.

To suggest proper queries for multiple inte nts, we propose a fuse method combining content-based, click-based and session-ba sed methods. In the next section, we briefly introduce some common information for click graphs. The CF-IQF (Click Frequency Inverse Query Frequency) model[4] is proposed by Deng etc in 2009. It is a query representation model on the click graphs. The main idea is that if two queries are similar, then their corresponding URLs are similar. Furthermore, it employs TF-IDF (Term Frequency Inverse Document Frequency) ideas to limit the high frequency queries. The URLs connecting few er queries are more important because of its concentrate. The model gains a good performance, and it can be extended and used for other bipartite graphs. Hence, we employ this model as our basic model.
At the beginning, we introduce the common information of click-through data. A common click-through data contains the following information: a user ( u ), a query ( q ) submitted by the user, a URL ( d ) which the user clicked, and the time ( t ) when the query was submitted for search. The relatedness between queries in the CF-IQF model is defined as follows, d and d k to q j respectively. D is the URL set in a log. Formula 1 can be propagated by a random walk between queries and URLs.

Define c ij as click frequency between query q i and URL d j , the notations in Formula 1 are defined as where cfiqf ( q i , d j )= c ij  X  iq f ( d j ) ,and cfiqf ( q i )=  X  d  X  where | Q | is the total number of queries in the query log, and n ( d j ) is the frequency of query which clicks URL d j . In this section, we propose a fuse framework to suggest queries by considering semantic and behavioral relations. In order to overcome the sparseness of click-through data, we build a semantic relation graph to describe a query by content-based methods. To find related queries for different user intents a nd preferences, we construct behavioral rela-tion graphs by clicks and queries in sessions. Finally, two hybrid methods are proposed to suggest semantic related queries for multiple intents. 4.1 Finding Similar Queries by a Semantic Relation Graph In this section, we detail how to construct a semantic graph, and then semantic relations are used to find similar queries. We consider multiple morphemes of queries to build a semantic graph. As a result, keywords, phrases and entities are extracted from the source queries. Actually, keywords in queries describe the detailed ideas of user intents. However, one keyword can only tell a fragment meaning. Luckily, previous research works[2,16] show that noun phrases have proven to be reliable for key concept discov-ery in queries. Therefore, phrases that tell more precise meanings are extracted, too. So are entities that stand for the principal c omponents of queries. Furthermore, we con-struct the semantic graph by combining query-keyword, query-phrase, and query-entity bipartite graphs together, in which edges are semantic relations connecting queries with other types of nodes, as Figure 1 shows. In fact, it is a hybrid graph established by three bipartite graphs. For example, a query such as  X  X other of the bride dresses X  is associ-ated with keywords  X  X other X ,  X  X ride X  and  X  dress X , associated with phrases  X  X other X  and  X  X he bride X , associated with entities  X  X other X ,  X  X he bride X ,  X  X other of the bride X . query-keyword bipartite graph is an undirected graph, defined as B qk =( V qk , E qk ) where nodes are V qk = Q on frequency of k j appearing in q i . Similar definitions are defined for query-phrase and query-entity bipartite graphs, denoted as B qp and B qe respectively.

According to the main idea that similar queries would be described by similar key-words, phrases and entities, our semantic relation p qs ( q j | q i ) between queries is a com-bination among three bipartite graphs, model on B qk , B qp ,and B qe respectively. Parameters a , b and c are factors of influence of each graph (default set to 1/3), constrained to a + b + c = 1.
 In details, we introduce how we extract keywords, phrases and entities in query logs. Keywords are terms except stop-words in queries. Phrases are extracted by an English phrase chunk tool named CRFChunk[17]. In our opinion, en tities are names, important notions or concepts that user would search separately. So we develop a novel way to extract them. At first, entity candidates are generated by different term permutation of a query. Then a candidate is selected when the candidate submit as a query in the log. 4.2 Finding Related Queries b y a Behavioral Relation Graph In order to identify multiple intents, different user behaviors are mined to construct a behavioral relation graph. To notice both the actives of people and the behavior of a single person, we divide user behaviors into three kinds: In the first category, we study mass behavior via clicks between queries an d URLs by all users because users always have common activities which display multiple intents; In the second category, personal behavior representing personal preference is studied by an individual search history; In the third category, we analyze query formulation in a session. Therefore, the behavioral graph is established by three bipartite graphs: a global query-URL bipartite graph by all users, a local user-query bipartite graph and a local query-query bipartite graph extracted from sessions.

The global query-URL bipartite graph is established between queries and URLs, in which edges are users X  clicks from queries to corresponding URLs. The edge is weighted based on click frequency. Thus it is defined as B qd =( V qd , E qd ) where V qd = Q
The local user-query bipartite graph describes relations between users and queries, in which edges are submissions from users to queries. The weights of the edges are frequency of submissions. It is defined as B qu =( V qu , E qu ) where V qu = Q are U = { u 1 , u 2 ,  X  X  X  , u r } and E qu = { ( q i , u j ) } as Figure 2.
The local query-query bipartite graph represents relatedness between queries in the same sessions, in which weights of edges are similarity by considering both content (such as cosine similarity) and time distance[10]. It is defined as B qq =( V qq , E qq ) where V thesamesession;  X  q dist ( q i , q j ) counts number of queries between q i and q j in a session , and d is a con-stant(varying from 0 to 1, default set to 0.9).  X  is a factor of influence of each graph(0.5 as a default).

The global query-URL bipartite graph can straightly employ the CF-IQF model to bipartite graphs, we adopt users and queries instead of URLs respectively. Local behav-ioral relations are denoted as p qu ( q j | q i ) and p qq ( q j | q i ) separately.
Since behavioral relations are affected by user behaviors, our behavioral relation p model on B qd , B qu ,and B qq respectively. Parameters  X  ,  X  and  X  are factors of influence of each graph (default set to 1/3), constrained to  X  +  X  +  X  = 1. 4.3 Associations of Semantic and Behavioral Relations In order to take advantage of the semantic and behavioral relations, we fuse the two kinds of graphs together. We propose two hybrid methods. One is unsupervised linear combination; the other is supervised machine learning combination to learn importance of the two relations. Notice that, parallel computing can be applied to compute the two relations. Therefore, we do not consider efficiency problems in this paper. 1. Linear Combination of Multiple Graphs
We apply a linear combinatio n between the semantic and b ehavioral relations via two graphs as follows, where  X  is a factor of influence of the behavioral graph.

The list of recommendation is ranked by their relation scores R lc ( q j | q i ) .Markthis method as LC-MG (Linear Combination of Multiple Graphs). 2. Machine Learning Combination of Multiple Graph
In this method, we treat query suggestion as a classification task. Positive exam-ples are pairs of relevant queries. We extr act six relation scores between two queries p tion models to predict a related query. Finally the list of recommendation is ranked by their prediction scores. Notice that the obj ective function is according to the selected machine learning algorithm. Mark this me thod as MLC-MG (Machine Learning Com-bination of Multiple Graphs). In the following experiments we compare our proposed models with other methods on the task of query suggestion. In the rest of this section, we introduce the data collection, the evaluation metrics and the results.
 5.1 Data Collection The click dataset that we study is extracted from the query log of AOL search engine[18] over 3 months (from March to May 2006). Each record of the click contains the infor-mation: UserID, Query, Time, Rank and ClickURL. To do research on user behavior, we separate the raw data by sessions. In each session, queries are submitted by a unique user, and any two sessions should be more than 30 minutes intervals[19]. As a result, the dataset exists many sessions containing only one click. Since these records have little help to understand users X  behavior for query reform ulation, we clean the data by removing the sessions that contain less than 2 clicks. Then we combine the near-duplicated queries which have the same terms without the stopwords and punctuation marks (for example,  X  X oogle.com X  and  X  X oogle X  will be combined as the same query). After cleaning, we get totally 946,268 sessions (37.9% of all). Averagely, we collected 315,423 sessions, 1,336,571 queries, 109,293 users per month, and 4.26 queries for each session, see details in Table 1.

Then our collection is divided into two sets, a history set containing the first two months X  log and a current set containing the third month X  X  log. The history set is used to construct semantic and behavioral graphs , and the current set is used to generate training and testing queries. 5.2 Evaluation Metrics We collect 10 training queries and 1000 co rresponding queries for each query. Finally we get 10000 pairs of queries. We randomly select 200 testing queries in which 100 test queries are long tail queries, and the other 100 are high frequency ones. We manually evaluate the relevance by 3 levels as follows. No relation: have no relation with the source query; Weak relation: have weak relation or similar with the source query; Close relation: have close relation or the same as the source query.

Each method can suggest 10 related queries at most for each query. And each sug-gestion is estimated more than 3 persons.

In our experiments, we report the precision from P @1 to P @10, mean average pre-cision ( MAP ), the NDCG @10 and accuracy. The results are compared to the CF-IQF model by the raw click graph. 5.3 Query Similarity Analysis In this section, we discuss proposed models (LC-MG and MLC-MG) using combination of semantic and behavioral graphs. Then we make comparisons with the baseline model CF-IQF. The average results on 200 test queries are shown in Table 2.
As shown in Table 2, our proposed methods considering both semantic relations and user behavioral relations all boost the baseline method. The MLC-MG using machine learning algorithms get the best predictions especially on MAP and NDCG @10, in-creased by 14.16% and 22.38% respectively. And LC-MG using the simple linear com-bination improves on P @1 and P @10, increased by 8.61% and 30.79% respectively. Figure 3 shows performance of the three me thods on precision at different position from 1 to 10. As is shown, the LC-MG gains less precision from P @2 to P @7 than MLC-MG. It makes a good explanation that why MLC-MG has better performance at MAP and NDCG . In addition, the hybrid methods we proposed make a great improve-ment in query suggestion; more than 46.5% of queries are suggested with proper queries while it doesn X  X  make any recommendation in the baseline model.

We selectively show the top-5 suggestions ranked by the CF-IQF model, MLC-MG model and the Yahoo system in Table 3. In general, all the three models are partially similar. Obviously, Yahoo system mainly suggests similar queries with partial terms the same as the source query, while our model can find multiple intents for queries, for example,  X  X a X  contains two mainly inten ts:1)  X  X light X  such as  X  X a.com X ,  X  X merican airlines X  and  X  X ravel map X ; 2) X  X rganiza tion X  such as  X  X a online X  and  X  X lcoholic anony-mous virginia X . Since we consider semantic relations as well as user behaviors, there are three advantages compared with the traditional CF-IQF model. First, we overcome the sparseness of click-through data by semantic relations. A long tail query  X  X esh motor-cycle pants X  shares no similar clicks with other queries in the log. So the CF-IQF model is not able to make any recommendation, while the MLC-MG model makes some ef-fective suggestions. Second, queries that have similar terms with the source query will take precedence to be suggested. For exampl e,  X  X a online X  for  X  X a X  and  X  X ahoo travel X  for  X  X ravel X . Third, we still maintain user behavioral relation t hrough global query-URL and local user-query and query-query bipartite graphs. Hence, queries that have no semantic relation but have strongly beh avioral relation will still be recommended. Related suggestions are generated by MLC-MG such as  X  X lcoholic anonymous vir-ginia X  ( X  X a virgina X  for short) for  X  X a X ,  X  X rb itz X  (a travel website) for  X  X ravel X  and so on. Therefore, query suggestion benefits from considering both semantic relations and user behavioral relations, and the combination also has advantages in query represen-tation, or other NLP and IR tasks. Since parallel computing can be applied to compute the different relations, we do not consider efficiency problems in this paper. 5.4 Parameters Tuning In this section, we will introduce details in parameter tuning in experiments. To find out the best combination of LC-MG, we tune parameters (  X  ,  X  and  X  from the behavioral relation in Formula 6; a , b and c from the semantic relation in Formula 4) with values  X  :  X  :  X  = 10 k :10 k :10 k , k = 0 .. 2when  X  = 0 . 5. As a result, we find out that when  X  :  X  :  X  = 100 : 1 : 100, a : b : c = 1 : 100 : 1, the LC-MG method gets best average performance on 10 training queries. It represents that 3 factors play leading roles: global clicked URLs and local reformulated queries from use r behavioral relations, and phrases from semantic relations.

With the purpose of finding the best machine learning algorithm for the MLC-MG method, we make use of Weka Toolkit[20]. It is a collection of machine learning algo-rithms for data mining tasks. We collect 10000 pairs of queries for training. Then, we also select 10 popular learning and classification algorithms to train the models, covering rule-based, tree-based, and meta-based methods, processing single classifier and integrated classifiers, as Table 4 shows. Tree-based l earning approaches have better accuracy than others among the single classifiers. The Random Forest gets the highest performance in those single classifiers. In general, the integrated classifiers gain better results than the single classifiers. Of all, the bagging method using random forest as classifiers achieves the highest accuracy. Thus, we select bagging as the fina l learning method. This paper studies the problem of query suggestion using both semantic relations and user behavioral relations in a query log. We propose to use multiple bipartite graphs to mine the relations: semantic relations are mined from keywords, phrases and entities to query bipartite graphs; user behavioral relations are mined from global query-URL bipartite graphs and local user-query, query-query bipartite graphs. In addition, we de-sign two combination approaches, named LC-MG, MLC-MG to seamlessly associate the multiple relations. The experimental results on a real log data demonstrate that the proposed approach outperforms the baseline algorithms with a large margin. Acknowledgments. This research is supported by the National Natural Science Foun-dation of China (No. 61105049).

