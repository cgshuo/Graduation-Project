 The wikileaks documents or the economic crises in Ireland and Por-tugal are some of the controversial topics being played on the news everyday. Each of these topics has many different aspects, and there is no absolute, simple truth in answering questions such as: should the EU guarantee the financial stability of each member country, or should the countries themselves be solely responsible? To under-stand the landscape of opinions, it would be helpful to know which politician or other stakeholder takes which position -support or opposition -on these aspects of controversial topics. In this paper, we describe our system, named OpinioNetIt (pronounced similar to  X  X pinionated X ), which aims to automatically derive a map of the opinions-people network from news and other Web documents.
We build this network as follows. First, we make use of a small number of generic seeds to identify controversial phrases from text. These phrases are then clustered and organized into a hierarchy of topics. Second, opinion holders are identified for each topic and their opinions (either supporting or opposing the topic) are ex-tracted. Third, the known topics and people are used to construct a lexicon phrases indicating support or opposition. Finally, the lex-icon is uses to identify more opinion holders, opinions and top-ics. Our system currently consists of approximately 30000 person-opinion-topic triples. Our evaluation shows that OpinioNetIt has high accuracy.
 H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing X  Linguistic Processing Algorithms, Experimentation
Controversial political topics are intensively debated in digital media, with opinions expressed in a variety of online fora such as newspaper articles, blogs, comments by readers, etc. Some recent, politically hot topics include the economic crisis in the EU, the wik-ileaks documents, the NATO military action in Libya, and Iran X  X  nuclear program. Despite the proliferation of all this information (perhaps, because of it), it is difficult to make sense of exactly what the issues are and who is saying what about a given topic. In or-der to navigate this complicated landscape of issues and opinions, it would be helpful if there were an  X  X pinion-base X  that organized controversial topics according to their various facets and stored in-formation about who expressed an opinion on one or more topics and supported or opposed a certain direction.

This envisioned network goes beyond state-of-the-art sentiment mining in several ways. First, political controversies are much more complex and opinions are often expressed in subtle forms, which makes determining pro/con polarities much more difficult than with product reviews for cameras, movies, etc. -the typical objects in prior work on opinion mining [5, 3]. Second, most prior research focused on classifying individual sentences or reviews into pro/con categories or on aggregating (summarizing) opinions over a large number of observations (e.g., many different customers X  re-views of some product). In contrast, our goal is to connect an opin-ion to an individual person (typically a politician) who expressed this position (multiple times, but often in very different wordings). Third, instead of merely finding a few or the most interesting pairs of opinion holders and topics, we aim at a systematic network of opinion holders and pro/con statements for a wide variety of fine-grained controversial topics. To the best of our knowledge, no prior work has addressed political opinion analysis in a similarly com-prehensive manner.

Facet Canonical name a military strike by America or Israel on Iran
Ahmadinejad X  X  economic and foreign policies the peaceful nuclear program of the Islamic Republic a military strike on Iran Military action against Iran put sanctions on Iran Sanctions against Iran
In this paper, we present our system, called OpinioNetIt (pro-nounced similar to "opinionated"), which aims at building such an opinion-base for controversial topics by extracting and organizing information from online sources on the Web. For example, the first column of Table 1 shows some of the facets extracted by our sys-tem regarding the Iran Nuclear Program. The outcome of analyzing these inputs should be a crisp set of structured records of the form: person (opinion holder), polarity (support/oppose), and topic facet (fine-grained controversial topic). Table 2 shows examples of peo-ple X  X  opinions about various topic facets of the controversy. For example,  X  Angela Merkel  X   X  support  X   X  Sanctions against Iran  X  could be a result in canonicalized form. This desired output involves ag-gregating statements, but only for the same pair of opinion holder and topic facet. The overall set of such records forms the Opin-ioNetIt network.

The challenge in building this network lies in the fact that the input is merely natural-language text, such as news articles, where it is difficult to spot phrases that denote individual politicians or controversial topics and map them into a canonical representation. For example, the opinions of Table 2, are extracted from text where the entity Vladimir Putin is mentioned several times with differ-ent wordings like  X  X r. Putin X ,  X  X he Russian President X ,  X  X resident Putin X  X tc. The same language diversity and ambiguity applies to the topic facets that we aim to detect and organize. Thus, the entire problem can be seen as an interleaved task of fact extraction, entity resolution, and opinion assessment.
 OpinioNetIt currently taps into 5 online news sources: Google News, Al-Jazeera, BBC, CNN, New York Times, as well as Wikipedia, and extracts 4-tuples of the following form: where the triple:  X  person  X   X  support/oppose  X   X  topic  X  is extracted from the textual context .

Our approach is to generate search-engine queries with site scope restricted to each of our 5 sources, and extract opinions from the snippets returned by the search engine (specifically, using Google). The extraction is carried out in the following stages (see Figure 1 for an overview). First we acquire a large number of facets by querying the Web with a few hand-crafted seed patterns. The re-sulting snippets are parsed and phrases corresponding facets are extracted. These facets are canonicalized and organized into a hier-archy. Second, the same snippets are parsed and the opinion hold-ers identified. These two steps give us a set of opinion triples as above. By querying the Web with (person,topic) pairs from the opinion triples and analyzing the resulting snippets, we build a lex-icon of support and oppose phrases. Finally, by using the lexicon of support/oppose phrases as new seeds, we close the loop: we go back to the first step and iteratively acquire more topics and opinion holders, thus building the final OpinioNetIt network.
The main contribution of this paper is the construction of an opinion-base, OpinioNetIt, which consists of controversial topics and their various facets and the people who hold opinions on it.
The rest of the paper is organized as follows: Sections 2 through 4 present the different stages of our approach: acquiring and orga-nizing controversial facets in Section 2, identifying opinion holders and building a lexicon of support/oppose phrases in Section 3. Sec-tion 4 presents our experimental evaluation and Section 5 presents some use cases. In Section 6, we outline related work, and we fi-nally conclude in Section 7.
Our first major goal is to acquire politically controversial top-ics. For example, both  X  X anctions against Iran X  as well as  X  X ilitary strikes on Iran X  are different facets of the debate on  X  X ran X  X  nu-clear program X  which in turn can be regarded as being a part of a larger debate on  X  X uclear power X . To acquire politically contro-versial topics, first we have to acquire facets which are politically controversial. Second, since each facet can be expressed in dif-ferent ways, we have to canonicalize these facets. That is,  X  X ili-tary strikes against Iran X  and  X  X ilitary action on Iran X  are different ways of expressing the same topic and need to have a canonical form. We describe our solutions to each of these problems in the following subsections.
One of our aims is to ensure that a large number of opinions are collected. That is, the recall has to be high. Moreover, we want to ensure that recent topics are not missed. Therefore, rather than utilize a fixed corpus such as Wikipedia, we decided to use Web search as an always-fresh information source.

To ensure that the facets returned were those for which people could have opinions, we used the patterns  X (s)he supports X  and  X (s)he opposes X . In order to keep the focus on political topics, we added the patterns  X  X e voted for X ,  X  X e voted against X  on the intu-ition that most  X  X oting X  typically takes place in political forums.
In order to ensure uniformity in referring to semantically equiv-alent facets (e.g.,  X  X ilitary action against Iran X  and  X  X ilitary strike on Iran X  are equivalent), we automatically derive canonical names for facets. Some of the raw facets we acquired in the context of Figure 2: Organizing facets in different levels of granularities. the recent Libyan crisis are shown in Figure 2 in blue and include a variety of aspects:  X  X .N. Mandate against Libya X ,  X  X se of force against civilians in Libya X , etc. These raw facets are then canon-icalized to  X 2011 military intervention in Libya X  and  X  X addaffi X  X  response to the 2011 Libyan Civil War X  respectively.

Political controversies are usually featured in a variety of Wikipedia articles. The titles of these pages serve as candidates for canonical names of raw facets. For example, the recent Libyan civil war is covered in  X  X o-fly zone over Libya X ,  X  X uman rights violation in the 2011 Libyan civil war X , etc. These titles are different facets of the same topic. Given a raw facet, we map it to a Wikipedia page by using the facet string as a query to a search engine with site re-striction on Wikipedia. For example, for the raw facet  X  X he need for UN sanctions against Iran X , the top-3 results from Wikipedia are pages with titles:  X  X anctions against Iran X ,  X  X ran and Libya Sanctions Act X ,  X  X S sanctions against Iran X . We choose the top-10 results as candidates for canonical facet names.

For the final choice, we compute the Jaccard similarity of the set of terms between the raw facet and each of the 10 candidates: The top-ranked candidate is picked as the canonical name for the facet. The canonicalization of facet names produced approximately 20,000 facet names.
 The canonical facets are then organized into a hierarchy using Wikipedia categories as the basis. Due to lack of space, we do not describe this step in this paper.
Extracting and organizing the list of facets is just the first step in building an opinion-base. We now need to identify opinion holders who have expressed an opinion on these facets. That is, if we have extracted the facet  X  X ilitary strike on Iran X , then we need to find all people who support or oppose this particular facet. The problem here lies in reliably identifying, in the facet X  X  surrounding text, the named entity who has expressed the opinion.

We again make use of the result snippets collected for extracting facets. We are often able to identify the opinion holder if the parser correctly identifies the subject of the sentence. For example, in the sentence  X  X himon Peres says he opposes military strikes on Iran X   X  X himon Peres X  is both the opinion holder as well as the subject of the sentence. A canonicalization step then follows. That is,  X  X r. Peres X  and  X  X himon Peres X  refer to the same person and should thus have a canonical name.

In case the parser is unable to identify the subject correctly, we simply pick the named entity occurring closest to the seed pattern.
Once an opinion holder is positively identified, a candidate opin-ion is formed by adding support or oppose (which is determined by the seed present in the sentence) and the facet. In addition, the snip-pet used to extract this opinion is added as a context to the opinion. Building the lexicon. We briefly describe our method for build-ing the lexicon of support and oppose phrases. Once the opinion triples are formed, we query the Web with a set of (person,topic) pairs. The resulting snippets are then gathered for analysis. We analyze the text patterns occurring in between the person and topic and make them candidates for the lexicon. If a pattern has sufficient support among all the snippets gathered, then that pattern is added to the lexicon.
We evaluated the accuracy of the extracted opinion triples and report on the accuracy of extraction in this section.
 Setup. A total of 17 seeds to extract approximately 30,000 opin-ions (Table 3 shows the breakup of opinions). Our sources were re-stricted to Al-Jazeera ( ALJ ), BBC, CNN, New York Times ( NY ), Wikipedia ( WP ), and Google News ( GN ). We restricted the num-ber of snippets collected to the first 2,000 search engine results for each seed.

We performed an experiments based on a random sample of 2000 opinion statements (topic-politician pairs) for which we present accuracy results. A total of 18 judges assessed these opinions as  X  X orrect X  or  X  X rong X .
 Results. Table 3 shows the precision values for each source as well as the overall precision. For the entire set of 2,000 samples, the micro-averaged precision was 72.4%. Given the difficulty of this extraction task, these results are quite satisfying.
As use cases for knowledge discovery and political analyses, we briefly discuss scenarios on the phenomena of so-called flip-flops and dissenters.
 Flip-Flops Detection. A flip-flop according to Wikipedia is a sud-den real or apparent change of policy or opinion by a public official. To detect flip-flops, we group opinions collected by our system by pairs of politicians and topics, both in canonicalized form. If a group contains both support and oppose opinions, we consider the politician to have flip-flopped. Table 4 shows some examples that we found in our collection (O denotes the opinion polarity: + for support,  X  for oppose).
 Dissenters Detection. Our goal here is to detect interesting devia-tions from correlated opinions on different topics. Often, once you know that a person supports topic A , it is clear that she or he also supports topic B , given the semantic connection between A and B . To identify such topic pairs, we compute correlation coefficients and select the most positively correlated pairs. Then we aim to find notable dissenters: people who deviate from this pattern and sup-port only one of A or B and oppose the other one. Table 5 shows some interesting examples that we found in our collection (domi-nant opinions: ++ , +  X  ,  X  + , or  X  X  X  with + denoting support and  X  denoting oppose).
Analyzing political opinions on controversial topics is inherently more difficult than standard sentiment mining (for products, movies, etc.) [5, 3], given the complexity of the topics and the subtleties in expressing opinions on them.

There is some work on classifying political texts with regard to political parties [4], most notably, democrats vs. republicans in the US, but this stays at the crude level of general attitude and does not address positions on specific controversies. Our own prior work [2] has been limited to pro/con classification of statements, disregarding the opinion holders.

For gathering statements that connect individual people with opin-ionated expressions, we make use of techniques for information extraction from text and Web sources. [6] gives overviews of state-of-the-art methods. Our approach builds specifically on the pattern-fact duality principle that goes back to [1] and allows us to boot-strap the acquisition process with very few seeds. We customize this general framework to collect opinionated cues rather than gen-eral relational patterns. For matching names in text sources against canonical entities, we leverage existing knowledge bases like DB-pedia, Freebase, or Yago. We specifically make use of the means relation that Yago [7] provides for individual entities and their lex-ical name variations. This information is in turn derived from an-chor texts and redirects of Wikipedia. All these are building blocks of our methodology, but each of these ingredients has an auxiliary role only.
In this paper, we described our system, named OpinioNetIt, an opinion-base of facets, opinion holders and their opinions. Our system acquired facts in the following 4 stages. First, an initial set of seed patterns were used to extract facets by issuing the seed pat-terns as Web queries and analyzing the result snippets. These facets were then canonicalized and hierarchically organized. Second, for each facet, an opinion holder was identified from the same snip-pets. Third, using a small set of facts, a lexicon of support/oppose phrases was constructed. Finally, new patterns from the lexicon were used to collect further facts. Our evaluation showed an over-all precision of 72%. [1] E. Agichtein and L. Gravano. Snowball: Extracting relations [2] R. Awadallah, M. Ramanath, and G. Weikum.
 [3] B. Liu. Sentiment analysis and subjectivity. In Handbook of [4] T. Mullen and R. Malouf. Taking sides: User classification for [5] B. Pang and L. Lee. Opinion mining and sentiment analysis. [6] S. Sarawagi. Information extraction. FnT in Databases , 1(3), [7] F. Suchanek, G. Kasneci, and G. Weikum. Yago: A Core of
