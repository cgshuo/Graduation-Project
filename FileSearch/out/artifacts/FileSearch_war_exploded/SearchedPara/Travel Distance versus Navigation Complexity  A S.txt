 Research on cognitive science indicates that humans often use different criteria for route selection. An alternative type of spatial proximity search on road networks recently has been proposed to find the easiest-to-reach neighboring ob-ject with the smallest navigation complexity. This paper presents an evaluation to compare the effectiveness of easiest-to-reach neighbor query against a classic nearest neighbor query in a real-world setting. Our user study demonstrates usability of the new spatial query type and suggests people may not always care about travel distance most. To provide flexibility to accommodate different requirements, we also show how to achieve tradeoff between navigation complexity and travel distance for advanced navigational assistance. Categories and Subject Descriptors: H.2.8 [Database Applications]: Spatial databases and GIS General Terms: Experimentation, Human Factors Keywords: Navigation complexity; easiest-to-reach
Modern navigation systems often rely on the criterion of shortest travel distance or time on a road network for path planning. However, many studies in spatial cognition [8, 2, 13, 14] have shown that people use more than distance or time as the optimization mechanism. Other criteria, such as the least number of turns and smallest chance of getting lost, can play an important role in the process of route selection. For a given pair of source and destination, traditionally Di-jkstra X  X  algorithm (or one of its variants) can be applied on a graph representation of the road network to find a shortest path. Node distances are used as travel costs (it is also pos-sible to substitute distance with time). However, an optimal solution can also be found according to some cost function that minimizes cognitive effort [1, 3, 10, 5].

Recently, a new concept of easiest-to-reach neighbor [12] has been proposed in view of the fact that when travellers Figure 1: Nearest neighbor o 1 a nd easiest-to-reach neighbor o 2 of a query location q in a network. choose from possible navigation destinations (multiple in-stances of a same facility type, such as different gas stations, are available nearby), often not the nearest one but the one which is easiest to get to is preferred, especially in an unfa-miliar or complex urban environment. An example of such a neighboring object selection problem is given in Figure 1. q represents the query location, with four objects o 1 , o and o 4 of the requested facility type in the area. Nearest neighbor query algorithms developed in spatial databases [9, 7, 4, 11] can be applied to find that o 1 has the shortest travel distance from q . However, since a smaller number of turning instructions reduce cognitive effort as well as possi-ble wayfinding errors, in this situation o 2 could be a better choice compared to o 1 .

In our previous work [12], a spatial query that finds the easiest-to-reach neighbor with the smallest navigation com-plexity on a road network is formulated for the first time. The key idea is to adopt a weighting scheme based on a cognitive model to reflect the amount of information needed to successfully negotiate different types of road intersections [1]. The cognitive model in [12] further incorporates spatial chunking and landmark information, which are both impor-tant in human spatial cognition. With a set of chunking rules [6] applied to route direction elements (turn left, turn right, and go straight, etc.), navigation complexity can be measured from a cognitive perspective.

From database research point of view, when the number of possible destinations is large, sequential scan (i.e., to mea-sure navigation complexity of each individual object and then compare them one-by-one) is usually inefficient and thus, indexing and pruning techniques are needed. There-fore, a computationally efficient query processing algorithm which is similar to Incremental Network Expansion (INE) for nearest neighbor query [9] is developed in [12]. Essen-tially, the algorithm is a single-source algorithm that per-forms node expansion starting from query location, and in-s pects objects in the order they are encountered. The most fundamental distinction of the algorithm from the conven-tional INE is that it works on a transformed graph that models turning instruction complexity. On the transformed graph, the nodes are dynamically labelled by several cogni-tive principles rather than geometric distance information, in order to evaluate navigation complexity. The proposed network expansion algorithm strictly expands the node with the smallest navigation complexity before any other node, so that it guarantees to visit the minimum number of nodes. Thus, it provides an optimal solution in terms of efficiency.
Nevertheless, the work of [12] focused on computational aspect of algorithm design, and its experiments only evalu-ated the efficiency of the query processing. In this paper, our work is on verifying the effectiveness of easiest-to-reach neighbor query, by comparing its usability with the tradi-tional nearest neighbor query on a real road system through a user study. In particular, we examine two factors, travel distance and navigation complexity, of the easiest-to-reach neighbor and the nearest neighbor, to understand how they influence human navigation preference (Section 2). In ad-dition, we show how to make the cost function used in the network expansion algorithm adapt to different user require-ments. In this way, a spatial proximity search with flexibility can be customized to balance between travel distance and navigation complexity on demand (Section 3).
In this section, we first present the following study to ver-ify the usability of easiest-to-reach neighbor query in a real-world setting. This is a fundamental task as if shown prefer-able, the classic understanding of nearest neighbor may re-quire a rethink. Assume the task is to look for a gas station near the University of Melbourne (Barry Street, where the authors X  previous department building was located), Google ing  X  X he University of Melbourne, Barry Street, Carlton, Victoria X  as the start address and  X  X as station X  as the end address). Figure 2 shows the actual nearest neighbor ( 1  X  , which is Burmah Fuels Australia on Victoria Street) and the easiest-to-reach neighbor ( 2  X  , which is BP on Elgin Street), responding Google Maps turning instructions.

We invited a group of 30 students and staff members (16 male and 14 female, aged 20  X  50) from the University of Queensland in Brisbane, Australia to participate in a user study (none of them had prior knowledge about the environ-ment near the University of Melbourne). They were given the above realistic scenario and we supplied them with a map and turning instructions in Figure 2. We asked all the partic-ipants of the study to answer the question  X  X hich gas station ( 1  X  or 2  X  ) is a preferred one to navigate to X  with a reason for their choice. None of the subjects had any background information about the research nor did they know about its intention. The outcome of the questionnaire shows that in total twenty-five participants chose 2  X  as the preferred des-tination to navigate to. This group of people noted that the complexity to gas station 1  X  and 2  X  can be measured as 51 and 42 respectively. route to 2  X  has fewer turns and is more straight. Three par-ticipants stated that they preferred 1  X  : two gave the reason that 1  X  has a shorter distance while another observed that arterial roads are used to go to 2  X  so that route could be busy. The two remaining participants responded that they had no preference. This shows in summary that although 2  X  has a slightly longer travel distance than 1  X  (1.4 km ver-sus 1.3 km), the route to 2  X  is preferred by a large majority of the participants (25/30=83.3%, with confidence interval 13.35% at confidence level 95%) as this route is considered to be easier to follow.

We further run a simulation with a network dataset of 39800 nodes representing roads in and around Melbourne city area (objects representing facility instances are synthet-ically generated and distributed uniformly over the network with 5% density). For each of 50 random query locations, we compare the values of travel distance and navigation complexity of the easiest-to-reach neighbor with the nearest neighbor. The results of this simulation evaluation reveal that on average, network distance to travel to an easiest-to-reach neighbor has an increase of 16.2% compared to that of a nearest neighbor, but at the same time, navigation com-plexity is only 42.3% compared to that of the nearest neigh-bor. Conversely, network distance to travel to a nearest neighbor is 86.1% compared to that of the easiest-to-reach neighbor, but navigation complexity is 2.36 times.
We can see that, in return for slightly longer travel dis-tances, easiest-to-reach neighbors offer considerable advan-tages over nearest neighbors in terms of their ease of naviga-tion. This is particularly important for travellers unfamiliar with a foreign city (the directions to get to easiest-to-reach neighbors will be easier to understand, to remember and to follow). While for short trips with few segments and turns the exercise may be simple, but as a journey increases in navigation complexity, it could become more difficult for travellers to successfully reach a destination. Therefore, the new spatial query type of finding easiest-to-reach neighbor could be used as an alternative to the existing nearest neigh-bor query, to benefit users by reporting best choices in terms of navigation complexity.
Given our observation with the study above, customiza-tion to user preferences is a desirable feature of navigation services. In addition, the algorithm to process easiest-to-reach neighbor query introduced in [12] tends to be reluctant to choose a turn in the network expansion process (since its cost is always larger than the cost of going straight), so in some extreme cases it could eventually lead to choose a route of considerable length. When there are multiple choices for the destination available, travellers being guided in unfamil-iar geographic environments may have certain requirements in mind, such as achieving some tradeoff between nearest and easiest-to-reach neighbors. With the original network expansion algorithm in [12] as a basis, in this section we show an extension to support a more sophisticated and re-alistic behavior.

For destination choice, if a traveller would like to achieve some balance between travel distance and navigation com-plexity, we can introduce a parameter  X  to assign the cost used in the network expansion process of graph representa-smaller number of turning instructions. Figure 3: Travel distance and navigation complexity. t ion. The hybrid of these two criteria can be reflected by a modification of the cost function as where Cost distance is derived from the cost function regard-ing network distance of traversing the edges, Cost instruction is derived from the cost function modelling instruction com-plexity of turning onto the edges, and  X   X  [0 , 1] is a heuris-graph representation of the network, a node shared by a pair of adjacent edges can be labelled with some new cost value augmented with information about both travel distance and navigation complexity, and these costs can be computed on-the-fly from geometry and topology.

To study the effect of  X  , an example of balancing between travel distance and navigation complexity is given in Fig-ure 3. It shows that for one of the query locations in the Melbourne road network, the travel distance and navigation complexity of the easiest-to-reach neighbor are 885 and 12 respectively, while those of the nearest neighbor are 648 and 28. When the parameter  X   X  [0 . 11 , 1], the network expan-sion algorithm returns the nearest neighbor as the answer. When  X   X  [0 , 0 . 06], the network expansion algorithm re-turns the easiest-to-reach neighbor as the answer. If we set  X   X  (0 . 06 , 0 . 11), another neighboring object with a moderate travel distance (691) and a moderate navigation complexity (15) will be returned as the answer.

With different choices of  X  used, different objects could be returned. Particularly, by comparing the result pairs of travel distance and navigation complexity [648,28] and [691,15] of the different returned answers, we can see that a marginal increase of travel distance sometimes leads to a sig-nificant reduction of navigation complexity. This example also suggests that the pair [691,15] provides a compromise in terms of travel distance versus navigation complexity. In summary, this example motivates why it is highly beneficial to introduce a parameter  X  . A simple slider can be used in an interface to allow the user to choose between travel distance versus navigation complexity.
Navigation services for people in unfamiliar geographic en-vironments should be able to choose destinations with route directions which are easy to follow, even if their travel dis-tances are not the shortest ones. The main contribution 2 I n order to produce dimensional similitude,  X  should be calibrated for road networks to scale Cost distance and Cost instruction to be in the same units. of this work is a user study to validate the effectiveness of easiest-to-reach neighbor query so that the classic under-standing on nearest neighbors may be flawed, and our ex-tension of the query processing algorithm with the capacity of being tailored to user preferences is given. The influence of the complexity of alternative paths on human route se-lection and navigation behavior could be studied in future work.
