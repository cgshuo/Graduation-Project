 1. Introduction
If faults occurred in a process plant, they will affect the produc-tivity, quality, safety and performance of the control systems of the plant. Therefore, early detection of possible faults would minimize the downtime, increase the safety of plant operations, prevent damages to the equipment, minimize the operation cost and also the maintenance. Fault detection and isolation (FDI) for dynamic control systems of nonlinear plants has become an important and challenging task in many engineering applications and continues to be an active area of research in the control environment ( Hwang et al., 2010 ).

In process engineering, most plants have nonlinear dynamics in nature ( Basseville, 1988 ) and may also be multivariable and complex, the observer-based FDI methods ( Frank, 1990 ;
Isermann, 1984 ; Patton, 1994 ) would therefore be very dif to apply to these systems. Researchers have been tuned to some other alternatives and one of which is the arti fi cial intelligent method. For example, Frank and Koppen-Seliger (1997) studied fuzzy logic and neural network applications for fault diagnosis.
They used a dependent neural network for residual generation and fuzzy logic for residual evaluation. Sime X n et al. (2010) used classical multivariable statistical techniques for FDI of several manufacturing and process plants. Ng and Srinivasan (2010) used the multi-agent method in which principle component analysis (PCA), self-organizing map (SOP) and Bayesian network were combined to do FDI for the Tennessee Eastman process and also distillation unit to classify the temperature change and distur-bance during start-up. Bayesian network was also used as a classi fi er to do fault diagnosis in the Tennessee Eastman process by Verron et al. (2010) , where a fault database was constructed. Three kinds of fault are analyzed in terms of unit step and random signal excitation. Subrahmanya and Shin (2013) used recurrent neural network (RNN) to distinguish faults occurring in actuator, component and sensors. In recent years, Polycarpou and Helmicki (1995) proposed a framework to estimate faults occurring in the system dynamics, in which an estimator was added to the state space model. The error between the model and the plant outputs was used to update the estimator that is used to estimate the fault. The RBF network has been used as the estimator in their work and the Levenberg  X  Marquart algorithm by Chong and Zak (2013) as an updating algorithm. This method has been widely recommended for further research, but its drawback is that the dif fi developing an accurate nonlinear state space model for the plant makes it dif fi cult for real applications.

Patton et al. (1994) proposed an approach for detecting and isolating faults in a nonlinear dynamic process using neural net-works. Firstly, a multi-layer perceptron network was trained to predict the future system states, then the residual was generated using the differences between the actual and predicted states.
Secondly, another neural network was used as a classi fi er to isolate faults from these state prediction errors. However, this method used the neural network model in its so-called dependent mode (see de fi nition given in Narendra and Parthasarathy (1990) ), i.e. the past state of the process was used as a part of the network input. In this way, the network model was trained using the nominal process data for state prediction. Then, when a fault occurred, the fault would cause the process state to be contami-nated (the value was affected). This contaminated process state was then fed into the network model, the predicted state would tend to the real process state, and consequently the residual would tend to zero (insensitive to the fault) when the model mismatch and noise effects were omitted. In addition to the above analysis, this point was also af fi rmed by Yu et al. (1999) , where the simulation data clearly disclosed that the neural network model of the dependent mode generated residual that was insensitive to the fault. Besides, the method described by Patton et al. (1994) was not practical for most nonlinear systems as some of the states may not be measurable, while the design of nonlinear state observer is very dif fi cult.

The insensitive residual generated by static network of depen-dent mode can be avoided where the process sensor faults should be treated was proposed by Yu et al. (1999) . In their work, a semi-independent MLP network was used with the predicted output by the network model used to replace process output in the network input. Then, the model predicted output was reset by the real process output on every period of time to reduce the growing model prediction error. This was called semi-independent mode.
The residual generated in this way was sensitive to the fault but the prediction error is bigger and the residual is not smooth, and a fi ler had to be used to smoothen the residual. A higher threshold had to be used due to the increased model prediction error and therefore some faults with small amplitude would then not be detected.

In the fi eld of PEMFC, most approaches for fault detection used a model-based approach which involved the comparison of the observed behavior of the process to a reference model. In the aspect of hydrogen safety and ef fi ciency for PEMFC, Ingimundarson et al. (2008) and Lebbal and Lecoeuche (2009) have developed a computer simulation tool which can be used to detect and monitor faults in the hydrogen stations. Xue et al. (2006) proposed a model-based condi-tion monitoring scheme that employs the Hotelling T 2 statistical analysis for fault detection of PEMFC. This model-based robust condition monitoring scheme can de al with the operating condition variation, various uncertainty in a fuel cell system and measurement noise.

FDI for the PEMFC systems is challenging due to its nonlinear nature. Thus, a method needs to be developed which can tackle the above problems in a simple and effective way. This is the motive of this paper. The novelty of this work lies in using the independent RBF network to model the fuel cell stacks, and generating the residual. By acquiring process data under different disturbances and with or without faults, the network model can be trained to make the residual of FDI monitoring system more sensitive to the faults and more robust to the disturbance. To enhance the model accuracy while reducing the false alarm rate, the recursive orthogonal least squares (ROLS) algorithm is employed to train the RBF model. For fault isolation, another RBF network is used to classify the different features of different faults on the residual vector. By setting appropriate number of hidden layer nodes, the clearness of the isolation can be maximized. The
Michigan benchmark model is used as the benchmark to evaluate the proposed method with and without faults occurring in the process. The Michigan model has been modi fi ed to introduce one component fault, one actuator fault and three sensor faults.
Simulation results approved the effectiveness of the method for detection and isolation of the faults with the fault size as small as 7 10% of their nominal values. The rest of paper is arranged as follows: Section 2 presents the dynamics of the PEMFC systems.
The RBF neural network model is presented in Section 3 . These are followed by fault detection in Section 4 and fault isolation in
Section 5 . Finally, conclusions are discussed in Section 6 . 2. Proton exchange membrane fuel cell dynamics and faults and a positive electrode (cathode) separated by an electrolyte. Fuel cells convert the chemical energy of the hydrogen fuel (on the anode side) into electric energy while through a chemical reaction with oxygen (on the cathode side) produce water and heat as end product.
Hydrogen atoms separate into protons and electrons once the chemical reaction happens. The electrons go through the load which contains a fl ow of electricity while the protons migrate through the electrolyte to the cathode side, where they reunite with oxygen to produce water and heat as shown in Fig. 1 . To maintain the desired air supply, the air supply needs to replenish the air to maintain the oxygen partial pressure. The air supply system consists of an air compressor, an electric motor and pipes or manifolds between the components. The compressor not only achieves desired air fl at the membranes, and thus the overall ef fi ciency and power density ( Pukrushpan et al., 2004a ). 2.1. Compressor model depend on the compressor rotational speed  X  cp . A lumped rota-tional model is used to represent the dynamic behavior of the compressor ( Pukrushpan et al., 2004a ): where  X  cm ( v cm ,  X  cp ) is the compressor motor (CM) torque and the load torque. The compressor motor torque is calculated using a static motor equation: where k t , R cm and k v are motor constants and  X  cm is the motor mechanical ef fi ciency. The torque required to drive the compressor is calculated using the thermodynamic equation. where  X  is the ratio of the speci fi c heats of air (  X  1.4), c constant pressure speci fi c heat capacity of air (  X  1004 J kg  X  cp is the motor compressor ef fi ciency, p sm is the pressure inside the supply manifold and p atm and T atm are the atmospheric pressure and temperature, respectively. 2.2. Supply manifold model
The cathode supply manifold (sm) includes pipe and stack manifold volumes between the compressor and the fuel cells as shown in Fig. 2 . The supply manifold pressure, p sm , is governed by mass continuity and energy conservation equations ( Pukrushpan et al., 2004b ): dm  X  t  X  dt dp  X  t  X  dt where R is the universal gas constant,  X  is the ratio of a speci  X  , V sm is the manifold volume and T sm  X  p sm V sm M atm a the supply manifold gas temperature. 3. Radial basis function neural network modeling 3.1. RBF network structure The nonlinear system can be modeled by the multivariable
NARX model of the following form, y  X  k
 X  X  f  X  y  X  k 1  X  ;  X  ; y  X  k n y  X  ; u  X  k 1 d  X  ;  X  ; u  X  where u A  X  m ; y ; e A  X  p are the process input, output and noise vectors respectively with m and p being the number of inputs and outputs, n y and n u are the maximum lags in the outputs and inputs respectively, d is a dead-time vector representing delayed time to tion. Suppose that the RBF network model precisely model the system; the model can then be represented by ^ y  X  k
 X  X  f  X  ^ y  X  k 1  X  ;  X  ; ^ y  X  k n y  X  ; u  X  k 1 d  X  ;  X  ;
A RBF neural network is a feed-forward network consisting of three layers which are the input layer, hidden layer and output layer. Each hidden node contains a center c j , which is a cluster center on the input vector space, and calculates the euclidean distance between the center and the network input vector x de fi ned by || x ( t ) c j ( t ) || with x given as x  X  k
 X  X  X  y  X  k 1  X  ;  X  ; y  X  k n y  X  ; u  X  k 1 d  X  ;  X  ; u  X  k n then the output of the hidden layer node is a nonlinear function of the euclidean distance. In this work the Gaussian function is chosen as the nonlinear function.  X   X  exp vector respectively. The network output is then sum of the weighted output of all hidden nodes and bias. The input  X  mapping for the RBF networks ( Yu et al., 1999 ) can then be described as ^ y  X   X  T W  X  10  X  weight matrix and hidden layer output vector respectively. The RBF network is chosen to model the fuel cell stack because it is capable of approximating any continuous function to a pre-de precision provided it has enough hidden layer nodes ( Yu et al., 1999 ). Also, the training process for the RBF network model is much faster compared with the back-propagation training because it uses the least squares algorithm. 3.2. The training algorithm
Training an RBF network is optimizing parameters including the hidden layer centers and the widths in the Gaussian functions and network weights, to achieve minimum model prediction error. In this work, the network centers are selected using the K -means clustering algorithm, so that the sum squared distance of each input data from the center of the data group, to which it belongs, is minimized. The width of the Gaussian functions are chosen using the  X  -nearest center algorithm ( Yu et al., 1999 ), to achieve proper sampling of any input data by a few near centers. The weights between the hidden layer and the output are trained using the ROLS as it is a numerically robust algorithm. The detailed descrip-tion of the three algorithms for the RBF network training can be found in Wang et al. (2006) . 3.2.1. Recursive K-means algorithm
The s are set by the K -means clustering method whose objective is to minimize the sum squared distances from each input data to its closest center so that the data are adequately covered by the activation functions  X  j ( t ). The K -means clustering method proceeds as follows: (a) Randomly choose some input data to be the initial centers. The (b) Let k ( x ) denote the index of the best-matching center for the (c) Update the centers of the activation functions by using the (d) Increment t by 1 and go back to step 2. Continue the algorithm 3.2.2.  X  -Nearest neighbours method The widths are computed by the  X  -nearest neighbors method. The excitation of each node should overlap with other nodes (usually closest) so that a smooth interpolation surface between nodes is obtained. In this method, the widths for each hidden node are set as the average distance from the center to the  X  -nearest s as given by s  X  1
 X  c is the  X  -nearest neighbor of c i . For the non-linear function, the value of  X  depends on the type of problem encountered. 3.2.3. The recursive orthogonal least squares algorithm
Training of the RBF network weights with the ROLS algorithm is as follows. Considering (10) at sample interval k for a set of N samples of input  X  output training data from k N  X  1to k , in other words a window going back in time N samples, we have
Y  X  k  X  X  ^ Y  X  k  X  X  E  X  k  X  X   X   X  k  X  W  X  k  X  X  E  X  k  X  X  14
 X  where Y A  X  N p is the desired output matrix, ^ Y A  X  N p neural network output matrix,  X  A  X  N n h is the hidden layer output matrix, and E A  X  N p is the error matrix. Eq. (14) can be solved for W  X  k  X  using the recursive MIMO least squares algorithm to minimize the following time-varying cost function,
J  X  k
 X  X 
 X  where the F -norm of a matrix is de fi ned as J A J 2 F  X   X  o 1 is used to introduce exponential forgetting to the past data. It has been shown in Gomm and Yu (2000) that minimizing (15) is equivalent to minimizing the following cost function,
J  X  k
 X  X 
 X  where R is an n h n h upper triangular matrix, and by an orthogonal decomposition as follows, p 2 6 4
 X  where Q is an orthogonal matrix. Combining (15 ) and ( 16 ) and considering that the F -norm is preserved by orthogonal transfor-mation, the following equivalent cost function is obtained,
J  X  k
 X  X 
 X  which allows the optimal solution of W  X  k  X  to be solved straight-forwardly from
R  X  k  X  W  X  k  X  X  and leaves the residual at sample interval k as J  X  T  X  k is an upper triangular matrix, W  X  k  X  can be easily solved from (19) by backward substitution.
 applying given rotations to an augmented matrix to obtain the following transformation by Gomm and Yu (2000) : "# for on-line training, calculate  X   X  k  X  at each sampling period to update the augmented matrix and compute the given rotations to realize the transformation in (20) . Then solve W  X  k  X  in (19) with
R  X  k  X  and sample instant for prediction. Also,  X  o 1 is needed to follow time-varying dynamics at the current time. For use in off-line mode, the given rotations can be computed to realize the transformation in (20) continuously to the end of training, then W is solved from (19) . In this case,  X  is set to 1. Initial values for R both cases can be assigned as R  X  0  X  X   X  I and small positive number and I is a unity matrix with appropriate dimension. 3.3. Network modeling modes using neural networks, one is the dependent mode and the other is the independent mode as de fi ned by Narendra and
Parthasarathy (1990) . The structures of the two modes are dis-played in Fig. 3 where Fig. 3 (a) shows the block diagram of dependent mode (the process output y  X  k  X  in the input vector x of the network in (7) ) while in Fig. 3 (b) shows the block diagram of independent mode (the model output ^ y  X  k  X  in the input vector x of the network in (8) ). From Fig. 3 (a), it can be seen that in the dependant mode, the output of the plant is used as a part of network inputs. Therefore, the neural network model will be dependent on the plant and cannot run independently. When the dependent model runs alone, after predicting for one-step-ahead the plant output would not be available. Therefore, this mode of the model cannot do multi-step-ahead prediction and cannot run independently. The dependent mode is suitable to be trained for accurate one-step-ahead prediction, but one-step-ahead prediction is very limited for applications.
 process output, as part of the model input in the independent mode. Since the independent model can run independently of the process, it can be used to do multi-step-ahead prediction, and can also be used as a simulation model. The above features have been experienced by the authors in the past research ( Yu et al., 1999 ).
The model of the dependent mode can predict the process output for one-step-ahead only, while the independent model can predict for in fi nity steps as long as the input is available. When the two different modes of model are used for fault detection, the difference is signi fi cant. When a fault occurs to the plant and affects the plant output, the dependent model output will also be affected through the plant output being used as the model input; whilst the independent model will not be affected by the occurred fault as the model is independent from the plant. This can be clearly seen from the plant output and model prediction shown in Fig. 4 (a) and (b).

Fig. 4 shows the results of the RBF network when faults occurred in the plant for stack voltage output. Here, a fault has been introduced at k  X  3000  X  3200. The same signal inputs have been used for both modes to compare the difference between these two. Fig. 4 (a) shows the result of dependent mode when fault occurred at that particular times. As can be seen, when a fault occurs in the process, the process output is affected, at the same time due to the usage of the process out as the model input, the model prediction is also affected. Consequently, the error between the process and model output as the residual will not be sensitive to the occurrence of the fault. This is displayed in Fig. 4 (a) with a fault occurring during sample instant k  X  3000  X  3200. The same output with the prediction by an independent model is displayed in Fig. 4 (b). From the result, it is shown that when there is a fault in the plant, it will not affect the prediction of the independent network. Therefore, the modeling error of the independent model a fault occurred in the plant. 3.4. The independent RBF network model
The structure of an independent RBF model under an open-loop condition for PEMFC dynamic systems proposed in this work can be referred to Fig. 5 . Here, two inputs and three outputs of the process with their delayed values form the 13 inputs of the RBF model, while the three process outputs are the model outputs ( Kamal and Yu, 2011 ). Such chosing of the input output orders are according to the training experience and by checking the process dynamics. The model prediction errors are generated for residual generation later.
 3.5. Data collection and scaling
At initial stage, a set of random amplitude signals (RAS) have been generated and used as the system inputs, the stack current
SC and the compressor motor voltage CV. These signals ranging from 100 to 300 A for the stack current and from 100 to 235 V for the compressor motor voltage. Six thousand samples have been acquired when the sample period was set as 0.1 s considering the time constant of the main dynamics. Fig. 6 shows the example of
RAS excitation signals of compressor voltage used as input in this work. The signals are generated randomly to cover the whole range of frequencies and entire operating space of amplitude in the PEMFC system. To ensure equal attention to all the variables, the input and output signals are normalized in the range of zero to one using the following linear normalization. number of hidden layer nodes. Finally using 22 hidden layer nodes was found to give minimal model prediction error in the measure-ment index of mean square error (MSE) de fi ned in the following equation. where y and ^ y are the PEMFC system output and the RBF model prediction respectively.

K -means clustering method, and width using the  X  -nearest dis-tance method. Then, the weights were trained using the RLS algorithm, where the input data to the RBF model was formed as shown in Fig. 5 . As the past model output, rather than the plant output, are used as part of the model input in the independent modeling mode, the BLS method cannot be used while the RLS algorithm was used in this work. After training, the model was validated using 200 samples that have not been used in the training. The model prediction error for the normalized test data was also measured with MSE and their values for net power are 0.0025, 0.0018 for  X  O 2 and 0.0029 for stack voltage . The simula-tion results of the fuel cell stack outputs and the RBF model predictions are shown in Fig. 7 for 300 data samples. These results show the actual and estimated outputs during the testing process when there is a fault occurring in the process. In this period of time only one fault, the third sensor fault, sensorSV occurred for k  X  3000  X  3200. In the lower fi gure an observable difference between plant stack voltage and the predicted stack voltage for the samples 3000  X  3200 but not for 3200  X  3300 can be seen.
It shows that the sensor fault directly in fl uences the performance of stack voltage. However, this fault does not affect the result of net power and  X  O 2 because this fault is from sensorSV faults.
It also observed that the modeling error signals are with sharp spikes caused by step change of load current disturbance and noise. These could be got rid of by applying low-pass fi ltering. 4. Fault detection 4.1. Simulating faults
The air fl ow and pressure are the key controlled components of a fuel cell stack for an ef fi cient and dynamic performance of the fuel cell. Fuel cell is in risk of oxygen starvation during high current demand and fast load changes. Oxygen starvation is de fi ned as the ratio of the partial pressure of reserving oxygen to that of used oxygen. It comes along with a drop in partial pressure of oxygen ( Pukrushpan et al., 2004a ). The oxygen ratio,  X  O 2 ,mustbekeptabove a minimum limitation for normal operation. In this study, areintroducedtoaknowntest-benchPEMFCbasedonthemodel developed by the Michigan University ( Kamal and Yu, 2011 ). First one is an actuator fault, which is simulated by superimposing a change of the compressor motor voltage measurement. The second is the air leak in the supply manifold which is a typical component which are simulated by  X  10% deviation superimposed to the net power,  X  O 2 and stack voltage output measurements. The PEMFC may occur during the normal operation of PEMFC systems as shown in Fig. 8 which shows the fi ve faults introduced to the system. 4.1.1. Actuator fault
Mostly centrifugal compressor used in fuel cells is susceptible to surge and choke that limit the ef fi ciency and performance of the compressor. The air fl ow must ensure that the partial pressure of oxygen does not fall below a critical level at the cathode. On the other hand, it must also minimize the parasitic losses of the air pressure. The compressor voltage will be changed if the compres-sor experiences surge and choke and affects the air fl ow in the supply manifold. The compressor motor performance is reduced by 7 10% of the total compressor motor voltage from the sample happens at the actuator part for sample1 and sample2 while for sampls3 at k  X  2000  X  2200. 4.1.2. Component fault
Air leakage in the supply manifold makes the pressure in the cathode decrease. Therefore, to collect the fuel cell stack data subjected to the air leak fault, Eq. (5) is modi fi ed to dp dt where  X  l is used to simulate the leakage from the air manifold, which is subtracted to increase the air out fl ow from the supply manifold. The air leakage is simulated by 7 10% change of the pressure inside the supply manifold. The fault occurs at the sample intervals, k  X  4000  X  4200 for sample1 and sample2 while for sam-ple3, k  X  1000  X  1200. Fig. 9 shows the simulink model where the component and actuator fault being injected to the fuel cell stack process to re fl ect that faults have occurred in the systems. 4.1.3. Sensor faults
Net power,  X  O 2 and stack voltage sensors are considered experiencing over-reading faults. The faulty sensor data used was the data from the collected data set, superimposed with a  X  10% change of the measured net power over the sample interval, k  X  1000  X  1200, a  X  10% change of the measured  X  O 2 over the sample intervals, k  X  2000  X  2200 and a  X  10% change of the measured stack voltage over the sample intervals, k  X  3000 for sample1 and sample2 while for sample3 as in Table 1 .
Table 1 summarizes the three samples used in this work. The purpose of doing the FDI under open-loop systems is to test the effectiveness of the RBF algorithm developed in this work before it can be implemented to the closed-loop systems. Table 1 , shows the fault sizes of each faults and the range of faults being introduced. For consistency, 200 data samples are used to indicate the faults of component, actuator of 7 10% and for three sensor faults with a fault size of  X  10% ( Fig. 10 ). 4.2. Fault detection The implementation of FDI is done in the MATLAB R2009a/ Simulink environment. In this work, a data set with 6000 samples is acquired from the plant when the fi ve faults are simulated to the plant. The modeling errors obtained from the difference of plant and the RBF networks containing noisy signals are fi ltered.
Therefore, to enhance the signal-to-noise ratio the fi ltered model-ing errors are squared. The three squared and fi ltered model prediction errors are displayed in Fig. 11 , with the simulated faults on the top of the fi gure for easy observation. In Fig. 11 it can be observed that these signals can be used for fault detection, but cannot be used for fault isolation. From observation, the simula-tion results of sample1, sample2 and sample3 show that there are more than one faults in the output signals.
 k  X  4000 and k  X  4200 for Fig. 11 (a), that the fi ltered squared modeling error signals caused by the component fault can be seen in the three outputs of the plant. There are faults occurring in the plant because the signals are over the threshold setting. Again, by referring to Fig. 11 (b), the fi ltered squared modeling error of contains three types of faults due to sensor O 2 , component and actuator faults. Therefore it is impossible to identify individual faults happening during the operation of the plant. From this point problem.

While Fig. 11 (c) shows if there are four faults that happened in the process. Similarly, all four faults can be detected after the threshold value setting. From observation based on Fig. 11 (a) we did not obtain the same pattern of amplitude in the same fault location due to the excitation signals which are randomly gener-ated. That is why the fault detection result in Fig. 11 is not the same. 4.3. Residual generation
The residual signal is generated by combining the three pre-diction errors, so that the sensitivity of the residual to each fault can be signi fi cantly enhanced, and consequently the false alarm rate would be reduced. The residual in this work is de fi Janik and Lobos (2006) . re  X  where e NP , e  X  O 2 and e SV are the fi ltered modeling error of net power,  X  O 2 and stack voltage, respectively. A threshold is set for to the modeling error for no fault condition and the noise level. The signal with faults is clearly been identi fi ed and is less in fl uenced by a noise signal.

Fig. 12 shows the residual signal produced in simulation of the data set with the 6000 samples where the fi ve faults were simulated for sample1 and sample2 while there are four faults for sample3. By setting a threshold, it can isolate the signals with no faults and with faults after the residual generator is applied. It is observed in Fig. 12 that all fi ve faults of 7 10% amplitude are clearly detected for all the three samples data sets. From Fig. 11 ,by applying Eq. (24) to all three data samples, shows that all faults in sample1 and sample2 are detectable. Also, by using the same equation, four faults of sample3 can also be detectable. This implies that the fault detection signal in the proposed method is sensitive to all simulated faults while is robust to the effects of plant dynamics and noise. 5. Fault isolation
The RBF network is well known for its powerful ability to classify components with different features from a mixed signal.
Fault isolation in this study is implemented by adding another RBF network as a classi fi er ( Kamal and Yu, 2012 ). The model prediction error vector obtained from the fault detection part is caused by the faults, and is a nonlinear function of the faults. As this vector is multi-dimension, three dimensions in this study, it will have different structures for different faults. The RBF classi feature to classify these faults. Based on this idea, the RBF classi is designed with three inputs to receive the three elements of the fi ltered and squared model prediction error vector, and fi ve out-puts with each being dedicated to one fault. The structure of the RBF classi fi er is shown in Fig. 13 , where e 2 NP , e 2 input signals. It was found in the experiments that the RBF classi fi er with 22 hidden layer nodes is most suitable for the classi fi cation task in this research.

This RBF classi fi er is a nonlinear static network. The network is trained with a set of data including 5 subsets. Each subset of data is collected when the system is subjected to one of the 5 simulated the following way: for the data subset with the fi rst fault occur-other outputs are  X  0  X  . For the data subset with the second fault occurrence, the target for the second output is  X  1  X  ,whilethetarget for the other outputs are  X  0  X  , and so on so forth, until the faults. In this study, 6000 samples of data were collected with the fi rst fault occurring during k  X  1001  X  1200, the second fault occur-ring during k  X  2000  X  2200, and so on. Then, the generated and squared model prediction error vector from the fault detection part was used as the input data of the RBF classi fi er. Correspond-ingly, the target matrix X 0 has6000rowsand5columns.The entries from the 1000th row to the 1200th row in the fi rst column columns 2  X  5 is done in the same way. This is shown as in Table 2 for sample1 example arrangement to do fault isolation.

The target matrix in Table 2 was used in training the RBF classi fi er. The s and widths of the network were chosen using the K -means clustering algorithm and the p -nearest center algorithm.
The weights were trained by using the RLS algorithm with the following data, m  X  0.99999, w (0)  X  1.0 10 6 U ( nh 3) , P (0) 1.0 10 8 I ( nh ) ; where I is an identity matrix and U is an ones matrix. The RBF networks model only used the three rows of the
PEMFC outputs matrix which contain the values of net power, and stack voltage. After training, a similar data set also with 6000 samples, with the same fi ve faults simulated, was collected for sample1 and sample2 while 6000 samples with four faults for sample3. These data were applied to the fault detection part and then to the isolation part with the trained RBF classi fi
The fi ltered squared modeling errors of three outputs will be used by the RBF classi fi er in order to do fault isolation. These fi ltered squared modeling errors are trained as stated in Table 2 to differentiate the signals of no fault and with fault. The whole process of fault isolation can be referred to in Fig. 14 where from the modeling errors, the signals are squared before the classi takes place. The RBF classi fi er will train the individual fault is fi ltered because the signal has a lot of disturbance in it. After the fi ltering process, a smoother signal is obtained and a threshold is set to indicate whether it is a false signal.
 sample1, sample2 and sample3. As can be seen in Fig. 15 , the RBF classi fi er will be trained with  X  1  X  if there is fault existing and there is no fault. From the fault isolation signals in Fig. 15 it is fault represented by it, while is insensitive to all the other four faults. In this way, all the fi ve considered faults have been clearly isolated. The RBF classi fi er successfully suppressed the correspond-ing output value for the no-fault-occurring period, while promoted the corresponding output value for the fault-occurring period. By comparing the curves in Fig. 11 , it is not dif fi cult to component fault caused a big spike in all the three model prediction errors in Fig. 11 , which make the isolation of this fault dif
When these signals are fed into the RBF classi fi er, only the fourth output (the corresponding output to the component fault) had a response to the component fault, while all the other four outputs did not have signi fi cant output values. Therefore, the component fault is clearly isolated from the others using this method. It is noticed in Fig. 15 that the fault isolation signals are very noisy and that would cause false alarm. Then, the RBF classi fi er outputs are fi the occurred fault and will not cause false alarm.

Therefore, the RBF classi fi er outputs are fi ltered for these three data samples and the fi ltered signals are displayed in Fig. 16 .Itis obvious that the fi ltered fault isolation signals are much smoother and the robustness of the signal to modeling errors, interactions between variables and noise is greatly enhanced. It is important to isolate the malfunctioning devices in the systems for easy trou-bleshooting and maintenance purposes. By doing this step, the device can easily be replaced and any appropriate action can be taken quickly and therefore it can save time and increase produc-samples used in this work. 6. Conclusions
This paper presents a model-based FDI for PEMFC dynamic systems. The RBF network model can predict process output precisely when it is used in the independent mode. Then, by classifying the different features of different faults on the model prediction error vector, these faults are clearly isolated with a much higher signal-to-noise ratio. For the simulated actuator, component and sensor faults to the benchmark PEMFC model, it is evident that these faults are detected and isolated when the system in a transient state and under varying load disturbance. It is shown that all these faults with the amplitude of only variable's nominal value can be clearly detected and isolated. Here, we considered the fault condition that single fault occurs at a time. But this result can be extended to the fault condition of multi-faults occurring simultaneously. The developed method has a big potential to be applied to real world fuel cell stacks. Also, the method is not limited to fuel cell systems, and can be applied to other multivariable nonlinear dynamic systems with some modi fi cations.
 References
