 For many information retrieval applications, we need to deal with the ranking problem on very large scale graphs. How-ever, it is non-trivial to perform efficient and effective rank-ing on them. On one aspect, we need to design scalable algorithms. On another aspect, we also need to develop powerful computational infrastructure to support these al-gorithms. This tutorial aims at giving a timely introduction to the promising advances in the aforementioned aspects in recent years, and providing the audiences with a compre-hensive view on the related literature.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval; H.5.4 [ Information Interface and Presentation ]: Hypertext/Hypermedia.
 Algorithm, Experimentation, Theory Large-scale graph, graph ranking, Markov process, Map-Reduce.
In many information retrieval applications, we need to tackle the problem of ranking on large-scale graphs with rich metadata. For example, to compute page importance rank-ing for search, one may need to analyze the link structure of the Web graph; to understand Web user behaviors and pref-erences, one may need to rank the nodes on user-page bipar-tite graphs extracted from search engine logs; and to make recommendations in online community, one may need to con-duct ranking on the social network graph. All these graphs are of very large scale and contain rich information (repre-sented by rich metadata). As a result, it is non-trivial to per-form efficient and effective ranking on them. On one aspect, we need to design scalable algorithms. On another aspect, we also need to develop powerful computational infrastruc-ture to support these algorithms. We observe that in recent years, there are some promising advances in the aforemen-tioned aspects, which can potentially enhance many impor-
In the third part, we will introduce supervised large-scale graph ranking algorithms. We propose a unified view on the supervised graph ranking algorithms, i.e., they are dis-criminative models on some graph-based smoothing func-tion. Specifically, a supervised/semi-supervised graph rank-ing framework will be introduced.
In the fourth part, we discuss how to design a distributed system to support large-scale graph ranking algorithms, and how to parallel existing algorithms to better fit into the sys-tem. The design principles for such a distributed system will first be discussed, and then a real system will be explained in detail, which has been used in a commercial search engine. This system contains a map-reduce engines specifically op-timized for graph operations, as well as a rich pool of graph operators such as graph traverse, graph partitioning, and graph sampling. It is easy to implement a graph ranking algorithm on this platform. We will take Semi-supervised PageRank as an example to make detailed discussion on this process.

In the last part of the tutorial, the future research direc-tions regarding large-scale graph ranking with rich meta-data, and open questions and challenges will be discussed. [1] A. Agarwal and S. Chakrabarti. Learning random [2] A. Agarwal, S. Chakrabarti, and S. Aggarwal.
 [3] S. Agarwal. Ranking on graph data. In the
