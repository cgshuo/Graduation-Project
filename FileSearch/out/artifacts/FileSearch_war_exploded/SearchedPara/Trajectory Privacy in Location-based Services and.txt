 The ubiquity of mobile devices with global positioning func-tionality (e.g., GPS and AGPS) and Internet connectivity (e.g., 3G and Wi-Fi) has resulted in widespread development of location-based services (LBS). Typical examples of LBS include local business search, e-marketing, social network-ing, and automotive traffic monitoring. Although LBS pro-vide valuable services for mobile users, revealing their pri-vate locations to potentially untrusted LBS service providers pose privacy concerns. In general, there are two types of LBS, namely, snapshot and continuous LBS. For snapshot LBS, a mobile user only needs to report its current location to a service provider once to get its desired information. On the other hand, a mobile user has to report its location to a service provider in a periodic or on-demand manner to obtain its desired continuous LBS. Protecting user location privacy for continuous LBS is more challenging than snap-shot LBS because adversaries may use the spatial and tem-poral correlations in the user X  X  location samples to infer the user X  X  location information with higher certainty. Such user location trajectories are also very important for many appli-cations, e.g., business analysis, city planning, and intelligent transportation. However, publishing such location trajecto-ries to the public or a third party for data analysis could pose serious privacy concerns. Privacy protection in contin-uous LBS and trajectory data publication has increasingly drawn attention from the research community and industry. In this survey, we give an overview of the state-of-the-art privacy-preserving techniques in these two problems. With the advanced location-detection technologies, e.g., global positioning system (GPS), cellular networks, Wi-Fi, and radio frequency identification (RFID), location-based services (LBS) have become ubiquitous [6; 30; 41]. Exam-ples of LBS include local business search (e.g., searching for restaurants within a user-specified range distance from a user), e-marketing (e.g., sending e-coupons to nearby poten-tial customers), social networking (e.g., a group of friends sharing their geo-tagged messages), automotive traffic mon-itoring (e.g., inferring traffic congestion from position and speed information periodically reported from probe vehi-cles), and route finder applications (e.g., finding a route with the shortest driving time between two locations). There are two types of LBS, namely, snapshot and continuous LBS. For snapshot LBS, a mobile user only needs to report its current location to a service provider once to get its desired information. On the other hand, a mobile user has to report its location to a service provider in a periodic or on-demand manner to obtain its desired continuous LBS.
 Although LBS provide many valuable and important ser-vices for end users, revealing personal location data to po-tentially untrustworthy service providers could pose privacy concerns. Two surveys reported in July 2010 found that more than half (55%) of LBS users show concern about their loss of location privacy [54] and 50% of U.S. residents who have a profile on a social networking site are concerned about their privacy [39]. The results of these surveys confirm that location privacy is one of the key obstacles for the success of location-dependent services. In fact, there are many real-life scenarios where perpetrators abuse location-detection tech-nologies to gain access to private location information about victims [14; 16; 51; 52].
 Privacy in continuous LBS is more challenging than snap-shot LBS because adversaries could use the spatial and tem-poral correlations in the user X  X  location samples to infer the user X  X  location information. Such user location trajectories are also very important for many real-life applications, e.g., business analysis, city planning, and intelligent transporta-tion. However, publishing such location trajectories to the public or a third party for data analysis could pose serious privacy concerns. Privacy protection in continuous LBS and trajectory data publication has increasingly drawn attention from the industry and academia. In this survey, we give an overview of the existing techniques in these two problems. The rest of this paper is organized as follows. Section 2 presents the derivation of location trajectory privacy. Sec-tion 3 discusses the state-of-the-art privacy-preserving tech-niques in continuous LBS. Section 4 gives existing privacy protection techniques for user location trajectory publica-tion. Finally, Section 5 concludes this survey with research directions in privacy-preserving continuous LBS and trajec-tory data publication. This section gives the derivation of location trajectory pri-vacy from data privacy and location privacy.
 M any agencies and other organizations often need to pub-lish microdata, i.e., tables that contain unaggregated infor-mation about individuals, (e.g., medical, voter registration, census, and customer data) for many practical purposes such as demographic and public health research. In general, mi-crodata is stored in a table where each row corresponds to one individual. In order to avoid the identification of records in microdata, known identifiers (e.g., name and so-cial security number) must be removed. However, joining such  X  X e-identified X  microdata with other released micro-data may still pose data privacy issues for individuals [48]. A study estimated that 87% of the population of the United States can be uniquely identified using the collection of non-identity attributes, i.e., gender, date of birth, and 5-digit zip code [50]. In fact, those three attributes were used to link Massachusetts, USA voter registration records including name, gender, zip code and date of birth to  X  X e-identified X  medical data from Group Insurance Company including gen-der, zip code, date of birth and diagnosis to identify the med-ical records of the governor of Massachusetts in the medical data [50]. Terminologically, attributes whose values taken together can potentially identify an individual record are referred to as  X  X uasi-identifiers X  and a set of records that have the same values for the quasi-identifiers in a released microdata is defined as an  X  X quivalence class X .
 Data privacy-preserving techniques have been developed to anonymize microdata. Several privacy-preserving properties are proposed to limit disclosure of anonymized microdata. For example, k -anonymity requires each record to be in-distinguishable with at least other k  X  1 records with respect to the quasi-identifier, i.e., each equivalence class contains at least k records [35; 48; 50; 49]. However, a k -anonymized equivalence class suffers from a homogeneity attack if all records in the class have less than k values for the sensitive attribute (e.g., disease and salary). To this end, l -diversity property is proposed to ensure that an equivalence class must have at least l values for the sensitive attribute [38; 55]. To further strengthen data privacy protection, t -closeness principle is defined that an equivalence class is said to have t -closeness if the distance between the distribution of a sen-sitive attribute in this class and the distribution of the at-tribute in the entire data set is no more than a threshold parameter t [36]. For the details of these and other data privacy principles for data publishing, we refer the reader to the recent survey paper [19]. In LBS, mobile users issue location-based queries to LBS service providers to obtain information based on their phys-ical locations. LBS pose new challenges to traditional data privacy-preserving techniques due to two main reasons [40]. (1) These techniques preserve data privacy, but not the location-based queries issued by mobile users. (2) They ensure desired privacy guarantees for a snapshot of the database. In LBS, queries and data are continuously up-dated with high rates. Such highly dynamic behaviors need continuous maintenance of anonymized user and object sets. Privacy-preserving techniques for LBS can be classified into three categories: (1) False locations [28; 33; 58] . The basic idea is to send either one or more fake locations that are re-lated to the user location. (2) Space transformation [21; 32] . The techniques in this category transform the location information into another space where the spatial relation-ships among queries and data are encoded. (3) Spatial cloaking [2; 5; 7; 11; 12; 15; 20; 22; 23; 25; 31; 40; 60] . The main idea is to blur users X  locations into cloaked spatial regions that are guaranteed to satisfy the k -anonymity [50] (i.e., the cloaked spatial region contains at least k users) and/or minimum region area privacy requirements [5; 15; 40] (i.e., the spatial region size is larger than a threshold). Spatial cloaking techniques have been extended to support road networks where a user X  X  location is cloaked into a set of connected road segments so that the cloaked road segment set satisfies the privacy requirements of k -anonymity and/or minimum total road segment length [10; 34; 42; 53]. Research efforts have also dedicated to dealing with privacy-preserving location-based queries, i.e., getting anonymous services from LBS service providers (e.g., [5; 21; 29; 31; 32; 40; 58]). These query processing frameworks can be divided into three main categories. (1) Location obstruction [58] . The basic idea is that a querying user first sends a query along with a false location as an anchor to a database server. The database server keeps sending the list of nearest objects to the anchor to the user until the list of received objects sat-isfies the user X  X  privacy and quality requirements. (2) Space transformation [21; 32] . This approach converts the orig-inal location of data and queries into another space through a trusted third party. The space transformation maintains the spatial relationship among the data and query, in or-der to provide accurate query answers. (3) Cloaked query area processing [5; 9; 13; 29; 31; 40] . In this framework, a privacy-aware query processor is embedded in the database server to deal with the cloaked spatial area received either from a querying user [5; 29] or from a trusted third party [9; 31; 40]. For spatial cloaking in road networks, an efficient and query-aware algorithm is proposed to process privacy-aware location-based queries [3]. A location trajectory is a moving path or trace reported by a moving object in the geographical space. A location tra-jectory T r is represented by a set of n time-ordered points, T r : p 1  X  p 2  X  . . .  X  p n , where each point p i consists of a geospatial coordinate set ( x i , y i ) (which can be de-termined by a GPS-like device) and a timestamp t i , i.e., p = ( x i , y i , t i ), where 1  X  i  X  n . Such spatial and tem-poral attributes of a location trajectory can be considered as powerful quasi-identifiers that can be linked to various other kinds of physical data objects [19; 43]. For example, a hospital releases a trajectory data set of its patients to a third-party research institute for analysis, as shown in Ta-ble 1. The released trajectory data set does not contain any explicit identifiers, such as patient name, but it con-tains a sensitive attribute (i.e., disease). Each record with a unique random ID, RID , corresponds to an individual, e.g., the record with RID = 1 means a patient visited loca-tions (1 , 5), (6 , 7), (8 , 10), and (11 , 8) at timestamps 2, 4, 5, and 8, respectively. Suppose that an adversary knows that a patient of the hospital, Alice, visited locations (1 , 5) and (8 , 10) at timestamps 2 and 8, respectively. Since only the trajectory record with RID = 1 satisfies such spatial and temporal attributes, the adversary can infer that Alice has HIV with 100% confidence. This example shows that pub-lishing  X  X e-identified X  trajectory data can still cause serious privacy threats.
 In LBS, when a mobile user issues a continuous location-b ased query to a database server (e.g.,  X  X ontinuously send me the traffic condition within 1 mile from my vehicle X ), the user has to report his/her new location to the database server in a periodic or on-demand manner. Similarly, in-telligent transportation systems require their users (e.g., probe vehicles) to periodically report their location and speed information to the system for analysis. Although such location-based queries and reports can be made anonymous by replacing the identifiers of users with random identifiers, in order to achieve pseudonymity [46], the users may still suffer from privacy threats. This is because movements of whereabouts of users in public spaces can be openly observed by others through chance or engineered meetings [37]. In the worst case, if the starting location point of a trajectory is home, an adversary uses reverse geocoding 1 [24] to translate a location point into a home address, and then uses a people-search-by-address engine (e.g., http://www.intelius.com and http://www.peoplefinders.com ) to find the residents of the home address. Even though users generate a ran-dom identity for each of their location samples, multi-target tracking techniques (e.g., the multiple hypothesis tracking algorithm [47]) can be used to link anonymous location sam-ples to construct target trajectories [26]. To this end, new techniques are developed to protect user location trajectory. The key difference between continuous LBS and trajectory data publication with respect to challenges in privacy pro-tection is twofold: (1) The scalability requirement of the privacy-preserving techniques for continuous LBS is much more important than that for trajectory data publication. This is because continuous LBS require the anonymization module to deal with a large number of real-time location up-dates at high rates while the anonymization process for tra-jectory data publication can be performed offline. (2) Global optimization can be applied to trajectory data publication because the anonymization process is able to analyze the entire (static) trajectory data to optimize its privacy pro-tection or usability. However, global optimization is very difficult for continuous LBS, due to highly dynamic, uncer-tain user movements. Sections 3 and 4 present the state-of-the-art privacy-preserving techniques for continuous LBS and trajectory publication, respectively. In general, there are two categories of LBS based on whether they need consistent user identities. A consistent user iden-tity is not necessarily a user X  X  actual identity or name because it can be an internal pseudonym. Category-I
R everse geocoding is the process of translating a human-readable address, such as a street address, from geographic coordinates.
 LBS: Some LBS require consistent user identities. For ex-ample,  X  X 1: let me find out where my friends are if they are within 2km from my location X ,  X  X 2: recommend 10 nearby restaurants to me based on my profile X , and  X  X 3: continu-ously tell me the nearest shopping mall to my location X . Q1 and Q2 require consistent user identities to let applications to find out their friends and profiles. Although Q3 does not need any consistent user identity, the query with its parame-ters can be considered as a virtual user identity that remains active until the query expires. Category-II LBS: Other LBS do not require consistent user identities, or even any user identities, such as  X  X 4: send e-coupons to users within 1km from my coffee shop X . In this section, we discuss five privacy-preserving techniques for continuous LBS, namely, spatial cloaking, mix-zones, vehicular mix-zones, path con-fusion and dummies, and indicate whether each of them sup-ports Category-I and/or II LBS from Sections 3.1 to 3.5, as summarized in Table 2.
 Table 2: Privacy-preserving techniques for continuous LBS. Vehicular mix-zones  X  X M obile users have to reveal their locations to database servers in a periodic or on-demand manner to obtain con-tinuous LBS. Simply applying a snapshot spatial cloaking technique (e.g., [2; 5; 15; 20; 22; 23; 25; 31; 40; 60]) to each user location independently cannot ensure k -anonymity for a user location trajectory. Thus, new spatial cloaking tech-niques based on either real-time or historical user trajecto-ries are designed to protect user location trajectories. Sim-ilar to snapshot spatial cloaking techniques, a fully-trusted third party, usually termed location anonymizer , is placed between mobile users and database servers. The location anonymizer is responsible for collecting users X  locations and blurring their locations into cloaked spatial regions that sat-isfy the user-specified k -anonymity level and/or minimum spatial region area. Since spatial cloaking techniques do not change user identities, they can support both Category I and II LBS. In the following sections, we will discuss three main kinds of spatial cloaking techniques over user trajecto-ries, namely, group-based, distortion-based, and prediction-based approaches, from Sections two approaches are designed for real-time user trajectories, while the last one is for historical trajectory data. H E D The group-based algorithm is proposed to use real-time lo-cation trajectory data to protect trajectory privacy for con-tinuous location-based queries [8]. The basic idea is that a querying user u forms a group with other k  X  1 nearby peers. Before the algorithm issues u  X  X  location-based query or reports u  X  X  location to the database server, it blurs u  X  X  location into a spatial area that contains all the group mem-bers as a cloaked spatial area. Figure 1 depicts an example of continuous spatial cloaking over real-time user location trajectories. In this example, user A that issues a contin-uous location-based query at time t i requires its location to be k -anonymized, where k = 3. At time t 1 , a location anonymizer forms a group of users A , C , and G , so that A  X  X  cloaked spatial region contains all these group mem-bers, as represented by a rectangle in Figure 1a. The lo-cation anonymizer sends A  X  X  query with its cloaked spatial region to a database server. At later times t 2 and t 3 , when A reports its new location to the location anonymizer, a new cloaked spatial region that contains the group members is formed, as shown in Figures 1b and 1c. The drawbacks of this approach are that users not issuing any query have to report their locations to the location anonymizer and the cloaked spatial area would become very large after a long time period. Such a large cloaked spatial area may incur high computational overhead at the database server and re-sults in many candidate answer objects returned from the database server to the location anonymizer.
 In theory, let R i be the cloaked spatial region for a querying user u at time t i and S ( R i ) be a set of users located in R Suppose u  X  X  query is first successfully cloaked at time t expires at time t n , u  X  S ( R 1 ) and | S ( R 1 ) |  X  k . Without any additional information, the value of R 1  X  X  entropy, H ( R is at least log 2 | S ( R 1 ) | which means that every user in R has an equal chance of 1 / | S ( R 1 ) | to be u [56], i.e., R k -anonymous region for u . For u  X  X  cloaked spatial regions R i  X  1 and R i generated at two consecutive times t i  X  1 and t (1 &lt; i  X  n ), respectively, if R i  X  1 is a k -anonymous region and S ( R i  X  1 )  X  S ( R i ), R i is also a k -anonymous region [56]. Thus, the group-based approach can ensure k -anonymity for the entire life span of a continuous location-based query. The distortion-based approach aims to overcome the draw-backs of the group-based approach. It not only requires Figure 2: Query distortion for continuous spatial cloaking. querying users to report their locations to the location anonymizer, but it also considers their movement directions and velocities to minimize cloaked spatial regions [45]. A distortion function is defined to measure the temporal query distortion of a cluster of continuous queries. Figure 2 gives an example of how to determine query distortion. In this example, three users A , B and C that issue their continu-ous location-based queries at time t 1 constitute a cloaking set and their queries expire at time t n . Their cloaked spatial region R 1 at time t 1 is a minimum bounding rectangle of the cloaking set, as represented by a rectangle (Figure 2a). Let ( x i , y tices of a cloaked spatial region R i at time t i , respectively. The distortion for their queries with a cloaked spatial region R i at time t i is defined as: 1 3 Figure 3: Continuous spatial cloaking over historical traje c-tories. where A height and A width are the height and width of the minimum bounding rectangle of the entire system space, re-spectively. Based on their movement directions and veloci-ties (represented by arrows in Figure 2b), their subsequent cloaked spatial regions R 2 , R 3 , . . . , R n at times t can be predicted, respectively. The distortion for their queries with respect to the time period from t 1 to t n is de-fined as: where P = A height + A width . Given a new query Q , greedy cloaking and bottom-up cloaking algorithms are designed to cluster Q with other k  X  1 outstanding queries into a group such that the group satisfies k -anonymity and their query distortion is minimized. Another way to ensure k -anonymity is to use individuals X  historical footprints, instead of their real-time locations [57]. A footprint is defined as a user X  X  location collected at some point of time. Similar to the previous two approaches, a fully-trusted location anonymizer is placed between users and LBS service providers to collect users X  footprints. Given a user X  X  predicted trajectory (i.e., a sequence of expected footprints), the location anonymizer cloaks it with k  X  1 his-torical trajectories collected from other users. Figure 3 gives an example for continuous spatial cloaking over historical trajectories, where a user u 1 wants to subscribe continuous LBS from a service provider. u 1  X  X  predicted time-ordered footprints are represented by black circles. If u  X  X  desired anonymity level is k = 3, the location anonymizer finds his-torical trajectories from two users, u 2 and u 3 . Then, each u  X  X  expected footprint p i (1  X  i  X  5) is cloaked with at least one unique footprint of each of u 2  X  X  and u 3  X  X  trajec-tories to form a cloaked spatial region C i . The sequence of such cloaked spatial regions constitute the k -anonymized trajectory for u 1 .
 Given a k -anonymized trajectory T = { C 1 , C 2 , . . . , C resolution is defined as: where Area ( C i ) is the area of cloaked spatial region C quality of services, | T | should be minimized. Since the com-putation of an optimal T would be expensive, heuristic ap-proaches are designed to find T . Although using historical trajectory data gives better resolutions for k -anonymized trajectories, it would suffer from an observation attack. This is because an attacker may only see a querying user or less than k users located in a cloaked spatial region at its asso-ciated timestamp. The concept of  X  X ix X  has been applied to anonymous com-munication in a network. A mix-network consists of nor-mal message routers and mix-routers. The basic idea is that a mix-router collects k equal-length packets as input and reorders them randomly before forwarding them, thus ensuring unlinkability between incoming and outgoing mes-sages. This concept has been extended to LBS, namely, mix-zones [4]. When users enter a mix-zone, they change to a new, unused pseudonym. In addition, they do not send their location information to any location-based application when they are in the mix-zone. When an adversary that sees a user u exits from the mix-zone cannot distinguish u from any other user who was in the mix-zone with u at the same time. The adversary is also unable to link people entering the mix-zone with those coming out of it. A set of users S is said to be k -anonymized in a mix-zone Z if all following conditions are met [44]: 1. The user set S contains at least k users, i.e., | S |  X  k . 2. All users in S are in Z at a point in time, i.e., all users 3. Each user in S spends a completely random duration 4. The probability of every user in S entering through an Table 3 gives an example of 3-anonymity for the mix-zone depicted in Figure 4, where three users with real identities,  X  ,  X  , and  X  enter the mix-zone with old pseudonyms ( P old a , c , and b at timestamps ( ts enter ) 2, 5, and 1, respectively. Users  X  ,  X  , and  X  exit the mix-zone with new pseudonyms ( P new ) y , x , and z at timestamps ( ts exit ) 9, 8, and 11, re-spectively. Thus, they all are in the mix-zone during the time period from 5 to 8. Since they stay inside the mix-zone with random time periods (i.e., t inside ), there is a strong unlinkability between their entry order (  X   X   X   X   X  ) and exit order (  X   X   X   X   X  ).
 We can see that mix-zones require pseudonym change to protect user location privacy, so this technique can only sup-port Category-II LBS. Mix-zones also impose limits on the services available to mobile users inside a mix-zone because they cannot update their locations until exiting the mix-zone. To minimize disruptions caused to users, the place-ment of mix-zones in the system should be optimized to limit the total number of mix-zones required to achieve a certain degree of anonymity [18]. In a road network, vehicle movements are constrained by many spatial and temporal factors, such as physical roads, directions, speed limits, traffic conditions, and road con-ditions. Mix-zones designed for the Euclidean space are not secure enough to protect trajectory privacy in road networks [17; 44]. This is because an adversary can gain more background information from physical road constraints and delay characteristics to link entering events and exiting events of a mix-zone with high certainty. For example, a mix-zone (represented by a shaded area) is placed on an in-tersection of three road segments Seg 1, Seg 2, and Seg 3, as depicted in Figure 5. If u-turn is not allowed in the inter-section, an adversary knows that a vehicle with pseudonym c enters the mix-zone from either Seg 1 in or Seg 2 in . Since a vehicle turning from Seg 1 in to Seg 3 out normally takes a longer time than turning from Seg 2 in to Seg 3 out , the ad-versary would use this delay characteristic to link an exiting event at Seg 3 out to an entering event at Seg 1 in or Seg 2 addition, every vehicle may spend almost the same time dur-ing a short time period for a specific direction, e.g., u-turn, left, straight, or right. This temporal characteristic may vi-olate the third necessary condition for mix-zones listed in Section 3.2.
 An effective solution for vehicular mix-zones is to construct non-rectangular, adaptive mix-zones that start from the cen-ter of an road segment intersection on its outgoing road seg-ments [44], as depicted in Figure 6. The length of each mix-zone on an outgoing segment is determined based on the average speed of the road segment, the time window, and the minimum pairwise entropy threshold. The dark shaded area should also be included in the mix-zone to ensure that an adversary cannot infer the vehicle movement direction (e.g., turn left or go straight in this example). The pair-wise entropy is computed for every pair of users a and b in an anonymity set S by considering a and b to be the only
Figure 6: Non-rectangular, adaptive vehicular mix-zones. m embers in S and determining the linkability between their old and new pseudonyms. Similar to mix-zones, vehicular mix-zones require a pseudonym change, so they can only support Category-II LBS. Since consecutive location samples from a vehicle are tem-porally and spatially correlated, trajectories of individual vehicles can be constructed from a set of location samples with anonymized pseudonyms reported from several vehicles through target tracking algorithms [26]. The general idea of these algorithms is to predict the position of a target vehi-cle based on the last known speed and direction information and then decide which next location sample (or the one with the highest probability if there are multiple candidate loca-tion samples) to link to the same vehicle through Maximum Likelihood Detection [26].
 The main goal of the path confusion technique is to avoid linking consecutive location samples to individual vehicles through target tracking algorithms with high certainty [27]. The degree of privacy of the path confusion technique is defined as the  X  X ime-to-confusion X , i.e., the tracking time between two location samples where an adversary could not determine the next sample with sufficient tracking certainty. Tracking uncertainty is computed by H =  X  P p i log p i , where p i is the probability that location sample i belongs Figure 7: One real trajectory T r a nd two dummies T d 1 and T Table 4: Privacy measures of the example in Figure 7. Real trajectory ( T r ) (1,2) (2,3) (3,3) (4,3) (5,3) to a target vehicle. Smaller values of H m eans higher cer-tainty or lower privacy. Given a maximum allowable time to confusion, ConfusionTime , and an associated uncertainty threshold, ConfusionLevel , a vehicle X  X  location sample can be safely revealed if the time between the current time t and the last point of its confusion is less than ConfusionTime and tracking uncertainty of its sample with all location samples revealed at time t is higher than ConfusionLevel . To reduce computational overhead, the computation of tracking uncer-tainty can only consider the k -nearest location samples to a predicted location point (calculated by the target track-ing algorithm), rather than all location samples reported at time t . Without relying on a trusted third party to perform anonymization, a mobile user can generate fake location tra-jectories, called dummies , to protect trajectory privacy [33; 59]. Given a real user location trajectory T r and a set of user-generated dummies T d , the degree of privacy protec-tion for the real trajectory is measured by the following metrics [59]: 1. Snapshot disclosure (SD). Let m be the number of 2 . Trajectory disclosure (TD). Given n trajectories, 3 . Distance deviation (DD). DD is defined as Given a real trajectory T r and the three user-specified pa-rameters SD , T D , and DD in a privacy profile, the dummy-based anonymization algorithm incrementally uses DD to find a set of candidate dummies and selects one with the best matching to SD and T D until it finds a set of tra-jectories (including T r and selected dummies) that satisfies all the parameters [59]. Since a user can use an consistent identity for its actual trajectory and other dummies, the dummy-based approach can support both Category I and II LBS, as depicted in Table 2. In this section, we discuss anonymization techniques for tra-jectory data publication. The anonymized trajectory data can be released to the public or third parties for answering s patio-temporal range queries [1; 43] and data mining [43]. In the following sections, we present two well-studied tra-jectory anonymization techniques, namely, clustering-based approach [1] (Section 4.1) and generalization-based ap-proach [43] (Section 4.2). The clustering-based approach [1] utilizes the uncertainty of trajectory data to group k co-localized trajectories within the same time period to form a k -anonymized aggregate tra-jectory. Given a trajectory T r between times t 1 and t n [ t , t n ], and an uncertainty threshold d , each location sam-ple in T r , p i = ( x i , y i , t i ), is modeled by a horizontal disk with radius d centered at ( x i , y i ). The union of all such disks constitute the trajectory volume of T r , as shown in Figure 8. Two trajectories T r p and T r q defined in [ t are said to be co-localized with respect to d , if the Euclidean distance between each pair of points in T r p and T r q at time t  X  [ t 1 , t n ] is less than or equal to d . An anonymity set of k trajectories is defined as a set of at least k co-localized tra-jectories. The cluster of k co-localized trajectories is then transformed into an aggregate trajectory where each of its location points is computed by the arithmetic mean of the location samples at the same time. Figure 9 gives the tra-jectory volumes of T r p and T r q that are represented by grey and dotted lines, respectively. The trajectory volume with black lines is a bounding trajectory volume for T r p and T r The bounding trajectory volume is then transformed into an aggregate trajectory which is represented by a sequence of square markers.
 The clustering-based anonymization algorithm consists of three main phases [1]: 1. Pre-processing phase. The main task of this phase 2. Clustering phase. This phase clusters trajectories 3. Space transformation phase. Each cluster is trans-Since most data mining and statistical applications work on atomic trajectories, they are needed to be modified to work on aggregate trajectories generated by an anonymization al-gorithm (e.g., the clustering approach). To address this lim-itation, the generalization-based algorithm first generalizes a trajectory data set into a set of k -anonymized trajectories, i.e., each one is a sequence of k -anonymized regions. Then, for each k -anonymized trajectory, the algorithm uniformly selects k atomic points from each anonymized region and links a unique atomic point from each anonymized region to reconstruct k trajectories. More details about these two main steps are given below [43]: 1. Anonymization step. Given a trajectory data set T , 2. Reconstruction step. Given a k -anonymized tra-t (a) Original trajectories t 3 Tr* Tr (a) Location samples selec-t ion F igure 11: Generalization-based approach: Reconstruction step.
 The reconstructed trajectory data set can be released to the public or third parties for answering spatio-temporal queries and data analysis (e.g., data mining). Location privacy protection in continuous location-based services (LBS) and trajectory data publication has drawn a lot of attention from the industry and academia. It is expected that more effective and efficient privacy preserv-ing technologies will be developed in the near future. We want to provide some future directions in these two problems as the conclusion of this survey. For continuous LBS, new privacy-preserving techniques are needed to protect person-alized LBS. This is because personalized LBS require more user semantics, e.g., user preferences and background in-formation, such as salary and occupation, rather than just some simple query parameters, such as a distance range and an object type of interest. An adversary could use such user semantics to infer the user location with higher certainty. For example, suppose that an adversary knows that a tar-get user Alice usually has dinner from 6pm to 7pm during weekdays and she does not like Japanese and Thailand food. Given a cloaked spatial region of Alice X  X  location at 6:30pm on Monday and the region contains two Japanese restau-rants, one Thailand restaurant and one Chinese restaurant, the adversary can infer that Alice in the Chinese restaurant with very high certainty. Existing privacy-preserving tech-niques for location trajectory publication only support sim-ple aggregate analysis, such as range queries and clustering. Researchers should develop new trajectory anonymization techniques that support more useful and complex spatio-temporal queries (e.g., how many vehicles travel from a shopping mall to a cinema from 1pm to 2pm during week-ends, the most popular path, and their average travel time) and data analysis (e.g., pattern recognition and association rules). [1] O. Abul, F. Bonchi, and M. Nanni. Never walk [2] B. Bamba, L. Liu, P. Pesti, and T. Wang. Support-[3] J. Bao, C.-Y. Chow, M. F. Mokbel, and W.-S. Ku. Ef-[4] A. R. Beresford and F. Stajano. Location privacy [5] R. Cheng, Y. Zhang, E. Bertino, and S. Prabhakar. [6] C.-Y. Chow, J. Bao, and M. F. Mokbel. Towards [7] C.-Y. Chow, M. Mokbel, and T. He. A privacy-[8] C.-Y. Chow and M. F. Mokbel. Enabling private contin-[9] C.-Y. Chow, M. F. Mokbel, and W. G. Aref. Casper*: [10] C.-Y. Chow, M. F. Mokbel, J. Bao, and X. Liu. [11] C.-Y. Chow, M. F. Mokbel, and X. Liu. A peer-to-[12] C.-Y. Chow, M. F. Mokbel, and X. Liu. Spatial cloaking [13] C.-Y. Chow, M. F. Mokbel, J. Nap, and S. Nath. Eval-[14] Dateline NBC. Tracing a stalker. http://www.msnbc. [15] M. Duckham and L. Kulik. A formal model of obfusca-[16] FoxNews. Man accused of stalking ex-girlfriend [17] J. Freudiger, M. Raya, M. Felegyhazi, P. Papadimi-[18] J. Freudiger, R. Shokri, and J.-P. Hubaux. On the op-[19] B. C. M. Fung, K. Wang, R. Chen, and P. S. Yu. [20] B. Gedik and L. Liu. Protecting location privacy [21] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi, [22] G. Ghinita, P. Kalnis, and S. Skiadopoulos. PRIV  X  E: [23] G. Ghinita1, P. Kalnis, and S. Skiadopoulos. MobiHide: [24] Google Geocoding API. http://code.google.com/ [25] M. Gruteser and D. Grunwald. Anonymous usage of [26] M. Gruteser and B. Hoh. On the anonymity of periodic [27] B. Hoh, M. Gruteser, H. Xiong, and A. Alrabady. [28] J. I. Hong and J. A. Landay. An architecture for [29] H. Hu and D. L. Lee. Range nearest-neighbor query. [30] S. Ilarri, E. Mena, and A. Illarramendi. Location-[31] P. Kalnis, G. Ghinita, K. Mouratidis, and D. Papadias. [32] A. Khoshgozaran and C. Shahabi. Blind evaluation of [33] H. Kido, Y. Yanagisawa, and T. Satoh. An anonymous [34] W.-S. Ku, R. Zimmermann, W.-C. Peng, and S. Shroff. [35] K. LeFevre, D. DeWitt, and R. Ramakrishnan. Mon-[36] N. Li, T. Li, and S. Venkatasubramanian. Close-[37] C. Y. Ma, D. K. Y. Yau, N. K. Yip, and N. S. V. Rao. [38] A. Machanavajjhala, D. Kifer, J. Gehrke, and [39] Marist Institute for Public Opinion (MIPO). [40] M. F. Mokbel, C.-Y. Chow, and W. G. Aref. The new [41] M. F. Mokbel and J. Levandoski. Towards context and [42] K. Mouratidis and M. L. Yiu. Anonymous query pro-[43] M. E. Nergiz, M. Atzori, Y. Saygin, and B. G  X u  X c. [44] B. Palanisamy and L. Liu. Mobimix: Protecting loca-[45] X. Pan, X. Meng, and J. Xu. Distortion-based [46] A. Pfitzmann and M. Kohntopp. Anonymity, unobserv-[47] D. Reid. An algorithm for tracking multiple targets. [48] P. Samarati. Protecting respondents identities in mi-[49] L. Sweeney. Achieving k -anonymity privacy protec-[50] L. Sweeney. k -anonymity: A model for protecting pri-[51] USAToday. Authorities: GPS system used to [52] J. Voelcker. Stalked by satellite: An alarming rise in [53] T. Wang and L. Liu. Privacy-aware mobile services over [54] Webroot Software, Inc. Webroot survey finds ge-[55] X. Xiao, K. Yi, and Y. Tao. The hardness and approx-[56] T. Xu and Y. Cai. Location anonymity in continu-[57] T. Xu and Y. Cai. Exploring historical location data [58] M. L. Yiu, C. Jensen, X. Huang, and H. Lu. Spacetwist: [59] T.-H. You, W.-C. Peng, and W.-C. Lee. Protecting [60] C. Zhang and Y. Huang. Cloaking locations for anony-
