 Most structural and mechanical system maintenance is time-based, which an inspection is carried out after a predefined amount of time. Structural health monitoring (SHM) is a condition-based technology to monitor infrastructure using sensing systems. The potential for life-safety and economic benefits has motivated the needs for SHM, facilitating the shift from time-based to condition-based maintenance [ 8 ]. Damage identification is a key problem in SHM. It is classified by Rytter into four different levels of complexity [ 14 ]:  X  Level 1 (Detection): to detect if damage is present in the structure.  X  Level 2 (Localization): to locate the position of the damage.  X  Level 3 (Assessment): to estimate the extent of the damage.  X  Level 4 (Prediction): to give information about the safety of the structure, e.g. a remaining life estimation.
 Among the four, level 4 requires an understanding of the physical charac-teristics of the damage progression in the structure. Machine learning methods can solve levels from 1 to 3, which level 1 can be solved using an unsupervised learning while levels 2 and 3 usually require a supervised learning approach [ 18 ]. Since we usually only have data associated with healthy states of structures, an unsupervised approach is more practical.
 In SHM, the data are usually highly redundant and correlated. There are many sensors at different locations collecting similar vibration data over time. For instance, numerous sensors are installed at different locations on a long-span bridge to measure vibration signals due to traffic loading over long periods of time. One vehicle event at a specific time has multiple signals measured by dif-ferent sensors. The measured variables are not only correlated with each other at a certain time but also autocorrelated themselves over time. Two-way analysis using matrix, which is usually used in SHM, can not capture all these relation-ships and correlations together. It is normally based on a matricization of a multiway array and then matrix-based techniques such as principal component analysis (PCA) or singular value decomposition (SVD) are used to analyse the data. However, unfolding the multiway data and analyse them using two-way methods may result in information loss and misinterpretation, especially when the data are noisy [ 1 ]. Tensor analysis allows us to analyse data in multiple modes at the same time [ 9 ].
 This work is part of the efforts which have applied SHM to the Sydney Harbour Bridge. Unsupervised tensor analysis combined with one-class support vector machine (SVM) is used for damage identification including detection, localization and estimation of the damage. The contribution of the paper is as follows.  X  SHM sensing data are formed as a tensor, from which tensor analysis is used to obtain the latent subspaces from the multiway data. Using tensor decomposition, data are mapped to a subspace with much lower dimension so that the learning can be done effectively and efficiently.  X  Damage detection, localization and estimation are achieved in an unsuper-vised approach, which is more practical for a SHM problem.  X  Experiments using data obtained from laboratory-based structures and the
Sydney Harbour Bridge show the effectiveness of the approach in damage identification.
 The remainder of the paper is organized as follows. Sections 2 and 3 sum-marize the related work and background for this work. Section 4 describes our damage identification approach using tensor analysis and one-class SVM. Exper-imental results are in Section 5 . We conclude our work in Section 6 . Unsupervised methods in SHM normally train the model using only healthy data. Events which significantly deviate from the normal behaviour of the trained model are considered as damage. Worden et al. used Mahalanobis distance to find anomalies in the data, which are likely to be damage [ 17 ]. Chan et al. [ 6 ] studied auto-associative neural networks for damage detection of the three cable-supported bridges in Hong Kong. However, due to the limitation of unsupervised learning techniques as noted in [ 18 ], these methods are only able to detect dam-age. Not much work available to discuss damage localization and estimation in an unsupervised approach.
 including chemistry, neuroscience, social network analysis and computer vision [ 1 , 10 ]. Prada [ 13 ] used three-way analysis of SHM data for damage detection and feature selection. However, this work was purely studied to detect damage, not to localize and estimate the extent of damage.
 nent matrices from a Tucker decomposition for online applications like computer network intrusion detection. Liu et al. [ 12 ] utilized the common substructures of graphs to accelerate the Tucker factorization for dynamic graphs. A difference with our work is they focus on Tucker analysis while we do that for CP, which has its simplicity in interpretation of the results. 3.1 Tensor Analysis for SHM Data In SHM, usually many sensors at different locations are used to measure the vibration signals over time. The data can be considered as a three-way tensor ( feature  X  location  X  time ) as described in Figure 1 . Feature is the informa-tion extracted from the raw signals in time domain (e.g. features in frequency domain). Location represents sensors, and time is data snapshots at different timestamps. Each cell of the tensor is a feature value extracted from a particu-lar sensor at a certain time. Each slice along the time axis shown in Figure 1 is a frontal slice representing all feature signals across all locations at a particular time. For simplicity, in this paper we represent a tensor as a three-way array, which is often a case in SHM. However, it is also possible to generalize all the theories for a n -way array.
 DECOMP/ PARAFAC decomposition) and Tucker decomposition [ 9 ]. After a decomposition from a three-way tensor, three component matrices can be obtained representing information in each mode. In the case of SHM data as in Figure 1 , they are associated with feature (denoted matrix A ), location (matrix B ) and time modes (matrix C ), respectively. In CP method, it is able to interpret the artifact in each mode separately using its corresponding component matrix. In Tucker method, any component can interact with other component in other mode quantified by the core tensor [ 2 ]. It makes the interpretation of a Tucker model more difficult than CP. Therefore, in this work we only use CP method for damage identification. CP Decomposition. The CP decomposition factorizes a tensor as a sum of a finite number of rank-one tensors. In case of a three-way tensor it is expressed as where R is the latent factor, A : r , B : r and C : r are r -th columns of component matrices A  X  R I  X  R , B  X  R J  X  R and C  X  R K  X  R ,and  X  is the weight vector so that the columns of A , B , C are normalized to length one. The symbol  X  a vector outer product. E is a three-way tensor containing the residuals. It can also be written in term of the k -th frontal slice of X : where the diagonal matrix D k = diag (  X C k : )( C k : is the k -th row of matrix C ). CP decomposition is typically solved using alternating least square (ALS) technique. The technique iteratively solves each component matrix using a least square method by fixing all the other components and repeats the procedure until it converges [ 9 ]. The results by CP are unique provided that we permute the rank-one components [ 10 ]. 3.2 One-class Support Vector Machine In this work, we use one-class SVM [ 15 ] as an anomaly detection method. SVM is well-known for its strong regularization property which is the ability to generalize the model to new data. One-class SVM finds a small region containing most of data points and the anomalies elsewhere. It is done by mapping data into a feature space using kernel and then separating them from the origin with maximum margin. This can be shown as an optimization problem: where w and  X  are parameters of the model and can be learned from a training process.  X  i is a slack variable for controlling how much training error is allowed. { x i } n i =1 is a training event,  X   X   X  is the dot product, and v controls the rate of anomalies in the data.
 quadratic programming. Once a model is obtained from training data, it can generate a decision value for every new instance. A new instance with a negative decision value is an anomaly, indicating a damaged event [ 15 ]. This section describes an approach to identify damage using tensor analysis. Excitations to structures are measured over time by accelerometers or other kinds of sensors. Next, features are extracted from the raw data of all accelerom-eters, which form a three-way tensor data. Then the tensor is decomposed into matrices of different modes as described in previous section. Analysis of these factor matrices will help to identify the damage of the structure. 4.1 Damage Detection Given a three-way tensor X ( feature  X  location  X  time ) which represents data in a healthy condition of a structure, we want to decide if a new event X frontal slice of size feature  X  location ) is an anomaly with respect to all other healthy events in the training data. Therefore, subspace corresponding to the time mode after decomposition will be used to detect damage.
 Building a Benchmark Model. X is decomposed into three component matrices A , B and C using CP decomposition. Each row of C represents an event in time mode. Using one-class SVM, we build a model using healthy train-ing events which are represented by rows of the component matrix C . Damage Detection. Due to an arrival of a new event (a new frontal slide in time mode), an additional row will be added to the component matrix C .Asin Equation 2 , X k = AD k B T . When a new frontal slice X n where D n = diag (  X C n : ) which is a diagonal matrix based on the new row C of component matrix C caused by the new slice X n . The new row C obtained via D n [ 13 ]: which can be solved using a least square method. Algorithm 1. Damage detection After having C n : , this new row will be checked if it agrees with the benchmark model built in the training, answering the condition of the structure. In case of one-class SVM, a negative decision value indicates that the new event is likely a damaged event. The damage detection method is described in Algorithm 1 . 4.2 Damage Localization and Estimation In order to locate the position of the damage, components of the decomposed matrix in location mode are analysed to extract meaningful artifacts from dif-ferent states of the structure. By analysing and comparing these components, it is able to find anomalies, which correspond to damaged locations.
 To estimate the extent of the damage, we analyse decision values returned from the one-class SVM model. The rationality is that a structure with a more severe damage (e.g. a longer crack) will behave more differently from a normal behaviour. Different ranges of the decision values may present different severity levels of damage. These analyses will be shown in the experimental results. 5.1 Case Studies We conducted experiments on two case studies, representing two typical types of civil structures. One case study is an laboratory-based building structure obtained from Los Alamos National Laboratory (LANL) [ 11 ], and the other is the Sydney Harbour Bridge. For the Sydney Harbour Bridge data, it includes both laboratory testing and field trial.
 Building Data. A dataset was obtained from LANL [ 11 ]. The data are from a three-story building structure constructed of Unistrut columns and aluminium floor plates. Plates and columns were connected by bolts and brackets. Dimen-sions of the structure and floor layout are presented in Figure 2 . A shaker was used to generate excitation. As it appears in Figure 2 , two accelerometers were attached to each joint, resulting in eight accelerometers within each floor. There were 270 vibration events generated. Each event contained 8192 sam-ples, which were sampled at 1600 Hz. Among those events, 150 healthy events were created using different shaker input levels and bandwidths to represent dif-ferent environmental and operational conditions. In the remaining 120 events, there were 30 events with damage in location 1A (i.e. corner A at level 1), 60 events with damage in location 3C, and 30 events with damage in both locations (i.e. 1A and 3C). The damage was introduced by loosening the bolts and then hand tightening them, or by removing bolts and brackets at the joints, allowing the plate to move freely relative to the column.
 The Sydney Harbour Bridge. The Sydney Harbour Bridge is one of major bridges in Australia, which was opened in 1932. There are 800 jack arches on the underside of the deck of the bus lane (lane seven) needed to be monitored, as shown in Figure 3a . Vibration data caused by passing vehicles were recorded by three-axis accelerometers installed under the deck of lane seven. Each joint was instrumented with a sensor node, which connected to three accelerometers mounted to the joint in left, middle and right positions as shown in Figure 3c . real data collected from the bridge.
 Specimen Data: A steel reinforced concrete beam was manufactured with a similar geometry to those on the Sydney Harbour Bridge (Figure 3b ). The data were collected from two sets of sensor nodes placed on the base of the joint, one nodes is positioned at the tip while the other was mounted 750 mm away from the tip. The locations of three accelerometers from each node are similar to those on the joints of the bridge. The excitation was made using an impact hammer. Once the node was triggered by a hammer, it records data for 3 seconds at a sampling rate of 500 Hz, resulting in 1500 samples for each event. After testing the benchmark in a healthy condition, a crack was gradually introduced into the specimen with four level of crack dimensions: (75 (150  X  50)mm, (225  X  50)mm and (270  X  50)mm. The same test was conducted again in each damage severity. About 200 events were collected in healthy con-dition and in each level of damage severity.
 Bridge Data: For this case study, only two instrumented joints on the bridge were considered (named joints 1 and 2 as in Figure 3c ). A known crack existed at joint 2 at the time of measurement while joint 1 was in a good condition. An event is defined as a time period during which a motor vehicle is driving across the joint. An event is normally triggered after the acceleration value is greater than a pre-set threshold. After the triggering occurs, the node records for a period of 1.5 seconds at a sampling rate of 400 Hz. Each event contains 100 samples before the event started and 500 samples are collected during and after the event. Denote A i an instantaneous acceleration at i -th sample, A vector which is the average of three readings ( x, y, z ) from the first 100 samples. One metric is extracted from three-axis readings: V = | A independent on the accelerometer orientations. 5.2 Feature Extraction For all datasets, the features in the frequency domain were created as follows. For every vibration event, the data from each accelerometer were standardized to have zero mean and one standard deviation. Then the data were converted to the frequency domain using Fourier transform. Differences between vibrations of adjacent accelerometers in each location in the frequency domain were used as features. The rationality is that if a joint is healthy the accelerometers attached to it would move together. If the joint is damaged they would move differently. These features will be reflected in the differences of the signals. Building Data. For every event, the difference between signals collected by two accelerometers at a joint in the frequency domain was taken (in total there are 12 joints in three stories). Then only frequency up to 150Hz was selected as features. So the data is a tensor of (768 features  X  12 locations Specimen Data. For each sensor node, differences between V feature men-tioned above of accelerometers 1 and 2, 1 and 3, and 2 and 3 in the frequency domain were used as features. Only frequency up to the first 150Hz was selected. Finally we had a tensor of (450  X  6  X  960).
 Bridge Data. Since only accelerometers in the same joints of the bridge are synchronized in time, only data from one joint was put in the tensor. It is all right since the vibration of each joint is quite independent to each other in this case. Since we have healthy data in joint 1 and damaged data in joint 2, to demonstrate the effectiveness of the method we combined the data from joints 1 and 2. Events from three accelerometers from joint 2 were used as damaged events while data from three accelerometers in joint 1 were used as the healthy events.
 2 and 3 in the frequency domain were used as features. Only frequency up to the first 150Hz was selected. Finally we had a tensor of (150 5.3 Results For building dataset, 100 healthy events were randomly selected as training data. The other were used for testing. There were 150 healthy events randomly selected as training data for specimen dataset and 500 random healthy events were used for training in bridge dataset. As described in Section 4.1 , a benchmark model was built on the training tensor data and each new event (a tensor frontal slide) was test against the model to detect damage.
 computing the decision values for each event (single testing), we took a median value of a block of 10 sequential events in a chronological order. The reported accuracy was a block accuracy. The rationality for this is that there may be noisy events overtime but the health status of sequential events in a short time should be very similar. All the results shown were averaged over ten trials of experiment.
 for Matlab was used for one-class SVM [ 7 ]. In order to decide the number of rank-one tensors R in the CP method, core consistency diagnostic technique (CORCONDIA) described in [ 5 ] was applied, in which a Tucker core is used for assessing the appropriateness of a CP model. This technique was implemented using the N-way Toolbox for Matlab [ 3 ].
 Damage Detection. In this section, the damage detection using method described in Section 4.1 was investigated. For CP, we tried different values of R from one to five and used CORCONDIA method to decide the appropriate one. For one-class SVM model, the rate of anomalies  X  = 5% was selected. the F 1 scores for all new test instances in three datasets using both single testing and multiple testing. The best results almost agree with the parameter selection method (CORCONDIA). CORCONDIA selected R = 2 for the specimen and bridge data and R = 1 for the building data. Since R = 2 also gave similar results for the building data, we selected R = 2 for all datasets and it will be used for damage localization and estimation. Then we have F and 1 (using multiple testing) for the building, specimen and bridge datasets, respectively. The results also show that multiple testing can significantly improve the detection results, especially for the specimen data.
 Damage Localization. Figure 5 shows two components of the location mode ( R = 2) with color values for all sensor locations in the building data. The first component corresponded to a healthy state of the building when there was no damage while the second component presented a damaged state. In the damaged state, the colors with high values correctly associated with locations of known damage (1A and 3C). Therefore, this analysis is promising to localize damage in structures. For the bridge datasets, since all accelerometers were in the same joint, there was no need to localize the damage.
 Damage Estimation. The decision values returned from the one-class SVM model were used to characterize the level of damage. The result in Figure 6 presents the decision values of every block of test events in the building and specimen data using one-class SVM (we did not do that for the bridge data since there are no ground truth for damage severity in this case). The dotted lines show the boundary between healthy and damaged events. Different ranges of the decision values matched with different severity levels of damage described in the datasets.
 healthy data. The next 30 events were damaged data when the damage occurred in both locations 1A and 3C (among them the first and the next 15 events had different levels of severity). The following 60 events corresponded to damage in location 3C with four levels of damage severity. And the last 30 events presented the decision values for damaged events in location 1A in two levels of severity. Moreover, for the same kind of damage, the decision values were lower when damage happened in both locations compared with those occurred in one loca-tion only. Figure 6b shows that the decision values successfully separated healthy events and four different levels of damaged events. In addition, events with more severe damage tended to have lower decision values. Therefore, it suggests that we can use the decision values obtained by CP and one-class SVM as structural health scores to characterize the damage severity in an unsupervised manner. Comparison with a Traditional Approach. In this section, we will compare between the tensor approach with the approach without using tensor. For all datasets, individual one-class SVM model was built for each sensor location using the same train and test data with the same feature as in previous experiments. An average detection accuracy of all the location models was used to compared against the tensor approach. Figure 7 shows the F 1 score (multiple testing) of the two approaches for all three datasets. It shows that the tensor approach had better detection accuracies than the one without using tensor, especially for the specimen dataset. Moreover, it is impossible for the damage localization and estimation using the results obtained from each location model.
 This work presents a damage identification approach using tensor analysis for SHM applications where sensing data were converted to a three-way tensor form. A structural benchmark model was built using one-class SVM on a component matrix in time mode learned from the tensor decomposition. Then new events were updated using a simple least square approach and were tested against the benchmark model to detect damage. Moreover, in our approach damage detec-tion, localization and assessment were achieved in an unsupervised manner. The approach was shown to work very well using data from lab-based structures and real data from the Sydney Harbour Bridge. We can obtain a damage detection F scores of 0.98 and higher for all the datasets. Damage was localized correctly and different levels of damage severity were well estimated.

