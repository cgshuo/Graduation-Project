 MuchworkhasbeendoneonEnglishWebpeoplesearch[2,4]andthispaper presents a Chinese Web people search system. Compared with people search in English, Chi-nese text processing confronts additional challenges: first, the Chinese text is writ-ten in continuous characterstrings without any word gap in a sentence, which leads more difficulties to the task of tokenization; second, the substrings of a personal name also denote personal names, which is difficult to distinguish; thirdly, there is a higher personal name ambiguity in Chinese than that in other languages. Some related work has been studied, such as the Chinese Personal Name Disambigua-tion (CPND) campaign[3], which is held to explore personal name disambiguation in Chinese News. However, to the best of our knowledge, few research studies have been done on Chinese Web people search.

To handle these challenges, this paper presents a Chinese Web People Search system called CWePS. Given a persona l name as query, we obtain some Web pages from the existing web search engine, and group the Webpages into different clusters using a multi-stage algorithm. On the first stage, we cultivate the context of the namesakes in Knowledge bases (e.g., Baidu Encyclopedia 1 ), and then combine the Webpages related to the same namesake into new documents after matching the Webpages to these namesakes. On the second stage, we group these new documents and the unmatched Webpages into clusters using the Hierarchical Agglomerative Clustering (HAC) algorithm based on Can X  X  Link (CL) and Must Link (ML) features. An example of the CL features is birthday for which each namesake can only have one instance, and the ML features are unique to each person like personal email address.
Our contributions are as follows: (1) we address the Chinese Web people search problem and develop a system, CWePS, to handle its special challenges; (2) we cultivate the Baidu Encyclopedia as well as the entity features to improve the disambiguation performance; (3) CWe PS focuses on the Chinese Web People Search problem and gives some intuition for further research. 2.1 Preprocessing Given a personal name, we use a data collector to fetch a list of search results from Google. First, we remove some noise from the results (e.g., the adver-tisement, HTML and JavaScript codes) using HtmlParser 2 . Second, we employ ICTCLAS 3 for the tasks of Chinese word segmentation and part of speech (POS) Tagging. Third, we discard some noisy Webpages, such as the ones without any variants of the queried name and the Webpages in which the queried name is tagged as a non-personal name. In addition, we use Email as ML feature and birthday as CL feature. These features are extracted by regular expression from contexts around the queried name.

We use the vector space model (VSM) to represent the Webpages as W = { w 1 ,w 2 , ..., w K } ,inwhich w i is the vector of features of the ith Webpage and K is the number of Webpages. We extracted three kinds of features, including nouns, verbs and named entities tagged by ICTCLAS. The weights of the features are mea-suredbyTermFrequency(TF)andInverse DocumentFrequency(IDF).Compared with a word, the named entity makes more s ense for entity (e.g., person) name dis-ambiguation, thus, we assign the higher weights to the named entities. 2.2 Disambiguation The disambiguation of Chinese personal name is divided into two stages. In the first stage, we extract the d escriptions of the namesa kes for each queried name from Baidu Encyclopedia as B = { b 1 ,b 2 , ..., b M } ,inwhich M is the number of its namesakes in Baidu Encyclopedia. We calculate the similarity between each Webpage and the description of the namesakes by calculating the cosine simi-larity [1]. If the similarity is beyond a threshold, we conclude that the Webpage belongs to the corresponding namesake.

In the second stage, we collect the Webpages that are matched into the same namesake in the first stage, then we represent these new documents and the un-matched Webpages as D = { d 1 ,d 2 , ..., d N } using the vector space model (VSM). We utilize the hierarchical agglomerativ e clustering (HAC) algorithm [1] based on the CL and ML features to group these new documents into new clusters. Next, we compute the N  X  N similarity matrix using Cosine similarity and we further build the CL and ML matrix between these documents. After that, we execute N  X  1 steps of merging the currently most similar clusters as long as they don X  X  have different CL features. The algorithm starts with merging the clusters with the same ML features and stops until the similarity between the most similar clusters is below a threshold. When a user searches  X  X ei Shen X , the results of CWePS are shown in Figure 1. Each cluster is represented with its m ost frequent related person, place and organization. When the user clicks each cluster, the Webpages in that cluster will be shown on the right panel. On the left panel of Figure 2, the area of each sector is proportional to the quantity of Webpages of each cluster. When the user clicks any sector, the corresponding Webpages of that cluster will be shown on the right panel, meanwhile the related solid points will be highlighted to show the Webpages X  rank distribution in Google search results.

From the results we observe: (1) the combination of the multiple features is useful for personal name disambiguation; (2) the CL and ML features can im-prove the disambiguation accuracy of personal name disambiguation; (3) some Webpages collected from the soc ial networks (e.g., Weibo.com 4 ) have little con-text but much structured information, which can be used in the future. Acknowledgement. This work was supported in part by National Natural Science Foundation of Ch ina under Grant No. 61272088.

