
The importance of discovering knowledge from a large database is growing at a rapid pace due to the fast increase of using computing for various applications. It is on customer buying behaviour and thus improve the quality of business decisions. before any meaningful conclusion can be drawn therefrom. Because the amount of to conduct mining on these data.
 et al. 1999; Chen et al. 1996; Han and Kamber 2000; Ma and Hellerstein 2001).
Among them, the one receiving a significant amount of research attention is on min-the goal of mining an association rule is to discover the relationship that the presence transaction. Since the earlier work in Agrawal et al. (1993), several technologies on association rule mining have been developed, including (1) improvement on associ-(2) incremental updating (Ayad et al. 2001; Lee et al. 2001); (3) mining of general-ized (Srikant and Agrawal 1995), multilevel r ules (Han and Fu 1995); (4) constraint-based rule mining (Lakshmanan et al. 1999; Pei and Han 2000) and multiple min-imum supports issues (Liu et al. 1999; Wang et al. 2000); (5) temporal association rule mining (Ale and Rossi 2000; Chen and Petrounias 2000; Lee et al. 2001); and (6) frequent episodes discovery (Mannila and Rusakov 2001).
 also possesses some other consumer purchase behaviours. Specifically, it is important to understand the choice made by consumers, which, corresponding to the purchase tuitively, the substitutes are of analogous properties and therefore are often possible choices for customers. However, in some cases, the substitutes could be formed due to purchasing purposes. For example, the purchase of roses may be substituted for that of a Teddy bear and a box of chocolates. Also, to maximize the profit while min-imizing the risk, combinations of futures, government bonds, stocks and fixed assets are usual alternatives of investment targets for investors. The mining of substitution rules in a transaction database, as that of association rules, will lead to very valuable knowledge in various aspects, including market prediction, user behaviour analysis and decision support, to name a few. Desp ite its importance, th e mining of substitu-sence of the positive counterpart of the consequent itemset, meaning that X could be a substitute for Y . It is noted that some efforts were elaborated upon the mining of negative association rules where both items and their complements in a trans-action database are considered. In Savasere et al. (1998), the taxonomy of items a constraint-based approach is adopted in Boulicaut et al. (2000) to discover the nega-tive association rules. Notice, however, that in the negative association rule mining, the dependency of items in an itemset is not considered because the itemset fre-quency is the only measurement when generating frequent itemsets. In contrast, to be examined to identify concrete sets of items that are really purchased together by pendent 1 , is called a concrete itemset in this paper. Note that, if a frequent itemset is not concrete, that itemset is likely to consist of frequent items that, though appearing together frequently due to their high individual occurrence counts, do not possess adequate dependency among themselves and are thus of little practical implication to be used as a whole in either the antecedent or the consequent of a substitution rule. In addition, the negative correlation of two itemsets should be verified if these two itemsets are considered to be substitutes for each other. As a result, to generate the substitution rules, both the concreteness of itemsets and the correlation between two itemsets should be taken into account. Without considering these aspects, the rules.
 Consequently, we develop in this paper a new model of mining substitution rules. The process of mining substitution rules can be decomposed into two procedures. quent itemsets. The second procedure is the substitution rule generation. Two con-crete itemsets, X and Y , form a substitution rule, denoted by X Y to mean that
X is a substitute for Y , if and only if (1) X and Y are negatively correlated and (2) the negative association rule X  X  Y exists. Without loss of generality, the chi-square test (Hogg and Tanis 2000) is employed to identify concrete itemsets by sta-tistically evaluating the dependency among items in individual itemsets. Moreover, the Pearson product moment correlation coefficient (Hogg and Tanis 2000; John-son and Wichern 2002) is utilized to measure the correlation between two item-of these properties, the SRM (substitution rule mining) algorithm is designed and tistical significance. For comparison purposes, a companion method, which is ex-tended from the Apriori algorithm, called the Apriori-Dual algorithm, is also imple-mented.

Extensive experimental studies have been conducted to provide many insights into the SRM algorithm proposed. It is shown by empirical results that the overhead of processing complement items can be greatly reduced by the use of the technique on the induction of positive itemset supports. The quality of substitution rules in terms of statistical measurements is also evaluate d. It is shown by experiments that the SRM
SRM algorithm not only has very execution efficiency but also produces substitution (Aggarwal and Yu 1998). The advantage of SRM is even more prominent when the transaction database is more sparse.

The rest of the paper is organized as follows. The framework of mining negative in Sect. 3. Several experiments are conduc ted in Sect. 4. This paper concludes with
Sect. 5.
To facilitate our discussion, we shall first review the framework of association rules mining in Sect. 2.1. The mining of negative association rules is described in Sect. 2.2. The model of substitution rule mining is then presented in Sect. 2.3.
As in most prior work (Agrawal and Srikant 1994; Chen et al. 1996), an itemset is a set containing one or many items. The support of an itemset X , denoted by S the fraction of transactions containing X in the whole dataset. The itemsets that meet the minimum support constraint are called frequent itemsets. A frequent itemset is also termed a large itemset in related papers (Chen et al. 1996). An association rule is an implication of the form X  X  Y with X  X  Y =  X  ,where X and Y are both frequent itemsets. The support of the rule X  X  Y , i.e., Sup confidence of the rule X  X  Y , i.e., Conf ( X  X  Y ) ,is S transactions, the goal of mining association rules is to generate all rules that satisfy the user-specified constraints of minimum support and the minimum confidence, i.e.,
Sup ( X  X  Y )  X  MinSup and Conf ( X  X  Y )  X  MinConf.
Before the description of the mining of negative association rules, we define positive and negative itemsets as follows.

Definition 2.1. An itemset X is positive if and only if it contains no complement items, i.e., X ={ i 1 , i 2 ,... , i k } ,where i j is an item for 1 hand, the negative itemset is an itemset containing one or more complement items. If a negative itemset is composed of complement items only, i.e., this negative itemset is called a pure negative itemset and can be denoted by X .
According to Definition 2.1, all itemsets can be classified as either positive or nega-tive ones. An itemset could be either positive or negative in this paper unless spec-which either the antecedent itemset, the c onsequent itemset, or both are negative.
An example of mining negative itemsets through a naive approach is given below tended and comparatively analysed with the SRM algorithm in Sect. 4.
Example 1. Consider the transaction databas e in Table 1(a). We first append the complement items to each transaction as s hown in Table 1(b). For example, the transaction with TID = 1, i.e., { b , f } in Table 1(a), becomes
Table 1(b). The resulting database in Table 1(b) is the input to the itemset generation algorithm.

Table 1(b) as summarized in Table 2. Note that we are only interested in those complement items for which positive counterparts are frequent for market-basket analysis. As a result, the complement item e is not shown in Table 2 because the item e is not frequent.
 the mining of negative association rules can be performed by directly using methods devised for mining conventional association rules (Agrawal and Srikant 1994; Han complement items and also the additional itemsets resulted. Next, many of the fre-quent itemsets generated are composed of complement items only. These itemsets, use in real applications. Finally, extra database scans are needed for the mining pro-positive itemset is of size two, meaning tha t two extra database scans are needed for naive approach will suffer a prolonged execution time and make mining of negative association rules an infeasible task.
Once the negative itemsets are generated, one can discover all negative association rules in a straightforward manner. For two itemsets X and Y ,where Y
Y  X  ( X  X  Y ) is output if the required MinConf is satisfied. However, for our purpose of discovering substitution rules, two positive itemsets are required to form a substi-tute pair. Thus, the Apriori-Dual algorithm, i.e., a companion method extended from and consequent is pure negative, i.e., X  X  Y where X and Y are positive itemsets.
This means that the presence of the ant ecedent itemset may lead to the absence itemset provide no hint on substitutive itemsets and are thus ignored. Consequently, the rules generated by the Apriori-Dual algorithm form only a subset of all negative association rules. Also, the computation cost of algorithm Apriori-Dual is less than that of a naive negative associ ation rule generation process.

Algorithm 2.1. Apriori-Dual measurement when determining whether an itemset is meaningful or not. In add-the computation cost of algorithm Apriori-Dual is, as confirmed by our experimental
Dual algorithm for identifying substitute itemsets. Consequently, a new algorithm for mining substitution rules is proposed and will be described in later sections.
As mentioned before, the process of mining substitution rules can be decomposed into two procedures. The first one is to identify concrete itemsets among large square test (Hogg and Tanis 2000) is employed to identify concrete itemsets by statistically evaluating the dependency among items in individual itemsets. Also, the Pearson product moment correlation coefficient (Hogg and Tanis 2000; Johnson and
Wichern 2002) is utilized to measure the correlation between two itemsets.
Concrete itemsets are those possible itemsets that could be choices for customers with some purchasing purposes. To qualify an itemset as a concrete one, not only the purchasing frequency, i.e., support of an itemset, but also the dependency of items has to be examined to declare that these items are purposely purchased together by customers. To evaluate the dependence among items in an itemset (Meo 2000), one common approach is to utilize the chi-square test (Brin et al. 1997; Jermaine 2001; Theorem 1.

Theorem 2.1. Let X ={ x 1 , x 2 ,... , x k } be a positive k -itemset, the chi-square value for X is computed as where n is the number of total transactions, Y + denotes the positive itemset where all complement items in itemset Y are replaced by their positive counterparts, e.g., { a , b , c } + ={ a , b , c } where a , b and c are positive items, and E expected support of I .

Proof. Because the itemset X is of size k and the presence of an item in each transac-tion is 0-1 valued, a corresponding 2  X  2  X  X  X  X  X  2 k -dimensional contingency table can be constructed. Each dimension of this con tingency table corresponds to the presence of an item, i.e., x i  X  X , in each transaction. The values of these 2 actly the supports of itemsets { x 1 , x 2 ,... , x k } , { corresponding itemsets above can be formulated as { value is then computed by tingency table. For any itemset I and its corresponding cell c that I have With some algebraic manipulations, we have This completes the proof.
 are dependent, two contradictory hypotheses are made
With Theorem 1, to declare the dependency among items in an itemset X or to support hypothesis H 1 , the chi-square value for X is required to be no less than a threshold, i.e., Chi ( X )  X   X  2 df ( X ), X  .
 by where c (v i ) is the number of categories in dimension i , i.e., c 2 k cells in the contingency table subtracted by the number of constraints, i.e., k for k individual items and one for the total number of transactions.
 any superset of S is also correlated with significance level at a given significance level is upward closed (as stated in Theorem 1 in Brin et al. (1997).) However, as also noted in DuMouchel and Pregibon (2001) this upward is not upward closed is given in the Appendix f or interested reader s. Specifically, as rather than only minimally correlated ones, should be discovered. This in turn justifies the necessity of our development of the process to identify concrete itemsets in this paper.
 itemset that is positively correlated given a significance level e.g., {flashlight, battery, pencil), could still have a high chi-square value ( even though pencil is not so correlated with the other items.

Definition 2.2. A positive frequent itemset X ={ x 1 , x itemset if and only if (1) k = 1, or (2) k  X  2, where value of chi-square distribution with degree of freedom df that S X &gt;
The value of  X  2 df ( X ), X  can be obtained by table look-up. As mentioned earlier, the itemset { a , d } in Table 2, for example, S ad = 0 . chi-square value for { a , d } is
Thus, { a , d } is a concrete itemset.
To evaluate the correlation between two concrete itemsets, we adopt the measurement of Pearson product moment correlation coefficient (Hogg and Tanis 2000). Theorem 2 supports.

Theorem 2.2. Let X and Y be two itemsets with X  X  Y =  X . The correlation coef-ficient of X and Y can be formulated in terms of their supports. Explicitly,
Proof. According to the definition of correlation coefficient, we have and the variances are follows that
Consequently, we have This completes the proof.
 may use the phi coefficient of correlation as stated in Johnson and Wichern (2002) instead of  X ( X , Y ) in Theorem 2. However, the phi coefficient of correlation and the
Pearson product moment correlation coefficient are in fact algebraically equivalent and give identical numerical results. Therefore, for notational simplicity, we employ  X ( X , Y ) to express the results of Theorem 2.

Definition 2.3. Given two itemsets X and Y and X  X  Y =  X , X is a substitute for Y , denoted by X Y , if and only if (1) Both X and Y are concrete. (2) X and Y are negatively correlated, i.e.,  X ( X , Y )&lt;  X   X  (3) the negative association rule X  X  Y is valid, i.e., Sup
Given the definitions of concrete itemsets and substitution rules, a detailed description of the SRM algorithm for mining substitution rules is given in Sect. 3.1. To reduce the overhead of support counting for negative itemsets, a technique of the induction of positive itemset supports is developed in Sect. 3.2.
The algorithmic form of mining substitution rules can be outlined below, where the procedure of identifying concrete itemsets and the procedure of substitution rule generation are presented.
Algorithm 3.1. SRM // Procedure of identifying concrete itemsets // Input: MinSup, MinConf, and  X  min 1. Generate the set of all frequent (positive) items, i.e., L 2. For k  X  2 do{ . 3. Generate the candidate set of k -itemsets from L k  X  1 4. If ( C k is empty), then break. 5. Scan the transactions to calculate supports of all candidate k -itemsets. 6. L k ={ c  X  C k | S c  X  MinSup } . 7. For each frequent itemset X in L k do{ . 8. If ( S X &gt; 9. Add X to the set of concrete itemsets. 10. } 11. } // Procedure of substitution rule generation 12. For each pair of concrete itemsets X , Y do{ . 13. If (  X ( X , Y )&lt;  X   X  min . ) 14. If ( Sup ( X  X  Y )  X  MinSup ) &amp;&amp; (Conf( X  X  Y 15. output the substitution rule X Y ;// X  X  Y is valid. 16. }
The execution of the SRM algorithm can be best understood by the following example:
Example 3.1. Consider the transaction databas e in Table 1(a). The SRM algorithm first performs the procedure of identifying concrete itemsets, i.e., operations from line 1 to line 11 in the SRM algorithm. Given MinSup the frequent itemsets can be first obtained as in Table 3.
 The dependency among items in these frequent itemsets is then evaluated. By
Definition 2.2, chi-square tests of concreteness are performed on each k -itemset for k  X  2. The chi-square values of these frequent itemsets are shown in Table 3, where only two frequent itemsets are found concrete. Note that { because df ( { a , c , d } ) = 2 3  X  3  X  1 = 4and Chi ( {
Next, in the procedure of substitution rule generation, i.e., operations from line generated by joining these concrete items ets. By examining the support, confidence Ta b l e 4 .
 validate the negative association rules, respectively. This support evaluation is costly because extra database scans for support coun ting are required. Note that, with proper manipulation of Boolean logic, the support of a negative itemset can be represented in terms of supports of corresponding positive itemsets. This technique of obtaining the support of a negative itemset is called  X  X he induction of positive itemset supports. X 
For example, it can be verified that S x y = 1  X  S x  X  S y items. Consequently, we devise the following theorem, which exploits the relationship among items and their complements to reduce the corresponding overhead of the database scan for the supports of negative itemsets.

Theorem 3.1. (Induction of positive itemset supports) Let X be a negative itemset and X = Y  X  Z ,where Y and Z are both positive itemsets. The support of X relationship can be formulated as where len( I ) and len( Y ) are lengths of itemsets I and Y , respectively.
Proof. From probability theory, the DeMorgan X  X  laws states that if sequence of sets, then
Also, the probability of the union of events can be generalized as
Let Z ={ z 1 , z 2 ,... , z k } .Wedefine T 0 to be the event that itemset Y occurs in the transactions and T i to be the events that item z 1  X  i  X  k . By analogy, the probabilities of these events are
The joint probability of some T i s corresponds to the support of corresponding itemset. For example, p ( T 0  X  T 1  X  T 3 ) = S Y  X  X  z 1 Consequently, This completes the proof.

It is important to note that, in light of Theorem 3, repetitive database scans can be avoided because the supports of negative itemsets can be computed by those of corresponding positive itemsets. The overhead of generating negative itemsets, as mentioned in Sect. 2.2, can hence be greatly reduced.
As mentioned earlier, there are two operations in the SRM algorithm where support the chi-square value for an itemset X , the support can be directly evaluated through
Theorem 3. It is because X is frequent, each itemset in that formula, which is a sub-set of X , is also frequent and the corresponding support is already evaluated during dating the negative association rules, b ecause some positive itemsets required could be infrequent, extra database scans of these missing terms are needed. Nevertheless, the number of itemsets to be scanned can be greatly reduced if a proper estimation of supports is made.

Note that, in Theorem 3, each term is separated by alternate plus sign and minus sign, i.e., (  X  1 ) r = 1when r is even and (  X  1 ) r = X  1when r is odd. Also, the length practice. For a rule Y  X  Z to be valid, it is required that S  X  MinConf. In other words, as long as S true, the corresponding rule is valid. In practice, we can scan only the very first few terms, e.g., len ( I )  X  len ( Y ) = 1, 2 and 3, in Theorem 3 during the concrete itemset required itemset. Higher order terms are being scanned in batch only when a more precise estimation is needed. Consequently, the number of extra scans required can prominent improvement of execution efficiency of the SRM algorithm.
The simulation model of our experimental studies is described in Sect. 4.1. To assess the performance of SRM, we conduct two empirical studies based on the synthetic datasets. The execution efficiency of the SRM algorithm is examined in Sect. 4.2.
The quality of substitution rules generated is evaluated in Sect. 4.3.
To assess the performance of SRM, an algor ithm, referred to as Apriori-Dual algo-rithm, is extended from the Apriori algor ithm for comparison purposes. Recall that the Apriori algorithm primarily deals with positive items and generates positive as-by appending complement items to the original transaction database incur both an excessive storage space and a huge computational cost. Without the process of gen-erating rules with the required form as adopt ed by Apriori-Dual, the computation time of the naive approach for generating n egative association rules is shown by our experiments to be longer, by several orders, than those of both the Apriori-Dual and
SRM algorithms. Therefore, only the Apriori-Dual and SRM algorithms are being compared in the following experiments.
 algorithm in Srikant and Agrawal (1995). The first one is a dense dataset with T10.I50.D10K, denoted as D dense . The second one is a sparse dataset, denoted as
D sparse , with T5.I100.D10K. The values of parame ters used to generate the datasets are summarized in Table 5, where both the environments of dense and sparse dataset distributions are considered. Note that, although the SRM algorithm is particularly as well to ensure the generality of our study.
Figure 1 indicates that the SRM algorithm outperforms the Apriori-Dual algorithm in execution efficiency by a margin from 30 to 500% for the dense dataset D cient than Apriori-Dual. It is noted that the sparser the dataset, the further the SRM algorithm outperforms Apriori-Dual. Th is agrees with our intuition because, as the data is sparser, the overhead of negative itemset generation will become more severe, supports achievable by the SRM algorithm.
To evaluate the quality of a substitution rule, we may count the number of transac-tions that contain only one of the substitutive itemsets in the rule, i.e., the antecedent or the consequent. Hence, the violation ratio proposed in Aggarwal and Yu (1998) is adopted. An itemset I is said to be in violation of a transaction if some of the items correlation among the corresponding items. The fraction of violations of the itemset
I over all transactions is denoted by V ( I ) . The violation ratio is defined as the ratio form
Specifically, a pair of substitutive itemsets is said to be in violation if exactly only ratio of a rule, the more likely its anteceden t and consequent items ets are substitutes for each other. Note that the v iolation ratio of an interesting substitution rule should be larger than one.

The distribution curves for results of both sparse and dense datasets are depicted in Fig. 2. Because the numbers of rules gen erated by the Apriori-Dual and the SRM algorithms could be quite different in most cases, the percentage of population rather than the actual number of rules is used as the measurement for vertical axes in both uninteresting ones are also pres ented as pie charts in Fig. 2.
 of rules generated by the Apriori-Dual algorithm are uninteresting. In contrast, more than 98% of rules generated by the SRM algor ithm are interesting for both datasets.
Also note that the Apriori-Dual algorithm favours dense databases while the SRM algorithm performs well in each dataset, showing that the SRM algorithm is more adaptive and robust.
 Dual algorithm and the SRM algorithm, the scatter plots of results are presented in
Figs. 3 and 4. In addition to the violation ratio as mentioned earlier, the correlation taken as another measurement of interestingness.

MinSup = 10% ( D sparse ) and MinConf = 50%. The resulting rules by Apriori-Dual and SRM for the dense dataset are plotted i n Fig. 3 and those for the sparse dataset of the antecedent and the conse quent itemsets of the rule.
 the absolute values of correlation coefficients smaller than those obtained by target-ing at continuous attributes. This observa tion partly accounts for the reason that the correlation constraint in the SRM algorithm, i.e.,  X  min esting ones among those in all areas . The antecedent and the consequent of each and the consequent may not be proper substitutes for each other. Note that the rules generated by the SRM algorithm are mostly in Area I. In contrast, more than half of whereas the antecedent and the consequent of rules are positively correlated, these itemsets are deemed inappropriate for substitution rules.

Note that rules generated by the Apriori-Dual algorithm and the SRM algorithm are subsets of negative association rules. Also, only such a rule with a high violation ratio and a negative correlation is appropriate to become a substitution rule. It can be seen from Figs. 3 and 4 that the SRM algorithm can generate the most appropriate ones on the basis of negative association rules. Consequently, rules generated by the SRM algorithm are deemed to possess much better quality than those by the
Apriori-Dual algorithm. In this paper, a new mining capability, called mining of substitution rules, is explored.
The notion of evaluating the dependency among items in a concrete itemset proposed in this paper offers another dimension for itemset selection (in addition to the one of using the support threshold), thereby being able to lead to more interesting results in the subsequent rule derivation based on these itemsets. We have derived theoretical properties for the model of substitution rule mining and devised a technique on the induction of positive itemset supports to improve the efficiency of support counting for negative itemsets. In light of these properties, the SRM algorithm is proposed to discover the substitution rules efficiently wh ile attaining good statistical significance.
It is shown by empirical studies that the SRM algorithm not only has very good execution efficiency but also produces substitution rules of very high quality.
Consider a contingency table that is slightly modified from the one provided in Brin et al. (1997).
 with k , i.e., df ( { c , t } ) = 1and df ( { d , c , t } ) = level  X  = 0 . 05, it can be verified that Chi ( { c ,
Chi ( { d , c , t } ) = 4 . 49 &lt; X  2 { d , c , t } did not, meaning that the chi-squared statistic is not upward closed.
