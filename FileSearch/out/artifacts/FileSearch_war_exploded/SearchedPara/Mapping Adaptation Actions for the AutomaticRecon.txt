 The highly dynamic nature of domain ontologies has a direct impact on semantic mappings established between concepts from different ontologies. Mappings must therefore be main-tained according to ongoing ontology changes. Since many software applications exploit mappings for managing infor-mation and knowledge, it is important to define appropriate adaptation strategies to apply to existing mappings in order to keep their validity over time. In this article, we propose a set of mapping adaptation actions and present how they are used to maintain mappings up-to-date based on ontol-ogy change operations of different nature. We conduct an experimental evaluation using life sciences ontologies and mappings. We measure the evolution of mappings based on the proposed approach to mapping adaptation. The re-sults confirm that mappings must be individually adapted according to the different types of ontology change. D.2.12 [ Interoperability ]: Semantic Techniques Formalism, Design, Experimentation Ontology mappings, mapping evolution, mapping adapta-tion, mapping maintenance, ontology evolution
Ontologies offer means to make the semantics of infor-mation explicit. Different software applications from vari-ous domains use this formalism for supporting distinct tasks such as automatic reasoning, information retrieval [12], se-mantic data annotation [1], as well as data interpretation [13]. An ontology is normally constructed to cover a specific do-main, and interconnecting different ontologies is necessary if the underlying information is described by several ontolo-gies. Mappings are the materialization of the semantic rela-tions between elements of interrelated ontologies [6].
Creating mappings between ontologies is a complex task, and especially due to the increasing size of ontologies. To this end, alignment techniques have been proposed [6], but significant manual efforts of validation are still demanded if a certain level of quality is required [17]. In addition to the laborious work to create mappings, the dynamic nature of knowledge induces continuous changes in existing ontolo-gies. O ntology C hanges O perations (OCO) include revision, deletion and addition of ontology elements ( e.g. , attributes, concepts and relationships between concepts), which directly influence the reliability of mappings making them invalid.
This problem prevents software applications relying on mappings to fully exploit them. In order to avoid the costly ontology re-alignment process, it is crucial to have efficient strategies of mapping adaptation to keep mappings seman-tically valid ( i.e. , up-to-date). Manual maintenance of map-pings is an alternative only if modifications are applied to a restricted number of mappings. Otherwise supporting methods and automatic tools are required for large and highly dynamic ontologies. For example, biomedical on-tologies usually contain hundred of thousands of concepts interconnected via mappings. Therefore, tackling (semi-) automatically the reconciliation of dynamic ontologies may decrease the time and human efforts to maintain the seman-tic validity of mappings.

Coping with the mapping maintenance problem in a (semi) automatic way entails many research challenges. First, it is difficult to evaluate the real impact of the ontology evolu-tion on mappings. For instance, changing an attribute value may lead to invalidate a mapping in some cases. In these the different cases. Second, several types of OCO can be applied to an ontology, but it is unknown how these differ-ent types of operations should be duly taken into consid-eration for mapping adaptation. Thus, generally only the removal of concepts is addressed [15]. Third, the design of possible strategies of mapping adaptation according to the different types of OCO is preliminary coped within existing approaches. Fourth, the adaptation of mappings with sev-eral types of semantic relations need deeper studies [4].
In this article, we propose an approach to select the ap-propriate strategy for the (semi-)automatic adaptation of mappings according to the different types of OCO. For this purpose, we formalize M apping A daptation A ctions (MAA) expressing different behaviours of mapping adaptation that are used in the mapping maintenance process. The pro-posed approach faces a particular challenge in determining the most adequate concept of the context to be considered in the adaptation of each impacted mapping. In summary, we make the following contributions: The remainder of this article is structured as follows: Sec-tion 2 presents the preliminaries. Section 3 presents the proposed approach to mapping adaptation based on OCO. Section 4 presents the experiments. Section 5 describes the related work and Section 6 concludes this paper.
The definitions presented in this section are used to detail the addressed problem and to describe our approach. Ontology. An ontology O specifies a conceptualization of a domain in terms of concepts, attributes and relationships [9]. Formally, an ontology O = ( C,R,A ) consists of a set of concepts C interrelated by directed relationships R . A leaf concept has no sub concept . One concept may have one or more super concepts and/or sibling concepts . Each concept c  X  C has a unique identifier and is associated with a set synonym ...). Furthermore, each attribute is defined for a particular objective, e.g. ,  X  X abel X  for denoting concept names or  X  X efinition X  for giving the meaning in the context where the concept is used. Each relationship r  X  R is typically a ( e.g. ,  X  X s a X ,  X  X art of X ,  X  X dviced by X  ...) used to interconnect both concepts c 1 ,c 2 .
 Context of a concept. We define the context of a partic-ular concept c i  X  O as a set of super concepts , sub concepts and sib (sibling concepts) of c i , as following: where sup ( c i ) = { c j | c j  X  O,c i &lt; c j  X  c i 6 = c sub ( c i ) = { c j | c j  X  O,c j &lt; c i  X  c i 6 = c sib ( c i ) = { c j | c j  X  O,sup ( c j ) = sup ( c i )  X  c where c i &lt; c j stands for  X  c i is a sub concept of c definition of CT ( c i ) is specially designed as the relevant con-cepts to be taken into account in the settings of this inves-tigation on mapping adaptation.
 Mapping. Given two concepts c s and c t from two different ontologies, a mapping m st can be defined as: where semType is the semantic relation connecting c s and c . In this article, we differentiate relation from relation-ship , where the former belongs to a mapping and the later to an ontology. The following types of semantic relation are considered: unmappable [  X  ], equivalent [  X  ], narrow-to-broad [  X  ], broad-to-narrow [  X  ] and overlapped [  X  ]. For exam-ple, concepts can be equivalent ( e.g. ,  X  X ead X   X   X  X ead X ), one  X  X humb X   X   X  X inger X ) or concepts can be somehow semantically related (  X  ). The conf is the semantic similarity between c and c t indicating the confidence of their relation [6]. A status is useful for describing the state of a mapping during the adaptation process.
 Ontology change operations (OCO). We consider the ontology change operations presented in Table 1. They are classified into two main categories: atomic and complex changes. Each operation in the former can not be divided into smaller operations while each one of the latter is com-posed of more than one atomic operations. For instance, the operation chgA ( c,a,v ) is composed of two atomic oper-ations delA ( a,c ) and addA ( a,c ).
 Mapping adaptation problem. Given two versions of the same source ontology, namely O 0 S at time t 0 and O 1 time t 1 , one target ontology O 0 T , and an initial set of valid mappings M 0 ST between O 0 S and O 0 T at time t 0 . Suppose that the frequency of new releases of O S and O T are different and at time t 1 only O S evolves. Since this evolution is likely to impact the mappings M 0 ST , the necessary mapping adapta-tion actions are applied to M 0 ST to guarantee the mapping validity, generating M 1 ST . The validity stands for the log-ical consistency of the mappings. For instance, mappings are not established with removed concepts. The mapping adaptation problem, therefore, refers to the process that ex-isting mappings are modified according to changes affecting KOS entities in order to keep mappings valid and complete over time. Figure 1 illustrates the general scenario of this work where we consider that O 0 T and O 1 T are the same ( i.e. , OCO T =  X  ). Figure 1: Mapping adaptation based on ontology changes
A t o m i c
C o m p l e x by concept c j  X  O 1 x  X  sup ( c i ) and sub ( c i ) 6 =  X  from ontology O 0 x  X  sup ( c i ) and sub ( c i ) =  X  from ontology O 0 x  X  sup ( c i ) and sub ( c i ) =  X  to the ontology O 1 x
We present an approach to adapting semantic mappings based on different types of ontology changes (Table 1). The proposal explores the CT of the mappings X  source concept (CT( c s )) for adapting mappings individually. Given a map-ping m st associated to a concept c s affected by changes in the ontology, the challenging issue is to determine an exact and suited action of adaptation to apply to m st in order to keep such mapping up-to-date. To address this challenge, we define and formalize a set of mapping adaptation actions (MAA). We aim at using MAA as pre-defined behaviours of mapping adaptation into algorithms designed to main-tain the semantic validity of mappings according to ontology changes. Based on the nature of different types of OCO, we propose algorithms to determine the most adequate MAA for each mapping impacted by an ontology change. Regard-ing the adaptation process, the algorithms consider different delimitations of the CT( c s ) according to the types of change. The necessary instances of OCO are identified from one on-tology version at time t 0 to another at time t 1 with a diff computation [10]. It generates a diff which is basically a set of changes identified between two versions of ontologies. This article considers only the changes affecting O
We have previously designed and evaluated an algorithm for identifying the most relevant concept X  X  attributes based on which mappings are defined [3]. Given a mapping m st between two concepts c s  X  O S and c t  X  O T , the proposed al-gorithm, namely getTopA ( m st ), retrieves the minimum set of source concept X  X  attributes that are the most similar to the ones in the target concept. Attributes are retrieved the edit-distance similarity measure [14] is used to quantify the semantic relatedness between concepts X  attributes. The proposition of selecting top attributes is to identify key ele-ments used to define existing mappings. The top source con-cept X  X  attributes selected are then exploited for supporting the adaptation of mappings according to ontology changes. In what follows, we describe and formalize the proposed MAA (Section 3.1). Afterwards, each section is devoted to a set of OCO. For each section, we propose an algorithm illus-trating the adaptation of mappings which explores getTopA , MAA and CT . Particularly, Section 3.2 concerns the adap-tation of mappings based on OCO regarding revision of con-cepts . Section 3.3 accounts for the changes of removal of at-tributes and concepts , and Section 3.4 presents the approach to tackling the addition of attributes and concepts .
We propose five distinct actions that represent different possibilities for adapting mappings: remove , addition , move , derivation and modification of mappings. In the follow-ing, we formally describe each action. To this end, let m st  X  M 0 ST (resp. m 1 st  X  M 1 ST ) be the mapping between two particular concepts c 0 s  X  O 0 S (resp. c 1 s  X  O 1 S ) and c that c t does not change while the concept c s evolves from one ontology version to another.
 Remove of mapping. This is an atomic action through which a mapping m 0 st is deleted from M 0 ST : Addition of mapping. This is an atomic action through which a new mapping m 1 st is added to M 1 ST : Move of mapping. This is a composed action for which an existing mapping from M 0 ST is re-allocated in M 1 ST the source concept is different. This action is important for adapting mappings by reusing an existing mapping which can be considered invalid in M 1 ST due to OCO affecting c The mapping is thus adapted considering its CT ( c s ). where sim ( c i ,c j ) denotes the similarity between c i Derivation of mapping. This is a composed action for which an existing mapping in M 0 ST has a modified copy in M
ST with a different source concept. This action is impor-tant for reusing an existing mapping, which is still consid-ered as valid in M 1 ST . Modification of semantic relation. This is a composed action in which the type of the semantic relation of a given mapping is modified. This action is designed for supporting the adaptation of mappings with different types of semantic relations rather than only considering the type of equiva-lence relation (  X  ). modSemTypeM ( m st ,new semType st )  X  X  X  m 1 st  X  M 1 ST  X  semType 1 st = new semType st  X  semType 1 st 6 = semType 0 semType 1 st  X  X  X  ,  X  ,  X  ,  X  ,  X  X  The action for the modification of semantic relation can be applied in conjunction with the actions of move or derivation of mapping. That is when moving/deriving a mapping, it is also possible to modify the type of the semantic relation of such mapping.
The revision of knowledge in ontology is performed by the following OCOs: chgA ( c,a,v ) ,sub ( c i ,c j ), merge ( C tions is that the involved concepts have some semantic sim-ilarity. There is normally a flow of information between concepts belonging to the same complex change that should be explored when adapting mappings. Algorithm 1 presents the proposed strategy for adapting mappings associated to concepts affected by revision OCOs. These mappings are adapted considering a delimited context, which is repre-sented by the concepts resulting from the complex change. The resulting set of concepts in these operations is C CT ( c 1 i ) such that c j  X  C r (for substitute and merge ). Note that C r  X  CT ( c i ) represents a delimited context for adapt-ing mappings. Algorithm 1 is applied for all instances of revision OCO retrieved from the diff O 0 Concepts in these operations are the input of Algorithm 1. Indeed, it requires two different set of concepts: C k  X  O representing the original concepts before evolution and C O
S the resulting concepts in the complex change. The in-put concepts of these sets are based on the type of OCO as well as the context where mappings are adapted. Mappings associated with concepts affected by chgA operation are not adapted considering other concepts of the context. In the substitute and merge operations, an initial concept c i  X  O or a set of concepts C k  X  O 0 s (in case of merge ) gives place to a concept c j  X  O 1 s . The input data of the algorithm by these two types of operations are c i  X  C k for substitute and C k for merge while c j  X  C r is used in both operations, which
Algorithm 1: Adaptation of mappings according to re-vision of knowledge in ontology
Require: C k  X  O 0 S ; C r  X  O 1 S 10: for all a r  X  A ( c r ) do 11: s nr  X  sim ( a n ,a r ); 12: S  X  S  X  X  ( a r ,s nr ,c r ) } ; 13: end for 14: end for 15: end if 16: end for 17: if S 6 =  X  then 18: S  X  sort ( S ); { sort results } 19: c f  X  getFirst ( S ); 20: if c f  X  O 1 S then 21: moveM ( m ij ,c f ); 22: modSemTypeM ( m ij ,semType ); 23: end if 24: else 25: if mapImpacted = TRUE  X  c i /  X  O 1 S then 26: removeM ( m ij ); 27: end if 28: end if 29: end for 30: end for is the delimited context considered. In the split ( c i ,C initial concept c i  X  O 0 s gives place to a set of (new) related ones in C r  X  O 1 s . In this case, the input is slightly different from substitute and merge . In split , c i  X  C k with many resulting concepts in C r .

In Algorithm 1, moveM action is proposed to adapt an im-pacted mapping by one of the concepts belonging to C r . Par-ticularly, in chgA operation, the moveM action always con-siders the same concept identifier in O 1 S , while in substitute and merge operations, if a move of mapping occurs, it is related to the concept c j . Only attributes identified by the algorithm getTopA , representing the most important attributes for defining mapping m ij , are concerned in the adaptation process. The result of the Algorithm 1 is that all mappings associated with a concept c 0 i  X  C k are moved to a concept c 1 j  X  C r (modifying the semantic relation when necessary) or are removed.

According to Algorithm 1, given a concept c i  X  C k (line 1), it first selects the mappings associated with the concept c (line 2). These mappings are adapted individually and for each of them, the algorithm applies the getTopA ( m to identify the relevant attributes of c i . Based on this re-sult, it checks whether the selected attributes are affected by a delA ( a ) change operation (line 7). In this case, the map-ping is assigned as an impacted mapping since a relevant in-formation defining mapping m ij was removed. If a selected attribute is affected, the mapping is likely to be adapted. We assume that mappings associated with unchanged attribute values remain valid. When a mapping m ij is impacted, Al-gorithm 1 explores C r (line 9) by finding a candidate concept to perform a move of mapping. If concept c i remains in O i.e. , c i = c r  X  C 1 r , a mapping m ij can remain attached to this concept whether the most similar attribute value is still found in this concept. However, it is necessary to guarantee that concept c r remains active in O 1 S . Similarly, in merge operation, if c 1 j = c 0 k  X  C k , then the associated mapping can be moved to the same source concept ( i.e. , it is still associ-ated with the same source concept identifier at time t 0 and t ). The evaluation in Section 4 considers these mappings as unchanged .

Differently, the mapping can be moved to another result-ing concept c r , e.g. , c r  X  sib ( c i ), such that c c 6 = c i . The most adequate candidate is calculated based on the semantic similarity between the value of affected at-tributes selected for a mapping and the attributes X  value of each concept in C r (line 11). The best candidate contains the highest similarity value by sorting S (line 18) which is used to apply a moveM action (line 21). If no candidate is found, so there is no concept c r  X  C r that contains explicitly a piece of conceptual information the mapping m ij was re-lated to, or if the mapping was assigned to impacted, since a relevant attribute identified was deleted, the algorithm pro-poses a removeM action (line 26).

Figure 2 presents the general idea of adapting mappings according to the revision of knowledge in ontologies. Given the evolution of the concept c s 1  X  O 0 S , three mappings were associated with this source concept at time t 0 . After evo-concepts on which a mapping m 1 remains attached to c s 1 and two other mappings are moved to resulting concepts accordingly.
 Figure 2: Mapping adaptation according to the re-vision of attributes and concepts
The removal of knowledge in ontology includes the OCOs mally, these operations are less frequent compared to the others, since there is a natural tendency to expand the knowl-edge in the ontology rather than the removal of knowledge. They are usually applied when concepts turn out of scope. Anyway, they can have a great impact on the validity of ex-isting mappings.

Algorithm 2 presents the proposed strategy for adapt-ing mappings associated with concepts affected by removal-based OCOs. The input of the algorithm is the set of con-cepts from the diff O 0 concept(s). We assume that the deletion of a concept (or its assignment to obsolete) is the consequence of deleting all at-tributes (or assigning them to obsolete). Since our approach tackles the ontology mapping adaptation based on the infor-mation at the level of attributes, the designed algorithm is suited for handling deletion changes affecting either the en-tire concept and/or the attributes as a part of the evolving concept. In Algorithm 2, the moveM action is proposed to adapt an impacted mapping m ij to one of the concepts in the CT( c i ), instead of directly removing the mapping. For this purpose, only attributes identified by the algorithm getTopA are considered.

Algorithm 2: Adaptation of mappings according to the removal of knowledge in ontology
Require: C rem  X  O 0 S ; { concepts having at least one 10: for all c w  X  CT ( c i ) do 11: for all a w  X  A ( c w ) do 12: s nw  X  sim ( a n ,a w ); 13: S  X  S  X  X  ( a w ,s nw ,c w ) } ; 14: end for 15: end for 16: end if 17: end for 18: if S 6 =  X  then 19: S  X  sort ( S ); { sort results } 20: c f  X  getFirst ( S ); 21: if c f  X  O 1 S then 22: moveM ( m ij ,c f ); 23: modSemTypeM ( m ij ,semType ); 24: end if 25: else 26: if mapImpacted = TRUE then 27: removeM ( m ij ); 28: end if 29: end if 30: end for 31: end for
According to Algorithm 2, given a concept c i affected by a removal change operation (line 1), it first selects all deleted attributes of concept c i and the mappings associated with the concept (lines 2-3). For each mapping, it applies the al-gorithm getTopA to identify the relevant attributes. Then, it checks whether the selected attributes belong to a deleted tribute is deleted, the mapping must be adapted. When a mapping is impacted, Algorithm 2 explores the CT( c i ) (line 10) by finding a candidate to perform a move of the map-ping. Different from the revision of knowledge, there is not a well-delimited context of resulting concepts of a complex change, and thus the algorithm searches for the best can-didates among all super, sub and sibling concepts. To this end, it calculates the semantic similarity, among the value of the affected attributes selected for a mapping with the value of attributes of each concept of the CT( c i ) (line 12), in order to select possible candidates for applying a moveM action. The best candidate considered contains the highest similarity value by sorting S (line 19-20). If the candidate is found, a move of mapping is applied towards the selected concept of the CT( c i ) (line 22). If no candidate is found, and the mapping was impacted by a change in at least one at-tribute of the corresponding source concept among the ones identified as top related attributes for defining the mapping, then the algorithm proposes a removeM action (line 27).
Figure 3 presents the general idea of adapting mappings according to the removal of knowledge in ontologies. Given the evolution of the concept c s 1  X  O 0 S , three mappings were associated with this concept at time t 0 . After evolution, some attributes belonging to c s 1 are deleted or the whole concept is deleted, and in consequence one mapping is re-moved while two others are moved to concepts in the context Figure 3: Mapping adaptation according to the re-moval of attributes and concepts
Addition of knowledge in ontology is performed by addA ( a ), addInnerC ( c ), addLeafC ( c ) and revokeObsolete ( c ). When handling these OCOs, the proposed strategy of mapping adaptation explores the action of derivation of mappings. In order to generate a complete M 1 ST as a result of mapping adaptation, we aim to reuse mappings associated with con-cepts, which are in the context of a concept affected by an addition OCO, benefiting of already valid established map-pings.

Algorithm 3 presents the approach to adapting mappings by deriving them according to addition OCO. The input of the algorithm is the set of concepts obtained from the diff O S which are affected by some addition of attribute(s). Note that when an addition of concept occurs (even inner or a leaf concept) or a concept is assigned to revokeObsolete , we assume that the whole set of attributes is also added. Simi-larly, as proposed in Algorithm 1 and 2, the approach here also tackles the ontology mapping adaptation based on the information in the level of attributes. Hence, the designed algorithm is suited for handling addition changes affecting the entire concept or in the level of attributes.

Algorithm 3: Adaptation of mappings according to the addition of knowledge in ontology
Require: C add  X  O 1 S ; { concepts having at least one added 10: for all a n  X  TopA m kj do 11: if delA ( a n ) /  X  diff O S then 12: for all a w  X  A addc i do 13: s nw  X  sim ( a n ,a w ); 14: S  X  S  X  X  ( s nw ,m kj ) } ; 15: end for 16: end if 17: end for 18: end for 19: end for 20: if S 6 =  X  then 21: S  X  sort ( S ); { sort results } 22: m f  X  getFirst ( S ); 23: deriveM ( m f ,c i ); 24: modSemTypeM ( m f ,semType ); 25: end if 26: end if 27: end for
The reasoning behind Algorithm 3 is that existing map-pings associated with concepts of the context of the new (attribute) concept are considered candidate mappings to be adapted for putting in correspondence the concept affected by an addition OCO. Given a concept c i affected by an addi-tion OCO (line 1), Algorithm 3 first verifies if the concept c has still no mapping associated. Concepts already mapped are not taken into account. Afterwards, the algorithm se-lects the added attributes and the concepts of the context of c (lines 3-4). For each one of these concepts, the associated mappings are selected. For each mapping m kj , Algorithm 3 applies the getTopA ( m kj ) for identifying the relevant at-tributes. Based on this result, the algorithm checks whether the set of attributes identified belongs to a deleted attribute of the concept (line 11). If the attribute is not affected by a change, the mapping m kj remains valid. In this case, it can be considered as an adequate candidate for the derivation. Using the method of calculating the semantic similarity be-tween attributes X  value, a selection of candidate mappings is performed. The best candidate in sorted S contains the maximum similarity value (line 21-22). If a candidate map-ping is found, the derivationM action is applied using the selected mapping associated with a concept of the CT( c (line 23).

Figure 4 presents the general idea of adapting mappings according to the addition of knowledge in ontologies. Con-sider the ontology at time t 0 including concepts containing mappings ( m 1 , m 2 , m 3 ). After evolution, a new concept c 1 is added and a mapping related to a super concept is derived considering c s 1 and the same target concept c t the original mapping m 1 .
 Figure 4: Mapping adaptation according to the ad-dition of attributes and concepts
In order to evaluate our approach we select a set of on-tologies and mappings (Section 4.1). We then conduct a series of experiments to evaluate the three proposed map-ping adaptation strategies (Section 4.2). We present the obtained results in Section 4.3.
We use three large life sciences ontologies: SNOMED-CT (SCT), NCI Thesaurus (NCI) and ICD-9-CM (ICD). Table 2 depicts some statistics regarding the number of concepts, at-tributes or terms denoting concepts, and the number of re-lationships between concepts. In this study, we focus on ex-ploiting the hierarchical structure of ontologies. Therefore, relationships in Table 2 correspond to the number of direct subsumption relationships between concepts. Furthermore, we consider the interval of three years from 2009 to 2012 to demonstrate the evolution of ontologies over time when studying the different strategies of mapping adaptation. Ta-ble 3 shows the quantity of mappings established between various releases of SCT and NCI, SCT and ICD, respectively from 2009 to 2012. Mappings between SCT and NCI are es-tablished between versions in the same year, while the ones between SCT and ICD are established between SCT of ver-sion released in year x and ICD of version released in year x  X  1. Table 4 shows the quantity of changes in ontology per categories of ontology changes studied in the experiments as well as the total number of analyzed mappings associated with evolving concepts.

ICD #Concepts #Attributes #Relationships 2009 12734 34065 11619 2011 13059 34963 11962
SCT #Concepts #Attributes #Relationships 2009 386965 1531288 523958 2012 395346 1570504 539245
NCI #Concepts #Attributes #Relationships 2009 77448 282434 86822 2012 94732 365515 105406 Table 2: Statistics of source and target ontologies
SCT-NCI #Mappings SCT-ICD #Mappings 2009-2009 19971 2010-2009 84519 2012-2012 22732 2012-2011 86638
Table 3: Statistics of mappings between ontologies The objectives of the conducted evaluation are two-fold. First, we aim to evaluate the utility to adapt each map-ping individually based on different types of OCO according to the proposed strategies of mapping adaptation. Second, we assess the effectiveness of the proposed strategies. More specifically, our objective is to determine to which extent the different MAAs suggested can be applied individually for each mapping where the source concept suffers at least from one OCO.
 We conduct the following procedure in the evaluation. First, we identify OCO for each pair of released versions starting from 2009 until 2012 of SCT, ICD and NCI using the COnto-Diff [10] tool. This generates a set of diff O each ontology. For each diff we keep only the most rele-vant types of operations studied in this evaluation. Indeed, we focus on changes in attributes of concepts; therefore, we retain nine OCOs at the level of concepts as presented in Table 4. Then, for all affected concepts of OCO identified in the diff O S , we select the impacted mappings in M 0 ST produces for each type of change a particular subset of map-pings which are further examined. In order to analyze the results within a global view, for each type of OCO we group all instances of changes identified in the calculated diffs of all ontologies ICD, SCT and NCI. Here, mappings are studied independently from the ontology structure. With this as-sumption the subset of associated mappings is also grouped accordingly and the total number of mappings are shown in Table 4. Based on the proposed approach to adapting mappings as described in the algorithms, we evaluate the behaviour of each individual mapping according to the pro-posed MAAs for each type of OCO. To this end, given a mapping m 0 st  X  M 0 ST and based on the type of OCO affect-ing the source concept, we verify that m 1 st  X  M 1 ST calculat-ing the applied MAA. For each subset of mappings under analysis according to the OCO, we measure the proportion of each type of MAA correctly identified in the mapping evolution from one release to another.
The results are classified according to the nature of the on-tology changes. Figure 5 considers OCO related to revision, removal and addition of knowledge in ontologies. It depicts the percentage of MAAs applied for the studied mappings.
Revision
Removal
Addition
For the revision of knowledge, we notice that the MAA moveM ( C r ) has been applied with a percentage of 64.69% for the split operation in source concepts. We observe that in some cases, two MAAs moveM ( C r ) and modSemTypeM can be simultaneously applied with a percentage of 10.26%. For merge operation, mappings are adapted by applying moveM ( C r ) (22.04%) or removeM (18.64%). In the case of substitution of concepts, mappings are more frequently removed (66.67%). The latter can be explained by the fact that whenever the relevant attributes identified in the source concept, which is replaced by another one, are not found in the latter then the mapping is removed. This highlights the relevance of the proposed technique of retrieving the top attributes identified from existing mappings impacted by a change in the resulting concepts of the change.

For the removal of knowledge, mappings can be adapted by removing or moving the source concept to a concept in its context. When a concept is assigned to toObsolete , several MAAs are applied, but at different frequencies: moveM ( sup ) X  moving the source concept to a super concept (65.26%), moveM ( sib ) X  X oving the source concept to a sibling concept (22.71%) and removeM  X  X emoving the mapping (9.27%). Ob-serve that mappings are mostly moved to a super concept rather than removed. Mappings are mainly moved to sib-ling concepts ( moveM ( sib )) when occuring OCO delLeafC (50%). This MAA is also applied for a significant percent-age of mappings (37%) where the source concept is affected by the OCO delInnerC , but mappings are more frequently removed (48%) when inner concepts are deleted. This shows the importance of considering the context with different hi-erarchical relationships for mapping adaptation.

For the addition of knowledge, most of the time, if there is a new concept added, then a new mapping is established for this concept ( i.e. , the addM action is applied) while the derivation of mappings ( deriveM ) is applied only for a small number of mappings. It stresses the importance of other fac-tors for supporting the mapping adaptation particularly for the addition of knowledge.

At this level, we aim to evaluate the behaviours of map-pings under evolving ontologies considering each ontology separately. Figure 6 presents a closer analysis examining the three most important OCOs containing the higher num-ber of associated mappings (see Table 4): split , toObsolete and addLeafC . The results show that MAAs are applied depending on the characteristics of the source ontologies and the way that they evolve over time, i.e. , the OCOs observed during their evolution. For example, when the source con-cepts are split into several ones, we observe that the MAA moveM ( C r ) is applied at a percentage of 83.94% for ICD while this action has not frequently been applied for SCT and NCI. The removedM action is also applied but with a very low percentage. This highlights the necessity of care-fully searching for the relevant conceptual content related to mappings in the context of source concepts and adequate hi-erarchical relationships between evolving concepts in order to reach a high quality of mapping adaptation. The ob-tained results reveal that considering the delimited context of complex changes for handling revision OCO and the CT for removal OCO is a relevant approach to adapting map-pings. The proposed mapping adaptation strategies based on the MAA according to the OCO can be applied mainly in cases of revision and removal of knowledge in ontologies. A refined strategy in the addition of knowledge requires further studies, but it is not so severe since addition of knowledge is relevant to have a more complete final set of adapted map-pings and the impact on the invalidation of existing map-pings is low. Results allow to point out the importance of mapping maintenance considering the adaptation of in-dividual mappings. The candidate MAA shall be carefully analyzed for each mapping. Furthermore, there have been evidences that mappings associated with the same type of OCO behave differently, and the designed algorithms are suited to adapt mappings individually based on the concep-tual context where they are.
Different approaches have been proposed to ontology rec-onciliation under evolution. Three main categories of work can be distinguished. The first one is based on a revision of mappings by identifying and repairing invalid mappings. Meilicke et al. [16] propose an automatic debugging of map-pings between expressive ontologies eliminating inconsisten-cies, caused by erroneous mappings, by means of logical di-agnostic reasoning. Similarly, Castano et al. [2] suggest a probabilistic reasoning approach for performing the valida-tion of mappings with regard to the semantics of the ontolo-gies involved. These techniques can be applied at ontology evolution time to detect the invalid mappings. However, it demands logically expressive ontologies requiring a high level of formalization.

The second category is based on a full or a partial re-calculation of mappings. While the former does not consider any information from either ontology evolution nor existing mappings, the latter aims at exploiting this information for recreating only mappings that are associated with changed frequently released, the full re-calculation of mappings be-comes less flexible than a partial re-calculation approach be-cause the costs in terms of processing time for re-aligning ontologies is too expensive. A partial re-calculation ap-proach is proposed by Khattak et al. [11], re-creating only those mappings associated with concepts whose elements have changed. Matching algorithms are used to perform a new alignment between changed concepts issued from source ontology and the whole target ontology. However, large on-tologies, as in the life sciences, so far represent a big chal-lenge for methods of mapping calculation [17].

The third category concerns approaches that attempt to adapt mappings in response to ontology evolution. Ontol-ogy changes are usually used to support mapping adaptation avoiding to perform calculations for re-aligning ontologies. The first propositions appeared in the context of database schema mappings [19] based on primitive schema changes. Composition of mappings [20] is an approach for adapting mappings in which mappings between different schema ver-sions are explored. Concernia ontologies, Tang &amp; Tang [18] propose a method for ontology evolution whose objective is to find the minimal impact of ontology change propaga-tion. Martins &amp; Silva [15] propose that evolution of map-pings should behave similarly with the strategies applied for ontology evolution, but mappings are only adapted when concepts are removed. Aiming at better understanding the mapping evolution, Gross et al. [8] empirically investigated the evolution of life science ontology mappings.

We have conceptualized a framework [5] for supporting the adaptation of semantic mappings highlighting different as-pects such as: the role of different types of ontology changes, the importance in considering the conceptual information which established mappings are related to, as well as the relevance of the different types of semantic relation of map-pings. We also have investigated semi-automatic approaches to adapting ontology mappings when at least one of the mapped ontologies evolves [7]. However, the selection of the most appropriate strategies of mapping adaptation consid-ering each existing mapping individually still remains a re-search challenge. In order to address it, this article proposed actions suited to adapt mappings considering particular de-cisions of adaptation. We presented how these actions are correlated to different types of OCO. We further analyzed the evolution of mappings based on the proposed approach.
The continuous evolution of domain ontologies requires the maintenance of mappings established between them to keep the validity of mappings over time. In this article, we proposed an approach to mapping adaptation based on a categorization of ontology change operations. More specif-ically, our approach aimed at determining the most rele-vant actions to perform on existing mappings based on both conceptual information identified for mappings and ontology changes calculated between different versions of ontologies. In order to correctly adapt mappings, we needed to look inside the content of evolving source concepts. The con-ducted experiments, analysing large life sciences ontologies and their associated mappings, highlighted important facts with respect to mapping adaptation showing evidences of the significance of the proposed approach. The experimental results mostly revealed the relevance of applying particular actions for adapting individual mappings in the maintenance process.

In future work, we plan to refine the MAA defined in this study and investigate additional factors to which MAA shall be applied in order to better support the automatic mainte-nance of mappings under evolving ontologies. This work is entirely supported by the National Research Fund (FNR) of Luxembourg (grant C10/IS/786147) under the DynaMO research project. [1] O. Bodenreider and R. Stevens. Bio-ontologies: [2] S. Castano, A. Ferrara, D. Lorusso, T. H. N, and [3] D. Dinh, J. Dos Reis, C. Pruski, M. Da Silveira, and [4] J. Dos Reis, C. Pruski, M. Da Silveira, and [5] J. Dos Reis, C. Pruski, M. Da Silveira, and [6] J. Euzenat and P. Shvaiko. Ontology matching . [7] A. Gro X , J. C. Dos Reis, M. Hartung, C. Pruski, and [8] A. Gro X , M. Hartung, A. Thor, and E. Rahm. How do [9] T. R. Gruber. A translation approach to portable [10] M. Hartung, A. Gross, and E. Rahm. COnto-Diff: [11] A. Khattak, Z. Pervez, K. Latif, and S. Lee. Time [12] Y. Kitamura and S. Segawa. Deep Semantic Mapping [13] P. Lambrix, L. Str  X  omb  X  ach, and H. Tan. Information [14] E. Maedche and S. Staab. Measuring Similarity [15] H. Martins and N. Silva. A User-Driven and a [16] C. Meilicke, H. Stuckenschmidt, and A. Tamilin. [17] P. Shvaiko and J. Euzenat. Ontology Matching: State [18] F. Tang and R. Tang. Minimizing Influence of [19] Y. Velegrakis, R. J. Miller, and L. Popa. Mapping [20] C. Yu and L. Popa. Semantic adaptation of schema
