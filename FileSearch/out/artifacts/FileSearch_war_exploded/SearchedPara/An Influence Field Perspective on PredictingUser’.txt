 Due to its dual role of social network and news media [ 1 ], the micro-blogging systems have become an important platform for people to acquire information. In a typical micro-blogging system (e.g., Twitter), users are allowed to publish short messages with a limitation of 140 characters (i.e., posts or tweets). Unlike other social-networking services, micro-blogging introduces a new relationship named  X  X ollow X , which enables users to access a filtered timeline of posts from anyone else they care about without any permission. The retweet mechanism, which provides a convenient function for users to share information with their followers, has become a hot spot in the field of social network analysis. address the retweeting prediction problem. Intuitively, people tend to retweet the posts with the content they are interested in. Therefore, the content-based features are widely used in the existing works [ 2  X  4 ]. Actually, the reality is much more complicated because besides users X  intrinsic interests, users X  behaviors on social networks may be also caused by the influence of other users [ 5 , 6 ]. For example, a user retweets a post about  X  X orld Cup 2014 X , the reason behind this retweeting might be: (1) he is a soccer fan and he is interested in  X  X orld Cup 2014 X  (2) he is attracted by a post about  X  X orld Cup 2014 X  because it has been retweeted by his intimate friends. As a result, social-based features are also important for addressing the retweeting prediction task [ 7 , 8 ]. However, the social-based features applied in the previous studies are mainly author-oriented, in other words, they mainly focus on the relationship between the current user and the author of the post, while the influence from other influential users (espe-cially the close friends of the current user) is neglected.
 In this paper, we interpret retweeting behavior as an outcome of the influence. In fact, everyone has a certain amount of potential influence [ 9 ], and the influence of user A to user B is negatively correlated with the  X  X istance X  between them. For instance, the influence of A to one of his closest friends is likely to be greater than the influence to a long-forgotten acquaintance. Inspired by this, we make an analogy between the users in the micro-blogging environment and the electric charges in an electric field and assume that every user has an  X  X nfluence field X  around himself, then we employ the field theory in physics to interpret users X  retweeting behavior.
 The major contributions of our paper are as follows: (1) We propose the conception of  X  X nfluence field X  and borrow the field theory in traditional physics to model the influence between the users in the micro-blogging. (2) By defining different types of influence, we apply the  X  X nfluence field X  to address the retweeting prediction task. Our  X  X nfluence field X  model not only considers the influence of all the potential influential-users, but also takes account of the inherent relationship among different features. We evaluate our approach on a large dataset from Sina Weibo, which is the most popular micro-blogging in China. The experimental results demonstrate that our  X  X nfluence field X  model is indeed effective. (3) Although our work has been done in the context of Sina Weibo, we expect that the  X  X nfluence field X  conception would hold for many other social-network platforms(e.g., Twitter and Facebook). A better understanding of the user retweeting behavior is of great significance. Since retweeting plays a crucial role in the information propagation in the micro-blogging systems, researchers have completed a lot of interesting work through analyzing users X  retweeting behavior, such as rumor identification [ 10 ] and break news detection [ 11 ]. Furthermore, retweet is also employed as an important pro-file to build the user interest model in many personalized applications such as recommender system [ 12 ].
 et al. [ 13 ] pointed out that there are diverse motivations for users to retweet, such as for spreading information to other users, saving the valuable posts for future personal access, commenting on someone X  X  post in the form of incidental retweeting, etc. Macskassy and Michelson [ 14 ] studied a set of retweets from Twitter, they claimed that the content based propagation models could explain the majority of retweeting behaviors they saw in their data.
 predict the users X  retweeting behavior as well as analyze the effects caused by different features. Some of these works [ 15  X  17 ] predicted retweeting from a global perspective which aimed to forecast whether a post will be popular in the future. There are also some studies which conducted the prediction to the individual level and manage to answer the question whether a post will be retweeted by a specific user. For example, Luo et al. [ 3 ] proposed a learning to rank based framework to discover the users who are most likely to retweet a specific post. Peng et al [ 2 ] applied conditional random fields(CRF) to model and predict the users X  retweet patterns. The authors of [ 18 ] address this problem by means of executing constrained optimization on a factor graph model. There are also many works [ 4 , 7 , 8 ] in which the authors considered the individual level prediction as a classification task and then built effective classifiers to address this problem. reflected in two aspects. One is that we emphasize the impact of all the influential users rather than only the author of the post, the other is that we integrate diverse features as well as their correlation to model user X  X  retweeting behavior. In this section, we first describe the conception of  X  X nfluence field X  in detail, and then present the calculation of the elements in the  X  X nfluence field X  model. Finally, we introduce the classifier based on  X  X nfluence field X  to address the retweet prediction task. 3.1 The Conception of Influence Field The intuitive idea behind our approach is that a user X  X  behavior is usually influ-enced by others. Take retweeting as an example, we suppose that user A has a certain probability P po u A to retweet a post po about  X  X ata mining X . If A notices that another user B has retweeted po , then P po u A may increase due to the influence of B .If B is a famous expert on  X  X ata mining X , P po u A will be even larger. More-over, as people are easy to be affected by their close friends in many cases [ 19 ], for this reason, if B happens to be a good friend of A , P increased. To sum up, user X  X  (e.g., B ) impact on another user (e.g., A )ispos-itively correlated to B  X  X  influence and negatively correlated to the  X  X istance X  between them. Thus, this effect can be written as follows: Where E is used to measure the impact caused by u . K is a constant. I the global influence of the influential user. R represents the distance between the two users.  X  is a coefficient to tune the effect of the distance. It is worth noting that this formula is very similar to the definition of  X  X lectric field strength X  in physics. As depicted in Figure 1 (a), an electric charge with power Q will generate an electric field around itself, and the field strength at a point r far away is calcu lated as: E = k Q r 2 . Inspired by the electric field theory, we assume that everyone on micro-blogging has his/her own  X  X nfluence field X , which makes himself/herself as the center. As portrayed in Figure 1 (b), the user at the center will affect the behaviors of user1-user3 through the influence field of himself and the strength will attenuate as the distance increases. The field strength of the  X  X nfluence field X  can be defined according to Equation 1 .
 The electric field strength in physics is a vector with its direction. In order to be consistent with this concept, we define  X  X opic X  as the direction of  X  X nfluence field X . This design is to match the fact that each user may has uneven influence on different topics. For example, David Beckham is a famous soccer player, and his influence on the topic  X  X ports X  is far greater than on  X  X loud computing X . We try to employ  X  X nfluence field X  discussed above to interpret and predict users X  retweeting behavior in the micro-blogging systems. We assume that user u will be affected by a force ( f u ) when he/she is reading post po ,and u has a threshold  X  po u for retweeting it. Besides the influential users, the influence from po should also be considered. Finally we utilize an inequality to predict whether u will retweet po : f u  X   X  po u Based on Equation 1 , we define f u as follows: the influence of po ,which is used to measure the importance of po . Generally speaking, the posts with high influence are more likely to be retweeted. We can see that Equation 2 shares the similar structure with the famous Coulomb X  X  law( F = kQq/r 2 ) in physics. 3.2 The Calculation of the Elements In this subsection, we mainly introduce how to calculate the elements of the  X  X nfluence field X . First, we will talk about how to identify those users ( U )who will influence the current user u when he/she is reading a post. Next, we will elaborate the calculation of I u , R ( u ,u ), I po and  X  Identify the Influential Users ( U ). As depicted in Figure 2 , three types of users as following will influence the current user u when po is exposed to him/her.
 user B and user C follow user A . Once A has published a post po , B and C will be influenced by user A to some extent since po will appear in their separate timelines.
 the author of po directly. As portrayed in Figure 2(b), user A is the author of po , B only follows user D and receives po through the  X  X etweeting-path X  from A to D . In this case, we consider that both A and D will influence B because B will perceive their retweeting behaviors. In Figure 2(c), two followees of B have retweeted po and we believe that both of them(i.e., E and F ) will influence B . is another type of users on the  X  X etweeting-path X . Take user G in Figure 2(c) as an instance, although he is neither the author nor the followee of B , he is also able to influence B because his nickname will be mentioned in po with a prefix of  X  X  X  symbol.
 To sum up, the influential users U includes all those users appear on the  X  X etweeting-paths X  from the author of po to u . The duplicate users are removed. Calculate the Influence of User( I u ). Since we have defined the directions of  X  X nfluence field X  as the topics, it is necessary for us to find some way to measure user X  X  influence on each topic. TwitterRank [ 20 ] provided an approach based on the PageRank algorithm and the topic model which is able to calculate the influence on a single topic for each user on Twitter. It measures the influence taking both the link structure and the topical similarity between users into account. Since TwitterRank has proved its effectiveness on a large dataset of a typical micro-blogging platform (i.e., Twitter), we decide to adopt it to calculate the users X  topic-level influence in this paper.
 The core idea of TwitterRank is to make an analogy between the influence of a user and the authority of a web page, then extend the PageRank algorithm with topical information to calculate the user X  X  topic-specific influence.In detail, the TwitterRank algorithm consists of the following steps: 1. First of all, The Latent Dirichlet Allocation (LDA) [ 21 ] model is applied to distill the topics that users are interested in based on the posts they have pub-lished. 2. Secondly, a directed graph of users is formed according to the following rela-tionships among them. 3. Each topic corresponds to a probability transition matrix P transition probability of the random walk from u i to his followee u as: Where |  X  j | denotes the number of posts published by u j nator part represents the total number of posts published by all u sim ( i, j ) is the similarity of u i and u j in topic t , which can be calculated as: Here, P t u i and P t u j are both topic distributions generated by LDA. 4. Finally, based on the transition probability matrix, the topic-specific influ-ence of the users, which is denoted as E t is the teleportation vector which is introduced to tackle the case in which the users may follow one another in a loop. The authors normalized the t-th column of the user-topic matrix obtained by LDA so as to represent E parameter between 0 and 1 to tune the probability of teleportation.
 gation of his/her influence in different topics, which can be calculated as: assigned to topic t , which is the probability of user u is interested in t , i.e., P generated by LDA.
 Measure the Distance between Users( R ( u 1 ,u 2 )). The distance between two users is largely determined by their relationship. In the previous research, the relationship is measured by  X  X ie strength X  [ 22 ]. The relationships between users can be divided into two categories: the weak ties and the strong ties [ 23  X  25 ]. The weak ties include our loose acquaintance, new friends and our 2-degree friends (i.e., friends of our friends). Strong ties refer those people we are most concerned, such as our family and our trusted friends. In fact, most of our com-munication on social networks is with our strong ties [ 26 ]. Not surprisingly, people are disproportionately influenced by the strong ties, and the strongest influence is between mutual best friends [ 27 ]. As a result, we believe that the users X  retweeting behavior is also influenced by the strong ties. Intuitively, the more frequent the interaction between two users, the stronger their tie strength. In addition, a large number of common friends may also mean strong ties [ 28 ]. In micro-blogging, we define friends as the users who have followed with each other.
 where  X  is a constant coefficient, r ( u 1 ,u 2 ) is the  X  X outer distance X  between u and u 2 . For example, if A follows B , then r ( A, B ) = 1, and more, if B follows C and A doesn X  X  follow C , then r ( A, C ) = 2, etc. N 0 is the number of the common friends of u 1 and u 2 . N 1 is the frequency of interaction from u denotes the frequency of interaction from u 2 to u 1 . The interaction here refers the behaviors include retweeting, mention and comment on the micro-blogging system. The closer N 1 and N 2 , the stronger the tie strength, then the nearer the distance. The square root and the logarithmic function are used to smooth the final result.
 Calculate the Influence of Post ( I po ). Intuitively, a post with rich informa-tion usually has a strong influence. We model the influence of a post also at the topic granularity. We employ  X  X opic entropy X  to measure the amount of informa-tion contained in po on each topic and the higher the value of  X  X opic entropy X , the stronger the influence. We consider each post as a document, based on the  X  X ag of words X  assumption, LDA is applied to represent each post as a proba-bility distribution over a certain number of topics, while each topic is expressed as a probability distribution over the words. Finally, the topic-level influence of post po on topic t is calculated as the following equation: Where w i denotes the words in po . K is the total number of words in po . For each retweet, we calculate the intervals between the retweeting timestamp and the generation timestamp of corresponding po in our dataset. According to our statistics, most retweeting behaviors happened during a short period after the original posts have been published. About 50% of the intervals are less than 1 hour and over 90% of them are less than 1 day(1440 minutes), which means the probability of user to retweet po will gradually diminish over time. For this reason, we apply an exponential time factor to discount the influence of those old posts as Equation 9 , where  X  t 0 is the interval between the published timestamp of po and the current timestamp,  X  is a decay coefficient.
 The Threshold for User to Retweet a Post (  X  po u ). Different users have their respective  X  X ccepted thresholds X  even for the same post, additionally, single user has different  X  X ccepted thresholds X  for different posts [ 19 ]. Therefore, the threshold  X  po u should be determined by both the current user and the post. In general, for a specific user u , the threshold of the possibility to retweet post po is positively correlated to their divergence. We still employ LDA to generate latent topic distributions of u and po respectively, then adopt Kullback Leibler divergence as Equation 10 to measure the distance between them.
 Finally, the threshold  X  po u is defined as Equation 11 , where  X  is a constant, freq ( u ) stands for the percentage of retweeted posts in the latest 100 posts of u , which is used to describe how much a user prefer to retweet posts recently. In summary, there are four elements in the  X  X nfluence field X  model. I represent the global influence of the influential users and the post respectively. The distance R is applied to model the relationship between users, which projects I to an individual level. Analogously, the  X  po u stands for the correlation between the post and the current user, which captures the effect of I level.
 3.3 Predict the Retweeting Behavior The retweeting behavior prediction can be considered as a classification task. For a given triplet ( u , po , t 0 ), our goal is to correctly categorize it. The outcome is denoted as Y u,po,t 0 . Y u,po,t 0 = 1 means that user u will retweet the post po before timestamp t 0 ,and Y u,po,t 0 = 0 otherwise.
 model, the decision inequality f u  X   X  po u could be written as: of  X  . We make use of Q ( u, po, t 0 ) as the decision boundary, then the logistic function can be written as: learned by minimizing the cost function of the logistic regression model. For convenience, we modify Equation 13 as: 4.1 Data Preparation and Experimental Setting We crawled the latest 200 posts of 61,736 users as well as their follow-relationship from Sina Weibo. The dates of these posts range from 2012.3.2 to 2013.8.28. After removing the inactive users and the fake accounts, 37,931 users are left. Here, the inactive users refer to those users whose total posts number is less than 20 or the followee number is less than 10. We employ the approach introduced in [ 29 ] to detect those fake accounts.
 and 2013.05.21 (100 posts each day). By analyzing these posts, we obtain 15,831 retweets and 650,212 non-retweets and merge them as the dataset for the exper-iment. For a triple ( u , po , t 0 ), we consider it as a non-retweet if it meets four conditions: (1) po is exposed to u . (2) u publishes or retweets another post at t 0 . (3) po is published with 5 hours before t 0 . (4) po is not retweeted by u before t 0 .
 We first treat every post as a document and apply LDA to calculate the probability of generating a post from each topic. Users X  topical distributions are also estimated by the same LDA model, then the TwitterRank algorithm is executed on the global dataset to generate users X  topical influence. During these processes, the teleportation parameter(  X  ) in TwitterRank is set to 0.85 as suggested in [ 20 ]. There are three parameters in LDA, i.e., the topic number T and two Dirichlet hyper-parameters  X ,  X  , they are set as T = 50,  X  =50 /T ,  X  =0 . 1 respectively. When calculating the field strength of influence field,  X  is initially set to 2 via making an analogy with the electric field and the decay coefficient  X  is heuristically set to 0.6.
 Foreachtriple( u, po, t 0 ), we first collect corresponding influential user set which is denoted as U for each u . Then we calculate Q ( u, po, t in Section 3. Finally, 10-fold validation for the logistic regression classifier is exe-cuted on the dataset. u will be predicted to retweet po before t returned by logistic regression is larger than 0.5. 4.2 Performance of the Proposed Approach In order to verify the effectiveness of our model based on  X  X nfluence field X , we utilize the logistic function as the classifier, employ the force function Q ( u, po, t as the feature, then compare with several baseline approaches as follows: (1)Only consider the influence of the author in the force function ( Q ( u, po, t 0 )). (2)Consider the influence of the author and the mentioned users in the force function ( Q A + M ( u, po, t 0 )). (3)Consider the influence of the author and u  X  X  followees as the influential users in the force function ( Q A + F ( u, po, t 0 )). (4)Use the features listed in [ 7 ] and [ 2 ] as the basic features. (5)Combine Q ( u, po, t 0 ) and the basic features as the advanced features. The evaluation results are listed in Table 1 .Wecanseethat Q obviously outperforms the result of the case in which only consider the influence of the author, which means beside the author, the followees who have retweet po indeed play an important role to influence u . This may be caused by two reasons: for one reason, users tend to trust their close friends as well as the posts retweeted by these friends, and most of these intimate friends are usually in their respective followee-lists; for the other reason, we tend to subconsciously imitate other people X  X  behavior, especially those people we perceive to be like us [ 19 ]. Since people usually follow many users who share similar preferences with themselves due to the homophily [ 30 ], as a result, these followees may influence the current user to retweet a post which matches all their tastes. For example, a PhD student on data mining may retweet a post about a new algorithm because he noticed that many famous data scientists he has followed have retweeted this post. However, those  X  X entioned users X  can hardly improve the performance. This is probably because u is not familiar with these users. Moreover, only their  X  X ickname X  appended before the original post is visible to u , therefore, it may be difficult for them to catch u  X  X  attention.
 users does not significantly outperforms the approach with basic features. The reason may be that the basic features contain some other factors associated with users X  retweeting behavior. For example, the features  X  X ow many times po has been retweeted X  and  X  X hether po contains a hashtag X  may reflect the impact of some breaking news. However, we have not considered them yet. After incorpo-rating Q ( u, po, t 0 ) and the basic features, we are able to obtain an improvement of performance with about 3.7% in terms of F1 value. It means that our force function Q ( u, po, t 0 ) is significant for retweeting prediction.
 4.3 Impact of Model Parameters We investigate the impact of distance tuning coefficient  X  and the topic number T on the model performance in this subsection. The results of different  X  are portrayed in Figure 3 (a). The vertical axis is the F1 value. It is obvious that result outperforms others when  X  is set to 2. We note that it is exactly the same coefficient in Coulomb X  X  law.
 The number of topics would also influence the result. As depicted in Figure 3 (b), the performance of our model tends to be stable when T 50 . However, we should note that the complexity of the model will increase as we add more topics, as a result, we decide to set T = 50. In summary, inspired by the field theory in physics, we present a novel approach based on  X  X nfluence field X  with various features to predict the retweeting behavior in the micro-blogging system. We interpret retweeting behavior as an outcome of the influence from the post and the influential users. During our approach, many features are integrated together to generate the force which effects on the user and the inherent correlations among the features are also considered. The experimental results show that our strategy is indeed effective for the retweet prediction task.
 There are also some limitations of our method. Firstly, because we are not able to get the timestamp of user X  X  following behavior, as a result, the global topology structure of users X  following relationship we used in the TwitterRank algorithm may deviate from the exact state at the timestamp of users X  retweeting behavior in our experiment. Secondly, during our experiments, we simply assume that all the posts exposed to the current user have been read. In fact, we do not know whether the user did not want to retweet a post or he did not even see this post. These may hurt the overall performance to some extent. We will attempt to address these problems in the future.

