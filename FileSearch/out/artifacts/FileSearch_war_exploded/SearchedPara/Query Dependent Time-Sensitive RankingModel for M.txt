 Microblog is a user-gener ated content system, which allows its users to publish and share short messages. Microblog search has become a hot research topic in recent years. Related works [1] show th at microblog search queries are time sensitive. User X  X  motivation of microblo g search is time sensitive, whether event searches including keep up with what was happening and understanding trends or real-time information searches. Hence, incorporating temporal information in relevance judgement has been studied by many researchers. Based on different assumptions of temporal role played in ranking, different methods are proposed to incorporate temporal information to the ranking process [6, 7]. However, the temporal influence in ranking of microblog search is very complicated, and hard to be summarized into one simple straightforward assumption.

In this paper, we first analyze the temporal influence over ranking in microblog search, and come up with two important hypotheses. Then, in order to capture the complex pattern of the temporal influence, we propose to employ learning to rank framework to combine both temporal and entity evidences into ranking process. Experimental result shows that time-sensitive learning to rank model improves the retrieval effectiveness. Mo reover, in order to leverage the query difference information, the k nearest neighbors with the most similar temporal distribution patterns are found to build a query dependent model. Experimental results show that the query dependent model discriminates different queries in the temporal influence, and achieve the best performance. Previous works have tried to incorporate temporal information into the ranking process. An important temporal assumption is how fresh the results are, also known as  X  X he newer the document, the more important X , [6] and [8] tried to retrieve not only relevant but also fres h documents. [9] and [7] considered the other important temporal assumption, i.e., the event X  X  peak time point. [7] pro-posed a method to give more weight to these documents around peak points. [9] tried to combine query expansion on temp oral variation with recency in order to improve the retrieval performance. However, these studies have strong assump-tion on the temporal influence over ranking, which in fact, the influence could be complex, and it X  X  inaccurate to be summarized into one simple assumption. [10] proposed to use learning to rank for time-sensitive web search, however, there X  X e different specialties in microblo g search, and most of their features are not applicable in the microblog search any more.

The problem of the large differences am ong different queries can be addressed by query dependent ranking approaches. There X  X e different loss functions to be employed to leverage the query differenc e to improve the retrieval effectiveness, such as query-classification-based approach [11], query clustering-based approach [12] and nearest neighbor-based approach [13]. As for web search, queries can be navigational, informational or transactional [15]. However, the queries in time-sensitive microblog search may have different patterns. In this section, we first analyze the temporal distributions of query relevant documents and pseudo relevant documents, and come up with two hypotheses, which are the cornerstones of this paper, and then introduce our methods. 3.1 Query Temporal Distribution Analysis We study the queries released by TREC Microblog Track 2011-2012. The corpus consists of microblogs between January 23rd and February 7th 2011, in total 17 days. Given a query, we want to find out the temporal distributions of relevant documents and pseudo relevant documents. Regard ground-truth labeled docu-ments as relevant collection, and the to p 500 documents retrieved by the query likelihood model as pseudo relevant collection 1 .For a collection, the temporal distribution is computed as follows: Firstly, we divide the relevant documents by different days, then we count the ratio of documents fallen into each day.
To demonstrate the temporal property of microblog, we take four queries used in the TREC 2011 Microblog Track as examples. Temporal distributions are plotted in the Fig. 1 using the method mentioned above.

To interpret this figure, we need to pay attention to the trends of pseudo relevant documents comparing with the relevant documents. We can see in this figure every subfigure X  X  trend of pseudo relevant documents coordinate with rel-evant documents curve respectively. Th is phenomenon implies that the temporal feature between pseudo relevant is quite similar. Its obvious that queries may vary in temporal distribution.
When the curve of relevant documents is higher than that of the pseudo relevant documents, this means the ranking model should give more weight to the documents at that point. From the figure, we can see every subfigure implies different weighting schema. For query MB001, the document around peak point should be weight more, While for query MB078, the newer document should be weighed more. The situation of MB060 and MB045 are complex situations.
Consider if a querys temporal distribution is similar to the query MB001, it implies the pattern of temporal influence over ranking is the same with MB001. To sum up: Hypothesis 1. The temporal features between relevant documents set and pseudo relevant documents set are quite similar. A query can be projected in the temporal feature space of its relevant or pseudo relevant documents set. Hypothesis 2. Temporal influence over ranking is complicated and it X  X  inaccu-rate to summarize into one straightforward assumption. The temporal influence is different among queries, and similar temporal distribution of query imply sim-ilar pattern of temporal influence. 3.2 Query Temporal Distribution Dependent Ranking Method Query Dependent Learning to Rank Model. It will be beneficial to com-bine temporal information into the learning to rank framework. We utilize a simple linear score function which can be adopted to the point-wise, pair-wise or list-wise learning to rank process. In this paper, we use listnet[14] as a basic learning to rank model, the typical list-wise learning to rank model whose loss function is defined by the probability distribution over permutations.
In[13], Geng et al. performed query-dependent ranking using K Nearest Neigh-bor method. In our study, according to H ypothesis 1, query can be projected into as a temporal distribution. Since the most similar temporal distribution implies the similar impact of temporal information in ranking, k nearest neigh-bors used to training ranking models would leverage the useful information of similar training queries, and avoid the negative effects from dissimilar ones. The similarity is computed by the distance of two queries X  temporal distributions. The distance of two distributions can be computed by Kullback-Leibler Diver-gence(KLD). Given tw o arbitrary queries q i and q j , The KLD of two queries can be defined as: where P q i k , P q j k indicate temporal distribution probability of query q i ,query q j on kth time unit separately.

For queries in training set, the temporal distribution can be calculated by relevant documents with ground-truth labels. For queries in test set, according to Hypothesis 1, the pseudo relevant documents X  distribution is quite similar to relevant documents X  for a given query, therefore, pseudo relevant documents X  temporal distribution are used to represent this query. Features. As we know, the quality of features is vital to the learning to rank framework. We divide the features into two categories: the first one is entity related, the other one is temporal related.

Entity based features are aimed at mea suring the textual similarity between a query and a document. Since our study focus on time-sensitive problem, we only choose representative entity features. The proposed features include qlSim, tfSim, hashTagSim, senLen and hashTagLen. The qlSim measures the query like-lihood probability, which is calculated by log ( p ( Q | M D )). The tfSim measures the tf-idf similarity of query-document pair in vector space model. hashTagSim mea-sures the similarity between query and hashtags, which is calculated by word Jaccard distance after stemmed. senLen is the length of tweet after removing the hashtags, hasTagLen is the length of hashtags. Among these features, hash-TagSim, SenLen and hashTagLen can be computed offline, while the qlSim and tfSim were computed by the retri eval system (E.g., lemur).

Temporal features try to capture temporal influence over ranking. In our work, we extract two types of temporal features. The global features including h , tc , ta and tp indicate the feature extracte d from whole collection. While the local features including ti , tde , tai and tpi denote the current document X  X  characteristics. h indicates whether the temporal distribution is concentrated or uniform. The probability distribution is calculated by the ratio of documents fallen into a time unit. p ( x ) i stands for the distribution probability of the ith time unit. ta indicates the average time of the whole collection. td i stands for the time of document i . tp is the peak point of whole collection[7], is computed by finding the highest ratio in the distributions of the whole collection in different days. c ( i ) stands for the count of documents on the ith day. tc indicates the newest time of the whole collection. ti measures the time interval between the query and the current document. tq stands for query time. tde is exponential decay to indicate the t ime decay from the newest document X  X  time stamp to the current document X  X  time stamp.  X  is parameter to be tuned. The interval between the average time of pseudo relevant documents and the time of current document is defined as tai . The interval between the peak point and the current document X  X  time stamp is defined as thi .
The combined feature could be meaningful in linear formed score function in learning to rank, this enlarges the dimension of feature space, and make the score function non-linear. We combine ti,tde,tmi,thi with h to a series of new features as ti  X  h,tde  X  h,tai  X  h,thi  X  h . To empirically evaluate our proposed hypotheses and approaches, we conduct a series of experiments on public data set TrecMicroblog2011 in this section. 4.1 Experimental Setup The experimental corpus is distributed by TREC 2011 Microblog Track 2 .After preprocessing(remove the mentions, url information, delete non-english tweets and repost tweets), the documents set size is 9,679,710. The query set contains 110 queries. The evaluation metrics include precision at 30 (P@30) and mean average precision(MAP), the same as in the TREC Microblog Track [2].
In our two approaches, the first one combines a series of our proposed features into the learning to rank framework, which is named as TLTR model. The other one is the query-dependent ranking model(QDLTR). We use the basic query likelyhood model (QLM) as the baseline model, and also evaluate the methods proposed in [6](TLM) and [7] (HTLM-AdaptiveMultiML).

In our experiments, the QLM is smoot hed by Jelinek-Mercery, and all the parameters are tuned using 5-fold cross validation one by one based on P@30 metric. The parameters are shown in Tab.1.
 4.2 Experimental Results The experimental results are shown in Tab.2. Statistical significant tests are performed using paired T-test at 0.05 level of significance. From the table, we can see that:
As a baseline and benchmark of this evaluation, QLM model only measures textual similarity, and performs the worst on both metrics. Then TLM uses re-cency information as document X  X  prior wh ich ranks the newer documents higher. The results reflect that TLM has a little improvement on the MAP compar-ing QLM. After leveraging the temporal specialty of microblog, where lots of queries are event-related and the documents around peak point are more favor-able. HTLM-AdaptiveMultiML brings positively effect on the P@30 and MAP, while the improvement is still limited. This reflects that the queries in microblog search is time-sensitive and very complex, although incorporating the tempo-ral feature can bring a little improvement, it is limited if we only rely a simple assumption.

Through incorporating a series of features including the temporal features and entity features to the learning to rank framework, we can see that TLTR effectively improves the performance o n both of evaluatio n metrics compared with TLM and HTLM-AdaptiveMultiML. It shows without any assumption of temporal influence, learning to rank is powerful to combine temporal evidence into ranking process.Furthermore, we can see QDLTR shows the best perfor-mance on both of evaluation metrics. Comparing with the baseline models, it outperforms QLM by 7.88% on the MAP score. Moreover, it shows even more significant improvement on the P@30 score which increases by 13.55%. Through considering the differences among differ ent queries, the QDLTR model signifi-cantly outperforms the other methods.

Through the experiments, we can see th at by combining temporal informa-tion into ranking can effectively improve retrieval effectiveness, and by further considering the query dependent will ha ve much better performance. Therefore, our two hypotheses are very meaningful in t he time-sensitive microblog retrieval tasks. In this paper, we propose a query dependent learning to rank model to address the time-sensitive problem in microblog search. First, we extract the temporal and entity features from microblogs, and use learning to rank framework to com-bine these diverse temporal evidences which are able to capture the temporal influence in ranking. Second, to leverage the query difference over time distribu-tion, we employ k-nearest neighbor algorithm to find temporal patterns similar to given query, and use this model to rank the documents for a given query. Ex-perimental results show that our models can significantly improve the retrieval effectiveness of microblog search.

As for future work, there X  X e lots of words in microblog indicates time, such as  X  X esterday X ,  X  X ast week X  and  X  X an 5th X . These temporal information can also be extracted as temporal evidence used for ranking.

