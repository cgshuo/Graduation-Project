 A web page is a collection of basic elements, and the role of each element in a page is different. Without accurate understanding of the role of each element, it will be very difficult to further process the web page for different purposes. For example, mobile devices have very small screen sizes and memory capacities, converting web pages articles, understanding of the role of each element will help to deliver only the desired material. Another example is in web page classification, where the performance is be improved. We believe that most areas of web processing can be improved if we get a better understanding of the role of the elements in the web page. web page and understanding the importance of each part. For example, in [9], the web page is partitioned into blocks, and each block is assigned a value (1 to 4) to indicate is used to rank the content objects within a web page to allow the extraction of only important part. 
This paper presents a machine learning approach to classify each element in a web page into six functional categories: Content(C), Related Link (R), Navigation (N), Advertisement (A), Form (F) and Other (O). This allows the extraction of only certain categories of content in a webpage to be delivered to a mobile device to fit the mobile search. The method that we propose first divides a web page into basic elements. For each element we extracted both local features and global features. The local features are obtained from the element itself without checking other elements in such as the text match with the other elements. We construct a feature vector and use machine learning to classify each element. 
We organize the paper in the following way. In section 2, we discuss our criteria of functional category selection. In section 3, we will present the design. In section 4, we proposed a new interface for the mobile Internet system based on the element evaluation of the system. Section 6 is about related works. In section 7, we will give our conclusion and our direction for future research. One web page has many different types of content. Each of them is designed to affect the reader X  X  behavior in a different manner. For example, the reader usually reads the main content, ignores the advertisement, and clicks on related links to further explore a topic. In our research work we aim at classify web content into meaningful functional categories to facilitate the surfing experience, especially on a mobile devices. We have two goals to achieve in selecting the functional category. First, the functional category needs to have a meaningful and useful theme that is related to the user X  X  daily surfing experience, so content like copyright statement, company banner have a distinct and coherent meaning which has a predictable implication on the user behavior and minimize the confusion from the reader. For example, it would be the content into six categories  X  the main article, title, author, date, supporting picture or any other material used to describe the topic. The main topic is th e most important content in a web page.  X 
Related Link (R): A web page normally contains links to web pages that that tells the related story, which helps a reader to further explore a topic.  X 
Navigation (N): A website is normally designed in a well-structured form and sections, which helps a reader to navigate in the site.  X 
Form (F): Forms can be used to enable the reader to interact with the webpage. For example, a user can search with keyword, or submit certain request through a form.  X 
Advertisement (A): Today X  X  web page is normally filled with internal or external advertisements. They may or may not be useful to the reader. It is ideal if we can separate them and give reader a choice on how to deal with them, especially on mobile devices.  X 
Other (O) All the other contents, for example, the banner, copyright information and the logo, are not informative, are normally invisible and do not have much influence on user X  X  behavior. 3.1 Basic Elements develop a consistent method to divide a web page into basic elements. There are two not be affected by the source of the web page and the different ways of implementing the layout. Secondly, the granularity of the partition should be independent from the consistent pattern for the machine learning algorithm to learn from. 
Many different methods have been proposed to partition an HTML page into blocks. For example, [14] proposed a visual based method to analyze the structure of a web page, and [17] provides a method to automatically understand the semantic However, these methods are not suitable for our application because the granularity is subjective and affected by the semantic meaning of the content. 
We develop an algorithm similar to [15] that uses the DOM interface provided by HTML page from the bottom up. The algorithm identifies the elements using two rules:  X 
A visible object like an image, link or text paragraph will be a basic element if it is not overlapping with another child or its parent node.  X 
For overlapping objects, the minimal container of the two objects will be a potential element to be verified by the rule 1. The algorithm will seek from bottom up to locate the nearest common container, and the container will be treated as one element. For example, a web page may contain many links that are not overlapping with each other. Each of the links will be treated as basic element. Another web page may have a text paragraph with a link. Here we have two overlapping objects. The bigger one, the text paragraph, will be chosen to be checked by rule 1. If the text paragraph is not overlapping with other elements at a higher level, it will be chosen; otherwise we will recursively search upward. In this manner, all the visible objects in a web page will be allocated to the basic elements. 3.2 Feature Vector for Element After converting a web page into basic elements, and we will use a machine learning algorithm to classify each element into different functional categories. For each element a feature vector is constructed. The feature vector is made up of the internal presented by the element itself, and we can observe them without checking other elements in the same web page. For example, the element type, the URL or the anchor Internal features: 1. Width/height ratio ( Pr ): The shape of an element reflects its category. For example, for an image, an irregular image is usually more likely to be banner or navigation bar. We use the following formula to calculate the value for images: 2. Element (Sz): The size of an element reflects its category. For example, for content normally have a larger size, a Navigation (N) element normally have a smaller size. We use the following formula to calculate the value for images: indication of the content element. The content elements normally have more text than advertisement element. We use the length as one feature. 4. Anchor Text length: The length of anchor text can differentiate Navigation (N) element from Related Link (R) element, because normally Navigation (N) element differentiates the link elements from those non-link elements like the content. feature. Element closer to the center point is more likely to be content then those in the edge, which tends to be Navigation (N) element. So we use four features 
LeftEdge, RightEdge, TopEdge and BottomEdege, and use a binary value to represent whether the element X  X  border touches one of the four edges of the web page, As shown in the formula, if an element X  X  left boundary falls in left 10% of the screen, its LeftEdge is true, otherwise is False. In the same way if its top boundary is located in a position higher than 100 pixels, its TopEdge is True. 1. Tag Category: The web designer tends to uses different type of element to present different content, typically a Flash is object normally used for advertisements and plain text is more likely to be used for main content. In our context we select four category  X  Image: Any embedded image. &lt;img&gt;  X  Flash: element with a Macromedia Flash object  X  Control: element with tag &lt;input&gt; &lt;select&gt; &lt;textarea&gt;  X  Link: element with the tag &lt;a&gt;  X  Text: element with the tag &lt;P&gt;  X  Mix: the element has more than one of above category 6. Link Property: For link object we can capture additional features which could help the machine learning algorithm to separate many confusing cases. For example, a picture which links to external site is more likely to be an Advertisement (A) than an internal one. The features we selected from a link object includes:  X  The number of components: we decompose the url into component for example,  X  External URL: whether the site is linked to an external site. 7. Image Property: for image object we extract the following features.  X  Animated GIF: whether the image is animated GIF  X  Logo image: if the image file name contains word like  X  X ogo X  or  X  X anner X  etc.,  X  Space image: if the image file name contains word like  X  blank X .  X  X orner X , 8. Key word: For each element category we select a group of typical words that can represent that category. For example, we will check if an element has word like  X  X ds X ,  X  X dvertise X ,  X  X ponsor X  or  X  X lick X  to check for Advertisement (A) content. If the element contains the typical word from each category becomes a feature. External feature: 1. Content Match: For each element we calculate the sum of the cosine similarity with every other element in the same pages. If we assume that there is one center topic in the web page, this calculation will give us an evaluation of how this element is related to the main article. demonstrate such a pattern. In the same manner we also extract SameRight(i), SameTop(i), SameRight(i), SameBottom(i), SameSize(i) construct the classifier. We propose an innovative user interface to let user surf web page based on the presenting the whole web page on small screen device, we classify the content in the web page into six categories and let user specify the content to delivered and rendered in his mobile device. The design goal of our method is to provide a user interface and content. 
Suppose the user is interested in a web page shown in Fig.4. The web page advertisements. Before the page is delivered to user X  X  mobile device, the middleware categories, and generate six view of the web page. It will then deliver the Content (C) delivery that that content. mobile device, and simply click the category name to explore different material in the web page. 
Ideally, the algorithm will be loaded in a personal gateway, which can be our own mobile device. It will retrieve and render the page in its memory on the behalf of the pages, and send the optimized page to the mobile device wirelessly. Normally computer. Because the desktop is connected to Internet with cable and only requested greatly decrease the performance. 
Another possible application is in the mobile search area, where the search engine returns the text description of the result. Rather than providing a link to the target web the optimized view of the target page. Based on the information requirement the user can directly go to the correct view of the web page. We used the off-the-shelf machine learning system WEKA for this experiment. The general practice of using precision (P), recall (R) and F-measure as the evaluation. 1. The precision (P) for certain category: 
Return= (number of element really belongs to certain category)/(number of elements classified as certain category) 2. The recall(R) for certain category: 
R= (number of element returned)/(all the elements that belong to certain category) 3. F-measure: 2PR/(P+R) 
We created the data in the following manner. First, we randomly selected 150 pages and manually label each of the 18,864 elements into one of the six categories. As we can see from the distribution of all the elements in the training set, only 7% of the elements are content. 
Not every element in a web page is equally valuable for classification. For like  X  X pace.gif X  is not meaningful to classify, to remove them from the page will not removed. Second, if same picture (decided by source image name) is used more than three times in a page, it will also be removed. 
After preprocess, altogether 13,693 elements remained, we set aside the first 10,650 as training set and the rest as test set. Using the WEKA package J48 classifier, on the training set. The corresponding results are showed in Table 1. 
Of all the 10,650 elements, 8172 elements (82.13%) are correctly classified; the which shows the features are quite effective and important for the classifier. 
The second step of our experiment we use the training set to build the J48 classifier (we have tried many other classifiers provided by WEKA, the J48 performs the best), results are: 
As we can see from the Table 1 and Table 2, the performance for the content cross validation result and the test result, only 58% of elements are correctly classified. This is probably due to the fact that the elements in the validation sets for elements from the test sets belong to different web sites altogether. There appears to addition to that, all the sample websites are chosen from Google directory. It is likely misleading anchor text might exist. [9] proposed using vision based page seg mentation algorithm to partition semantic blocks with a hierarchical structure, and extract spatial features ( position and size) as well as content features (number of image and links) to form feature vectors. A machine learning algorithm is used to train for block importance. The work is related to this paper in many ways. First, both works are trying to understand the role of each research defines the roles as a specific functional category. Secondly, the two papers solve the problem at a different granularity. [9] solved the same problem from a block accuracy. In our work the definition of the element is fixed. 
In our previous work [15], we proposed to divide the web page in the same manner, and use a ranking algorithm similar to Google X  X  PageRank algorithm to rank parts of web pages for delivery to mobile devices. The limitation in that work is that it are not so important, removing them on the mobile device will hurt the surfing experience. For example, without navigation links, it will be very difficult to browse a web site on a mobile device. 
The SmartView system in [8] is based on idea of  X  X ivide and view X . It performs partitioning of HTML document content into logical sections that can further be paper presents the same idea of allowing the user to randomly access any website and gives the user full control of which content to be read. However, the system in [8] let mobile device without downloading the whole page. 
The web is not designed for mobile device. There are many commercial solutions to help people to surf web on mobile device. System like Web Clipping [13] and systems that convert the content in the Internet to a format that is suitable for various small screen devices. The systems need to perform three functions, including scaling, example, [4] and [3] use summaries of single or multiple pages to present to the user. from the existing web. Our goal is to design a system that can classify the elements that make up a web page Advertisement (A), Form (F) and Other (O). This allows the extraction of only certain type of content in a webpage to be delivered to a mobile device to fit user X  X  specific feature vector is obtained, we use an off-the-shelf machine learning package to importance of a blocks or element in the web page, but we propose that it is possible classification algorithm, we developed a system which extract certain type of content from original page and provide a different view for small screen devices. within a web page to be viewed on a mobile device. However, current work has been need further try different type of web page. Even though the result for 10-fold cross-validation is good, the precision and recall for categories other than Content (C) on an performance before the system is truly able to be used for surfing on mobile devices. 
With the development of wireless technology and emergence of various mobile devices, people will not be limited to the desktop computer. We will access the devices, we strongly believe that the right direction is to convert and deliver the same content in different ways to different devices. 
