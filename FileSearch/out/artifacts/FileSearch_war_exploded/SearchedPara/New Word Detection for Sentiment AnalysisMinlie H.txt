 ing all the time, particularly in user-generated con-tent. Users like to update and share their infor-mation on social websites with their own language styles, among which new political/social/cultural words are constantly used.
 natural language processing tasks more challeng-ing. Automatic extraction of new words is indis-pensable to many tasks such as Chinese word seg-mentation, machine translation, named entity ex-traction, question answering, and sentiment analy-sis. New word detection is one of the most critical issues in Chinese word segmentation. Recent stud-ies (Sproat and Emerson, 2003) (Chen, 2003) have shown that more than 60% of word segmentation errors result from new words. Statistics show that more than 1000 new Chinese words appear every year (Thesaurus Research Center, 2003). These words are mostly domain-specific technical terms and time-sensitive political/social /cultural terms. Most of them are not yet correctly recognized by the segmentation algorithm, and remain as out of vocabulary (OOV) words.
 timent analysis such as opinionated phrase ex-traction and polarity classification. A sentiment phrase with complete meaning should have a cor-rect boundary, however, characters in a new word may be broken up. For example, in a sentence "  X  X  X  / n  X  X  X  / adv  X  / v  X  / n  X  artists' perfor-mance is very impressive  X  " the two Chinese char-acters  X  X  X  /v  X  /n(cool; powerful)  X  should always be extracted together. In polarity classification, new words can be informative features for clas-sification models. In the previous example, "  X   X  (cool; powerful)" is a strong feature for clas-sification models while each single character is not. Adding new words as feature in classification models will improve the performance of polarity classification, as demonstrated later in this paper. ment analysis. We are particulary interested in ex-tracting new sentiment word that can express opin-ions or sentiment, which is of high value toward-s sentiment analysis. New sentiment word , as ex-emplified in Table 1, is a sub-class of multi-word expressions which is a sequence of neighboring words "whose exact and unambiguous meaning or connotation cannot be derived from the mean-ing or connotation of its components" (Choueka, 1988). Such new words cannot be directly iden-tified using grammatical rules, which poses a ma-jor challenge to automatic analysis. Moreover, ex-isting lexical resources never have adequate and timely coverage since new words appear constant-ly. People thus resort to statistical methods such as Pointwise Mutual Information (Church and Han-ks, 1990), Symmetrical Conditional Probability (da Silva and Lopes, 1999), Mutual Expectation (Dias et al., 2000), Enhanced Mutual Information (Zhang et al., 2009), and Multi-word Expression Distance (Bu et al., 2010).

New word English Translation Polarity  X  X  X  lovely positive  X  X  tragic/tragedy negative  X  X  X  very cool; powerful positive  X  X  X  reverse one's expectation negative tection is as follows: Starting from very few seed words (for example, just one seed word), we can extract lexical patterns that have strong statistical association with the seed words; the extracted lex-ical patterns can be further used in finding more new words, and the most probable new words can be added into the seed word set for the next iter-ation; and the process can be run iteratively un-til a stop condition is met. The key issues are to measure the utility of a pattern and to quantify the possibility of a word being a new word. The main contributions of this paper are summarized as fol-lows: we will introduce related work in the next section. We will describe the proposed method in Section 3, including definitions, the overview of the algorith-m, and the statistical measures for addressing the two key issues. We then present the experiments in Section 4. Finally, the work is summarized in Section 5. weaved with word segmentation, particularly in Chinese NLP. In these works, new word detection is considered as an integral part of segmentation, where new words are identified as the most proba-ble segments inferred by the probabilistic models; and the detected new word can be further used to improve word segmentation. Typical models in-clude conditional random fields proposed by (Peng et al., 2004), and a joint model trained with adap-tive online gradient descent based on feature fre-quency information (Sun et al., 2012).
 a separate task, usually preceded by part-of-speech tagging. The first genre of such studies is to lever-age complex linguistic rules or knowledge. For example, Justeson and Katz (1995) extracted tech-nical terminologies from documents using a regu-lar expression. Argamon et al. (1998) segmented the POS sequence of a multi-word into small POS tiles, counted tile frequency in the new word and non-new-word on the training set respectively, and detected new words using these counts. Chen and Ma (2002) employed morphological and statisti-cal rules to extract Chinese new word. The sec-ond genre of the studies is to treat new word de-tection as a classification problem. Zhou (2005) proposed a discriminative Markov Model to de-tect new words by chunking one or more separat-ed words. In (Li et al., 2005), new word detec-tion was viewed as a binary classification problem. However, these supervised models requires not on-ly heavy engineering of linguistic features, but also expensive annotation of training data.
 for finding new words. Zheng et al. (2009) ex-plored user typing behaviors in Sogou Chinese Pinyin input method to detect new words. Zhang et al. (2010) proposed to use dynamic time warp-ing to detect new words from query logs. Howev-er, both of the work are limited due to the public unavailability of expensive commercial resources. have been extensively studied, and in some sense exhibit advantages over linguistics-based method-s. In this setting, new word detection is mostly known as multi-word expression extraction. To measure multi-word association, the first model is Pointwise Mutual Information (PMI) (Church and Hanks, 1990). Since then, a variety of sta-tistical methods have been proposed to measure bi -gram association, such as Log-likelihood (Dun-ning, 1993) and Symmetrical Conditional Proba-bility (SCP) (da Silva and Lopes, 1999). Among all the 84 bi -gram association measures, PMI has been reported to be the best one in Czech data (Pecina, 2005). In order to measure arbitrary n -grams, most common strategies are to separate n -gram into two parts X and Y so that existing bi -gram methods can be used (da Silva and Lopes, 1999; Dias et al., 2000; Schone and Jurafsky, 2001). Zhang et al. (2009) proposed Enhanced Mutual Information (EMI) which measures the co-hesion of n -gram by the frequency of itself and the frequency of each single word. Based on the in-formation distance theory, Bu et al. (2010) pro-posed multi-word expression distance (MED) and the normalized version, and reported superior per-formance to EMI, SCP, and other measures. 3.1 Definitions Definition 3.1 ( Adverbial word ) . Words that are used mainly to modify a verb or an adjective, such as "  X  (too)", "  X  X  X  (very)", "  X  X  X  (very)", and "  X   X  (specially)".
 Definition 3.2 ( Auxiliary word ) . Words that are auxiliaries, model particles, or punctuation marks. In Chinese, such words are like "  X  ,  X  ,  X  ,  X  ,  X  ", and punctuation marks include "  X  X  X  X  X  X  X  X  " and so on.
 Definition 3.3 ( Lexical Pattern ) . A lexical pat-tern is a triplet &lt; AD,  X  , AU &gt; , where AD is an adverbial word, the wildcard  X  means an arbitrary number of words 1 , and AU denotes an auxiliary word.
 terns. In order to obtain lexical patterns, we can define regular expressions with POS tags 2 and ap-ply the regular expressions on POS tagged texts. Since the tags of adverbial and auxiliary words are relatively static and can be easily identified, such a method can safely obtain lexical patterns. Table 2: Examples of lexical pattern. The frequen-cy is counted on 237,108,977 Weibo posts. 3.2 The Algorithm Overview from very few seed words (for example, a word in Table 1), the algorithm can find lexical pattern-s that have strong statistical association with the seed words in which the likelihood ratio test (L-RT) is used to quantify the degree of association. Subsequently, the extracted lexical patterns can be further used in finding more new words. We de-sign several measures to quantify the possibility of a candidate word being a new word, and the top-ranked words will be added into the seed word set for the next iteration. The process can be run iter-atively until a stop condition is met. Note that we do not augment the pattern set ( P ) at each iteration, instead, we keep a fixed small number of patterns during iteration because this strategy produces op-timal results.
 words are commonly modified by adverbial words and thus can be extracted by lexical patterns. This is the reason why the algorithm will work. Our al-gorithm is in spirit to double propagation (Qiu et al., 2011), however, the differences are apparen-t in that: firstly, we use very lightweight linguis-tic information (except POS tags); secondly, our major contributions are to propose statistical mea-sures to address the following key issues: first, to measure the utility of lexical patterns; second, to measure the possibility of a candidate word being a new word. 3.3 Measuring the Utility of a Pattern a pattern at each iteration. This can be measured by the association of a pattern to the current word set used in the algorithm. The likelihood ratio test-s (Dunning, 1993) is used for this purpose. This association model has also been used to model as-sociation between opinion target words by (Hai et Algorithm 1: New word detection algorithm Input : D : a large set of POS tagged posts
W s : a set of seed words k p : the number of patterns chosen at each iteration k c : the number of patterns in the candidate pattern set k w : the number of words added at each iteration K : the number of words returned
Output : A list of ranked new words W
Obtain all lexical patterns using regular expressions on D ;
Count the frequency of each lexical pattern and extract words matched by each pattern ;
Obtain top k c frequent patterns as candidate pattern set P c and top 5,000 frequent words as candidate word set W c ;
P =  X  ; W = W s ; t = 0 ; for |W| &lt; K do 6 Use W to score each pattern in P c with 7 P = { top k p patterns } ; 8 Use P to extract new words and if the 9 W = W 10 W c = W c -W ;
Sort words in W with F ( w ) ;
Output the ranked list of words in W ; al., 2012).
 ically on the assumption of normality, instead, it uses the asymptotic assumption of the generalized likelihood ratio. In practice, the use of likelihood ratios tends to result in significant improvements in text-analysis performance.
 table of a pattern p and a word w , derived from the corpus statistics, as given in Table 3, where k ( w, p ) is the number of documents that w match-es pattern p , k 2 ( w,  X  p ) is the number of documents that w occurs while p does not, k 3 (  X  w, p ) is the number of documents that p occurs while w does not, and k 4 (  X  w,  X  p ) is the number of documents con-taining neither p nor w .
 Table 3: Contingency table for likelihood ratio test (LRT).
 likelihood ratio tests (LRT) model captures the sta-tistical association between a pattern p and a word w by employing the following formula: where: L (  X , k, n ) =  X  k  X  (1  X   X  ) n  X  k ; n 1 = k 1 + k 3 ; n 2 = k 2 + k 4 ;  X  1 = k 1 / n 1 ;  X  2 = k 2 / n 2 ;  X  = ( k 1 + k 2 )/( n 1 + n 2 ) .
 as follows: where W is the current word set used in the algo-rithm (see Algorithm 1). 3.4 Measuring the Possibility of Being New is to quantify the possibility of a candidate word being a new word. We consider several factors for this purpose. 3.4.1 Likelihood Ratio Test RT can also be used to measure the association of a candidate word to a given pattern set, as follows: where P is the current pattern set used in the algo-rithm (see Algorithm 1), and p i is a lexical pattern. of a candidate word to the given pattern set. It tells nothing about the possibility of a word be-ing a new word, however, a new sentiment word, should have close association with the lexical pat-terns. This has linguistic interpretations because new sentiment words are commonly modified by adverbial words and thus should have close associ-ation with lexical patterns. This measure is proved to be an influential factor by our experiments in Section 4.3. 3.4.2 Left Pattern Entropy more commonly used with diversified lexical pat-terns since the non-compositionality of new word means that the word can be used in many differ-ent linguistic scenarios. This can be measured by information entropy, as follows: where L ( P c , w ) is the set of left word of all pat-terns by which word w can be matched in P c , c ( l i , w ) is the count that word w can be matched by patterns whose left word is l i , and N ( w ) is the count that word w can be matched by the patterns in P c . Note that we use P c , instead of P , because the latter set is very small while computing entropy needs a large number of patterns. Tuning the size of P c will be further discussed in Section 4.4. 3.4.3 New Word Probability widely matched by lexical patterns, but they are not new words. For example, "  X  X  X  (love to eat)" and "  X  X  (love to talk)" can be matched by many lexical patterns, however, they are not new words due to the lack of non-compositionality. In such words, each single character has high probability to be a word. Thus, we design the following mea-sure to favor this observation.
 where w = w 1 w 2 . . . w n , each w i is a single char-acter, and p ( w i ) is the probability of the character w i being a word, as computed as follows: where all ( w i ) is the total frequency of w i , and s ( w i ) is the frequency of w i being a single char-acter word. Obviously, in order to obtain the value of s ( w i ) , some particular Chinese word segmen-tation tool is required. In this work, we resort to ICTCLAS (Zhang et al., 2003), a widely used tool in the literature. 3.4.4 Non-compositionality Measures sions, where a variety of statistical measures have been proposed to detect multi-word expressions. Thus, such measures can be naturally incorporated into our algorithm.
 mation (EMI) (Zhang et al., 2009): where F is the number of posts in which a multi-word expression w = w 1 w 2 . . . w n occurs, F i is the number of posts where w i occurs, and N is the total number of posts. The key idea of EMI is to measure word pair  X  s dependency as the ratio of its probability of being a multi-word to its probability of not being a multi-word. The larger the value, the more possible the expression will be a multi-word expression.
 normalized multi-word expression distance (Bu et al., 2010), which has been proposed to measure the non-compositionality of multi-word expressions. where  X  ( w ) is the set of documents in which all single words in w = w 1 w 2 . . . w n co-occur,  X  ( w ) is the set of documents in which word w occurs as a whole, and N is the total number of docu-ments. Different from EMI, this measure is a strict distance metric, meaning that a smaller value in-dicates a larger possibility of being a multi-word expression. As can be seen from the formula, the key idea of this metric is to compute the ratio of the co-occurrence of all words in a multi-word expres-sions to the occurrence of the whole expression. 3.4.5 Configurations to Combine Various tors, we have different settings to score a new word, as follows: experiments: first, we will compare our method to several baselines, and perform parameter tun-ing with extensive experiments; second, we will classify polarity of new sentiment words using t-wo methods; third, we will demonstrate how new sentiment words will benefit sentiment classifica-tion. 4.1 Data Preparation http://www.weibo.com, the largest social website in China. These posts range from January of 2011 to December of 2012. The posts were then part-of-speech tagged using a Chinese word segmentation tool named ICTCLAS (Zhang et al., 2003).
 5,000 frequent words that were extracted by lexi-cal patterns as described in Algorithm 1. The an-notators were requested to judge whether a candi-date word is a new word, and also to judge the po-larity of a new word (positive, negative, and neu-tral). If there is a disagreement on either of the two tasks, discussions are required to make the fi-nal decision. The annotation led to 323 new word-s, among which there are 116 positive words, 112 negative words, and 95 neutral words 3 . 4.2 Evaluation Metric words, we adapt average precision to evaluate the performance of new sentiment word detection. The metric is computed as follows: where P ( k ) is the precision at cut-off k , rel ( k ) is 1 if the word at position k is a new word and 0 oth-erwise, and K is the number of words in the ranked list. A perfect list (all top K items are correct) has an AP value of 1.0. 4.3 Evaluation of Different Measures and tio test, which measures the association of a word to the pattern set. As can be seen from Table 4, theassociation model(LRT)remarkablyboosts the performance of new word detection, indicating L-RT is a key factor for new sentiment word extrac-tion. From linguistic perspectives, new sentiment words are commonly modified by adverbial words and thus should have close association with lexical patterns.
 method to two baselines. The first one is en-hanced mutual information (EMI) where we set F ( w ) = EM I ( w ) (Zhang et al., 2009) and the second baseline is normalized multi-word expres-sion distance (NMED) (Bu et al., 2010) where we set F ( w ) = N M ED ( w ) . The results are shown in Figure 1. As can be seen, all the proposed measures outperform the two baselines ( EM I and N M ED ) remarkably and consistently. The set-ting of F NMED produces the best performance. Adding N M ED or EM I leads to remarkable im-provements because of their capability of measur-ing non-compositionality of new words. Only us-ing LRT canobtaina fairly good resultswhen K is small, however, the performance drops sharply be-cause it's unable to measure non-compositionality. Comparison between LRT + LP E (or LRT + LP E + N W P ) and LRT shows that inclusion of left pattern entropy also boosts the performance apparently. However, the new word probabili-ty ( N W P ) has only marginal contribution to im-provement.
 number of patterns chosen at each iteration) and k w = 10 (the number of words added at each iter-ation), which is the optimal setting and will be dis-cussed in the next subsection. And only one seed word "  X  X  X  (reverse one's expectation)" is used. Figure 1: Comparative results of different measure settings. X-axis is the number of words returned ( K ), and Y-axis is average precision ( AP ( K ) ). 4.4 Parameter Tuning timal settings of k p and k w . The measure setting we take here is F NMED ( w ) , as shown in Formula (12). Again, we choose only one seed word "  X   X  (reverse one's expectation)", and the number of words returned is set to K = 300 . Results in Ta-ble 5 show that the performance drops consistent-ly across different k w settings when the number of patterns increases. Note that at the early stage of Algorithm 1, larger k p (perhaps with noisy pattern-s) may lead to lower quality of new words; while larger k w (perhaps with noisy seed words) may lead to lower quality of lexical patterns. Therefore, we choose the optimal setting to small numbers, as k p = 5 , k w = 10 .
 gorithm is sensitive to the number of seed words. We set k p = 5 and k w = 10 , and take F NMED as the weighting measure of new word. We exper-imented with only one seed word, two, three, and four seed words, respectively. The results in Ta-ble 6 show very stable performance when different numbers of seed words are chosen. It's interesting that the performance is totally the same with dif-ferent numbers of seed words. By looking into the pattern set and the selected words at each iteration, we found that the pattern set ( P ) converges soon to the same set after a few iterations; and at the be-ginning several iterations, the selected words are almost the same although the order of adding the words is different. Since the algorithm will finally sort the words at step (11) and P is the same, the ranking of the words becomes all the same.
 of patterns in P c (that is, k c in Algorithm 1) be-cause the set has been used in computing left pat-tern entropy, see Formula (4). Too small size of P c may lead to insufficient estimation of left pat-tern entropy. Results in Table 7 shows that larg-er P c decrease the performance, particularly when the number of words returned ( K ) becomes larger. Therefore, we set |P c | = 100 . 4.5 Polarity Prediction of New Sentiment polarity of the annotated 323 new words. Two methods are adapted with different settings for this purpose. The first one is majority vote (MV), and the second one is pointwise mutual information, similar to (Turney and Littman, 2003). The ma-jority vote method is formulated as below: where P W and N W are a positive and negative set of emoticons (or seed words) respectively, and # ( w, w p ) is the co-occurrence count of the input word w and the item w p . The polarity is judged ac-cording to this rule: if M V ( w ) &gt; th 1 , the word w is positive; if M V ( w ) &lt;  X  th 1 the word negative; otherwise neutral. The threshold th 1 is manually tuned.
 P r (  X  ) denotes probability. The polarity is judged according to the rule: if P M I ( w ) &gt; th 2 , w is positive; if P M I ( w ) &lt;  X  th 2 negative; otherwise neutral. The threshold th 2 is manually tuned. have three settings. The first setting (denoted by # seeds  X  1 2 3 4 Table 6: Performance with different numbers of seed words. The measure setting is F NMED ( w ) , and k p = 5 , k w = 10 . The seed words are chosen from Table 1.
 Large_Emo) is a set of most frequent 36 emoticons in which there are 21 positive and 15 negative e-moticons respectively. The second one (denoted by Small_Emo) is a set of 10 emoticons, which are chosen from the 36 emoticons, as shown in Table 8. The third one (denoted by Opin_Words) is two sets of seed opinion words, where P W ={  X  X  X  (happy),  X  X  X  (generous),  X  X  X  (beautiful),  X   X  (kind),  X  X  (smart)} and N W = {  X  X  X  (sad),  X   X  (mean),  X  X  X  (ugly),  X  X  (wicked),  X  (stupid)}. shown in Table 9. In two-class polarity classifi-cation, we remove neutral words and only make prediction with positive/negative classes. The first observation is that the performance of using emoti-cons is much better than that of using seed opin-ion words. We conjecture that this may be be-cause new sentiment words are more frequently co-occurring with emoticons than with these opin-ion words. The second observation is that three-class polarity classification is much more diffi-cult than two-class polarity classification because many extracted new words are nouns such as "  X   X  (gay)","  X  X  X  (girl)", and "  X  X  X  (friend)". Such nouns are more difficult to classify sentiment ori-entation. 4.6 Application of New Sentiment Words to new sentiment word would benefit sentiment clas-sification. For this purpose, we randomly sampled and annotated 4,500 Weibo posts that contain at least one opinion word in the union of the Hownet opinion lexicons and our annotated new word-s. We apply two models for polarity classification. The first model is a lexicon-based model (denot-ed by Lexicon ) that counts the number of positive and negative opinion words in a post respective-ly, and classifies a post to be positive if there are more positive words than negative ones, and to be negative otherwise. The second model is a SVM model in which opinion words are used as feature, and 5-fold cross validation is conducted.
 Hownet lexicon resources: Then, we add into the above resources the la-beled new polar words(denoted by N W , including 116 positive and 112 negative words) and the top 100 words produced by the algorithm (denoted by T 100 ), respectively. Note that the lexicon-based model requires the sentiment orientation of each dictionary entry 5 , we thus manually label the po-and the seed word set is {"  X  X  X  (reverse one's expectation)"}.
Emoticon Polarity Emoticon Polarity Table 8: The ten emoticons used for polarity pre-diction.
 Methods  X  Majority vote PMI Large_Emo 0.861 0.865 Small_Emo 0.846 0.851 Opin_Words 0.697 0.654 Large_Emo 0.598 0.632 Small_Emo 0.551 0.635 Opin_Words 0.449 0.486 Table 9: The accuracy of two/three-class polarity classification. larity of all top 100 words (we did NOT remove incorrect new word). This results in 52 positive and 34 negative words.
 new words in both models improves the perfor-mance remarkably. In the setting of the original lexicon (Hownet), both models obtain 2-3% gains from the inclusion of new words. Similar improve-ment is observed in the setting of the compact lex-icon. Note, that T 100 is automatically obtained from Algorithm 1 so that it may contain words that are not new sentiment words, but the resource also improves performance remarkably. large-scale user-generated content, this paper pro-poses a fully unsupervised, purely data-driven, and Hownet 627/1,038 0.737 0.756 Hownet+NW 743/1,150 0.770 0.779
Hownet+T100 679/1,172 0.761 0.774 cptHownet 138/125 0.738 0.758 cptHownet+NW 254/237 0.774 0.782 cptHownet+T100 190/159 0.764 0.775 Table 10: The accuracy of polarity classfication of Weibo post with/without new sentiment words. N-W includes 116/112 positive/negative words, and T100 contains 52/34 positive/negative words. almost knowledge-free (except POS tags) frame-work. We design statistical measures to quantify the utility of a lexical pattern and to measure the possibility of a word being a new word, respec-tively. The method is almost free of linguistic re-sources (except POS tags), and does not rely on elaborated linguistic rules. We conduct extensive experiments to reveal the influence of different sta-tistical measures in new word finding. Compara-tive experiments show that our proposed method outperforms baselines remarkably. Experiments also demonstrate that inclusion of new sentiment words benefits sentiment classification definitely. is capable to extract adjective new words because the lexical patterns usually modify adjective word-s. As future work, we are considering how to ex-tract other types of new sentiment words, such as nounal new words that can express sentiment. lowing grants from: the National Basic Re-search Program (973 Program) under grant No. 2012CB316301 and 2013CB329403, the National Science Foundation of China project under grant No. 61332007 and No. 60803075, and the Beijing Higher Education Young Elite Teacher Project.
