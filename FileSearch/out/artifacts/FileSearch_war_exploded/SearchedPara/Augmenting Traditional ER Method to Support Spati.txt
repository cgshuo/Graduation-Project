 Previous works in spatiotemporal database were mainly focused on spatiotemporal data models, spatiotemporal indexes, and spatiotemporal query processing. Recently, a few spatiotemporal database prototype systems were proposed [1, 2], in which they proposed to implement a spatiotemporal DBMS based on a commercial object-relational DBMS, such as Oracle, DB2, or Informix. However, few works have been done in spatiotemporal conceptual modeli ng, which has been an obstacle to build spatiotemporal database applications on the basis of spatiotemporal DBMSs. As tradi-tional conceptual modeling methods such as ER model can not support the modeling of spatiotemporal semantics, it is important to develop a spatiotemporal conceptual modeling tool to support spatiotemporal database applications. 
The key challenge to develop a spatiotemporal conceptual modeling tool is how to support various spatiotemporal semantics. The commonly-used ER method fails to geographical object, which refers to its creation, evolution, and elimination, is hard to be modeled according to the ER method. Recently, researchers have proposed some techniques to support spatiotemporal semantics in conceptual modeling tools. Since the ER model was widely used in the conceptual modeling of relational database applica-tions, many people extended the ER model to support spatiotemporal applications [3-7]. For example, N. Tryfona et al [3] presented the STER method for spatiotemporal conceptual modeling. It used some special symbols and syntax to add spatiotemporal topological changes into the framework. However, STER does not support modeling of objects X  lifecycle. Besides, STER is very abstractive and no CASE tools have been implemented. The MADS tool [4] is much like the ER model, but it is not ER-lifecycle and topological change. 
In this paper, we present a conceptual modeling tool for spatiotemporal database applications, called STXER. The motivation of STXER is to design an effective tool for spatiotemporal applications so that th ey can create spatiotemporal database sche-mas in a traditional way used in relational database setting. A preliminary assumption of STEXR is that the fundamental spatiotemporal DBMS is built on a commercial object-relational DBMS such as Oracle and Informix. This assumption is reasonable and practical, as the abstract-type-based a pproach to implementin g a practical spatio-temporal DBMS has been widely studied and promoted since it is proposed by R. H. G X ting et al. in 2000 [7]. For example, spatiotemporal extensions on Oracle were proposed by different researchers in recen t years [1, 2]. Compared with previous spatiotemporal conceptual modeling methods, STXER has the following unique features: ER modeling tools, thus it is easy for users to develop spatiotemporal or non-spatiotemporal conceptual models. (2) It supports richer spatiotemporal semantics than previous methods, so it can support diverse spatiotemporal database applications. STXER supports four types of spatiotemporal changes, which are described as follows: (1) TYPE 1 ( spatial processes ): the spatial attributes of an object change with time, such as spread of fire, flowing of flood, moving of a car, or boundary changes of a land. (2) TYPE 2 ( thematic processes ): the thematic attributes of an object change with time, such as changes of soil type and ownership change of a land. (4) TYPE 3 ( lifecycle ): changes that result in creation of new objects or deletion of existing objects, such as split of a land or mergence of several lands. (6) TYPE 4 ( topological changes ): changes of the topo-logical relationships of two related objects. For example, the topological relationship between a moving car and a road will change with time. STXER extends traditional ER model in three aspects. First, it adds spatiotemporal types in the type system, so users can use those types to represent spatial or thematic processes ( TYPE 1 and 2). Second, it adds a new attribute called LC to represent the changes ( TYPE 4). 
STXER contains three components (as shown in Fig.1): (1) Graphical User Interface : This module provides a graphical user interface for users to define an STXER diagram. Fig.2 shows a snapshot of the user interface, which consists of a menu, a toolbox, a model tree view, and a diagram area. We also develop an effective algorithm to arrange th e graphical elements in the diagram area. modified. According to this algorithm, the area related with two connected entities is divided into six sub-areas, namely a vertical sub-area, a horizontal sub-area, a south-western sub-area (SW), a north-eastern sub-area (NE), a west-northern sub-area (NW), and a south-eastern sub-area (SE). Th e vertical and horizontal sub-areas al-ways contain only straight lines, while the SW, NE, NW, and SE sub-areas always contain only polylines with one right angle. (2) Model Data Processing : In this module, we check the STXER model, and then During the checking process, we focus on three types of collisions, namely entity collision, relationship collision, and attribute collision. (3) I/O File Management : In this module, we define the input and output format of the STXER model. The STXER model is finally saved as a . stx file, and the diagrams maintained in a XML file. The XML file maintains information about the entities, relationships, transformations as well other elements of an STXER model. The XML file can be further used to generate a SQL script defining a physical database schema. Currently, STXER only allows users to generate the SQL script for Oracle 10g. STXER is implemented in C# language under Windows XP Professional and follow the object-oriented programming standard. Our demonstration will use STXER to create a spatiotemporal conceptual model fo r a land-use application and then build a spatiotemporal database in Oracle 10g. We will show how to quickly create an STXER diagram using our tool and represent different types of spatiotemporal seman-discuss the modeling process of STXER. Then we will choose Oracle 10g as the des-tination DBMS and connect to the Oracle database server. After that, we will use STXER to create spatiotemporal entities, relationships, lifecycles, and transformations to define an STXER model for a land-use application. We will also show how to check the STXER model and export XML schema and SQL scripts. This work is supported by the National High Technology Research and Development Program ("863" Program) of China (No. 2009AA12Z204), the National Science Foundation of China (no. 60776801), the Open Projects Program of National Labora-tory of Pattern Recognition (20090029), the Key Laboratory of Advanced Information Science and Network Technology of Beijing (xdxx1005), and the USTC Youth Inno-vation Foundation. 
