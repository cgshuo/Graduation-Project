 Supervised learning methods have become a stan-dard tool in natural language processing, and large training sets have been annotated for a wide vari-ety of tasks. However, most learning algorithms op-erate under assumption that the learning data orig-inates from the same distribution as the test data, though in practice this assumption is often violated. This difference in the data distributions normally re-sults in a significant drop in accuracy. To address this problem a number of domain-adaptation meth-ods has recently been proposed (see e.g., (Daum  X  e and Marcu, 2006; Blitzer et al., 2006; Bickel et al., 2007)). In addition to the labeled data from the source domain, they also exploit small amounts of labeled data and/or unlabeled data from the target domain to estimate a more predictive model for the target domain.

In this paper we focus on a more challenging and arguably more realistic version of the domain-adaptation problem where only unlabeled data is available for the target domain. One of the most promising research directions on domain adaptation for this setting is based on the idea of inducing a shared feature representation (Blitzer et al., 2006), that is mapping from the initial feature representa-tion to a new representation such that (1) examples from both domains  X  X ook similar X  and (2) an accu-rate classifier can be trained in this new representa-tion. Blitzer et al. (2006) use auxiliary tasks based on unlabeled data for both domains (called pivot fea-tures) and a dimensionality reduction technique to induce such shared representation. The success of their domain-adaptation method (Structural Corre-spondence Learning, SCL) crucially depends on the choice of the auxiliary tasks, and defining them can be a non-trivial engineering problem for many NLP tasks (Plank, 2009). In this paper, we investigate methods which do not use auxiliary tasks to induce a shared feature representation.

We use generative latent variable models (LVMs) learned on all the available data: unlabeled data for both domains and on the labeled data for the source domain. Our LVMs use vectors of latent features to represent examples. The latent variables encode regularities observed on unlabeled data from both domains, and they are learned to be predictive of the labels on the source domain. Such LVMs can be regarded as composed of two parts: a mapping from initial (normally, word-based) representation to a new shared distributed representation, and also a classifier in this representation. The danger of this semi-supervised approach in the domain-adaptation setting is that some of the latent variables will cor-respond to clusters of features specific only to the source domain, and consequently, the classifier re-lying on this latent variable will be badly affected when tested on the target domain. Intuitively, one would want the model to induce only those features which generalize between domains. We encode this intuition by introducing a term in the learning ob-jective which regularizes inter-domain difference in marginal distributions of each latent variable.
Another, though conceptually similar, argument for our method is coming from theoretical re-sults which postulate that the drop in accuracy of an adapted classifier is dependent on the discrep-ancy distance between the source and target do-mains (Blitzer et al., 2008; Mansour et al., 2009; Ben-David et al., 2010). Roughly, the discrepancy distance is small when linear classifiers cannot dis-tinguish between examples from different domains. A necessary condition for this is that the feature ex-pectations do not vary significantly across domains. Therefore, our approach can be regarded as mini-mizing a coarse approximation of the discrepancy distance.

The introduced term regularizes model expecta-tions and it can be viewed as a form of a general-ized expectation (GE) criterion (Mann and McCal-lum, 2010). Unlike the standard GE criterion, where a model designer defines the prior for a model ex-pectation, our criterion postulates that the model ex-pectations should be similar across domains.
 In our experiments, we use a form of Harmonium Model (Smolensky, 1986) with a single layer of bi-nary latent variables. Though exact inference with this class of models is infeasible we use an effi-cient approximation (Bengio and Delalleau, 2007), which can be regarded either as a mean-field approx-imation to the reconstruction error or a determinis-tic version of the Contrastive Divergence sampling method (Hinton, 2002). Though such an estimator is biased, in practice, it yields accurate models. We explain how the introduced regularizer can be inte-grated into the stochastic gradient descent learning algorithm for our model.

We evaluate our approach on adapting sentiment classifiers on 4 domains: books, DVDs, electronics and kitchen appliances (Blitzer et al., 2007). The loss due to transfer to a new domain is very sig-nificant for this task: in our experiments it was approaching 9%, in average, for the non-adapted model. Our regularized model achieves 35% aver-age relative error reduction with respect to the non-adapted classifier, whereas the non-regularized ver-sion demonstrates a considerably smaller reduction of 26%. Both the achieved error reduction and the absolute score match the results reported in (Blitzer et al., 2007) for the best version 1 of the SCL method (SCL-MI, 36%), suggesting that our approach is a viable alternative to SCL.
 The rest of the paper is structured as follows. In Section 2 we introduce a model which uses vec-tors of latent variables to model statistical dependen-cies between the elementary features. In Section 3 we discuss its applicability in the domain-adaptation setting, and introduce constraints on inter-domain variability as a way to address the discovered lim-itations. Section 4 describes approximate learning and inference algorithms used in our experiments. In Section 5 we provide an empirical evaluation of the proposed method. We conclude in Section 6 with further examination of the related work. The adaptation method advocated in this paper is ap-plicable to any joint probabilistic model which uses distributed representations , i.e. vectors of latent variables, to abstract away from hand-crafted fea-tures. These models, for example, include Restricted Boltzmann Machines (Smolensky, 1986; Hinton, 2002) and Sigmoid Belief Networks (SBNs) (Saul et al., 1996) for classification and regression tasks, Factorial HMMs (Ghahramani and Jordan, 1997) for sequence labeling problems, Incremental SBNs for parsing problems (Titov and Henderson, 2007a), as well as different types of Deep Belief Net-works (Hinton and Salakhutdinov, 2006). The power of these methods is in their ability to automat-ically construct new features from elementary ones provided by the model designer. This feature induc-tion capability is especially desirable for problems where engineering features is a labor-intensive pro-cess (e.g., multilingual syntactic parsing (Titov and Henderson, 2007b)), or for multitask learning prob-lems where the nature of interactions between the tasks is not fully understood (Collobert and Weston, 2008; Gesmundo et al., 2009).

In this paper we consider classification tasks, namely prediction of sentiment polarity of a user re-view (Pang et al., 2002), and model the joint distri-bution of the binary sentiment label y  X  { 0 , 1 } and the multiset of text features x ,x i  X  X . The hidden variable vector z ( z i  X  { 0 , 1 } , i = 1 ,...,m ) en-codes statistical dependencies between components of x and also dependencies between the label y and the features x . Intuitively, the model can be regarded as a logistic regression classifier with latent features.
The model assumes that the features and the latent variable vector are generated jointly from a globally-normalized model and then the label y is gener-ated from a conditional distribution dependent on z . Both of these distributions, P ( x , z ) and P ( y | z ) , are parameterized as log-linear models and, conse-quently, our model can be seen as a combination of an undirected Harmonium model (Smolensky, 1986) and a directed SBN model (Saul et al., 1996). The formal definition is as follows: where v and w are parameters,  X  is the logistic sig-moid function,  X  ( t ) = 1 / (1 + e  X  t ) , and the joint distribution of ( x , z ) is given by the Gibbs distribu-tion: P ( x , z | v )  X  exp( Figure 1 presents the corresponding graphical model. Note that the arcs between x and z are undi-rected, whereas arcs between y and z are directed.
The parameters of this model  X  = ( v , w ) can be estimated by maximizing joint likelihood L (  X  ) of labeled data for the source domain { x ( l ) ,y ( l ) } l  X  S and unlabeled data for the source and target domain labeled datasets for the source and target domains, respectively. However, given that, first, amount of unlabeled data | S U  X  T U | normally vastly exceeds the amount of labeled data | S L | and, second, the number of features for each example | x ( l ) | is usually large, the label y will have only a minor effect on the mapping from the initial features x to the latent representation z (i.e. on the parameters v ). Conse-quently, the latent representation induced in this way is likely to be inappropriate for the classification task in question. Therefore, we follow (McCallum et al., 2006) and use a multi-conditional objective, a spe-cific form of hybrid learning, to emphasize the im-portance of labels y : L (  X , X  )=  X  X where  X  is a weight,  X  &gt; 1 .

Direct maximization of the objective is prob-lematic, as it would require summation over all the 2 m latent vectors z . Instead we use a mean-field approximation. Similarly, an efficient ap-proximate inference algorithm is used to compute arg max y P ( y | x, X  ) at testing time. The approxima-tions are described in Section 4. As we discussed in the introduction, our goal is to provide a method for domain adaptation based on semi-supervised learning of models with dis-tributed representations. In this section, we first dis-cuss the shortcomings of domain adaptation with the above-described semi-supervised approach and motivate constraints on inter-domain variability of the induced shared representation. Then we pro-pose a specific form of this constraint based on the Kullback-Leibler (KL) divergence. 3.1 Motivation for the Constraints Each latent variable z i encodes a cluster or a com-bination of elementary features x j . At least some of these clusters, when induced by maximizing the likelihood L (  X , X  ) with sufficiently large  X  , will be useful for the classification task on the source do-main. However, when the domains are substan-tially different, these predictive clusters are likely to be specific only to the source domain. For ex-ample, consider moving from reviews of electronics to book reviews: the cluster of features related to equipment reliability and warranty service will not generalize to books. The corresponding latent vari-able will always be inactive on the books domain (or always active, if negative correlation is induced during learning). Equivalently, the marginal distri-bution of this variable will be very different for both domains. Note that the classifier, defined by the vec-tor w , is only trained on the labeled source examples tent variables, even though they do not generalize to the target domain. Clearly, the accuracy of such classifier will drop when it is applied to target do-main examples. To tackle this issue, we introduce a regularizing term which penalizes differences in the marginal distributions between the domains.

In fact, we do not need to consider the behavior of the classifier to understand the rationale behind the introduction of the regularizer. Intuitively, when adapting between domains, we are interested in rep-resentations z which explain domain-independent regularities rather than in modeling inter-domain differences. The regularizer favors models which fo-cus on the former type of phenomena rather than the latter.

Another motivation for the form of regularization we propose originates from theoretical analysis of the domain adaptation problems (Ben-David et al., 2010; Mansour et al., 2009; Blitzer et al., 2007). Under the assumption that there exists a domain-independent scoring function, these analyses show that the drop in accuracy is upper-bounded by the quantity called discrepancy distance. The discrep-ancy distance is dependent on the feature represen-tation z , and the input distributions for both domains P
S ( z ) and P T ( z ) , and is defined as d ( S,T )=max where f and f 0 are arbitrary linear classifiers in the feature representation z . The quantity E
P [ f ( z ) 6 = f signed to examples where f and f 0 disagree. Then the discrepancy distance is the maximal change in the size of this disagreement set due to transfer be-tween the domains. For a more restricted class of classifiers which rely only on any single feature 2 z , the distance is equal to the maximum over the change in the distributions P ( z i ) . Consequently, for arbitrary linear classifiers we have: d It follows that low inter-domain variability of the marginal distributions of latent variables is a neces-sary condition for low discrepancy distance. Min-imizing the difference in the marginal distributions can be regarded as a coarse approximation to the minimization of the distance. However, we have to concede that the above argument is fairly infor-mal, as the generalization bounds do not directly apply to our case: (1) our feature representation is learned from the same data as the classifier, (2) we cannot guarantee that the existence of a domain-independent scoring function is preserved under the learned transformation x  X  z and (3) in our setting we have access not only to samples from P ( z | x , X  ) but also to the distribution itself. 3.2 The Expectation Criterion Though the above argument suggests a specific form of the regularizing term, we believe that the penal-izer should not be very sensitive to small differ-ences in the marginal distributions, as useful vari-ables (clusters) are likely to have somewhat differ-ent marginal distributions in different domains, but it should severely penalize extreme differences.
To achieve this goal we instead propose to use the symmetrized Kullback-Leibler (KL) divergence be-tween the marginal distributions as the penalty. The derivative of the symmetrized KL divergence is large when one of the marginal distributions is concen-trated at 0 or 1 with another distribution still having high entropy, and therefore such configurations are severely penalized. 3 Formally, the regularizer G (  X  ) is defined as where P S ( z i ) and P T ( z i ) stand for the training sam-ple estimates of the marginal distributions of latent features, for instance: P
T ( z i = 1 |  X  ) = We augment the multi-conditional log-likelihood L (  X , X  ) with the weighted regularization term G (  X  ) to get the composite objective function:
Note that this regularization term can be regarded as a form of the generalized expectation (GE) crite-ria (Mann and McCallum, 2010), where GE criteria are normally defined as KL divergences between a prior expectation of some feature and the expecta-tion of this feature given by the model, where the prior expectation is provided by the model designer as a form of weak supervision. In our case, both ex-pectations are provided by the model but on different domains.

Note that the proposed regularizer can be trivially extended to support the multi-domain case (Mansour et al., 2008) by considering symmetrized KL diver-gences for every pair of domains or regularizing the distributions for every domain towards their average.
More powerful regularization terms can also be motivated by minimization of the discrepancy dis-tance but their optimization is likely to be expensive, whereas L R (  X , X , X  ) can be optimized efficiently. In this section we describe an approximate learning algorithm based on the mean-field approximation. Though we believe that our approach is independent of the specific learning algorithm, we provide the de-scription for completeness. We also describe a sim-ple approximate algorithm for computing P ( y | x , X  ) at test time.

The stochastic gradient descent algorithm iter-ates over examples and updates the weight vector based on the contribution of every considered exam-ple to the objective function L R (  X , X , X  ) . To com-pute these updates we need to approximate gradients of  X   X  log P ( y ( l ) | x ( l ) , X  ) ( l  X  S L ),  X   X  log P ( x ( l  X  S L  X  S U  X  T U ) as well as to estimate the con-tribution of a given example to the gradient of the regularizer  X   X  G (  X  ) . In the next sections we will de-scribe how each of these terms can be estimated. 4.1 Conditional Likelihood Term We start by explaining the mean-field approximation of log P ( y | x , X  ) . First, we compute the means  X  = (  X  1 ,..., X  m ) :  X  i = P ( z i = 1 | x , v ) =  X  ( v 0 i + P | x | j =1 v x Now we can substitute them instead of z to approx-imate the conditional probability of the label: We use this estimate both at testing time and also to compute gradients  X   X  log P ( y ( l ) | x ( l ) , X  ) during learning. The gradients can be computed efficiently using a form of back-propagation. Note that with this approximation, we do not need to normalize over the feature space, which makes the model very efficient at classification time.

This approximation is equivalent to the computa-tion of the two-layer perceptron with the soft-max activation function (Bishop, 1995). However, the above derivation provides a probabilistic interpreta-tion of the hidden layer. 4.2 Unlabeled Likelihood Term In this section, we describe how the unlabeled like-lihood term is optimized in our stochastic learning algorithm. First, we note that, given the directed nature of the arcs between z and y , the weights w do not affect the probability of input x , that is P ( x |  X  ) = P ( x | v ) .

Instead of directly approximating the gradient  X  v log P ( x ( l ) | v ) , we use a deterministic version of the Contrastive Divergence (CD) algorithm, equiv-alent to the mean-field approximation of the recon-struction error used in training autoassociaters (Ben-gio and Delalleau, 2007). The CD-based estimators are biased estimators but are guaranteed to converge. Intuitively, maximizing the likelihood of unlabeled data is closely related to minimizing the reconstruc-tion error, that is training a model to discover such mapping parameters u that z encodes all the neces-sary information to accurately reproduce x ( l ) from z for every training example x ( l ) . Formally, the mean-field approximation to the negated reconstruction er-ror is defined as where the means,  X  i = P ( z i = 1 | x ( l ) , v ) , are com-puted as in the preceding section. Note that when computing the gradient of  X  v  X  L , we need to take into account both the forward and backward mappings: the computation of the means  X  from x ( l ) and the computation of the log-probability of x ( l ) given the means  X  : 4.3 Regularization Term The criterion G (  X  ) is also independent of the classi-fier parameters w , i.e. G (  X  ) = G ( v ) , and our goal is to compute the contribution of a considered example l to the gradient  X  v G ( v ) .

The regularizer G ( v ) is defined as in equation (1) and it is a function of the sample-based domain-specific marginal distributions of latent variables P S and P T : where the means  X  ( l ) i = P ( z i = 1 | x ( l ) , v ) ; P be re-written analogously. G ( v ) is dependent on the parameters v only via the mean activations of the latent variables  X  ( l ) , and contribution of each exam-ple l can be computed by straightforward differenti-ation: where p = P S ( z i = 1 |  X  ) and p 0 = P T ( z i = 1 |  X  ) if l is from the source domain, and, inversely, p = P
T ( z i = 1 |  X  ) and p
One problem with the above expression is that the exact computation of P S and P T requires re-computation of the means  X  ( l ) for all the exam-ples after each update of the parameters, resulting in O ( | S L  X  S U  X  T U | 2 ) complexity of each iteration of stochastic gradient descent. Instead, we shuffle examples and use amortization; we approximate P S at update t by:  X 
P
S ( z i = 1)= where l is an example considered at update t . The approximation  X  P T is computed analogously. In this section we empirically evaluate our approach on the sentiment classification task. We start with the description of the experimental set-up and the baselines, then we present the results and discuss the utility of the constraint on inter-domain variability. 5.1 Experimental setting To evaluate our approach, we consider the same dataset as the one used to evaluate the SCL method (Blitzer et al., 2007). The dataset is com-posed of labeled and unlabeled reviews of four dif-ferent product types: books, DVDs, electronics and kitchen appliances. For each domain, the dataset contains 1,000 labeled positive reviews and 1,000 la-beled negative reviews, as well as several thousands of unlabeled examples (4,919 reviews per domain in average: ranging from 3,685 for DVDs to 5,945 for kitchen appliances). As in Blitzer et al. (2007), we randomly split each labelled portion into 1,600 ex-amples for training and 400 examples for testing.
We evaluate the performance of our domain-adaptation approach on every ordered pair of do-mains. For every pair, the semi-supervised meth-ods use labeled data from the source domain and unlabeled data from both domains. We compare them with two supervised methods: a supervised model ( Base ) which is trained on the source do-main data only, and another supervised model ( In-domain ) which is learned on the labeled data from the target domain. The Base model can be regarded as a natural baseline model, whereas the In-domain model is essentially an upper-bound for any domain-adaptation method. All the methods, supervised and semi-supervised, are based on the model described in Section 2.

Instead of using the full set of bigram and unigram counts as features (Blitzer et al., 2007), we use a fre-quency cut-off of 30 to remove infrequent ngrams. This does not seem to have an adverse effect on the accuracy but makes learning very efficient: the av-erage training time for the semi-supervised methods was about 20 minutes on a standard PC.

We coarsely tuned the parameters of the learning methods using a form of cross-validation. Both the parameter of the multi-conditional objective  X  (see Section 2) and the weighting for the constraint  X  (see Section 3.2) were set to 5 . We used 25 iterations of stochastic gradient descent. The initial learning rate and the weight decay (the inverse squared variance of the Gaussian prior) were set to 0 . 01 , and both pa-rameters were reduced by the factor of 2 every it-eration the objective function estimate went down. The size of the latent representation was equal to 10. The stochastic weight updates were amortized with the momentum (  X  ) of 0.99.

We trained the model both without regularization of the domain variability ( NoReg ,  X  = 0 ), and with the regularizing term ( Reg ). For the SCL method to produce an accurate classifier for the target do-main it is necessary to train a classifier using both the induced shared representation and the initial non-transformed representation. In our case, due to joint learning and non-convexity of the learning problem, this approach would be problematic. 4 Instead, we combine predictions of the semi-supervised mod-els Reg and NoReg with the baseline out-of-domain model ( Base ) using the product-of-experts combina-tion (Hinton, 2002), the corresponding methods are called Reg+ and NoReg+ , respectively.

In all our models, we augmented the vector z with an additional component set to 0 for examples in the source domain and to 1 for the target domain exam-ples. In this way, we essentially subtracted a un-igram domain-specific model from our latent vari-able model in the hope that this will further reduce the domain dependence of the rest of the model pa-rameters. In preliminary experiments, this modifica-tion was beneficial for all the models including the non-constrained one ( NoReg ). 5.2 Results and Discussion The results of all the methods are presented in Fig-ure 2. The 4 leftmost groups of results correspond to a single target domain, and therefore each of them is an average over experiments on 3 domain-pairs, for instance, the group Books represents an average over adaptation experiments DVDs  X  books, electronics  X  books, kitchen  X  books. The rightmost group of the results corresponds to the average over all 12 experiments. First, observe that the total drop in the accuracy when moving to the target domain is 8.9%: from 84.6% demonstrated by the In-domain classifier to 75.6% shown by the non-adapted Base classifier. For convenience, we also present the er-rors due to transfer in a separate Table 1: our best method ( Reg+ ) achieves 35% relative reduction of this loss, decreasing the gap to 5.7%.

Now, let us turn to the question of the utility of the constraints. First, observe that the non-regularized version of the model ( NoReg ) often fails to outper-form the baseline and achieves the scores consider-ably worse than the results of the regularized ver-sion (2.6% absolute difference). We believe that this happens because the clusters induced when opti-mizing the non-regularized learning objective are of-ten domain-specific. The regularized model demon-strates substantially better results slightly beating the baseline in most cases. Still, to achieve a larger decrease of the domain-adaptation error, it was necessary to use the combined models, Reg+ and NoReg+ . Here, again, the regularized model substantially outperforms the non-regularized one (35% against 26% relative error reduction for Reg+ and NoReg+ , respectively).

In Table 1, we also compare the results of our method with the results of the best ver-sion of the SCL method (SCL-MI) reported in Blitzer et al. (2007). The average error reduc-tions for our method Reg+ and for the SCL method are virtually equal. However, formally, these two numbers are not directly comparable. First, the ran-dom splits are different, though this is unlikely to result in any significant difference, as the split pro-portions are the same and the test sets are suffi-ciently large. Second, the absolute scores achieved in Blitzer et al. (2007) are slightly worse than those demonstrated in our experiments both for supervised and semi-supervised methods. In absolute terms, our Reg+ method outperforms the SCL method by more than 1%: 75.6% against 74.5%, in average. This is probably due to the difference in the used learning methods: optimization of the Huber loss vs. our latent variable model. 5 This comparison sug-gests that our domain-adaptation method is a viable alternative to SCL.

Also, it is important to point out that the SCL method uses auxiliary tasks to induce the shared feature representation, these tasks are constructed on the basis of unlabeled data. The auxiliary tasks and the original problem should be closely related, namely they should have the same (or similar) set of predictive features. Defining such tasks can be a challenging engineering problem. On the senti-ment classification task in order to construct them two steps need to be performed: (1) a set of words correlated with the sentiment label is selected, and, then (2) prediction of each such word is regarded a distinct auxiliary problem. For many other domains (e.g., parsing (Plank, 2009)) the construction of an effective set of auxiliary tasks is still an open prob-lem. There is a growing body of work on domain adapta-tion. In this paper, we focus on the class of meth-ods which induce a shared feature representation. Another popular class of domain-adaptation tech-niques assume that the input distributions P ( x ) for the source and the target domain share support, that is every example x which has a non-zero probabil-ity on the target domain must have also a non-zero probability on the source domain, and vice-versa. Such methods tackle domain adaptation by instance re-weighting (Bickel et al., 2007; Jiang and Zhai, 2007), or, similarly, by feature re-weighting (Sat-pal and Sarawagi, 2007). In NLP, most features are word-based and lexicons are very different for different domains, therefore such assumptions are likely to be overly restrictive.

Various semi-supervised techniques for domain-adaptation have also been considered, one example being self-training (McClosky et al., 2006). How-ever, their behavior in the domain-adaptation set-ting is not well-understood. Semi-supervised learn-ing with distributed representations and its applica-tion to domain adaptation has previously been con-sidered in (Huang and Yates, 2009), but no attempt has been made to address problems specific to the domain-adaptation setting. Similar approaches has also been considered in the context of topic mod-els (Xue et al., 2008), however the preference to-wards induction of domain-independent topics was not explicitly encoded in the learning objective or model priors.

A closely related method to ours is that of (Druck and McCallum, 2010) which performs semi-supervised learning with posterior regulariza-tion (Ganchev et al., 2010). Our approach differs from theirs in many respects. First, they do not fo-cus on the domain-adaptation setting and do not at-tempt to define constraints to prevent the model from learning domain-specific information. Second, their expectation constraints are estimated from labeled data, whereas we are trying to match expectations computed on unlabeled data for two domains.

This approach bears some similarity to the adap-tation methods standard for the setting where la-belled data is available for both domains (Chelba and Acero, 2004; Daum  X  e and Marcu, 2006). How-ever, instead of ensuring that the classifier param-eters are similar across domains, we favor models resulting in similar marginal distributions of latent variables. In this paper we presented a domain-adaptation method based on semi-supervised learning with dis-tributed representations coupled with constraints fa-voring domain-independence of modeled phenom-ena. Our approach results in competitive domain-adaptation performance on the sentiment classifica-tion task, rivalling that of the state-of-the-art SCL method (Blitzer et al., 2007). Both of these meth-ods induce a shared feature representation but un-like SCL our method does not require construction of any auxiliary tasks in order to induce this repre-sentation. The primary area of the future work is to apply our method to structured prediction problems in NLP, such as syntactic parsing or semantic role la-beling, where construction of auxiliary tasks proved problematic. Another direction is to favor domain-invariability not only of the expectations of individ-ual variables but rather those of constraint functions involving latent variables, features and labels. The author acknowledges the support of the Cluster of Excellence on Multimodal Computing and Inter-action at Saarland University and thanks the anony-mous reviewers for their helpful comments and sug-gestions.

