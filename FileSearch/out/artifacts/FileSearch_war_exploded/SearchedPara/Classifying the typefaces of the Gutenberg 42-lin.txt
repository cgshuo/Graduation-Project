 ORIGINAL PAPER Aureli Alabert  X  Luz Ma. Rangel Abstract We have measured the dissimilarities among several printed characters of a single page in the Gutenberg 42-line bible, and we prove statistically the existence of sev-eral different matrices from which the metal types were con-structed. This is in contrast with the prevailing theory, which states that only one matrix per character was used in the print-ing process of Gutenberg X  X  greatest work. The main math-ematical tool for this purpose is cluster analysis , combined with a statistical test for outliers. We carry out the research with two letters, i and a . In the first case, an exact clustering method is employed; in the second, with more specimens to be classified, we resort to an approximate agglomerative clus-tering method. The results show that the letters form clusters according to their shape, with significant shape differences among clusters, and allow to conclude, with a very small probability of error, that indeed the metal types used to print them were cast from several different matrices.
 Keywords Classification  X  Cluster analysis  X  Outlier testing  X  Johannes Gutenberg  X  42-line bible  X  Movable types 1 Introduction It has been accepted for a long time that the typefaces of the Gutenberg 42-line bible were produced by metal types coming from a unique matrix for each character. More pre-cisely, Zedler [ 15 ] classified 299 different glyphs , and this classification has been usually took as definitive until today. The 42-line bible (known for short as B42) is commonly believed to be the first printing work in which movable types were used, conferring Gutenberg the honor of the invention of this technology.
 However, when considering the personal background of Johannes Gutenberg and of the other people involved in the project (notably Johann Fust and Peter Sch X ffer), together with their historical circumstances and other technologi-cal reasons, one is compelled to question this single-matrix theory, and to consider the possible existence of multiple matrices.

In this paper, we show statistical evidence that there were more than one matrix for casting the metal types. To this end, we quantify numerically the dissimilarities between pairs of printed letters representing the same glyph, and we see that the letters cluster in a natural way in groups with shapes that are similar inside each group and significantly different from the shapes of the members in the other groups. Statistical cluster analysis is our main technique, further complemented with outlier testing to validate the clusters obtained.
The printed letter has some  X  X rrors X  or  X  X eviations X  with respect to the ideal shape derived from the metal type, due to inking or to paper inhomogeneity. Moreover, metal types derived from the same matrix may present deviations with respect to the ideal intended shape defined by that matrix (manufacturing deviations or wear), which can be considered of the same order as the ink and paper errors. These errors can be considered as random, and independent for each printed letter in the same page. We need to  X  X ilter out X  these random deviations to observe whether there is an actual structural dif-ference among letters, attributable to the fact that they indeed come from different matrices.
Obviously, letters printed with the same metal type do come from the same matrix and will be very similar in shape. Therefore, we want to study a set of letters for which we can ensure that all of them were printed with different types. If different letter shapes are then observed, we will know that these differences are due only to a diverse matricial origin.
To guarantee that all types are different, we only need to take letters printed on the same page, since a whole page (two columns) was printed at once from a complete form made by the typographic composer. In contrast, opposite pages in the same sheet could not be printed concurrently by Gutenberg presses, so it would be wrong to use a set of letters coming from both pages.

The wear of a matrix, caused by heat and frequency of use, affects very little the engraved part from which the shape of the letter in the metal type is produced. The matrix breaks or become useless for other reasons, as classical typographers know. Hence, it is not likely that we can observe different shapes coming from the same matrix in different states of states of wear, and much less to observe clusters. On the other hand, all types produced by the same matrix are almost indistinguishable, and the damage of a type comes mainly from accidents, like dropping, since lead is a soft metal. In this case, it is usually dismissed, since it can be fully recy-cled in an easy and cheap manner. This means that it is also unlikely to observe different clusters made from damaged types coming from the same matrix.
 We have chosen for convenience the first page of the Gospel of Matthew (see Fig. 1 ), and we have considered in that page 10 letters i and 21 letters a . We have discarded only those few letters that could not be isolated enough from their neighbors for a reliable scanning. The quantity of 10 objects is small enough to permit the computation of the optimal clustering under any prefixed criterion, by simple exhaustive search. On the other hand, 21 objects give more possibilities to find out different patterns, if they are present, although we must resort to an approximate method of cluster analy-sis because of the enormous time that the full enumeration would take.

The specific letters i and a have been chosen for the fol-lowing reasons. Letter i is the simplest: It has only one con-tour and its matrix was made by a single hit of the punch. Moreover, the horizontal space occupied by the i has been taken as a unit of measure in typography design, and it is highly probable that the same punch was used to produce other letters, e.g. m , n , u of the gothic textura typeface. On the other hand, letter a is one of the most complex, since it possesses three contours (two interior counters). This feature is shared with s and g , but the latter are less frequent, and they would produce smaller sample sizes in any page.
The paper is organized as follows: In Sect. 2 , we introduce our main mathematical tools, cluster analysis, and outlier testing, recall some basic concepts of classical typography, and briefly highlight the facts that confer its importance to the book under consideration. Section 3 is devoted to the detailed description of the procedure followed to measure the distances between pairs of printed letters, which is the initial datum to apply the cluster analysis. Section 4 explains our exact method to find a good clustering and its application to 10 letters i in Matthew X  X  first page; exact means that an optimality criterion is established and that the absolute opti-mum is found with respect to that criterion. The approximate cluster analysis is described in Sect. 5 , and it is illustrated with letters i one more time. The results are compared to those obtained with the exact method; this comparison will permit us to ensure that the approximate method applied to the twenty-one letters a in the next Sect. 6 is meaningful. The actual application of the hierarchical clustering is done in Subsect. 6.1 , whereas in 6.2 , we apply a statistical method of detection of anomalous data (outliers) to validate the clus-ters obtained in 6.1 .

It is not possible to represent graphically each letter as a point in some space, in such a way that the ordinary Euclidean distances among the points coincide exactly with the measured distances, since the latter are not true distances in the mathematical sense (the triangle property does not hold true). However, it is possible to represent the relative posi-tions of the letters approximately, in 2 and 3 dimensions, by means of the so-called Multidimensional Scaling . In Sect. 7 , a representation is the plane is given for both letters. The final Sect. 8 sketches the future plans in the line of research of this paper.

The present study has a necessary conservative bias. We are asking the experimental data to give us more than cir-cumstantial evidence of the existence of several concurrent matrices, since this is a conclusion that runs against the cur-rently accepted theory. 2 Preliminaries 2.1 Mathematical tools Cluster analysis comprises a variety of methods that intend to obtain a reasonable grouping of a set of objects, based on the similarities among them. Each group is called a cluster , and a particular grouping, where each object is assigned to one cluster, is called a clustering . In modern statistics, cluster analysis is viewed as the main tool in the field of unsupervised learning .

To perform a cluster analysis, it is enough to have a mea-sure representing a  X  X istance X  or dissimilarity between each pair of objects. Ideally, a cluster must possess internal cohe-sion (i.e. small dissimilarities among the objects of the same cluster) and external isolation (that means, large dissimilar-ities between two objects of different clusters). There are several reasonable ways to implement this idea. The choice of one or another is a matter of mathematical modeling and must be done to suit the particular situation at hand. In Sub-sect. 4.2 , we explain different good standard possibilities and justify our specific choice, which is in fact a variant of one of them, and seems to be new.

Cluster analysis will be complemented, in the study of let-ters a , with two additional tools. On the one hand, we will use the data supplied by a small set of letters printed with brand new types cast with the same matrix. This set will play the role of control group to estimate which sort of variability one can expect from letters with a common matricial origin (Subsect. 6.1 ). On the other hand, we will use statistical tests for the detection of extreme data ( outliers ) to confirm, with a probability of error controlled and small, that two different clusters must be indeed considered distinct (Subsect. 6.2 ).
A classical exposition of cluster analysis can be found for instance in Gordon [ 8 ]. A modern approach, imbedded in the so-called unsupervised learning theory , is Chap. 14 of Friedman et al. [ 7 ]. The basic reference on outliers is the book by Barnett and Lewis [ 2 ]. 2.2 Typographical terms For the reader not well acquainted with the concepts of clas-sical (i.e. non-digital) typography, we briefly explain some terms and procedures here. They are not strictly needed to follow the rest of the article, but they help in understanding the motivation of our work. See Fig. 2 for a picture of the relevant elements. For a detailed and illustrated description, we refer the reader to Smeijers [ 12 ], and also to the on-line document [ 4 ], prepared by the authors.

A matrix is a piece of brass or copper in which the let-ter is engraved, by means of a previously made steel tool called a punch , which represented the character in reverse. One punch is needed for every character of a typeface and every size. Some parts of the punch are actually made by means of a counterpunch , but we do not need to go that far here.

The matrix already contains information on the point size ( ps in Fig. 2 ) of the printed character, because the vertical alignment of the matrix and the casting mould is fixed. The space that the metal type will really occupy in the line, the character width ( w in Fig. 2 ), is determined by the relative position of the two parts of the mould. The metal type is cast in an alloy of lead that is poured into the cavity formed by the mould and the matrix. In the matrix, the character has the right-reading direction, but it is engraved. In the type, it shows in the wrong-reading direction and in relief. The typo-graphical space of the printed character is the rectangle with dimensions width  X  (point size) that contains the character.
The metal types are then gathered in a form to print a whole page. Therefore, several types representing the same character are in general needed at the same time, as many as identical characters are to be printed in the page.
The precise methods used by Gutenberg are still the sub-ject of much research, but according to [ 1 ], the method described here was well established by 1470. 2.3 The 42-line bible The printing of the so-called 42-line bible started in 1453 and was a very serious enterprise at that time. Gutenberg had been working for years perfecting the foundry mould technique with his previous metallurgical knowledge, and he needed the aid of the businessman Johannes Fust to finance the project, and the collaboration of the calligrapher Peter Sch X ffer to develop the typographical concept. The society was broken in the middle of the production of the approxi-mately 200 copies of the book, and Gutenberg was removed from the project and sued by Fust. The whole printing was completed in August 1456.

There were other minor printing works before and after this one, and several versions of the same manuscript are named, when possible, according to the number of lines per page. The B42, however, possesses several pages printed at 40 lines, and it is not yet clear what was the reason. It is anyway considered the start of an era, because of the huge dimension of the work. Moreover, all copies show still today an extremely beautiful and bright ink, made from a recipe that has been lost, and that was never used again in subsequent work. Chemical non-destructive analysis carried out in the 1980s (Cahill et al. [ 10 ]) has found out a high metallic con-tent, especially of lead and copper, but the compounds used and their proportions are not known.

All these facts have contributed to make this bible one of the most interesting books of all times, from many scien-tific, social, and historical points of view. Currently, around 55 copies are known to have survived either totally or par-tially. An inventory can be found in the fundamental work of Schwenke [ 11 ]. For a general history of the book, we recommend [ 6 ]. 3 How the dissimilarities were measured Although we will use both terms distance and dissimilarity , we recall that the dissimilarities here need not respect the tri-angular inequality; hence, they are not distances in the usual mathematical sense.

The measuring device was the Mitutoyo QVA-200 [ 9 ], with a resolution of 0.0001 mm, and equipped with its pro-prietary software QVPack and FormPack. The letters were measured from a back up microfilm of the New Testament of the 42-line bible located in the library of the Universidad de Sevilla [ 3 ]. The quality of the microfilm and the resolution of the device allow to identify contours accurately enough. The differences between letters due to ink, paper, etc can be easily observed. A reproduction of a scanned letter from the microfilm can be seen in [ 4 ].

To estimate the measurement error attributable to the device and the measuring process, we measured the dissimi-larity of one scanned letter with itself, and the values were in the order of 10  X  27 mm 2 . Two different scans of the same let-ters gave rise to a value of at most 10  X  6 . As we will see, this value is at least one order of magnitude below the relevant values in measuring the dissimilarities between two different printed letters, and therefore, the measuring process can be considered stable and trustable in this aspect. This process is subsequently described.

The measuring device scans each printed letter and deter-mines the contour of its shape. A contour is approximated by points and by line segments joining the points, forming a polygonal closed curve. Some letters possess empty inner spaces ( counters ), and in this case, the contour is constituted by more than one connected curve.

The first step in the measuring process of two given con-tours A and B is to place them in a coordinate plane, in a similar orientation and sharing a common reference point, e.g. the barycenter. Then, an initial distance between the two shapes is determined, and one of the shapes is moved in the plane (with translations and rotations), in order to obtain a lower distance. The distance is again computed and a new movement takes place. This iterative process stops when no further improvement seems possible.

At each iteration n , the distance is computed in the fol-lowing way: From each point p of contour A , its Euclidean distance d ( p , B ) to contour B is computed, that means, the distance to the closest segment of contour B . The squares of the distances are then added up: D If the process stops after n f iterations, the value D n f by the number of points in A , is taken as the dissimilarity D ( A , B ) of A with respect to B . Since the role of both shapes in this process is not symmetric, the roles are interchanged and the corresponding quantity D ( B , A ) is computed. The final (symmetric) value of dissimilarity between A and B will be the mean diss ( A , B ) := 1 2 ( D ( A , B ) + D ( B , A ) ) . The division by the number of points of the shape allows to compare different pairs of shapes in a common scale.
Notice that we are using the contours to represent the shape of the letters, and to compute their dissimilarity. No infor-mation is lost in this representation. Moreover, the measure is based on the mean proximity of the contours and therefore is quite robust in front of local printing errors. 4 Exact clusterings for letter i 4.1 Dissimilarity table The10letters i printed in the odd numbered lines in the first page of the Gospel of Matthew have been compared in pairs with the procedure described in Sect. 3 , and a symmetric table of dissimilarities has been obtained. This is the suitable initial datum to proceed with the cluster analysis.
The original dimensions of the letters in the microfilm are in the orders of 10  X  1 mm (the  X  X  X  height is around 0.285 mm) and give rise to dissimilarities in the order of 10  X  5 mm a more comfortable visualization of the values, these have been multiplied by 10 4 , and the leading zeroes are omitted. The results are depicted in Table 1 .

In the next subsections, we will study the classification of the letters i starting from this table. At the same time, we introduce the necessary cluster analysis theory. The code to perform the statistical analysis has been written in the language R [ 13 ]. 4.2 How to value each possible clustering As mentioned in Sect. 2 , we intend to have cohesive and iso-lated clusters. Suppose we have N objects (in our case, the N = 10 letters i ) and assume that we want to divide these objects into a given number K of clusters. (Actually, we do not want to fix the number of clusters from the start, but let us assume that we do. Later we come back to the discussion on the number of clusters.)
In order to find the best clustering with K clusters, we need to assign to each such clustering a certain cost and then try to find the clustering with the minimum cost. There are several reasonable possibilities to translate the desired properties of cohesion and isolation into a cost function.

Common criteria proceed by evaluating the cost of each specific cluster and then combine the individual costs of the clusters. Both things can be done in several ways. For the first one, the following values are typically used: 1. The maximum of the dissimilarities among objects in the 2. The sum of those dissimilarities. 3. For each object, the sum of all dissimilarities between 4. For each object, the mean of all dissimilarities between
To combine the costs of each individual cluster, there are also two usual criteria: (a) Adding up the costs of all clusters. (b) Taking the maximum of the costs.

Methods 3 and 4 have the advantage that they distinguish a particular object in each cluster, namely the one for which the sum or mean of dissimilarities with the other objects is smallest (the same object in both methods, obviously). This allows to see the other objects as located  X  X round the priv-ileged one X . In our case, it allows to take one letter as a  X  X odel X  and to think of the other ones as  X  X ariants X  of the model, representing, in theory, a printed letter coming pos-sibly from the same matrix as the model but with different metal types and printing errors.

Between possibilities (a) and (b), we prefer the second, because with the first, we may find clusters with a high cost coexisting with clusters of small cost. Taking the maximum as the value to minimize tends to make the clusters uniform in this sense, and in our opinion, this is more reasonable and conservative in the situation we are studying.

Once we decided to use criterion (b) for the combination of the costs of all clusters, the new proposed alternative 4 is better than the standard idea 3, as the next example shows: Suppose that for the letter i , we want to compare clustering { 1 }{ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 } , with clustering { 1 , 10 }{ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } .
 With the combination 3-b, the first one has a cost of 0.7050 and the second one a cost of 0.6124, therefore making the second option preferable. But this does not seem reasonable, because letters 1 and 10 are the farthest apart in the whole set. What happens here is that in the first clustering, we have a cluster of zero cost (because there is only one object in it, so that the internal cohesion is absolute) and another one with cost 0.7050; in the second clustering, the first cluster new cost is 0.3929, the distance between letters 1 and 10, and the sec-ond lowers to 0.6124. The maximum has therefore dropped from 0.7050 to 0.6124, and the second clustering turns out to be better.

This inconvenience tends to appear with criteria 3-b if there are clusters with a very unbalanced quantity of ele-ments. With the alternative 4-b, the number of elements in the clusters is not relevant. In the same example, now the first clustering has a cost of 0.0881, much better than the second, which is 0.3929.

In summary, we take combination 4-b as the best suited for this study, although we have not been able to find in the literature an example of application of this particular combi-nation of criteria. Our choice gives rise to:  X  The possibility of graphically representing the clusters as  X  No coexistence of very cohesive clusters together with  X  No coexistence, within a cluster, of letters distant from 4.3 Finding the optimal clustering When the number of objects is small, and still assuming that we have fixed the number of clusters, the optimal cluster-ing can be found by exhaustive enumeration of all possible clusterings.

We have used this direct method to classify the 10 letters i in 2 and 3 clusters. From the 511 possible partitions into two clusters, the best one is { 1 }{ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 } , whereas among the 9330 clusterings with three clusters, one finds { 1 }{ 3 , 7 }{ 2 , 4 , 5 , 6 , 8 , 9 , 10 } .

As mentioned above, it is possible to graphically repre-sent these clusterings by means of  X  X tars X . The best cluster-ing with three clusters is so displayed in Fig. 3 . Letter i1 is isolated, letters i3 and i7 form a second cluster, in which it is irrelevant which letter is taken as the center, and finally the remaining letters form a cluster around letter i2 .The distances from i2 to its companion letters are shown on the solid lines, and the distances with the other three letters are also shown, on half-dashed lines. (The lengths of the lines in the picture are not proportional to the dissimilarity.)
Notice that the internal distances are smaller than the dis-tances among model letters of the different clusters. This is not a necessary consequence of the criterion chosen, but addi-tional good property enjoyed by this particular clustering.
We could have tried to find the best clustering with four or more clusters, but there are very few objects, and its valid-ity would be questionable. At the end of Subsect. 6.2 ,we give another reason against the possibility of more than three clusters.

For the 21 letters a , the direct and exact method was not computationally feasible, and we resorted to and approxi-mate method, as we will see in Sects. 5 and 6 . 4.4 The number of clusters The issue of the number of clusters present, or of the exis-tence of more than one, does not have a universal solution. Our point of view is based in the following considerations:  X  First of all, we want to be in the conservative side; that  X  Second, our goal is not to determine exactly how many  X  In the third place, although it is necessary to take some 5 Approximate clusterings To compute the best partition into clusters, there is no way essentially more efficient than the exhaustive enumeration that we have applied to letters i . Therefore, if the enumera-tion is impossible because of the input size, one has to settle for some approximate method, able to provide a reasonably good solution.

The approximate method that we use here corresponds to the heuristic procedure called agglomerative hierarchical clustering (see, e.g. [ 7 , 8 ]). With this method, one constructs in fact a hierarchy of clusterings, so that one has to decide afterwards which clustering in the hierarchy to keep.
It starts by declaring each object as a cluster by itself, and then bigger clusters are constructed from smaller ones in sequence. At each step, two clusters are merged together to form a bigger one, namely, those which are the closest in some sense.

This idea raises the need to define a notion of dissimilarity among clusters , which involves again a certain arbitrariness in the choice. There are three reasonable and commonly used possibilities: 1. The dissimilarity between two clusters is the dissimilar-2. The dissimilarity between two clusters is the dissimilar-3. The dissimilarity between two clusters is the arithmetic
We illustrate the hierarchical agglomerative clustering arising from the three possibilities above with the letters i , already studied with an exact method, and we discuss the cor-relation of each variant with respect to the exact results. We are able in this way to justify the choice of the next section for the study of the 21 letters a . 5.1 The single linkage With any of the three possibilities, one can draw a graphical representation of the agglomerative process, called dendro-gram . For instance, the single linkage for the 10 letters i produces the dendrogram of Fig. 4 . The height of the hori-zontal lines, read in the vertical axis, is the distance between the two clusters that hang from the line, and that combine into one at that point.

Now, looking at the dendrogram, we should decide how many and which clusters seem to exist. When applying the method to the letters a , we will use additional information to help us in this purpose. Here, we only want to observe to which extent the approximate methods give similar results to the exact method used in the previous section.

Specifically, we see in the dendrogram that letter 1 must be clearly set apart from the others, and we also observe a clear separation between group { 3 , 7 } and the remaining let-ters, although not so clear as with letter 1. This reflects fairly well in a graphical way the results that we obtained when we imposed 2 or 3 clusterings. Moreover, looking for a split-ting in more than three clusters will not be supported by the dendrogram.

The single linkage method is very conservative, in the sense that it can easily consider in the same cluster two very distant objects, as long as they are connected by a chain of other objects, each one similar enough to the next. 5.2 The complete linkage The complete linkage method takes the opposite heuristic, and this makes it little conservative: It tends to keep sepa-rated pairs of objects that perhaps are not so different. The clusters produced tend to be cohesive but not quite isolated.
With the complete linkage agglomerative clustering, we obtain the dendrogram in Fig. 5 . Up to four clusters could be concluded from the picture. Moreover, even sticking to three clusters, the result would not coincide with that of the single linkage (letters 5 and 9 switch clusters). This dendrogram thus suggests a result more distant to the exact one than that obtained with the single linkage method. 5.3 The average linkage The average linkage is half-way between the previous meth-ods. It gives rise to dendrogram of Fig. 6 . The distance between two clusters C 1 and C 2 is computed as |
C where | C | means the number of elements of cluster C , and diss ( o 1 , o 2 ) is the given dissimilarity between objects o and o 2 .

The list in Table 2 indicates the order in which the clusters are formed, and the distance between merging clusters. The central column indicates which clusters are merged. A num-ber n refers to a single object (the n-th letter i ), whereas a letter means the multiobject cluster formed in the line labeled with that letter. We observe that the dendrogram here looks more correlated with the exact result of Sect. 4 than the com-plete or even the single linkage dendrogram. The clearest cut point produces the same partitions in two and three clusters and, moreover, the separation of the group { 3 , 7 } apparent here. Therefore, we believe that this method is the one with results more similar to the exact method correspond-ing to criterion 4-b that we have applied. We will adopt it for the classification of the twenty-one letters a in the next section. 6 Cluster analysis for letter a In the previous Sect. 5 , we have compared several approxi-mate clustering methods with the exact cluster analysis per-formed with our optimality criterion. We concluded that the average linkage method was the one with the best results. We thus apply this method to classify the twenty-one a taken from the first page of the Gospel of Matthew. The correspond-ing dissimilarity measures can be seen in Table 3 . 6.1 Dendrograms for letter a The dendrogram corresponding to the average linkage vari-ant of the hierarchical clustering is displayed in Fig. 7 .
The order in which the different clusters are sorted hor-izontally does not have any special meaning. Here, we fol-low the convention of drawing to the left the more compact cluster, that is, the one formed at the lowest level. The corre-sponding sequence of cluster formation, sorted by merging level, is given in Table 4 . We follow the same convention of the analogous list above.

Concerning the choice of the clustering in the hierarchy, which amounts to determine the number of clusters, the usual heuristic, when no other information is available, is to  X  X ut X  the dendrogram wherever the jumps in the distances of con-secutive mergings are higher than a threshold magnitude. For instance, the jump from 0.1752 to 0.2309 between lines r and s would give us a partition in three clusters that looks quite clear.

But we do have an additional information to determine the number and composition of clusters. This information is given by a set of dissimilarities measured from a test printing of newly created types. We have used types belonging to the typographic collection of the Bauer Neufville Type Foundry, kept at the Universitat de Barcelona. These will play the role of  X  X ontrol group X , since we know for sure that they come from the same matrix. If we try to divide them in clusters, all of them must therefore become members of the same and only cluster. Comparing these letters in the same way as we did with the microfilmed letters of the Gospel of Matthew, we can see the magnitude of the dissimilarities that we can expect and that are attributable only to the errors of construc-tion of the metal types and to printing errors.

The actual size of the types of the control group is of course different from the one of the microfilmed letters, so that the absolute values of the dissimilarities cannot be directly used to compare the two groups. We have to define a common comparison base that will not be influenced by the different size. A natural and easy way to establish a common unit of measure is the following: 1. The control group is organized around a model letter, 2. The quotient is computed between the largest and the
We have applied this procedure to the letters m , i , a , o , with five specimens each, and the results are summarized in Table 5 .

The quotient between the largest and the smallest distance to the model gives us an estimate of the variability that we can expect from a unique matrix. We see that the quotients range between 1.1307 and 2.0625.

We will use this estimate in the following way for our set of a : We take the two letters that are the closest and declare them, obviously, as belonging to the same cluster. This min-imum distance is 0.0754, and it is found between letters a6 and a15 . According to the data obtained from the control group, the letters at a distance up to 2.0625 times this min-imum distance (i.e. distances up to 0.1555) may perfectly belong to the same cluster.

Therefore, we can draw a cutting line in the dendrogram at level 0.1555 (the red line in Fig. 7 ) and declare all clusters grouped below this line as indivisible.

Thus, we obtain six clusters. We can now construct the stars corresponding to these clusters, finding their model let-ters and the distances from the remaining letters to its model (see Table 6 ).

Our conclusion up to this moment is that the maximum number of clusters that we obtain from the twenty-one letters a is six, because splitting any one of them would be analo-gous to declare that the metal types of the studied control group came from more than one matrix, which is false. 6.2 Validation of clusters We are now interested in checking whether we have actually gone too far in the number of clusters found, and some of them should better be merged into larger ones, following our conservative criterion to declare two letters as coming from the same matrix if there is no strong evidence against this hypothesis. Take also into account that the dendrogram is the result of an approximate method, built upon a somewhat arbitrary choice of the criterion with which the hierarchy is constructed; it is therefore absolutely necessary to validate the present clusters with some sieve reflecting the conserva-tive spirit.

To this end, we use a statistical test for the detection of outliers. In general, an outlier in a set of numerical data is a datum markedly different from the rest, that seems to result from some sort of measuring error or typo, or in summary that should not be there , because it does not really belong to that data set.

As an example, let us take cluster number 3. The model is letter a8 , and so we can draw a star with center in a8 and the corresponding distance to the other letters. These distances are sorted in increasing order: 0 . 0972 0 . 1041 0 . 1105 0 . 1221 0 . 1347
Take now any other letter, not belonging to cluster 3, and observe its distance to the model a8 . For instance, a1 hap-pens to be at a distance 0.1536 from a8 . Is this distance too large to include also a1 in cluster 3? Or, on the contrary, it is not much different from the others, and the larger distance is only the product of chance?
The conservative hypothesis, and therefore the one that it is considered true a priori, as in any statistical test, is the second possibility above: the distance between a1 and a8 is not exceedingly large, and in consequence, a1 should also belong to cluster 3. This null hypothesis will be abandoned only if there is enough evidence against it. The evidence is measured in terms of the p -value, the probability of rejecting the null hypothesis when it was in fact true. If the p -value is less than a certain threshold fixed beforehand (typically 10, 5 or 1%), then the null hypothesis is rejected; otherwise, it is kept, conservatively, as the good one (albeit with a probabil-ity to err with this conclusion that can be very high).
We are going to apply the so-called Dixon X  X  test , the usual one to test for the presence of one outlier in a data set. Let x 1 ,..., x n be the data set, sorted in increasing order, including as x n the suspect datum. Dixon X  X  test computes the statistic Q := x n Intuitively, a large value for this quotient indicates that there is a large difference between the last value and the one before last (relatively to the dispersion of the whole data set), induc-ing us to believe that the last value is an outlier and to reject the working hypothesis. If, on the contrary, the quotient is small, then the difference between x n  X  1 and x n is small, and there is no reason to declare x n as outlier.

Continuing the example above, if we want to see whether letter a1 belongs to cluster 3, we compute the value of the Dixon X  X  statistic: Q = 0
In order to apply reliably Dixon X  X  test to determine whether the value 0.3351 is too large or not, the data must satisfy two assumptions that in our case are fulfilled: a) The data follow a Gaussian law, and b) they are statistically independent.

Gaussianity is justified by the fact that each datum is the sum of a large quantity of very small values (the distances from points of one contour to segments of the other, divided by its number, see Sect. 3 ). Therefore, independently of the underlying probability law of those small values, the sum will very approximately follow a Gaussian law, thanks to the Central Limit Theorem.

The independence is obvious because the result of mea-suring the distance from any letter to the  X  X odel X  letter does not influence the result of the distance between a third letter and the model. (Notice that if we include the distance among the letters which are not models, the independence would be lost.)
Under these conditions, the probability distribution of the random variable Q , assuming that there are no outliers, is known. This allows to compute the probability that Q attains a value greater than or equal to the observed one if x n is not an outlier. In the case of our example, the probability of the event { Q  X  0 . 3351 } is approximately 0.27. This is the prob-ability of mistakenly declare that x n is an outlier. Of course, it is too high to take the risk.

Notice that the test takes into account the sample size in the computation of the p -value. It is not an approximate or asymptotic test, and therefore, the sample need not be large to ensure the reliability of the p -value.
Letter a1 may therefore be included in cluster 3. But we have said that cluster 1 will not be split. So, let us check what happens with the remaining letters in cluster 1, namely a4 , a9 , and a20 , which are at distances 0.3173, 0.2087, 0.2228 from the model a8 of cluster 3 (see Table 3 ). Using Dixon X  X  test, one finds that all three of them fall below the 5% thresh-old of probability of a mistake if we declare them outside cluster 3 ( &lt; 0 . 0001, 0.0156, and 0.0095, respectively). So this is what we do and we keep definitively separated clusters 1 and 3.

Repeating the same idea with the remaining clusters, we obtain that:  X  Cluster 5 integrates in cluster 6 (in fact, they were close  X  Cluster 2 can easily be integrated in cluster 1. In this case,  X  Cluster 4 (letter a11 ) does not integrate in the new cluster  X  It can be checked that there are no other possibilities for
We arrive then to the final classification in four clusters given in Table 7 .
 We remark once again that the procedure we have used is conservative: we are pretty sure that there is more than one perfectly possible that there are actually more than 4.
We also remark that sometimes an outlier can be masked by the presence of another questionable datum. There exist statistical tests to expose the existence of two outliers at once (e.g. Grubbs X  test, see [ 2 ]); however, following our conservative spirit, we have preferred not to try to iden-tify such situations and, if it happens, to accept both data as genuine.

At first sight, the decision of declaring as separate two rejected as admissible by the second one may seem more risky. But one should take into account that it is still more risky to split a cluster which has been first declared indivisi-ble. Suppose, on the other hand, that we do not want to split the first cluster but we want to know whether it should be completely integrated in the second. Recall that this must be the null hypothesis of the test. Now, the probability of error in declaring mistakenly out of a cluster more than one letter is still smaller than the probability of declaring out of the cluster each one of them. Therefore, if one of the letters does not exceed the fixed 5% of probability of error, a set of more than one letter will not exceed that value either.

Table 8 show the computed probabilities that have allowed to conclude the final classification of Table 7 from the pre-liminary classification of Table 6 , through Dixon X  X  test. For each possible destination cluster, we list the candidate letters, with the cluster to which they belong. Only the rejections ( p -values less than 5%) are shown. 1  X  2 and 5  X  6 mean the union of these clusters, whose model letters turn out to be a5 and a12 , respectively.

To close the section, we return for a moment to the anal-ysis of the ten letters i , in connection with the validation of clusters.

In Sect. 4 , we obtained the optimal (exact) clusterings, conditioned to the existence of exactly two or three clusters. We can also apply Dixon X  X  test for outliers to those clus-terings, and the result confirms the partitions seen. It is also natural to use the test to check whether a partition in 4 clusters could be reasonable. The result is negative:
The best clustering with four clusters (exact, with the cri-terion introduced in Sect. 4 )is  X  ={ 1 } , X  ={ 3 } , X  ={ 5 } , X  ={ 2 , 4 , 6 , 7 , 8 , 9 , But Dixon X  X  test does not support i5 out of cluster It does for i1 and i3 , with p -values &lt; 0 . 0001 and 0.0117, respectively.

The second best clustering with four clusters turns out to be  X  ={ 1 } , X  ={ 3 } , X  ={ 7 } , X  ={ 2 , 4 , 5 , 6 , 8 , 9 , which looks more consistent with our previous partition in three clusters. Again i1 and i3 cannot be integrated in  X  with p -values 0.0032 and 0.0075, respectively, and although i7 could be, we should integrate first i3 , from the dendro-gram, given that we cannot perform an outliers test against a cluster with one only element.

As a curiosity, it turns out that the model letters (center of the star) for clusters  X  in the two cases above are different. They are i8 in the first case and i2 in the second. In fact, they are very close letters, and these changes are not surprising when changing slightly the composition of a cluster.
In conclusion, this study forcing four clusters does not bring us more than what was already shown: We can postulate with confidence the existence of three clusters, and concerning its composition, the safest bet is our first option  X  ={ 1 } , X  ={ 3 , 7 } , X  ={ 2 , 4 , 5 , 6 , 8 , 9 , 10 } , with a certain risk, coarsely bounded by a probability of 0.32 of error in separating letter 7 from cluster  X  . The clustering with two clusters, merging  X  and  X  , looks to us extremely conservative. 7 Graphical representation of clusterings The Multidimensional Scaling (MDS) is a technique that allows to represent graphically in dimensions 2 or 3 the set of objects that are being classified, providing a visual impres-sion of the closeness among different objects or clusters of objects. The distances in the display are not the true dissimi-larities; they are the best possible approximation (according to some loss function) so that the data can be embedded in the 2-or 3-dimensional space.

The specific coordinates of the points have no intrinsic meaning; only the relative position among objects is to be read. In particular, any rotation, symmetry or translation of the picture gives rise to another picture with exactly the same meaning. Yet it can be assured that the mapping is monotone: if an object possesses dissimilarities d 1 and d 2 with other two objects, and d 1 &lt; d 2 , then the corresponding distances in the picture  X  d 1 and  X  d 2 also satisfy  X  d 1 &lt;  X  d 2 .
The MDS in dimension 2 for the 10 letters i and the 21 letters a are shown in Figs. 8 and 9 . The stars of the optimal clustering found have also been displayed, and we see that the clusters appear quite clearly in the pictures.

The extent to which a possible graphical representation of a set of objects differs from the real dissimilarities is called stress and can be defined in several reasonable ways. The representation used here is the variant known as Kruskal Non-metric Multidimensional Scaling . The stress S is defined as S = where d are the given dissimilarities among the objects,  X  are the distances in the graphic, and f is a monotonically increasing transformation that gives an extra flexibility to the adjustment. The position of the points is obtained by seeking the distances  X  d and the transformation f that minimize the stress. The monotonicity of f ensures that if one dissimilar-ity is smaller than another, then the corresponding distances in the picture preserve that order.
 More details on Kruskal Non-metric Multidimensional Scaling can be seen, for instance, in Chap. 3 of [ 5 ], or in Chap. 11 of [ 14 ]. 8 Conclusion and open questions We have reached the statistical conclusion that letters i and a had coexisting metal types coming from different matri-ces. We have used cluster analysis on the shape of printed letters, together with the technological facts that induce to rule out other possibilities for the observation of clusters, as explained in Sect. 1 . Although only two of the most frequent letters have been submitted to the study, it is likely that the property is also shared by all but maybe the less common glyphs.

From the historical research point of view, finding out which tools were used or developed by Sch X ffer and Gutenberg to complete their monumental work is one of the most interesting items. The fact that metal types built from multiple matrices were used concurrently, as we prove here, is a new aspect that indicates that matrix construction was quite evolved. The use of punches and counterpunches to sculpt the inner contours is agreed today; the tools used for the outer contours are not so clear. The letters a , and other letters with counters, offer the additional possibility to shed light in this respect.

We have carried out a prospective study with the inner lower contour of letter a (in the gothic textura typeface it has indeed two inner contours), and the results seem to indicate that different outer contours combine with different inner contours. This may imply that punches were also used to delineate the external shape of the matrix. However, we feel that we should first gather many more experimental data, implementing also an improved measuring protocol, and we have therefore decided not to include those results here.
We have also started to measure letters coming from the subsequent pages of the same bible book, the Gospel of Matthew. We have computed their distances with the twenty-one letters of the first page, just to see whether they can be integrated into the existing clusters or not. What we observe is that most of them integrate well in the clusters, but that a few new  X  X odels X  appear. This was absolutely in line with what we expected after obtaining the results concerning the first page (see [ 4 ] for pictures similar to Fig. 3 with the new letters).

Notice that, using letters coming from different pages, and that may therefore be printed from the same metal type, three levels of similarity should be observed: Letters very similar among them, appearing for sure in different pages, printed with the same metal type; similar letters, but not that much, printed with different types but with a common matri-cial origin; and letters with low similarity, printed from types coming from different matrices. We do not have yet enough data to confirm this, but we believe it is feasible to carry out this program in the future.
 References
