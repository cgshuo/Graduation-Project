 ETH Zurich and University of Zurich
What is here called controlled natural language (CNL) has traditionally been given many have been designed. They are applied to improve communication among humans, to improve
A comprehensive survey of existing English-based CNLs is given, listing and describing 100 single scattered cloud filling the conceptual space between natural languages such as English on the one end and formal languages such as propositional logic on the other. The goal of this article is to provide a common terminology and a common model for CNL, to contribute to the the area, and to help developers to make design decisions. 1. Introduction of attributes given to constructed languages of the type to be discussed here. We will call them controlled natural languages (CNL) or simply controlled languages .Basic English, Caterpillar Fundamental English, SBVR Structured English, and Attempto
Controlled English are some examples; many more will be presented herein. This article investigates the nature of such languages, provides a general classification scheme, and explores existing approaches.
 teristic properties of CNL, making it a very fuzzy term. There are two main reasons for this. First, CNL approaches emerged in different environments (industry, academia, and government), in different disciplines (computer science, philosophy, linguistics, and engineering), and over many decades (from the 1930s until today). People from different backgrounds often used and continue to use different names for the same kind of language. Second, although controlled natural languages seem to share important properties, they also exhibit a very wide variety: Some are inherently ambiguous, others very little in others; some look perfectly natural, others look more like programming languages; some are defined by just a handful of grammar rules, others are so complex that no complete grammar exists. This variety makes it difficult to get a clear picture of the fundamental properties. This article aims at resolving this problem by giving an overview of existing CNLs and by providing a general classification scheme. Generally, this work has several, partly overlapping, goals, ranging from purely theoretical to more practical objectives (listed in this order): linguistics. Among other techniques, they involve lexical analyses, grammar and style checking, ambiguity detection, machine translation, and computational semantics. survey presented in this article is restricted to these languages and excludes existing approaches based on other natural languages, such as German and Chinese. The clas-sification scheme to be presented, however, is general and not restricted to English in any way.
 scheme is introduced (Section 3), existing English-based CNLs are classified and de-scribed based on a small sample (Section 4), the results are analyzed (Section 5), and languages with short descriptions for each of them. 2. Background meaning, to establish a common definition, and to understand the differences in related terms. In addition, it is helpful to review previous attempts to classify and characterize
CNLs. 2.1 Definition
As mentioned earlier, there is no generally agreed-upon definition for controlled natural language and for closely related terms including controlled language, constrained natu-ral language, simplified language, and controlled English. The following two quotations illustrate this: 122
Both descriptions exhibit a strong bias towards one particular type of CNL (these types languages that are designed to improve comprehensibility, whereas the second one only covers languages that can be interpreted by computers. They agree, however, on the fact that a CNL is based on a certain natural language but is more restrictive. It is also generally agreed that CNLs are constructed languages, which means languages that did not emerge naturally but have been engineered. The use of the term subset is misleading though, because many CNLs are not proper subsets of the underlying natural language. Many of these languages have small deviations from natural grammar or semantics.
Others make use of unnatural elements such as colors and parentheses to increase readability and precision. Some even consider the programming language COBOL a controlled natural language (Sowa 2000a). The subset relation in its mathematical sense is clearly too strict to cover a large part of the languages commonly called CNL.
Although they all clearly share important properties, the specific languages can be who compared English-based CNLs of different types, came to the conclusion that no common core language can be identified. To meet these problems, the following definition is proposed here: Definition 1 (long) following four properties: 1. It is based on exactly one natural language (its  X  X ase language X ). 2. The most important difference between it and its base language (but not 3. It preserves most of the natural properties of its base language, so that 4. It is a constructed language, which means that it is explicitly and
Properties 2 and 3 are deliberately vague, because it is not possible or desirable to draw a strict line there. Properties 1 and 3 refer to the N in CNL: naturalness; Properties 2 and 4 refer to the C: control. We will later be able to be a little more precise concerning
Property 3. We leave it for now, and we can summarize this relatively verbose definition in the form of the following short version: Definition 2 (short)
A controlled natural language is a constructed language that is based on a certain natural language, being more restrictive concerning lexicon, syntax, and/or semantics, while preserving most of its natural properties. is restricted to sequential languages and excludes visual languages such as diagrams and the like. We can verify that Definition 2 includes virtually all languages that have been called CNL, and it excludes natural languages (because they are not constructed), languages such as Esperanto (because they are not based on one particular natural lan-guage), and common formal languages (because they lack intuitive understandability). 2.2 Related Terms
Before we move on to examine the types and properties of languages, we should discuss a number of terms that are related to CNL and are easy to confuse: sublanguage, fragments of language, style guide, phraseology, controlled vocabulary, and constructed language.
 (i.e.,  X  X xperts X ) shares some specialized knowledge about a restricted semantic domain [and] the experts communicate about the restricted domain in a recurrent situation, or set of highly similar situations X  (Kittredge 2003, page 432). As with controlled nat-ural language, a sublanguage is based on exactly one natural language and is more restricted. The crucial difference between the two terms is that sublanguages emerge naturally, whereas CNLs are explicitly and consciously defined.
 urally delineated subset of [a natural] language X  (Pratt-Hartmann and Third 2006). The term is closely related to CNL and the difference seems to be mainly a methodological one: Fragments of language are identified rather than defined , they are closely kept in the context of the full natural language and related fragments, and their purpose is rather to theoretically study them than to directly use them to solve a particular problem. A
CNL can be seen as a fragment of a language  X  X eveloped for the purpose of supporting some technical activity X  (Pratt-Hartmann 2009, page 1).
 natural language. Some style guides such as  X  X ow to Write Clearly X  (European Com-mission 2011) provide  X  X ints, not rules X  and therefore do not describe a new language, but only give advice on how to use the given natural language. However, other style guides such as the Plain Language Guidelines (PLAIN 2011) are stricter and do describe a language that is not identical to the respective full language. The question of whether such a language can be considered a CNL depends on whether the style guide defines a new language or whether it merely describes good practices that have emerged naturally.
 or group X  (Houghton Mifflin Harcourt 2000). Typically, this term is used when the gram-matical structure is simpler than in full natural language. In contrast to sublanguages and fragments of languages, a phraseology is not a selection of sentences but a selection of phrases . Phraseologies can be natural or constructed, and in the latter case they are usually considered CNLs.
 (ANSI/NISO 2005). Mostly, controlled vocabularies target a specific, narrow domain. In contrast to CNL, they do not deal with grammatical issues, that is, how to combine the terms to write complete sentences. Many CNL approaches, especially domain-specific ones, include controlled vocabularies. 124 guages that did not emerge naturally but have been consciously defined. In this broad sense, the term includes (but is not limited to) languages such as Esperanto, program-ming languages, and CNLs. 2.3 Types and Properties
Let us now turn to the nature of CNLs. To bring order to their seemingly chaotic variety, more than 40 properties of such languages and their environments have been identified for a strict categorization. For the survey to be presented in Section 4, we collect nine general and clear-cut properties and give them letter codes. As it turns out, however, these properties mainly describe the application environment of languages and not so much the languages themselves. For that reason, a classification scheme is introduced in the next section to describe the fundamental nature of CNLs and other languages. the problem they are supposed to solve (Schwitter 2002): to improve communication among humans, especially speakers with different native languages (we will use the letter code C for these languages); to improve manual, computer-aided, semi-automatic, or automatic translation ( T ); and to provide a natural and intuitive representation for formal notations ( F ). The last type includes approaches for automatic execution of texts, which requires, at least conceptually, a mapping to an executable formalism. As we will see, these three types emerged at different points in time: Type emerged later, and type F is the most recent of the three. Although this seems to be a sensible and useful subdivision, a simpler version based on just two types dominates the literature. Huijsen (1998) introduced the distinction between  X  X uman-oriented X  and  X  X omputer-oriented X  languages. The former roughly corresponds to type to the types T and F . However, Huijsen observes that  X  X t is often difficult to qualify a controlled language as either human-oriented or machine-oriented, since often simpli-fication works both ways X  (page 2). Because these types describe problems rather than languages , reusing a language in a different problem domain can change its type even if the language itself has not changed at all. Other similar categorizations include the distinction between  X  X aturalistic X  (type C and T ) and  X  X ormalistic X  (type (Pool 2006; Clark et al. 2010) and the distinction between readability and translatability (Reuther 2003).
 code A ), some from industry ( I ), some from a government or a UN agency ( purpose languages and those for a particular restricted domain is often discussed (Pool 2006). This is related to the distinction of whether the lexicon is open or closed (Adriaens and Schreors 1992). We will use the letter code D to denote languages targeting a specific and narrow domain. A further important difference is the one between written and spoken languages. We will use W to denote languages that are intended to be written, seems to describe a fundamental language property: Languages that originated in one closed; written languages can be read aloud; and spoken languages can be written down.
 not allowed, whereas prescriptive rules describe what is allowed. Languages defined by proscriptive rules alone must have some starting point in the form of a given (natural) language. Languages with only prescriptive rules, in contrast, typically start from scratch. As we will see, there is a close connection of this distinction to the concept of simplicity as introduced in the next section.
 properties such as the support for subclauses and free compounding (Adriaens and
Schreors 1992), specific restrictions on grammatical tenses and modal verbs (O X  X rien 2003), and support for interrogative and imperative sentences (Wyner et al. 2010). therefore any combination is possible in theory (with the exception that no language should be neither W nor S ).
 tention: their life cycle. Some languages are not much more than abstract ideas, others have left this stage being applied to concrete problems, and yet others have progressed to widespread application in productive environments. At different stages of maturity, languages can be discontinued or abandoned, which signifies the end of their life cycle.
Obviously, these different stages flow into each other and it is often difficult to name a concrete year of birth or death (especially the latter, as most CNLs die silently). Where possible, we will keep track of these life cycle properties. 3. PENS Classification Scheme
As we have seen, the CNL properties introduced here describe application domains rather than the languages themselves. Certainly, several fundamental language properties have been identified and discussed in the literature, such as expressiveness (Mitamura and Nyberg 1995; Boyd, Zowghi, and Farroukh 2005; Pool 2006), complexity (Mitamura and Nyberg 1995), grammar modifications (Pool 2006), understandability, natural look-and-feel, ambiguity, predictability, and formality of definition (Wyner categorization.
 degree (though not entirely) independent of each other. Ambiguity, predictability, and 126
Expressiveness can make up a second dimension. Grammar modifications, under-standability, and natural look-and-feel can be combined to a dimension of naturalness .
A fourth dimension can be called complexity or X  X o have a dimension of the type  X  X ore is better X  X  simplicity . This is how we arrive at the four dimensions Preci-sion, Expressiveness, Naturalness, and Simplicity that underlie the PENS classification scheme. 1 ature fall into one of these general dimensions, or can be broken down into different aspects that can be mapped to these dimensions. There are no strong dependencies between any two dimensions (for any dimension pair, it is easy to imagine languages that are at the top, bottom, and opposite ends in these two dimensions). Furthermore, there is no obvious dimension pair that could be merged in a meaningful way. Together, this seems to indicate that this set of dimensions is minimal yet complete. conceptually located somewhere in the gray area between natural languages on the one end and formal languages on the other. Generally, CNLs are more formal than natural languages but more natural than formal ones. For instance, a natural language such as English is very expressive, but complex and imprecise. A formal language time unnatural and inexpressive. CNLs must be somewhere in the middle, but where exactly? least very fine-grained. In fact, one can argue that each of the dimensions is actually multidimensional and that representing it in one dimension is a rough simplification.
Such simplifications are necessary, however, in order to get a precise measure for such vague concepts such as expressiveness.
 such as propositional logic as pegs to span a conceptual space in which different its four dimensions to five classes, to be numbered from 1 to 5. These five classes are non-overlapping and consecutively cover the one-dimensional space between the two extremes: English on the one end and propositional logic on the other. For precision and simplicity, English is on the bottom end of the scale in class 1, which we write as P
S . Propositional logic is on the opposite end of the scale in class 5, represented with
P 5 and S 5 . For expressiveness and naturalness, the roles are switched: English is at the top end (E 5 and N 5 ) and propositional logic at the bottom (E scheme defines a conceptual space for CNLs that includes natural and formal languages as special cases. Combining the four dimensions gives 5 with shorthand such as P 1 E 5 N 5 S 1 for English and P 5 difficult and interesting part of this intellectual exercise is where and how to draw the borders between the five classes of each dimension.
 arbitrary. A larger number of classes allows for more detailed classifications, although it also gets more difficult to come up with strict and objective criteria to define these classes. Five seems to be a good middle ground. 3.1 Precision
The precision dimension of the PENS scheme captures the degree to which the meaning of a text in a certain language can be directly retrieved from its textual form, that is, the sequence of language symbols. Natural language is very imprecise in this sense, because a large amount of context information is needed to grasp the meaning of typical sentences. Formal logic languages, on the other hand, have maximal precision, because their meaning is strictly defined solely on the basis of the possible sequences of their language symbols. The symbol grounding problem, that is, the problem of mapping symbols to their counterparts in the real world, is not considered here, because it affects all languages, including both natural and formal ones. On this precision dimension, languages are divided into the five classes P 1 ,P 2 ,P 3
Imprecise languages (P 1 ). Virtually every sentence of these languages is vague to a certain degree. Without taking context into account, most sentences of a certain complexity are ambiguous. The automatic interpretation of such languages is  X  X I-complete, X  which means it is a problem for which no complete solutions are in sight. These languages and include borderline statements on which readers disagree. The same applies to the semantic properties of the language. All natural languages belong to this category.
Less imprecise languages (P 2 ). For these languages, the degree of ambiguity and vague-ness is considerably lower than in natural languages, and their interpretation depends the respective ambiguous, vague, or context-dependent constructs. However, these con-structs are still too dominant to make automatic interpretation reliable. Such languages are typically not related to a formal (i.e., mathematically precise) underpinning.
Reliably interpretable languages (P 3 ). The syntax of these languages is heavily restricted, though not necessarily formally defined. The restrictions are strong enough to make automatic interpretation reliable. There is a logical underpinning or at least a formal conceptual scheme, in which the semantics of sentences can be represented. However, the mapping of sentences to their formal representations is itself not defined in a fully formal way, but requires external background knowledge, heuristics, or user feedback. in such a language can be deterministically parsed to a formal logic representation, or
Based on the underlying formalism, these representations describe the meaning of parameters, background axioms, external resources, or heuristics to enable sensible deductions.

Languages with fixed semantics (P 5 ). These languages are fully formal and fully specified on both the syntactic and semantic levels. Each text has exactly one meaning, which can be automatically derived. The circumstances in which inferences hold or do not hold are fully defined. What conclusions follow from a given text in the language (e.g., whether it is consistent and which sentences of the language are a consequence of the text) can be defined with mathematical rigor, without the help of heuristics or external resources. 128 3.2 Expressiveness
The dimension of expressiveness describes the range of propositions that a certain language X can describe everything that language Y can, but not vice versa. The relation of  X  X eing more expressive X  does not constitute a total order: For two given languages of nonequal expressiveness, it can be the case (and often is the case) that neither is more expressive than the other. This entails that ranking a general set of languages in a linear order according to their expressiveness cannot be done in a completely objective way. a subset of all possible expressiveness features. These expressiveness features should be general and important ones, and at the same time allow for a balanced and clear discrimination between the languages to be classified. The PENS classification scheme employs the following five expressiveness features: (a) universal quantification over individuals (possibly limited) (b) relations of arity greater than 1 (e.g., binary relations) (c) general rule structures ( if X  X hen statements with multiple universal (d) negation (strong negation or negation as failure) (e) general second-order universal quantification over concepts and relations of other important features that could be considered, for example, support for existen-interrogative, directive, and indirect speech acts). However, to achieve a simple clas-and lead to a classification that seems consistent with the intuitive understanding of expressiveness.
 guages but also informal as well as procedural ones, it makes sense to apply a weaker notion of expressiveness than what is usually applied to logic languages. From the re-search on programming languages, we can adopt the convention that a certain language construct adds expressiveness if its removal would require  X  X  global reorganization of the entire program X  (Felleisen 1991). If a certain language construct allows us to express something locally which would otherwise require us to reorganize the entire text, then we say that this language construct makes the language more expressive. This means, for example, that a language with second-order features relying on Henkin semantics qualifies for the last criterion of the above list, even though Henkin semantics can be reduced to first-order. A given set of statements written in a language with Henkin-style second-order features cannot generally be reduced to first-order logic without global reorganization, that is, changing statements that do not actually use second-order features. With this qualification, we can define the five classes as follows:
Inexpressive languages (E 1 ). These are languages lacking one or both of the features (a) and (b): They have no universal quantification or no relations of arity greater than 1.
Propositional logic belongs to this category.
Languages with low expressiveness (E 2 ). Such languages have both of the features (a) and (b),butarenotE 3 -languages: They have universal quantification over individuals and relations of arity greater than 1. Description logics belong to this category. (a), (b), (c), and (d), but are not E 4 -languages: They have general rule structures and negation, in addition to the features of E 2 . First-order logic belongs to this category. (d), and (e), but are not E 5 -languages: They have second-order universal quantification over concepts and relations, in addition to the features of E calculus belongs to this category.

Languages with maximal expressiveness (E 5 ). These languages can express anything that can be communicated between two human beings. Such languages cover any statement in any type of logic. Obviously, this includes all of the features. All natural languages belong to this category. 3.3 Naturalness
The dimension of naturalness describes how close the language is to a natural language in terms of readability and understandability to speakers of the given natural language. We define the five classes as follows:
Unnatural languages (N 1 ). These are languages that do not look natural, making heavy use of symbol characters, brackets, or unnatural keywords. It might be possible to use natural words or phrases as names for certain entities, but this is neither required nor further defined by the language.

Languages with dominant unnatural elements (N 2 ). Natural language words or phrases unnatural statement structure, or have unnatural semantics. The natural elements do not connect in a natural way to each other, and speakers of the given natural language typically fail to intuitively understand the respective statements.

Languages with dominant natural elements (N 3 ). In such languages, natural elements are dominant over unnatural ones and the general structure corresponds to natural lan-guage grammar. Due to the remaining unnatural elements or unnatural combination of elements, however, the sentences cannot be considered valid natural sentences.
Speakers of the given natural language do not recognize the statements as well-formed sentences of their language, but are nevertheless able to intuitively understand them to a substantial degree.

Languages with natural sentences (N 4 ). These are languages with sentences that can be considered valid natural sentences. Speakers of the respective natural language recog-nize the statements as sentences of their language and are able to correctly understand their essence without instructions or training. Minor or infrequent exceptions and unnatural means for clarification (including text color, indentation, hyphenation, and capitalization) are permitted as long as they do not disturb the natural look-and-feel 130 and the natural flow of the sentence. Parentheses and brackets in unnatural positions, however, in most cases do disturb the natural text flow considerably, and are therefore typically not present in this category. Although single sentences have a natural flow, this does not scale up to complete texts or documents. Complete texts in such languages seem very clumsy and repetitive, and lack a natural text flow.

Languages with natural texts (N 5 ). With these languages, complete texts and documents can be written in a natural style, with a natural text flow, and with natural semantics.
In the case of spoken languages, complete dialogs can be produced with a natural flow and a natural combination of speech acts.

We can now be a little more precise concerning our definition of CNL. Property number 3 of the long version of the definition shown in Section 2.1 says that a CNL  X  X reserves most of the natural properties of its base language, so that speakers of the base language can intuitively and correctly understand texts in the controlled natural language, at least to a substantial degree. X  We will interpret this in such a way that it only includes languages of naturalness N 3 and higher. Thus, by this definition, there are no CNLs with N 1 or N 2 . 3.4 Simplicity comprehensive language description covering syntax and semantics, if such a com-knowledge about any natural language. It is therefore not primarily a measure for the effort needed by a human to learn the language, neither does it capture the theoretical complexity of the language (as, for example, the Chomsky hierarchy does). Rather, it is closely related to the effort needed to fully implement the syntax and the semantics of the language in a mathematical model, such as a computer program.

The number of pages in natural language needed to describe the language in an exact and comprehensive way. For languages for which no such exact and comprehensive descriptions exist or can be written (that do not presuppose linguistic knowledge on languages with the complexity of natural language from languages with considerably lower complexity.
 semantic properties of the language using accepted grammar notations to define the syntax and accepted mathematical or logical notations to define the semantics. They are assumed to use scientific writing style as found in scientific articles or technical reports, and should allow a skilled grammar engineer to implement a correct and complete parser within a reasonable time. The page count should be based on a one-column format with up to about 700 words per page. It is important to note that the criterion is not the presence of such a description but whether it is possible or not to write one. in an equal way, these language descriptions do not need to include the vocabularies. Concretely, the five classes are defined as follows: Very complex languages (S 1 ). These languages have the complexity of natural languages.
They cannot be described in an exact and comprehensive manner.
Languages without exhaustive descriptions (S 2 ). These are languages that are considerably structures are eliminated or heavily restricted. Still, they are too complex to be described in an exact and comprehensive manner. Usually, the definitions of such languages just describe restrictions on top of a given natural language that is taken for granted.
Languages with lengthy descriptions (S 3 ). Such languages can be defined in an exact and comprehensive manner, but it requires more than ten pages to do so.

Languages with short descriptions (S 4 ). These are languages for which an exact and com-prehensive description requires more than one page but not more than ten pages.
Languages with very short descriptions (S 5 ). Such very simple languages can be described in an exact and comprehensive manner on a single page.

S and S 2 are considered complex because they rely on a given natural language.
Coming back to a distinction briefly introduced in the previous section, such languages are typically defined by proscriptive rules, describing what is not allowed compared with language from scratch. For that reason, they are simpler in our sense of the word than languages of the first type, which  X  X mport X  the complexity of full natural language.
Before we move on to apply this scheme, it should be stressed that PENS is designed to measure the nature of a language, not its quality or usefulness .Itshouldbeusedto describe languages, not to rank them. As the  X  X erfect X  language does not exist, compromises have to be made. Depending on application area, environment, and goal, different weights are assigned to the PENS dimensions, and therefore different optimal levels result. In theory, more is better for each of the PENS dimensions, but this does not neces-sarily hold in practice. A certain level in any of the dimensions is often good enough for a given application domain, and going beyond that level brings no additional benefit.
Furthermore, as we restrict ourselves to just five classes per dimension, there can be relatively large differences within one class. It is inevitable that two languages in the same class can be farther apart in the respective dimension than two languages in adjacent classes. Even if a language has higher PENS values in every dimension than sense of the word. Having a high PENS score for expressiveness, for example, just means that the general expressiveness level is high, and not that the language is able to express each and every statement of all languages with a lower score. Similarly, having a high score for naturalness does not mean that all aspects of the language are more natural as compared to all languages with a lower score. 4. Languages
We can now turn to the actual survey. For practical reasons, we restrict ourselves here to English-based languages, leaving out CNLs that are based on other languages, such as Chinese, French, German, Greek, Spanish, and Japanese (Pool 2006). To give an overview of the different existing English-based CNLs, twelve important and influen-surprisingly, we ended up with exactly 100 languages. In addition, a handful of other languages for comparison are introduced in the following, such as natural English 132 with letter codes and the PENS scheme. A best guess is made in the cases where not case of similar languages or scarce information. This data set is also available online as a CSV table. 2 input, and it could be argued that they all X  X t least indirectly X  X efine and use a con-trolled language, because none of them is able to correctly process full natural language.
Such approaches, however, are included here only if the restrictions on the language are considered an inherent property of the approach and not a shortcoming of its imple-mentation. In other words, the following listing excludes languages whose restrictions are not design decisions of the general approach but practical concessions (e.g., Warren and Pereira 1982). The same criterion is applied to verbalization approaches, which inevitably define a restricted version of the respective language that could be consid-ered a CNL (e.g., Halpin 2004; Jarrar, Keet, and Dongilli 2006; Lukichev and Wagner 2006). Other languages follow an approach called conceptual authoring or WYSIWYM generation and user-triggered modification actions. We include such languages here, approach. Finally, it should be mentioned that we leave out fictional languages, such as Newspeak of George Orwell X  X  Nineteen Eighty-Four .
 in quotation marks. X  Unless stated otherwise, quotes and examples are taken from the publications cited in the beginning of each paragraph. 4.1 English-Based Controlled Languages
Below, twelve selected CNLs are introduced, roughly in chronological order of their first appearance or the first appearance of similar predecessor languages. For this small sample, languages are chosen that were influential, are well-documented, and/or are sufficiently different from the other languages of the sample.  X  X owa X  X  syllogisms X  (Sowa 2000b) are simple logic languages based on the syllogisms originally introduced by Aristotle (ca. 350 BC). Sowa was probably the first to bring controlled natural language. Because this survey is restricted to English, Sowa X  X  version of the syllogisms is listed here instead of Aristotle X  X  original version in ancient Greek. The complete language can be described by just four simple sentence patterns:
A and B can be any English common nouns such as cat and animal . This language is very similar to the language E 0 presented and studied by Pratt-Hartmann (2004), who used some additional patterns:
Here, P can be any English proper name such as Socrates . We will use the term  X  X owa X  X  syllogisms X  in a sense that includes such similar approaches. The semantics first-order logic like this (and similarly for the other patterns):
Hereby, we have an exact and comprehensive description of the language, taking just a couple of lines. Despite the simple structure of the language, the sentences are perfectly natural. Its expressiveness, however, is very restricted: Only very simple sentence structures are covered and only one-place relations are supported.  X  P
Basic English (Ogden 1930) is a language presented in 1930 that should improve communication among people around the globe. It is the first reported instance of a controlled version of English, at least the first one that received broader recognition.
It influenced Caterpillar Fundamental English, which became itself a very influential language. Basic English was designed as a common basis for communication in politics, economy, and science. It restricts the grammar and makes use of only 850 English root words. The restrictions are arguably most drastic in the case of verbs. Only 18 verbs say , see ,and send . These verbs can be combined with prepositions to form more specific relations such as put in to express insert . Other verbs can be expressed with the help of nouns, such as give a move instead of using move as a verb. The usage of the given words and their variants is described by informal grammar rules, for example,  X  X ollective nouns may be formed from adjectives when used with the . X  These are two examples of sentences in Basic English: Many variations exist that use larger word sets. The Simple English version of restricted language. Basic English is still used today and promoted by a dedicated Basic-
English Institute. 4 Many texts have been written in this language, including textbooks, text flow. The informal restrictions on the grammar, however, are not strong enough to significantly reduce the complexity of the language (in the PENS sense of complexity).
E-Prime or E X  (Bourland 1965) is a restricted version of English with the only restric-tion being that the verb to be is forbidden to use. This includes all inflectional forms such as are , was and being , regardless of whether used as auxiliary or main verbs. motivation for the use of E-Prime is the belief that  X  X angers and inadequacies ...can result from the careless, unthinking, automatic use of the verb to be . X  E-Prime is claimed by its proponents to enhance clarity. The statement We do this because it is right would 134 not be allowed, but one would have to rephrase it in a way that does not include to be , for example:
In the area of natural language processing, however, the verb to be is not considered one of the most difficult problems, which is good evidence that E-Prime is not considerably more precise than full English in the PENS sense. Also, in terms of complexity it is not considerably different from full English, because words such as become and exist are allowed that can replace the forbidden to be in most cases. On the other hand, it seems true that it is always possible to rephrase a text without the use of to be in a way that is fully natural though possibly longer than the original.  X  P
Caterpillar Fundamental English (CFE) (Verbeke 1973) was an influential controlled language developed at Caterpillar. It was officially introduced in 1971, was based on
CNL (Wojcik and Hoard 1997). The need for a controlled language emerged because of the increasing sophistication of Caterpillar X  X  products and the need to communicate with non-English speaking service personnel in different countries (Verbeke 1973):  X  X o summarize the problem: There are more than 20,000 publications that must be understood by thousands of people speaking more than 50 different languages. X  The idea of CFE was  X  X o eliminate the need to translate service manuals X  (Kamprath et al. 1998). A trained, non-English speaking mechanic familiar with Caterpillar X  X  products should be able to understand the language after completing a course on CFE consisting of 30 lessons. The vocabulary of the language is restricted to around 800 to 1,000 words (Crabbe 2009), with only one meaning defined for each of them (e.g., right only as the opposite of left ). Still, many of the words  X  X ad broad semantic scope and it was assumed that they would be disambiguated in context by the human reader X  (Kamprath et al. 1998). The following ten rules summarize the grammatical restrictions (Crabbe 2009): These are two examples of CFE sentences:
CFE was discontinued by Caterpillar in 1982, because (among other reasons)  X  X he basic guidelines of CFE were not enforceable in the English documents produced X  (Kamprath et al. 1998). As a result, Caterpillar Technical English (see appendix) was developed fol-lowing a different approach: The restrictions on the language should be enforceable, and should reduce translation costs instead of trying to eliminate the need for translations altogether. The strong lexical restrictions together with some grammatical constraints make CFE more precise than full English, but it is not considerably different in terms of expressiveness, naturalness, and complexity.  X  P 2 E 5 N FAA Air Traffic Control Phraseology (FAA 2010) is a controlled language defined by the
Federal Aviation Administration (FAA) and used for the communication in air traffic coordination, going back to at least the early 1980s. There are other very similar lan-guages for air traffic control such as the ICAO and CAA phraseologies. To a large extent, these languages are indistinguishable from each other, and together they are sometimes called AirSpeak (Robertson 1987). The FAA Phraseology is defined by more than 300 fixed sentence patterns such as  X (ACID), IN THE EVENT OF MISSED APPROACH (issue traffic). TAXIING AIRCRAFT/VEHICLE LEFT/RIGHT OF RUNWAY. X  This is an example of a statement following that pattern: position, species or size of birds, if known, course of flight, and altitude. X  The following statement is an example that corresponds to this implicit pattern:
Vocabulary and semantics are restricted too, for example  X  X se the word gain and/or loss when describing to pilots the effects of wind shear on airspeed. X  Phraseology statements can be mixed with statements in full English in cases where no pattern exists to express the desired message. The language is heavily restricted and much less ambiguous than full English. It is inexpressive in the sense that no universal quantification is supported, and is not sufficiently restricted to make an exact and exhaustive description feasible.
ASD Simplified Technical English (ASD-STE) (ASD 2013), often abbreviated to Sim-plified Technical English (STE) or just Simplified English , is a CNL for the aerospace industry. Originally inspired by a language called ILSAM (Adriaens and Schreors 1992), the language had its origins in 1979, but it was only in 1986 when it was officially pre-sented for the first time, then under the name AECMA Simplified English . It received its current name in 2004 when AECMA merged with two other associations to form
ASD. The main purpose of the language is to make texts easier to understand, especially for non-native speakers. Although AECMA Simplified English was designed to make translation into other languages unnecessary, one of the original goals of ASD-STE was to improve translation. Today, the language is maintained by the Simplified Technical
English Maintenance Group. ASD-STE is based on English with restrictions expressed in about 60 general rules. These rules restrict the language on the lexical level (e.g.,  X  X se approved words from the Dictionary only as the part of speech given X ), on the syntactic level (e.g.,  X  X o not make noun clusters of more than three nouns X ), as well as on the semantic level (e.g.,  X  X eep to the approved meaning of a word in the Dictionary. Do not use the word with any other meaning. X ). There is a fixed vocabulary consisting of terms common to the aerospace domain. Additionally, user-defined  X  X echnical Names X  and  X  X echnical Verbs X  can be introduced. This is an exemplary excerpt of a text in ASD-STE: Even though its restrictions make ASD-STE considerably more precise than full Standard Language (SLANG) (Rychtyckyj 2002, 2005) is a language developed at Ford
Motor Company starting from 1990. It is designed for process sheets containing build 136 has been continually extended and updated to reflect technical and business-related advances. With SLANG, engineers can write instructions that are clear and concise and at the same time machine-readable. Based on these instructions, the system can, labor times. In addition, the restricted nature of the language is exploited to translate such instructions with the help of machine translation for their use in assembly plants in different countries. All SLANG sentences are in imperative mood and follow a certain general pattern starting with a main verb and followed by a noun phrase. There are ad-ditional restrictions on vocabulary and semantics. These are two exemplary sentences: followed with some minor deviations: For example, articles can be dropped and some kinds of modifiers can be used in unnatural ways.  X  P 3 E
SBVR Structured English (OMG 2008) is a CNL for business rules first presented (SBVR) standard. It was probably influenced by a language called RuleSpeak that is very similar and was first presented in 1994. The vocabulary is extensible and consists of four types of sentence constituents: terms (i.e., concepts), names (i.e., individuals), verbs (i.e., relations), and keywords (e.g., fixed phrases, quantifiers, and determiners). Each of these has its own color and style, as the following examples show: The SBVR standard provides formal semantics based on second-order logic with Henkin semantics. The second of the examples makes use of the second-order features.
Some keywords have a precise meaning, such as or meaning inclusive logical disjunc-tion (unless followed by but not both ). Other keywords, however, are less precise, such as the determiner a being defined as  X  X niversal or existential quantification, depending on context based on English rules. X  The language strictly defines the permissible sentence constituents, but is much less strict in defining the order in which these constituents can be put. The syntax structure can be ambiguous (e.g., when using and and or in the same sentence), and so can be quantifier scopes and anaphoric references. There is no formal grammar of the language, and its definition depends to some degree on the linguistic understanding of a human reader.  X  P 3 E 4 N 4 S 2 , CFWI
Attempto Controlled English (ACE) (Fuchs, Kaljurand, and Kuhn 2008) is a CNL with an automatic and unambiguous translation into first-order logic. ACE was first pre-sented in 1996 as a language for software specifications. Later, the focus shifted towards knowledge representation and the Semantic Web. The language has been extended over the years in various ways. The most notable features of ACE include complex noun phrases, plurals, anaphoric references, subordinated clauses, modality, and questions. These are two exemplary ACE sentences:
ACE sentences are deterministically mapped to discourse representation structures, a notational variant of first-order logic. These expressions, however, are underspecified in the sense that many deductions (e.g., when involving plurals or modal verbs) require external background axioms that are not fixed by the ACE definition (these axioms are external in the sense that they are not necessarily expressible in ACE). This makes general reasoners with semantics that are not fully compatible. ACE is, with a few minor exceptions, fully natural on the sentence level, but longer texts do not have a natural text flow. Recently, ACE has also been used in the context of rule-based machine translation (Kaljurand and Kuhn 2013), but translation was not a stated goal during the design of the language.  X  P 4 E 3 N 4 S 3 , FWA  X  X rafter Language X  (Power and Scott 1998) is a CNL used in a system called Drafter-II.
The language is used for instructions to word processors and diary managers. The system utilizes a conceptual authoring approach: Users cannot directly edit the CNL text, but they can only trigger modification actions starting from a small stub sentence.
In this way, incomplete statements are gradually completed by the user. The following example is a sequence of two incomplete statements showing one such completion step:
The first sentence has two missing parts: this event and this method . At this point, the user can choose, for example, the appointment to fill in the first missing part, which leads to the second statement, which is still incomplete but has only one missing part left. Once are then automatically executed. As structural ambiguity can be resolved based on the given sequence of modification actions, languages following the conceptual authoring approach do typically not attempt to fully eliminate structural ambiguity. A given text can have multiple parse trees, only one of which corresponds to the way it was created.
E2V (Pratt-Hartmann 2003) is a controlled language that was introduced in 2001 and corresponds to the language E 3 studied in later work (Pratt-Hartmann 2004). The ulti-mate goal is  X  X o provide useable tools for natural language system specification. X  E2V deterministically maps to the two-variable fragment of first-order logic. Because of this, satisfiability of E2V sentences and texts is decidable and computation is NEXPTIME complete. Two examples of E2V sentences are shown here:
The language is defined by 15 simple grammar rules plus nine predefined lexical rules for general words such as every and does not . A separate, user-defined lexicon contains the domain-specific words such as artist and admires . Altogether, E2V is a precise, natural, simple, but relatively inexpressive controlled language.  X  P
Formalized-English (FE) (Martin 2002) is a CNL for knowledge representation. It is based on Conceptual Graphs and the Knowledge Interchange Format, and focuses on expressiveness. It covers a wide range of features including general universal quantification, negation, contexts (statements about statements), lambda abstractions, 138 order logic). Two examples of statements in FE are shown here (the second one is higher-order):
FE looks natural for simple statements, but becomes quite unnatural for more complex ones. This is due to unnatural use of parentheses, quotation marks, variables, and keywords such as chrc . The syntax of the language is defined by about 50 rules in a parser generator language.  X  P 5 E 4 N 3 S 3 , FWA 4.2 Languages for Comparison
For the analysis to be described in the next section, we will use the following languages for comparison, which are not CNLs according to our definition: English is our representative of a natural language.  X  P 1 Propositional logic is a very basic logic language.  X  P 5
First-order logic can be considered an extension of propositional logic. It is more ex-pressive, but also more complex.  X  P 5 E 3 N 1 S 4 , FWA
COBOL is one of the oldest programming languages, which some call a controlled natural language (Sowa 2000a). This is an exemplary COBOL statement:
Although COBOL uses natural phrases where other programming languages use sym-bols or short keywords, the statement structure does not really follow natural grammar.
For that reason, we do not consider it a CNL.  X  P 5 E 2 N
Manchester OWL syntax (Horridge et al. 2006) is a user-friendly syntax for the ontology language OWL. This is an exemplary expression:
Instead of logical symbols, natural words such as not and some are used. The general structure, however, resembles formal and not natural languages, which is why we do not consider it a CNL.  X  P 5 E 2 N 2 S 4 , FWA
Naturally, there are many more languages that could be used for comparison, but this list seems to be a good sample. 5. Analysis
The data presented in the previous section and in the appendix allow for different kinds of aggregations and analyses. In particular, the classes and properties of the observed languages and the timeline of their evolution are interesting. 5.1 PENS Classes
Table 2 summarizes the PENS classes and properties of the discussed CNLs. Some interesting patterns can be found in these data. Theoretically, there are 5
PENS classes, but not all of them are observed  X  X n the wild. X  Some are even practically impossible, as far as we can tell, such as the perfect class P duced previously cover 25 distinct classes, which might seem a small number with 140 respect to the entire PENS space, but they are, as we will see, widely scattered. Even though some hotspots of classes and properties can be identified, the languages exhibit a broad variety.
 of the data. Because the PENS scheme is four-dimensional, it is difficult to visualize all dimensions in a single diagram. Figure 1 shows a diagram for each of the six possible dimension pairs: The dots represent CNLs in comparison with natural languages such as English (white dot) and common formal languages (black dots). Note that the dots represent PENS classes and not individual languages.
 natural English (white dot) and propositional logic (black dot in the corner). Seen from with a naturalness level of less than 3, where there can be no CNLs by our definition, they cover a large part of the conceptual space. This indicates that PENS is a powerful scheme for distinguishing different CNLs.
 perspective, and not two or more disconnected clouds. This means that it would be difficult to come up with a clean categorization scheme that would subdivide the large and diverse set of existing CNLs. This seems to justify the decision of using the term CNL in a broad sense and not replacing it by more specific terms.
 plicity are positively correlated: More precise languages tend to be simpler (Spearman X  X  excluding the languages for comparison). Expressiveness and simplicity exhibit a strong negative correlation: More expressive languages tend to be more complex (  X  =
In addition, naturalness/expressiveness are strongly positively (  X  = 0 . 77) and natural-ness/simplicity strongly negatively correlated (  X  =  X  0 . 76). At a slightly lesser degree, negative correlation values are obtained for the pairs precision/naturalness (  X  = and precision/expressiveness (  X  =  X  0 . 66). These observations seem to be in line with what one would intuitively expect. 5.2 Properties properties we considered and their combinations. As some languages have been used more extensively and over longer periods of time than others, these numbers do not necessarily reflect the actual importance or popularity of the different language types.
The table also shows the average PENS values for each type. Again, we should be care-ful when interpreting these numbers, as all languages were equally weighted, which does not take into consideration that some languages are much more mature and wide-spread than others. Nevertheless, these numbers reveal some interesting facts.
Formal representation is the goal of another, only slightly overlapping, half. About 22% of all languages have translatability as their goal. There is a large overlap of the types and T , whereas these two barely overlap with F . Existing CNL approaches can therefore be roughly subdivided into two groups of similar size: One consisting of languages for improved comprehensibility and translatability, and the other made up of languages that have formal representation as their goal. Mostly, languages of the types are domain-specific, originated from industry, and focus more on expressiveness and naturalness than on precision or simplicity. Languages of type have an academic origin and tend to have a much stronger focus on precision and simplicity at the cost of expressiveness and naturalness.
 very one-sided picture: More than 90% of all languages are intended to be written; we found only seven languages that are intended to be spoken (one of which is intended to be spoken and written). The reason for this might be that controlling a spoken language is much more difficult in practice. Written texts can be revised and given to a language checker before publication, whereas spoken language typically lacks this two-stage process. It is an interesting fact that six out of the seven spoken languages originated 142 from a governmental environment. On average, written languages have higher PENS values in all four dimensions.
 are designed for a specific and narrow domain. The other half follow a more general-purpose approach. Comprehensibility is the prevalent goal for domain-specific lan-guages, and they mostly originated from industry. No clear tendencies can be identified with respect to the PENS dimensions.
 academic and industrial CNLs: 50 and 43 languages, respectively. On the other hand, only ten CNLs were found that originated from a governmental environment. It has to be noted, however, that information about CNLs from industry is typically much scarcer than about languages from academia or governments. It is therefore likely that most of the languages that escaped this survey (because of missing or hard-to-find information) are industrial ones. Such a bias might also be present in the case of some of the other properties as well. In any case, academia apparently focuses much more on languages for formal representation than for comprehensibility or translation, whereas industry seems to have an opposite focus. 5.3 Design Decisions
Apart from being a description of the current state of the art, Table 3 can be a valuable tool for making design decisions when creating a new CNL. In such a situation, the application environment of the language to be defined is typically fixed, but not yet the inherent properties of the language itself. Those inherent language properties are supposed to be fixed only during the design process. At the early design stage, Table 3 can be used to check the level of previous work on CNLs for a given combination of environment properties. It also delivers the PENS classes of a typical CNL in this environment, which can be used to guide the design process.
 comprehensibility, the table tells you that the combination of these properties is not un-usual at all (at least pairwise combinations). Furthermore, the table indicates that such a language typically has a PENS class somewhere between P 2 second example, somebody might want to design a CNL for speech translation. A quick look at the table reveals that no such CNL has been reported so far, which indicates that a significant amount of original work is needed for the design of such a language. translation in terms of expressiveness and naturalness. This suggests two important design decisions: How expressive should the resulting language be, and how natural? not answer them. Nevertheless, such information about existing approaches in similar problem domains and environments can be very valuable to focus the design effort to the crucial aspects. 5.4 Timeline
Because CNLs have been defined and used over many decades and have influenced each other, it is interesting to draw the evolution of these languages on a timeline, as the language was studied or used. For some languages, the year of  X  X irth X  or  X  X eath X  is unknown, which is indicated by dashed bars fading in and out. The vertical lines 144 show influences from other languages at the time of birth (solid for reported influences; dashed for influences that are not reported but seem probable). The colors of the bars represent the goals of the languages, as indicated in the legend.
 and indirectly ILSAM, both very influential languages in their own right. Altogether, more than 20 languages were directly or indirectly inspired by Basic English. Among the more recent languages, ACE is the most influential in terms of offspring languages. that could be called three  X  X ras X : the general, technical, and logical eras. The general era lasted until the late 1960s or early 1970s. Only a few languages were defined and used during this time, all of which were designed to improve human comprehension and to serve as general languages with no specific application domain or narrow community in mind. These languages survived in their small niche, when, during the subsequent technical era that began in the early 1970s, CNLs were applied to technical documen-tation for improved human comprehension as well as improved machine translation.
Again, this branch of languages did not disappear at the end of the era and continues to be used today, but a new type of CNL emerged. During the logical era that began in the mid 1990s, many CNLs were created with some sort of mapping to formal logic, which enabled not only automatic processing but actual automatic interpretation. These three eras partly correspond to the three goals introduced in Section 2.3: The first CNLs were of type C ,type T emerged in the technical era, and type F 5.5 Evaluations
Finally, we can turn to a crucial aspect that we have not yet discussed: Do CNLs actually achieve the goals they were designed for? A number of studies have been reported that evaluate the supposed advantages of these languages. The relevant research question obviously depends on the goal the language is supposed to achieve. In their most general forms, the research questions for the types C , T
Each of these general research questions can be broken down, and most studies target more specific questions.
 significantly improves text comprehension, with a particularly large effect for complex texts and non-native speakers (Shubert et al. 1995; Chervak, Drury, and Ouellette 1996). The results of other studies were similar but not significant (Stewart 1998). The language
CLCM has been found to have a positive effect on reading comprehension for most groups of readers under certain circumstances such as stress situations (Temnikova 2012).

MCE for machine-assisted translation leads to a  X  X ive-to-one gain in translation time X  (Ruffino 1982). Similar results have been presented for the language PACE, with which post-editing of machine-assisted translation is  X  X hree or four times faster X  than without (Pym 1990). It has been shown that the adherence to typical CNL rules improves post editing productivity and machine translation quality (Aikawa et al. 2007; O X  X rien and
Roturier 2007). For the language CLCM, it has been reported that CNL texts are easier to translate than uncontrolled ones (Temnikova and Orasan 2009; Temnikova 2012) and that the time needed for post-editing is reduced on average by 20% (Temnikova 2010, 2012).
 tools and those that specifically evaluate the comprehensibility of the actual languages.
Starting with the usability studies, it has been shown for the language CLOnE that its interface is more usable than a common ontology editor (Funk et al. 2007). Similarly,
Coral X  X  controlled English has been shown to be easier to use than a comparable tools have also been reported for GINO (Bernstein and Kaufmann 2006), CLEF (Hallett,
Scott, and Power 2007), CPL (Clark et al. 2007), PERMIS (Inglesant et al. 2008), Rabbit (Dimitrova et al. 2008), and ACE (Kuhn 2009). Turning to the comprehensibility studies, it has been shown for the CLEF query language that common users are able to correctly interpret given statements (Hallett, Scott, and Power 2007). ACE has been shown to be easier and faster to understand than a common ontology notation (Kuhn 2013), whereas experiments on the Rabbit language gave mixed results (Hart, Johnson, and Dolbear 2008).
 such as evaluations on coverage (Bernstein et al. 2006; Kaljurand 2007), performance, convergence (Adriaens and Macken 1995), parseability (Wojcik, Harrison, and Bremer 1993), computational complexity (Pratt-Hartmann 2003; Thorne and Calvanese 2010), text complexity, and text length (Temnikova 2012).
 use of CNL can be advantageous. This does not mean, of course, that CNL approaches always perform better. This depends heavily on the precise problem domain, the back-ground of the users, and X  X erhaps most importantly X  X he quality of the design of the language and its supporting tools. 6. Conclusions To conclude, we can come back to the aims set out in the Introduction of this article.
The first goal was to get a better theoretical understanding of the nature of controlled languages. First of all, this article shows that despite the wide variety of existing CNLs, they can be covered by a single definition. The criteria of the proposed definition include that these languages form a widely scattered but connected cloud in the conceptual space between natural languages on the one end and formal languages on the other.
The informal statement that CNLs are more formal than natural languages but more natural than formal ones is substantiated and verified.
 emphasized the difference between characteristics of the environments of languages on the one hand and the properties of the languages themselves on the other. Both aspects are important, but the second is more difficult to capture in a quantitative way. Nine general properties have been collected to describe the application environments of
CNLs. As a novel addition to this model, we proposed the four-dimensional PENS scheme to describe inherent language properties. This scheme allows for classification of CNLs on a discrete scale on the dimensions of precision, expressiveness, naturalness, 146 and simplicity. Together, this allows us to formally model the important properties of languages and their environments in a simple way, and to put order and structure to a previously fuzzy and disconnected field.

The most important conclusion in this respect is the fact that many more CNLs exist than have been found in any previous survey. Previously, the most comprehensive overview counted 41 CNLs (Pool 2006) based on various natural languages, whereas this survey covers 100 languages for English alone. The diversity of languages and the different environments in which they were studied and used apparently had the consequence that many CNL researchers and developers were not aware of a large number of relevant languages. As a starting point for researchers, this work presents a diverse sample of twelve important and influential languages, along with a long list of all CNLs collected. The introduced model of languages and environments can also facilitate the identification of a particular research focus and the collection of relevant prior work.
 the data of this survey can be used to direct developers to existing CNL approaches in a given environment and problem domain. The data can reveal whether a certain kind of CNL usage is common, rare, or inexistent until now, which can be used as an indication of the amount of original work required. Furthermore, the typical language properties of CNLs in terms of precision, expressiveness, naturalness, and simplicity can be retrieved for a given usage scenario. This information might be very useful to identify important design decisions and to find existing approaches to build upon.
 is a very dynamic and highly interdisciplinary field, for the most part occupying small niches in the academic, industrial, and governmental worlds. However, adding all these niches together gives us a large body of past and ongoing work. Assuming that people will have to interact even more closely with computers and across language borders in the future, I am convinced that we will see even more work in this area.
 Appendix A: Full List of English-Based Controlled Natural Languages
This is the full list of 100 English-based CNLs in alphabetical order. See Section 4 for the details of this collection.
 AECMA Simplified English (AECMA-SE) (AECMA 1986) was the predecessor of ASD
Simplified Technical English. See Section 4.1 . X  X  2 E 5 N  X  X anopublications. X  Single English sentences are used as a scaffold for underspecified representations and for the inclusion of informal statements in formal RDF-based structures. These sentences are Atomic, Independent, Declarative, and Absolute (hence the name AIDA). This is an example:  X  X irbus Warning Language X  (Spaggiari, Beaujard, and Cannesson 2003) is a language for short industrial warnings, focusing on abbreviations and restricting the word order. This is an exemplary statement:
ALCOGRAM (Adriaens and Schreors 1992) is a CNL developed at Alcatel. It originated from COGRAM as an  X  X lgorithmic variant, X  focusing on the use within a computer-aided language learning tool. In contrast to COGRAM, which consists of three components that declaratively define the language, ALCOGRAM is defined based on a four-staged algorithm. Each of these four stages checks certain aspects: preparatory tex-tual control (e.g.,  X  X efine technical terms and acronyms in advance X ), syntactic control (e.g.,  X  X rite one instruction per sentence for single actions X ), lexical control (e.g.,  X  X void gender-specific language X ), and micro control (e.g.,  X  X se words for a number when it is the first word in the sentence X ). These are two examples of ALCOGRAM sentences:
ASD Simplified Technical English (ASD-STE). See Section 4.1.  X  X   X  X tomate Language X  (Van Kleek et al. 2010) is part of the Atomate interface, which lets users define simple automatic tasks and reminders taking context and current activity into account. The language was inspired by CLOnE, ACE, and the GINO and Ginseng systems. This is an example of such a task definition:
A special editor supports users in writing such sentences, using a mixture of predictive editing and conceptual authoring. The sentences are mapped to RDF and automatically triggered when the preconditions are met.  X  P 4 E 2 N 4 S
Attempto Controlled English (ACE). See Section 4.1.  X  X  4 E
Avaya Controlled English (Avaya 2004) is a language for technical publications in the telecommunication and computing industry. Its use should reduce translation costs and should make texts easier to understand for human readers. It puts restrictions on the lexicon (e.g.,  X  X o not use abort  X ), grammar (e.g.,  X  X se active voice X ), semantics (e.g.,  X  X se may only to grant permission X ), and style (e.g.,  X  X ut command names in bold monospaced type X ). An open list of about 250 words defines preferred terminology for the given computer and telephony domain, and clarifies usage and meaning of these words. These are two examples of sentences:
Basic English. See Section 4.1.  X  X  2 E 5 N 5 S 1 , CW 148
BioQuery-CNL (Erdem and Yeniterzi 2009) is a language for biomedical queries. It serves as an interface language for a query engine based on answer set programming.
BioQuery-CNL was initially designed as a subset of ACE with some small modifications handled in a preprocessing step. The ACE parser was used for processing the language.
In later versions, however, the language diverged from ACE and evolved into an independent language with its own parser. This is an exemplary query: Boeing Technical English (Wojcik, Holmback, and Hoard 1998) was an extension of
AECMA Simplified English to improve readability and consistency of documents, with the specific goal to broaden the scope beyond the aviation domain. The language seems to have been discontinued and apparently was never deployed at Boeing.
Bull Global English (Smart Communications Inc. 1994) or Bull Controlled English is a language developed at Groupe Bull, a French computer company.
 summarized by the following ten rules (Karkaletsis and Spyropoulos 1997), which have a considerable overlap with the rules of Caterpillar Fundamental English: CAA Phraseology (CAA 2011) is a language for air traffic control introduced by the
Civil Aviation Authority (CAA) in the 1980s or possibly earlier. It is very similar to the phraseologies by FAA and ICAO.  X  P 2 E 1 N 3 S 2 , CSDG
Caterpillar Fundamental English (CFE). See Section 4.1.  X  X 
Caterpillar Technical English (CTE) (Hayes, Maxwell, and Schmandt 1996; Kamprath 1991, that is, almost a decade after the discontinuation of CFE. Apart from improving consistency and reducing ambiguity of technical documentation, the goal of CTE was to improve translation quality and reduce translation costs with the help of machine translation. This is an example of a CTE text:
In contrast to CFE, texts in CTE are supposed to be translated before given to personnel in non-English speaking countries. As a further difference, CTE was designed to be an  X  X nforceable controlled English X  that comes with an authoring tool that enforces the compliance with the restrictions. The CTE lexicon consists of about 70,000 terms with a  X  X arrow semantic scope X  (compared with CFE X  X  less than 1,000 terms with a broader semantic scope). The syntax is restricted, too, including restrictions on the use of con-junctions, pronouns, and subordinate clauses. CTE comes with a language checker that allows for interactive disambiguation on the lexical level, enriches the technical texts with SGML annotations, and uses the syntax analyzer of the KANT system (see KANT Controlled English).  X  P 2 E 5 N 5 S 1 , CTWDI
Clear And Simple English (CASE) (Pym 1990) was a controlled English introduced in the 1980s at the J. I. Case Company, a manufacturer of construction and agricultural equipment. It descended from CFE.  X  P 2 E 5 N 5 S 1 , CWDI
Its creator claims that documents in ClearTalk can be  X  X lmost automatically X  trans-lated into a formal logic notation and into other natural languages. It  X  X ffers a flexi-It has been used to encode more than 25,000 facts in different technical domains. one (e.g., the determiner a at subject position represents universal quantification). These restrictions are expressed in a large number of rules. Two examples of sentences are shown here: description. Different forms of parentheses are used to disambiguate different kinds of scopes.  X  P 3 E 3 N 3 S 3 , FWA  X  X LEF Query Language X  (Hallett, Scott, and Power 2007) is a language used within a system called CLEF (Clinical E-Science Framework), which should help clinicians, medical researchers, and hospital administrators to query electronic health records.
The language was influenced by the Drafter language. Basic queries are composed of three elements: the set of relevant patients, the received treatments, and the outcomes. This is an example:
Complex queries can have multiple elements of the same type. The system uses a conceptual authoring approach for writing queries, which are then translated in several steps to SQL and given to a database engine.  X  P 5 E 1 N
COGRAM (Adriaens and Schreors 1992) was a controlled language developed in the sponse to the finding that the existing controlled languages AECMA Simplified English,
Ericsson English, and IBM X  X  controlled English were  X  X ncomplete and defective in many ways. X  COGRAM consists of a vocabulary of approximately 5,000 words plus another 1,000 technical terms, and a grammar with about 150 rules. These rules fall into three cat-egories:  X  X o not use X, X   X  X se only X, X  and  X  X void (try not to use) X. X  Grammar rules of the last type can be seen as style-guides that do not restrict the coverage of the language.
The language definition is divided into three components: lexical (e.g.,  X  X se short infinitives of regular action verbs X ), syntactic (e.g.,  X  X o not use a participle to introduce an adverbial clause X ), and stylistic (e.g.,  X  X xpound major topics, restrict minor topics X ).
The definition of COGRAM was found to be  X  X ot the most motivating of texts for 150 technical writers to use in the writing process, X  which led to the development of ALCOGRAM.  X  P 2 E 5 N 5 S 1 , CTWDAI
Common Logic Controlled English (CLCE) (Sowa 2004) is a language that can be
Interchange Format. It is defined by a grammar in Backus-Naur form  X  X hat allows every ambiguity to be resolved when a sentence is parsed. X  Some of the most important pronouns. For an unambiguous mapping to logic, a number of interpretation rules are applied and parentheses are used to determine the structure of deeply nested sentences.
Sentences in this language should be similar to those found in software documentation and textbooks of mathematics, for example: Imperative sentences, as the second example, are used to import or declare words.
Names, nouns, verbs, adjectives, adverbs, and prepositions can be declared in this way.
Computer Processable English (CPE) (Pulman 1996; Sukkarieh and Pulman 1999) is a controlled language that can be  X  X ompletely syntactically and semantically analyzed. X 
An early version of the language used KIF as its logic formalism, whereas McLogic was used later on. The language comes with a bidirectional grammar implemented as a Prolog unification grammar. Two examples are shown here:
The mapping to logic seems to be deterministic, even though the available literature is not explicit about this.  X  P 5 E 2 N 4 S 3 , FWA Computer Processable Language (CPL) (Clark et al. 2005) is a controlled variant of
English developed at Boeing. It is very different from earlier CNL approaches Boeing was involved in, such as ASD-STE and Boeing Technical English. CPL is much more restricted than these earlier approaches and sacrifices to some degree expressiveness and naturalness for the sake of automated reasoning support. Basic CPL sentences are restricted to the pattern subject + verb + complements + adjuncts . There are further restrictions on the syntax, for example, that definite references have to be used instead of pronouns. Statements involving universal quantification are constructed from seven templates such as  X  X f sentence1 then typically sentence2, X  where sentence1 and sentence2 are basic CPL sentences of the structure introduced above and where typically is a examples of CPL sentences:
A parser translates CPL sentences into a frame-based language with well-defined semantics. In contrast to most other logic-based CNL approaches with custom-built parsers, the parsing process of CPL involves different external tools and resources. An existing parser for unrestricted English is used to generate an intermediary logical form.
Then, WordNet and other resources are used to make a  X  X est guess. X  The resulting correction.  X  P 3 E 3 N 4 S 2 , FWI Controlled Automotive Service Language (CASL) (Means and Godden 1996; Means,
Chapman, and Liu 2000) is a controlled language for writing service manuals and bul-letins at General Motors developed in the 1990s. The goal was to improve translatability, as well as consistency and readability. The approach moved from an  X  X uthor-centric model X  towards a  X  X ybrid model X  that included the role of an editor, before it went to full production in 2000 (Godden 2000). The CASL restrictions are defined by 62 rules, including restrictions on sentence structure, word order, vocabulary, and punctuation. This is an exemplary sentence:
Writers are supported by a software tool called CASLChecker.  X  P  X  X ontrolled English at Clark X  (Adriaens and Schreors 1992) was a language used at the Clark Material Handling Company. It was developed around the late 1980s and was influenced by SMART Plain English.  X  P 2 E 5 N 5 S 1 , CWDI  X  X ontrolled English at Douglas X  (Kleinman 1982) was a language developed in 1979 by the McDonnell Douglas aerospace company for their technical manuals. It was based on a dictionary of about 2,000 words (most of them verbs), favoring short and simple words and aiming at a single word per meaning and a single meaning per word. In addition to the words of the dictionary,  X  X omenclature words X  can be introduced. The goal was to improve readability, translatability, and standardization. It was probably influenced by CFE and had itself an influence on AECMA SE.  X  P  X  X ontrolled English at IBM X  (Adriaens and Schreors 1992) was a language developed fluenced EasyEnglish, which was also developed at IBM several years later. It relied on a closed list of words, and writers were assisted by different instruction programs.  X  X ontrolled English at Rockwell X  (Adriaens and Schreors 1992) was a language used at the company Rockwell International. It was developed around the late 1980s and was influenced by SMART Plain English.  X  P 2 E 5 N 5 S 1 , CWDI
Controlled English to Logic Translation (CELT) (Pease and Li 2010) is a controlled natural language presented in 2003. It is a domain-independent language inspired by
ACE. In contrast to ACE, it uses existing linguistic and ontological resources, concretely the SUMO ontology and WordNet. These are two exemplary sentences:
The syntax structure of CELT sentences is deterministically parsed. Heuristics are applied only afterwards to map the words to SUMO and WordNet. The language is implemented as a unification grammar in Prolog.  X  P 4 E 2 152
Controlled Language for Crisis Management (CLCM) (Temnikova 2010, 2011, 2012) formatting (e.g.,  X  X eparate with a new line each block of instructions X ), lexicon (e.g., only literal meaning X ), and pragmatics (e.g.,  X  X emove unimportant information X ).
Controlled Language for Inference Purposes (CLIP) (Sukkarieh 2003) is a language based on the logic notation McLogic and influenced by CPE. It is  X  X emantically driven, X  meaning that it was designed around the given logic formalism and not vice versa. Two examples are shown here:
Controlled Language for Ontology Editing (CLOnE) (Funk et al. 2007), previously called CLIE Controlled Language , is a CNL designed as a front-end language for OWL, covering only a small subset of it. It is defined by ten basic sentence patterns. It adds procedural semantics on top of OWL to introduce and remove entities and axioms. These are two examples of CLOnE sentences:
Controlled Language Optimized for Uniform Translation (CLOUT) (Muegge 2007) prohibits structures such as passive voice and pronouns.  X  P
Controlled Language of Mathematics (CLM) (Humayoun and Raffalli 2010) is a lan-guage for expressing mathematical texts, as found in textbooks. The language is similar to Naproche CNL and ForTheL. The grammar of CLM is implemented in Grammatical
Framework and allows for deterministic translation into first-order logic. The goal is to automatically verify mathematical proofs.  X  P 5 E 3 N 3 S
Coral X  X  Controlled English (Kuhn and H  X  ofler 2012) is a controlled language for express-ing formal queries to annotated text corpora. It is influenced by ACE, but is much less expressive, simpler, and more domain-specific. It is embedded into a query interface called Coral to enable users with no particular background in computer science to effectively use large corpora of annotated texts. This is an exemplary query: Such queries are deterministically mapped to AQL, an existing formal query language. The language is defined by 51 simple grammar rules.  X  P 5
Diebold Controlled English (DCE) (Hayes, Maxwell, and Schmandt 1996; Moore 2000) is a controlled language developed at Diebold with the goal to make translation faster and less expensive by assisting human translators with specific translation tools. It was inspired by CTE, but is less strict concerning lexicon and grammar, making the approach more flexible. It consists of three main components: a lexical database, a set of grammar rules, and a checking tool.  X  P 2 E 5 N 5 S 1 , CTWDI
DL-English (Thorne and Calvanese 2010) is a Description Logic X  X ased controlled lan-guage presented together with other similar languages to study and compare their computational complexity. It is similar to Lite Natural Language by the same research group.  X  P 5 E 2 N 4 S 4 , FWA  X  X rafter Language. X  See Section 4.1.  X  X  4 E 1 N 4 S 3 , FWDA E-Prime or E X . See Section 4.1.  X  X  1 E 5 N 5 S 1 , CWA E2V. See Section 4.1.  X  X  5 E 2 N 4 S 4 , FWA EasyEnglish (by IBM) (Bernth 1997), not to be confused with Wycliffe Associates X 
EasyEnglish, is a language developed at IBM, which might have been influenced by an earlier controlled English at the same company (Adriaens and Schreors 1992). The main goal of EasyEnglish was to improve machine translation. The approach is based on a sophisticated grammar checker that returns suggestions and warnings. Apart from detecting common grammar errors, the system can enforce the use of a certain controlled vocabulary and can spot ambiguities. For such ambiguities, the system can propose alternatives, but it is ultimately up to the user whether to follow the system X  X  suggestions or not. The problems encountered in a given document are quantified in the form of a clarity index, which must be above a certain threshold value. The fact that the restrictions of the language are not enforced but just suggested does not make the language more precise or simpler than full natural English. EasyEnglish has been extended later to check not only on the sentence level but also on the document level, and this has been implemented in a tool called EasyEnglishAnalyzer (Bernth 2006). EasyEnglish (by Wycliffe Associates) (Betts 2003), not to be confused with IBM X  X 
EasyEnglish, is a controlled language used for transcribing biblical texts. The original goal was to improve the translation process into other languages, but EasyEnglish is also directly used by readers with limited knowledge of English. The language is restricted either case, the meaning of these words is restricted. For example, fair can only mean following is an excerpt of a text in EasyEnglish ( moor is not in the lexicon and has to be explained): more than 150 words. Sentence structure is kept simple by allowing not more than two finite clauses and not more than two prepositional phrases per sentence. Furthermore, 154 complex sentence or paragraph and arrange them in logical order. X   X  P Ericsson English (EE) (Adriaens and Schreors 1992) was a language developed at
Ericsson in the early 1980s, influenced by ILSAM. It is built on a closed list of accept-able words, but other words can be introduced if accompanied by a definition in EE. FAA Air Traffic Control Phraseology. See Section 4.1.  X  X  2
First Order English (Pool 2006) is a controlled natural language that maps to first-order logic. No detailed description of this language is available.  X  P
Formalized-English (FE). See Section 4.1.  X  X  5 E 4 N 3 S 3 ForTheL (Vershinin and Paskevich 2000) is a CNL for mathematical texts similar to
Naproche CNL and CLM. The name stands for  X  X ormal Theory Language. X  Statements in this language can be automatically translated into first-order logic with equality. The following is an exemplary text:
Gellish English (van Renssen 2005) is a controlled language designed as a common of simple subject X  X redicate X  X bject structures with predefined relations in the form of fixed phrases such as  X  X s a specialization of X  and  X  X s valid in the context of. X  These are two examples:
Meta-information about the context of such statements can be expressed in the form of additional  X  X ccessory facts. X  Gellish builds upon a fixed upper ontology with a large number of predefined concepts and relation types. Texts in Gellish can be transformed into a formal tabular representation. The semantics of the language is not fully formal-ized, which means that there is no mapping to an established logic formalism. Gellish support simple kinds of if X  X hen rules (van Renssen 2011), but these rules do not allow for universal quantification over several variables in a general way.  X  P General Motors Global English (Means, Chapman, and Liu 2000) or just Global
English is a controlled language developed at General Motors. The goal was to improve based on four principles:  X  X e brief, X   X  X e clear, X   X  X e direct, X  and  X  X e culturally alert. X 
These rules include a limit on the sentence length and grammatical restrictions such as the exclusion of passive voice. The language evolved from a reduced set of twelve of the 62 rules of the CASL language, which was developed at General Motors several years earlier. In contrast to CASL, Global English does not come with a software tool for checking the compliance with the restrictions.  X  P 2 E 5 N
Gherkin (Ne  X  cas 2011) is a language for writing executable scenarios for software speci-fications. This is an excerpt of a scenario description:
The structuring words such as Given , And ,and But are fixed. The restrictions on the remaining text such as  X  X  am a student X  are implemented in ordinary programming languages using regular expressions, and are stored in small modules called  X  X tep implemented for the particular task at hand. Gherkin is therefore highly customizable and extensible, and the classification given here is meant to apply to a typical concrete language that is based on Gherkin.  X  P 5 E 3 N 4 S 3 , FWDA  X  X INO X  X  Guided English X  (Bernstein and Kaufmann 2006) is a language used in GINO, a system to query and edit ontologies. The language was influenced by Ginseng and supports the same kinds of queries. In addition, GINO has some limited support for procedural statements to introduce new entities, for instance: axioms to be added or modified. Queries can exhibit structural ambiguity, in which case the system evaluates all possible interpretations and shows to the user the union of their answers. The grammar that describes the language consists of 120 grammar rules.  X  X inseng X  X  Guided English X  (Bernstein et al. 2006) is a CNL used in a system called
Ginseng, which is a query interface to access knowledge bases in the form of OWL ontologies. The vocabulary for the language is loaded from the respective ontologies. These are two examples of queries:
The grammar consists of 120 static grammar rules plus additional dynamic rules gener-ated from the ontologies.  X  P 5 E 1 N 4 S 3 , FWA
Hyster Easy Language Program (HELP) (Smart 2003) is a controlled English developed in the 1980s for maintenance manuals for lift trucks. It is based on SMART Plain English and thus indirectly on CFE (Pym 1990).  X  P 2 E 5 N 5 S 1 ,
ICAO Phraseology (Eurocontrol 2009) is controlled language for air traffic control defined by the International Civil Aviation Organisation (ICAO) in the 1980s or even earlier. It is very similar to the phraseologies by FAA and CAA.  X  P  X  X CONOCLAST Language X  (Power 1999) is a CNL to write patient information leaflets.
It is similar to the Drafter language. A conceptual authoring approach is utilized and a formal logic representation is used in the background. This is a simple example: 156 iHelp Controlled English (iCE) 5 is a language developed by iHelp Ltd, a documenta-tion consultancy company. iCE consists of  X  X  set of flexible rules and vocabularies for companies wishing to standardize and improve their information. X   X  P iLastic Controlled English (iLastic 2012) is a language to allow non-developers to write intuitive and natural scripts that automatically retrieve, transform, and combine data from the Web, databases, files, and other resources. This is an exemplary statement:
International Language of Service and Maintenance (ILSAM) (Pym 1990) is an influ-ential language similar to Caterpillar Fundamental English, from which it was derived in the 1970s.  X  P 2 E 5 N 5 S 1 , CWDI ITA Controlled English (ITA CE) (Mott 2010) is a controlled language defined by the
International Technology Alliance, a US/UK military research program. It is inspired by CLCE, but is less strict in terms of precision: It has an  X  X nformal meaning and a semi-formal mapping to predicate logic. X  The following are two examples of statements of different types: The first example shows a  X  X ogical rule X ; the second example is a  X  X ationale X  statement.
Parentheses and variables are used to disambiguate. Around 90 grammar rules define the language.  X  P 3 E 3 N 3 S 3 , FWI
KANT Controlled English (KCE) (Mitamura and Nyberg 1995) is a controlled natu-ral language for machine translation used within the KANT translation system. The language was first presented under this name in 1995, but it had at that point already been studied and used for several years. The focus is on technical documents, and KCE was the basis for the development of Caterpillar Technical English. Lexicon, grammar, and semantics are restricted. In addition, ambiguities are resolved interactively by aug-menting the input sentences with SGML tags. In the following sentence, for example, the attachment of the preposition  X  X ith twelve rivets X  is ambiguous:
In KCE, this ambiguity can be resolved by augmenting the sentence with an SGML rivets. X  For the classification of the language, the question arises whether the SGML tags are part of the language or just a method to keep track of decisions concerning ambiguities. The SGML tags positively contribute to the precision of the language but heavily impede its naturalness. Because such markup tags are usually hidden and be-cause KCE texts are initially written without tags, which are added only afterwards, we consider them a part of the KANT methodology but not of the controlled language itself.
Kodak International Service Language (KISL) is a CNL developed at Kodak in the early 1980s. Some see it as a descendant of CFE (Spaggiari, Beaujard, and Cannesson 2003).  X  P 2 E 5 N 5 S 1 , CWDI
Lite Natural Language (Bernardi, Calvanese, and Thorne 2007) is a CNL based on the language E2V and its variants. It has a deterministic mapping to DL-Lite, which is a logical formalism optimized for good computational properties and is equivalent to a subset of OWL.  X  P 5 E 2 N 4 S 4 , FWA  X  X assachusetts Legislative Drafting Language X  (Massachusetts Senate 2003) is a re-stricted language for legal texts defined by the Massachusetts Senate. Its purpose is  X  X o promote uniformity in drafting style, and to make the resulting statutes clear, simple and easy to understand and use. X  The language is defined by about 100 rules that restrict syntax (e.g.,  X  X se the present tense and the indicative mood X ), semantics (e.g.,  X  X o not use  X  X eem X  for  X  X onsider X  X ), and document structure ( X  X se short sections or used, with suggested replacements for each of them (e.g., hide instead of conceal ,and rest instead of remainder ).  X  P 2 E 5 N 5 S 1 , CWDG  X  X ILE Query Language X  (Piwek et al. 2000) is a language to access maritime rules and regulations. It follows the conceptual authoring approach in a very similar way as the Drafter and CLEF languages.  X  P 4 E 1 N 4 S 3 , FWDA
Multinational Customized English (MCE) (Ruffino 1982) is a controlled language developed at Xerox to improve the quality of machine-assisted translation. It was based on ILSAM (Adriaens and Schreors 1992). It uses a restricted domain-specific vocabulary and  X  X  set of writing rules which encourage a clear, concise English and a minimization of ambiguities. X   X  P 2 E 5 N 5 S 1 , TWDI
Nortel Standard English (NSE) (Smart 2006) is a language developed at Nortel, a telecommunications equipment manufacturer. The development started in 1995 with the help of SMART Communications, and the language was probably influenced by SMART Plain English.  X  P 2 E 5 N 5 S 1 , CWDI
Naproche CNL (Cramer et al. 2010) is a controlled language for mathematical texts similar to CLM and ForTheL. Texts in Naproche CNL can be deterministically mapped to first-order logic and then automatically checked for logical correctness. The following is an excerpt of a proof written in this language: According to its authors, most texts of mathematical textbooks  X  X an be rewritten in the
Naproche CNL in such a way that they resemble the original text. X   X  P
NCR Fundamental English (NCR 1978) is a CNL developed at NCR Corporation. The language was used for the technical manuals of the company in order to make them  X  X asier to read and use by NCR employees and customers around the world. X  These are two examples of sentences: 158
The language consists of three parts: nomenclature, glossary, and vocabulary. Every word of the language belongs to exactly one of these categories. The nomenclature is an open set of different kinds of named individual entities, such as names of products, tools, routines, as well as named modes and conditions. The glossary is another open phrase or brief clause using the words of the vocabulary. The vocabulary, finally, is the most interesting part. It consists of a fixed set of 1,350 words (verbs, nouns, adverbs, adjectives, pronouns, prepositions, articles, and conjunctions) plus 650 abbreviations.
The content of the vocabulary ranges from fundamental words such as a , not ,and in to domain-specific terms such as testware , calibrate ,and taxable . The meaning of these words is restricted, and each comes with a definition in full English. The noun medium , for instance, is defined as  X  X  method of payment X  and must not be used in any other sense. The grammar is not explicitly restricted.  X  P 2 E 5
Oc  X  e Controlled English (Cucchiarini 2002) is a controlled language developed at Oc  X  e, combined with traditional machine translation techniques to improve the translation quality of the company X  X  documentation in 17 different languages. One of the important properties of the language is that it leads to more concise texts. For example, instead of  X  X n several windows, an icon shows the current status/activity of a printer. See the list below for a description of each status. X , one would write:
The language is implemented with the help of the MAXit Checker by SMART Commu-nications.  X  P 2 E 5 N 5 S 1 , TWDI
OWL ACE (Kaljurand and Fuchs 2006) is a controlled language for the ontology lan-the expressiveness of OWL and is more specific than ACE with its underspecified semantics, particularly in the case of plurals. Thus, OWL ACE is more precise but less expressive than ACE.  X  P 5 E 2 N 4 S 3 , FWA  X  X WLPath X  X  Guided English X  (Valencia-Garc  X   X a et al. 2011) is a query language for a tool called OWLPath, with which ontologies can be queried. Statements in this language start with the phrase View any . These are two examples:
These statements are translated into the SPARQL query language. Even though their structure roughly follows English grammar, they cannot be considered valid English sentences.  X  P 5 E 2 N 3 S 4 , FWA OWL Simplified English (Power 2012) is a controlled language for the Semantic Web.
In contrast to most other approaches, there is no real lexicon, neither built-in nor user-defined. Only a very small number of function words are predefined, and users have syntactic clues such as capitalization and adjacent words. This is an example (assuming that governed and lives are listed as verbs):  X  X athOnt CNL X  (Kim et al. 2005; Namgoong and Kim 2007) is a controlled language developed for a tool called PathOnt. The tool is multilingual, supporting English and
Korean. Statements in this language are deterministically mapped to RDF triples. These are two exemplary sentences:
The language seems to cover only simple existential statements.  X  P PENG (Schwitter 2002) is a controlled language whose name stands for  X  X rocessable
English. X  It is a rich but unambiguous language that can be automatically translated via discourse representation structures into first-order logic with equality. It is inspired by ACE, and the approach has a strong focus on predictive editing. These are two examples:
PENG-D (Schwitter and Tilbrook 2004) is a language derived from PENG, the main difference being that PENG-D builds upon RDF and OWL instead of discourse repre-sentation structures.  X  P 5 E 3 N 4 S 3 , FWA PENG Light (Schwitter 2008) is another language derived from PENG. It maps to the TPTP notation for first-order logic.  X  P 5 E 3 N 4 S 3 , FWA
Perkins Approved Clear English (PACE) (Pym 1990) is a controlled language devel-oped at Perkins, a diesel engine manufacturer and now a subsidiary of Caterpillar. The language was introduced in 1980 and was based on ILSAM. The goal was to improve machine-assisted translation. In order to avoid the use of synonyms, PACE comes with a dictionary that has been gradually extended and counted 2,500 entries in 1990, such as  X  X assage (n): A drilling along which a fluid moves. X  PACE is summarized in  X  X en
Rules of Simplified Writing X :
The aim of the first five rules is to make the text short and simple, and the last five rules have the somewhat opposing objective to make the text more explicit. This is an example consisting of two PACE sentences: 160
PERMIS Controlled Natural Language (Inglesant et al. 2008) is a language for express-ing access control policies for grid computing environments. It is based on CLOnE with specific extensions for authorization policies:
Such statements are mapped to different formal target notations. Each statement follows one of only nine statement patterns.  X  P 5 E 2 N 4 S 4 , FWDA  X  X ILLS Language X  (Bouayad-Agha, Power, and Belz 2002) is a language for medical information documents used in a system called PILLS. It follows a similar editing ap-proach as the ICONOCLAST language, which was developed a couple of years earlier by the same research group. With the PILLS approach, different types of documents can be automatically generated from a master document and translated into different languages.  X  P 4 E 1 N 5 S 3 , TFDA
Plain Language or Plain English (SEC 1998; PLAIN 2011) is an initiative by the US make official documents easier to understand and less bureaucratic.  X  X se pronouns to speak directly to readers X  and  X  X void double negatives and exceptions to exceptions X  are two exemplary rules. Unlike other such style guides, many of the guideline rules are strict and, with the Plain Writing Act of 2010, US governmental agencies are obliged to comply with them. With the focus being on human understandability and acceptance, documents in Plain Language do not seem to be considerably more precise or simpler from a computational point of view, when compared to full English.  X  P
PoliceSpeak (Johnson 2000) is a language developed to improve police communications communications more concise, more predictable, more stable and less ambiguous. X  The project was launched in 1988 and the language was ready in 1992. It has a similar goal and application area as SEASPEAK and the different air traffic control phraseologies.  X  X ROSPER Controlled English X  (Grover et al. 2000) is a language for the specification and verification of hardware designs, developed in the late 1990s. The language is based on a restricted version of a general English grammar. Sentences of the language can be automatically mapped to a certain type of temporal logic. This is an exemplary sentence:
Ambiguity is not completely eliminated, but ambiguous sentences can be automatically spotted and reported to the user.  X  P 4 E 3 N 4 S 3 , FWDA
Pseudo Natural Language (PNL) (Marchiori 2004) is a language designed as a user-friendly language for the Semantic Web. It builds upon RDF and first-order logic, and uses Prolog to calculate inferences. These are two exemplary sentences:
Upper-case words such as JOHN act as variables that can be instantiated with concrete definitions involving URIs. PNL is unambiguous and has well-defined semantics, but unnatural capitalization mitigates the naturalness of the language. Its structure looks simple at first sight, but rather complex rules have to be applied in order to resolve ambiguous syntax trees.  X  P 5 E 3 N 3 S 3 , FWA  X  X uelo Controlled English X  (Franconi et al. 2011) is a language introduced in 2010 and used in a query interface called Quelo. This is an exemplary query:
Following a conceptual authoring approach, users cannot directly edit the sentences, but they can trigger modification actions on the underlying formal representation.
Rabbit (Hart, Johnson, and Dolbear 2008) is a controlled language for OWL. It has been developed and used by Ordnance Survey, Great Britain X  X  national mapping agency.
Rabbit is designed for a specific scenario, in which it is used for the communication between domain experts and ontology engineers to create ontologies. Three types of statements are supported: declarations, axioms, and import statements. These are examples of the first and second type:
The language is quite simple, being defined by a small number of sentence patterns and some modifications thereof.  X  P 5 E 2 N 4 S 4 , FWG
Restricted English for Constructing Ontologies (RECON) (Barkmeyer and Mattas exemplary sentence:
The language is defined by around 200 rules in Backus-Naur form.  X  P Restricted Natural Language Statements (RNLS) (Breaux and Ant  X  on 2005; Breaux,
Ant  X  on, and Doyle 2008) is a language for policy statements and software engineering goals introduced in 2004. The following are two exemplary RNLS statements: mapping between RNLS and Description Logic, but it is not clear whether this mapping is automated.  X  P 3 E 2 N 4 S 3 , FWDA
RuleSpeak (Ross 2003; OMG 2008; Ross 2013) is a CNL for business rules. The de-very similar to SBVR Structured English, which emerged later. Each RuleSpeak rule belongs to one of eleven  X  X unctional categories X  such as  X  X omputation rule, X   X  X nference rule, X  and  X  X rocess trigger. X  For each of these categories specific templates are defined. 162
Computation rules, for example, contain the phrase  X  X ust be computed as X  (or simply  X = X ). The first of the following two examples is such a computation rule:
Sometimes the color codes of SBVR Structured English are adopted to emphasize the different types of the sentence constituents. Like SBVR Structured English, RuleSpeak is linked to the SBVR standard, which provides formal semantics based on second-order logic with Henkin semantics. However, the mapping from RuleSpeak texts to the logical simplify the language, but there is no formal grammar that would fully define the language.  X  P 3 E 4 N 4 S 2 , CFWI
SBVR Structured English See Section 4.1.  X  X  3 E 4 N 4 S 2
SEASPEAK (Strevens and Johnson 1983) is an  X  X nternational Maritime English X  de-signed for clear communication among ships and harbors. Its development started in 1981. It is a controlled phraseology similar to PoliceSpeak and the different air traffic control phraseologies.  X  P 2 E 1 N 3 S 2 , CSDG
SMART Controlled English (Smart 2006) is a  X  X ore advanced version X  of ASD Sim-plified Technical English, developed by the company SMART Communications. It was probably influenced by SMART Plain English, and has been applied to different areas. This is an excerpt of a document in SMART Controlled English: violations of the restrictions of the language.  X  P 2 E 5
SMART Plain English , sometimes called Plain English Program (PEP) , is a controlled language developed and used at SMART Communications since the mid 1980s. based on CFE and was the basis for HELP and the controlled languages at Clark and Rockwell (Adriaens and Schreors 1992). As for SMART Controlled English, the tool
MAXit Checker can be used to create compliant documents.  X  P  X  X owa X  X  syllogisms. X  See Section 4.1.  X  X  5 E 1 N 4 S 5 , FWA
Special English (Voice of America 2009) is a simplified English developed and used by the Voice of America, the official external broadcast institution of the US government. television, and the Web. This makes it the second oldest English-based CNL (after Basic organization. At the time of its creation, Special English was probably influenced by
Basic English. The vocabulary is restricted to about 1,500 words, which have changed over time. Sentences should be short and should be spoken at a slower speed. There are no explicit restrictions on grammar or semantics.  X  P 1 E
SQUALL (Ferr  X  e 2012) is a controlled natural language in the area of the Semantic Web to query and update RDF graphs. Sentences in this language are translated into the query language SPARQL, whereby structural ambiguity is resolved based on a few syntactic rules. This is an example:
The language is defined by about 50 simple grammar rules.  X  P
Standard Language (SLANG). See Section 4.1.  X  X  3 E 1 N 4 S
Sun Proof (Wells Akis and Sisson 2002) is a controlled language introduced at Sun for their technical documentation. The initial development of the language lasted from 1999 until 2002. The general objective was to write texts that are  X  X asier to understand and to translate for humans as well as machines X  but with a clear focus on translatability.
Sun Proof is restricted by three sets of guidelines: style guidelines, grammar rules, and terminology. One of the most important rules is the limitation of the sentence length to 25 words. Other rules include semantic restrictions such as using may only for granting permission. This is an exemplary sentence:
Sydney OWL Syntax (SOS) (Cregan, Schwitter, and Meyer 2007) is a controlled lan-guage introduced in the context of the Semantic Web. It is based on PENG and provides a bidirectional and complete mapping to the ontology language OWL. These are two exemplary sentences:
Template Based Natural Language Specification (TBNLS) (Esser and Struss 2007) is language is defined by 15 templates that provide a mapping to propositional logic with temporal relations. This is an exemplary sentence:
P and P 2 represent the propositional variables for the respective boxes, and T variable.  X  P 5 E 2 N 3 S 4 , FWDAI ucsCNL (Barros et al. 2011) is a controlled natural language for use case specifications in the area of automated software testing. The language is intended to be unambiguous and is defined by a small number of simple grammar rules. There are imperative system state before and after user actions: 164
Voice Actions 7 are a CNL for spoken action commands on the Android mobile phone platform. Currently, the language covers twelve informally defined command patterns example:
These spoken commands can be automatically interpreted and executed by the system. Acknowledgments References 166 168 170
This article has been cited by:
