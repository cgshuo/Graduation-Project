
Association mining, or group affiliation, refers to a group of techniques that discover relationships between items based on frequency metrics (Agrawal et al. 1993; Srikant et al. 1997; Han et al. 2001). Recent extensions to association-mining algorithms al-low the incorporation of concept hiera rchies within this process (Han and Fu 1994, 1995; Adamo 2001; Mao 2001). This allows the mining process to discover associa-tions between groups of items or concepts, based on a specified concept hierarchy in addition to associations between specific items. This is important, as the inclusion of hierarchical semantics can enhance a user X  X  understanding of the relationships em-bedded in a dataset by discovering associations that relate groups of items specified within a concept hierarchy.
 Higher level or internal nodes of the concept hierarchy represent generalised concepts that relate to a specific group of leaf nodes o r items within the dataset. Concept hier-archies therefore present a progressive generalisation of the items within the dataset.
Hierarchical associations thus represent gen eralised relationships that can often be of greater interest than associations at leaf level because they represent more succinct knowledge or rules that may not appear at a lower point in the hierarchy.
Mining, although central, is only a part of the knowledge-discovery process; the complete process consists of data collection, preprocessing, mining, visualisation and interpretation. Several knowledge-discovery frameworks have been developed to en-compass this process, of which the most widely known is the CRISP-DM Process
Model (Chapman et al. 1999). Of interest within this paper is the transition, through visualisation techniques, from the mining stage to user interpretation.

A typical mining run can produce many associations that need to be presented to the user in a manner that facilitates interpretation. Early association presentations were text based. For example, A  X  B ( X  % , X  % ) indicates that an association exists between the sets of items A and B characterised (typically ) by the usefulness mea-sures support (  X  ) representing the frequency of the itemset from which the rule was derived, and confidence (  X  ) representing the strength of the association. However, al-though simple to create, text-based presentations are difficult to interpret when many associations are produced, which is often the case.

This difficulty has led to the use of association-rule visualisations, or graphi-cal representations of the discovered associations, to aid interpretation. Researchers have devised several techniques for the visualisation of regular associations built on matrix-and graph-based techniques. Ho wever, our research has found no current techniques that allow for the effective visualisation of discovered hierarchical asso-ciations. The problem lies in finding a technique by which the concept hierarchy is effectively incorporated within the visualisation. To this end, we present a novel and useful technique that allows the simultaneous visualisation of both hierarchical and association semantics.

This rest of this paper is organised as fo llows. Section 2 descr ibes hierarchical association mining in further detail. Sections 3 and 4 look at current association presentation and hierarchi cal visualisation techniques. Section 5 introduces the hier-archical association visualisation technique (CARV) and discusses its design, func-tionality and implementation. Section 6 discusses further work and Sect. 7 is a short conclusion.
The discovery of association rules within sets of data is a common data-mining task. An association X  X  relevance is comm only determined by objective measures such as confidence and support, where confidence measures the strength of the relation-ship and support indicates the importance of an item in terms of its frequency. De-spite a variety of alternatives and extensions, the Apriori algorithm first proposed by Agrawal et al. (1993) still provides the fundamental method for most current association-mining algorithms and various extensions have been developed, including hierarchical association mining, which allows the discovery of associations between concepts within a concept hierarchy (Han and Fu 1994).

A concept hierarchy provides a representation of a hierarchical grouping of items within a system. For example, according to t he example hierarchy shown in Fig. 1,
Whiskey comes under Alcohol , which in turn is classified as a Drink .However,for any set of items, it is possible to define many different concept hierarchies. For example, Cocoa could be classified as a Chocolate as well as a Po
The concept hierarchy presented in Fig. 1 an d its associated transaction sets are used to provide examples throughout this paper 2 .
 ation mining results in the production of generalised rules, which provides two main benefits. First, generalised rules minimize information loss resulting from increasing the support threshold, and second, they facilita te interpretation of the associations within the ruleset.
 sults in decreased pr ocessing time (because fewer candidate itemsets meet the re-quired threshold), associations of possible interest may be omitted. Hierarchical min-ing minimizes the res ulting information loss because l eaf items implicitly participate within higher level associations. For example, at support threshold [
Whiskey , Lemonade ] might be found to be frequent and hence the rule Whiskey
Lemonade is discovered; however, at support threshold [
Whiskey , Lemonade ] may not meet the support threshold and hence is excluded from consideration. The inclusion of a concept hierarchy leads to the consideration of item-sets derived from different levels of abstraction, such as  X  [
Whiskey , SoftDrink ] is greater than  X  [ Whiskey , Lemonade  X  [
Whiskey , GingerBeer ] and hence relationships such as Whiskey may be discovered. This higher level rule, although introducing a degree of uncer-tainty, implies that a relationship might exist between the lower level items, such as
Whiskey  X  Lemonade , that did not meet the support threshold. Thus, the information loss occurring through increasing the support threshold is reduced.
 ciations between groups of items as specified by the concept hierarchy. This addi-tional dimension produces rules indicating associations between groups that may be of greater interest than associations of a more specific nature. For example, within a particular mining session, generalised associations such as Alcohol  X ( 84% ) might be of more interest to a marketing department than more specific rules such as Whiskey  X  Lemonade  X ( 56% ) .
Hierarchical association algorithms have been an area of research since 1994 when Han and Fu introduced the concept of the dynamic generation of concept hierarchies for knowledge discovery (Han and Fu 1994). The following year, they also presented a series of algorithms for hierarchical mining known as the ML-T* family (Han and Fu 1995).

These algorithms were mainly concerned with intralevel mining, or mining within concept levels only; however, this research did provide an algorithm for interlevel mining known as ML-T2. This algorithm incorporates the hierarchical semantics within the transaction file, so that each ite m is replaced with its hierarchical position. For example, the item Whiskey in Fig. 1 would be replaced by the hierarchical item
Drink  X  Alcohol  X  Whiskey . This integration improves algorithm efficiency, as the data is located in a single source, reducing I/O and simplifying further processing, which is based on the Apriori algorithm. The algorithm begins by discovering the frequent one-item itemsets ( L 1 ) relating to the first hierarchical level and then pro-gressively deepening the level of hierarchical inclusion itemsets involving items from the different c oncept levels (interlevel itemsets) are discovered during the creation of the L 2 itemsets. This is achieved by deriving L itemsets from not only the nodes at the current level of abstraction but also incorpo-rating higher level nodes. The derivation of subsequent L
Apriori algorithm. After all frequent itemsets have been found, the set of association rules are derived based on a specified confidence threshold (
Subsequent algorithms include work by Srikant and Agrawal (1997), Hipp et al. (1998), Thomas and Sarawagi (1998), Mao (2001), Ong et al. (2001), and ourselves (Ceglar 2003). Srikant and Agrawal devised the algorithms Basic , Cumulate , Stratify ,
Estimate and Estmerge that extend the Apriori algorithm. Basic appends the gener-alised items to each transaction, and then t reats all items the same way during Apriori processing. Cumulate improves Basic by filtering out redundant candidate itemsets containing an item as well as its ancestors. Stratify uses the hierarchy during process-ing to optimise pruning by processing candidate itemsets of length that ensures that the more generalised itemsets are processed first. This is achieved by associating each candidate itemset with a depth  X  and performing a dataset pass for each depth level in increasing order. If an itemset is found to be infrequent, then the hierarchical descendant itemset s of that itemset are removed. The Estimate and
Estmerge algorithms extend the previous algorithms by incorporating sampling to estimate the support of candidates.

HND and HPtid (Ceglar 2003) and Prutax (Hipp et al. 1998) are also based on the Apriori algorithms but allow the dynamic generation of rules as the itemsets are discovered. HND also provides nonmonotonic support, enabling the user to vary the support threshold across hierarchical levels X  X  pruning technique that has turned out to be simple yet effective. HPtid and Prutax both use a vertical dataset layout, tidList, rather than the more commonly used horizontal, transaction layout. This lay-out is focused on items instead of transac tions and hence higher level concepts are incorporated as new items associated with the transactions in which they participate.
Furthermore, HPtid provides an effective technique for prioritised mining, which al-lows the user to specify a set of items or higher level concepts that the user wants mined first.
 Most hierarchical mining algorithms are b ased on the Apriori algorithm. However,
Thomas and Sarawagi (1998) have devised techniques that accomplish this mining through the SQL querying of databases with in corporated hierarchical semantics.
Recently, Mao (2001) and Ong et al. (2001) ha ve developed hierarchical algorithms based upon the FP-growth algorithm (Han et al. 2000), which discovers associations through the analysis of a constructed frequent pattern tree.
To facilitate the interpretation of association-mining results, various presentation tech-niques have been created. There are two classes of presentation technique: textual and graphical.
 tives (characters, dashes, mathematical ope rators), which are interpreted by the user in a sequential manner at a low level of detail. By  X  X ow level of detail X  we mean that the user recognises each primitive in turn. T he benefit of this form of presentation is that it is perceived in the same way by different users and is quickly and easily produced. The drawback is that they are not conducive to the analysis of complex data and patterns that are key characteristics of data-mining results. forms of presentation, as they are not constrained to a prespecified set of primi-tives, as are textual presentation methods. Graphical presentations can take many forms, as the underlying data can be mapped to different graphical primitives such as position, shape, colour and size. This leads to individual visualisations being able to present many dimensions of data in a concise manner through the mapping of data dimensions to different graphical primitives, whereas in textual presentations, the data dimensions are mapped to the same primitive type. Human perception and informa-tion theory (Miller 1956) indicate that graphi cal presentation facilitates the search for patterns by harnessing the capabilities of the human visual system to elicit informa-tion. This is due to three perceptual phenomenon facilitated through visualisation X  multidimensional perception, recoding an d relative judgment. To facilitate the in-terpretation of association-mining results, various visualisation techniques have been created. Each of these methods requires two essential components: a graphical repre-sentation of the items and a technique that illustrates the relationships between these items. The techniques fall into two classes: matrix-based and graph-based methods.
The basic design of a two-dimensional mat rix maps the anteced ent and consequent to the X and Y axes and any relationship is indicated by the presence of a graphical icon on the intersecting cell, as illustrated in Fig. 2a. Figure 2b from SGI X  X  MINESET tool (Rathjens 1997), presents a complete three-dimensional matrix-based presenta-tion. This common matrix-based design is useful when the itemsets are composed of a relatively small number of distinct ant ecedent and consequent values. However, they quickly degenerate as the number of dif ferent antecedents a nd/or consequents in the underlying rule set increases, resulting in the worst case, of an O( n matrix area growth. This may lead to large visualisations that are cumbersome, oc-cluded and difficult to understand. Two significant variations to this technique have subsequently been developed.
 mentation of a rule-to-item matrix, shown in Fig. 3, based on the premise that an item can only occur once in a rule. The technique is an improvement over the com-mon matrix-based visualisations in that the matrix growth is linear in the number of rules and the matrix is less sparse. Occlusion is also reduced by displaying the associated support and confidence data as wall plates. CrystalClear (Ong et al. 2002) eliminates scalability issues by mapping th e support and confidence heuristics instead of antecedents and consequents to the axes , each cell therefore relates to a group of rules with common heuristics. This approach allows for the quick identification of groups of heuristically similar rules that can then be displayed in a textual format for detailed analysis.

Hofman et al. (2000) created an alternative form of matrix Visualisation X  X nter-active mosaic plots. This visualisation technique (shown in Fig. 4) allows the investi-gation of the associations between a set of an tecedents (and all permutations thereof) and a consequent. Within mosaic plots, i ndividual antecedents are represented as ho-rizontal bars along the x-axis and the strength of an association is represented by the height of the vertical column above the sp ecified antecedent permu tation (inclusion denoted by black bar). Figure 4 illustrates t he associations between the antecedent set heinekenandcokeandchicken and the consequent sardines , the vertical columns indicate both the strength of the positive association (dark grey) and its negation not sardines (light grey).
 and consequents. However, the technique is designed for focused discovery where the set of attributes under consideration is small and becomes increasingly difficult to interpret as the number of items increases.
 heinekenandcokeandchicken  X  sardines as there is a significant difference between its confidence and that of all other permutations. The example highlights the con-tribution of the mosaic plots visualisation technique, and although it is constrained in terms of volume of information presented, it allows a detailed analysis of the participants.
Graph-based techniques present items as nodes and associations as links between nodes. Visualisations vary in the placement of the nodes and the representation of metadata, including direction and confiden ce. This form of visualisation displays as-sociation rules in a more concise manner than that of matrix-based techniques. How-ever, as the number of items and associations increase, graph-based visualisations may become cluttered and hence difficult to interpret.
 directed graph visualisation, whereby the nodes represent items, the arcs represent associations between these items and the level of confidence is represented by arc thickness and label. This technique uses rule templates to reduce the complexity of the visualisation by allowing users to create display filters through template manipu-lation. This is indicated in the figure by items E through J, which have been removed from the display and appear to the right of the image. This allows the user to fo-cus on rule subsets, which aids in visualisation comprehension. Similarly, Rainbows (Hetzler et al. 1998) shows the associations of certain items through the animation of edges.

Rainsford and Roddick (2000) (Fig. 6) developed a circular visualisation in which the items are evenly spaced ar ound the circumference and L resented as chords coloured with respect to association direction. This type of vi-sualisation is effective in relating holistic information regarding the mining session, concisely representing results and indicating areas of interest.

Directed associated visualisation (DAV) (Hao et al. 2001) is a three-dimensional visualisation technique that maps the items and relationships to positions and vertices on a sphere, using weighted edges to indi cate confidence and arrows for direction.
DAV distributes items equally on a spherical surface (Fig. 7a). Based on physics principles of masses and springs, a support matrix is then created that relates the strength of the association between items in terms of spring tension. The spheri-cal structure is then relaxed and a state of low local minimum energy is reached (Fig. 7b), resulting in each item X  X  relativ e position reflecting its associations. The direction and confidence of each vertex is then calculated (Fig. 7c) and finally pre-sented to the user.
In general, a visualisation X  X  objective is to display data in a manner that facilitates user interpretation. Hence, the visualisation of hierarchical semantics should match the user X  X  concept of a hierarchical struct ure, a layered struct ure within which each node has a parent and a number of children. This structure is known as a rooted tree, as the structure emanates from a single root node, as compared with free trees that do not encode any structure apart from their topology (Eades 1992). Rooted-tree visualisations can be thought of as belonging to either of two groups: graph-based, in which the hierarchy is present ed as a collection of nodes with connecting arcs representing the hierarchical seman tics, and embedded, in which the parent X  X  graphical representation encompasses that of its children. This section provides an overview of the types of hierarchical visualisation.
 semantics; a set of rules for the effective placement of these nodes was developed by
Wetherell and Shannon (1979). The classical tree visualisation positions child nodes under their parents as shown in Fig. 8 (Herman et al. 2000a) (or earlier in Fig. 1).
Building on this work, two significant visualisation techniques based on a fractal approach were devised, the radial and cone-tree models.
 to their depth in the tree. Each subtree is positioned over a sector of the circle and a convexity constraint forces the subtree wedge to remain convex, ensuring that adjacent subtrees do not overlap (Fig. 9). The cone-tree model by Robertson et al. (1991) differs in that each subtree is repre sented by a circle connected to the parent node (Fig. 10). A two-dimensional version of the cone-tree model can be obtained by projecting the model onto a plane (Carriere and Kazman 1995), termed a balloon view (Fig. 11).
 trees within the parents graphical representation in a manner similar to Venn dia-grams. Examples include treemaps (Johnson and Schneiderman 1991), bubble trees (Boardman 2000) and onion gr aphs (Sindre et al. 1993). Figure 12, a treemap, illus-trates the principle by recursively splitting the screen into rectangles of alternating orientation as the hierarchy is traversed. Onion graphs are a circular version of this technique and bubble trees reduce clutter by only displaying three hierarchy levels simultaneously and requiring user interaction to traverse the tree.

The visualisation of hierarchical inform ation in an effective manner has been an active field of research for 20 years and there is an abundance of literature avail-able. However, our research indicates that much of this work involves extensions and variations (Koike and Yoshihara 1993; van Wijk and van de Wetering 1999) of the techniques summarised above in order to better visualize larger datasets. This gener-ally involves the incorporation of functionality, such as navigation and focus concepts (Herman et al. 2000b; Kreuseler and Schuman 1999; Yee et al. 2001).
A hierarchical association visualisation requires the visualisation of items and their associations within a structure that captures hierarchical semantics. This requires the simultaneous visualisation of both the hierarchy and association structures in an ef-fective and intuitive way. Background research into the visualisation of hierarchical and association seman tics, summarised in Sects. 3 and 4, indicated the effective use of graph-based techniques to represent both types of semantics. While matrix-based and embedded techniques are useful within their respective fields, they are more tightly constrained and cannot accommodate the introduction of other semantics. was on the aesthetic quality of the resulting visualisation. Scalability, which is of-ten a key issue in data visualisation, is of less importance within this domain, as the resulting visualisations will typically not be large. Although a typical transaction dataset may contain thousands of differen t items, the resulting hierarchy is signifi-cantly smaller as the support metric prunes those items with little impact. In fact, the rules of most interest typically relate to items of importance (high support). There-fore, relatively small result sets will typically contain most rules of interest. Also, as noted by Herman et al. (2000), it makes little sense from a cognitive perspective to display large amounts of data because understandability is reduced.
 1999; Purchase 1998) and the main types of g raph-based visualisation conform to these; see Sect. 4. Hence, by basing node pos itioning on hierarchical semantics and using an existing hierarchical graph-based technique, many aesthetic qualities are assured. The issue then becomes the preserva tion of these aesthetics when association semantics are introduced. The introductio n of association semantics as additional edges will not affect those aesthetic qualities that relate to node placement; it may, however, have a detrimental ef fect on obscurement aesthetics.
 formation loss and it can therefore have a significant impact on visualisation under-standability. Hierarchy obscurement will occur in visualisations that rely on edges as well as nodes to convey the hierarchical semantics. Of the three core graph-based models (see Sect. 4), the cone-tree model relies most heavily on edges in conveying hierarchy semantics. The oth er two models can effectively present hierarchy seman-tics solely from node placement.

The classic model, although the most effective in regard to minimising hierarch-ical obscurement because of its unidirectiona l layout, will result in excessive associ-ation obscurement due to this same layout. For example, from Fig. 1, if there existed two associations Gin  X  SoftDrink and Whiskey  X  FruitJuice , the second would be overlaid by the first and hence would be obscured. This form of obscurement is not a significant issue in the radial and cone-tre e models because of their less constrained layout.

Based on the primary need to minimise obscurement, the radial model is the best suited technique, as it is simple enough to convey the hierarchy without the use of edges and association obscurement is minimised because of its circular lay-out. Additionally, previous work by Rainsford and Roddick (2000) (see Sect. 3.2) has indicated the effectiveness of using circ ular representations, and, as the visual-isation is bounded by the hierarchy, the visualisation will be tidier than one based on the classic or cone-tree models. Figure 13 shows the visualisation using radial layout of the complete hierarchy used in Fig. 1, in which the arcs indicate sibling items.
 The associations can then be simultaneously visualised using two techniques:
The direct method, in which relationships are drawn directly between the associated items, and the trail method, where the relationships are drawn along the hierarch-ical path. For example, using the trail m ethod and the hierarchy in Fig. 1, the rule
Whiskey  X  SoftDrink would be represented as a line that transversed the hierarchy from Whiskey to SoftDrink through nodes Alcohol , Drink and NonAlcohol .These techniques are illustrated in Fig. 14, which shows the result of an association-mining run using the DMKD dataset (KDM n.d.). The direct method (Fig. 14b) is useful in tasks that seek to identify general trends within the rule set; however, the hierarchy is quickly obscured as the number of rules increase. The trail method (Fig. 14c) results in a cleaner visualisation of the hierarchical semantics. However, due to as-sociation overlay, there is a high level of obscurement, which results in ineffective visualisations.
 ing associations as overlayin g of associations is in general avoided; however, this method leads to hierarchy obscurement. An effective solution, similar to that pro-posed by Baker et al. (2002) to clarify the visualisation of genetic regulatory net-works, is to make the hierarchy more prominent by extruding the two dimensional radial model into the third dimension (Fig . 15), effectively cr eating a transparent conical model. Within this model, items become more prominent as they lay on the cone X  X  surface, while both intra-and interlev el associations (within and across hierar-chy levels, respectively) lie within the cone and hence do not obscure the hierarchical representation.
 associations with the same constituent items exist. For example, the rules Gin
SoftDrink and SoftDrink  X  Gin , which have different connotations, will be over-laid using the direct method. An effective solution to this problem is the intro-duction of an association vertex. A vertex is an approximate midpoint of the con-stituent items, where the vertex must be unique to ensure no overlaying occurs.
This is accomplished by checkin g new vertices against a lis ting of existing vertices.
If it is not unique, the new vertex is moved slightly in a random direction and rechecked.

The introduction of a vertex also provides a method for the effective visualisation of L graph-based techniques that only present L 2 associations (q.v. (Rainsford and Rod-dick 2000; Hao et al. 2001), discussed in Sect. 3.2). Rule graph by Klemettinen et al. (1994), although capable of visualising L n associations, does not present a generally applicable solution to the overlay problem.
The implementation of these concepts resulted in the development of CARV (con-centric association rule visualiser), illustrated in Fig. 16a. Implementation of three-dimension environment functionality such as zooming, panning and model rotation allows a direct and effective exploration of the model. Associated functionalities of interest include labelling and focus, presented in Fig. 16b. Focusing is achieved by using transparency to hide unrequired a ssociations. For example, within Fig. 16b, only the associations in which SoftDrink and NonAlcoholic participate are apparent.
Figure 17 illustrates two important features of the visualiser: first, the ability to represent nonhierarchical or regular association-mining results, and the inclusion of vertices to eliminate overlay and visualise L n associations.
The CARV technique is currently being used as a tool within a framework that is exploring and providing proof-of-concept for theories regarding principles of guided knowledge discovery through interactive data mining. CARV is currently being ex-tended to provide interactive functionality, allowing the user to guide the mining process through direct manipulation. The fi rst step toward interactive functionality is the inclusion of a dynamic constructio n capability, in effect providing the user with a window into the mining process. Th e dynamic construction of CARV during the mining process provides the user with a real-time view of the current processing state, through which the user can potentially guide further processing by interacting with the mining process by way of the presentation. Figure 18 illustrates the dy-namic construction capability of CARV. Figure 18a shows the initial presentation of frequent items, Fig. 18c shows the completed presentation and Fig. 18b shows an intermediate presentation, at which point only a subset of the total associations have been discovered.
 research is still in its infancy, and as such, there are few published works of relevance (Brin and Page 1999; Anderson et al. 2000; Lesh et al. 2000). The challenge within this field lies in the creation of generic sets of interaction mappings between the graphical interface and the underlying mining process (Ceglar et al. 2003). Existing knowledge discovery tools do not adequately provide the capabilities to incorporate subjective measures of interestingness provided by user guidance into the analysis process. Current analysis resu lts in ineffective discovery processes, as heuristic mea-sures cannot accurately portray what is poten tially of interest to the user. Therefore, guidance can potentially result in an accel erated knowledge discovery process and a greater confidence in result correctness because of the sense of control, to the user, that guidance capabilities provide.
Hierarchical association mining is becoming a useful technology, as indicated by recent research (Han and Fu 1995; Adamo 2001; Mao 2001). However, current pre-sentation of these results is textual, whic h, although acceptable for very small result sets, becomes ineffective as the result set size increases. The visualisation technique introduced in this paper allows the simultaneous visualisation of hierarchical and as-sociation semantics, providing an effective medium for the interpretation of mining results through the harnessing of the user X  X  perceptual capabilities.

This research builds on existing hierarchical and association visualisation tech-niques to define a novel graph-based technique that minimises semantic obscurement through the extrusion of the radial model and the introduction of association vertices to eliminate overlay.

We have implemented and experimented with this visualisation concept and it has proven useful. We are currently extending the tool to further associated research into guided knowledge discovery, using it to provide a dynamic interface through which the user can interact with the mining process.

