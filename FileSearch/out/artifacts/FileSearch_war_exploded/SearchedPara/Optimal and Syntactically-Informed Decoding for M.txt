 Natural language processing problems frequently in-volve scenarios in which a pair or group of related sentences need to be aligned to each other, establish-ing links between their common words or phrases. For instance, most approaches for natural language inference (NLI) rely on alignment techniques to es-tablish the overlap between the given premise and a hypothesis before determining if the former entails the latter. Such monolingual alignment techniques are also frequently employed in systems for para-phrase generation, multi-document summarization, sentence fusion and question answering.

Previous work (MacCartney et al., 2008) has pre-sented a phrase-based monolingual aligner for NLI (MANLI) that has been shown to significantly out-perform a token-based NLI aligner (Chambers et al., 2007) as well as popular alignment techniques borrowed from machine translation (Och and Ney, 2003; Liang et al., 2006). However, MANLI X  X  use of a phrase-based alignment representation appears to pose a challenge to the decoding task, i.e. the task of recovering the highest-scoring alignment un-der some parameters. Consequently, MacCartney et al. (2008) employ a stochastic search algorithm to decode alignments approximately while remaining consistent with regard to phrase segmentation.
In this paper, we propose an exact decoding tech-nique for MANLI that retrieves the globally opti-mal alignment for a sentence pair given some pa-rameters. Our approach is based on integer lin-ear programming (ILP) and can leverage optimized general-purpose LP solvers to recover exact solu-tions. This strategy boosts decoding speed by an order of magnitude over stochastic search in our ex-periments. Additionally, we introduce hard syntac-tic constraints on alignments produced by the model, yielding better precision and a large increase in the number of perfect alignments produced over our evaluation corpus. Alignment is an integral part of statistical MT (Vo-gel et al., 1996; Och and Ney, 2003; Liang et al., 2006) but the task is often substantively different from monolingual alignment, which poses unique challenges depending on the application (MacCart-ney et al., 2008). Outside of NLI, prior research has also explored the task of monolingual word align-ment using extensions of statistical MT (Quirk et al., 2004) and multi-sequence alignment (Barzilay and Lee, 2002).

ILP has been used extensively for applications ranging from text-to-text generation (Clarke and La-pata, 2008; Filippova and Strube, 2008; Wood-send et al., 2010) to dependency parsing (Martins et al., 2009). It has also been recently employed for finding phrase-based MT alignments (DeNero and Klein, 2008) in a manner similar to this work; how-ever, we further build upon this model through syn-tactic constraints on the words participating in align-ments. Our alignment system is structured identically to MANLI (MacCartney et al., 2008) and uses the same phrase-based alignment representation. An align-ment E between two fragments of text T 1 and T 2 is represented by a set of edits { e 1 ,e 2 ,... } , each be-longing to one of the following types:  X  INS and DEL edits covering unaligned words in  X  SUB and EQ edits connecting a phrase in T 1 to Every token in T 1 and T 2 participates in exactly one edit. While alignments are one-to-one at the phrase level, a phrase-based representation effectively per-mits many-to-many alignments at the token level. This enables the aligner to properly link paraphrases such as death penalty and capital punishment by ex-ploiting lexical resources. 3.1 Dataset MANLI was trained and evaluated on a corpus of human-generated alignment annotations produced by Microsoft Research (Brockett, 2007) for infer-ence problems from the second Recognizing Tex-tual Entailment (RTE2) challenge (Bar-Haim et al., 2006). The corpus consists of a development set and test set that both feature 800 inference prob-lems, each of which consists of a premise, a hy-pothesis and three independently-annotated human alignments. In our experiments, we merge the an-notations using majority rule in the same manner as MacCartney et al. (2008). 3.2 Features A MANLI alignment is scored as a sum of weighted feature values over the edits that it contains. Fea-tures encode the type of edit, the size of the phrases involved in SUB edits, whether the phrases are con-stituents and their similarity (determined by lever-aging various lexical resources). Additionally, con-textual features note the similarity of neighboring words and the relative positions of phrases while a positional distortion feature accounts for the dif-ference between the relative positions of SUB edit phrases in their respective sentences.

Our implementation uses the same set of fea-tures as MacCartney et al. (2008) with some mi-nor changes: we use a shallow parser (Daum  X  e and Marcu, 2005) for detecting constituents and employ only string similarity and WordNet for determining semantic relatedness, forgoing NomBank and the distributional similarity resources used in the orig-inal MANLI implementation. 3.3 Parameter Inference Feature weights are learned using the averaged structured perceptron algorithm (Collins, 2002), an intuitive structured prediction technique. We deviate from MacCartney et al. (2008) and do not introduce L2 normalization of weights during learning as this could have an unpredictable effect on the averaged parameters. For efficiency reasons, we parallelize the training procedure using iterative parameter mix-ing (McDonald et al., 2010) in our experiments. 3.4 Decoding The decoding problem is that of finding the highest-scoring alignment under some parameter values for the model. MANLI X  X  phrase-based representation makes decoding more complex because the segmen-tation of T 1 and T 2 into phrases is not known before-hand. Every pair of phrases considered for inclusion in an alignment must adhere to some consistent seg-mentation so that overlapping edits and uncovered words are avoided.

Consequently, the decoding problem cannot be factored into a number of independent decisions and MANLI searches for a good alignment using a stochastic simulated annealing strategy. While seemingly quite effective at avoiding local maxima, this iterative search strategy is computationally ex-pensive and moreover is not guaranteed to return the highest-scoring alignment under the parameters. Instead of resorting to approximate solutions, we can simply reformulate the decoding problem as the optimization of a linear objective function with lin-ear constraints, which can be solved by well-studied algorithms using off-the-shelf solvers 1 . We first de-fine boolean indicator variables x e for every possible edit e between T 1 and T 2 that indicate whether e is present in the alignment or not. The linear objective that maximizes the score of edits for a given param-eter vector w is expressed as follows: where  X ( e ) is the feature vector over an edit. This expresses the score of an alignment as the sum of scores of edits that are present in it, i.e., edits e that have x e = 1 .

In order to address the phrase segmentation issue discussed in  X  3.4, we merely need to add linear con-straints ensuring that every token participates in ex-actly one edit. Introducing the notation e  X  t to in-dicate that edit e covers token t in one of its phrases, this constraint can be encoded as: On solving this integer program, the values of the variables x e indicate which edits are present in the highest-scoring alignment under w . A similar ap-proach is employed by DeNero and Klein (2008) for finding optimal phrase-based alignments for MT. 4.1 Alignment experiments For evaluation purposes, we compare the perfor-mance of approximate search decoding against ex-act ILP-based decoding on a reimplementation of MANLI as described in  X  3. All models are trained on the development section of the Microsoft Re-search RTE2 alignment corpus (cf.  X  3.1) using the training parameters specified in MacCartney et al. (2008). Aligner performance is determined by counting aligned token pairs per problem and macro-averaging over all problems. The results are shown in Table 1.

We first observe that our reimplemented version of MANLI improves over the results reported in MacCartney et al. (2008), gaining 2% in precision, 1% in recall and 2-3% in the fraction of alignments that exactly matched human annotations. We at-tribute at least some part of this gain to our modified parameter inference (cf.  X  3.3) which avoids normal-izing the structured perceptron weights and instead adheres closely to the algorithm of Collins (2002).
Although exact decoding improves alignment per-formance over the approximate search approach, the gain is marginal and not significant. This seems to indicate that the simulated annealing search strategy is fairly effective at avoiding local maxima and find-ing the highest-scoring alignments. 4.2 Runtime experiments Table 2 contains the results from timing alignment tasks over various corpora on the same machine us-ing the models trained as per  X  4.1. We observe a twenty-fold improvement in performance with ILP-based decoding. It is important to note that the spe-cific implementations being compared 2 may be re-sponsible for the relative speed of decoding.
The short hypotheses featured in the RTE2 cor-pus (averaging 11 words) dampen the effect of the quadratic growth in number of edits with sentence length. For this reason, we also run the aligners on a corpus of 297 related sentence pairs which don X  X  have a particular disparity in sentence lengths (McK-eown et al., 2010). The large difference in decoding time illustrates the scaling limitations of the search-based decoder. The use of an integer program for decoding pro-vides us with a convenient mechanism to prevent common alignment errors by introducting additional constraints on edits. For example, function words such as determiners and prepositions are often mis-aligned just because they occur frequently in many different contexts. Although MANLI makes use of contextual features which consider the similar-ity of neighboring words around phrase pairs, out-of-context alignments of function words often ap-pear in the output. We address this issue by adding constraints to the integer program from  X  4 that look at the syntactic structure of T 1 and T 2 and prevent matching function words from appearing in an align-ment unless they are syntactically linked with other words that are aligned.

To enforce token-based constraints, we define boolean indicator variables y t for each token t in text snippets T 1 and T 2 that indicate whether t is in-volved in a SUB edit or not. The following constraint ensures that y t = 1 if and only if it is covered by a SUB edit that is present in the alignment. We refer to tokens t with y t = 1 as being active in the alignment. Constraints can now be applied over any token with specific part-of-speech (POS) tag in order to ensure that it can only be active if a differ-ent token related to it in a dependency parse of the sentence is also active. We consider the following classes of constraints: Modifier constraints: Tokens t that represent con-junctions, determiners, modals and cardinals can only be active if their parent tokens  X  ( t ) are active. Lineage constraints: Tokens t that represent prepo-sitions and particles (which are often confused by parsers) can only be active if one of their ancestors  X  ( t ) or descendants  X  ( t ) is active. These constraints are less restrictive than the modifier constraints in order to account for attachment errors. 5.1 Alignment experiments A TAG-based probabilistic dependency parser (Ban-galore et al., 2009) is used to formulate the above constraints in our experiments. The results are shown in Table 3 and indicate a notable increase in alignment precision, which is to be expected as the constraints specifically seek to exclude poor edits. Despite the simple and overly general restrictions being applied, recall is almost unaffected. Most compellingly, the number of perfect alignments pro-duced by the system increases significantly when compared to the unconstrained models from Table 1 (a relative increase of 35% on the test corpus). The results of our evaluation indicate that exact de-coding via ILP is a robust and efficient technique for solving alignment problems. Furthermore, the in-corporation of simple constraints over a dependency parse can help to shape more accurate alignments. An examination of the alignments produced by our system reveals that many remaining errors can be tackled by the use of named-entity recognition and better paraphrase corpora; this was also noted by MacCartney et al. (2008) with regard to the original MANLI system. In addition, stricter constraints that enforce the alignment of syntactically-related tokens (rather than just their inclusion in the solution) may also yield performance gains.

Although MANLI X  X  structured prediction ap-proach to the alignment problem allows us to encode preferences as features and learn their weights via the structured perceptron, the decoding constraints used here can be used to establish dynamic links be-tween alignment edits which cannot be determined a priori . The interaction between the selection of soft features for structured prediction and hard con-straints for decoding is an interesting avenue for fur-ther research on this task. Initial experiments with a feature that considers the similarity of dependency heads of tokens in an edit (similar to MANLI X  X  con-textual features that look at preceding and following words) yielded some improvement over the base-line models; however, this did not perform as well as the simple constraints described above. Specific features that approximate soft variants of these con-straints could also be devised but this was not ex-plored here.

In addition to the NLI applications considered in this work, we have also employed the MANLI align-ment technique to tackle alignment problems that are not inherently asymmetric such as the sentence fusion problems from McKeown et al. (2010). Al-though the absence of asymmetric alignment fea-tures affects performance marginally over the RTE2 dataset, all the performance gains exhibited by exact decoding with constraints appear to be preserved in symmetric settings. We present a simple exact decoding technique as an alternative to approximate search-based decoding in MANLI that exhibits a twenty-fold improvement in runtime performance in our experiments. In addi-tion, we propose novel syntactically-informed con-straints to increase precision. Our final system im-proves over the results reported in MacCartney et al. (2008) by about 4.5% in precision and 1% in recall, with a large gain in the number of perfect alignments over the test corpus. Finally, we analyze the align-ments produced and suggest that further improve-ments are possible through careful feature/constraint design, as well as the use of named-entity recogni-tion and additional resources.
 The authors are grateful to Bill MacCartney for pro-viding a reference MANLI implementation and the anonymous reviewers for their useful feedback. This material is based on research supported in part by the U.S. National Science Foundation (NSF) under IIS-05-34871. Any opinions, findings and conclu-sions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF.

