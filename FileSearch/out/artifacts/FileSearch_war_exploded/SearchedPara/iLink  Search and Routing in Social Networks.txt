 The growth of Web 2.0 and fundamental theoretical break-throughs have led to an avalanche of interest in social net-works. This paper focuses on the problem of modeling how social networks accomplish tasks through peer production style collaboration. We propose a general interaction model for the underlying social networks and then a specific model ( iLink ) for social search and message routing. A key contri-bution here is the development of a general learning frame-work for making such online peer production systems work at scale. The iLink model has been used to develop a sys-tem for FAQ generation in a social network ( FAQtory ), and experience with its application in the context of a full-scale learning-driven workflow application (CALO) is reported. We also discuss methods of adapting iLink technology for use in military knowledge sharing portals and other message routing systems. Finally, the paper shows the connection of iLink to SQM, a theoretical model for social search that is a generalization of Markov Decision Processes and the popular Pagerank model.
 I.2.6, H.2.8 [ Learning, Database Applications -Data Mining ]: Algorithms, Experimentation peer production, social search, message routing, learning, social FAQ generation, expert identification, smart RSS
Over the last decade, there has been an explosion of in-terest in social networks, stimulated in large measure by the astonishing emergence of the web as a medium for human ex-pression and interaction. Traffic on social networking sites is rapidly outstripping traffic on more conventional web sites. To some extent the typical statistics that indicate this do not adequately capture the magnitude of the phenomenon. If one takes into account user time (in terms of both energy and focus), the social web is becoming an overwhelmingly dominant medium. The activity in social networks in terms of these other measures is beginning to exceed all other web-based activities including, for example, Internet search.
A key trend is the growing importance of the social web as a production mechanism. The social web provides much more than an opportunity for people to interact and ex-change general information. It is a new medium for pow-erful models of organizing purposeful social activities. This is compellingly illustrated in the growth of open source ef-forts (e.g., LAMP, 2 Wikipedia), which some authors [8, 15, 21, 28, 30] argue represent an alternate mode of social and economic production.

Much of the research in social networks has not formally modeled how social networks accomplish tasks. Rather, the work has concentrated on the structural representation, analysis, and interpretation of social network data [27, 29]. The purpose of the work discussed here is to introduce a general approach to modeling how real-time, dynamic social networks communicate and cooperate to solve problems, and to show how this understanding enables the development of applications that enhance and amplify the capabilities of these human networks. The range of potential applications is quite broad, including expertise identification and FAQ generation, social search, and smart RSS filtering.
Our high-level goals are twofold  X  we would like to under-stand how social networks create artifacts like Wikipedia, and use this increased understanding to build new applica-tions that leverage the power of web-based social networks. To take these steps we are required to do the following: 1. Develop enriched node and link models for social net-works  X  In our model, a social network is represented as a graph with nodes and links. We have discovered that in order to capture aspects of social networks that we are in-terested in, we need to allow the nodes to have associated property vectors. Some of these characteristics might be learned (like responsiveness) and some might be exogenous parameter values (like job title). Similarly, we must extend the link model to include, for example, the content of the
As reported by www.eMarketer.com in November, 2006
Popular acronym for: Linux, Apache, MySQL, PHP interactions between nodes. In our scheme, the topology of the network is both probabilistic and dynamic. 2. Develop an associated learning framework  X  Since we are interested in building social network applications, we need to have some means by which we act within the network. We accomplish this by learning patterns of interaction and properties of the social network, and then optimizing this model with respect to some desired outcome. Performing such learning in social networks is challenging. First, the general problem has to be studied as a number of interre-lated learning problems. Second, the feedback that drives the learning comes from distributed, heterogeneous sources. The supervision must be integrated sensibly in order to pro-vide a useful signal to the learning algorithms.

In the remainder of this paper, we will 1. Discuss a specific model for one important kind of 2. Briefly summarize the range of research issues that 3. Show how iLink can be applied to a wide range of
Tremendous effort has been expended in the development of powerful document-based information retrieval (IR) tech-niques. This includes traditional IR, as well as enterprise-centric and web-wide technologies. Some attention, though considerably less, has been given to the problem of identi-fying human sources of information, typically described as some form of  X  X xpertise identification X . The extraordinary growth of the social web over the last several years has re-vived interest in this topic as part of a widespread surge in the study of social networks more generally.

As previously discussed, the whole notion of social network-based production has received enormous attention, no doubt motivated by hugely popular and successful open source ef-forts like Wikipedia and the LAMP family. Regardless of whether one sees the open source model as categorically new, it is a phenomenon of undeniable importance.

In this paper, we propose and develop an open-source style model for the production of an extremely common and widely used artifact on the web, the Frequently Asked Question or FAQ repository. This model depends on the dis-tributed learning of expertise profiles. These learned profiles are not ends in themselves but employed as a critical compo-nent in a general model of network-based FAQ generation. That is, the goal of discovering expertise is in the service of the more general goal of constructing an FAQ repository.
This paper makes several important contributions: 1. Proposes iLink , a model for open-source content pro-2. Presents a model for distributed learning over hetero-3. Discusses extensions of the specific FAQtory model 4. Outlines connections of iLink to SQM, a recently pro-We now discuss these contributions in detail.

A specific open-source model . Many discussions of open-source production systems do not attempt to model the underlying dynamics. Rather they are described infor-mally in terms of shared practices or collaboration platforms (like Wikis). This leaves the impression that the social net-works underlying the open-source production systems work as loosely or semi-organized mobs. We believe that this is an inadequate model of the underlying social phenomena. Wikipedia and Linux communities may be decentralized and distributed, but there is considerable evidence that there are, in fact, systematic processes in the activities of the so-cial networks that account for their success [9]. Our model reflects some of the important characteristics of how social systems generate and distribute messages, something that real social networks clearly carry out, even if informally.
The iLink model and the resulting FAQtory application based on it make it possible to scale and amplify these in-formal processes. We propose a recognizably open-source model for the production of a highly useful artifact, the FAQ. This FAQ can be usefully thought of as a kind of Wikipedia where the content is highly specific (tied to a question) and demand-driven (in response to a query). As a result, FAQs produced by the FAQtory application share many of the positive features of the Wikipedia, in particular the fact that they are continuously generated and revised. The iLink model also provides a principled approach to an open source model of production, with potential benefits for other open source opportunities beyond FAQ generation.
Distributed learning over heterogeneous sources . In the iLink model, messages are routed by a learning sys-tem that integrates information over multiple and hetero-geneous sources. Unlike many models of expertise identifi-cation and answer generation, we allow for incremental an-swering. At each step in a query thread in FAQtory , user nodes can contribute some information even if that infor-mation does not qualify as an answer. This information can be about the query itself or it can simply be some evidence about where knowledge might exist in the network (e.g., who knows something, who knows somebody). The learn-ing system takes continuous feedback in order to improve how message threads get routed from any node.

The learning in iLink occurs by watching a natural social network and selecting over effective strategies surfaced by this system as the members try to resolve queries. Since the learning system is continuously monitoring the real social network, it is capable of drafting off of the social network X  X  learning. In some fashion, iLink enables the social network to discover and amplify its own capabilities.

Extension of the specific model to a general mes-sage routing system . Even though FAQtory is a social Q/A system, there is nothing in the iLink model that re-quires the originating messages to be explicit questions. In fact, a system can learn by similar mechanisms as FAQtory over general message passing, since the learning can oper-ate over general messages without much modification. We will briefly describe how the iLink model can be extended to other message routing applications (e.g., smart RSS fil-tering). Note that certain features in the FAQtory system (e.g., the answer validation mechanism) may become irrele-vant or unnecessary in the general message routing scenario.
A general paradigm for social search . We show the connection of iLink to Social Query Models (SQM) [2], a theoretical model for social search that includes Markov De-cision Processes and the popular Pagerank model as special cases.
An abstract model can be used to characterize various as-pects of the iLink system, e.g., specification of properties of nodes in the network, flow mechanism during message rout-ing. The iLink model has various components: 1. Node : The network has a set of n network nodes N = { N i } n i =1 . As mentioned earlier, each node represents a user in the network, and has an associated profile. 3 In this model, the profile of the i th node is considered to comprise of a set of parameters: (a) an expertise measure E i , represented by
We will use the term node to refer to peers, users or mem-bers of the social network. probability distributions P ( T k | N i ) over a global topic set T = { T k } t k =1 ; each topic is itself a probability distribution over identifiers, where an identifier could represent a wide variety of entities, e.g., message words, meta-tags, entries in an ontology, (b) a referral rank F i , which measures the general affinity of other nodes to route messages to the i node and is calculated using an iterative computation over the referral links, in a way similar to the Pagerank compu-tation, and (c) a response score R i , which is a function of the response rate and response accuracy of a node to in-coming messages. The profile information of all the network nodes is maintained at the supernode, which is defined next. 2. Supernode : A supernode S has the following compo-nents: (a) a database D storing all the past message streams, (b) profile parameters E, R, F for all the nodes in the net-work, (c) the set of all possible topics T . 3. Message : A message m is routed between a node and the supernode. A new message generated by any node is represented as m 0 . As content or meta-content gets added to the message by each node while being routed around in the network, the modifications made to the message are rep-resented as m k , where m k is the k th modification made to the initial message m 0 . A general message can have either content (e.g., words), meta-content (e.g., tags) or a forward-ing address. We will discuss two specific types of messages: (a) a question q , and (b) an answer a . A thread of messages, starting from m 0 to the last modification m k added to the message, constitutes a message stream initiated by m 0 .
For ease of explanation, we will describe the detailed mes-sage flow in the FAQtory system, where the initial message m 0 in a stream is a question q , and the final message is an answer a  X  therefore in the following discussion, a message stream will always begin with a question and end with an answer. All message flows between nodes are moderated by the supernode S , i.e., all messages are sent via S . On getting a message, a node has the choice to (i) answer, (ii) ignore, (iii) route the message, possibly with modifications to the incoming message, or (iv) express interest in validating the answer to the query. This model has two modes of possible routing scenarios. A node can either (a) annotate a message with a forwarding address and send it to the supernode S , specifying that it be routed to another node, or (b) annotate a message with other content and forward it to S , in which case S makes the decision about to whom to next route the current message.

Here is how the message flow and routing mechanism works in FAQtory : 1. A new message stream { m 0 } (where m 0 = q , a ques-2. For each incoming message stream { m 0 , . . . , m k } , S 3. If m k in { m 0 , . . . , m k } is marked as an answer a , then 4. If m k specifies a direct forwarding address, then S 5. If m k does not specify a direct forwarding address or 6. Each of these r nodes now has the choice to ignore the 7. On a message flow getting terminated by a correct
The goal of the system is to effectively learn the E, R, F parameters of the node profiles and the global topic set T , so that an answer a is obtained for a question q that initiated the message stream by using the smallest number of routing steps. In the practical system, one can make enhancements, e.g., the referral score and the response score can be topic based. A user node may have low response rate on average, but on a specific topic (e.g., music, mathematics) may be willing to go out of his way to correctly respond to or at least tag the question. For example, let P ( R i | T k ) be the probability of response given a topic. Then, for any given message m , the topic-specific response rate can be calculated as P ( R i | m ) = P k P ( R i , T k | m ) = P k P ( R i | T
Note that the iLink model can in general be used for routing any messages (e.g., news articles), so in practice the message stream need not necessarily always start with a question and terminate with an answer, as it does in the FAQtory system.
The current implementation of the FAQtory system is a stand-alone web application that functions as the supernode in the social network, facilitating the generation of a reposi-tory of question/answer threads. FAQtory users query the system and are presented with a list of question and answer pairs that are related to the query, a list of experts on the topics found in the query, and as a last resort, search re-sults from the web or other data sources. The query can be forwarded to the experts or to other nodes not listed, and the recipients of the forwarded query may choose to answer the question, indicate interest in future answers, or request clarification. The resulting answers are rated and reviewed by the asker and interested experts. All these interactions are routed through the server hosting the web application, which functions as the supernode and estimates different model parameters, e.g., the expertise E , response rates R , and referral rates F of the nodes involved, and the topic set T . Figure 3.3 shows the FAQtory screenshot of the re-sult of the query  X  X hat is iLink X   X  it shows top matching results from the FAQ, shows a list of recommended commu-nity members to whom the question can be routed, and a list of relevant webpages that match the query.

At the architecture level, the FAQtory system is im-plemented as a three-tiered client-server application. The client/front tier facilitates interactions between the nodes and the FAQtory server via APIs. This allows network nodes to access FAQtory through various channels, e.g., web browser, email clients, instant messenger. The mid-dle tier is the core of the system and it consists of several components, as shown in Figure 4.4. The router component dispatches messages to proper handlers: (1) queries to QA handler to fetch the relevant existing answers from either the KB repository (FAQ) or the third party source such as the web search engines; (2) queries to Peer handler to fetch the relevant experts from the network/user community; (3) the server responses to Messenger to send back to the nodes.
The handlers get their answers from the Knowledge Man-agers (KM) that interact with the back-end knowledge bases (e.g., database, text documents, emails), primarily through an indexing engine and a ranker. The KMs also interact with a (topic) Learner, which is responsible for creating and updating the topic models for the nodes. The interactions between the KMs and the indexing engine as well as the learner are based on the event-listener design pattern, which allows incremental and dynamic updates of the index and the topic models, thereby facilitating online learning.
The analysis and processing of the free text is handled by the NLP processor that performs stemming, synonym lookup, stop word removals, and other pre-processing ac-tions. The index engine is used to create inverted indices on both the existing answers and the node expertise, which allows fast retrievals by the KMs. The index of existing an-swers makes use of not only the keywords from the answers, but also the topics to which they belong and the answer ratings the node provided. While indexing user nodes and ranking them, FAQtory takes into account their expertise E as measured over content (e.g., profiles, answers), their re-ferral rank F (the popularity by referrals from other nodes), as well as the response score R (function of response history parameters, e.g., response rate, response accuracy) of the nodes.

We will now discuss the details of the learning framework that is implemented in FAQtory , to deploy the model de-scribed in Section 3. The learning framework in this case has to solve a set of interrelated learning problems, and we have an integrated approach for doing this. The main research requirements that drove choices in such a model are listed below, with the corresponding algorithmic techniques that are currently used to address these concerns in FAQtory . These issues are also relevant for other system deployments of the iLink model, since none of these issues are FAQ-specific. 1. Heterogeneous topics : As mentioned earlier, the iden-tifiers in the topic set T have to represent diverse objects like message words and meta-tags on messages. The chal-lenge, therefore, is to map the diverse types of objects into a common representation.

Solution : In the current system, every topic T j in the topic set T is a probability distribution over identifiers w , where each identifier in w could be a word in a message, a tag in a meta-content annotation, a descriptor for an ontology node, and so on. The topic distributions for the different data types (e.g., words, tags) can be maintained separately, if necessary. 2. Cold-start problem : In some domains profile informa-tion is already available for the nodes in the network (e.g., from org chart data, webpages). However, this may not be available in all domains. In that case, iLink should be able to infer profile distributions for nodes from multiple data sources, e.g., homepage, email, documents, org charts.
Solution : iLink can currently learn a multirelational topic model [4] for finding latent topic distributions from multi-ple sources, e.g., emails and other documents composed by a user, using a KMeans-style scalable iterative algorithm to perform relational clustering of data from multiple heteroge-neous sources. This step outputs (a) a set of local topics L where the j th local topic L ij is a distribution over a set of local keywords, and (b) a probability distribution P ( L ij over the local topic set L i for each user node N i . 3. Privacy issues : While doing profile inference, a criti-cal concern is privacy, since in most cases users will not be willing to share sensitive information, e.g., emails. In order to infer distributions of node topic preferences over a global topic set, local topic models have to be first run at each user node to get the distribution for each node over a local topic set L i  X  the challenge here is to infer a global topic set T from each of these individual local topic sets L i , and then modify the local node topic profiles to obtain the expertise measure E i over this global set of topics T .

Solution : The topic models on sensitive documents are learned locally at each node, so that there is no violation of privacy concerns. The outputs of the local topic mod-els are sent to the global supernode S , which treats the j local topic L ij from node N i as a point in a manifold over identifiers and performs information-theoretic probabilistic clustering (EM using KL divergence) [14] of these topics. This can be further improved by using constrained cluster-ing [5] for this task, where cannot-link constraints are added between topics of the same node to prevent topics of a par-ticular node from being clustered together due to uniqueness of a node X  X  vocabulary. Each cluster centroid is now consid-ered as a global topic T k (the number of global clusters t has to be input in the current formulation).
 To estimate E i , the probability distribution over topics P ( T k | N i ) is obtained as follows: P ( T k | N i ) = P posterior probability of local topic L ij being assigned to the centroid representing T k , while P ( L ij | N i ) is obtained from the local topic model of the node. The final output of the clustering is the set of global topics T and the probability distributions P ( T k | N i ) for each node N i , constituting their expertise measure E i . Note that other privacy-preservation techniques can be used here, too [25]. 4. Prior knowledge : The topics should be able to incorpo-rate partial supervision like domain-specific ontologies (e.g., org chart in an enterprise application, UMLS 4 in a medical application), user-specified tags (e.g., from manual profile edits), provided as prior knowledge to the system for topic inference.

Solution : A set of keywords/tags input as non-hierarchical semi-supervision is incorporated into the topic model by using an empirical prior over the relevant keywords. Cur-rently, the hierarchy structure in hierarchical supervision is not used in learning the topic models model  X  hierarchical priors like ontologies are represented by considering only the leaf nodes in the hierarchy as a set of keyword identifiers, which are then incorporated into the topic model. 5. Message matching : The supernode S should be able to find matching relevant messages for a new message by look-ing up the Q/A repository D to potentially get an answer to a question without any routing.

Solution : Any time a message stream m = { m 0 , m 1 , . . . , m passes through the supernode S , it finds the best p topics from T for the current message stream segment m , calcu-lated according to the probability score P ( m | T k ). It then augments the keywords in the message stream with the key-words (suitably weighted by their corresponding probabili-ties) in the top p scoring topic distributions. Next, S com-
Unified Medical Language System putes the cosine similarities between the current augmented message stream and the existing message streams in the his-tory database D . Finally, S returns the answer of the mes-sage stream from D that has the highest match score. 6. Scalability : Any learning algorithm used by S should be able to scale up to potentially a large number of network nodes and large size of the topic set T .

Solution : To address scalability concerns, pseudo-linear algorithms are used for topic inference and inverted indices are used for efficient implementation. iLink maintains two inverted indices: I 1 for mapping keywords w to topics T , and I for mapping topics T to nodes N . When a new message stream m comes into the system, I 1 takes m as input and outputs a vector of weighted topics relevant for m . I 2 next takes this vector of weighted topics as input and outputs a weighted vector of relevant nodes. Both of these inverted index lookups are very efficient. The output of I 2 is used to get a ranked list of nodes relevant to message m . 7. Incremental learning : iLink should be able to in-fer new topics and accordingly update the topic set T and the node profile parameters E, R, F online, as new messages flow through the system and as new nodes get added to the network.

Solution : Two kinds of incremental updates need to be made to the parameters E, R, F and T at the supernode S  X  (a) whenever a message stream terminates (for FAQtory , this corresponds to a correct answer a being found for a query q ), and (b) when a new node is added to the network.
In the first case, the following updates are performed: (i) Every topic T k in the global set of topics T can be up-dated incrementally as follows: T ( t +1) k = T ( t ) k + T k ), where m is the corresponding message stream [3]. This way, every topic is updated according to its probability of producing the message stream. (ii) The referral rank scores F of the nodes involved in rout-ing the message stream are updated using an algorithm sim-ilar to incremental Pagerank update [13]. (iii) The response rate and response accuracy in the response score R i are updated for each node N i that participated in the message stream that generated the correct response. Topic specific scores and updates are used in a practical setting. We can consider P ( R i | T k ) and P ( F i | T k appropriate updates. (iv) Finally, the probabilities P ( T k | N i ) in the expertise mea-sure E i have to be updated for every node N i participat-ing in the message stream. For every message m gener-ated by the node N i in the message stream, the posterior probability P ( T k | N i , m ) on observing m is calculated us-ing Bayes Rule: P ( T k | N i , m )  X  P ( m | T k , N i ) .P ( T P ( m | T k ) .P ( T k | N i ). After renormalization, these posterior probabilities P ( T k | N i , m ) constitute the updated expertise measure E i .

In the second case, when a new node gets added, iLink runs the topic model on the new node X  X  documents to get local topics. The supernode can then assimilate these local topics into the global topic set T by either rerunning the clustering or assigning the new topics to the closest existing cluster centroids. In the second case, the E, R, F parameters of the other nodes are left unchanged  X  the E for the new node is assigned to the calculated value, while its R and F parameters are set to default values.

Note that in both cases, the number of topics remains the same and only the internal keyword distribution in each topic is updated. In each case, the inverted indices are suit-ably updated to reflect these changes.
Interesting connections exist between the social query as-pect of iLink and the Social Query Model (SQM), a recently proposed model for social query routing [2]. SQM is a model for decentralized search, taking into account social interac-tions that include actions like generating, gathering, shar-ing, and distributing messages by different network nodes. SQM provides a generalized social rank metric that includes the Pagerank [11] model and Markov Decision Processes [7] as special cases. SQM explicitly models realistic parameters like response rate, expertise, correctness and routing policies of nodes in a network, and proves the existence of a query routing policy that is simultaneously optimal for all nodes. SQM models query routing in a social network as a multi-party game, where the payoff of the query routing policy is the probability of each node getting an answer to a query. Given the network parameters, there is a near-optimal effi-cient algorithm in the SQM model for calculating this policy, which is linear in the number of network links.

SQM provides a formulation for decentralized search. But it can be adapted for use in the iLink formulation, with a centralized supernode. The supernode can observe message routing between the nodes and learn maximum likelihood estimates of model parameters (e.g., response rates, exper-tise) from routing traces. Using these parameters, it can in-fer the value of getting an answer through different nodes by calculating the payoff of the SQM model, and decide which node to route a message to on getting a query by using the near-optimal SQM policy estimation algorithm.
We next outline some case studies where iLink and its underlying learning technology have been (or could be) de-ployed in real applications. The FAQtory system of iLink was developed as part of CALO, an adaptive cognitive system funded under DARPA X  X  PAL (Perceptive Assistant that Learns) program. The goal of this program is to develop an integrated learning system that adapts and builds new capabilities in support of indi-vidual workflow. Social networks are essential to informa-tion workers, often significantly more important than online electronic information sources. iLink is designed to help facilitate the user X  X  access to this resource as well as im-prove the functioning of the resource itself. Funding in the program is contingent on passing a yearly test of the in-tegrated CALO system. The test involves live use of the system in real working environments. Fifteen users used the CALO system over a several-week period, exercising all its capabilities including iLink . As discussed in Section 4, the FAQtory feature of iLink was deployed as a web applica-tion and it supported routing of user questions. At the end of the test period, the users built up a FAQ repository. In building this FAQ, FAQtory also built up node profiles, a feature that could also be used for other iLink applications such as smart RSS filtering and group formation.

The general goals of testing iLink included demonstrat-ing: (1) real-time learning by matching queries and commu-nity users, (2) adaptability to user demands and direction, (3) accuracy in message targeting and routing, (4) dynamic user profile correction based on community behaviors and identification of community  X  X xperts X  on a given topic at a given point in time, (5) improvement in the overall qual-ity of resulting query-answer pairs, (6) dynamic topic re-finement and meta-content generation, and (7) acceptable performance under load.

The goal of the CALO test was to evaluate the system as a whole and so there was no explicit test of the iLink system in isolation. However, the system X  X  performance on areas that involved iLink was extremely strong, e.g., query routing. While the results were somewhat anecdotal, it was clear that the iLink system was simple to use (the user interaction model follows search and email models) and that the FAQ that was produced appeared to avoid some of the issues characteristic of other types of open contribution question answering mechanisms, e.g., bulletin boards. This seemed to be a result of the fact that iLink returns QA pairs that are embedded in a generating thread. The thread provides rich context for the question-answer pairs that helps enhance user recognition of extant answers. That is, the value of the extant answers is enhanced for users asking questions close to ones already handled through the system. We plan to test this hypothesis in detail in the military applications that will be described next.
The first pilot deployment target for iLink is integration of the FAQtory concept into an existing online community named PlatoonLeader, 5 a professional forum for past, cur-rent, and future U.S. Army platoon leaders. PlatoonLeader is organized around several topics (e.g. Leadership, Fitness) that are led by topic leaders who facilitate discussions, de-velop relevant content, and encourage member participation. Upon joining, members create a profile, described as a  X  X og tag X , participate in threaded discussions, and upload and comment on files, referred to as  X  X nowledge objects X . The initial topic profile for each user will be determined from the dog tag of the user and augmented by indexing the knowl-edge objects and discussion posts contributed or commented on by that user. Within a discussion thread, the initial post will be considered analogous to the FAQtory query and subsequent posts as answers to or clarification of the ques-tion. Other events or data logged by the system or otherwise accessible may also be used to inform iLink topic profiles.
PlatoonLeader will be provided with two features that leverage iLink technology:  X  X uggested Discussions X  and the  X  X oderator X  X  Assistant X . Immediately upon logging in, ev-ery user will see  X  X uggested Discussions X , that is, the most recent discussion threads considered relevant based on his or her topic profile (see Figure 7.5). The user can provide direct feedback to iLink by indicating whether the thread was a good match, or indirectly by viewing or posting to the thread. The second feature,  X  X oderator X  X  Assistant X , will be available only to topic leaders, who currently spend a lot of time reading all the discussions in their topic areas http://platoonleader.army.mil and manually emailing requests to knowledgeable members who are not yet participating to join the discussion. When reviewing a discussion thread, the topic leader will be pre-sented with members that iLink has identified as experts on the thread topic. The topic leader will have the option to send an automated request to contribute to the thread to the experts suggested, or to members not identified as experts. This is analogous to the forwarding feature im-plemented in the FAQtory and would similarly train the iLink supernode.
In the FAQtory application, it is assumed that message streams are initiated as questions. But aside from the an-swer that triggers a validation step, there is nothing in the model that requires threads to be initiated with a question. General messages can be sent to the iLink supernode with the implicit question of who should see this. Given such a system, for example, an FBI agent who discovered some suspicious people were taking flight lessons would have been able to simply narrowcast this discovery to a relevant set of people (selected automatically by the iLink supernode) with the attached implicit question:  X  X ho ought to see this mes-sage? X . Here are some messaging applications where iLink could be useful: 1. Smart RSS Filter : Social networks are constantly faced with the problem of routing discovered information to the right consumers. The iLink model is extremely well posi-tioned to address this fundamental problem. We are cur-rently designing a smart RSS application that takes advan-tage of the profiling and routing capabilities of the system in a style similar to the FAQtory . The goal of this system is to provide a filter for each user that can filter the RSS feeds a user subscribes to and suggest messages (e.g., announce-ments, news articles) that the user might be interested in, based on individual preferences of the user as well as aggre-gate preferences of the user X  X  social community. The goal here is to create a social RSS system that taps the abilities of the network to direct messages  X  the iLink supernode watches a user X  X  routing behavior to refine the user profiles that are used to tune the filters, as well as suggest messages that the user X  X   X  X riends X  in the network are interested in. 2. Message Routing for Advertising : An important ad-ditional application of iLink includes improving click-through rates for web-based advertising. Currently, the most sophis-ticated ad targeting strategies focus on keyword matching of text for a given web page. iLink can add an important contextual component to such a strategy by paying atten-tion to (1) a user X  X  set of interests at a given point in time; (2) that user X  X  set of friends who share certain features in common at a given point in time, as inferred from the user X  X  social interactions. Site owners, for instance, can use this information in addition to current keyword-only-based tools to identify better-matched ads to target the users in their social network, improving cost efficiencies of ad placement and conversion rates.
Research in social networks covers various areas, some of which are (i) analysis of general network properties, e.g., degree distribution of nodes in the network, shortest path between nodes in small-world graphs [33]; (ii) generative models, e.g., random graph models, preferential attachment models, and their resulting statistical properties [26]; (iii) dynamical models, e.g., economic transactions, disease trans-missions, spread of innovations [35]; (iv) models of temporal evolution of graph properties [22]; and (v) long-term network properties, e.g., price equilibrium, pandemic thresholds [17]. In addition, there has been a lot of research in studying networks of information resources, in particular looking at search and navigation in networks [19, 34, 1]. Other re-search problems in this area include studying and predicting how clusters and referral chains of people with related in-terests form in social networks [18], the role of geographical proximity in social networks in facilitating friendship [23], modeling trust and reputation in networks [16], link anal-ysis to find relative importance of network nodes [11], and learning models for topic, role, and group patterns in social networks [24].

In related work, there has been recent research on model-ing the stochastic co-evolution of structure and strategy in networks using a reinforcement learning model in a repeated game setting [27]. Techniques from optimal control and de-cision theory have been used to empirically study dynam-ics of learning time-varying network parameters [6]. There have been studies of the characteristics of social dynamics behind peer production systems like collaborative content generation (e.g., Wikipedia) and open source software de-sign (e.g., Linux), to understand the circumstances under which such collaborative social endeavors become success-ful [12, 8]. Query routing [31] and search [32] have also been studied in peer-to-peer networks.

The novelty of our approach is applying online learning techniques for social search in a dynamic message routing system, with rich node and link models and a centralized supernode. The learning framework can find different in-teresting emerging network properties, e.g., find sub-groups of networked individuals who are most effective at content generation, suggest links between people who have related interests profiles, detect and track emerging communities of interest, and so on. We also propose a way not only to ana-lyze peer production behavior but to facilitate formation of new connections between nodes in a dynamic network, using suitable online machine learning and data mining tools.
On the application side, there are have been some systems for Q/A production within a social network, most notably Yahoo! Answers. Typically these systems use a bulletin board or forum paradigm and do not have an integrated routing mechanism. The basic idea in iLink is that for such systems to work at scale, there should be some notion of intelligent routing. For this routing to work effectively, it must be based on a learning mechanism that works over the routing behavior exhibited by the social network. By developing a general adaptive router, the iLink framework supports a variety of message types and applications.
Each of the algorithmic solutions provided for the issues listed in Section 5 can be possibly improved by better ap-proaches. Apart from those improvements, the model for-mulation for iLink opens up several other interesting ar-eas of future research related to content search and message routing in social networks: 1. Hierarchical topics : The topic model implementation should be generalized to handle hierarchies, or better still an arbitrary DAG structure over the topics. In that case, hierarchical prior knowledge, e.g., ontologies, organization charts, can be directly incorporated as hierarchical priors into the topic model. 2. Online and temporal topic inference : In some real cases, the total number of relevant topics in the topic set may not be known a priori, because of data sparsity and lack of domain knowledge. In such situations, it is not suf-ficient to only update the existing topic distributions with new messages or new users, as done currently in Section 5  X  it would be preferable to have a model selection algorithm that can decide when not to update the existing topics but rather add a new topic. We want to design and implement a model selection technique that would incrementally take into account how topics change over time, combining tem-poral topic learning algorithms with model selection in the online learning setting. 3. Distributed validation : In the FAQtory system, the node asking the question may not know the correctness of a suggested answer, or multiple answers may need to be com-pared in terms of quality. In such situations, a distributed voting scheme is used for rating the questions, where the nodes who participated in the message routing can each vote on the validity of an answer. The interesting research problem here is to get a consensus on the best answer from distributed votes while factoring in the intrinsic reliability of the vote cast by a node, and suitably updating the vot-ing reliability score for a node after the consensus has been reached. 4. Noise robustness : Any algorithm operating online within a large-scale practical social network learning system like iLink needs a mechanism for being robust to possible sources of noise. In the future, we want to implement spam filtering techniques, especially for controlling content spam in messages and link spam in message routing. 5. Rank function learning : The overall rank score (Sec-tion 3) is a weighted linear combination of the different pro-file components. Currently, the weights on each parameter are considered as inputs to the ranking algorithm. However, the weights of such a score function can be learned in an online fashion from voting feedback, using a multiplicative update algorithm to combine scores from multiple experts. 6. Incentive model : In the present instantiation of iLink , we have employed a reputation economy model based on ad-hoc expert group members rating messages that are submit-ted for review. In the future, we intend to incorporate more detailed incentive models, similar to recent work in peer-to-peer incentive models [10, 20]. An interesting research problem is to design incentive models and an economy of social capital where there are heterogeneous distributed hu-man nodes as well as a global system supernode. 7. Dynamic social network modeling : One promis-ing area of related research deals with learning and exploit-ing key characteristics as social networks change in time. Our proposed online learning framework can be extended to sense and act upon emerging signals, for instance cor-recting rank weights and message routing paths for partic-ular circumstances. Finding scalable methods for detecting emerging network changes, such as clusterability, cohesion, centrality, prestige, or triadic structural shifts, could yield rich inputs to the larger iLink system.

We also want to investigate connections of the iLink model to threaded communication models (e.g., message boards), with the goal of better understanding the nature of threaded interactions. Another top priority is real-world deployment of FAQtory and analysis of user behavior to study different model properties (e.g., sensitivity of overall system to qual-ity of individual topic models), thereby being able to tune crucial system parameters to improve performance.
The web has made large peer production frameworks pos-sible, which are unprecedented in terms of both scale and intensity. If this model is going to be successfully extended to a wider range of activities and goals, we believe that it will be essential to understand how the underlying social networks operate. To accomplish this, we have first intro-duced a model of social networks that incorporates impor-tant node and link information. We have then proposed a specific model iLink of peer production by message pass-ing, and discussed the social generation of a FAQ repository using a system FAQtory that instantiates this model. By introducing a supernode that learns how the social network solves the message routing problem, we are able to learn patterns of social interaction in this message routing model. FAQtory supports both the generation of QA pairs and the follow-up validation/modification (analogous to Wikipedia edit) capabilities. This basic approach has a number of ex-tensions to other applications and peer production models, including smart RSS and general social search. We believe that our approach, which focuses on the underlying mes-sage passing dynamics, is a promising avenue for the im-portant task of extending the peer production paradigm. Clearly, many practical and theoretical issues remain. The importance of making such models work for real, ongoing web-based collaboration efforts (e.g., the military knowledge sharing portals) is a growing issue and a wonderful challenge for machine learning and data mining techniques.

