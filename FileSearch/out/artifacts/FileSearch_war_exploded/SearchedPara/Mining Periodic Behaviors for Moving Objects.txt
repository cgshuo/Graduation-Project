 Periodicity is a frequently happening phenomenon for mov-ing objects. Finding periodic behaviors is essential to un-derstanding object movements. However, periodic behav-iors could be complicated, involving multiple interleaving periods, partial time span, and spatiotemporal noises and outliers.

In this paper, we address the problem of mining periodic behaviors for moving objects. It involves two sub-problems: how to detect the periods in complex movement , and how to mine periodic movement behaviors . Our main assumption is that the observed movement is generated from multiple interleaved periodic behaviors associated with certain refer-ence locations . Based on this assumption, we propose a two-stage algorithm, Periodica , to solve the problem. At the first stage, the notion of reference spot is proposed to capture the reference locations. Through reference spots, multiple peri-ods in the movement can be retrieved using a method that combines Fourier transform and autocorrelation. At the sec-ond stage, a probabilistic model is proposed to characterize the periodic behaviors. For a specific period, periodic be-haviors are statistically generalized from partial movement sequences through hierarchical clustering. Empirical stud-ies on both synthetic and real data sets demonstrate the effectiveness of our method.
 H.2.8 [ Data Management ]: Database Aplications -Data Mining; H.4.0 [ Information Systems ]: General Algorithms Moving objects, periodic behavior, reference spot, Fourier Transform, autocorrelation, hierarchical clustering
First, the periods ( i.e. , the regular time intervals in a pe-riodic behavior) are usually unknown. Even though there are many period detection techniques that are proposed in signal processing area, such as Fourier transform and auto-correlation, these methods cannot be directly applied to the spatiotemporal data. Because the moving object will not re-peat the movement by appearing at exactly the same point (in terms of ( x, y )) on exactly the same time instance of a period. Besides, there could be multiple periods existing at the same time, such as David has one period as  X  X ay X  and another as  X  X eek X . If we consider the movement sequence as a whole, the longer period ( i.e. , week) will have fewer repeat-ing times than the shorter period ( i.e. , day). So it is hard to select a threshold to find all periods. Surprisingly, there is no previous work that can handle the issue about how to detect multiple periods from the noisy moving object data. To the best of our knowledge, there is only one work [1] that addresses the detection of periods for moving objects. It di-rectly applies the Fourier transform on moving object data by transforming a location onto a complex plane. However, as the toy example we will show in Section 3, this method does not work in the presence of spatial noise.

Second, even if the periods are known, the periodic be-haviors still need to be mined from the data because there could be several periodic behaviors with the same period. As we can see that, in David X  X  movement, the same period ( i.e. , day) is associated with two different periodic behav-iors , one from September to May and the other from June to August. In previous work, Mamoulis et al. [12] studied the frequent periodic pattern mining problem for a moving object with a given period. However, the rigid definition of frequent periodic pattern does not encode the statistical information . It cannot describe the case such as  X  X avid has 0.8 probability to be in the office at 9:00 everyday. X  One may argue that these frequent periodic patterns can be further summarized using probabilistic modeling approach [18, 14]. But such models built on frequent periodic patterns do not truly reflect the real underlying periodic behaviors from the original movement, because frequent patterns are already a lossy summarization over the original data. Furthermore, if we can directly mine periodic behaviors on the original movement using polynomial time complexity, it is unneces-sary to mine frequent periodic patterns and then summarize over these patterns.

In this paper, we formulate the periodic behavior min-ing problem and propose the assumption that the observed movement is generated from several periodic behaviors asso-ciated with some reference locations . We design a two-stage algorithm, Periodica , to detect the periods and further find the periodic behaviors.

At the first stage, we focus on detecting all the periods in the movement. Given the raw data as shown in Figure 1, we use the kernel method to discover those reference loca-tions, namely reference spots . For each reference spot, the movement data is transformed from a spatial sequence to a binary sequence, which facilitates the detection of periods by filtering the spatial noise. Besides, based on our assumption, every period will be associated with at least one reference spot. All periods in the movement can be detected if we try to detect the periods in every reference spot. At the second stage, we statistically model the periodic behavior using a generative model . Based on this model, underlying periodic behaviors are generalized from the movement using
DEFINITION 1 (Periodic Behavior Mining). Given a length-n movement sequence LOC , our goal is to mine all the periodic behaviors {h T, P i} .

Since there are two subtasks in the periodic behavior min-ing problem, detecting the periods and mining the peri-odic behaviors. We propose a two-stage algorithm Periodica , where the overall procedure of the algorithm is developed in two stages and each stage targets one subtask.
 Algorithm 1 Periodica INPUT: A movement sequence LOC = loc 1 loc 2 loc n . OUTPUT: A set of periodic behaviors.
 ALGORITHM: 1: /* Stage 1: Detect periods (Section 3)*/ 2: Find reference spots O = { o 1 , o 2 , , o d } ; 3: for each o i  X  O do 4: Detect periods in o i and store the periods in P i ; 6: /* Stage 2: Mine periodic behaviors (Section 4) */ 7: for each T  X  P set do 8: O T = { o i | T  X  P i } ; 9: Construct the symbolized sequence S using O T ; 10: Mine periodic behaviors in S .

Algorithm 1 shows the general framework of Periodica . At the first stage, we first find all the reference spots (Line 2) and for each reference spot, the periods are detected (Line 3  X  5). Then for every period T , we consider the reference spots with period T and further mine the corresponding pe-riodic behaviors (Line 7  X  10).
In this section, we will discuss how to detect periods in the movement data. This includes two subproblems, namely, finding reference spots and detecting periods on binary se-quence generated by these spots. First of all, we want to show why the idea of reference spots is essential for period detection. Consider the following example.

We generate a movement dataset simulating an animal X  X  daily activities. Every day, this animal has 8 hours staying at the den and the rest time going to some random places hunting for food. Figure 2(a) shows its trajectories. We first try the method introduced in [1]. The method transforms lo-cations ( x, y ) onto complex plane and use Fourier transform to detect the periods. However, as shown in Figure 2(b) and Figure 2(c), there is no strong signal corresponding to the correct period because such method is sensitive to the spa-tial noise. If the object does not follow more or less the same hunting route every day, the period can hardly be detected. However, in real cases, few objects repeat the exactly same route in the periodic movement.

Our key observation is that, if we view the data from the den, the period is easier to be detected. In Figure 2(d), we transform the movement into a binary sequence, where 1 lar kernel method [16], which is designed for the purpose of finding home ranges of animals. If an animal has frequent activities at one place, this place will have higher probabil-ity to be its home. This actually aligns very well with our definition of reference spots.

For each grid cell c , the density is estimated using the bivariate normal density kernel, where | c  X  loc i | is the distance between cell c and location loc i . In addition,  X  is a smoothing parameter which is de-termined by the following heuristic method [16], where  X  x and  X  y are the standard deviations of the whole sequence LOC in its x and y -coordinates, respectively. The time complexity for this method is O ( w h n ).

After obtaining the density values, an reference spot can be defined by a contour line on the map, which joins the cells of the equal density value, with some density threshold. The threshold can be determined as the top-p % density value among all the density values of all cells. The larger the value p is, the bigger the size of reference spot is. In practice, p can be chosen based on prior knowledge about the size of the reference spots. In many real applications, we can assume that the reference spots are usually very small on a large map (e.g. within 10% of whole area). So, by setting p % = 15%, most parts of reference spots should be detected with high probability. Even though it could introduce a small amount of additional noise at the same time, our period detection is robust in terms of noise as shown in experiment, specifically in Figure 10.

EXAMPLE 1 (Running Example). We will use a run-ning example throughout the paper to illustrate our methods. Assume that a bird stays in a nest for half a year and moves to another nest staying for another half year. At each nest, it has a daily periodic behavior of going out for food during the daytime and coming back to the nest at night.
As shown in Figure 3, the two small areas (spot #2 and spot #3) are the two nests and the bigger region is the food resource (spot #1). Figure 3(a) shows the density calculated using the kernel method. The grid size is 100  X  100 . The darker the color is, the higher the density is. Figure 3(b) is the reference spots identified by contour using top-15% density value threshold.
Given a set of reference spots, we further propose a method to obtain the potential periods within each spot separately . Viewed from a single reference spot, the movement sequence now can be transformed into a binary sequence B = b 1 b 2 . . . b n , where b i = 1 when this object is within the reference spot at timestamp i and 0 otherwise. In discrete signal processing area, to detect periods in a sequence, the most popular meth-ods are Fourier transform and autocorrelation, which essen-tially complement each other in the following sense, as dis-cussed in [13]. On one hand, Fourier transform often suffers from the low resolution problem in the low frequency region, hence provides poor estimation of large periods. Also, the well-known spectral leakage problem of Fourier transform this, we use circular autocorrelation, which examines how similar a sequence is to its previous values for different  X 
Thus, for each period range [ l, r ) given by the periodogram, 1) } by fitting the data with a quadratic function. If the resulting function is concave in the period range, which indi-cates the existence of a peak, we return t  X  = arg max l  X  t&lt;r R ( t ) as a detected period. Similarly, we employ a 99% confidence level to eliminate false positives caused by noise.
EXAMPLE 2 (Running Example (cont.)). The pe-riodogram of reference spot #2 is shown in Figure 4(a). The red dashed line denotes the threshold of 99% confidence. There are two points P 1 and P 2 that are above the threshold. In Figure 4(b), P 1 and P 2 are mapped to a range of periods. We can see that there is only one peak, P 1 , corresponding to T = 24 on the autocorrelation curve. This suggests the existence of a period of 1 day in the movement data.
Discrete Fourier Transform can be executed in O ( n log n ) time using Fast Fourier Transform algorithm (FFT). And since autocorrelation is a formal convolution which can also be solved by FFT, its complexity is also O ( n log n ). So, the overall time complexity of detecting periods in sequence B is O ( n log n ).
After obtaining the periods for each reference spot, now we study the task how to mine periodic behaviors. We will consider the reference spots with the same period together in order to obtain more concise and informative periodic be-haviors. But, since a behavior may only exist in a partial movement, there could be several periodic behaviors with the same period. For example, there are two daily behav-iors in David X  X  movement. One corresponds to the school days and the other one occurs during the summer. However, given a long history of movement and a period as a  X  X ay X , we actually do not know how many periodic behaviors exist in this movement and which days belong to which periodic where 1 A is the indicator function associated with the event A . That is, p ( x k = i ) is the relative frequency of reference spot o i at t k over all segments in I .
 Now, we formally define the concept of periodic behavior.
DEFINITION 3 (Periodic Behavior). Let I be a set of segments. A periodic behavior over all the segments in I , denoted as H ( I ) , is a pair h T, P i . T is the period and P is a probability distribution matrix learned through Eq.(2). W e further let |I| denote the number of segments covered by this periodic behavior.
With the definition of periodic behaviors, we are able to estimate periodic behaviors over a set of segments. Now given a set of segments { I 1 , I 2 , . . . , I m } , we need to discover which segments are generated by the same periodic behavior. Suppose there are K underlying periodic behaviors, each of which exists in a partial movement, the segments should be partitioned into K groups so that each group represents one periodic behavior.

A potential solution to this problem is to apply some clus-tering methods. In order to do this, a distance measure between two periodic behaviors needs to be defined. Since a behavior is represented as a pair h T, P i and T is fixed, the distance should be determined by their probability dis-tribution matrices. Further, a small distance between two periodic behaviors should indicate that the segments con-tained in each behavior are likely to be generated from the same periodic behavior.

Several measures between the two probability distribu-tion matrices P and Q can be used to fulfill these require-ments. Here, since we assume the independence of variables across different timestamps, we propose to use the well-known Kullback-Leibler divergence as our distance measure: When KL ( P k Q ) is small, it means that the two distribution matrices P and Q are similar, and vice versa.

Note that KL ( P k Q ) becomes infinite when p ( x k = i ) or q ( x k = i ) has zero probability. To avoid this situation, we add to p ( x k = i ) (and q ( x k = i )) a background variable u which is uniformly distributed among all reference spots, where  X  is a small smoothing parameter 0 &lt;  X  &lt; 1.
To further understand from a statistical point of view why this is a good choice of distance measure for our problem, let us return to our generative model. Recall that I is the set of segments generated by P , then KL ( P k Q ) can be de-collection of segments. At each iteration, two clusters with the minimum distance are merged (Line 4  X  8). When two clusters are merged, the new cluster inherits the segments that owned by the original clusters C s and C t . It has a newly built behavior H ( C ) = h T, P i over the merged segments, where P is computed by the following updating rule: Finally, K periodic behaviors are returned (Line 9).
It takes O ( T d ) to compute the distance between two behaviors, where d is the number of reference spots. The number of iterations is O ( m ). At each iteration, it takes O ( m log m ) to find the minimum pair and O ( m T d ) to compute the distances between the newly merged cluster with other clusters. In summary, the complexity of the clustering algorithm is O ( m ( m T d + m log m )) = O ( m 2 T d + m 2 log m ).
EXAMPLE 3 (Running Example (cont.)). There are two periodic behaviors with period T = 24 (hours) in the bird X  X  movement. Figure 5 shows the probability distributio n matrix for each discovered periodic behavior. A close look a t Figure 5(a) shows that at time 0:00  X  8:00 and 22:00  X  24:00, the bird has a high probability being at reference spot #2, which is a nest shown in Figure 3(b). At time 12:00  X  18:00, it is very likely to be at reference spot #1, which is the food resources shown in Figure 3(b). And at the time 9:00  X  11:00, there are also some probability that the bird is at reference spot #1 or reference spot #2. This indicates the bird goes out of the nest around 8:00 and arrives at the food resources place around 12:00. Such periodic behaviors well represent the bird X  X  movement and truly reveal the mechanism we em-ployed to generate this synthetic data.
In the clustering algorithm, K represents the number of periodic behaviors in the movement sequence. Since it is experiments are performed on a 2 . 8 GHz Intel Core 2 Duo system with 4GB memory. The system ran MAC OS X with version 10 . 5 . 5 and gcc 4 . 0 . 1.

In order to test the effectiveness under various scenarios, we design a generator for moving objects with periodicity according to a set of parameter values. These parameters are the length n of the time history (in timestamps), period T , the probability  X  for a periodic segment in the object X  X  movement to comply with regular movement, the probability  X  for the noise for each timestamp in a regular periodic segment, and the variance  X  of normal distribution to add temporal perturbations to the periodic segment.

Before generating the movement, we first create several reference spots. Each reference spot is a small circle with radius ranges from 1% to 5% of the map size. A standard segment seg std with length T is the movement following the regular periodic pattern. For example, for T = 24 (hours), seg std could be designed as 6:00pm  X  8:00am at reference spot A (such as home) and 8:30am  X  5:30pm hours at ref-erence spot B (such as office). Then, the movement of the object is generated. For every segment seg , we first deter-mine whether s should be a regular segment or not, given the probability  X  .

If seg is a regular segment, the object X  X  movement is gen-erated as follows. According to standard segment, suppose that from timestamp t 0 to t 1 the object is at reference spot A , we further perturb t 0 and t 1 with some normal distri-experiments, we fix  X  = 0 . 5. Finally, with probability 1  X   X  , the object is at a random location within the circle of ref-erence spot A from t  X  0 to t  X  1 . For other timestamps that are not confined to any reference spot, a random location is gen-erated. If seg is an irregular segment, for each timestamp, a random location is assigned.
We first conduct some case studies on both synthetic and real data sets.
Since the running example has already illustrated periodic behaviors in partial movement, here we test our algorithm on a case with multiple periods. Suppose that there are 4 reference spots. Imagine them as  X  X ome X ,  X  X ffice X ,  X  X ym X , and  X  X lass X . A standard movement segment is generated as 20:00  X  8:00 at home every day; 9:00  X  14:00 at office on weekdays; 15:00  X  17:00 at gym on Tuesdays and Thursdays; 15:00  X  17:00 at class on Mondays, Wednesdays and Fridays. Furthermore, we choose n = 8400,  X  = 0 . 9 and  X  = 0 . 1. The periods detected for each reference spot are shown in Table 2. There are two periods detected: 24 ( i.e. , day) and 168 ( i.e. , week). It is interesting to see that office has both 24 and 168 as the periods. This is because office is visited  X  X lmost X  every day except weekends. So both day and week are reasonable periods.
 There is one daily behavior and one weekly behavior. Their probability matrices are illustrated in Figure 7. In Fig-ure 7(a), we can infer that this person leaves home around gether because they all show yearly period. However, we may discover that the periods are not exactly the same for all the reference spots. This is a very practical issue. In real cases, we can hardly get perfectly the same period for some reference spots. So, we should relax our constraint and con-sider the reference spots with similar periods together. If the difference of periods is within some tolerance threshold, we take the average of these periods and set it as the com-mon period. Here, we take period T as 363 days, and the probability matrix is summarized in Figure 9. Using such probability matrix, we can well explain the yearly migration behavior as follows.  X  X his bald eagle stays in New York area ( i.e. , reference spot # 1) from December to March. In March, it flies to Great Lakes area ( i.e. , reference spot #2) and stays there until the end of May. It flies to Quebec area ( i.e. , reference spot #3) in the summer and stays there until late September. Then it flies back to Great Lake again staying there from mid October to mid November and goes back to New York in December. X 
This real example shows the periodic behaviors mined from the movement provides an insightful explanation for the movement data.
We further verify the effectiveness of our algorithms with respect to the two parameters we introduced at the begin-ning of this section,  X  and  X  , on synthetic datasets. Recall that  X  represents the proportion of regular segments in the whole sequence and  X  indicates the level of random noise. Again we use our Running Example to generate the synthetic data. This time, we vary  X  from 1 to 0.6, and simultane-ously, we choose  X  from 0 to 0.5. We test the effectiveness of the period detection algorithm and the summarization al-gorithm separately. All experiments are repeated 100 times and the results are averaged.

For the period detection algorithm, we report the suc-cess rates in Figure 10(a). Since we know the ground truth ( T = 24), we judge a trial is successful if among all detected periods, the one with the large correlation value is within the range [23 , 25]. The result suggests that our period de-tection algorithm is nearly perfect in all cases with  X   X  0 . 8. It is also noticeable that, compared to irregular segments, our algorithm is more robust to random noise, which may be caused by the failure of tracking devices or transmission networks during the data acquisition process. Furthermore, since irregular segments often reflects the changes of behav-iors in the movement, the sensitivity to the irregular seg-ments is also desirable for our algorithm which is designed for mining periodic behaviors.

For the summarization algorithm, we show in Figure 10(b) the representation error for K = 10 as defined in Section 4.3. periodic patterns cannot capture the statistical information as the periodic behaviors. Similar to our definition of pe-riodic behavior, Indyk et al. [9] studies the problem of of discovering the most representative trend that repeats itself every T timestamps. However, they can only discover one trend for a given period T and such trend covers the whole time span.

There are also works addressing the automatic period de-tection problem [9, 19, 11, 2, 3, 5, 6]. [11] and [19] have developed a similar linear distance-based algorithm for dis-covering the potential periods regarding the symbols of the time series. But this method misses some valid periods since it only considers the adjacent inter-arrivals. In [3], a data structure, the abbreviated list table (ALT) is proposed to compute the periods and the pattern. But such period is based on the threshold of min sup which is not appropriate in our problem. Indyk et al. [9] develops an O ( n log 2 n ) time complexity algorithm using sketch approaches to find repre-sentative trend where n is the length of sequence. But only one period is detected in the whole sequence. Berberidis et al. [2] detects the period candidates for each symbol using autocorrelation. Improved from [2], Elfeky et al. [5] proposes a more efficient convolution method which considers multi-ple symbols together while detecting the period. However, as addressed in Section 3.2, both autocorrelation and con-volution will detect a large set of period candidates, most of which are redundant. In [6], a method based on time warp-ing is proposed, which is robust in the presence of shifting noise but is less efficient with time complexity O ( n 3 ). The only work that discusses the period detection for moving object is [1]. However, as we illustrated in Section 3.2, this method is easily affected by the spatial noise.
In this paper, we address an important and difficult prob-lem: periodic behavior mining for moving objects. We pro-pose a two-stage algorithm, Periodica . In the first stage, periods are detected through reference spots using Fourier transform and autocorrelation. In the second stage, peri-odic behaviors are statistically summarized using hierarchi-cal clustering method. Empirically studies show that our method can deal with both noisy and complicated cases. A case study on a real data demonstrates the effectiveness of our method in practice.

While our approach fixes some reference spots using spa-tial information only, it is interesting to dynamically detect reference spots integrating with temporal information. This could give a more precise estimation on the reference loca-tions. Another important issue is to find periodic behaviors in the data with the very sparse and inconstant sampling rate. We consider these as promising future works. The work was supported in part by the Boeing company, NSF BDI-07-Movebank, NSF CCF-0905014 (Cyber-Physical Systems), U.S. Air Force Office of Scientific Research MURI award FA9550-08-1-0265, and by the U.S. Army Research Laboratory under Cooperative Agreement NumberW911NF-09-2-0053 (NS-CTA). The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either ex-pressed or implied, of the Army Research Laboratory or the
