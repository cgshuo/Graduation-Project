 With the development of Internet, sea rch engine, such as Google, has become the most important tool to get information on the World Wide Web. Although it is not a perfect method to find what users want, most search engines calculate the relevance using keywords in documents and queries. As the only interface for users to access tremendous web pages, queries are one of the most important factors that affect the perfo rmance of search engines.

However, web pages returned from search engines are not always relevant to search intentions of users. An independent survey of 40,000 web users found that after a failed search, 76% of them will try to rephrase their queries on the same search engine instead of resorting to a d ifferent one [1]. Therefore, it is a non-trivial task for search engines to find better query representation of user search intentions in order to enhance search performance.

Search behavior of most users, including query submissions and URL selec-tions, are meaningful. Ther efore, queries convey implicit knowledge, concepts or meanings, which could be regarded as tags assigned to selected URLs by users [2]. Query logs, recording the history of click through behaviors by users from queries to selected URLs, may thereb y contain tremendous user collabora-tive tagging information as a result of the wisdom of all users, and have attracted much work trying to extract useful information so as to improve search engine performance. Various tasks, such as query clustering [1,3], classification [4,5], recommendation [6], expansion [7] and reformulation [8], have been proposed to address the challenges from different pe rspectives. The common basis of these tasks is to quantify semantic relations of queries.

In a narrow sense, semantic relations are relations between concepts or meanings. Queries, regarded as the t ags assigned by users to selected URLs, contain rich semantic relations, which imply a taxonomy of the language that people use to search for information [2] . Hence, it is essential to extract use-ful relations from query logs in order to improve search engine performance in various tasks mentioned above.

Most previous researches extracted semantic relations by defining a similarity function between queries based on substr ing matching of queries or intersection of selected URL sets. The m ain drawback of these methods is that the extracted relations are symmetric, which indicates the similarity function gives two queries the same relevance strength against each other. However in most instances two related queries should be assigned different relevance strength. For example, the relevance strength for query  X  X pod X (a product of Apple Inc.) with  X  X pple X  may be stronger than that for  X  X pple X  with  X  X pod X : with query  X  X pod X , users likely want to get the information of the websites on the mp3 product ipod, therefore it is related with it manufacturer  X  X pple X  strongly. While with query  X  X pple X , users may have more complicated and extensive intentions, could be a fruit or an IT company, and thus not have equal strong relevance with  X  X pod X . Hence, it is crucial to extract and quantify asymmetric semantic relations of queries.
In this paper we propose to apply a bipartite-network-based resource alloca-tion(BNRA) method [9] to flexibly extract and quantify asymmetric semantic relations of queries for the first time. The method is originally applied to personal recommendations [10]. It is reported that , despite of simplicity, the method per-forms much better than most commonly used ranking method, such as global rank-ing method and collaborative filtering [9]. We also have got an initial but encour-aging result using the method for query suggestions [11]. The work here follows the idea of [11]. BNRA method has three prominent features, namely asymmet-ric, parallelable and  X  X ontent oblivious X . In this paper, we verify the validity of the method for extracting semantic relatio ns from query logs. We also analyze large query semantic network s constructed with the asymmetric relations. There has been much related work on extracting query semantic relations, most of which is related to query clustering, classification, recommendation, expansion or reformulation, and is usually carried out on bipartite networks constructed from query logs with one node set containing only queries and the other URLs. Various methods compute query relations according to the similarity between returned documents [12,13], selected do cuments [14,6] or snippets of returned results [15]. Most of them reported satisfactory results, but unfortunately are not applicable for large-scale documents due to unacceptably massi ve calculations.
Beeferman and Berger [1] proposed a  X  X  ontent oblivious X  method to generate a list of related query formulations for input queries by merging most related queries or URLs in query logs alternately, where the relations are measured in terms of the number of overlapped ne ighbors in bipartite networks. Wen et al. [3] proposed a better-designed solution for query clustering by combining content-based and link-based clustering together and using four notions of query relations, i.e. keywords or phrases in queries, substring matching of queries, com-mon selected URLs and the similarity of selected documents. A method based on association rule was also proposed to discover related queries from a set of search transactions or sessions, where each session includes a sequence of input queries by a single user in a certain time interval [16]. One apparent disad-vantage of the method is that it could merely find related queries submitted by the same user while incapable to extract most related queries submitted by different users. Query relations can also be explored by mapping queries to prede-fined topic categories like Broder X  X  [17] informational/navigational/transactional taxonomy [18], geographical-locality-based categories [19] or other artificial cat-egories [4,5]. Query classification brings great improvements to search engines, but on the other hand confines query relations into certain predefined categories. Baeza-Yates [20] described several rela tions between queries based on different information sources, i.e. keywords of q ueries, selected URL covers as well as hy-perlinks or terms in selected web pages, and different semantic networks were defined based on these relations, among which the relations based on selected URL covers were qualified to be of the highest semantic strength.

A crucial common drawback of above methods is that the extracted query relations are symmetric, while asymmetric semantic relations are ubiquitous and more conforming to real world. The most relevant work to this notion was done by Baeza-Yates [2], wh ere asymmetric query relat ions were extracted from Query-URL bipartite network based on selected URL covers. However, these asymmetric relations are associated from query q i to q j only when the URL set selected from q i is completely covered by that from q j , which restricts the extrac-tion capability of asymmetric relations. BNRA, in contrast, is capable to extract and quantify asymmetric relations in a more natural and flexible manner. In sub-sequent sections, we will systematically investigate detailed properties of BNRA, including the recursive BNRA and its con vergence, tunable p arameters, etc. In order to implement BNRA, we need to construct a weight ed Query-URL bi-partite network from query logs. The c lick frequencies from queries to URLs suggest the matching degree between search intentions behind queries and se-mantics behind URLs. Hence, it is essential to assign weight to each edge be-tween query and URL based on click fre quency. Denoting the query set as Q work could be described by an n  X  m adjacent matrix A = a ij ,where a ij &gt; 0 if u j is clicked under submitted q i , indicating the click frequency, and a ij =0 otherwise. 3.1 Method Description BNRA is elaborated as follows. To find related queries for query q i based on the network and quantify their relevance strength, we initially assign resource value f i to query q i , indicating the semantic information kept by q i .Afterwards, the resource-allocation is processed in two steps. Firstly, the resources in query nodes (Initially only q i keeps resource.) are proporti onally distributed, in terms of corresponding edge weight, to their neighbor URL nodes. Whereafter, the resources in URL nodes, are proportionally propagated to their neighbor query nodes in reverse. The final resources loca ted in a subset of query nodes, denoting as
R i , are regarded as the distribution of semantic information of q i and indicate the relevance strength between q i and the queries in R i . The relevance strength from query q i to q j  X  R i ,denotingas r ij ,reads where k ( q i )= n j =1 a ij and k ( u l )= m j =1 a jl are weighted degrees of query q and URL u l . Denoting strength matrix as S =( s ij ) n  X  n , and initial resource distribution is f (1) = f (0)  X  S .Inmatrix S ,the i th row indicates the resource distribution in queries originated from query q i after resource allocation. S has the property that the sum of all values in each row is equal to unity 1, namely, 3.2 Computational Complexity BNRA introduces high efficiency in bo th space and time. Denoting the edge number as e and the maximum degree of queries or URLs as k max ,BNRA for all queries requires O ( nk 2 max )operationsandsimply n  X  m memory for storing a bipartite network. In contrast, the classical agglomerative clustering method [1] requires O (( n + m ) k 2 max + e (4 k max )) operations and n + m + n 2 + m 2 memory for storing query similarities and URL similarities besides a bipartite network. An advanced method based on i ntersections of selected URL sets [2] requires O ( n 2 k max ) operations. Therefore, BNRA is more efficient than methods mentioned. Moreover, compared to the agglomerative clustering method, BNRA could be implemented in a parallel manner with ease, which serves as a defining utility for commercial search engines in mining large-scale user logs. On the other hand, it could extract and quantify query relations more flexibly than the method proposed in [2]. 3.3 Recursive BNRA and Its Convergence It is a natural conjecture that the resource allocation process in BNRA could resource distribution after the t th iteration. Such approach might extend the method to a diffusion-like algorithm which would converge to a stable solution of equation f  X  = f  X   X  S mentioned by Zhou et al. [21] without further discussion. Here, we elaborate more detailed analysis.

If we regard all queries as the states transiting from one to another according to the corresponding transition probabilities, and S as the transition probability matrix, the recursive resource allocati on process is in nature a Markov process among queries [22]. According to Markov Process Theory, if the Markov chain is irreducible and aperiodic, there is a unique stationary distribution f  X  ,and S t converges to a rank-one matrix in which each row is the stationary distribution, that is where 1 is the column vector with each value equal to 1.

In practice, a query-URL bipartite network can be composed of one large component and many small components. The set of queries within one connected component is a communicating class thu s the corresponding Markov chain is irreducible. The bipartite network component is connected based on complicated behaviors of users. Therefore, the Markov chain is aperiodic. As Eq. (3) suggests, originally from any query in one component, when reach the unique stationary state, the resource distribution f  X  is uniform, only determined by the topology of the bipartite network and has nothing to do with the initial resource distribution. The feature indicates on one hand the r ecursive process can expand the related queries effectively; on the other hand it may lower the relevance strength with the original query and strengthen the effect of global popularity, which is a trade off between the relevance specificity and global popularity. 3.4 Tunable Parameters Two tunable parameters may effect the p erformance of BNRA. One is the iter-ation number t . As mentioned above, the iteration times can effect the range of related queries and the resolving power on relevance strength between queries. The other parameter is the resource allocation strategy. A naive strategy is to allocate the resource according to click f requency as shown i nEq.(1)(2).Amore complicated form is where  X  is a tunable parameter controlling the force of click frequency on resource allocation, comprising the condition in Eq. (1)(2) when  X  =1.

Next, we will verify BNRA in query logs of Chinese search engine obtained from Sogou Labs and inspect the effect of the two parameters. Before coming to the details of the experiments and evaluation, we introduce the user log dataset in advance. 4.1 Query Log Dataset In our experiment, we use the query logs in the first week of March 2007 from Sogou Labs. Sogou Labs, founded by Chi nese commercial search engine So-gou, consist of various web search resources of Sogou including query logs in one month, which can be accessed from http://www.sogou.com/labs/ .Thereare 10,046,246 inquiry instances, 1,310,135 unique queries, 980,395 keywords and 4,055,171 unique URLs in this query log, where we refer query toastringsub-mitted to search engines by a user which may contains one or more keywords delimited by white spaces, and query instance to one click behavior from a query to a URL. The number of keywords in queries mostly ranges from 1 to 3, and most of all keywords consist of 2 to 6 Chin ese characters. Due to the shortness of keyword length, query relations extracted via keyword substring matching may be sparse and the performance will be greatly limited.

We apply BNRA and filter out the queries and URLs occurred only once in order to reduce noises. The constructed bipartite network contains 834,107 unique queries and 886,702 URLs. For each query, we assign resource f i = 100, execute the resource allocation process w ith only one iteration and record top nine related queries. Table 1 shows so me examples where related queries are listed according to the relevance strength in reverse order. For  X   X ,  X   X  (The English translations of these Chinese queries can be found in appendix, and hereinafter the same.) is positioned at the first place with strength 28 . 96. While for  X   X ,  X   X  is positioned at the last place with strength 1 . 44. 4.2 Evaluation Most commercial search eng ines recommend queries they consider to be related to the original query as related search. We compare our method with recom-mended results by commercial search engines, i.e. Baidu ( www.baidu.com )and Google ( www.google.cn ). As shown in Table 2, we compare the recommended queries of query  X   X . In most cases, the two search engines recommend those queries which contain the original query as substring. On the contrary, BNRA could extract related queries with no common substrings, which extends the scope widely. For example, the first query  X   X  recommended by BNRA is the largest website of Chinese original literature, having no common substring with  X   X .
 Users X  perception indicates the perfor mance of search engin es to some extent. Therefore, we use editors X  ratings to evaluate the performance of BNRA. We ran-domly select about 180 recommended queries and ask editors to rank these queries from 5 to 0, where 5 means very good and 0 means totally unrelated. All rating data can be accessed through http://nlp.csai.tsinghua.edu.cn/ ~ lzy/qr/rqj.zip .In Fig. 1 we show the average scores of Baidu and BNRA with different iteration numbers. Despite of the disagreement amo ng editors, the performance of BNRA is comparable with Baidu, which demonstrates the method is feasible and effective. Fig. 1 also suggests the loss of the specific relevance with original queries during the recursive resource allocation process. By Fig. 2, we show the average scores considering different num bers of recommended queries in the experiment with one iteration and the plot is skewed which is consistent with the decline of the relevance strength quantified by BNRA.
 The agglomerative clustering method [1] was also performed on the dataset. Since the method requires huge memory, we compressed the bipartite network by filtering out the queries with unique click frequency lower than 10. The method iteratively merges the most related query pair and URL pair alternately until a termination condition applies. One reasonable termination condition proposed by Beeferman and Berger [1] is where  X  (  X  ,  X  ) indicates the fraction of common neighbors of two queries or URLs. However, it makes no sense for finding related queries because it leads to find the connected components where the quer ies distribute extremely imbalanced and most are in several large components. Besides, the agglomerative clustering method is time-consuming. In a PC with Intel Duo 2 . 80 GHz CPU and 1.5GB memory, it spent about 400 minutes on the compressed bipartite network con-structed by the queries with unique c lick frequency more than 10. For BNRA, however, it spent no more than 1 minute to deal with the bipartite network constructed by the queries occurred more than once. In addition, the optimal termination condition of hierarchical agglomerative clustering algorithms is not resolved efficiently [23], so it is hard for the agglomerative clustering method to find an optimal solution. 4.3 Parameter Effects In this subsection, we inspect the eff ect on BNRA of iteration numbers and  X  in Eq. 4. In Fig. 3 we illustrate the size changes of related queries for several queries after each iteration until finding the whole connected components. We also show the changes of top five related queries of query  X   X  during the first four iterations in Table 3 with no dramatic changes found for the top related queries.

In order to track the changes during the iterations, we use Euclidean dis-tance to measure the variation between two a djacent resource distributions. Four queries X  variation dynamics along with iterations is shown in Fig. 4. Each of them terminates until the variation is less than 0 . 1. In in Fig. 5, we also illustrate the variation in each iteration of several semantic-free query pairs within one connected component of bipartite netw ork, which indicates the trend towards convergence.

Another tunable parameter is the  X  in Eq. 4 which effects the resource al-location strategy. In Fig. 6, we show the resource distributions of query  X   X  (Beijing) after 1 iteration with  X  varying from 0 to 1 . 0steppedby0 . 2. When  X   X  [0 , +  X  ), the smaller the parameter  X  is, the weaker the relevance between the resource allocation and the click frequency will be. If  X  = 0, the resource will be allocated equally. As  X  grows, the variance of distr ibuted resources increases. When  X  =1 . 0, the resource begins to be allocated totally according to the click frequency. It is straightforward to build query s emantic networks via BNRA efficiently. Through the semantic networks we can get much more information among queries. We run one iteration of BNRA f or each query and co nstruct a directed and weighted query semantic network by connecting each query to its related queries with threshold  X  =0 . 1 which is to discard the related queries with the allocated resource f i &lt; 0 . 1.

Some properties of the network constructed under threshold  X  =0 . 1areshown in Table 4. Fig. 7 shows the cumulative degree distributions of query networks constructed under different thresholds, and all of them follow power law in the rough, namely P c ( k )  X  k  X   X  where P c ( k ) is the cumulative degree distribution, and decay into two parts noticeably which indicates the lack of high degree nodes. All the degree distributions stay stable when the threshold varies from 0 . 1to1 . 0. The networks show definite small world phenomenon indicating shorter average path length and higher clustering coefficient than the random network of the same size, and scale free effect indicating that the degree distribution follows power law [24]. As shown in Table 5, we display some paths on related queries, which indicates the semantic shift in a sense. An asymmetric method was proposed for extracting and quantifying query se-mantic relations based on network resource allocation using user logs which is simple to implement with low computatio nal cost. We investigated properties of BNRA and found the naive method with only one iteration and allocating resource by click frequency is good enou gh for relation extra ction. The method is not only  X  X ontent oblivious X , but also can be easily implemented in a paral-leled manner. Possible future work includes: 1) the content based method, such as the common substring method used by Baidu and Google, is expected to be combined with link analysis to achieve more improvement; and 2) more rigorous evaluation will be designed by monitoring the real users choices. This work is supported by the National Science Foundation of China under Grant No. 60621062, 60873174 and the National 863 High-Tech Project under Grant No. 2007AA01Z148. We also thank Peng Li, Qiaxia Jiang and Shaohua Teng for coding work and discussion.
 / / / / (names of some Chinese novel websites) .
 Chinese literature websites) .

