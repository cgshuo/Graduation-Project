 Topic modelling is an increasingly popular frame-work for simultaneously soft-clustering terms and documents into a fixed number of  X  X opics X , which take the form of a multinomial distribution over terms in the document collection (Blei et al., 2003). It has been demonstrated to be highly ef-fective in a wide range of tasks, including multi-document summarisation (Haghighi and Vander-wende, 2009), word sense discrimination (Brody and Lapata, 2009), sentiment analysis (Titov and McDonald, 2008), information retrieval (Wei and Croft, 2006) and image labelling (Feng and Lapata, 2010).

One standard way of interpreting a topic is to use the marginal probabilities p ( w i | t j ) associated with each term w i in a given topic t j to extract out the 10 terms with highest marginal probability. This results in term lists such as: 1 which are clearly associated with the domain of stock market trading. The aim of this research is to automatically generate topic labels which explicitly identify the semantics of the topic, i.e. which take us from a list of terms requiring interpretation to a sin-above case.

The approach proposed in this paper is to first generate a topic label candidate set by: (1) sourc-ing topic label candidates from Wikipedia by query-ing with the top-N topic terms; (2) identifying the top-ranked document titles; and (3) further post-processing the document titles to extract sub-strings. We translate each topic label into features extracted from Wikipedia, lexical association with the topic terms in Wikipedia documents, and also lexical fea-tures for the component terms. This is used as the basis of a support vector regression model, which ranks each topic label candidate.

Our contributions in this work are: (1) the genera-tion of a novel evaluation framework and dataset for topic label evaluation; (2) the proposal of a method for both generating and scoring topic label candi-dates; and (3) strong in-and cross-domain results across four independent document collections and associated topic models, demonstrating the ability of our method to automatically label topics with re-markable success. Topics are conventionally interpreted via their top-N terms, ranked based on the marginal probability p ( w i | t j ) in that topic (Blei et al., 2003; Griffiths and Steyvers, 2004). This entails a significant cognitive load in interpretation, prone to subjectivity. Topics are also sometimes presented with manual post-hoc labelling for ease of interpretation in research pub-lications (Wang and McCallum, 2006; Mei et al., 2006). This has obvious disadvantages in terms of subjectivity, and lack of reproducibility/automation.
The closest work to our method is that of Mei et al. (2007), who proposed various unsupervised ap-proaches for automatically labelling topics, based on: (1) generating label candidates by extracting ei-ther bigrams or noun chunks from the document col-lection; and (2) ranking the label candidates based on KL divergence with a given topic. Their proposed methodology generates a generic list of label can-didates for all topics using only the document col-lection. The best method uses bigrams exclusively, in the form of the top-1000 bigrams based on the Student X  X  t -test. We reimplement their method and present an empirical comparison in Section 5.3.
In other work, Magatti et al. (2009) proposed a method for labelling topics induced by a hierarchi-cal topic model. Their label candidate set is the Google Directory (gDir) hierarchy, and label selec-tion takes the form of ontological alignment with gDir. The experiments presented in the paper are highly preliminary, although the results certainly show promise. However, the method is only applica-ble to a hierarchical topic model and crucially relies on a pre-existing ontology and the class labels con-tained therein.

Pantel and Ravichandran (2004) addressed the more specific task of labelling a semantic class by applying Hearst-style lexico-semantic patterns to each member of that class. When presented with semantically homogeneous, fine-grained near-synonym clusters, the method appears to work well. With topic modelling, however, the top-ranking topic terms tended to be associated and not lexically similar to one another. It is thus highly questionable whether their method could be applied to topic mod-els, but it would certainly be interesting to investi-gate whether our model could conversely be applied to the labelling of sets of near-synonyms.

In recent work, Lau et al. (2010) proposed to ap-proach topic labelling via best term selection, i.e. selecting one of the top-10 topic terms to label the overall topic. While it is often possible to label top-ics with topic terms (as is the case with the stock market topic above), there are also often cases where topic terms are not appropriate as labels. We reuse a selection of the features proposed by Lau et al. (2010), and return to discuss it in detail in Section 3. While not directly related to topic labelling, Chang et al. (2009) were one of the first to propose human labelling of topic models, in the form of syn-thetic intruder word and topic detection tasks. In the intruder word task, they include a term w with low marginal probability p ( w | t ) for topic t into the top-N topic terms, and evaluate how well both humans and their model are able to detect the intruder.
The potential applications for automatic labelling of topics are many and varied. In document col-lection visualisation, e.g., the topic model can be used as the basis for generating a two-dimensional representation of the document collection (Newman et al., 2010a). Regions where documents have a high marginal probability p ( d i | t j ) of being associ-ated with a given topic can be explicitly labelled with the learned label, rather than just presented as an unlabelled region, or presented with a dense  X  X erm cloud X  from the original topic. In topic model-based selectional preference learning (Ritter et al., 2010; ` O S  X  eaghdha, 2010), the learned topics can be translated into semantic class labels (e.g. DAYS OF THE WEEK ), and argument positions for individ-ual predicates can be annotated with those labels for greater interpretability/portability. In dynamic topic models tracking the diachronic evolution of topics in time-sequenced document collections (Blei and Lafferty, 2006), labels can greatly enhance the inter-pretation of what topics are  X  X rending X  at any given point in time. The task of automatic labelling of topics is a natural progression from the best topic term selection task of Lau et al. (2010). In that work, the authors use a reranking framework to produce a ranking of the top-10 topic terms based on how well each term  X  in isolation  X  represents a topic. For example, in our stock market investor fund trading ... topic example, the term trading could be considered as a more rep-resentative term of the overall semantics of the topic than the top-ranked topic term stock .

While the best term could be used as a topic la-bel, topics are commonly ideas or concepts that are better expressed with multiword terms (for example be in the top-10 topic terms (for example, COLOURS would be a good label for a topic of the form red green blue cyan ... ).

In this paper, we propose a novel method for au-tomatic topic labelling that first generates topic label candidates using English Wikipedia, and then ranks the candidates to select the best topic labels. 3.1 Candidate Generation Given the size and diversity of English Wikipedia, we posit that the vast majority of (coherent) topics or concepts are encapsulated in a Wikipedia article. By making this assumption, the difficult task of gen-erating potential topic labels is transposed to find-ing relevant Wikipedia articles, and using the title of each article as a topic label candidate.

We first use the top-10 topic terms (based on the marginal probabilities from the original topic model) to query Wikipedia, using: (a) Wikipedia X  X  native search API; and (b) a site-restricted Google search. The combined set of top-8 article titles returned from the two search engines for each topic consti-tutes the initial set of primary candidates.
Next we chunk parse the primary candidates us-ing the OpenNLP chunker, 2 and extract out all noun chunks. For each noun chunk, we generate all com-ponent n -grams (including the full chunk), out of which we remove all n -grams which are not in them-selves article titles in English Wikipedia. For exam-ple, if the Wikipedia document title were the single noun chunk United States Constitution , we would generate the bigrams United States and States Con-stitution , and prune the latter; we would also gen-erate the unigrams United , States and Constitution , all of which exist as Wikipedia articles and are pre-served.

In this way, an average of 30 X 40 secondary labels are produced for each topic based on noun chunk n -grams. A good portion of these labels are commonly stopwords or unigrams that are only marginally re-lated to the topic (an artifact of the n -gram gener-ation process). To remove these outlier labels, we use the RACO lexical association method of Grieser et al. (2011).
 RACO (Related Article Conceptual Overlap) uses Wikipedia X  X  link structure and category membership to identify the strength of relationship between arti-cles via their category overlap. The set of categories related to an article is defined as the union of the cat-egory membership of all outlinks in that article. The category overlap of two articles ( a and b ) is the in-tersection of the related category sets of each article. The formal definition of this measure is as follows: where O ( a ) is the set of outlinks from article a , and C ( p ) is the set of categories of which article p is a member. This is then normalised using Dice X  X  co-efficient to generate a similarity measure. In the in-stance that a term maps onto multiple Wikipedia ar-ticles via a disambiguation page, we return the best RACO score across article pairings for a given term pair. The final score for each secondary label can-didate is calculated as the average RACO score with each of the primary label candidates. All secondary labels with an average RACO score of 0.1 and above are added to the label candidate set.

Finally, we add the top-5 topic terms to the set of candidates, based on the marginals from the origi-nal topic model. Doing this ensures that there are always label candidates for all topics (even if the Wikipedia searches fail), and also allows the pos-sibility of labeling a topic using its own topic terms, which was demonstrated by Lau et al. (2010) to be a baseline source of topic label candidates. 3.2 Candidate Ranking After obtaining the set of topic label candidates, the next step is to rank the candidates to find the best la-bel for each topic. We will first describe the features that we use to represent label candidates. 3.2.1 Features
A good label should be strongly associated with the topic terms. To learn the association of a label candidate with the topic terms, we use several lexical association measures: pointwise mutual information (PMI), Student X  X  t -test, Dice X  X  coefficient, Pearson X  X   X  2 test, and the log likelihood ratio (Pecina, 2009). We also include conditional probability and reverse conditional probability measures, based on the work of Lau et al. (2010). To calculate the association measures, we parse the full collection of English Wikipedia articles using a sliding window of width 20, and obtain term frequencies for the label candi-dates and topic terms. To measure the association between a label candidate and a list of topic terms, we average the scores of the top-10 topic terms.
In addition to the association measures, we in-clude two lexical properties of the candidate: the raw number of terms, and the relative number of terms in the label candidate that are top-10 topic terms.
We also include a search engine score for each label candidate, which we generate by querying a local copy of English Wikipedia with the top-10 topic terms, using the Zettair search engine (based on BM25 term similarity). 3 For a given label candi-date, we return the average score for the Wikipedia article(s) associated with it. 3.2.2 Unsupervised and Supervised Ranking
Each of the proposed features can be used as the basis for an unsupervised model for label candidate selection, by ranking the label candidates for a given topic and selecting the top-N . Alternatively, they can be combined in a supervised model, by training over topics where we have gold-standard labelling of the label candidates. For the supervised method, we use a support vector regression (SVR) model (Joachims, 2006) over all of the features. We conducted topic labelling experiments using document collections constructed from four distinct domains/genres, to test the domain/genre indepen-dence of our method: B
LOGS : 120,000 blog articles dated from August B OOKS : 1,000 English language books from the N
EWS : 29,000 New York Times news articles P
UB M ED : 77,000 PubMed biomedical abstracts The B LOGS dataset contains blog posts that cover a diverse range of subjects, from product reviews to casual, conversational messages. The B OOKS topics, coming from public-domain out-of-copyright books (with publication dates spanning more than a century), relate to a wide range of topics includ-ing furniture, home decoration, religion and art, and have a more historic feel to them. The N EWS topics reflect the types and range of subjects one might expect in news articles such as health, finance, entertainment, and politics. The P UB M ED topics frequently contain domain-specific terms and are sharply differentiated from the topics for the other corpora. We are particularly interested in the perfor-mance of the method over P UB M ED , as it is a highly specialised domain where we may expect lower cov-erage of appropriate topic labels within Wikipedia.
We took a standard approach to topic modelling each of the four document collections: we tokenised, lemmatised and stopped each document, 5 and cre-ated a vocabulary of terms that occurred at least ten times. From this processed data, we created a bag-of-words representation of each document, and learned topic models with T = 100 topics in each case.

To focus our experiments on topics that were rela-tively more coherent and interpretable, we first used the method of Newman et al. (2010b) to calculate the average PMI-score for each topic, and filtered all topics that had an average PMI-score lower than 0.4. We additionally filtered any topics where less than 5 of the top-10 topic terms are default nomi-nal in Wikipedia. 6 The filtering criteria resulted in 45 topics for B LOGS , 38 topics for B OOKS , 60 top-ics for N EWS , and 85 topics for P UB M ED . Man-ual inspection of the discarded topics indicated that they were predominantly hard-to-label junk topics or mixed topics, with limited utility for document/term clustering.

Applying our label candidate generation method-ology to these 228 topics produced approximately 6000 labels  X  an average of 27 labels per topic. 4.1 Topic Candidate Labelling To evaluate our methods and train the supervised method, we require gold-standard ratings for the la-bel candidates. To this end, we used Amazon Me-chanical Turk to collect annotations for our labels.
In our annotation task, each topic was presented in the form of its top-10 terms, followed by 10 sug-gested labels for the topic. This constitutes a Human Intelligence Task (HIT); annotators are paid based on the number of HITs they have completed. A screenshot of a HIT seen by annotator is presented in Figure 1.

In each HIT, annotators were asked to rate the la-bels based on the following ordinal scale: 3: Very good label; a perfect description of the 2: Reasonable label, but does not completely cap-1: Label is semantically related to the topic, but 0: Label is completely inappropriate, and unrelated
To filter annotations from workers who did not perform the task properly or from spammers, we ap-plied a few heuristics to automatically detect these workers. Additionally, we inserted a small num-ber of stopwords as label candidates in each HIT and recorded workers who gave high ratings to these stopwords. Annotations from workers who failed to passed these tests are removed from the final set of gold ratings.

Each label candidate was rated in this way by at least 10 annotators, and ratings from annotators who passed the filter were combined by averaging them. A sample of topics, label candidates, and the average rating is presented in Table 1. 7
Finally, we train the regression model over all the described features, using the human rating-based ranking. In this section we present our experimental results for the topic labelling task, based on both the unsu-pervised and supervised methods, and the methodol-ogy of Mei et al. (2007), which we denote MSZ for the remainder of the paper. 5.1 Evaluation We use two basic measures to evaluate the perfor-mance of our predictions. Top-1 average rating is the average annotator rating given to the top-ranked system label, and has a maximum value of 3 (where annotators unanimously rated all top-ranked system labels with a 3). This is intended to give a sense of the absolute utility of the top-ranked candidates.
The second measure is normalized discounted cumulative gain (nDCG: Jarvelin and Kekalainen (2002), Croft et al. (2009)), computed for the top-1 ( nDCG-1 ), top-3 ( nDCG-3 ) and top-5 ranked sys-tem labels ( nDCG-5 ). For a given ordered list of scores, this measure is based on the difference be-tween the original order, and the order when the list is sorted by score. That is, if items are ranked op-timally in descending order of score at position N , nDCG-N is equal to 1. nDCG is a normalised score, and indicates how close the candidate label ranking is to the optimal ranking within the set of annotated candidates, noting that an nDCG-N score of 1 tells us nothing about absolute values of the candidates. This second evaluation measure is thus intended to reflect the relative quality of the ranking, and com-plements the top-1 average rating.

Note that conventional precision-and recall-based evaluation is not appropriate for our task, as each label candidate has a real-valued rating.

As a baseline for the task, we use the unsuper-vised label candidate ranking method based on Pear-son X  X   X  2 test, as it was overwhelmingly found to be the pick of the features for candidate ranking. 5.2 Results for the Supervised Method For the supervised model, we present both in-domain results based on 10-fold cross-validation, and cross-domain results where we learn a model from the ratings for the topic model from a given domain, and apply it to a second domain. In each case, we learn an SVR model over the full set of fea-tures described in Section 3.2.1. In practical terms, in-domain results make the unreasonable assump-tion that we have labelled 90% of labels in order to be able to label the remaining 10%, and cross-domain results are thus the more interesting data point in terms of the expected results when apply-ing our method to a novel topic model. It is valuable to compare the two, however, to gauge the relative impact of domain on the results.

We present the results for the supervised method in Table 2, including the unsupervised baseline and an upper bound estimate for comparison purposes. The upper bound is calculated by ranking the candi-dates based on the annotated human ratings. The up-per bound for top-1 average rating is thus the high-est average human rating of all label candidates for a given topic, while the upper bound for the nDCG measures will always be 1.

In addition to results for the combined candidate set, we include results for each of the three candi-date subsets, namely the primary Wikipedia labels ( X  1  X   X ), the secondary Wikipedia labels ( X  2  X   X ) and the top-5 topic terms ( X  X op5 X ); the nDCG results are over the full candidate set only, as the numbers aren X  X  directly comparable over the different subsets (due to differences in the number of candidates and the distribution of ratings).

Comparing the in-domain and cross-domain re-sults, we observe that they are largely compara-ble, with the exception of B OOKS , where there is a noticeable drop in both top-1 average rating and nDGC-1 when we use cross-domain training. We see an appreciable drop in scores when we train B
OOKS against B LOGS (or vice versa), which we analyse as being due to incompatibility in document content and structure between these two domains. Overall though, the results are very encouraging, and point to the plausibility of using labelled topic models from independent domains to learn the best topic labels for a new domain.

Returning to the question of the suitability of la-bel candidates for the highly specialised P UB M ED document collection, we first notice that the up-per bound top-1 average rating is comparable to the other domains, indicating that our method has been able to extract equivalent-quality label can-didates from Wikipedia. The top-1 average rat-ings of the supervised method are lower than the other domains. We hypothesise that the cause of the drop is that the lexical association measures are trained over highly diverse Wikipedia data rather than biomedical-specific data, and predict that the results would improve if we trained our features over PubMed.

The results are uniformly better than the unsuper-vised baselines for all four corpora, although there is quite a bit of room for improvement relative to the upper bound. To better gauge the quality of these results, we carry out a direct comparison of our pro-posed method with the best-performing method of MSZ in Section 5.3.
Looking to the top-1 average score results over the different candidate sets, we observe first that the up-per bound for the combined candidate set ( X  X ll X ) is higher than the scores for the candidate subsets in all cases, underlining the complementarity of the differ-ent candidate sets. We also observe that the top-5 topic term candidate set is the lowest performer out of the three subsets across all four corpora, in terms of both upper bound and the results for the super-vised method. This reinforces our comments about the inferiority of the topic word selection method of Lau et al. (2010) for topic labelling purposes. For N
EWS and P UB M ED , there is a noticeable differ-ence between the results of the supervised method over the full candidate set and each of the candidate subsets. In contrast, for B OOKS and B LOGS , the re-sults for the primary candidate subset are at times actually higher than those over the full candidate set in most cases (but not for the upper bound). This is due to the larger search space in the full candidate set, and the higher median quality of candidates in the primary candidate set. 5.3 Comparison with MSZ The best performing method out of the suite of approaches proposed by MSZ method exclusively uses bigrams extracted from the document collec-tion, ranked based on Student X  X  t -test. The potential drawbacks to this approach are: all labels must be bigrams, there must be explicit token instances of a given bigram in the document collection for it to be considered as a label candidate, and furthermore, there must be enough token instances in the docu-ment collection for it to have a high t score.
To better understand the performance difference of our approach to that of MSZ, we perform direct comparison of our proposed method with the bench-mark method of MSZ. 5.3.1 Candidate Ranking
First, we compare the candidate ranking method-ology of our method with that of MSZ, using the label candidates extracted by the MSZ method. We first extracted the top-2000 bigrams using the N -gram Statistics Package (Banerjee and Pedersen, 2003). We then ranked the bigrams for each topic using the Student X  X  t -test. We included the top-5 la-bels generated for each topic by the MSZ method in our Mechanical Turk annotation task, and use the annotations to directly compare the two methods.
To measure the performance of candidate rank-ing between our supervised method and MSZ X  X , we re-rank the top-5 labels extracted by MSZ using our SVR methodology (in-domain) and compare the top-1 average rating and nDCG scores. Results are shown in Table 3. We do not include results for the B
OOKS domain because the text collection is much larger than the other domains, and the computation for the MSZ relevance score ranking is intractable due to the number of n -grams (a significant short-coming of the method).

Looking at the results for the other domains, it is clear that our ranking system has the upper hand: it consistently outperforms MSZ over every evalu-ation metric. 8 Comparing the top-1 average rating results back to those in Table 2, we observe that for all three domains, the results for MSZ are be-low those of the unsupervised baseline, and well be-low those of our supervised method. The nDCG re-sults are more competitive, and the nDCG-3 results are actually higher than our original results in Ta-ble 2. It is important to bear in mind, however, that the numbers are in each case relative to a different la-bel candidate set. Additionally, the results in Table 3 are based on only 5 candidates, with a relatively flat gold-standard rating distribution, making it easier to achieve higher nDCG-5 scores. 5.3.2 Candidate Generation
The method of MSZ makes the implicit assump-tion that good bigram labels are discoverable within the document collection. In our method, on the other hand, we (efficiently) access the much larger and variable n -gram length set of English Wikipedia ar-ticle titles, in addition to the top-5 topic terms. To better understand the differences in label candidate sets, and the relative coverage of the full label can-didate set in each case, we conducted another survey where human users were asked to suggest one topic label for each topic presented.

The survey consisted, once again, of presenting annotators with a topic, but in this case, we gave them the open task of proposing the ideal label for the topic. In this, we did not enforce any restrictions on the type or size of label (e.g. the number of terms in the label).

Of the manually-generated gold-standard labels, approximately 36% were contained in the original document collection, but 60% were Wikipedia arti-cle titles. This indicates that our method has greater potential to generate a label of the quality of the ideal proposed by a human in a completely open-ended task. On the subject of suitability of using Amazon Me-chanical Turk for natural language tasks, Snow et al. (2008) demonstrated that the quality of annotation is comparable to that of expert annotators. With that said, the P UB M ED topics are still a subject of inter-est, as these topics often contain biomedical terms which could be difficult for the general populace to annotate.

As the number of annotators per topic and the number of annotations per annotator vary, there is no immediate way to calculate the inter-annotator agreement. Instead, we calculated the MAE score for each candidate, which is an average of the ab-solute difference between an annotator X  X  rating and the average rating of a candidate, summed across all candidates to get the MAE score for a given corpus. The MAE scores for each corpus are shown in Ta-ble 4, noting that a smaller value indicates higher agreement.
 As the table shows, the agreement for the P
UB M ED domain is comparable with the other datasets. B LOGS and N EWS have marginally better agreement, almost certainly because of the greater immediacy of the topics, covering everyday areas such as lifestyle and politics. B OOKS topics are oc-casionally difficult to label due to the breadth of the domain; e.g. consider a topic containing terms ex-tracted from Shakespeare sonnets. This paper has presented the task of topic labelling, that is the generation and scoring of labels for a given topic. We generate a set of label candidates from the top-ranking topic terms, titles of Wikipedia articles containing the top-ranking topic terms, and also a filtered set of sub-phrases extracted from the Wikipedia article titles. We rank the label candidates using a combination of association measures, lexical features and an Information Retrieval feature. Our method is shown to perform strongly over four inde-pendent sets of topics, and also significantly better than a competitor system.
 Acknowledgements
