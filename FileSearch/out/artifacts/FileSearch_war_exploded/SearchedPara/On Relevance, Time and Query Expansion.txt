 We present the results of our exploratory analysis on the relationship that exists between relevance and time. We ob-serve how the amount of documents published in a given interval of time is related to the probability of relevance, and, using the time series analysis, we show the existence of a correlation between time and relevance. As an initial application of this analysis, we study query expansion ex-ploiting the detection of publication time peaks over the Blog06 collection. We finally propose an effective approach for the query expansion in the blog search domain. Our ap-proach is based on the documents publication trend being so completely independent of any external resource. H.3.0 [ Information Storage and Retrieval ]: General; H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing; H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Theory, Experimentation time series, query expansion, relevance distribution
Nowadays, social networks, blogs, forums are attracting an increasing number of users, and information needs change quickly: freshness of the retrieved information is becoming central.

Taking into account the temporal evolution of data be-comes thus mandatory. In the most recent editions of the TREC Blog track, the top news stories identification task was a hot one ([11]) and it is still central in the real-time in a commercial framework .

In all these examples, there is an underlying belief that taking into account the time of a document (e.g. the pub-lication date), or of a query (e.g. the submission time) can improve effectiveness.

For example, in queries like  X  X lympics X  or  X  X eptember 11 X , the publication date of some news related to the query can be useful to boost the prediction of relevance with the topic, as in the Time-based language models [8]. Conversely, queries like  X  X hole foods X  or  X  X tock options X  seem to be less related to particular events. Starting from these observa-tions, we classify queries in two categories:  X  events driven  X  or  X  events free  X .

In this paper we study the relationship between the pub-lication date of a document and its relevance with respect to a query. We thus want to answer such questions as: does a boost in the number of document publications correspond to an increasing probability of relevance? Can time be used to refine relevance prediction of documents with respect to a query?
To achieve our aims we first analyze how relevance changes over time using time series. We derive time series from the result sets of documents and, in parallel, from the set of relevant documents, we then compare these two time series. Notice that this approach depends on the collection only, without the need of logging query traffic or other user de-pendent information.

We further propose a modification of Rocchio X  X  query ex-pansion algorithm that takes into account the time dimen-sion in order to improve the effectiveness of the retrieval.
Our analyses show that the amount of document pub-lished in a time slice is deeply related to the probability of relevance, at least in the Blog06 collection. The effectiveness of deriving QE algorithm proposed, also shows that infor-mation related to the distribution of documents over time can be successfully used to define new QE models.
The information retrieval community has shown an in-creasing interest in online news and blogs domains in the latest years. Temporal information is often analysed in order right). to provide new perspective or representation of documents collection [1, 5, 12]. Furthermore, the time dimension has been explored to discover relationships among terms to sup-port forecasting in [20].

Other works apply time series to the analysis of temporal evolution of information ([2, 13]). Time series analysis has also been adopted in other papers where the discovery of existing relationship among queries starting from the query logs is considered ([21, 7, 14]).

Finally, in [15, 4] it is shown how time-stamps of docu-ments can be used to increase the precision of search. The assumption that time and relevance can be analysed in or-der to define effective retrieval models has been exploited in timed language models ([8, 19, 3]).

The application of time analysis on the blog search prob-lem is instead quite new. Many and various works aim to increase the retrieval performance in blog domain using ex-ternal resources [17] but not so with the time dimension.
The results set of a search engine is typically shown to the final user as a flat list of documents sorted by some relevance scores. How to improve the effectiveness of the retrieval phase is one of the main challenge in IR. Starting from the results set, a common approach is to analyse how relevance is related to scores or ranks. Learning to Rank is the most famous and effective application of this approach. The connections existing between relevance and score (or rank) are the starting point of this kind of approaches. We try to apply similar analyses to other sources of informations that related to documents in the collection.

Increasingly, new collections of documents contain further data besides text. This is the case of newspapers, blogs, tweets where each  X  X ocument unit X  is enriched with extra in-formation: timestamps of publication, author X  X  details, cross references and so on. Our aim is to propose an analysis of the relationship between relevance and time.

In collections where the freshness of information is a crit-ical aspect, the time dimension has a central role. In this case, the interest for a specific topic often corresponds to a burst in published documents related to it. Let us con-sider, for example, a newspaper with main focus on political or current events. When a news story arises, an increasing trend in publishing news on that story happens. After a pe-riod during which the story remains hot, the space that the newspaper assigns to it decreases and vanishes. In a such case, we say that the topic is  X  event driven  X , i.e. there is something that happens and generate the interest for that topic in the collection. Of course there are also topics that are not related to a specific event, like the  X  X eather fore-casting X . For these kind of topics, events that happen and are related to the topic, can just influence the trend in pub-lication, but does not cause a real change of interest. In this case we say that the topic is  X  events free  X .

Our assumption is that a spike in the publication of doc-ument related to a topic is related to an increasing interest for the topic. Thus, given a relevance assessment for docu-ments related to a given topic we can build a time series of relevance. The relevance is somehow related to the amount of documents published. We aim to discover which kind of connection exists between the two.

We do not analyse the whole set of documents in the col-lection for this analysis, but we focus only on the result set of a query. We consider the result set as a cluster of docu-ments that could be relevant to the query. Hence, starting from a result set of (pseudo-relevant) documents, we build the time series for their publication dates. We then compare this time series with the one built from the publication time of (true) relevant documents. Comparing these time series, we can bring out some clues on how related are time and relevance between the sets of relevant and retrieved docu-ments.

Packing the time in bins with a given granularity, we then compute the probability of relevance for each time unit. We can so derive considerations on how the relevance changes according to the spikes in publication of pseudo-relevance document.

For our experimentation we used the Blog06Collection ([9]) with the evaluations related to Blog TREC competition of 2006, 2007 and 2008 ([10, 18, 16]). The dataset includes 150 topics for 3.2 million of blogposts. The crawling was per-formed between 06/12/2005 and 21/02/2006 but the publi-cation dates of gathered documents cover a period of more than 2 years. Of course, the amount of documents published is large in the crawling time interval but tends quickly to zero outside. For this reason we repeated our analysis con-sidering first the whole collection time (from January 1st, 2004 to February 21st, 2006) and then the crawling period.
In order to build a time series Y = y 1 , . . . , y n starting from a set of documents, we group all documents published at the same time t : T able 1: Min, Max, Mean and Variance values of crosscorrelation function at lag 0 for each baselines. Values are average over all the 150 topics. where D is the set of documents and
We can choose t as a time interval: a day, a week or a month. In this way we can provide a binning of documents in time units. In our experimentation we choose t equal to a single day, so obtaining a daily binning of documents.
We apply this approach to both results set and relevant documents.
We tried to analyse how retrieved and relevant documents are distributed over time and how much they are related each other. We built the time series X for relevant doc-uments using the assessment provided by TREC for blog competitions from 2006 to 2008, where evaluations for 150 queries are provided. Furthermore, 5 vanilla baselines are provided by NIST for the TREC 2008 competition ([18]). We built a time series Y for retrieved documents using these baselines. We then evaluated the correlation between these two time series by applying the Cross Correlation Function (CCF)  X  of two univariate time series, defined as where  X  x and  X  y are the mean values of time series X t and Y t respectively, and  X  x ,  X  y are the corresponding standard deviations.

We computed the values of CCF for each query separately with 0  X   X   X  15. In figure 1 we report the mean CCF function values for all 150 queries on all the baselines. We used as indicator of correlation, the mean value of CCF for all the queries in a baseline when  X  = 0. Thus, we obtain a measure of how the time series are related without any lag. Table 1 shows the mean, variance, min and max val-ues for each baseline as well as their average. The resulting mean value of the cross correlation over all the baselines is 0 . 7280 with a variance of 0 . 0393. We can conclude that there is a strong correlation between the two series. This observa-tion suggests that the models used to retrieve documents are able to collect documents that are published according to a trend similar to the one followed by the relevant document.
Giving a deeper look to the shape of time series, we infer that, in general, there are two kind of queries. Those that have spikes in publications around a specific date ( events driven queries ) and those that show no specific correlation with a particular date ( events free queries ). Figure 2 shows two examples of these kind of queries.
 Figure 2: On the left an example of e vent driven query ( X  X lympics X ) and on the right an example of event free query ( X  X hole food X ).
We now try to more deeply analyse the correlation existing between relevance and the time dimension. We know that bursts in the time series of relevant documents are related to spikes in the time series of retrieved documents. Thus, we assume that pseudo-relevant documents in a peak are more suitable to be relevant with respect to the topic.
We applied Rocchio X  X  algorithm in order to evaluate the correlation existing between peaks and relevance. In queries that are driven by events, we assume that the highest peaks are coupled to the events causing the interest for the topic. Thus, we restrict the query expansion to documents belong-ing to time bursts in order to improve the retrieval effec-tiveness with respect to the standard blind query expan-sion. More in details, we select top ranked documents in the highest peaks as  X  X seudo relevant X , while documents outside peaks are considered as not relevant. We can then apply Rocchio X  X  algorithm for relevance feedback:
We used Dfree1 as retrieval model, but we notice that the model is not important in our analysis. The blind relevance feedback baseline achieves a MAP equal to 0 . 3067, while our timed Rocchio X  X  algorithm achieves MAP equal to 0 . 3126 with  X  = 1,  X  = 0 . 9 and  X  = 0 . 1. Finally, we obtained a statistically significant MAP of 0 . 3298 with  X  =  X  = 1 and  X  = 0, that is using only publication date peaks. All the query expansions were performed using 10 documents and 10 terms for the expansion. These improvements suggets the effectiveness of temporal query expansion approach.
Note that the Blog06 is a collection in which the query expansion algorithms usually fail [6, 18]. The fact that we can improve the effectiveness of a standard retrieval, seems in this case a remarkable result.
We analysed the relationship between time and relevance on the Blog06 collection. We showed how the trends of the publication dates of the set of relevant documents and of the set of the retrieved documents are very close to each other. That is, the time series based on the publication dates of the set of retrieved documents is correlated to the trend of the set of relevant documents. This correlation is exploited to increase the effectiveness of search by applying a time-based query expansion algorithm based on a Rocchio-like query expansion. Our result is a first step to a deeper study of the correlation between time and relevance, and future work will focus more on the correlation in the case of event driven queries rather than for event free queries. We can so deal with the query periodicity so analysing the relationshi p existing among temporal query dynamics and their effects on relevance.

We also notice that query expansion hardly improves the effectiveness of retrieval on the Blog06 collection, without using any external resource. To further test the effective-ness of our approach, we X  X l perform a deeper analysis on timed QE comparing it with others QE techniques based on external evidences.

We will also make a similar study to other Web collections and refine our preliminary model of timed query expansion. [1] O. Alonso, M. Gertz, and R. Baeza-Yates. Clustering [2] K. Balog and M. de Rijke. Decomposing bloggers X  [3] K. Berberich, S. Bedathur, O. Alonso, and [4] K. Berberich, S. J. Bedathur, T. Neumann, and [5] R. Catizone, A. Dalli, and Y. Wilks. Evaluating [6] Jonathan L. Elsas, Jaime Arguello, Jamie Callan, and [7] A. Kulkarni, J. Teevan, K.M. Svore, and S.T. Dumais. [8] X. Li and W. B. Croft. Time-based language models. [9] C. Macdonald and I. Ounis. The trec blogs06 [10] C. Macdonald, I. Ounis, and I. Soboroff. Overview of [11] C. Macdonald and I. Soboroff. Overview of the [12] M. Matthews, P. Tolchinsky, R. Blanco, J. Atserias, [13] G. Mishne, K. Balog, M. de Rijke, and B. Ernsting. [14] M. Murata, H. Toda, Y. Matsuura, R. Kataoka, and [15] K. Norvag. Supporting temporal text-containment [16] I. Ounis, M. de Rijke, C. Macdonald, G. A. Mishne, [17] I. Ounis, C. Macdonald, and I. Soboroff. On the trec [18] I. Ounis, C. Macdonald, and I. Soboroff. Overview of [19] J. M. Ponte and W. B. Croft. A language modeling [20] K. Radinsky, S. Davidovich, and S. Markovitch. [21] Y. Zhang, B.J. Jansen, and A. Spink. Time series
