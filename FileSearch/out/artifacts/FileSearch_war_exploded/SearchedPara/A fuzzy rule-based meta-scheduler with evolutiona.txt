 1. Introduction
Computational grids are emerging infrastructures providing high-end computational capabilities for the solving of high performance and massive computation applications ( Foster and Kesselman, 2004 ). They consist of a widespread set of hetero-geneous and distributed resources interconnected through high speed networks whose purpose is to overcome limitations on geographical location and hardware specification of local re-sources, thus sharing computational power to solve large-scale computational problems previously restricted by computer hard-ware ( Tseng et al., 2009 ). Grid computing resources are located under a Virtual Organization (VO) within different autonomous administrative domains, each establishing its own access policies, security, and other constraints ( Foster and Iamnitchi, 2003 ). There are several aspects in which grid computing can benefit from improvement. A long-standing problem of such systems is concerned with the proficient dispatch of tasks and resources utilization (i.e. grid scheduling).

The grid scheduling problem is a well-known NP-complete problem ( Garey and Johnson, 1979 ), addressing the coordination and cooperation of resources with the aim that users X  tasks are efficiently executed. Moreover, grid scheduling is generally considered to be a hierarchical problem concerning two levels ( Christodoulopoulos et al., 2009; Phatanapherom et al., 2003 ), namely meta-scheduling and local-scheduling level. In the former, the meta-scheduler or resource broker selects the grid resource domain (RD) where to execute a given task, whereas in the latter, each local resource management system (LRMS) is responsible for assigning tasks to specific hosts within its associated RD. That is, the meta-scheduler performs tasks assignment into the different domains and leaves the host assignation to the existing local scheduler. Generally, this two-level grid model is widely accepted since it allows local policies within each RD in the VO and thus to achieve a tighter control over every single domain. In addition, it enables more scalable and modular scheduling systems. Thereby, it is the goal of this paper to cooperate towards the efficiently implementation of scheduling systems which is a critical issue of grid systems ( Kalantari and Akbari, 2009 ). Moreover, it has been proved that the entire grid system performance highly depends on the accuracy of the scheduling strategy ( Christodoulopoulos et al., 2009 ).

Many efforts have been made to face the scheduling problem on grids. However, in the light of the widely distributed, heterogeneous and dynamic nature of grids, most scheduling strategies are unable to provide feasible and efficient solutions ( Kalantari and Akbari, 2009 ). This way, given the growing relevance of grids together with the recent advent of hard computational computation applications, it is convenient to further explore new ways of facing the scheduling problem.
Specifically, since loosely coupled large-scale parallel applications are able to greater profit from executing on grids than tightly coupled applications, we will focus our attention on a type of these applications, Bag-of-Tasks applications (BoT), generally defined as an  X  X  X mbarrassingly parallel X  X  ( Weng and Lu, 2005 ) kind of applications playing an important role in several science fields such as data mining, massive searches or image manipula-tion applications ( Weng and Lu, 2005; Li et al., 2004 ). grid computing, it integrating a novel learning process for computationally intensive BoT applications. This way, we pursue to improve the fuzzy rule-based scheduling model with evolu-tionary knowledge learning presented in previous works which demonstrated to easily adapt to grid changing environment and to outperform classical scheduling strategies ( Prado et al., 2009 ).
In this sense, this work is a further effort of our research towards the implementation of a efficient scheduling system and to overcome current limitations on grids using fuzzy rule-based systems (FRBSs). FRBSs are knowledge-based systems incorporat-ing human reasoning for the decision-making process ( Cordo  X  n et al., 2001 ) through the use of fuzzy rules sets and fuzzy memberships functions, experimenting a growing interest in design of flexible and adaptive scheduling strategies on dynamic environments ( Liu et al., 2009; Zhou et al., 2007; Huang et al., 2005 ). Therefore, in this work, we propose the use of FRBSs for the development of a scheduling system that considers the peculia-rities of computational grids, workloads and users. Experimental results will show that the fuzzy scheme outperforms several extensively used scheduling approaches on grids ( Tseng et al., 2009; Etminani and Naghibzadeh, 2007 ).
 knowledge acquisition strategy. As mentioned above, FRBSs knowl-edge is based on the definition of fuzzy rules and fuzzy memberships functions. Consequently, this kind of systems is subject to the acquisition of high quality knowledge, which is generally a difficult task due to the lack of experts in the field or because it is only possible to obtain a partially correct description of the fuzzy system. Therefore, an efficient FRBS-based scheduling system must concern on how to address a fast and accurate learning for knowledge acquisition. In this work, the automatic definition of the FRBS is performed by a novel strategy based on genetic algorithms (GAs), which are extensively used for finding optimal solutions in large search spaces ( Cordo  X  n et al., 2001 ). Specifically, the proposed learning strategy is based on two classical genetic strategies commonly referred as to Michigan ( Booker et al., 1989 ) and Pittsburgh ( Smith, 1980 ) approaches.
Moreover, this new learning strategy is able to improve the classical genetic learning systems performance in terms of computational effort and convergence behaviour.
 will briefly review the main issues of the scheduling problem on grids and related work. Section 3 deals with the definition of the fundamentals of the fuzzy rule-based system within the meta-scheduler and grid system state characterization. The structure and theoretical foundations related to the proposed learning strategy are introduced in Section 4. In Section 5 simulation results are discussed. To conclude, Section 6 summarizes the outcomes of the proposed schema. 2. Background an easy task even when concerning simple scalar objectives functions since most prove to be NP-hard ( Garey and Johnson, 1979 ). Despite achieving good results in practice, many existing scheduling approaches in real grid settings such as greedy scheduling ( Franke et al., 2007b ) together with FCFS ( Schwiegelshohn and Yahyapour, 1998 , CONS or EASY backfilling ( Mu X  X lem and Feitelson, 2001 ) reach very low utilization rates and support limited objectives (i.e. commonly minimizing time and execution costs) ( Franke et al., 2008 ). Hence, considering the growing relevance of grids, there exists a high interest in further research on new strategies that address an efficient application scheduling in the large and changing search spaces typical of the grid world.

Many static and dynamic scheduling heuristics have been proposed to face the problem of scheduling a set of tasks to the distinct domains and hosts on grids. Static and dynamic schedul-ing strategies may differentiate in the amount of tasks considered in each scheduling decision ( Tseng et al., 2009 ). Static heuristics manage a fixed number of tasks, whereas dynamic heuristics involve an unfixed number of tasks. Braun et al. (2001) pointed a wide range of static scheduling strategies extensively used in heterogeneous computing environments. Some instances are OLB (opportunistic load balancing) ( Tseng et al., 2009 ), MET (minimum execution time) ( Braun et al., 2001 ) and MCT (minimum completion time) ( Etminani and Naghibzadeh, 2007 ). On the other hand, Fujimoto and Hagihara (2004) provide a comparison among five dynamic scheduling heuristics suitable for grid environment, considering min X  X in ( Maheswaran et al., 1999 ), max X  X in ( Maheswaran et al., 1999 ), RR (round robin) ( Fujimoto and Hagihara, 2004 ), DFPLTF (dynamic FPLTF) ( Silva et al., 2003; Tseng et al., 2009 ) and WQ (work queue) ( Silva et al., 2003; Fujimoto and Hagihara, 2004 ). All these approaches basically found their scheduling strategies on the estimation of resources performance in terms of execution time or delay or even they dispatch tasks regardless the hosts X  current workload. However, when concerning heterogeneous environments such as grid, it must be again stressed out the fact that each resource status is subject to changes at any time, so more self-adapting, flexible and computationally inexpensive schedulers are pursued in order to use all the available resources in a more efficient way. In this sense, the role of adaptive scheduling strategies must be pointed out. Adaptive scheduling strategies ( Xhafa and Abraham, 2008 ) suggest the consideration of current and future state of the grid system in order to avoid or prevent performance deteriora-tion and this way base their schedules on a  X  X  X nown X  X  state. Nevertheless, as mentioned above, this  X  X  X nown X  X  state is imprecise by nature in a grid environment. Thus, it is suggested in this work to consider adaptive scheduling strategies coping with certain levels of vagueness or uncertainty in the grid state characteriza-tion. Specifically, the application of FRBSs for the design of adaptive scheduling systems is faced.

FRBSs are increasingly attracting the scheduling researchers attention for coping with scheduling in complex large-scale systems such as grids. FRBSs are a kind of real time expert systems considering non-linear, time-invariant control laws which have proved to achieve a high accuracy in their decisions on the basis of the features describing the controlled system and their acquired knowledge ( Cordo  X  n et al., 2001 ). FRBSs fields of application belong to such diverse areas as intelligent control of elevator systems ( Jamaludin et al., 2009 ), modeling of traffic flow behaviour ( Quek et al., 2009 ), connection admission in ATM networks ( Cheong and Lai, 2009 ), warped LPC-based speech/ music discrimination ( Mun  X  oz-Expo  X  sito et al., 2007 ) and control of petroleum separation processes ( Liao et al., 2008 ). On the other hand, since FRBSs performance is related to the quality of their knowledge bases, many efforts have been made to improve these systems outcomes by means of incorporating learning strategies. Both approaches coming from artificial neural networks (ANNs) and from genetic algorithms (GAs) have been suggested as to evolve the system knowledge. GAs are probabilistic search and optimization procedures based on natural genetics ( Cordo  X  n et al., 2001; Davis and Mitchell, 1991 ), working with finite strings of bits that represent the parameters of the problem or individuals to be improved, commonly referred as to chromosomes, and considering a fitness function for evaluating each of these individuals. In this work, beyond the goal of providing a rule-based scheduler, we will specially focus our attention on the development of a genetic learning strategy for the fuzzy rule data bases evolution (i.e. rules or rule sets representing the individuals of the candidate population), that leads the scheduler system to achieve a faster convergence to a high quality knowledge.
As mentioned in Section 1, a relevant issue in the modeling of a scheduling strategy and thus in the definition of an efficient performance index for the learning process, is related to the scheduling criteria. It is to be noted that the complex optimization problem of tasks scheduling on compute intensive grids may requires several criteria to be considered. In this sense, several studies addressing multiple criteria within distributed and grid systems have been conducted in recent years ( Wieczorek et al., 2009 ). It is proved that the concurrent search for optimum values in a multi-dimensional parameter space is a major question in this kind of systems, since it is not always possible to find a solution that best fits all the criteria simulta neously. Moreover, the different objectives may present cross-purposes. Thus, in this paper, we suggest the combination of severa l scheduling metrics with the aim of providing a comprehensive scheduling approach for grids. Specifically, we consider the optimization of average weighted response time subject to average inter-resource domain load Balancing and average response ratio thresholds, as we will analyze in Section 3. Furthermore, we also consider users groups differentiation. As stated in Franke et al. (2008) , in high performance parallel computing (HPPC) the determination of differentiated users or user groups is usually required as to reach the expected quality of service (QoS). However, the question of how to establish a classification of users groups arises since grid workloads in themselves do not specify any categorization of users. In this sense, Song et al. (2005) prove that a classification of users may be speci fied taking into consideration that most users of the same user group present a similar task submission pattern. Hence, in this paper we will consider the analysis of workloads in the differen tiation of users groups.

In sum, this work present a meta-scheduler or resource broker that uses dynamic inputs for the fu zzy system, thus characterizing the system state, it is able to differentiate users groups and it is focused on typical compute-intensive grid workloads. Furthermore, we seek the fuzzy rule-based meta-schedule rtoimproveitsinitialknowledge and so we concern the evolution of its rule-base through time by means of applying a new approach based on genetic algorithms and following a complex fitness function, as we will study in Section 4. 3. Fuzzy rule-based meta-scheduling system structure
The fuzzy rule-based meta-scheduler is responsible for assign-ing the users X  tasks to the available resources domains within the virtual organization, VO  X f RD 1 , RD 2 , ... , RD j , ... g , where RD sents the j th resource domain, on the basis of the environment state given by the grid features, which we analyze below, and its acquired knowledge. Thereafter, each local resource management system within each RD j , takes charge of the allocation of tasks to its hosts, that is RD j  X f RD j , 1 , RD j , 2 , ... , RD the k th host, each considering different processing power and load corresponding to heterogeneity. The general structure of the meta-scheduler within the grid environment presented in this work is illustrated in Fig. 1 . It is shown that the organization of the fuzzy rule-based meta-scheduler is inspired by the typical modular structure of fuzzy logic systems (FLSs) ( Cordo  X  n et al., 2001 ). Thus, the fuzzy rule-based meta-scheduler general structure consists of four well-known systems for FRBSs, to wit, the fuzzification interface , the knowledge base , the inference engine and the defuzzification interface . The specification of these systems has been extensively studied in the implementation of fuzzy systems ( Franke et al., 2007a ). In this work, we focus on the design of the Knowledge Base. As stated before, FRBSs performance is subject to their associated knowledge description and further with the acquisition of this knowledge. In this section we are concerned with the former challenge. That is, we face the specification of the fuzzy rules and memberships functions and theirs associated dynamic inputs characterizing the grid state.
The latter question or knowledge acquisition problem will be addressed in Section 4. Hence, let us now look at the definition and modeling of the knowledge base of the fuzzy system. or knowledge representation and the determination of some concepts associated to the reasoning strategy (i.e. features) describe a FRBS.
According to Mamdani ( Mamdani and Others, 1974 ), a given fuzzy rule R i consists of two differentiated parts, namely, antecedent and consequent parts, related to fuzzy concepts. It must be stressed out here that the consequent part is also associated with a fuzzy concept in Mamdani formulation, contrary to Takagi, Sugeno and Kang definition ( Takagi and Sugeno, 1985 ) that admits analytical functions to describe the consequent part of the rule. Hence, on the one hand, rules activation conditions are reflected in the antecedent part of the rule. On the other, the consequent part depicts the scheduler output or response. This way, a rule within this approach is represented by the following expression:
R  X  if o 1 is A 1 n and = or ... o m is A mn then y is B n  X  1  X  where o m represents a system feature, y depicts the output variable and A mn and B n correspond to the fuzzy sets associated to feature m and output, respectively. Hence, a high-quality RB (rule base) for the fuzzy meta-scheduler must consist of a set of rules able to efficiently face a wide number of grid conditions given by the dynamic inputs or grid system features.

Once the general structure of rules within our fuzzy meta-scheduler has been presented, we proceed to define the system features. As stated before, features are those variables describing the state of the grid environment and so constituting the inputs for the fuzzy system. In this work, we model the state of the system in a way that it can inform about the resource domains current utilization and also to keep track of their past utilization ( Prado et al., 2009 ).
Therefore, the inputs for the fuzzy system are focused both to achieve a good performance in time and a fair resource utilization or balance. Resource domains current utilization features are summarized in
Table 1 . In addition, the resource domain earlier utilization variables are depicted by three different inputs, as described in Table 2 .
It is worth mentioning here that this representation of the grid current state is considered to be complex enough to provide a good description for the fuzzy scheduler whilst keeping a reduced search space for the learning process on the basis of previous works ( Prado et al., 2009 ). In the next section, we will address the formal definition of these features within the fuzzy system data base by means of the combination of several membership functions. 3.1. Membership functions specification and coding of fuzzy rules
From the works of Juang et al. (2000) and Franke et al. (2008) and accordingly to the traditional Mamdani model ( Cordo  X  n et al., 2001 ), we formulate the coding scheme for our fuzzy rule-based meta-scheduler as follows. First, we justify the selection of the membership function. Triangle shaped membership functions are extensively used in fuzzy systems due to their simplicity and efficiency. However, Gaussian functions are said to allow a better description for features since they are able to provide a characterization through the whole domain of existence of features. This is founded on the property for the Gaussian functions: Z where N F represents the number of features considered for the variable and N r is the number of rules making up the RB. Thereby, it is stated in Franke et al. (2008) , that the use of GMFs allows a better coverage of the whole feature space and as consequence, rules are able to provide a scheduling strategy for a major range of possible situations .

Thus, every feature o is modeled considering the combination of three Gaussian membership functions (GMF) with the follow-ing form: g i  X  x  X  X 
It is to be noted that two real values, to wit, mean m  X  o  X  deviation s  X  o  X  i describe each fuzzy set for every feature o and rule R .

Hence, considering a given rule R i as a combination of feature descriptions both in its antecedent and consequent part, we may depict it by the following expression: R  X f g  X  1  X  i  X  x  X  , g  X  2  X  i  X  x  X  , ... , g  X  N F  X  i  X  x  X  , O where the recommendation vector O i , represents the consequent part of the rule, thus consisting of the rule weight, output feature and input features connector. For simplicity, in this work different weights for rules are not considered and so all rules within the RB presents the same influence. Fig. 2 shows that every input feature, presented in Tables 1 and 2, is defined by three membership functions, depicting the low , medium and high fuzzy sets. In addition, the output of the fuzzy system ( RD selection factor) is represented by five different fuzzy sets, namely very l ow, low, medium, high and very high . Note that normalized values for both input and output features are illustrated in Fig. 2 . In sum, we may define a RB as a set of N r rules: RB  X f R 1 , R 2 , ... , R N r g X  5  X 
Next, we entail the description of the proposed learning mechanism for the fuzzy RB evolution. 4. Proposed learning system based on GAs
Given the dependence of the fuzzy scheduling performance with the quality of its knowledge base, we seek the system to learn and so to evolve its knowledge base through an off-line process. To be precise, in this work we concentrate on the evolution of the rule base whilst keeping the definition of the membership functions describing the system features fixed. With this aim we suggest a novel strategy based on Michigan and Pittsburgh approaches to obtain an evolutionary rule-based scheduling system using only a confined number of simulations. Hence, in this section we will first pursue the description of the scheduling objectives making up the complex function to be optimized as to then analyze the proposed learning strategy. 4.1. Performance index
One of the most striking aspects of the scheduling problem is the definition of the scheduling objectives or scheduling criteria. What we are mainly concerned with here is the formulation of a performance index able to efficiently describe the scheduler performance and thus to let the learning system to adequately evolve its FRBS rule base. As mentioned in Wieczorek et al. (2009) , the design of a fitness function addressing multiple-criteria is not an easy task, since it is generally not possible to find a solution that reaches the  X  X  X est X  X  performance for all the metrics at the same time. In this work, the complex scheduling strategy considers the following goals.

Average weighted response time ( AWRT ) for the user group ( Franke et al., 2007a ). In a grid environment, one of the main aims is to generate the schedules as fast as possible. Thus
AWRT is chosen as a time indicator for improving the system performance. Further, it is shown that this metric is also important from the users point of view since its minimization is subject to the minimization of all considered users groups. AWRT i  X  where a i represents unity in case task j belongs to i users group and zero otherwise; CT j indicates the completed time for task j of all N T tasks; SB j denotes the submitted time for task j of all N T tasks.

Average inter-resource domain load balancing ( ALB ): This metric addresses the problem of optimally spreading workload within the different RDs from the resources perspective. That is, it pursuits a balanced utilization for the different considered
RDs. To this end, we propose the following definition for average inter-resource domain load balancing : ALB  X  where N the number of the considered resource domains; R i the number of resources in RD i ; TR the total number of resources considered; ET i the number of executed tasks executed in RD i ; TET the total number of executed tasks in the grid. It can be inferred from the expression above, that this metric is designed in order to achieve a fair RD utilization.
However, the fair utilization of hosts within these RDs depends on each LRMS policy.

Average response ratio ( ARR ): In this work we also suggest to use average response ratio (ARR) as a performance metric. As stated before, AWRT is able to offer a time metric considering users groups. However, we consider it is also efficient to provide a time performance parameter without considering users differentiation. response ratio (RR) describes the time a user expects to wait before receiving the results of a given task, and so it can provide a measurement of the quality of service (QoS) of the whole scheduling strategy from the perspective of response time. Average response ratio is defined as follows ( Weng and Lu, 2005 ): ARR  X  with T j denoting the duration of the execution for task j .
Users groups prioritization : Franke et al. (2008) states that groups prioritization can be specified by the consideration of linear objective functions. In this work, we use the aggregation of the AWRT for the different groups subject to their priority 0 0.2 0.4 0.6 0.8 1
Taking into consideration the definition of two different users groups (two-level prioritization), with group 1 representing all users with the highest resource consumption or tightest con-straints and group 2 considering those users with low require-ments, we state that the scheduling overall objective is made up of five simple scheduling goals. We may point out that, whereas
Average Weighted Response Time ( Franke et al., 2007b ) and average response ratio ( Weng and Lu, 2005 ) formulations are based on previous definitions, average inter-resource domain load balancing formulation is suggested as an alternative for the load balance evaluation. Further, on the basis of previous experience in the evaluation of grids performance ( Prado et al., 2009 ), we suggest the combination of these three metrics as an efficient approach for the system performance index definition where the fitness function is bounded by average inter-resource domain load balancing and average response ratio thresholds. 4.2. Learning strategy optimal solutions in complex search spaces inspired by natural evolution processes which are increasingly used to solve optimi-zation problems in many computational fields ( Davis and
Mitchell, 1991 ). Within this work we apply GAs to the fuzzy rule-based scheduling system as to improve its performance where performance is depicted by the fitness function described in Section 4.1.

Our previous works on the incorporation of rule evolution mechanisms for fuzzy schedulers, indicate that classical strategies based on GAs for knowledge learning, such as Michigan and Pittsburgh approaches, perform well in terms of convergence behaviour and final result ( Prado et al., 2009 ). However, as the complexity of the grid system description increases (what is desirable given the different number of variables to control in a grid environment) the computational effort also increases drasti-cally. Hence, based on the analysis of these learning strategies X  convergence behaviour and the associated computational cost for a wide variety of configurations for the set of evolution parameters, we suggest a novel learning system that takes advantage of each approach strengths. Thus, we seek the proposed learning strategy to be able to reduce the computational effort whilst achieving as good final results as the classical genetic learning strategies.
Fig. 3 depicts the general structure for the learning system. It is shown that the learning system is made up of three basic systems each addressing a different stage of the learning process.
The initial learning system faces the generation of the initial rule base, subject to evolution, with its rules as individuals of the population. It corresponds to the first learning stage and it is based on Michigan approach.

The rules bases discovery-integration system is responsible for the generation of the RB population required for the final learning system . It considers the integration of the evolved RB or  X  X  X ood X  X  genes obtained in the previous stage in a single or multiple way. That is, a RB may be incorporated several times in the candidate population for the next stage as to increase the presence of considered good qualities.

The final convergence learning system represents the last learning stage where the learning system provides the final set of rules achieved by a Pittsburgh-based learning strategy. The whole learning process can be summarized as follows. First, in the initial learning system , a single rule-population or RB is randomly generated, so that a set of well suited rules does not need to be established in advance, which is usually quite difficult due to the typical large search spaces on grids. Thus, for this initial stage it is only necessary to specify the number of rules constituting the Rule Base. Moreover, the initial learning system is responsible for the initial exploration of the search space of the rules population, that is, it evaluates the quality of each rule within the RB for a fixed number of generations which is proposed as the stopping condition in our computer simulations. The aim of this first stage is to faster obtain a single set of well suited rules by means of Michigan approach ( Booker et al., 1989 ). According to Michigan approach, each rule within a whole a RB can be encoded as a single individual of the population, thus being subject to genetic processes (i.e. selection, crossover and mutation). As it can be inferred, Michigan approach considers the exploration of a single RB contrary to other classical approaches such as Pittsburgh approach ( Smith, 1980 ) where the candidate population is made up of a set of complete RBs, with the following increase in the number of evaluations at each generation. Therefore, in the first learning stage we suggest to reduce the search space, by means of considering a single RB exploration, and thus to initially decrease the computational effort and to faster obtain a good quality RB.
However, to optimize the accuracy of our learning strategy, we suggest to further enlarge the learning process by undertaking the examination of a broader search space. As mentioned before, Pittsburgh approach is a genetic strategy for rules evolution that considers a whole RB as an individual of the population and so the number of possible combinations compared to Michigan approach increases significantly in a fixed number of iterations (also note that each candidate RB can be made up of different number of rules). Hence, we suggest to improve our previous evolved RB by means of a Pittsburgh-based approach. To this end, once the initial learning system has obtained a good quality RB, the rules bases discovery-integration system incorporates the acquired knowledge into the candidate population for the Pittsburgh-based stage. That is, we seek to start a Pittsburgh-based learning approach, but contrary to the Michigan-based approach, the process incorpo-rates from its start  X  X  X ood X  X  genes or chromosomes (i.e. a well-suited set of rules) whose further evolution is desired in order achieve the highest accuracy as possible in the fuzzy system scheduling decisions. Hence, Michigan-based approach is chosen for the initial learning considering its reduced number of evaluations and so to faster obtaining of a high-quality RB, whereas Pittsburgh-based approach is selected as to optimize the RB precision in a process requiring further computational cost. In Section 5, we will address this novel learning strategy perfor-mance compared to other classical approaches and we will analyze the set of evolution parameters allowing the best performance.

Both the initial learning system and the final convergence learning system merit a closer examination and so they are analyzed in the following sections. 4.2.1. Initial learning system
As we stated above, the first learning stage considers the rule learning by means of a Michigan-based approach. Accordingly, each rule is taken as an individual or chromosome of the population or considered RB which evolves by interaction with the environment. There exists several schemas for the Michigan genetic learning. In this work, we suggest the following structure ( Cordo  X  n et al., 2001 ): 1. Performance system : The role of finding a suitable index able to efficiently describe the system performance and so to conduct the optimization process is considered to be critical for the learning strategy convergence. The performance system is responsible for this task. It must interact with the environ-ment, evaluate the system performance and determine each rule X  X  influence on the obtained results. As evident, this evaluation is associated to the fitness f described in the previous section. Hence, we formulate our objective as minimizing f or cost function through a finite set of N generations and so we define f min and f max as the minimum and maximum values, respectively, obtained for the fitness through the whole genetic learning. These two factors together with the previous generation fitness f n 1 , are introduced in the system performance index ( SP n ) description as a way to evaluate the results compared to the last iteration perfor-mance as well as to the overall process up to the current generation. Thus, this index is able to characterize the system behaviour considering a wide perspective of the whole process and not limiting to a step by step improvement or deteriora-tion evaluation. On the basis of the works of Cordo  X  n et al. (2001) , the system performance at generation n is formulated as follows:
SP
As mentioned before, the performance system must provide an index able to efficiently evaluate the contribution or influence of each rule to the obtained result. With this aim we may use the rule influence RI i , n for each individual in the set of rules at generation n ,
RI
It is shown that this metric considers the degree of member-ship of the rule under discussion to the fuzzy set A , suggested in the consequent part this rule with f l representing the bounds of the Universe of discourse of f . Hence, we assume the evaluation of a given rule i at generation n to be described as the combination of the whole system performance at that generation and its associated influence,
E
Finally, each individual of the candidate population must update its strength. The rule X  X  strength is a metric depicting the rule contribution in the improvement of the system performance, both by its own activation and by its cooperation in the activation of other  X  X  X ood X  X  rules. This metric is called a conflict-resolution parameter whose utilization is relevant for the credit assignment system or credit apportion system implementation, as we will analyze below. Hence, rules update their strength considering the polarity of its evaluation. That is, if the whole contribution is positive, i.e. E i , n Z 0, rules must increase their strength and so their probability to be included in the final RB. Dual considerations can be made for negative evaluation, i.e. E i , n o 0. Thus, the strengths updating can be 2. Credit assignment system : It is responsible for the regulation of 3. Classifier discovery system : It drives the generation of new rules 4.2.2. Final convergence learning system designed on the basis of Pittsburgh rules evolution strategy.
According to this approach, each individual of the genetic system encodes a whole RB and so the population is made up of a set of
RBs ( Smith, 1980 ). Within our approach, some of these RBs are assumed to have already proved their good performance and so they are introduced as to obtain further improvement. There may exists several configurations for the Pittsburgh approach. We consider the following structure for the final convergence learning system . 1. Performance system : The Pittsburgh-based performance system associated fitness must be obtained and thus we propose it as to improve the system accuracy. 2. Rule-base discovery system : As in the Michigan approach, we also consider the application of three genetic operators to evolve the RB population. Thus, we suggest to configure the
Pittsburgh learning by elitist selection, two-point crossover and decreasing exponential mutation.
 In the next section, we analyze the behaviour of the fuzzy meta-scheduler within a grid environment and compare its outcomes with respect to other classical scheduling systems. Further, we study the experimental results achieved by the proposed learning strategy in order to present its improvements in performance from the point of view of final results, convergence behaviour and computational cost over the classical genetic rule-evolution systems. 5. Performance analysis
A number of simulations were carried out to evaluate the performance of the meta-scheduler within a grid scenario. To this end, we designed a grid scenario based on gridsim sim toolkit ( Sulistio et al., 2007 ). Gridsim is extensively used for simulation of scheduling on grids since it provides a wide range of facilities for the integration of heterogeneous resources, administrative do-mains topologies, applications and modeling of resource brokers. In this paper, the testbed environment consists of five RDs each considering a different number of hosts (uniformly distributed among 12 X 36) and different computational power (i.e. machines processing power ranging from 12000 millions instructions per second (AMD Athlon 64 Dual Core, 2.2GHz) to 18500 MIPS (AMD Athlon FX-57, 2.8GHz)) corresponding to heterogeneity and connected through broadband high-speed networks (WANs-1Gbit/s-Gigabit Ethernet). Moreover, in order to further increase the grid scenario realism, both hosts and network links are provided with background load and traffic, respectively, obtained from existing installations traces (LANL Origin 2000 Cluster, Nirvana and SDSC Blue Horizon ( Sulistio, 2007 )). Several opera-tional grid networks loads, such as EGEE/LCG Grid infrastructure, are said to be accurately described considering a Poisson task generation, see Christodoulopoulos et al. (2007) . Hence, each experiment addresses the allocation of a number of independent tasks following a Poisson distribution with user groups priority set to y 1  X  2 y 2 . Examples of this kind of workloads can be found in BoT applications (i.e. independent tasks with no ordering neither intercommunication) as we stated in Section 1.

Fig. 4 shows the relative improvements of the proposed fuzzy rule-based scheduling system using RBs obtained from both Michigan and Pittsburgh learning processes, with respect to other scheduling strategies covering the major part of current installations, namely EASY backfilling ( Wong and Goscinski, 2008 ) and QoS guided min X  X in ( He et al., 2003 ). Simulation results indicate that using fuzzy logic in the implementation of a grid meta-scheduler can improve the performance of the schedul-ing in terms of fobj , approximately 6% (6.38% for Pittsburgh-based and 5.45% Michigan-based approach) compared to the best of other strategies. However, since the fuzzy scheduler performance depends on the quality of its knowledge, these results are subject to the achievement of high-quality RBs and further to their associated learning process (in addition to data bases construction which is out of the scope of this work). As shown in Fig. 4 , both Michigan and Pittsburgh approaches prove to efficiently evolve a given set of rules in a confined number of generations in a way they optimize a given fitness and thus to provide a high-quality RB. Nevertheless, these approaches present a different conver-gence behaviour and require different computational effort for the evaluation of each generation of candidate RBs, affecting the whole system performance.

Moreover, it is to be noted that the configuration of these rule evolution strategies decisively influences on their performance. That is, in order to establish a fair comparison among the different learning strategies we need to carefully study the configuration for the set of evolution parameters. To this end, we conducted an experiment considering a wide range of configurations. After laboratory tests, we decide to examine Pittsburgh approach, considering a population of {20, 30, 40} random RBs, and Michigan approach with a population of {10, 12, 14, 16} rules. Further, we assume for both approaches a selection factor ranging from 0.9 to 0.6, that is {0.9, 0.8, 0.7, 0.6}, and mutation in each generation n , following a decreasing exponential function with initial mutation M o fixed to {0.1, 0.05, 0}, where N represents the number of generations or stopping condition and c is a constant fixed to 5 for this experiment. Table 3 summarizes the considered values for the set of evolution parameters.

It can be inferred that the combination of these parameters with the different populations allows 36 experiments for Pittsburgh approach and 48 for Michigan approach. Each simula-tion was repeated 30 times with changing seeds and the value for the fitness, fobj (s) is recorded. We must underline here, that within this work we are concerned with the optimization of AWRT for two different users groups. However, as we studied in
Section 4.1 this objective is subject to the thresholds depicted by average response ratio and average inter-resource domain load balancing , fixed to 0.25 and 0.2, within these experiments, on the basis of similar problem formulation ( Weng and Lu, 2005 ). Fig. 5 shows the fitness values for Michigan and Pittsburgh approaches for the considered configurations in 250 generations after validation.

We observe that Michigan approach presents its best results when considering high selection rates, namely 0.9 and 0.8, with no significant distinction among the considered populations (configurations {1 X 6}). Further, the best performance is achieved with initial mutation set to a medium value, 0.05 (configurations {2, 5}). Contrary to Michigan approach, Pittsburgh results depend greatly on the considered population size. Although all the populations show a tendency to perform better when considering the highest selection rate, that is 0.9 (configurations {1 X 3}) and medium values for initial mutation (configuration 2), there exists a relevant difference in the performance of the three sets. The population considering 20 RBs clearly presents the worst results for the fitness in the considered number of generations. However, it also must be underlined that it presents the lowest computa-tional effort, requiring up to 20 RB evaluations in a generation.
Let us now examine the results from the point of view convergence behaviour. Fig. 6 shows the convergence behaviour of these two classical approaches in the proposed scenario for the best configurations, that is Michigan {12, 0.8, 0.05} and Pittsburgh {30, 0.9, 0.05}. The results show how Michigan approach requires around 200 generations to achieve a result 98% close to its convergence value in contrast to Pittsburgh approach who 8.400 8.900 9.400 9.900 10.400 fobj (s) requires almost 60 generations to reach a fitness value 98% close to its final result. Moreover, it is shown that Pittsburgh needs 12 generations to achieve the 98% final result of Michigan. We must point out here that the number of RB evaluations for Michigan equals the number of generation since at each iteration a single
RB is evaluated. However, the number of evaluations in a generation for Pittsburgh approach depends on the considered population and selection factor. Herein, assuming a configuration for Pittsburgh approach of 30 RB and selection factor of 0.9, which has proved to achieve the best convergence results for Pittsburgh approach, 12 generations is translated to (30  X  30 0 : 9 11) 327 evaluations. That is, 200 RB evaluations against 327. This way, after validation, it is proved that Michigan approach requires almost 8.25% less execution time as Pittsburgh approach to achieve a result 98% close to its convergence. However, our experiments also show that Michigan approach does not perform as well as Pittsburgh approach in terms of final convergence in a confined number of generations. Fig. 6 illustrates that Pittsburgh approach is able to reach a final convergence result 2.36% lower than Michigan approach considering the same number of RB evaluations. Therefore, Pittsburgh approach is a good alternative to increase the accuracy of the learning system. Within this work we seek to achieve the highest quality for the RB and so a
Pittsburgh based approach is proposed to improve the system convergence.
 the same best configuration in number of RB evaluations and considering the integration of up to five suited genes (i.e. incorporating the RB obtained in the Michigan-based stage in a multiple way) by the rules bases discovery-integration system of 30 experiments. Concretely, in this paper, randomness in the selection of insertion parameter is introduced so that it is not arbitrarily fixed. Hence, in our simulations, the number of  X  X  X ood X  X 
RBs from Michigan step is randomly selected, in a way that pre-evolved individuals conform a random percentage between 1% and 15% of the final population. Moreover, this selection is driven by a uniform distribution function. This way, since Pittsburgh best configuration considers a population with 30 individuals, the number of bases previously evolved by Michigan is randomly selected in a range that varies between 1 and 5 in every simu-lation. Also, it must be underlined here that the convergence behaviour is depicted in number of RB evaluations. Thus, in the first learning stage or Michigan-based stage (200 generations) the convergence representation is almost continuous, since within this approach generations correspond to evaluations. In contrast, the Pittsburgh-based stage convergence representation results in several steps, what it is reasonable considering that each
Pittsburgh generation requires a candidate-population number of evaluations to obtain its fitness. As it is illustrated, the final convergence value is achieved in 1866 RB evaluations, whereas
Pittsburgh approach requires for the same configuration 1974 RB evaluations (30  X  0 : 9 30 72 generations). Thus, the final number of required RB evaluations is also reduced in a 5.47%, reaching the same final convergence as Pittsburgh learning process.
In sum, our experiments show that the proposed learning system is able to provide a high-quality RB with a significant decrease in computational cost compared to Pittsburgh approach whilst also achieving the accuracy of this approach for the final RB. In addition, experimental results show that our fuzzy scheduling improves the results around 6% compared to other classical scheduling systems for grid, EASY Backfilling and QoS guided Min X  X in, using a well-suited RB. 6. Conclusions
Finding an efficient scheduling strategy is a major challenge in the implementation of high performance grids. In this paper we presented a Fuzzy rule-based meta-scheduling system integrating a novel learning system inspired by the classical genetic evolution strategies. The suggested learning seek to efficiently improve the knowledge of the fuzzy system, thus obtaining the highest quality for the RB with the minimum computational cost. In particular, we analyzed the improvement of the fuzzy scheduling system by the incorporation of a Michigan and Pittsburgh approaches-based strategy following a complex performance index considering overall weighted response time , inter-resource domain load balan-cing and average response ratio , in addition to users differentiation. Extensive simulations show that the proposed learning system is able to obtain a good quality RB with a computational cost reduction of 8.25% in the initial convergence and of 5.74% in the whole learning process. Hence, it allows to faster and more accurately obtain a suited RB than classical genetic learning strategies. Furthermore, traditional scheduling methodologies extensively used in real installations, such as EASY backfilling and QoS guided min X  X in are compared with the proposed fuzzy scheduler considering the acquired knowledge. Results indicate that the proposed fuzzy rule-based scheduling system reduces AWRT in almost 6% to the best of its competitors. This way, this is again a further step towards the development of flexible and efficient scheduling systems that adapt to the inherent dynamism and diversity of grids and work-flows constrains.
 Acknowledgements This work has been financially supported by the Andalusian Government (Research Project P06-SEJ-01694).
 References fobj (s)
