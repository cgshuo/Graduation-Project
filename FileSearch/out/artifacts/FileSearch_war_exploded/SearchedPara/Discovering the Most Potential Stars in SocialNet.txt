 As the online social communities become prevailing, more and more daily social activities now take place in Social Networks (SN for short) due to convenience and low cost. The importance of the role which every single member plays in the SNs is attracting more and more attention. Because those important members in the SNs, usually known as stars, e.g., well-known companies, popular actors, fa-mous scholars, attract more public attentions, obtain more trusts, and also take more responsibilities. Under the circumstances, member promotion, which aims at finding the most potential star member(s) to perform promotions, has been introduced into the literature recently [ 11]. As a matter of fact, most promotions are multi-objective in real applications, e.g., both authoritative and active ex-perts, creative, skilled and even experienced workers. The skyline operator has thus been introduced to measure the importance of the members in SNs in [11]. Provided that a point a in a set D is as good or better in all dimensions and better in at least one dimension than another point b in D ,wesay a dominates b . The skyline of D is defined as those points that are not dominated by any other points in D . Therefore, the problem of member promotion in SNs is defined as to excavate the most appropriate non-skyline member(s), namely the most potential stars, which can be promoted into skyline at a minimum cost.
An SN is commonly modeled as a directed graph. Intuitively from the graph topology perspective, a member with m any incoming edges embodies authori-tativeness in the SN, while the member which owns a large number of outgoing edges serves as a hub member and helps constructing the network and spreading the information. It is simple but reasonable to utilize the indegree and outdegree as the dimensions for the skyline query. So in order to promote some specific members, we have to tune the indegrees and outdegrees. Intuitively, we employ edge addition as the promotion manner. Based on the assumption that only one edge is allowed to connect any two memb ers in a specific dir ection, we try to add new edges to the target member to increase its indegree or outdegree or both simultaneously, and thus promote it into the skyline.

The contributions of this paper are summarized as follows. 1) We bring for-ward some new concepts such as Infra-skyline and Promotion Boundary for prun-ing the search space and accelerating the computation of the pr omotion costs. 2) Based on the concepts, we propose the InfraSky algorithm which promises high efficiency and minimum promotion cost. Detailed theoretical analyses are pro-vided to prove the correctness and effectiveness of the algorithm. 3) We conduct extensive experiments to show the effect iveness and efficiency of the algorithm.
The remainder of this paper is organized as follows. Section 2 reviews related work. Then we introduce some basic concepts in Section 3. In Section 4, we bring forward a novel pruning strategy and a new manner for promotion cost computation based on Infra-skyline and Promotion Boundary , therefore propose the InfraSky algorithm. In Section 5, we show the results of our extensive exper-iments. Finally, we conclude our study and give some interesting directions for future study in Section 6. Given a set of D -dimensional data points, skyline query, also known as Pareto optimal problem or maximum vectors pro blem, retrieves a subset of data points that are not dominated by any other points [8]. It begins the skyline-related studies for data management as the skyline operator [1]. With the development of these studies, a series of algorithms which are not based on index have been proposed, e.g., Block-nested-loops [1], D&amp;C [1]. By utilizing indices such as B + -tree, R -tree are introduced into skyline query, the index-based approaches re-markably improve the efficiency, e.g., Index [13] based on B + -tree, NN [7] based on R -tree, BBS [9] based on R -tree. As a multi-objective optimization tool, sky-line has plenty of applications in many scenarios, e.g., queries in databases [1], [10], data mining [6], queries in metric spaces [2], [4], road networks [3], spatial spaces [12] and large graphs [15].

Promotion, as an important concept in marketing, has been introduced into data management applicat ions recently. Wu et al. propose an approach to find such appropriate subspaces that the target can be prominent in these subspaces [14]. Query for the points that can be changed to be a skyline point at the minimum cost is studied in [5]. The work only fits the case that the points are independent from each other, however, the change of the metrics of one member in the SN usually affects other members.

Member promotion in SNs is first proposed and studied in [11]. The formal definition is provided and a brute-force algorithm is proposed at first. Based on the characteristics of the skyline and th e promotion process, several dominance-based optimization strategies are proposed to improve the efficiency, and thus leads to the IDP algorithm. However, the optimization strategies are not good enough. The dominance based dynamic pruning strategy costs much time to generate a list of skippable plans and still needs more time to query for a match during the process. And the effect of the pruning strategy is not significant. The dominance indexes will be changed frequently by edge additions during the promotion process, and thus will cause a number of computations. In the worst case when the dominance relationship between the members is rare in the network, the time cost will still be exponential. In this paper, an SN is modeled as a weighted directed graph G ( V , E , W ). The elements in V represent the members in the SN. E includes the existing directed edges between the members. Each weight w in the weight matrix W is the cost for establishing the directed relati on between any two different nodes. The weights are all positive and the cost for establishing a self loop on any member is considered as infinite. The algorithms in [11] are proposed to deal with the SNs in which the weights of the edges are arbitrary positive real numbers. In some cases, however, the weights can be ignor ed or considered as all equal, e.g., in a group in which everyone already knows each other, the cost for any two different persons to build a connection can be ignored, or a probable contagious virus carrier may randomly infect other people with the same possibility in a public place. In this paper we only consider the case that the weights are ignored or all equal only, which is actually a special case of arbitrary weights. For simplicity, all the weights are set to be 1.
 Example 1. Figure 1 shows a sample SN with 10 members ( n 0  X  n 9 ). The solid directed lines represent the directed re lations between the nodes. The dotted ones are some possible connections we can build to promote some members. Using indegree and outdegree of the members as the dimensions of the skyline operator, the skyline members ( n 0 , n 2 , n 3 , n 5 ) are the solid nodes shown in the figure based on the degree distribution given in Figure 2.
 GivenanSN G ( V,E,W ), let S G be the skyline of G, when S G = V , we say node c  X  V  X  S Definition 1 (Promotion Plan). Given an SN G ( V,E,W ) , against each can-didate c , p  X  V  X  V , we define p as a plan for c when p satisfies: (1) p  X  X  e | ( e =( c,  X  )  X  e =(  X  ,c ))  X  e =( c, c )  X  e  X  E } , (2) c  X  S G ,while G =( V,E + p, W ) .
 In order to locate the members which can be promoted into the skyline with minimum cost by adding new plans, we need to define the cost model first. Definition 2 (Promotion Cost). Given an SN G ( V,E,W ) , for any candidate c ,let p be a promotion plan for the promotion against c . The cost of promotion plan p ,markedas Cost ( c, p ) , is the sum of the weights corresponding to the edges included in p . Assume the original vector composed by the indegree and outdegree of c is  X  , after promoted by p ,itgrowsto  X  . Then under the situation of all weights set to be 1, the cost of p can be denoted as the L 1 distance between  X  and  X  ,namely, The function MD here serves as a calculator of the L 1 distance between two vectors. The promotion cost against c ,markedas  X  ( c ) , is the minimum cost among all the promotion plans which can get c promoted, namely, Definition 3 (Infra-skyline). Given an SN G ( V,E,W ) , the infra-skyline of G is the skyline of all the non-skyline members of G ,namely, I G = S G  X  S G , where G -S G is a new SN generated from G by eliminating its skyline members. If we project all the nodes in G into a two-dimensional Cartesian coordinate system using the indegree as the x -axis and the outdegree as the y -axis. Let the projection be m : V  X  N 2 , we project node v into point m ( v ) in the coordinate system. As shown in Figure 3(a), after the projection, the skyline members are the black solid points, while the infra-skyline members are those dark gray solid points. By the way, when two members v 1 , v 2 own the same indegree and outdegree, the two projective poi nts will be coincident, namely, m ( v 1 )= m ( v 2 ). Definition 4 (Virtual Promotion Point). Let K be the projective point set of the skyline members which contains no duplicates, namely K = { m ( s ) | s  X  S G } . contains the points, which belong to K but not on the axes, ascending sorted by x coordinate. There will be | K | +1 virtual promotion points denoted as where s i  X  K , i =1 , 2 ,  X  X  X  , | K | , and we mark the whole set as VP G . Definition 5 (Promotion Boundary). Given an SN G ( V,E, W ) and K ,let b be the mark of a line segment between a skyline projective point s i and its the promotion boundary of the skyline B S G can be presented as: where t i  X  VP G , s i  X  S G , i =0 , 1 ,  X  X  X  , | K | X  1 . Intuitively, we can employ the brute-force algorithm and by far the best algo-rithm proposed in [11], namely the index-based dynamic pruning (IDP) algo-rithm, to solve the problem because the equal-weighted SN is a special case of arbitrary-weighted SN. To be specific, w e use a hierarchy traversal to verify all the possible promotion plans in an ascending order of the size against each can-didate before we get the optimal result in the brute-force algorithm. However, due to the exponential number of possible plans in the search space, most of which are  X  X eaningless X , the time cost of this brute-force algorithm is exponen-tial. We can then use the IDP algorithm which improves the efficiency based on some dominance-based optimization strategies at both pruning stage and result checking stages. Nevertheless, in the wor st case when the domin ance relationship between the members is rare in the network , the effect of the optimization strate-gies will be weakened. As a result, the time complexities of both algorithms are beyond tolerance, especially when it en counters large sparse networks. In this paper, based on the promotion boundary and the infra-skyline, we find the pro-motion process can be notably improved in both candidate filtering and cost calculation. Thus we propose a novel approach, i.e. the InfraSky algorithm, to solve the problem effectively. 4.1 InfraSky After we project all the nodes in G into the coordinate system using projection m , the projective point of the skyline members can be located in the right top contour. From the geometric point of view, the promotion process is just the process of shifting the projective point of the candidate to the contour. As a result, the problem can be described as to find out those members whose projec-tive point can shift to the contour and finally get promoted successfully at the minimum L 1 distance. Intuitively, the algorithm can be obviously optimized on the basis of promotion boundary.

First of all, we need to present two obse rvations on the relationship between promotion boundary and the promotion process.
 Observation 1. Given an SN G ( V,E,W ) , for any candidate c ,let p be a plan for the promotion against c . Let the members in S G which dominate c stay the same during the whole promotion process. We say c is successfully promoted iff m ( c ) exceeds B S G or coincides with one of the projective points of the skyline members, which also belong to B S G .
 However, it is possible that S G will change during the promotion process. But against any candidate c , we just need to ensure those new members or the updated members in S G do not dominate c , and then the result of promotion stays the same. If a dominator of c is unavoidably generated, the plan is not able to promote c successfully, we have to add more edges.
 Observation 2. For any candidate c ,  X  ( c )= min ( d x ,d y ,d i ,d j ) .Theremustbe at least one promotion plan p  X  , the cost of which is the promotion cost of c . Namely, Cost ( c, p ) =  X  ( c ) . d x , d y , d i , d j are calculated as follows. 3) d i = MD( m ( c ) ,vp i ) +2 ( i =1 , 2 ,  X  X  X  ,m ) ,where vp i is a virtual promotion Algorithm 1. Promote ( candidate )
Based on Observation 1, we have already known that the promotion plan with the cost lower than  X  ( c ) does not exist. Assume that all the costs of the promotion plans for c are higher than  X  ( c ), which means the count of the edges contained in each promotion plan should be more than  X  ( c ). Take  X  ( c )= d x for example, there must be at least one promotion plan p whose cost is d x can make m ( c ) exceed B S G or coincide with one of the projective points corresponding to the skyline members. Nevertheless, promotion plans like p are not able to get c promoted, which is an obvious contradiction with Observation 1. The other cases can be verified similarly. The assumption does not hold.

Algorithm 1 presents the method to find the promotion cost and corresponding promotion plans for any candidate based on the observations. Apparently, the members which require larger L 1 distance can be pruned before the promotion. From the geometric point of view, the L 1 distances between the members in B I G and those in S G are no larger than the distances between the other members and those in S G . According to the observations and the characteristics of skyline, we can prune the candidate set to C G basedonthetheorembelow.
 Theorem 1. Given an SN G(V, E, W), any optimal candidate c must belong to C G ,where C G = I G { c | c  X  S G  X  m ( c )  X  B I G } .
 Algorithm 2. MemberPromotion ( G ) Proof. Let n be such a member that belongs to neither I G nor the set { c | c  X  S G  X  m ( c )  X  B I G } .Then c strictly dominates n ,namely, d in ( c ) &gt;d in ( n )and d out ( c ) &gt;d out ( n ). Let p is the optimal promotion plan which can promote c to be as the count of incoming edges and out going edges respectively. Thereby  X  ( c )= d d . Apparently,  X  ( n ) &lt; X  ( c ).
 We can employ Algorithm 1 to perform the promotion process against each candidate and then obtain the optimal candidate and corresponding promotion plans eventually by Algorithm 2. 4.2 Time Complexity Analysis Theorem 2. The worst time complexity of Algorithm 1 is O ( | S G | ) . Proof. It takes O( | S G | ) time to calculate the inter sections and search the pro-jective points which belong to the intercepted part of B S G in the worst case. Actually, we employed the binary search approach to improve it to O(log | S G | ). And searching the optimal candidate also takes O( | S G | ) time. If new dominators of the candidate are generated so that we have to try adding more edges, which is an extremely rare case, we only n eed to add a limited number of edges to get the candidate successfully promoted because adding one edge will increase different dimensions of the two nodes respectively, and thus the dominance rela-tionships are bound to break. Therefore, the worst time complexity of Algorithm 1isO( | S G | ).
 Theorem 3. The worst time complexity of Algorithm 2 is O ( | V | 2 ) . Proof. Among the common algorithms for skyline query, the worst time complex-ity is O( | V | 2 ). And it takes O( | S G | ) time to calculate the promotion boundary, O( | V | X  X  S + | C It is apparent that the efficiency of the InfraSky algorithm is improved by orders of magnitude compared to the brute-force algorithm. In this section, we will present 2 differe nt experiments which make comparisons on time cost and promotion cost respect ively to show the superiority of the InfraSky algorithm on both real and synthetic datasets. 5.1 Experimental Setup All the experiments were implemented using Java with the jdk version 1.6.0 10 and conducted on an Intel (R) Core(TM)2 Duo CPU T7300 @ 2.0GHz machine with 1 Gbytes Ram and 120 Gbytes Hard disk running Windows XP.

Datasets: 1) wiki-Vote : The dataset 1 contains the administrator elections and vote history data in wikipedia community. It consists of 2,794 elections with 103,663 total votes and 7,066 users participating in the elections (either casting a vote or being voted on). Nodes in the network represent wikipedia users and a directed edge from node i to node j represents that user i voted on user j. 2) Power-law Set : We used the graph data generator gengraph win 2 to gener-ate graph datasets in which the degrees of the nodes obey power law distribution. More specifically, gengraph win generates a degree sequence which is composed by a set of integers according to several parameters assigned by user. The pa-rameters include the count of degree numbers n , the minimum degree min ,the maximum degree max and exponent of the power law distribution  X  .Intheex-periments, we generated a series of graph datasets whose degree distributions all obey power law distribution in order to analog social networks in different size respectively with different parameter co mbinations. As to each scale, after car-rying out a large number of experiments b y tuning the parameters respectively, we decide to set max to a random number between 30%  X  n and 50%  X  n , and alpha to a random number in [1, 2.5] to construct a representative network dataset on the basis of both the structure of the network and the efficiency of processing the dataset. 5.2 Experimental Results Evaluation on Time Cost. We conducted this experiment to compare the time costs of the brute-force algorithm, the best so far IDP algorithm and the InfraSky algorithm. Figure 4 and Figure 5 show the differences of time costs between the algorithms in wiki-Vote and Power-law Set respectively. All the time costs obtained in this experimen t are the average value of 10 different networks of the same scale, which are generated by tuning parameters.
Figure 4(a) and Figure 5(a) show that the InfraSky algorithm remarkably defeats the other two algorithms in both datasets. The larger the scale of the network is, the more obvious the super iority in efficiency of the InfraSky al-gorithm is. Furthermore, the brute-force algorithm and the IDP algorithm is limited by the scale of the network. Fig ure 4(b) and Figure 5(b) present that the time costs of brute-force algorithm and IDP algorithm become intolerable as the scale increases to some extent i n both datasets so that the time can not even be displayed in the figures. In the mean time, the InfraSky algorithm still can finish within an acceptable time, whic h further proves its high efficiency and universality. As shown in Figure 4(b), for instance, when the scale of the network reaches 2000, the time cost of the brute-force algorithm is too high to tolerate, actually it takes far more than 2 hours. And the IDP algorithm also needs more than 10 minutes while the InfraSky algorithm can finish in 78 milliseconds. So the results of both two algorithm are even not able to be shown in the figure. As the scale grows to 7000, the time cost of our algorithm can still finish in less than 400 milliseconds. The result is similar in the Power-law Set as presented in Figure 5(b). Obviously, the efficien cy of the promotion process is greatly improved by using the InfraSky algorithm. And the overall trend is in accord with the time complexity of the InfraSky algorithm.
 Evaluation on Promotion Cost. In this experiment we first randomly picked one of the non-skyline members, and then we kept adding edges one by one, which were randomly selected from the available edges corresponding to the candidate, before the candidate was successfully promoted. The average count of added edges in 10 repeated experiments was tak en as the promotion cost result of the method. Then, we ran the InfraSky algorithm to get the minimum promotion cost. Figure 6(a) and Figure 6(b) illustrate the comparison of the promotion costs on both datas ets respectively.

As shown in Figure 6(a) and Figure 6(b), it takes higher costs to promote the candidate successfully with the random promotion method against random non-skyline candidate than the InfraSky algorithm which always provides the optimal promotion cost. Even in a small-scaled network which contains only 500 nodes, the promotion cost of the InfraSky algorithm is only 1, while it takes 13.6 edges in average to finish the promotion in the random way on wiki-Vote ,and2for the InfraSky algorithm, 2.5 for the random method on a synthetic network with 20 nodes in Power-law Set . As the scale of the network increases, the difference between the two promotion costs grows rapidly in general. In addition, because of the different parameters and the ra ndom network data, the overall trends of the promotion costs generated by the t wo methods both show a certain degree of volatility in Figure 6(b). However, the promotion costs of the two methods vary in the same pattern as the scale changes, which means both methods are able to reflect the changes of the network correctly. According to the characteristics of the s kyline, we proposed several new concepts such as infra-skyline and promotion boundary. Based on that, we proposed an effective approach, namely the InfraSky algorithm, to solve the problem of mem-ber promotion in SNs. The theoretical analysis and extensive experiments show the effectiveness and efficiency of our InfraSky algorithm.

The direction of the future study above all is to provide an effective promotion algorithm in the social networks in which the weights of the edges are not equal. Secondly, we plan to introduce new metrics into the skyline operator which may bring high complexity to the problem. Besides, it will be an interesting problem of great applicable value when it allows more than one member to promote concurrently.
 Acknowledgement. This work was supported by the National Natural Science Foundation of China (No. 61170064, No. 60803016), Tsinghua National Laboratory for Information Science and Technology (TNLIST) Cross-discipline Foundation and the National HeGaoJi Key Project (No. 2010ZX01042-002-002-01).

