 We address the task of recipient recommendation for emailing in enterprises. We propose an intuitive and elegant way of modeling the task of recipient recommendation, which uses both the commu-nication graph (i.e., who are most closely connected to the sender) and the content of the email. Additionally, the model can incorpo-rate evidence as prior probabilities. Experiments on two enterprise email collections show that our model achieves very high scores, and that it outperforms two variants that use either the communica-tion graph or the content in isolation.
 H.3 [ Information Storage and Retrieval ]: H.3.3 Information Search and Retrieval Recipient recommendation, email, generative models
Despite the huge increase in the use of social media platforms, email remains one of the most popular ways of (online) communi-cation. Messages that are sent around via email range from very informal, unimportant chatter to formal, official communication. In both cases it is important that the recipients of the emails are the correct ones: we want to avoid scenarios in which business contacts or clients receive email jokes or other chatter, and at the same time, sensitive, official communication intended for clients should not be sent to friends or family.

To prevent errors in assigning recipients to emails we can use recipient recommendation methods. These methods aim at provid-ing the sender of an email with the appropriate recipients of the email that is currently being written. Previous attempts at recipient recommendation use the communication graph, constructed from previously sent emails [ 9], or the content of the current email [ 2]. A dditionally, previous work typically focuses on predicting recip-ients when one or more seed recipients are given, also known as CC-prediction [ 4, 8]. Finally, previous work typically addresses t he task of recipient prediction by restricting to a sender X  X  ego net-work for prediction. In this paper, we focus on an enterprise set-ting, allowing us to leverage the full content and structure of the communication network, as opposed to taking a strictly local (ego network) approach. Combining signals from email content and the communication graph has been studied, e.g., in e-discovery, where combining keyword search with communication pattern analysis of e-mail corpora reduces the amount of information reviewers need to process [ 3]. Recipient recommendation similarly allows us to gain a better understanding of communication patterns in enterprises, potentially revealing underlying structures of enterprises. We pro-pose a novel hybrid generative model, which incorporates both the communication graph and email content for recipient prediction. Our model predicts recipients without assuming seed recipients and can quickly deal with updates in both the communication graph and the profiles of recipients due to new emails being sent around.
Our main research question is whether combining the communi-cation graph and email content improves recipient recommendation over using either of the two separately. On top of that we investi-gate how we can optimally estimate the various components of our model. We train our model on the Enron email collection and test the model on the Avocado email collection. Our main finding is that a combination of the communication graph and email content outperforms the individual components. We obtain optimal perfor-mance when we incorporate the number of emails a recipient has received so far and the number of emails a given sender sent to a re-cipient at that point in time in our model. Other options, like using PageRank as a recipient prior, do not improve performance.
We construct a communication graph from all emails sent by users in our email collections. We consider the email traffic as a directed graph G , consisting of a set of vertices and arcs (directed edges) h V, A i . Each vertex v  X  V represents a distinct email ad-dress in the corpus (i.e., a sender S or recipient R in terms of our modeling in Section 3), and arcs a  X  A t hat connect them represent the communication between the two corresponding addresses (i.e., emails exchanged). The arcs are weighted by the number of emails sent from one user to the other.

The communication graph allows us to model the network and interactions by considering several graph-based metrics. One ex-ample is to measure a user X  X  relative importance in the communica-tion graph through her PageRank -score. The PageRank algorithm measures a users X  X  relative importance through its connected arcs and their corresponding weights. In this model, an arc is a  X  X ote of support, X  and thus users with a larger number of interactio ns re-ceive a higher score [ 7]. We update our communication graph after e ach email that is being sent. We describe the utility of our com-munication graph for recipient recommendation in Section 3.
We propose a generative model that is aimed at calculating the probabilities of recipients given the sender and the content of the email. Instead of recommending one recipient, we cast the task as a ranking problem in which we try to rank the appropriate recipients as high as possible.

More formally, let R be a candidate recipient, S the sender of an email, and E the email itself. Our final ranking will be based on the probability of observing R given S and E : P ( R | S, E ) . We use Bayes X  Theorem to rewrite this probability: We can explain Eq. 1 as follows: the  X  X elevance X  of a recipient is d etermined by (i) its prior probability (how likely is this person to receive email in general), (ii) the likelihood of this email to be gen-erated from communication between the recipient and the sender, and (iii) the probability of observing the sender with this particular recipient. To obtain the final probability, we normalize using the prior probability of the sender, and the likelihood of observing this email given its sender.

For ranking purposes we can ignore P ( S ) and P ( E | S ) , which will be the same for all recipients. Our final ranking function is displayed in Eq. 2.
 In the next three sections we explain how we estimate the three components of the model: the email likelihood ( P ( E | R, S ) ), the sender likelihood ( P ( S | R ) ), and the recipient prior ( P ( R ) ). We have several options when it comes to estimating P ( E | R, S ) . We could, for example, incorporate individual emails as latent vari-ables. However, in this paper we opt to directly estimate the email likelihood using the terms in the email (viz. Eq. 3).

P ( E | R , S ) = Y In this estimation, P ( w | R, S ) indicates the probability of observ-ing a term w in all emails exchanged between S and R . To prevent zero probabilities, we smooth this probability with the term proba-bility in all emails sent and received by R and the term probability over the whole collection. We introduce three parameters,  X  ,  X  , and  X  , with  X  +  X  +  X  = 1 , to combine the three term probabilities.
Each of the three term probabilities is calculated using the max-imum likelihood estimate, i.e., P ( w | X  ) = n ( w,  X  ) | X | term w in the set of documents divided by the length of this set in number of terms.
We move to the estimation of P ( S | R ) , the likelihood of observ-ing the sender for a given recipient. Here, we use the communica-tion graph constructed from email exchanges. The closer a recipi-ent is in this graph and the stronger his connection to the sender S , the more likely it is that the two  X  X elong together. X  We estimate this connection strength in two ways: by considering (i) the frequency ( freq ), or the number of emails S sent to R at that point in time, and (ii) co-occurrence ( co ), or the number of times S and R co-occur as addressees in an email. More specifically, the frequency-based probability is defined as: where n ( e, x  X  R ) indicates the number of emails sent from x to R and S is the set of all senders in the graph at the current point in time. The co-occurrence-based probability is defined as: where n ( e,  X  R, S ) corresponds to the number of emails sent to both R and S , and n ( e,  X  X ) the incoming email, or number of emails sent to X .
Finally, we introduce a recipient prior, that is, the email indepen-dent probability that a recipient will be observed. This probability is unrelated to both the email at hand ( E ) and the sender of that email ( S ) and can be estimated without knowing these two vari-ables. Again, we can choose from a variety of ways to estimate this prior probability, but we stick to two obvious choices. First, we use the number of emails received by R , normalized by the total number of emails sent at that point in time ( rec ). This estimation indicates how likely it is that any given email would be sent to this recipient. Second, we calculate recipient R  X  X  PageRank score ( pr ) as an indication of how important R is in the communication graph. We put our model to the test using a realistic experimental setup. Our experiments aim at demonstrating the recommendation effec-tivenesss of the individual components of our model, i.e., the com-munication graph (CG) component and the email content compo-nent (EC), and their combination (CG+EC) as in Eq. 3. We opti-m ize our models on the Enron email collection [ 5], and test it on t he Avocado collection, which consists of email boxes of employ-ees of an IT firm that developed products for the mobile Internet market. The two collections are described in Table 1.

F or both collections we follow the same method to select the set of users for evaluation. We first split users into three groups based on their email activity: high activity, medium activity, and low ac-tivity. This way we can study the correlation between a user X  X  level of activity and the model X  X  performance. As email networks typ-ically show a long-tailed distribution [ 6], with a small number of u sers responsible for a large volume of the sent mails, and a large number of users responsible for a small volume, we define a user X  X  activity by taking the log of the number of sent emails. We prune users that have less then 100 sent mails, and compute the resulting distribution X  X  mean (  X  ) and standard deviation (  X  ) and split the dis-tribution into three bins: (i) medium active users (MED) are those between  X   X  1 2  X  a nd  X  + 1 2  X  , (ii) highly active users (HIGH) are the ones over  X  + 1 2  X  , and (iii) users with low activity (LOW) are those below  X   X  1 2  X  . From each bin we randomly sample 50 users, which results in our final evaluation set of 150 users.
Before we start recommending email recipients we allow our model to gather evidence from all email communication up to that point. More specifically, we use an initial construction period to generate the users X  language models and the communication graph. We start to recommend recipients in the subsequent testing period . Table 1: Summary of Enron and Avocado email collections. We l ist the time span in months (Period), total number of Emails, total number of employee addresses (Addr.), the average num-ber of emails sent ( S/p ) and received ( R/p ) per address. Enron 45 252,424 6,145 34 294 A vocado 58 607,011 2,068 174 321 Table 2: System performance (MAP) on the Enron dataset over d ifferent methods for estimating P ( R ) and P ( S | R ) ( X  3). LOW 0 .2207 0.1488 0.2317 0.4365 MED 0.1961 0.2334 0.2116 0.3857 HIGH 0.1016 0.1213 0.1169 0.2060 ALL 0 .1755 0.1676 0.1893 0.3480 During both periods our model is updated for each sent email. W e split each user X  X  period of activity (starting from the user X  X  first sent email, up to the last sent mail) into the construction period , cover-ing 2 3 o f the emails, and the testing period , which is
For each sender in our user evaluation set, we select 10 emails, evenly distributed over the testing period as evaluation points. For each of these emails we rank the top 10 recipients and compare to the actual recipients of the email. We report on mean average preci-sion (MAP), as it allows us to identify improvements in the ranking of recipients. We indicate the best performce in bold face and test statistical significance using a two-tailed paired t -test. Significant differences are marked N / H for  X  = 0.01 and  X  /  X  for  X  = 0.05.
We use the Enron collection to tune the parameters  X  ,  X  , and  X  in Eq. 3, and to decide which methods for estimating the sender ( P ( S | R ) ) and recipient ( P ( R ) ) likelihood work best. The results of the parameter tuning are displayed in Tables 2 and 3. The final s ettings we use for testing our model on the Avocado collection are the following:  X  = 0 . 6 ,  X  = 0 . 2 ,  X  = 0 . 2 , we estimate P ( S | R ) using the number of emails S sent to R , P freq ( S | R ) , and we esti-mate P ( R ) using number of emails received by R , P rec
We compare the found optimal settings for the CG and EC com-ponents to their combination using our training collection (Enron). Table 4 shows that our hybrid model significantly outperforms ei-t her of the single models across all groups of users in the Enron collection, even if the performance increase is modest. The highest performance is achieved in the LOW and MED user groups: lower user activity correlates positively with performance.

We present the results of our final experiments on the Avocado set in Table 4. Compared to the results on the Enron set, which we u sed for tuning our parameters, our model X  X  performance is higher throughout on the Avocado set, both across the different models, and within each subgroup of users. An indication for this difference in absolute performance scores comes from the collection statis-tics in Table 1. Here we see that the Avocado set contains fewer u nique addressees, spans a longer period of time, and contains a larger number of emails per person. As a possible factor contribut-ing to our models X  higher performance on the Avocado collection, we point to the fact that our model has more data available to lever-Table 3: System performance (MAP) on the Enron dataset over a parameter sweep for the parameters  X  ,  X  , and  X  = 1  X  (  X  +  X  ) in Eq. 3 with a step size of 0.2. Table 4: System performance (MAP) on Enron and Avocado. age for ranking a smaller number of candidates. While differe nt datasets may need different models, the consistently high scores show that the components work in isolation and in combination over different datasets.
Similar to what we saw in the experiment on the Enron collec-tion (Table 4), higher user activity generally seems to result in lower p erformance on the Avocado dataset (Table 4). The CG model is a n exception and outperforms our combined model for highly ac-tive users. The combined model achieves significant performance improvements over the content model in each subset of users.
To better understand these patterns, we turn to the characteris-tics of the different user subgroups. We plot the users X  numbers of emails (both sent and received), indicating their activity, and juxta-pose it to the size of their egonet , which corresponds to the set of directly connected neighbors in the communication graph [ 1]. This e gonet represents the users they interact(ed) with, and is indicative of a user X  X  reach or embedding inside the communication graph.
The resulting plot is shown in Figure 1. There is a clear clus-t ering: highly active users who send and receive a large number of emails, also have a larger number of people they interact with. While more textual content allows the generative model to create richer recipient profiles, in turn enabling more informed recipi-ent ranking, there is a catch to a larger egonet too. The sender-recipient communication smoothing in our generative model re-sults in a larger number of high-scoring candidates for highly active users. This makes it more difficult for the ranker to discern the true recipient(s) from the larger pool.
Motivated by the fact that our model is updated at each sent email, we study its performance over time. To get an indication of whether our model X  X  performance improves or deteriorates over time, we apply linear regression on the data points of each model, and fit a trend line. Both the EC and combined model X  X  trend lines have positive slopes at 1 . 36  X  10  X  4 and 1 . 27  X  10  X  4 whilst the CG model has a negative slope (  X  1 . 38  X  10  X  4 indicates that our language modeling approach benefits from the larger amount of textual content it receives for each recipient over time, allowing the generation of richer recipient profiles for bet-ter email likelihood estimations. The CG approach on the other hand, deteriorates over time, suffering from the increased size and complexity of the communication graph. We note that, as time pro-Figure 1: The three user groups in Avocado, showing each u ser X  X  activity against the size of its egonetwork.
 Figure 2: Kendall X  X   X  o ver time, between CG and EC (orange), CG and CG+EC (green), and EC and CG+EC (blue). gresses, the communication graph model  X  X ettles in, X  and becomes less likely to pick up on changing balances or shifting communi-cation patterns in the communication graph. For future work we argue for a time-aware model, that is able to adapt to shifts in the communication graph over time, by taking recency into account.
To analyze the performance of our combined model in compar-ison to the isolated ones, we look at their rankings and compute the Kendall tau rank correlation coefficient (  X  ) between pairs of models. The top plot in Figure 2 shows how agreement between C G and EC is relatively low, centering around the 0 mark with an average of 0.0471. This pattern largely coincides with that of the second plot, which depicts agreement between CG and our com-bined model. The average correlation coefficient is only slightly higher at 0.0562. Finally, the agreement is highest between the EC model and our combined model, at on average 0.7425. The high agreement offers an explanation for the comparatively low perfor-mance of our combined model in the HIGH subset of the Avocado set. The EC model X  X  comparatively low performance (as seen in Table 4), indicates that the combined model is negatively affected b y following EC X  X  incorrect rankings.
In this paper we presented a novel hybrid model for email recip-ient prediction that leverages both the information from an email network X  X  communication graph and the textual content of the mes-sages. Our model starts from scratch, in that it does not assume or need seed recipients, and it is updated for each email sent. The pro-posed model achieves high performance on two email collections.
We have shown that the number of received emails is an effective method for estimating the prior probability of observing a recipient, and the number of emails sent between two users is an effective way of estimating the  X  X onnectedness X  between these two users, and proves to be a helpful signal in ranking recipients.
We identified characteristic weaknesses of our individual mod-els X  robustness to specific circumstances. As witnessed by the de-crease in performance for highly active users, our email content model seems unfit to deal with users that exchange a large number of emails with a large number of people. The deteriorating per-formance over time shows that our communication graph models X  performance suffers with expanding graphs as they develop.
To address both these issues, for future work we propose to in-corporate time into our model. We can, for example, use decay functions to weigh the edges between users and promote more re-cent communication. Similarly, we can use time-dependent lan-guage models that favor recent documents to incorporate time. [1] L. Akoglu, M. McGlohon, and C. Faloutsos. Oddball: [2] V. R. Carvalho and W. W. Cohen. Ranking users for [3] H. Henseler. Network-based filtering for large email [4] Q. Hu, S. Bao, J. Xu, W. Zhou, M. Li, and H. Huang. Towards [5] B. Klimt and Y. Yang. The enron corpus: A new dataset for [6] A. McCallum, X. Wang, and A. Corrada-Emmanuel. Topic [7] L. Page, S. Brin, R. Motwani, and T. Winograd. The pagerank [8] C. Pal and A. McCallum. Cc prediction with graphical [9] M. Roth, A. Ben-David, D. Deutscher, G. Flysher, I. Horn,
