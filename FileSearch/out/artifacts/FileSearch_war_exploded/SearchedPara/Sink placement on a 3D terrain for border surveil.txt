 1. Introduction
Due to their distributed operation ability and scalable cover-age ranges, wireless sensor networks (WSNs) are very suitable for sensing different phenomena over large areas ( Akyildiz et al., 2002 ). Composed of many sensing/communication units and mostly one data gathering unit called a sink, those networks are dispersed over the area to perform the given sensing tasks for as long as possible ( Yick et al., 2008 ). The key steps of the whole life line of a sensor network can be listed as: 1. Deployment of the sensors over the area. 2. Initial discovery and communication between nodes, network formation. 3. Start of environment sensing. 4. In case of an event detection, related data is sent to the sink. 5. (If needed) Routing information update. 6. Network announced dead when sensing or communication quality falls below a certain threshold.

The distributed and automated nature of a WSN makes it tolerant against partial losses of sensing units. This demonstrates
WSNs an increasingly suitable and robust candidate for security operations such as border surveillance. In a border surveillance application, it is of the highest importance to detect any intruder trying to reach the secure site by passing through the border, as shown in Fig. 1 . Nodes of a WSN are deployed in order to properly cover the whole border area, as better coverage will help detect-ing any kind of intrusions that occur within that border.
WSNs should be designed to operate with as little human intervention as possible due to the deployment characteristics.
Sensors are deployed to unreachable areas such as high mountain terrains, underwater fields or not easy to access areas such areas flooded with land mines or poisonous sites like volcanic craters ( Stoianov et al., 2007 ; Werner-Allen et al., 2006 ). Sensors can be deployed to such sites by means of planes or submarines. Both the cost and the characteristics of the deployment necessitate mass deployments and prohibits fine tuning operations.
 Being mostly battery powered and operationally autonomous
WSNs suit to the requirements of such deployments, yet those facts again limit the lifetime of the network ( Sadler, 2005 ). The sensor nodes in time use up their battery capacities one by one, causing outages within the network and the overall network finally dies. Moreover, the sensing quality for especially surveil-lance schemes must be kept over a certain threshold to meet the required operational quality at any time.
 nodes are battery powered and mostly impossible to recharge causing energy limitations. Due to the node architecture and battery usage, the communication ranges of the sensors are limited ( Raghunathan et al., 2002 ). Most nodes cannot reach the sink node directly and routing over other nodes is inevitable. This fact increases the energy burden on the intermediate routing nodes, because the message receiving and submitting operations are very energy consuming and for every operation there is unavoidable energy loss which cannot be lowered without chan-ging the electronic architecture of the nodes. The energy terms for a node is a total of the energy to sense, to receive and to transmit ( Bhardwaj and Chandrakasan, 2001 ). The transmission energy term depends on the distance and the medium, whereas other terms have fixed values. Transmission energy depends on the path loss value, a physical property of the medium and is proportional to the path loss exponent and the distance. Very long communication distances cause high energy consumptions, yet increasing the hop count will increase the receiving costs in the network as the number of sensors to receive the traffic will also increase. For three dimensional terrains, obstructions can also cause communication and sensing disruptions.

Given those facts, it is very crucial to optimize the network parameters as much as possible to increase the sensing quality and the network lifetime. Many approaches have been proposed to optimize the information routing from sensors to the sink, optimize the radio communication between sensors, decrease the battery expenditure by sleep schedules ( Al-Karaki and Kamal, 2004 ; Kahn, 1999 ). One other approach is to adjust the coordi-nates of the sink nodes such that the overall energy loss due to the routing is minimal. Such a problem is called the  X  X  X ink
Location Problem X  X . It can be defined shortly as  X  X  X iven a group of sensors, whose locations, sensing and communication ranges and capacities are known, finding the coordinates of the sink that maximize the lifetime of the network during which a certain performance criteria is always met. X  X  It can be formulated as follows with the parameters defined in Table 1 :
Problem P: max t  X  1 : 1  X  such that
C  X  t  X  4 C R  X  1 : 2  X  where
C  X  t  X  X 
C  X  y  X  t  X  X  E  X  t  X  0  X  X  B i , 8 i  X  1 : 6  X  E  X  t  X  1  X  X  E i  X  t  X  ES i  X  t  X  , 8 i  X  1 : 7  X  ES  X  t  X  X  e S i  X  X A  X 
Here we maximize t , the lifetime of the network. Eq. (1.2) shows that the coverage of the network stays above a threshold value for all times. Eq. (1.3) explains the coverage as the union of areas covered by sensors which are connected to the sink node and still have energy. Eq. (1.4) defines the neighbours of a node as the nodes that are inside the communication range of the net-work and are connected to the sink node. Eq. (1.5) defines a Boolean value which implies whether a node at a given time is connected to the sink or not. Eq. (1.6) shows that the initial battery capacities are the same for all sensors. Eqs. (1.7) and (1.8) show the energy expenditure at each time step. In each step, total energy spent is the sum of sensing operations, receive operations from nodes that this node is one of the neighbours and sensing operations to the nodes that are neighbours. Eq. (1.9) shows the flow of information from and to a node. Eq. (1.10) defines the coverage area of sensor as the field points within the sensing range of a node.
 This problem is somewhat similar to the  X  X  X acility Location Problem X  X . Given a group of demand nodes, a place for the source node is found such that the overall communication (or transpor-tation) cost is minimized ( Balinksi, 1996 ; Drezner and Hamacher, 2002 ). Facility location problem specifies that the demand nodes can directly communicate with the source node (e.g., a customer can go directly to a supermarket). Because of this fact, the sink location problem differs significantly from the facility location problem. In sensor networks, intermediate nodes lose energy due to data routing operations. This requirement adds one more level of complexity to the problem. The coverage of the sensor net-works should be kept above a threshold to perform the required duty. Also, the sink location should be chosen among safe candidates to decrease the risks associated with the nature of surveillance tasks.

The rest of the paper is organized as follows. In Section 2 ,we analyse other works that are related to our approach showing similarities and differences. In Section 3 , we present our modified genetic algorithm by explaining the steps and the decisions made for each step. Section 4 present the results by comparing the algorithm to other heuristics for different parameters on both flat and three dimensional deployment sites. Section 6 summarizes the presented approach and draws conclusions. 2. Related work Literature includes various sink location strategies. Stann and Heidemann (2005) proposed to place the sinks by hand or only random choice. Their optimization depends on the routing itself, rather than the sink placement, hence the sink coordinates are chosen by hand. Das et al. (2004) have chosen to place the sink on coordinates that are outcome of a uniform random distribution, which is similar to their choice of their sensor coordinate distribution. Similar choice for the sink placement is made by
Intanagonwiwat et al. They choose random locations for the sinks and try to optimize the number of sinks ( Intanagonwiwat et al., 2001 ). Random placement is well studied in the literature, as seen in the papers by Handziski et al. (2004) and by Simon and Farrugia (2004) .

Sink placement on the edges of the deployment region is another possible choice. Gnawali et al. (2004) have used the corner locations as sink places for their simulations and experi-ments to find high quality data transmission paths. The same choice of placement is also used by Yu et al. (2004) and Zhou and
Krishnamachari (2003) . Li and Cassandras (2004) and Xing et al. (2005) have also chosen the edges, however they use the mid-point of the sides of the deployment region to place the sinks. Eu et al. (2009) place the sink at the edges of the network, with the main aim to decrease the energy expenditure. Their nodes make use of ambient energy harvesting schemes.

Choosing the centre of the deployment region is another popular choice, which has been employed by Cristescu et al. (2006) , Ganesan et al. (2004) and Maleki and Pedram (2005) .
A somewhat similar choice is to partition the deployment region into clusters and place the sinks at the centre of those clusters instead of the whole region, which increases the topology awareness of the network, such a scheme is employed by Oyman and Ersoy (2004) and Perillo and Heinzelman (2004) .
Solis and Obraczka have tested a variety of sink placement strategies, placing the sink at corner, random, and centre coordi-nates. Then they evaluate the performance of different in-net-work aggregation algorithms in terms of the trade-offs between energy efficiency, data accuracy and freshness ( Solis and Obraczka, 2003 ).

A different and interesting approach for the sink placement is by Akkaya and Younis (2004) . They choose to make the sink mobile, which differs significantly from the other approaches. Their aim is to obtain an efficient routing using a mobile sink.
Mobility of sinks is also exploited by Ye et al. (2002) to increase the efficiency of the flooding based communication scheme.
Kim et al. (2003) use mobile sinks to receive the information from the nodes directly. The nodes do not route the information, instead opt to wait for the sink to get inside the communication range and directly communicate. Sink mobility is also proposed by Marta and Cardei (2008) and Saad and Tourancheau (2009) .
Yet it should be noted that mobility comes with the price of the energy loss caused by frequent network-wide broadcasting. Such broadcasting operation occur since the network will need con-tinuous the position notification to the nodes and corresponding routing updates ( Wu and Chen, 2007 ).

Yang and Lin (2009) try to decrease the load on the sink by adapting the high energy nodes around the sink as base stations and distribute the load between the proposed base stations. Poe and Schmitt (2008) try to place the sink nodes using genetic algorithms, however their objective is based on the delay between the sink and the nodes with no energy optimization assumptions.

In our work, we aim to find the optimal sink location based on the energy expenditure of the overall network. Optimizing the energy expenditure, we also increase the overall network lifetime.
Our method aims to place the node in a more location, suitable for especially surveillance wireless sensor networks. 3. Sink node placement
Sink nodes have been previously defined as the data collection centres to which all the data from the sensors are routed. From a security point of view, the sensing coverage of the network should be above a certain threshold (quality) and the location of the sink should be preferably in a protected and controlled environment to alleviate the risk of attacks on the sink itself. On the other hand, the sink location should provide shorter routes for the sensor nodes and limit the energy due to data transfers as much as possible. In order to provide shorter routes, sensors should be placed uniformly, with the sink placed in the centre of the network. However, this may be disastrous if the sensors cannot cover the deployment area, or the sink is very close to the unsafe side. Such occurrences may render the network totally unusable.
One more complication is the underlying physical terrain, which causes line of sight blockages between the elements of the network. Many approaches in the literature assume that the deployment field is flat and thus nodes are not blocked by the obstructions caused by the undulations of the terrain. For 2D regions, the communication between two sensors and the sensing of a point over the region by a sensor is directly related with the
Euclidean distance over ( x , y ) coordinates. Same operations over 3D regions face another problem, the line-of-sight between two points. The elevation of points in the visual access path between the sensor locations can obstruct the actual communication or sensing path, as shown in Fig. 2 . The differing elevation char-acteristics of the terrain will heavily alter the sensing and communication coverage of WSN. A realistic sink placement approach should take blockages and obstructions into account and aim to minimize the loss caused. Such a modification will increase the complexity of the calculations, yet the results will become much more realistic compared to scenarios with two dimension assumptions. Fig. 3 shows a sample terrain generated synthetically, with a total elevation difference of 50 m.
In WSNs, the lifetime can be defined in various ways based on the target scenario on which the network will be applied to.
The lifetime can be the time until the first node dies, the last node dies, a portion of sensors die, sensed area range falls below a threshold. We used the total sensing area range as a lifetime limiting metric. From the security point of view, death of nodes are not as important as loss of sensing capability over a certain area, due to the fact that a WSN provides redundancy. In this work if the sensing coverage over the monitored area falls below a specified percentage of the initial area then network is pronounced as dead. This parameter, namely the coverage requirement value, must be chosen according to the underlying application scenario. Higher values give better sensing coverage, yet will limit the lifetime, whereas lower values with longer lifetime values may cause sensing quality problems for especially surveillance and security oriented networks.

To find the suitable coordinates for the sink, Genetic Algo-rithms (GA) with simulator-in-the-loop are applied ( Eiben and Smith, 2003 ; Michalewicz, 1999 ). The algorithm is called GAUSS,
Genetic Algorithm Using Sensing Simulation. GAs are adaptive heuristic algorithms with ideas mainly based on natural selection of individuals. They explore the search space of an optimization problem in a semi-randomized manner. Algorithms try to locate regions on search space that will give better performance, using the information gained from previous steps. The techniques used by the algorithms imitate the selection process of the nature, which results in  X  X  X urvival of the fittest X  X . GAs were initially introduced in 1960s and were primarily used in Artificial Intelli-gence area. Later this approach has been applied to problems in combinatorial optimization with some very successful results ( Holland, 1975 ; Telfar, 1994 ).

According to Goldberg (1989) , GAs differ than other optimiza-tion methods in four ways:
GAs work with problem coding instead of actual variables, hence they are problem independent,
The search in the GAs is done between a variety of solutions, this way they are less likely to stuck in a local optimum.
GAs are guided only by the fitness score, rather then problem terrain specific values. GA steps have little information about the problem itself. Such a property makes them applicable to a variety of solutions.

During the search, GAs use stochastic rules rather than deterministic ones.

In our approach with  X  X  X imulator-in-the-loop X  X , the discrete event simulator and the optimizer interact to find the optimal value for the given problem as seen in Fig. 4 . Terrain properties have drastic effects on the performance of the sensor networks.
To build the routing tree inside the network, line of sight between the node pairs are calculated. Using those calculations, the neighbourhood set of each node is narrowed down to the ones that are directly reachable both in terms of energy limitations and terrain obstructions. Moreover, some portions of the field, although they may offer longer lifetime coordinate candidates, are prohibited by the low safety of that location. This problem is solved by the  X  X  X afety weight X  X  parameter, which assigns different weights to the candidate coordinates according to their distance to the safe side, nearer coordinates have high weight, far away ones have low. The aim is to keep the sink in a location above a certain threshold value of safety against attacks. 3.1. Coding
The coding used in the algorithm has a cardinality defined by the length and the width of the area to be covered and sensed, to cover the search space properly. To represent a possible solution, which is a tuple of X and Y coordinates, there are (width height) candidates for each value in the chromosome. The cardinality of the coding is equal to log 10  X  width height  X  ,in order to cover the whole space. For our purposes binary values present enough details about the coordinates over the terrain.
To represent the two dimensional coordinate tuple, a combing method is used as shown in Fig. 5 . While forming the chromosome, the binary values are interleaved to prevent biases to specific parts of the terrain. During coding, X and Y tuples are not combined as XY but as interleaved bits of X and Y coordinate values. This way, crossover operation will be able to preserve a portion of locality values from both X and Y in the new offspring. Note that XY style chromosome tries to carry either X or Y coordinate values to the child genes. In other words children get either X or Y coordinates from each parent. However, interleaving assures that a child get both X and Y coordinate information from each parent. After the crossover, one child gets most significant bits of the coordinates of a parent, whereas the other gets the least significant ones. As a result child carry both X -and Y -information from the parent. 3.2. Genome operators
When the algorithm starts, it randomly creates a population with a predefined size. The crossover method employed is single point sexual crossover. Moreover, single point mutation is employed to increase the diversity within the population. 3.3. Selection
In order to select genomes from the population for mating, the scheme employed is roulette wheel selection. The probability of being selected is directly based on the magnitude of the fitness score. Higher scores increase the likelihood of the individual for selection. The probability is equal to the fitness score of the individual divided by the sum of fitness of the total mating pool.
The fitness scaling method used is linear. 3.4. Fitness function
The most important part of the GAs is the fitness function employed. Choosing a suitable one is very crucial to locate the optimal point of the search space. For the sink placement problem, it is difficult to propose a closed form function that can produce a fitness value (lifetime) for the given coordinate tuple. In order to perform this task, a discrete event simulation is embedded for calculating the fitness value of an individual. The fitness function takes the following parameters as input: The candidate coordinate tuple for the sink location. The sensor network topology, the location of the sensors. The terrain elevation map.
 Sensor communication capabilities and ranges.
 Initial criteria for field coverage.

Given those parameters, the simulation continues until the network coverage cannot be met. The time that passes from the beginning till the simulation ending time gives the network lifetime. This network lifetime is the fitness score for the candidate tuple.

During the network simulation, periodic sensing is performed as a data gathering network. During each period, each node performs sensing operation and sends the data to sink node.
However, since the communication range for nodes is limited and there are obstructions due to the elevation differences in the deployment area, intermediate nodes are used to relay the information en route to the sink. After the sensing and data gathering operations are completed, the coverage of the network is calculated. It should be noted that, the sensing network is basically a  X  X  X ink-centered X  X  communication tree. When the total coverage ratio of the network goes below a certain value, the network is effectively dead. The value is the ratio of the coverage area of sensors at that time to the initial area. This time indicates that the network is no longer alive. Setting this coverage require-ment ratio to 1 will mean that the network will die when any part of the area which was initially covered is no longer reachable for the sink. One important note is that when an intermediate node dies, the  X  X  X isconnected X  X  nodes are also considered dead if they cannot find new routes to the sink, even if they have remaining battery, as shown in Fig. 6 .

A pseudo-code for the GA is given in Table 2 ( Beasley et al., 1993 ). The algorithm begins with selecting a random generation, where each member of population shows a candidate location for the sink. At each generation, crossover and mutation operations are applied. The results, or the offsprings, are submitted to the discrete event simulator to calculate the corresponding fitness score. The discrete event simulator simulates a surveillance net-work over a three dimensional terrain. Lifetime is calculated until the sensing coverage falls below a given threshold. The lifetime value is weighted according to its distance to the secure side. The weighted value is the fitness score for the given sink locations.
For the line of sight calculations inside the simulation, we assumed a small sized antenna for a sensor node and an average height intruder. Since the distance between the sensor and the intruder cannot be more than the sensing range, the earth curvature is assumed to have no effect on the line of sight and the obstruction is caused by the actual elevation differences on the deployment terrain.
 4. Computational experiments
Table 3 . In order to see the effects of the parameters, we have varied the generation count, mutation probability and population size. Based on the results, the basic parameters are selected empirically. All of the results presented are taken from the mean of 40 runs with different seeds. Lifetime results for GAUSS values are compared to two competitor heuristics that we also proposed and implemented. The first heuristic places the sink in the centre-of-mass of the X and Y coordinates of the sensors, named as COM
Deployment. This heuristic aims to minimize the distances between nodes and the sink. On the other hand, second heuristic aims to increase the safety of the sink node by placing it on the secure border. Named as COM Deployment at Border, it places the sink in the centre-of-mass of the X coordinates of the sensors. Y coordinate is the secure border.

The actual lifetime value is the  X  X  X afety weighted X  X  lifetime. In order to emphasize this fact, it is presented as  X  X  X onvulnerable
Operation Period Lifetime Value X  X . Such a lifetime value can be interpreted as the ability of the sink to survive against an attack that can originate from the insecure side of the network. The values presented are for very low battery values in order to keep the simulation times short. Sample simulations have shown that when high battery values are used the results scale up in a similar manner. All the lifetime values are given in minutes. Discrete event simulation parameters are given in Table 4 .
Values for the area shape, the sensing and the communication ranges of the sensor, the sensor count deployed in the network and the simulation coverage requirement value, i.e. the required percentage of the network disconnected when the network is pronounced as dead, are tested. The area shape parameter tests different type areas while the total area size is kept constant. 4.1. Results for flat world scenarios
Different area shapes with the same total area size are tested to understand the effect on the network lifetime. The results are presented in Fig. 7 . Here both parameters of the area (width and height) affect the lifetime in different ways. If the width of the area is large, the network is placed over a long horizontal border, the distance between far away nodes and the sink is relatively high. Keeping the area size constant assures that as the width gets larger, height gets smaller. Similar reasoning also applies where the border width is short, however the height of the area is long, i.e. border constitutes a long and narrow vertical strip from the safe side to the unsafe side. In that case, again, the distance between far away nodes and the sink is relatively high.
Results show that as the network area gets narrower, the lifetime values start decreasing. This can be explained by the longer paths to sink and the formation of bottleneck nodes. Such nodes do not have routing alternatives and stand as the only option when acting as intermediate routing points. When the deployment area is relatively larger, the lifetime gain by the algorithm is around 25%. Moreover, since the network gets narrower, the sink locations are nearer to the border, which decreases the lifetime value margin between GAUSS and COM deployment at border.

Fig. 8 shows the lifetime values for different sensing ranges of the sensors. GAUSS performs better as the sensing range value increases. It should be noted that, as the sensing range increases, sensors create more redundancy to cover the deployment region. A direct result is the ability of the network to survive when intermediate nodes start dying, since there is better chance for a nearby alive sensor node to cover those regions. GAUSS performs much better than the COM deployment and COM deployment at the border heuristics.

Number of sensors deployed in the region are also changed in the simulations and the results are presented in Fig. 9 . Results indicate that there is a stable lifetime gain using GAUSS compared to the other alternatives. We have seen that the lifetime gain by employing more sensors is very marginal after a threshold value.
Such a phenomenon is related with the occurrence of bottleneck nodes. The traffic pattern on those nodes get higher with the increasing number of sensor nodes, hence the gain by deploying more sensors is lost by the induced higher traffic.
 Nonvulnerable Operation Period Lifetime (in minutes)
Nonvulnerable Operation Period Lifetime (in minutes)
Nonvulnerable Operation Period Lifetime (in minutes) and are given in Fig. 10 . It is clear that the most important parameter is the coverage requirement value. High coverage requirement values will increase the sensing reliability of the network, however will severely decrease the lifetime. With high values, the overall network is highly sensitive to particular sensor losses and does not present overall operational redundancy. Such an important parameter must be tuned according to the specific requirement of each deployment. However, a margin of optimiza-tion is still possible as the results indicate.
 possibility of occurrence of bottleneck nodes by reaching out to more sensors while routing. Results for different communication range values are presented in Fig. 11 . However, when this parameter is increased, it will cause higher battery depletions as the energy spent while communication is related to the distance between communicating nodes. The results show that a certain threshold value is sufficient to find an optimal lifetime value.
In our cases, 80 m is observed to be the sufficient range value. 4.2. Results for three dimensional scenarios dimensional deployment fields. Up to 100 m elevation differences are possible over the given terrain and local elevation differences and obstructions do cause line of sight blockages between sensors.
 Sink locations for a sample run on a given terrain are shown in
Fig. 13 . Only a part of the area is shown for visibility purposes. The square sign shows the location found by the GAUSS method, whereas the star sign shows COM and the circle sign shows the
Border COM results. As we can see, the proposed method aims to find a location that has rather large panoramic view. The other heuristics can be stuck in areas that are surrounded by blockages, preventing communication between sink and nearby nodes.
Fig. 14 shows the values for different area shapes where the total area size is kept constant. As expected the lifetime gets better as the area shape becomes more like a square, therefore decrease the mean distance to the sensor nodes. For areas that have very high width, lifetime values are severely limited because of the increased distance between the sink and nodes and less number of routing alternatives. Yet it should be noted that the area shape is generally imposed by the environmental factors and is not possible to modify.

Fig. 15 shows the values for different communication ranges over the given three dimensional terrain. The figure shows that small communication ranges cause very small lifetime values.
Small communication ranges and the terrain obstruction result in very few reachable neighbours for sensors and the death of a couple of nodes disconnect a part of the network and end the network lifetime. The results for GAUSS show up to 20% lifetime increase compared to COM deployment at border and up to 120% compared to the COM deployment.
 Our tests with different sensor counts are shown in Fig. 16 . A steady increase in the lifetime is possible as the number of sensors increases. However, doubling the node count provides only 50% lifetime increase, which may bring the cost issues into mind. GAUSS provides 10% lifetime gains compared to the COM deployment at border heuristic.

Fig. 17 shows the nonvulnerable operation period lifetime values for different sensing range of the deployed sensors. In our cases, the effects of the increased sensing range is weakened by the terrain obstruction. Our results showed that the sensing range is not effective in the given terrain types. Using the proposed GAUSS method, it is possible to have 20% lifetime increases on the average compared to the COM deployment at border heuristic and more than 100% lifetime gains compared to the COM deployment heuristic.

The most important parameter in the three dimensional version is the coverage requirement value. Border surveillance type applications are required to provide a very high level of operation quality. In border surveillance wireless sensor net-works, operation quality consists of the overall sensing and reporting quality of the network. The coverage requirement value sets the minimum acceptable level of quality. If it is set too high, especially for sensing environments with many obstructions, a 5% increase in the requirement may cause up to 35% lifetime decrease. The results of the tests on the coverage requirement value over the test terrain are presented in Fig. 18 . On the average, around 25% lifetime gains are possible using GAUSS, compared to
COM deployment at border. However, a coverage requirement value increase from 90% to 95% will drastically decrease the lifetime values for all of the tested heuristics. The value should be chosen to suit the specific needs of the underlying scenario and the available resources that will be used in the network.
Each data point of all the result figures are taken from an average of 40 runs. We have also performed t -test (with 90% Nonvulnerable Operation Period Lifetime (in minutes)
Nonvulnerable Operation Period Lifetime
Nonvulnerable Operation Period Lifetime (in minutes)
Nonvulnerable Operation Period Lifetime (in minutes) confidence level) on the results to show that the results have statistical confidence. In order to not clutter the figures, they are not drawn on the figures but instead, the intervals for one case are presented in Table 5 . The table shows the confidence interval values for different area shapes over three dimensional terrains.
In the table confidence intervals mostly do not overlap, hence they are statistically significant. For the cases where they overlap, like GAUSS and Border COM on areas with sizes 900 200, the results found by GAUSS is very similar to Border COM since the width of the network is low. In other words, in such cases GAUSS finds sink coordinates very near the safe side border. We have performed those tests for all figures, and they are seen to be statistically significant for most cases where the heuristics behave differently. 5. Performance factor sensitivity analysis a2 k Factorial Experiment using Sign Table Method ( Jain, 1992 ).
We have performed five replications for 2 5 combinations of five parameters presented in Table 6 . The low and high values assumed in the experiments are also given in the table. possible interactions are not listed due to space limitation, which can be derived using the values presented.
 and the interactions among the factors. It is visible that the area shape has the most effect on the resulting value. The experiments show that, for the cases tested, area shape, coverage requirement value, sensing range and the combined effect of coverage require-ment and sensing range have the most important effect on the lifetime values, in the order of significance. The area shape, though being the most important, is mostly unchangeable since it is a physical property of the deployment terrain. However, the coverage requirement value and the sensing range parameters should be carefully tuned to increase the performance of the sensor network. 6. Conclusion
For especially border surveillance, the sink placement is a crucial operation for a WSN. The sink location must result in a long lifetime and at the same time the network should provide network coverage above a quality threshold and the sink should be in a relatively safe location. These facts can present trade-offs, as safe locations for the sink will increase the routing paths from sensors to the sink. On the other hand, choosing locations that provide shorter routes but in the relatively unsafe points of the deployment region will increase the risk of losing the sink earlier than expected due to physical attacks on the sink node. The deployment regions are mostly not flat and sensors are obstructed by the terrain element. Given such restrictions, we presented a GA based heuristic with simulator-in-the-loop, namely GAUSS to find the suitable and relatively better sink locations. The heuristic makes use of discrete event simulation to find the fitness value of the candidates. The fitness value is a weighted lifetime metric that favors safer locations. We have presented results for both flat deployment and three dimensional deployment cases based on simulations. Multiple parameters were varied and the results for different cases are presented to show the actual effect of the GAUSS. The results show that GAUSS does indeed present better results than placing the sink at the centre of mass coordinates or at the borderline. Based on the parameters, lifetime gains between 20% and 100% are possible using the GAUSS compared to the other heuristics. We have also seen that the parameter choices should be carefully made based on the available metrics and resources, since little variations does lead to severe limita-tions on the network lifetime.
 References
