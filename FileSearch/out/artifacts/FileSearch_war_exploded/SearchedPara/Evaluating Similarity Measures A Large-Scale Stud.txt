 Online information services have grown too large for users to navigate without the help of automated tools such as col-laborative filtering, which makes recommendations to users based on their collective past behavior. While many similar-ity measures have been proposed and individually evaluated, they have not been evaluated relative to each other in a large real-world environment. We present an extensive empirical comparison of six distinct measures of similarity for recom-mending online communities to members of the Orkut social network. We determine the usefulness of the different rec-ommendations by actually measuring users X  propensity to visit and join recommended communities. We also exam-ine how the ordering of recommendations influenced user selection, as well as interesting social issues that arise in recommending communities within a real social network. H.2.8 [ Database Management ]: Database Applications X  data mining ; H.3.5 [ Information Storage and Retrieval ]: Online Information Services; I.5 [ Computing Methodolo-gies ]: Pattern Recognition Algorithms, measurement, human factors Data mining, collaborative filtering, recommender system, similarity measure, online communities, social networks
The amount of information available online grows far faster than an individual X  X  ability to assimilate it. For example, consider  X  X ommunities X  (user-created discussion groups) with-in Orkut, a social-networking website (http://www.orkut.com) affiliated with Google. The original mechanisms for users to find communities were labor-intensive, including search-ing for keywords in community titles and descriptions or browsing other users X  memberships. Four months after its January 2004 debut, Orkut had over 50,000 communities, providing the necessity and opportunity for data-mining for automated recommendations. There are now (May 2005) over 1,500,000 communities.

While there are many forms of recommender systems [3], we chose a collaborative filtering approach [13] based on overlapping membership of pairs of communities. We did not make use of semantic information, such as the descrip-tion of or messages in a community (although this may be an area of future work). Our recommendations were on a per-community, rather than a per-user basis; that is, all mem-bers of a given community would see the same recommen-dations when visiting that community X  X  page. We chose this approach out of the belief, which was confirmed, that com-munity memberships were rich enough to make very useful recommendations without having to perform more compu-tationally intensive operations, such as clustering of users or communities or computing nearest neighbor relations among users. Indeed, Sarwar et al. have found such item-based al-gorithms to be both more efficient and successful than user-based algorithms [13]. By measuring user acceptance of rec-ommendations, we were able to evaluate the absolute and relative utility of six different similarity measures on a large volume of data.
The input data came from the membership relation M = { ( u, c ) | u  X  X  , c  X  X } , where C is the set of communities with at least 20 members and U the set of users belong-ing to at least one such community. When we began our experiment in May 2004, |C| = 19 , 792, |U| = 181 , 160, and |M| = 2 , 144 , 435. Table 1 summarizes the distribution.
All of our measures of community similarity involve the overlap between two communities, i.e., the number of com-
Table 1: Distribution of community memberships Users per community 20 9077 50 230.5
Communities per user 1 4173 6 28.0 mon users. If a base community b and a (potentially) related community r are considered as sets of users, the overlap is | B  X  R | , where we use capital letters to represent the set con-taining a community X  X  members. Note that overlap cannot be the sole factor in relatedness, as the size of communities varies greatly. If we only considered overlap, practically ev-ery community would be considered related to the  X  X inux X  community, which was the most popular, with 9,077 mem-bers. The similarity measures in the next section normalize the overlap in different ways.
Each similarity measure we consider is presented as a (pos-sibly asymmetric) function of b and r indicating how appro-priate the related community r is as a recommendation for the base community b . We do not use the result of the function as an absolute measure of similarity, only to rank recommendations for a given base community.
If we consider the base and related communities to be vectors user i is a member and 0 if not, we can measure the overlap as the product of their L1-norms: This quantity can also be expressed in set notation, where we use a capital letter to represent the set containing a com-munity X  X  members: Note that this evaluates to the overlap between the two groups divided by the product of their sizes. When the base community is held constant (as when we determine the base community X  X  recommendations), this evaluates to the overlap divided by the size of the related community, fa-voring small communities. Kitts et al. [9] reported this to be a successful measure of similarity in their recommender system.
Similarly, we can measure the overlap with the product of the L2-norms ( X  X osine distance X  [3, 6, 12]) of In set notation: Note that the square-root in the denominator causes L2 to penalize large communities less severely than L1.
Observe that the L2-norm presented here is equivalent to the widely used cosine coefficient applied to binary data. Moreover, while Pearson correlation has been used previ-ously in recommender systems where ranking data is avail-able, we did not use this measure here since it is generally considered inappropriate for binary data.
Information theory motivates other measures of correla-tion, such as  X  X utual information X  [2]. We chose pointwise mutual information where we only count  X  X ositive X  corre-lations (membership in both B and R). Such a formulation essentially focuses on how membership in one group is pre-dictive of membership in another (without considering how base non-membership in a group effects membership in an-other group), yielding:
Similarly, we can compute the pointwise mutual infor-mation with both positive and negative correlations (e.g., membership in both B and R, or non-membership in both groups). Again, we don X  X  compute the full expected mutual information, since we believe cross-correlations (e.g., how membership in B affects non-membership in R) tend to be distortive with the recommendation task since such cross-correlations are plentiful but not very informative. This yields: M I 2( b, r ) = P( r, b )  X  lg P( r, b )
Salton proposed a measure of similarity based on inverse document frequency scaling (tf-idf) [12]:
We first considered the standard log-odds function, which measures the relative likelihood that presence or absence in a base community predicts membership in a related commu-nity: Empirically, we found this generated the exact same rank-ings as using the L1-Norm, which makes sense because: 1. Logarithm is monotonic and, while affecting scores, 2. Constant factors, such as | B | , do not affect rankings. 3. For | B || U | , P( r |  X  b )  X  P( r ) We formulated a different log-odds metric, which measures whether membership in the base community is likelier to predict membership or absence in the related community: Table 2: Average size of top-ranked community for each measure Table 3: Agreement in top-ranked results between measures. For example, MI1 and IDF rank the same related community first for 98% of base communi-ties. Correlations greater than 85% are in bold.
For a given measure, we refer to the related community yielding the highest value to be the top-ranked related com-munity relative to a base community. The average size of top-ranked communities for each measure, which varies greatly, is shown in Table 2. Table 3 shows how often two functions yield the same top-ranking result. Table 4 shows the top recommendations for the  X  X  love wine X  community. Note that MI1, MI2, and IDF favor very large communities, while L1 and LogOdds favor small communities.

Note that in addition to the obvious correlations between the two mutual-information functions (96%), there is a very strong correlation between IDF and the mutual-information functions (97-98%). Manipulation of the formulas for MI1 and IDF shows: M I 1( b, r ) = P( r, b )  X  lg P( r, b ) Substituting IDF ( b, r ) =  X  P ( r | b )  X  lg P( r ), we get:
M I 1( b, r ) = P( r | b )  X  P( b )  X  lg P( r | b ) + P( Since for virtually all communities b , P ( b ) P (  X  b ), we can approximate:
Thus, MI1 yields a ranking that can be thought of as start-ing with the ranking of IDF and perturbing the score of each ally is not great enough to change the relative ranking of the top scores, leading to MI1 and IDF often giving the same ranking to top-scoring communities. (Note that this pertur-bation quantity is given only to explain the high correlation between MI1 and IDF. Statistically, it is meaningless, since b and  X  b cannot simultaneously hold.)
We designed an experiment to determine the relative value of the recommendations produced by each similarity mea-sure. This involved interleaving different pairs of recommen-dations and tracking user clicks. Specifically, we measured the efficacy of different similarity measures using pair-wise binomial sign tests on click-through data rather than us-ing traditional supervised learning measures such as preci-sion/recall or accuracy since there is no  X  X rue X  labeled data for this task (i.e., we do not know what are the correct com-munities that should be recommended to a user). Rather, we focused on the task of determining which of the similar-ity measures performs best on a relative performance scale with regard to acceptance by users.
When a user viewed a community page, we hashed the combined user and community identifiers to one of 30 val-ues, specifying an ordered pair of similarity measures to compare. Let S and T be the ordered lists of recommenda-tions for the two measures, where S = ( s 1 , s 2 , . . . , s each measure are combined by Joachims X   X  X ombined Rank-ing X  algorithm [7], restated in Figure 1. The resulting list is guaranteed to contain the top k S and k T recommendations for each measure, where k T  X  k S  X  k T + 1 [7, Theorem 1].
Whenever a user visited a community, two measures were chosen and their recommendations interleaved, as discussed above. This was done in a deterministic manner so that a given user always saw the same recommendations for a given community. To minimize feedback effects, we did not regenerate recommendations after the experiment began.
A user who views a base community (e.g.,  X  X  love wine X ) is either a member (denoted by  X  X  X ) or non-member (denoted by  X  X  X ). (We capitalize  X  X  X  but not  X  X  X  to make them eas-ier to visually distinguish.) In either case, recommendations are shown. When a user clicks on a recommendation, there are three possibilities: (1) the user is already a member of the recommended community ( X  X  X ), (2) the user joins the recommended community ( X  X  X ), or (3) the user visits but does not join the recommended community ( X  X  X ). The com-bination of base and related community memberships can be combined in six different ways. For example  X  X   X  j X  denotes a click where a member of the base community clicks on a recommendation to another community to which she does not belong and joins that community. Traditionally, anal-yses of recommender systems focus on  X  X   X  j X , also known informally as  X  X f you like this, you X  X l like that X  or formally as  X  X imilarity X  or  X  X onversion X .  X  X   X  n X  recommendations are considered distracters, having negative utility, since they waste a user X  X  time with an item not of interest. Before run-ning the experiment, we decided that the measures should be judged on their  X  X   X  j X  performance.

Other interpretations are possible:  X  X   X  n X  links could be considered to have positive utility for any of the following Japanese Food/Sushi Lovers (370/3206) Red Wine (208/690) Cheeses of the World (200/675) , . . . , s | S | ) and T = ( t 1 , t 2 , . . . , t | T | + 1 , k t , D ); , k t + 1 , D ); of non-members clicking on a related community who then joined it ( reasons: 1. As the user found the link sufficiently interesting to 2. The user is genuinely interested in the related com-Similarly, it is unclear how to value clicks from a base com-munity that the user does not belong to. Does an  X  X   X  j X  click indicate failure, since the base community was not joined by the user, but the recommended community was, indicating a degree of dissimilarity? Or is it of positive utility, since it helped a user find a community of interest? For these reasons, we tracked all clicks, recording the user X  X  membership status in the base and recommended commu-nities for later analysis. (We did not track whether users returned to communities in the future because of the log-ging overhead that would be required.)
On community pages, our recommendations were pro-vided in a table, each cell of which contained a recommended community X  X  name, optional picture, and link (Figure 2). Recommendations were shown by decreasing rank from left to right, top to bottom, in up to 4 rows of 3. For aesthetic reasons, we only showed entire rows; thus, no recommen-dations were displayed if there were fewer than 3. We also provided a control that allowed users to send us comments on the recommendations.
We analyzed all accesses between July 1, 2004, to July 18, 2004, of users who joined Orkut during that period. The sys-tem served 4,106,050 community pages with recommenda-tions, which provides a lower bound on the number of views. (Unfortunately, we could not determine the total number of views due to browser caching.) There were 901,466 clicks on recommendations, 48% by members of the base community, 52% by non-members (Table 5). Clicks to related communi-ties to which the user already belonged were rare, accounting for only 5% of clicks. The most common case was for a non-member of a base community to click through and not join a related community (42%).

We defined conversion rate (also called precision ) as the percentage of non-members who clicked through to a com-munity who then joined it. The conversion rate was three times as high (54%) when the member belonged to the base community (from which the recommendation came) than not (17%).
We compared each measure pairwise against every other measure by analyzing clicks of their merged recommenda-tions. If the click was on a recommendation ranked higher by measure L2 than measure L1, for example, we consid-ered it a  X  X in X  for L2 and a loss for L1. If both measures ranked it equally, the result was considered to be a tie. Ta-ble 6 shows the outcomes of all clicks, with conversions by members ( X  X   X  j X ) and non-members of the base community ( X  X   X  j X ) broken out separately.

We say that a measure dominates another if, in their pair-wise comparison, the former has more  X  X ins X . For example, L2 dominates L1. This definition, combined with the data in Table 6, yielded a total order (to our surprise) among the measures: L2, MI1, MI2, IDF, L1, LogOdds. The same total order occurred if only  X  X   X  j X  clicks were considered. The order was different if all clicks were considered: L2, L1, MI1, MI2, IDF, LogOdds.
There was great variance in conversion rate by recom-mended community. We examined the 93 recommended communities that were clicked through to more than 1000 times. Unsurprisingly, the ten with the lowest conversion rate all were about sex (e.g., Amateur Porn). Note that members of the base community were far more willing than non-members to join, perhaps because they had already shown their willingness to join a sex-related community. At the other extreme, none of the ten with the highest con-version rate were sexual (e.g., Flamenco). Table 7 provides selected data by each membership combination. Unsurpris-ingly, for all 93 base communities, members were more likely than non-members to join the recommended community.
Users were also able to submit feedback on related com-munities. Most of the feedback was from users who wanted recommendations added or removed. Some complained a-bout inappropriate recommendations of sexual or political communities, especially if they found the displayed image offensive. A few objected to our generating related commu-nity recommendations at all, instead of allowing community creators to specify them. In one case, poor recommenda-tions destroyed a community: The creator of a feminist sex-uality community disbanded it both because of the prurient recommendations that appeared on her page and the disrup-tive new members who joined as a result of recommendations from such communities. We agreed with her that the recom-mendations were problematic and offered to remove them. While anecdotal, this example illustrates how a recommen-dation can have unanticipated consequences that cannot be captured in simple statistical measures. (An informal dis-cussion of users X  behavior when we allowed them to choose related communities can be found elsewhere [14].)
During the above experiment, we became curious how the relative placement of recommendations affected users X  selec-tions and performed a second experiment.
After determining that L2 was the best measure of simi-larity, we recomputed the recommendations and studied the effect of position on click-through. While in our original experiment we displayed up to 12 recommendations in de-creasing rank, for this experiment we displayed up to 9 rec-ommendations in random order, again ensuring that each [10]. 1000 clicks on recommendations occurred. user always saw the same ordering of recommendations for a given community. By randomizing the position of recom-mendations, we sought to measure ordering primacy effects in the recommendations as opposed to their ranked quality.
We measured all 1,279,226 clicks on related community recommendations from September 22, 2004, through Oc-tober 21, 2004. Table 8 shows the relative likelihood of clicks on each position. When there was only a single row, the middle recommendation was clicked most, followed by the leftmost, then rightmost recommendations, although the differences were not statistically significant. When there were two or three rows, the differences were very significant ( p &lt; . 001), with preferences for higher rows. P-values were computed using a Chi-Squared test comparing the observed click-through rates with a uniform distribution over all po-sitions [10].
Orkut X  X  large number of community memberships and us-ers allowed us to evaluate the relative performance of six different measures of similarity in a large-scale real-world study. We are not aware of any comparable published large-scale experiments. We were surprised that a total order emerged among the similarity measures and that L2 vec-tor normalization showed the best empirical results despite other measures, such as log-odds and pointwise mutual in-formation, which we found more intuitive. For future work, we would like to see how recommendations handpicked by community owners compare.

Just as we can estimate communities X  similarity through common users, we can estimate users X  similarity through common community memberships: i.e., user A might be similar to user B because they belong to n of the same com-munities. It will be interesting to see whether L2 also proves superior in such a domain. We could also take advantage of Orkut X  X  being a social network [8], i.e., containing in-formation on social connections between pairs of users. In addition to considering common community memberships, we could consider distance between users in the  X  X riendship graph X . Users close to each other (e.g., friends or friends-of-friends) might be judged more likely to be similar than distant strangers, although some users might prefer the lat-ter type of link, since it would introduce them to someone they would be unlikely to meet otherwise, perhaps from a different country or culture.

Similarly, friendship graph information can be taken into account when making community recommendations, which would require that recommendations be computed on a per-user (or per-clique), rather than per-community, basis. In such a setting, we could make community recommendations based on weighted community overlap vectors where weights are determined based on the graph distances of other com-munity members to a given user. This is a fertile area for future work and yet another example of how the interaction rows of three recommendations. of data mining and social networks is becoming an exciting new research area [4] [11].
This work was performed while Ellen Spertus was on sab-batical from Mills College and a visiting scientist at Google. We are grateful to Patrick Barry, Alex Drobychev, Jen Fitz-patrick, Julie Jalalpour, Dave Jeske, Katherine Lew, Marissa Mayer, Tom Nielsen, Seva Petrov, Greg Reshko, Catherine Rondeau, Adam Sawyer, Eric Sachs, and Lauren Simpson for their help on the Orkut project and to Corey Anderson, Alex Drobychev, Oren Etzioni, Alan Eustace, Keith Golden, Carrie Grimes, Pedram Keyani, John Lamping, Tom Nielsen, Peter Norvig, Kerry Rodden, Gavin Tachibana, and Yonatan Zunger for their help on this research or its exposition.
