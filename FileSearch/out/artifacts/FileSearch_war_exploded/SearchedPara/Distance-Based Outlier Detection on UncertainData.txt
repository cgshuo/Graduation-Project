 Outlier detection is one of the most important data mining techniques with a vital importance in many application dom ains including credit card fraud detec-tion, network intrusion detection, enviro nmental monitoring, medical sciences, etc. Although there exists no any universally agreed upon definition of outliers, some definitions are general enough to give a basic idea of outliers. Hawkins [5] defines an outlier as an observation that deviates so much from other observa-tions as to arouse suspicion that it was g enerated by a different mechanism. In [6] Barnet and Lewis mentioned that an outlying observation, or outlier, is one that appears to deviate markedly from other members of the sample in which it occurs.

Most of the earliest outlier detection techniques were given by statistics. In statistics over 100 outlier d etection techniques have been developed for different circumstances, depending on the data distribution, whether or not the distri-bution parameters are known, the number of expected outliers and the type of expected outliers [6], but most statisti cal techniques are univariate and in ma-jority of techniques, the parameter of distribution may be difficult to determine. In order to overcome problems in statistical techniques several distance-based approaches for outlier detection are proposed in computer science [3], [7], [8]. Uncertainty. Due to the incremental usage of sensors, RFIDs and similar de-vices for data collection these days, dat a contains certain degree of inherent uncertainty. The causes of uncertainty may include limitation of equipments, absence of data and delay or loss of data in transfer. In order to get reliable results from such a data, uncertainty needs to be considered in calculation. In this work we propose a notion of distance-based outliers on uncertain data.
In our work, uncertainty of data is modelled by the most commonly used PDF i.e., Gaussian distribution. We have derived a distance function using Gaussian difference distribution to compute the distance-based outliers on uncertain data. Our distance function includes the integral of irreducible function, which makes the distance function computation very c ostly. Therefore we also propose a cell-based algorithm of outlier detection to efficiently compute the distance-based outliers on uncertain data. The cell-based algorithm prunes objects by identifying outliers or pruning non-outliers without the need to compute costly distance function, hence reducing the number of distance function evaluation required. Finally we make use of grid structure to further reduce the computation time required for distance-based outlier detection.

The rest of the paper is organized as follows. In section 2, the related work is discussed. Section 3 gives the derivation of distance function and the naive algorithm of distance-based outlier detection on uncertain data. The cell-based algorithm is given in section 5. Section 6 is dedicated to empirical study and Section 7 concludes our paper. Outlier detection is a well studied area of data mining. Different authors have into statistical approaches, depth-based approaches, deviation-based approaches, distance-based approaches, density-based approaches and high-dimensional ap-proaches by [9].

Distance-based outliers detection approach on deterministic data was intro-duced by Knorr et.al. in [3]. In this work, the authors defined a point p to be an outlier if at most M points are within d distance of the point. They also pre-sented a cell-based algorithm to efficiently compute the distance-based outliers. [10] formulated distance-based outliers based on the distance of a point from its k th nearest neighbour. The points were ranked on the basis of its distance to its k th nearest neighbour and the top n points were declared outliers in this ranking. Recently in [7], the authors assessed and ev aluated several distance-based outlier detection approaches and highlighted a family of state of the art distance-based outlier detection algorithms.

Recently a lot of research has focuse d on managing, querying and mining of uncertain data [11], [8], due to the use of sensors in many applications. The problem of outlier detection on uncertain data was first studied by Aggarwal et.al. in [11]. They represented an uncertain object by a PDF. They defined an uncertain object O to be a density-based (  X ,  X  ) outlier, if the probability of O existing in some subspace of a region with density at least  X  is less than  X  .In[8], the authors proposed the distance-based outlier detection on uncertain data. In their approach, each tuple in the uncertain table is associated with an existential probability. Moreover in their work, possible world semantic was used to mine the outliers. In our work, objects X  uncertainty is modelled by Gaussian distri-bution and we utilize Gaussian difference distribution to calculate the outlier probability. Several definitions of distance-based outliers have been proposed in past. In this paper, we extend the notion of distance-based outliers given by E.M.Knorr et.al. in [3] for uncertain data of Gaussian distribution.

In statistics, the Gaussian distribution (or normal distribution) is the most important and the most commonly used distribution. In the following, we con-sider k -dimensional un certain objects O i , each given by a Gaussian PDF with attribute objects, G DB = { O 1 , ..., O N } where N = |G DB | is the number of uncertain ob-jects in G DB . The vector objects that follows Gaussian distribution
We assume that the observed coordinates are follow Gaussian distribution. Based on this assumption, in the rest of the paper we will use define the distance based outliers on uncertain data of Gaussian distribution as follows.
 Definition. An uncertain object O in a database G DB is a distance-based out-lier, if the expected number of objects O i  X  X  DB (including O itself) lying within d -distance of O is less than or equal to threshold  X  = N (1  X  p ) ,where N is the number of uncertain objects in database G DB , uncertain objects in G DB follow Gaussian distribution and p is the fraction of objects in G DB that lies farther than d -distance of O .
 According to the definition above, the set of uncertain distance-based outliers in G DB is defined as follows, In order to find distance-based outliers in G DB , the distance between Gaussian distributed objects need to be calculated. In the following we define and derive the expressions for difference between Gaussian distributed objects. 3.1 Gaussian Difference Distribution The distribution of the difference of two Gaussian distributed variates O i and O j [1]. Hence we can write 1-Dimensional Gaussian Difference Distribution within Distance d Using Gaussian difference distribution, the probability that the uncertain object O i lies within d -distance of uncertain object O j is given by, where 2-Dimensional Gaussian Difference Distribution within Distance d The expression for the 2-dimensional Gaussian difference distribution is defined inLemma1below.
 Lemma 1.(2D Gaussian Difference Distribution within Distance d ) let  X   X  A variates, where  X  by, of objects O i and O j .
 Proof. See appendix.
 Multidimensional Gaussian Difference Distribution within Distance d Our distance function can easily be extended to multi-dimension case. Let  X   X  A j be two k -dimensional normal random vectors with means and ject O i lies within d distance of uncertain object O j is given by, where radius d . The Naive approach of distance-based outlier detection on uncertain data is the use of Nested-loop. The approach includes the evaluation of distance function between each object O i  X  X  DB and every other object in the G DB until O i may be decided as outlier or non-outlier. In the worst case this approach requires the evaluation of O ( N 2 ) distance functions. The algorithm 1 gives the naive approach of distance based outliers.
 Algorithm 1. Distance-based Outlier on Uncertain Data: The NL Approach The naive approach of distance-based outlier detection on uncertain data re-quires a lot of computational time to detect outliers even from small dataset. In the following we propose a cell-based approach of distance-based outlier detec-tion on uncertain data, which can reduce significantly the number of distance functions evaluations. The proposed approach first map database objects to a cell-grid structure and then prunes majority of objects by identifying the cells containing only outliers or non-outliers. For un-pruned objects, Grid File index-ing is utilized to further reduce the number of distance function computations. 5.1 Grid Structure We assume that our data objects are 2 dimensional. In order to find distance-based outliers on uncertain data, we quantize each object O i  X  X  DB ,in2 dimensional space that has been partitioned into cells of length l (cell length is discussed in section 5.6). Let C x,y be any cell of the Grid, then the neighbouring cells of C x,y form layers around it as shown in Fig. 1. Layers of any cell C x,y in the Grid are defined as follows.  X  Layer 1 cells of C x,y are given by  X  Layer 2 cells of C x,y ,andaregivenby L of cell layers and is discussed in section 5.6. 5.2 Cell Layers Bounds and Lookup Table The bounds of a cell or cell layers are defined for pruning outliers and non-outliers without evaluating the distance functions for the objects in the cell. The upper and lower bounds of any cell or cell layers are shown in Fig. 2 and are defined as follows.
 Upper Bound. By an upper bound of a cell (cell layers) we mean the maximum contribution by any of the objects in this cell (cell layers) to the target cell. According to our distance function an object in cell C x,y can contribute at its maximum to object O in cell C x,y when  X  x =  X  y = 0 in Eq.3. Similarly the upper objects in C x,y are obtained by setting  X  x =  X  y =( i  X  1) Lower Bound. By a lower bound of a cell (cell layers) we mean the minimum contribution by any of the objects in this cell (cell layers) to the target cell. According to our distance function an object in cell C x,y contributes at its min-imum to object O in cell C x,y when  X  x =  X  y = objects in C x,y are obtained by setting  X  x =  X  y =( i +1) Lookup Table. The above upper bound and lower bound of contributions of objects in L i ( C x,y )to C x,y are decided only by the i -value and independent from the locations of C x,y . Hence, we compute the bounds and store them in a lookup table to be used in the cell-based algorithm. 5.3 Pruning of Outliers and Non-outliers Cells Having defined cell bounds and cell layers bounds, a cell can be pruned as an outlier or non-outlier cell. If the minimum contribution to cell C x,y , obtained by the product of cell objects count and cel l lower bound is greater than threshold  X  , then none of the objects in C x,y could be outliers and we can prune it as non-outliers cell.
 On the other hand if the maximum contribution to cell C x,y , obtained by the product of cell objects count and cell upper bound plus the expected contribution by rest of the objects in the database G DB is less than or equal to  X  ,thenall the objects in C x,y are outliers and we can prune it as outliers cell. If none of the above conditions hold, then we need to check the contribution of decide the cell C x,y as containing only outliers or only non-outliers or left the cell undecided for the post-pruning evaluation. 5.4 Grid File Index Cell-based pruning may leave some of the cells undecided, i.e., they are neither pruned as non-outliers cells nor as outliers cells. For all the uncertain objects in such cells, we need to follow Nested-lo op approach. Our distance function of outlier detection requires a lot of comput ation time and may reduce the efficiency of our cell-based algorithm even after initial pruning. As we know from our distance function, that it produces higher probability for the nearer objects than the farther objects. We can utilize our Grid structure as Grid-file index [2] with no additional indexing cost to retrieve the nearer objects before the farther objects for the computation of expected value of all un-pruned objects. This will further reduce the number of evaluations required for distance function, hence reducing the overall cost of computation. 5.5 Cell-Based Algorithm of Outlier Detection In order to reduce the costly computation of distance function, we propose cell-based algorithm. The main idea of this algorithm is to prune the cells con-taining only outliers or non-outliers. Algorithm 2 starts by first calculating the bounds of cell layers and storing them in a look-up table. The database objects are then mapped to appropriate cells of the Grid. For each cell, C x,y in Grid, MinContribution and MaxContribution i.e., minimum and maximum contri-butions are maintained which are used for effectively pruning the cells as outliers or non-outliers. If a cell C x,y can not be pruned, the objects of such cells are checked individually for outliers using Grid-file index.

Although the number of distance function evaluations required in worst case experimental results on both synthetic and real datasets show that our proposed approach is very efficient. 5.6 Cell Length l and Cell Layers n Due to the complexity of our distance function, it is not possible to derive a single cell length l suitable for all the combinations of d and variances. Therefore we conducted several experiments to come up with a cell length which may produce efficient results.

A general observation from several expe riments is that smaller the cell-length, shorter the execution time. Since smaller cell-length results in higher values cell bounds, which helps in pruning majority of objects during cell-based pruning stage and either very few or no cell is left for post-pruning evaluation, reducing the number of distance function evaluations. However very small cell length may also increase the execution time for cell-based algorithm as too small cell length results in a large number of cells and the time required to compute cell layers bounds increases. We need to check a few cell lengths before reaching the appropriate cell-length. A good starting point that we have found through Cell Layers n . Since a Gaussian function decays exponentially with respect to the distance to its mean, the density contribution is small if the mean is far away from the target object. Using this fact, we conducted experiments where n was set to, 1) all layers in the Grid, 2) layers within d +6  X  distance of target cells and 3) layers within d +3  X  distance of target cells. We found that all three experiments retrieved same numb er of outliers and as expected, n with layers within d +3  X  was faster than the other two. The reason for the same number of outliers in all three choices of n is that the contribution of the cells which are farther than d +3  X  is negligibly small and has no effect on outlier detection. Algorithm 2. Distance-based Outlier on Uncer tain Data: Cell Based Approach We conducted extensive experiments on synthetic and real datasets to evaluate the effectiveness and accuracy of our pro posed cell-based algorithm. All algo-rithms were implemented in C#, Microsoft Visual Studio 2008. All experiments were performed on a system with an Intel Core 2 Duo E8600 3.33GHz CPU and 2GB main memory running Windows 7 Professional OS. All programs run in main memory and no I/O cost is considered. 6.1 Experiments on Synthetic Data Unless specified, the experiments are p erformed on 5 uniformly distributed 2-dimensional datasets of sizes varying from 1000 to 5000 tuples respectively with parameters, distance d =100, p =0.99, n =  X  X ayers within d +3  X  distance of target cell X  X nd l =10. Uncertainty is simulated by representing each object as Gaussian distributed with means between 0 and 1000 and standard deviation  X  x =15and  X  y = 15 in x and y dimensions respectively.

It is obvious from Fig.3a that the time taken by the Nested-loop algorithm is very high and the execution time increa ses dramatically as the number of tuples in database increases.
 Cell Length l and Cell Layers n . As discussed in section 5.6, smaller the cell length, shorter the execution time, w hich is obvious from Fig. 3b. However, very small cell length may increase the execution time, due to the increase in time required for the computation of look-up table as shown in Fig. 3b for cell length = 1. From Fig.3c and Fig.3d, we can observe that cell layers within d +3  X  distance of target cell produces better r esults than all the layers in the Grid. Varying Parameters p and d . Varying parameters p and d has an effect on number of outliers mined by the algorithm as shown by the plots in Fig.3e and Fig.3f respectively. Increasing p results in smaller threshold value, resulting in only a few and relatively stronger outliers.
 Varying d has an effect on the distance function probability contribution. Larger d means larger number of objects may fall within d distance of object un-der consideration, hence increasing th e expected value and reducing the number of outliers. 6.2 Experiments on Real Dataset For experiments on real dataset, we used NBA Playoffs Player statistics from 1996 to 2006 available at [4]. The dataset contains the annual performance statis-tics of NBA players. The filtered dataset used in the experiments contain 2081 tuples, with thresho ld related parameter p set to 0.99. Therefore value of thresh-old  X  = N (1  X  p )=20 . 81. Each player is represented as an uncertain object with 2 important statistics on his performance i.e., number of points and number of total rebounds. Both statistics are defined by means as the real observed values and standard deviations  X  points =20and  X  rebounds = 10.

Our experiments on NBA dataset mined the outstanding players during 1996 and 2006. From the expected values in Fig.4, Shaquille O X  X eal is the most out-standing player with maximum points scored and second maximum total re-bounds. He has the outstanding performance from 1999 to 2003 except the year 2002. On the other hand, Tim Duncan X  X  performance seems to decline during the course of his career as he was a strong outlier in 1999 and became weak outlier in 2006. In this paper, we extend the notion of dis tance-based outlier d etection on uncer-tain data of Gaussian distribution. This is the first approach of distance-based outlier detection where the objects are modelled by Gaussian distribution. We derive distance function for distance-based outlier detection on uncertain data of Gaussian distribution and propose a cell-based algorithm to efficiently detect outliers by pruning majority of outliers and non-outliers cells. We also utilize grid-file index to further reduce the computation time required for the cell-based algorithm. Extensive experiment s on synthetic and rea l data demonstrate the efficiency and scalability of our proposed algorithm.

In future, we are planning to extend this work in two dimensions. First, de-signing an adaptive algorithm with respect to cell length, in order to increase the efficiency of our cell-base d algorithm. Second, expanding this work for uncertain data streams of Gaussian distribution.
 Acknowledgment. This work has been partly supported by Grant-in-Aid for Scientific Research from JSPS (#2124000).
 ProofofLemma. Let O be a k -dimensional uncertain object with attributes  X   X  A =( x Since  X  is diagonal, the distribution functions are independent in coordinates. Hence the k -dimensional normal distribution function is given by the product of k 1-dimensional normal distribution functions. Let O i and O j are two 2-dimensional uncertain objects with attributes ( x respectively. The difference be tween normal random vectors of O i and O j is given by
Since  X  i and  X  j are diagonal matrices, the distribution functions are inde-pendent in coordinates. Hence the 2-dimensional normal difference distribution of uncertain objects O i and O j is given by, where  X  1 =  X  i, 1  X   X  j, 1 and  X  2 =  X  i, 2  X   X  j, 2 are the differences between the uncertain objects O i and O j in dimensions 1 and 2 respectively.

Hence the probability that the uncertain object O i lies within d -distance of uncertain object O j is given by,
