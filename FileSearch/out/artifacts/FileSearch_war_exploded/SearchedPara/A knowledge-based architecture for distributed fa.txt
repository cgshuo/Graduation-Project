 systems ( Amin, 2000 ), it is impossible to analyze a power network as a single entity. Recently, EPRIs initiative on IntelliGrid ( Amin and Wollenberg, 2005 ) and CIN/SI ( Amin, 2000 ) identified the need for distributed real-time power control. The research discussed in this paper is carried out in line with the IntelliGrid initiative.

In this paper, the approach towards the design of a fault diagnostic system is discussed. In the following section, a general fault analysis process in power networks is discussed. Section 3 provides a review of related work. Section 4introduces a dis-tributed architecture for fault analysis (DAPFA) algorithm and describes the structural and functional hierarchy of the algorithm.
Finally, some case studies are discussed and the paper is concluded. 2. Power network fault analysis 2.1. The problem
Upon an occurrence of a fault, protective devices such as relays and circuit breakers operate quickly in order to isolate the faulty portion of a network. This causes a surge of alarms to be registered at the control centre within a few seconds. Alarms heuristic knowledge related to the process is acquired from the human controllers and the knowledge that is difficult to extract from experts is derived from model-based reasoning. Model-based reasoning is performed by simulation analysis of a qualitative model of the power system ( R. Benjamins, 1993;
Davidson et al., 2003 ). The heuristic knowledge is used to drive the diagnostic procedure, select the most appropriate solutions and solve domain-specific diagnostic problems. The heuristic knowledge is also used in model-based reasoning as cause-effect relationship representation. The framework developed is de-scribed in the following section. 3. Related work
Power network fault diagnosis has been an active research topic since 1977 ( Kirschen and Wollenberg, 1992 ). During this time several solutions have been proposed with some of them being implemented in the industry ( Rayudu, 2000 ). Traditionally many of the implementations have been single-system architec-tures implemented at the control centre level where the data is accessed via supervisory control and data acquisition (SCADA) (Rayudu and Maharaj, 2002; Zhang and Kezunovic, 2007 ). The main reason is the availability of network data at SCADA.
The need for distributed analysis in power networks originated from the need to utilize current internet and communication technologies ( da Silva et al., 2005; da Silva and Klusch, 2006 ).
Several initiatives, such as complex interactive networks ( Amin, 2000) and Intelligrid ( Amin and Wollenberg, 2005 ), have been developed to incorporate distributed architectures into power system analysis. Our algorithm has been developed in line with these initiatives.

Several distributed architectures have been developed in compu-ter and telecom network fault analysis ( Amin, 2000 ; Peacock, 2000;
Zeng-Kai and Jiu-Bin, 2003 , Chen and Wang, 2007 ) and transportation (Bazzan, 2005 ). Regarding distributed approaches in power system analysis, there are various research results worth noting. The Archon system for power system fault analysis has been discussed in ( Corera et al., 1996 ) and a framework for security analysis is proposed in ( Di
Santo et al., 2004 ). Archon ( Corera et al., 1996), an agent-based system, was developed as a co-operative system that made use of pre-existing software. Archon incorporates several modules for monitoring, control and situation assessment. For fault diagnosis application, the system has four agents, each responsible for some functions such as alarm analysis, breaker and relay analysis, black-out area and control system interface. In ( Di Santo et al., 2004 ), the authors discuss a distributed algorithm for online power system security analysis. The architecture is presented in three tiers: presentation, middle and storage tiers. The middle tier incorporates the main algorithm and also includes power system sensors such as intelligent electronic devices (IED) and field power motors (FPM).
Archon X  X  processes are distributed at module level. That is, a processor performs a function such as alarm filtering and blackout analysis. This is a logical choice as Archon uses previously developed modules in the analysis. But the drawback of this system is that the processor load is unevenly distributed. The system in ( Di Santo et al., 2004 ) incorporates a set of mapping algorithms to map tasks to servers. Hence system performance can be measured against the number of processors in the cluster.
DAPFA X  X  distributed architecture is based on the power transmission network structure. The process distribution is based on the geographical hierarchy of the power network rather than being  X  X nalysis-based X  as in Archon ( Corera et al., 1996) or based on  X  X ask allocation X  as in ( Di Santo et al., 2004 ). The major advantage of DAPFA is that the analysis can be performed locally thereby providing quick response and reducing the alarm traffic to the main control centre.
 pre-diagnosis and final diagnosis. Pre-diagnosis uses relevant component models to diagnose the behavior of protection (Anderson, 1999) and status equipment. Alarms are received and analyzed at real-time during this phase. The observed behavior is compared to the expected behavior of the models and conclusions about the component operation are drawn from the comparison. The purpose of the final diagnosis phase is to identify faults and details of the faults and determine where and why the fault has occurred. This phase uses the diagnostic output from the pre-diagnosis phase.

Topology monitoring: the purpose of this task is to update the state of the model to the real-world power system X  X  observed state and to provide the direction of power-flow between substations in the network. This task also helps to check the consistency of incoming alarms with respect to the current states of the system. 5. Modeling in DAPFA
The power transmission network is a network of components essential for transmitting electricity between two stations. To develop a model of the network one must represent all the components, their relationships and behaviors in the model.
DAPFA X  X  power network model is represented in two distinct models: a structural model representing components and their con-nections, and a functional model that predicts possible behaviors given a fault hypothesis.

This section describes the structural and functional model representations of DAPFA. DAPFA X  X  representation is primarily based on our earlier work on model-based diagnosis ( Rayudu, 2000). We now discuss DAPFA X  X  structural and functional model representation in the following sections. 5.1. Network structural model
The structural model of DAPFA is described in two types of hierarchies: power network topological hierarchy, where the network is divided into a six-level hierarchy based on the topology of the network; object-oriented class hierarchy, where the power network components are arranged in a three-level hierarchy using object-oriented programming techniques.

These two types of hierarchies are detailed below. 5.1.1. Power network topological hierarchy
To model the components and their topological relationships, we have divided the power network into six topological levels of hierarchy. Fig. 3 shows the hierarchy of DAPFA. The first level (Level 1) contains all the components in the network such as circuit breakers, protective relays, lines, feeders, busbars, transformers, generators, etc. The connections between all the components represented in Level 1 are represented hierarchically from Level 2 to Level 4 ( Fig. 3 ). Level 2 consists of data relating to switching groups, which are connections between circuit breakers and isolators. Level 3 represents the connection of two switching encapsulate a data set and can only be accessed or modified by activating the resident methods. The method activation is done by passing messages requesting the object to either provide access to or to modify specified data. Each object instantiates a relevant class. The classes can be organized hierarchically such that some of the attributes implemented in upper levels can be recognized by lower levels using inheritance.

A typical transmission network consists of customer points, transformers and switching equipment (such as circuit breakers and isolators, busbars, lines, feeders, condensers and protection devices). Based on the concepts and principles presented for OO representation above, a transmission system is modeled as a collection of objects. Each object is an instance of the correspond-ing component type represented as a class. Each component class is defined as a generic component with several qualitative states as attributes. For example, the circuit breakers, isolators and protection equipment can be treated as status equipment (SE) and the OO representation for SE will have  X  X tatus equipment X  as a super-class and circuit breakers, isolators and protection equipment as its subclasses. This representation is shown pictorially in Fig. 4 .
 The component class hierarchy for the structural model of
DAPFA is shown in Fig. 5 . As depicted in the figure, the model consists of three levels with the top layer being an abstract layer that resembles the complete power network component classes. The second layer of classes represents super-classes for operational equipment, switching components and structural detail classes relevant to DAPFA X  X  topological hierarchy (switching groups, clusters, etc.). The bottom/final level accommodates the power network equipment classes. 5.2. Network functional model
The functional modeling of DAPFA is based on the functional relationships between the components specific to power trans-mission networks. It incorporates the behavioral knowledge of the components. The behavioral knowledge of all the components is based on different protection and component operation models and is derived from their model-based knowledge. As in the structural model of DAPFA, the functional modeling is also represented in six levels. Behavioral knowledge related to circuit breakers, isolators and protection equipment is incorporated into their respective models in Level 1 of the hierarchy. For example, consider a typical network as shown in Fig. 4 . Level 1 represents behavioral models of individual components such as CB1, CB2,
CB3, and their present status (either open or closed). The connections between protective relays, circuit breakers and isolators denote switching groups and the related behavioral models are represented in the second level (Level 2).
The representation of entities bounded by a set of switching groups (also called clusters) makes the third level (Level 3). The clusters are similar to the relay protection zones identified by protection engineers for ground-fault isolation. Hence the cluster level incorporates behavior knowledge resembling the behavior of two connected switching groups and the operational equipment between them (transformer, line, etc.). The behavior of each cluster is modeled as a neural network and is used as a  X  X etwork of neural nets X  at this level since neural nets are best suited for the problem ( Park et al., 2005 ; Boudour and Hellal, 2005 ). A representation of a  X  X ransmission of this level with neural nets is adopted from our previous work and is discussed in Rayudu and Samarasighe (1999) .Thebehavioral knowledge of this level is derived from model-based knowledge of the domain and the problem-solving knowledge incorporates the heuristic knowledge of the cluster. At this level the diagnosis is conducted by checking the behavior of components associated with the cluster.
 Protection Equipment Isolators here focuses on characteristics that are unique to DAPFA, namely items 3 to 5. 6.1. Transitional constraints between modules
As shown in Fig. 2 (a), diagnosis in DAPFA is done in two phases: pre-diagnostic phase; final diagnostic phase.

The pre-diagnostic phase involves the diagnosis done between the arrival of the first incoming alarm and the start of the final diagnostic phase. This pre-diagnosis processing uses the relevant component models to diagnose correct protection system behavior.
The observed behavior is compared with the predicted behavior of the models and conclusions about the correctness of components are drawn. As every alarm is processed by the pre-diagnosis, the correct behavior assumptions increase monotonically. In pre-diagnosis when the alarms reach DAPFA sequentially, only the related components X  correct behavior assumptions are drawn. For example if a circuit breaker  X  X rip X  alarm is received first, the pre-diagnosis will acknowledge that the circuit breaker has tripped but assumes that it hasn X  X  received any  X  X rotection trip X  details. Once it receives a  X  X rotection trip X  alarm it revokes its previous assumption and asserts a new assumption (achieved by truth maintenance and non-monotonic reasoning) based on the available alarms. This procedure continues until pre-diagnosis receives no more alarms related to the event or until the alarms are redundant. Once all the alarms have been received, pre-diagnosis then assesses for the missing and incorrect behavior of the network components. Once the network components X  correct and incorrect behavior has been established, the pre-diagnostic results are deduced by generating fault hypotheses. The output of pre-diagnosis will be: incorrect and expected behavior of components; suspected faulty components such as relays, circuit breakers and switching groups; diagnostic output from cluster levels.

Based on the alarms received, the fault models (or fault hypotheses) that hold a valid diagnostic explanation may number more than one. If this happens, the deduced fault models trigger the final-diagnosis phase. If pre-diagnosis can deduce only one fault model (that is, a fault inside a cluster) for the received set of alarms, then no further processing is necessary and the fault model is output as the final diagnosis.

The final diagnostic phase of DAPFA further analyzes the fault models provided by the pre-diagnosis phase. This phase uses
Levels 5 and 6 rules that combine the outputs of the pre-diagnostic phase to provide a meaningful diagnostic output.
Diagnosis at this level also includes the consideration of protection trip relay details such as overcurrent, distance, differential relays, circuit breaker failure effects and sequential operation of alarms. Hence this phase consists of search and reasoning mechanisms ( Chakrabarti et al., 2007 ) necessary to establish topological relationships between components and clusters, determination of the effect of mal-operating components on final diagnosis, detection of faults at blind-spots, handling of multiple and cascading faults and conflict resolution. 6.2. Conflict resolution in DAPFA
Conflict occurs in a diagnostic system when two or more results contradict each other. Interpreting conflicting results can be problematic and very time-consuming as the number of if any in Comps does not indicate mal-operations then apply the mis-timing analysis algorithm (see Appendix or ( DAFA
Algorithms, 2006 )); if the above algorithms fail to resolve then apply the common-section fault estimation algorithm (see Appendix or ( DAFA
Algorithms, 2006 )); if the above algorithms fail to resolve between diagnoses then apply the penalty calculation algorithm to rank the solutions (see Appendix or ( DAFA Algorithms, 2006 )); if the simulation output still indicates a fault in more than one cluster in Clus , check for multiple faults.

If all clusters that are part of the event indicate that the fault is outside the clusters, it is a direct indication that several components have operated wrongly. Based on the output information from Level 2, the above algorithm is applied to arrive at a diagnosis. If the analysis fails to return a valid solution, the analysis is then continued to check for multiple faults.
If combined analysis of cluster output indicates faults at more than one location, the diagnosis is analyzed by the procedure for multiple faults. 6.4. Detecting and handling of multiple faults
Multiple fault phenomena occur in power networks when two different faults occur on the network at the same time. They can be caused by several events, ranging from multiple natural events such as lightning and earthquake to multiple equipment failures in the power network. In general, multiple faults in power transmission networks are caused by: failure of one or more parts of equipment to operate or clear a fault; operation of one or more parts of equipment as a result of some unexpected behavior due to operating factors such as trip time and misleading current limit setup for the trip; one or more external factors affecting the power network; one or more events caused by a combination of external and equipment faults.

The above-specified causes generate multiple faults of two types: Multiple faults affecting a single area of network topology.
These types of faults are caused by malfunctioning or mis-timed equipments creating a larger array of circuit breaker trippings than expected. These faults normally lead to multiple solutions and hence need to be solved by the multiple-solution analysis algorithm discussed above;
Multiple faults affecting more than one area of network topology. These types of faults occur in two or more areas of the power network and do not hold a fault-related topology relationship between the areas. These faults should be dealt with individually and output as a multiple-fault comprising two or more individual faults.

In DAPFA, multiple faults can be identified if: two or more clusters at Level 3 indicate that the fault is inside them; the alarms indicate a formation of two or more affected areas in the power network with no fault-related topology relation-ship between them.

Given this training example, the task of DAPFA is to determine, which of the components are relevant to the goal concept. The fault in Fig. 7 raises alarms, which are injected into Level 1 of
DAPFA to replicate the current situation of the network. At this level, the components are checked for authenticity of operation.
This is done by the qualitative rules discussed in the previous section. For this example, all the operations were genuine.
Once the authenticity is proved, the rules at Level 2 (switching groups) will operate to check against genuine operation of switching groups. At this level it proves that the switching groups at SG1 (switching group 1), SG2, SG3 and SG4 have operated correctly. From switching groups, the analysis moves on to cluster level (Level 3). At this level, preliminary diagnosis is made where the rules are applied on each affected cluster. At this level, it is diagnosed that the fault is in Cluster 2, as the circuit breakers on either side of Line 2 both operated, but no diagnosis is reached on
Cluster 1 as only one breaker operated. These inferences will be sent to Level 4 (substation level) to deduce the fault. In this level, the relation between two clusters is checked to find the relation-ship between two diagnoses. For this example, the relationship between the two clusters is established and in the first instance it is inferred that the two diagnoses are inter-related. The relation-ship is then established by a resolution algorithm, which finally provides the main cause of failure. 7. Practical implementation
DAPFA has been tested in the real world scenarios and has been proven successful. The first application of DAPFA architecture was in the domain of the New Zealand (NZ) power transmission network. We implemented the algorithm for the northern part of the network around the Auckland region (Northland-Auckland).
NZ transmission network is controlled by a centralized control centre. Real-time control information of the network is transmitted to the control centre where system operators make decisions on control actions to provide uninterruptible power to customers.
When applying DAPFA to the NZ network, we have considered the following: include all 16 substations in the selected area; one area operating centre entity; one central control centre entity.
 advantages. To perform this test, we deployed DAPFA in three scenarios:
Power system level (single-level) where the complete architec-ture of DAPFA is deployed only on one computer and is located at the central control centre.

Area operation level (two-tier level) where DAPFA is deployed in a two-tier architecture with three nodes; two at the area operation centre level and one at the central control centre level.
Substation level (three-tier level), which exhibits DAPFA X  X  three-tier architecture where 8 nodes are assigned at a substation level, one node at area operation level and one at the central control centre level.

Table 2 shows the average execution times of different machine configurations. The fault scenarios used in performance accuracy above were also used for the speed tests. The execution times were counted from the time that the first alarm was triggered (time-stamp) till the time of the first diagnostic output of DAPFA. The timing also includes SCADA and network delays.

The results show considerable speed advantage in DAPFA X  X  three-level architecture and cuts the time by half compared to the single level architecture. The two-tier architecture tests have been performed to assess the times and investigate the possibility of incorporating substation level analysis at an area-operation level.
We have increased the number of nodes at the area-operation level to two with each node handling eight substations each. The results show about 15% speed advantage for the two-tier level over a single computer, which could be an alternative option to the three-tier level.

At this stage, resources have restricted us from testing DAPFA on its full nodes (18).

The work discussed in this paper is on-going and includes several areas of further research and improvements. In terms of architectural improvement, we are currently working on imple-menting DAPFA architecture using service oriented architecture (SOA). Algorithmically, there are several avenues for further research in DAPFA. Our future research in this arena involves improving our algorithm in terms of better handling of missing information and multiple faults. 9. Conclusion
As the technologies of power network control develop further, we can expect to see more sophisticated algorithms in the analysis of power network operations. In this paper we present an intelligent system based on an architecture that makes use of intelligent electronic devices (IEDs) and substation-servers ( Allen et al., 2005 ) and contributes towards initiatives such as CIN/SI (Amin, 2000 ) and IntelliGrid ( Amin and Wollenberg, 2005 ). protections that have operated to clear an event are compared against each other and each protection is checked to find out whether they have operated within its specified limits for current, voltage and operation times. Then the combined list of all protections that have operated for the event is analyzed to figure out whether the operations have followed a set sequence identified by the protection engineers. Any protection that does not follow the identified sequence is deemed to be mis-timed.
For this thesis DAPFA does not include this algorithm, as there is aneedforextensiveworkonprotectionmodelingforthis algorithm and it is a time-consuming task. DAPFA includes the following algorithm, which we believe is as efficient as the temporal-based algorithm .
 The following algorithm uses the solution spaces generated by
Levels 3, 4, 5 and 6 of DAPFA that are stored in the analyzer module and combines them in an attempt to detect compo-nents that have mis-timed. The algorithm is outlined as follows: Given: SD , the system description; Diags , the number of diagnoses; Clus , the clusters involved in the event; Comps , the components involved in the event; Alarms , the alarms related to the event;
Establish the authenticity of the Comps that were deduced as not mal-operated at Level 2;
Gather all the pre-diagnostic solutions (Diags) related to the event from the analyzer module;
For each solution in Diags gather all circuit breaker operations (L 1 y L N ) and mal-operation indications (M 1 y M N ) L X is the union of L 1 to L N L X  X  L 1 [ L 2 [ L 3 [ ... L N M X is the union of M 1 to M N M X  X  M 1 [ M 2 [ M 3 [ ... M N C X , the mis-timed components are an intersection of L X and M X C x  X  L X \ M X
If any of the components in C X does not indicate any mal-operation, output the fault indication along with the mis-timed components C X as diagnosis.
 A.3. Common  X  section fault detection algorithm
Common section faults usually occur between a busbar and a connecting line. The possibility of a common-section fault occurs if: two or more clusters indicate that the fault is inside the clusters and the clusters are topologically connected in levels 4, 5 and 6; analysis at Levels 4, 5 and 6 indicates that the fault is in two or more locations for the tripped circuit breakers but all the clusters can be topologically connected.

The algorithm to detect a common-section fault is given as follows: Given: SD , the system description; Diags , the number of diagnoses; Clus , the clusters involved in the event; Comps , the components involved in the event;
Alarms , the alarms related to the event. timed equipment creating a larger array of circuit breaker trippings than expected. These faults normally lead to multiple solutions and hence need to be solved by the multiple-solution analysis algorithm discussed above;
Multiple faults affecting more than one area of network topology. These types of faults occur in two or more areas of the power network and do not hold a fault-related topology relationship between the areas. These faults should be dealt with individually and output as a multiple fault comprising two or more individual faults.

In DAPFA, multiple faults can be identified if: two or more clusters at Level 3 indicate that the fault is inside them; the alarms indicate a formation of two or more affected areas in the power network with no fault-related topology relation-ship between them.

If two or more clusters at Level 3 indicate that the fault is inside the clusters, then: if the clusters are topologically connected, apply multiple solutions algorithm to identify the cause of the fault; if the clusters are not topologically connected, analyze them as individual faults; if the clusters in question are a combination of 1 and 2, use both the above procedures.The outputs of all the above procedures are generated as multiple faults.

If alarms indicate a formation of two or more affected areas in the power network and the areas are not topologically related, then: consider the affected areas as different faults; if multiple solutions exist for each fault, apply multiple-solution analysis algorithm; output all the faults as different faults occurring at the same time.

Sometimes two or more events contribute towards a single fault. For example, a lightning effect on a line and a short-circuit between the spark-gaps of a transformer connecting the line. An initial analysis for a fault like this would lead to a line fault contributing to the transformer trip. DAPFA contains knowledge that will help identify these types of faults. Since this knowledge is heuristic in nature, it needs to be incorporated and improved incrementally over the period of DAPFA X  X  usage. However, events of this nature are rare and the related knowledge will be improved over the years.
 References
