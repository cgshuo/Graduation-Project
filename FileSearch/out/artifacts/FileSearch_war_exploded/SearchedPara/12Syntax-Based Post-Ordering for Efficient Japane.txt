 KATSUHITO SUDOH, XIANCHAO WU, KEVIN DUH, HAJIME TSUKADA, Research on statistical machine translation (SMT) in the past decade has focused on developing SMT models for more accurate translation. There are two main problems in SMT: lexical (word and phrasal) translation and reordering. The standard SMT ap-proach solves these problems jointly in an integrated search with a limited reordering distance to reduce search complexity. However, this limit must be set at a large value for languages requiring extremely long-distance reordering (e.g., Japanese-English), thereby restricting its usefulness as a method for increasing decoding speed. This arti-cle tackles the difficulty of long distance reordering in Japanese-to-English translation.
One approach is to employ a two-step framework in which lexical translation and reordering are isolated explicitly, in contrast to the integrated search. In a sense, this two-step framework provides another alternative, besides the distortion limit, for simplifying the search space. Most two-step technologies use pre-ordering to reorder source language words in the target language word order before lexical translation [Collins et al. 2005; Costa-juss ` a and Fonollosa 2006; Genzel 2010; Hong et al. 2009; Isozaki et al. 2010b; Li et al. 2007; Tromble and Eisner 2009; Xia and McCord 2004; Xu et al. 2009]. Currently pre-ordering works very effectively in English-to-Japanese translation utilizing syntactic parsing in English [Isozaki et al. 2010b, 2012], while that in Japanese-to-English translation [Katz-Brown and Collins 2008; Kondo et al. 2011; Sudoh et al. 2011a] is much less effective, possibly due to an asymmetry in reordering.

There is another two-step method that employs reordering after lexical translation using an intermediate source-ordered target language [Bangalore and Riccardi 2000; Matusov et al. 2005]. We call this approach post-ordering [Sudoh et al. 2011b] as op-posed to pre-ordering (as illustrated in Figure 1) . Previous post-ordering methods em-ploy simple reordering models that are insufficient for Japanese-to-English translation with long distance reordering. We propose a novel syntactic post-ordering method fo-cusing on two problems: (1) how to generate the intermediate language, and (2) how to solve the post-ordering with long-distance reordering. For the first problem, we have an important advantage in that we can induce Japanese-ordered English from English using the existing accurate English-to-Japanese syntactic pre-ordering method [Isozaki et al. 2010b, 2012]. We solve the second problem as another SMT problem by accurate syntax-based SMT with target language syntax. The two-step SMT with the proposed method provides a viable alternative to one-step syntax-based SMT, which is generally very accurate, even with long-distance reordering, but very slow in practice. In Japanese-to-English patent translation experiments, the proposed method achieves six times faster decoding speed than a baseline, with comparable translation accuracy. As illustrated in Figure 1, a standard SMT approach provides a combined solution to the lexical translation and reordering problems. Syntax-based SMT [Chiang 2007; Galley et al. 2004; Zollmann and Venugopal 2006] solves them jointly using synchronous grammar rules. Phrase-based SMT [Koehn et al. 2003; Tillmann 2004] also solves them jointly although it is implicitly split by using isolated phrasal translation and reordering models. In contrast, two-step approaches explicitly split them using intermediate languages. This article focuses on a two-step approach with post-ordering using a source-ordered target language as its intermediate language. The use of an intermediate source-ordered target language was proposed by Bangalore and Riccardi [2000] for tightly-integrated spoken-language transla-tion with weighted finite-state transducers (WFSTs). Their method determines dependency-based reordering in source-ordered target sentences using a finite-state parsing model, which can be trained using bilingual corpora with automatic word alignment. Its finite-state model only uses word surfaces as constraints and is not sufficient for capturing syntactic structure and reordering for long sentences. Matusov et al. [2005] and Bangalore et al. [2007] employed simple permutation models with reordering limits; they focused more on lexical translation problems and were less concerned about long-distance reordering. Recently, Goto et al. [2012] followed our work by extending parsing-based post-ordering [Bangalore and Riccardi 2000], using tree-to-tree correspondence between English and Japanese-ordered English. We propose a novel post-ordering method that works efficiently even with long-distance reordering in Japanese-to-English translation by employing reordering rules used for English-to-Japanese translation. Its key ideas are as follows.  X  The Japanese-ordered English can be induced from English with reordering for the reverse direction of English-to-Japanese.  X  The post-ordering from the source-ordered target language to the target language can be regarded as an SMT problem.
 The proposed method uses Head-Final English (HFE) [Isozaki et al. 2010b] as the Japanese-ordered English, which is very effective in English-to-Japanese translation with pre-ordering.

Figure 2 shows an overall SMT workflow with the proposed method. We realize two-step SMT by employing two isolated SMT processes: Japanese-to-HFE lexical translation and HFE-to-English post-ordering. Models for these problems are trained using a trilingual corpus: the original bilingual corpus of Japanese and English, and HFE induced from English by Head Finalization. The first step is undertaken using a standard monotone phrase-based SMT, and the second step is undertaken using a syntax-based SMT.
 We solve the lexical translation problem as a monotone phrase-based SMT problem from Japanese to HFE. HFE was proposed in an English-to-Japanese pre-ordering study based on the head-final characteristics of Japanese; syntactic head words are almost always located after their modifier words in Japanese. Figure 3 shows an ex-ample of HFE, together with a parse tree, for the following English sentence:  X  X he oil pressure control unit 30 operates based on a command from the CVT controller 20. X 
HFE is different from English as follows (see Isozaki et al. [2010b] for details). (1) Syntactic head words (represented with bold ovals in Figure 3) are located at the (2) Plural nouns (POS: NNS ) are replaced with singular nouns. (3) Articles  X  X  X ,  X  X n X , and  X  X he X  are eliminated. (4) Pseudo-particles are inserted immediately after verb arguments.
Point (1) relates to the head-final word order, and the others are intended to achieve better word-level alignment between Japanese and HFE by bridging morpho-syntactic gaps (extends Korean-English heuristics [Hong et al. 2009] to Japanese-English). As shown in Figure 4, the HFE words have monotonic word correspondences with the Japanese words. This monotonicity makes Japanese-to-HFE lexical translation mono-tonic, as shown in the upper part of Figure 5. We solve the post-ordering problem as another SMT problem from HFE to English. In our approach, this problem can be regarded as the inverse of the problem of Head Finalization from English to HFE. We apply syntax-based SMT to this problem for the following reasons.  X  The order of words in English depends strongly on their syntactic roles and syntac- X  Many accurate English syntactic parsers have been developed.  X  Syntax-based SMT works well in long distance reordering, although it requires long
Since we employ English syntactic parsing to obtain HFE, we can prepare a parallel corpus of HFE strings and English parse trees from English sentences. Here, when training translation rules, word alignments between HFE and English are obvious, and their phrasal correspondence can easily be identified. HFE and English have certain differences regarding plural nouns and articles of En-glish and pseudo-particles of HFE. These differences are included in the translation rule table, and the post-ordering step corrects them.

In the intermediate lexical translation result in Figure 5, the English verb phrase  X  X s composed of X  is reversed and located at the end of the sentence, as in Japanese. There are also no articles  X  X  X  and  X  X he X , but there is a pseudo-particle va0 . The word order is corrected by the post-ordering as an HFE-to-English translation. Here, articles are inserted, and the pseudo-particle is eliminated. The time complexity of syntax-based SMT by a CKY-based decoding with binarized grammars is O ( n 3 ) , where n is the number of input words [Chiang 2007]. This can be reduced by introducing a reordering limit (maximum word span in the CKY-based de-coding), but it is not suitable for long-distance reordering. On the other hand, the time complexity of the monotone lexical translation step with Moses-like stack decoding is O ( n ) [Koehn 2010], and the syntax-based post-ordering also has the time complexity of O ( n 3 ) . Thus, the time complexity of the proposed method is theoretically equivalent to that of the original syntax-based SMT.
 Here, there is an important difference between Japanese-to-English translation and HFE-to-English post-ordering as regards to their translation ambiguity. Japanese-to-English translation has to explore many competing hypotheses in lexical translation with a large number of translation rules. As a result, the actual computational cost of the standard syntax-based SMT is large to handle large lexical translation ambiguity. In contrast, HFE-to-English translation only tackles the reordering problem and has very small lexical translation ambiguity (only with plural nouns, articles, and pseudo-particles). Thus, the number of translation rules is expected to be small, and the pro-posed method runs efficiently with a small translation ambiguities. Here it is worth noting the asymmetry that exists in pre-ordering between English-to-Japanese and Japanese-to-English translation.
 As shown in the example in Figure 4, HFE aligns almost monotonically with English. Japanese is a typical head-final language, so that we can reorder English syntactic head words after their modifiers regardless of their syntactic roles. This pre-ordering process has little uncertainty and can determine Japanese word order systematically by using only English-side information. However, English is primarily a head-initial language but also allows for a head-final order, such as subject-verb and adjective-noun. This uncertainty makes it difficult to reorder Japanese words in English word order. In the example sentence in Figure 4, we have to distinguish subject-verb and adjective-noun relations to induce the English-ordered Japanese, as shown in Figure 6, based on a chunk-based dependency structure (commonly used in Japanese). Distin-guishing head-final from head-initial relations is difficult even with state-of-the-art Japanese parsers, and therefore it is more difficult to realize Japanese-to-English pre-ordering than it is in English-to-Japanese. In contrast, the proposed method provides one solution for this asymmetry issue by utilizing  X  X re-ordering in easier direction X . We investigated the efficiency of the two-step SMT approach with the proposed method by undertaking the following Japanese-to-English translation experiment. We used the NTCIR-9 PatentMT [Goto et al. 2011] English and Japanese dataset for this experiment. Table I shows some statistics related to this dataset. We preprocessed the dataset using the following software.  X  English syntactic (HPSG) parser .Enju 3 [Miyao and Tsujii 2008].  X  English tokenizer . stepp (included in Enju).  X  Japanese tokenizer . Mecab 4 (with ipadic-2.7.0).
We compared the three approaches with syntax-augmented SMT (SAMT) [Zollmann and Venugopal 2006] implemented in the Moses toolkit ( moses chart ).  X  Baseline . Baseline one-step SAMT without pre-/post-ordering.  X  Preorder . Two-step SMT with pre-ordering [Katz-Brown and Collins 2008] and  X  Postorder . Two-step SMT with the proposed method.
 SAMT has a large advantage with regards to long-distance reordering because of its hierarchical approach, and it also works much better (  X  2% or more in BLEU, TER, and RIBES) than phrase-based (PBMT) [Koehn et al. 2003] and hierarchical phrase-based (HPBMT) [Chiang 2007] methods. (The results with PBMT and HPBMT will be presented later in this section for reference.).

SAMT rule tables for Baseline and Preorder were trained using a standard Moses workflow with automatic word alignment by MGIZA++ 5 , grow-diag-final bidirec-tional alignment heuristics, and rule extraction considering unlimited word span. The PBMT phrase table for lexical translation in Postorder was trained with MGIZA++, grow-diag-final-and heuristics, and phrase extraction up to seven words. Here, sen-tence pairs with a source or target side longer than 64 words were eliminated before word alignment by MGIZA++ to avoid any problematic underflow. The SAMT rule ta-ble for Postorder was trained with obvious word alignments between HFE and English and rule extraction taking account of the unlimited word span. The language models were word five-gram language models of English and HFE, trained by SRILM.
We used four evaluation metrics.  X  BLEU [Papineni et al. 2002] by mteval-v13a.pl .  X  TER [Snover et al. 2006] by tercom-7.25.jar .  X  RIBES [Isozaki et al. 2010a] by RIBES-1.02.3 . 7  X  PER [Tillmann et al. 1997]. First, we investigated the efficiency of two-step SMT with the proposed method. We varied two parameter values in moses chart to determine the relationship between accuracy and efficiency, the maximum chart span ( -max-chart-span ), and the stack size for cube pruning ( -cbp ). To realize long-distance reordering, the maximum chart span was basically set to 999. With the proposed method, Japanese-to-HFE translation was a monotonic PBMT with a very small stack size ( -dl0-s5 in moses ). Table II compares decoding times with similar translation accuracies. The two-step SMT with the proposed method ran about six times faster than the baseline one-step SAMT with comparable translation accuracy. This shows the empirical efficiency of the two-step SMT with the proposed method compared with the one-step SAMT. The two-step SMT with pre-ordering was much worse than the other two methods and was not improved by employing a longer reordering limit or larger stack size.

Next, we compared results obtained with similar decoding time. Table III shows scores obtained with a decoding time similar to that of the two-step SMT with the proposed method (1.48 seconds per sentence). The baseline one-step SAMT was much worse than that in Table II, although its decoding time became as fast as that of the two-step SMT with the proposed method. This clearly shows that a standard SAMT does not work in a short decoding time due to severe search errors in its too-restricted search space.

Finally, we compared results obtained with larger search spaces using unlimited chart spans with larger stack sizes. Table IV shows scores for baseline one-step SMT and two-step SMT obtained with the proposed method with larger stack sizes. The baseline achieved its best performance, which is even better than that of the proposed method, with a stack size 500 for TER and 1,000 for RIBES. This suggests that the SAMT was potentially the most accurate, although it was very slow in practice. The two-step SMT with the proposed method did not improve with larger search spaces and seemed to reach its upper bound with a stack size of 100. 4.3.1. Trade-off between Accuracy and Efficiency in the Post-Ordering Approach. With search problem approximation, there is generally a trade-off between accuracy and efficiency. Simple approximations by narrowing rule size, stack size, and reordering limit cer-tainly increase efficiency but often cause severe degradation in accuracy, as shown in the baseline results in Tables II and III. Table V compares the number of SAMT rules used for decoding of the test set 8 by the baseline SAMT and the proposed post-ordering. The baseline SAMT has about eight times more rules than the proposed method. The function of these rules was to handle much larger lexical translation ambiguities in the baseline SAMT, but they also caused a significant increase in the decoding time. Con-trary, the proposed post-ordering ran efficiently using much smaller number of rules by excluding lexical translation ambiguities. Although the proposed method limits lexical translation to one-best hypotheses only, these hypotheses are constrained by the inter-mediate source-ordered target language. The constrained approximation enables us to realize a more effective lexical translation than simply narrowing the search space in the integrated search. In Example 1 in Table VI, the baseline one-step SAMT failed to reorder  X  X ft X  and  X  X nalysis, X  while the two-step SMT with the proposed method suc-cessfully moved them toward the top of the complement. The baseline tries to solve word translation and reordering jointly and so sometimes fails to search long-distance reordering due to its limited search space.

Our approach has possible problems that may degrade its accuracy: intermediate lexical translation results may differ from the ideal source-ordered target language due to lexical translation errors. The problem was not very severe in the preceding experiments but may become serious, especially when there are insufficient training data and when many unknown words appear. Example 2 in Table VI shows an example of this kind of error. The HFE sentence in Example 2 had two pseudo-particles for sub-jects, va0 and va1. As a result, the preceding noun phrases  X  X resent embodiment X  and  X  X resent invention X  were both moved incorrectly toward the beginning of the sentence. This kind of error may occur owing to the ambiguity of Japanese particles in their syntactic roles. Since the baseline SAMT could translate this sentence successfully, it can be seen as a side effect of the proposed method. Example 3 presents another type of error caused by a passive construction in the source Japanese sentence. The HFE sentence should be  X  X 11 step in, primary pulley 11 to input torque va2 calculated is X  in the passive voice. However, the active-voice verb  X  X alculates X  was used without its corresponding subject, which meant the post-ordering could not generate a syn-tactically correct sentence. The passive voice is very commonly used in Japanese and sometimes causes serious translation errors, especially with SMT. The baseline SAMT could translate it using appropriate SAMT rules, but the proposed post-ordering did not rewrite  X  X alculates X  in HFE as  X  X s calculated X . These two problems relate to short-comings with the two-step SMT regarding post-ordering. The post-ordering depends strongly on syntactic clues in HFE, such as pseudo-particles and prepositions, to de-termine syntactic constraints for hierarchical reordering. However, if these clues are not correct, the post-ordering has to explore hypotheses satisfying those wrong con-straints and tends to generate syntactically incorrect English sentences. 4.3.2. Difficulty of Isolated Lexical Translation and Post-Ordering. The preceding experimen-tal results suggest that separating the lexical and post-ordering problems can be achieved more easily than finding a solution to the integrated problem. We quanti-tatively analyzed their respective difficulties. Tables VII and VIII show stage-wise results for Japanese-to-HFE monotone lexical translation and HFE-to-English post-ordering, respectively.

Surprisingly, as shown in Table VII, the use of larger stack sizes did not help to improve the lexical translation accuracy of all the evaluation metrics. This means that the lexical translation with the proposed method was unambiguous and could be solved very efficiently with a small stack size.

Table VIII shows the stage-wise results of the HFE-to-English post-ordering with different reordering limits, using the oracle HFE sentences taken from English ref-erence sentences as the input. The scores were very high, especially with a large maximum chart span. This suggests that the HFE-to-English post-ordering could be achieved effectively and efficiently by SAMT.
 We also tested standard phrase-based SMT (PBMT) and hierarchical phrase-based SMT (HPBMT) for the post-ordering problem. Table IX shows the results. HPBMT was slightly better in RIBES than PBMT but worse than SAMT. HPBMT also cap-tured a hierarchical structure but had fewer constraints with respect to constituent types compared with SAMT. PBMT focused more on local context, so its BLEU was better than that of HPBMT. We also tested larger reordering limit values, but this was unsuccessful; this clearly suggests that the phrasal reordering model used in PBMT is not sufficient for long-distance reordering in Japanese-to-English translation. Reordering is a theoretically and practically challenging problem in SMT. In early SMT studies, reordering was modeled by distance-based constraints in the translation model [Brown et al. 1993; Koehn et al. 2003]. This reordering model is easy to compute and also works with relatively similar language pairs, such as French-to-English. Re-cent PBMT studies have employed lexicalized phrasal reordering models [Galley and Manning 2008; Nagata et al. 2006; Tillmann 2004] to constrain phrasal orientation using lexical information. These models do not directly model long-distance reordering and are insufficient for Japanese-to-English SMT. On the other hand, the use of syn-tax in SMT [Galley et al. 2004; Graehl and Knight 2004; Yamada and Knight 2001; Zollmann and Venugopal 2006] are theoretically sound solutions for the reordering problem based on syntactic constraints. Hierarchical phrase-based MT Chiang [2007] employed a formally syntactic structure between the source and target languages [Wu 1997]. Treelet translation [Quirk et al. 2005] employed an isolated subtree re-ordering models. Although these tree-based models can achieve long distance reorder-ing in their hierarchical representations, their search involves large computational complexity.
 A novel approach to reordering, called pre-ordering, has been studied in recent years. Syntax-based methods have been applied to various language pairs [Collins et al. 2005; Genzel 2010; Hong et al. 2009; Katz-Brown et al. 2011; Li et al. 2007; Xia and McCord 2004; Xu et al. 2009]. These syntax-based methods were recently extended by auto-matically induced parsers [DeNero and Uszkoreit 2011; Neubig et al. 2012].
The post-ordering framework also relates to post-editing technologies, which aim to correct errors in a rule-based translation [Dugast et al. 2007; Ehara 2007; Simard et al. 2007] or a different type of SMT [Aikawa and Ruopp 2009]. There is a major difference between post-ordering and post-editing: in the post-editing framework, the preceding translation process is a complete source-to-target translation, and post-editing itself mainly provides error correction. In contrast, the SMT framework with post-ordering divides the entire translation problem into translation and reordering subproblems. It has an advantage in that the subproblems can be easily and efficiently solved compared with the post-editing approach involved in a complete translation process. 9 Pivot translation [Wu and Wang 2007] is also similar in that it solves two translation problems sequentially. The largest difference between pivot translation and the post-ordering approach is their intermediate language: the pivot translation uses another language (typically English), while the post-ordering approach uses reordered target language. This article presented a novel syntax-based post-ordering method for efficient Japanese-to-English SMT with long-distance reordering using Japanese-ordered En-glish induced by a reordering method for English-to-Japanese. The proposed method provides a practical alternative to syntax-based SMT by approximately decomposing it into monotone lexical translation and syntax-based post-ordering with the interme-diate language, HFE. It empirically provides a six-fold reduction in the decoding time with a comparable translation accuracy; it could decode a sentence in an average time of 1.48 seconds in a Japanese-to-English patent translation, while a standard SAMT approach took 9.48 seconds.

The main contribution of this article is to incorporate the advantage of the accurate syntax-based reordering of English developed for English-to-Japanese SMT into an approach working in the reverse direction, namely Japanese-to-English. The proposed method provides a good approximation for efficient two-step SMT with long-distance reordering. The two-step SMT with the proposed syntax-based post-ordering itself is not limited to a specific syntactic reordering method and is expected to have wide applicability other than Japanese-to-English. It would be interesting to examine its use for different language pairs, especially with long-distance reordering, using pre-ordering methods, as described in Section 5. Korean-to-English is the most promising language pair for the proposed method because of the large syntactic similarity be-tween Korean and Japanese and existing pre-ordering methods [Genzel 2010; Xu et al. 2009]. English-to-German is another well-known language pair with long-distance reordering. The proposed method could be applied to this translation direction using existing German-to-English pre-ordering method [Collins et al. 2005]. German word order X  X erb-second in declarative clauses and verb-final in embedded clauses X  X s more complex than English, but it could be captured in syntactic structures used in SAMT.
From another viewpoint, our post-ordering is an extension of the reordering model presented by Bangalore and Riccardi [2000] and also could be integrated with lexi-cal translation, as in common phrase-based SMT methods. This increases the time complexity to some extent but is also expected to balance accuracy and efficiency for long-distance reordering.

A further interesting challenge is the use of a large-scale monolingual resource. The proposed post-ordering model could be trained using only target language sentences with syntactic pre-ordering. A large amount of data would help to constrain interme-diate results and provide accurate reordering.

