 1. Introduction
Economic dispatch (ED) is one of the most important problems to be solved in the operation and planning of a power system ( Wood and Wollenberg, 1996 ). The primary objective of the ED problem is to determine the optimal combination of power outputs of all generating units so that the required load demand at minimum operating cost is met while satisfying system equality and inequality constraints. In the traditional ED problem, the cost function for each generator has been approximately represented by a single quadratic function and is solved using mathematical programming based on the optimization techni-ques such as lambda-iteration method, gradient method, and dynamic programming method, etc. However many mathematical assumptions such as convex, quadratic, differentiable and linear objectives and constraints are required to simplify the problem.
The practical ED problem with ramp rate limits, prohibited operating zones, valve-point effects and multifuel options is represented as a non-smooth or non-convex optimization pro-blem with equality and inequality constraints and this makes the problem of finding the global optimum difficult and cannot be solved easily by traditional methods.
 researches to solve a practical ED problem by considering different non-convex cost functions using various heuristic approaches ( Chen and Chang, 1995; Chiang, 2003, 2005; Gaing, 2003; Jayabarathi and Sadasivam, 2000; Lee et al., 1998; Lin, et al., 2001, 2002; Orero and Irving, 1996; Park, et al., 2005, 2007, 1993;
Selvakumar and Thanushkodi, 2007; Sinha et al., 2003; Walters and Sheble, 1993; Wong and Wong, 1994; Wong and Fung, 1993;
Yang, et al., 1996 ). This paper introduces a modified PSO (MPSO) and its solution to the non-convex ED problems. Two types of non-smooth ED problems; ED with ramp rate limits and prohibited operating zones and ED with combined valve-point loading effects and multifuel options will be considered. dynamic optimization problems. But in some cases, it converges prematurely without finding local optimum. In PSO algorithm, it is possible for the inertia weight to drive all velocities to zero before the swarm manages to reach a local extremum. Thus, in this paper MPSO is introduced to address the issue of premature convergence to solutions that are not guaranteed to be local extrema.
 solved by PSO. Also, the GCPSO, which is introduced by Van den
Bergh and Engelbrecht (2002) to address the issue of premature convergence of PSO, is applied to validate the results.
Furthermore, the results obtained by MPSO, PSO and GCPSO are compared with those obtained by other approaches reported in the literature. To make a proper background, PSO, GCPSO and the proposed modified PSO (MPSO) are explained in the next
Section. 2. PSO, GCPSO and MPSO algorithms 2.1. PSO algorithm
The particle swarm optimizer is a population based optimiza-tion method that was introduced by Kennedy and Eberhart (1995) . In PSO, each particle moves in the search space with a velocity according to its own previous best solution and its group X  X  previous best solution. The dimension of the search space can be any positive integer. Each particle updates its position and velocity with the following equations:
X  X  t  X  1  X  X  X i  X  t  X  X  V i  X  t  X  1  X  X  1  X  where X i ( t )and V i ( t ) are vectors representing the position and velocity of the i th particle, respectively and
V where j A 1, 2, y , d represents the dimension of the particle; 0 r w o 1 is an inertia weight determining how much of particle X  X  previous velocity is preserved; c 1 and c 2 are two positive accelera-from U(0, l); pb i is the personal best position found by the i th
The PSO has been proven to be very effective for static and dynamic optimization problems. But in some cases, it converges prematurely without finding even a local optimum. Standard PSO may converge at the early stage: the best particle moves based only on the inertia term since X i  X  pb i  X  gb at the time step when it became the best. Later, its position may improve where X i holds again. Also, its position will worsen, where it will be drawn the inertia weight to drive all velocities to zero before the swarms manage to reach a local extremum. When all the particles collapse with zero velocity on a given position in the search space, then the swarm has converged, but this does not mean that the algorithm has converged to a local extremum. It merely means that all the particles have converged on the best position discovered so far by the swarm. This phenomenon is referred to as stagnation . Thus, it is possible for the standard PSO to converge prematurely without finding even a local extremum. The MPSO is introduced in the next section to address the issue of premature convergence to solutions that are not guaranteed to be local extrema. 2.2. GCPSO algorithm
GCPSO was introduced by Van den Bergh and Engelbrecht (2002) to address the issue of premature convergence to solutions that are not guaranteed to be local extrema. The modifications to the standard PSO involve replacing the velocity update (2) of only the best particle with the following equation:
V  X  t  X  1  X  X  wV i , j  X  t  X  X i , j  X  t  X  X  pb i , j  X  r  X  t  X  r where r j is a sequence of uniform random numbers sampled from
U( 1,1) and r ( t ) is a scaling factor determined using  X  0  X  X  1 : 0  X  t  X  1  X  X  where s c and f c are tunable threshold parameters.

Whenever the best particle improves its personal best position, the success count is incremented and the failure count is set to 0 and vice versa. The success and failure counters are both set to 0 whenever the best particle changes. These modifications cause the best particle to perform a directed random search in a non-zero value around its best position in the search space. 2.3. The proposed modified PSO (MPSO) algorithm
MPSO differs from PSO by controlling the diversity of a small population, thereby avoiding premature convergence. Assuming in the PSO algorithm, n particles are generated randomly. The modifications to the standard PSO involve generating one-third of n , randomly and generating two-third of n by the following equations: X X where j A 1, 2, y , d represents the dimension of the particle; i
A 1,2, y , n /3 and k A 1,2, y , n /3 represent the two-third of n ; X min j , X max j represent the minimum and maximum value related to the j th particle; r is a parameter in the interval [0, 1].
The generated populations are evaluated by the fitness (objective) function. Then one-third of the evaluated population with the best fitness is selected as the next generation followed by finding the pb i and gb for the particles in the selected population. The position and velocity of the i th particle in the selected population are updated according to (1) and (2). Then two-third of the population (or two-third of n ) will be generated based on (5) and (6). In MPSO the exploration is controlled by r and should vary linearly in the interval [0, 1]. As it increases the exploration will be increased and the algorithm avoids the premature convergence.

By the above mechanism, the diversity of the population is controlled. In other words, the exploration and exploitation of the search space are increased, resulting in avoiding premature convergence. 3. Problem formulation
For convenience in solving the ED problem, the unit generation output is usually assumed to be adjusted smoothly and instanta-neously. Practically, the operating range of all online units is restricted by their ramp rate limits by forcing the units to operate continually between two adjacent specific operation zones. In addition, the prohibited operating zones, valve-point effects and multifuel options must be taken into account. The traditional and practical ED is explained below. 3.1. Traditional ED problem with smooth cost functions
In the traditional ED problem, the cost function for each generator has been approximately represented by a single quadratic function. The primary objective of the ED problem is to determine the optimal combination of power outputs of all generating units so that the required load demand at minimum operating cost is met while satisfying system equality and inequality constraints. There-fore, the ED problem can be described as a minimization problem with the following objective: min F  X  subject to P
Gi min r P Gi r P Gi max for i  X  1 , 2 ... , N G  X  9  X  where F is the total generation cost ($/hr), F i is the fuel-cost function of generator i ($/hr), N G is the number of generators, P the real power output of generator i (MW), and a i , b i and c the fuel-cost coefficients of generator i , P load is the total load in the system (MW), P loss is the network loss (MW) that can be calculated by the B-matrix loss formula, P Gi min and P Gi max minimum and maximum power generation limits of generator i . 3.2. Practical ED problem with non-smooth cost functions
As it is mentioned, a practical ED must take ramp rate limits, prohibited operating zones, valve-point effects, and multifuel options into consideration to provide the completeness for the ED formulation. The resulting ED is a non-convex optimization problem that has multiple minima, which makes the problem of finding the global optimum difficult. (1) Generator Ramp Rate Limits: If the generator ramp rate limits (2) Prohibited Operating Zones: A generator with prohibited (3) Valve-Point Effects: The generator with multi-valve steam (4) Multifuel options: A piecewise quadratic function is used to each unit, the cost function of the generator with valve-point loading is expressed as 4. Study systems
To assess the efficiency of the proposed MPSO, it has been applied to ED problem by considering three test systems having non-convex solution spaces. These data are given by Selvakumar and Thanushkodi (2007) and Gaing (2003) and are widely used as benchmarks in this field and have been used by many other research groups around the world for similar purposes.
The results obtained from the MPSO are compared with those of other methods reported in literature, i.e., the particle swarm optimization (PSO) ( Selvakumar and Thanushkodi, 2007; Gaing, 2003 ) and the genetic algorithm (GA) ( Selvakumar and
Thanushkodi, 2007; Gaing, 2003 ). (1) The first study system : This study system consists of six generators with ramp rate limit and prohibited operating zones. The input data for 6-generator system are given in
Selvakumar and Thanushkodi (2007) and the total demand is set as 1263 MW. All the generators are having ramp rate limits. The network losses are calculated by the B-matrix loss formula.
It was reported in Selvakumar and Thanushkodi (2007) that the best generation cost reported until now is $15450. (2) The second study system : This study system consists of 15 generators with ramp rate limit and prohibited operating zones.
The input data of this system are given in Gaing (2003) and has a total load of 2630 MW. Also, the network losses are calculated by B-matrix loss formula. The main difference of the study systems 1 and 2 is that the system 2 has many local minima compared to system 1. Thus, the ability of the proposed algorithms is investigated onalargersystem.Thebest generation cost reported until now is 32858 $/h ( Gaing, 2003 ). (3) The third study system: This study system consists of ten generators with multifuel options and valve-point effects ( Selvakumar and Thanushkodi, 2007 ). The total demand for this system is set as 2700 MW. 5. Implementation of PSO, GCPSO and MPSO
In order to find the effectiveness and superiority of the MPSO, the test results are compared with the results obtained by other algorithms available in the literature. Therefore, to make the results comparable, the same number of population and iterations available in the literature are used in this paper. The implementa-tion of PSO, GCPSO and MPSO for ED problem of the study systems are given below:
For the study system 1 with six generators, the goal of the optimization is to find the best generation for the six generators. Therefore, each particle is a d -dimensional vector in which d  X  6. Initialization is randomly made based on the position of each particle. In the PSO and GCPSO algorithms, n particles are generated randomly where n is selected to be 20 and MPSO starts with 7 (one-third of 20) and will increased to 21 based on (5) and (6). The number of iteration is considered to be 50, which is the stopping criterion.

The parameters in (2) must be tuned. These parameters control the impact of the previous velocities on the current velocity where, based on author X  X  previous experience, c 1 and c 2 1.5, w decreases linearly from 1.4 to 0.2. Also, in (4) s considered to be 5 and r increases linearly from 0.1 to 0.8 in (5) and (6).

Each particle in the population is evaluated using the objective function defined by (7) subject to (8) X (11) searching for the particle is recorded and represented as: pb i  X  ( pb i ,1 b particles in the group is for gb . Using gb and pb , particle position and velocity is updated in PSO, GCPSO and MPSO.

To find the minimum cost, the algorithms are run for 50 independent runs under different random seeds. The results obtained by the algorithms are shown in Table 1 . The last three columns of the table show the obtained results by binary version of GA, PSO and a modified (new) version of PSO having local random search (NPSO-LRS) reported in ( Selvakumar and Thanushkodi, 2007 ). This table shows that the PSO applied in this paper is performing better than the available PSO in the literature. Also, the MPSO is performing better than PSO, GCPSO and NPSO-LRS in terms of the best generation schedule with minimum network loss in addition to minimum generation cost.
The average best-so-far of each run are recorded and averaged over 50 independent runs. To have a better clarity, the convergence characteristics in finding the minimum cost are given in Fig. 4 . This figure shows that the MPSO algorithm performs well due to the extra diversification provided by Eq. (5) and (6).

To investigate the ability of the MPSO in finding the solution and convergence characteristics of the algorithm, the same study is carried out on the second study system which is a larger system. The number of population in PSO and GCSO is considered to be 100 and in MPSO is set to 33. The number of iteration is considered to be 200. The parameters in (2) are set to the same values used in the study system 1.

The results obtained are given in Table 2 . The last two columns of the table show the obtained results by binary version of GA and PSO reported in ( Gaing, 2003 ). Once again, the results show that MPSO finds the optimum solution. Also, the results in Tables 1 and 2 show that the PSO applied in this paper performs better than the ones reported in the literature. The reason is that PSO is sensitive to the tuning of some weights or parameters ( c 1 , c 2 and w ) in the algorithm. These parameters are tuned in this paper. Therefore, the settings of the parameters are different from the ones used in the literature.

The convergence characteristics of three algorithms in finding the minimum cost are given in Fig. 5 for the study system 2. It is clear that dimensionality is not the key factor and the MPSO still outperforms GCPSO and PSO significantly.

Figs. 4 and 5 show the quickness of the algorithms as well as the robustness of the algorithms. An algorithm is robust if it gives consistent results during the independent runs. These figures reveal that not only the MPSO is much quicker than PSO and
GCPSO in finding the solution but also, the robustness of the algorithm is much better than the PSO and GCPSO.

In the study system 3, the number of population is considered to be 30. The number of iterations is considered to be 200, which is the stopping criterion. The parameters in (2) are set to the same values used in the study system 1.

For the third study system with 10-generator, the best power output that results from PSO, GCPSO and MPSO are listed in
Table 3 . The last two columns of the table show the obtained results by an improved GA with multiplier updating (IGA_MU) and NPSO_LRS reported in Selvakumar and Thanushkodi (2007) . Once again, the entries in Table 3 show that MPSO performs well. are given in Fig. 6 . Similar results to the previous ones are obtained. The PSO and GCPSO perform similar but the MPSO performs significantly better than PSO and GCPSO consistently and able to improve its solution steadily for a long time. 6. Conclusion
ED problem using a modified particle swarm optimization (MPSO). Two types of non-smooth ED problems; ED with ramp rate limits and prohibited operating zones and ED with combined valve-point loading effects and multifuel options are considered.
For the ED problems with non-smooth cost functions, the MPSO has provided the global solution for the study systems. From the comparisons of the results obtained by MPSO and the results of Average-best-sofar other methods available in the literature, it is shown that the proposed MPSO is very effective in giving quality solutions consistently for non-smooth ED problems.
 References 620 630 640 650 660 670 680 690 700 710 Average-best-sofar
