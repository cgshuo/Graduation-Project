 In 2006, Fire and Mello received their Nobel Prize for their contributions to research on RNA interference (RNAi) that is the biological process in which RNA molecules inhibit gene expression, typically by causing the destruction of specific mRNA molecules. Their work and that of others on discovery of RNAi have had an immense impact on biomedical research and will most likely lead to novel medical applications. On RNAi research, designing of siRNAs (short interfering RNAs) with high efficacy is one of the most crucial RNAi issues. Highly effective siRNAs can be used to design drugs for viral-mediated diseases such as Influenza A virus, HIV, Hepatitis B virus, RSV viruses, cancer disease and so on. As a result, siRNA silencing is considered one of the most promising techniques in future therapy. Finding highly effective siRNAs among thousands of potential siRNAs for an mRNA remains a great challenge.
 Various siRNA design rules have been found by empirical processes since 1998. The first rational siRNA design rule was detected by Elibalshir et al. [2]. They suggested that siRNAs having 19 X 21 nt (nucleotide) in length with 2 nt over-hangs at 3 X  end can efficiently silence mRNAs. Scherer et al. reported that the thermodynamic properties (G/C content of siRNA) to target specific mRNAs are important characteristics [11]. Soon after these works, many rational design rules for effective siRNAs have been found, typically those in [10], [15], [1], [4], [7], [14]. For example, Reynolds et al. [10] analyzed 180 siRNAs and found eight criteria for improving siRNA s election: (1) G/C content 30  X  52%, (2) at least 3 As or Us at positions from 15 to 19, (3) absence of internal repeats, (4) an A at position 19, (5) an A at position 3, (6) a U at position 10, (7) a base other than G or C at position 19, (8) a base other than G at position 13.

However, most of siRNA design tools using the above-mentioned design rules have low accuracy, because about 65% of th e siRNAs predicted as high effective was failed when tested experimentally as they were 90% in inhibition and near 20% of them were found to be inactive [9]. One reason is the previous empirical analyses only based on small datasets and focused on specific genes. Therefore, each of these rules certainly is poor to individually design effective siRNAs.
Since nearly a decade, machine learning techniques have alternatively been applied to predict knockdown efficacy of siRNAs. The first predictive model was proposed by Huesken et al. in which motifs for effective and ineffective siRNA se-quences were detected basing on the signi ficance of nucleotides by using a neural network to train 2,182 scoring siRNAs (scores are real numbers in [0, 1], the high score the higher knockdown efficacy) and test on 249 siRNAs [5]. This data set was consequently used to build other predictive models [6], [13], [16]. Recently, Qui et al. used multiple support vector regression with RNA string kernel for siRNA efficacy prediction [8], and Sciabola et al. applied three dimension struc-tural information of siRNA to increase predictability of the regression model [12]. However, most of those methods suffer from some drawbacks. Their correlations between predicted values and experimental values of dependent variable ranging from 0.60 to 0.68 were considerably decreased when testing on independent data sets. It may be caused by the fact that the Huesken dataset may not be repre-sentative of the siRNA population having about 4 19 siRNAs and the sample size is small. Besides the scoring siRNA dataset, the labelled siRNA datasets, e.g. siRecord database [9] with labels such as  X  X ery high X ,  X  X igh X ,  X  X edium X ,  X  X ow X  for the knockdown ability were also exploited by classification methods.
Our work aims to develop a novel framework for better prediction of the siRNA knockdown ability. The key idea is not only focusing on learning algo-rithms but also exploiting results of the empirical process to enrich the data. To this end, we first learn transformation matrices by incorporating existing siRNA design rules with labelled siRNAs in siRecord database. We then use the trans-formation matrices to enrich scoring siRNAs as transformed matrices and do prediction with them by bilinear tensor regression where the Frobenius norm is appropriately replaced by L 2 regularization norm for an effective computation. Experiments show that the proposed method achieves results better than most existing models. The contributions of this work are summarized as follows 1. A novel generic framework to predict siRNA efficacy by enriching siRNA 2. An optimization method to enrich siRNAs using siRNA design rules found 3. The use of L 2 norm instead of Frobenius norm in bilinear tensor regression The problem of siRNA knockdown efficacy prediction using siRNA design rules is formulated as follows:  X  X iven: Two sets of labelled siRNA and scoring siRNA sequences of length n ,  X  Find: A function that assigns a right score to a given siRNA.

The proposed framework consists of four steps in two phases. The first phase is to encode siRNAs and learn transfor mation matrices. The second phase is to use transformation matrices to enrich siRNAs as transformed matrices and learn model parameters of the bilinear tensor regression to predict the score of siRNAs using transformed matrices. The steps of the framework are summarized in Table 1.
 2.1 Encoding siRNA and Transformation Matrix Learning Step 1 of the framework can be easily done where each siRNA sequence with n nucleotides in length is encoded as a binary encoding matrix of size n  X  4. In fact, four nucleotides A, C, G, or U are encoded by encoding vectors (1,0,0,0), (0,1,0,0), (0,0,1,0) and (0,0,0,1), respectively. If a nucleotide from A, C, G, and Uappearsatthe j th position in a siRNA sequence, j =1 , ..., n , its encoding vector will be used to encode the j th row of the encoding matrix.

Step 2 is to learn tran sformation matrices T k regarding the k th design rule, k =1 , ..., K . T k has size of 4  X  n where the rows correspond to nucleotides A, C, G, and U and the columns correspond to n positions on sequences. T k are learned one by one from the set of siRNAs and the k th design rule, thus we represents the knockdown ability of nucleotide i at position j regarding the k th design rule. Each cell T [ i, j ] to be learned have to satisfy a number of constraints. First, they are basic and normalization constraints on elements of T
The second kind of constraints related to design rules. Each design rule propo-sitionally describes the occurrence or abs ence of nucleotides at different positions of effective siRNA sequences. Therefore , if a design rule shows the occurrence (absence) of some nucleotides on j th position, then their corresponding values in the matrix T would be greater (smaller) than other values at column j .For example, the design rule in the right table in Figure 1 illustrates that at posi-tion 19, nucleotides A/U are effective and nucleotide C is ineffective. It means that knockdown ability of nucleotides A/U are bigger than that of nucleotides G/C and knockdown ability of nucleotide C is smaller than that of the other down ability of nucleotides A, C, G and U at position 19, respectively. Therefore, five constraints at column 19 of T are formed. Generally, we denote the set of R trick inequality constraints on T by the design rule under consideration by
The third kind of constraints relating to preservation of the siRNA classes after being transformed by using transformation matrices T k , it means that siRNAs belonging to the same class should be more similar to each other than siRNAs belonging to the other class.

Let vector x l of size 1  X  n denote the transformed vector of the l th siRNA sequence using the transformation matrix T .The j th element of x l is the element of T at column j and the row corresponds to the j th nucleotide in the siRNA sequence. To compute x l , new column-wise inner product is defined as follows where X l [ j, . ]and T [ ., j ]arethe j th row vector and the j th column of the matrix X l and T , respectively, and x, y denotes the inner product of vectors x and y .
The left table in Figure 1 shows an example of encoding matrix X ,trans-formation matrix T and transformed vector x of the given sequence AUGCU. The rows of X represent encoding vectors of nucleotides in the sequence. Given transformation matrix T of size 4  X  5. The sequence AUGCU is represented by Therefore, transformed data can be computed by the column-wise inner product x = T  X  X .

The problem of transformation matrix learning is now formulated as finding T under constraints (1), (2) and (3) so that the similarity of transformed vectors x l in the same class is minimum and the dissimilarity of x l in different classes is maximum. The learning problem then leads to solve the optimization problem with the following objective function
In the objective function, the two first components are the sum of similarity of sequence pairs belonging to the same class and the last one is similarity of sequence pairs belonging to two different classes; d ( x, y ) is the similarity measure between x and y (in this work we use Euclidean distance and L 2 norm); N 1 and N 2 are the two index sets of high and low efficacy siRNAs, respectively. Constraints g i ( T ) can also help to avoid the trivial solution of the objective function.
 This optimization problem is solved by the following Lagrangian form where  X  r ,r =1 , ..., R and  X  j ,j =1 ,...,n are Lagrangian multipliers. To solve the minimization problem, an iterative method is applied. For each pair of ( i, j ), T [ i, j ] is solved while keeping the other elements of T . The Karush-Kuhn-Tucker conditions are  X  Stationarity:  X E  X T [ i,j ] =0 ,i =1 , ..., 4and j =1 ,...,n .  X  Dual feasibility:  X  r  X  0 ,r =1 ,...,R .  X  Complementary slackness:  X  r g r ( T )=0 ,r =1 ,...,R .

From the last three conditions, we have  X  r =0 ,r =1 ,...,R . Therefore, the stationarity condition can be derived as follows
Set Z p,q =( X p  X  X q ) T and A ij is the vector resulting from the column j of matrix A by removing the element A [ i, j ]. Therefore, the above formulation is derived as follows We define the following equations Substitute (6) and (7) to  X E  X T [ i,j ] ,wehave
At a column j , T has to satisfy Substitute (9) to (8), equation (8) can be derived as In this task, K design rules are used to learn K transformation matrices. The main steps are summarized in Algorithm 1. For each siRNA design rule, the algorithm will update each element o f the transformation matrix according to equation (10). In each iterative step, the transformation matrix without trick inequality constraints is updated to reach the global optimal solution. If updated elements in a column satisfy the trick inequality constraints characterizing the condition at the corresponding position of the rule, that column will be updated to the target solution. The transformation matrix is updated until meeting the convergence criteria. . Fro is the Frobenious norm of a matrix.
 Algorithm 1. Transformation matrices learning 2.2 Tensor Regression Model Learning Given a siRNA data set D = { ( s l ,y l ) } N 1 where s l is the l th siRNA sequence of size n and y l  X  R is the knockdown efficacy score of s l .Let X l denotes the encoding matrix of s l . Each encoding matrix X is transformed to K represen-tations by K transformation matrices, ( T 1  X  X,T 2  X  X,...,T K  X  X ). R ( X )= ( T
The regression model can be defined as the following bilinear form where  X  =(  X  1 , X  2 ,..., X  K ) is a weight vector of the K representations of X and  X  =(  X  1 , X  2 ,..., X  n ) T is a parameter vector of the model, and  X R ( X )component is the linear combination of representations T 1  X  X,T 2  X  X,...,T K  X  X . It also shows the relationship among elements on each column of the second order tensor or each dimension of T k  X  X,k =1 , 2 ,...,K . Equation (11) can be derived as follows where A  X  B is the Kronecker product of two matrices A and B ,and vec ( A )is the vectorization of matrix A. The weight vector  X  and the parameter vector  X  are learned by minimizing the fo llowing regularized risk function where  X  is the turning parameter to tradeoff between bias and variance, and  X  T  X   X  Fro is the Frobenius norm of the first order tensor  X  T  X   X  . L (  X ,  X  ) can be derived as follows The risk function with Frobenius norm is converted to equation (14) with L 2 norm. In order to solve this optimization problem, an alternative iteration method is used. At each iteration, the parameter vector  X  is effectively solved by keeping the weight vector  X  and vice versa. Our proposed tensor regression model l earning is summarized in Algorithm 2. In this algorithm, siRNA sequences are firs tly represented as encoding matrices. The encoding matrices are then transformed to tensors by using K transforma-tion matrices. After that, the weight vector  X  and the coefficient vector  X  are updated until meeting the convergence criteria, where t Max denotes the maxi-mum iterative step to update  X  and  X  ,and  X  1 and  X  2 are thresholds for vectors  X  and  X  .
 Algorithm 2. Tensor Regression Model Learning This section presents experimental evaluation in comparing the proposed method TRM (stands for  X  X ensor regression mo del X ) with the most recent reported meth-ods for siRNA knockdown efficacy predic tion on commonly used datasets. Dis-cussion on the framework and methods will follow the experiment report. Comparative Evaluation. The comparison is carried out using four data sets  X  The Huesken dataset of 2431 siRNA sequences targeting 34 human and ro- X  The Reynolds dataset of 240 siRNAs [10].  X  The Vicker dataset of 76 siRNA sequences targeting two genes [17].  X  The Harborth dataset of 44 siRNA sequences targeting one gene [3].
TRM is compared to most state-of-the-art methods for siRNA knockdown efficacy prediction recently reported in t he literature. As experiments in those methods cannot be repeate d directly, we employed the results reported in the literature and carried out experimen ts on TRM in the same conditions of the other works. Concretely, the comparative evaluation is done as follows 1. Comparison of TRM with Multiple Kernel Support Vector Machine proposed 2. Comparison of TRM with four state-of-the-art methods of BIOPREDsi [5], 3. Comparison of TRM with 18 methods including BIOPREDsi, DSIR, Ther-
In running Algorithm 2, the thresholds for the weight vector  X  and the coef-ficient vector  X  are set up as 0.001 and the maximum iterative step is 1000. The turning parameter  X  is chosen by minimizing the risk function when testing on validation dataset. Particularly, we do 10 X  X old cross validation on the training set for each  X  belonging to [0 , log 50] and compute the risk function where fold i is validation set, f ( x ) is a tensor predictor learnt from training set except validation set fold i . F is the number of folds to do cross validation on training set. In our work, we do F-fold cross validation thus F equals to 10.
In the transformation matrices learning task, we use the labelled dataset col-lected from siRecord database [9]. This data set has 2470 siRNA sequences in  X  X ery high X  class and 2514 siRNA sequences in  X  X ow X  and  X  X edium X  classes. Each siRNA sequence has 19 nucleotides. Seven design rules used to learn matrices are Reynolds rule, Uitei Rule, Amarzguioui rule, Jalag rule, Hsieh rule, Takasaki rule and Huesken rule. The convergence criteria in Algorithm 1 are set up as following: threshold  X  for transformation matrices is 2 . 5 E  X  8 and the maximum iterative step is 5000.
 Discussion. As reported in the experimental c omparative evaluation, the pro-posed TRM achieved higher results than most other methods for prediction of siRNA knockdown efficacy. There are some r easons of that. First, it is expensive and hard to analyze the knockdown efficacy of siRNAs, and thus most available datasets are of relatively small size leading to limited results. Second, TRM has its advantages by incorporating domain knowledge (siRNA design rules) found from different datasets in experiment s. Third, TRM is generic and can be eas-ily exploited when new design rules are discovered or more analyzed siRNAs be obtained. Four, one drawback of TRM is its transformation matrices are learned using positional features of available design rules, and thus they lack some characteristics effecting to kno ckdown efficacy of siRNA sequences such as GC content, thermodynamic propert ies, GC stretch, etc. It may be one of reasons that at this moment TRM cannot get higher performance when testing on HU test set than the best current model SVM [12].

Table 3 shows the learned transformation matrix capturing positional charac-teristics of Reynolds rule. One of charact eristics is described as  X  X n nucleotide  X  X  X  at position 19 X . That characteristic means that at column 19, the cell (1,19) has to be the maximum value. In the matrix, the value at this cell is 0.393939 and is the highest value of this column. In this column, we also know knock-down efficacy of each nucleotide at posi tion 19. Therefore, nucleotides can be arranged by the decreasing order of the ir efficacy: A,U, G, and C. In the order, nucleotide U has efficacy of 0.368687 that also can be used to design effective siRNAs. In addition, if a position on siRNAs is not described in characteristics of the design rules, values at the column corresponding to this position is learned to satisfy classification assumption an d property to get knockdown efficacy of each nucleotide such as values at columns 1, 2, 4 and so on. In this paper, we have proposed a novel framework to predict knockdown effica-cies of siRNA sequences by successfully en riching the siRNA sequences into trans-formed matrices incorporating the effectiv e siRNA design rules and predicting the siRNA knockdown efficacy by bilinear tensor regression. The experimental com-parative evaluation on commonly used datasets with standard evaluation proce-dure in different contexts shows that the proposed framework and corresponding methods achieved better results than most existing methods for doing the same task. One significant feature of the proposed framework is it can be easily extended when new design rules are discovered a s well as more siRNAs are analyzed by em-pirical works.

