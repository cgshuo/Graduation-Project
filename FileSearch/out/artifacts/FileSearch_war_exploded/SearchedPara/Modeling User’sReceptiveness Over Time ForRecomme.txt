 Existing recommender systems model user interests and the social influences independently. In reality, user interests may change over time, and as the interests change, new friends may be added while old friends grow apart and the new friendships formed may cause further interests change. This complex interaction requires the joint modeling of user in-terest and social relationships over time. In this paper, we propose a probabilistic generative model, called Receptive-ness over Time Model (RTM), to capture this interaction. We design a Gibbs sampling algorithm to learn the receptive-ness and interest distributions among users over time. The results of experiments on a real world dataset demonstrate that RTM-based recommendation outperforms the state-of-the-art recommendation methods. Case studies also show that RTM is able to discover the user interest shift and re-ceptiveness change over time.
 H.3.3 [ Information Storage and Retrieval ]: Search and Retrieval-Information Filtering Algorithms, Experimentation, Measurement, Performance Recommendation, Social trust, Personalization, Collabora-tive Filtering
Recommender systems are fast becoming the tools of choice for a user to sieve through tons of online materials in or-der to find information that is relevant to him/her. Many of these recommender systems employ collaborative filter-ing (CF) techniques to identify similar users based on their purchased history or past ratings to generate personalized recommendation. This works well when the users have long term interests that do not change from time to time. How-ever, for users with short term interests, modeling the shift in users X  interests has been shown to improve recommenda-tion accuracy. This is achieved by introducing a personal-ized time factor for each user to capture the shift in users X  interests over time [18, 7, 5, 8]. With the advent of on-line social networks, social network based CF approaches to recommendation have emerged [4, 17, 11]. The assump-tion is that friends tend to influence their friends to exhibit similar likes and dislikes. Hence, we can further improve recommendation accuracy by taking into account the social relationships.

Let us consider the snapshots of users X  item ratings and their social relationships at time points T 1 and T 2 in Fig-ure 1. Suppose our target user is U 2 . At time point T both users U 1 and U 2 have watched and rated the movie  X  M ovie 2 X . Traditional CF methods [15, 16, 13] will group U 1 and U 2 as similar users and recommend  X  M ovie 1 X  to U since U 1 has watched X  M ovie 1 X  X reviously. Yet, U 2  X  X  interest does not remain static. We observe that at time point T 2 his interest has shifted from movies to kids as he rates a new item X  Kids 1 X . Recognizing this, CF with temporal dynamics will recommend  X  Kids 2 X  to U 2 instead. On the other hand, looking at the social relationships among users, we realize that U 2 and U 3 are friends. Hence, social network based CF will conclude that U 2 is likely to like  X  Book 1 X  and  X  Book 2 X  since his friend U 3 have read and rated these books. Each of the different methods arrive at different items to recom-mend. How do we reconcile the different recommendations? To complicate matter, social relationships are not static but evolve over time as a user can make new friends and old friends do grow apart. We observe that at time point T 1 , U has only one friend U 3 , whereas at time point T 2 , his friends are f U 3 ; U 4 g . Now if we want to give a recommendation to U 2 at time point T 2 , what item should we recommend so that it is most likely to be accepted by U 2 ?
To answer this question, we must be able to quantify the degree of influence on a user X  X  decision making process from his/her long term and short term interests, as well as his/her social trust relationships over time. Note that these two factors are not independent. We advocate that when two users X  long term and short term interests are aligned, they are likely to become friends, and they will tend to be more receptive towards each other X  X  preferences. Conversely, if the users X  interests are not aligned, they will grow apart after some time and become less receptive towards the preferences of the other user.
In this paper, we propose a model called the Receptive-ness over Time Model (RTM), to quantify the dynamic in-teraction between user interest and social trust. This model utilizes a probabilistic generative approach to leverage on the information embedded in a users X  social trust network, and the users X  rating history. The RTM captures (1) the degree of receptiveness for each user over time (modeling receptiveness change), (2) the distribution of personal pref-erence over the latent topics for each user over time (mod-eling users X  interests change), (3) the distribution of items for each topic over time. The estimation of the RTM model parameters is performed using Gibbs sampling MCMC pro-cedure. To overcome the data sparsity problem, we design a special Bayesian treatment to the latent variable to ensure that the evolution of latent parameter is smooth and share the topic-level rating knowledge across different time points. We carry out experiments on a real world Epinions dataset to demonstrate the effectiveness of our proposed approach. We also demonstrate how RTM can be used to explicitly track and visualize the change in users X  interests and their receptiveness to other users.

The rest of the paper is organized as follows. Section 2 gives the related work. Section 3 describes our problem for-mulation and the proposed RTM model. Section 4 presents the experimental results, and we conclude in Section 5.
Existing recommender systems for item recommendation can be roughly divided into two major categories. Content-based systems [1, 12] make use of explicitly stated profiles of users or products to characterize their nature. On the other hand, collaborative filtering (CF) based systems [16, 15] do not exploit such explicit user profiles. Instead, they infer the user profiles through their past activities, such as their transaction history or product satisfaction expressed in rat-ings. The earliest studies [16, 15] on collaborative filtering automatically predict relevant items ratings for a given user by referencing item rating information from other similar users. Recently, [13] propose a Bayesian model that applies LDA to cluster users and items into groups and model rat-ings using group membership. Bi-LDA further extends this model to allow users or movies to belong to several groups, one for each rating.

Temporal modeling has largely been neglected in the col-laborative filtering community until Koren et.al [7] propose their time-aware algorithm timeSVD++. This work extends the standard matrix factorization model by introducing time dependent user/item biases and user latent factors to cope with changing user and item characteristics. Xiong et. al [8] view the temporal domain as a third dimension and use tensor factorization to factorize the temporal components so that a user X  X  rating on an item within a particular time step depends not only on the user and item factors but also on the latent factors associated with the time step. To cope with temporal dynamics in implicit user feedback data, [18] pro-poses a random walk model where the user-item edges are weighted such that a user X  X  more recent preferences would be more strongly emphasized during the random walk. [14] combines the latent factor model and Markov chain model to predict the next items a user may be interested in. While all these methods are able to model users X  preferences and their shift of interests over time, they have not taken social influences from friends into account.

Independently, a number of researchers have realized that social trust plays a great role in user acceptance of the rec-ommendation [6, 3]. The works in [9, 10, 11] propose to use matrix factorization method to learn the user latent vectors and item latent vectors and integrate social trust network into their model through different social regularization term. [4] develop a generative approach with trust propagation based on [11]. [17] develop a joint personal and social la-tent factor (PSLF) model which combines the collaborative filtering and social network modeling approaches for social recommendation. [19] propose the probabilistic model called social influenced selection (SIS), to model the decision mak-ing of item selection. However, all these works assume that the social relationships are static and they do not consider users X  changing interests. To the best of our knowledge, this is the first work that models both the shift in user interests and change in social relationships for recommendation. In this section, we first give our problem formulation. Then we describe the RTM model and show how the model can be used for various tasks such as rating prediction, track-ing receptiveness between friends and user interest change.
In recommender systems, we have a set of users U = f u 1 , ... u a g and a set of items M = f m 1 , ... m b g . At time t , a user u expresses his/her preference for an item m by giving a rating in the range of 1 to 5 with 1 being the least preferred and 5 being the most preferred. These ratings are represented using the matrix R ( t ) with dimensions j U jj Each entry in this matrix, r ( t ) ( u; m ), corresponds to the rating provided by user u on item m at time point t .
Besides the rating information, we also represent the social relationships among the users at time t in the form of a matrix S ( t ) with dimensions j U jj U j such that its entry s ( t ) ( u; v ) = 1 if u issues trust statement towards user v at time point t . Otherwise s ( t ) ( u; v ) = 0. Note that S asymmetric in general.

We formulate our task as follows: Given a user u 2 U at time t and an item m 2 M , we want to predict the rating that u will give to m at time t based on the past rating history and social relationships, i.e. R ( t  X  ) and S ( t t  X  2 [1 ; t ).
In order to capture the dynamic interactions between long term and short term interests as well as friendships for rec-ommendation, our model has two parts. The first part mod-els user receptiveness at a single time point. The second part incorporates temporal information to allow for model-ing over time.
Receptiveness captures the dynamic interaction between user interest and social trust. Existing social CF filter-ing approaches [11, 10, 4, 17] incorporate social trusts as auxiliary data to regulate user preferences for recommen-dation. In other words, if two users are friends, social CF approaches will assign greater weights to their correspond-ing preferences. However, we realize that a user X  X  decision making process is not so simplistic. A person may be his/her friend, however, if that friend X  X  interests are not aligned with him/her, the receptiveness to that friend X  X  interest will not be high and vice versa.

Among the approaches that model user X  X  interests for rec-ommendation, Bi-LDA has proven to work well in practice [13]. It is a generative model with several advantages that are suitable for our work: 1. It models the distribution of users X  interest within a 2. It allows the inclusion of prior knowledge into the gen-
However, Bi-LDA does not incorporate social relation-ships. For this reason, we extend Bi-LDA to incorporate social relationships and call it Bi-LDA social . Table 1 summa-rizes the symbols used in describing the Bi-LDA social model. In Bi-LDA social , each user u follows a preference distribu-tion friend u that depicts how likely u  X  X  friend will contribute to u  X  X  item rating decision. The probability for a friend of u to influ ence the item rating decision is proportional to the receptiveness of u to this friend. Note that, we assume u is a special friend of himself/herself (i.e., u 2 F ( u )).
In addition, each user u and item m follow the topic distri-bution parameters user u and item m respectively. To rate an item m , a user u first draws a user topic z user u;m and the item m draws a item topic z item u;m from the corresponding distri-of user-item topic joint distribution over values f 1... R
During the generative process, ratings are generated as follows: 1. Choose a K L distribution over ratings  X  Dir ( ) 2. Choose a distribution over friends for each user friend 3. Choose a distribution over K users X  topic for each user 4. Choose a distribution over L items X  topic for each item 5. For each rating r u;m :
The graphical model is shown in Figure 2. We note that the decision of rating given by user u on item m is based on the receptiveness of a friend (including u himeself/herself). The recep tive friend z friend u;m can be drawn from M ultinomial ( u ). Once the receptive friend z friend u;m is picked, we randomly draw a topic z user u;m from user z friend u;m  X  X  preference based on M ultinomial ( user u ). Similarly, a topic z item item m is also drawn based on M ultinomial ( item m ). The user and item topics z user u;m and z item u;m together with user-item topic joint distribution  X  jointly specify the rating, that is, r Figure 2: Graphical model representation of Bi-
In order to compute the rating r u;m , we need to obtain a number of model parameters,  X  = f friend u , z friend u;m tribution of the receptiveness of user u to his/her friends, tribution of user u  X  X  preferences on the K users X  topics, tribution of an item m on the L items X  topics,  X  2 R K  X  L with Dirchlet priors is rating-scale mixing proportion of user-item joint topic, z friend u;m represents the receptive friend whom user u has picked for the rating given by user u on item m , z user u;m represents the topic user u has picked and z u;m represents the topic item m has picked. The hyper-parameters of the Dirichlet priors friend ; user , item can be simply set to 1 [13].

Let x be the observed rating for user u on item m . Putting everything together, we obtain the joint probability distri-bution for the Bi-LDA social as follows:
Solving this equation is intractable, instead we adapt the collapsed Gibbs sampler [2] to learn the model parameters. In particular, we analytically marginalize out all the conju-gate distributions  X , user , item and friend and obtain an expression for the joint probability P ( x; z user ; z item With this, we can compute the conditional distributions nec-essary for Gibbs sampling. We give the explicit forms for the following conditional distributions where x = r u;m is the ob-wh ere n friend u;f denotes the number of times that user u is receptive to f in all the ratings , ( n friend u;f )  X  ( u;m ) the number of times that user u is receptive to f in all the times user f will be assigned to user topic k in all the ratings except for r u;m , N k;l;r represents the number of times the user with user topic k has rated item with item topic l with the rating r , and N  X  ( u;m ) k;l;x represents the number of times the observed rating x has been given by user with user topic k on item with item topic l excluding r u;m .

Similarly, we define the conditional distribution for user /
Th e conditional distribution is the same for the item topic with the role of user and item reversed.
 wh ere ( n item m;l )  X  ( u;m ) denotes the number of times that an item m is assigned to item topic l in all the ratings except for r u;m , and N k;l;r represents the number of times that a user with user topic k has rated an item with item topic l with the rating r .
 tained as follows:
The algorithm of the collapsed Gibbs sampler for infer-ring these latent variables f z friend ; z user ; z item g Algorithm 1.
Algori thm 1 : Gibbs sampling for Bi-LDA social input : Users X  rating histories X , users X  trust relation /*Initialization of the latent variables and counters*/ foreach x = r u;m 2 X do for index=1 to Iter do /* Get th e mean estimate for friend , user ,  X  and to Eq. (5).
The second part of RTM is to model the dynamic inter-action of users X  interest along with the receptiveness among friends over time. Given the users X  rating histories at T dif-ferent time points, a naive approach is to fit a Bi-LDA social model at each time point and learn the receptiveness and user interest distribution at the various time points, de-user ( T ) g , respectively. However, using this approach, the latent topics learnt at time point t 1 may be totally different from that at time point t 2 . Furthermore, since we regard each user in the different time point as independent, we are unable to make use of his/her ratings in the past. This worsens the data sparsity problem.

To overcome the shortcomings, we assume that the over-all interest distribution of the whole user population should remain stable. This enable us to share the  X  across the different time points. In addition, we impose constraints on user and friend by assuming dependency between two consecutive snapshots as follows:
In other words, we introduce a prior from friend ( t  X  1) to friend ( t ) so that at time t , we are drawing from the Dirichlet prior parameterized by friend ( t  X  1) where prior observed counts that user is receptive to his/her friends before any friend from the current time points is observed. Similarly, we introduce the parameterized prior for both user and item topic distributions:
The graphical representation of the RTM model is shown in Figure 3. With this change, the conditional distribution of Equation (2) is now user u is receptive to f in all the ratings at time t excluding r will be assigned to user topic k in all the ratings at time t except for r ( t ) u;m . N k;l;r represents the number of times the user with user topic k has rated item with item topic l with the rating r , N  X  ( u;m;t ) k;l;x represents the number of times the observed rating x has been given by user with user topic k on item with item topic l excluding r ( t ) u;m Similar change can be applied to the Equation (3) and (4) by introducing an additional temporal dimension for the counter, that is:
Wit h this, based on the Eq. (5), the parameter friend , user ,  X  and item can be constructed as:
The process of generating time series ratings is summa-rized as follows: 1. Choose a K L distribution over ratings  X  Dir ( ) 2. For time t = 1, choose a distribution over friends F ( u ) 3. For time t = 1, choose a distribution over K users X  4. For time t = 1, choose a distribution over L items X  5. For each rating x = r ( t ) u;m :
Based on the generative process, we can design Gibbs sam-pling to infer the latent variables as shown in Algorithm 2. Note that that the cost of running a full Gibs iteration is O ( p ) where p is the total number of rating observations.
In this section, we discuss how the RTM model can be used for rating prediction, tracking receptiveness over time, and analyzing users interest change.

Algo rithm 2 : Gibbs sampling for RTM input : Users X  rating histories over time /*Initialization of the latent variables and counters*/ /* for each rating x = r ( t ) u;m in X */ for index=1 to Iter do according to Eq. (9).
In this section, we evaluate the effectiveness of the pro-posed RTM model that utilizes both time-stamped rating data and trust over time for recommendation. We also im-plement two variants of RTM:
We compare the proposed models with the following state-of-the-art recommender methods for rating prediction: 1. Probabilistic Matrix Factorization (PMF) [15]. 2. Bi-LDA [13] This is a generative model that also uti-3. TimeSVD++ [7] This is temporal CF algorithm that 4. SocialMF [4]. This is a social CF algorithm that uti-
Table 2 gives a summary of the various methods. All the experiments are carried out on an Intel Core i7-2600 CPU with 8GB RAM, running Windows 7-64 bit.
We use the Epinions dataset 1 in our experiments. This dataset comprises of two files. The first file contains 717 ; 667 user trust statements with time-stamps, while the second file contains 13 ; 668 ; 319 users X  ratings provided by 120 ; 492 users on 755 ; 760 articles on a scale of 1 to 6, with 1 being not helpful and 6 being most helpful. Each rating is associated with a time-stamp over the period from February 2001 to July 2002.

We sort the data according to the time-stamps and split the data into 6 equal time slices. Each time slice corre-sponds to about 3 months. We use the first 5 time slices of data as the training data, and the last time slice for testing. We also filter out users that have made less than 10 unique ratings. After pre-processing, we obtain 5 ; 077 ; 392 users X  ratings with 9 ; 149 users and 116 ; 697 articles and 236 ; 878 social relations. Table 3 summarizes the statistics of the rating dataset.
 Stat istics Users Movies Min. # of ratings 10 1 Max. # of ratings 39,46 7 1134
Mean . # of ratings 554 : 96 1681 : 11 43 : 50 41 : 04 http : ==www :trustlet:org=wiki=Extended E pinions d ataset
In this set of experiments, we compare the performance of the various methods. We use the standard evaluation metrics Mean Absolute Error (MAE) and Root Mean Square Error (RMSE) defined as follows: where D deno tes the test dataset, r i is the actual rating and  X  r i is the predicted rating. A smaller value of MAE or RMSE indicates a better performance.

Figure 4 shows the results when we vary the number of user/item dimensions from 10 to 50. We observe that the proposed RTM model has the lowest MAE and RMSE, demon-strating that capturing the dynamic interest between user interest and social trust can improve the rating prediction accuracy. In particular, RTM model lowers the RMSE (MAE) by as much as 7.71% (8.26%) compared to the SocialMF model, and 8.14% (9.29%), compared to TimeSVD++.

Both SocialMF and RTM-StaticInterest outperform con-ventional CF models that do not incorporate trust infor-mation, namely, Bi-LDA and PMF. This indicates that so-cial trust can help improve the rating prediction accuracy. Both TimeSVD++ and RTM-StaticSocial model user inter-est over time and thus perform better than Bi-LDA and PMF.
Here, we visualize the user interest profile obtained from the RTM model over time. Figure 5 shows the interest pro-files of 2 users from the Epinions dataset. We observe that the user 739 X  X  interests remains stable over the time, as in-dicated by his/her high preference for user latent topic 1 throughout the 6 time points. User 365 X  X  main interest is in the latent topic 4 from time points 1 to 3, and changes to latent topics 9 from time point 4 to 6, showing a shift in his/her interest.

On closer examination, we find that user 739 has rated a lot of reviews in the topic with id 72 for all the time points. On the other hand, user 365 mainly rated reviews on the topic with id 549 from time points 1 to 3, and then change to rate reviews on the topic with id 447 from time points 4 to 6. This confirms that the interest profiles obtained from the RTM model can capture user interest change.
Next, we analyze the user interest profiles and their social trust relationships over time. Figure 6 shows the interest profiles of 4 users and their social trust relationships at time points T1 and T6. Suppose user 433 is our target user. We note that at time point T1, user 433 does not know user 34 and their interest profiles are quite different. However at time point T6, user 34 has become user 344 X  X  friend and his/her interest profile has shifted to become similar to that of user 344. Looking at Figure 7 which shows the recep-tiveness of user 433 towards the other 3 users over time, we observe that the receptiveness of user 433 to user 34 in-creases sharply at T6. This indicates that the RTM model captures the dynamic interaction between user interests and social relationships faithfully.
In this section, we examine the effect of various parameters on the performance of the RTM model.
Table 4 shows the RMSE of RTM as we vary the number of user topic K and the number of item topic L from 10 to 50. We observe that RMSE does not vary much. The best performance is achieved by setting K = 40 and L = 50.
Recall that the parameter control how much the prior information is transferred from the previous time slice to the current time slice. When = 0, no prior information is used.
 Figure 8 shows the RMSE obtained for varying values. We observe that the best performance is obtained when = 1, indicating that prior information helps to improve item rating prediction.
In this paper, we have motivated the need to capture the dynamic interaction between trust and user interest for rec-ommendation. We have designed the RTM generative model that incorporates user interest and social trust relationships over time. We have also devised efficient algorithms to learn the latent variables in the RTM model using Gibbs sam-pling. Experimental results have shown that RTM-based recommendation outperforms state-of-the-art CF methods. In addition, the model provides easy interpretations to allow easy visualization of users X  receptiveness and interest change over time. [1] M. Balabanovi  X c and Y. Shoham. Fab: content-based, [2] G. Casella and E. I. George. Explaining the Gibbs [3] M. Jamali and M. Ester. Trustwalker: a random walk [4] M. Jamali and M. Ester. A transitivity aware matrix [5] N. Koenigstein, G. Dror, and Y. Koren. Yahoo! music [6] I. Konstas, V. Stathopoulos, and J. M. Jose. On social [7] Y. Koren. Collaborative filtering with temporal [8] T.-K. H. J. S. J. G. C. Liang Xiong, Xi Chen. [9] H. Ma, I. King, and M. R. Lyu. Learning to [10] H. Ma, M. R. Lyu, and I. King. Learning to [11] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King. [12] R. J. Mooney and L. Roy. Content-based book [13] I. Porteous, E. Bart, and M. Welling. Multi-hdp: A [14] S. Rendle, C. Freudenthaler, and L. Schmidt-Thieme. [15] R. Salakhutdinov and A. Mnih. Probabilistic matrix [16] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl. [17] Y. Shen and R. Jin. Learning personal + social latent [18] L. Xiang, Q. Yuan, S. Zhao, L. Chen, X. Zhang, [19] M. Ye, X. Liu, and W.-C. Lee. Exploring social
