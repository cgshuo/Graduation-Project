 Multi-view graph clustering aims to enhance clustering performance by integrating heterogeneous information collected in different do-mains. Each domain provides a different view of the data instances. Leveraging cross-domain information has been demonstrated an ef-fective way to achieve better clustering results. Despite the previ-ous success, existing multi-view graph clustering methods usually assume that different views are available for the same set of in-stances. Thus instances in different domains can be treated as hav-ing strict one-to-one relationship. In many real-life applications, however, data instances in one domain may correspond to multiple instances in another domain. Moreover, relationships between in-stances in different domains may be associated with weights based on prior (partial) knowledge. In this paper, we propose a flexible and robust framework, CGC (Co-regularized Graph Clustering), based on non-negative matrix factorization (NMF), to tackle these challenges. CGC has several advantages over the existing method-s. First, it supports many-to-many cross-domain instance relation-ship. Second, it incorporates weight on cross-domain relationship. Third, it allows partial cross-domain mapping so that graphs in dif-ferent domains may have different sizes. Finally, it provides users with the extent to which the cross-domain instance relationship vi-olates the in-domain clustering structure, and thus enables users to re-evaluate the consistency of the relationship. Extensive experi-mental results on UCI benchmark data sets, newsgroup data sets and biological interaction networks demonstrate the effectiveness of our approach.
 H.8 [ Database management ]: Database applications X  Data min-ing graph clustering, nonnegative matrix factorization, co-regularization
Graphs are ubiquitous in real-life applications. A large volume of graph data have been generated, such as social networks [21], biology interaction networks [11], and literature citation networks [28]. Graph clustering has attracted increasing research interest recently. Several effective approaches have been proposed in the literature, such as spectral clustering [24], symmetric Non-negative Matrix Factorization (symNMF) [17], Markov clustering (MCL) [32], and Ncut [25].

In many applications, graph data may be collected from hetero-geneous domains (sources) [13]. For example, the gene expression levels may be reported by different techniques or on different sam-ple sets, thus the gene co-expression networks built on them are heterogeneous; the proximity networks between researchers such as co-citation network and co-author network are also heteroge-neous. By exploiting multi-domain information to refine clustering and resolve ambiguity, multi-view graph clustering methods have the potential to dramatically increase the accuracy of the final re-sults [3, 19, 5]. The key assumption of these methods is that the same set of data instances may have multiple representations, and different views are generated from the same underlying distribution [5]. These views should agree on a consensus partition of the in-stances that reflects the hidden ground truth [22]. The learning ob-jective is thus to find the most consensus clustering structure across different domains.

Existing multi-view graph clustering methods usually assume that information collected in different domains are for the same set of instances. Thus, the cross-domain instance relationships are strictly one-to-one . This also implies that different views are of the same size. For example, Fig. 1(a) shows a typical scenario of multi-view graph clustering, where the same set of 12 data instances has 3 different views. Each view gives a different graph representation of the instances.

In many real-life applications, it is common to have cross-domain relationship as shown in Fig. 1(b). This example illustrates sever-al key properties that are different from the traditional multi-view graph clustering scenario. Figure 1: Multi-view graph clustering vs co-regularized multi-domain graph clustering (CGC)
One important problem in bioinformatics research is protein func-tional module detection [16]. A widely used approach is to cluster protein-protein interaction (PPI) networks [2]. In a PPI network, each instance (node) is a protein and an edge represents the strength of the interaction between two connected proteins. To improve the accuracy of the clustering results, we may explore the data col-lected in multiple domains, such as gene co-expression networks [15] and genetic interaction networks [7]. The relationship across gene, protein and genetic variant domains can be many-to-many. For example, multiple proteins may be synthesized from one gene and one gene may contain many genetic variants. Consider another application of text clustering, where we want to cluster journal pa-per corps (domain 1) and conference paper corps (domain 2). We may construct two affinity (similarity) graphs for domains 1 and 2 respectively, in which each instance (node) is a paper and an edge represents the similarity between two papers (e.g., cosine similarity between term-frequency vectors of the two papers). Some journal papers may be extended versions of one or multiple conference pa-pers. Thus the mappings between papers in two domains may be many-to-many.

These emerging applications call for novel cross-domain graph clustering methods. In this paper, we propose CGC (Co-regularized Graph Clustering), a flexible and robust approach to integrate het-erogenous graph data. Our contributions are summarized as fol-lows. 1. We propose and investigate the problem of clustering mul-2. We develop a method, CGC, based on collective symmetric 3. We develop effective and efficient techniques to handle the 4. We evaluate the proposed method on benchmark UCI data
Suppose that we have d graphs, each from a domain in { D 1 D }. We use n to denote the number of instances (nodes) in the graph from domain D ( 1  X   X  d ). Each graph is represent-ed by an affinity (similarity) matrix. The affinity matrix of the graph in domain D is denoted as A ( )  X  R n n + . In this pa-per, we follow the convention and assume that A ( ) is a symmet-ric and non-negative matrix [24, 17]. We denote the set of pair-wise cross-domain relationships as I = { ( i; j ) } where i and j are domain indices. For example, I = { (1 ; 3) ; (2 ; 5) } contains two cross-domain relationships (mappings): the relationship between instances in D 1 and D 3 , and the relationship between instances in D 2 and D 5 . Each relationship ( i; j )  X  I is coupled with a ma-trix S ( i;j )  X  R n j n i + , indicating the (weighted) mapping between instances in D i and D j , where n i and n j represent the number of instances in D i and D j respectively. We use S ( i;j ) a;b weight between the a -th instance in D j and the b -th instance in D , which can be either binary (0 or 1) or quantitative (any value between [0,1]). Important notations are listed in Table 1.
Our goal is to partition each A ( ) into k clusters while consid-ering the co-regularizing constraints implicitly represented by the cross-domain relationships in I .
In this section, we present the Co-regularized Graph Clustering (CGC) method. We model cross-domain graph clustering as a joint matrix optimization problem. The proposed CGC method simulta-neously optimizes the empirical likelihood in multiple domains and take into account the cross-domain relationships.
Graph clustering in a single domain has been extensively stud-ied. We adopt the widely used non-negative matrix factorization (NMF) approach [20]. In particular, we use the symmetric version of NMF [17, 9] to formulate the objective of clustering on A minimizing the objective function: where || X || F denotes the Frobenius norm, H ( ) is a non-negative matrix of size n  X  k , and k is the number of clusters request-each h ( ) a ( 1  X  a  X  n ) represents the cluster assignment (dis-tribution) of the a -th instance in domain D . For hard clustering, argmax j h ( ) aj is often used as the cluster assignment.
To incorporate the cross-domain relationship, the key idea is to add pairwise co-regularizers to the single-domain clustering ob-jective function. We develop two loss functions to regularize the cross-domain clustering structure. Both loss functions are designed to penalize cluster assignment inconsistency with the given cross-domain relationships. The residual sum of squares (RSS) loss re-quires that graphs in different domains are partitioned into the same number of clusters. The clustering disagreement loss has no such restriction.
 A). Residual sum of squares (RSS) loss function
We first consider the case where the number of clusters is the same in different domains, i.e. k 1 = k 2 = ::: = k d = k . For sim-plicity, we denote the instances in domain D as { x ( ) 1 If an instance x ( i ) a in D i is mapped to an instance x generalize the relationship to many-to-many. We use N ( i;j ) to denote the set of indices of instances in D i that are mapped to x b with positive weights, and nality. To penalize the inconsistency of cross-domain cluster parti-b -th instance is where is the weighted mean of cluster assignment of instances mapped to x b , for the l -th cluster.

We assume every non-zero row of S ( i;j ) is normalized. By sum-ming up Eq. (2) over all instances in D j and k clusters, we have the following residual of sum of squares loss function B). Clustering disagreement (CD) loss function
When the number of clusters in different domains varies, we can no longer use the RSS loss to quantify the inconsistency of cross-domain partitions. From the previous discussion, we observe that S ( i;j ) H ( i ) in fact serves as a weighted projection of instances in domain D i to instances in domain D j . For simplicity, we denote ter assignment over k j clusters for the a -th instance in e H a corresponds to H ( j ) a for the a -th instance in domain The previous RSS loss compares them directly to measure the clus-tering inconsistency. However, it is inapplicable to the case where different domains have different numbers of clusters. To tackle this problem, we first measure the similarity between e H e H b , and the similarity between H sure the difference between these two similarity values. Taking Fig. 1(b) as an example. Note that A  X  and B  X  in domain 1 are mapped to 2  X  in domain 2, and C  X  is mapped to 4  X  . Intuitively, if the similarity between clustering assignments for 2  X  and 4  X  is small, the similar-ity of clustering assignments between A  X  and C  X  and the similarity between B  X  and C  X  should also be small. Note that symmetric N-MF can handle both linearity and nonlinearity [17]. Thus in this paper, we choose a linear kernel to measure the in-domain clus-ter assignment similarity, i.e., K ( h ( j ) a ; h ( j ) b cross-domain clustering disagreement loss function is thus defined as
We can integrate the domain-specific objective and the loss func-tion quantifying the inconsistency of cross-domain partitions into a unified objective function parameter balancing between in-domain clustering objective and cross-domain regularizer. When all ( i;j ) = 0, Eq. (6) degenerates to d independent graph clusterings. Intuitively, the more reliable the prior cross-domain relationship, the larger the value of
In this section, we present an alternating scheme to optimize the objective function in Eq. (6), that is, we optimize the objective with respect to one variable while fixing others. This procedure contin-ues until convergence. The objective function is invariant under these updates if and only if H ( )  X  X  are at a stationary point [20]. Specifically, the solution to the optimization problem in Eq. (6) is based on the following two theorems, which is derived from the Karush-Kuhn-Tucker (KKT) complementarity condition [4]. De-tailed theoretical analysis of the optimization procedure will be p-resented in the next section. Theor em 3.1. For RSS loss, updating H ( ) according to Eq. (7) will monotonically decrease the objective function in Eq. (6) until convergence.
 where and Theorem 3.2. For CD loss, updating H ( ) according to Eq. (10) will monotonically decrease the objective function in Eq. (6) until convergence.
 wher e and where  X  , [ ] [ ] and (  X  ) 1 4 ar e element-wise operators.
Based on Theorem 3.1 and Theorem 3.2, we develop the iterative multiplicative updating algorithm for optimization and summarize it in Algorithm 1.
We derive the solution to Eq. (6) following the constrained op-timization theory [4]. Since the objective function is not jointly convex, we adopt an effective alternating minimization algorithm to find a locally optimal solution. We prove Theorem 3.2 in the following. The proof of Theorem 3.1 is similar and hence omitted. We formulate the Lagrange function for optimization Algorithm 1: Co-regularized Graph Clustering (CGC)
Input : graphs from d domains, each of which is represented Output : clustering results for each domain (inferred from 1 begin 2 Normalize all graph affinity matrices by Frobenius norm; 3 foreach ( i; j )  X  X  do 4 Normalize non-zero rows of S ( i;j ) ; 5 end 6 for  X  1 to d do 7 Initialize H ( ) with random values between (0,1]; 8 end 9 repeat 10 f or  X  1 to d do 11 Update H ( ) by Eq. (7) or (10); 12 end 13 until convergence ; 14 end W ithout loss of generality, we only show the derivation of the up-dating rule for one domain (  X  [1 ; d ]) . The partial derivative of Lagrange function with respect to H ( ) is: Using the Karush-Kuhn-Tucker (KKT) complementarity condition [4] for the non-negative constraint on H ( ) , we have The above formula leads to the updating rule for H ( ) in Eq. (10).
We use the auxiliary function approach [20] to prove the conver-gence of Eq. (10) in Theorem 3.2. We first introduce the definition of auxiliary function as follows.
 Definition 3.3. Z ( h; ~ h ) is an auxiliary function for L ( h ) if the conditions are satisfied for any given h; ~ h [20].
 Lemma 3.4. If Z is an auxiliary function for L , then L is non-increasing under the update [20]. Theor em 3.5. Let L ( H ( ) ) denote the sum of all terms in L con-taining H ( ) . The following function is an auxiliary function for L ( H ( ) ) , where P ( k; l; m ) = ( ( ~
H H ( ) and has a global minimum.

Theorem 3.5 can be proved using a similar idea to that in [9] by limitation, we omit the details.
 and get the following updating formula which is consistent with the updating formula derived from the KK-T condition aforementioned.

From Lemma 3.4 and Theorem 3.5, for each subsequent iteration so true for the other variables. Since the objective function Eq. (6) is lower bounded by 0, the correctness of Theorem 3.2 is proved. Theorem 3.1 can be proven with a similar strategy. The time complexity of Algorithm 1 (for both loss functions) is O ( Iter  X  d |I| (~ n 3 + ~ n 2 ~ k )) , where ~ n is the largest n ( 1 ~ k is the largest k and Iter is the number of iterations needed be-fore convergence. In practice, |I| and d are usually small con-stants. Moreover, from Eq. (10) and Eq. (7), we observe that the ~ n 3 term is from the matrix multiplication ( S ( ;j ) ) T S S ( ;j ) is the input matrix and often very sparse, we can compute ( S ( ;j ) ) T S ( ;j ) in advance in sparse form. In this way, the com-plexity of Algorithm 1 is reduced to O ( Iter  X  ~ n 2 ~ k ) .
In real applications, the cross-domain instance relationship based on prior knowledge may contain noise. Thus, it is crucial to al-low users to evaluate whether the provided relationships violate any single-domain clustering structures. In this section, we develop a principled way to archive this goal. In fact, we only need to slight-ly modify the co-regularization loss functions in Section 3.1.2 by multiplying a confidence matrix W ( i;j ) to each S ( i;j ) ment in the confidence matrix W ( i;j ) is initialized to 1. For RSS loss, we give the modified loss function below (the case for CD loss is similar).
 Here,  X  is element-wise product. By optimizing the following ob-jective function, we can learn the optimal confidence matrix Eq. (20) can be optimized by iteratively implementing following two steps until convergence: 1) replace S ( ;j ) and S ( i; ) use the replaced formula to update each H ( ) ; 2) use the following formula to update each W ( i;j )
Here, in S ( i;j ) are 0. We only update the elements in W ( i;j ) responding elements in S ( i;j ) are positive. In the following, we only focus on such elements. The learned confidence matrix min-imizes the inconsistency between the original single-domain clus-tering structure and the prior cross-domain relationship. Thus for sistency between S ( i;j ) a;b and single-domain clustering structures in D i and D j . Therefore, we can sort the values of W ( i;j ) port to users the smallest elements and their corresponding cross-domain relationships. Accurate relationship can help to improve the overall results. On the other hand, inaccurate relationship may provide wrong guidance of the clustering process. Our method al-lows the users to examine these critical relationships and improve the accuracy of the results.
In this section, we present extensive experimental results on e-valuating the performance of our method.
We evaluate the proposed method by clustering benchmark data sets from the UCI Archive [1]. We use four data sets with class label information, namely Iris, Wine, Ionosphere and Breast Can-cer Wisconsin (Diagnostic) data sets. They are from four different domains. To make each data set contain the same number of (e.g., two) clusters, we follow the preprocessing step in [33] to remove the SETOSA class from the Iris data set and Class 1 from the Wine data set. The statistics of the resulting data sets are shown in Table 2.

For each data set, we compute the affinity matrix using the RBF kernel [4]. Our goal is to examine whether cross-domain rela-tionship can help to enhance the accuracy of the clustering result-s. We construct two cross-domain relationships: Wine-Iris and Ionosphere-WDBC. The relationships are generated based on the class labels, i.e., positive (negative) instances in one domain can only be mapped to positive (negative) instances in another domain. Figur e 2: Clustering results on UCI datasets(Wine v.s. Iris, Ionosphere v.s. WDBC) We use the widely used Clustering Accuracy [35] to measure the quality of the clustering results. Parameter is set to 1 throughout the experiments. Since no existing method can handle the multi-domain co-regularized graph clustering problem, we compare our CGC method with three representative single-domain methods: sym-metric NMF [17], K-means [26] and spectral clustering [24]. We report the accuracy when varying the available cross-domain in-stance relationships (from 0 to 1 with 10% increment). The accura-cy shown in Fig. 2 is averaged over 100 sets of randomly generated relationships.

We have several key observations from Fig. 2. First, CGC sig-nificantly outperforms all single-domain graph clustering methods, even though single-domain methods may perform differently on d-ifferent data sets. For example, symmetric NMF works better on Wine and Iris data sets, while K-means works better on Ionosphere and WDBC data sets. Note that when the percentage of available relationships is 0, CGC degrades to symmetric NMF. CGC outper-forms all alternative methods when cross-domain relationships are available. This demonstrates the effectiveness of the cross-domain relationship co-regularized method. We also notice that the perfor-mance of CGC dramatically improves when the available relation-ships increase from 0 to 30%, suggesting that our method can effec-tively improve the clustering result even with limited information on cross-domain relationship. This is crucial for many real-life ap-plications. Finally, we can see that RSS loss is more effective than CD loss. This is because RSS loss directly measures the weights of clustering assignment, while the CD loss does this indirectly by us-ing linear kernel similarity first (see Section 3.1). Thus, for a given percentage of cross-domain relationships, the method using RSS loss gains more improvements over the single-domain clustering than that using CD loss.
In real-life applications, both graph data and cross-domain in-stance relationship may contain noise. In this section, we 1) evalu-ate whether CGC is sensitive to the inconsistent relationships, and 2) study the effectiveness of the relationship re-evaluation strategy proposed in Section 3.4. Due to space limitation, we only report the results on Wine-Iris data set used in the previous section. Similar results can be observed in other data sets. Figur e 3: Clustering with inconsistent cross-domain relation-ship Figure 4: Relationship matrix S and confidence matrix W on Wine-Iris data set)
We add inconsistency into matrix S with ratio r . The results are shown in Fig. 3. The percentage of available cross-domain rela-tionships is fixed at 20%. Single-domain symmetric NMF is used as a reference method. We observe that, even when the inconsisten-cy ratio r is close to 50%, CGC still outperforms the single-domain symmetric NMF method. This indicates that our method is robust to noisy relationships. We also observe that, when r is very large, CD loss works better than RSS loss, although when r is small, RSS loss outperforms the CD loss (as discussed in Section 4.1). When r reaches 1, the relationship is full of noise. From the figure, we can see that CD loss is immune to noise.

In Section 3.4, we provide a method to report the cross-domain relationships that violate the single-domain clustering structure. We still use the Wine-Iris data set to evaluate its effectiveness. As shown in Fig. 4, in the relationship matrix S , each black point represents a cross-domain relationship (all with value 1) mapping classes between the two domains. We leave the bottom right part of the matrix blank intentionally so that the inconsistent relation-ships only appear between instances in cluster 1 of domain 1 and cluster 2 of domain 2. The learned confidence matrix W is shown in the figure (entries normalized to [0,1]). The smaller the value is, the stronger the evidence that the cross-domain relationship vi-olates the original single-domain clustering structure. Reporting these suspicious relationships to users will allow them to examine the cross-domain relationships that are likely resulting from inac-curate prior knowledge.
In this section, we demonstrate that CGC can effectively incor-porate weighted cross-domain relationship, which may carry richer information than binary relationship. The 20 Newsgroup data set contains documents organized by a hierarchy of topic classes. We http://qw one.com/ jason/20Newsgroups/ choose 6 groups as shown in Table 3. For example, at the top level, the 6 groups belong to two topics, computer (groups {3,4,5}) or recreation (groups {9,10,11}). The computer related data sets can be further partitioned into two subcategories, os (group 3) and sys (groups {4, 5}). Similarly, the recreation related data sets consist of subcategories motocycles (group 9) and sport (groups 10 and 11).
We generate two domains, each contains randomly sampled 300 documents from the 6 groups (50 documents from each group). To generate binary relationships, two articles are related if they are from the same high-level topic, i.e., computer or recreation, as shown in Fig. 5(a). Weighted relationships are generated based on the topic hierarchy. Given two group labels, we compute the longest common prefix. The weight is assigned to be the ratio of the length of the common prefix over the length of the short-er of the two labels. The weighted relationship matrix is shown in Fig. 5(b). For example, if two documents come from the same group, we set the corresponding entry to 1; if one document is from rec.sport.baseball and the other from rec.sport.hockey, we set the corresponding entry to 0.67; if they do not share any label term at all, we set the entry to 0.
We perform experiments using binary and weighted relationship-s respectively. The affinity matrix of documents is computed based on cosine similarity. We cluster the data set into either 2 or 6 clus-ters and results are shown in Fig. 6. We observe that when each domain is partitioned into 2 clusters, the binary relationship out-performs the weighted one. This is because the binary relation-ship better represents the top-level topics, computer and recreation. On the other hand, for the domain partitioned into 6 clusters, the weighted relationship performs significantly better than the binary one. This is because weights provide more detailed information on cross-domain relationships than the binary relationships.
In this section, we study the performance of the proposed meth-ods: the number of iterations before converging to a local optima. Fig. 7 shows the value of the objective function with respect to the number of iterations on different data sets. We observe that the ob-jective function value decreases steadily with more iterations. Usu-ally, less than 100 iterations are needed before convergence. Figur e 6: Clustering results on the newsgroup data set with binary or weighted relationships
In this section, we apply the proposed method to detect protein functional modules [16]. The goal is to identify clusters of proteins that have strong interconnection with each other. A common ap-proach is to cluster the protein-protein interaction (PPI) networks [2]. We show that, by integrating multi-domain heterogenous in-formation, such as gene co-expression network [15] and genetic interaction network [7], the performance of the detection algorithm can be dramatically improved.

We download the widely used human PPI network from BioGrid Three Hypertension related gene expression data sets are down-loaded from Gene Expression Ominbus 3 with ids GSE2559, GSE703, and GSE4737. In total, 5412 genes included in all three data sets are used to construct gene co-expression network. Pearson correla-tion coefficients(normalized between [0 1]) are used as the weights on edges between genes. The genetic interaction network is con-structed using a large-scale Hypertension genetic data [10], which contains 490032 genetic markers across 4890 (1952 disease and 2938 healthy) samples. We use 1 million top-ranked genetic marker-pairs to construct the network and the test statistics are used as the weights on the edges between markers [36]. The constructed het-erogenous networks are shown in Fig. 8. The relationship between genes and genetic markers is many-to-many, since multiple genetic http://thebiogrid.or g/download.php http://www.ncbi.nlm.nih.gov/gds Figur e 8: Protein-protein interaction network, gene co-expression network, genetic interaction network and cross-domain relationships T able 4: Gene Ontology (GO) enrichment analysis of the gene sets identified by different methods markers may be covered by a gene and each marker may be cov-ered by multiple genes due to the overlapping between genes. The relationship between proteins and genes is one-to-one.

We apply CGC (with RSS loss) to cluster the generated multi-domain graphs. We use the standard Gene Set Enrichment Analysis (GSEA) [23] to evaluate the significance of the inferred clusters. In particular, for each inferred cluster (protein/gene set) T , we identify the most significantly enriched Gene Ontology categories [31, 6]. The significance ( p -value) is determined by the Fisher X  X  exact test. The raw p -values are further calibrated to correct for the multiple testing problem [34]. To compute calibrated p -values for each T , we perform a randomization test, wherein we apply the same test to 1000 randomly created gene sets that have the same number of genes as T .

The calibrated p -values of the gene sets learned by CGC and single-domain graph clustering methods, Ncut [25], symmetric N-MF [17], Markov clustering [32] and spectral clustering, when ap-plied on PPI network, are shown in Fig. 9. The clusters are ar-ranged in ascending order of their p -values. As can be seen from the figure, by integrating three types of heterogenous networks, CGC achieves better performance than the single-domain methods. Table 4 shows the number of significant (calibrated p -value modules identified by different methods. We find that CGC reports more significant functional modules than the single-domain meth-ods. We also apply existing multi-view graph clustering method [19, 30] on the gene co-expression networks and PPI network. S-ince these four networks are of the same size, multi-view method can be applied. In total, less than 20 significant modules are i-dentified. This is because the gene expression data are very noisy. Multi-view graph clustering methods forced to find one common clustering assignment over different data sets and thus are more sensitive to noise. Figur e 9: Comparison of CGC and single-domain graph clus-tering ( k = 100 )
To our best knowledge, this is the first work to study co-regularized multi-domain graph clustering with many-to-many cross-domain relationship. Existing work on multi-view graph clustering relies on a fundamental assumption that all views are with respect to the same set of instances. This set of instances have multiple repre-sentations and different views are generated from the same under-lying distribution [5]. In multi-view graph clustering, research has been done to explore the most consensus clustering structure from different views [18, 19, 30]. Another common approach in multi-view graph clustering is a two-step approach, which first combines multiple views into one view, then does clustering on the resulting view [29, 37]. However, these methods do not address the many-to-many cross-domain relationship. Note that our work is different from transfer clustering [8] and multi-task clustering [14]. These methods assume that there are some common features shared by different domains. They are also not designed for graph data.
Clustering ensemble approaches also aim to find consensus clus-ters from multiple data sources. Strehl and Ghosh [27] proposed instance-based and cluster-based approaches for combining multi-ple partitions. Fern and Brodley [12] developed a hybrid bipartite graph formulation to infer ensemble clustering result. These ap-proaches try to combine multiple clustering structures for a set of instances into a single consolidated clustering structure. Similar to multi-view graph clustering, they cannot handle many-to-many cross-domain relationships.
Integrating multiple data sources for graph clustering is an im-portant problem in data mining research. Robust and flexible ap-proaches that can incorporate multiple sources to enhance graph clustering performance are highly desirable. We develop CGC, which utilizes cross-domain relationship as co-regularizing penal-ty to guide the search of consensus clustering structure. CGC is robust even when the cross-domain relationships based on prior knowledge are noisy. Using various benchmark and real-life da-ta sets, we show that the proposed CGC method can dramatically improve the graph clustering performance compared with single-domain methods.
The work was partially supported by US National Science Foun-dation IIS-0812464, IIS-1313606, IIS-1162374 and IIS-1218036. [1] A. Asuncion and D. Newman. Uci machine learning [2] S. Asur, D. Ucar, and S. Parthasarathy. An ensemble [3] S. Bickel and T. Scheffer. Multi-view clustering. In ICDM , [4] S. Boyd and L. Vandenberghe. Convex Optimization .
 [5] K. Chaudhuri, S. M. Kakade, K. Livescu, and K. Sridharan. [6] W. Cheng, X. Zhang, Y. Wu, X. Yin, J. Li, D. Heckerman, [7] H. J. Cordell. Detecting gene-gene interactions that underlie [8] W. Dai, Q. Yang, G.-R. Xue, and Y. Yu. Self-taught [9] C. Ding, T. Li, W. Peng, and H. Park. Orthogonal [10] T. Feng and X. Zhu. Genome-wide searching of rare genetic [11] D. Fenyo, editor. Computational Biology . Methods in [12] X. Z. Fern and C. E. Brodley. Solving cluster ensemble [13] J. Gao, F. Liang, W. Fan, Y. Sun, and J. Han. Graph-based [14] Q. Gu, Z. Li, and J. Han. Learning a kernel for multi-task [15] S. Horvath and J. Dong. Geometric interpretation of gene [16] J. S. Hub and B. L. de Groot. Detection of functional modes [17] D. Kuang, H. Park, and C. H. Q. Ding. Symmetric [18] A. Kumar and H. D. III. A co-training approach for [19] A. Kumar, P. Rai, and H. D. III. Co-regularized multi-view [20] D. D. Lee and H. S. Seung. Algorithms for non-negative [21] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos, J. M. [22] B. Long, P. S. Yu, and Z. M. Zhang. A general model for [23] V. K. Mootha, C. M. Lindgren, K. F. Eriksson, [24] A. Y. Ng, M. I. Jordan, and Y. Weiss. On spectral clustering: [25] J. Shi and J. Malik. Normalized cuts and image [26] H. Sp X th. Cluster Dissection and Analysis. Theory, [27] A. Strehl, J. Ghosh, and C. Cardie. Cluster ensembles -a [28] Y. Sun and J. Han. Mining Heterogeneous Information [29] L. Tang, X. Wang, and H. Liu. Community detection via [30] W. Tang, Z. Lu, and I. S. Dhillon. Clustering with multiple [31] The Gene Ontology Consortium. Gene ontology: tool for the [32] S. van Dongen. A cluster algorithm for graphs. In Centrum [33] X. Wang and I. Davidson. Flexible constrained spectral [34] P. H. Westfall and S. S. Young. Resampling-based Multiple [35] W. Xu, X. Liu, and Y. Gong. Document clustering based on [36] X. Zhang, S. Huang, F. Zou, and W. Wang. TEAM: Efficient [37] D. Zhou and C. J. C. Burges. Spectral clustering and
