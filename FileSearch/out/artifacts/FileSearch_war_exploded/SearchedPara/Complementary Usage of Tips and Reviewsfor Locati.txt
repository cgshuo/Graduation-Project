 LBSNs have become a popular tool for users to share their locations with their friends. Services like Foursquare allow users to post  X  X heck-ins X  at their current locations to let their friends know about their whereabouts. The popularity of such LBSNs has encouraged the development of systems recommending new locations to users (henceforth referred to as location recommender systems). Typically, any such location recommender system leverages the rich check-in information about each user to suggest relevant locations. This is because the for that location.
 Apart from check-ins, there are other mechanisms through which users can engage with LBSNs and express their preference (positive or negative) for a location that they have visited. Two such alternate modalities are present in Yelp -namely, tips and reviews, capturing users X  opinions about venues. Tips are short textual descriptions about a venue -typically describing the standout characteristic of a location or a set of things to do or to avoid at a particular location. Reviews, on the other hand, present a much more detailed account of a person X  X  experience at a location. A major difference between tips and reviews as against check-ins is that the frequency of check-ins is much greater. A typical user might post only a handful of tips for a particular location, whereas she might check-in at a particular location 30-40 times. In this work, we look at the problem of location recommendation in a popular LBSN -Yelp. Specifically, we focus on the information provided by tips and reviews to generate location recommendations for users. To the best of our knowledge, this is the first work which looks at the problem of location recommendation from the lens of tips and reviews taken together, rather than check-ins. We propose a graph-based framework which seamlessly combines signals coming from tips and reviews. We consider users and locations as nodes in a graph with weighted edges constructed between user-user, user-location and location-location pairs, based on tip, review and friendship information in Yelp. Finally, a spreading activation technique is used to recommend locations to a target user. This work makes the following contributions in the context of location recommendation in LBSNs:  X  We identify how tips are different from reviews in the way they are used  X  In the graph-based framework, we propose novel intra-location and intra- X  We find that intra-location links like LLD and LLT/LLR affect the recom-Yelp is an LBSN which helps users search for any kind of business in a city -from a restaurant to a hair-dresser. It is different from some of the other LBSNs like Foursquare in that it allows users to post both tips as well as reviews for the locations that they have visited. We run all our experiments on the Yelp dataset made freely available by Yelp as part of their data challenge contest. covering the time period between Feb. 2005 to Feb. 2014. We can see from Table 1 that all 70817 users have written at least one review whereas only 15231 users have written at least one tip. In addition to this, the number of locations for which at least one tip has been written is 10473, whereas the number of locations for which at least one review has been written is 15579. These numbers suggest that the number of users as well as the number of locations covered by reviews as an interaction medium, is much more than tips in Yelp. To study the difference between check-ins and tips/reviews as interaction mechanisms in LBSNs, we also -Oct. 2010 and gives details about users X  check-in behavior. We can see from Table 2 that not only is the average number of check-ins that a user makes is higher than the corresponding numbers for tips and reviews, but the maximum writing tips or reviews. This is because the level of user involvement required by these diverse interaction mechanisms varies. While check-ins incur very little cognitive load on the part of the user (who just has to indicate whether she was present at a location or not); the textual nature of tips and reviews requires the users to expend more effort in writing them. Figure 1 shows that more than 80% of the users have no location for which they write both a tip as well as a review. Thus, if we consider that a user prefers a location if she writes a tip or very different from the locations that she likes via her reviews, in Yelp. We also investigated three types of venues for each user : venues for which only tips were posted (Type T), venues for which only reviews were posted (Type R), venues for which both reviews and tips were posted (Type TR). After creating these 3 types for each user, we calculated the average distance between each pair of venues within a type. These values were then averaged over all the users and user are closer geographically to each other as opposed to venues for whom only reviews are written by a user. These observations provide a strong motivation to leverage the signals coming separately from tips and reviews in a complementary way so as to provide better recommendations to users.
 We represent our framework as a multilayer graph M =( G , C { G represented with the help of a subgraph. Specifically, G U the user subgraph of M with X U = { x U 1 , ...., x U N U nodes and E U = { ( x U i ,x U j ) | x U i ,x U j  X  X U } users. Similarly, G L =( X L ,E L ) represents the location subgraph with { x X is the set of edges between nodes of the user graph G U and the location graph representing inter-layer connections. E U and E L , on the other hand, represent intra-layer connections. 3.1 Edge Creation and Edge-weights In this subsection we discuss how the weights for user-location, user-user and location-location links are chosen in our framework.
 User-Location Links (UL) -Among the user-location links, we distinguish links either being formed based on tips or based on reviews.
 Review Based Links (ULR): We create a link between a user i
L if a U has written at least one review for i L .If a U has written reviews for i L , then where C is the maximum number of reviews that a user has written for any location and R denotes a review-based edge. Tip Based Links(ULT): Similarly, the weight of a tip-based edge between user a U and location i L is computed as: User-User Links (UU) -Among the user-user links we make three distinctions with respect to the nature of such user-user links.
 Friendship-based Links (UUF): Two friends a U and b U might have simi-lar location preferences and hence a link is created if they are in each other X  X  social network. Let |  X  a U | denote the number of friends user network. where F denotes that this is a friendship based link. We can see from Eq. 4 that w ( a U ,b U ) would be different from w F ( b U ,a U ).
 Tip Entropy Based Links (UUT): Two users, a U and b U , can also have an implicit connection if they have written a tip for the same location denote the set of those locations for which both a U and b and  X  T i L denote the set of users who have written a tip for location let | t
U i L | denote the number of tips a U has written for i L total number of tips that have been written for i L . Tip-entropy of a location in  X   X 
U d U . If tip-entropy of location infer stronger interest overlap between users c U and d U and b U . This is because a location with a high tip-entropy (for example -an airport) represents a location which has been visited by several casual visitors who have opted to write a tip for that location. Thus, the chances that two users who are bound by such a common location, have similar interests, are less. Hence, weight of the link connecting users a U and b U , based on tip-entropy is defined as where T ent denotes that the link weight is based on Tip entropy. Review Entropy Based Links (UUR): In a similar vein, the weight of the link between users a U and b U , based on review-entropy is computed as based on check-ins in the task of friendship link prediction among users. Our use of tip and review entropies, on the other hand, uses them to connect similar minded users in a location recommendation setting.
 Location-Location Links (LL) -We consider three types of links which can be created between two locations.
 Review Based links (LLR): Locations i L and j L can have an implicit link via reviews written by a common user for both i L and j L . The motivation behind creating such an edge is that the similarity of reviewing behavior across j
L (exhibited by the common users who write a review for both be used to infer similarity between i L and j L .
 and j L . Also, let | R a U i L | denote the number of reviews that user for location i L ; and let  X  a U denote the set of locations for which a review for. Then, strength of connection between i L and The rationale behind Eq. 8 can be explained through the following example. Let us suppose that users a U and b U have written a review for both locations and j L , i.e. i L and j L are connected because of users of reviews that a U has written for all locations ( i L and greater than the total number of reviews that b U has written for all locations, then the contribution of b U in the link between i L and j of venues for which she writes a review (evident by the lesser number of total reviews written by her), then her contribution should be weighed more heavily. Tip Based links (LLT): Similarly, weight of the edge between locations and j
L , formed on the basis of tips is given by Distance Based links (LLD): Prior work has established that people tend to visit locations which are close to the locations that they have already visited [ 13 , 14 ]. To account for this fact, we propose to create an edge between two locations with a weight which is inversely proportional to the distance between those locations. Instead of creating a distance based edge between each pair of locations, we create an edge between locations i L and j L some common user who either has written a tip for both or review for both. The weight of such an edge is then computed as where dist i L j L is the geographical distance between i All the weights are normalized in the same manner as described in [ 8 ]. For and then each each weight of the link going out from z is divided by 3.2 Preference Propagation on the Graph We use the graph described in the previous subsection for recommending loca-tions to users. Let us denote the target user, for whom we want to generate recommendations, by a U . We use a spreading activation algorithm (branch and bound serial, symbolic search algorithm (BNB)) in a manner similar to the one used in [ 2 ]. To initiate the recommendation process, we activate the target user with an activation value of 1, while all other nodes are initialized to 0. In the bors (locations as well as users) are activated by an amount proportional to the weight of the edge connecting the two nodes, and are added to a list Therefore, the activation value that is assigned to an arbitrary neighbor equals  X  where  X  x ( t ) represents the activation value of node x denotes the weight of the edge connecting a U and z . Note that, depending upon whether z is a location or a user, there might be multiple edges connecting and z . The activation values accumulated through all such edges becomes the new activation value of z . In the next iteration, a previously  X  X nexpanded X  node p with the highest activation value in Q , is  X  X xpanded X , with all its neighbors getting activated according to Eq. 11 (again accumulated over all kinds of edges between the two nodes). There might be some neighbors of p in
Q . Such nodes X  values are increased by the value computed above. While other neighbors,which were not already in Q are added to Q with their corresponding activation values. This process of  X  X xpanding X  a previously  X  X nexpanded X  node (50 in our experiments). Finally, the location nodes having the maximum activa-tion values, that have not yet been visited by the target user, are recommended to her. we are left with 2076 fairly active users in terms of posting tips and reviews; and on whom we do all the further experiments. For each user we randomly mark off 20% and 40% of the locations that she has written a tip/review for, as the test set to test the effectiveness of our approach. The rest of the data for each user is treated as training data and used to build the graph with appropri-ate edge weights as described in Section 3 . Then, for each target user, we run the preference propagation procedure outlined in Section 3.2 to generate top recommendations. We repeat this experiment 5 times and report the average precision @ N and average recall @ N . where TopN ( u i ) is the top-n locations which have been recommended to the user u i , L ( u i ) is the set of locations in the test set of the users. We do experiments for two values of N -5 and 10.
  X  User-based collaborative (CF) filtering which takes similar users X  opinion  X  Graph-based recommendation algorithm proposed in [ 5 ] referred to as G- X  NMF [ 7 ], a state-of-the-art recommendation method which accounts for l . We also experimented with values of c ij proportional to the number of times u i writes a tip/review for l j , but it produced inferior results and hence we report the results corresponding to c ij values being 1. Both NMF and
G-Local provide intuitive ways to combine the information coming from tips and reviews.
 Note that the low values of precision and recall reported in Tables 4 and 5 are not unreasonable because the accuracy of recommendations is usually not very high when dealing with sparse datasets (where density of user-item matrix is of 8 . 02  X  10  X  3 was 0.05. The sparsity of the preprocessed dataset used in our experiments is 5 . 61  X  10  X  3 . We can see from Tables 4 and 5 that the proposed framework outperforms other approaches significantly. Specifically, when 20% of the data is held-out as the test set, our approach outperforms NMF (the next best) by 13.4% and 15.28% w.r.t precision @5 and precision Moreover, the robust performance of our approach vis a vis the other approaches is maintained even when the sparsity of the data is increased by marking 40% of the data as the test set.
 We also constructed the user-location graph with links between users and locations created at random, respecting the density of user-location links formed either based on tips or reviews in the original dataset. Each of the weights are then computed as described in Section 3 and finally the spreading activation algorithm as used in our framework is used to recommend locations to users. The precision @5 and recall @5 (testing % = 20%) achieved by such an algorithm (averaged over 5 runs) is 0.034 and 0.0108 respectively; hugely under performing our framework as can be seen from Tables 4 and 5 . This shows that the better recommendations generated by our framework are not by random chance. Our method differs from G-Local [ 5 ] in that apart from considering user-item links based on user preferences, our approach additionally considers intra-user and intra-location links, based on tip and review information. Hence, we wanted to see what is the effect of these extra links on recommendation accuracy indi-vidually. To that end, we selectively removed features from our framework and measured the recommendation accuracy. Table 6 shows the results of removing various features from our framework one at a time. As can be seen from Table 6 , removing links of the type LLD decreases the precision and recall by the maximum amount, suggesting the importance of connecting locations based on distance. Links of the type LLR and LLT (where locations are connected based on the number of reviews/tips, the common users have written), have the next highest impact on the accuracy. Friendship links (UUF) seem to have the least impact on the recommendation accuracy.
 Use of Distance: We know of one prior work [ 15 ] which incorporates distance in a graph-based setting for location recommendation. Our use of distance is different from theirs in that we only create a distance based link from if there is a user who has written a tip/review for both l having links drawn from each location to its nearest k locations. We propose a framework, G-dist, that contains all the features that our proposed framework contains except for distance based links. The distance based links in G-dist are created in accordance with the approach outlined in [ 15 ]. In G-dist, distance based links are created from each location to its nearest 608 locations. Note that 608 is the average number of location-location links, that exist in the graph constructed according to our proposed framework. As can be seen from Table 7 , having distance-based links to the nearest locations seems to take the recom-mendation process astray and produces poorer results than even G-Local which does not consider any intra-user or intra-location features. However, the differ-ent treatment of distance in our framework, streamlines the recommendation process to produce better results. While there has been a lot of interest in location recommendation in LBSNs, we think that interaction modalities other than check-ins have not featured promi-nently in majority of the studies. Collaborative Filtering (CF) [ 4 ] is a domain independent technique which uses past user behavior to compute user-user as well as item-item relationships to infer new user-item relationships [ 6 ]. Latent factor models like matrix factorization methods are a branch of CF methods Non-graph Based Location Recommendation: In [ 12 ], only user preference along with social (friend) and geographical factors were considered to recommend locations, whereas our approach considers other user and place properties derived authors modeled users X  preferences based on the categories of locations that they visited and identified experts in a city for a particular category; who were then used for location recommendation.
 The graph based recommendation framework proposed here differs from the  X 
To alleviate the sparsity problem that besets collaborative filtering algo-rithms, a graph based recommendation framework was proposed in [ 5 ] where, only links connecting users to items based on the users X  purchase history were considered. Our work on the other hand, also considers intra-user and intra-location edges based on tips and reviews.  X 
A model based on personalized random walk over user-location graph was proposed in [ 8 ] which made use of social network information along with check-in information. However, our work defines novel features about users and locations, which are in turn derived from tips and reviews. The user-user links of the type UUT/UUR, introduced in this work, are the first attempt to connect users in a graphical setting, with information other than social network information for recommendation purposes. Another point of departure of our work from [ 8 ] is the novel use of distance in our framework, not accounted for in [ 8 ].  X 
To the best of our knowledge, a recent work [ 15 ] is the first one to discuss the possibility of having edges between two locations for location recom-mendation. While the work in [ 15 ] connects locations l i distance, we create additional edges like LLR/LLT which capture semantic information other than distance. Also, while they create an edge from its nearest k locations, we create edges only between those 2 locations for which there is at least one user who has written tip/review for both of them. In this paper, we describe a graph-based location recommendation system which makes use of signals coming from tips and reviews as opposed to check-ins. We define novel features based on tips and reviews which can be used to con-nect users and locations. A simple preference propagation algorithm on the con-structed graph is then used to generate recommendations. The recommendation accuracy of our proposed framework is better than the existing methods. Among the intra-user and intra-location features proposed, we conclude that links of the type LLD and LLT/R are better than UUR/T and UUF type of links. We also observe that having distance based links between k number of nearest locations may not be the best way to leverage distance based information and find that using distance based links between venues with at least one common user (based on tip/review) leads to much better location recommendations.

