 The Semantic Web[1] proposed by Tim Berners-Lee has been regarded as the next generation of the current Web, which aims to add semantics and better structure to the information available on the Web. With the development of Semantic Web research, people have realized that the success of Semantic Web depends on the proliferation of ontologies and pay more attention to the con-struction of ontologies. Though ontology construction tools have become mature over the last decade, the manual development of ontologies still remains a te-dious and cumbersome task. So this pap er concerns how to acquire ontology automatically or semi-automatically from existing resources.
 large amount of data about various domains are organized and stored in rela-tional database. Data in relational database may be used as a kind of important resource for acquiring ontology. The paper proposes a semi-automatic ontology acquisition method(SOAM) based on data in relational database by analyzing the semantic similarity between relational model and ontology. SOAM divides ontology acquisition process into two stages and proposes the necessity of refining the obtained ontological structure before acquiring ontological instances. SOAM tries to balance the cooperation between user contributions and machine learn-ing reasonably to ensure the quality of constructed ontology and the automatic degree of acquiring process.
 machine interpretability of Web content than that supported by XML, RDF, and RDF Schema (RDFS) by providing additional vocabulary along with a formal semantics. So in this paper the implementation of SOAM is introduced to acquire OWL ontology from data in relational database. Different from existing methods, the implementation method not only can acquire OWL ontology from relational database directly by using a group of rules without demanding a middle model, but also can refine obtained ontology according to existing lexical knowledge repositories semi-automatically.
 ilarity between relational model and ontology and then proposes the SOAM . Section 3 introduces the implementation of SOAM in detail. Section 4 gives a case study. Section 5 intro duces related works. Sectio n 6 draws a conclusion and gives the future works. To explain the semi-automatic ontology acquisition method based on data in relational database clearly, the semantic similarity between relational model and ontology are analyzed firstly here. 2.1 Semantic Similarity Between Relational Model and Ontology The underlying model of relational database is the relational model[3]. The model includes a finite set R called relations, a finite set A called attributes, primary keys and foreign keys etc. Some functions in common use are as follow-ing.  X  A function dom ( A i ). It acquires the value X  X  range of attribute A i ,where  X  A function attr ( R i ). It acquires the attributes co ntainedinaspecificrelation  X  A function pkey ( R i ). It acquires the primary keys in a given relation R i ,  X  A function fkey ( R i ). It acquires the foreign keys in a given relation R i , such as NOT NULL, UNIQUE etc, and some dependencies. All these are called relation schema, which is used to describe the structure and association of data. The tuples in relations reflect the value s of schema, and they are content of database.
  X  A finite set C . It is called concepts .  X  A finite set R . It is called relations .  X  A concept hierarchy H c . H c is a directed relation H c  X  C  X  C , which is called  X  A function rel : R  X  C  X  C . It relates concepts no n-taxonomically. For  X  A set of ontological axioms A o . A o is expressed in an appropriate logical which could be seen as the e xtension of concepts.
 edge, and there are some semantic similari ties between them. In relational model, both entities and relationship of entitie s are expressed by relations. Therefore one relation in relational model may be corresponding to an ontological con-cept or relation. If two relations in database have inheritance relationship, then the two corresponding ontological concepts(or relations) will have hierarchical relationship. Additionally, attribute constraints in database may be converted to ontological axioms, and the tuples in database may constitute ontological instances. The situations are the simplest semantic relation between relational database and ontology. In fact there are more complicated cases. For example, the information spread across several relations may need to be integrated into one ontological concept, and so on.
 larity between relational model and ontology. In general, the relational database schema is corresponding to ontological structure and the tuples in database are corresponding to ontological instances, which is shown in Fig.1.
 the semantic similarity between relational model and ontology. 2.2 SOAM According to Fig. 1, the process of acqui ring ontology can be divided into two stages: acquiring ontological structure and acquiring ontological instances. In the stage of acquiring ontological structure, it is necessary to capture information about database schema firstly, and then based on the information ontological structure can be constructed. Since the constructed ontological structure may not be ideal, the evaluation and refinement about it is needed. After that, a more satisfying ontological structure is formed. Whereafter the stage of acquiring ontological instances can start. So we propose the semi-automatical ontology acquisition method, SOAM, which consists of four steps.
 Step 1. Capture the information about relational database schema;
Step 2. Acquire ontological structure according to the database schema infor-Step 3. Refine the obtained ontological structure; Step 4. Acquire ontological instances based on refined ontological structure. foreign keys, etc, in relational databa se. Based on Step 1, Step 2 acquires onto-logical concepts, organizes them into the taxonomy and detects non-taxonomical relation between two concepts and ontological axioms. Step 3 lets user validate the obtained ontological structures and form the final result. The step is nec-essary, because ontological structure is the backbone of ontology. The cost of ontological structure X  X  change is large because it will affect a large number of related instances. So we let user evaluate and refine the obtained ontological structure. After step 3, a steadier and more satisfying ontological structure is formed. Then step 4 can be implemented ea sily based on the ontological struc-ture.
 Step 3 needs users X  intervention. The w hole process is sem i-automatic. SOAM tries to balance the cooperation between user contributions and machine learning in order to ensure the quality of constructed ontology and improve the automatic degree of acquiring process. In fact, although all the ontology description languages embody the basic onto-logical structure, they have different characteristics and expressive ability. So it is necessary to choose appropriate language for ontology construction. Here, the reason of choosing OWL is explained and the characteristics of OWL is intro-duced firstly. Then the implementation of the steps in SOAM is introduced to acquire OWL ontology. Step 1 can be implemented easily by reverse engineering of relational database[5], so it will not be discussed in this paper. Step 2, Step 3 and Step 4 are important in SOAM. The implementation of them will be given in detail. 3.1 Choice of Ontology Description Languages Up to now, there are many ontology languages. The earlier languages are used to describe ontologies for specific user co mmunities (particularly in the sciences and in company-specific e-commerce applications), they are not defined to be compatible with the architecture of the World Wide Web in general, and the Semantic Web in particular. Recently, with the development of Web, some Web-based ontology description languages, such as SHOE, RDF(S), DAML+OIL and OWL are proposed. Among these languages, OWL is the latest standard recom-mended by W3C for the Semantic Web. OWL uses both URIs for naming and the description framework for the Web provided by RDF to add the following capabilities to ontologies.  X  Ability to be distributed across many systems  X  Scalability to Web needs  X  Compatibility with Web standards for accessibility and internationalization  X  Openess and extensiblility information instead of just presenting information to humans. OWL facilitates greater machine interpretability of Web content than that supported by XML, RDF, and RDF Schema (RDFS) by providing additional vocabulary along with a formal semantics. So we choose OWL as ontology description language. and OWL Full. Most of the elements of an OWL ontology concern classes, prop-erties and instances. The members of a cl assareknownasinstancesoftheclass. Properties are used to assert general facts about the members of classes and spe-cific facts about instances. OWL distinguishes two types of properties: datatype properties and object properties. Datatyp e properties are relations between in-stances of classes to datatypes. Object pr operties are relations between instances of two classes. In addition, property cha racteristics are used to further specify properties. Both properties and classes can be arranged in a hierarchy. 3.2 Acquiring Ontological Structure In SOAM, step 2, viz. acquiring ontological structure is a key step. The paper assumes that the source relational schema is at least in third normal form (3NF). The assumption does not limit the applicability of our method, because most of databases are highly likely to satisfy the 3NF requirement and there is algorithm that can convert 1NF to 3NF easily[6]. We give the related definitions firstly. Definition 1. For relations R i and R j in database, suppose that A i  X  attr ( R i ) and A j  X  attr ( R j )hold, t i ( A i ) expresses the values of tuple t i in attributes A i denoted as R i ( A i )  X  R j ( A j ).
 Definition 2. For relations R i and R j in database, suppose that A i  X  attr ( R i ) A i and A j are called equivalence, denoted as R i ( A i )= R j ( A j ). Rule 1. For relations R 1 ,R 2 ,...,R i in database, suppose that A 1 = pkey ( R 1 ), A 2 = pkey ( R 2 ), ... , A i = key ( R i ). The information spread across R 1 ,R 2 ,...,R i should be integrated into a class C i in ontology, if R 1 ( A 1 )= R 2 ( A 2 )= ... = R ( A i ) is satisfied.
 Comment: Rule 1 indicates that if several relations are used to describe one entity, the information in them should be integrated into one class. Rule 2. The relation R i can be mapped to an ontological class C i ,ifrule1 cannot be applied, and one of the following conditions can be satisfied: (i) | and A i /  X  fkey ( R i ).
 Comment: Rule 2 indicates that if one relation is used to describe an entity, but not relationship between relations, th en it can be mapped into one ontological class.
 Rule 3. For relations R i and R j , A i ( A i  X  attr ( R i ))canbemappedtoanonto-Suppose that the classes corresponding to R i and R j are C i and C j respectively, and then the domain and range of P are C i and C j .
 Comment: Rule 3 indicates that if one attri bute only reflects reference rela-tionship between two relations, it can be used as an object property in ontology. Rule 4. For relations R i and R j , two ontological objects property  X  X as-part X  and  X  X s-part-of X  can be created, if the two conditions are satisfied: (i) | pose that the classes corresponding to R i and R j are C i and C j respectively. The domain and range of  X  X s-part-of X  are C i and C j and the domain and range of  X  X as-part X  are C j and C i . Properties  X  X as-part X  and  X  X s-part-of X  are two inverse properties.
 Comment: Rule 4 indicates that if the entity described by one relation is a special kind of the entity described by th e other, then the classes corresponding to the two relations should have objects properties  X  X s-part-of X  and  X  X as-part X  respectively.
 Rule 5. For relations R i , R j and R k , two object properties P j and P j can be fkey ( R k )and A i  X  A j =  X  are satisfied. Suppose that the classes corresponding to R i and R j are C i and C j respectively. The domain and range of P j are C i and C j and the domain and range of P j are C j and C i . P j and P j are two inverse properties.
 Comment: Rule 5 indicates that if one relation is used to describe the relation-ship between two relations, two inverse o bject properties can be acquired based on semantics of the relation.
 P i can be created and the semantics of them are based on the decompo-sition of n-ary relationship provided by R j ,if A 1 = pkey ( R 1 ), A 2 = pkey ( R 2 ), ... , A i = pkey ( R i ), A 1  X  A 2  X  ...  X  A i = fkey ( R j )and A 1  X  A 2  X  ...  X  A i =  X  are satisfied.
 Comment: Rule 6 indicates that if one relation is used to describe the re-lationship among multi-relations, it should be decomposed to multiple object properties in ontology.
 Rule 7. For an ontological class C i and the datatype properties set of C i de-noted as DP ( C i ), suppose that C i is corresponding to relations R 1 ,R 2 ,...,R i in database. For every attribute in R 1 ,R 2 ,...,R i ,ifitcannotbemappedto object property by using rule 3, then it can be mapped into ontological datatype property of C i . The domain and range of each property P i are C i and dom ( A i ) respectively, where P i  X  DP ( C i )and A i  X  attr ( R i ).
 Comment: Rule 7 indicates that for each attribute in relations, if it cannot be converted into ontological object proper ty, it can be converted into ontological datatype property.
 Rule 8. For relation R i and R j , suppose that A i = pkey ( R i ) ,A j = pkey ( R j ). If rule 1 does not applied and R i ( A i )  X  R j ( A j ) is satisfied, then the class/property corresponding to R i is a subclass/subproperty of the class/property correspond-ing to R j .
 Comment: Rule 8 indicates that if two relations in database have inheritance relationship, then the two corresponding ontological class or property can be organized in a hierarchy.
 Rule 9. For relation R i and A i  X  attr ( R i ), the minCardinality and maxCar-dinality of the property P i corresponding to A i are 1, if A i = pkey ( R i )or A i = fkey ( R i ) is satisfied.
 Rule 10. For relation R i and A i  X  attr ( R i ), the minCardinality of the property P i corresponding to A i is 1, if A i is declared as NOT NULL.
 Rule 11. For relation R i and A i  X  attr ( R i ), the maxCardinality of the property P i corresponding to A i is 1, if A i is declared as UNIQUE.
 Comment: Rule 9, 10 and 11 indicate that some constraints of attribute in relation may be converted to the property cardinality in ontology.
 quired from a relational model. 3.3 Refining Ontological Structures Based on the above rules, ontological structure will be acquired automatically. However, the quality of the obtained ontological structure lies on the quality of data in the selected database. In the most circumstances, the obtained ontologi-cal structure is coarse. In addition, some semantics of obtained information need to be validated. So step 3 in SOAM, viz. refining obtained ontological structure is necessary. itative knowledge about some domains, the paper suggests refining obtained ontology according to them, especially ma chine-readable dictionaries and the-sauri. For example, HowNet, WordNet and some domain thesauri can be used as the references for refining ontology.
 when a user wants to refine a concept in the ontology, the algorithm can help him find some similar lexical entries in the existing lexical repositories. Then the user can refine the ontological concept acco rding to the similar lexical entries X  information, such as hyponym, antonym and synonym etc.
 lexical repositories LR , similarity measures sim , return threshold k measure is lexical similarity. Because the edit distance [8] formulated by Lev-enshtein is a well-established method f or weighing the difference between two strings. For two concepts L and L , the lexical similarity measure LSim ( L ,L ) can be given based on edit distance ,whichisshowninformula(1).
 LSim returns a degree of similarity betw een 0 and 1, where 1 stands for perfect match and 0 for bad match. It considers the number of changes that must changes against the length of the shortest string of these two.
 ilarity measure in conceptual level, which considers the similarity about super-concepts ( Sup ( L )and Sup ( L )) and sub-concepts ( Sub ( L )and sub ( L )) of compared two concepts L , L .
 SupSim ( L ,L ), which is shown as formula (2).
 For two concepts L and L , formula (2) summarizes the lexical similarity of each pair super-concepts of them against the most super-concepts of these two. SubSim ( L ,L ), which is shown as formula (3).
 For two concepts L and L , formula (3) summarizes the lexical similarity of each pair sub-concepts of them against the most sub-concepts of these two. mula (4).
 Formula (4) shows that different from the lexical measure LSim , the conceptual measure CSim considers the lexical similarity of two concepts and the similarity of their super-concepts and s ub-concepts synthetically. 3.4 Acquiring Ontological Instances Once ontological structure is acquired and refined, the process of acquiring on-tological instances,viz. step 4 in SOAM, can start. The rule is shown in rule 12.
 Rule 12. For an ontological class C i ,if C i is corresponding to relations R 1 , R 2 , ... , R i in database, then every tuple t i , t i mapped to a instance of C i .
 Comment: Rule 12 shows that for one ontological class, its instances consist of tuples in relations corresponding to the class and relations between instances are established using the information contained in the foreign keys in the database tuples. Now the SOAM has been applied to the Semantic Web project in Renmin Univer-sity of China. There are huge resources about social science in the digital library of Renmin University of China and they are stored in relational database, so our goal is to acquire OWL ontology from it.
 library on economics as the experimental data and refine the obtained ontologi-cal structure based on Classified Chinese Library Thesaurus, which classifies the controlled vocabulary in some domains and is adopted widely for organizing liter-ature resources. By using SOAM, an econo mics ontology has been created, which comprises about nine hundred classes, one thousand and one hundred properties and thirty thousand instances. The classes and properties are organized in hier-archy. According to OWL specification, the non-taxonomical relations of classes are embodied by object properties. The result is shown in Fig. 2, which is the screen snapshot of the acquired economic ontology.
 tion. The left shows the hierarchy of ontological classes and the right is the corresponding properties, property restrictions and instances. The hierarchy of properties can be seen in other windows, which is not shown here. Users can modify the ontology directly in CODE a ccording to the refinement requirement. reasonable, the related acquisition rules are effective and the refinement method can help user to validate ontology semi-automatically. Much work has been addressed on the issue of explicitly defining semantics in database schema[9,10], extracting semantics out of database schema[11] and transforming a relational model into an ob ject-oriented model[12]. However, the semantics obtained by previous cannot meet the requirement of constructing ontology fully. Although object-oriented model is close to an ontological theory, there are still some differences between th em. For example, there does not exist hierarchies and cardinality about proper ties in object-oriented model. So these methods cannot be used to discover ontology from relational database directly. model to an ontological model. The method in [13] creates a new database schema by analyzing the database schema firstly. Then the content of the new database schema is mapped into the ontology by reverse engineering techniques. During the transformation, the method uses a new database schema as middle model, which is different from ours. Moreover, the semantic characteristics of the database schema are not always analyzed. The method in [14] is proposed to automate the process of filling the instances and their attributes X  values of an ontology using the data extracted from external relational sources. This method uses a declarative interface between th e ontology and the data source, modeled in the ontology and implemented in XML schema. However, our method ac-quires ontological instances by mapping. The method in [15] is to build light ontologies from conceptual database schemas. It uses a mapping process, which is similar to our approach. However, its target is to construct RDF(S) ontology. RDF(S) has unclear semantics and has not inference model, which is incompe-tent for automatic tasks. Our target is to acquire OWL ontology because OWL has clear semantics brought by description logic systems, and OWL enjoys a well-founded inference model from some particular description logics. All the previous methods cannot acquire OWL ontology from relational database. ment after acquiring ontology from relational model. However, we have discussed that ontology refinement is a necessary step during ontology construction. Al-though [13] proposes to refine the ontology based on user queries, there are some limits in this method:(1)The cost of refinement is large, because it refines on-tology after the whole ontology is constructed. In SOAM, ontological structured is refined before acquiring ontological instances to reduce the cost of ontology modification, which has been discussed in chapter 2. (2)The quality of refine-ment cannot be ensured, because the refinement depends on the user queries, which is random. In our method, the ontological structured is refined according to the repositories of lexical knowledge, which is authoritative and steady. The paper gives a semi-automatic ontology acquisition method(SOAM) based on data in relational database and introduces the implementation of it in detail. In the end, an application case is given to prove that SOAM is practical and helpful to the automation of ontology acquisition.
 domains. And we plan to do some researches on acquiring ontology from other resources, such as natural language text, XML and so on.
 The work was supported by the National Natural Science Foundation of China (Grant No. 60496325).
