 Service level agreements (SLAs) have been used by many proposals in the last decade to automate different stages of the service lifecycle, using a formal def-inition of the different parts of an SLA such as service level objectives (SLOs), penalties, or metrics, to automate their negotiation [ 1 ], the provisioning and enforcement of SLA X  X ased services [ 2 ], the monitoring and explanation of SLA runtime violations [ 3 ], or the prediction of such violations [ 4 ]. What all of these proposals have in common is that most of them have been designed for compu-tational services. Therefore, they are aimed at enhancing software that supports the execution of computational services such as network monitors, virtualisation software, or application servers with SLA X  X ware capabilities, where there are no human or non-automatic tasks involved in service comsumption.
 On the other hand, business process outsourcing (BPO) services are non X  computational services such as logistics, supply X  X hain, or IT delivery services, that are based on the provisioning of business processes as services, providing partial or full business process outsourcing. Like computational services, their execution is regulated by SLAs and supported by specific software [ 5 , 6 ]. In this case, since BPO services are process X  X riented, the software that supports them is usually a process X  X ware information systems (PAIS) such as ERPs, CRMs, or business process management systems (BPMSs). However, unlike computational services, there is little work related to the extension of PAIS with SLA X  X ware capabilities to support BPO services.
 A PAIS with SLA X  X ware capabilities, i.e. an SLA X  X ware PAIS, is a PAIS that uses explicit definitions of SLAs to enable or improve the automation of certain tasks related to both the SLAs and their fulfilment such as performance moni-toring, human resource assignment or process configuration [ 7 ]. For instance, an SLA X  X ware PAIS could be automatically instrumented according to the metrics defined in the SLA so that when there is a risk of not meeting an SLO, an alert is raised allowing the human actors involved in the process to take measures to mitigate the risk. Another example could be the automated configuration of the process, e.g. removing or adding activities, executed by the SLA X  X ware PAIS depending on the conditions of the SLA agreed with the client.
 Apart from the benefits derived from the automation of these tasks, the need for a SLA X  X ware PAIS becomes more critical in a business X  X rocess X  X s X  X  X  X ervice scenario. A business X  X rocess X  X s X  X  X  X ervice is a new category of cloud X  X elivered service, which, according to Gartner [ 8 ], can be defined as  X  X he delivery of BPO services that are sourced from the cloud and constructed for multitenancy. Ser-vices are often automated, and where human process actors are required, there is no overtly dedicated labour pool per client. The pricing models are consumption X  based or subscription X  X ased commercial terms. As a cloud service, the business X  process X  X s X  X  X  X ervice model is accessed via Internet X  X ased technologies. X  In this setting, the conditions of the SLA agreed with each client may vary. Therefore, it is crucial for the PAIS that supports the business X  X rocess X  X s X  X  X  X ervice to behave according to the SLA agreed with the client. An example could be the prioritisation of the execution of tasks for those clients whose SLAs have bigger penalties if they are not met.
 In this paper, we focus on the formalization of BPO SLAs as a first step to enable such SLA X  X ware PAIS. To this end, after analysing the modelling requirements of such SLAs, four main aspects involved in their formalization have been identified, namely: 1) the description of the business process provided by the service; 2) the SLOs guaranteed by the SLA; 3) the penalties and rewards that apply if guarantees are not fulfilled; and 4) the definition of the metrics used in these guarantees. Then, we detail how these aspects can be formalized by means of generic models for the definition of computational SLAs and techniques used to model process performance indicators. Furthermore, we have validated our approach through the modelling of several real BPO SLAs.
 example is introduced. Section 3 details the four elements that must be formal-ized in SLAs for BPO services and Section 4 shows how they can be modelled using WS X  X greement, a specification from Global Grid Forums to describe Ser-vice Level Agreements 1 . Next, Section 5 reports on how the running example can be formalized using our proposal and discusses some limitations identified during the definition of the SLA metrics. Section 6 reports on work related to the definition of SLAs for BPO services. Finally, conclusions are detailed in Section 7 . Let us take one of the BPO SLAs to which our approach has been applied as running example throughout this paper. The SLA takes place in the context of the definition of statements of technical requirements of a public company of the Andalusian Autonoumous Government, from now on Andalusian Public Company , APC for short. Statements of technical requirements are described in natural language and include information about the services required as well as their SLA. Although the running example includes one service only, further infor-mation on this or the rest of services, as well as on other application scenarios, is available at http://www.isa.us.es/ppinot/caise2015 .
 for the Technical Field Support for the Deployment of the Corporative Telecom-munication Network of the Andalusian Autonomous Government. It is presented in a 72 X  X age document written in natural language including the SLAs defined for five of the required services, namely: 1) field interventions; 2) incidents; 3) network maintenance; 4) installations and wiring; and 5) logistics. In particu-lar, we focus on the field interventions (FI) service. The term field intervention makes reference to the fact of requiring the presence of a technician at any head-quarter of the APC for different reasons: troubleshooting technical assistance, installations supervision or restructure, for instance.
 APC requires an FI, which can have different levels of severity, from the con-tractor staff. Then, the contractor plans the FI and performs it at headquarters. In some cases, it is necessary for the contractor to provide some required docu-mentation and, if such documentation is considered incomplete or inadequate by the APC, it needs to be resubmitted by the contractor until it fulfils the APC X  X  quality requirements.
 the following information: 1) the committed times by the contractor (see Table 1 ); 2) the general objective defined for FIs  X  X he SLO of the SLA X  represented as AFIP &gt; 95%, where the AFIP ( accomplished FIs percentage ) metric is defined as: and 3), the penalties applied in case the SLO is not accomplished (see Table 2 ). These penalties are defined over the monthly billing by the contractor for the FI service. In addition, the statement of technical requirements document presents the following definitions for the referred times in Table 1 : Response Time Elapsed time between the notification of the FI request to the contractor and its planning, including resources assignment, i.e. technicians. Presence Time Elapsed time between resource (technician) assignment and the beginning of the FI, i.e. technician arrival.
 Resolution Time Elapsed time between the technician arrival and the end and closure of the FI.
 Documentation Time If documentation, i.e. reports, is required, it is defined as the elapsed time between the end and closure of the FI and documenta-tion submission. If the APC considers such documentation as incomplete or inadequate, it will be returned to the contractor and documentation time is again activated and computed. The requirements for modelling BP SLAs in the context of SLA X  X ware PAIS have been identified after a study of the state of the art in SLAs for both com-putational and non X  X omputational services, and the analysis of more than 20 different BPO SLAs developed by 4 different organisations in 2 different coun-tries. The conclusion is that four elements must be formalized in SLAs for BPO services, namely: 1) the business process; 2) the metrics used in the SLA; 3) the SLOs guaranteed by the SLA; and 4) the penalties and rewards that apply if guarantees are not fulfilled. Next we describe each of them. 3.1 Business Process An SLA is always related to one or more specific services. The way such services must be provided is usually defined by describing the underpinning business pro-cess, and this is often done in natural language. Consequently, the formalization of SLAs for BPO services requires the formalization of the business process itself. Note that it is not required for the SLA to detail the low level business process that will be enacted by the provider X  X  PAIS since most SLAs do not delve into that level of detail and just focus on main activities and the consumer X  X rovider interaction (cf. Fig 1 for the high X  X evel business process of the running example). However, it should be possible to link this higher level business process to the lower level business process enacted by the PAIS. 3.2 SLA Metrics These are the metrics that need to be computed so that the fulfilment of the SLA can be evaluated. For instance, in the running example, response time , presence time , or AFIP are examples of such metrics. The mechanism used to define these metrics must have two main features. On the one hand, it must be expressive , i.e. it must allow the definition of a wide variety of metrics. On the other hand, it must be traceable with the business process so that it enables their automated computation. In addition, it is convenient that the metrics are defined in a declarative way because it reduces the gap between the SLA defined in natural language and the formalised SLA and decouples the definition of the metric from its computation. 3.3 Service Level Objectives (SLOs) These are the assertions over the aforementioned metrics that are guaranteed by the SLA and, hence, must be fulfilled during the execution of the service. For instance, the running example defines AFIP &gt; 95% as an SLO for AFIP metric of the FI service. In general, SLOs can be defined as mathematical constraints over one or more SLA metrics. 3.4 Penalties and Rewards They are compensations that are applied when the SLO is not fulfilled or is improved, respectively. An example is shown in Table 2 , which depicts the penal-ties that apply for the FI Service SLA in our running example. The specification of penalties and rewards require the definition of a mathematical function, whose domain is one or more SLA metrics and whose range is a real number represent-ing the penalty or reward in terms of a percentage over the price paid for the service in a time period. 3.5 Comparison of BPO SLAs and Computational SLAs From the previous requirements, we conclude that the structure of SLAs for BPO services is very similar to the structure of SLAs defined for computational services. For instance, Amazon EC2 SLA 2 also includes a definition of the service; some metrics like the monthly uptime percentage (MUP); an SLO, which is called service commitment , defined as MUP  X  99.95%; and a penalty based on the MUP and defined in terms of a percentage over the price paid in the last month. In contrast, the description of the service and the definition of the SLA met-rics of BPO SLAs and computational SLAs present significant differences. The main reason is that, unlike computational services, BPO services are process X  aware and, hence, their description and their SLA metrics are based on that process. Based on the requirements described in the previous section, and on the similar-ities and differences between BPO SLAs and computational SLAs, we propose modelling BPO SLAs by combining the agreement structure and mechanisms for the definition of SLOs, penalties, and rewards that have been already proposed for computational SLAs, with notations used to model processes and Process Performance Indicators (PPIs), such as [ 9  X  13 ]. PPIs are quantifiable metrics that allow the efficiency and effectiveness of business processes to be evaluated; they can be measured directly by data that is generated within the process flow and are aimed at the process controlling and continuous optimization [ 14 ]. ment structure; BPMN as the language to model business processes; PPINOT [ 13 ] as the mechanism to model PPIs; the predicate language defined in [ 16 ] to specify SLOs, and the compensation functions introduced in [ 17 ] to model penalties and rewards. These proposals have been chosen because of two reasons. Firstly, they are amongst the most expressive proposals of their kind, which is necessary to model the different scenarios that appear in BPO SLAs. Secondly, they have a formal foundation that enables the development of advanced tooling support that can be reused in a SLA X  X ware PAIS environments. For instance, it is possible to automatically analyse a WS X  X greement document with predicates to detect conflicts such as inconsistencies between agreement terms or dead terms (i.e., conditional terms that can never be applied) [ 16 ]. and then, we detail how it can be used together with other languages and models to define a BPO SLA. Furthermore, we also provide more details about the afore-mentioned models and the tooling support that has been developed for them. 4.1 WS X  X greement in a Nutshell WS X  X greement is a specification that describes computational service agreements between different parties. It defines both a protocol and an agreement document metamodel in the form of XML schema [ 15 ]. According to this metamodel, an agreement is composed of an optional name, a context and a set of terms. The con-text section provides information about participants in the agreement ( i.e. service provider and consumer) and agreement X  X  lifetime. The terms section describes the agreement itself, including service terms and guarantee terms.
 iAgree syntax [ 16 ], which is designed for making WS X  X greement documents more human X  X eadable and compact than with the original XML syntax. All examples included in this paper are defined using iAgree .
 description terms , service properties and service references . Service description terms (lines 9 X 10) describe the features of the service that will be provided under the agreement. They identify the service itself, so there is no reason to monitor them along service lifecycle. Service properties (lines 11 X 12) are the set of mon-itorable variables relevant to the agreement, for which a name and a metric are defined. Finally, service references (line 8) point to an electronic service using endpoints references.
 fulfil together with the corresponding penalties and rewards. An SLO in WS X  Agreement is an assertion over monitorable properties that must be fulfilled during the execution of the service. SLOs can be guarded by a qualifying con-dition , which indicates a precondition to apply the constraint in the SLO. Both SLOs and qualifying conditions are expressed using any suitable user X  X efined assertion language. penalties and rewards. 4.2 Materialising BPO SLAs with WS X  X greement WS X  X greement leaves consciously undefined the languages for the specifica-tion of service description terms, SLOs, or qualifying conditions. This flexibility makes WS X  X greement a good choice for modelling BPO SLAs since it allows embedding any kind of model in its terms. In this paper, we propose the follow-ing WS X  X greement Configuration [ 16 ] for defining BPO SLAs.
 Service Description Terms. In BPO services, this description can be pro-vided in terms of the underpinning business process. In this paper we use the BPMN ( Business Process Model and Notation ) standard since it is a well X  X nown standard widely used in both industry and academy.
 Service Properties. In BPO services, these metrics can be specified using a PPI X  X riented approach. Specifically, we propose defining metrics using PPINOT [ 13 ] measure definitions. This choice has been made based on the analysis per-formed in [ 13 ] of the different available PPI X  X riented approaches. In particu-lar, PPINOT has been chosen because of its expressiveness, since it allows the definition of certain PPIs not possible with other existing approaches, and its traceability with BPMN models, since it provides explicit connections to their elements. Furthermore, PPINOT has been used at the core of a software tool called the PPINOT Tool Suite [ 18 ], which includes the definition of PPIs using either a graphical or a template X  X ased textual notation [ 19 ], their automated analysis at design X  X ime, and their automated computation based on the instru-mentation of open source BPMSs.
 PPINOT measure definitions can be classified into three main categories depending on the number of process instances involved and the nature of the measure: base measures, aggregated measures, and derived measures[ 13 ]. Base measures They are obtained directly from a single process instance and Aggregated measures Sometimes, it is interesting knowing not only the value Derived measures They are defined as functions of other measures. Depending Guarantee Terms. To define SLOs, we use the predicate language defined in iAgree [ 16 ], which is a domain-indpendent language that includes relational, logical and common arithmetic operators. Apart from a concrete syntax, also provides semantics to define SLOs expressions as a constraint satisfaction problem, which enables the automation of analysis operations on SLAs such as detecting conflicts within an agreement document [ 16 ] or explaining SLA violations at run X  X ime [ 3 ].
 pensation functions defined in [ 17 ]. Let SP be the set of all possible values to the service properties of the agreement, a compensation function is a function from SP to R that associates a compensation, expressed as a real number, to each of the values of the service properties. As a normalised convention, a positive com-pensation is associated to penalties and a negative compensation is associated to rewards. The compensation can be defined in absolute terms (e.g. in euros) or in relative terms (e.g. as a percentage of the service monthly bill). In order to validate the applicability of our approach, we have used it to model a subset of the SLAs analysed in Section 3 . In particular, 9 different services designed by 3 different organisations were modelled. In the following, we show how WS X  X greement and PPINOT can be used to model the running example and then, discuss the limitations we have found and how they can be solved. The remaining SLAs that have been modelled are available at http://www.isa. us.es/ppinot/caise2015 . 5.1 SLA for the Running Example Figure 3 shows an excerpt of the SLA for the running example, in which the three elements of the BPO SLA are specified as follows.
 Service Description Terms. Service description terms (lines 34 X 36) spec-ify the high level BPMN model associated to the FI service derived from the corresponding SoTR, as described in Section 2 .
 Service Properties. Once the high level business process has been modelled, service properties relevant to the SLA are defined, namely This service property is computed according to the AFIP Measure 15 X 28), that measures the percentage of accomplished FIs ( respect to the total number of FIs ( FI Measure ), as described informally in Section 2 . The definition of these metrics is done by means of the measure definitions that PPINOT provides to detail how PPIs are measured (see [ 13 ] for details). Guarantee Terms. Finally, the guarantee terms of the SLA including its SLOs and penalties are specified. In this case, according to Tables 1 and 2 ,theper-centage of accomplished interventions must be greater than 95%. This can be defined in terms of the previously defined service properties as (line 40). Additionally, penalties are defined as a percentage discount of the monthly billing if the SLO is not achieved. This is 1% of discount per each 1% of accomplished percentage under the objective, or 10% if the percentage is under 90%, as depicted in Table 2 . 5.2 Limitations of our Approach The application of the proposed approach for defining the SLAs of nine BPO services and the analysis of another number of them, all from real scenarios, showed up some limitations concerning the definition of SLA metrics, whereas WS X  X greement and the models used to define business processes, SLOs, penal-ties, and rewards proved to be capable to model all possible situations. Concerning SLA metrics, although most of them could be successfully mod-elled using PPINOT, there were a few types that could not be represented prop-erly. As far as we know, this limitation is not specific to PPINOT, since there is not any other PPI modelling approach that can model all of the metrics that appear in the analysed SLAs. We believe that the main reason why we have found this limitation is that, although related, the purpose of PPIs and SLA metrics are slightly different. PPIs are used internally by the organisation that performs the process as a mechanism to improve its performance. In contrast, SLA metrics are aimed at providing service X  X evel guarantees to the service con-sumer or defining penalties when guarantees are not met. As a consequence, SLA metrics are much more focused on the customer and its expectations than the former.
 Specifically, we found four types of metrics that cannot be modelled neither with PPINOT nor with most of the other PPI modelling approaches: Metrics that involve exclusion of idle time, suspend time, calendars or timetables In the running example, when defining times like resolu-tion time, documentation time, etc , the SoTR document usually specified that idle time should be ignored for those measures, and that the local cal-endar and working hours were considered to compute time for them. This ability to exclude time according to some criteria is not usually present in PPI modelling approaches.
 Metrics that involve delays with respect to a date given in a data object
These metrics require comparing the time instant when an activity had started or finished, or when an event was triggered, with respect to a due date con-tained in a document like a project plan, a replacement requirement or any other in order to compute possible delays. This is a rather frequent metric in
SLAs since it is directly related with customer expectations. However, it is much less frequent as a PPI metric and, hence, it is not supported by PPI mod-elling approaches.
 Metrics that involve human resources These metrics are used in SLAs in which the task performer profile must be taken into account when applying penalties, so that a different coefficient is applied, according to the different profiles, to calculate the penalty. For instance, in one of the studied scenarios, the general penalty of each metric had to be multiplied by the monthly profile rate of the person involved in the non-fulfilment. This metric is again closely related with the customer. In this case, with the fact that the customer expects a fair compensation depending on the task performer profile that failed to fulfilled the guarantees. However, current PPI modelling approaches do not support any metric that involve information related with the human resources that performed the task.
 Metrics that involve different processes Some SLA metrics have to be defined over two or more process instances. This happens when a metric require execution information from two different processes to be computed.
An example was found in one of the analysed BPO SLAs, where the number of incidents post production had to be obtained, and this metric required information from the incidents and the software delivery processes. Again, this metric cannot be modelled using current PPI modelling approaches, since a PPI focus on just one process by definition.
 Some of these limitations could be easily addressed in PPINOT just by doing minor changes in its metamodel. However, others are left as future work since they require more significant changes. In particular, the first two type of metrics can be supported just by defining filters over time measures , so that idle time, suspend time, calendars or timetables can be taken into account when computing the time for the measure; and by adding a new type of measure, time instant measure , that measures the date and time in which an event takes place instead of the duration between two events. The metrics that involve human resources can be partially addressed using an extension to PPINOT to define resource X  aware PPIs [ 20 ]. Finally, the metrics that involve different processes can be defined as a derived measure that relates measures in each process instance, but it is necessary to include information on how to correlate process instances when defining them, which is something that will be addressed in future work. A number of research efforts have focused on proposing models for SLA defini-tion in computational and non X  X omputational domains. WSLA Framework [ 21 ] provides an agreement document model (WSLA), which is the origin of the WS X  Agreement specification, and provides foundations to monitor SLA fulfillment. Sauv  X  e et al. [ 22 ] propose a methodology to calculate SLO thresholds to sign IT services SLAs according to service function cost from a business perspective. In all these cases, guarantees are proposed upon computational metrics (e.g. response time or availability). Therefore, it is useful only for SLAs that apply to the software infrastructure that support business processes and not for the business processes offered as a service. Kieninger et al. [ 23 ] describe a categoriza-tion of IT services and outline a mechanism to obtain efficient SLOs for them. However, they do that in a conceptual level and do not detail how they can be formalised to enable their automated management. Daly et al. [ 24 ]proposean SLA model based on the different elements in the service provision, i.e. appli-cation, servers, network, etc, related to service provision system. Cardoso et al. [ 25 ] propose a description language for services that include business character-istics together with technical or operational parameters. Unlike our proposal of managing a business process as a service, this work is focused on managing ser-vices including business perspective. Finally, Wieder et al. [ 26 ] define a Service Oriented Architecture with their own SLA model. The model has to be refined on each specific domain and there is an independent proposal to define measure-ments. The problem with all these approaches is that their SLA model offers no mechanism to model a business process nor to define metrics in terms of this business process. This seriously limits their applicability for building SLA X  X ware PAIS, in which processes play a key role.
 business process artifacts where guarantees over the process are defined through process events. However, although similar to our work, this approach has a cou-ple of limitations. First, the language to define metrics is imperative. Instead, PPINOT expressions are declarative, which eases the adaptation to different PAIS and makes it possible to define them in an user-friendly way by means of linguistic patterns as detailed in [ 19 ]. Second, the authors use their own model for SLA definitions, which limits the interoperability of their proposal and the reusability of existing proposals to analyse SLAs such as [ 3 , 16 ]. In this paper, we have shown how BPO SLAs can be modelled by combin-ing mechanisms for modelling computational SLAs with mechanisms to model business processes and PPIs. Specifically, we first analysed the requirements for modelling BPO SLAs after a study of the state of the art in SLAs for both computational and non X  X omputational services and the analysis of more than 20 different BPO SLAs developed by 4 different organisations. The conclusion of this analysis was that the structure of SLAs for BPO services and the defini-tion of SLOs, penalties, and rewards are very similar to those of SLAs defined for computational services. However, the service description and the definition of the SLA metrics of BPO SLAs and computational SLAs present significant differences. The reason is that, unlike computational services, BPO services are process X  X ware and this has a strong influence on how they are described. On the light of these requirements, our proposal to model BPO SLAs com-bines well founded approaches and standards for modelling computational SLAs and PPIs. Specifically, we rely on WS X  X greement [ 15 ], which provides the gen-eral SLA structure, BPMN [ 28 ], which is used to model the business process related to the service, PPINOT [ 13 ], which allows the definition of metrics, and iAgree [ 16 ], which provides a language to define SLOs and penalties. The application of the proposed approach to a number of real scenarios allowed us to conclude that our approach is able to model all possible situa-tions in these scenarios except for some limitations concerning the definition of SLA metrics as detailed in Section 5.2 . Some of them could be solved by applying minor changes to the PPINOT metamodel. However, other limitations require more significant changes that shall be carried out in future work.
 Apart from addressing these limitations, there are two lines of future work. On the one hand, we want to build a SLA X  X ware PAIS that uses these models to improve the automation of certain tasks related to both the SLAs and their fulfilment. To this end, we plan to take advantage of the existing tool support for iAgree and PPINOT to automate the definition, monitoring and analysis of the aforementioned SLAs for BPO services. On the other hand, we want to include additional information in SLAs to cover not only performance guarantees, but other aspects that are relevant for the customer such as compliance or audit X  related issues [ 29 ].

