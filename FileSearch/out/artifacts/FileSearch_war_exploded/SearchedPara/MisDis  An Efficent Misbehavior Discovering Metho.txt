 efficiency of road traffic, and have attr active prospects for development. VANET can improve People X  X  livelihood and has a good prospect. We can get better driving expe-serious security threats because of its huge scale of vehicle number, its variable node and challenging problem, and the research about that is becoming a hot spot. 
Vehicles play a basic role in the VANET because they are the original location of messages X  generation and transmission. Some types of messages are exchanged road conditions. When something goes wrong with vehicles, such as message leakage fectiveness cannot be guaranteed. Malicious vehicles can start malfunctioning due to congestion by pretending multiple vehicles simultaneously and launch DoS attack by impairing the normal data dissemination operation. There are number of security threats[1-3], which may degrade the performance of several ways and have different objectives such as attackers eavesdrop the communi-cation, drop, and change or inject packets in to the network. Therefore, one solution is that vehicles should cooperate together to enhance the security performance of a net-work. Therefore, security mechanisms, facilities, and protocols are needed to diminish behavior, malicious vehicles are synonymously used. However, current research VANET and seldom cares about the possibility of OBUs X  abnormal behaviors. 
In this paper, we propose MisDis, a method focus on the misbehavior vehicles de-tection. In general, the contributions of MisDis are: 1. MisDis can introduce accountability to the vehicles X  behavior by record evidence, and confirm the property both inside and outside the vehicle. pervision. target vehicle. And if the host vehicle violates the established security policy, then the system need to record the behavioral and try to dump to a safer roadside unit or department in charge. Organization: The rest of this paper is organized as follows: in Section 2, we present security objectives. Section 4 describes the design rationale and details of our scheme. Then, the security analysis result is discussed in Section 5. Finally, we will give con-clusion in Section 6. There are only few misbehavior detection schemes suggested for finding attacker. Golle et al. [4] propose a scheme to detect malicious data by finding outlying data. marked as malicious. The current view, in turn, is established cooperatively. Vehicles share sensor data with each other. An adversary model helps to find explanations for inconsistencies. The main goal is to detect multiple adversaries or a single entity car-detect misbehavior but only mentions a  X  X ensor-driven detection X . sisted solution. One component of their work is a local misbehavior detection system running at each node. This system relies on gathering information from other nodes, and then comparing the behavior of a vehicle with some model of average behavior of the other vehicles built on the fly. It is based on the deviation of attacker node from normal behavior and used timestamp, assigned messages and trusted components deviation from normal behavior of vehicles, while they always assume an honest ma-vehicles does not hold as identities may be generated arbitrarily. 
Ghosh et al [6,7] presented and evaluate d a misbehavior detection scheme (MDS) for post crash notification (PCN) application. Vehicles can determine the presence of event. The PCN alert raised will be received by multiple vehicles in the vicinity, and misbehavior. The basic cause-tree approach is illustrated and used effectively to joint-ly achieve misbehavior detection as well as identification of its root-cause. Schmidt et al [8] introduced a framework (VEBAS) based on reputation models. the trustworthiness value in other vehicles in its near vicinity from the various sensor values obtained. The value is then used to identify a misbehaving vehicle and build up reputation. VEBAS requires continuous exchange of information between the ve-hicles that is used by a vehicle to analyze the behavior of nearby vehicles. Based on priately on incoming information. However, the paper only describes the scheme, no evaluation for any specific ap plication is presented. messages after the existence of certain event is proved. The model leverages multiple curve. A threshold curve implies the importance of an event to a driver according to the relative position, and a CoE curve represents the confidence level of the received messages. An alert is triggered when the event certainty surpasses a threshold. 
PeerReview[10], presented by Haeberlen et al., is a system that provides accounta-against false accusations. These guarantees are particularly important for systems that span multiple administrative domains, which may not trust each other. PeerReview X  X  key idea is maintaining a per-node secure log which records the messages a node has sent and received, and the inputs and outputs of the application. Any node i (as a giv-en reference implementation) can request the log of another node j and independently applicable: it only requires that a correct node X  X  actions are deterministic, that nodes can sign messages, and that each node is periodically checked by a correct node. To the log, PeerReview can detect Byzantine faults without requiring a formal specifica-tion of the system. 3.1 Definition First, we define two concepts:  X 
Malicious vehicles : it means that vehicles drop or duplicate packets in network in sonal aims.  X 
Honest (normal) vehicles : A vehicle that has a normal behavior, where a vehicle with normal behavior forwards messages correctly or generates right messages. 3.2 Tamper Resistant Hardware tamper-resistant hardware. Tamper resistant in general means that something is resis-tant against tampering, independent of the type of access a person might have to the internals up to self-destruction of the device upon the detection of tampering attempts. secure against tampering, whereas tamper evid ent means that one is able to detect that a device has been tampered with. Tamper resistance means the vehicle X  X  devices have resistant devices can provide secure storage for keys and certificates, and maybe even for a history of recent messages sent over the external communication system, like an applied, tamper-proof and tamper-resistant hardware enable secured communication and will prevent most attacks on the active safety communication system from inside of the vehicle. 3.3 Time Verification Accurate time service can support the upper modules, like Detector and State Machine. Verifications with the secure log in order to detect misbehavior are possible with regard to the following aspects. A fi rst step consists in comparing the dump log from a single node can provide additional insight on the nodes behavior (or on the fact vehicle speed related plausibility checking. 3.4 Secure Log Security log is the basic data set for vehicle misbehavior detection. Each OBU main-delete the security log. 
The secure log entry is defined as follows: where:  X  n : a strictly increasing sequence number;  X  n : either SEND or RECV which is the category of the log entry;  X  n : some type-specific content; resistant. the log can be dump to the DoT by some security channels. In this paper, we suppose the secure log about a node vehicle can take enough behavior evidence for judging. 3.5 OBU Model The OBU model architecture is as shown in Fig. 1. functionality that should be checked, and use the application to denote other functions communicate with other vehicles X  det ector modules. A normal vehicle i implements S i and D i as specified; on the other hand, a misbehavior vehicle may behave arbitrarily. D raised otherwise. The model have two important database in the different level. One is the security policy which can directly instruct the OBU X  X  misbehavior checking task, and another is the secure log which keep the behavior evidence of the host vehicle. secret and public key of the OBU, the pseudonyms (related to the vehicle X  X  electronic Revocation List (RL for short) issued by DoT. 
In the bottom level, the 802.11p communication module guarantees the interactive with the other OBUs and RSUs. 3.6 Secure Objectives ments after presenting the design details.  X 
Accountability: The requirement states that the misbehavior can be detectable by deny the fact that they have misbehaved. Based on this record, a faulty node whose observable behavior deviates from that of a correct node can be detected eventual-ly. At the same time, a correct node can defend itself against any false accusations.  X 
Identificability: An accountable system requires strong node identities. Otherwise, identity. In this paper, we assume that each node is in possession of a cryptograph-ic key pair that can be linked to a unique node identifier. And we also assume that eventually succeeds. We expire by Timeweave[12] and employ some ideas of the scheme in PeerRe-view[11]. The basic idea of MisDis is to se t a security log for each vehicle to record moderate size of monitoring OBUs which have check-token authorized by DoT. Then investigation and isolation. technical design of the proposed scheme as following. 4.1 System Initialization In the system initialization, the DoT initializes the system parameters in offline man-ner, and registers vehicles and RSU s.  X  1) Setup: Given the security parameter k , the bilinear parameters are first chosen, where || qk = . Then DoT randomly selects a master secret the public system parameters as  X  ( , RSU RSU KK + X  ) to the target RSU by secure channel.  X  Vehicle V i first randomly chooses *  X  4) OBU-TokenGen : According to the DoT X  X  histor y record and the choice policy, 
DoT authorizes RSU to issue Check-Token to some OBUs. Each token has a limit valid time. 4.2 Behavior Logging sage transmission is as follows: msg , and sends the result to j . (, ,, , ) ln R ECV i msg  X  X  and returns an ack with completes; otherwise, i sends a challenge to j 's monitors. identify them; for correct vehicles, we prevent them from false accusations. 4.3 Secure Log Checking Fig. 2 shows the secure log checking procedure (suppose V j /V k have check-token and meet V i on the road). also use i n u to inspect n le and the entries before it in i 's log. 
The secure log checking includes the following 3 procedures:  X  1) Hello: OBU i broadcasts Hello-Message periodically to show its existence for the near vehicle. Hello-Message is [] i K + .  X  2) Check-Req: After received the Hello-Message from V i , V j sends back a Check-session key between V i and V j . The Check-Req Algorithm is shown as following.  X  include the target log back. 4.4 Log Dumping database for the thorough misbehavior analysis by secure channel such as SSL.  X  are tamper-resistant hardware. Based on this outsourcing record, a misbehavior car eventually.  X  key pair that can be linked to a unique vehicle identifier. And more, the correct ve-hicle X  actions are deterministic and that communication between correct nodes eventually succeeds. In VANET, each car on the road is equipped with one OBU. In this paper, we intro-partment in charge. Acknowledgments. I would like to thank Yonggang Wang from Peking University was supported in part by the NSFC under grant No. 61170263 and No. 61003230.
