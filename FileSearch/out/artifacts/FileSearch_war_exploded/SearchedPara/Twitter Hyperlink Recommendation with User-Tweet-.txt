 Twitter, the most famous micro-blogging service and online social network, collects millions of tweet s every day. Due to the length limitation, users usually need to explore other ways to enrich the content of their tweets. Some studies have provided findings to suggest that users can benefit from added hyperlinks in tweets. In this paper, we focus on the hype rlinks in Twitter and propose a new application, called hyperlink recommendation in Twitter. We expect that the recommended hyperlinks can be used to enrich the information of user tweets. A thr ee-way tensor is used to model the user-tweet-hyperlink collabora tive relations. Two tensor-based clustering approaches, tensor decomposition-based clustering (TDC) and tensor approximation-based clustering (TAC) are developed to group the users, tweet s and hyperlinks with similar interests, or similar contexts. Recommendation is then made based on the reconstructed tensor us ing cluster information. The evaluation results in terms of Mean Absolute Error (MAE) shows the advantages of both the TDC and TAC approaches over a baseline recommendation appro ach, i.e., memory-based collaborative filtering. Comparatively, the TAC approach achieves better performance than the TDC approach. H.3.3 [Information Search-Retrieval]: Information Filtering Twitter Hyperlink Recommendation, Three-way Clustering. As a household micro-blogging servic e, Twitter collects millions of short messages which are known as tweets everyday. Since a tweet is limited to 140 characters in length, it can be delivered through the Twitter network effect ively. For the same reason, sometimes users feel difficult to fully express their thoughts in such a tiny tweet especially when they want to describe complex events or opinions. To overcome this limitation, Twitter users often cite additional hyperlinks in their tweets to complete or detail the information, e.g. with additional evidences. With linked external Web pages, writers can better present the information they intend to convey to the r eaders. This smart use becomes increasingly popular. Soon afterwar ds, the Web sites like Bit.ly ( www.bitly.com ) and Google ( www.google.com ) provide the service to encode long hyperlinks into shorter ones, which makes it much more convenient to embed a hyperlink in a tiny tweet. According to the report from TechInfo in 2010 [8], about 25% of tweets contain hyperlinks and the proportion is still increasing. Our own statistics on millions of collected tweets also indicate that about 26.2% of tweets contain at leas t one hyperlink and in some domains, the ratio is even up to 50%. Recognizing this phenomenon, Twitter itself provides an interface to retrieve the tweets with hyperlinks. The values of hyperlink are misc ellaneous. For the Twitter service itself, the hyperlink can enrich the information of tiny tweet to attract more users. Reading lin ked Web pages also prolongs the amount of time that a user remain s in Twitter. The stickiness is important from the Search Engine Optimization (SEO) perspective. The longer a user stay s, the more valuable Twitter is. On the other hand, for each individual Twitter user, according to the study of Microsoft [6], hyperlinks can increase credibility of tweets, which in turn makes tweets more likely to be propagated via retweeting. To some extent, it can be regarded as one way for a user to gain recognition and to accumulate reputation. To understand the quantity and the purpose of the hyperlinked contents, we have manually annotated a small set of the hyperlinks included in the downloaded tweets. The statistics indicates that 84% hyperlinks introduce relevant and useful information to the topics and am ong relevant hyperlinks 67% refer readers to the sources of news. Considering the value of hyperlinks, we propose a new Twitter application, called hyperlink recommendation , which recommend hyperlinks to users helping them to enrich the content of tweets. What X  X  more, the recommended hyperlink improves the diversity of the information [8], and can well accommodate the differences between users [3]. Since the hyperlinked Web pages are full of non-text images, videos and a udios, it would be difficult for content-based recommendation appr oaches to produce reliable recommendation based on limited te xtual information. We thus choose the Collaborative Filtering ( CF ) framework to approach this task. With this framework, the most straightforward would examine the user-hyperlink relations and define it as a correlated behavior when two users cite the same hyperlink. However, it will lose important information, such as tweet, the context where a hyperlink is embedded in. Tweets bridges users and hyperlinks. A user may write two different tweet s but cite the same hyperlink. When other users indirectly cite the hyperlink by replying or retweeting tweets, we are absolutely not able to differentiate the purposes of citations without tweets. Also, tweets can help to estimate the relations between hy perlinks. If one tweet cites two hyperlinks, it can be implied that the two hyperlinks are highly correlated. With these considerations in mind, we would like to consider the relations among three types of enti ties, i.e., user s, tweets and hyperlinks, for hyperlink recommendation. To model these inherently inter-related objects explicitly and s imultaneously, we resort to the three-way collaborative tensor. Unfortunately, the sparsity of collaborative tensor presents a challenging problem for three-way hyperlink recommendation. Considering the weakness of memory-based CF approaches in handling sparsity problem, we explore the model-based CF approaches in this work and further extend previous matrix-based clustering to tensor-based clustering. Two approaches, namely, tensor decomposition-based clustering ( TDC ) and tensor approximation-based clustering ( TAC ) are developed. While the former applies spectrum clustering to tensor Tucker decomposed matrixes, the latter aims to best approximate the tensor using cluste r information. The recommendation is then made relying on the tensor that is reconstructed based on the generated clusters. The proposed approaches have been evaluated in term of Mean Absolute Error (MAE). Compar ed with memory-based CF approaches, the experimental results show the superiority of both TAC and TDC and TAC slightly outperforms TDC. The main contributions of this work are to propose a new Twitter application, hyperlink recommendation, and suggest tensor clustering based solutions. All these will be deta iled in the following sections. Before developing approaches to hyperlink recommendation, the first question we ask ourselves is whether there are enough high-quality hyperlinks in Twitter. We present some statistics below to explain what motivates us to look into hyperlink recommendation. We tracked all the Twitter official trending topics from March, 2 to June, 4 th in 2011 and downloaded their tweets using the public Twitter APIs (dev.twitter.com). Totally, 13,211,258 valid tweets for 2,113 trending topics were obt ained and these topics were categorized according to whatthetrend (www.whatthetrend.com). With these categorized tweets, we first examined the quantity of hyperlinks. As illustrated in Figure 1, the overall ratio of hyperlinks to tweets is about 26.2%. Contest and Promotion topics were created by Twitter to provide paid advertising for companies. Thus inevitably a considerable amount of hyperlinks were observed in this category. Except this category, the ratios in Technology , News and Gaming categories all exceed 50%. These findings tell there are numerous hyperlinks worth exploring. To further examine the quality of Twitter hyperlinks, we select six trending topics,  X  Minsk  X ,  X  TEPCO  X ,  X  Apple iPhones  X ,  X  Angry Birds Game Coming  X ,  X  Texas Motor Speedway  X , and  X  World Champions  X  for annotation. These topics are in the categories, technology , News and Games , where there are more hyperlinks than elsewhere. From these tweets we extract 6,758 short hyperlinks, which are then decoded to 3,620 unique hyperlinks. For the convenience of adding hyperlinks to tweets, some companies provide services to encode/compress a long hyperlink into a short one in order to save space. For example, the hyperlink www.ie6countdown.com can be encoded as http://bitly.com/ dQB3Ar, http://bitly.com/hpiKTG or others when it is provided by different users to Bit.ly. (However, when we conduct our experiment, there are 12.6% shorten hyperlinks failed to be decoded normally. During annotation we simply ignore these hyperlinks.) The linked Web pages are labeled as relevant or non-relevant to the trending topic that the tweets cont aining these hyperlinks belong to. Among the annotated hyperlinks, the relevant hyperlinks take up 84%. We also find that 67% of the related hyperlinks intend to direct readers to the sources of news. The hyperlinked textual Web pages only occupy 48%. The others include video, audio, picture and etc. All these observations indicate that there are abundant, high-quality and information-rich hy perlinks in Twitter, but it is hard to automatically identify the content semantics of them. Considering above findings and potential values of hyperlinks, we propose a novel Twitter application, and perform hyperlink recommendation in three pipelined pr ocesses: (1) construct the user-tweet-hyperlink tensor according to citation behaviors, which act as the collaborative rating; (2) cluster users, tweets and hyperlinks based on tensor, which is the essential part of the work to offer recommendation; (3) re-construct the tensor based on the clustering results and recommend hyperlinks to a potential user who might be of interest. The notations used in re mainder of this paper is stated as follows: we denote tensors by Lucida Calligraphic uppercase letters letters u ij , , x ijk . The sets such as  X  X   X   X ,  X  X   X   X   X  and the index i over the set {1,..., n } is denoted by  X  X  X  X  The user-tweet-hyperlink three-way relations are modeled as a and hyperlinks, respectively. Each element  X   X  X  X  X  denotes the user i citing the hyperlink k in his/her tweet j. We differentiate two types of citations: direct citations (the hyperlinks hyperlinks in the tweets that users retweet or reply). For example, as shown in Figure 2, if the user 2 retweets the tweet 1 from the user 1, then there is a link from each of them to the tweet 1. One solution to three-way tensor clustering is to find a way to decompose a tensor into several matrixes, and then apply matrix based clustering algorithms to the decomposed matrixes. Due to its easy implementation, Tucker decomposition is applied to our tensor decomposition-based clustering [4]. The Singular Value Decomposition (SVD) is a commonly used technique to factorize a matrix into three matrixes . Like matrix factorization, we attempt to factorize our collaborative tensor X  X  X   X  X  X  X  X  X  into a multiply of three matrixes, including the user matrix, the tweet matrix and the hyperlink matrix, as where U  X  X   X  X  X  X  , T  X  X   X  X  X  X  and H  X  X   X  X  X  X  are the orthogonal factor matrixes and can be regarded as the principal components in each mode. The symbol  X   X   X  represents the vector outer product. The core tensor g  X  X   X  X  X  X  X  X  X  shows the interaction of the three ways. The U , T and H can be regarded as the three independent matrixes on each way. Equation (1) can then be unfolded as where X  X   X   X  denotes the n -mode unfolding of Tensor X . The n -mode here denotes the direction of unfolding, e.g., the user way, tweet way, and hyperlink way matrixes can be obtained from the left leading singular vectors (obtained by SVD decomposition on the unfolded matrixes) of 1/2/ 3-mode unfolding of tensor X in Equations (2). The matrix on certain way includes the principal information of corresponding type of entities, such as the user way matrix represents the principal information between users. This process of unfolding and decomposition is called as high order SVD algorithm (HOSVD) by [4], and the HOSVD algorithm can be briefly summarized as: ( a ) calculate the user/tweet/hyperlink singular vectors of X  X  X  X  X  , X  X  X  X  X  and X  X  X  X  X  , respectively; and ( c ) Spectral Clustering is a popular clustering algorithm, which makes use of the spectrum of da ta to perform dimensionality reduction for grouping the simila r items. If we regard the decomposed matrixes ( U , T and H ) as user way, tweet way and hyperlink way, the TDC algorithm is described as following: In TDC, the decomposed matrixes are derived from the collaborative tensor, and tend to contain the principal information of the collaborative user-tweet-h yperlink tensor. The clustering procedure just separately operat es on each decomposed matrix, like user-mode or hyperlink-mode decomposed matrix. However, we argue that if we can synchr onize the clustering of different way items based on collaborative tensor, the clustering in one way can help that of the other ways. Considering this, we investigate the three-way clustering framework introduced by Banerjee et al. in our collaborative tensor clustering. Banerjee et al. [1] present a multi-way clustering approach based on Bregman divergence, which can simultaneously cluster users, tweets and hyperlinks. The objective is to reconstruct a tensor to cover the maximal Bregman information with the original tensor. Since the collaborative tensor X  X  X   X  X  X  X  X  X  is constructed by multiple types of entities including users, tweets and hyperlinks, we define three clustering func tions which map the entities to their respective clusters. Let user , tweet and hyperlink clustering be  X  X  X  X  X  X 1,..., X  X 1,...,: X  ,  X  X  X  X  X  X 1,..., X  X 1,...,: X  and  X  X  X  X  X  X 1,..., X  X 1,...,: X  . Let  X   X   X  ,  X  and  X   X  be random variables  X   X   X  X  X  X  X  X  ,  X   X   X  X  X  X  X  X  and  X   X   X  X  X  X  X  X  . Let x  X  be an approximation of the data tensor x . The three-way clustering is to find the best (  X   X   X  ,  X   X ,  X  ) that minimizes the loss in Bregman information between the approximation x  X  and its original collaborative tensor, defined as: TAC is to reconstruct the approximation x  X  with the generated clusters (  X , X , X  ) and certain summary statistics. According to [1], assuming the summary statistics preserved are just the cluster means, the Minimum Bregman Information (MBI) Principle indicates that the best approximation  X  X   X  equals  X  X  x  X |  X   X ,  X   X ,  X   X  is to say, given the user, tweet and hyperlink clusters  X  X  X  X  X  X  X  X  X  ,  X   X   X  X  X  X  X  X  and  X  X  X  X  X  X   X  X  , according to MBI principle the approximation x  X  can be achieved by x  X   X  X  X  X   X , X   X | X  X  X  X  X   X  approximation x  X  corresponding to  X  X , X , X  X  is given by  X  X   X   X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  . The decomposition of the expected distortion in the objective function Equation (3) can then be defined as Equation (4) is the sum of all the three-way expected distortion. In order to decrease the objective function, we only update the current selected way each time. Take the user way as example, for any user a , the contribution to the overall objective function is determined by its current assignment  X  X  X  X  X  X  X  X  X  . Assuming  X   X   X   X   X  X  , we can express the objective function of Equation (4) as the sum of the other two-way contributions of the form As shown in table 2, TAC starts with an arbitrary choice of clusters (  X  , X  , X  ). In each iteration, the user, tweet and hyperlink clusters are updated in order to decrease the objective function Equation (4). After the assignments have been achieved, the cluster means are updated, which further decreases the objective function. This process is repeat ed until convergence. Since the objective decreases at each iteration, and the objective is lower bounded, the algorithm is guaranteed to converge to a local minimum of the objective [2]. We make recommendation based on the user, tweet and hyperlink clusters generated by TDC or TAC. With these clusters, we reconstruct the approximation of th e original tensor. The problem of recommending a hyperlink to an active user can then be transformed to the missing weight prediction problem, which is to predict the corresponding weight with the reconstructed approximation. Experiments are conducted on the da taset introduced in Section 2. For research purpose, we select te n trending topics. For each topic we select the tweets which have been retweeted more than two times together with the hyperli nks and users related to these tweets. The detailed information is shown in Table 3, where retweeted tweets are not counted . There are a total of 2,377 citation relations, among which 4/5 are randomly selected for clustering and the rest for prediction. TDC is achieved by applying the HOSVD algorithm to tensor and then using spectrum clustering to group users and hyperlinks. We set p , q and r as:  X  X  X 0.9 X  ,  X  X  X 0.9 X  and  X  X  X 0.9 X  in Equation (1). The user, tweet and hyperlink cluster numbers are set to , X  X  X  and  X  X  X  , X  X  X  where  X  varies from 0.1 to 0.7. In TAC,  X  is calculated as  X   X  X  X  X   X  X  X  of entities. Bregman divergence is set to square divergence, and the squared loss is defined as  X   X   X   X   X   X ,  X   X   X  X  X  X   X   X   X  TDC, the user, tweet and hyperlink cluster numbers are set to  X  X   X  X  X  , X  and where, X  X  X   X  varies from 0.1 to 0.7 . For comparison, we use the memory-based CF approach as the baseline. The user similarity is calculated by Pearson Correlation and recommendation for the active users is performed to take a weighted average of all the citations on that hyperlink[7]. We evaluate the results by Mean Absolute Error (MAE). The results in Figure 3 shows that both TDC and TAC approaches outperform the baseline approach , which indicates that tweet brings in more correlation information and that the behaviors of grouped users are more reliable for recommendation than the pairwise-user Pearson similarity. In TDC, with the increase of  X  , the cluster number increases in each way and the connection within clusters decline. The prediction accuracy is affected by weakly connected users and hyperlinks. Thus the MAE increases with the increase of  X  . Meanwhile, TAC slightly outperforms TDC. This can be explained by the fact that TAC finds the approximation using three way clustering information while TDC just considers one-way clusteri ng. Similar to TDC, the MAE increases with the increase of  X  with TAC. We analyze the statistics on Twitte r hyperlinks with millions of tweets. Based on the findings, a novel Twitter application is proposed to help users enrich the content of their tweets. Three-way tensor is used to model th e user-tweet-hyperlink relations. Two model-based recommendation approaches, namely TDC and TAC, are developed to cluster th e user, tweet and hyperlink in three-way tensor. The experime ntal results show that TAC performs better in MAE. In the future, we would like to implement a user interface to evaluate user experience in the real environment. The work presented in this paper is supported by a Hong Kong RGC project (No. PolyU 5230/08E). Besides, we would like to thank Bolin Chen (Univ. of Saskatchewan, SK, Canada) for his kindly help. [1] Banerjee, A., Basu, S., and Mer ugu, S. 2007. Multi-way Clustering [2] Banerjee, A., Dhillon, I. S., Ghosh, J., Merugu, S., and Modha, D. S. [3] Johan B. 2000. Group User Models for Personalized Hyperlink [4] Kolda, T. G., and Bader, B. W. 2009. Tensor Decompositions and [5] Liu, X. 2011. Learning from multi-view data: clustering algorithm [6] Morris, M. R., Counts, S., Roseway, A., Hoff, A., and Schwarz, J. [7] Su, X., and Khoshgoftaar, T. M. 2009. A Survey of Collaborative [8] TechInfo. Sept. 15th, 2010. Twitter Seeing 90 Million Tweets Per [9] Trystan U. and Stephen E. R. 2004. Exploiting hyperlink 
