 The textual context of an element, structurally , contains traces of evidences. Utilizing this context in scoring is called contextualization. In this study we hypothesize that the context of an XML-element originated from its preceding and following elements in the sequential ordering of a doc-ument improves the quality of retrieval. In the tree form of the document X  X  structure, kinship contextualization means, contextualization based on the horizontal and vertical ele-ments in the kinship tree, or elements in closer to a wider structural kinship. We have tested several variants of kin-ship contextualization and verified notable improvements in comparison with the baseline system and gold standards in the retrieval of focused elements.
 H.3.3 [ Info. Search and Retrieval ]: Search process XML retrieval, Schema agnostic search, Contextualization
Contextualization [3] is a mechanism which makes possible the retrieval of items with varying length in textual content, as the size of elements varies with the level in the hierar-chy (see Figure 1); the leaf element or elements on low lev-els of hierarchy have potentially less textual evidences than their ancestors. The scant textual evidence in the small text units, such as paragraphs, are augmented with information obtainable from the context surrounding them.

The potential of contextualization has been revealed be-fore in several intuitive settings [1 X 3, 5 X 8]. In the existing studies, context of elements in focused retrieval has been mainly referred to the ancestor elements. In addition to the hierarchical order or the ancestor elements, documents also have an established sequential ordering (paragraph 1 comes prior to paragraph 2 and hence are siblings in the structural tree (which we refer to as the kinship tree , see Figure 1), in the documents hierarchical structure). In this study the elements in the kinship tree, in the document X  X  sequential order are considered to be the context -the kinship context. The proposed models are experimentally validated using the semantically annotated Wikipedia XML collection using INEX [9] evaluation measures. The results obtained, on fo-cused retrieval task (INEX), exhibit clear improvements over the best submitted runs at INEX 2009, and over a strong and competitive baseline system  X  itself based on data fusion over all INEX 2009 submitted runs (Section 3).

Summarizing, the contributions of this study include:
Contextualization is a re-scoring scheme, where the ba-sic score, usually obtained from a full-text retrieval model, of a contextualized document or element is re-enforced by the weighted scores of the contextualizing documents or ele-ments. We use random walks to induce a similarity structure over the documents based on the containment and reverse-containment relationships (element, sub-element and vice versa). Hence, these relationships (kinships) affect the weight each contextualizing element has in contextualization.
The premise is that good context (identified by random walk and contextualization model [6]) provides evidence that an element in focused retrieval is a good candidate for a posed query and therefore, the elements should be contex-tualized by their hierarchically similar elements in  X  X inship X . Good context is an evidence that should be used to deduce that an element is a good candidate for the posed query.
In this section, we will show a formalism that can be used to materialize and then utilize the contextual evidences originated from the elements in the kinship tree, in the documents sequential order, for improving the retrieval ef-fectiveness. Use of hierarchical information as a context has been studied before in different settings in XML re-trieval [1, 3, 5, 8, 11]. In hierarchical contextualization the intrinsic structure within the XML document is employed. Kinship contextualization is both horizontal (siblings) and vertical (ancestors &amp; descendants elements) but intrinsically non-hierarchical perspective of the hierarchical information. The representation of documents in XML aims to follow the established structure of documents, i.e., an academic book is typically composed of  X  chapters  X  ,  X  sections  X  ,  X  subsecs  X  ,  X  paragraph  X  and so on, structures.  X  chapter1  X  is followed by  X  chapter2  X  and within  X  chapter1  X  ,  X  section1  X  is followed by  X  section2  X  . Elements  X  section1  X  and  X  section2  X  are siblings, and hence most likely, semantically related. The following element takes the concepts further from the pre-ceding elements, and the preceding elements provide the ba-sics or foundation for the following elements. Therefore, together in the document order, the preceding and following elements form a strong and connected perspective (the kin-ship context), surrounding the relevant information. This organization of document gives an intuitive starting point for manipulating text passages at the established hierarchy levels of text documents.

With contextualization from the preceding and following elements, we aim to rank higher an element in a good context (strong evidence in the kinship) than an identical element in a not so good context (less or no evidence in the kinship tree) within the document. In Figure 1 the  X  entry  X  element has the preceding  X  entry  X  and following  X  entry  X  as the kinship context. Hence one element can be viewed in context of its kinships, the elements preceding and following it.

In kinship contextualization, like the other types of con-textualization [3, 6], the weight of the element is modified by the basic weights of its contextualizing elements. Each element in the context of the contextualized element, should possess an impact factor. An higher impact factor shows the importance of the contextualizing element and vice versa. The role and relation of contextualizing element are oper-ationalized by giving the element a contextualizing weight. A contextualization vector is defined to capture the impact factor of each contextualizing element, and this contextual-ization vector is represented by a g function in Equation 1.
The important research question here is: how far wide (siblings) and how deep (direct parent or siblings at ances-tral level), the element X  X  kinship context help to improve retrieval effectiveness? Arvola et al. (2011) [3], in their horizontal contextualization approach, used a weight array, which follows a zero centred parabola function  X  the impact of contextualization is adjusted with a help of different set of parameters. The weight of contextualizing element is as-sumed to be the function of distance, hence the weight ought to be lower the further away the contextualizing element is from the contextualized element. Instead of employing the weight function, to find the impact of each of the units in the context, we propose here, a generalized mechanism based on the Markovian random walk principle [6] and the kinship contextualization.
The tree-structure of the XML document (Figure 1) is considered as a graph. Myriad of random surfers traverse the XML graphs. In particular, at any time step a random surfer is found at an element and either (a) makes a next move to the sub-element of the existing element by travers-ing the containment edge, or (b) makes a move to the parent-element of the existing element, or (c) jumps randomly to another element in the XML graph. As the time goes on, the expected percentage of surfer at each node converges to a limit the dominant eigenvector of the XML graph. This limit provides the impact or strength of each element in the con-text of the contextualized element in the form of g function. In kinship contextualization, we consider all the elements in the kinship of the contextualized element; where the contex-tualization vector g in this case, identifies the importance of each of the unit of context in kinship(Equation 1).
Contextualization model formulated in this way, is inde-pendent of the basic weighting scheme of the elements and it could be applied on the top of any query language and retrieval systems. We have applied the contextualization model on the top of the baseline system which is the result of fusion from the INEX 2009 officially submitted runs by the participants (see Section 3).

In the experiments we evaluated the retrieval effectiveness at different granularity levels. We mainly tested, retrieval effectiveness based on the element selection in focused re-trieval task (using the INEX evaluation kit); a brief intuition is explained in Section 3.
We have experimented with kinship contextualization at different levels of hierarchy. Kinship contextualization with elements in kinship from: The four approaches listed above are pictorially shown in Figure 1.
The re-ranking function based on the random walk prin-ciple, described earlier, can be formally defined as follows: where
We test our approach using the Wikipedia collection con-taining 2 . 66 million semantically annotated XML documents (50 , 7 Gb) and 68 related topics provided by the INEX 2009 ad-hoc track [4]. The reason for using the INEX 2009 test topics (instead of 2010) is the larger variety of elements in the participants X  results which was due to the existence of the thorough task. In order to get the best possible base-line, we performed a data fusion based on sum of normalized scores (CombSUM) [10]. The element scores (for each run per topic) were normalized for the fusion as follows: where max ( scores ) and min ( scores ) denote the maximal and minimal scores respectively.

We used all the 98 INEX 2009 runs delivering correct el-ement result lists as component systems for the fusion. The 2009 runs have the largest variety in the results for the fu-sion in comparison to other years of the initiative. Unfortu-nately, most of the participants (56) did not report any real element scores, because the INEX evaluation did not require that information. For those systems an artificial score was given for each element based on their reciprocal rank, before the normalization. In other words, the first element in the result list was given a score 1, the second 1 / 2, third 1 / 3, fourth 1 / 4 and so on.

The focused task in INEX ad-hoc track is to retrieve most focused elements satisfying an information need with-out overlapping elements. An overlapping result list means that the elements in the result list may have a descendant re-lationship with each other and share the same text content. For instance, in Figure 1 the entry element  X  1.2.2.2.1  X  and the  X  sec  X  element  X  1.2.2  X  are overlapping. In this study we are following the focused approach, considering a result list where only one of the overlapping elements from each branch is selected. This means that including the  X  sec  X  element in the results would mean excluding the entry element in the results or vice versa.

The fused result list contains all the elements delivered by the 98 component systems. This comprehensive result list contains overlapping elements. In order to remove the over-lap, we basically selected elements having the highest score from each branch. However, many participants returned runs having full-articles only, which led to full-article bias in the fusion results. Therefore, we made a deliberate choice to exclude full-articles in the results, following a more focused retrieval strategy. The result lists were measured using the official INEX evaluation metrics and software for the focused task [4].

Contextualization and the fusion approach as scoring meth-ods, however, do not take any stand on which elements should be selected from each branch. Thus we perform a structural fusion, where we take the element level selection from the baseline run and subsequently re-rank the elements of the baseline run. For instance (in Figure 1) if the baseline run suggests the  X  body  X  element, we select that one, not the  X  list  X  element beneath, regardless of their mutual ranking in the full list.
The hierarchical structure of XML documents are cap-tured using the dewey encoding scheme (as shown in the Figure 1). This way each element in the document possess a unique index within the document, and together with docu-ment X  X  unique id, this becomes unique for the entire collec-tion. The tree structure of XML documents are converted into a matrix, and random walk is performed on this matrix, as it is described in detail, in our earlier work [6]. The con-textualization vector g k from Equation 1 is computed off-line for each and every XML document in the Wikipedia collec-tion. This suggests that computing g k vector is feasible for a reasonably large XML document collections. At the query time, the scores from g k vector and the basic scores are com-bined to produce an overall ranking score, using Equation 1.
We have experimented with all the four variants of kinship contextualization (Section 2.1) and compared them against the different baseline systems, (Table 1, sorted on i nterpolated p recision at recall 0 . 01, iP [0 . 01]). The runs in Table 1 are among the best runs submitted at INEX 2009 ad-hoc track, focused retrieval task.
 Table 1: Retrieval statistics for baseline systems. CombSUM fusion run is the best (statistically sig-nificant on all measures at p &lt; 0.01, 1-tailed t-test).
In the combination function given, the contextualization force has to be parametrized. For the proposed contextu-alization model, we tuned the contextualization force and report the values leading to best overall performance. In our parametrization process we found the optimal values of contextualization force f (from Equation 1) lies in the range: ( f  X  X  3.25, 3.50, 3.75, 4.00, 4.25, 4.50 } ). These optimal val-ues for f are obtained by using cross-validation technique. We did 68-fold cross-validation (or complete cross-validation in our case) -by randomly partitioning the collection into 68 training and test samples based on the number of assessed topics. Of the 68 samples, a single sample is retained as the validation set for testing, and remaining 67 samples are used as training set. The cross-validation process is repeated 68 times (for each fold), with each of 68 samples used exactly only once as validation set. These 68 independent or unseen samples are then combined to produce a single or a set of estimations for parameter f .
 Table 2: Ret. performance for focused retrieval N * = stat. significant than both the CombSUM Fusion and UWFerBM25F2 at p &lt; 0.01, and M + = stat. significant at p &lt; 0.05 respectively. Figure 2: Precision -recall performance against baselines and best INEX 2009 submitted runs.

Table 2 and Figure 2 show the overview of the retrieval performance of our approaches against the baselines for the focused retrieval task. The proposed contextualization model improves the performance over the baselines. The improve-ments are found to be statistically significant (1-tailed t-test at p &lt; 0 . 01 and p &lt; 0 . 05) on iP and M AiP measures.
The best overall results among the proposed methods are obtained with CR ggp kinship and CR a kinship , in terms of best iP [0 . 01] values (early precision). The kinship context from the hierarchical structure of documents, employed in contex-tualization, indeed improves the retrieval effectiveness, and the improvements are in-line with theoretical anticipations.
Contextualization is a re-ranking model, utilizing the con-text of the relevant retrievable unit, for improving the overall retrieval. We have presented an exploratory study into the use of context from elements in kinship in the hierarchical structure of information, to improve retrieval performance on focused retrieval tasks. We looked at context from doc-ument X  X  sequential ordering, which we call the kinship con-text. Hence, we hypothesized that context gathered from the kinships,  X  X orizontally X  and  X  X ertically X  from the graph structure of document, influences the retrieval effectiveness. Experiments have validated the hypothesis that utilizing the kinship context this way actually enhances the retrieval of information in focused retrieval task. The results obtained are in-line with the earlier work on contextualization [1, 3, 5 X  8]. However, none of the existing works consider the kinship context, as a source of contextual evidence.

The approaches presented are generic and can be applied to different test collections and baseline systems. Evidence are collected in a systematic way, from the surroundings, the kinship context of the element to be ranked. XML doc-uments are used as a sample case of semi-structured docu-ments, these documents have hierarchical structure, which is often represented in a form of tree. However, the approaches could also be applicable for other generic structured (or semi-structured) test collections (e.g., Linked Data, RDF, etc.), where the structure may be represented as a general graph (with cycles). The proposed methods are particularly suited for collections that carry more types of evidence than just textual information. [1] P. Arvola, M. Junkkari, and J. Kek  X  al  X  ainen. [2] P. Arvola, J. Kek  X  al  X  ainen, and M. Junkkari. The Effect [3] P. Arvola, J. Kek  X  al  X  ainen, and M. Junkkari. [4] S. Geva, J. Kamps, M. Lethonen, R. Schenkel, [5] Y. Mass and M. Mandelbrod. Component Ranking [6] M. A. Norozi, P. Arvola, and A. P. de Vries. [7] P. Ogilvie and J. Callan. Hierarchical Language [8] G. Ramirez Camps. Structural Features in XML [9] Schenkel, R. and Suchanek, F.M. and Kasneci, G. [10] J. A. Shaw and E. A. Fox. Combination of multiple [11] B. Sigurbj  X  ornsson, J. Kamps, and M. De Rijke. An
