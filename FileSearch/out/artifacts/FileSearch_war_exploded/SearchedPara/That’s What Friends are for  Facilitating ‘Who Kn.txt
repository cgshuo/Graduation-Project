 We describe the design and evalua tion of K-net, a social matching system to help people learn 'who knows what' in an organization by matching people with skills with those who need them. Transactive memory theory pred icts that K-net will improve individuals' awareness of 'who knows what'. This should lead to improved performance through sharing knowledge across group boundaries. We evaluate K-net in te rms of these predictions in an experiment with 41 students in seven groups working on software engineering projects. Accura te recommendations improved awareness of 'who knows what' versus 'random' recommendations, but did not impr ove performance. Our results highlight issues related to the evaluation of systems for sharing knowledge across group boundaries. H5.3 [ Information interfaces and presentation ]: Group and Organization Interfaces -Computer Supported Cooperative Work Management, Design, Experimentation. Transactive memory system, recommender systems, social network analysis, experimenta tion, expertise, friendship. Recent research on knowledge sharing in groups shows that obtaining knowledge across group boundaries can improve performance [5, 6]. In response, researchers have built expertise recommenders, systems that bridge local  X  X slands X  of knowledge by facilitating information flow across group boundaries. These systems are meant to augment a nd assist the knowledge discovery process that usually happens through normal socialization processes in organizations. Terveen &amp; McDonald see expertise recommender systems as a subset of a broader category they call  X  X ocial matching X  systems [12]. An important concern for social matching systems is that, because they recommend people, they raise social and cognitive issues such as privacy, trust, em otional closeness, reputation, and availability. Social matching systems can respect these social and cognitive issues by using friendship netw orks in making recommendations. The literature on information seeking suggests that when faced with non-routine complex tasks, i ndividuals often consult others with whom they have an existi ng social relationship [1]. People often form friendships with co-w orkers, relationships they can draw on when seeking help completing work tasks. In fact, when given the choice, people enjoy working with someone they like over a more competent individual [3]. In this paper, we present K-net, a social matching system that uses both expertise and friendship to match people with others who possess needed skills or share their interests. K-net is a Transactive Memory (TM) system, helping people both to learn  X  X ho knows what X  in the organization and to locate others who have needed skills. In an experiment conducted in a real usage setting, K-net successfully fostered awareness of  X  X ho knows what X . We discuss expertise recommendation and TM theory below, and then present our design and evaluation of K-net. A number of systems help people locate expertise. ReferralWeb analyzes web documents to identify names associated with topics, infers social relationships from co -authorship data, and presents a referral chain from the seeker to the expert [8]. Expertise Recommender mines software source control systems and technical support databases, asso ciating individuals to specific software modules and helping pe ople contact those who know the most about a given module [9]. Systems such as Answer Garden [1], the Designer Assistant [13], and PHOAKS [7] present relevant information sought by a us er and the email address of the person who contributed the information. K-net is like ReferralWeb and Expertise Recommender in that it uses social networks to provi de recommendations. Unlike them, however, it incorporates friends hip information when making recommendations. It is not enough to find an expert; the system accessible, trustworthy, and has a higher probability of response [18]. Additionally, having a friend as a social conduit between a friend of a friend makes a referral chain more likely to succeed. It also allows multiple interactions creating opportunities to try, err, and seek instruction and feedback. Organizations are transactive knowledge systems in which the bulk of knowledge is distributed among members and exists in individuals X  heads, with each individual possessing different areas of expertise [16]. To make full us e of the intellectual resources of an organization, its members must know  X  X ho knows what X  and interact with each other to utilize and combine knowledge. Knowing who to ask for help with a given task can make work processes efficient. TM theory d eals with how a set of individual memories, in combination with the communication that takes place, creates a group memory system [16]. Extant research on TM has been within groups b ecause of the interdependence between group members as well as more opportunity to learn about each other X  X  expertise. A c ontribution of this study is to show how a social matching system can extend transactive memory across group boundaries by fostering awareness of expertise that can be leveraged outside the group. Three processes are vital to TM systems [17]. Directory updating is the process by which people learn about  X  X ho knows what X . Accurate directories assist groups in utilizing their resources and improve coordination between workers for task completion [11]. Knowledge allocation refers to the process of forwarding requests for specific knowledge to relevant experts. Knowledge retrieval describes the process of obt aining knowledge from experts. Brandon &amp; Hollingshead extend TM theory, arguing that TM systems should be geared around a task [2]. Knowing  X  X ho knows what X  can be useless if it does not fit the task at hand. K-net supports all of these pro cesses. It supports directory updating by showing who possesses relevant skills and allowing users to supply expertise info rmation. It supports knowledge allocation and knowledge retrie val through providing names and contact details of individuals w ith needed skills, and facilitating their responses. Finally, it is task-focused, recommending people with skills a group member deems necessary for completing a task. K-net is a web-based system catering to organizations where groups work on different projects, a common model in modern organizations. Users create profile s describing their relationships, expertise, and needs. K-net uses these profiles to recommend others who share their interests and satisfy their needs. We describe this in more detail below. K-net users provide three types of information: their level of friendship with others in the or ganization, a list of skills they possess, and following Brandon and Hollingshead, a list of skills they think are necessary for their group to complete their current task. Making these lists of skills serves the directory updating function of a TM system and provides the knowledge needed to make recommendations. Rather than specifying a fixed set of skills, K-net allows input of recommendation, because users may use different terms for the same skill, such as  X  X TML X  ve rsus  X  X eb design X . However, it allows users to request and speci fy new skills the system does not yet know about, increasing the system X  X  (and the organization X  X ) flexibility. Asking users to provide friendship and skill information is a sensitive issue. Such information is not static and will require to be updated. However, when users perceive they will benefit from the system and privacy safeguards are ensured, most people are willing to perform the extra work [12]. In fact, users already provide similar personal informa tion on social networking sites such as facebook, myspace and frie ndster. Work on discretionary databases also suggests that e xperts contribute more to public goods when they expect value in return [14], and K-net X  X  directory is like a public good. Furthermore preserving one X  X  reputation should motivate participants to update expertise information so their expertise score is accurate and reputation intact. Future empirical work will involve testing the accuracy of these predictions. To make recommendations for a gi ven user, K-net determines the difference between the skills the user thinks his group needs and the skills the user already has. Group members typically have different conceptualizations of the skills needed by the group [11] and K-net takes this into consid eration to provide personalized recommendations. K-net first assigns each other person in the organization an expertise score for a given skill. People can claim they have a given skill, or claim their friends have that skill. K-net also integrates feedback on interaction with a potential expert through a rating system. People can rate their experience with a recommended expert by providing a  X  X humbs up X  or a  X  X humbs down X . The base expertise score for a potential expert is the number of people who claim the expert has the skill plus the number of positive ratings minus the number of negative ratings. K-net then uses friendship ratings to modify the base expertise score. Users rate others between 0 (don X  X  know this person) and 5 (especially close). The system assigns a score of 1 to people who are rated 0 but who are friends of a friend. A potential expert X  X  friendship score is added to their base expertise score to create a personalized expertise score for th e user making the request. It is entirely possible that a close friend with a lower expertise score will be recommended over an expert with a higher expertise score. We make this trade-off because we believe a close friend is more likely to respond to a user rather than an unknown expert. The unknown experts are still displayed, just further down the list, so users can decide who they want to contact. Using friends to find potential experts serves the knowledge allocation process of a TM system by providing access to experts while increasing the probability that these experts will respond to a user request. K-net also identifies individuals looking for the same skills by matching lists of skills needed by the group that were identified by other individuals across the w hole system. This  X  X hared goals X  feature helps people looking for the same skills collaborate by comparing notes about how they are finding the expertise they need to complete their task. When users request recommendations, K-net provides a list of names for each skill sought by the user in descending order of personalized expertise score. Fi gure 1 shows an example for a user who specifies that HTML, socket TCP/IP, database management, and WML are the skills the group needs and that he himself has skills in HTML and Java. K-net found potential experts for database management, but not for socket TCP/IP or WML. Clicking on a name shows the profile of the recommended individual, and the chain of connection between the individual and the user. Knowing a particular individual has a skill or is seeking a skill that the group needs creates a  X  X ommon ground X  for conversation, which facilitates effective communication [4]. By identifying such individuals, K-net provides an easy platform to start a conversation. K-net provides the email addresse s of potential experts. This facilitates the knowledge retrieval process of a TM system. Since K-net is designed to be employed in an organization and email addresses are commonly available in corporate or personnel directories, this seems like a minimal compromise of privacy. Furthermore, individuals are likely to trust others that share their organizational affiliation [9]. However, we do ask users to consent to sharing their email address before they can use the system. We evaluated K-net in a field e xperiment, using project groups in a software engineering class. We addressed two questions: does K-net increase awareness of  X  X ho knows what X , and does it improve task performance? Seven groups composed of 41 individuals participated in our study. Participants were 4th y ear undergraduates or Master X  X  students (mostly 5th year undergra duates) enrolled in a software engineering class at a large northeastern university. We hoped the friendship networks these student s developed over the duration of their studies would be a reasonable simulation of the kinds of networks that would be pres ent in many organizations. Participants created groups by themselves. Group size ranged from 4 to 7 students. Participants stayed in the same group throughout the semester to complete a software project. All participants were required to use K-net. On average, participants logged into the system 5.4 times. Users reported having 2.3 skills on average and reported needing 2.5. Skills and needs did not overlap perfectly, so users on average received recommendations for around 1 skill and 9 experts for a given skill. Groups were randomly assigned to experimental and control conditions. To maximize comparability, we gave both conditions access to a K-net-like system. Providing some with a tool and others no tool within the same class can lead to validity threats like the Hawthorne effect, compensatory rivalry, and demoralization. So we chose to give both conditions access to K-net, but gave  X  X alse X  (random) r ecommendations to controls as a placebo. These recommendations we re for experts that actually possessed the claimed skills, but may or may not be skills needed by the person requesting them. So they represent true expertise and should not mislead people. There were 3 groups in the experimental condition (N=20) and 4 groups in the control condition (N=21). K-net was given to participants to use towards the later half of the semester. Before it was released , we conducted a survey of  X  X ho knows what X . In this survey we asked them to list the names of classmates they thought possessed the skills needed for the group to successfully complete its project. We conducted the survey again after the project was comp leted. Subjects could not use K-net during the second survey. The  X  X ho knows what X  variable represents the correct number of individuals possessing the needed skill, as determined by a match with self reported or friend reported data on skills reported through K-net. We measured performance as the participant X  X  final grade in the semester long software engineering project. Our first question is whether K-net improved awareness of who knows what. Since this dependent variable is at the individual level, our data analysis procedures were also at the individual level. Table 1 shows the results of the surveys. We analyzed data using the non-parametric Mann-Whitney test because both  X  X ho knows what X  and performance data were not normally distributed even after transformations. Before K-net was released, participants in the experimental condition did not significantly differ from controls on how many people they accurately said possessed a skill their group needs. After using K-net however, participants in the experimental condition were significantly more accurate than controls in identif ying people with the skills their group needed, U = 88, p &lt; 0.001, r = -0.7. Incidental learning of others X  skills through class lectur e (there were no labs) did not occur because differences were obtained only post deployment. Our second question is whether K-net improved task performance. We did not find any difference in performance between the experimental group ( Mdn = 3.7) and the control group ( Mdn = 3.7), U = 191, ns , r = -0.06. Our findings indicate that participants in the experimental condition had significantly higher awareness of  X  X ho knows what X  than participants in the control condition after K-net was deployed. If this increased awareness was due to the natural exposure of expertise that occurs through class instruction and interaction, then we would not see a significant difference between experimental and cont rol conditions. K-net was thus successfully able to create awareness of  X  X ho knows what X  among participants, demonstra ting that it supports the directory updating process required of TM systems. We expected to see a difference in performance, indicating that K-net effectively supports knowledge allocation and knowledge retrieval , but did not. This may be because the range of final grades handed out was very narro w, making it hard to detect performance differences. It may be that most groups chose projects that took advantage of sk ills they had already developed, as suggested by the fact that users on average received recommendations for one skill. Or it may be that K-net is more useful for repeated interactions. In our study, groups only worked on one project. Perhaps the learning of  X  X ho knows what X  on a first project will pay off in in creased performance on subsequent projects. It is hard to perform long-term system evaluations, especially in classroom settings, but such evaluations seem more likely to show the full effects of TM systems on organizational performance. It is also likely that our measure of performance was too coarse. Turpin and Hersh found no significant difference in performance between participants that used a significantly more accurate IR engine than a normal one [15]. However, users of the less accurate engine had to work harder by issuing more queries. Future evaluations of K-net a nd other social matching systems might use performance metrics that consider required effort and satisfaction as well as the qua lity of the completed task. Social matching presents a set of interesting research problems, including  X  X hat are interesting uses of social matching? X  [12]. K-net appears to be useful for suppor ting at least some processes in developing an organization X  X  tr ansactive memory. Longer-term evaluations and better performance metrics will help to evaluate whether it can effectively augment an organization X  X  transactional memory and improve groups X  bottom-line performance. It is also still an open question how to use friendship in recommendation. It right balance between friendshi p and expertise when making recommendations promises to be an interesting challenge. We hope K-net may evolve to become both a useful TM tool for organizations and a research pl atform for social matching. [1] Ackerman, M. Augmenting orga nizational memory: A field [2] Brandon, D. and Hollingshead, A. Transactive Memory [3] Casciaro, T. and Lobo, M.S. Co mpetent jerks, lovable fools [4] Clark, H. H. Using language . New York: Cambridge [5] Cross, R. &amp; Cummings, J. Ti e and network correlates of [6] Hansen, M. Knowledge networks: Explaining effective [7] Hill, W. and Terveen, L. Using frequency-of-mention in [8] Kautz, H., Selman, B., and Shah, M. ReferralWeb: [9] McDonald, D. and Ackerman, M. Expertise recommender: A [10] McKnight, D., Cummings, L., and Chervany, N. Initial trust [11] Moreland, R., Argote, L., and Krishnan, R. Socially shared [12] Terveen, L. and McDonald, D. Social Matching: A [13] Terveen, L., Selfridge, P., and Long, M. Living design [14] Thorn, B. and Connolly, T. Discretionary Databases. [15] Turpin, A. and Hersh, W. Why batch and user evaluations do [16] Wegner, D. M. Transactive memory: A contemporary [17] Wegner, D. M. A computer network model of human [18] Williamson, G., and Clark, M. Impact of desired relationship 
