 1. Introduction
Note that prior works only mine sequential patterns in one sequence database. This sequence database consists of se-movies. These payments are referred to as events in different domains. For each domain, we could extract these events events occur within the same time window). For the above example, Fig. 1 shows that these two sequences are sequential of applications, one could decide which domains should be involved in mining multi-domain sequential patterns. In our above example, if a user wants to know the cross-relationship between book and movie domains, sequence databases of multiple domains, which in turn can yield significant information and reveal more knowledge.
Given a set of sequence databases across multiple domains, we aim at mining multi-domain sequential patterns, where a tion of sequences. Then, by exploring traditional sequential pattern mining algorithms, we could obtain multi-domain of each sequence becomes longer and the number of items becomes huge after joining operations, and (3) sequential pat-of efficient mining algorithms for multi-domain sequential patterns.
 these two sequential patterns, we could combine these two sequential patterns into one multi-domain sequential pattern quence database should be discovered. Consequently, we propose algorithm PropagatedMine to further reduce the mining extract a subset of sequences from sequence databases, where the subset of sequences has the same time information. As to other sequence databases. In addition, we develop some mechanisms to allow some empty sets in multi-domain sequen-shown by our simulation results that both algorithms IndividualMine and PropagatedMine perform better than algorithm
Naive. By exploring propagation and lattice structures, algorithm PropagatedMine outperforms algorithms IndividualMine and Naive in terms of efficiency (i.e., the execution time).
 4. Performance study and experimental results are shown in Section 5. Section 6 concludes with this paper. 2. Related works algorithm. Algorithm GSP [27] was developed for mining sequential patterns using a breadth first search and button-up method, whereas algorithm SPADE [33] employed a depth first search and button-up method with an ID-list. The authors ing sequential patterns to capture the dynamic nature of data addition and deletion [15]. The above research works are focused on improving the performance of traditional sequential pattern mining.
 mining sequential patterns from multi-dimensional sequences. However, the output of their proposed method is a set of mining multi-domain sequential patterns is not the same as distributed mining of sequential patterns. proposed algorithm to allow multi-domain sequential patterns with some empty sets in some domains. In particular, by exploring lattice structures, algorithm PropagatedMine is able to further reduce the number of candidate multi-domain several parameters for each algorithm. 3. Preliminaries
Assume that each domain has its own set of items and a sequence database. The problem of mining multi-domain co-occurred events across multiple domains. Table 2 shows two domains with its own sequence database, where in each sequence of sequence databases, the corresponding time sequence indicates the occurrence time of events. For example, in sequence s 1 in D 1 , it can be seen that event a occurs at T 3 is an example of multi-domain sequence database.

To facilitate the presentation of multi-domain sequences, one sequence s where X ij is the j th element of sequence s i , and l is the number of elements of s domains (abbreviated as k-domain sequence ) is represented as M  X  X  s M  X 
T . A time sequence TS  X  M  X  is represented as TS  X  M  X  X h T window, a time interval, is determined in accordance with application requirements.
With the above representation of multi-domain sequences, we further define the length and the number of elements for length of a multi-domain sequence across k domains can be defined as follows:
Definition 1 ( Length and number of elements ). Let M  X  X  s domain sequence, expressed by e  X  M  X  , is the number of itemsets in the multi-domain sequence.
For example, given a 2-domain sequence M  X   X  a  X  X  b ; c  X  X  b  X  h X  1  X  X  2  X  X  1 ; 2 ; 3  X i in M , and the number of elements is 3 (i.e., e  X  M  X  X  3  X  . tion among multi-domain sequences is thus defined as follows: Definition 2 ( Containing relation ). Suppose that we have two multi-domain sequences M  X  N  X  list L  X  M ; N  X  , denoted as h l 1 ; l 2 ; ... ; l b i , such that 1
For example, assume that M  X   X  a  X  X  b ; c  X   X  2  X  X  6  X  and N  X  tained by N since there exist integer list L  X  M ; N  X  X h 1 ; 3 i such that 1 and  X  6  X  #  X  6  X  .

Based on the above definitions, a multi-domain sequence database is a set of multi-domain sequences. Consider an exam-ple of a multi-domain sequence database in Table 3 , where the number of 2-domain sequences is 4. Given a multi-domain sequence database MDB , the support value of a multi-domain sequence M is the number of multi-domain sequences in MDB that contain the multi-domain sequence M .
 derive multi-domain sequences with their supports larger than a user-specified minimum support threshold d in MDB. For example, for the multi-domain sequence database MDB in Table 3 and a minimum support d  X  3, multi-domain sequential patterns are  X  a  X   X  1  X  ;  X  b  X   X  2  X  ;  X  b  X   X  3  X  ;  X  c  X  multi-domain sequential patterns contain sequential patterns in each domain. For example, sequential pattern, where  X  a  X  X  b ; c  X  (respectively, (1) (2)) is a sequential pattern in domain D sequential patterns without joining. 4. Algorithms of mining multi-domain sequential patterns algorithm IndividualMine in which sequential patterns in each sequence database should be mined and further merged sequence database, algorithm PropagatedMine is proposed. By propagation of sequential patterns to other sequence dat-extended to discover multi-domain sequential patterns with some empty sets in some domains. 4.1. Naive algorithm with one multi-domain sequence database
As mentioned early, to mine multi-domain sequential patterns, one Naive method is joining sequence databases into one multi-domain sequence database. Then, this multi-domain sequence database is transformed such that the Naive algorithm mined, we have to separate the items from different domains and derive multi-domain sequential patterns. The detailed steps are described as follows: 2. It can be verified that s 1 in D 1 sequence database and l
With the multi-domain sequence database derived, one should transform this multi-domain sequence database into one se- X  a  X   X  1 ; 2  X  in sequence S 1 of Table 3 .
 should be represented as multi-domain sequential patterns. Then, we could first verify whether multi-domain sequential sequential patterns as multi-domain sequential patterns. It can be seen in Table 5 , P sequential patterns ). On the other hands, P 3 ; P 4 and P events are from all domains required.

Algorithm Naive needs to perform join operations among multiple sequence databases. Due to join operations, the per-rithms, one sequence database is derived by transforming from one multi-domain sequence database joined from for mining multi-domain sequential patterns without joining sequence databases. 4.2. Algorithm IndividualMine: mining patterns in each domain
In the checking phase, sequential patterns from all domains are combined to generate candidate multi-domain sequential domain sequential patterns will be described later.

Without loss of generality, given k sequence databases, we intend to derive multi-domain sequential patterns across k domains. Furthermore, we denote the set of k sequence databases as f D tial patterns across a set of i sequence databases (i.e., f D start with one sequential patterns from one domain and progressively composite sequential patterns from other domains until the number of domains is k . Hence, sequential patterns mined in D in SP 1 , candidate 2-domain sequential patterns (across two domains f D pattern and is put in the set of SP 1 . Also, h X  1  X  ;  X  2  X i is one sequential pattern in D domain sequential pattern  X  a  X  X  b  X   X  1  X  X  2  X  .

After generating candidate multi-domain sequential patterns, their support values should be determined. As can be seen values. Explicitly, the time-instance set of sequence M is defined as follows:
Definition 3 ( Time-instance set ). Let MDB be a k -domain sequence database instance set of M is defined as TIS  X  M  X  X fh TS  X  N  X  : L  X  M ; N  X ij N 2 MDB and M v N g .  X  a  X  X  b  X  time-instance set of h X  a  X  X  b  X i is fh X  T 1  X  X  T 2  X  X  T  X  T 24  X  : 1 ; 3 ig . Moreover, we could have TIS  X h X  1  X  X  2  X i )as fh X  T  X  T 24  X  : 1 ; 3 ig . Thus, the support of a candidate 2-domain sequential pattern
TIS  X  a  X  X  b  X   X  1  X  X  2  X   X  fh X  T 1  X  X  T 2  X  X  T 3  X  X  T 4  X  : 1 ; 2 h ; h X  T  X  a  X  X  b  X   X  1  X  X  2  X   X  TIS values for candidate multi-domain sequence patterns are derived.

Once we have 2-domain sequential patterns, these 2-domain sequential patterns are in the set of SP domain in each round until the number of rounds is k .
 Algorithm : IndividualMine
Input : Sequence databases across n domains D 1 ; D 2 ; ... ; D Output : Multi-domain sequential patterns across n domains.
 Begin
End algorithm IndividualMine, each domain should individually perform sequential pattern mining algorithms, which incurs a considerable amount of mining cost. Furthermore, those sequential patterns mined from each domain are not necessarily main and the number of candidate multi-domain sequential patterns, we develop algorithm PropagatedMine in which those sequences that are likely to form multi-domain sequential patterns are extracted from their sequence databases. 4.3. Algorithm PropagatedMine: propagating sequential patterns among domains
Algorithm PropagatedMine is designed to reduce the mining cost in each sequence database. Explicitly, algorithm Prop-quences that have the same time sequences with the time-instance sets are extracted, thereby reducing the mining space patterns to the next domain until all domains have been mined. Fig. 3 shows an overview of algorithm PropagatedMine, where there are two phases in algorithm PropagatedMine: the mining phase and the deriving phase.
In the mining phase, PropagatedMine utilizes existing sequential pattern mining algorithms to discover sequential pat-ber of elements of multi-domain sequences are constrained by sequential patterns mined in the starting domain. Conse-generation of candidate multi-domain sequential patterns across other domains.

For example, assume that the starting domain is set to D 1 the corresponding propagated table as defined in Definition 4 .

D k  X  1 is denoted as D k  X  1 jj M  X fh S i  X  l 1 ; S i  X  l 2 sequences that co-occurred with M . Furthermore, D k  X  1 jj sequential pattern if and only if S is a sequential pattern of D threshold.

For example, in domain D 1 of Table 2 , we have TIS  X h X  a  X  X  c  X i X   X  fh X  T h X  T 5  X  X  T 6  X  X  T 7  X  : 1 ; 2 i ; h X  T 5  X  X  T 6  X  X  T 7  X  : 1 ; 3 i ; h X  T gated table D 2 jj h X  a  X  X  c  X i . Table 6 is the propagated table D sequential patterns with h X  a  X  X  c  X i mined from domain D domain sequential patterns. Consider the above example, where the minimum support is set to 3. We can easily find that h X  1  X  X  2  X i is the sequential pattern of D 2 jj h X  a  X  X  c  X i h X  a  X  X  c  X i and h X  1  X  X  2  X i .

Note that even though PropagatedMine successfully prevents mining sequential patterns in each domain, however, the cost of some redundant mining of propagated tables can be further reduced. For example, some patterns mined in propa-gated tables D 2 jj h X  a  X i and D 2 jj h X  c  X i are the same as patterns mined in propagated table D
D jj h X  a  X  X  c  X i also include some sequences in propagated table D the corresponding multi-domain sequential patterns. We now analyze some important properties of the propagated table. scribed later.

Property of the propagated table of atomic patterns : Suppose that P is a k -domain sequential pattern (i.e., P 2 SP j P j X  1. P b is a multi-domain sequential pattern across  X  k  X  1  X  -domain sequence databases (i.e., D a minimum support of d if and only if b is a frequent itemset in propagated table D
Property of antimonotone with multiple domains :If M is a k -domain sequential pattern (i.e., across D domain sequences contained by M are also k -domain sequential patterns.

Based on the antimonotone property, algorithm PropagatedMine generates candidate multi-domain sequential patterns ing to the number of sequence elements. The detailed steps for deriving multi-domain sequential patterns are described below.
 Step 1: Derive atomic patterns across  X  k  X  1  X  domains domains, the corresponding frequent itemsets can be derived from the propagated tables of each atomic pattern in SP domains in Table 2 as an example, where sequential patterns of domain D ing the time-instance sets of atomic patterns in domain D sequential patterns. Consequently, we have  X  a  X   X  1  X  ;  X  b  X  also atomic patterns.
 Step 2: Derive  X  k  X  1  X  -domain sequential patterns with one element tern P across k -domain sequence databases (i.e., D 1 ; D in domain k  X  1. For example, let P  X h X  b ; c  X i be a sequential pattern with e  X  P  X  X  1in D the multi-domain sequential patterns in domain D 2 (i.e., candidates are generated by union operation:  X  b  X   X  2  X  [
Once the candidate multi-domain sequential patterns are obtained, support values of these patterns are examined by checking their time-instance sets (i.e., Support  X  a  X   X  b  X  of 3, since the support values of  X  b ; c  X   X  2  X  and  X  b ; c  X  Step 3: Derive  X  k  X  1  X  -domain sequential patterns with more than one element manner by referring to the lattice structure in the last domain propagated (i.e., domain D levels are found from the intradomain links in the lattice structure of D This leads to Definition 5 .
 Algorithm : PropagatedMine
Input : Sequence databases across n domains D 1 ; D 2 ; ... ; D Output : Multi-domain sequential patterns across n domains.
 Begin End
Definition 5 ( Concatenate operation of TIS ). Let M and N be two multi-domain sequences, where TIS  X  M  X  X fh TS l k j  X  1 ; 2 ; ... ; n . The concatenation of TIS  X  M  X  and TIS  X  N  X  is denoted as TIS  X  M  X \ k je  X  N  X  ig , such that TS i  X  TT j and l ie  X  M  X  &lt; k sequence  X  M ; N ; TIS  X  X  M ; N  X  . TIS  X  M  X   X  fh X  T 1  X  X  T 2  X  X  T 3  X  X  T 4  X  : 1 i ; h X  T 5  X  T
 X  : 2 i ; h X  T 5  X  X  T 6  X  X  T 7  X  : 2 i ; h X  T 21  X  X  T 22  X  X  T  X  T
 X  X  T 3  X  X  T 4  X  : 1 ; 2 i ; h X  T 5  X  X  T 6  X  X  T 7  X  : 1 ; 2 i ; h X  T  X  a  X   X  1  X  and Support  X  a  X  X  b ; c  X   X  1  X  X  2  X   X  TIS  X  a  X   X  1  X  \ &lt; are propagated.
 Theorem 1. Algorithm PropagatedMine is able to mine all multi-domain sequential patterns via lattice structures.
Proof. Mining frequent itemsets in propagated tables reveals multi-domain atomic patterns across other sequence dat-abases. To prove the correctness of Steps 2 and 3, first let P be a k -domain sequential pattern and P sequential pattern derived from P , where e  X  P 0  X  X  e  X  P  X  X  1 and j P have intradomain links from P to X and Y . In addition, there are interdomain links from X and Y to Z of Z and Z 0  X  ; . Due to the antimonotone property, all multi-domain sequences contained by P e  X  P
 X  X  e  X  P  X  X  1. Similarly, when e  X  P 0  X  X  e  X  P  X  &gt; 1, X and Y are parts of P and TIS  X  X  X \ is a frequent itemset in propagated table D k  X  1 jj h X  P  X i
Z is the power set of Z and Z 0  X  ; . The antimonotone property means that all multi-domain sequences contained by P also be frequent. This results in both  X  X  X ; Z 0  X  and  X  X  Y ; Z is able to mine all multi-domain sequential patterns. h 4.4. Mining relaxed multi-domain sequential patterns Naive algorithm and algorithm IndividualMine could be extended for mining relaxed multi-domain sequential patterns. lowing, we will discuss how to mine relaxed multi-domain sequential patterns.
 Naive algorithm ti-domain sequence database. With the proper transformed of multi-domain sequence databases, one could generate a se-tial patterns. Hence, those multi-domain sequential patterns that have some empty sets are directly viewed as relaxed patterns.
 Algorithm IndividualMine
Algorithm IndividualMine performs sequential pattern mining algorithms in each sequence database. After generating all sequential patterns in all domains, in the checking phase, algorithm IndividualMine will check and composite candidate assume that one i -domain sequential pattern P  X h P 1 ; P of domain D i  X  1 . Candidate  X  i  X  1  X  -domain sequential patterns generated from P and Q are
P patterns is denoted as f  X  r ; l  X  which is formulated as follows: main sequential patterns, degrading the performance of algorithm IndividualMine.
 Algorithm PropagatedMine
By exploring propagation and lattice structures, algorithm PropagatedMine is able to reduce the mining cost. However, and algorithm IndividualMine should be used. 5. Performance evaluation
To evaluate the performance of our proposed algorithms, we implement a simulation model and conduct extensive exper-results. 5.1. Simulation model
We modify a well-known data generator in [3] to generate datasets that include multiple domains and the data generator total number of distinct events. The modeling of these parameters are almost the same in [3]. For example, dataset
M5D10kC10T5I100 represents that there are 5 domains, each of which contains 10k of sequences, where the average number
For the traditional sequential pattern mining, we use algorithm PrefixSpan which is obtained from the IlliMine project IndividualMine and PropagatedMine. Our programs are executed in the platform with the hardware as an Intel 2.4-GHz
XEON CPU and 3.5 GB of RAM, and the software as FreeBSD 5.0 and GCC 3.2. We use three performance metrics: the execu-tion time, memory consumption and the number of mined patterns to compare the proposed algorithms. 5.2. Experimental results
Several experiments were conducted to evaluate the performance and memory consumption of the three algorithms. Sen-domains, is conducted. 5.2.1. Impact of the minimum support threshold We first investigated the performances of three algorithms with the minimum support varied. For the dataset M2D2kC3T4I200, Fig. 8 shows the execution time and the memory consumption of three algorithms. It can be seen in
Fig. 8 that the execution time of algorithm IndividualMine and PropagatedMine is reduced as the minimum support in-domain. Thus, algorithm IndividualMine needs more time to composite candidate multi-domain sequential patterns and determine their supports. In Naive algorithm, joining operations among sequence databases are costly, which dominates the execution time. As for the memory consumption, algorithm Naive use less memory than algorithms IndividualMine and PropagatedMine. This is due to that both algorithms IndividualMine and PropagatedMine use more memory spaces memory space than algorithm IndividualMine. On the other hand, algorithm IndividualMine does not need any more mem-ory space for storing sequential patterns. Though algorithm PropagatedMine needs more memory spaces, algorithm Propa-gatedMine is able to quickly derive multi-domain sequential patterns, which strikes a compromise between memory space and the execution time. 5.2.2. Impact of the number of domains
We next examine the impact of domains on the performance of three proposed algorithms. The experiments were con-ualMine and PropagatedMine have smaller execution time than algorithm Naive. Furthermore, algorithm PropagatedMine outperforms other algorithms in terms of the execution time, showing the advantage of utilizing propagation to reduce rithms Naive and IndividualMine, showing the good scalability of algorithm PropagatedMine. 5.2.3. Impact of the number of sequences
Experiments with the number of sequences varied are examined, where the number of sequences is from 1000 to 6000 and other parameters are M2C3T3I200. With a given minimum support was 1%, Fig. 9 shows the execution time of all algo-to compare algorithms IndividualMine and PropagatedMine, we only put the execution time of algorithms IndividualMine and PropagatedMine. By exploring lattice structures, PropagatedMine should mine only atomic patterns, from which other sequences. Note that the execution time of algorithm PropagatedMine is very smaller compared with algorithms Individu-alMine and Naive. However, both algorithms IndividualMine and PropagatedMine need more memory space for storing larger memory consumption than algorithm Naive. This also agrees that algorithm Naive is bounded by execution time, and algorithms IndividualMine and PropagatedMine are bounded by memory spaces. 5.2.4. Impact of the average number of elements within a sequence
Mine. Clearly, the execution time of mining multi-domain sequential patterns increases with the average number of ele-ments within a sequence. Note that algorithm IndividualMine even performs worse than algorithm Naive when the average number of elements in a sequence is larger than 4.7. The reason is that IndividualMine mines a large number of sequential patterns in each domain and spends more costs to composite candidate multi-domain sequential patterns. The propagated than algorithm PropagatedMine. Note that, the number of patterns propagated in algorithm IndividualMine is has a smaller execution time, algorithm PropagatedMine needs more memory spaces to store lattice structure. 5.2.5. Impact of the average number of items within an itemset
The average number of items within an itemset generally impacts on the performance of sequential pattern mining. Thus, we used the dataset M2D1kC3I200. The execution time and memory consumption with the average number of items in an since algorithm IndividualMine has a larger number of patterns mined, which incurs a considerable cost in the checking phase. Fig. 13 demonstrates that PropagatedMine is better than IndividualMine because sequential patterns mined in the are mined and thus the number of patterns mined in the starting domain is equal to the number of atomic patterns. Con-cution time. 5.2.6. Impact of the number of items
We next investigate the impact of the total number of items, where a minimum support is set to 1% and other parameters are set as M2D1kC3T4. Fig. 14 shows the execution times and memory consumption of Naive, IndividualMine, and Propa-structures for discovering multi-domain sequential patterns. 5.2.7. Impact of the propagation order for PropagatedMine
Since algorithm PropagatedMine explores propagation on mining multi-domain sequential patterns, we now get insight tice structure is built. Clearly, one should judiciously determine the starting domain in algorithm PropagatedMine. thereby improving the performance of algorithm PropagatedMine. In this experiment, we conduct experiments on different with D 1 , and then propagates to D 2 ; D 4 ; D 3 and D 5 since algorithm PropagatedMine has a smaller execution time and memory consumption. This implies that sequential pat-good propagation order is determined as an ascending order of the number of sequential patterns in sequence databases.
Note that there are many ways (e.g., sampling) to approximate the number of sequential patterns in each domain. Thus, according to the guideline above, one could determine a good propagation order for algorithm PropagatedMine. 6. Conclusions
This paper addresses a novel mining task: the multi-domain sequential pattern mining problem. Multi-domain sequential each domain, algorithm PropagatedMine first mines sequential patterns in a starting domain. Propagated tables are then plores lattice structures to reduce the number of patterns propagated. A comprehensive experimental study is conducted agatedMine outperforms other algorithms in terms of execution times.

References
