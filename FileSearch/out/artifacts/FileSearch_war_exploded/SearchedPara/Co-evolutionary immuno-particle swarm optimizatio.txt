 1. Introduction
Numerous heuristics to solve optimisation problem have proved to be efficient in many cases ( Balicki, 2004 ). One such population-based algorithm is artificial immune system (AIS) using Clonal selection methodology. Clonal selection theory was proposed by Burnet (1959) after studying the immune system when encountered by antigen. The main operator of A IS is hyper-mutation which is the only tool for searching solution in the search space. AIS have been also further improved by incorporating the parallel mutation opera-tors having different distribution function ( Khilwani et al., 2008 ). Woldemariam and Yen (2010) enhanced the efficiency of the AIS algorithms to solve mul timodal functions. He proposed vaccine-enhanced AIS for better exploration of search space. The use of Cauchy distribution over Gaussian has proved efficient in many cases including Yao and Liu (1997) . They realised that for this distribution, mutation operator will behave as crossover operator thus improving performance. The introduction of p article swarm optimisation (PSO) technique in 1995 by Kennedy and Eberhart (1995) and its variants ( Eberhart, 1995 ) has carried the solution of any optimisation problem to a great level. PSO works on the social behaviour of the swarms and finds the global solution by referring to the other
Clonal selection technique takes the initialisation from PSO and runs in the co-evolutionary cycle. There are several cases in which particle swarm techniques is merged with other algorithms to solve supply chain problems. Kuo and Lin (2010) combined Genetic
Algorithm and PSO to make a hybrid algorithm for solving clustering models. Swarm learning techniques have been embedded in Artifi-cial Immune System to solve several problems and have been found to provide better results ( Aydin et al., 2010 ). Fuzzy logic has also been used to combine PSO and GA to make an algorithm over-perform from the constituent algorithms ( Valdez et al., 2011 ). aspects of algorithms, experiments and results. Section 2 discusses steps of the algorithms and the developments that have improved its performance. Section 3 defines the distributed inventory with all the assumptions. Section 4 describes the various methodology encapsulated to generate a new algorithm. This section also gives the visual implementation of the algorithm in the search space.
Section 5 shows the decisions that have been made in the inventory replenishment along with the analysis on result obtained. Section 6 gives the idea about the experimental environ-ment required for revealing the performance of the algorithms.
Here the parameter tuning is also presented. Section 7 highlights the performances of the test algorithms on different stages and also gives the result with complete analysis. Finally the paper is concluded in Section 8 and future scope has also been suggested. 2. Literature review in making the inventory decision robust. The dynamic programming and relaxation based approach by Kunnumkal and Topaloglu (2008) has given a new dimension to any replenishment problem. They used lagrangian relaxation strategy with Clark and Scarf (1960) balance assumption. Abdelmaguid and Dessouky (2006) used genetic algo-rithm, a heuristic approach to solve the integrated inventory distribu-tion problems. Bard and Nananukul (2009) gives the way to deal with a production facility and customers dispersed in a grid. proposed and improved algorithm needs the following theories.
This section takes care of the previous researches and the way it can be integrated to develop a new and effective algorithm. The development of the algorithm takes care of various theories and concepts as categorised below. 2.1. Particle swarm optimisation algorithms of social interaction amongst them. Consider an n-dimension con-tinuous objective function and the associated swarm population to dimension same as that of the objective function. Each particle has a position associated with it, x t i and velocity v t i at any iteration number t . Particle has its own best position ( pbest also known as personal best position) and there is one global best position ( gbest ) that is formed based on the interaction among the particles. Then the position of the particle is updated by introducing a velocity dependent on the position of the pbest, gbest along with the inertia that the particle already possesses as given in Eqs. (1) and (2), respectively ( Eberhart et al., 2001 ; Valle et al., 2008a , 2008b ). where c 1 , c 2 are acceleration control parameters; r 1 , r 2 are random numbers from any distribution between (0,1); v t i is velocity of the
The value of Lagrange multiplier changes and creates a new environment in the course of iteration. Iterating it for number of times gives the better solution. The algorithm of decreasing-IW co-evolutionary PSO is shown in Fig. 2 . 2.2. Artificial immune system algorithm (CLONALG) Since past few years, researchers have tried to implement Clonal selection theory in the different ways than the proposed ones in ( Zuo and Fan, 2006 ; Kim and Bentley, 2004 ). To solve multimodal optimisation problem Kelsey and Timmis (2003) proposed the new way of using immune inspired algorithm. Also Nunes et al. (2002a , 2002b) proposed the CLONALG algorithm inspired by immune system. In this theory antigens are repre-sented by objective function and antibodies by variables. The affinities of the antibodies are calculated and are put to iterate with Clonal selection methodology. For mutation first clones are generated for n selected antibodies by the formula given in Eq. (8) highlighted in ( Corte  X  s et al., 2005 ).
 N  X  Round where b is the decay factor and N j is the number of clones generated for antibody j with total number of antibodies N . The quantity ordered by any element of the system will be replen-ished at that moment of time and if the current inventory level is unable to satisfy the demand then the demand will be satisfied in the next period. Backlogging cost will be charged to satisfy the previous period demand.

The goal is to construct a location and allocation plan which will minimise the total cost of the system with the assurance that all the demands are being satisfied. Decisions that have to be taken under this plan are: What will be the production from the plant each day? Which warehouse to supply each day and how much? How much a warehouse will supply to retailers?
We proposed a new algorithm as a part of solution methodol-ogy to solve this kind of location X  X llocation problem. The follow-ing notation is used in the development of the model. 3.1. Parameters i
A  X  1 , n  X  set of warehouses t
A  X  0 , t  X  time period for analysis C maximum capacity of the plant D t demand in plant at time t n total number of warehouses N
R number of retailers m i set of retailers served by Warehouse I m i D N R ; P n b t backlogging cost for plant at time t b it backlogging cost for Warehouse i at time t q R jit quantity supplied to Retailer j served by Warehouse i at Z P t 1 if production occurs at time t , 0 for otherwise Z W it 1 if Warehouse i is selected at time t , 0 for otherwise
Z R jit 1 if Retailer j served by Warehouse i is selected at time t , 3.3. Model by F ( t ), F  X  t  X  X  D  X  d P r Z P t C 8 t A  X  0 , t  X  X  18  X  I I of production limit in the plant. A new approach is used to solve such problem as discussed in the next section. 4. Co-evolutionary immuno-particle swarm optimisation algorithm with penetrated hyper-mutation (COIPSO-PHM) improved algorithm. A new and much robust algorithm is developed using the theory to initialise AIS with decreasing-IW PSO. Further-more using the theory of Co-evolution given by Krohling and Coelho (2006) and Chengyu et al. (2008) leads to development of an effective (3) Mechanism : Algorithm uses Co-evolutionary theory with
In past years several algorithms have been proposed which embed AIS and PSO in a much sophisticated manner ( Tan and Xiao, 2007 ) and also some attention has been given to the application of mutation operator. Since mutation is the only parameter in AIS, so certain improvement has been made in order to get quicker results in the multimodal feasible region. The modification done in the step parameter a is shown in Eq. (26).  X  q n  X  exp  X  pf  X  k  X  26  X  where q is the accuracy parameter which controls the accuracy of the solution and k is the tuning parameter for increasing the extent of mutation (can vary to negative also). After modifying the step size and using Cauchy distribution which has proven to be better than Gaussian in many research works including ( Krohling and Coelho, 2006 ; Sinha et al., 2009 ), the final mutated child becomes x n j as shown in Eq. (27).  X  x n j  X  a tan  X  pi = 4  X  1  X  2 rand  X  1  X  X  X  X  27  X  where random numbers between ( 1, 1) based on Cauchy distribu-operations performed for this algorithm is shown in Fig. 4 .
To visualise the implementation of algorithm in space, follow-ing example in Fig. 5 shows the real working of the algorithm as the iteration progresses. Consider the swarm consisting of 4 parti-cles searching for the solution in space and after the particle moved in the space they split up into certain number of clones depending on the fitness value. These clones search the neighbourhood space of parent particle and after finding the best fitness valued position, the best positions proceed for the next generation.

Here in Fig. 5 (a) 4 particles are present which moves along the directed path given by PSO for unit iteration as per Fig. 5 (b). After moving the particles split into desired number of clones as per the parameter setting shown in Fig. 5 (c). Greater the fitness value, greater is the number of clones generated. Now the best fitness values are arranged in ranking and the worst 25% of the solution is replaced by the best fitness achieved so far highlighted by Fig. 5 (d). When the entire iteration for 1st PSO-AIS system completes then the turn for 2nd PSO-AIS system tries to give higher lagrangian multiplier to solution going outside the feasible region. This helps in quickly pushing the particle from out-off condition to inside feasible region in the next generation of the main loop as shown in Fig. 5 (e). Fig. 5 (e) clearly gives the pictorial representation of the algorithm. This has been also shown that the algorithm is able to handle even large search space while dealing with less number of populations. 5. Problem model analysis
A sample model of the above mentioned problem is considered for the planning horizon, t  X  5 months. The model is highly complex due to presence of both binary and non-binary variables and also the total number of constraints and variables are in the order of 10 2 . Also if the system is considered for a particular set of time periods then the interactions between the agents of the system makes it difficult to comprehend. This result in small feasible space and chances of getting into feasible region is almost negligible. The problem is addressed using COIPSO-PHM. We compared the proposed algorithm with decreasing-IW COPSO 5 times more efficient than CLONALG. The standard deviation of the solution coming from COIPSO-PHM is far less than the other one. The solution quality is even better than decreasing IW-
COPSO. The convergence of the algorithm is also better than the test algorithms and this can be ascertained from Fig. 6 . complex problem easily in few iterations only. Furthermore, in order to show the efficiency of the algorithm, several comparisons and analysis have been made and clearly tabulated. 6. Experimental setup for performance measure various areas. Experimental setup is broadly categorised into following three fields: (1) Function analysis : A group of 10 commonly known bench-(2) Convergence analysis : Proposed algorithm has been tested for Cost (in 1000) in Table 3 . For each test algorithm corresponding best, worst and average solution have been listed along with the standard devia-tion from the averaged solution. Table 3 highlights the statistical inferences for changing iteration among different test algorithms and functions. t -Test for various benchmarked functions has also been carried out to ensure the consistency of the results and is (2) Stability: In most situations COIPSO-PHM give the averaged (3) Best and worst solutions quality: Best solution in case of (4) t-Test: The total sample has been divided equally and is tested population.
 D t i  X  1 N 1 where D t i is the mean Euclidian distance for particle i at genera-tion t. N and n are Population size and dimension, respectively. After that Evolution factor ( EV ) is defined as in Eq. (29). EV  X  maximum and minimum distances, respectively. In case of f 1as shown in Fig. 8 (a), EV value is higher at the beginning showing the exploration phase. After that it converges and then at the mid of the generations it again explores for new optimal positions and finally settles at the near optimal solution. It can be seen in Fig. 8 that premature convergence is avoided as there are many situa-tions in which new areas are explored. In case of f 5, as the dimensionality of that function is small so the convergence phase is achieved much quicker than any other functions.
 (4) Jumping out: The Evolution Factor value of 4 0.5 denotes that 8. Conclusion and future scope
In this paper we proposed the way to integrate different concepts in order to develop a new algorithm. The approach guarantees the quicker searching of the solution for even too many local optima situating in the search space. Use of decreasing initial weight has proved to be helpful in all the algorithms. Decreasing-IW has eliminated the chance of getting local max-ima/minima in case of multimodal functions. In COIPSO-PHM, the accuracy and k factor used during mutation has increased the flexibility of finding the solution. Finding near optimum result in case of Multimodal function is easily achieved by adjusting these two factors. Co-evolutionary theory has taken care when solution is out of feasible space in a much efficient way. In the entire execution of the algorithm the final solution has never found to be out of feasible boundary leading to 100% successful rate. The main contribution in this paper is to develop an algorithm that can more efficiently solve large complex problems with accuracy and stability.

COIPSO-PHM is compared with other algorithms along various stages. While comparing the algorithms over 10 benchmarked function for a fixed number of iteration, COIPSO-PHM proved to be better in case of solution quality and also for earlier conver-gence. On top of that t -test seemed much favourable for COIPSO-PHM than other algorithms. In case of statistical analysis, the standard deviation for COIPSO-PHM is less than other two in most of the cases.

Several variants of the particle swarm optimisation are listed in the literature ( He and Wang, 2007 ; Yisu et al., 2008 ) and many are yet to be seen in the near future. Even there is a greater probability to devise an advanced and more sophisticated approach to handle constraints than co-evolutionary approach making mutation dynamic and adaptive is also one approach to reach optimality.
 References
