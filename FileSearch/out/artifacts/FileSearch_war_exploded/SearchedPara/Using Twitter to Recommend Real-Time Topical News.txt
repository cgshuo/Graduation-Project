 Recommending news stories to users, based on their pref-erences, has long been a favourite domain for recommender systems research. In this paper, we describe a novel ap-proach to news recommendation that harnesses real-time micro-blogging activity, from a service such as Twitter, as the basis for promoting news stories from a user X  X  favourite RSS feeds. A preliminary evaluation is carried out on an implementation of this technique that shows promising re-sults.
 H.4 [ Information Systems Applications ]: Miscellaneous Algorithms, Experimentation, Theory Content-based recommendation, News recommendation, Real-time recommendation, Social recommendation, Twitter
There is a long history of using recommender systems to help users to navigate through the sea of stories that are written and published everyday [1, 5]. Recommender sys-tems promise to promote the most relevant stories to a user based on their learned or stated preferences or their previous news consumption histories, helping the user in question to keep up-to-date and to save valuable time sifting through less relevant stories. Content-based and collaborative filter-ing techniques have been used to good e ff ect and the recent growth of services such as Digg ( www.digg.com ) demonstrate  X 
This material is based on works supported by Science Foun-dation Ireland under Grant No. 07/CE/11147 CLARITY CSET the value of recommendation techniques when it comes to deliver a more relevant and compelling news service.
For all the success of recommender systems there are some aspects of news recommendation that are not well catered for. For example, in this short paper we will consider the problem of identifying niche topical news stories . Current recommender systems are limited in their ability to identify such stories because, typically, they rely on a critical mass of user consumption before such stories can be recognised. In this paper, we consider a novel alternative to conventional recommendation approaches by harnessing a popular micro-blogging service such as Twitter ( www.twitter.com ) [2, 4] as a source of current and topical news. To this end we describe our initial attempts to mine Twitter information with a view to identifying emerging topics of interest, which can be matched against recent news coverage in an RSS feed, as the basis for story recommendation.
 In the next section we describe our recommender system, Buzzer , focusing on the system architecture, and highlight-ing how real-time information is mined from Twitter and RSS feeds to provide a basis for matching and recommen-dation. Each user specifies a set of RSS feeds that they are interested in, as well as a recommendation strategy they wish to employ (this will be explained further below). In Section 3 we describe the results of a small, preliminary user evaluation to compare how di ff erent users respond to di ff erent types of RSS recommendations based on a number of di ff erent recommendation strategies.
RSS (Really Simple Syndication) and Twitter are two im-portant Web 2.0 technologies. The former is a data format that is designed to provide access to frequently updated con-tent. Most commonly, RSS is used as a way to syndicate or distribute news information in the form of short-updates that can be linked back to complete stories. RSS Readers then allow users to aggregate the updates from many dif-ferent feeds to provide a one-stop-shop to breaking news, although as users subscribe to tens of RSS feeds this intro-duces a niche information overload problem [8].

Twitter in contrast is a so-called micro-blogging service. It allows users to submit their own short (max 140 characters) status update messages, called tweets , while following the status updates of others. Recently there has been much interest in Twitter, partly because of its growth [2], and partly because of its ability to provide access to thoughts, intentions and activities of millions of users in real-time. The starting point for this paper is the idea that mining tweets can provide access to emerging topics and breaking events and that this information can be used as the basis for a novel approach to ranking RSS news feeds so that topical articles can be e ff ectively promoted.
Buzzer adopts a content-based recommendation technique, by mining content terms from RSS and Twitter feeds as the basis for article ranking. Content-based approaches to rec-ommending news articles have proven successful in the past. For example, perhaps the earliest example of a news recom-mendation service, Krakatoa Chronicle [3] represented user profiles as a weighted vector of terms drawn from the ar-ticles that a given user liked, and matched this weighted vector against a new set of articles to produce a ranked list for presentation to the user. Similarly, Billsus and Pazzani X  X  News-Dude [1] harnessed content based representations and multi-strategy learning techniques to generate short-term and long-term user profiles, as the basis for news recom-mendation. Billsus and Pazzani [6] argue that content-based approaches to finding trends and topics in news articles are di ffi cult because of the sheer random bag-of-words un-structured nature of articles, and the complexity of natural-language processing. We bypass this consideration because our technique finds common co-occuring terms among Twit-ter and RSS. The basic system architecture of Buzzer is shown in Figure 1.

The Buzzer system comprises three basic components: 1. The web-based Configuration Interface manages the 2. The Lucene Indexer is responsible for mining and in-3. The Recommendation Engine generates a ranked list The process by which Buzzer generates a set of ranked RSS stories is presented in detail by the algorithm in Figure 2. Given a user, u , and a set of RSS feeds, r , the system first extracts the latest RSS articles, R , and Twitter tweets, T and separately indexes each article and tweet to produce two Lucene indexes. The resulting index terms are then extracted from these RSS and Twitter indexes as the basis to produce RSS and Twitter term vectors, M R and M T , respectively.
 Next, we identify the set of terms, t , that co-occur in M and M R ; these are the words that are present in the latest tweets and the most recent RSS stories and they provide the basis for our recommendation technique. Each term, t i , is used as a query against the RSS index to retrieve the set of articles A that contain t i along with their associated TF-IDF score [7] . Thus each co-occuring t i is associated with a set of articles A 1 ,...A n , which contain t i , and the TF-IDF score for t i in each of A 1 ,...A n to produce a matrix as shown in Figure 3.

To calculate an overall score for each article we simply compute the sum of the TF-IDF scores across all of the terms associated with that article as per Equation 1. In this way, articles which contain many tweet terms with high TF-IDF scores are preferred to articles that contain fewer tweet terms with lower TF-IDF scores. Obviously this is a simple scoring mechanism but it does serve to provide a straightforward and justifiable starting point.

Finally, producing the recommendation is a simple matter of selecting the top K articles with the highest scores. In this section, we will describe a typical usage scenario. The user logs into Buzzer using their Twitter login details (this is used for the Twitter API). The user then sets up their preferences for RSS feeds and recommendation strat-egy. The system then collects the latest RSS and Twitter data and makes a recommended Buzzer feed. The user is presented with a set of articles ranked by their relevance score. The user can select from a range of three recommen-dation strategies , as follows: 1. Public-Rank -this strategy used the basic technique 2. Friends-Rank -this strategy mined tweets from the 3. Content-Rank -this benchmark strategy did not use
Figure 4 shows an example set of recommended articles based on the users selected recommendation strategy (in this case, the user has selected the Friends-Rank approach, which uses their own friends X  Twitter content).

The resulting articles include a hyperlinked title, the main content of the RSS article (usually a condensed / sample of the full article), and a set of explanatory metadata from the Buzzer system, namely the recommendation score, and the associated terms that were used to gather that particular article (See Figure 4). This explanation aids the users un-derstanding as to why the system chose to rank a certain article in a certain way.

The results page also shows a standard term/frequency tag cloud that includes terms ordered and sized based on the frequency of each term. This is also useful in explaining to the user the term space that the results were derived from. For example, if the user has selected a twitter-based strategy, such as using the public feed, these terms are the co-occuring terms between the specified RSS feeds of that user, and the Twitter database. The frequency is determined based on these co-occuring terms X  frequencies in the Twitter database.
The basic Buzzer system provides users with an alterna-tive way to access RSS stories. They can use the Buzzer interface as an RSS reader or, alternatively, the Buzzer rec-ommendation lists can be published as RSS feeds themselves and thus incorporated, as a summary feed, into the user X  X  normal RSS reader. Figure 3: Buzzer X  X  co-occurence matrix: each cell contains the Lucene TF-IDF score (from the RSS index) of the given term in the given article.

Ultimately we are interested in how well the recommen-dations produced by this novel news recommendation tech-nique are received by end-users. To test this we have car-ried out a preliminary evaluation using a small group of 10 participants, over a period of 5 days. Each participant con-figured the system by providing up to 10 of their favourite RSS feeds along with their Twitter account information, and periodically selected a di ff erent recommendation strategy to re-rank the content.
 During the study users were asked to use Buzzer as their RSS reader. To begin with, they were asked explore the dif-ferent types of recommendation strategies at their leisure. As a basic evaluation measure we focused on the click-through frequency for articles across the 3 di ff erent recommendation strategies. The users were told the names of each of the recommendation strategies, and were given a simple expla-nation of each upon initial registration for the evaluation.
The results shown in Figure 5 (A) represent the aver-age per-user click-throughs for each of the recommendation strategies and there is a clear di ff erence in the behaviour of users when comparing the Twitter-based strategies to the default content-based technique. For example, we see that, on average, the Twitter-based strategies resulted in between 8.3 and 10.4 click-throughs per user compared with only 5.8 article click-throughs for the content-based strategy; a rela-tive click-through increase of between 30% and 45% for the Twitter-based strategies.

We also see that these usage results suggest a prefer-ence for the Friends-Rank recommendations compared to the recommendations derived from Twitter X  X  Public Time-line ( Public-Rank ). This suggests that users are more likely to tune in to the themes and topics of interest to their friends than those that might be of interest to the Twit-ter public at large. Interestingly, however, this is at odds with the feedback provided by participants as part of a post-Figure 4: Screenshot of results (articles reranked based on users friends X  Tweets) trial questionnaire, which indicated a strong preference for the Public-Rank articles as shown in Figure 5 (B); 67% of users indicated a preference for Public-Rank recommenda-tions compared with 22% of users indicating a preference for Friends-Rank recommendations. Incidentally, none of the participants favoured the Content-rank strategy and 11% didn X  X  know which strategy they preferred.
 Figure 5: A) Average per user click-through for dif-ferent recommendation strategies. B) Preferred rec-ommendation strategies
Interestingly when we compared the ratio of Public-Rank to Friends-Rank click-throughs to the number of friends the user follows on Twitter we found a correlation coe ffi cient of  X  0 . 89, suggesting that users with more friends tend to benefit more so from the Friends-Rank recommendations, compared to the recommendations derived from the public timeline.

Although our initial user study was preliminary, the Buzzer recommender system was well received and we found that participants preferred the Twitter-based recommendation strategies. The Buzzer feed provided the participants with interesting and topical articles which were viewed in greater detail by clicking-through to the full article text.
In this short paper, we have outlined a novel news recom-mendation technique that harnesses real-time Twitter data as the basis for ranking and recommending articles from a collection of RSS feeds. A prototype system has been devel-oped and deployed and early evaluation results suggest that users do benefit from the recommendations that are derived from the Twitter data.

Looking to the future, the Buzzer system provides con-siderable opportunity for further innovation and experimen-tation as a test-bed for real-time recommendation. We are currently extending the feedback options that are presented to users to facilitate negative as well as positive feedback. There are also many ways in which the content-based recom-mendation technique may be improved. For example, mov-ing from single terms to more complex phrases, which may improve the recommendation ranking. We also hope to focus on perfecting the scoring technique. Moreover, the Buzzer system has the potential to act as a collaborative news ser-vice with a number of opportunities to provide additional recommendation services such as recommending new RSS feeds to users or recommending relevant people to follow on Twitter. [1] Daniel Billsus and Michael J. Pazzani. A personal news [2] Akshay Java, Xiaodan Song, Tim Finin, and Belle [3] Tomonari Kamba, Krishna Bharat, and Michael C. [4] Balachander Krishnamurthy, Phillipa Gill, and Martin [5] Ken Lang. Newsweeder: learning to filter netnews. In [6] Michael Pazzani and Daniel Billsus. Content-based [7] G. Salton and M. J. Mcgill. Introduction to Modern [8] B. Smyth and P. Cotter. A personalised tv listings
