 Because of the growing number of learners of En-glish, there is an increasing demand to help learn-ers of English. It is highly effective for learners to receive feedback on their essays from a human tu-tor (Nagata and Nakatani, 2010). However, man-ual feedback needs a lot of work and time, and it also requires much grammatical knowledge. Thus, a variety of automatic methods for helping English learning and education have been proposed.

The mainstream of English error detection and correction has focused on article errors (Knight and Chander, 1994; Brockett et al., 2006) and preposi-tion errors (Chodorow et al., 2007; Rozovskaya and Roth, 2011), that commonly occur in essays by ESL learners. On the other hand, tense and aspect errors have been little studied, even though they are also commonly found in learners X  essays (Lee and Sen-eff, 2006; Bitchener et al., 2005). For instance, Lee (2008) corrects English verb inflection errors, but they do not deal with tense/aspect errors because the choice of tense and aspect highly depends on global context, which makes correction difficult. Consider the following sentences taken from a corpus of a Japanese learner of English. (1) I had a good time this Summer Vacation. In this example, go in the second sentence should be written as went . It is difficult to correct this type of error because there are two choices for correc-tion, namely went and will go . In this case, we can exploit global context to determine which cor-rection is appropriate: the first sentence describes a past event, and the second sentence refers the first sentence. Thus, the verb should be changed to past tense. This deduction is easy for humans, but is dif-ficult for machines.

One way to incorporate such global context into tense/aspect error correction is to use a machine learning-based sequence labeling approach. There-fore, we regard the task as sequence labeling: each verb phrase in the document is labeled with tense/aspect depending on surrounding labels. This model naturally takes global context into account. Our experiments show that global context makes a moderate contribution to tense/aspect correction. Developing a high-quality tense and aspect error correction system requires a large corpus annotated with tense/aspect errors. However, existing anno-tated corpora are limited in size, 2 which precludes the possibility of machine learning-based approach. Therefore, we constructed a large-scale tense/aspect corpus from Lang-8 , 3 a social networking service for learners of foreign languages. ESL learners post their writing to be collaboratively corrected by na-tive speakers. We leverage these corrections in creat-ing our tense/aspect annotation. Lang-8 has 300,000 users from 180 countries worldwide, with more than 580,000 entries, approximately 170,000 of them in English. 4 After cleaning the data, the corpus consists of approximately 120,000 English entries containing 2,000,000 verb phrases with 750,000 verb phrases having corrections. 5 The annotated tense/aspect labels include 12 combinations of tense (past, present, future) and aspect (nothing, perfect, progressive, perfect progressive). As we described in Section 1, using only local in-formation about the target verb phrase may lead to inaccurate correction of tense/aspect errors. Thus, we take into account global context: the relation be-tween target and preceding/following verb phrases. In this paper, we formulate the task as sequence la-beling, and use Conditional Random Fields (Laf-ferty, 2001), which provides state-of-the-art perfor-mance in sequence labeling while allowing flexible feature design for combining local and global fea-ture sets. 3.1 Local Features Table 1 shows the local features used to train the er-ror correction model.
We use dependency relations such as nsubj , dobj , aux , pobj , and advmod for syntactic features. If a sentence including a target verb phrase is a complex sentence, we use the conj feature and add either the main-clause or the sub-clause feature depending on whether the target verb is in the main clause or in a subordinate clause. For example, the following two sentences have the same features although they have different structures. (2) It pours when it rains. (3) When it rains it pours.
 In both sentences, we use the feature main-clause for the verb phrase pours , and sub-clause for the verb phrase rains along with the feature conj:when for both verb phrases.

Regarding p-tmod , we extract a noun phrase in-cluding a word labeled tmod (temporal adverb). For instance, consider the following sentence containing a temporal adverb: (4) I had a good time last night.
 In (4), the word night is the head of the noun phrase last night and is a temporal noun, 6 so we add the feature p-tmod:last night for the verb phrase had .
Additionally, norm-p-tmod is a normalized form of p-tmod . Table 2 shows the value of the fea-ture norm-p-tmod and the corresponding tempo-ral keywords. We use norm-p-tmod when p-tmod includes any temporal keywords. For instance, in the sentence (4), we identify last night as temporal adverb representing past, and thus create a feature time:past for the verb phrase had . 3.2 Feature Template Table 3 shows feature templates. &lt;a&gt; represents a singleton feature and &lt;a, b&gt; represents a combina-tion of features a and b . Also, a  X  means the feature a of the preceding verb phrase. A local feature tem-plate is a feature function combining features in the target verb phrase, and a global context feature tem-plate is a feature function including features from a non-target verb phrase. Suppose we have following learner X  X  sentences: (5) I went to Kyoto yesterday.
 In (5), the verb before eat is went , and p-tmod:yesterday and norm-p-tmod:past are added to the feature set of verb went . Accordingly, the global context features p-tmod  X  :yesterday and norm-p-tmod  X  :past are added to the verb eat .
Table 4 lists all the global context features for the verb eat generated by the feature templates. 3.3 Trade-off between Precision and Recall Use of surface tense/aspect forms of target verbs im-proves precision but harms recall. This is because in most cases the surface tense/aspect and the cor-rect tense/aspect form of a verb are the same. It is, of course, desirable to achieve high precision, but very low recall leads to the system making no cor-rections. In order to control the trade-off between precision and recall, we re-estimate the best output label  X  y based on the originally estimated label y as follows: s ( y )= where c ( y ) is the confidence value of y estimated by the originally trained model (explained in 4.3), and  X  (0  X   X  &lt; 1) is the weight of the surface tense/aspect.

We first calculate c ( y ) of all the labels, and dis-count only the label that is the same as learner X  X  tense/aspect, and finally we choose the best output label. This process leads to an increase of recall. We call this method T-correction . 4.1 Data and Feature Extraction We used the Lang-8 tense/aspect corpus described in Section 2. We randomly selected 100,000 entries for training and 1,000 entries for testing. The test data includes 16,308 verb phrases, of which 1,072 (6.6%) contain tense/aspect errors. We used Stan-ford Parser 1.6.9 8 for generating syntactic features and tense/aspect tagging. 4.2 Classifiers Because we want to know the effect of using global context information with CRF, we trained a one-versus-rest multiclass SVM and a maximum entropy classifier (MAXENT) as baselines.

We built a SVM model with LIBLINEAR 1.8 9 and a CRF and a MAXENT model with CRF++ 0.54. 10 We use the default parameters for each toolkit.

In every method, we use the same features and feature described in Section 3, and use T-correction for choosing the final output. The confidence mea-sure of the SVM is the distance to the separating hy-perplane, and that of the MAXENT and the CRF is the marginal probability of the estimated label. Figures 1 and 2 show the Precision-Recall curves of the error detection and correction performance of each model. The figures are grouped by error types: tense, aspect, and both tense and aspect. All figures indicate that the CRF model achieves better perfor-mance than SVM and MAXENT. We analysed the results of experiments with the  X  parameter of the CRF model set to 0.1. The most frequent type of error in the corpus is using simple present tense instread of simple past, with 211 in-stances. Of these our system detected 61 and suc-cessfully corrected 52 instances. However, of the second most frequent error type (using simple past instead of simple present), with 94 instances in the corpus, our system only detected 9 instances. One reason why the proposed method achieves high per-formance in the first type of errors is that tense errors with action verbs written as simple present are rela-tively easy to detect.
