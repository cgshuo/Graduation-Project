 Cross-Language Information Retrieval (CLIR) aims to retrieve documents in a language different from that of the query. A CLIR system has the potential to extend the search-able information space from a single la nguage to multiple languages. The recent de-velopments in Machine Translation (MT) make it possible for a user to understand the essential contents of a retrieved document in a foreign language. This also makes it easier to implement CLIR by adding an MT system for query translation on top of a general IR system. Intuitively, one would believe that with the help of a good MT sys-tem, CLIR can be easily implemented as: Query translation by MT + Monolingual IR + Document translation by MT. This is indeed the approach used in some commercial search engines such as Google, which offers seamless query translation and document translation by its MT system.
 However, despite its apparent resemblance to MT, query translation is different from MT from several perspectives [7]. In particular, MT usually produces one single trans-lation for an input sentence, while in CLIR, it is useful to include several translation alternatives of the query in order to obtain a desirable query expansion effect. For ex-ample, while the Chinese term  X   X   X   X  is a good translation of the query  X  X IDS X , it is highly useful to also include the alternative  X   X   X   X  in the query translation because both Chinese terms are frequently used in Chinese documents about AIDS. Although this problem has been observed for a long time, to our knowledge, there has not been much extensive work on how to extend the simple use of MT systems for query trans-lation. This situation is largely due to the fact that commercial MT systems such as Systran or Google translate did not offer the possibility to obtain sev eral translation al-ternatives. 1 In general, several possible translation alternatives for each word or phrase are stored in an internal search graph before t he final best translation is selected. It is possible to open the MT black box to gain access to the internal search graph to select more translation alternatives.

In this paper, we attempt to take advantage of structural information in such a trans-lation search graph. Specifically, we lever age portions of the search graphs that can potentially lead to high-quality translations, i .e. the search graphs corresponding to the N-best translations. These translation alternatives are converted into a structured search query. We carried out experiments on English-Chinese CLIR using collections from TREC and NTCIR. The experiments show that our approach can significantly outper-form the one that uses a state-of-the-art MT system as a black box. This result clearly demonstrates the importance of exploiting an SMT system more than just using the one-best translation output.

The reminder of the paper is organized as follows. Section 2 will review some related work. Section 3 describes one of the state-of-the-art SMT models -Phrase-Based SMT model. In section 4, we put forward our method of using structural SMT output for CLIR, and report the experimental results in section 5. Finally, we will draw conclusions and point out avenues for future research in section 6. Extensive research has been carried out on CLIR for the last 15 years. One can find a complete survey in [7]. Three main families of approaches to query translation have been proposed: using an MT system, using a bilingual dictionary or using a parallel or comparable corpus. Each family of appro aches has its advantages and weaknesses. In particular, query translation using MT often can suggest an appropriate translation, but is limited by the fact that only one possible translation is obtained. In many cases in IR, a query is just one possible expression of an information need, and there may be many others. In query translation, the selection of one translation artificially confines one to only one possible expression of the information need (even though it is appro-priate), leading to low recall. Neverthele ss, compared to the oth er approaches to query translation, MT-based approaches benefit much from the transla tion selection process undertaken for producing the best translation output, which is based on a target lan-guage model. This selection process takes into account whether different translation terms may occur together in the target language , thereby the translation candidates that do not fit well the query context are discarded.
Bilingual dictionary is often seen as an inexpensive alternative to MT. It also provides multiple translations for each term. Including multiple translations for a query usually yields higher recall ratio. However, a bilingua l dictionary contains the translations of different meanings of a term. Without an effective disambiguation or selection process, dictionary-based translation will include many inappropriate translation terms, leading to a possible topic drift. In order to select appropriate translations from a bilingual dictionary, several approaches have been proposed to select translation terms using a measure of cohesion [2,5,11]. However, we observe that still only one-best translation is selected for each query term in the above appr oaches. These approaches are thus limited in the same way as with MT systems. As the expansion effect during query translation has proven to be beneficial, one can legitim ately question about the reasonableness of such a limitation to one-best translation.

Parallel corpora have been used to train translation models (usually IBM model 1) for query translation. However, one usually performs a much less strict translation se-lection than for SMT: for each query term, a certain number of best translation alterna-tives, or those whose translation probability is higher than a threshold, are included in the translated query [4]. Such an approach can indeed include many possible transla-tion alternatives, but also many inappropriate ones. Compared to SMT, we observe that one missing element is the language model that helps selecting appropriate translation candidates.

The previous experiments using different approaches draw a clear picture of what is needed for query translation: On the one hand, it is useful to include multiple translation alternatives. On the other hand, it is useful to perform some selection of translation terms. A possible way to achieve this goal is to open the black box of an MT system so that multiple translation alternatives are kept, while some selection on translation alternatives is still performed using a la nguage model. This is the approach that we investigate in this paper.

Notice that there have been some attempts to open the MT black box for CLIR. For example, Sakai [10] used alternative translations from a rule-based MT system. We are however not aware of similar studies using an SMT system. Compared to a rule-based MT system, an SMT system has the advantage of also providing a probability for each translation output, which allows us to weigh the translation in the final translated query. In a recent study Magdy and Jones [6] tried to construct an SMT system specifically for query translation by performing preprocessing for stop-word removal and word stem-ming before the training phase. However, still one-best translation is used in this study. The purpose of this attempt is different from ours in this paper. As our investigation is based on an SMT system that uses phrase-based translation, let us first briefly describe the principle used in our SMT system.

Given a source sentence s I 1 = s 1 , ..., s j , ...s I , which is to be translated into a target the sentence with the highest probability as in (1): In this log-linear framework [8], we have a set of M feature functions h m ( t J 1 ,s I 1 ) ,m = 1 , ..., M , and the translation and language models can be incorporated into this frame-work as features.

In state-of-the-art Phrase-Based SMT [3], phrase translations are normally induced using word alignment techniques [1]. The word alignment information are preserved in our translation model so that the alignment i nformation is available during translation. In language models for IR, the score of a document D is determined as follows: in which the document language model P ( t | D ) should be smoothed. A common method for smoothing is the following Dirichlet smoothing [13]: where C denotes the collection, and  X  is tunable parameter.

In CLIR, the purpose of query translation is to define a language model P ( t | Q s ) where t is in the target language while Q s is in the source language. Using an SMT system, if only one-best translation is used, the generated query translation is used to define it as follows: where Q t is the translation retained for Q s . This is the traditional approach using MT as a black box, which we use as our baseline. Assume that the query  X  X nvironmental protection laws X  is translated to  X   X   X   X   X   X   X , which can be segmented into  X   X   X   X  and  X   X   X   X   X , the latter two terms are used as query terms to retrieve documents in Chinese. Using Indri retrieval system [12], the corresponding query is #combine(  X   X   X   X   X  ) 4.1 Structured Query Generation As we mentioned earlier, an SMT will generate multiple translation candidates for each term in an internal search graph. which will be used by SMT to select the best translation sequence. Figure 1 is an example of MT search graph. Each arc in the graph represents a possible translation for the word/phrase it covers. The graph contains translations not only for words, but also for phrases. For a given term (a word or a phrase), there are often several possible translation candidates. For example, the word  X  X nvironmental X  can be translated as  X   X   X   X ,  X   X   X   X , etc. The one-best translation selected as the final SMT output corresponds to the best path that covers the whole input word sequence. To take advantage of the other translation alternatives, a possible solution is to extend the one-best translation by including othe r translation alternatives for each term. The translation alternatives are considered as synonyms. In Indri system, a set of synonyms can be combined using #syn operator. Assume that the path in bold in Figure 1, with the underlined translations, corresponds to the best one in the search graph. Then we also consider the translation alternatives for the terms  X  X nvironmental X  and  X  X rotection laws X . The structured query that we generate is as follows: #combine(#syn(  X   X   X   X  ...) #syn(  X   X   X   X   X   X   X  ...)) The internal search graph may contain many translation alternatives, including those that do not fit well the given query context. As we discussed earlier, the selection made in SMT is crucial for removing translation candidates that are inappropriate for the given query. Therefore, we do not retain all the translation alternatives for each term in the search graph, but only those that appear in the N-best translations, which all went through a translation selection process. 4.2 Combining Multi-path Translation Results In addition to the multiple translation alternatives for each source term, the source sen-tence can also be segmented in different ways, either as single words or as phrases. In the example shown in Figure 1, we can see that  X  X nvironmental protection laws X  can be segmented into either a single phrase, a phrase + a word, or three words. Different seg-mentations will result in different transla tions. To take into account the multiple ways to segment the input query, we will allow the SMT system to generate N-best translations which covers the most probable ways to segment the source query. For each translation output, we can proceed in the same way as for t he best translation by including all the translation alternatives as synonyms, or we can just use the N-best translations without extending them by synonyms. We will test both options in our experiments.

With both options, we have to run N retrieval processes, resulting in N sets of doc-uments { R 1 ,R 2 , ..., R N } where R n = D 1 ,D 2 , ..., D M contains M documents, each of which is associated with a relevance score S rel ( R n ,D m ) . The scores for each docu-ment are linearly combined with equal weights. To punish the documents contained in fewer sets of retrieval results, the score for document D m can be calculated as follows: where  X  ( R n ,D m ) is a Kronecker function with value 1 if D m  X  R n and 0 otherwise, the N-round retrieval results. 2 5.1 Data Our experiments are conducted on two CLIR collections, i.e. TREC-9 and NTCIR-5 with 25 and 50 topics respectively. Current experiments focus on English-Chinese CLIR, i.e. to retrieve Chinese documents using English queries. To accomplish this task, we translate the English titles into Chinese using our in-house SMT system. The stop words in the translation output are removed. 5.2 Systems Query translation are carried out using Baidu MT system. 3 The retrieval experiments are conducted using an state-of-the-art IR system -Indri 4 with support to popular structured query operators. To evaluate our approach , we use Mean Average Precision (MAP) as our main measure. To show the impact on the top retrieval results, we also include P@5 and P@10. 5.3 Using Synonyms and Interpolation We first run monolingual IR (C-C-T) and CLIR with the baseline query translation (E-C-T). The results are reported in Table 1. Both our monolingual and baseline cross-language retrieval performance is comparable to top systems that participated in TREC-9 and NTCIR-5 evaluation campaigns and those reported in previous studies. We ob-serve that query translation does not lead to a large loss in retrieval effectiveness on TREC-9 collection, while the loss is much larger on NTCIR-5. This difference is due to the differences in the collections. It turns out that the queries in NTCIR-5 are much harder to translate by SMT than those in TREC-9, because there are many named entities, whose translation may be problematic. Table 1 also shows our experimental results using top 50 best translations for synonym derivation (+syn@50). Using syn-onyms leads to 11% relative improvement in MAP over baseline CLIR system (E-C-T) on TREC-9 collections, even outperforming the monolingual (C-C-T) retrieval results. On NTCIR-5 collection, using synonyms only lead to modest improvement in MAP.
From Table 1, we can also observe that interpolating multi-path retrieval results (+intp@50) consistently improve the performance of the retrieval system. When the multi-path retrieval system is further en riched with synonyms in the search query (+intp@50 +syn@50), the performance can be further improved, especially on TREC-9. The above observations also apply to P@5 and P@10. This means that the enriched translations does not increase recall to the de triment of precision. On the contrary, pre-cision on top results is also improved.

To understand why our approach can improve retrieval effectiveness, we show sev-eral examples in Table 2. These examples show that using synonyms can alleviate the errors or term variances introduced by the one-best translations. In the first example, the addition of synonym  X   X   X   X  X o X   X   X   X  (both are legitimate translations of  X  X tealth X ) can improve the retrieval performance because the first term is more frequently used for  X  X tealth technology X . Using additional tra nslations in N-best list could produce more translation alternative due to different segmentations over the source input query. For this example, however, the additional translations are not really helpful - X  X sia X  is also translated into  X   X   X   X  (Asia-Pacific),  X   X  X  X   X (EastAsia)and X   X   X   X   X  (Southeast Asia), which may not be appropriate for this query. In the second example, N-best translations contains the correct translation  X   X   X   X   X  for English word  X  X aya Wan X  (the name of a place), which is not correctly translated in the first best translation. 5.4 The Impact of N-Best Size The previous experiments used 50 best translations. The evaluate the impact of the N-best size, we conducted retrieval experiments using different values for N. Figure 2 depicts the curve of MAP when N is s et to different values. It can be observed that the optimal values are different for TREC-9 and NTCIR-5 collections. It can also be observed that using synonyms on TREC-9 collection consistently improves MAP as N increases, while the system without synonyms fluctuates and starts to dip when N is set to 80. On NTCIR-5 collection, the system using synonyms also yields more stable performance. Moreover, a larger N-best lis t is more beneficial to the shorter TREC-9 queries where query expansion more useful in improving retrieval performance. 5.5 Dynamic Selection of N-Best Translations Given the fact that translation search graphs of the input queries vary from one to an-other, using the same number of N-best translations for all queries may not be optimal. For instance, a longer input query normally implies a larger number of vertices and edges in the search graph and respectively more translation candidates compared to a shorter query. Meanwhile, even for queries w ith equal number of translation candidates, the distribution of posterior scores may vary. It is therefore necessary to dynamically determine the number of N-best translations for each query.

N-best translations are associated with their translation scores and can be ranked according to them. Intuitively , a sharp decrease in translation score generally indicates an appropriate cut-off point. Given an input source language query Q s and its N-best An cut-off point can be established where the difference Dist between consecutive N-best translations Q t n and Q t n  X  1 reach a threshold  X  : We further assume that the optimal  X  for a particular query depends on the length of the query, and the distance between consecutive N-best translations of longer input queries tend to be smaller than those of shorter input queries. We can define  X  as a exponential function of input query length l :  X  = j l k ,where j  X  (0 ,  X  ) and k  X  (0 ,  X  ) are con-stants. Albeit j and k can grow without bound in theory, the differences in translation scores for two consecutive N-best translations is normally bounded. Here we empiri-cally set j  X  [0 . 5 , 5] and k  X  [0 . 5 , 5] . We then perform grid search for optimal j and k with a step size 0 . 5 using NTCIR-6 topics as development set. We found the optimal value for j and k are respectively 2 and 2 . As can be seen from Table 3, to dynami-cally determine optimal number of N-best translations yields comparable performance in MAP compared to when N is set set at optimal numbers -0.2871 for TREC-9 and 0.2896 for NTCIR-5. This result confirms our intuition that different queries require different N depending on how many translation alternatives there are and how likely they are. It also shows that our method to automatically determine N is quite effective. Notice, however, that N shown in Figure 2 is set for the whole collection. If N were set to its best for each query, the effectiveness on a collection could be even higher. This means that the best effectiveness shown in Figure 2 is not truly optimal and there is still much room for improving the dynamic search for the optimal N for each query. In this paper, we presented an approach to exploit more translation alternatives in an SMT system in English X  X hinese CLIR. More specifically, we considered N-best trans-lations from an SMT system, which are then converted to structured queries. Two dif-ferent types of structural information can be induced from the N-best translations: (1) synonyms, i.e. different translations of one source word/phrase, and (2) different ways to segment the input query. Incorporating s uch information into input query composi-tion yields gains in MAP on both TREC-9 and NTCIR-5 collections. Our experimental results clearly showed that it is beneficial to open the MT black box to obtain more translation alternatives.

The methods we explored in this paper can be further improved from several perspec-tives. (1) We did not consider translatio n probabilities w hen synonyms are combined. Intuitively, it would be reasonable to combine synonyms according to their respective translation probability from the source term. Technically, this is feasible with the #wsyn operator in Indri. (2) The creation of the final structured query requires the SMT system to generate N-best translations. This exp licit generation of N final translations can be avoided and we can indeed create the structur ed query directly from the internal search graph. This would correspond to a different decoding process than for MT. (3) The final N-best translations are selected using a traditional statistical language model. As shown in several previous studies, query terms often do not form a sequence of words as in a general language, so are their translations. In [2,5,11], co-occurrence statistics are used instead of traditional language models for translation selection. Such an approach may be more appropriate for queries. The solutions to all these problems may lead to even larger improvement in CLIR effectiveness. We will investigate them in our future research.
 Acknowledgments. This work is supported by 863 State Key Project (Grant No. 2011AA01A207). The authors would like to thank the reviewers for their insightful comments.

