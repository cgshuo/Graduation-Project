 With the rapid development of mobile devices, wireless networks and Web 2.0 technology, a number of location-based sharing services, e.g., Foursquare 1 , Facebook Place 2 ,Everytrail 3 and GPSXchange 4 , have emerged in recent years. Among them, Everytrail and GPSXchange are particularly unique because they allow users to share their outdoor experiences by uploading GPS trajectory data of various outdoor activities, e.g., hiking and biking. By sharing trajectory in-formation, these Web 2.0 sites provide excellent resources for their users to plan or explore outdoor activities of interests.

The rich amount of trajectories available in those web sites brings significant challenges for users to find what they se arch for. Also, different from conven-tional items with enrich texts, it is diffi cult to judge whether the trajectory is interesting or not based on the activity tag or GPS raw data. Therefore, in order to automatically discover interesting t rajectories, a trajectory recommendation service is highly desirable.
Conventional collaborative filtering (CF) techniques do not fit the problem trajectory recommendation. The CF requir es people to access the same items to compute user interest similarity. However , in trajectory sharing website, there are no two people who generate exactly the same trajectory and the user similarity can not be calculated by  X  X ccessing the same item X .

In this work, we explore the ideas of content-based recommendation tech-niques [1,8,13]. We consider two types of trajectory  X  X ontent X , activity tags and GPS points. The activitiy tags, such as hiking or biking, are annotated by the users themselves. The trajectory is represented as a sequence of GPS points with corresponding time stamps.

Recommendation based on tags is named as activity-based recommendation (ABR) , which utilizes the tag content (if av ailable) to make trajectory recom-mendation. Since the tags are manually labeled by the creator, they can be treated as a good feature for a trajectory. Unfortunately, activity tags are not always available for a GPS trajectory. In the Everytrail data we collected, about 12.61% of the trajectories do not have tags. Additionally, ABR may not be able to make recommendation if there are too many candidates with the same tag. For example, in our collected data, 14% of all tagged trajectories, are tagged with  X  X iking X . One intuitive solution would be using geographical region as a filtering to eliminate infeasible candidates. However, it does not really solve the problem. For example, after constraining the search result into  X  X an Fran X , we still found 96 hiking trajectories in the collected Everytrail dataset. Finally, tra-jectories with the same tag may have different moving patterns, which the ABR is unable to capture. Let X  X  consider two hiking fans. The first one likes to take a gentle walk so she can take a lot of photographs but the other one treats hiking as a physical exercise. Naturally, the two trajectories, although both labeled as  X  X iking X , may contain very different features, which ABR fails to capture.
Considering these weak points of ABR discussed above, we also exploit the sampled points in GPS trajectories for recommendation and call the proposed technique GPS based recommendation (GBR) . The raw GPS data contains plen-tiful movement information (e.g., speed , change of speed, etc.), which captures the user X  X  outdoor experiences implicitly . For example, techniques for using raw GPS data to infer the transportation modes (e.g., taking bus, taking subway, biking and walking) of trajectories have been studied [22,21,17,18,7,6]. However, these techniques are not applicable to our trajectory recommendation service since we aim to capture users X  moving habits and use them to differentiate the trajectories of the same activity type. Take the example of hiking fans mentioned earlier, existing techniques can only classify them as  X  X iking X . However, what a recommender system needs are more person alized moving habits, e.g., gentle walking or intense trotting. We argue that such information is embedded in GPS data and we aim to mine them out to facilitate trajectory recommendation.
The rest of the paper is organized as follows. Section 2 formally defines the problem, introduces ABR and reviews the related work. Section 3 and 4 re-spectively detail the GPS feature extrac tion and the generative model in GBR. Section 5 presents the evaluation of our proposed solutions. Finally, Section 6 concludes the paper. In this section, we first formally introduce the trajectory recommendation prob-lem and discuss the sub-tasks to tackle the proposed problem. Then we provide a comprehensive literature review on r ecommendation and trajectory related research work. 2.1 Problem Formulation A trajectory consists of two parts, i.e., an activity tag (could be absent) and a raw GPS trace. Formally, a trajectory is represented as T = a, T G ,where a  X  X   X  hiking  X  ,  X  biking  X  ,  X  X  X  ,  X  null  X  } denotes the activity tag and T G stands for the raw GPS trace.

The GPS trace is obtained via GPS sensor which sampled the moving object X  X  current location together with the sampled time stamp. Thus the original format is a series of triple tuples defined below.
 Definition 1 (Raw GPS Trace). AGPStrace T G = { pt 1 ,  X  X  X  ,pt n } is defined as a series of sample points, pt i = x i ,y i ,t i where x i ,y i represent the latitude and longitude of the i th point and t i stands for the time stamp.

The recommendation problem is to find a subset of candidate trajectories that could be of interest to an active use r. More formally, given a collection of trajectories S = { T 1 ,  X  X  X  ,T n } and a person u , recommendation needs to find k trajectories S = { T r 1 ,  X  X  X  ,T r k } that u is most interested in. Suppose we have a ranking function Score ( T,u ) that can compute the  X  X nterest degree X  of a trajectory to a user, the recommenda tion can be formulated as follows. Definition 2 (Top-k Trajectory Recommendation). Given a trajectory set S = { T 1 ,  X  X  X  ,T n } , the recommendation service for user u needstofindasubset of k trajectories S = { T r 1 ,  X  X  X  ,T r k } so that  X  T i  X  S  X  S , we have The above definition reveals three problems for trajectory recommendation. The first two problems are how to represent the trajectory (Feature Extraction) and the user (User Profile Modeling) in a proper way to facilitate the computa-tion of a ranking score. And the final one is how to design an effective ranking function Score ( T,u ) to measure the  X  X nterest degree X . 2.2 Activity-Based Recommendation The ABR tries capturing a person X  X  activ ity preferences based on her previously shared trajectories. This pref erence to different activities is represented as a series of probabilities, whose values are obtained by maximizing the joint probability of observed data.

Let A = { a 1 ,  X  X  X  ,a n } denote the collection of all activity tags and p i , 1  X  i  X  n denote the probability that the user u is interested in activity a i . Obviously i =1 p i = 1. For the user X  X  previously published trajectories, the activity tags are X = { x 1 ,  X  X  X  ,x m } where x j  X  A, 1  X  j  X  m . X is the observed data for the user and the solution is to guess the user  X  X  preference, or exactly the value of p i based on these experiences. We assume that the instance x j  X  X is independent of each other and the probability of observing X is given in Equation (2). where n i represents the number of trajectories that is tagged with a i in X .
To learn the value of p i , we need to maximize the Equation (2) under the con-straint that the sum of all probabilities is equal to 1, i.e., the objective function asshowninEquation(3).
 L ( p 1 ,  X  X  X  ,p n ) = log P ( X | p 1 ,  X  X  X  ,p n )+  X  (1  X  where  X  is a Lagrange multiplier.

The objective function is solved by setting each partial differential  X  L  X  X  For ABR, the ranking function is thus defined as: 2.3 Related Work Due to the wide use of GPS-equipped smart phones, much attention is focused on the use of the trajectory data to improve people X  X  life, among which trans-portation mode detection is most related to our work.

Zheng et. al. [21,22] collected 47 pe ople X  X  GPS data and compared differ-ent machine learning techniques to classify transportation modes. The methods however can not be used for recommendation. Trajectory recommendation re-quires to give a ranking score to each candidate trajectory while classification algorithms, e.g., decision tree, can only output binary values. In [17,18], Reddy et. al. compared and even ranked differen t types of trajectory features. One of the most important features in their w ork is the instant acceleration recorded by accelerometer. This inf ormation is usually unavaila ble for common trajectory information since most of the smart pho nes are not equipped with accelerome-ter. In [6,7], different trajectories of moving objects, including eye-tracking, are collected for transportation mode classification.

Trajectories contain plenty of valuable information. Previous classification works explored different types of featur es that can well capture the trajectory modes. However they did not pay attention to user X  X  moving habit that is also contained in trajectory data. Li et. al. [10,11] tries to mine moving patterns from GPS data of animals. GPS data in our case are records of a person X  X  trips that happen at different places and few of th em overlap with each other. Therefore no periodic patterns can be mined out of such  X  X cattered X  data. In [9,14,15], Discrete Fourier Transformation is also used to extract features from trajectory data. However, their goal is for clustering, which is quite straightforward with the extracted data. Our work is to deve lop generative model based on these features to learn user moving habits for recommendation.

Other works related to recommendation are based on semantic information of trajectory [3,4,20]. These works treats trajectory as a sequence of  X  X eaning-ful places X  and use the semantic information of the locations, e.g., restaurant, shopping centers.In our case, trajectories do not have semantic tags. Further-more, not all trajectories contain meaningful locations. For example, a hiking trajectory is unlikely to pass places such as restaurant, shopping center. In this section we focus on extracting features from GPS data. Specifically, we introduce two types of features, i.e., partial-view feature (PVF) and entire-view feature (EVF). The PVF mainly consists of physic values such as speed, velocity, etc., and is easy to understand.

Specifically, given a trajectory X  X  raw GPS data, average velocity, average ac-celeration and other physical measure ments can be easily computed and they represent some characteristics of that tr ajectory. In this work, the PVF contains the total length of trajectory Len , the total time of the trajectory Time and
The EVF tries to capture the global features and is harder to understand semantically. We adopt Discrete Fourie r Transform (DFT) to transform the GPS data and a discussion is provided in Section 3.2. 3.1 Entire-View Feature Before applying DFT on GPS, there are two issues need to be addressed. Firstly, different trajectories may have different lengths, i.e., different number of sam-pling points. If we take the whole GPS trace as input, DFT will generate features that have different dimensions. This situation makes it difficult to compare two trajectories as they might be in different frequency spectrums. Secondly, there are three kinds of signals that can be obtained from GPS traces, i.e., distance sig-nal, velocity signal and acceleration sig nal. We need to decide which one should be used as DFT input.

For the first problem, a sliding window of fixed size is used to split the GPS trace into several segments. DFT coefficients of these segments are then refined to form a GPS feature of the same size. This processing method is similar to music compression and classification [12,16]. As for the second problem, we choose speed signal because i) it suffers less imp act of sampling rates than the distance signal and ii) it is more accurate in reflect ing the moving status than acceleration signal. Given two trajectories which have the same sampled data points (i.e., latitude, longitude and the number of points) except for the time stamp, the DFT features will be same. However, the mo ving status for the two trajectories could be quite different if the sampling r ates are not the same. The speed series can avoid this weakness. Also, note that t he acceleration signal is converted from the velocity signal under the assumption that the object is moving at a constant acceleration between two sampled poin ts. Each manipulation of the GPS data, e.g., linear interpolation, converting to distance signal etc., may introduce some errors. Therefore the velocity signal i s better than the accel eration signal in terms of accuracy.

A final feature of size ws  X  r is obtained by keeping the top-r max value for each dimension. The process is both shown in Figure 1. The use of overlapping window is to mitigate the  X  X oss X  at the edges of the window 5 . The refined value r is to mitigate the impact of path condition. because extreme cases are usually free of road limitation. For example, if it is found that a user drove 35 miles per hour for some segment while 25 miles per hour for other. The it is more reasonable to believe that the speed 35 mph is more likely to represent the user X  X  habit instead of 25 mph.
 3.2 Discussion of the Entire-View Feature The basic waves have two components, i.e., frequency and amplitude. The fre-quency indicates the intensity of speed ch ange. That is, lower frequency suggests that the moving is smoother while higher one means the moving object frequently changes its speed. The amplitude of the wave reflects the strength of a signal, or exactly, the absolute value of the speed. We use the example shown in Figure 2 to illustrate this point.

As shown in Figure 2(a), the speed signal of two trajectories are drawn. It is easily seen that the trajectories are qu ite different. Firstl y, trajectory 1 has a smaller speed than trajectory 2. Also, the signal of trajectory 2 is smooth while the speed of trajectory 1 suffers frequent change. Figure 2(b) displays the result of DFT. Trajectory 2 X  X  amplitudes are bigger than that of Trajectory 1, corre-sponding to its original bigger speed. Furthermore, the frequency of trajectory 1 lies mainly in higher spectrum while that of trajectory 2 in lower part. This is consistent with the change of their original speed signal where low frequency reflects smooth signal and high frequency corresponds to intense change. In this section we formally define the proposed generative model and introduce the designed ranking functions. 4.1 Generative Model Formally, suppose a person u has k latent habits z = { z 1 ,  X  X  X  ,z k } which sat-isfies some distribution. For each habit z i ,thereare n groups of parameters  X  For each dimension, we assume that the value follows a Gaussian distribution N (  X  i j , X  i j ) with mean  X  i j and standard variance  X  i j . The generative model works as follows. The person u first chooses a latent habit z k with probability  X  k . Then this habit generates the amplitude fo r each frequency in the feature space, which is determined by a Gaussian distribution. The generated feature finally constructs a trajectory.

Given a set of trajectories S = { T 1 ,  X  X  X  , T N } ,where T i = f i 1 ,  X  X  X  ,f i n is a trajectory with n features. If all trajectories in S is known to be generated by the person u , then the parameters  X  = {  X , X , X  } can be learned by maximizing the following log-likelihood function: L (  X  ) = log P ( S |  X  )+  X  ( Gaussian distribution N (  X  j m , X  j m ),  X  is the Lagrange multiplier and  X  ij is an indicator function whose value is 1 if and only if the trajectory T i is generated by habit z j .

We use EM algorithm [5] to solve this problem. In the following, let  X  ( t )denote the values of parameters at t th iteration.
 E-Step E [  X  ij ]= M-Step 4.2 Ranking Function We provide two ranking functions, of which one is developed from the generative model and the other is hybrid of ABR and GBR.

The generative model discussed above captures the user X  X  moving habit and can then be used for recommendation. Each user has a profile expressing her latent habits z 1 ,  X  X  X  ,z k with probability  X  1 ,  X  X  X  , X  k . For each habit z i ,there is a n -dimension Gaussian distribution {  X  1 , X  1 ,  X  X  X  ,  X  n , X  n } . The ranking of a trajectory to a given user X  X  profile is to compute the probability that the trajectory is generated by that user. M ore specifically, for a trajectory T = f Score gm ( T,u ) = log P ( T | u ) = log The probability P ( u ) is omitted since it is a constant to all candidate trajectories.
The ABR introduced in Section 2.2 is aware of a person X  X  historical activities but can not distinguish two trajectories with the same activity. On the other hand, the GBR described in Section 4 ranks trajectories purely based on its GPS data and the user profile. In other words, it gives different ranking scores to trajectories disregarding their activity tags. Therefore it indicates a poten-tial improvement when the two methods are combined. Equation (8) shows the hybrid ranking function that merges the two recommendation methods.
 where 0  X   X   X  1 is a balance parameter adjusting the weight of the two sep-arate ranking scores. Note that when  X  = 0 the hybrid ranking becomes pure generative model and  X  = 1 reduces the method to pure ABR. All the experiments are based on a real data set collected from Everytrail. Ev-erytrail is a trajectory sharing website encouraging people to publish their trip trajectories recorded by th e smart phones. Each trajectory may also be associ-ated with an activity tag, e.g., hiking, road biking, driving and so on. We crawled the website from June 05, 2010 to August 07, 2010 and obtains 8,444 users and 63,760 trajectories in total. 5.1 Data Preparation Because the trajectory data is uploaded by different people and there is no strict examination, the raw data contains much noise for mining. We take the following steps to clean the data. Firstly, all untagged trajectories are removed to guarantee a fair comparison of ABR and GBR. Also, we removed trajectories which have  X  X llegal X  GPS traces, defined as those i) whose sampled time stamp are not monotone increasing ii) whose total time length is less than 300 seconds. Finally, users whose shared trajectories are less than 20 are removed since small sample may hurt the model accuracy and thus the recommendation performance. After this preprocessing, there are 252 users and 9,120 trajectories remaining.
For each user in the preprocessed data, we randomly masked 20% of her trajectories. These masked data serve as the test data to evaluate our proposed recommendation methods and the remaining part is used as training data to build the user X  X  profile. Furthermore p recision and recall are metrics used to evaluate the recommenda tion performance. 5.2 Parameter Tuning for Entire-View Feature Figure 3 shows the tuning process for the remaining parameters, where ws ranges from 8 to 128,  X  from 0.1 to 0.8 and r from 1 to 3. Also, the optimal configuration for different r is highlighted in the figure. As is shown, best performance is achieved when the feature dimension is 64, the overlapping window percentage is 30% and the refined window size is 3.

Figure 4 shows experiments on time unit tu which varies from 3 seconds to 20 seconds. It can be seen that the time unit should be neither too small nor too large. For a small time unit, many pseudo points have to be added via linear interpolation and it may introduce too many errors. On the other hand, a big time unit may discard some true sample points, which may miss important information. Judging from the result, tu is properly set to 5 seconds.
Finally Figure 5 shows the tuning of  X  for hybrid recommendation. Note that when  X  = 0 the method is reduced to the ABR and when  X  = 1 it is equivalent to the GBR. Based on the result we set  X  to 0.9 for the rest experiments. 5.3 Comparison of Different Features After determining the optimal configuration of EVF, we compare its recommen-dation performance with two other features, namely, partial-view feature (PVF) and combined feature. The PVF, as introduced in Section 3, consists of top-pf 1 maximum velocity, top-pf 2 acceleration, the length a nd time of the trajectory. In the empirical study, the best performance of PVF is obtained when both pf 1 and pf 2 are set to 3. Combined feature is the combination of the two types of features. As is seen in Figure 6, the combined feature outperforms the other two in terms of both precision and recall, esp ecially for top-1 recommendation. This scenario proves our earlier argument tha t these two types of features represent different aspects of a trajectory. The P VF aims to capture t he locally extreme characteristics while the EVF places more emphasis on the global picture of a trajectory. They are com plimentary to each other and can achieve the best performance when combined together. 5.4 Comparison of Different Recommendation Approaches In this set of experiment, we evaluate the performance of the proposed recom-mendation methods, i.e., ABR in Section 2.2, GBR in Section 4 and Hybrid Recommendation where the  X  is set to 0.9. We also include several baseline methods for comparison. The details of them are listed below.  X  Support Vector Machine (SVM) 6 . The SVM treats each user as a class and  X  Maximum Similarity (MS). This method computes the cosine similarity of  X  Maximum Average Similarity (MAS). This method computes a centroid for The MS and MAS can also be treated as an variant of item-based recommen-dation [19]. Note that the above baselines share the same features (i.e., GPS combined features) with our proposed GBR but adopt different approaches for user-profile modeling and trajectory ran king. To distinguish the difference, we use generative model (GM) to denote our proposed GBR.

The experiment results are shown in Figu re 7. It is easily seen that the gener-ative model outperforms other method s that use GPS feature. These recommen-dation methods, SVM, MS, MAS, are solely based on user X  X  previous trajectories and thus may be too biased to history data. The generative model, instead of limiting to the data, tries to learn the users X  hidden moving pattern and thus can achieve higher precision. ABR is the only method that relies on the tag of the trajectory. In Figure 7, its performance, in terms of both precision and recall, is worse than GM except for N = 50. As mentioned in Section 1, this method can not distinguish trajectories of the same activity. This explains its low precision and recall when N is small. The performance improvement for bigger N , however, suggests a user X  X  concen tration on the number of different trajectory X  X  activities. Finally, the hybrid recommendation, which combines the ranking functions of ABR and GM, shows the best performance. The ABR is aware of a person X  X  historical activities but can not distinguish two trajecto-ries with the same activity. On the oth er hand, the proposed generative model ranks trajectories without any knowled ge of their activities. The hybrid recom-mendation method integrates both of their advantages, taking care of textual information and the GPS traces. It can thus not only narrow down the range of candidate trajectories but also distinguish those with the same activity tag. This explains why the hybrid approach displays the best performance. In this paper we studied the problem of trajectory recommendation. Each trajec-tory usually consists a GPS trace and may contain an activity tag. A recommen-dation service is supposed to find potentially interesting trajectories and push them to particular people. We proposed a recommendation framework and divide the task into three subproblems, i.e., feature extraction, user profile modeling and trajectory ranking. Under this fra mework, we developed three recommen-dation methods, namely, Activity-Based Recommendation (ABR), GPS-Based Recommendation (GBR) and Hybrid recommendation. We conduct extensive experiments to evaluate our solutions. For GPS feature, it is shown that the combination of partial-view feature and e ntire-view feature achieves best per-formance. As for the recommendation approach, the hybrid one that combines ABR and GBR obtains highest precision and recall. In future work, we will focus on ways of integrating travelogues, if available, into recommendation methods.
