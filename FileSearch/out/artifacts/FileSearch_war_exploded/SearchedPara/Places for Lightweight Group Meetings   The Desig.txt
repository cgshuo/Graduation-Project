 Lightweight group meetings are opportunistic, ad hoc, or lightly planned gatherings characterized by the informal nature of their members and their tasks. Critically, they must be very easy to set up and maintain over time. We contribute the design of Come Together, a system that supports lightweight, persistent meetings between distance-separated people. Its design is theoretically motivated by the Locales Framework, with features derived from the best of Instant Messengers a nd the Community Bar. Its main motivation is that any action must be simple and fast to do if it is to support lightweight group meetings. In particular, Come Together represents both people and their things as media items , which  X  unlike prior systems  X  can be quickly brought together to form an ad hoc place. Places, which are persistent, can be presented in a variety of forms (e.g., as a stand-alone window, or as an element in a sidebar), with interaction mechanisms that let a person quickly adjust the degree of awareness he or she wishes to maintain of the place and its contents. Somewhat akin to buddy lists, a console collects all people, artifacts, and places, where users can select them to rapidly compose meeting places. K.4.3 [Computers and Society] : Organizational Impacts -Computer-supported collaborative work. Ad hoc groups, awareness, casual interaction, groupware, places. People constantly come together in small groups. Typically, group members know each other to various extents, and have a real desire  X  driven by social, work, play or a variety of other purposes  X  to interact over time. While some formal gatherings happen via scheduling and planni ng, the vast majority are lightweight. That is, they are ad hoc, informal, casual, mostly unplanned, opportunistic, and often times brief. Even so, such meetings are critical for small group effectiveness [10] [19]. Seven elements interplay to contribute to why lightweight meetings work so easily in the everyday co-located setting. artifacts together, (4) people and artifacts can co-exist in multiple group places, (5) the personal salience of people and items within a place can be adjusted, and (6) the buddy list idea of Instant Messengers was extended to capture not only people, but artifacts and places. Our requirements analysis is based on theory (the Locales Framework), and practice (successes and deficiencies of select groupware systems). The Locales Framework [4] is a theoretical framework developed to help an analyst understand the nature of social and collaborative interactions. Here, we selectively emphasize a few of its key aspects. Locales: Social Worlds, Sites and Means, A social world is a group of people with collective goal(s) and/or interest(s). Such goals do not have to be well-de veloped or completely knowable. Members of a social world perform their collaborative activities at a site (a physical and/or virtual place) furnished with means (resources and artifacts): collec tively, this is known as a locale. This is somewhat akin to the concept of place as described in [9] and [2]. Sites range considerably, e.g., a physical or virtual place where people engaged in their activity, or even an abstract setting that frames the way the social world meets opportunistically as they pursue their activities. In the digital realm, sites may be explicit (e.g., a metaphor of a physical place such as a room [7]), or implicit (e.g., how a group uses a loose collection of tools to communication tools, and artifacts provided by the site and/or brought into the site. In a physical setting, resources could include tables, chairs, pen and paper, whiteboard, projector, etc. In a virtual setting, these could be th e digital resources packaged as part of a tool (e.g., file transfer and VOIP capabilities in instant messengers). Artifacts include anything brought into the space and/or worked on by the group, su ch as documents and sketches. Center/Periphery Principle. Most groupware treat group membership as a binary choice (i .e., member or non-member). In reality, membership of people within a social world is highly nuanced, where it is defined by a centre-periphery continuum . At the centre is the context that holds the social world together, for example, the collective goal. Core members with high levels of engagement and/ or immediate activity in the goal are typically located at this centre. Yet other members may be at the periphery, where they have a lesser level of engagement. Of course, this level of engagement can fluctu ate. Thus membership at any moment of time is defined by a person X  X  engagement on the centre/periphery continuum. In othe r words, actively participating people are closer to the centre of the social world, while those less engaged are further away from the centre. Similarly, artifacts can drift over the center/periphery spectrum, i.e., with artifacts relevant to the current collective goal at the centre, and secondary or stale artifacts nearer to the periphery. Mutuality and Awareness. Mutuality is the mutual provision and perception of the awareness information exuded by people, artifacts, and interactions within the locale. In a locale, people need to be aware of the state of the social world, the site, and the means, as this helps them maintain a sense of a shared place. It A subset of today X  X  groupware alr eady supports particular aspects of lightweight groups and their meetings. Most are specialized for particular kinds of exchanges. Em ail, social networking, internet forums, issue trackers, electronic calendars, project management are popular for casual communicati on, informal relations and some degree of artifact sharing, but don X  X  support the real-time aspects of lightweight meetings . Instant messaging, voice over IP, video conferencing, shared screen systems, and others are excellent at supporting real time communication, but don X  X  have notions of persistent places. So me groupware are tools (e.g., a groupware drawing tool) that could be part of the means within a locale, but do not contribute to locale creation in of itself. Indeed, few of the above systems explicitly support locales. Instead, locales are often implicit. They w ould be created in participant X  X  mind as a consequence of the interplay of the groupware systems used to support group activity (but see [4],[18]). While myriads of groupware exist, due to space limitations we focus on two systems: instance messengers, and the Community Bar. Both deserve special attenti on in terms of their strengths and weaknesses in supporting lightweight meetings. Instant Messengers (IMs) work because they provide an extremely light-weight way to ente r in casual interactions (e.g., see [13]). A person can quickly collect people as buddies, and see the online status of these intim ate collaborators via buddy lists. If a buddy appears present, a person can opportunistically move into a textual chat with a single button click. Once engaged, both can move into richer communicati on (e.g., VoIP), and quickly exchange document artefacts via file transfer. While some have groupware tools to pursue actual work (e.g., shared sketchpads, screen sharing), their use is much rarer. IM is at its best for transient c onversational diads, but is limited in how it supports on-going locale formation and lightweight meetings within them. There is little or no notion of a broader group. Persistence is not supporte d except for chat transcripts. Tool use and artifact sharing (if any) is mostly  X  X ut of band X , and does not persist beyond the conversation. IM  X  X ocales X  are transitory. Support for center / periphery activity doesn X  X  really exist. Text chats have hard walls, i.e., others outside the chat have 2. People should be able to easily incorporate existing or new 3. People should be able to adjust their involvement in a place As we will see, these new desi gn elements contribute significant enhancements over prior systems in terms of how they support ad hoc group formation and work practices over time. This section introduces the main features and building blocks of Come Together. It does this by d econstructing relevant aspects of its user interface. In particul ar, we will see how: a console window collects all people, artifacts, and places in a manner akin to buddy lists; media items represent people and artifacts; places collect media items, where a person can adjust the salience of those items by various means; and places can be presented in several forms (e.g., as stand-alone windows, or within a places strip on the desktop border) to adjust a place X  X  overall salience. One of the most powerful features of Instant Messengers is the buddy list. In particular, a pers on can select their own small community of collaborators from a much broader population. The and as a way to selectively incorporated particular buddies into a conversation. Come Together extends the afford ances of a buddy list to include not only buddies, but artifacts and places. It does this via its main console window, which contains four tabs: People, Things, Places, and Me (Figure 1, a-d). Unlike Instant Messengers, each tab provides rich and alternative ways of viewing its contained items. The description below summarizes the basic features of these tabs. Due to space limitations, particulars of selecting and manipulating the items in tabs are not discussed, but include typical operations such as drag a nd drop, and selection of actions via context menus [16]. People tab. Figure 1a illustrates one person X  X  view of the People tab, which is somewhat equivale nt to a traditional buddy list. The bottom part (below the splitter) shows the community of all potential buddies as text, images a nd/or video (if enabled by the other person). Any person can be made into a buddy by selecting the  X  X  See X  checkbox; when the ot her person reciprocates, the  X  X ee any place; the middle includes one X  X  own things that are part of a place and thus sharable, while the bottom shows things created by others that are shared with that person because both are included in at least one place. Each section also has thumbnail and icon rows that let people adjust a thing X  X  visual prominence. As with people, things can be represented by live thumbnails that show the current status of that thing, or as smaller abstract icons that represent the thing X  X  type. Places tab. Figure 1c shows one person X  X  view of places. The top section shows the (three) titled places this person is part of. Each place shows a miniature of several people and things in it; the drop down at the right of each place will expand the view to reveal the other people and things in that place. The bottom section shows other places on the system that the person could potentially join; the idea is that giving other non-participants (i.e. those at the outermost periphery) a glimpse into these other places provides further opportunities for engagement. The button at the center lets a person create a new place; that new place would then contain that person. Other people can be invited into that place and existing or new artifacts can be added. Each place has a context menu that lets one of its occupants rename it, quit it, set it as private or public, and if public, set the fidelity of information visible to non-members. Me tab. Figure 1d shows the Me tab, which lets a person control how others see them. Th e controls at its top let the person specify one X  X  name and alter login credentials. Below that is a set of controls allowing the person to specify if he or she is viewable as a video feed (a preview is shown) , and if so, what frame rate and camera to use. For cases when video is not being shown, the bottom controls let a person specify a static image (from file or from a video grab) to show instead; previews of that image at the icon and thumbnail sizes are displayed. Media items are containers of groupware content that allow people to drill down into that conten t to see its details [11]. Media items in Community Bar were well received by participants [15], as they proved an effective means for people to move from awareness to interaction (by drilling down), but proved less successful in terms of how people could adjust their salience by resizing them. Come Together re-implements media items in an altered form to keep its main strengths while overcoming its weaknesses. From a software development point of view, a media item is a software plug-in: a container with a well-defined interface [12][16]. Thus CT is extensible: a developer can create a variety of different media items. CT is packaged with the following group-aware media items (new media item types could be created and added with routine software development effort [16]).  X  Presence item shows a person X  X  image or  X  Photo item collects photos (e.g., by a person Arifact-oriented media items work the same way. The screen item in Figure 2 shows: an abstract monitor icon in the icon view representing the media item type (bottom left); a shrunken live image of the screen in the thumbnail view (top left); and a scaled-to-fit screen image plus various c ontrols in the full view (right). Both the web item and document item (e.g., as visible in Figure 1b, top) also have their semantic contents match their size: an abstract icon representing a web or document in the icon view, a shrunken image of the actual web or document page in the thumbnail view, and the actual web or document page in a web browser or document viewer in th e full view. The chat item shows as much of its live content as can fit within its thumbnail view, and a scrollable transcript and input area in the full view (Figure 8b). The photo item shows an ex emplar photo in its thumbnail view, and a controllable slide show in its full view (Figure 6c-e). As we will see, Come Together uses media items X  semantic zooming approach to offer details on demand, and to adjust an item X  X  salience in a variety of ways. For example, dragging an item from the icon to thumbnail row changes its size and thus the richness of information displayed (e.g., as in Figure 1a-b). If a person hovers the mouse over the icon view, a thumbnail / text description will be displayed in a manner akin to a tooltip, e.g., Figure 3 X  X  document icon X  X  tooltip. For full details, a media item instance can be dragged out of the console onto the desktop, where it appears in its own wi ndow. When a person resizes the media item window, its view will be adjusted as described above. Media items can also be part of a place and/or desktop border, where it will exhibit variations of its behavior. As previously discussed, if lightweight meetings are to work, creation of a group meeting place and bringing people and things into that place must be extremely easy. Thus a crucial component in Come Together is how a place is created. Come Together provides several methods to do this. One way to create a place is by joining media items together via dragging and dropping. Figure 4 shows an example sequence, where Saul wants to show off his photos from his last camping trip. From the  X  X y Buddies X  portion of his People tab in the Console (Figure 4, top left), Saul sees that his st udent Yibo is online. He drags outs Yibo X  X  media item from the People tab onto the desktop (Figure 4, top). Saul then switches to the Things tab, and drags out his previously created photo item containing his camping photos close to Yibo X  X  media item (Fig. 4 mid-left); the system recognizes this as a request to create a place, and draws a red bounding box around the two items indicating this (Figure 4, mid-right). Saul then drops the media item, and the place with the default name  X  X ew Place X  is automatically created containing Yibo and the choose to also immediately populate that place with other (empty) media items via the context menu. For example, selecting the Chat item creates a place containing Helen, Yibo and a text chat, i.e., it is equivalent to an in stant messenger conversation (with added features such as persisten ce and video, etc.). As before, Yibo (and now Helen) can drag existing media items (people or things) into that place at any time as the meeting unfolds. A third method varies the above, where a person can create a place by dragging a URL or a file of a particular type over a stand-alone presence item. For example, if Yibo dragged an XPS document file atop of Helen X  X  presence item, CT would create a document media item containing that docum ent, and would automatically create a place containing both Helen X  X  presence item and the document item. As yet another method, a person can create a place directly within the console Places tab (using a button), after which that place can be dragged out onto the desktop and populated as desired. An important difference from many groupware systems is that a Come Together place can be created that only contains a single person; there is no requirement that other people have to be invited into that place. Thus a place can not only serve for groupware meetings, but also as a way to define (and perhaps set aside for later perusal) a person X  X  individual activities within a persistent context, e.g., as an activity as according to Activity Theory [14]. Other people can be brought into that place at a later time, but only if desired. Places include rapid interaction techniques to let a person quickly adjust the prominence of its cont ained media items, and / or to quickly drill down into details of a media item. The mechanism is a variation of the Tooltip Grande popups found in Community Bar [11] and SideShow [1]. When a place is created, by default it shows only the icon and thumbnail views of media items, arra nge in two rows (e.g., as in Figure 6a). As mentioned, the person can drag and drop items between these rows to switc h between icon and thumbnail representations, or raise a thum bnail tooltip from the icon (Figure 3), or even drag items around to customize the order of thumbnails or icons. However, a pe rson can also see the full view of a media item quickly as a transi ent Tooltip Grande, i.e., within a large pane temporarily included in the place. Figure 6 shows examples. In Figure 6a, Saul is about to move his cursor over Yibo X  X  presence item thumbnail. When it is over it, the place automatically increased in size to reveal a pane containing the full view of Yibo X  X  media item (Figure 6b), that is, a larger video of Yibo running at a higher frame rate . In Figure 6c, Saul continued moving his cursor over the photo item thumbnail, and as a A unique interface element of Come Together is the desktop border , which collects a place and its media items as a vertical or horizontal strip along the edges of the display. Its purpose is to let an end user further customize their individual view of their places. In particular, a person can move particular places even further to the periphery, while still allowing them to receive subtle notifications of ongoing changes to a place and opportunity to explore elements of a place. As we will see, the desktop border acts as a docking station for places, somewhat akin to the sidebar used in SideShow [1] and CommunityBar [11]. While the desktop border is initially empty, a person can drag and drop places onto that border at any time, and then adjust the size of media items within it to fine-tune an item X  X  salience. Figure 7 illustrates a segment of one person X  X  desktop border containing two places, joined by a connector , titled  X  X ibo X  X  new chapter X  and  X  X ikipedia X  X  page for groupware X . Both places currently show that the person has a hybrid view onto its items. In the Wikipedia place, he wishes to monitor (albeit somewhat at the periphery) the online status of two of the people within it, as well as their ongoing conversation. Thus he has resized those three into a larger thumbnail view but kept the other two as icons. In this case, If he wishes greater involve ment (i.e., to move towards the center), he can drag a place out of the desktop border onto the display, where it will be re-created as a place window. More generally, the docking station supports two presentation levels X  X he icon view and the thumbnail view X  X f its media items. When shown as a horizontal strip (as in Figure 7), the upper part of the docking stati on stacks media items as icons, while the lower part arrays media items in their thumbnail views. The end user can drag a media item between these two parts to change its representation. Howeve r, the person can also move the cursor over a thumbnail and cust omize its size via the scroll wheel, e.g., to decrease the thumbnail size. As well, a person can double click the title bar to toggle between a compact icon-only view and the hybrid icon / custom thumbnail view. As with place windows, the person can drag out the media item onto the desktop and size it to whatever view they wish. Finally, if an item X  X  content is changed significantly (as determined by the type of media item), it is outlined in red to indicate that its contents have other views of media items within a place). A person can also customize (alb eit loosely) the relationships between places on the strip. For example, a place can be moved adjacent to another place to relate them as a cluster. One such cluster of two places is illustrate d in Figure 7. This provides a (limited) sense of civic structure as suggested by the Locales Framework. However, this is an individual view; only the end user that created this ad jacency pair will see that. We now illustrate how the above works via a deliberately simple example scenario. Yibo decides to use Come Together to capture, store and review some of his thes is source materials that he found on the web. He begins by capturing the Wikipedia  X  X ollaborative software X  entry, as it contains a nice summary of groupware systems. He adds this web page to his Artifact collection using the Console, where he simply drags the URL of the page from the browser X  X  address bar and drops it onto  X  X y Private Things X  X ot 3. Crafting the means within a place is lightweight. 4. Mutuality (or awareness) is lightweight. for example, the light-weight form ation of persistent locals, the easy way people could view a place X  X  contents, the simplicity of adding a person to a place with no formal invitation process, the easy adjustment of awareness and involvement in a place. Areas for improvement included routine interface issues, e.g., a simpler way to leave a place, and the UI complexity of the console. More seriously, while people enjoyed CT X  X  use of social protocols, some were concerned about wh at would happen in communities where people were not intimate collaborators. In those cases, they thought access control and inv itation processes would be warranted. This is a tradeoff, as it would make place formation more heavy-weight. The study affirms that our design goals for CT are all on the right track. However, the study also sugge sted aspects that require fine-tuning. We also have to be caref ul about the assumptions made of the expected community of users. As a consequence defaults should not be universally applied, but should be suggested by the site and/or end user. Ultimately, we need to experiment with alternative user interfaces and consider their design trade-offs. This is fairly typical of itera tive design. Our initial design passed the overall test, where it appears to match our design goals. Fine-tuning will make it even more usable and flexible. Cavaeat. The system has not been deployed for field testing, for a variety of reasons. It is still somewhat buggy (due to it pushing various features of Windows WPF and because of occasional race conditions present in its underlyi ng distributed architecture). The groupware features within it are limited. For example, we have not implemented voice over IP, whic h we believe is crucial for real-time interaction. While out of band voice could be used (phone, Skype), setting those channels up would take away from the lightweight nature of the group activities. Other more functionally-rich media items need to be included. For example, we expect many users would want to share and edit their Microsoft Word or Powerpoint documents; our system currently handles only XPS documents. Thus deployment and study would be premature, as it would say more about how people react to minor interface issues, bugs, the limited tools available, and performance bottlenecks rather than its main design concepts. Our next steps are to make the sy stem more robust, to do some redesign as mentioned above, then de ploy and test it in actual use. Come Together is a fully working prototype available at http://grouplab.cpsc.ucalgary.ca/cookbook: it has all the features (and more!) described here. Full details concerning its implementation are in [16]. It runs on a Windows platform, and requires no special equipment or software except for a webcam. Our approach in this paper was to argue for the various design features of a place-based system supporting lightweight group meetings, as informed by the Locales Framework and by considering the successes (and weakness) of two systems: Instant Messengers and Community Bar. Ou r contribution is largely in design, i.e., how we created and e xploit notions such as Consoles (as a buddy list for people, things and places), media items, places, and the varying highly customizable views of all of them. Acknowledgements. Funding was partially provided by the NSERC/iCORE/SMART Chair in In teractive Technologies. Steve Voida contributed insights in the project X  X  early stages. 
