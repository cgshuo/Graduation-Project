 1. Introduction
In recent years, the recognition of online handwriting gained a renewed interest due to expansion of the applications of digitiz-ing tablets, digital pens, pen-based mobile phones and PDAs ( Jaeger et al., 2003 ; Liu et al., 2004 ; Plamondon and Srihari, 2000 ).
In offline Farsi/Arabic handwriting, efficient ideas were revealed ( Alirezaee et al., 2006 ; Dehghan et al., 2001 ; Khosravi and Kabir, 2009 ; Lorigo and Govindaraju, 2006 ). AlKhateeb et al. (2011) has presented a method to recognize offline handwritten Arabic cursive text in three stages: preprocessing , feature extraction and classifica-tion. This method has been employed hidden Markov models also re-ranking using structure-like features to improve the recognition rate.
A number of online Farsi/Arabic handwriting recognition systems have been proposed in Abed et al. (2010) and Sajedi et al. (2007) .
Sternby et al. (2009) have explored the application of a template matching scheme to the recognition of Arabic scripts with a novel algorithm for dynamically treating the diacritical marks. An elastic fuzzy pattern recognition method has been suggested in Halavati and Shouraki (2007) and tested on a set of 1250 words resulting in 78% and 96% correct recognition without and with a dictionary checking, respectively. In Baghshah et al. (2005) , the representation of handwriting parameters has been accomplished by fuzzy linguis-tic modeling. It has been shown that fuzzy linguistic terms provide robustness against handwriting variations. The accuracy rate of 90.3% has been achieved for this method on a database of Farsi isolated handwritten characters. Using structural features, Farsi characters have been divided into nine groups in Ghods and Kabir (2010) and a recognition rate of 92% has been achieved. An online Arabic handwriting recognition system based on visual coding and genetic algorithm has been developed in Kherallah et al. (2009) .A method to classify words and lines in an online handwritten document into one of the six major scripts: Arabic, Cyrillic, Devna-gari, Han, Hebrew, or Roman has been proposed in Namboodiri and Jain (2004) . 11 different spatial and temporal features were extracted from the strokes of th e words for classification. The recognitionofonlinehandwrittenArabicwordsoftheADAB-database has been studied in Ahmed and Azeem (2011) .Themain feature of the system was that delayed strokes were removed from theonlineword. Biadsy et al. (2011) has introduced an online Arabic handwriting recognition system. The recognition has been per-formed on the continuous word-part level and training on the letter level. It has handled delayed strokes by first detecting them and then integrating them into the word-part body. The implementation was based on hidden Markov models.

Decision fusion is a powerful approach to enhance the recogni-tion performance, especially in co mplex classification problems. It avoids weaknesses and emphasizes on the strengths of individual classifiers. A comprehensive overview of classifier fusion methods has been presented in Kuncheva (2004) .In Mercier et al. (2009) , combining the outputs of several postal address readers was employed to improve the mailing address recognition.
 In Farsi, some of the letters in a word are joined to each other.
These letters create a subword; for example,  X  X   X  X  are the subwords of the word  X  X   X  X . Generally, subwords in a word are not joined to each other. Online handwriting is formed by the combination of horizontal and vertical trajectories. For example, the are shown in Fig. 1 . The purpose of this work is to classify Farsi subwords using x ( t )and y ( t ) signals separately. We exploited the whole-subword HMM for each signal and fused the results of two classifiers. Ibrahim et al. (2010) have proposed to use horizontal and decomposing the pressure and veloc ityprofilesandthenextracting the underlying trajectories. The shape of a signature is mainly caused by the wrist and fingers movements; therefore, the movement of the wrist was represented by the horizontal trajectory while the finger movement was represented by the vertical trajectory.
 In this paper, Section 2 explains the basic definition of HMMs. presented in this section. Sections 3 and 4 describe the experi-mental setup and the classification results using horizontal and vertical signals, respectively. In Section 5 , the results are analyzed, and a discussion on errors is given. Finally, in Section 6 conclu-sions are drawn. 2. Hidden Markov model modeled system is supposed to be a Markov process with unknown parameters, and the problem is to determine the hidden parameters from the observable parameters ( Rabiner, 1989 ). HMM is a remark-ably powerful tool for modeling and classification of one-dimensional signals. HMM classifier has been used for offline, e.g. Pl  X  otz and Fink new method for writer adaptation in a handwritten word-spotting task has been presented in Rodriguez-Serrano et al. (2010) .This method exploits the fact that the semi-continuous HMM separates the word model parameters into a codebook of shapes and a set of word-specific parameters. The authors of Rodriguez-Serrano et al. (2010) have employed this property to derive the writer-specific word models by statistically adapting an initial universal codebook to each document.
 cation. If suitable features are extracted, a better model is learned for each subword. In this work, most of the proposed features for x ( t )and y ( t ) signals were different from  X  x  X  y X  signal features. 2.1.  X  X  X  X  X  features introduced different features for online handwriting. In Liwicki and Bunke (2009) , a feature selection strategy has been investi-gated to find out discriminant features on a set of 25 online and pseudo-offline features for online handwriting. In the present work, a set of features were selected for subword classification using  X  x  X  y  X  representation which are f 1 to f 10 . 2.2. x(t) (and y(t)) features
HMM Classifier for x(t)
HMM Classifier for y(t) are then fused for final decision. A schematic overview of the system is shown in Fig. 2 .

The following features were extracted from horizontal signal. f : x i : The normalized sample point of x . f : x i median  X  x  X  : The difference of x of sample point and median of the signal. f : V x  X  i  X  X  x i x i 1 : The difference of x s of two adjacent sample points. f : max  X  x  X  x i : The difference of maximum of the signal and x of sample point. f : D 1  X  i  X  X  sample point. f : D 2  X  i  X  X  sample point. f where D 1 and D 2 denote the first and the second derivatives. In the last feature, STFT represents the short time Fourier transform of x ( t ) signal where NC is the number of selected Fourier coefficients. It was supposed that FFT function created an
NFFT points before applying the transform. Average number of sample points of the subwords main bodies was 49 in our dataset (shown in Fig. 3 ). NFFT was set to 64, near this average number. There were three letters in a subword in average. The window size for the data frame was considered 1/(average number of letters) of the average number of sample points (1/3 49 ffi 16). STFT x i  X  1  X  was not taken into account in the features and the coefficients started from the second one, because the average of the signal was not a suitable feature. All features are evenly weighted. The same features for y ( t ) signal were extracted as f
According to Liwicki and Bunke (2009) , the best features contributing to this work are the cosine of the slope, the normal-ized y -position, and the sine of the curvature for  X  x  X  y X  signal. For x ( t )or y ( t ) signals, our experiment showed that STFT and the normalized position features were the most efficient for the correct recognition.

In a standard HMM, the hidden state produces a single observation. In this paper, we employed a dual HMM where the hidden state generated two observations: the x ( t ) and the y ( t ). Dual HMM was trained to represent two types of trajectories. The dual HMM has two sets of states. The first set of states models the poses for the x ( t ), and the other set of states models the poses for the y ( t ). Each state in the model is modeled with a Gaussian. The first HMM is defined as: l x  X  X  p x ; A x ; B x  X  X  1  X  where p x is the initial state probability distribution, A transition probability matrix and B x is the observation probability distribution.

The second HMM is defined as: l y  X  X  p y ; A y ; B y  X  X  2  X 
First, l y for y ( t ) was trained. Then, the means and covariances of the Gaussians were calculated from x ( t ) for l x . However, l x has the same transition matrix as l y . 3. Experiment setup
We examined the proposed approach on Farsi handwriting. As far as we know, the only available online Farsi dataset is TMU-Online-Farsi-Subwords, TMU-OFS, ( Razavi and Kabir, 2004 ). The proposed method was implemented using HMM classifiers on this dataset. There are 1000 most frequent Farsi subwords in TMU-OFS dataset. In this database, more than 10 samples have been collected for each subword from 124 native writers, raising the total samples to more than 10,000. We wanted to recognize the subwords of the TMU-OFS dataset based on their main body (first stroke). Therefore, the classes with the same main body were collected, and the new classes were formed based on the same main bodies (e.g. class  X  X   X  X ). HMM classifier requires adequate training samples for each model. Therefore, we selected those new classes with an adequate number of samples for the experiment. The number of the selected classes was 42. In Fig. 3 , the main bodies of 42 subwords and their representative samples are shown. The average number of samples for each selected class was 54. A holistic approach based on HMM was chosen as the recognition engine due to the limited number of subword classes in this approach, i.e. each subword in the lexicon is modeled by a separate left to right HMM. The main advantage of the scheme is that if a new subword is added, the recognition system can simply be updated by adding the new subword model to the system.

The initial values for the transition matrix ( X  A  X ) in HMM training were considered as presented in Eq. (3). These values ensure that the HMM training is left to right, and every state can transit to itself or adjacent state. 4. Experimental results
Beside the conventional  X  x  X  y  X  signal modeling, two models were considered for separated horizontal and vertical signals.
After recognition by horizontal and vertical data, product rule was employed for decision fusion.
 of x ( t ) and y ( t ), the accuracy rate of classification were examined.
In all following experiments, the training set and the test set are held out 70% and 30% of the dataset samples, respectively. We normalized the temporal length of the samples to 100 sample points. 4.1. Classification results using  X  X  X  X  X  representation
In the first experiment, the number of states and mixtures effect of  X  x  X  y  X  representation was investigated to achieve an optimized benchmark. Table 1 (a) demonstrates the number of states and mixtures effect in the classification by  X  x  X  y  X  features.
The efficient number of states and mixtures was 10 and 10, respectively. The training set accuracy is also presented to compare with the test set accuracy. 4.2. Classification results using y(t) signal
In the next experiment, the number of states and mixtures effect of y ( t ) signal was also investigated. In Table 1 (b), the accuracy rate of the classification using y ( t ) signal is shown. We selected the bolded row of Table 1 (b) as the most efficient condition.

The coefficients of the features mentioned in Section 2.2 were optimized. The effect of NC is given in Table 1 (c). If NC is 10, there are 16 features for every sample point of y ( t ) data. The results for different weights of the first and the second derivative operators ( D 1 and D 2) are presented in Table 1 (d). The best results are shown in bold. 4.3. Classification results using x(t) signal
The subword classifier specifications using y ( t ) signal can be generalized to x ( t ) signal. Therefore, the efficient conditions were also considered for the x ( t ) signal features. The achieved accuracy of the test and training sets were 64.1% and 77.8%, respectively, for x ( t ) signal. 4.4. Fusion of classification results for x(t) and y(t) representations
Combining classifiers is an approach to improve the recogni-tion performance ( Ho et al., 1994 ; Verma et al., 2001 ). In this work, two models were trained for each subword. One model was for x ( t ) signal and the other for y ( t ) signal. The HMMs with the highest accuracy rate for x ( t ) and y ( t ) classifiers were chosen to combine. For each test sample, two sets of 42 scores, one for x ( t ) and the other for y ( t ), were calculated. These scores were determined by logarithm-likelihood of that sample using contin-uous HMM. The product rule was applied after normalizing each set of scores between 0 and 1, and the class with the highest score was chosen as the winner.

As it is shown in Table 2 , the achieved subword classification accuracy was 87.5% for the test set. Modified product ( Alkoot and
Kittler, 2002 ) can be used as well for the classifier outputs that fall below a threshold value. These outputs are replaced by the threshold value. In our clean dataset, no change was shown in the results using modified product. 5. Discussion details for the three classifiers and the fusion. The results are presented in precision, recall and F-Measure. Precision is a measure of exactness or quality, whereas recall can be seen as a measure of completeness or quantity. F-Measure is a measure that combines precision and recall. We examined the results of fusion-based method for those classes with F-Measure rate below 60%. These classes are C21, C23, C27, C29, and C34 highlighted in
Table 3 (d). For error analysis, the recognition results of these classes for the test samples of each class were investigated. Most of the errors were occurred because of the physical similarity between the main bodies of some subwords. Therefore, if hand-writing does not reflect the small but significant differences between these subwords, the mistakes may happen. For example, some of the test samples of C21 were wrongly recognized as C3.
Also some of the test samples of the classes 27, 29, and 34 were wrongly recognized as the classes 23, 23, and 2, respectively. The physical (and natural) similarity of these classes can be compared in Table 4 . Furthermore, some classes (e.g. C27 and C34) have plain x ( t ) or/and y ( t ) signals and information of their signals are weak. Therefore, the recognition rate becomes extraordinarily low in this subset of classes. Table 5 shows x ( t ) and y ( t ) plots of C27 and C34 samples. x ( t ) of C27-sample and x ( t ) and y ( t ) of C34-sample are plain signals. One sample of C24 and its plots, as an example of an appropriate class, can be observed in Table 5 for comparison. Information of its signals is strong, and the recogni-tion rate is high in this class. In C23, F-Measure is low in spite of fair recall rate because of low precision. This low precision means that the system returned more irrelevant results than relevant in this class. The irrelevant results were mostly from C27 and C29 test samples.

The recognition rate diagram of 42 subwords classification than  X  x  X  y  X  signal, e.g. C2, C11 and C15 classes. The superiority of the proposed method in the most classes is shown in Fig. 4 (b).
This paper is one of the first researches that the data of  X  x  X  and  X  y  X  axes of online handwriting is used for recognition. The type of x ( t ) and y ( t ) features was considered the same in this work. However, different features can be extracted from these two signals because of natural differences of them. Speed and pressure of the pen along the horizontal and vertical trajectories have been used in Ibrahim et al. ( 2010) for online signature verification. Similarities and differences in speed and pressure features have been exploited for the verification. Compared with the Ibrahim et al. (2010) , the pen pressure data have not been used in this study. Because a person can write a word with different pen pressures, and this matter is not important in recognition.
Processing time of the processes of the traditional  X  x  X  y  X  method and the proposed method are shown in Table 6 using
MATLAB 7.6.0 software and processor 2.1 GHz. Speed factor of the some applications, where the recognition delay is not crucial, the proposed fusion method is applicable. 6. Conclusion zontal and vertical signals is beneficial for online handwriting recognition. Taking advantage of cooperation between x ( t ) and y ( t ) classifiers yielded better overall performance than  X  x  X  y  X  classifier in our dataset. However, for very few classes where decomposing  X  x  X  y  X  yields a highly plain x ( t )or y ( t ) signals, the recognition rate becomes exceedingly low. Selecting more appro-priate features for separated x ( t ) and y ( t ) signals can improve the accuracy. We anticipate that the proposed method can be applied to other languages as well, optimistically.
 References
