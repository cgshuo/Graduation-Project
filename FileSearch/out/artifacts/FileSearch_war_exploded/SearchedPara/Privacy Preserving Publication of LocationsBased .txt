 Due to the rapid development of location sensing technology such as GPS, WiFi, GSM and so on, huge amount of location data through GPS and mobile devices are pro-duced every day. The flood of location dat a provides the numer ous opportunities for data mining applications and geo-social networking applications. For example, mining the trajectories of floating car data (FCD) in a city could help predict the traffic conges-tion and improve urban planning. For individual driver, we can analyze his/her driving behavior to improve his/her profit. Moreover, many popular mobile device applications are based on locations such as FourSquare 1 , Google Latitude 2 , etc .

However, exposing location data of individuals could cause serious risk of personal privacy. For example, Buchin et al. [1] provide an algorithm to find the commuting pattern for an individual by clustering his/her daily trajectories. With some extra in-formation such as timestamps, we can easily identify his/her hom e and working place. Another real world example about the risk of revealing location information in social networking application is that thieves pla nned home invasions according to user X  X  loca-tion information and his/her planned activity published in Facebook 3 .

The goals of data mining and privacy prot ection are often conflicting with each other and can not be satisfied simultaneously. On the one hand, we want to mine meaningful results from the dataset which requires the dataset to be precise. On the other hand, in order to protect privacy, we usually need to modify the original dataset. There are two widely adopted ways for modifying location data:  X  cloaking, which hides a user X  X  location in a larger region.  X  perturbation, which is accomplished by tra nsforming one original value to another
A widely used privacy principle for cloaking is k -anonymity. A dataset is said to satisfy k-anonymity [14] [13] if each reco rd is indistinguishable from at least k  X  1 other records with respect to certain identifying attributes. In the context of location cloaking, k-anonymity guarantees that given a query, an attack based on the query location cannot identify the query source with probability larger than 1 /k among other k  X  1 users. The location anonymizer removes the ID of the user and transforms his location by a k -anonymizing spatial region ( k -ASR or ASR), which is an area that encloses the user that issued the query, and at least k  X  1 other users [7]. The cloaking based on k -anonymity has the following shortcomings: 1. The location point is cloaked to a region. This causes trouble for point based data 2. The result of cloaking based on k -anonymity could be a very large region even for 3. k -anonymity only protects the anonymity of the users, but may in fact disclose the
Perturbation [11] [15] has a long history in statistical disclosure control due to its simplicity, efficiency and ability to preserve statistical information. The method proposed in this paper for privacy preserving data mining of location data falls in the category of perturbation. Possible transformation functions include scaling, rotating, translation, and their combinations [8]. All previous works on perturbation used the same transformation function for all points. This is not reasonable for nonuniform dis-tributed points (almost all real life location data are nonuniform distribution). For ex-ample, one way is to perturb each point p by randomly moving it to another point p inside a disk with radius r and center p . In this way, if the distance between two points is less than 2 r , after perturbation, those two points could change topological relationship (left point becomes right point and right point becomes left point). This could cause se-rious problem for point based data mining algorithms since the results of most of those algorithms depend on the relative topological relationships.
Delaunay triangulation has been widely used in computer graphics, GIS, motion planning and so on. The Delaunay triangulation of a discrete point set P corresponds to the dual graph of the Voronoi diagram for P [3]. The Voronoi diagram of n points is the partition of plane into n subdivisions (called cells) such that each cell contains one point (called site) and the closest site for all point in one cell is the site in that cell. The relationship between Delaunay triangulation and Voronoi diagram is shown in Fig-ure 1: there is an edge in Delaunay triangulation between two sites if and only if the two cells corresponding to those two sites have common edge in Voronoi diagram (in other words, two cells are neighbors). Since the Voronoi diagram captures the topological relationships of points, the Delaunay tria ngulation also presents the neighborhood re-lationships of points. Intuitively, if we can keep the Delaunay triangulation unchanged after perturbation, the results of data mining algorithms based on neighborhood rela-tionships of points will not change or have a v ery small change. That is the key idea for our perturbation method. On the other hand, we want to maximize the size of the perturbation region, i.e. the uncertainty of the user X  X  exact location, for maximum pri-vacy protection given the constraint of maintaining Delaunay triangulation. The formal definition of the problem we want to solve is as follows: Problem 1. Given a set of n points S = { p 1 ,p 2 ,...,p n } , we want to compute a con-tinuous region R i (perturbation region) as large as possible for each point such that for any point p i  X  R i , the topology structure of the Delaunay triangulation of the new point set S = { p 1 ,p 2 ,...,p n } , denoted as DT ( S ) , is the same as that of the original point set S , denoted as DT ( S ) .Weuse DT ( S )  X  DT ( S ) to denote the topology structure of DT ( S ) is the same as the topology structure of DT ( S ) .

The contributions of our paper are three-fold: 1. We present a novel perturbation method that guarantees the Delaunay triangula-2. In our method, the perturbation region for all points are not uniform. Each point has 3. Since our method is point perturbation, it can be used in any point based data min-
The rest of this paper is organized as follows. Section 2 presents the algorithms of our perturbation method and the analysis of the algorithms. Section 3 covers comprehensive experiment evaluations. Finally, section 4 c oncludes and points out future directions for research. In this section, we explain how to compute the perturbation area R i for each point p i and how to pertubate p i to p i . First we solve Problem 1 for the simple case of four points in section 2.1 and then give the solution for n points case in section 2.2. In section 2.3, we show how to compute p i based on R i . 2.1 A Simple Case: Four Points The reason why we choose four points is that four points is the simplest case that could have diagonal flip 4 . The analysis of n&gt; 4 cases are based on the analysis of the simplest case.

Suppose we only have four points S = { p i ,p j ,p k ,p l } and they are in convex po-sition. Without loss of generality, we assume p i p j is the edge (diagonal) of Delau-nay triangulation (see figure 2(a)). Now the problem is to find a value r such that if where S = { p i ,p j ,p k ,p l } and d ( .,. ) is the Euclidean distance between two points. Note the continuous region R i for each point p i is the disk with the center p i and radius r .

In order to let DT ( S )  X  DT ( S ) , we need to prevent the diagonal flip case (see fig-ure 2). That means we need to compute the largest r such that there is no diagonal flip (or to compute the smallest r that causes diagonal flip). Ther efore, for two adjacent tri-points cocircular. This is equivalent to compute the circle that minimizes the maximum distance to the four points, or to compute the annulus of minimum width containing the points. It has been shown [5] [12], that the annulus of minimum width containing a set of points has two points on the inner circle and two points on the outer circle, interlacing angle-wise as seen from the center of the annulus (see figure 3). Therefore, of r can be computed in O (1) time. 2.2 n Points For n points set S , there is simple solution based on the above algorithm. First we can compute the DT ( S ) . For each pair of adjacent triangl e faces, we compute one radius as above such that no diagonal flip happens if four points are perturbated within the circle with that radius. Then for each point, there will be several radii. After computing all radii for all pairs of ad jacent triangle faces, we get the smallest radius r . Since this is the smallest radius among all radii, no diagona l flip happens if all points are perturbated within the circle with radius r . In this way, all points have the uniform perturbation radius. But actually, except for those four points which produces the smallest radius r , all other points could be perturbated in a larger area. Notice for a point p  X  S with m incident edges in DT ( S ) , there are at most 2 m ways such that p is a vertex of one pair of adjacent triangle faces, which means there are at most 2 m radii for p . We can get the smallest radius from those 2 m radii for the radius of p . In this way, we can still guarantee there is no diagonal flip.

Furthermore, we can improve the perturb ation area for each point because in above analysis, we assume the worst case scenario. For example, in Figure 4, suppose the inner circle is C 1 and the outer circle is C 3 for the minimum width annulus contain-ing four points p i ,p j ,p k ,p l . Let the median axis of the annulus be the circle C 2 .Let p ,p j ,p k ,p l move to p i ,p j ,p k ,p l respectively, there is diagonal flip. In other words, p ,p j can not move out of C 2 and p k ,p l can not move into C 2 . Now if there is another disk D r 2 k for point p k where r 2 &gt;r 1 which is produced by other pair of adjacent tri-angles, then we know p k can move inside D r 2 k \ D 2 = D r 2 k  X  D 2 such that there is no diagonal flip (see Figure 5), where D 2 is the disk corresponding to C 2 and D 2 is the area outside of D 2 . Similarly, we can compute the larger perturbation area for p i ,p j ,p l . side of D 2 . Therefore we need to use D r 3 i  X  D 2 instead of D r 3 i  X  D 2 where r 3 is the larger radius than r 1 for p i which is produced by other pair o f adjacent triangles related to p i .

For a point p ,ifthereare m cocentric disks with center p and radii r 1 ,r 2 ,...,r m and their corresponding media axis disks are D 1 ,D 2 ,...,D m , suppose r 1  X  r 2  X  ...  X  r m and the largest disk with radius r m and center p is D , then the perturbation area R for p is If p  X  D i ,thenweuse D i in above formula, otherwise D i is used. See Figure 6 for example. The perturbation area is much larger than the smallest disk with radius R . The algorithm for computing R i is shown in Algorithm 1.
 Algorithm 1. Algorithm for computing R i Theorem 1. For any point p , the perturbation area R is larger than 0 .
 Proof. Since R = D  X  D 1 ( or D 1 )  X  D 2 ( or D 2 )  X  ...  X  D m ( or D m ) ( i =1 ,...,m ), and p  X  D and p  X  D i ( or D i ) , then at least p  X  R . Actually, R at least includes the smallest disk with radius r 1 .
 Theorem 2. The perturbation areas R 1 ,R 2 ,...,R n for a set of n points S = { p 1 ,p 2 ,...,p n } can be computed in O ( n 2 ) time.
 Proof. The Delaunay triangulation of S can be computed in O ( n log n ) time [3]. For each pair of adjacent faces in DT ( S ) , the perturbation disks and corresponding one medial axis disk for four points can be computed in O (1) time. Since there are O ( n ) pairs of adjacent faces, there are O ( n ) perturbation disks and O ( n ) medial axis disks. Each R i is one face of arrangement of O ( n ) perturbation disks and O ( n ) medial axis disks. The arrangement for O ( n ) disks can be computed in O ( n log n + k ) expected time by using randomized incremental algorithm [6], where k is the number of intersection points in the arrangement. In worst case, k = O ( n 2 ) . But in reality, k could be much smaller (even linear, see Figure 11(b)).

Figure 7 shows the perturbation area for 12 points. Figure 8 shows the Delaunay triangulations for original 12 points (solid lines) and for perturbated 12 points (dashed lines).
 2.3 Point Perturbation After get perturbation region R i , we need to perturbate p i inside R i for publication. In order to achieve maximum privacy protection, we perturbate p i to the boundary of R i as follows: choose a random angle  X   X  [0 , 2  X  ] , shoot a ray with angle  X  and find the intersection point p i of this ray with boundary of R i ,andlet p i be the perturbated point (see Figure 9). 3.1 Data Set We use three datasets from University of Eastern Finland X  X  clustering datasets 5 :Flame ( 240 points), R15 ( 600 points) and Jain ( 373 points) for testing our method X  s utility on KNN, K-means and DBSCAN respectively. The reason we choose those three algo-rithms is that KNN is the most popular neighborhood querying algorithm in database, K-means and DBSCAN are two popular clustering algorithms in data mining. The other important reason is that the results of those three algorithms all depends on the neigh-borhood relationship between points. We also generate 29 synthetic datasets with the number of points ranging from 100 to 100000 for testing the performance of our per-turbation algorithm. 3.2 Utility Results The definition of utility varies for different privacy preserving data mining algorithms. In this paper, we make use of the two well-known criteria, i.e., the precision and recall rates [10]. We will give the definitions of pr ecision and recall for privacy preserving KNN, K-means, DBSCAN in the following three subsections and also give the experi-mental results respectively.
 Utility of Privacy Preserving KNN. For KNN, the precision and recall rate is defined as follows: where Q ( p i ) is the set of points that are the K nearest neighbors of p i , p i is the per-turbated point of p i .Note Precision KNN = Recall KNN since || Q ( p i ) || = || Q ( p i ) || for fixed K . Therefore we only report precision for KNN. We perform 100 rounds of perturbations and query KNN on each point and get the average value of precision: where n is the number of query times (in this paper, we perform query on each point, therefore n = 240 for Flame dataset) and m is the number of rounds of pertur-bation ( m = 100 in this paper), p j i is the perturbated point of p i after the j th round of perturbation. Therefore AP KNN is the average precision rate per query. We test Precision KNN for K =1 ,..., 100 . For comparison we also perform the uniform purturbation with uniform distance r max where Figure 10 shows the precision rate of two perturbation methods for KNN algorithm. We can see precision rate based on Delaunay triangulation AP DT KNN is always better than that of uniform perturbation AP Uniform KNN .When K&lt; 10 , AP DT KNN is 20 percent smaller. AP DT KNN  X  AP Uniform KNN =3 . 93% when K = 100 .Alsowhen K become larger, both AP Uniform KNN and AP DT KNN seem to converge. This is reasonable since the K nearest neighbors may only change for the far away points (for example, the K th nearest point) no matter how the points are perturbated.
 Utility of Privacy Preserving K-means. For K-means, we adopt B-CUBED algorithm to compute the precision and recall rate o f each point for clustering results: where p i  X  C i ,p i  X  C i and p i is the perturbated point of p i . 100 rounds of pertur-bations are performed. Therefore we can ge t the average value of precision and recall rates per point: where n is the number of points and m is the number of rounds of perturbation, p i  X  C ,p j i  X  C j i and p j i is the perturbated point of p i after the j th round of perturbation. In this paper, we use R15 dataset for K-means algorithms. Since we already know there are 15 clusters, we set k =15 and get the results as shown in Table 1.

We can see precision and recall rate of privacy preserving 15 -means for DT based perturbation are better than those for uni form perturbation with uniform radius r max . Since the precision and recall r ate for uniform perturbation a re already very high, it X  X  very difficult to achieve higher precision and recall rate for DT based perturbation. Utility of Privacy Preserving DBSCAN. For DBSCAN, the utility Precision DBSCAN is defined as the same as Precision K  X  means since they are both clustering algorithms. The difference is that we don X  X  need to set the number of cluster K in DBSCAN. For Jain dataset, there are two clusters for original dataset. DBSCAN requires two parame-ters:  X  and the minimum number of points required to form a cluster ( minPts ). In our experiments, we set  X  =2 . 4 and minPts =20 such that DBSCAN algorithm produces two clusters over original Jain dataset. The results for the utility of uniform perturbation and DT based perturbation are shown in Table 2.

We can see the points in each cluster keep exactly same after DT based perturbation while that could change a lot after uniform perturbation with uniform radius r max . 3.3 Privacy We define the privacy for DT based perturbation as follows: P = m j =1 n i =1 R R i means the perturbation area for i th point after j th round of perturbation. Therefore P means the average perturbation area for one point. However, P depends on the whole area of point sets. In order to cancel out this effect, we define the privacy ratio P r as follows: P r = P/Area ( CH ( S )) where CH ( S ) is the convex hull of point set S and Area ( CH ( S )) is the area of the convex hull of S . The experimental results of privacy for three datasets R 15 ,Jain,Flame are listed in Table 3.

We can see the average perturbation areas for Jain and Flame datasets are similar while the average perturbation area for R15 dataset are much smaller which could be caused by the higher average neighboring poi nt density for each point in R15 dataset. The other possible reason is there could be m any degenerate cases in R15 dataset such that many four points groups are cocircular (or almost cocircular). 3.4 Performance of Our Perturbation Algorithm To test the performance of our perturbation algorithm, the 29 synthetic datasets are used with various number of points from 100 to 100000 . We perform all experiments on our Thinkpad laptop with the following configurations: Ubuntu 13.04 operating system, 2 Gbyte of memory, 2.6GHz intel core i3 CPU. Since our perturbation algorithm mainly consists of two parts: computing Delaunay t riangulation and computing the arrange-ment of perturbation areas, we give the results of running time for both parts and the total running time as well.

Figure 11(a) shows the running time for Delaunay triangulation. It almost fits the theoretical bound of O ( n log n ) running time.

Figure 11(b) shows the running time for com puting the arrangement of perturbation areas. Although, theoretically the running time is O ( n 2 ) for the worst case, in practice, the running time is almost linear.

Figure 11(c) shows the total running time. Since the computation of perturbation areas is the dominant factor (for example, for 100000 points dataset, computing Delau-nay triangulation only takes only around 2 seconds while computing the arrangement of perturbation areas takes 4690 seconds), the total running time is also linear. Therefore, in practice, our algorithm is very efficient. In this paper, we present a novel method to address the problem of location privacy. Our method achieves both high assurance privacy and good performance. Specifically, our method perturbates each point distinctively according to its own environment instead of uniform perturbation. In this way, the attackers are more difficult to guess original loca-tion. Furthermore our perturbation method gua rantees that the Delaunay triangulation of point set does not change, which means we can guarantee the utility of privacy pre-serving data ming algorithms. We also develop a privacy model to analyze the degree of privacy protection and evaluate the utilitie s of our approach through three popular data mining algorithms. Extensive experiments show our method is effective and efficient for location based privacy preserving data mining.

Several promising directions for future work exist. First of all, the perturbation region or the perturbation distance for each point c ould be larger. We need to prove it theoret-ically and find the optimal values in terms of perturbation distance and area. Also we can apply our method on other data mining algorithms to see whether our method is a universal method for location based privacy preserving data mining algorithms. This is significant since many current methods are only good for one kind of data mining algorithm.

