 School of Informatics, University of Edinburgh, UK The British University in Dubai, UAE
As more and more Arabic textual information becomes availab le through the Web in homes tools to process the relevant information. Named Entity Rec ognition (NER) is an Information
Extraction task that has become an integral part of many othe r Natural Language Processing (NLP) tasks, such as Machine Translation and Information Re trieval. Arabic NER has begun of the Semitic languages family, make dealing with NER a chal lenge. The performance of an Arabic NER component affects the overall performance of t he NLP system in a positive made in Arabic NER research. The importance of the NER task is demonstrated, the main characteristics of the Arabic language are highlighted, an d the aspects of standardization in are presented and the approaches used in Arabic NER field are e xplained. The features of
In addition, a review of the state of the art of Arabic NER rese arch is discussed. Finally, we present our conclusions. Throughout the presentation, i llustrative examples are used for clarification. 1. Introduction In the 1990s, in particular at the Message Understanding Con ferences, Named Entity
Recognition (NER) was first introduced as an information ext raction task and deemed important by the research community. In NER, the expression  X  X amed entity X  (NE) covers not only proper names but also includes temporal expr essions and some nu-merical expressions such as monetary amounts and other type s of units. Proper names include three classic specializations (referred to as types or classes in the literature): persons, locations, and organizations. For example, in the sentence Ahmed Khaled, CEO of Arabisoft Company in Egypt, Ahmed Khaled, Arabisoft Comp any , and Egypt would be identified as references to a person, an organization, and a l ocation, respectively. A type can in turn be divided into subtypes (Sekine, Sudo, and Nobat a 2002), possibly forming an entity type hierarchy (Pappu 2009). For example, locatio ns might be divided into multiple fine-grained locations, such as city, state, and co untry. For specific needs other types might be introduced, such as e-mail address, phone num ber, book ISBN, filename, and so on.
 icance as a dominant language that is used internationally f or communications, science, information technology, business, seafaring, aviation, e ntertainment, and diplomacy.
This has limited the diversity of text genre and domain facto rs from other languages that are usually considered when developing NER for these fie lds. For instance, as most scientific studies are conducted in English in almost al l Arabic-speaking countries, there is no urgency to investigate Arabic NER for areas such a s bioinformatics, drug, or chemical named entities.
 classify named entities into predefined classes or types in o pen-domain and unstruc-tured texts, such as newspaper articles (Nadeau and Sekine 2 007). One obvious reason for the importance of named entities is their pervasiveness , which is evidenced by the high frequency, including occurrence and co-occurrence, o f named entities in corpora (cf. Saravanan et al. 2012). Arabic is a language of rich morp hology and syntax. Its characteristics and peculiarities make dealing with it a ch allenge (Farghaly and Shaalan 2009). The last decade has shown a growing interest in addres sing challenges that underlie the development of a productive and robust Arabic N ER system (Al-Jumaily et al. 2012; Oudah and Shaalan 2012).
 and Sekine (2007) presents background on much of the work on N ER for a variety of languages and myriad machine learning (ML) techniques. To t he best of our knowl-edge, Arabic NER and classification have not yet been surveye d extensively, which has motivated us to conduct this survey.
 relevant for working with Arabic NER. Section 3 presents som e aspects of the Arabic language that will allow the reader to appreciate the difficu lties associated with Arabic
NER. Section 4 briefly introduces the standard tag sets commo nly used to annotate named entities. Section 5 describes the Arabic NER language -specific resources that are involved in the NER task. Section 6 gives a brief description of approaches used in
Arabic NER. Section 7 discusses feature selection, which is a critical factor for achieving better performance for NER systems. Section 8 presents vari ous tools that have been used in building Arabic NER systems and Section 9 illustrate s evaluation techniques for NER systems. Section 10 presents the state-of-the-art i n Arabic NER research. Finally, the concluding remarks are presented in Section 11. 2. Background 2.1 Entity Tracking
The task of identifying named entities must be distinguishe d from entity tracking, which involves identifying mentions, relations, and the co -references that may exist between them. In this regard, a NE may contain only one mentio n such as a person name (e.g., Mohammed Morsi ), but when a pronoun is used to refer to the same person, it is considered another mention of that entity. Moreover, a nominal (e.g., president ) can also be used as a mention to refer to the same NE (cf. Zitouni et al. 2005). It should be noted that the richness of Arabic morphology allows two ment ions to appear in one 470 group of mentions refers to the same entity. For example, in t he sentence The [Egyptian
President], [Mohammad Morsi], as the [chair of the 15th Non-Aligned Movement summit] declared opening of the 16th summit , there are three mentions that refer to the same person. Mentions also include aliases such as Abu Ammar , which refers to the same entity as Yasser Arafat .
 person, an organization, a location, or a specific time. Rela tionships between NEs can be binary, such as person-affiliation or organization-locati on, or may involve more entities; for example, [a person] is in [a place] at [a specific time] . The entity relation is usually expressed in a predicate form and is used to establish relati ons such as whether two persons were working at the same organization at the same tim e (Ben Hamadou, Odile, and H  X ela 2010a).
 unit (i.e., real world NE, mention, co-reference, or relati on), because mention detec-tion, co-reference resolution, and relation extraction ar e considered more difficult than the traditional NER task due to the complexity incurred by ex tracting non-named mentions, grouping mentions into entities, and deriving se mantic relations among entities. 2.2 The Broader Role of NER
The implications of research in NER for NLP more generally ar e too obvious to enumerate. Examples of applications for which NER is useful are shown in this section.
 documents from a set of data according to an input query. A stu dy by Guo et al. (2009) has indicated that about 71% of the queries in search e ngines contain NEs.
Information Retrieval can benefit from NER in two phases (Ben ajiba, Diab, and Rosso 2009a): firstly, recognizing the NEs within the query; and se condly, recognizing the NEs within the searched documents, and then extracting the rele vant documents taking into account their classified NEs and how they are related to the qu ery. For example, the sponding to the word island; the correct classification will facilitate extracting relevant documents.
 sophisticated results. A Question Answering system takes q uestions as input and gives in return concise and precise answers (Ezzeldin and Shaheen 2012). The NER task can be utilized in the phase of analyzing the question so as to rec ognize the NEs within the question that will help later in identifying the relevant do cuments and constructing the answer from relevant passages (Moll  X a, van Zaanen, and Smit h 2006; Badawy, Shaheen, and Hamadene 2011; Lahsen, Bouzoubaa, and Rosso 2012). For i nstance, the NE or as a location name according to the context. Hence, the cor rect classification for the NE will help to target the relevant group of documents that an swer the input query.
Moreover, Question Answering systems could benefit substan tially from NER, because the answer to many factoid questions involve NEs (Trigui et a l. 2012) (e.g., answers (Brini et al. 2009).
 one natural language into another. NEs need special attenti on in order to decide which parts of an NE should be meaning-translated and which p arts should be phoneme-transliterated (Al-Onaizan and Knight 2002b; Has san and Sorensen 2005).
Usually this depends on the type of the NE (Chen, Yang, and Lin 2003). For example, personal names tend to be transliterated. 1 For a location name, the name part and the category part (e.g., mountains ) are usually transliterated and translated, respectively .
Organization names are completely different in that most of the constituents are translated (e.g., United Nations ). The quality of the NER system plays a significant role in determining the overall quality of the machine trans lation system, and hence, NE translation is critical for most multilingual app lication systems (Babych and Hartley 2003; Ben Hamadou, Odile, and H  X ela 2010b; Stein berger 2012). In addition, NE translation is very important for other applic ations such as cross-lingual information retrieval for extracting newly introduced NEs from the Web and news documents and regularly updating the list of NE translation pairs (Hassan, Fahmy, and Hassan 2007).
 sulting clusters based on the ratio of entities each cluster contains (Benajiba, Diab, and Rosso 2009a). This enhances the process of analyzing the nature of each cluster and also improves the clustering approach in terms of select ed features. For example, time expressions along with location NEs can be utilized as f actors that will give an indication of when and where the events mentioned in a cluste r of documents have occurred.
 now play significant roles in our lives. They provide directi ons, information about nearby places possibly linked with other on-line resources , and traffic conditions. In these systems, points of interest (also known as waypoints) are NEs that are stored in a database with their geographic coordinates (Kim, Kim, and Cho 2012). They refer to areas of interest that are typically of significance to, amon g others, tourists, visitors, and rescuers, allowing the location of places such as parkin g areas, shops, hospitals, restaurants, universities, schools, landmarks, and so on. 3. Linguistic Issues and Challenges
Arabic is a highly inflected language, with a rich morphology and complex syn-tax (Al-Sughaiyer and Al-Kharashi 2004; Ryding 2005). Curr ent Arabic NLP research efforts cannot cope with the massive growth of Arabic data on the Internet and the heightened need for accurate and robust processing tool s (Abdul-Mageed, Diab, and Korayem 2011). NER is considered one of the building bloc ks of Arabic NLP tools and applications. Though significant progress has bee n achieved in Arabic
NER research in the last decade, the task remains challengin g due to the following 472 features of the Arabic language; opportunities for improve d performance are still available. 3.1 Arabic Script
The Arabic language relies on the Arabic script, which is als o used in writing other languages such as Persian, Urdu, Kurdish, and Pashto (Habas h 2010). Some researchers have developed Arabic computational tools and resources ba sed on Romanized or transliterated 3 Arabic text rather than genuine Arabic script (e.g., Buckwa lter X  X 
Arabic Morphological Analyzer [Buckwalter 2002], the CJK l exical resources [Halpern 2009], and Arabic NER systems [Bidhend, Minaei-Bidgoli, an d Jouzi 2012; Zayed and El-Beltagy 2012]), either because these formats are mor e familiar to non-native
Arabic speakers or because of limitations in the Arabic scri pt encoding imposed by the development environment. This approach should disappe ar over time with the rapidly growing quantity of Arabic script-based Web conten t and new technologies that support multiple encodings. 3.2 Language in Use
With regard to language usage, Arabic can be classified into t hree types (Elgibali 2005): Classical Arabic (CA), Modern Standard Arabic (MSA) , and Colloquial Arabic Dialects (Abdel Monem et al. 2008; Habash 2010; Korayem, Cra ndall, and Abdul-
Mageed 2012). As far as Arabic NE is concerned, it is importan t to know the difference between these various uses of the language. CA is the formal v ersion that has been used continuously for over 1,500 years as the language of Isl am, used by Muslims in their daily prayers. Most Arabic religious texts are writ ten in CA. In this context, person name recognition is of particular interest in order t o identify and verify the correctness of citations (Zaraket and Makhlouta 2012) ( a sequence of hadith narrators referencing each other who provide narrations re lated to the Prophet
Mohammed based on known truthful and untruthful relaters). The importance of verification is that the authenticity of a hadith needs to be e stablished before his narration is used in jurisprudence, and this depends on the c redibility of the narrators.
Furthermore, many historical Arabic manuscripts are handw ritten in CA (or Arabic calligraphy); when they are digitized and converted to text , Arabic NE will become important.
 modern writers, and education. MSA is one of the six official l anguages of the United
Nations used in meetings and official UN documents. Most Arab ic NLP, including NER research projects, is focused on MSA. The main difference be tween MSA and CA lies in the vocabulary, including NEs, and the orthography of con ventional written Arabic (Farber et al. 2008): MSA does not require the inclusion of sh ort vowels. Moreover, MSA reflects the needs of contemporary expression, whereas CA re flects the needs of older styles. For example, the Arabic NEs in rare documents and old manuscripts that refer to places, jobs, or organizations are different from the cor responding NEs in modern documents.
 munication; it is not taught in schools due to its irregulari ty. Unlike the widespread use of MSA across all Arab countries, colloquial Arabic is a r egional variant that differs not only among Arab countries, but also across regio ns in the same country. Written Colloquial Arabic is presently used mainly in socia l media communication.
For comparison, a person name in either CA or MSA could be expr essed in Arabic universal machine translation pre-processing approach th at has the ability to produce
MSA paraphrases of dialectal input. In this way, available M SA tools can also be used to process Colloquial Arabic text, as most of the Arabic NER s ystems are developed to support MSA. 3.3 Lack of Capitalization
Unlike languages like English that use the Latin script, whe re most NEs begin with a capital letter, capitalization is not a distinguishing or thographic feature of Arabic script for recognizing NEs such as proper names, acronyms, a nd abbreviations (Farber et al. 2008). The ambiguity caused by the absence of this feat ure is further increased by the fact that most Arabic proper nouns (NEs) are indisting uishable from forms that are common nouns and adjectives (non-NEs). Thus, an app roach relying only on looking up entries in proper noun dictionaries would not b e an appropriate way to tackle this problem, as ambiguous tokens/words that fall in this category are more likely to be used as non-proper nouns in text (Algahtani 2011). For example, an inflected verb ( he-supervised ), and a superlative ( the-most-honorable ) (Mesfar 2007).
An NE is usually found in a context, namely, with trigger and c ue words to the left and/or right of the NE. Therefore, it is common to resolve thi s type of ambiguity by analyzing the context surrounding the NE. However, this mig ht require deeper analysis whose literal meaning might be the falling of his head in grandfather/Jeddah . The denoting place of birth leads to the recognition of the following noun as a location name. 3.4 Agglutination
The agglutinative nature of Arabic results in many differen t patterns that create many lexical variations. Each word may consist of one or more prefi xes, a stem or root, and one or more suffixes in different combinations, resultin g in a very systematic but complicated morphology. Clitics, which in other languages such as English would be treated as separate words, agglutinate to words. Arabic has a set of clitics that are nation of both, as in  X  X  (Waw-Laam, and-for ). NER relies on the words forming the NE and the context in which it appears. Both the words and the con texts may appear in different inflected forms. In order to address data sparsene ss issues without requiring 474 massive training corpora, these bound morphemes should und ergo morphological pre-processing. One solution is to omit all the affixes and keep on ly the root morpheme (Grefenstette, Semmar, and Elkateb-Gara 2005; Farber et al . 2008; Alkharashi 2009). ( Egypt ) as a location name. Another solution is to perform text segm entation and insert a delimiter between constituent morphemes, thus pre venting loss of contextual information (Benajiba and Rosso 2007). This information is more convenient for NLP tasks that need to process these morphemes. As an example tha t shows an occur-its capital , and-capital-its), which is segmented into three parts X  X  c onjunction, and ( and capital its ). 3.5 Optional Short Vowels
Arabic text contains diacritics representing most vowels t hat affect the phonetic repre-sentation and give different meaning to the same lexical for m. version of Arabic is written without diacritics, creating a one-to-many, unvocalized-to-vocalized, ambiguity (Alkharashi 2009), which gives mutua lly incompatible morpho-logical analyses for the same surface form. As such, most Ara bic texts that appear in the media (whether in printed documents or digitized form at) are undiacritized.
This is comprehensible for native Arabic speakers, but not f or a computational sys-tem. The simplification made by ignoring such diacritics had led to structural and lexical types of ambiguity because different diacritics re present different meanings.
These ambiguities can only be resolved by contextual inform ation and an adequate refer to the country name Qatar (a location NE) if transliterated as qa ta r , the literal meaning of country (a trigger word for location NEs), or radius (a trigger word for measure NEs) if transliterated as qu tr , or the literal meaning of distill if transliterated as qa t  X  a r . Unfortunately, this solution might not work if the context ual information is itself ambiguous due to non-vocalization (Mesfar 2007). To consider another example, personal names). 3.6 Inherent Ambiguity in Named Entities Arabic, like other languages, faces the problem of ambiguit y between two or more and a location name, thereby giving rise to a conflict situati on, where the same NE is tagged as two different NE types. Heuristic techniques fo r resolving ambiguities by cross-recognizing NE types are suggested. One heuristic technique, proposed by
Shaalan and Raza (2009), uses heuristic rules for preferrin g one NE type over the other.
Another technique, proposed by Benajiba, Diab, and Rosso (2 008b), favors the NE type for which the classifier achieves the highest precision. 3.7 Lack of Uniformity in Writing Styles
Arabic has a high level of transcriptional ambiguity: An NE c an be transliterated in a multitude of ways (Shaalan and Raza 2007). This multiplicit y arises from both differ-ences among Arabic writers and ambiguous transcription sch emes (Halpern 2009). The lack of standardization is significant and leads to many vari ants of the same word that are spelled differently but still correspond to the same wor d with the same meaning, creating a many-to-one, variants-to-well-formed, ambigu ity. For example, transcribing (also known as  X  X rabizing X ) an NE such as the city of Washington into Arabic NE that Arabic has more speech sounds than Western European lan guages, which can ambiguously or erroneously lead to an NE having more variant s. One solution is to retain all versions of the name variants with a possibility o f linking them together.
Another solution is to normalize each occurrence of the vari ant to a canonical form (Pouliquen et al. 2005); this requires a mechanism (such as s tring distance calculation) for name variant matching between a name variant and its norm alized representation (Refaat and Madkour 2009; Steinberger 2012). 3.8 Systematic Spelling Mistakes
Typographic errors are frequently made by Arabic writers wi th regard to certain charac-ment about the characters, which often leads to orthographi cal confusion (El Kholy and
Habash 2010; Habash 2010; Al-Jumaily et al. 2012). The forme r category includes the character Ta-Marbuta (  X  ), literally  X  X ied Ta X , which is a special morphological mar ker typically marking a feminine ending; this is carelessly wri tten interchangeably with and Ta ( H ). The latter category includes the Hamza-Alif letter variants that are often reductively normalized by brute force replacement with a ba re Alif. Some computa-tional linguists avoid writing the Hamza (especially with s tem-initial Alifs), viewing this as a Hamza restoration problem that is part of the Arabic diacritization problem.
Islamic University in Jeddah ), which might be written with both typographical variants variant problem. It should be noted that not all systematic s pelling mistakes can be not this mistake is due to the transposition of the two charac ters @ ( Alif ) and  X  ( Lam ), shows another orthographic problem: Arabic  X  X un-on X  words , or free concatenation of words, when the word immediately preceding ends with a non -connector letter, the following phrase shows a fully concatenated person NE an d its surrounding con-prehensible by most readers but not by a computational syste m that needs to work on segmented words. 476 3.9 Lack of Resources
Large collections of tagged documents (corpora) as well as g azetteers (predefined lists of typed NEs) are excellent sources that we can rely upon when implementing and testing the performance of an Arabic NER system. For these li nguistic resources to be useful, they should include unbiased distribution and repr esentative numbers of NEs that do not suffer from sparseness. Unfortunately, the avai lable Arabic resources for
NER research often have limited capacity and/or coverage (A bouenour, Bouzoubaa, and Rosso 2010). Moreover, it is expensive to create or licen se these important Arabic
NER resources (Huang et al. 2004; Bies, DiPersio, and Maamou ri 2012). For these reasons, researchers often rely on their own corpora, which require human annotation and verification. Few of these corpora have been made freely a nd publicly available for research purposes (Benajiba, Rosso, and Bened  X  X  Ruiz 20 07; Benajiba and Rosso 2007; Mohit et al. 2012), whereas others are available but under li cense agreements (Strassel,
Mitchell, and Huang 2003; Mostefa et al. 2009). 4. Named Entity Tag Set
Tagging, also known as labeling, is the task of assigning a co ntextually appropriate tag (label) to every NE in the text. The sequence of words that is a nnotated with the same tag is considered a single multiword NE. The tag set used to tag NE s may differ according to user requirements. For example, Nezda et al. (2006) used an e xtended set of 18 different
NE classes. Mohit et al. (2012) X  X  research adopted a very flex ible scheme that allows annotators more freedom in defining entity types. In this res earch, entity types were not predetermined and category matches between annotators wer e determined by post hoc analysis.
 used to annotate Arabic linguistic resources in the field of N ER research. These tag sets may be used as a basis for annotating linguistic resources an d system outputs. considered as the initiator of the NER task. NEs are classifie d into three main tag ele-ments: ENAMEX (i.e., person name, location, and organizati on), NUMEX (i.e., money and percentage [numerical] expressions), and TIMEX (i.e., time and date expressions).
Each tag element is categorized via the TYPE attribute. Most researchers adopt this tag set. For example, a NER system producing MUC-style output mi ght tag the sentence illustrated in Table 1.
 an outcome of CoNLL2002 6 and CoNLL2003, four categories of NEs were defined: person name, location, organization, and miscellaneous. C oNLL follows the IOB format to tag chunks of text representing NEs in a data set (Be najiba, Rosso, and Bened  X  X  Ruiz 2007). The CoNLL annotations are formulate d as a word-based classification problem, where each word in the text is assign ed a tag, indicating whether it is the beginning (B) of a specific NE, inside (I) a sp ecific NE, or (O) outside any NE. IOB notation is used when NEs are not nested and theref ore do not overlap.
For example, a NER system producing CoNLL-style output migh t tag the sentence h /ENAMEX i Y X A g h ENAMEX TYPE=PERSON i  X  Q  X @  X   X  h /ENAMEX i  X K . @  X  X Q X   X  h ENAMEX TYPE=ORGANIZATION i
HP X   X  X  K@Q  X  Frankfurt B-LOC  X  X  X  @ said O @ Association B-ORG  X  X A J X  Industry I-ORG
H@PAJ  X  X @ Auto I-ORG  X   X  in O AJ KA X   X  @ Germany B-LOC  X   X   X A X   X  @  X A X  X @  X   X  h /GPE i  X A JJ .  X  h /GPE i h /PER i Germany said ) as illustrated in Table 2.

BIO format. It is used to identify the beginning, the inside, and the last tokens of multi-token chunks as well as unit-length chunks. Experimental re sults indicate that BILOU representation of text chunks significantly outperforms th e BIO format.
 mation Extraction have been developed as part of the ACE prog ram. According to the ACE 2003 tag elements, 7 four categories are defined: person name, facility, organization, and geographical and political entities (GP E). Later in ACE 2004 and 2005, two categories were added to this tag set: vehicles and weapons.
For example, a NER system producing ACE-style output might t ag the sentence as illustrated in Table 3. 478 5. Arabic Linguistic Resources The lack of digital linguistic resources creates a formidab le obstacle when it comes to
Arabic NLP in general and Arabic NER in particular. Investin g in these resources is justified because it would lead to many benefits such as reusab ility, broad coverage, and frequency and distributional information, as well as a way o f evaluating and comparing systems. Corpora and lexical resources are two main types of linguistic resources that are commonly used in NER. 5.1 Corpora The corpus needed for NER is a sufficiently large annotated co rpus where every
NE has a type assigned to it. An important characteristic of a reliable corpus is that it should be well balanced in terms of the NE type distrib ution. A corpus can be genre independent/specific; domain independent/specifi c: and consist of texts in one natural language (a monolingual corpus), two natural languages (a bilin-gual, parallel, or comparable corpus), or more natural lang uages (a multilingual or crosslingual corpus). In Hassan, Fahmy, and Hassan (2007), a general framework is proposed for extracting NE translation pairs from both co mparable and paral-lel corpora. Parallel corpora that are aligned on the senten ce level have been used to tag one corpus based on the tagged information in the other corpus such that they can complement and improve each other (Benajiba et al. 2 010; Burkett et al. 2010; Ma 2010). For example, Samy, Moreno, and Guirao X  X  (200 5) approach creates an NE aligned bilingual corpus that relies on the basic assum ption that, given a pair of sentences where each one is the translation of the oth er, and given that in one sentence one or more NE were detected, then the correspon ding aligned sen-tence should contain the same NE either translated or transl iterated. As described, the approach is very effective because it involves Arabic, w hich is a case-insensitive language, and Spanish, which does have orthographical diff erences between names and non-names.
 when they rely on publicly available data sets or corpora. Th e frequent use of these corpora in the research community makes them standard data s ets or corpora, serving as stable benchmark data for measuring ongoing progress and ra nking systems according to their annotation capability. Some NER corpora are availa ble to members of organiza-tions under paid license agreements, for example, ACE 8 (Strassel, Mitchell, and Huang 2003). Because they are not free, it is difficult for small res earch groups to access them.
However, contributors from the Arabic NLP research communi ty are striving to develop freely available Arabic NER corpora to alleviate this probl em and help other researchers to exploit these resources, for example, ANERcorp 9 (Benajiba, Rosso, and Bened  X  X  Ruiz 2007; Benajiba and Rosso 2007). Nonetheless, these efforts are still limited and focused around a small set of domains (Mohit et al. 2012). In most case s where researchers want to conduct further investigation by studying the impact of d ifferent parameters and new features of NER, therefore, they have found that it is indisp ensable to build their own corpora. In the literature, common and recent examples of Ar abic corpora that have been used for Arabic NLP in general, and for Arabic NER and cla ssification topics in particular, are: 5.2 Lexical Resources
Another primary linguistic resource is the gazetteer , which is a collection of predefined lists of typed entities; a gazetteer is also known as a dictio nary or whitelist (Shaalan and
Raza 2008). Gazetteers include names that have been identifi ed beforehand and have been classified into NE types. When the acquisition of a gazet teer is fully automated, the number of NEs increases with the growth of the input lingu istic resource or text used to create it. The contents of a gazetteer should be consi stent and belong to only one type of NE. For example, a location gazetteer consists of names of continents, countries, cities, states, political regions, towns, and v illages, and so on (Shaalan and
Raza 2009). A gazetteer might include full or partial NEs; fo r example, a person NE could have separate gazetteers for first names (possibly dis tinguishing male names and female names), middle names, surnames, full forms, and even nicknames (Shaalan and
Raza 2007; Higgins, McGrath, and Moretto 2010). A gazetteer entry provides internal evidence to fully or partially match a candidate NE in the inp ut. Whenever a prede-fined NE that appears in the relevant gazetteer is detected in the input text, the NER system should recognize it directly as an NE of this type. Ver y large gazetteers are publicly available from the CJK Dictionary Institute 10 under license agreement in the form of Arabic person, organization, company, and location name databases. However, researchers who find these resources difficult to acquire bui ld their own gazetteers from different resources such as the Web and from organizations ( Benajiba and Rosso 2008; Shaalan and Raza 2009).
 negative evidence. A filtering mechanism is used to reject in correct matches. To see how ( The Iraqi Foreign Minister ) indicates that the following words are a person name. constitute a valid person name; rather, they form an apposit ive which should be filtered out from the results.
 (Shaalan and Raza 2007). There are two kinds of lexical trigg ers that provide either internal or contextual evidence. The internal evidence lie s within the NE itself, for 480 dence is provided by the clues around the entities. They migh t be deduced from analy-sis of the most frequent left-and right-hand-side contexts . For example, the phrase
Morsi ). Generally, lexical triggers provide clues that would ind icate the presence or absence of NEs.
 are needed to furnish information to NER systems, including lemmas, dictionaries, affix compatibility tables, and English glosses. For example, th e English gloss, which is de-rived as a companion to some Arabic morphological analyzers , is used to check whether it starts with a capital letter, a key clue for an English NER. Its presence functions as a hint that suggests the presence of an Arabic NE. Benajiba, R osso, and Bened  X  X  Ruiz (2007), among others, have used POS tags to improve NE bounda ry detection. Morpho-logical information can be obtained from deep Arabic morpho logical analysis (Farber et al. 2008). However, leading and trailing character n -grams in surface word forms can also be used to handle affix attachment without the need for mo rphological analysis (Abdul-Hamid and Darwish 2010). 6. NER Approaches
A number of Arabic NER systems have been developed using prim arily two ap-proaches: the rule-based (linguistic-based) approach, no tably the NERA system (Shaalan and Raza 2009); and the ML-based approach, notably ANERsys 2.0 (Benajiba,
Rosso, and Bened  X  X  Ruiz 2007). Rule-based NER systems rely o n handcrafted local grammatical rules written by linguists. Grammar rules make use of gazetteers and lexical triggers in the context in which the NEs appear. The m ain advantage of the rule-based NER systems is that they are based on a core of soli d linguistic knowledge (Shaalan 2010). However, any maintenance or updates requir ed for these systems is labor-intensive and time-consuming; the problem is compou nded if the linguists with the required knowledge and background are not available. On the other hand, ML-based NER systems utilize learning algorithms that require large tagged data sets for training and testing (Hewavitharana and Vogel 2011). ML alg orithms involve a selected set of features extracted from data sets annotated with NEs i n order to generate statisti-cal models for NE prediction. An advantage of the ML-based NE R systems is that they are adaptable and updatable with minimal time and effort as l ong as sufficiently large data sets are available. Moreover, if we deal with an unrestr icted domain, it is better to choose the ML approach, as it would be expensive both in terms of cost and time to acquire and/or derive rules and gazetteers. Recently, a hyb rid Arabic NER approach that combines ML and rule-based approaches has resulted in s ignificant improvement by exploiting the rule-based decisions of NEs as features us ed by the ML classifier (Abdallah, Shaalan, and Shoaib 2012; Oudah and Shaalan 2012 ). For a comprehensive survey of NER approaches more generally, see Nadeau and Seki ne (2007).
 needed in these approaches for identifying NEs. For example , consider the phrase the-ministry the-interior the-Egyptian). In this case, th e rule or pattern that allows organization name stipulates that if the NE is preceded dire ctly by a verb trigger and is followed by a noun (internal evidence of an NE constituent), which in turn is followed by one or two specific adjectives, then the sequence of these t wo or three words should be tagged as an organization entity. For more precise identi fication of NEs, sometimes the-Egyptian.fem from Egypt ). Known organization NEs that are kept in the organization gazetteer can be used to improve the performance of the NER sy stem. As such, the Ministries of Interior and Foreign Affairs , Ministries.dual the-interior and the-Foreign-
Egyptian Interior ). 7. Feature Space of Arabic Named Entity Recognition
Features in NER are properties or characteristic attribute s of words designed for con-sumption by a computational system. This process begins by t ransforming the set of words (tokens) to be categorized into a set of feature vector s that belong to a feature space, which is fed to the text classifier as input. The featur e vector representation is an abstraction over the text, which usually characterizes e ach word by one or more
Boolean or binary values (such as whether a word is capitaliz ed), numerical values (word length), and nominal values (English gloss). The sour ce of these values might be their appearance as surface features, a pre-processing s tep, surrounding items, or the characters that the word is composed of, or a combination of several features, or external knowledge (Oudah and Shaalan 2013).
 classification of Arabic NEs. We organize 11 them along the following different axes: word-level features, list lookup features, contextual fea tures, and language-specific features. In the ML approach, the selection of the features t o be taken into account by a classifier is a very critical issue and can significantly affe ct the performance of a system.
Section 7.5 is dedicated to discussing the feature selectio n step. 7.1 Word-Level Features
Word-level features are related to the individual orthogra phic nature and structure of each word. Table 4 lists subcategories of these features. Th ey specifically describe special markers and special characters, word length, correspondin g English word case, and affix segments. Special markers are used to indicate an abbre viation (e.g., acronym or contraction) that might include internal periods, a hyphen , an ampersand, and so on.
Word length is sometimes used to indicate the minimum length required in order for the word to be considered as an NE type. This feature capitali zes on the fact that short words are unlikely to be NEs.
 this regard because the script does not orthographically ma rk proper names in this way. However, many researchers (e.g., Benajiba, Diab, and R osso 2008a; Mohit et al. 2012; Farber et al. 2008), have been able to derive the assume d capitalization from the 482 lexical correspondences between Arabic and English, based on the underlying bilingual lexicon of BAMA (Buckwalter 2002) that MADA exploits (Habas h and Rambow 2005).
The capitalization feature has been designed with this in mi nd. The insight is that if the translation begins with a capital letter then it is most prob ably an NE.
 and suffixes that are attached to an inflected word. Lexical fe atures are extracted via pattern matching rather than linguistic processing. Hence , in the literature they are considered language-independent features that capture th e word prefix and suffix char-acter sequences of length up to n . The sequences are matched from the leftmost (prefix) and rightmost (suffix) positions of the words. In Benajiba, D iab, and Rosso (2008b) and
Abdul-Hamid and Darwish (2010), lexical features are repre sented by character n -grams of leading and trailing characters in a word, which can frequ ently be used to identify
Arabic NEs without the need for linguistic analysis. 7.2 List Lookup Features
These features are used to classify the identity of the targe t word with respect to its membership in various lists, called word-identity feature s by Farber et al. (2008). In
Table 5, we present four important categories of lists used i n the literature as binary discriminative features indicating whether a word is a memb er of any of these lists. Gazetteer list inclusion is a direct way to express a typical NE.
 of the conference ) counterindicates the presence of an NE as a means of resolvi ng the ambiguity of words in the ambiguous position.

Nationality word forms can be stemmed to a country name using a country gazetteer and well-known affixes in the rule-based approach (Shaalan a nd Raza 2008), for exam-closed list in the ML approach (Benajiba, Diab, and Rosso 200 8b), for example, Jordanian 7.3 Contextual Features
Contextual features are local features defined over the targ eted word and include the type of words that occur with the NEs, namely, left and right n eighbors of the can-didate word which carry effective information for the ident ification of NEs. Table 6 lists subcategories of these features. Usually, they are de fined in terms of a sliding window of tokens/words. For example, if the size of the slidi ng window is 5, the decision on the targeted word is made based on its features as well as the features of its two immediate left and right neighbors (i.e., +/-2 words Abdallah, Shaalan, and
Shoaib 2012). Different window sizes have been used with con textual features. For example, in Benajiba, Diab, and Rosso (2008b) the window siz e was +/-1, whereas in
Benajiba et al. (2010) it was +/-1 to 3. The sliding step over t he text, which refers to the interval between two adjacent sliding windows, should also be defined: usually it is 1.
In the literature, contextual features specifically descri be word n -gram and rule-based features.
 order to extract the relationships between previously iden tified NEs and an encountered word within the input document (Benajiba, Diab, and Rosso 20 08b). They are used to investigate the space of the surrounding context for the NEs by taking into account the features of a window of words surrounding a candidate wor d in the recognition process.
 cisions. Abdallah, Shaalan, and Shoaib (2012) suggested th at these features have a critical impact on the performance of pure ML-based NER comp onents in particular, and proposed hybrid systems combining rule-based with ML-b ased components in general. In this system, an n -word sliding window is used for each word in corpus. Table 7 provides sample instances of these features for a win dow of size 5. 484  X  KQ X @ President OTHER OTHER OTHER OTHER Person  X   X  X  X Q X @ Russian OTHER OTHER OTHER Person Person
 X   X  XC  X  Vladimir OTHER OTHER Person Person OTHER
K X K . Putin OTHER Person Person OTHER OTHER 7.4 Language-Specific Features
These features are related to certain aspects of the Arabic l anguage. Table 8 lists sub-categories of language-specific features. They specificall y describe part-of-speech (POS), morphological features, and base-phrase chunks (BPC).
 and Rambow 2010), some of which includes noun X  X djective agr eement and special markings indicating nominals in compounds. The MADA toolki t has been found to be very useful in generating a number of informative languag e-specific features for each input word (Habash, Rambow, and Roth 2009). One of these features is the POS morpho-syntactic tag, which plays a significant role in Arab ic NLP. An Arabic NE usually consists of either noun (NN) or proper noun (NNP) tag s. In Benajiba and
Rosso (2007), very good results were obtained using the POS t agging feature, which was exploited to improve NE boundary detection. The shared t ask of CoNLL now includes a POS column in its corpora. Thus, the POS tag is a goo d distinguishing feature for Arabic NEs; it has been studied separately in the literature to determine its impact on NER. As an example, Farber et al. (2008) demonst rated a significant improvement in Arabic NER using a POS feature. In order to mak e use of the varying importance of different morphological features, a careful choice of relevant features and their associated value representations have to be taken into consideration when studying Arabic NER. Benajiba, Diab, and Rosso (2008b) repo rt on the impact of morphological features that affect NEs, such as aspect, per son, definiteness, gender, and number.
 may appear anywhere in the sentence and at different distanc es from lexical trig-gers. Elsebai, Meziane, and Belkredim (2009) and Elsebai an d Meziane (2011) point out that these arrangements might complicate the structure of the induced heuristics rules of their rule-based NER system. This observation has l ed to using the BPC feature as an indicator of embedded NEs (Benajiba and Rosso 2 008). BPC features are related to the type of words that occur with NEs and their s yntactic relations (Benajiba, Diab, and Rosso 2008b). They are usually identifi ed by shallow syntactic parsing. The Amira toolkit has been found to be very useful in generating BPC features (Diab 2009). 7.5 Feature Selection
It is useful to think of the ML-based NER as consisting of four major steps: 1) feature selection ; 2) algorithm selection or the decision of which ML algorithm(s) to use for training and classification; 3) training , the actual learning of distinguishing patterns using the selected feature list; and 4) classification , applying these patterns to the input text to detect and classify the NEs.
 supervised learning algorithm uses an annotated corpus. Th e training set derived from an annotated corpus represents the NEs in terms of feature va lues.
 be utilized by a classifier is a very critical issue and when op timized it can enhance the performance of a system dramatically (Nadeau and Sekine 200 7). The main purpose of this step is to try to find a strong correlation between an NE an d one or more combined features in order to explore generalizations over the set of selected features. Iterative experiments are conducted to gain a better understanding of different combinations of the selected features and their impact on the NER task. In a typical learning envi-ronment, reporting experiments with all the different comb inations of features would adversely affect the readability of the achieved results (A bdul-Hamid and Darwish 2010). So, in the literature, the presentation highlights e xperiments that their enabled feature combination show significant (or best) obtained res ults for the evaluation data sets.
 and the methods used to extract them may differ in their degre e of accuracy. If all feature values and their combinations are selected the feature spac e becomes high-dimensional.
Not all features are equally important for the recognition t ask. Thus, even the set of selected features needs to be evaluated in order to find the op timal feature set for an NER system. There are different ways to carry out feature sel ection.
 abling features one by one to determine their effects. Anoth er method is to initially decide on the feature set by testing features in isolation at the beginning, and in-crementally combining them in different sets until a set con taining all the features is reached and is tested. Benajiba, Diab, and Rosso (2008a) a nd Benajiba, Diab, and
Rosso (2008b) used an incremental approach that selects the top n features. Then, the features are ranked in a decreasing order according to their individual impact (using the F-measure obtained for each NE), keeping only the set tha t yields the best results at each iteration. 8. Tools for Developing Arabic NER Systems
A good number of tools are available for developing and evalu ating Arabic NER sys-tems, allowing for easy replicability of experiments. The f ollowing is a non-exhaustive 486 list of NER tools that have been used in the Arabic NER literat ure. The tools can be classified into three categories according to their functio ns: Integrated Development
Environments tools, ML tools, and Arabic NLP tools. 8.1 Integrated Development Environments
GATE 12 (The General Architecture for Text Engineering): This is on e of the most popular freely available software tools dealing with NLP. G ATE is a suite of Java tools that provides an infrastructure for developing and de ploying software com-ponents that process human language (Maynard et al. 2000; Cu nningham 2002;
Cunningham et al. 2011). The motivating factors behind the d evelopment of GATE include reusability of components, task-based evaluation , comparative evaluation, collaborative research, robustness, efficiency, and porta bility; the tools support nine languages (English, French, German, Italian, Chinese, Ara bic, Romanian, Hindi, and
Cebuano). GATE provides a set of essential tools for NLP syst em development, including tokenizers, gazetteers, POS taggers, chunkers, and parsers. It facilitates the development of rule-based NER systems by providing the user with the capability of implementing grammatical rules as a finite state transducer using JAPE. It also has an
Arabic plug-in that contains a tokenizer, gazetteers, an Or thoMatcher component, and a grammar, all of which are used within a simple Arabic rule-b ased NER application built as a part of GATE. GATE can be used to extract basic entit ies, such as date, name, location, organization, and so on. A number of scholar s have used the GATE environment in their research studies on Arabic NER, includ ing Maynard et al. (2002), Elsebai, Meziane, and Belkredim (2009), Elsebai and Mezian e (2011), and Abdallah, Shaalan, and Shoaib (2012).
 languages. NooJ allows the developer to construct, test, an d maintain large coverage lexical resources, as well as apply morpho-syntactic tools for Arabic processing. It can recognize all Unicode encodings, which is a very importa nt feature for process-ing Arabic Script languages. NooJ can recognize rules writt en in finite-state form or context-free grammar form, facilitating the development o f rule-based NER systems.
Nooj provides a disambiguation technique based on grammars to resolve duplicate annotations. Arabic is one of the languages that are support ed by NooJ; there are free Arabic resources for use within the NooJ environment on the N ooJ official Web site. Mesfar (2007) has used NooJ in his Arabic NER research.
 limited production capabilities and one must upgrade in ord er to obtain full pro-duction abilities. The toolkit is language-, domain-, and g enre-independent. It sup-ports the development of different language processing tas ks such as POS tagging, spelling correction, NE recognition, and word sense disamb iguation. The NER com-ponent is based on hidden Markov models and the learned model can be evaluated using k -fold cross validation over annotated data sets. LingPipe r ecognizes corpora annotated using the IOB scheme. The LingPipe NER system has b een applied by
ANERcorp to demonstrate how to generate a statistical NER mo del for Arabic; the details and results are presented on the toolkit X  X  official W eb site. AbdelRahman et al. (2010) used ANERcorp to compare their proposed Arabic NER sy stem with LingPipe X  X  built-in NER. 8.2 Machine Learning Tools
In the Arabic NER literature, the ML tools of choice are data-mining-based tools that support one or more ML algorithms, such as Support Vector Mac hines (SVM), Con-ditional Random Fields (CRF), Maximum Entropy (ME), hidden Markov models, and
Decision Trees. These tools are YASMET, CRF++, YamCha, and W EKA. They all share the following features: a generic toolkit, language indepe ndence, absence of embedded linguistic resources, a requirement to be trained on a tagge d corpus, the performance of sequence labeling classification using discriminative fea tures, and a suitability for the pre-processing steps of NLP tasks.
 The toolkit can estimate the parameters and computes the wei ghts of an ME model.
YASMET is designed to handle a large set of features efficient ly. However, there are not many details available about the features of this toolki t. In Benajiba, Rosso, and Bened  X  X  Ruiz (2007), Benajiba and Rosso (2007), and Benajib a, Diab, and Rosso (2009a), YASMET was used to implement ME approach in Arabic NER.
 in order to segment and annotate sequences of data. The toolk it is efficient in training and testing and can produce n -best outputs. It can be utilized in developing many
NLP components for tasks such as text chunking and NER, and ca n handle large feature sets. Both Benajiba and Rosso (2008), Benajiba, Dia b, and Rosso (2008a, 2009a), and Abdul-Hamid and Darwish (2010) have utilized CRF++ to de velop CRF-based Arabic NER.

SVM models. This toolkit is generic, customizable, efficien t, and has an open source text chunker. It has been utilized to develop NLP pre-processing tasks such as NER, POS tag-ging, base-NP chunking, text chunking, and partial chunkin g. YamCha performs well as a chunker and is capable of handling large sets of features . Moreover, it allows for re-defining feature parameters (window-size) and parsing-dir ection (forward/backward), and applies algorithms to multi-class problems (pair wise/ one vs. rest). Benajiba,
Diab, and Rosso (2008a), Benajiba, Diab, and Rosso (2008b), Benajiba, Diab, and Rosso (2009a), and Benajiba, Diab, and Rosso (2009b) have used Yam Cha to train and test SVM models for Arabic NER.
 algorithms can either be applied directly to a data set or cal led from your own
Java code. The toolkit contains tools for data pre-processi ng, classification, regres-sion, clustering, association rules, and visualization. I t has also been found useful for developing new ML schemes (Witten, Frank, and Hall 2011) . The Weka work-bench supports the use of k -fold cross validation with each classifier and the presen-tation of results by means of standard Information Extracti on measures. Most recently, 488
Abdallah, Shaalan, and Shoaib (2012) and Oudah and Shaalan ( 2012) have success-fully used Weka to develop an ML-based NER classifier as part o f a hybrid Arabic
NER system. 8.3 Arabic NLP Tools
The complexity of Arabic morphology makes it a very challeng ing research topic. In this section we present Arabic morpho-syntactic pre-processin g tools that are widespread and used extensively in the Arabic NER literature, includin g BAMA, MADA, and the AMIRA toolkit.
 most widely used Arabic NLP tools and is widely cited in the li terature (Buckwalter 2002; Elsebai and Meziane 2011). It contains over 80,000 wor ds, 38,600 lemmas, three dictionaries (Prefix, Stem, Suffix), and three compatibilit y tables (Prefix-Stem, Stem-
Suffix, Prefix-Suffix) (Habash 2010). Entries of the stem dict ionary include English glosses, which have been used to disambiguate NEs. BAMA outp ut lends itself to information extraction and retrieval processing as it take s an input Arabic word and returns a stem rather than a root. The word is selected with or without short vowels.
Then it is segmented and compatibility-checked for the corr ect combination of its segments, producing all possible analyses of the input word . BAMA transliteration of the output makes it readable; this is more useful for reade rs who do not have the ability to read the Arabic script but are familiar with La tin script. In addition, the transliteration 20 output can be converted directly to Unicode Arabic with a minimal amount of automatic processing. BAMA has been made a vailable through the
Linguistic Data Consortium. Some of the Arabic NER studies t hat rely on BAMA for performing morphological analysis include Farber et al. (2 008), Elsebai, Meziane, and
Belkredim (2009), and Al-Jumaily et al. (2012). tion for Arabic. The combined package is built on top of BAMA a s a natural successor that builds on prior successes and meets the growing require ments of many Arabic
NLP applications (Habash, Rambow, and Roth 2009). The packa ge consists of two components. Morphological analysis and disambiguation ar e handled in the MADA component. Morphological analysis also supports the abili ty to tokenize and stem de-terministically. Because there are many different ways to t okenize Arabic (tokenization is a convention adopted by researchers), the TOKAN componen t allows the user to specify any tokenization scheme that can be generated from d isambiguated analyses. The MADA+TOKAN package provides one solution to all of the ba sic problems in
Arabic NLP, including tokenization (the segmentation of cl itics from a word with at-tendant spelling modifications), diacritization (inserti on of disambiguating short-vowel diacritics), morphological disambiguation (determining the full morphological infor-mation for each word given its context), POS tagging (determ ining specific morpho-logical information for each word), stemming (reducing eac h word to its base form), and lemmatization (determining the citation form lemma of t he set of word lexemes to which each word in the data belongs). MADA operates by exam ining a list of all possible analyses for each word generated by BAMA, and then s electing the analysis that best matches the immediate context by means of SVM model s. This classifier uses 19 distinct and weighted morphological features to pro vide complete diacritic, lexemic, glossary, and morphological information (Habash 2010). However, because
MADA is built on top of BAMA, it inherits all of BAMA X  X  limitat ions. For example, if no analysis is given by BAMA, no lemmatization or diacriti zation is undertaken. It has been noted in the literature that because MADA was traine d and tested on the Penn
Arabic Treebank (Maamouri et al. 2004), its coverage and qua lity relative to other text types has not yet been evaluated (Attia et al. 2010; Mohit et a l. 2012). The richness of
MADA X  X  extracted morphological features has been exploite d by Arabic NER studies such as those carried out by Farber et al. (2008), Benajiba an d Rosso (2008), Benajiba,
Diab, and Rosso (2008a), Benajiba, Diab, and Rosso (2009a), Benajiba, Diab, and Rosso (2009b), Oudah and Shaalan (2012), and Oudah and Shaalan (20 13).
 tagger, and BPC or shallow syntactic parser (Diab 2009). It h as been widely used for different NLP applications due to its speed and high perform ance. BPC is one of the distinctive characteristics of this toolkit. AMIRA has bee n used in the extensive studies of Arabic NER by Benajiba, Diab, and Rosso (2008a), Benajiba , Diab, and Rosso (2008b),
Benajiba, Diab, and Rosso (2009a), and Benajiba, Diab, and R osso (2009b). 9. Evaluation
The main objective of evaluation is to rank NER systems based on the ability to annotate a text in the way that an Arabic linguist would. For a ny research undertaking, it is necessary to evaluate the system X  X  results with respec t to existing systems on the assumption that the same reported results should be repl icated under the same experimental settings (Kumaran, Khapra, and Li 2010). Resu lts are easily compared when they utilize the same standard evaluation corpora, whe re every NE has a type assigned to it.
 aggressive metrics that do not assign partial credit: An exa ct match of the NE as a whole and a correct classification must be identified in orde r to earn credit. The reason that this method of scoring is popular is due to its sim plicity in calculating and analyzing results. NER systems are compared based on the sta ndard micro-averaged
F-measure with the Precision being the ratio of the detected NEs that are correctly classified by the system, and the Recall being the ratio of the relevant NEs that are detected by the system (Yang 1999). Mesfar (2007) has red efined the evaluation measures to account for partially correct NE tagging that ar ises due to a lack of information about unknown words within NEs. No other resear ch has accepted this additional parameter of the evaluation measures.
 high Precision means that the system returned more relevant results than irrelevant.
Often, there is an inverse relationship between Precision a nd Recall, where it is possible to increase one at the cost of lowering the other. Recently, M ohit et al. (2012) X  X  explo-ration of the Recall X  X recision tradeoff proposed a Recall-oriented learning method that 490 improved Recall over Precision during semi-supervised dis criminative learning of NEs from Wikipedia.
 avoid over-fitting. The data set is randomly divided into k folds of equal size. Each fold is used as a testing set and the remaining folds are used as a tr aining set, and then the test results (i.e., F-measure, Precision, Recall) are a veraged over the rounds. When comparing evaluation results it is important to replicate t he same split for training and testing because different splits can have significant effec ts on the Precision and Recall data sets, ratio of NEs, number of NEs, and average length of N Es (Benajiba, Diab, and
Rosso 2008a). The advantage of the cross-validation method over other methods, such as repeated random sub-sampling or the percentage split met hod (holdout), is that all observations are used equally for both training and validat ion, and each observation is used for validation exactly once. The disadvantage of this m ethod is that the training algorithm has to be rerun from scratch k times, which means it takes k times as much computation to make an evaluation. Typically, 10-fold cross-validation is used, but in general k remains a variable parameter. 10. NER Systems
The importance of Arabic NER systems has been well recognize d by the community, as evidenced by the noteworthy publications in this importa nt area. In this section we present different NER systems. They are classified accord ing to the approach used. Unfortunately for the research community, most of the effor ts to develop reliable Arabic NER systems have been undertaken for commercial purposes (B enajiba, Rosso, and
Bened  X  X  Ruiz 2007; Zaghouani 2012). Because information on the specifications and performance of these systems is generally not available, it is difficult to carry out a fair comparison of the performance of these systems relativ e to the systems proposed by the Arabic NER research community. Examples of commercia l Arabic NER sys-tems are: ANEE 23 (Coltec), IdentiFinder 24 (BBN), NetOwlExtractor (Sakhr), Clear Tags 27 (ClearForest), Enterprise Search 28
Discovery-Entity-Extractor 29 (InXight). 10.1 Rule-Based Systems
Rule-based NER systems depend mainly on hand-made linguist ic rules (i.e., grammars) defined by linguists. In the literature, the development of s ystems using the rule-based approach was motivated mainly by the fact that the arch itecture of the available
NER development tools was optimized for building rule-base d systems. The approach compensates for the lack of Arabic NER linguistics resource s, and is favored based on the encouraging results obtained by various Arabic rule-ba sed systems as shown in this section. Experiments for reporting the performance of rule -based systems are described at three levels: the NE type, the level of linguistic knowled ge (morphology and syntax), and the inclusion/exclusion of gazetteers. A corpus is ofte n needed to evaluate an NER system, but not necessarily for its development. This is the reason that many of these experiments are based on a non-standard data set that has bee n acquired by developers for evaluation purposes.
 handle Arabic rule-based NER. The system identifies the foll owing NE types: person, organization, location, number, and time. A morphological analyzer is used to decide where a name ends and the non-name context begins. For evalua tion, 14 texts from the AI-Hayat CD-ROM were selected randomly and manually tag ged. The overall performance obtained for the various categories (time, per son, location, and number) was a Precision of 89.5%, a Recall of 80.8%, and an F-measure o f 85%.
 names in the Arabic sentence. The research assumes that an NE appears close to lexical triggers no more than three words from the cue word and that th e NE has a maximum length of seven words. Some names may be attached to differen t types of lexical triggers and to more than one lexical trigger in the same phrase. For ex ample, the phrase
In Abuleil X  X  (2004) work, Arabic NER is part of a question-an swering system. The system starts by marking the phrases that could include name s. Afterwards, it builds up a graph that represents the words in these phrases and the r elationships between them. Finally, rules are applied to classify and generate th e NEs before saving them in a database. The system has been evaluated on 500 articles fro m the Al-Raya newspaper, published in Qatar. It obtained a Precision of 90.4% on perso ns, 93% on locations, and 92.3% on organizations.
 and an NE tagger. A mapping technique is used to transliterat e words in the Arabic text and return those matching with NEs in the Spanish text as NEs i n Arabic. The Spanish NE tags are used as indicators for tagging the corresponding NEs in the Arabic corpus.
Exceptions arise when it tries to recognize NEs whose Arabic equivalents are completely experiment, a stop word filter was additionally applied to ex clude the stop words from the potential transliterated candidates. The filter improv ed the overall Precision from 84% to 90%; the Recall was very high at 97.5%.
 identifies the following NE types: person, location, organi zation, currency, and temporal expressions. The Arabic NER is a pipeline process that goes t hrough three sequential modules: a tokenizer, a morphological analyzer, and Arabic NER. Morphological infor-mation is used by the system to extract unclassified proper no uns and thereby enhance the overall performance of the system. An evaluation corpus was built from Arabic news articles extracted from the Le Monde Diplomatique newspaper. The reported results based on individual NE types were as follows: Precision, Rec all, and F-measure range from 82%, 71%, and 76% for Place names to 97%, 95%, and 96% for T ime and Numerical expressions, respectively.

PERA (Shaalan and Raza 2007). This research describes the st ructure of Arabic personal names:  X  X sm X ,  X  X unya X ,  X  X asab X ,  X  X aqab X , and  X  X isba X . The  X  ism X  is a proper name given 492 cal persons are more familiar to us by their  X  X asab X  than by th eir  X  X sm X . Notable examples relating to a trait, a descriptive, or some admirable qualit y the person had or would Al-Rashid, Aaron the Rightly guided ).
 or, if the name contains a  X  X asab X  (of however many generatio ns), generally follow the  X  X asab. X  recognize person names, where  X + X  indicates one or more elem ents;  X  \ s X  represents white space;  X  |  X  represents alternatives; and  X ? X  represents an optional e lement. For example, consider the following rule: (( honorific trigger + \ s ((  X @ )? location GAZ (  X K |  X  ) + \ s )?) + first name GAZ ( \ s + last name GAZ )? \ s + ( number )? ) king Abdullah II ) that is composed of a first name followed by optional last nam e, which in turn is followed by an optional ordinal number based on pre ceding person triggers. ( [The] Egypt[ian] ).
 mechanism. Whitelists of person names are provided in the ga zetteers component in order to extract the exact matching of NEs regardless of the g rammar. Afterwards, the input text is presented to the grammar in order to identify ot her person NEs. Finally, the filtering mechanism is applied to NEs in order to exclude inva lid person names. PERA was evaluated using the ACE and Treebank Arabic data sets and obtained 85.5%, 89%, and 87.5% for Precision, Recall, and F-measure, respective ly. system was introduced by Shaalan and Raza (2008, 2009) that g eneralizes the findings from PERA. NERA addresses major challenges posed by NER in th e Arabic language arising from the complexity of the morphological system, pe culiarities in the Arabic orthographic system, non-standardization of the written t ext, ambiguity, and lack of resources. The system identifies the following NE types: per son, location, organization, date, time, ISBN, price, measurement, phone numbers, and fil enames. NERA used the FAST ESP 30 framework, whose architecture is optimized for rule-based systems, as an implementation platform. Like PERA, the NERA system ha s three components (gazetteers, local grammars in the form of regular expressi ons, and a filtering mecha-nism). Gazetteer entries include English transliteration s, an important feature for cross-lingual and multilingual applications. The evaluation is b ased on manually constructed corpora from ACE, the Web, and organizations. NERA obtained an F-measure of 87.7% for person, 85.9% for locations, and 83.15% for organizatio ns.
 grammar and dictionaries. The extraction process is based o n reporting verbs that can be used within grammars to indicate one or more NE types. In th e following example, two NEs (person and organization names) can be recognized us ing verb and job title triggers. ( Saddum Bush ) as a name although these are in fact two different names, cor responding to the subject and object of the verb, respectively. An analy tical study was conducted by Traboulsi (2009) for his own corpus (arabiCorpus) that wa s collected from several newspapers, books, the Quran, and some medieval medical and philosophical texts. The study addressed frequency, collocation, and concordan ce analyses of the corpus. No substantive evaluation results were reported.
 posed a rule-based person name recognition system. The syst em is implemented using
GATE. Heuristic rules make use of two kinds of lexical trigge rs in the Arabic text. An person name within phrases. The structure of the heuristic r ule depends on the relative position of each kind of lexical trigger in the input text and its position relative to other words. BAMA (Buckwalter 2002) has been integrated to e xtract the morphological features of the target word that are used within rules to iden tify whether the target word is a proper noun. This has led to the elimination of the need fo r any predefined person name gazetteers. Name lists, specifically, place and organi zation names, and stop words, such as prepositions, which occur after lexical triggers, a re used to counter-indicate the noun, it is discarded because it belongs to the list of places and hence should not be 494 recognized as a person name. Two experiments were conducted (Elsebai, Meziane, and
Belkredim 2009; Elsebai and Meziane 2011). The first experim ent used around 700 news articles extracted from an Arabic media Web site, and the sec ond used 500 articles. The overall system performance in the first experiment was 93 %, 86%, and 89%, for
Precision, Recall, and F-measure, respectively; the overa ll performance in the second experiment was 88%, 90%, and 89%, for Precision, Recall, and F-measure, respectively. pattern using the traditional Arabic morphology and sugges ted relevant computational resources. The author introduced a set of database tables in order to assist Arabic
NER: root-pattern, a frequency list of roots, and lexical tr igger tables. A corpus was created from Saudi person names with specific person name tag s: root of person NE, features indicating the possibility of affixation, and gend er characteristics. The main objective was to recognize the constituents of the person NE , these being the simple form, the affix, and connectors. For example, the name of the U mayyad caliphate study has reported interesting observations about feature s of highly frequent patterns and their lengths. A simple test for assessing how well the pa ttern of a person name was recognized was conducted on 60,000 generated person names e ntries. It demonstrated that the correct pattern appears 94% of the time as one of the fi rst three suggested patterns, 86% as one of the first two suggested patterns, and 6 9% of the time as the first suggested pattern.
 proper nouns using lexical triggers. The research takes int o consideration regional patterns such as the name connector Y X  X  (ould, son of ) used in Mauritanian person
NE types: people, major cities, locations, countries, orga nizations, political parties, and terrorist groups. However, the reported research only focu ses on person NEs. The algorithm uses heuristic rules to preprocess the input to cl ean the data and remove affixes. Then, internal evidence triggers, such as person na me connectors, are used to recognize the NEs. The system was evaluated using 20 randoml y selected documents from the Al-Raya newspaper published in Qatar, and the Alrai newspaper published in Jordan. An overall precision of 86.1% was observed.

Arabic WordNet (Elkateb et al. 2006) and Arabic Wikipedia. enhances the lexical entries in WordNet and produces a well-structured Arabic NE lexical resource. The main objective is to extract Arabic Wo rdNet X  X  instantiable nouns and to identify the corresponding categories in the Arabic W ikipedia. These categories act as lexical triggers. A decision is made in order to identi fy which of the Wikipedia articles of these categories correspond to NEs. They are the n extracted, connected to
Arabic WordNet, and inserted in the NE repository. In a subse quent post-processing step, further NEs are acquired by exploiting inter-lingual links. Finally, the NEs acquired are diacritized. This lexical resource is useful for Arabic NER; the results are not only recognized (tagged) NEs but also identified synsets which ar e semantically related to them (synonyms, subtypes, supertypes, etc.). Likewise, Abouenour, Bouzoubaa, and Rosso (2010) suggested enriching the NEs in Arabic WordN et by using an ontology-based method. This is used in the query expansion s tage of an Arabic Question
Answering system (Lahsen, Bouzoubaa, and Rosso 2012), resu lting in an improvement of the ranking of the returned passages.
 which recognizes person, location, and organization NEs ba sed only on a gazetteer lookup approach; the system provides morphological inform ation using a system called
ElixirFM, developed by Smrz (2007). The system does not use a ny rules or context information for Arabic NER. Before recognizing the NEs, ARN E carries out three pre-processing steps that are not used by the gazetteer look up approach: tokenization,
Buckwalter transliteration, and POS tagging. ARNE uses the ANERgazet gazetteer that was developed by Benajiba, Rosso, and Bened  X  X  Ruiz (200 7) and Benajiba and Rosso (2007). ARNE can recognize a NE that has a maximum lengt h of four words. The experimental results obtained low overall performance : 38%, 27%, and 30% for
Precision, Recall, and F-measure, respectively. The autho rs suggest several reasons as to why the F-measure did not achieve higher values. These inclu de the size and quality of the gazetteers, the richness and complexity of Arabic morph ology, and the ambiguity problem inherent in Arabic NEs.
 applications. The system identifies the following NE types: person, location, and organi-zation NEs. The system was developed using GATE and provides Arabic morphological analysis in a method similar to BAMA. It also integrates diff erent gazetteers from GATE, DBPedia, 32 and ANERGazet. 33 The system was evaluated using ANERcorp.
Two experiments were carried out to study the effect of Arabi c prefixes and suffixes on the recognition results. If an Arabic token (prefix-stem-suffix) is recognized, then a verification process is used to ensure the compatibility be tween the three possible combinations (prefix-stem, stem-suffix, and prefix-suffix). The verification process has improved the recognition results of NEs across all types, al though these improvements were not symmetrical. The improvements in the Precision of p erson, location, and organization are 7.32%, 5.55%, and 5.14%, respectively. Su ggestions for improvements include: 1) adding new patterns to the system X  X  dictionary, 2) accounting for all translit-eration variants of Latin names, 3) adopting semi-automati c methods to tag unrecog-nized words, and 4) performing contextual analysis to resol ve ambiguity arising from or person).
 Europe Media Monitor (EMM) Information Retrieval and Extra ction application NewsExplorer 34 (Steinberger, Pouliquen, and Van der Goot 2009), to conside r Arabic.
This system at present includes 19 languages and is able to an alyze large volumes of news text. The EMM-NewsExplorer architecture is optimized for ruled-based systems.
The adaptation resulted in a rule-based Arabic NER system (R ENAR; Zaghouani 2012), which uses a handwritten set of language-independen t rules (Steinberger,
Pouliquen, and Ignat 2008) in combination with specific reso urces for Arabic. Rules are described using the following notations:  X  \ w+ X  for an unknown word,  X  \ b X  496 for an obligatory word boundary (white space, possibly with punctuation),  X + X  for one or more elements, and  X * X  for zero or more elements. For ex ample, consider the rule:
Organization BEG + \ b known Name \ b name Infix  X  \ b Known Name  X  \ b Organization END ( company of Mohamed Abu Al-Majd and Brothers ), which include person (known) names
NER component is able to recognize the following NE types: pe rson, organization, location, date, and number, as well as quotations (direct re ported speech) by and about people. The system was first evaluated using a corpus built fr om on-line news sources from the Tunisian newspaper Assabah and the Lebanese newspaper Alanwar . The sys-tem X  X  overall performance was calculated in terms of Precis ion, Recall, and F-measure, delivering results of 87.17%, 65.74%, and 74.95%, respecti vely. Then, the system was evaluated only for person, organization, and location usin g ANERcorp. The system X  X  overall performance in terms of Precision, Recall, and F-me asure was 73.39%, 62.13%, and 67.13%, respectively. 10.2 Machine Learning Systems
In the field of NER, ML algorithms have been widely used in orde r to determine NE tagging decisions from annotated texts that are used to gene rate statistical models for
NE prediction. Experiments reporting ML system performanc e are evaluated in three dimensions: the NE type, the single/combined ML classifier ( learning technique), and the inclusion/exclusion of certain features from the whole feature space. Most often these experiments use a very well defined framework and their reliance on standard corpora allows for an objective comparison of the performan ce of a proposed system relative to existing systems.

Rosso, and Bened  X  X  Ruiz 2007; Benajiba and Rosso 2007, 2008; Benajiba, Diab, and Rosso 2008a, 2008b, 2009a, 2009b; Benajiba et al. 2010), who explo red different ML techniques with various combinations of features. Benajiba, Rosso, an d Bened  X  X  Ruiz (2007) have developed an Arabic ME-based NER system called ANERsys 1.0. The authors have built their own linguistic resources, ANERcorp and ANERgaz et. and gazetteer features are used by this system. ANERsys iden tifies the following NE types: person, location, organization, and miscellaneous . All the experiments are carried out within the framework of the shared task of the CONLL 2002 c onference. The overall system X  X  performance in terms of Precision, Recall, and F-m easure was 63.21%, 49.04%, and 55.23%, respectively. The ANERsys 1.0 system had difficu lties with detecting NEs that were composed of more than one token/word. An extens ion of this work is
ANERsys 2.0 (Benajiba and Rosso 2007), which uses a two-step mechanism for NER: 1) detecting the start and the end points of each NE, then 2) clas sifying the detected NEs.
A POS tagging feature was exploited to improve NE boundary de tection. The overall system X  X  performance in terms of Precision, Recall, and F-m easure was 70.24%, 62.08%, and 65.91%, respectively. The performance of the classifica tion module was very good with F-measure 83.22%, although the identification phase wa s poor with F-measure 72.03%.
 improve performance. The same four types of NEs used in ANERs ys 2.0 were also used in the CRF-based system. Neither Benajiba, Rosso, and B ened  X  X  Ruiz (2007) nor
Benajiba and Rosso (2007) included Arabic-specific feature s; all the features used were language-independent. Language-independent and Arabic-specific features were used in the CRF model, including POS tags, BPC, gazetteers, and na tionality. The CRF-based system achieved best results when all the features wer e combined. The overall system X  X  performance in terms of Precision, Recall, and F-m easure was 86.90%, 72.77%, and 79.21%, respectively. The improvement was not only depe ndent on the use of the CRF model but also on the additional language-specific fe atures, including POS and BPC.
 gazetteer, and shallow syntactic features of ACE data sets u sing the SVM classifier.
The system X  X  performance was evaluated using 5-fold cross v alidation. The impact of the different features is measured independently and in j oint combination across different standard data sets and genres. The best system X  X  o verall performance in terms of F-measure was 82.71% for ACE 2003, 76.43% for ACE 2004, and 81.47% for ACE 2005, respectively.
 to various types of features rather than adopting a single se t of features for all NE types simultaneously. The set of features examined were the lexic al, contextual, morpholog-ical, gazetteer, and shallow syntactic features, forming 1 6 specific features in total. A multiple classifier approach was developed using SVM and CRF models, where each classifier tags an NE type separately. They used a voting sche me to rank the features according to the best performance of the two models for each N E type. The result in tagging a word with different NE types is resolved by selecti ng the classifier output with the highest Precision (i.e., overriding the tagging of the classifier that returned more relevant results than irrelevant). An incremental fea ture selection method was used to select an optimized feature set and to better underst and the resulting errors.
A global NER system could be developed from the union of all th e optimized set of features for each NE type. ACE data sets are used in the evalua tion process. The best system X  X  overall performance in terms of F-measure was 83.5 % for ACE 2003, 76.7% for
ACE 2004, and 81.31% for ACE 2005, respectively. On the basis of the analysis of the best recognition results obtained by individual and combin ed features experiments, it cannot be concluded whether CRF is better than SVM or vice ver sa. Each NE type is sensitive to different features and each feature plays a rol e in recognizing the NE to varying degrees.
 firmed the importance of considering both language-indepen dent and Arabic-specific features in the NER system. In particular, Benajiba, Diab, a nd Rosso (2009a) studied the impact of SVM, ME, and CRF models using the same approach and f eatures described in Benajiba, Diab, and Rosso (2008b). The best system X  X  over all performance in terms of
F-measure was 83.34% for ACE 2003, 77.61% for ACE 2004, and 82 .02% for ACE 2005, respectively. Interesting conclusions and recommendatio ns have been suggested by this study. Both SVMs and CRFs achieved very similar performance , outperforming the ME model. An important observation concerns the number of avai lable features as the main factor for the choice of using SVMs versus CRFs: SVMs seem to a chieve good results 498 with fewer features. Another significant observation conce rns the better performance achieved by carrying out pre-processing of the Arabic text b y a clitic segmenter, which is more suitable given the morphological richness of Arabic .
 and Rosso (2008b) is used as a baseline NER system to automati cally tag an Arabic X 
English parallel corpus in order to provide sufficient train ing data for studying the impact of deep syntactic features, also referred to as synta gmatic features. The fea-ture space is enhanced by syntagmatic features that are boot strapped by prediction from this corpus. These features are derived from Arabic sen tence parses that include an NE. The relatively low performance of the available Arabi c parser leads to noisy features as well. The inclusion of the extra features has ach ieved high performance for the ACE (2003 X 2005) data sets. The best system X  X  overall performance in terms of
F-measure was 84.32% for ACE 2003, 78.12% for ACE 2004, and 81 .73% for ACE 2005, respectively. Moreover, the authors reported an F-measure improvement of up to 1.64 percentage points compared to the performance when the synt agmatic features were excluded.
 that explores using a set of simplified features for recogniz ing the three classic NE types: person, location, and organization. The proposed se t of features include: bound-ary character n -grams (leading and trailing character n -gram features), word n -gram probability-based features that attempt to capture the dis tribution of NEs in text, word sequence features, and word length. Remarkably, the system did not use any external lexical resources. Moreover, the character n -gram models attempt to capture surface clues that would indicate the presence or absence of an NE. Fo r example, character bigram, trigram, and 4-gram models can be used to capture the prefix attachment of a noun for a candidate NE such as the determiner  X @ ( Al ), a coordinating conjunction and a determiner  X @ X  ( w+Al ), and a coordinating conjunction, a preposition, and a used to conclude that a word may not be an NE if the word is a verb that starts with that lexical features have solved the problem of dealing wit h a large number of prefixes and suffixes, they do not resolve the compatibility problem b etween prefixes, suffixes, and stems. The compatibility checking is needed in order to v erify whether a correct combination is met (cf. Buckwalter 2002). The system was eva luated using ANERcorp and the ACE 2005 data set. The overall system X  X  performance u sing ANERcorp for
Precision, Recall, and F-measure was 89%, 74%, and 81%, resp ectively. These results show that the system outperforms the CRF-based NER system of Benajiba and Rosso (2008).

Arabic NER system. The integration is aimed at enhancing Ara bic NER. The rich morphological information produced by MADA provides impor tant features for the classifier. The system adopts the structured perceptron app roach proposed by Collins (2002) as a baseline for Arabic NER, using morphological fea tures produced by MADA.
The system was developed to extract person, organization, a nd GPEs. The empirical results from a 5-fold cross validation experiment show that the disambiguated mor-phological features in conjunction with a capitalization f eature improve the perfor-mance of the Arabic NER system. They reported 71.5% F-measur e on the ACE 2005 data set.
 bining bootstrapping, semi-supervised pattern recogniti on, and CRF. The feature set is extracted by the Research and Development International
ArabTagger and an Arabic lexical semantic analyzer. The fea tures used include word-level, POS tag, BPC, gazetteers, semantic field tag, and morp hological features. The semantic field tag is a generic cluster that refers to a set of r elated lexical triggers. For example, the  X  X orporation X  cluster includes the following internal evidence that can be zation, job, device, car, cell phone, currency, date, and ti me. A 6-fold cross validation experiment using the ANERcorp data set showed that the syste m yielded F-measures of 74.06%, 89.09%, 75.01%, 69.47%, 77.52%, 80.95%, 80.63%, 98.52%, 76.99%, and 96.05% for the person, location, organization, job, device, car, c ell phone, currency, date, and time NEs, respectively. The results also showed that the sys tem outperforms the NER component of LingPipe when both are applied to the ANERcorp d ata set.
 from diverse text domains like Wikipedia within the AQMAR (A merican and Qatari
Modeling of Arabic) project. They used a flexible annotation scheme that allows for the introduction of new NE tags. As Arabic Wikipedia is not ta gged for NEs, they adopted semi-supervised learning (self-training) for bui lding their own corpus. The learning method does not utilize any gazetteer. Once the eva luation corpus is built, a supervised learning method can be used to develop and evalua te an NER classifier.
The feature space consists of 15 contextual and lexical feat ures capturing local context and shallow morphology. Morphological features are extrac ted from MADA output. The training model is built using the structured perceptron described in Collins (2002).
This framework allows them to manipulate two key elements of the model: the features and the loss function used in training. This function measur es the recognition error for each token/word, which is the difference between the cor rect and predicted label.
It penalizes Recall errors (i.e., reduction of false negati ves that arise by erroneously predicting the non-entity token/word as part of the actual N E), which is the chief difficulty for the news-text X  X rained model in the news domai n. The system was tested on 24 Wikipedia articles 37 for possible combinations of the supervised learning phase with self-training on unlabeled Wikipedia data. The experi mental results showed im-provements on F-measure by the proposed Recall-oriented mo del in both stages of learning. When Recall-oriented bias is used in the supervis ed phase, the recall gains are substantial: nearly 8% over the baseline. Integrating this bias within self-training pro-duces a more modest improvement of about 4% relative to the ba seline. In both cases, the improvements to recall more than compensate for the degr adation in Precision. generates dictionaries of male and female first names as well as family names by a pre-processing step. It relies on ASVMTools (Diab, Hacioglu, an d Jurafsky 2004) for POS tag-ging to identify proper nouns. Thereafter, the dictionarie s are expanded using Web sites listing Arabic given names. The system takes into considera tion the common prefixes of (Abu Abd, father of servant of ). It also takes into consideration the common embedded 500 having a person name as a non-NE in the text is resolved by heur istic disambiguation rules. The system is evaluated on two data sets: MSA data sets collected from news Web sites and colloquial Arabic data sets collected from the Google Moderator page.
The overall system X  X  performance using an MSA test set colle cted from news Web sites for Precision, Recall, and F-measure was 93.52%, 87.89%, an d 90.62%, respectively. In comparison, the overall system X  X  performance obtained usi ng a colloquial Arabic test set collected from the Google Moderator page for Precision, Recall, and F-measure was 88.7%, 85.56%, and 87.1%, respectively.
 bined pattern extractor (a set of regular expressions) and S VM classifier that learns patterns from POS tagged text. The system covers the NE types used in the CoNLL conference, and uses a set of dependent and independent lang uage features. Arabic fea-
Al-Abnudi ), a character-based feature that denotes common prefixes of nouns, a POS feature, and a  X  X erb around X  feature that denotes the presen ce of an NE if it is preceded or followed by a certain verb. The system was trained on 90% of the ANERCorp data and tested on the remainder. The system was tested with diffe rent feature combinations and the best result for an overall average F-measure was 83.2 0%.
 called Noor, that extracts person names from religious text s. Corpora of ancient religious text called NoorCorp were developed, consisting of three ge nres: historic, Prophet
Mohammed X  X  Hadith, and jurisprudence books. Noor-Gazet, a gazetteer of religious person names, was also developed. Person names were tokeniz ed by a pre-processing ( Hassan bin Ali bin Abd-Allah bin Al-Moghayrah ) produces six tokens as follows: processing tool, AMIRA, was used for POS tagging. The taggin g is enriched by indicating the presence of the person NE entry, if any, in Noo r-Gazet. Details of the experimental setting are not provided. The F-measure for th e overall system X  X  perfor-mance using new historic, Hadith, and jurisprudence corpor a was 99.93%, 93.86%, and 75.86%, respectively. 10.3 Hybrid Systems
The hybrid approach integrates the rule-based approach wit h the ML-based approach in order to optimize overall performance (Petasis et al. 2001) . Recently, Abdallah, Shaalan, and Shoaib (2012) proposed a hybrid NER system for Arabic. Th e rule-based component is a re-implementation of the NERA system (Shaalan and Raza 2 008) using GATE.
The ML-based component uses Decision Trees. The feature spa ce includes the NE tags predicted by the rule-based component and other language in dependent and Arabic specific features. The system identifies the following types of NEs: person, location, and organization. The F-measure performance using ANERcor p was 92.8%, 87.39%, and 86.12% for the person, location, and organization NEs, resp ectively.

Arabic NER system is extended in the following key direction s (Oudah and Shaalan 2012, 2013): 1) increasing the NEs to 11 types by adding time, measurement, phone number, filename, date, price, percent, and ISBN; 2) investi gating two more ML models: SVMs and Logistic Regression; and 3) increasing the features to a larger set by adding morphological features and an English-gloss c apitalization feature.
The experimental results showed that the hybrid Arabic NER a pproach outperforms the rule-based and the ML-based components when they are pro cessed individu-ally. The performance obtained using ANERcorp for F-measur e was 94.4% for person, 90.1% for location, and 88.2% for organization NEs. 11. Conclusion NER is one of the most fundamental and important tasks for dev eloping NLP systems. Accurate identification of NEs from the text plays an importa nt role for a range of
NLP systems such as machine translation and information ret rieval. The literature demonstrates that explicitly devoting one step of processi ng to NE identification helps such systems achieve better performance levels.
 on electronic media, such as Web pages, blogs, e-mails, and t ext messages, which makes automated NER for the Arabic text relevant. In this survey we have presented various challenges to processing Arabic NEs, including highly ambi guous Arabic words, the absence of rigorous standards of written text, and the curre nt state-of-the-art in Arabic NLP resources and tools.
 and annotation. The number of current state-of-the-art of A rabic linguistic resources is still insufficient compared with Arabic X  X  actual importanc e as a language. Many existing
Arabic NER resources are annotated manually or are only avai lable at significant ex-pense. We have described some research that adopted semi-au tomatic (bootstrapping) methods in order to enrich Arabic NER resources from diverse text types such as Web sources and (multilingual) corpora developed within evalu ation projects. In the Arabic
NER field, NEs falling under proper names representing perso n, location, and organi-zation names are commonly applied to newswire domains, refle cting the importance of these limited NEs in this domain.

NER systems: linguistic rule-based, ML-based, and hybrid a pproaches. Rule-based sys-tems follow a classical approach and ML-based systems follo w a modern and rapidly growing approach. The main reasons for choosing the rule-ba sed approach are the lack and limitations of Arabic linguistic resources, optim ized platform architectures for rule-based systems, and the high performance of such system s. In addition, ML-based approaches have proven their usefulness as they take advant age of ML algorithms by building models that include learning patterns associat ed with individual entity types trained from annotated data. The success of both the ru le-based and ML-based approaches motivates the investigation of a hybrid Arabic N ER approach, yielding significant improvements by exploiting the rule-based deci sions on NEs as features used by the ML classifier.
 mance of NER systems. We reviewed many attempts to select fea tures that investigate the sensitivity of each entity when applied to different set s of features. We showed how researchers applied different techniques that benefit d ifferently from the enabled features and obtain different results for varying NE types. Some suggest that NER for Arabic use not only language-independent features but also Arabic-specific features.
Researchers sometimes exploit language-independent feat ures based on promising variables, such as lexical and orthographic features, to ov ercome the problems related 502 to the Arabic language and orthography. Lexical features av oid complex morphology by extracting the word prefix and suffix sequence of a word from the character n -gram of leading and trailing letters. Orthographic features att empt to overcome the lack of capitalization for NEs in Arabic by relying on the correspon ding English capitaliza-tion of NEs. Alternatively, other researchers suggest incl uding a rich set of language specific features extracted by Arabic morpho-syntactic too ls in order to deeply analyze the inherent complex structure of NEs within their context. Regardless of the features selected, various studies have reported that significant sy stem performance is achieved when a combination that includes all features is enabled.
 Arabic NER systems. IDEs are convenient for rapid developme nt of NER systems.
GATE is more diversified and comprehensive for developing ru le-based Arabic NER systems because it has built-in gazetteers and rules offeri ng the ability to create new ones. On the other hand, the availability of diverse generic ML tools is sufficient for developing a wide range of Arabic NER classifiers. The main pr oblem with these generic tools is that they are language-independent with li mited support for Arabic. Fortunately, the availability of Arabic morpho-syntactic pre-processing tools, such as
BAMA and its successor MADA for morphological processing an d AMIRA for BPC, has lessened the need for extensive development efforts.
 evaluation by calculating the value of Precision, Recall, a nd F-measure. Sometimes it is too expensive to acquire linguistic evaluation resources t o compare a proposed system X  X  performance to existing systems. Fortunately, the increas ing contributions from the
Arabic NLP research community have been sufficient to provid e a practical solution and satisfy the critical need for free corpora and gazetteer s (e.g., ANERsys, which can be used to compare Arabic NER under different experimental s ettings).
 should be noted that the list of references provided here may not be comprehensive.
Our aim was to provide a review of the essential aspects of Ara bic NER and discuss major publications that have made use of those ideas. We hope that this survey provides a way to access the main branches of the literature dealing wi th Arabic NER research and guides researchers in interesting and fruitful researc h directions.
 in other natural languages, studies of NEs in one language co uld provide mutual and valuable insight for developing resources and technologie s that can handle NEs in many languages. This survey describes the progress made by A rabic NER research.
This study might be easily extrapolated to most NLP tasks in g eneral and to many of the morphologically complex/rich languages in particular .
 References 504 506 508
