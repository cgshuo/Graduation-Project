 Social media such as Twitter has become a comprehensive platform for users to obtain information. When searching over the social media, users X  initial interest is usually vague. However, their search intents are usually linked to an entity. As related entities can reflect different aspects of a topic, users often choose them to expand their queries. Previous studies mainly focus on how to use related entities as a feedback process. However, they simply adopt entities from single source such as DBpedia, which is not adequate to cover various search intents from our point of view.
 engine. For a certain query posted from users, related entities are offered in the first phase, to help users better understand hot aspects of the initial topic. According to the nature of selected source, two kinds of related entities, i.e., real-time entities and historical entities, are adopted. Real-time entities extracted 2.1 Phase I: Entity Extraction In the first phase, EEST accepts a certain query submitted from a user, and we denote it as OriginQuery . To help users better understand hot aspects about the given query, related entities are extracted from multi-source. Extracted enti-ties could be divided into categories of real-time entities and historical entities. Google News and Twitter are chosen as real-time entities source while Freebase and News Embedding are selected as historical entities source.  X  Google News is our first choice as news is more formal and brief compared to normal text. OriginQuery is retrieved in Google News, and the latest related news is returned. We extract related entities from these news text by using named entity recognition (NER) [ 3 ]. In particular, three kinds of entities are involved, i.e., Person, Location and Organization.  X  Twitter is a popular application for users to share and discuss information.
Just like Google News, related tweets are retrieved from real-time Twitter steam, then related entities are separated out.  X  Freebase is a practical, scalable tuple database used to organize general human knowledge [ 1 ]. We take advantage of the summary description infor-mation in Freebase to get a descriptive text about OriginQuery . Similarly, we extract entities from the description content via NER.  X  News Embedding Currently, the distributed word representations (i.e. word embedding) have attracted more attention in text understanding. The word embedding allows to explicitly encode various semantic relationships as well as linguistic regularities and patterns into the new embedding space [ 2 ]. For this purpose, we downloaded pre-trained vectors trained on part of Google News dataset 2 . Then we can compute the cosine similarity distance of OriginQuery and other terms in the vocabulary. The top k scored terms are regarded as related entities to the given query.
 sen entity. This ExpandedQuery is going to be transmitted to second phase as input. 2.2 Phase II: Result Presentation ExpandedQuery is submitted to the Twitter Search 3 in the second phase, and related users and related tweets are obtained. For related users, profile images and lots of statistical information are provided, including followers number, fol-lowing number, tweets number, etc. For related tweets, TTG is conducted on them with the goal of noise elimination and representative tweets selection. We adopt a star clustering algorithm proposed in [ 4 ] as our TTG core algorithm. After that, a clear and representative tweets list will be unfolded in front of users. 3.3 C -Related Tweets Module Related tweets talking about  X  X bama X  and  X  X raq X  are displayed in this module. Redundant tweets are clustered to their representative tweets, which makes the related tweets list readable and clear. In this paper, we have described a demonstration of a multi-source entity-driven search engine for Twitter, called EEST. We presented our initial motivation and the proposed methods, as well as the main functionality of the system. With the help of related entities, users are able to better understand their informa-tion need. At the same time, summarized information can save users X  time for browsing the retrieval results.

