 1. Introduction even foster the automated generation of such domains [1] . These models can de for describing these knowledge models.
 events, actions and the state of the system. In order to de languages and methodologies are supported by other formal languages that claim to model system speci be applied to XMI, whereas OWL [11] and SWRL [12] can model behaviour speci to contradictory, forbidden or inconsistent situations should be guaranteed.
Several successful attempts for developing con fl ict detection processes are provided in [14 basis. They provide a set of con fl ict detection types according to de inserted in a con fl ict detection process which performs an analysis taking into account some con con fl ict detection process three kinds of models can be obtained: con undetected models. The fi rst ones represent situations where no con containing con fl icts which are detected and the third ones represent situations containing undetected con that con fl icts may be detected or not, depending on the chosen con detection method is the key to perform a quality con fl ict recognition.
According to Lupu et al. [17] and Mofferr et al. [20] ,con in two different types: modality con fl ict and con fl ict of goals .The time,thesubjectisnotauthorizedtoperform thatactiononthesametarget.Inthiscase,amodalitycon negative authorizations are granted. On the other hand, a con authorizepaymentsandsignthepaymentchecks.Inthatcase,thecon subject on thesamecheck. Con fl ict of goals have beenlately referred assemantic con of con fl ict will be indistinctly referred as con fl ict of goals or semantic con
Likewise, while modality con fl icts have been studied in several research works like [16,17,23 dependent of the modelled domain.

This research work is focused on semantic con fl ict detection. Semantic con require working with the meaning of concepts. This fact makes their detection more complex than modality con dealing with realistic scenarios of information systems management.

Consequently, this contribution tries to address the challenge of de different con fl ict classi fi cations in order to contextualize and expose ourclassi perform the semantic con fl ict detection. Exempli fi cations of the main semantic con semantic con fl ict detection. Some statistical and performance results of these different con Section 7 . Finally, conclusion and future work are drawn in Section 8 . 2. Taxonomy of management con fl icts
According to The American Heritage Dictionary of the English Language [31] , a con the actual or perceived opposition of needs, values and interests... information systems management, this section proposes a con may appear in this context.

Focusing on system management, there are several research works providing con con fl ict types, extending, refuting or modifying other existing classi group and unify all of them together could contribute to an homogenization of available con proposed con fl ict taxonomy, which results from exploring different con aim of providing a complete classi fi cation including most of them.
 different authors. Mofferr et al. [20] promote two different types of con into account the underline application domain, i.e., they are application-independent con independent of the information system modelled. In turn, two different types of modality con semantics. So, these con fl icts appear as semantic con fl
In turn, the con fl ict of authority is divided in two different subtypes of con former occurs when a subject is able to perform actions which may con
As far as they are concerned, Lupu et al. [17] and Sloman et al. [21] extended the positive / negative con
Mofferr et al. [20] in two different types: positive / negative authorization con depending on the nature of the statements. Thus, in authorization ones the statements de perform activities on a set of targets, while in obligation ones they de activities on a set of target objects.

Additionally, Giorgini et al. [29] provides an alternative classi possibly personal  X  interests of the delegate interfere with the interests of the delegator. con administrative domain or not, respectively. Analogously, self-monitoring con attorney-in-fact con fl ict is a new type of con fl ict caused by delegation capabilities.
Moreover,Jajodia etal. [32] providesacompletelydifferenttaxonomyofcon for the con fl ict of duties in the context of an authorization scenario: static con role assignment , which arises when two incompatible roles are assigned to the same subject; and the con withthe con fl ict ofinterest providedbyMofferretal. [20] .Breweretal. [33] providethe Chinese Wallcon con on behalf of one of them. After that, he can no longer perform actions on behalf of the other company.
In our proposal, these two subtypes of the con fl ict of duties de
Wall con fl ict is considered under the de fi nition of the role con assignment and incompatible role activation exposed by Jajodia et al. [32] are considered under the con to their analogy with this kind of con fl ict.
From a different perspective, Kamoda et al. [34] provides the following con proposal in Lupu et al. [17] ; Chinese Wall con fl ict and con or users and this propagation is con fl ictive; and con fl performed in the information system and these complex actions are composed of elementary ones which are con et al. [20] . So, this kind of con fl ict does not really provide a signi the con fl ict. Analogously, the con fl ict of action composition is a special case of semantic con modelled on the system, but it does not entail a new kind of con
Another con fl ict taxonomy is provided by Syukur et al. [35] , in which three different types of con con fl ict , which matches with the de fi nition of Mofferr et al. [20] ; role con
Giorgini et al. [29] ; and con fl ict of entities that matches with the con
On another side, Hall-May et al. [22] provides another con negative con fl ict , permission/obligation con fl ict , deductive re con fl ict of interests , con fl ict of duties , dependence con kinds of con fl ict previously de fi ned by other authors, it is worth to focus on the dependence con deductive re fi nement con fl ict . The con fl ict of resources de
Moreover, although the deductive re fi nement con fl ict is not considered as a con importance to realize that policies may not always be in con related to the time and physical state, respectively.
 con fl icts in application-independent con fl icts and application-dependent con con fl ict  X  following the Lupu et al. [17] de fi nition  X  identical policies on the system. On the other hand, application-dependent con con fl ict , inconsistence con fi guration con fl ict and other con included. The mutex con fl ict arises when two incompatible policies are ful domain. The inconsistence con fi guration con fl ict is de establishes the maximum bandwidth allowed to a given value. This con exceeding the maximum bandwidth allowed.

Apart from inconsistence con fi guration con fl ict , all the previous con inconsistence con fi guration has been left aside due to its overlapping with the con
As can be observed, different authors propose different con single taxonomy for con fl ict classi fi cation. Most of the authors only expose different con subtypes of con fl icts. 3. Knowledge representation in information systems applied for con fl ict detection. However, these domain models are usually customized and adapted for con the Semantic Web [36] . For instance, Kamoda et al. [19] describes the knowledge needed to allow their con but they do not expose how this knowledge should be modelled. Chomicki et al. [30] explains con an application domain which is not described.
 detection process. By adopting this approach, a complete and well-known model to de underline knowledge base, instead of a partial and customized model for speci implementation independent way. Additionally, CIM [41] created by the DMTF provides a common de management information between systems throughout the network.

From all these information models, CIM has been selected as the most suitable alternative to perform con model has been used in a wide variety of research works such as [43
CIM provides a consistent information model with well-de fi technology-speci fi c extensions of the common model.

CIM employs modelling techniques from the object oriented paradigm to provide a common and extensible de management-related information. The descriptions of the model are provided by the CIM meta-model, which de to express the models with its usage and semantics. Among its main elements is the term Class , which de available in order to check, validate, simulate or detect con [49] technologies, in which information is constantly being discovered, modi allows the de fi nition of rules with negative atoms, custom relationships between properties and the de detection processes exposed in the following sections.
 work load required by the reasoner to process and manage the ontology. (assertional) components. The former contains the schemes and vocabularies that de situation in the domain, according to those schemes. In this context, an individual is de application domain by means of instances, while an instance is de a given class. 4. Domain model
This section introduces the domain model used in this paper to perform the con the previous section, uses CIM represented in OWL as ontology, and SWRL to express the rules which de several scenarios that will be used to illustrate different kinds of semantic con give an overview of the model from the con fl ict detection point of view. order to get the desired behavior in the system.
 an identity using the AssignedIdentity association, unifying in this way, by means of identities, the subjects which are able to perform actions in the system.

Those actions may be performed directly by subjects or they can de subject which de fi ned the rule is also necessary and it is represented in the model using the RuleDe from CIM or are extensions to it. Although not depicted in the classes, as well as the AssignedIdentity property are de fi belongs. The rest of classes of this ontology are not shown in the
RuleDe fi nedByIdentity and RuleAffectsIndividual properties have been de two ontologies, a uni fi ed knowledge base is obtained from two different information sources. The the behavior of the system and they are modelled using SWRL Ontology. act against certain situations. For example, this is the case of rules created by an administrator to de the system. On the other hand, there are the rules which are de privilege which administrators have over a document service to a recently created role for document managers:
The fi rst three lines in DocumentManagerPrivileges rule de CIM and therefore they are also available in our domain model.
 the various types of semantic con fl icts.
 detection. Further sections will show more parts of the model, including more speci inherit from ManagedElement or any of the classes presented here, although not explicitly depicted in 5. Types of semantic con fl icts related to such systems appear. Detection rules are also provided to detect the semantic con techniques and algorithms to detect some types of semantic con standardized information model. This fact remarks the lack of con modelled application domain.

Focusing on semantic con fl icts , the proposed taxonomy contains: redundancy con multiple-managers con fl ict and self-management con fl ict .

The con fl ict of authority is divided into the con fl ict of duties and the con con con fl ict. For instance, static and dynamic con fl ict of interest differ on the reason why these con meaning of the con fl ict is exactly the same.

Regarding the con fl ict of priorities , since this kind of con one simultaneous access is carried out, an inconsistency on the knowledge base is produced, causing the con
Considering the semantic con fl ict of redundancy , it is detected by a formal veri
B X ez et al. [53] . Due to the number of works dealing successfully with this type of con proposal. Apart from these exceptional cases, the rest of semantic con in Section 3 andthede fi nitionsofthedifferentkinds ofcon means of CIM models represented in OWL, the second one is de and it needs a DL reasoner to infer new knowledge, the con application domain. Thus, since SWRL rules de fi ning con con fl icts by inferring inconsistent facts when con fl ictive situations arise in the information system.
Notice that in the following subsections, the consequent part of the rules used to detect the semantic con  X 
Con fl ict  X  in inverted commas. Particular consequents of con different ways of generating con fl icts will be analyzed. 5.1. Con fl ict of interests or of fi cial capacity in some way for their personal or corporate bene
Infrastructure (PKI) scenario in which a user performs a certi
Authority (RA) that gives the approval for the CA to issue the certi
This process guarantees the trust and validity of the certi compromising the trust of the system. This example illustrates a semantic con bene fi t by issuing invalid certi fi cates which could then be used for illegitimate actions.
CredentialManagementAction class which represents actions that can be done against credentials, like a certi credentials.

But the two actions which take place in this scenario are not concurrent. The user requests the certi to the identity validation by the RA. Since both actions should be taken into account for con done when the second action  X  approval of identity  X  is requested, but in that moment the more available since it was already fi nished. To solve this issue, the needed data of the represent exactly the same information as the original action, but once the appropriate changes to this part of the model and the affected rules.
Bothactionsandlogrecords  X  whichintheendrepresentalreadyexecutedactions requester should be authenticated in the system as employee to request a certi authenticated to validate the certi fi cate request once the requester identity has been veri
In this example, Alice is the RA responsible and she has requested a certi certi fi cate and credential management service, meaning that Alice has requested Bob's certi responsible, Alice validates Bob's certi fi cate request, proceeding with the issuance of the signed certi con fl ict of interests in which Alice is using her RA privileges on her own interest to issue a certi which can be used to impersonate Bob with respect to the system. To detect this kind of con de fi ned: been requested by itself. When all these conditions are ful which will be exposed in the Section 6 . It should be noticed that this con any situation which may present a con fl ict of interests in the managed system. 5.2. Self-management con fl ict de fi nition of its duties on the system, what can be also used on his own bene as system administrators or department managers. It should be noticed that, while the other kinds of con section are based on the execution of actions, this one is based on changes of the rules which de system.
 managed by the administrator by specifying rules which de showing the needed classes for this authorization scenario.
 con fl ict, the rule which modi fi es privileges and the subject which de Imp class and its associations.
 shown in Fig. 6 .
 although it was not intended by the system administrator, rising this way a semantic self-management con rule is de fi ned to detect it.

The third line of this rule determines that the rule should have been de If this situation occurs, then a self-management con fl ict occurs.

Given this rule, it is easy to also deal with this kind of con reasoner will infer that the privilege applies to the identity and the con capability provided by OWL can be taken to detect the con available in OWL, the MemberOfCollection association can be de
Thus, the SelfManagementCon fl ict rule is able to detect the self-management con belong to that role and she de fi nes a rule which creates the MemberOfCollection association. The proposed con method may still be applied to detect the occurrence of any other self-management con associations by just adding the appropriate detection rules. 5.3. Con fl ict of duties and con fl ict of multiple-managers
Once the two fi rst con fl icts have been explained in detail, and for clarity reasons, the two other con reader will fi nd similarities between the examples provided for the four types of con techniques being analysed and the scenarios where different performance measurements have been taken. 5.3.1. Con fl ict of duties different goals or bene fi ts. To expose this kind of con connections between corporate of fi ces and it also has a sniffer to monitor the network traf
The fi rst one orders the agent to secure every communication between of con agent requests the sniffer to monitor the traf fi c which on such a card uses a VPN which is cyphering data with ESP.

The con fl ict comes up when trying to sniff the traf fi c whose security association contains an ESP transform and, therefore, the traf to read cyphered traf fi c which cannot be used for monitoring purposes. The following rule has been de con fl ict: contains an ESP transform which is the one that cyphers the traf 5.3.2. Multiple-managers con fl ict con semantically correct because it makes no sense to scan an already cyphered object. The con cyphered element and the rule which detects it has been de scan action is performed on this element. 6. Different strategies for con fl ict detection
The usage of OWL and SWRL as modelling languages for information systems where rule con
Following subsections expose different ways of detecting semantic con base. This inconsistency will be detected by DL reasoners which will alert about the detection of the con
Two different ways for detecting con fl icts have been mainly identi con fl ict detection; in this approach the administrator de
Section 5.1 to illustrate the different detection methods in order to exemplify them using a uni 6.1. Detection based on disjoint classes construct in OWL language. Following this approach, the con classes, the knowledge base becomes inconsistent and the reasoner detects it. relationship between these con fl ictive actions, causing the detection of the con part of the Con fl ictOfInterests detection rule can be de represents the more relevant facts for the detection of the con using this method and the results generated by the fi ring of the Con
Listing 1 . Con fl ict detection based on disjoint classes b !  X  Con fl ict of interests scenario  X  N Identity(#Alice) PublicKeyCerti fi cate(#BobCerti fi cate)
RequestCredentialLogRecord(#BobCerti fi cateRequest) logRecordByIdentity(#BobCerti fi cateRequest, #Alice) usedCredential(#BobCerti fi cateRequest, #BobCerti fi cate)
ValidateCredentialAction(#BobCerti fi cateValidation) actionRequestedByIdentity(#BobCerti fi cateValidation, #Alice) actionOnCredential(#BobCerti fi cateValidation, #BobCerti
CredentialManagementService(#PKIService) executedCredentialManagementService(#BobCerti fi cateRequest, #PKIService) credentialManagementServiceToExecute(#BobCerti fi cateValidation, #PKIService) b !  X  Disjoint de fi nition for con fl ict detection  X  N disjointWith(ValidateCredentialAction, RequestCredentialLogRecord) b !  X  Fact inferred by the con fl ict detection rule  X  N sameAs(#BobCerti fi cateValidation, #BobCerti fi cateRequest) detection. In fact, when the inconsistency is raised, the individual who caused the con resolution are going to be applied after detection in order to resolve the con requires the usage of, at least, OWL-DL since the disjointWith construct is de 6.2. Detection based on contradictory properties
Negative properties were introduced in OWL 1.1 and lately in OWL 2. A negative property de used for semantic con fl ict detection. OWL 2 provides NegativePropertyAssertion construct to de
This method assumes that either a positive or a negative property is de detect the semantic con fl ict. Detection rules will search in their antecedent part a con knowledge base, making the reasoning process to alert about the con which the con fl ict cause resides in a property rather than in the membership to a particular class.
In the PKI scenario depicted in Section 5.1 a subject is trying to validate a certi the antecedent of the Con fl ictOfInterests rule is ful fi method is de fi ned as follows:
Listing 2 shows the knowledge which is inferred by the Con using this detection method.

Listing 2 . Detection based on contradictory properties b !  X  Fact inferred by the con fl ict detection rule  X  N Neg(credentialManagementServiceToExecute(#BobCerti fi cateValidation, #PKIService))
The advantage of this method is the intuitive way in which the consequent part of the rule is de negative assertion that the service should not be executed because of a con con that this method requires OWL 2 to support the negative property speci from OWL which is decidable, i.e. reasoning processes can be done in computational complexity, since it requires complex reasoning techniques such as the provided in SROIQ [56] . 6.3. Detection based on complement classes consistency of the knowledge base. Hence, this inconsistency can also be used to detect semantic con de fi nition of a class. Similarly to detection based on disjoint classes, rule consequents state that the con de fi ned as complement classes, producing an inconsistency in the knowledge which will be detected by the reasoner.
In the example provided in the PKI scenario in Section 5.1 , the ValidateCredentialAction class is de
RequestCredentialLogRecord class. Then, as done in the disjoint classes method, when the antecedent of the Con is ful fi lled, its consequent de fi nes an equivalence between the two con consequent of the rule is, therefore, the same as the one de
Listing 3 shows the complement de fi nition and the knowledge which is inferred by the Con the scenario described in Listing 1 using this detection method.

Listing 3 . Facts involved in the con fl ict detection based on complement classes b !  X  Complement de fi nition for con fl ict detection  X  N
ComplementOf(ValidateCredentialAction, RequestCredentialActionLog) b !  X  Fact inferred by the con fl ict detection rule  X  N sameAs(#BobCerti fi cateValidation, #BobCerti fi cateRequest)
Again, traceability is an advantage of this detection method, since a relationship between the two con established by the consequent of the rule. Hence, the cause of thesemantic con resolution methods. Moreover, this method requires OWL-DL to be used, since the ComplementOf construct is de 6.4. Detection based on the empty set membership belonging to the empty set implies an inconsistency which can be used to detect semantic con when a con fl ictive situation is detected, the consequent of the rule states that the con detected by the reasoner which alerts about the con fl ict.

In the previous PKI scenario exposed in Section 5.1 , a con she is trying to validate it. In that case, the ValidateCredentialAction action cannot occur and it is de consequent is de fi ned as follows:
Listing 4 shows the knowledge which is inferred by the Con using this detection method.

Listing 4 . Detection based on the empty set membership b !  X  Fact inferred by the con fl ict detection rule  X  N Nothing(#BobCerti fi cateValidation)
The Nothing axiom is de fi ned in OWL-Lite. Therefore, this con allows fast reasoning processes leading to a theoretically fast con again the lost of traceability, since it does not establishes a relationship between the two con may be not available for further processing. 6.5. Detection based on modelling con fl ictive individuals be added to the application domain in order to perform the con be provided by means of a Con fl ictive class to represent the individuals which produce the con
The way in which this con fl ictive concept is de fi ned allows the de when a semantic con fl ict is detected. But, in order to make the reasoner process to alert about the con be produced in the knowledge base. This can be achieved by de between this class and the Con fl ictive one means that the elements of the system cannot be con method, the consequents of rules de fi ne that the instance representing thecon class. The existence of such an instance belonging to both the ManagedElement and the Con which is a con fl ictive element and it causes inconsistency in the knowledge base.
Applying this approach to the PKI scenario of Section 5.1 , the con the consequent part of the rule determines that this validation action is the con
Con fl ictive class. The rule consequent is de fi ned as follows:
Listing 5 shows the Con fl ictive class de fi nition and the knowledge which is inferred by the Con to the scenario described in Listing 1 using this detection method.

Listing 5 . Detection based on modelling con fl ictive individuals b !  X  Con fl ictive class de fi nition for con fl ict detection Class(Con fl ictive)
DisjointWith(Con fl ictive, ManagedElement) b !  X  Fact inferred by the con fl ict detection rule  X  N Con fl ictive(#BobCerti fi cateValidation) representation of con fl ictive individuals, which implies having an arti represent information which may be used by further processes. For instance, a property may be added to the Con apply this method since the DisjointWith construct is de fi 7. Results and performance extrapolated to other scenarios by analogy. Analysing all these con providing performance measures for each analysed method.

Moreover, in order to provide some metrics about the detection of different kinds of con previous analysis is the one chosen to perform the measurement of the different kinds of con con method. Thus, for the con fl ict detection based on modelling con
Finally, another issue that should be addressed is the de
SWRL and their antecedent have been de fi ned following the rules de consequents have been speci fi ed according to Section 6 for the different detection methods. ontologies and the reasoner function for the different con performance results.
 different populations used during the analysis. 7.1. Populations
A possible approach to measure the performance of the con that can be hold in the ABox component and the number of individuals that are de size is the following one: population of 180.000 individuals leads to more than 2.2 millions of statements for the semantic con ( Table 1 ).

Once the population size has been de fi ned, it is necessary to de percentages intend to model realistic scenarios and they will be used to generate the populations. used to measure different timings associated to population loading, consistency checking and con this analysis.
 management con fl ict scenario generates a big amount of statements. This is because this scenario de single rule requires several statements to be represented. 7.2. Simulations Machine has been the Sun JDK 1.6 tuned up to 2 Gb of maximum heap size.
The testbed is basically composed of three different tests executed against ten incremental populations. The important test is about the time that the rule reasoner requires to detect the con present in the ontology. This time is referred to the consistency checking operation that rises the con according to the detection strategy which is being tested.

The achieved results conclude that the detection based on con is compared with the other ones. This result seems to indicate that con empirically determined as the worst detection strategy, even though it uses OWL-Lite. knowledge base consistency and it is empirically proved that the individuals , the testbed has been launched for each scenario using this detection method. different metrics. One of them de fi nes the time required to perform the consistency operation in a non con the other one de fi nes the time spent to perform this operation in a con consistence checking operation shows different statistics. Thus, the con check the consistence. Hence, the con fl ict of interests and the con sharing almost the same number of statements.

A special case is the performance achieved in the self-management con the time it spends to perform the consistency checking, which also executes the rules, is quite higher. when dealing with a consistent knowledge base than when dealing with an inconsistent one, it is quite dif estimation about this relationship because of its domain dependency. 8. Conclusion and future works subject at the same time) and not many on semantic con fl rules are being applied. This second group of con fl icts is usually more dif information systems.

This paper focuses on the detection of con fl icts of semantic nature. As these con and there is not a common agreement, this paper is fi rst doing an effort to de relevant works in this fi eld, including both modality and semantic con of interests, self-management con fl ict, con fl ict of duties, and multiple-managers con ones, a realistic domain is described and an example of con
Then, fi ve different strategies for con fl ict detection are presented to the reader and exempli performance measurement is provided, determining that the detection based on modelling con detection approach which obtains the best performance.
 important result of the paper and provides an innovation over current existing research works in this needed to check the scenario consistency is higher when there is no con
Our work is now focused on the design of a distributed architecture in which semantic con another future work will be to analyse and de fi ne con fl in order to get constructors and operators in these languages to de between con fl icts and causes would be another interesting research. Finally, a detailed study on how con explicit on the scenario representation, is also being considered.
 Acknowledgements Research Groups of Excellence with code 04552/GERM/06 granted by the Fundacion Seneca.
References
