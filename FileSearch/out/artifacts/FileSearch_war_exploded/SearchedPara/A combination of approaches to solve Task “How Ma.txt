 This paper presents a solution to the KDD CUP 2007 task  X  X ow Many Ratings? X . The combination of three different approaches is used to produce a final solution which improves the results obtained by each of these procedures by itself. I.5.1 [ Pattern Recognition ]: Models  X  statistical Predictive modeling, forecasting, data mining. The KDD CUP 2007 task 2 is based on a competition p roposed by Netflix (http://www.netflixprize.com). For the Netf lix competition a training data set of more than 100 million rating s associated to user-movie pairs is provided [1]. This data was col lected between October 1998 and December 2005. The aim of the cont est is to estimate around two million ratings achieving an av erage prediction error lower than a prefixed value. The purpose of this second task of the KDD competit ion was to forecast the number of ratings to be obtained durin g 2006 by 8.863 movies randomly chosen from the Netflix data set. An important constraint for this task was that only ra tings given by users existing in the Netflix data file could be ta ken into account, that is, ratings of users registered in 2006 were n ot considered. To accomplish such goal, three methodologies were d eveloped: None of these methods provided an optimal result, b ut their 2006 new users will not be counted, but also becaus e the number than expected. To solve this problem, the number of users which sh ould have qualified was estimated, comparing month by month n ew user percentages in 2005 and the average value associate d to the 2002-2004 period. Computing the difference between estimated and real data (stored in the Netflix training dataset), historical data w ere corrected, eliminating an identical percentage of new users in the final months of the previous years. The next table (Table 1) shows the percentages of u sers which started their reviews within a month that were elim inated in order to emulate the behavior observed in 2005 according to the latest months of the analyzed period. This procedure was a dapted for movies and applied to the KDD CUP 2007 task 1. A fu ll description of it can be found in the paper associa ted to task 1. The K-neighbors method represent movies as vectors. The values contained in these vectors, make reference to the n umber of monthly ratings, excluding reviews given by users r egistered on the year associated to the month. These vectors have been split in two parts: Finally, the forecast error achieved by this method over the scoring data was 0.5828. This approach adjusts ARMA models [2] to as many mo nthly rating time series as movies. Once again only ratin gs given by users registered before the beginning of the year w ere taken into account. All the series were smoothed, eliminating the trend effect caused by the annual increase of users and correcting mont hly level shifts. The user registration effect was suppressed by computing annual factors as the ratio between existing users in the considered year and users existing at the end of 20 05. Monthly level shifts were corrected by using monthly factor s which allowed an increase in the number of ratings in mon ths where this quantity had been lower or decreased otherwise. In a last stage, ARMA models were adjusted to these smoothed series. The procedure was only applied to movies ov er one year old. The ARMA model finally chosen for the fit was an AR MA(1,1): where t Movie X , defines the time series associated with the number of rating obtained by the movie within a tim e unit (a month), appropriately smoothed out as described, an d B is the lagging operator. In this case, the forecast error achieved over the scoring data was 0.9485. This method X  X  poor performance is probably due to generally short data histories available for series construction. The third method is quite simple and does not use a ny mathematical model. The monthly behavior of ratings corresponding to different movies was analyzed, exc luding ratings given by new users registered on the year a ssociated to the month under analysis. For instance, next figure (Figure 3) shows monthly average percentage of ratings during 2005 for movies that b egan to be rated prior to January 2005, by users registered pr ior to January 2005. The noticeable decreasing trend shown at the end of Figure 3 gives its name to this method. The following variables were included in that model : The final model implemented consisted in a neural n etwork model with perceptron architecture [4] and a hidden layer integrated by 5 nodes. The forecast error achieved over testing dat a with this model was 0.49. Given that the final error over the scoring data was 0.5227 the model was considered to be  X  X verfitt ed X . The reason for this could be the reduced number of movi es (around 7.000) that took part on the training. To end with, two graphs were produced. The first on e was residual against forecast using the training set an d the second one residual against forecast using the scoring set (Fi gures 4 and 5). Figure 4 shows that the residuals have been properl y adjusted in the first case. However, Figure 5 shows that movies with the highest levels of ratings have been overestimated o ver scoring data. We are very grateful to Neo Metrics for the support they have given us since the beginning of this project. In pa rticular we are in debt with Ana Alvarez, Natalia Molina, Maria Sala a nd Maria Sanchez for their efforts put forth in order to sol ve this task, and Juan-Carlos Iba X ez and Fausto Morales for his help in writing this paper. We would also like to express our thanks to the KDD CUP organizers for the work they have carried out. [1] J. Bennet and S Lanning. The Netflix prize . KDD Cup and 
