 More often than not, people are active in more than one social net-work. Identifying users from multiple heterogeneous social net-works and integrating the different networks is a fundamental is-sue in many applications. The existing methods tackle this prob-lem by estimating pairwise similarity between users in two net-works. However, those methods suffer from potential inconsistency of matchings between multiple networks.

In this paper, we propose COSNET (COnnecting heteroge-neous Social NETworks with local and global consistency), a novel energy-based model, to address this problem by considering both local and global consistency among multiple networks. An efficient subgradient algorithm is developed to train the model by converting the original energy-based objective function into its dual form.
We evaluate the proposed model on two different genres of data collections: SNS and Academia, each consisting of multiple het-erogeneous social networks. Our experimental results validate the effectiveness and efficiency of the proposed model. On both data collections, the proposed COSNET method significantly outper-forms several alternative methods by up to 10-30% ( p  X  0 : 001 , t -test) in terms of F1-score. We also demonstrate that applying the integration results produced by our method can improve the accu-racy of expert finding, an important task in social networks. H.3.3 [ Information Search and Retrieval ]: Text Mining; H.2.8 [ Database Management ]: Database Applications X  Data Mining Algorithms, Experimentation Social network, Network integration, Energy-based model c  X 
We are facing an era of online with offline (OWO) X  X lmost ev-eryone is using online social networks to connect friends or, more generally, to satisfy social needs at different levels [26]. In fact, many users participate in more than one social network, such as public networks and private networks, as well as business networks and family networks. We conducted an interview with 20 graduate students from the authors X  lab. Preliminary statistics show that the average number of social networks in which a user participates is eight. The intentions behind these choices are sophisticated. For example, people may be attracted by different functionalities of-fered by different social networks. A survey 1 in the US shows that two-thirds of online adults (66%) use social media platforms such as Facebook, Twitter, MySpace, or LinkedIn, to stay in touch with current friends, family members, and business partners. Users gen-erate heterogeneous content and also build different ego-networks in different social networks. One interesting and important ques-tion is: can we automatically integrate the different heterogeneous social networks together? The results can benefit many applications in one way or another. For example, if we could correctly integrate different social net-works together, we could create an integrated profile for each user, and build a better user interest model. Talentbin 2 uses this idea to integrate professional information of an employer that scattered in different social networks to provide a better view of expertise. We can also leverage the integrated results to help social recommenda-tions [25, 32].

The problem is fundamentally important in social network anal-ysis and is also very challenging. First, users X  information in dif-ferent networks is very unbalanced. Some network may contain rich profile information such as location and interests, while some others may not have any information. Users X  behavior is an im-portant clue (also referred to as social fingerprint [40]) to help recognize users in different networks. If we use the similarity s ( u; v ) ; u 2 G 1 ; v 2 G 2 between users to link users from two different networks ( G 1 and G 2 ), the problem can be formalized as an optimization problem: max be solved efficiently by using a minimum cost flow algorithm [1, 34]. This formulation focuses on local consistency based on user profiles; however, it does not consider the network structure X  X n identical user in different networks may have similar ego-networks. Finding matches between the users of two networks G 1 and G be mapped onto the problem of finding bijection between two net-works, a challenging problem in graph theory [36]. Approximation http://www.pewinternet.or g/2011/11/15/why-americans-use-social-media/ https://www.talentbin.com/, an online recruitment service. can be accomplished using a greedy algorithm. In our problem, this formulation aims to achieve network consistency, also referred to as network matching (Cf.  X  3). However, if we extend this problem to the setting of multiple networks, e.g., f G 1 ; G 2 ; ; G considering local consistency and network consistency is then in-sufficient. Figure 1 gives an example of connecting three different networks. User v 1 1 in G 1 has high similarities with v 2 v in G 3 (indicated by the green arrows), while v 3 1 has the highest similarity with v 2 3 in G 2 . If we match any two networks indepen-dently, it can be easily seen that we will have an inconsistent results: v $ v 2 is to consider all pieces of information (local, network, and global consistencies) in a unified model and tackle them simultaneously.
Despite several studies on various related topics including entity linking [22, 4, 5, 20, 29], entity resolution [6, 13, 21, 31], and de-anonymization [3], the problem of connecting multiple social net-works remains largely unsolved. Most existing works focus on esti-mating pairwise similarity between users from two networks. They ignore either network consistency or global consistency. Some other methods such as [20] and [6] consider the network consis-tency; however they are still targeting at two networks and do not consider the global consistency among multiple networks. Challenges and Our Solution. The problem of connecting het-erogeneous social networks is non-trivial and poses a set of chal-lenges. First, how to formulate local, network and global consis-tencies into a principled optimization model is a challenging issue. Moreover, as real networks are becoming larger and larger with millions of nodes, it is important to develop efficient algorithms that can scale up well. In addition, how to quantitatively validate the usefulness of integrated results is also a challenging task.
To address these challenges, in this paper, we conduct a sys-tematic investigation into the problem of connecting multiple so-cial networks. We formally define the problem and develop a gen-eral model to support the integration of an arbitrary number of net-works. Our contributions can be summarized as follows: Organization. The rest of the paper is organized as follows. Sec-tion 2 formally defines the problem. Section 3 is devoted to our COSNET model. Section 4 presents experimental results. Sec-tion 5 reviews related works and Section 6 concludes the paper.
Let G = ( V; E; R ) denote a social network, where V = f v 1 ; ; v N g is a set of j V j = N users and E V V is a set of relationships between users. Each element e ij =  X  v i represents a directed relationship from user v i to user v sider undirected relationships, then we have e ij 2 E , e Each user v i is associated with a d -dimensional attribute vector r (the i -th row in R ), which can be defined based on the user X  X  profile (e.g., interests or posted tweets). Given this, we define the input of our problem as follows.
 Input: The input of our problem consists of a set of m social networks G = f G 1 ; G 2 ; ; G m g , where G k = ( V k ; E represents the i th social netw ork with k 2f 1 ; 2 ; ; m denotes an j V k j d attribute matrix with an element r k the j th attribute of user v k i in G k . Throughout this paper, we use the integer superscript k to indicate variables (or notations) associated with the k th social network. Table 1 summarizes the notations used in this paper.
 Output: For a user v 1 i in the network G 1 2 G and a user v the network G 2 2 G , decide whether v 1 i and v 2 j refer to the same user in the offline real world.

A user may have multiple accounts in an online social network, which makes the problem much more complicated. For simplicity, in this work, we assume that one user has at most one account in an online social network.
In Section 2, we formulated the problem of connecting multi-ple networks as a binary classification problem, where our goal is to determine whether a pair of users from different networks re-fer to the same user. There are a lot of factors we can leverage to improve the classification performance. In this section, we propose an energy-based model [19] to jointly consider local user matching, network structure and global consistency.

Let X = f x i g be a set of user pairs for classification and Y = f y i g be the set of corresponding binary labels in f 0 ; 1 g means the user pair x i refer to the same user; otherwise not. We can define an energy function E ( Y; X ) to model the likelihood of a configuration of X and Y . The problem of connecting multiple social networks is to find an optimal configuration Y  X  given the user pairs X : where Y is the value space of the variable of Y . In our case, it is binary, i.e., Y = f +1 ; 0 g n , respectively representing whether a candidate matching is correct or not.

Figure 2 gives an example to illustrate how we generate can-didate user pairs X . For two input networks G 1 and G 2 containing three users, we could generate nine user pairs. Each node in Figure 2(b) represents a user pair (candidate matching) and the edge represents the relationship between two connected nodes (the corresponding two candidate matchings). The relationships are generated according to the neighborhood relationships in the original networks. Thus we could construct a matching graph M G (as defined below). The resultant matching graph might be very large, if the input two networks contain many users. We prune the generated matching graph using heuristics. Figure 2(c) shows an example of matching graph after pruning. The red edges indicates the one-to-one matching constraint as we assume that each user has at most one user account in each network.

We will discuss the detailed formulation of the energy function in the following sections.
First we define some local features for a single user pair x consider the similarity of user profiles, which is widely used in entity linking [4, 5, 20, 29] and object resolution [6, 13, 31].
Let g l ( x i ; y i ) be a vector-valued feature function for encoding the user profile similarity for the user pair x i . We model the local matching energy function as: where w l is a model parameter.
Local matching deals with each pair of users independently, and does not consider the network structure. To leverage the network structure, we should consider  X  X eighborhood-preserving match-ing X . The basic idea is that if user v 1 i 2 G 1 is matched onto v matched to v 2 j  X  X  neighbors in G 2 . In graph theory, the problem can be reduced to graph isomorphism, where the objective is to find a structure-preserving bijection between the vertex sets of two graphs [36].

Here we first introduce the definition of a matching graph , and then we will show how to incorporate the network matching idea into the energy-based model.

D EFINITION 1 (M ATCHING G RAPH ). Let V j i be the j -th ver-tex of the user pair x i where j takes a value in f 1 ; 2 be the neighbour set of user v in a social network. Given a set of social networks G and user pairs X , we construct a graph M G = ( V MG ; E MG ) by the following two steps: 1. For each user pair x i 2 X , construct a corresponding node 2. For two user pairs x i and x j , if V 1 i 2 N ( V 1 j ) and The resulting graph M G is a matching graph given X and G .
Given the definition of matching graph, we model the network matching energy function as: with where w e is a model parameter and f e ( ) is an indexing function. When y i and y j takes different binary values, the function f puts 1 in one dimension and 0 in others, indicating which combi-nation of y i and y j is activated.

Now we explain why the defined energy function in Eq. 1 can leverage the network matching idea. Suppose that the principle of  X  X eighborhood-preserving matching X  is effective in the real world datasets. After we learn the model parameter w e from the training data, the weight for y i and y j being the same will be low. For the test set, if two user pairs are connected in the matching graph, the model energy will be low if they are assigned the same label. Therefore, by the definition of the network matching energy model in Eq. 1, we tend to assign the same labels for neighbors in the matching graph to minimize the model energy.
Generally, our energy-based model with local matching and net-work matching will work well when we have only two social net-works to connect. However, when we have more than two net-works, we need to address the inconsistency problem. For exam-ple, given three networks G 1 , G 2 and G 3 , connecting  X  v problem, because the connections did not consider the transitivity of user identities. Formally, we define global inconsistency as fol-lows: social networks G , a set of user pairs X and the corresponding la-bels Y , if there exists a sequence of user pairs  X  x i 1 such that and and then we say that the assigned labels Y causes global inconsistency given G and X .

In this section, we add another energy function into our model to penalize global inconsistency. Ideally, we should consider all possible user pairs sequences in X . However, the number of valid user pairs sequences grows exponentially with the number of users in the networks. Therefore, it is infeasible to directly penalize all the sequences. Instead, we approximately only consider sequence of length 3 in our model. Figure 3 gives an example. Suppose we have three networks G 1 , G 2 , G 3 , and three candidate user pairs among them, ( v 1 2 ; v 2 2 ) , ( v 1 2 ; v 3 1 ) , and ( v pairs indicates two user pairs share a user. The three pairs form a triadic closure in the matching graph (as shown in Figure 3). Thus, we define a triad-based energy function for each closed triad in the matching graph.

Let T MG be the set of closed triads in the matching graph M G , we can write the energy function for global consistency as follows: with where w t is a model parameter and Y c = ( y i ; y j ; y k the triad; f t is an indexing function reflecting whether labels in Y are consistent. Figure 3: Modeling global consistency with triad-based energy.
Finally, by combing together local matching, network matching and global consistency, we obtain the following objective function: E ( Y; X ) =
Given a labeled training dataset, we aim to learn a parameter configuration W = ( w l ; w e ; w t ) from a labeled dataset. We use a maximum-margin method for model learning [15, 35]. Specifically, we first define the distance of two matching configurations ( Y and Y ) in the energy space as: where l ( y i ; y  X  i ) , e (  X  y i ; y j  X  ; represents a distance function between local, network, and global energy functions. Here we use Hamming distance as the distance function.

Therefore, according to the maximum margin theory [12, 35], our objective function (Eq. 2) can be rewritten as a minimization over a regularized hinge loss function: where is a slack variable to handle non-separable data, by al-lowing some constraints to be violated (or by introducing an error penalty); controls the trade-off between the maximum margin and the error penalty; with the constraint, the model forces to find a parameter setting such that the distance between the manual la-beled matching configuration ^ Y and a matching configuration Y by at least  X ( ^ Y ; Y ) . The constraint can be redefined as Moreover, by redefining the energy function, we can absorb the dis-tance function  X ( ^ Y ; Y ) into E ( ^ Y ; X ; W ) and E ( Y; X ; W ) [14]. Finally, the objective function becomes: Dual Decomposition. Solving Eq. 4 is an intractable problem. One challenging task is to estimate the energy function E ( : ) . To this end, we use Lagrangian relaxation to decompose the func-tion into a set of easy-to-solve subproblems. Specifically, in our problem, given the input model (Cf. Figure 2), we decompose the graphical structure into a set of function-based subgraphs, each rep-resenting a function. Accordingly, we obtain the following decom-position:
E ( Y; X ; W ) = where f 2 F is a defined factor function and F is the space of all defined factor functions; w f is the parameter of f ; X f user pairs related to function f and Y f is the set of corresponding and F i is the set of functions to which a variable y i is related.
By imposing the constraint y f i = y i ; 8 f; y i 2 Y f , we obtain that minimizing this function is equivalent to minimizing the original energy function Eq. 2. To relax these coupling constraints, we in-troduce a set of Lagrange multipliers = f f i : f 2F ; y i
The last term is eliminated by setting L ( Y; X; ; W ) optimizes over a larger space, it always satisfies ALGORITHM 1: Model Learning Input : Labeled candidates ( X l ; ^ Y l ) , unlabeled candidates repeat until convergence ;
Output : The best configuration of unlabeled candidates Y L ( Y; X ; ; W ) E ( Y; X ; W ) . Hence, it provides a lower bound to the minimum energy of the origin problem. Thus, we form the dual problem to maximize the lower bound by adjusting .
Thus, the objective function becomes s : t :
The resulting dual objective function is convex and non-differentiable, hence it can be solved by the projected subgradient method. Specifically, we have two sets of parameters, W and , to estimate. We optimize the dual objective function by alternately updating W and . The subgradients are given by: dW = @ Algorithm 1 summarizes the procedure for learning the model. The model runs in a semi-supervised fashion, which means that after learning the model, we can also obtain unknown matchings. Specifically, in each iteration, we first apply the learned parameters to infer unknown matchings Y  X  = arg max Y E ( Y; X ) , and then use all the matchings to estimate model parameters W .
 Implementation notes. The subgradient method is guaranteed to converge to the optimal solution of the dual problem when the step size satisfies lim t !1 t = 0 and step size as t = e p t , where e &gt; 0 is a tunable parameter.
In practice, the generated candidate matching graph might be very large. Here, we introduce several strategies for generating the candidate matching graph.
Content-based method. A straightforw ard solution is to use the username as the identification to generate seed matchings. Fol-lowing [39, 40, 28], we define a similarity function for usernames. Specifically, we tokenize each username u i into a set of segments f u i 1 ; u i 2 ; ::: g and then represent each username u i as a TF-IDF weighted vector w u . We then calculate the cosine similarity be-tween u i and u j base on their segments, i.e. sim( u i ; u if the similarity is above a threshold. To speedup the computation, we also build an inverted index for each username. The similar-ity is computed only for pairs of usernames that share at least one segment. Finally, a threshold is used to determine whether two usernames belongs to the same user. 3
Structure-based method. The second method expands candi-date matchings base on the network structure. Specifically, based on the seed matchings discovered in the content-based method, we propagate the matching along with neighborhood relationships, and iteratively augment the mapping graph with new candidate match-ings if their matching scores exceed a threshold 2 . Similar ideas have been studied in [27, 38].

Hybrid method. We consider a hybrid of the above two methods to generate candidates. The idea is first to use the content and the structure-based methods to generate candidate matchings and then to combine the outputs of the two methods.
All datasets and codes used in this work are publicly available. We perform experiments on two data collections: SNS and Academia . Each data collection consists of several social net-works. In the different networks of each data collection, both the users and the meanings of the relationships in the different net-works are very different. Table 3 lists statistics of the two data collections.
 SNS Network Collection. The SNS data collection consists of five popular online social networking sites: Twitter (TW), Live-Journal (LJ), Flickr (FL), Last.fm (LA), and MySpace (MS).
Twitter: a widely used microblogging service. The Twitter dataset we used in our experiment is obtained from [17], and it consists of 40.1 million user profiles and 1.47 billion following re-lationships among them. Taking user profiles as network nodes, the following relationships allows us to reconstruct the network within them.

LiveJournal: a free online social network where users can keep a blog, journal, or diary. The dataset was crawled from its website in late 2013, and contains 3,017,286 users and 87,037,567 friend relationships.

Flickr: a popular photo-sharing network that allows users to up-load and share photos. The Flickr dataset was crawled in early 2014, and consists of 215,495 individual users and 9,114,557 friend relationships.

Last.fm: a streaming radio service, where users can search for music and get personalized recommendations. Last.fm builds detailed profiles of users X  musical tastes and preferences. The dataset was collected in late 2013 and consists of 136,420 users and 1,685,524 following relationships.
We empirically set the threshold as 0.8. http://aminer.org/cosnet Table 3: Statistics of the two datasets. SNS consists of five net-works and Academia consists of three networks.
 Academia
MySpace: a social netw orking website for sharing music. The dataset contains 854,498 user profiles and 6,489,736 directed rela-tionships among users.
 Academia Network Collection. The Academia data collection consists of three academic or professional social networks: Arnet-Miner (AM), LinkedIn (LI) and VideoLectures (VL).

ArnetMiner: an expertise search and mining service for the aca-demic community [33]. We obtained the entire ArnetMiner data up to 2013, which consists of 1,053,188 user profiles and 3,916,907 co-author relationships.

LinkedIn: a professional network, where users can maintain their profiles and social connections. We collected public profiles from LinkedIn. As we cannot crawl user connections on LinkedIn, we pursued another method to construct the network. We consider two profiles to be linked if they were viewed ( X  X o-viewed X ) by the same user. In this way, we obtained a network of 2,985,414 user profiles and 25,965,384 relationships.

VideoLectures: an open access educational video lectures repository. The lectures are given by distinguished scholars and scientists at academic events like conferences and summer schools. We obtained lecturers X  profiles from the website. We defined a con-nection between two researchers as indicating that they attended a particular event (e.g., KDD 2014). This yielded a network of 11,777 lecturer profiles and 786,353  X  X o-attendance X  relationships. Ground Truth. It is difficult to obtain a  X  X round truth X  for evalu-ating the proposed method. For the SNS network collection, we use the linked user accounts dataset from [28, 8] as the  X  X round truth X . The data was originally collected by Perito el. al [28] through Google Profiles service by allowing users to integrate different so-cial network services. For the Academia network collection, we obtained the  X  X round truth X  from ArnetMiner. The ArnetMiner sys-tem allows users to connect each author X  X  profile to external social networks such as LinkedIn and Facebook. We chose 10,000 authors from ArnetMiner who were connected with LinkedIn profiles and VideoLectures profiles as the ground truth. More precisely, in each data collection, if a user has accounts in two different networks, then we have a ground truth matching.
 Feature Definition. We now define the local feature functions in Section 3. We tried to define them with sufficient generality to allow the model to be easily adapted to different data collections.
Username similarity and uniqueness: We use Jaro-Winkler distance to measure username similarity [9]. Two accounts with similar usernames are likely to belong to the same person. We also measure how unique the usernames are [39, 28, 40, 22]. To esti-mate the uniqueness of a username, we adopt the language-model based approach from [28]. More specifically, we train a Markov-chain model based on all the usernames from Twitter and LinkedIn for each pair of networks .
 and assign a uniqueness value log 2 ( p ( u )) to each username u , where p ( u ) is the n -gram probability of u .

Profile content similarity: We combine all information related to a profile into one document and convert the document into a bag-of-words vector, where the words are weighted by TF-IDF. The similarity of two profiles is then measured by inner product and cosine distance.

Ego network: To capture the similarity or overlaps between the ego networks of two accounts on different networks, [16] proposed the notion of extended common neighbors and defined it as the number of known anchor links between two ego networks. Three similarity features are defined between two users X  ego networks using common neighbors, Jaccard X  X  coefficient and Adamic/Adar score to measure the similarity between ego networks.

Social status: According to our preliminary analysis of real-world social networks, the status of a user in different social net-works tends to be consistent. We use pagerank to measure social status. We sort accounts by pagerank score in each social network and we call the top 1% accounts  X  X pinion leaders X  5 , the following 10%  X  X iddle class X , and the rest  X  X rdinary users X . Then given a candidate matching ( v 1 i ; v 2 j ) .
To quantitatively evaluate the proposed model, we consider the following performance metrics: Comparison Methods. We compare the following methods for connecting multiple networks.

Name-match: This method considers a candidate matching to be correct if and only if the two users have exactly the same name.
SVM: This method formalizes the matching problem as a clas-sification problem. It trains a classification model based on the
Statistics hav e shown that 1% of the Twitter users produce 50% of its content [37] and control 25% of the information diffusion [24].
Figure 4: Performance of integrating two network collections labeled data, and then applies the classification model to classify whether a candidate matching is correct or not. It uses all local features defined in  X  4.1 for training the classification model.
MNA [16]: This method leverages the output score of SVM as the initial pairwise score and then optimize the matching problem by satisfying the one-to-one constraints.

SiGMa [18]: This method was designed to align two knowledge bases, by propagating the confidence score in the matching graph. Specifically, it starts from a seed mapping set and iteratively aug-ments the seed set with new matched pairs. We use the result of the Name-match method (by filtering out the most common names) as the seed set and the output confidence score of SVM as the pairwise similarity for SiGMa.

COSNET: This is the proposed method in the paper, which con-siders both local consistency and global consistency. To emphasize the importance of global consistency, we also evaluate a variant of the method by removing the global consistency. The variant ver-sion is referred to as COSNET . We perform experiments on both data collections: SNS and Academia. In our experiments, we randomly partition the ground-truth mappings into five groups and conduct five-fold cross-validation and report the average results.
 Prediction Performance. Figure 4 shows the overall performance of the comparison methods on the two data collections. The pro-posed method achieves clearly better performance than the other comparison methods. In terms of F1-score, COSNET achieves a 10 30% improvement over SVM, MNA, and SiGMa. This demonstrates that our method, which combines local matching and global consistency is useful.
 We also report the evaluation results for each pair of networks. Table 2 lists the detailed performance of each pair of networks. Again, COSNET achieves the best performance in all tasks. SiGMa results in high precision but suffers from a low recall in the SNS dataset. In the Academia dataset, the situation is better, while over-all it still underperforms our proposed method. We deepened the analysis and found that SiGMa is good for matching when the in-put networks have significant overlap; however it cannot handle the sparsity problem, Thus when the input networks have less overlap, e.g., the SNS dataset, it results in very low recall due to its inability to perform propagation. This confirms the necessity of considering global consistency for connecting multiple networks.
 Factor Contribution Analysis. In the COSNET model, we de-fine five local features based on similarity between users: username similarity (US), username uniqueness (UN), profile content similar-ity (PS), ego network similarity (EN), and social status (SS). Here we examine the contributions of the different local factors. Specifi-cally, we remove one of the five features from the model, and eval-uate the deterioration in its prediction performance. Figure 5 shows the F1-score on the two datasets. We see that different local factors contribute differently in the different data collections. The name uniqueness feature is very helpful in the Academia data collection, but not that useful in the SNS data collection. This is probably be-cause the name uniqueness feature can effectively address the name ambiguity problem in the Academia data collection.
 Effects of Global Consistency. One important feature of our proposed COSNET model is that it is able to preserve global con-sistency. We now investigate how global consistency helps im-prove matching performance. As shown in Figure 4 and Table 2, COSNET represents the performance of our method without con-sidering global consistency. We see that without considering global consistency, the overall performances drop significantly (-2% and -7%; p -value  X  0.01, t -test) on both data collections. We see that the major problem of COSNET is a drop in precision. This is reasonable, as global consistency can help improve precision when dealing with more than two networks.
 Effects of Number of Social Networks. Intuitively, the more networks involved, the greater the improvements we can obtain by considering the global consistency. To verify the effectiveness of global consistency when dealing with different number of social networks. We evaluate the average performance of COSNET by varying the number of social networks in SNS. Specifically, we first consider two networks. In this case, COSNET degrades to COSNET . Then we increase the number of networks to three, four, and five, and report the average F1-score of COSNET for matching the multiple networks. Figure 6 shows the average perfor-Figure 6: Performance of COSNET when varying the number of networks involved in the SNS data collection.
Figure 7: Performance of candidate generation and pruning. mance of COSNET when varying the number networks involved in the SNS data collection. The results validate our intuition regarding global consistency.
 Effects of Candidate Pruning. We evaluate the performance of candidate generation in terms of coverage rate (the number of known positive candidates divided by the number of ground-truth mappings) and negative rate (the number of known negative can-didates divided by the sum of the number of known positive and negative candidates). Figure 7 shows the coverage rate and nega-tive rate in each candidate generation strategy described in  X  3.4. In most cases, propagation can significantly increase the coverage of candidates with a reasonable number of errors. We also note that the propagation algorithm failed to output desirable candidates on AM VL and LI VL. This might be because the dense co-attendance relationships in VideoLectures cannot reflect real-world relationships among researchers.
We turn now to evaluating the performance improvement when applying the model output to expert finding [33]. Recall that the goal of expert finding is to identify persons with some expertise or experience on a specific topic (query) q . The experiment is con-ducted on an Academia dataset used in [41], which consists of 14,134 researchers. Four-vaule scores (3, 2, 1, and 0) are manually labeled to represent definite expertise, expertise, marginal exper-tise, and no expertise. All the researchers have accounts on Arnet-Miner, and according to our integration result, 5,374 of them have been successfully mapped to the LinkedIn network. We construct an integrated social graph of ArnetMiner and LinkedIn by sim-ply appending the profile content and relationships of the mapped accounts on LinkedIn to the ArnetMiner network. Recall that in LinkedIn, the edges indicates the  X  X o-viewed X  relationship between users which can be regarded as indicating that the corresponding users are similar in terms of their expertise. As an example, Philip Yu has co-viewed relationships with Wei Wang, Jian Pei, Charu Aggarwal, Jiawei Han, Hui Xiong, Vipin Kumar, etc. These people are not necessarily coauthors of Philip, but their expertise is simi-lar. Our goal here is to leverage the external network, LinkedIn, to help improve expert finding in ArnetMiner.

To quantify the effectiveness of the integration result, we per-form expert finding on both ArnetMiner X  X  coauthor network and the integrated social graph. For fair comparison, we use the same al-gorithm in [33] which is a combination of language model and ran-dom walks. Specifically, we calculate the expertise score of an au-thor for a given query based on language model, and propagate the score in the network using random walks. With the integrated so-cial graph (by matching ArnetMiner and LinkedIn), we have more  X  X o-viewed X  relationships to propagate the expertise scores. We evaluate the performance in terms of precision@5 (P@5), P@10, P@20, R-precision (R-Pre), and mean average precision (MAP) [7]. Figure 1(c) shows the result of expert finding, on the ArnetMiner network only, and on the integrated networks. We see that the external network information from LinkedIn can signifi-cantly improve the performance of expert finding (+5-10% by Pre-cision@5). This confirms the effectiveness of connecting different networks in real applications.
We have developed and deployed a web application for an in-tegrated social network based on the proposed COSNET method. The system integrates LinkedIn and VideoLectures with Arnet-Miner. As a result, we have successfully discovered 237,842 matched pairs between LinkedIn and ArnetMiner and 8,932 be-tween VideoLectures and ArnetMiner (representing 85% of the profiles on VideoLectures). We use the profile content from LinkedIn and videos from VideoLectures to enrich the correspond-ing user profile on ArnetMiner. Figure 8 shows an example author profile on ArnetMiner. 6 The top of the figure shows the integrated external relationships, and the profile content from LinkedIn has been used to enrich the corresponding user profile on ArnetMiner. The bottom lists videos from VideoLectures.
We briefly review related literature from two aspects: connecting users across social networks, and entity linking.
 Connecting Users across Social Networks. An immediate method to connect users in different networks is to leverage user-names [39, 28, 40, 22]. Zafarani et al. [39] were the first to address this problem. Their approach utilized prefix/postfix addition and https://aminer.org/profile/jia wei-han/53f42f36dabfaedce54dcd0c removal to map usernames from a base community to a target com-munity. Peritio et al. [28] estimated the uniqueness of usernames with a Markov chain model. The recent work by Zafarani et al. [40] conducted a more in-depth investigation of this problem. They de-fined sophisticated features, such as knowledge limitation and typ-ing patterns, to model the behavior patterns of users in selecting usernames. Liu et al. [22] leveraged rare usernames to create train-ing instances for user identification. Liu et al. [23] explored the social identity linkage problem based on user behavior modeling. They proposed a method to incorporate user attributes, user gener-ated content, and social activities to link user accounts in different social networks.

The above methods only considered local similarity of account pairs. Zhang et al. [16] formulated the problem as an anchor-link prediction task. Their method resolved one-to-one mapping conflicts and issues from encountered structural features, but was limited to pairwise mapping. Tan et al. [30] used hypergraph to model social relationships and proposed a manifold alignment framework to map users from different networks onto a common low-dimension space. Cui et al. [11] studied the problem of finding email correspondents in social networks. Their approach integrated profile similarity and graph-based similarity and successfully found a mapping between the Facebook network and an email network.
Most of the above work focuses on estimating pairwise similarity between users from two networks. However, they do not consider global consistency among mappings of multiple networks. Entity Linking and Disambiguation. Linking entities from dif-ferent information sources is an important and extensively studied problem in data integration. Bellare [5] proposed an active sam-pling approach to improve entity-matching results. Bai et al. [4] leveraged user clicks for automatic seed generation in entity match-ing. Lacoste et al. [18] proposed a greedy method that success-fully aligned two large-scale knowledge bases. Cucerzan et al. [10] presented a large-scale named-entity disambiguation system that leverages information extracted from Wikipedia. Kataria et al. [13] developed an entity-disambiguation framework based on a hierar-chical topic model. There is also research studying the privacy is-sue across multiple social networks. For example, Backstrom et al. [3] presented the processes where one can identify individu-als in anonymized networks by either manipulating networks be-fore they are anonymized or by having prior knowledge about cer-tain anonymized nodes. Narayanan et al. [27] successfully de-anonymized the interlinks between two real-world social networks based on only the network topology.
In this paper, we study the problem of multiple social network integration. We precisely define the problem, and propose a novel energy-based framework COSNET to address it. We develop an efficient model learning algorithm based on dual decomposition which can be easily parallelized. Our experimental results on two different genres of data sets validate the effectiveness and efficiency of the proposed framework. We further validate the effectiveness of our method by applying the integrated results to support expert finding, an important application.
 [1] R. K. Ahuja, T. L. Magnanti, and J. B. Orlin. Network Flows: [2] K. M. Anstreicher and L. A. Wolsey. Two "well-known" [3] L. Backstrom, C. Dwork, and J. M. Kleinberg. Wherefore art [4] X. Bai, F. P. Junqueira, and S. H. Sengamedu. Exploiting [5] K. Bellare, S. Iyengar, A. G. Parameswaran, and V. Rastogi. [6] I. Bhattacharya and L. Getoor. Collective entity resolution in [7] C. Buckley and E. M. Voorhees. Retrieval evaluation with [8] W. Chen, Z. Liu, X. Sun, and Y. Wang. A game-theoretic [9] W. Cohen, P. Ravikumar, and S. E. Fienberg. A comparison [10] S. Cucerzan. Large-scale named entity disambiguation based [11] Y. Cui, J. Pei, G. Tang, W.-S. Luk, D. Jiang, and M. Hua. [12] R. Herbrich, T. Graepel, and K. Obermayer. Large margin [13] S. Kataria, K. S. Kumar, R. Rastogi, P. Sen, and S. H. [14] N. Komodakis. Efficient training for pairwise or higher order [15] N. Komodakis, N. Paragios, and G. Tziritas. Mrf energy [16] X. Kong, J. Zhang, and S. Y. Philip. Inferring anchor links [17] H. Kwak, C. Lee, H. Park, and S. B. Moon. What is twitter, a [18] S. Lacoste-Julien, K. Palla, A. Davies, G. Kasneci, [19] Y. LeCun, S. Chopra, and R. Hadsell. A tutorial on [20] J. Li, J. Tang, Y. Li, and Q. Luo. Rimom: A dynamic [21] Y. Li, C. Wang, F. Han, J. Han, D. Roth, and X. Yan. Mining [22] J. Liu, F. Zhang, X. Song, Y.-I. Song, C.-Y. Lin, and H.-W. [23] S. Liu, S. Wang, F. Zhu, J. Zhang, and R. Krishnan. Hydra: [24] T. Lou and J. Tang. Mining structural hole spanners through [25] H. Ma, H. Yang, M. R. Lyu, and I. King. Sorec: social [26] A. Maslow. A theory of human motivation. Psychological [27] A. Narayanan and V. Shmatikov. De-anonymizing social [28] D. Perito, C. Castelluccia, M. A. Kaafar, and P. Manils. How [29] W. Shen, J. Wang, P. Luo, and M. Wang. Linking named [30] S. Tan, Z. Guan, D. Cai, X. Qin, J. Bu, and C. Chen. [31] J. Tang, A. Fong, B. Wang, and J. Zhang. A unified [32] J. Tang, H. Gao, H. Liu, and A. D. Sarma. eTrust: [33] J. Tang, J. Zhang, L. Yao, J. Li, L. Zhang, and Z. Su. [34] W. Tang, J. Tang, T. Lei, C. Tan, B. Gao, and T. Li. On [35] B. Taskar, C. Guestrin, and D. Koller. Max-margin markov [36] H. Whitney. Congruent graphs and the connectivity of [37] S. Wu, J. M. Hofman, W. A. Mason, and D. J. Watts. Who [38] L. Yartseva and M. Grossglauser. On the performance of [39] R. Zafarani and H. Liu. Connecting corresponding identities [40] R. Zafarani and H. Liu. Connecting users across social media [41] J. Zhang, J. Tang, and J. Li. Expert finding in a social
