 In this paper, we propose a Topical PageRank based algo-rithm for recommender systems, which aim to rank products by analyzing previous user-item relationships, and recom-mend top-rank items to potentially interested users. We evaluate our algorithm on MovieLens dataset and empirical experiments demonstrate that it outperforms other state-of-the-art recommending algorithms.
 H.3.3 [ Information Search and Retrieval ]: Retrieval models; Information filtering Algorithms, Experimentation Recommender System, Topical PageRank
Recommender systems are automatic tools making per-sonalized suggestions to users by analyzing previous interac-tion information. Solutions in this area are mainly classified into three categories: Content-based Approaches, Collabo-rative Filtering, and Hybrid Approaches.

Recently, graph based recommending algorithms have been proposed and achieved outstanding prediction performance[1]. However, some of them(e.g. [2]) fail to take into account po-tential features of items (e.g. item genre). In this paper, we present a Topical PageRank based algorithm, which con-siders item genre to rank items for users and recommends the top-ranked items to users correspondingly. Experimen-tal results on MovieLens dataset show the superiority of the proposed algorithm over existing graph based recommend-ing algorithms.
Our basic idea of the proposed algorithm lies in the inves-tigation of correlation between ranking and recommender systems since we can recommend top-rank items to users. With this observation, we attempt to correlate ranking al-gorithms for web search with recommender systems. Specif-ically, we attempt to leverage Topical PageRank[3], a re-cently proposed superior ranking algorithm, to rank items and then recommend users with top-rank items.

Generally speaking, the input of a recommender system can be treated as a user-item matrix consisting of tuples, m i is one of items, r ki is an evaluation score, generally an integer ranging from 1 to 5. Our goal is to compute rank score for each item by analyzing the given evaluation scores with respect to each user, and then suggest the top-rank items to users.
A key point for a recommending algorithm is exploiting the item correlations. As an initial step, we first establish a correlation graph among items. Experiences reveal that cor-relation between items can be indicated by user preference lists. Consequently, we can reasonably assume that item m i and item m j are highly related, if they tend to co-occur in preferences lists of different users. We define  X  i,j as the set of users u k choosing both item m i and item m j in the training set of user-item tuples Tr , that is: Next, we define a | M |  X  | M | ( | M | is the total number of items) matrix  X  M , with each element  X  M i,j representing the number of users choosing both item m i and item m j . Al-the cardinality of a set. Furthermore, we normalize matrix  X  M to obtain a stochastic matrix-correlation matrix M , with each element M i,j =  X  M i,j / X  j , where  X  j is the sum of en-tries in j  X  th column of  X  M . Thus, we obtain a correlation graph G on basis of the correlation matrix M , in which an edge between item m i and m j is established if and only if M i,j &gt; 0.
The above item correlation graph bears two properties: propagation and attenuation, which are two key features for PageRank algorithm. A. Pucci has developed a PageRank based algorithm, known as PaperRank[2], for paper recom-mender systems. We follow a similar way but leverage Top-ical PageRank algorithm for recommending by exploiting genres of items. Specifically, we rank items for different users with Topical PageRank given the same item correla-tion graph, and recommend top-rank items to potentially interested users.
 We first briefly introduce Topical PageRank algorithm [3]. This algorithm takes into account the topic of pages, and introduces the PageRank score of a page p in topic z where q denotes any page linked to page p and O ( q ) rep-resents the degree of page q . C z ( p ) is the probability with which page p belongs to topic z , N is the number of pages, d and  X  are link related and topic related parameters re-spectively. The equivalent matrix form of Equation(2) for different page-topic pairs is defined as: where G is the normalized connectivity matrix for graph, F CA is an assistant matrix,  X  means matrix product.
With the similar idea, we define item rank score matrix for different item-genre pairs as where the | M | X  n matrix R ( n is number of item genres) contains R ig indicating predicted rank score for item m i genre g as to a given user, M is the item correlation matrix, F is a | M | X  n assistant matrix, and I is a | M | X  n matrix associated with the original user-item evaluation score. Note that we choose d =0.15,  X  =0.1 in the following experiments empirically. The iterative formula for calculating R u k for different users u k is given by: In formula(5), the first equation initializes R u k and the sec-ond one computes assistant matrix F , where P ig refers the probability with which item m i belongs to genre g . Each totally  X  users, we can get  X  different I u k , and thus ob-formula(5).

After getting matrix R u k for each user u k , we introduce a  X   X  X  M | matrix TR , where TR ki denotes the estimated item rank score for user u k to item m i , defined as where the higher TR ki is, the more user u k prefers item m to other lower score items. We finally recommend top-rank items in vector TR k to user u k .
We evaluated our algorithm on MovieLens dataset con-taining 100,000 ratings for 1,682 movies by 943 users, which Table 1: DOA comparison of our algorithm (TR) with PaperRank (PR) on the 5 splits.
 PR 87.69 87.71 87.65 87.51 88.14 87.74 TR 89.05 89.12 89.26 88.97 89.01 89.08 Table 2: Overall DOA comparisons of our algorithm (TR) with other scoring algorithms.
 is constructed from the popular MovieLens Site for recom-mending movies. The dataset has been divided into 5 pre-defined splits, each with 80% of ratings as training set Tr and 20% as testing set Te .

In order to compare our algorithm with other promising graph based approaches, we chose the degree of agreement ( DOA ) as the performance measure. We first introduce DOA for a specific user. As to a particular user u k , the whole movie set can be divided into 3 subsets, movies in training set Tr u k , testing set Te u k and unwatched set Nw Intuitively, movies watched by the user should rank higher than movies unwatched. Thus, we define a Boolean func-tion f u k to represent the comparison result between a pair of movies from different subsets. If the score TR ki ( m i  X  Te is higher than TR kj ( m j  X  Nw u k ), f u k is set 1, otherwise, f k is 0. Finally, we denote which represents the percentage of correct orders with re-gard to total order pairs for a given user. Computing the average of DOA u k for all users, we could obtain the final performance index DOA .

The results in Table 1 demonstrate that the proposed Top-ical PageRank based algorithm (TR) outperforms Paper-Rank (PR) in each split, indicating prediction improvement by exploiting item genre. In Table 2, comparisons with other recommending algorithms mentioned in [1] further prove the superiority of our algorithm.
In this paper, we present a Topical PageRank based algo-rithm for recommender systems, which performs better than other algorithms on MovieLens Dataset.
This work was supported by National Nature Science Fund-ing of China under Grant No. 90718022. [1] F. Fouss, A. Pirotte, and M. Saerens. A novel way of [2] M. Gori and A. Pucci. Research paper recommender [3] L. Nie, B. D. Davison, and X. Qi. Topical link
