 Unsupervised induction of dependency parsers is a major NLP task that attracts a substantial amount of research (Klein and Manning, 2004; Cohen et al., 2008; Headden et al., 2009; Spitkovsky et al., 2010a; Gillenwater et al., 2010; Berg-Kirkpatrick et al., 2010; Blunsom and Cohn, 2010, inter alia ). Parser quality is usually evaluated by comparing its output to a gold standard whose annotations are lin-guistically motivated. However, there are cases in which there is no linguistic consensus as to what the correct annotation is (K  X ubler et al., 2009). Examples include which verb is the head in a verb group struc-ture (e.g.,  X  X an X  or  X  X at X  in  X  X an eat X ), and which noun is the head in a sequence of proper nouns (e.g.,  X  X ohn X  or  X  X oe X  in  X  X ohn Doe X ). We refer to such annotations as ( linguistically ) problematic . For such cases, evaluation measures should not punish the al-gorithm for deviating from the gold standard.
In this paper we show that the evaluation mea-sures reported in current works are highly sensitive to the annotation in problematic cases, and propose a simple new measure that greatly neutralizes the problem.

We start from the following observation: for three leading algorithms (Klein and Manning, 2004; Co-hen and Smith, 2009; Spitkovsky et al., 2010a), a small set (at most 18 out of a few thousands) of pa-rameters can be found whose modification dramati-cally improves the standard evaluation measures (the attachment score measure by 9.3-15.1%, and the undirected measure by a smaller but still significant 1.3-7.7%). The phenomenon is implementation in-dependent, occurring with several algorithms based
We show that these parameter changes can be mapped to edge direction changes in local structures in the dependency graph, and that these correspond to problematic annotations. Thus, the standard eval-uation measures do not reflect the true quality of the evaluated algorithm.

We explain why the standard undirected evalua-tion measure is in fact sensitive to such edge direc-tion changes, and present a new evaluation measure, Neutral Edge Direction ( NED ), which greatly allevi-ates the problem by ignoring the edge direction in lo-cal structures. Using NED , manual modifications of model parameters always yields small performance differences. Moreover, NED sometimes punishes such manual parameter tweaking by yielding worse results. We explain this behavior using an exper-iment revealing that NED always prefers the struc-tures that are more consistent with the modeling as-sumptions lying in the basis of the algorithm. When manual parameter modification is done against this preference, the NED results decrease.
 The contributions of this paper are as follows. First, we show the impact of a small number of an-notation decisions on the performance of unsuper-vised dependency parsers. Second, we observe that often these decisions are linguistically controversial and therefore this impact is misleading. This reveals a problem in the common evaluation of unsuper-vised dependency parsing. This is further demon-strated by noting that recent papers evaluate the task using three gold standards which differ in such deci-sions and which yield substantially different results. Third, we present the NED measure, which is agnos-tic to errors arising from choosing the non-gold di-rection in such cases.

Section 2 reviews related work. Section 3 de-scribes the performed parameter modifications. Sec-tion 4 discusses the linguistic controversies in anno-tating problematic dependency structures. Section 5 presents NED . Section 6 describes experiments with it. A discussion is given in Section 7. Grammar induction received considerable attention over the years (see (Clark, 2001; Klein, 2005) for reviews). For unsupervised dependency parsing, the Dependency Model with Valence (DMV) (Klein and Manning, 2004) was the first to beat the simple right-branching baseline. A technical description of DMV is given at the end of this section.

The great majority of recent works, including those experimented with in this paper, are elabora-tions of DMV. Smith and Eisner (2005) improved the DMV results by generalizing the function maxi-mized by DMV X  X  EM training algorithm. Smith and Eisner (2006) used a structural locality bias, experi-menting on five languages. Cohen et al. (2008) ex-tended DMV by using a variational EM training al-gorithm and adding logistic normal priors. Cohen and Smith (2009, 2010) further extended it by us-ing a shared logistic normal prior which provided a new way to encode the knowledge that some POS tags are more similar than others. A bilingual joint learning further improved their performance.
Headden et al. (2009) obtained the best reported results on WSJ10 by using a lexical extension of DMV. Gillenwater et al. (2010) used posterior reg-ularization to bias the training towards a small num-ber of parent-child combinations. Berg-Kirkpatrick et al. (2010) added new features to the M step of the DMV EM procedure. Berg-Kirkpatrick and Klein (2010) used a phylogenetic tree to model parame-ter drift between different languages. Spitkovsky et al. (2010a) explored several training protocols for DMV. Spitkovsky et al. (2010c) showed the benefits of Viterbi ( X  X ard X ) EM to DMV training. Spitkovsky et al. (2010b) presented a novel lightly-supervised approach that used hyper-text mark-up annotation of web-pages to train DMV.

A few non-DMV-based works were recently pre-sented. Daum  X e III (2009) used shift-reduce tech-niques. Blunsom and Cohn (2010) used tree sub-stitution grammar to achieve best results on WSJ  X  .
Druck et al. (2009) took a semi-supervised ap-proach, using a set of rules such as  X  X  noun is usu-ally the parent of a determiner which is to its left X , experimenting on several languages. Naseem et al. (2010) further extended this idea by using a single set of rules which globally applies to six different languages. The latter used a model similar to DMV.
The controversial nature of some dependency structures was discussed in (Nivre, 2006; K  X ubler et al., 2009). Klein (2005) discussed controversial constituency structures and the evaluation problems stemming from them, stressing the importance of a consistent standard of evaluation.

A few works explored the effects of annotation conventions on parsing performance. Nilsson et al. (2006) transformed the dependency annotations of coordinations and verb groups in the Prague TreeBank. They trained the supervised MaltParser (Nivre et al., 2006) on the transformed data, parsed the test data and re-transformed the resulting parse, thus improving performance. Klein and Manning (2004) observed that a large portion of their errors is caused by predicting the wrong direction of the edge between a noun and its determiner. K  X ubler (2005) compared two different conversion schemes in Ger-man supervised constituency parsing and found one to have positive influence on parsing quality. Dependency Model with Valence (DMV). DMV (Klein and Manning, 2004) defines a probabilistic grammar for unlabeled dependency structures. It is defined as follows: the root of the sentence is first generated, and then each head recursively generates its right and left dependents. The parameters of the model are of two types: P P
ST OP ( dir, h, adj ) stop generating arguments, and is conditioned on 3 arguments: the head h , the direction dir ( ( L ) ef t or ( R ) ight ) and adjacency adj (whether the head already has dependents ( ( Y ) es ) in direction dir or not ( ( N ) o )). P probability to generate arg as head h  X  X  dependent in direction dir . In this section we present recurring error patterns in some of the leading unsupervised dependency parsers. These patterns are all local, confined to a sequence of up to three words (but mainly of just two consecutive words). They can often be mended by changing the directions of a few types of edges.
The modified parameters described in this section were handpicked to improve performance: we ex-amined the local parser errors occurring the largest number of times, and found the corresponding pa-rameters. Note that this is a valid methodology, since our goal is not to design a new algorithm but to demonstrate that modifying a small set of param-eters can yield a major performance boost and even-tually discover problems with evaluation methods or algorithms.

We start with a few definitions. Consider Fig-ure 1(a) that shows a dependency structure on the words w flip ) the edge w of a parse tree: (1) setting w of the other way around), and (2) setting w ent as w shows the dependency structure after the edge-flip .
Note that (1) imposes setting a new parent to w as otherwise it would have had no parent. Setting this parent to be w the original parse, since it does not change the at-tachment of the structure [ w sentence, but only the direction of the internal edge.
Figure 2 presents a parse of the sentence  X  X  want to eat X , before and after an edge-flip of the edge  X  X o X   X   X  X at X .

Since unsupervised dependency parsers are gen-erally structure prediction models, the predictions of the parse edges are not independent. Therefore, there is no single parameter which completely con-trols the edge direction, and hence there is no direct way to perform an edge-flip by parameter modifica-tion. However, setting extreme values for the param-eters controlling the direction of a certain edge type creates a strong preference towards one of the direc-tions, and effectively determines the edge direction. This procedure is henceforth termed parameter-flip .
We show that by performing a few parameter-flips , a substantial improvement in the attachment score can be obtained. Results are reported for three algorithms.
 Parameter Changes. All the works experimented with in this paper are not lexical and use sequences of POS tags as their input. In addition, they all use the DMV parameter set ( P parsing. We will henceforth refer to this set, condi-tioned on POS tags, as the model parameter set.
We show how an edge in the dependency graph is encoded using the DMV parameters. Say the model prefers setting  X  X o X  (POS tag: T O ) as a de-pendent of the infinitive verb (POS tag: V B ) to its right (e.g.,  X  X o eat X ). This is reflected by a high value of P P dependent of the verb and not the other way around, and a low value of P usually has at least one left argument (i.e.,  X  X o X ).
A parameter-flip of w by setting P value and P value. When the modifications to P are insufficient to modify the edge direction, P P
Table 1 describes the changes made for the three algorithms. The  X  +  X  signs in the table correspond to edges in which the algorithm disagreed with the gold standard, and were thus modified. Similarly, the  X  X  X  signs in the table correspond to edges in which the algorithm agreed with the gold standard, and were thus not modified. The number of modified param-eters does not exceed 18 (out of a few thousands).
The Freq . column in the table shows the percent-age of the tokens in sections 2-21 of PTB WSJ that participate in each structure. Equivalently, the per-centage of edges in the corpus which are of either of the types appearing in the Orig . Edge column. As the table shows, the modified structures cover a significant portion of the tokens. Indeed, 42.9% of the tokens in the corpus participate in at least one of Experimenting with Edge Flipping. We experi-mented with three DMV-based algorithms: a repli-cation of (Klein and Manning, 2004), as appears in (Cohen et al., 2008) (henceforth, km04 ), Cohen and Smith (2009) (henceforth, cs09 ), and Spitkovsky et al. (2010a) (henceforth, saj10a ). Decoding is done rithms we present the performance gain when com-pared to the original parameters.

The training set is sections 2-21 of the Wall Street Journal Penn TreeBank (Marcus et al., 1993). Test-ing is done on section 23. The constituency annota-tion was converted to dependencies using the rules
Following standard practice, we present the at-tachment score (i.e., percentage of words that have a correct head) of each algorithm, with both the origi-nal parameters and the modified ones. We present results both on all sentences and on sentences of length  X  10 , excluding punctuation.
 performance difference between the original and the modified parameter set is considerable for all data sets, where differences exceed 9.3%, and go up to 15.1%. These are enormous differences from the perspective of current algorithm evaluation results. In this section, we discuss the controversial nature of the annotation in the modified structures (K  X ubler et al., 2009). We remind the reader that structures for which no linguistic consensus exists as to their correct annotation are referred to as (linguistically) problematic.

We begin by showing that all the structures mod-ified are indeed linguistically problematic. We then note that these controversies are reflected in the eval-uation of this task, resulting in three, significantly different, gold standards currently in use.
 Coordination Structures are composed of two proper nouns, separated by a conjunctor (e.g.,  X  X ohn and Mary X ). It is not clear which token should be the head of this structure, if any (Nilsson et al., 2006). Prepositional Phrases (e.g.,  X  X n the house X  or  X  X n Rome X ), where every word is a reasonable candidate to head this structure. For example, in the annotation scheme used by (Collins, 1999) the preposition is the head, in the scheme used by (Johansson and Nugues, 2007) the noun is the head, while TUT annotation, presented in (Bosco and Lombardo, 2004), takes the determiner to be the noun X  X  head.
 Verb Groups are composed of a verb and an aux-iliary or a modal verb (e.g.,  X  X an eat X ). Some schemes choose the modal as the head (Collins, 1999), others choose the verb (Rambow et al., 2002). Infinitive Verbs (e.g.,  X  X o eat X ) are also in contro-versy, as in (Yamada and Matsumoto, 2003) the verb is the head while in (Collins, 1999; Bosco and Lom-bardo, 2004) the  X  X o X  token is the head.
 Sequences of Proper Nouns (e.g.,  X  X ohn Doe X ) are also subject to debate, as PTB X  X  scheme takes the last proper noun as the head, and BIO X  X  scheme de-fines a more complex scheme (Dredze et al., 2007). Evaluation Inconsistency Across Papers. A fact that may not be recognized by some readers is that comparing the results of unsupervised dependency parsers across different papers is not directly pos-sible, since different papers use different gold stan-dard annotations even when they are all derived from the Penn Treebank constituency annotation . This happens because they use different rules for con-verting constituency annotation to dependency an-notation. A probable explanation for this fact is that people have tried to correct linguistically problem-atic annotations in different ways, which is why we
There are three different annotation schemes in current use: (1) Collins head rules (Collins, 1999), used in e.g., (Berg-Kirkpatrick et al., 2010; Spitkovsky et al., 2010a); (2) Conversion rules of (Yamada and Matsumoto, 2003), used in e.g., (Co-hen and Smith, 2009; Gillenwater et al., 2010); (3) Conversion rules of (Johansson and Nugues, 2007) used, e.g., in the CoNLL shared task 2007 (Nivre et al., 2007) and in (Blunsom and Cohn, 2010).

The differences between the schemes are substan-tial. For instance, 14.4% of section 23 is tagged dif-As shown in the previous sections, the annotation of problematic edges can substantially affect perfor-mance. This was briefly discussed in (Klein and Manning, 2004), which used undirected evaluation as a measure which is less sensitive to alternative annotations. Undirected accuracy was commonly used since to assess the performance of unsuper-vised parsers (e.g., (Smith and Eisner, 2006; Head-den et al., 2008; Spitkovsky et al., 2010a)) but also of supervised ones (Wang et al., 2005; Wang et al., 2006). In this section we discuss why this measure is in fact not indifferent to edge-flips and propose a new measure, Neutral Edge Direction ( NED ). Undirected Evaluation. The measure is defined as follows: traverse over the tokens and mark a cor-rect attachment if the token X  X  induced parent is either (1) its gold parent or (2) its gold child. The score is the ratio of correct attachments and the number of tokens.

We show that this measure does not ignore edge-flips . Consider Figure 3 that shows a depen-dency structure on the words w ure 3(a)) and after (Figure 3(b)) an edge-flip of w that 3(b) is the induced parse. Consider w induced parent ( w rected evaluation does not consider it an error. On the other hand, w This is considered an error, since w gold parent (as it is w fore, one of the two tokens involved in the edge-flip is penalized by the measure.

Recall the example  X  X  want to eat X  and the edge-flip of the edge  X  X o X   X   X  X at X  (Figure 2). As  X  X o X  X  X  parent in the induced graph ( X  X ant X ) is neither its gold parent nor its gold child, the undirected evalu-ation measure marks it as an error. This is an exam-ple where an edge-flip in a problematic edge, which should not be considered an error, was in fact con-sidered an error by undirected evaluation.
 Neutral Edge Direction ( NED ). The NED measure is a simple extension of the undirected evaluation nores all errors directly resulting from an edge-flip .
NED is defined as follows: traverse over the to-kens and mark a correct attachment if the token X  X  in-duced parent is either (1) its gold parent (2) its gold child or (3) its gold grandparent. The score is the ra-tio of correct attachments and the number of tokens.
NED , by its definition, ignores edge-flips . Con-sider again Figure 3, where we assume that 3(a) is the gold standard and that 3(b) is the induced parse. Much like undirected evaluation, NED will mark the attachment of w is its gold child. However, unlike undirected evalua-tion, w correct, as its induced parent is its gold grandparent.
Now consider another induced parse in which the direction of the edge between w and the w w ror, even if the direction of the edge between w w longer a dependent of w Note that undirected evaluation gives the parses in Figure 3(b) and Figure 3(c) the same score, while if the structure [ w difference in their correctness.
 Discussion. Problematic structures are ubiquitous, with more than 40% of the tokens in PTB WSJ appearing in at least one of them (see Section 3). Therefore, even a substantial difference in the at-tachment between two parsers is not necessarily in-dicative of a true quality difference. However, an at-tachment score difference that persists under NED is an indication of a true quality difference, since gen-erally problematic structures are local (i.e., obtained by an edge-flip ) and NED ignores such errors.
Reporting NED alone is insufficient, as obviously the edge direction does matter in some cases. For example, in adjective X  X oun structures (e.g.,  X  X ig house X ), the correct edge direction is widely agreed upon ( X  X ig X   X   X  X ouse X ) (K  X ubler et al., 2009), and thus choosing the wrong direction should be con-sidered an error. Therefore, we suggest evaluating using both NED and attachment score in order to get a full picture of the parser X  X  performance.

A possible criticism on NED is that it is only in-different to alternative annotations in structures of size 2 (e.g.,  X  X o eat X ) and does not necessarily handle larger problematic structures, such as coordinations (see Section 4). For example, Figure 4(a) and Fig-ure 4(b) present two alternative annotations of the sentence  X  X ohn and Mary X . Assume the parse in Fig-ure 4(a) is the gold parse and that in Figure 4(b) is the induced parse. The word  X  X ary X  is a NED error, since its induced parent ( X  X nd X ) is neither its gold child nor its gold grandparent. Thus, NED does not accept all possible annotations of structures of size 3. On the other hand, using a method which accepts all possible annotations of structures of size 3 seems too permissive. A better solution may be to modify the gold standard annotation, so to explicitly anno-tate problematic structures as such. We defer this line of research to future work.

NED is therefore an evaluation measure which is indifferent to edge-flips , and is consequently less sensitive to alternative annotations. We now show that NED is indifferent to the differences between the structures originally learned by the algorithms men-tioned in Section 3 and the gold standard annotation in all the problematic cases we consider.

Most of the modifications made are edge-flips , and are therefore ignored by NED . The exceptions are coordinations and prepositional phrases which are structures of size 3. In the former, the alter-native annotations differ only in a single edge-flip (i.e., CC  X  N N P ), and are thus not NED errors. Re-garding prepositional phrases, Figure 4(c) presents the gold standard of  X  X n the house X , Figure 4(d) the parse induced by km04 and saj10a and Figure 4(e) the parse induced by cs09 . As the reader can verify, both induced parses receive a perfect NED score.
In order to further demonstrate NED  X  X  insensitiv-ity to alternative annotations, we took two of the three common gold standard annotations (see Sec-tion 4) and evaluated them one against the other. We considered section 23 of WSJ following the scheme of (Yamada and Matsumoto, 2003) as the gold stan-dard and of (Collins, 1999) as the evaluated set. Re-sults show that the attachment score is only 85.6%, the undirected accuracy is improved to 90.3%, while the NED score is 95.3%. This shows that NED is sig-nificantly less sensitive to the differences between the different annotation schemes, compared to the other evaluation measures. In this section we show that NED indeed reduces the performance difference between the original and the modified parameter sets, thus providing empiri-cal evidence for its validity. For brevity, we present results only for the entire WSJ corpus. Results on WSJ10 are similar. The datasets and decoding algo-rithms are the same as those used in Section 3.
Table 3 shows the score differences between the parameter sets using attachment score, undirected evaluation and NED . A substantial difference per-sists under undirected evaluation: a gap of 7.7% in cs09 , of 3.5% in saj10a and of 1.3% in km04 . The differences are further reduced using NED . This is consistent with our discussion in Section 5, and shows that undirected evaluation only ignores some of the errors inflicted by edge-flips .
For cs09 , the difference is substantially reduced, but a 4.2% performance gap remains. For km04 and saj10a , the original parameters outperform the new ones by 3.6% and 1% respectively.

We can see that even when ignoring edge-flips , some difference remains, albeit not necessarily in the favor of the modified models. This is because we did not directly perform edge-flips , but rather parameter-flips . The difference is thus a result of second-order effects stemming from the parameter-flips . In the next section, we explain why the remain-ing difference is positive for some algorithms ( cs09 ) and negative for others ( km04, saj10a ).

For completeness, Table 4 shows a comparison of some of the current state-of-the-art algorithms, using attachment score, undirected evaluation and NED . The training and test sets are those used in Section 3. The table shows that the relative orderings of the al-gorithms under NED is different than under the other measures. This is an indication that NED provides a In this paper we explored two ways of dealing with cases in which there is no clear theoretical justifi-cation to prefer one dependency structure over an-other. Our experiments suggest that it is crucial to deal with such structures if we would like to have a proper evaluation of unsupervised parsing algo-rithms against a gold standard.

The first way was to modify the parameters of the parsing algorithms so that in cases where such prob-lematic decisions are to be made they follow the gold standard annotation. Indeed, this modification leads to a substantial improvement in the attachment score of the algorithms. The second way was to change the evaluation. The NED measure we proposed does not punish for differences between gold and induced structures in the problematic cases. Indeed, in Section 6 (Table 3) we show that the differences between the original and modified models are much smaller when eval-uating with NED compared to when evaluating with the traditional attachment score.

As Table 3 reveals, however, even when evaluat-ing with NED , there is still some difference between the original and the modified model, for each of the algorithms we consider. Moreover, for two of the al-gorithms ( km04 and saj10a ) NED prefers the original model while for one ( cs09 ) it prefers the modified version. In this section we explain these patterns and show that they are both consistent and predictable.
Our hypothesis, for which we provide empirical justification, is that in cases where there is no theo-retically preferred annotation, NED prefers the struc-tures that are more learnable by DMV. That is, NED gives higher scores to the annotations that better fit the assumptions and modeling decisions of DMV, the model that lies in the basis of the parsing algo-rithms.

To support our hypothesis we perform an experi-ment requiring two preparatory steps for each algo-rithm. First, we construct a supervised version of the algorithm. This supervised version consists of the same statistical model as the original unsuper-vised algorithm, but the parameters are estimated to maximize the likelihood of a syntactically annotated training corpus, rather than of a plain text corpus.
Second, we construct two corpora for the algo-rithm, both consist of the same text and differ only in their syntactic annotation. The first is annotated with the gold standard annotation. The second is similarly annotated except in the linguistically prob-lematic structures. We replace these structures with the ones that would have been created with the un-supervised version of the algorithm (see Table 1 for corpus is divided into a training and a test set.
We then train the supervised version of the algo-rithms on each of the training sets. We parse the test data twice, once with each of the resulting models. We evaluate both parsed corpora against the corpus annotation from which they originated.

The training set of each corpus consists of sec-tions 2 X 21 of WSJ20 (i.e., WSJ sentences of length  X  tion 23 of WSJ  X  . Evaluation is performed using both NED and attachment score. The patterns we observed are very similar for both. For brevity, we report only attachment score results.
The results of our experiment are presented in Ta-ble 5 along with a comparison to the NED scores from Section 6. The table clearly demonstrates that a set of parameters (original or modified) is preferred by NED in the unsupervised experiments reported in Section 6 (top line) if and only if the structures pro-duced by this set are better learned by the supervised version of the algorithm (bottom line).

This observation supports our hypothesis that in cases where there is no theoretical preference for one structure over the other, NED (unlike the other measures) prefers the structures that are more con-sistent with the modeling assumptions lying in the basis of the algorithm. We consider this to be a de-sired property of a measure since a more consistent model should be preferred where no theoretical pref-erence exists. In this paper we showed that the standard evalua-tion of unsupervised dependency parsers is highly sensitive to problematic annotations. We modified a small set of parameters that controls the annotation in such problematic cases in three leading parsers. This resulted in a major performance boost, which is unindicative of a true difference in quality.
We presented Neutral Edge Direction ( NED ), a measure that is less sensitive to the annotation of local structures. As the problematic structures are generally local, NED is less sensitive to their alterna-tive annotations. In the future, we suggest reporting NED along with the current measures.
 Acknowledgements. We would like to thank Shay Cohen for his assistance with his implementation of the DMV parser and Taylor Berg-Kirkpatrick, Phil Blunsom and Jennifer Gillenwater for providing us with their data sets. We would also like to thank Valentin I . Spitkovsky for his comments and for pro-viding us with his data sets.

