 The goal of end-to-end entity mention and re-lation extraction is to discover relational struc-tures of entity mentions from unstructured texts. This problem has been artificially broken down into several components such as entity mention boundary identification, entity type classification and relation extraction. Although adopting such a pipelined approach would make a system com-paratively easy to assemble, it has some limita-tions: First, it prohibits the interactions between components. Errors in the upstream components are propagated to the downstream components without any feedback. Second, it over-simplifies the problem as multiple local classification steps without modeling long-distance and cross-task de-pendencies. By contrast, we re-formulate this task as a structured prediction problem to reveal the linguistic and logical properties of the hidden structures. For example, in Figure 1, the output structure of each sentence can be interpreted as a graph in which entity mentions are nodes and re-lations are directed arcs with relation types. By jointly predicting the structures, we aim to address the aforementioned limitations by capturing: (i) The interactions between two tasks. For exam-ple, in Figure 1a, although it may be difficult for a mention extractor to predict  X 1,400 X  as a Per-son ( PER ) mention, the context word  X  X mploys X  between  X  X ire maker X  and  X 1,400 X  strongly in-dicates an Employment-Organization ( EMP-ORG ) relation which must involve a PER mention. (ii) The global features of the hidden structure. Var-ious entity mentions and relations share linguis-tic and logical constraints. For example, we can use the triangle feature in Figure 1b to en-sure that the relations between  X  X orces X , and each of the entity mentions  X  X omalia /GPE  X ,  X  X aiti /GPE  X  and  X  X osovo /GPE  X , are of the same type (Physical ( PHYS ), in this case).

Following the above intuitions, we introduce a joint framework based on structured percep-tron (Collins, 2002; Collins and Roark, 2004) with beam-search to extract entity mentions and rela-tions simultaneously. With the benefit of inexact search, we are also able to use arbitrary global features with low cost. The underlying learning algorithm has been successfully applied to some other Natural Language Processing (NLP) tasks. Our task differs from dependency parsing (such as (Huang and Sagae, 2010)) in that relation struc-tures are more flexible, where each node can have arbitrary relation arcs. Our previous work (Li et al., 2013) used perceptron model with token-based tagging to jointly extract event triggers and argu-ments. By contrast, we aim to address a more chal-lenging task: identifying mention boundaries and types together with relations, which raises the is-sue that assignments for the same sentence with different mention boundaries are difficult to syn-| {z } chronize during search. To tackle this problem, we adopt a segment-based decoding algorithm de-rived from (Sarawagi and Cohen, 2004; Zhang and Clark, 2008) based on the idea of semi-Markov chain (a.k.a, multiple-beam search algorithm).
Most previous attempts on joint inference of en-tity mentions and relations (such as (Roth and Yih, 2004; Roth and Yih, 2007)) assumed that entity mention boundaries were given, and the classifiers of mentions and relations are separately learned. As a key difference, we incrementally extract en-tity mentions together with relations using a single model. The main contributions of this paper are as follows: 1. This is the first work to incrementally predict 2. Predicting mention boundaries in the joint 3. We design a set of novel global features based Experimental results show that the proposed framework achieves better performance than pipelined approaches, and global features provide further significant gains. 2.1 Task Definition The entity mention extraction and relation extraction tasks we are addressing are those of the Automatic Content Extraction (ACE) program 2 . ACE defined 7 main entity types including Person ( PER ), Organization ( ORG ), Geographical Entities ( GPE ), Location ( LOC ), Facility ( FAC ), Weapon ( WEA ) and Vehicle ( VEH ). The goal of relation extraction 3 is to extract semantic relations of the targeted types between a pair of entity mentions which ap-pear in the same sentence. ACE X 04 defined 7 main relation types: Physical ( PHYS ), Person-Social ( PER-SOC ), Employment-Organization ( EMP-ORG ), Agent-Artifact ( ART ), PER/ORG Affiliation ( Other-AFF ), GPE-Affiliation ( GPE-AFF ) and Discourse ( DISC ). ACE X 05 kept PER-SOC , ART and GPE-AFF , split PHYS into PHYS and a new relation type Part-Whole , removed DISC , and merged EMP-ORG and Other-AFF into EMP-ORG .

Throughout this paper, we use  X  to denote non-entity or non-relation classes. We consider rela-tion asymmetric. The same relation type with op-posite directions is considered to be two classes, which we refer to as directed relation types .
Most previous research on relation extraction assumed that entity mentions were given In this work we aim to address the problem of end-to-end entity mention and relation extraction from raw texts. 2.2 Baseline System In order to develop a baseline system repre-senting state-of-the-art pipelined approaches, we trained a linear-chain Conditional Random Fields model (Lafferty et al., 2001) for entity mention ex-traction and a Maximum Entropy model for rela-tion extraction.

Entity Mention Extraction Model We re-cast the problem of entity mention extraction as a se-quential token tagging task as in the state-of-the-art system (Florian et al., 2006). We applied the BILOU scheme, where each tag means a token is the B eginning, I nside, L ast, O utside, and U nit of an entity mention, respectively. Most of our fea-tures are similar to the work of (Florian et al., 2004; Florian et al., 2006) except that we do not have their gazetteers and outputs from other men-tion detection systems as features. Our additional features are as follows:  X  Governor word of the current token based on de-pendency parsing (Marneffe et al., 2006).  X  Prefix of each word in Brown clusters learned from TDT5 corpus (Sun et al., 2011).

Relation Extraction Model Given a sentence with entity mention annotations, the goal of base-line relation extraction is to classify each mention pair into one of the pre-defined relation types with direction or  X  (non-relation). Most of our relation extraction features are based on the previous work of (Zhou et al., 2005) and (Kambhatla, 2004). We designed the following additional features:  X  The label sequence of phrases covering the two mentions. For example, for the sentence in Fig-ure 1a, the sequence is  X  NP VP NP  X . We also augment it by head words of each phrase.  X  Four syntactico -semantic patterns described in (Chan and Roth, 2010).  X  We replicated each lexical feature by replacing each word with its Brown cluster. 3.1 The Model Our goal is to predict the hidden structure of each sentence based on arbitrary features and con-straints. Let x  X  X be an input sentence, y 0  X  Y be a candidate structure, and f ( x, y 0 ) be the fea-ture vector that characterizes the entire structure. We use the following linear model to predict the most probable structure  X  y for x : where the score of each candidate assignment is defined as the inner product of the feature vector f ( x, y 0 ) and feature weights w .

Since the structures contain both entity men-tions relations, and we also aim to exploit global features. There does not exist a polynomial-time algorithm to find the best structure. In practice we apply beam-search to expand partial configu-rations for the input sentence incrementally to find the structure with the highest score. 3.1.1 Joint Decoding Algorithm One main challenge to search for entity mentions and relations incrementally is the alignment of dif-ferent assignments. Assignments for the same sen-tence can have different numbers of entity men-tions and relation arcs. The entity mention ex-traction task is often re-cast as a token-level se-quential labeling problem with BIO or BILOU scheme (Ratinov and Roth, 2009; Florian et al., 2006). A naive solution to our task is to adopt this strategy by treating each token as a state. How-ever, different assignments for the same sentence can have various mention boundaries. It is un-fair to compare the model scores of a partial men-tion and a complete mention. It is also difficult to synchronize the search process of relations. For example, consider the two hypotheses ending at  X  X ork X  for the same sentence: The model would bias towards the incorrect as-signment  X  X ew / B-GPE York / L-GPE  X  since it can have more informative features as a complete mention (e.g., a binary feature indicating if the entire mention appears in a GPE gazetter). Fur-thermore, the predictions of the two PHYS rela-tions cannot be synchronized since  X  X ew / B-FAC York / I-FAC  X  is not yet a complete mention.
To tackle these problems, we employ the idea of semi-Markov chain (Sarawagi and Cohen, 2004), in which each state corresponds to a segment of the input sequence. They presented a vari-ant of Viterbi algorithm for exact inference in semi-Markov chain. We relax the max operation by beam-search, resulting in a segment-based de-coder similar to the multiple-beam algorithm in (Zhang and Clark, 2008). Let  X  d be the upper bound of entity mention length. The k -best partial assign-ments ending at the i -th token can be calculated as: B [ i ] = k -B EST where y [1: i  X  d ] stands for a partial configuration ending at the ( i -d )-th token, and y [ i  X  d +1 ,i ] corre-sponds to the structure of a new segment (i.e., sub-sequence of x ) x [ i  X  d +1 ,i ] . Our joint decoding algo-rithm is shown in Figure 2. For each token index i , it maintains a beam for the partial assignments whose last segments end at the i -th token. There are two types of actions during the search:
Input : input sentence x = ( x 1 , x 2 , ..., x m ) . k : beam size.
 T  X  X  X } : entity mention type alphabet.
 d t : max length of type-t segment, t  X  T  X  { X } .
Output : best configuration  X  y for x initialize m empty beams B [1 ..m ] for i  X  1 ...m do 3 for t  X  X   X  X  X } do 4 for d  X  1 ...d t , y 0  X  B [ i  X  d ] do 5 k  X  i  X  d + 1 6 B [ i ]  X  B [ i ]  X  A PPEND ( y 0 , t, k, i ) 7 B [ i ]  X  k -B EST ( B [ i ]) 8 for j  X  ( i  X  1) ... 1 do 9 buf  X   X  10 for y 0  X  B [ i ] do 12 for r  X  X  X  X  X } do 13 buf  X  buf  X  L INK ( y 0 , r, i, j ) 15 buf  X  buf  X  X  y 0 } 16 B [ i ]  X  k -B EST ( buf ) return B [ m ][0]
Figure 2: Joint Decoding for Entity Men-tions and Relations. H AS P AIR ( y 0 , i, j ) checks if there are two entity mentions in y 0 that end at token x i and token x j , respectively.
A PPEND ( y 0 , t, k, i ) appends y 0 with a type-t segment spanning from x k to x i . Similarly
L INK ( y 0 , r, i, j ) augments y 0 by assigning a di-rected relation r to the pair of entity mentions ending at x i and x j respectively. 1. A PPEND (Lines 3-7). First, the algorithm 2. L INK (Lines 8-16). After each step of A PPEND , There are m A PPEND actions, each is followed by at most ( i  X  1) L INK actions (line 8). Therefore the worst-case time complexity is O (  X  d  X  k  X  m 2 ) , where  X  d is the upper bound of segment length. 3.1.2 Example Demonstration Figure 3: Example of decoding steps. x -axis and y -axis represent the input sentence and en-tity types, respectively. The rectangles denote seg-ments with entity types, among which the shaded ones are three competing hypotheses ending at  X 1,400 X . The solid lines and arrows indicate cor-rect A PPEND and L INK actions respectively, while the dashed indicate incorrect actions.

Here we demonstrate a simple but concrete ex-ample by considering again the sentence described in Figure 1a. Suppose we are at the token  X 1,400 X . At this point we can propose multiple entity men-tions with various lengths. Assuming  X 1,400 / PER  X ,  X 1,400 /  X   X  and  X (employs 1,400) / PER  X  are possi-ble assignments, the algorithm appends these new segments to the partial assignments in the beams of the tokens  X  X mploys X  and  X  X till X , respectively. Figure 3 illustrates this process. For simplicity, only a small part of the search space is presented. The algorithm then links the newly identified men-tions to the previous ones in the same configu-ration. In this example, the only previous men-tion is  X (tire maker) / ORG  X . Finally,  X 1,400 / PER  X  will be preferred by the model since there are more indicative context features for EMP-ORG relation between  X (tire maker) / PER  X  and  X 1,400 / PER  X . 3.2 Structured-Perceptron Learning To estimate the feature weights, we use struc-tured perceptron (Collins, 2002), an extension of the standard perceptron for structured pre-diction, as the learning framework. Huang et al. (2012) proved the convergency of structured perceptron when inexact search is applied with violation-fixing update methods such as early-update (Collins and Roark, 2004). Since we use beam-search in this work, we apply early-update. In addition, we use averaged parameters to reduce overfitting as in (Collins, 2002).

Figure 4 shows the pseudocode for struc-tured perceptron training with early-update. Here B
EAM S EARCH is identical to the decoding algo-rithm described in Figure 2 except that if y 0 , the prefix of the gold standard y , falls out of the beam after each execution of the k -B EST function (line 7 and 16), then the top assignment z and y 0 are re-turned for parameter update. It is worth noting that this can only happen if the gold-standard has a seg-ment ending at the current token. For instance, in the example of Figure 1a, B [2] cannot trigger any early-update since the gold standard does not con-tain any segment ending at the second token.
Output : model parameters w initialize w  X  0 for t  X  1 ...T do 3 foreach ( x, y )  X  X  do 4 ( x, y 0 , z )  X  B EAM S EARCH ( x, y, w ) 5 if z 6 = y then 6 w  X  w + f ( x, y 0 )  X  f ( x, z ) return w
Figure 4: Perceptron algorithm with beam-search and early-update. y 0 is the prefix of the gold-standard and z is the top assignment. 3.3 Entity Type Constraints Entity type constraints have been shown effective in predicting relations (Roth and Yih, 2007; Chan and Roth, 2010). We automatically collect a map-ping table of permissible entity types for each rela-tion type from our training data. Instead of apply-ing the constraints in post-processing inference, we prune the branches that violate the type con-straints during search. This type of pruning can reduce search space as well as make the input for parameter update less noisy. In our experiments, only 7 relation mentions (0.5%) in the dev set and 5 relation mentions (0.3%) in the test set violate the constraints collected from the training data. An advantage of our framework is that we can easily exploit arbitrary features across the two tasks. This section describes the local features (Section 4.1) and global features (Section 4.2) we developed in this work. 4.1 Local Features We design segment-based features to directly eval-uate the properties of an entity mention instead of the individual tokens it contains. Let  X  y be a pre-dicted structure of a sentence x . The entity seg-ments of  X  y can be expressed as a list of triples ( e 1 , ..., e m ) , where each segment e i =  X  u i , v i , t is a triple of start index u i , end index v i , and entity type t i . The following is an example of segment-based feature: f 001 ( x,  X  y, i ) = This feature is triggered if the labels of the ( i  X  1 )-th and the i -th segments are  X   X  ,ORG  X , and the text of the i -th segment is  X  X ire maker X . Our segment-based features are described as follows:
Gazetteer features Entity type of each segment based on matching a number of gazetteers includ-ing persons, countries, cities and organizations.
Case features Whether a segment X  X  words are initial-capitalized, all lower cased, or mixture.
Contextual features Unigrams and bigrams of the text and part-of-speech tags in a segment X  X  contextual window of size 2.

Parsing-based features Features derived from constituent parsing trees, including (a) the phrase type of the lowest common ancestor of the tokens contained in the segment, (b) the depth of the low-est common ancestor, (c) a binary feature indicat-ing if the segment is a base phrase or a suffix of a base phrase, and (d) the head words of the segment and its neighbor phrases.
 In addition, we convert each triple  X  u i , v i , t i  X  to BILOU tags for the tokens it contains to imple-ment token-based features. The token-based men-tion features and local relation features are identi-cal to those of our pipelined system (Section 2.2). 4.2 Global Entity Mention Features By virtue of the efficient inexact search, we are able to use arbitrary features from the entire structure of  X  y to capture long-distance dependen-cies. The following features between related entity mentions are extracted once a new segment is ap-pended during decoding.

Coreference consistency Coreferential entity mentions should be assigned the same entity type. We determine high-recall coreference links be-tween two segments in the same sentence using some simple heuristic rules:  X  Two segments exactly or partially string match.  X  A pronoun (e.g.,  X  their  X , X  it  X ) refers to previous entity mentions. For example, in  X  they have no insurance on their cars  X ,  X  they  X  and  X  their  X  should have the same entity type.  X  A relative pronoun (e.g.,  X  which  X , X  that  X , and  X  who  X ) refers to the noun phrase it modifies in the parsing tree. For example, in  X  the starting kicker is nikita kargalskiy , who may be 5,000 miles from his hometown  X ,  X  nikita kargalskiy  X  and  X  who  X  should both be labeled as persons.
Then we encode a global feature to check whether two coreferential segments share the same entity type. This feature is particularly effective for pronouns because their contexts alone are of-ten not informative.

Neighbor coherence Neighboring entity men-tions tend to have coherent entity types. For ex-ample, in  X  Barbara Starr was reporting from the Pentagon  X ,  X  Barbara Starr  X  and  X  Pentagon  X  are connected by a dependency link prep from and thus they are unlikely to be a pair of PER men-tions. Two types of neighbor are considered: (i) the first entity mention before the current segment, and (ii) the segment which is connected by a sin-gle word or a dependency link with the current segment. We take the entity types of the two seg-ments and the linkage together as a global feature. For instance,  X  PER prep from PER  X  is a feature for the above example when  X  Barbara Starr  X  and  X  Pentagon  X  are both labeled as PER mentions.
Part-of-whole consistency If an entity men-tion is semantically part of another mention (con-nected by a prep of dependency link), they should be assigned the same entity type. For example, in  X  some of Iraq X  X  exiles  X ,  X  some  X  and  X  exiles  X  are both PER mentions; in  X  one of the town X  X  two meat-packing plants  X ,  X  one  X  and  X  plants  X  are both FAC mentions; in  X  the rest of America  X ,  X  rest  X  and  X  America  X  are both GPE mentions. 4.3 Global Relation Features Relation arcs can also share inter-dependencies or obey soft constraints. We extract the following relation-centric global features when a new rela-tion hypothesis is made during decoding.

Role coherence If an entity mention is involved in multiple relations with the same type, then its roles should be coherent. For example, a PER mention is unlikely to have more than one em-ployer. However, a GPE mention can be a physical location for multiple entity mentions. We combine the relation type and the entity mention X  X  argument roles as a global feature, as shown in Figure 5a.
Triangle constraint Multiple entity mentions are unlikely to be fully connected with the same relation type. We use a negative feature to penalize any configuration that contains this type of struc-ture. An example is shown in Figure 5b.

Inter-dependent compatibility If two entity mentions are connected by a dependency link, they tend to have compatible relations with other enti-ties. For example, in Figure 5c, the conj and de-pendency link between  X  Somalia  X  and  X  Kosovo  X  indicates they may share the same relation type with the third entity mention  X  forces  X .

Neighbor coherence Similar to the entity men-tion neighbor coherence feature, we also combine the types of two neighbor relations in the same sentence as a bigram feature. 5.1 Data and Scoring Metric Most previous work on ACE relation extraction has reported results on ACE X 04 data set. As we will show later in our experiments, ACE X 05 made significant improvement on both relation type definition and annotation quality. Therefore we present the overall performance on ACE X 05 data. We removed two small subsets in informal genres -cts and un , and then randomly split the re-maining 511 documents into 3 parts: 351 for train-ing, 80 for development, and the rest 80 for blind test. In order to compare with state-of-the-art we also performed the same 5-fold cross-validation on bnews and nwire subsets of ACE X 04 corpus as in previous work. The statistics of these data sets
Figure 6: Learning Curves on Development Set. are summarized in Table 1. We ran the Stanford cases for lowercased documents.

We use the standard F 1 measure to evaluate the performance of entity mention extraction and re-lation extraction. An entity mention is considered correct if its entity type is correct and the offsets of its mention head are correct. A relation men-tion is considered correct if its relation type is correct, and the head offsets of two entity men-tion arguments are both correct. As in Chan and Roth (2011), we excluded the DISC relation type, and removed relations in the system output which are implicitly correct via coreference links for fair comparison. Furthermore, we combine these two criteria to evaluate the performance of end-to-end entity mention and relation extraction. 5.2 Development Results In general a larger beam size can yield better per-formance but increase training and decoding time. As a tradeoff, we set the beam size as 8 through-out the experiments. Figure 6 shows the learn-ing curves on the development set, and compares the performance with and without global features. From these figures we can clearly see that global features consistently improve the extraction per-formance of both tasks. We set the number of training iterations as 22 based on these curves. 5.3 Overall Performance Table 2 shows the overall performance of various methods on the ACE X 05 test data. We compare our proposed method (Joint w/ Global) with the pipelined system (Pipeline), the joint model with only local features (Joint w/ Local), and two hu-man annotators who annotated 73 documents in ACE X 05 corpus.

We can see that our approach significantly out-performs the pipelined approach for both tasks. As a real example, for the partial sentence  X  a marcher from Florida  X  from the test data, the pipelined ap-proach failed to identify  X  marcher  X  as a PER men-tion, and thus missed the GEN-AFF relation be-tween  X  marcher  X  and  X  Florida  X . Our joint model correctly identified the entity mentions and their relation. Figure 7 shows the details when the joint model is applied to this sentence. At the token  X  marcher  X , the top hypothesis in the beam is  X   X  X  X  ,  X  X   X , while the correct one is ranked sec-ond best. After the decoder processes the token  X  Florida  X , the correct hypothesis is promoted to the top in the beam by the Neighbor Coherence features for PER -GPE pair. Furthermore, after Figure 7: Two competing hypotheses for  X  a marcher from Florida  X  during decoding. linking the two mentions by GEN-AFF relation, the ranking of the incorrect hypothesis  X   X  X  X  ,  X  X   X  is dropped to the 4-th place in the beam, resulting in a large margin from the correct hypothesis.
The human F 1 score on end-to-end relation ex-traction is only about 70%, which indicates it is a very challenging task. Furthermore, the F 1 score of the inter-annotator agreement is 51.9%, which is only 2.4% above that of our proposed method.
Compared to human annotators, the bottleneck of automatic approaches is the low recall of rela-tion extraction. Among the 631 remaining miss-ing relations, 318 (50.3%) of them were caused by missing entity mention arguments. A lot of nominal mention heads rarely appear in the train-ing data, such as persons ( X  X upremo X ,  X  X hep-herd X ,  X  X ligarchs X ,  X  X ich X ), geo-political entity mentions ( X  X tateside X ), facilities ( X  X oadblocks X ,  X  X ells X ), weapons ( X  X im lant X ,  X  X ukes X ) and ve-hicles ( X  X rams X ). In addition, relations are often implicitly expressed in a variety of forms. Some examples are as follows:  X   X  Rice has been chosen by President Bush to become the new Secretary of State  X  indicates  X  X ice X  has a PER-SOC relation with  X  X ush X .  X   X  U.S. troops are now knocking on the door of
Baghdad  X  indicates  X  X roops X  has a PHYS rela-tion with  X  X aghdad X .  X   X  Russia and France sent planes to Baghdad  X  in-dicates  X  X ussia X  and  X  X rance X  are involved in an ART relation with  X  X lanes X  as owners.

In addition to contextual features, deeper se-mantic knowledge is required to capture such im-plicit semantic relations. 5.4 Comparison with State-of-the-art Table 3 compares the performance on ACE X 04 corpus. For entity mention extraction, our joint model achieved 79.7% on 5-fold cross-validation, which is comparable with the best F 1 score 79.2% reported by (Florian et al., 2006) on single-fold. However, Florian et al. (2006) used some gazetteers and the output of other Information Ex-traction (IE) models as additional features, which provided significant gains ((Florian et al., 2004)). Since these gazetteers, additional data sets and ex-ternal IE models are all not publicly available, it is not fair to directly compare our joint model with their results.

For end-to-end entity mention and relation ex-traction, both the joint approach and the pipelined baseline outperform the best results reported by (Chan and Roth, 2011) under the same setting. Entity mention extraction (e.g., (Florian et al., 2004; Florian et al., 2006; Florian et al., 2010; Zi-touni and Florian, 2008; Ohta et al., 2012)) and relation extraction (e.g., (Reichartz et al., 2009; Sun et al., 2011; Jiang and Zhai, 2007; Bunescu and Mooney, 2005; Zhao and Grishman, 2005; Culotta and Sorensen, 2004; Zhou et al., 2007; Qian and Zhou, 2010; Qian et al., 2008; Chan and Roth, 2011; Plank and Moschitti, 2013)) have drawn much attention in recent years but were improvement as measured by paired t-test ( p &lt; 0 . 01 ) usually studied separately. Most relation extrac-tion work assumed that entity mention boundaries and/or types were given. Chan and Roth (2011) re-ported the best results using predicted entity men-tions.

Some previous work used relations and en-tity mentions to enhance each other in joint inference frameworks, including re-ranking (Ji and Grishman, 2005), Integer Linear Program-ming (ILP) (Roth and Yih, 2004; Roth and Yih, 2007; Yang and Cardie, 2013), and Card-pyramid Parsing (Kate and Mooney, 2010). All these work noted the advantage of exploiting cross-component interactions and richer knowledge. However, they relied on models separately learned for each subtask. As a key difference, our ap-proach jointly extracts entity mentions and rela-tions using a single model, in which arbitrary soft constraints can be easily incorporated. Some other work applied probabilistic graphical models for joint extraction (e.g., (Singh et al., 2013; Yu and Lam, 2010)). By contrast, our work employs an efficient joint search algorithm without modeling joint distribution over numerous variables, there-fore it is more flexible and computationally sim-pler. In addition, (Singh et al., 2013) used gold-standard mention boundaries.

Our previous work (Li et al., 2013) used struc-tured perceptron with token-based decoder to jointly predict event triggers and arguments based on the assumption that entity mentions and other argument candidates are given as part of the in-put. In this paper, we solve a more challeng-ing problem: take raw texts as input and identify the boundaries, types of entity mentions and rela-tions all together in a single model. Sarawagi and Cohen (2004) proposed a segment-based CRFs model for name tagging. Zhang and Clark (2008) used a segment-based decoder for word segmenta-tion and pos tagging. We extended the similar idea to our end-to-end task by incrementally predicting relations along with entity mention segments. In this paper we introduced a new architecture for more powerful end-to-end entity mention and relation extraction. For the first time, we ad-dressed this challenging task by an incremental beam-search algorithm in conjunction with struc-tured perceptron. While detecting mention bound-aries jointly with other components raises the chal-lenge of synchronizing multiple assignments in the same beam, a simple yet effective segment-based decoder is adopted to solve this problem. More importantly, we exploited a set of global fea-tures based on linguistic and logical properties of the two tasks to predict more coherent structures. Experiments demonstrated our approach signifi-cantly outperformed pipelined approaches for both tasks and dramatically advanced state-of-the-art.
In future work, we plan to explore more soft and hard constraints to reduce search space as well as improve accuracy. In addition, we aim to incorpo-rate other IE components such as event extraction into the joint model.
 We thank the three anonymous reviewers for their insightful comments. This work was supported by the U.S. Army Research Laboratory under Coop-erative Agreement No. W911NF-09-2-0053 (NS-CTA), U.S. NSF CAREER Award under Grant IIS-0953149, U.S. DARPA Award No. FA8750-13-2-0041 in the Deep Exploration and Filtering of Text (DEFT) Program, IBM Faculty Award, Google Research Award and RPI faculty start-up grant. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official poli-cies, either expressed or implied, of the U.S. Gov-ernment. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation here on.
