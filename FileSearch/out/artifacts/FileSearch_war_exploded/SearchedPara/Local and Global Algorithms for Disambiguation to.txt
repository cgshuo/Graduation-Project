 } @uiuc.edu Wikification is the task of identifying and link-ing expressions in text to their referent Wikipedia pages. Recently, Wikification has been shown to form a valuable component for numerous natural language processing tasks including text classifica-tion (Gabrilovich and Markovitch, 2007b; Chang et al., 2008), measuring semantic similarity between texts (Gabrilovich and Markovitch, 2007a), cross-document co-reference resolution (Finin et al., 2009; Mayfield et al., 2009), and other tasks (Kulkarni et al., 2009).

Previous studies on Wikification differ with re-spect to the corpora they address and the subset of expressions they attempt to link. For exam-ple, some studies focus on linking only named en-tities, whereas others attempt to link all  X  X nterest-ing X  expressions, mimicking the link structure found in Wikipedia. Regardless, all Wikification systems are faced with a key Disambiguation to Wikipedia (D2W) task. In the D2W task, we X  X e given a text along with explicitly identified substrings (called mentions ) to disambiguate, and the goal is to out-put the corresponding Wikipedia page, if any, for each mention. For example, given the input sen-tence  X  X  am visiting friends in &lt; Chicago &gt; , X  we output http://en.wikipedia.org/wiki/Chicago  X  the Wikipedia page for the city of Chicago, Illinois, and not (for example) the page for the 2002 film of the same name.

Local D2W approaches disambiguate each men-tion in a document separately, utilizing clues such as the textual similarity between the document and each candidate disambiguation X  X  Wikipedia page. Recent work on D2W has tended to focus on more sophisticated global approaches to the problem, in which all mentions in a document are disambiguated simultaneously to arrive at a coherent set of dis-ambiguations (Cucerzan, 2007; Milne and Witten, 2008b; Han and Zhao, 2009). For example, if a mention of  X  X ichael Jordan X  refers to the computer scientist rather than the basketball player, then we would expect a mention of  X  X onte Carlo X  in the same document to refer to the statistical technique rather than the location. Global approaches utilize the Wikipedia link graph to estimate coherence.
In this paper, we analyze global and local ap-proaches to the D2W task. Our contributions are as follows: (1) We present a formulation of the D2W task as an optimization problem with local and global variants, and identify the strengths and the weaknesses of each, (2) Using this formulation, we present a new global D2W system, called G LOW . In G
LOW is shown to outperform the previous state-of-the-art system of (Milne and Witten, 2008b), (3) We present an error analysis and identify the key re-maining challenge: determining when mentions re-fer to concepts not captured in Wikipedia. We formalize our Disambiguation to Wikipedia (D2W) task as follows. We are given a document d with a set of mentions M = { m and our goal is to produce a mapping from the set of mentions to the set of Wikipedia titles W = { t concept without a Wikipedia page; we treat this case by adding a special null title to the set W .
The D2W task can be visualized as finding a many-to-one matching on a bipartite graph, with mentions forming one partition and Wikipedia ti-tles the other (see Figure 1). We denote the output matching as an N -tuple  X  = ( t is the output disambiguation for mention m 2.1 Local and Global Disambiguation A local D2W approach disambiguates each men-tion m score function reflecting the likelihood that the can-didate title t m i  X  M optimization problem:
Local D2W approaches, exemplified by (Bunescu and Pasca, 2006) and (Mihalcea and Csomai, 2007), utilize  X  functions that assign higher scores to titles with content similar to that of the input document.
We expect, all else being equal, that the correct disambiguations will form a  X  X oherent X  set of re-lated concepts. Global approaches define a coher-ence function  X  , and attempt to solve the following disambiguation problem: The global optimization problem in Eq. 2 is NP-hard, and approximations are required (Cucerzan, 2007). The common approach is to utilize the Wikipedia link graph to obtain an estimate pairwise relatedness between titles  X  ( t generate a disambiguation context  X   X  , a rough ap-proximation to the optimal  X   X  . We then solve the easier problem:  X   X   X  arg max Eq. 3 can be solved by finding each t ping m still enforces some degree of coherence among the disambiguations. Wikipedia was first explored as an information source for named entity disambiguation and in-formation retrieval by Bunescu and Pasca (2006). There, disambiguation is performed using an SVM kernel that compares the lexical context around the ambiguous named entity to the content of the can-didate disambiguation X  X  Wikipedia page. However, since each ambiguous mention required a separate SVM model, the experiment was on a very limited scale. Mihalcea and Csomai applied Word Sense Disambiguation methods to the Disambiguation to Wikipedia task (2007). They experimented with two methods: (a) the lexical overlap between the Wikipedia page of the candidate disambiguations and the context of the ambiguous mention, and (b) training a Naive Bayes classiffier for each ambigu-ous mention, using the hyperlink information found in Wikipedia as ground truth. Both (Bunescu and Pasca, 2006) and (Mihalcea and Csomai, 2007) fall into the local framework.

Subsequent work on Wikification has stressed that assigned disambiguations for the same document should be related, introducing the global approach (Cucerzan, 2007; Milne and Witten, 2008b; Han and Zhao, 2009; Ferragina and Scaiella, 2010). The two critical components of a global approach are the se-mantic relatedness function  X  between two titles, and the disambiguation context  X   X  . In (Milne and Witten, 2008b), the semantic context is defined to be a set of  X  X nambiguous surface forms X  in the text, and the title relatedness  X  is computed as Normal-ized Google Distance (NGD) (Cilibrasi and Vitanyi, disambiguation context is taken to be all plausible disambiguations of the named entities in the text, and title relatedness is based on the overlap in cat-egories and incoming links. Both approaches have limitations. The first approach relies on the pres-ence of unambiguous mentions in the input docu-ment, and the second approach inevitably adds ir-relevant titles to the disambiguation context. As we demonstrate in our experiments, by utilizing a more accurate disambiguation context, G LOW is able to achieve better performance. In this section, we present our global D2W system, which solves the optimization problem in Eq. 3. We refer to the system as G LOW , for Global Wikifica-tion. We use G LOW as a test bed for evaluating local and global approaches for D2W. G LOW combines a powerful local model  X  with an novel method for choosing an accurate disambiguation context  X   X  , which as we show in our experiments allows it to outperform the previous state of the art.

We represent the functions  X  and  X  as weighted sums of features. Specifically, we set: where each feature  X  of the relatedness between the mention m and the Wikipedia title t . Feature functions  X  fined analogously. We detail the specific feature functions utilized in G LOW in following sections. The coefficients w tor Machine over bootstrapped training data from Wikipedia, as described in Section 4.5.

At a high level, the G LOW system optimizes the objective function in Eq. 3 in a two-stage process. We first execute a ranker to obtain the best non-null disambiguation for each mention in the document, and then execute a linker that decides whether the mention should be linked to Wikipedia, or whether instead switching the top-ranked disambiguation to null improves the objective function. As our exper-iments illustrate, the linking task is the more chal-lenging of the two by a significant margin.
 Figure 2 provides detailed pseudocode for G LOW . Given a document d and a set of mentions M , we start by augmenting the set of mentions with all phrases in the document that could be linked to Wikipedia, but were not included in M . Introducing these additional mentions provides context that may be informative for the global coherence computation (it has no effect on local approaches). In the second step, we construct for each mention m of candidate Wikipedia titles T Considering only a small subset of Wikipedia titles as potential disambiguations is crucial for tractabil-ity (we detail which titles are selected below). In the third step, the ranker outputs the most appropriate non-null disambiguation t
In the final step, the linker decides whether the top-ranked disambiguation is correct. The disam-biguation ( m sons: (1) mention m Wikipedia page, (2) m Wikipedia page, but it was not included in T (3) the ranker erroneously chose an incorrect disam-biguation over the correct one.
 In the below sections, we describe each step of the G
LOW algorithm, and the local and global features utilized, in detail. Because we desire a system that can process documents at scale, each step requires trade-offs between accuracy and efficiency. 4.1 Disambiguation Candidates Generation The first step in G LOW is to extract all mentions that can refer to Wikipedia titles, and to construct a set of disambiguation candidates for each mention. Fol-lowing previous work, we use Wikipedia hyperlinks to perform these steps. G LOW utilizes an anchor-title index, computed by crawling Wikipedia, that maps each distinct hyperlink anchor text to its tar-get Wikipedia titles. For example, the anchor text  X  X hicago X  is used in Wikipedia to refer both to the city in Illinois and to the movie. Anchor texts in the index that appear in document d are used to supple-ment the mention set M in Step 1 of the G LOW algo-rithm in Figure 2. Because checking all substrings in the input text against the index is computation-ally inefficient, we instead prune the search space by applying a publicly available shallow parser and the expressions marked as named entities by the NER tagger, the noun-phrase chunks extracted by the shallow parser, and all sub-expressions of up to 5 tokens of the noun-phrase chunks.

To retrieve the disambiguation candidates T a given mention m query the anchor-title index. T set of titles most frequently linked to with anchor text m we utilize only the top 20 most frequent target pages for the anchor text; the accuracy impact of this opti-mization is analyzed in Section 6.

From the anchor-title index, we compute two lo-cal features  X  tion of times the title t is the target page for an an-chor text m . This single feature is a very reliable indicator of the correct disambiguation (Fader et al., 2009), and we use it as a baseline in our experiments. The second, P ( t ) , gives the fraction of all Wikipedia articles that link to t . 4.2 Local Features  X  In addition to the two baseline features mentioned in the previous section, we compute a set of text-based local features  X  ( t,m ) . These features capture the in-tuition that a given Wikipedia title t is more likely to be referred to by mention m appearing in document d if the Wikipedia page for t has high textual simi-larity to d , or if the context surrounding hyperlinks to t are similar to m  X  X  context in d .

For each Wikipedia title t , we construct a top-200 token TF-IDF summary of the Wikipedia page t , which we denote as Text ( t ) and a top-200 to-ken TF-IDF summary of the context within which t was hyperlinked to in Wikipedia, which we denote as Context ( t ) . We keep the IDF vector for all to-kens in Wikipedia, and given an input mention m in a document d , we extract the TF-IDF representation of d , which we denote Text ( d ) , and a TF-IDF rep-resentation of a 100-token window around m , which we denote Context ( m ) . This allows us to define four local features described in Table 1.

We additionally compute weighted versions of the features described above. Error analysis has shown that in many cases the summaries of the dif-ferent disambiguation candidates for the same sur-face form s were very similar. For example, con-sider the disambiguation candidates of  X  X hina X  and their TF-IDF summaries in Figure 1. The major-ity of the terms selected in all summaries refer to the general issues related to China, such as  X  X egal-ism, reform, military, control, etc. X  , while a minority of the terms actually allow disambiguation between the candidates. The problem stems from the fact that the TF-IDF summaries are constructed against the entire Wikipedia, and not against the confusion set of disambiguation candidates of m . Therefore, we re-weigh the TF-IDF vectors using the TF-IDF scheme on the disambiguation candidates as a ad-hoc document collection, similarly to an approach in (Joachims, 1997) for classifying documents. In our scenario, the TF of the a token is the original TF-IDF summary score (a real number), and the IDF term is the sum of all the TF-IDF scores for the to-ken within the set of disambiguation candidates for m . This adds 4 more  X  X eweighted local X  features in Table 1. 4.3 Global Features  X  Global approaches require a disambiguation context  X   X  and a relatedness measure  X  in Eq. 3. In this sec-tion, we describe our method for generating a dis-ambiguation context, and the set of global features  X  ( t,t  X  ) forming our relatedness measure.

In previous work, Cucerzan defined the disam-biguation context as the union of disambiguation candidates for all the named entity mentions in the input document (2007). The disadvantage of this ap-proach is that irrelevant titles are inevitably added to the disambiguation context, creating noise. Milne and Witten, on the other hand, use a set of un-ambiguous mentions (2008b). This approach uti-lizes only a fraction of the available mentions for context, and relies on the presence of unambigu-ous mentions with high disambiguation utility. In G
LOW , we utilize a simple and efficient alternative approach: we first train a local disambiguation sys-tem, and then use the predictions of that system as the disambiguation context. The advantage of this approach is that unlike (Milne and Witten, 2008b) we use all the available mentions in the document, and unlike (Cucerzan, 2007) we reduce the amount of irrelevant titles in the disambiguation context by taking only the top-ranked disambiguation per men-tion.

Our global features are refinements of previously proposed semantic relatedness measures between Wikipedia titles. We are aware of two previous methods for estimating the relatedness between two Wikipedia concepts: (Strube and Ponzetto, 2006), which uses category overlap, and (Milne and Wit-ten, 2008a), which uses the incoming link structure. Previous work experimented with two relatedness measures: NGD, and Specificity-weighted Cosine Similarity. Consistent with previous work, we found NGD to be the better-performing of the two. Thus we use only NGD along with a well-known Pon-twise Mutual Information (PMI) relatedness mea-sure. Given a Wikipedia title collection W , titles t respectively, PMI and NGD are defined as follows:
The NGD and the PMI measures can also be com-puted over the set of outgoing links, and we include these as features as well. We also included a fea-ture indicating whether the articles each link to one another. Lastly, rather than taking the sum of the re-latedness scores as suggested by Eq. 3, we use two features: the average and the maximum relatedness many documents. The intuition for also including the maximum relatedness is that for longer docu-ments that may cover many different subtopics, the maximum may be more informative than the aver-age.

We have experimented with other semantic fea-tures, such as category overlap or cosine similar-ity between the TF-IDF summaries of the titles, but these did not improve performance in our experi-ments. The complete set of global features used in G
LOW is given in Table 1. 4.4 Linker Features Given the mention m and the top-ranked disam-biguation t , the linker attempts to decide whether t is indeed the correct disambiguation of m . The linker includes the same features as the ranker, plus addi-tional features we expect to be particularly relevant to the task. We include the confidence of the ranker in t with respect to second-best disambiguation t  X  , intended to estimate whether the ranker may have made a mistake. We also include several properties of the mention m : the entropy of the distribution P ( t | m ) , the percent of Wikipedia titles in which m appears hyperlinked versus the percent of times m appears as plain text, whether m was detected by NER as a named entity, and a Good-Turing estimate of how likely m is to be out-of-Wikipedia concept based on the counts in P ( t | m ) . 4.5 Linker and Ranker Training We train the coefficients for the ranker features us-ing a linear Ranking Support Vector Machine, using training data gathered from Wikipedia. Wikipedia links are considered gold-standard links for the training process. The methods for compiling the Wikipedia training corpus are given in Section 5. We train the linker as a separate linear Support Vector Machine. Training data for the linker is ob-tained by applying the ranker on the training set. The mentions for which the top-ranked disambiguation did not match the gold disambiguation are treated as negative examples, while the mentions the ranker got correct serve as positive examples.
 We evaluate G LOW on four data sets, of which two are from previous work. The first data set, from (Milne and Witten, 2008b), is a subset of the AQUAINT corpus of newswire text that is annotated to mimic the hyperlink structure in Wikipedia. That is, only the first mentions of  X  X mportant X  titles were hyperlinked. Titles deemed uninteresting and re-dundant mentions of the same title are not linked. The second data set, from (Cucerzan, 2007), is taken from MSNBC news and focuses on disambiguating named entities after running NER and co-reference resolution systems on newsire text. In this case, all mentions of all the detected named entities are linked.

We also constructed two additional data sets. The first is a subset of the ACE co-reference data set, which has the advantage that mentions and their types are given, and the co-reference is resolved. We asked annotators on Amazon X  X  Mechanical Turk to link the first nominal mention of each co-reference chain to Wikipedia, if possible. Finding the accu-racy of a majority vote of these annotations to be approximately 85%, we manually corrected the an-notations to obtain ground truth for our experiments. The second data set we constructed, Wiki , is a sam-ple of paragraphs from Wikipedia pages. Mentions in this data set correspond to existing hyperlinks in the Wikipedia text. Because Wikipedia editors ex-plicitly link mentions to Wikipedia pages, their an-chor text tends to match the title of the linked-to-page X  X s a result, in the overwhelming majority of cases, the disambiguation decision is as trivial as string matching. In an attempt to generate more challenging data, we extracted 10,000 random para-graphs for which choosing the top disambiguation according to P ( t | m ) results in at least a 10% ranker error rate. 40 paragraphs of this data was utilized for testing, while the remainder was used for training.
The data sets are summarized in Table 2. The ta-ble shows the number of annotated mentions which were hyperlinked to non-null Wikipedia pages, and the number of titles in the documents (without counting repetitions). For example, the AQUAINT to distinct titles. The MSNBC data set contains 747 mentions mapped to non-null Wikipedia pages, but some mentions within the same document refer to the same titles. There are 372 titles in the data set, when multiple instances of the same title within one document are not counted.

To isolate the performance of the individual com-ponents of G LOW , we use multiple distinct metrics for evaluation. Ranker accuracy , which measures the performance of the ranker alone, is computed only over those mentions with a non-null gold dis-ambiguation that appears in the candidate set. It is equal to the fraction of these mentions for which the ranker returns the correct disambiguation. Thus, a perfect ranker should achieve a ranker accuracy of 1.0, irrespective of limitations of the candidate gen-erator. Linker accuracy is defined as the fraction of all mentions for which the linker outputs the correct disambiguation (note that, when the title produced by the ranker is incorrect, this penalizes linker accu-racy). Lastly, we evaluate our whole system against other baselines using a previously-employed  X  X ag of titles X  (BOT) evaluation (Milne and Witten, 2008b). In BOT, we compare the set of titles output for a doc-ument with the gold set of titles for that document (ignoring duplicates), and utilize standard precision, recall, and F1 measures.

In BOT, the set of titles is collected from the men-tions hyperlinked in the gold annotation. That is, if the gold annotation is { (China, People X  X  Repub-lic of China), (Taiwan, Taiwan), (Jiangsu, Jiangsu) } and the predicted anotation is: { (China, People X  X  Republic of China), (China, History of China), (Tai-wan, null), (Jiangsu, Jiangsu), (republic, Govern-ment) } , then the BOT for the gold annotation is: {
People X  X  Republic of China, Taiwan, Jiangsu } , and the BOT for the predicted annotation is: { People X  X  Republic of China, History of China, Jiangsu } . The title Government is not included in the BOT for pre-dicted annotation, because its associate mention re-public did not appear as a mention in the gold anno-tation. Both the precision and the recall of the above prediction is 0.66. We note that in the BOT evalua-tion, following (Milne and Witten, 2008b) we con-sider all the titles within a document, even if some In this section, we evaluate and analyze G LOW  X  X  performance on the D2W task. We begin by eval-uating the mention detection component (Step 1 of the algorithm). The second column of Table 2 shows how many of the  X  X on-null X  mentions and corre-sponding titles we could successfully identify (e.g. out of 747 mentions in the MSNBC data set, only 530 appeared in our anchor-title index). Missing en-tities were primarily due to especially rare surface forms, or sometimes due to idiosyncratic capitaliza-tion in the corpus. Improving the number of iden-tified mentions substantially is non-trivial; (Zhou et al., 2010) managed to successfully identify only 59 more entities than we do in the MSNBC data set, us-ing a much more powerful detection method based on search engine query logs.

We generate disambiguation candidates for a mention m using an anchor-title index, choosing the 20 titles with maximal P ( t | m ) . Table 3 eval-uates the accuracy of this generation policy. We report the percent of mentions for which the cor-rect disambiguation is generated in the top k can-didates (called  X  X olvable X  mentions). We see that the baseline prediction of choosing the disambigua-tion t which maximizes P ( t | m ) is very strong (80% of the correct mentions have maximal P ( t | m ) in all data sets except MSNBC). The fraction of solvable mentions increases until about five candidates per mention are generated, after which the increase is rather slow. Thus, we believe choosing a limit of 20 candidates per mention offers an attractive trade-off of accuracy and efficiency. The last column of Ta-ble 2 reports the number of solvable mentions and the corresponding number of titles with a cutoff of 20 disambiguation candidates, which we use in our experiments.

Next, we evaluate the accuracy of the ranker. Ta-ble 4 compares the ranker performance with base-line, local and global features. The reweighted lo-cal features outperform the unweighted ( X  X aive X ) version, and the global approach outperforms the local approach on all data sets except Wikipedia. As the table shows, our approach of defining the disambiguation context to be the predicted dis-ambiguations of a simpler local model ( X  X redic-tions X ) performs better than using NER entities as in (Cucerzan, 2007), or only the unambiguous enti-the local and the global approaches typically results in minor improvements.

While the global approaches are most effective for ranking, the linking problem has different charac-teristics as shown in Table 5. We can see that the global features are not helpful in general for predict-ing whether the top-ranked disambiguation is indeed the correct one.

Further, although the trained linker improves ac-curacy in some cases, the gains are marginal X  X nd the linker decreases performance on some data sets. One explanation for the decrease is that the linker is trained on Wikipedia, but is being tested on non-Wikipedia text which has different characteristics. However, in separate experiments we found that training a linker on out-of-Wikipedia text only in-creased test set performance by approximately 3 percentage points. Clearly, while ranking accuracy is high overall, different strategies are needed to achieve consistently high linking performance.
A few examples from the ACE data set help il-lustrate the tradeoffs between local and global fea-tures in G LOW . The global system mistakenly links  X  &lt; Dorothy Byrne &gt; , a state coordinator for the Florida Green Party, said . . .  X  to the British jour-nalist, because the journalist sense has high coher-ence with other mentions in the newswire text. How-ever, the local approach correctly maps the men-tion to null because of a lack of local contextual clues. On the other hand, in the sentence  X  X n-stead of Los Angeles International, for example, consider flying into &lt; Burbank &gt; or John Wayne Air-port in Orange County, Calif. X  , the local ranker links the mention Burbank to Burbank, California , while the global system correctly maps the entity to Bob Hope Airport , because the three airports men-tioned in the sentence are highly related to one an-other.
 Lastly, in Table 6 we compare the end system BOT F1 performance. The local approach proves a very competitive baseline which is hard to beat. Combining the global and the local approach leads to marginal improvements. The full G LOW sys-tem outperforms the existing state-of-the-art system from (Milne and Witten, 2008b), denoted as M&amp;W, on all data sets. We also compared our system with the recent TAGME Wikification system (Ferragina and Scaiella, 2010). However, TAGME is designed for a different setting than ours: extremely short texts, like Twitter posts. The TAGME RESTful API was unable to process some of our documents at once. We attempted to input test documents one sen-tence at a time, disambiguating each sentence inde-pendently, which resulted in poor performance (0.07 points in F1 lower than the P ( t | m ) baseline). This happened mainly because the same mentions were linked to different titles in different sentences, lead-ing to low precision.

An important question is why M&amp;W underper-forms the baseline on the MSNBC and Wikipedia data sets. In an error analysis, M&amp;W performed poorly on the MSNBC data not due to poor disam-biguations, but instead because the data set contains only named entities, which were often delimited in-correctly by M&amp;W. Wikipedia was challenging for a different reason: M&amp;W performs less well on the short (one paragraph) texts in that set, because they contain relatively few of the unambiguous entities the system relies on for disambiguation. We have formalized the Disambiguation to Wikipedia (D2W) task as an optimization problem with local and global variants, and analyzed the strengths and weaknesses of each. Our experiments revealed that previous approaches for global disam-biguation can be improved, but even then the local disambiguation provides a baseline which is very hard to beat.

As our error analysis illustrates, the primary re-maining challenge is determining when a mention does not have a corresponding Wikipedia page. Wikipedia X  X  hyperlinks offer a wealth of disam-biguated mentions that can be leveraged to train a D2W system. However, when compared with mentions from general text, Wikipedia mentions are disproportionately likely to have corresponding Wikipedia pages. Our initial experiments suggest that accounting for this bias requires more than sim-ply training a D2W system on a moderate num-ber of examples from non-Wikipedia text. Apply-ing distinct semi-supervised and active learning ap-proaches to the task is a primary area of future work. This research supported by the Army Research Laboratory (ARL) under agreement W911NF-09-2-0053 and by the Defense Advanced Research Projects Agency (DARPA) Machine Reading Pro-gram under Air Force Research Laboratory (AFRL) prime contract no. FA8750-09-C-0181. The third author was supported by a Microsoft New Faculty Fellowship. Any opinions, findings, conclusions or recommendations are those of the authors and do not necessarily reflect the view of the ARL, DARPA, AFRL, or the US government.

