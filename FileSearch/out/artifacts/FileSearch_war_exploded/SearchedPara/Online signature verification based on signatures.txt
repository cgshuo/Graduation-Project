 ORIGINAL PAPER K. Barkoula  X  G. Economou  X  S. Fotopoulos Abstract Online signature verification has been inten-sively investigated in several directions, such as the selected feature(s), similarity estimation and classification method. Local feature approaches combined with elastic distance metrics have the most successful performance so far. The Turning Angle Sequence (TAS) feature has not been exten-sively explored for signature verification, while the fusion of TASs of different scales, the Turning Angle Scale Space (TASS) is a new approach in this field. In this paper, we study the signatures TAS and TASS representations and their appli-cation to online signature verification. In the matching stage, a variation of the longest common sub-sequence matching technique has been employed. Experimental results using varying TAS(S) representation parameters on two publicly available signature databases, the SVC2004 and SUSIG, show the improved performance of the selected feature along with the chosen elastic distance measure on the equal error rate results of the online signature verification task. Keywords Online signature verification  X  Turning angle sequence  X  Least common subsequence matching 1 Introduction Signing is a widely used technique through centuries for person identification. However, the special intra-person vari-ability and its dependency on the acquisition process, time evolution and even on signer X  X  emotional state make signa-ture verification against forgeries a non-trivial task.
Signature verification, as presented in recent surveys [ 1  X  4 ], was initially a mainly offline technique where the sig-nature was captured as an image. Later on, with the develop-ment of solid sensors, the process evolved to online, in which case a signature is acquired using a digitizer and is repre-sented by dynamic information per point. The main phases of signature verification [ 1 , 2 ] are data acquisition and pre-processing, feature extraction and classification. Data acqui-sition depends on the technology of the employed platform, and apart from trajectory coordinates and time, many other features, such as pressure, pen inclination and velocity, may be recorded [ 2 ], as can be found in online signatures data-bases [ 5  X  8 ].

Preprocessingtechniquesusedwithonlinesignature X  X fea-tures vary a great deal and may involve noise reduction, normalization, alignment, segmentation, translation, rota-tion and scaling invariant transformations. In [ 9 ], Gaussian filtering is used for noise reduction, while in [ 10 ], signature normalization is realized by employing Fourier Transform. Alignment based on the mass center and the principal axis of inertia is applied in [ 11 ]. Length-, time-based or pen up [ 12 , 13 ] are some of the examined options for sig-nature segmentation. More advanced techniques, such as those based on signatures geometric characteristics [ 13  X  19 ], mainly use geometric extreme points. In [ 16  X  18 ], segmen-tation is carried out in two levels using a dynamic program-ming matching on vertical maximum in the first level and matching on vertical minimum in the second level. Fur-thermore, several criteria are used for identifying directly matched points. In [ 19 ], a Hidden Markov Model (HMM) is used for both segmentation and matching. In [ 20 ], sig-natures are initially aligned using Dynamic Time Warping (DTW) on the velocity feature. They are segmented using the relative angle between the slope of two consecutive seg-ments in the shape of the signature, splitting signatures X  low-and high-curvature segments into partitions for further comparison.

Depending on the feature selected, online signature verifi-cation methods are classified into parametric/feature-based, which rely on global features [ 8 , 9 , 21  X  23 ] and function-based. The latter exploit the whole signature X  X  feature(s) time sequence, either employing sequences distance mea-sures [ 24  X  31 ] or creating signatures models, using for exam-ple HMMs [ 10 , 19 , 32  X  36 ]. Several approaches are proposed that combine global and local features fused using weighted averaging techniques or in multistage systems. In [ 37 ], the majority voting of a three-expert system determines verifier X  X  outcome, with the first expert using a holistic shape-based analysis and the other two experts using regional speed-based attributes. Similarly, in [ 38 ], a three-stage system is proposed that combines the Mahalanobis distance of global features with local features of corner points. It uses corner matching and the elastic matching of curvilinear speed with criteria of minimum deformation energy.

The shape retrieval research area has provided a number of features which are also suitable for signature verification. The angle feature, either associated with a selected reference axis [ 39 ] or using three contour points [ 40 ], has been inves-tigated in scale space. Each scale corresponds to an iteration of progressive smoothing, resulting in a descriptor similar to the Curvature Scale Space descriptor [ 41  X  43 ].

The  X  X ngle X  feature has been explored in the past both in online and in offline signature verification contexts [ 9 , 12 , 20 , 27 , 35 , 36 , 44 , 45 ]. In most approaches, it is calculated as the angle of the line connecting two consecutive points and a predefined axis, that is, the x or y axis of the Cartesian system to the line of the first two points of the signature [ 35 ]. As a feature, angle is used to express signatures directionality and is designated as a promising shape descriptor. Angle quantization [ 12 , 27 , 36 ] is also a preferred approach due to its noise robustness. However, the use of angle feature (and not relative angle) requires significant preprocessing or post-processing because it is a rotation-dependent feature. Direc-tionality has been also used as a feature, using information about its distribution [ 12 , 44 ]. In an online framework, the distribution of the angular direction sequence in segmented time interval [ 12 ] is the computed feature, while in [ 44 ]an offline framework, a global feature that measures the sum of pixel values along eight predetermined directions throughout the signature image is proposed. The relative angle between consecutive segments is used in [ 20 ] for segmentation pur-poses.

The research angle representation employed, as proposed in [ 46 ], does not use the previously mentioned approaches. Turning angle calculation is based on three contour points that are not sampled with geometrical criteria, but on points that are selected by the dynamic online process, capturing timing information. The scale space representa-tion does not change the contour by iteratively smooth-ing it but is realized by selecting three different points of greater between them  X  X ample distance X  for angle calcula-tion.

The last stage in signature verification is signature classification to genuine or forgery. The main signature classification approaches include [ 2 ] template matching, statistical and syntactic ones. Template matching entails signature X  X  features matching against the reference set or a stored template and is based either on inelastic, for example Euclidean distances, or on elastic distances with main representative being the DTW distance [ 8 , 24 , 25 , 29 , 31 , 47  X  50 ]. Statistical approaches evaluate the relation of signature X  X  features with signature X  X  statistical profile, for example using HMMs for signature X  X  modeling [ 10 , 19 , 32  X  36 ]. Syntactic approaches create structural models and employ graph matching [ 13 , 16  X  18 , 51 , 52 ] or tree matching techniques.

The selection of the reference set for matching, for tem-plate construction or for model building is not trivial due to signers X  genuine signatures intra-class variability and skilled forgers X  signatures resemblance to genuine signatures. The intra-class variation of genuine signatures can be quanti-fied and taken into account either for reference signatures selection as in [ 53 , 54 ] or for incorporating local stability information in the similarity calculation [ 24 , 55 , 56 ]. Finally, for setting the proper threshold among genuine and forgery signature classes, advanced pattern recognition techniques such as Linear Discriminant Analysis [ 57 ], Fisher Discrim-inant Analysis [ 23 ], Support Vector Machines [ 8 , 25 , 58 ], Neural Networks [ 57 , 59 ] and Genetic Algorithms [ 29 ]are employed.
 In the following paragraphs, we define the Turning Angle Sequence (TAS) representation as used in the con-text of this work and how the fusion of TAS-es with different parameters constructs the Turning Angle Scale Space (TASS) representation. Then, the elastic distance mea-sures considered for TAS or TASS similarity estimation are described. These are DTW [ 47 , 48 ], Time Warping Edit Distance [ 60 ], Longest Common Subsequence Matching [ 29 , 30 , 61 ], Minimal Variance Matching [ 62 ], Optimal Sub-sequence Bijection [ 63 ] and the Mutual Nearest Point Dis-tance [ 64 ].

The experimental process on two publicly available sig-nature databases, the SVC2004 [ 7 , 49 ] and SUSIG [ 8 ], along with main results is portrayed. Apart from experimental results on the combination of the proposed feature together with the selected distance measures, the effectiveness of the TASS and LCSS is presented separately. In addition, the experimental results of some of the most recent approaches [ 23 , 27  X  29 , 31 , 45 , 57  X  59 , 65  X  67 ] that use the same exper-imental databases are reported. We conclude with main remarks and future work exploiting the TAS(S) represen-tation. 2 Signatures representation based on turning angle 2.1 Turning angles sequence A signature in an online signature framework is represented by consecutive sample points. Digital tablets have a con-stant sampling rate, while recording is interrupted only at  X  X en up X .

TheTurningAngle(TA)inasignature,similartoDifferen-tial Turning Angle [ 40 ], is the angle between two consecutive segments connecting three points of the signature, while the TAS is the sequence of TAs along the signature.

Given a digitized signature represented at time instants t to t N by its co-ordinates ( x 1 , y 1 ) to ( x N , y N ) a point ( x k , y k ) is calculated by using the r th previous point ( x around this central point as in Eq. ( 1 ): where  X  signs are used for convex and concave angles, respectively.

The sign value can be calculated by Eq. ( 2 ): signTA = sign In this way, the TAS representation [ 46 ] on a sequence with r points can be defined as in Eq. ( 3 ): TAS ( k ) =[  X  r k ] , for k = ( r + 1 )  X  X  X  ( N  X  r ) (3) An example of a point X  X  TA is presented in Fig. 1 , while in Fig. 2 , a sample signature and its TAS representation with r = 1 is given. The correspondence of selected segments of the signature with the relevant TAS points or parts is also included for visualization purposes.

TAS representation possesses a number of desired prop-erties for signature verification. TA feature is translation and rotation invariant, since signatures space translation and rota-tion do not affect the TA of consecutive segments.
TA feature is in Euclidean geometry scale-invariant, but scale invariance cannot be strictly guaranteed due to the spe-cific writer X  X  dynamics when signing to a greater space and tablets capturing characteristics. In this sense, scaling invari-ance would be guaranteed by the standardization of the acqui-sition system with fixed size digital tablets.

TAS captures essential shape characteristics. Using the acquisition system sample points for calculating TAs and sample id distance for scaling (with no equidistant space /curve/time criteria), signatures dynamics are captured as well. A  X  X low X  signer creates signatures with more points. In this way, the TAs of a  X  X low X  signer are different in the number of samples and signal values than those of a  X  X aster X  signer for the same visually perceived segment. 2.2 Tuning the r parameter Computation of TAS involves proper setting of parameter r of Eq. ( 1 ). Parameter r defines the number of sample points of the angle sides and therefore defines the scale of curve observation.

TAS for r = 1 is not a good choice as it suffers from noise between consecutive points. Small hand trembling may result in great TAs that give the impression of turning directions while the segments may be parts of a straight line. Quantiza-tion effects contribute also to noise level uprising. For greater values of r , this phenomenon is eliminated. By increasing r , higher scale information is taken into account. However, angle is not computable in signature boundaries for r points, limiting the TAS length to N  X  2 r points, where N is the number of signature X  X  samples.

In between these two extreme cases, there is an extended range of r values that could be assigned to r and capture a great deal of signature information.

The 2 r reduction in the length of the descriptor compared to the initial length of its relevant series is the main reason for which TAS representation uses the signature as a sin-gle stroke. The application of TAS representation on a small segment would restrict us in using only very small r val-ues. Also, in our experience, pen up points coincide with abrupt pen position changes and result in different TA values than their neighbor points capturing signer-specific signing characteristics. The application of TAS representation on the whole signature provides for higher values of r a signatures macroscopic view.

In Fig. 3 , the TAS histograms of two genuine (first and second rows), a skilled forgery (third row) and a random forgery (fourth row) signature for r = 1 at the left and r at the right are presented, showing that for r = 1 the con-centration of angle values around zero does not give as much discrimination power to TAS descriptor as in r = 5 scale. In the latter case, similarities between genuine signatures and their differences to the forgeries signatures are more visible. The  X  X istances X  of these data series could be used as criteria for signature admission. 2.3 Turning Angle Scale Space signature representation Combined use of TAS at different scales, that is, using differ-ent r values, produces the Turning Angle Scale Space (TASS) signature representation. More formally, for each point k of the signature, a number of angles are calculated for several values of r , providing simultaneous information at differ-ent observation scales. The TASS [ 46 ] representation for the signature of N points is given by Eq. ( 4 ): TASS = that is, the signature feature is a set of vectors selected across the TAS sequences. In this way, TASS requires multivariate signal processing and therefore vector tech-niques are employed in the matching stage.

In Eq. ( 4 ), there is no implication for r values being con-secutive or ordered.

Small r i values correspond to finer description of local characteristics, while greater values capture coarser features ofthesignature.Anexampleofthisrepresentationisdepicted in Fig. 4 .

TASS descriptor for signatures X  curves is strictly rotation and translation invariant and scale invariance can be approx-imated only by proper r (s) value(s) selection. In this way, signatures X  preprocessing is not required. TASS descriptor captures both curves X  overall shape and curves X  dynamics. 3 Longest Common Subsequence Matching-based distance calculation 3.1 Signatures X  similarity based on their elastic distance Asitwaspreviouslymentionedinfeature-basedonlinesigna-ture verification, the distance between sequences composed of signatures X  local features has been traditionally used for calculating the similarity of two signatures. Well-established inelastic distances that use points X  index for point matching, such as the Euclidean distance and Lp-norms, have proven themselves unsuitable for unaligned and/or non-fixed length sequences distance estimation.

Elastic distance metrics provide the means for distance estimation of sequences that do not have necessarily the same number of points, may share equal segments unaligned and may have intervening outlier points.

The main school of such distance estimation algorithms keeps points ordering constraints to their matching. Depend-ing on the policy of distance measurement, that is, the way that distance is measured when corresponding points, out-liers or sequences of outliers defined as gaps are present, several elastic distance measures and their dynamic pro-gramming implementation [ 50 ] are proposed. Such mea-sures are the DTW, Time Warping Edit Distance (TWED), Longest Common Subsequence Matching (LCSS), Mini-mal Variance Matching (MVM) and Optimal Subsequence Bijection (OBJ). An elastic distance algorithm with no strict ordering constraints is the Mutual Nearest Point Distance (MNPD).

DTW [ 47 , 48 ] makes a multipoint to multipoint matching among the compared sequences keeping ordering constraints in a way that the minimum accumulated distance is found. TWED [ 60 ] is based conceptually on the Edit Distance algo-rithms, where the accumulated distance of two sequences is incremented with the amount required for matching two points when they are considered close, and the amount required for deleting or inserting points to either of the sequences when no matching point to the other sequence is found. In the present implementation, stiffness adjustment is incorporated to the TWED. During matching, the time inter-val of consecutive points is taken into account. While con-ceptually in TWED  X  X ne-to-one point X  matching takes place, the accumulated distance uses the  X  X ontribution/penalty X  of inserted or deleted points, that is, non-matched points.
LCSS [ 29 , 30 , 61 ] considers only matched points in the final result and a point participates only once in the match-ing procedure. The accumulated distance is incremented by one when two points are considered to be close, and noth-ing is done when no matching points among the sequences are found. OSB [ 63 ] resembles LCSS, but introduces a penalty for skipping some points, called jump cost. MVM [ 62 ] embraces skipping outliers, but only from the target sequence. This is less suitable for signature verification, since the inter-signer variability causes points of genuine signa-tures being treated as outliers. In this way, both reference (genuine) and test signatures contain outlier points. MNPD [ 64 ] differs from the rest of the distance measures. It does not calculate distance through an optimization path, permits ordering alternation and matches all points irrelevant to their proximity. It sums the distances of each test sequence point from its nearest point in the reference sequence and vise versa. Theresult is normalizedwiththetotal number of points in both sequences.

We have conducted several experiments using most of the aforementioned elastic distance algorithms, tun-ing their parameters for best verification performance. The verification performance of selected elastic distance measures combined with TAS descriptor is presented in the experimental results section. Among the above distance mea-sures, we experimentally found the variation of the LCSS as the most appropriate for signatures analysis. For this reason, we describe relative LCSS in more detail in the following paragraph. 3.2 Longest Common Sub-Sequence distance Longest Common Sub-Sequence distance [ 29 , 30 , 61 ] can be considered as a variant of Edit Distance algorithms, in which only points that match, that is, points with a distance less than a parameter  X  , are considered in the final result and a point participates only once in the matching procedure. The result is incremented by 1 only when two points are considered to be close.

In Fig. 5 , the mapping of two signatures based on TASS using LCSS is presented. There is no one-to-multiple points mapping. The implementation time complexity of LCSS is O ( nm ), where n and m are the lengths of the sequences whose distance is calculated.

If we assume that two sequences are compared, we define the distance d ( i , j ) of the i th point of the first sequence to the j th point of the second sequence as the Ln-norm of the two points. We employ the L2-norm, that is, the Euclidean distance, in our experiments.
 The equivalent dynamic programming algorithm for LCSS for two sequences of n and m points, respectively, is as follows: d d i = 2 : ( n + 1 ), j = 2 : ( m + 1 ) (5) We use the relative LCSS (RLCSS) distance [ 30 ] for signa-tures similarity calculation, which is defined as: d that is, it represents the percentage of matched points in the two sequences, normalized by the total number of the points, penalizing in this way signatures that have length differences.
In order to experiment with the same  X  parameter for all compared sequences, we normalize TAs to [  X  1, 1], keeping the same aspect ratio of their values, according to the set of equations ( 7 ). In this set of equations, TASS1 and TASS2 hold the TASS representations of two signatures whose simi-larity is calculated, before normalization, while TASS1 n and TASS2 n stand for their normalized TASS representations, respectively. Parameter  X  is then set to values between 0.1 and 0.2.
 TASS1 n = TASS1 / max ( max ( abs(TASS1) , max ( abs ( TASS2 ))) TASS2 n = TASS2 / max ( max (abs(TASS1) , max ( abs ( TASS2 ))) 4 Experimental process and results 4.1 Databases and process For the experimental process, two available signature data-bases: the SVC2004 Task1 [ 7 , 49 ] and the Visual Sub-Corpus part of the SUSIG database [ 8 ] X  X rom now on called SVC2004 and SUSIG, respectively X  X re used for the a-posteriori per user equal error rate (EER) estimation. In both databases, genuine signatures are acquired in two ses-sions of significant time period difference and skilled forgery signatures are obtained employing randomly selected sign-ers that watched the animation of the forged signature and practiced on imitating it.

Signature verification entails testing a signature against a reference set of signatures and deciding based on a threshold whether the signature is genuine or forgery. EER is defined as the common value in which false acceptance rate (FAR) equals to FRR. A per-user threshold is used for EER esti-mation, and the average of the computed EER values for all users, from now on referred as mean EER (MEER), is used for performance evaluation.

We run our experiments according to the base and the ran-dom forgeries protocols [ 8 ]. The first five signatures are used as the reference set, while the remaining genuine signatures are used for false rejection testing. In the base protocol, the whole set of the forgery signatures are used for false accep-tance testing. For random forgeries FAR calculation, genuine signatures from other randomly selected persons are used as random forgeries samples.

The selected feature descriptors for our experiments, TAS and TASS, do not require signature preprocessing. However, preprocessing bringing x and y coordinates to [  X  1, 1] space keeping the aspect ratios for scale and translation invariance is employed, since this preprocessing was used in experi-ments with other feature descriptors for comparison. Sig-natures X  TAS(S) representations are calculated according to Eqs. ( 2 ), ( 3 ) and ( 4 ), and their post-processing (normaliza-tion) is done according to the set of equations ( 7 ). Next, the distance of the test signature X  X  normalized TAS(S) to each of the reference signatures X  normalized TAS(S) is found and the mean of those distances is used as the similarity of the test signature to the claimed signers signing. Experimental process is kept as simple as possible to highlight the suitabil-ity of the descriptor under the elastic distance measure with the best performance, RLCSS.
 Also, for evaluating the effectiveness of the TAS(S) and RLCSS independently, we conducted a number of experi-ments using TAS(S) descriptor with some of the aforemen-tioned elastic distance metrics, tuning them experimentally for their best verification performance. In the same con-text, we conducted a set of experiments using several signa-ture representation descriptors that have proven themselves successful in other signature verification tasks along with RLCSS distance and compared the results with those using TAS and TASS descriptors. 4.2 Experimental results 4.2.1 One scale X  X AS descriptor Initially, we calculated the MEER values for SUSIG and SVC2004 development databases using TAS descriptor and the selected elastic distance metrics. Since MNPD distance hasnoorderingconstraints,inordertoboostitsmatchingout-come and eliminate crossings of indexes of matched points, we added timing information as an extra dimension in our sequences weighted appropriately. In Table 1 , the best per-formance results are presented for each database using TAS descriptor with DTW, RLCSS, TWED and MNPD distance metrics, separately for random and skilled forgeries, along with the minimum r value for which this value occurred.
The elastic distance measures keeping ordering con-straints have shown similar results, better than MNPD, especially for SVC2004 database. Since we obtained best performance for RLCSS distance measure and in order to get an insight in the performance of TAS descriptor, we present in Figs. 6 and 7 the MEER obtained with TAS descriptor for several r values for random (solid line) and skilled (dashed line) forgeries detection for SVC2004 and SUSIG databases, respectively.

Both databases indicate that for r = 1, that is, results using consecutively sampled data points for turning angle calculation are significantly worse than those from the rest of r parameter values. This is in accordance with our previous observation for hands trembling and quantization noise effects.

Going to higher r values, results improved significantly, showing that the use of larger scale  X  X e-noises X  the signature acquisition process and provides more accurate information on signatures shape. On the other hand, using r &gt; 1 does not exclude local information since TA is calculated for every point of the signature.

In each database, there is a small number of signers, for which individual EER values do not improve along the r scale. These are mainly smallest length signatures with the few changes in angle direction, resembling more to short ver-sions of signatures. These signatures are easier forged and do not convey significant information in their angle encoding. However, signers usually do not sign legally using these ver-sions of their signatures.
 We also noticed (Figs. 6 , 7 ) a small increasing trend of MEERs with r . This can be attributed to the fact that for greater values of r , more points from the start and the end of the signature are excluded from TAS descriptor, reduc-ing significantly the number of feature vectors. To be more specific, for r &gt; 10, the number of points excluded from the start and the end of the signature is in average at least 10 % of the signatures X  length, if we take into account that the average length of genuine signatures in SVC2004 and SUSIG databases is about 220 and 215 points, respectively.
For both databases 0 %, Mean EER values are achieved for random forgeries detection for an extended range of r values, while 6.3 and 0.5 % are the best Mean EER values achieved for skilled forgeries detection for SVC2004 and SUSIG databases, respectively.

The improved performance for this extended range of intermediate r values implies that the method is indepen-dent of any preprocessing or training which is a significant advantage. This observation which is true for both databases indicates that r parameter could be set independently of the database used. 4.2.2 Multiple scales X  X ASS descriptor We repeat the experimental process using TASS descriptor with two scales. The r value with the best results for both random and skilled forgeries of the previous step is used for thefirstscale( r 1 parameter). We experimented with the r value of the second scale, the r 2 parameter.

In Table 2 , the best mean EER results are presented for each database for DTW, RLCSS, TWED and MNPD dis-tance metrics, separately for random and skilled forgeries, reporting the relevant r 2 value. Elastic distances that pre-serve ordering constraints have similarly good results, mean-ing that TAS(S) descriptor is stable across those distance calculation algorithms.
 Since, once more, we obtained best performance for RLCSS distance measure, in order to get an insight in the performance of TASS descriptor, we present the MEER val-ues relative to r 2 value for random (solid line) and skilled (dashed line) forgeries for SVC2004 and SUSIG in Figs. 8 and 9 , respectively. In these figures, the equivalent graphs of the previous step (with 1 angle) are also presented using thinner lines for depicting the improvement achieved.
We conclude that the second scale adds significant infor-mation to signature verification, because the thinner lines (i.e. one scale) are mostly on top.

Thebestresultsobtainedareforbothdatabases0%MEER values for random forgeries detection for several r values, while 5.33 % ( r = [5 17]) and 0.52 % ( r = [6 8]) are the best MEER values achieved for skilled forgeries detection for SVC2004 and SUSIG databases, respectively.

While the first r value for which we get best results is sim-ilar for both databases, the second (added) r value for best results is significantly different between the two databases. This can be attributed to the special geometric characteristics of the signatures of the two databases. SVC2004 signatures are more fragmented and seem to have more abrupt direc-tion changes than SUSIG. In this way, significant additional information lies to an r 2 scale holding a more macroscopic view. Also, the tuning of the  X  LCSS parameter results in different best r values, which means that the definition of outlier points during system training is significant.
We repeat the experimental process adding a third scale (three angles), using the r 1 and r 2 parameters with the best results of the previous steps for the first and the second scale, and experimenting with the r value of the third scale, r 3 meter. However, results are not improved, which means that fusion of a third scale does not add significant information to signature verification.

Thus, for both databases, two angle scales seem to be enough to reach the limit of the descriptors discrimination capacity. These two scales are not the same for each data-base. While the experimental process presents a-posteriori results, the selection of r parameters for a new database could be made with the same experiment on a suitable number of training sets of genuine and forgery signatures, which are usually available in real-life cases. Given that the r value presents insensitivity to a large scale, setting this r parameter is not a difficult task. 4.2.3 TAS(S) evaluation We repeated the experiments using several signature repre-sentation descriptors that have proven themselves successful in other signature verification tasks using the same experi-mental framework.

These descriptors are as follows: position [ xy ], position along with time [ xyt ], displacement [d x d y ], speed [vel], acceleration [acc], angle of two consecutive points relative to x axis [  X  ], angle  X  along angle difference [  X  X  X  ], sine and cosine of angle  X  , displacement along with sine and cosine of a [d x d x cos a sin  X  ]. The mean EER values of the exper-imental framework using the above descriptors and TAS(S) descriptors with best results are presented in Table 3 for both databases.

Comparing the results of Table 3 , we can see that TAS and TASS descriptors with the proper r values result in better meanEERsthaneveryotherdescriptor.Theresultsforskilled forgeries detection are improved at least 21.6 and 48 % for SVC2004 and SUSIG databases, respectively.

In Table 4 , we present recently reported results on skilled forgeries detection for both databases along with the results of TAS(S) combined with RLCSS. While the calculated best EER values of the proposed framework are close and in some cases better than the best results reported in the literature, the comparison is not straightforward, due to great varia-tions in the employed training sets, reference sets, classifica-tion methods and threshold settings. For example, the winner framework in SVC2004 contest [ 8 , 25 ] uses Support Vector Machines for classification, the displacement (d x and d y )as signatures X  descriptor, a variant of DTW for distance cal-culation, distances normalization based on the relevant set and training using all genuine and forgery samples of several signers. While the results of this system are superior due to global and not per-user threshold, no further details are avail-able for the tuning of the system, so that we could use it as a reference framework for our proposed descriptor and elastic distance.

In order to evaluate the TAS(S) feature performance, for comparison, we used the feature descriptor of the SVC2004 winner, d x and d y , along with the DTW distance in a similar process to our framework. The results for Task1 of SVC2004 were an EER of 8.08 % for random forgeries and 13.52 % for skilled forgeries, and 8.09 % for random forgeries and 12.78 % for skilled forgeries for SUSIG database. The results are at least 100 % improved using DTW and TAS (one angle), while they are even better using RLCSS distance.

The EER results for random forgeries detection for both databaseswithper-userthresholdof0%arereallypromising. We repeated our set of experiments for both databases using a global threshold, and under the requirement of FAR equal to zero, we faced a false rejection rate (FRR) of 0.5 % for TAS using r = 7. This threshold could be estimated a-priori with an adequate training set and properly chosen classification methods. 5 Conclusions and future work In this research, we have examined signature verification using the TAS descriptor with one scale and TASS descriptor with various numbers of scales using several elastic distance measures. The method was applied in two publicly available databases, the SVC2004 Task1 and SUSIG VisualSubCorpus databases.

We have confirmed our assumption that TAS descriptor captures significant information for signature verification for r values between 5 and 10. R space captures signatures shape information plus timing characteristics, since points used are acquired through signing time sampling. The comparison to other descriptors in the same framework and best results reported so far shows that TAS descriptor is very promising in signature verification.

We have experimented with the same descriptor in scale space adding incrementally one more scale. Experimentation showed that using the TASS descriptor with two scales (i.e. two r values in total) improves results and no more scale addi-tion is required. The proposed method of TASS descriptor combined with LCSS distance measure is ranked among the best and could be considered as a very promising approach in the signature verification area.

The selection of the best r values per user or based on signature X  X  area scale is still an open issue. Tuning best para-meters can be based on advanced techniques [ 68 ], where fuzzy logic based on empirical rules and genetic algorithm is combined to find the optimal features per user. However, these algorithms usually require a considerably large genuine signatures reference set.

The use of TAS(S) descriptors could be also applied on offlinesignatures. Thelackof points order informationcanbe overcome if it is estimated with the same criteria for the com-pared signatures. Then, TAS(S) application in offline frame-works representing signatures with several scales of view is expected to give as satisfactory results as in an online frame-work. References
