 This paper proposes how to effectively retrieve the mathematical proposed system requires no compli cated mathematical symbols, no particular input tool and no cons traint of query. Users can enter a query with plain words like the traditional Information Retrieval. For this, we extract features from the plain texts that are converted from the real math e quations. Experimental results show an outstanding performance, a MRR of 0.6585. H.3.3 [ Information storage and retrieval ]: Information Search and Retrieval  X  query formulation, retrieval models. Mathematical equation retrieval, MathML, Identifier &amp; Number, Operator &amp; Structure Information Retrieval (IR) is al ready popularized through PCs, phones, tablets, etc. Its applicat ion areas are recently becoming wider and wider; beyond texts, re searchers target voices, images, etc. However, the study of IR for mathematical equations is still in infancy. One of the initiatives to prom ote the accessible publication of mathematical contents is MathML (Mathematical Markup Language. http://www.w3.org/Math/), which is focused in this study. MathML helps web documents to easily include mathematical expressions without images. By this reason, the number of documents containing MathML expressions is rapidly increasing. In this paper, we propose how to easily retrieve math expressions written in MathML. Note that most people do not know much about MathML. If only those who know MathML are allowed to retrieve MathML equations, most people cannot even have the opportunity of equation retrieval. Although there are some math symbols in the search box. If there is an IR system that can retrieve math equations with queries with plain words, it could be very useful in many areas, e.g., the field of web-based education. Therefore, the main difference between previous studies and the present one is that the proposed system allows users to enter queries using plain words. To our knowledge, there is not a reported study on this problem so far. For example, we assume that a user is searching for a certain formula. He or she only remembers some part of the formula.  X  Part that the user remembers:  X  X   X   X  X  X 4  X  Example query:  X   X  X  b  X   X  X  X   X  X  X  X  X  X  4ac X  (root b squared minus 4ac) As shown above, users can simply create a query as if they speak the math equation . There are two possible approaches for our purpose: 1) converting queries into MathML expression s, and 2) converting MathML seriously dependent on the quer y translation performance. The latter requires more work but can alleviate the requirement of high query conversion performance. In addition, since the target consists of plain words, it ca n be easily combined to many on the latter. Since features are first extracted from the plain texts converted from real MathML equations, it is needed to convert the math equations into plain sentences. Technically, a  X  X lain sentence X  here means  X  X  sequence of normal words X  (hereafter, math-sentence). For example,  X   X   X   X   X  X  X  X  is converted into  X   X  X  X  X  k  X  1  X  X  X  n  X  X  k  X   X  X  X   X  (sigma k from 1 to n k squared). Through this conversion process, we constr uct a wide range of mathematics vocabulary, e.g., a math operator lexicon, synonyms and expressions. Various factors such as identifiers, operators and their order are employed as features and then we index and rank math-sentences of math equations using the features. This method shows a Mean Reciprocal Rank (MRR) of 0.5080. Moreover, we conducted additional experiments by combining the method with performance, a MRR of 0.6585. describes the related work. Se ction 3 describes our proposed system in detail. Section 4 presents experimental results. Finally, we discuss conclusions and future work in section 5. All After the release of MathML, researchers have started to study math equation retrieval in earnest. Youssef (2006) presented the roles of math search. Miner and Munavalli (2007) described an approach to search for mathematic al notation. Adeel et al. (2008) aimed to create a search system enable users to search for mathematical formula contents. Misutka and Galambos (2008) mathematical documents, but still offering an extensible level of current approaches and resources fo r math retrieval, then report on the interviews of a small group of potential users to properly ascertain their needs. Yokoi and Aizawa (2009) proposed a similarity search method for ma thematical equations that are particularly adapted to the tree structures expressed by MathML. Shin and Kim (2010) studied to retrieve mathematical documents using a query written in MathML. (2005). Their goal is to convert MathML expressions into representations of audio version in English and Portuguese. They reviewed the problem of speaking mathematics and presented the tool AudioMath 1 . MathPlayer 2 also converts MathML expressions into representations of Englis h audio version. Based on these previous studies, this study propos es an equation retrieval system that allows plain words as a query. We first convert the math equations, which we collected, into math-sentences. Referring to A udioMath and MathPlayer, we carefully implemented a convers ion system (hereafter, MConv-sys). While doing this, we could build some important lexicons. Among them, we briefly introduce the identifier lexicon and the operator lexicon.  X 
Identifier lexicon: An identifier is expressed with the tag &lt;mi&gt; in MathML. It includes all variables and some promised symbols. examples.  X  Operator lexicon: An operator is expressed with the tag &lt;mo&gt;. Table 2 lists some examples. We then analyze the rules of read ing math equations. The order of reading equations can differ from that of MathML expression. For http://lpf-esi.fe.up.pt/~audiomath http://www.dessci.com/en /products/mathplayer by  X  3  X  X  X  1  X  in Korean; the denominator 3 precedes the numerator 1 in Korean reading. We observed a variety of Korean normalize the format of reading and finally implement MConv-sys. We could construct a math -sentence corpus by MConv-sys successfully. An example math-sentence is as follow:  X  Example equation:  X  MathML expression:  X  Math-sentence:  X   X  X  X  X  X  X  e  X  X  X  X  2  X  X  X  i  X  X  X  X  X  X  0  X  X  t  X  X   X  X  X  X  X  X  p open parenthesis p open parenthesis s ...) The Two types of features, F1 and F2, are extracted from the math-sentence corpus. Table 3 shows the steps of feature extraction. F1 (Patterns of Identifier &amp; Number): We first extract identifiers (i) and numbers (n) from each math-sentence. We observe an interesting fact; the order that these two factors appear in math-sentences is relatively consistent. This is the reason why we decide to configure patterns with identifiers and numbers. importantly. Except a few stop words, only the operators and some other important e quation structure are left. We define them as F2. 
Identifiers and numbers (with 
The rest (with their relative Between the two types of features, we conduct an indexing process only using F1, and ranking process using both F1 and F2. We first extract the math-sentences whose F1 contain the query X  X  F1 as candidates. Then, we calculate the score of each candidate as given in Equation (1): math-sentence and a user enter  X  X   X   X  X  X  4bc X  ( X  X  squared 4bc X ) in the search box; F1 and F2 of the query are  X  inii  X  and  X   X  X  X  (squared) X , respectively. Since F1 of the math-sentence ( X  iinii  X ) addition, since two elements ( 4, c ) of F1 and one element ( X   X  X  X  (squared) X ) of F2 are exactly matched in both value and position, the number of matched element of F1 is 2 and that of matched element of F2 is 1. Thus, the score of the candidate becomes 2/5 + 1/3 = 11/15. In this way, we rank all the candidates by their scores.. We collected a total of 1,800 math equations from the various mathematical manuals that have a high school level or more. After we changed the equations into MathML expressions 3 , MConv-sys converted the MathML expressions into math-sentences. For evaluation, we employed MRR that is a well-known measure The equations played the role of testers X  target equations, and the testers created queries and searched the targets by the queries. We first conducted experiments in three different ways. The results are listed in Table 4 4 . As shown above, F1&amp;F2, the method using F1 and F2, shows better performance th an TFIDF or Okapi-BM25. We found that the performances of TFIDF and Okapi-BM25 are very dependent on operators, while one of F1&amp;F 2 is relatively dependent on identifiers and numbers. 
To compensate for these biased phenomena, we did experiments of linear combination as given in Equation (2): We used a tool of MathType (http://www.dessci.com/en/produ cts/mathtype). Since this is the first study that uses plain words as a query, we could not find any comparable previous experiments. Score other denotes that generated by TFIDF or Okapi-BM25. Figure 1 and Table 5 show the results. 
Table 5. Performances of the combined system;  X  value is in As can be seen, the overall performance was increased when we best performance. Finally, we achieved an outstanding performance, a MRR of 0.6585, by combining F1&amp;F2 with Okapi-BM25. It could be an important evidence that the usage of the traditional IR techniques by combining with the proposed method are effective on equation retrieval. This paper has presented how to retrieve math expressions written in MathML using plain words as a query. We first converted MathML equations into math-sentences, and then extracted features from the math-sentences. Our experimental results showed that the proposed method can be effectively used for equation retrieval. In our future work, we have the following plans. Our first plan is to build a larger corpus. We have been already collecting a considerable amount of equations. This new corpus contains many of the more complex equations. Ou r second plan is to conduct more experiments for obtaining be tter performance. One of them is to combine our method (F1&amp;F2) to the state-of-the-art IR techniques instead of TFIDF or Okapi-BM25. The third one is to convert queries into MathML e xpressions and retrieve MathML equations directly. We will compare its performance with the present one. Our final plan is to apply our method to English and other languages. This research was supported by Basic Science Research Program through the National Research F oundation of Korea (NRF) funded by the Ministry of Education, Science and Technology (2011-0003780). [1] Adeel, M., Cheung, H. S., and Khiyal, S. H. 2008. Math GO! [2] Ferreira, H. and Freitas, D. 2005. AudioMath: Towards [3] Miner, R. and Munavalli, R. 2007. An Approach to [4] Misutka, J. and Galambos, L. 2008. Extending Full Text [5] Shin, J. and Kim, H. 2010. An Equation Retrieval System [6] Yokoi, K. and Aizawa, A. 2009. An Approach to Similarity [7] Youssef, A. 2006. Roles of Math Search in Mathematics. In [8] Zhao, J., Kan, M., and Theng, Y. 2008. Math Information 
