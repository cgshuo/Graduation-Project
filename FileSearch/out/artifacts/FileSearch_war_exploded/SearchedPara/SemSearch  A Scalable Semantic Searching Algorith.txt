 The resource searching in most current P2P systems is based on the keyword match. However, some P2P applications need an efficient resource searching over the contents of resources. There is not a scalable semantic searching algorithm in the real P2P applications. So, improving the semantic analysis and implementing a scalable P2P semantic searching is the main motivations of this paper. In this paper, we integrate global and peer X  X  local semantic information to analyze the resource. Moreover, we propose SemSearch, a novel scalable semantic searching algorithm for the unstructured P2P networks. 
The main contributions of this paper include: 1) Proposing a scalable semantic analysis method to achieve the consistency and scalability of the semantic analysis; 2) Proposing an efficient P2P semantic searching algorithm, called SemSearch; 3) Carrying out the simulation experiments to evaluate the performance of SemSearch. 
The rest of the paper is organized as follows. In the next Section, we present some related work in this background. Section 3 presents the details of the SemSearch protocols. Section 4 evaluates the SemSearch performance through the simulation experiments. Finally, the paper is concluded in Section 5. The current P2P resource searching can be classified into two categories. One is based on the resource description (keyword, file name, etc.) match such as Gnutella, Bitcomet, and other popular file sharing P2P applications. Some searching algorithms in the structured P2P networks include: Chord [1], Tapestry [2], and CAN [3] also belong to this category. In this category, the keyword match is used to judge whether resources satisfy a searching request or not. Many P2P applications have employed this method. However, the keywords are difficult to represent the resource contents and users X  interests. So, the searching results can not satisfy the users. 
The second category is based on the resource contents. Semantic Overlay Network (SON) [4] first introduces the concept of the semantic searching. We can classify the P2P semantic searching into two sub-categories: 1) Semantic searching based on the static semantic analysis, in which peer extracts the resource semantic information from a static semantic model. pSearch [5] used a semantic vector to describe the resources. SemreX [6] was a semantic P2P overlay based on a concept tree. The static semantic analyses are easy implemented. However, this method is difficult to be extended. Hence, such method only adapts to the special applications. 2) Semantic searching based on the scalable semantic analysis. In this sub-category, the semantic framework [7] based on Hierarchial Summary Structure. RS2D [8] was a risk driven semantic P2P research search service. FCAN [9] implemented the content query over structured P2P overlay. And Semantic Small World [10] researched the semantic searching from the views of small world theory and semantic clustering. These semantic searches are scalable and flexible. Nevertheless, with the network size growing, it is difficult to keep the consistency of semantic analyzing and search. 3.1 Semantic Description in SemSearch which they share information[11]. Therefore, in SemSearch, we measure the word frequency in the resources to describe the resources. SemSearch has a global semantic knowledge base which is a keyword matrix, named Global Semantic Keyword Matrix (GSKM). A GSKM row describes a semantic cluster, for example, GSKM shown in (1) describes four semantic clusters. 
While a peer P joins SemSearch, it first loads the GSKM A m  X  n . Afterwards, P describes the keyword frequency proportion in the resource r i . represent the resource contents X  matching de gree with each semantic cluster. Usually, the shared resources in a peer are similar. Consequently, we describe the semantic semantic vector  X  3.2 Extended Semantic Analysis in SemSearch The global GSKM can not reflect the comprehensive resource contents. Moreover, an exhaustive GSKM is quite difficult for a P2P system. Therefore, we build peer X  X  Local Semantic Keyword Matrix (LSKM) to make semantic analysis scalable. for GSKM A m  X  n  X  X  each keyword. Each component in B is a keyword X  X  frequency locally. The similar meaning words usually have the similar distributions, so P looks for the new similar meaning words to extend LSKM. While P extends its LSKM L m  X  N ( N &gt; n ), it first copies A  X  X  elements into L and set the elements l Moreover, we use the average word frequency vector to judge whether a new word is a semantic cluster X  X  synonyms. This paper uses the cosine distance of two vectors to measure their similar degree. The cosine distance of two vectors x and y is defined as follows:  X  ( x , y )= P full-text retrieves its local resources and collects a keyword candidates list. Afterwards, it computes the similar degree of every candidate and semantic cluster. Each semantic cluster in L has a cosine distance threshold  X   X  . If the cosine distance of than the threshold, then the keyword joins this semantic cluster. 
When a new keyword S attempts to join the i th semantic cluster, if the i th row of L has null values, then S replaces a null value. Otherwise, S replaces the keyword which has the maximal cosine distance to the semantic cluster. And we set  X   X  as the elements X  maximal cosine distance to the average word frequency vector. SemSearch peer periodically calls the extension algorithm to extend LSKM. 3.3 Semantic Search of SemSearch selects a set of keywords from its interests to construct the query vector. P constructs cluster. Moreover, for a set of inquired keywords U , P constructs an inquired keyword resources. The vector W represents the distributions of the inquired keywords at local resources. So, we use the matrix V and vector W to build query vector g . 
The peers return local semantically similar resources whose cosine distance to g is less than  X  . Furthermore, peers select no more than r neighbors whose peer semantic vectors are near to g to transfer the searching request. 
The searching results of SemSearch depend on the threshold  X  . Therefore, we use an adaptive method to determine  X  value. When a peer first launches a searching from  X  min to  X  max based on the previous return responses. In this Section, we evaluate the performance of SemSearch by simulations. The network size is 3000-5000, and the peer X  X  connection degree follows the power law documents in ACM database and classifi ed based on ACM Computing Classification System 98 [12]. We select 3000 documents from each top catalog except General Literature and Computing Milieux. Moreover, the GSKM is a 9 X 5 matrix and LSKM is a 9 X 10 matrix. In the simulations, a peer launches two searching requests for each minute. More experimental parameters are show in Table 1.
 4.1 SemSearch Recall Rate We do the simulation experiments to comp are the average recall rate of SemSearch and Gnutella in various searching TTL and network size. The experimental results are shown in Figure 1. 
As shown in the experimental results, SemSearch gets a higher recall rate. Further-more, we can easily discover that the SemSearch recall rate rise over time. Analyze this phenomenon, we have found that the peer X  X  semantic analysis is more accurate with the LSKM extending. So, the recall rate of semantic searching rises. 4.2 SemSearch Precision We have measured the precision to evaluate the consistency of semantic searching. Based on the ACM CSS classification, a peer launches a searching request for the resources in one catalog. If the return resources are in the same catalog, we consider the returned resources are semantically corr ect. The experimental results are shown in Figure 2. 
The experimental results show that SemSearch keeps a high precision (about 90%) in the experiments. Further, analyzed the experimental results, we have found that the 40%-50% semantically inapprehensive returned results still are similar to the initial searching requests. So, we can draw a conclusion that the semantic analysis of SemSearch is available, and the returned documents are the peer X  X  required ones. In this paper, we propose a novel scalable semantic searching algorithm for the unstructured P2P networks, named SemSearch. Comparing with the existing P2P semantic searching algorithms, the semantic analysis of SemSearch is more scalable and easy to be implemented. The experimental results show that SemSearch is a scalable and resource searching. Also, we plan to implement SemSearch over an actual P2P appli-cation to further evaluate and improve its performance. 
