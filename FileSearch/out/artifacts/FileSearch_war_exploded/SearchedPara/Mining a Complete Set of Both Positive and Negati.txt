 databases [1-3]. Researchers have extended the association rule (AR) concept  X  originally specific to binary data tables X  to a multitude of domains, involving quanti-tative, hierarchical, fuzzy, and many other kinds of databases. The main characteristic the presence and the absence of itemsets, or the absence and the absence of itemsets) 13]). For example,  X  X ffice workers who did NOT buy cars turned to rent homes near subway stations X , and  X  X ustomers who were NOT interested in big screen mobile phones would NOT buy other value-added services (e.g., games, web connections, etc.) X . These kinds of ARs reflect certain negative patterns of data items and are usu-ally referred to as negative ARs. (indicating absence of the original item) are considered, since the mining complexity space and guarantee efficiency in classical ARM algorithms. forts have been made to develop improvements and extensions. Savasere et al. [5] and Yuan et al. [8] incorporate domain knowledge (taxonomy structure) into the algo-rithms. These approaches compare expected support or confidence of an itemset (based on itemsets X  positions in the taxonomy structure) with the actual value of these restricted to relative negative ARs compared with other sibling itemsets; and second, the domain knowledge (taxonomy structure) needed may often not be readily avail-(such as XY  X   X  , XY  X   X  , XY  X   X   X  ) and present approaches to mine them. plete set of valid rules, that is, some valid negative ARs defined may not be obtained using their algorithms [13]. Furthermore, Brin et al. [4], and Cornelis et al. [13] con-rules of concern. However, their notions are, though meaningful, restrictive in seman-tics and deemed necessary to extend. 
In this paper, another notion of validity for both positive and negative ARs is pre-sented, which reflects semantics in a broader sense and appears to be intuitive. Then, a mining algorithm is proposed, which is sound and complete in terms of generating efficiency. the Degree of Confidence ( conf ), are used to define a rule [2-3]. According to [9, 12-13], In the case of the negation of a set of items (itemset) X , denoted by X  X  , the de-positive rule, whereas rules of the other forms ( XY  X   X  , XY  X   X  , XY  X   X   X  ) are defined as follows: for valid association rules. (AR) is an expression 121 2 ,{,}, {,}, CCCXXCYYXY  X   X  X   X  X   X = X  , such that bound are mappings from the set of possible ARs to {0, 1} with: posbound C C Supp Y ms conf C C mc negbound C C fact that, if 1 (')1 posbound C Y  X   X = , then 1 ()1 posbound C Y  X   X = is always true, for all ' YY  X  . Moreover, it is important to note that several useful properties hold as completeness of the proposed AR mining algorithm that will be discussed in the next section. Property 1 (1.1) () ( ') supp X supp X  X  , for all ' XX  X  (downward closure) (1.2) (') () supp X supp X  X  X   X  , for all ' XX  X  (upward closure) Property 2 (2.1) 11 ()( ') supp C Y supp C Y  X   X   X  , for all ' YY  X  . (2.2) 22 (' ) ( ) supp X C supp X C  X   X   X  X   X  , for all ' XX  X  . (2.3) 11 (')() suppCYsuppCY  X   X  X   X   X  , for all ' YY  X  . Property 3 (3.1) 11 ()( ') conf C Y conf C Y  X   X   X  , for all ' YY  X  . (3.2) 11 (')() conf C Y conf C Y  X   X  X   X   X  , for all ' YY  X  . Property 4 Let (4.1) ()() conf X Y conf X Y  X   X   X  X   X  . (4.2) ()( ') conf X Y conf X Y  X   X   X  X   X  , for ' YY  X  . As can be seen in previous discussions, all valid association rules of concern, namely the AR space, are composed of four types of ARs. In other words, the AR space could XY  X   X  ; and Part IV: negative valid ARs, in forms of XY  X   X   X  . 
The mining process, therefore, constitutes four major steps to generate all frequent the Apriori-type approaches etc. While the effective Apriori X  X  pruning strategy based on downward closure property (Property 1.1) still pertains in generating part I, it does not suit in generating parts II, III, and IV. Hence, new pruning strategies, say, based section 2, need to be developed so as to en able an effective and efficient generation of all negative valid ARs. 3.1 Pruning Strategies In addition to property 1.1 used as a pruning strategy to generate positive valid ARs, downward-closure-like and could be incorporated in the mining process for part II as a pruning strategy. Furthermore, in discovering valid ARs in forms of 1 CY  X   X  (i.e., well. Property 5. If ' XY  X   X  is valid, then XY  X   X  ( ' YY  X  ) is valid. Property 6. If 1 CY  X   X  is valid, then 1 ' CY  X   X  ( ' YY  X  ) is not valid. consequents of already obtained valid ARs and prune candidate ARs by examining sequents). Property 6 enables us to use potential ARs (not valid ARs, but having po-consequents X  ( k -1)-length sub-itemsets in potential ARs. 
Notably, the difference between the Apriori-type approach and the proposed ap-proach for parts II, III and IV is that the former uses frequent itemsets to generate and candidate ARs for part II, and uses potential ARs for parts III and IV. More details are presented in the following subsection. 3.2 Algorithmic Details The following notations are used in discussing algorithmic ideas. , XY : positive itemsets; ||,|| XY : the number of items in X, Y () LP : frequent itemsets in part I; 
LP : k -length frequent itemsets in part I; VR P : valid ARs in part i ; VR P : valid ARs with k -length antecedent and p -length consequent in part i ; 
NR P : potential ARs; not valid ARs, but having potential to generate valid rules by CR P : candidate ARs in part i , including () i VR P and () i NR P . 
SP : positive itemsets whose support needs to be calculated via DB scan in part i ; Procedure 1. Generate all Negative Valid ARs in Parts II, III and IV (with minimal confidence mc ) 1: () i VR P = X  3: for ,1 {1;() ; } ik k= CR P k  X  X  X  ++ do 4: for , {1;() ; } ikp p= CR P p  X  X  X  ++ do 5: generate , () ikp SP 6: compute support of all itemsets in , () ikp SP 10: delete , () ikp NR P for II i  X  11: end for 12: 13: end for in Procedure 1 as follows, whereas correspon ding (sub-) procedural codes are omitted due to the limitation of space. CR P + . parallel computing algorithms. (and the corresponding algorithm) is both sound and complete. It is also easy to show ones (e.g., [4-5], [8-9], [12-13]) in terms of meaningfulness in rule validity and com-pleteness in rule generation. To study the effectiveness of our approach, we have performed data experiments based and Sequential Patterns (http://www.cse.cuhk.edu.hk/~kdd/data_collection.html). In the experiments, we used C++ on a Lenovo PC with 3G of CPU and 4GB memory. The main parameters of the databases are as follows. The total number of attributes is approximately 100K; the average size of maximal frequent sets is 4. 
The experiments were to illustrate that, though data-dependent, there are much semantically, and that the proposed approach (namely Algorithm VAR) is effective in generating negative ARs in terms of throughput rate (number of rules per time unit), positive ARs. Table 1 shows the results.
 Moreover the advantage became larger with the increase in minimal support ms . The fact that Number/Time in VAR decreased with the increase in minimal confi-advantageous over the maximal of Apriori. Negative association rules are considered useful in many real world applications. This approach, along with the corresponding algorithm, to mining all positive and negative ones in a sound and complete manner. Several rule properties have been investigated rithmic efficiency. The main advantage of the proposed approach over others could be generation. The work was partly supported by the National Natural Science Foundation of China (70621061/70231010) and Research Center for Contemporary Management at Tsinghua University. 
