 With hundreds of millions of particip ants, social media services have become commonplace. Unlike a traditional social network service, a microblogging network like Twitter is a hybrid net-work, combining aspects of both social networks and information networks. Understanding the structure of such hybrid networks and predicting new links are important for many tasks such as friend recommendation, community detection, and modeling net-work growth. We note that the link prediction problem in a hybrid network is different from previously studied networks. Unlike the information networks and traditional online social networks, the structures in a hybrid network are more complicated and informa-tive. We compare most popular and recent methods and princi-ples for link prediction and recommendation. Finally we propose a novel structure-based personalized link prediction model and com-pare its predictive performance against many fundamental and pop-ular link prediction methods on r eal-world data from the Twitter microblogging network. Our experiments on both static and dy-namic data sets show that our methods noticeably outperform the state-of-the-art.
 Categories and Subject Descriptors: H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval General Terms: Algorithms, Experimentation,Performance Keywords: link prediction, link analysis, Twitter
The use of online social networks and social media in general has surged in recent years. In this work, we focus on the under-standing of the use of one particular type of social service X  X hat of the microblogging network. In microblog services such as Twit-ter, Yammer and Google Buzz, participants form an explicit social network by  X  X ollowing X  (subscribing to) another user and thus auto-matically receive the (short) messages generated by the target user. Unlike some online social networks such as Facebook, LinkedIn or Myspace, a followed user has the option but not the requirement to similarly follow back. Thus, relationships in these social networks may be asymmetric, leading to three kinds of link relationships be-tween users A and B .If A follows B , we say that A is a follower of
B ,andthat B is a friend of A .If A and B both follow each other, we consider them mutual friends or reciprocal friends.
Thus, user B in a microblog service can generate messages, which are generally public and searchable, and any followers of such as A , will automatically receive those messages along with messages generated by all other users that A follows. The combi-nation of multiple me ssage intentions and asymmetry of connec-tions has led some to call microblogging services such as Twit-ter  X  X ybrid networks X  [14, 22]. They are hybrid not just because they can carry multiple types of messages, but also because par-ticipants create links for multiple reasons X  X o be social (e.g., to connect online to existing offline social contacts) or to link to in-formation sources. With multiple types of users, it may be difficult to understand how microblogging networks grow and evolve. In a hybrid social-information network, there are two viewpoints to consider. In an information network, the link prediction problem is like the recommendation problem, which is to recommend an in-formation source to an information consumer. In a social network, the problem is to recommend friends to the users, as introduced by Liben-Nowell and Kleinberg [16]. If we can predict the next link that a user will likely create, we will 1) have a model of the user X  X  interests that may be of value in recommending new links (e.g., as in Twitter X  X  recently in troduced  X  X ho to follow X  friend suggestions, and many third-party suggestion services) and in de-tecting communities; 2) be closer to modeling the network X  X  overall growth processes; and, 3) be able to simplify the task of adding that link when the user wishes to do so.

In this paper, we analyze link structures in Twitter to predict fu-ture links. Our contributions are as follows. 1) We are the first to experimentally compare many popular link prediction methods in a microblogging network. Furthermore, we also compare with matrix factorization X  X  popular method of recommender systems. 2) We propose a novel structure-based approach to link prediction. Empirical results on ego-centric networks of Twitter users show that our method can outperform state-of-the-art methods on this task.
There are several fundamental kinds of link prediction methods, such as structural methods, random walk methods and supervised methods. Liben-Nowell et al. surveyed an array of methods for link prediction in online social networks [16, 17].

One branch of structural methods is based on the local structure, such as common neighbors , Jaccard coefficient and Adamic/Adar [1] which refines the simple counting features by weighting rarer features more heavily. The preferential attachment method sup-poses that the likelihood that a new edge involves node v tional to  X ( v ) , the number of neighbors of v . Based on global struc-ture information, Clauset et al. [4] present a general technique for inferring hierarchical structure from network data and show that the existence of the hierarchy can simultaneously explain and quantita-tively reproduce many commonly observed topological properties of networks.
 Another approach utilizes random walk methods such as Rooted PageRank [16, 17] which is a variation of PageRank [21] that mea-sures the stationary probability of each node in a random walk that returns to the root with some probability in each step. Weng et al. [24] try to identify influential users of micro-blogging services by using LDA to analyze user interests. Yin et al. propose a method which augments the original graph with attribute nodes, and then uses random walk to calculate link relevance [26, 27]. SimRank [8] recursively defines the similarity of two nodes and can also be interpreted in terms of a random walk. The most recent random walk-like method is PropFlow [18] which calculates the probabil-ity that a restricted random walk starting at node v i ends at l steps. Katz [10] proposes a path-based method, which defines a measure that sums over the collection of all paths from v and assigns more weight to shorter paths. Recently, Backstrom et al. [2] proposed a supervised random walk method which combines information from the network structure with node and edge level at-tributes. Supervised learning then adjusts the weights on different attributes to guide a random walk on the graph.

In supervised methods, the link prediction problem is usually considered as a classification problem. Such methods extract fea-tures from training data and can include both topological features (as in [9]) and node features. Hasan et al. [7] use different kinds of features, such as proximity f eatures, aggregated features and topological features, and also compare different kinds of classi-fiers. More recently, Lichtenwalter et al. [18] examine important factors in the link prediction problem and present a classification framework which employs their PropFlow as a feature.

If you consider link prediction as a recommendation problem, a popular method is matrix factorization [13, 12, 11, 19] where the algorithms find hidden features for users and items by factorizing the observation matrix. However, those methods are designed for a user-item pair, and never before used for link prediction in social network.

There is other related research about link prediction [20, 23] and hybrid networks. Kwak et al. [14] find that the relationship of following and being followed on Twitter is not reciprocal, unlike most other social networking sites such as Myspace and Facebook. Romero and Kleinberg [22] also introduce the hybrid network con-cept and explore the directed closure process in Twitter. Recently, Golder et al. [6] discuss prediction specifically in Twitter. They an-alyze several principles for link prediction, such as shared interests, shared followers, and mutuality. They also discuss their user study results in [5].
Here we introduce our prediction framework based on link struc-tures. In a hybrid social-information network, structures can reflect many scenarios that may be useful for capturing users X  interests and predicting potential links. In Figure 1, we can see some examples of various structural meanings: a) User v u may be interested in v v other in real life and they are willing to use microblog as social net-other users which are following v i while v c is also following they may share the same interests. With these three examples, we Figure 1: Examples of relationships between user v u and can-didate v c . have already seen some meanings of structures. We wish to design a model to exhaust such structural information for predicting new links.

Suppose that we want to recommend other users which user u may know or be interested in following. The problem we consider is that given a user u and the whole network G , what is the proba-bility that user v u follows user v c : P ( v u  X  v c | G ) candidate users according to this equation, and the top N will be recommended to user v u . To calculate P ( v u  X  v theoretically, each intermediate user/vertex v i can contribute some structural information which represents two parts: the link struc-Now let us define the set of target users to which we will recom-exhaust the structural information V i , and the set of candidate users for recommendation V c . Assuming that P ( v u  X  v c | G ) ear combination of all possible intermediate users/vertices X  contri-bution, we have Let b v i ,v c represent the contribution of the structural information recommendation for v c and a v u ,v i represent the contribution of the structural information between v u and v i , which can be considered with A the matrix with elements A v u ,v i = a v u ,v i and with the column of A corresponding to v u . Similarly, B  X  X  | V with column vector B v c .Let R v u =[ r v u ,v 1 ,r v u ,v represent the current friends snapshot of v u in which r v current follower-only of v u .

Elsewhere [25] we report that only 12% of follower-only users of all follower-only users become new friends; thus it is perhaps reasonable to use follower-only users as negative samples. Then, In probabilistic view, we define the c onditional distribution over the current friends. p ( R | A, B,  X  2 )= v where N ( R | A T v u B v c , X  2 ) is the probability function of the gaus-sian distribution with mean A T v u B v c and variance  X  2 the indicator function for selecting observed training data. For pair ( v u ,v c ) , if we use it as our training data, then I v u ,v erwise, I v u ,v c =0 . We also place zero-mean spherical Gaussian priors on the two structural parts A and B The log of the posterior distribution over R , A and B is given by  X  is equivalent to where  X  1 =  X  2 / X  2 A , is actually the smoothing factor and denotes the Frobenius norm. Next, we need to involve structural regularization into the objective function.
Elsewhere [25] we show that more than 90% of new links go to people two hops away from user (the ego). Intuitively, if two ignored. We can define the set of the effective structures example, if we define that the structures with only one hop are ef-fective, the set of effective structures will be S e = { X  ,  X  ,  X  X  and if we define that all structures with up to two hops are ef-fective, then the set of effective structures will be S e = { X  ,  X  ,  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X  ,  X  X  X } .Let S i ,v j represent the set of all possible structures from i ,v j represent the set of all effective structures from v v
Beginning at some user v u  X  V u , intuitively, if the structures of ( v u v i ) and ( v u v j ) are similar or same, the contribution scores of a v u ,v i and a v u ,v j should be similar. Following this intu-ition, we make constraints on structural scores matrix A , and define a structural regularization function S ( A ) to constrain similar scores on similar structures.
 where W v u ( v i ,v j ) is the measurement of similarity on structures ( v u v j ) are, the higher value the W v u ( v i ,v j ) is. There are many kinds of methods to measure the structural similarity. Here, We list two: Cosine weighting let N S e v u ,v i represent the vector of quantified We also notice that if we take S e = { X  ,  X  ,  X  X  , the two kinds of weighting are equivalent, because n v u  X  v i ,n v u  X  v only can be 0 or 1. Similarly, we add the structural constraints to B , and we have The objective function O becomes ularization. In the above model, we see the two parameters controls the weight of smoothing and  X  2 controls the weight of reg-ularization. The selected training links are represented by
We call the above model the global model because the predic-tion is from the global network and performs collaborative filtering make predictions for a specific user and it will take a relatively long time to finish the computation; however, sometimes users perform interactive behaviors X  X uch as requesting an instant recommenda-tion. In this case, the global model may not work because of such long term computation. Secondly, the friendship network of some users may be already stable [25] and they may not want to add new friends.

It is necessary to make instant prediction for the users who are eager to get new friends. Unfortunately, directly reducing the model to fit the local structures of user v u will cause overfitting. Thus, here we introduce a local model.

Considering the extreme case that only one user v u requests new friends, the matrix R and A will reduce to only vectors R A u and a personalized method is necessary. We recall that the meaning of A and B , a v u ,v i can be considered as the probability of v know the current friendship network of v u and also the structural information of v i , we can make B personalized for v u  X  is, given the structure information of v i . For some specific user some path between v i and v c ( v i v c ) , we can use the following equation to get the approximation value of b v u ,v i ,v c lates the fraction of the number of v u  X  X  friends who share similar structures with v c .Ifthevalue  X  v u ,v c ,v i is larger, then there will be a larger probability that v u will follow v c . Then similarly as in section 2, for some specific targeting user v u we let Then we have the objective function O v u for v u : min
Solutions for Equations 1 and 2 are quite similar. One simple method is gradient descent. Intuitively, the structure rarely con-tributes negative effects and usually a user v u likes some kinds of users or does not care about some other kinds of users. In the quan-tified observed matrix R ,wealsouse1forcurrent v u  X  X  friends and 0 to represent links that v u does not care about. From the Section 2.2, we also involve a guidance value X   X  . All these reasons lead us to constrain A and B to be nonnegative. Nonnegative matrix factorization has been researched for many years [15, 3].
The objective function O and O v u in Eq. 1 and Eq. 2 are not convex in both A and B together and it is realistic to expect an algorithm to find the global minima. The process we use for solving O and O v u in Equations 1 and 2 is to use an iterative algorithm following the methods in in [15, 3] to derive multiplicative update rules. The proof by Lee and Seung [15] suggests that the objective function will be nonincreasing under such update rules.
In this section, we describe our prediction experiments. Our method is only based on structural information of the social graph; thus for comparison methods, we also mainly focus on structure-based methods which do not involve user properties or content.
In link prediction experiments, we use the same 979 Twitter users as in [25] and their immediate neighbors (979 ego users and their neighbors) that were collected to build a network for the link prediction task. In total, there are 211,559 unique users. For our experiments, we employed two kinds of evaluation methods.
Static Evaluation . Based on the 979 users X  ego network snap-shot on April 5th 2010, for each target user whose number of friends is larger than ten, we remove five links to friends. The pre-diction task is then to use the pruned networks to find the missing links. This evaluation method is widely used in the link prediction literature [4, 26, 27]. We use this process both for parameter tuning and for model analysis.

Dynamic Evaluation . We also monitored the changes in the 979 users X  friendships and recorded the new links established between April 5th and May 12th [25]. Here, the prediction task is based on the April 5th network snapshot to predict new friends in the following months.

For validation purposes, we also run our experiments on a second static Twitter data set (described below in Section 3.6). Precision, recall and F-measure are calculated in the standard manner, and our main measurement is the F-measure based in the break even point.
In this section, we analyze and discuss simple predictors and principles to show the difficulty of this problem. Daily monitored data shows that more than 90% of new users are within two hops and also their relationship [25]. Golder et al. [6, 5] discuss link pre-diction in Twitter, analyzing several principles for link prediction, such as shared interests, shared followers, and mutuality. Romero and Kleinberg [22] also introduce the directed closure process in Twitter tie formation. Here, we re-implement and compare the sim-ple predictors which are from the principles described in [22, 6, 5].
To represent the principle Shared Interests ,weusethepredictor: the number of shared friends. A shared interest is best represented by the relationship chain v u  X  X  X  v c . Similarly, Shared Au-followers. For Transitivity [6, 5] or the Directed Closure Process [22], we use Katz X  X  methods with degree length l =2 ,whichis equivalent to the number of paths v u  X  X  X  v c .Wealsotest Shared Mutual Friends . Shared Neighbors is just the count of the total number of neighbors (both friends and followers) without con-sidering direction. The results are shown in Table 1.

From Table 1 we can see that all simple predictors provide simi-lar performance X  X round .10 F-measure. We notice that the shared friends predictor performs worse than others, and that implies that two users sharing the same interests may not be particularly in-terested in following each other. Overall, simply using any single predictor cannot generate good results. Better methods are neces-sary.
In this section, we analyze our two models, and tune parameters on static data. In the experiments, we use the snapshots of the target user X  X  friendship network to construct the observation matrix Because we already know that more that 90% of new links are from second level neighbors, our effective structures are defined in one-hop; that is, each edge will have two parameters a and b respec-tively in A and B , and in the global model, it will generate predic-tion in two hops. In the local model, full structural information is are all set to the same value. We finally find that when smoothing parameter  X  1 = 100 and regularization parameter  X  2 = 100 local model and  X  1 = 1000 ,  X  2 = 100 in the global model, the best performance is achieved. The model usually can converge within 10 iterations, and Figure 2(b) shows the performance changes as a function of iteration number. Because the current network is an ego-centric network which can provide full structural information, butthesetoftargetusers X  V u  X  X s relatively small and may not provide good collaborative filtering, the performance of the local model is .197, which is better than the global model X .15. In the following, we use the local model for comparison.

Based on the local model and static data, we also analyze the for  X  1 ,weset  X  2 =0 , and then tune  X  1 from 0 to infinity. We can see that it achieves the best performance when it is set to 100. simple methods where links of the same type will share the same (a) Parameter analysis:F-measure as a func-tion of  X  1 (  X  2 =0) and  X  2 (  X  1 =0) value. The performance of this model is still competitive, although its F-measure is lower than the best performance. Similarly, the performance of tuning  X  2 is shown in the same figure.
In this section, we compare recent and popular methods which have been already used widely in link prediction problem. Six methods are implemented for comparison. The Common neigh-bors method simply counts the number of common neighbors. The Jaccard coefficient is calculated through dividing the number of common neighbors by the total number of neighbors. Adamic/Adar [1] refines the simple counting features by weighting rarer features more heavily. Preferential attachment scores are the product of PropFlow [18]. In both Katz X  X  method [10] and PropFlow, we tune the parameters l from 1 to 5 in static data. 1 Finally, we compare them on real dynamic data. The results are shown in the Static and Dynamic columns of Table 2.

In static evaluation, the results of PropFlow , Common Neigh-bors , Jaccard Coefficient and Adamic/Adar are similar and PropFlow which is a relatively newer method, gets better results than the other five competitors. Jaccard Coefficient shows compet-itive results which is similar with PropFlow . Preferential Attach-ment fails to predict missing links. For Preferential Attachment, be-cause it only depends on the in-degree of the candidates, in the case of the information producers (with higher in-degrees), it may work. However, in real world, we know that individual users are more prevalent than information producers. Thus, we can imagine the failure of Preferential Attachment. In dynamic evaluation, a point which we have to note is that unlike in static evaluation, the Jaccard coefficient works very well and even better than PropFlow . Within ego-networks, the Jaccard coefficient is a competitive method and also simple to calculate. We also find the failure of Preferential At-tachment . Our method outperforms all other methods in both static evaluation and dynamic evaluation.
As mentioned earlier, another direction to solve the link predic-tion problem in a hybrid network is to use the techniques of the traditional recommender systems. Matrix Factorization is a popu-lar method which is widely used in recommender systems [12, 13]. Here we employ the standard matrix factorization methods with smoothing. The observation matrix R is the same as the one in our model and the objective function is as follows. To solve this optimization, we used stochastic gradient descent. Based on the static data, we tune the number of hidden features from 20 to 300, find the optimal parameter for comparison and set  X  =0 . 05 . The results are shown in the last row of Table 2. On the static data, matrix factorization only achieves around .09 F-measure but the performance of matrix factorization on real data is also competitive at .163. Our m odel can outperform the standard matrix factorization in both static data and dynamic data because our method essentially incorporates matrix factorization techniques with structural information.
To test for sensitivity to our data set and sampling methods, we also ran our experiments on a subset of the large Twitter follow graph collected by Kwak et al. at KAIST [14]. We randomly sam-ple 2,000 test users and extract their ego networks as in Section 3.3. There are, in total, 81,580 users and almost 10 million edges within this second test network. We again compared our methods with the other seven methods using the static dataset methodology. The results are shown in the rightmost column of Table 2 and are consistent with our earlier experiments. PropFlow is also better than other comparison methods. Our approach consistently outper-forms all other tested methods.

Table 2: Comparing link prediction methods (F-measure).
We have demonstrated many of the challenges of link prediction in a hybrid network and also noticed that the overall performance is relatively low, compared to results presented in some link pre-diction papers on other datasets. However, even when consider-ing  X  X ocial networks X , most existing work does not directly exam-ine online social networks, but rather networks of co-authorship or similarly constructed networks reflecting some social relationship or record of activity.

On the other hand, the links in an online social network may re-flect relationships (friends, family) that are not visible in a record of activity, and in a microblogging network with hybrid character-istics is even more complex.

As a result, previous methods which may work well on tradi-tional social networks or co-authorship networks may not work as well on hybrid networks. Our results shows that the F-measure of many popular methods on our real-world data is only around 0.10.
Another cause for low performance of link prediction is that the microblogging network continues to grow. Each day, there may be many new links created [25]. In our experiments, we only evaluate new links within the following one month, so performance may be underestimated. It is possible that users are actually interested in those predicted links but they may not create those links within the following one month due to the fact that users may not discover those potential friends in a short period of time. In other words, users may create those links later, after our initial evaluation pe-riod. We conduct a simple experiment to test this: we make predic-tions based on the same training data X  X he 04/05/2010 snapshot, but we evaluate on different snapshots from different times. Fig-ure 2(c) shows the results, and we find that after 05/12/2010, target users continue to create links which we had predicted, so measured performance grows higher and higher.

Another thing we can notice is that performance on the three test sets are different. For example, matrix factorization works well on the dynamic data but not well on the static data. We can imagine that static evaluation and dynamic evaluation have different prop-erties such that some methods are better suited for one or the other. For the prediction task, dynamic evaluation is a more accurate es-timate of future performance than static evaluation. However, if recommendation is the true end goal, it is difficult to tell which (if any) is better without involving a user study.
In this paper, we examined the link structure and link predic-tion task within the Twitter microblogging network. We proposed a novel personalized structure-based link prediction model and com-pared its predictive performance against many fundamental and popular link prediction methods on real-world data from the Twit-ter microblogging network. Our experiments on both static and dy-namic data sets show that our methods noticeably outperform the state-of-the-art.
 This material is based in part upon work supported by the National Science Foundation under Grant Number IIS-0545875. We thank Roger Nagel, Xiong Xiong, Xiaoguang Qi, Lifeng Shang and Yong Zhang for their suggestions. Finally, we thank Twitter for access to their service and Kwak et al. [14] for releasing their data.
