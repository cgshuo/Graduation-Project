 The top-n recommendation focuses on finding the top-n items that the target user is likely to purchase rather than predict-ing his/her ratings on individual items. In this paper, we propose a novel method that provides top-n recommenda-tion by probabilistically determining the target user X  X  pref-erence on items. This method models the purchasing rela-tionships between users and items as a bipartite graph and employs Belief Propagation to compute the preference of the target user on items. We analyze the proposed method in de-tail by examining the changes in recommendation accuracy under different parameter settings. We also show that the proposed method is up to 40% more accurate than an ex-isting method by comparing it with an RWR -based method via extensive experiments.
 H.2.8 [ DATABASE MANAGEMENT ]: Database appli-cations X  Data mining Algorithms, Human Factors Top-n recommendation, Belief propagation, Data mining
As a result of growing popularity in e-commerce, recom-mender systems have gained its importance as an active re-search area and as a practical business tool. There exists an extensive amount of prior work on recommender systems [1]. Recommender systems are employed in many online shopping malls, such as Amazon.com, EBay.com, etc., and profits are generated through these recommender systems [3].

Existing recommender systems targeted for the Netflix prize and others have focused on rating prediction [1, 7, 12]. When we recommend items to customers, however, we should rank the items and pick a specific number of items from it. In fact, online shopping malls provide a specific number of items or the ranked list of items. In order to recommend a specific number of items, therefore, rankings of items are more important than predictions of a rating of each item. These systems that recommend a specific number of items are called top-n recommendation systems .
The ranking on items is possible based on ratings of in-dividual items computed through existing rating prediction methods. When they are applied to top-n recommendation, however, the rating prediction methods do not show suffi-cient accuracy, because they do not focus on the prediction of the relative preferences of items, but focus on the absolute preferences (rating) of items [5].

There is a top-n recommendation method based on ran-dom walk or random walk with restart (RWR) [4, 6, 9]. As a method for calculating the relevance between two nodes in a graph, the RWR is widely used in various domains [4, 6, 9]. In recommender systems, the relevance between the target user node and item nodes could be regarded as the target user X  X  preferences on each item. The existing RWR -based methods have outperformed the rating prediction methods in the top-n recommendation [4, 9].

In this paper, we propose a novel method that provides top-n recommendation by probabilistically determining the target user X  X  preference on items based on a graph. When the relationships between users and items are modeled as a graph, we can infer effectively the implicit preference be-tween users and items through transitivity [4, 6, 9]. Th proposed method infers a target user X  X  preference on each item through Belief Propagation (BP) on a graph.

By employing the BP to a bipartite graph that represents the relationships between users and items, we can calculate the probabilities that each item is preferred by each user and provide a target user with the top-n recommendation that recommends items in the order of his/her preference p robabilities. In order to apply the BP to top-n recommen-dation, graph generating criteria and initial values of the nodes should be finely tuned. In this paper, we discuss how to generate the edges of the graph and determine the node potentials based on the ratings.

We perform top-n recommendation on the MovieLens data and evaluate the accuracy of the proposed method. The ac-curacy is measured by the precision , recall , and mean aver-age precision (MAP) . The results show that the proposed method outperforms the representative item-based method [12] and the RWR -based method [4, 6, 9].
We propose a novel top-n recommendation method that probabilistically determines the target user X  X  preference on items based on a bipartite graph that represents the rela-tionships between users and items. To apply the BP to the top-n recommendation, the graph and its parameters should be finely tuned. In this section, we describe the BP in gen-eral and discuss the way to generate the graph and to define its parameters.

The proposed method runs as follows: 1) modeling the users, the items, and the relationships between them as a bipartite graph with the edge threshold, 2) assigning node potentials based on the target user X  X  ratings on items, 3) defining the propagation matrix, 4) passing messages be-tween nodes on the bipartite graph iteratively for a specific number of times or until the change of the message values between iterations is less than some predefined threshold, 5) calculating the belief of each node (i.e., how much the target user is likely to prefer each item), 6) ranking the items based in order of the belief and determining the list of top-n items. When we want to recommend items to many target users, we repeat the above procedure for every target user.
To infer the state of a node based on the status of its neighboring nodes, the BP is widely used [2, 10, 11]. The information is exchanged between nodes through message passing to infer the state of nodes. The messages sent from one node to another are a vector, called message vector that has possible states as its elements. Each message vector is obtained as Equation 1. m ij ( x c ) denotes the message sent from v i to v j . It means v  X  X  opinion (belief) about v j  X  X  likelihood of being in class x The message from v i to v j is made up with the product of the messages from v i  X  X  neighboring nodes except v j ( N ( i )  X  ij ( x d ,x c ) is the edge potential from the propagation matrix that represents the probability of the v j being in state x when its neighboring node v i is in state x d .  X  i ( x d potential that represents the probability of v i being in state x . If the state of a node is already known, a higher potential value is assigned to the corresponding state. If the state of the node is unknown, the same potential values are assigned to all of the states.

Figure 1 shows the computation of node v i  X  X  belief about the likelihood of node v j is in the x c state, assuming there are two possible node states, x c and x d . Figure 1: The computation of node v i 's belief about the
When the message passing is done on every state, we nor-malize the sum of every state of each message vector to 1 in order to avoid numerical underflow. The message pass-ing can be performed iteratively on every edge either for a specific number of times or until the change of the mes-sage values between iterations is less than some predefined threshold.

After the message passing, belief scores that the v i  X  X  prob-ability of being in class x c are determined by Equation 2. The belief score vectors have the possible states as the ele-ments, similar to the message vector. k is the normalizing factor for making the sum of the belief scores of a node to be 1 . The belief scores represent the possibility of the node being in the corresponding state.
When we apply the BP to the recommender system, the message from v i to v j can be regarded as the v i  X  X  belief that the likelihood of v j is liked by the target user, and we can infer the likelihood that the target user prefers each item from the messages each node has received.
We create a bipartite graph from the users X  preference on items. We model both the users and the items as nodes and the users X  ratings on items as edges. The states of a node can be either like or dislike states 1 . In order to reflect the users X  preference more accurately, we assume the user prefers the item only when the rating is higher than a threshold. That is, we create an edge only when the rating is higher than the threshold (instead of creating an edge whenever the user rates the item). How to determine the threshold is investigated in the following section. Figure 2 depicts the graph generation process.
For the personalized recommendation, we assign the node potentials to the item nodes based on the target users X  rat-ings on the items. The edge threshold in the graph genera-tion step is related to the all users X  preference, not to the tar-get user. In order to generate the list of recommended items personalized to the target user, his/her preference should be reflected in the graph. By assigning the node potentials to nodes based on the target user X  X  ratings and using them in the message passing process, the target user X  X  individual preference can be reflected. There are two node potentials, like and dislike . Each node potential is allocated as a value between 0.1 and 0.9 . The sum of node potentials of a node should be 1 . Because of matrix multiplication operations during the belief propagation process, the sum of the node potentials should not be 0 or 1 2 . The higher the rating by the target user is, the higher the like node potential is as-signed to. The values of node potentials are determined by Equation 3.

L ij = 0 . 5 + z-score ( i,j )
L ij and D ij indicate the like node potential and the dis-like node potential, respectively. The z-score ( i,j ) means the normalized value of the target user v i  X  X  rating on item v using the z-score , more accurate relative preference that re-flecting the tendency of user X  X  ratings can be acquired. The constant p is a normalizing factor. In the following section, we experimentally show the differences in the accuracy ac-cording to the p values. If the node potential value acquired is lower than 0.1 or higher than 0.9 , we replace it with 0.1 or 0.9 . The node potentials of item nodes not rated by the target user and all of user nodes are initialized to be unbi-ased, i.e., like node potential and dislike node potential are both 0.5 .
Lastly, we define the propagation matrix related to the edge potential,  X  ij ( x d ,x c ) in Equation 1. Table 1 is an ex-ample of the propagation matrix, while the possible states are defined as like and dislike . In  X  ij ( x d ,x c ), x the row and x c does the column of the matrix. It means the probability that the target user is likely to prefer the neighboring nodes of a node v i being in like state,  X  ij is 0.5 +  X  . Generally, in order to avoid numerical underflow,  X  is defined to be a very small number.

The data used in this section is the MovieLens data that contains 943 users, 1,682 movies, and 100,000 ratings by users. The ratings are given as an integer between 1 and 5 . We split the data into a training set and a test set in the proportion of 8 to 2 , and we performed a 5 -fold cross validation on them. The answers in the test set are items rated as 5 by the target user. For alpha in the propagation matrix, we use 0.0001 .
We analyze the accuracy changes according to the edge threshold. There are six criteria when setting the threshold: 1, 2, 3, 4, 5 , and the user X  X  rating average. In this set of experiments, we use parameter p in the node potential calculation as 4 .
 Table 2: The accuracy according to the edge threshold
T able 2 shows the precision, recall , and mean average pre-cision (MAP) of different threshold value settings. As shown in Table 2, the accuracy is the highest when the threshold value is set to be the user X  X  average rating. This means that each user has own rating tendency, so one should apply dif-ferent edge thresholds for different users in order to reflect the user X  X  preference more accurately. In the following ex-periments, we use the average rating as the edge threshold.
We analyze the accuracy of the top-n recommendation of our proposed method according to the node potentials. The node potentials capture the target user X  X  preference. We assign a high like node potential value to the item nodes rated by the target user, because the target user X  X  ratings reflect his/her preference. The sum of a node X  X  node poten-tials should be 1 , so we cannot use the original rating that ranges from 1 to 5 . Thus, a transformation from the origi-nal ratings to the node potential value should be made. We compared two transformation methods: transforming the original rating to a real number between 0 and 1 or calcu-lating the node potential value using Equation 3 in Section 2.3.

Table 3 is the summary of the experiments. Direct match-ing represents the case where the original ratings between 1, 2, 3, 4 and 5 are transformed to 0.1, 0.3, 0.5, 0.7 , and 0.9 , respectively. p = 1 to p = 5 indicate the case where the original rating is transformed by Equation 3, and each number represents the value of parameter p .
 As shown in Table 3, there are no significant differences. The most accurate results are obtained from the cases where we apply Equation 3 and set p to 3 or 4 . The result indicates that the normalization of the z-score of the ratings with parameter p obtains more accurate range of node potential than the use the z-score of the ratings only. The optimal T able 3: The accuracy according to the node prior n ormalizing parameter p may vary according to application domains.
We evaluated our proposed method by comparing with existing recommendation methods. Among existing recom-mendation methods, a traditional item-based method 3 , which was originally proposed for rating prediction rather than top-n recommendation, and an RWR -based method were selected for comparisons [4, 6, 9, 12]. For the item-based method, we set the parameter k as 30 , the best found in the existing study for the rating prediction performed on the same MovieLens data [12]. For the RWR , we performed the RWR -based top-n recommendation on a graph where the ratings higher than the user X  X  average rating are regarded as edges. Elements of the restart vector (personalization vec-tor) were set as 1 for the target user and 0 for the others. The restart probability was also set as 0.15 . Table 4 shows precision, recall and MAP of each method.
 Table 4: Comparison of the BP with existing methods Item-based 0.0230 0.0223 0.0254 0.0469 0.0296 
The R WR -based method shows the accuracy higher than the item-based method. This is because the RWR -based method employs iterative random walks through which it in-fers implicit relationships among nodes. As a result, it can infer implicit relationships more effectively than the item-based method [9]. The proposed method outperforms the RWR -based method because the RWR considers homophily of nodes only, but the BP considers both homophily and heterophily [8]. The RWR computes the relevance (similar-ity) between two connected nodes, which can be regarded as the computation of the likelihood that a node connected to a node preferred by a target user is also preferred by the target user. On the other hand, the BP computes both the likelihood that the target user prefers a node and the likelihood that she does not prefer the node. That is, the following all four cases are considered by the BP: 1) the likelihood that the target user prefers a node neighboring the node preferred by herself, 2) the likelihood that the tar-get user prefers a node neighboring the node not preferred by her, 3) the likelihood that the target user does not pre-fer a node neighboring the node preferred by her, and 4) the likelihood that the target user does not prefer a node neighboring the node not preferred by her. We believe that,
W e omit the result of the user-based method here because it was shown to be worse than that of the item-based method. because of this difference, the proposed method outperforms the RWR -based method.
We have proposed a novel method that provides the top-n recommendation by probabilistically determining the target user X  X  preference on items. Compared with the RWR -based method, the proposed method is shown to be up to about 40% more accurate in the precision . We expect that more satisfactory recommendation is provided through the pro-posed method. Furthermore, the application of the BP to the personalized recommendation, suggests a new direction for solving personalization problems in various domains.
This research was supported by (1) the MKE (The Min-istry of Knowledge Economy), Korea, under the Convergence-ITRC (Convergence Information Technology Research Cen-ter) support program (NIPA-2012-H0401-12-1001) supervised by the NIPA (National IT Industry Promotion Agency), (2) the MKE, Korea and Samsung Electronics Co., Ltd., un-der IT/SW Creative research program (NIPA-2010-C1810-1003-0007) supervised by the NIPA, and (3) the National Research Foundation of Korea (NRF) grant funded by the Korea government (MEST) (NRF-2011-330-B00076). [1] G. Adomavicius and A. Tuzhilin,  X  X oward the Next [2] D. Chau, S. Pandit, and C. Faloutsos,  X  X etecting [3] M. Dias et al.,  X  X he Value of Personalised [4] F. Fouss et al.,  X  X andom-walk Computation of [5] A. Gunawardana and G. Shani,  X  X  Survey of [6] I. Konstas, V. Stathopoulos, and J. M. Jose,  X  X n [7] Y. Koren,  X  X ollaborative Filtering with Temporal [8] D. Koutra et al.,  X  X nifying Guilt-By-Association [9] N. Liu and Q. Yang,  X  X igenRank: A Ranking-oriented [10] M. McGlohon et al.,  X  X NARE: A Link Analytic [11] S. Pandit et al.,  X  X etProbe: A Fast and Scalable [12] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl,
