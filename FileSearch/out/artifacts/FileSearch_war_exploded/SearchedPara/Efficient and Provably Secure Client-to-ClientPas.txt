 To communicate securely over an insecu re public network it is essential that secret keys are exchanged securely. Passw ord-authenticated key exchange proto-col allows two or more parties holding a same memorable password to agree on a common secret value (a session key) over an insecure open network. Most password-authenticated key exchange schemes in the literature have focused on a same password -authentication (SPWA) model which provides password-authenticated key exchange using a sha red common password between a client and a server [2,3,4,5,11,19].

Several schemes have been presented t o provide password-authenticated key exchange between two clients (or n clients) with their different passwords in the single-server setting where two clients (or n clients) are in the same realm [14, 15, 17, 1, 7, 8, 13]. In this different password-authentication (DPWA) model two clients can generate a common session key with their distinct passwords by the help of a server. However it is unrealistic that two clients trying to communicate each other are registered in the same server. In real distributed applications, an authentication setting that two clients are registered in different servers is arisen more often. For example, from a user X  X  point of view, in a mobile computing environment, a secure end-to-end channel between one mobile user in cell A and another user in cell A or cell B may be a primary concern. Additionally, the end-to-end security service minimizes the int erferences from the operator controlled network components. 1.1 Related Works and Our Contribution Byun et al . first proposed C2C-PAKE protocol which was a secure Client-to-Client Password-Authenticated Key Agreement (C2C-PAKE) in the cross-realm setting where two clients were in two different realms and hence there existed two servers involved [6]. They have heur istically proved that the schemes were secure against all attacks considered. Unfortunately, the scheme was found to be flawed. Chen first pointed out that in the scheme with the cross-realm setting one malicious server can mount a dictionary attack to obtain the password of client who belongs to the other realm [10]. In [18], Wang et al . showed three dictionary attacks on the same protocol, and Kim et al . pointed out that the protocol was susceptible to Dening-Sacco attack in [12]. Kim et al . also proposed an improved C2C-PAKE protocol. However, very r ecently, Phan and Goi suggested unknown key share attacks on the improved C2C-PAKE protocol in [16]. Up until now, several countermeasures to protect the attacks on C2C-PAKE protocol have been presented in [10, 18, 12, 16], but without any formal treatment, which may lead to another attack-and-remedy procedures in near future.
 In this paper we propose an efficient and provably secure C2C-PAKE (called EC2C-PAKE) scheme which improves efficiency in both communicational and computational aspects and formally prove the security of the proposed one. We prove that EC2C-PAKE protocol is secure under computational assumptions of the decisional Diffie-Hellman ( DDH ) and hash decisional Diffie-Hellman ( HDDH ) problems, secure cryp tographic primitives of MAC (message authen-tication code), and secure symmetric encryption.

Furthermore, EC2C-PAKE is more efficient than C2C-PAKE protocol, while preserving session key security and forwa rd secrecy. We summarize the efficiency of two protocols below. Although the percentage of saving in aspects of T-R is relatively low, only one decrease in the number of rounds is very notable since it is well recognized that cost for communication is a major portion of total cost. In addition, one of the important factors to evaluate efficiency of a protocol is the number of modular exponentiations since it is the most power-consuming operation. We reduce the number of exponentiation by almost half of C2C-PAKE scheme.
 * T-R : The number of total rounds, Exp : The number of total exponentiations, Enc : The number of total encryptions, FS : Forward Secrecy ( means that theschemeprovides FS ), R-R : The number of rounds between realms, PS : () : The number when the protocol is augmented with mutual authentication In this section we design an efficient C2C-PAKE protocol. In the protocol, we use two encryption functions; One is an ideal cipher E which is a random one-to-one function such that E K : M  X  C ,where | M | = | C | and the other function is a secure symmetric encryption E . For simplicity, we assume that Clients = { Alice, Bob } , Server = { KDC A ,KDC B } ,whereKDC A and Alice are in Realm AandKDC B and Bob are in Realm B. 2.1 Design Principles Security proof of C2C-PAKE protocol is based on heuristic approach. Byun et al . in [6] defined several active attacks and security property in DPWA such as Denning-Sacco attack, dictionary a ttack and perfect forward secrecy. They also showed that C2C-PAKE protocol is secure against these active attacks. These attacks may be regarded as known key attacks because the adversary goals defined are to break the security of the given protocol using the known keys. Concretely, the authors assumed that an adversary can get long-term passwords, session keys and ephemeral Diffie-Hellman keys ( R and R ). Passwords may be revealed inadvertently during a conversa tion or by malicious insider adversaries. The previously used session keys also may be lost for various reasons such as hacking or careless clients. In a realisti c view, therefore, the assumption that the adversary may obtain passwords or session keys are reasonable. However, the assumption that the adversary may obtain ephemeral Diffie-Hellman keys is not realistic. If we assume that any a dversary can obtain ephemeral keys which may be generated instantly but not saved, then we can assume that the adversary is also able to capture every ephemeral state values. This results in a total breakdown of the security of C2C-PAKE. Up until now, there is no scheme secure against the adversary which steals ephemeral states. So we assume that realistic active adversaries can not ge t ephemeral states but can get session keys and passwords. Actually, by giving a realistic restriction on adversary ability, we design EC2C-PAKE protocol while preserving the security of the original one. 2.2 Protocol Description Protocol Setup. Preliminaries for a protocol run are as follows. 1. g , p and q are global public parameters shared by all protocol participants. 2. Alice ( Bob ) shares her password pwa ( pwb ) with key distribution center Notation. R (= H 1 ( g xy )) and R (= H 2 ( g x y )) are ephemeral Diffie-Hellman keys agreed between Alice and KDC A , Bob and KDC B , respectively. where ID A and ID B are identifiers of Alice and Bob , respectively. Ticket B is E
K ( k, ID A ,ID B ,L )where k is a common key distributed for Alice and Bob , and L is a lifetime of Ticket B . We assume that key K is pre-distributed between KDC A and KDC B by using two party key exchange protocol. MAC k ( m )de-notes an output of MAC applied key k foramessage m . A notation || means that two adjacent messages are concatenated.
 Protocol Description. The description is as follows. 1. Alice chooses a random value x from Z  X  p randomly, computes and sends 2. KDC A obtains g x by decrypting E x ,chooses y  X  Z  X  p randomly, and computes 3. Alice generates a random value a  X  Z  X  p and makes E a (= g a || MAC k ( g a )). 4. Bob chooses x  X  Z  X  p randomly and computes E x (= E pwb ( g x )). Then he 5. KDC B obtains k , L ,and ID A by decrypting Ticket B by using its key K . 6. Bob decrypts E y and computes R .Then Bob decrypts E R to get the key k . In this section we prove that EC2C-PAKE protocol achieves the DPWA security conditions under the DDH and HDDH assumptions, and secure MAC and symmetric encryption primitives. For formal definitions of DPWA security and computational assumptions, refer to the full paper [9].
 Theorem 2.1. Let A be a probabilistic polynomial time adversary against DPWA security of the proposed EC2C-PAKE protocol P within a time bound T and mak-ing q s send queries, q e execute queries, q E encryption queries for ideal cipher E , q e encryption queries for symmetric encryption E, q t tag queries, and q v verifi-cation queries. Then where |D| is the size of the password space, p is prime order of a cyclic group  X 
T are computational time for an exponentiation, ideal encryption E , message authentication code, respectively.
 In the proof above, we do not consider forward secrecy and malicious server attack [10] for simplicity. Next we show that EC2C-PAKE protocol satisfies the above two security concerns.
 Theorem 2.2. The proposed EC2C-PAKE protocol P provides a forward secrecy under the computational Diffie-Hellman assumption.
 Theorem 2.3. The proposed EC2C-PAKE protocol P is secure against malicious server attack under the computational Diffie-Hellman assumption.
 Due to the limited space, the full proof of the above theorems will be presented in the full paper [9]. 3.1 Adding Mutual Authentication In this paper, we do not explicitly consider the security of mutual authentication. But, mutual authentication in our protocol can be easily achieved by using an ad-ditional authenticator structure described in [2]. Th e authenticator is computed as the hash of the keying materials and client X  X  ID. We describe only the part stage of EC2C-PAKE. Upon receiving the message, Alice confirms the authen-ticator by using sk and makes H ( sk || 2). Alice sends this back to Bob .Ifthe confirmation processes are successful, then, Alice and Bob generate a common session key sk = H ( sk || 0). In this paper we proposed an efficient C2C-PAKE protocol. The proposed EC2C-PAKE is the first formally treated and provable secure scheme in the DPWA model. It may be worth to design a generic construction of C2C-PAKA in the cross-realm setting. The protocols can be constructed generically by using 2 party password authenticated key exchange and key distribution protocols and proved to be secure generically as well. In this general construction, we can avoid the random oracle and ideal cipher models by using the existing efficient protocol based on standard assumption.

