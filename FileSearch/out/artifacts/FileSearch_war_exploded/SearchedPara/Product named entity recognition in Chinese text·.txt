 Jun Zhao  X  Feifan Liu Abstract There are many expressive and structural differences between product names and general named entities such as person names, location names and organization names. To date, there has been little research on product named entity recognition (NER), which is crucial and valuable for information extraction in the field of market intelligence. This paper focuses on product NER (PRO NER) in Chinese text. First, we describe our efforts on data annotation, including well-defined specifications, data analysis and development of a corpus with annotated product named entities. Second, a hierarchical hidden Markov model-based approach to PRO NER is proposed and evaluated. Extensive experiments show that the proposed method outperforms the cascaded maximum entropy model and obtains promising results on the data sets of two different electronic product domains (digital and cell phone).
 Keywords Information extraction  X  Product named entity recognition  X  Hierarchical hidden Markov model 1 Introduction Named entity recognition (NER) plays an important role in information extraction (IE) and many other applications. Previous research on NER falls mainly into two categories. One is general NER aiming to recognize person (PER), location (LOC), organization (ORG), time (TIM) and numeral (NUM) expressions mostly in the news domain, and the other is to identify some domain-specific proper names such as genes and proteins in biology. However, to our knowledge, there is little prior research on product NER (PRO NER), which is crucial and valuable for IE in the field of market intelligence. There are many expressive and structural differences between a product named entity (PRO NE) and general named entity (NE). 1 The paper focuses on PRO NER in Chinese text. The main contributions are as follows:  X  Establishment of PRO NE annotation specifications and construction of an  X  New research findings on methods of automatic PRO NER in Chinese text : 2 Related work Up to now, not much work has been done on PRO NER. Pierre ( 2002 ) developed an English NER system capable of identifying product names in product reviews. It employed a simple Boolean classifier for identifying product names, which is similar to token matching and is not applicable for PRO NER because of its more flexible and variant expressions. Bick ( 2004 ) recognized NEs including product names based on a constraint-grammar-based parser for Danish. This rule-based approach is highly dependent on the performance of the Danish parser. Niu et al. ( 2003 ) presented a bootstrapping approach for English NER using two successive learners [parsing-based decision list and hidden Markov model (HMM)], which produced promising experimental results (F-measure: 69.8%) on PRO NEs. The main advantage of this method is that manual annotation of a sizable training corpus can be avoided, but it suffers from two problems: it is difficult to find sufficient concept-based seeds for bootstrapping; and it is highly dependent on parser performance.
 Research on PRO NER is still in an early stage, especially in Chinese free texts. There is neither a systematic specification for PRO NE tagging nor a manually tagged corpus for studying automatic PRO NER. However, a considerable amount of work has been done in the last decade on the general NER task and biological NER task. The typical machine learning based approaches for English NER include transform-based learning (Aberdeen et al. 1995 ), the HMM (Bikel et al. 1997 ; Collier et al. 2000 ), the ME model (Borthwick 1999 ), support vector machine learning (Yi et al. 2004 ), the decision tree model (Sekine et al. 1998 ), etc. For research on Chinese NER, the prevailing methods are also machine learning-based approaches, combined with knowledge bases or heuristic rules. In short, in the field of NER, researchers have tried to use hybrid statistical models that can combine different feature types at different levels and integrate some heuristics and external knowledge bases as well.

In this paper, we first propose a systematic specification for PRO NE tagging, by which a sizable corpus is built with manually annotated PRO NEs. Second, we present a hybrid approach based on the HHMM for Chinese PRO NER and conduct extensive experiments for evaluation. 3 The construction of a PRO NE tagged corpus In this section, we describe our efforts on data annotation, including well-defined specifications, data analysis, and development of a corpus with annotated product named entities. 3.1 The definition It is difficult to precisely define what kinds of expressions should be considered as PRO NEs. Generally, a PRO NE contains a twofold meaning. On one hand, it must be an expression referring to a determinate product category. On the other hand, it must indicate  X  X amed X  information.

Based on the analysis of large-scale real text, we found that PRO NEs have the following characteristics. First, they are often composed of product brands and product types, which contain important and discriminative PRO NE information and distinguish this kind of NE from others. We call them the basic elements of PRO NE . Second, in some cases, there are embedded expressions describing the attributes and categories of products. We call them the complementary elements of PRO NE . For example, in the PRO NE  X   X   X   X   X  (Motorola) V8088  X   X  (clamshell)  X   X  (cell phone) X ,  X   X   X   X   X  (Motorola) X  is a product brand,  X  X 8088 X  is a product type,  X   X   X  (cell phone) X  is the category word of a kind of products, and  X   X   X  (clamshell) X  is a word describing an attribute of this kind of products. In real contexts, however, some of these elements can often be omitted when referring to a PRO NE.

From the above observation, we believe that a nominal expression must satisfy the following prerequisite in order to be considered as a PRO NE in text. It contains either a brand name or a type name, or both of them.
 For example,  X   X   X   X  (AIGO)  X   X  (USB Flash Drive) X  is a PRO NE, while  X   X   X  (digital)  X   X  (camera)  X   X  (product) X  is not since  X  X igital camera product X  has no named information;  X  X asyShare  X   X  (series)  X   X  (digital)  X   X  (camera) X  is a PRO NE, while  X   X   X   X  (intelligent)  X   X  (cell phone) X  is not since  X  X asyShare X  is a specific series of Kodak brand, while  X  X ntelligent X  is a common attribute of many brands of cell phones. 3.2 The tagging set The tagging set of PRO NE includes three tags, namely Brand Name, Product Type and Product Name, which are defined as follows:
Brand Name ( BRA ) refers to the proper name of a product trademark, such as  X   X   X  (BenQ) X  in Example 1.

Product Type ( TYP ) indicates the version or series information of a product, which can consist of numbers, Latin letters, or other symbols such as  X + X  and  X   X   X . In Example 2,  X  Pro90IS  X  is a TYP.
 Product Name (PRO) indicates a PRO NE in text, which can be composed of the
Brand Name, the Product Type, the category word of a PRO NE, and expressions describing the attributes of a product. Not all of them are absolutely necessary. In
Example 2,  X  Canon 334  X  (3.34 million)  X   X  (pixels)  X   X  (digital)  X   X  (camera) Pro90IS  X  is a PRO.
 Among them, BRA and TYP are often nested inside PRO, such as in Example 2. Example 1  X   X  (BenQ)/BRA  X  (of)  X   X   X   X   X  (market share)  X   X  (steadily) Example 2  X   X  (The company)  X   X  (will soon)  X   X  (release) [Canon/BRA 334 3.3 The specification of tagging PRO NEs Based on the definition of three types of PRO NEs and their characteristics, we established several PRO NE annotation specifications. 3.3.1 Main principles Some principles should be followed in the process of manual tagging of PRO NEs.
First, the tagged PRO NEs should have determinate and relatively self-contained meaning. In other words, the tagged unit should refer to a determinate PRO NE. As in one of the aforementioned examples, we should tag  X  X asyShare  X   X  (series)  X   X  (digital)  X   X  (camera) X  as a PRO NE even though it has no brand elements, because  X  X asyShare X  carries distinguishable information of the Kodak brand.

Second, the annotation of a PRO NE cannot destroy the sound syntactic structure of the sentence. For example, the syntactic tree of Example 3 (which is created based on Chinese grammar) is shown in Fig. 1 , where  X   X  X  (design)  X   X  (model) X  and  X   X  (be) 6660/TYP X  create a VP, which is combined with  X   X  (a particle) X  to create a DetP, which is further combined with  X   X   X   X  (Nokia)/BRA  X   X  (cell phone)  X   X  (new product) X  to create an NP. If [  X   X  (model)  X  (be) 6660/TYP  X  (a particle)  X   X   X  (Nokia)/BRA  X   X  (cell phone)  X   X  (new product)] is tagged as a PRO NE only based on the fact that it has already covered the basic elements discussed above, then the syntactic structure of the sentence will be destroyed. Therefore, in this case, [  X  X  (design)  X   X  (model)  X  (be) 6660/TYP  X  (a particle)  X   X   X  (Nokia)/BRA  X   X  (cell phone)  X   X  (new product)] should be tagged as a PRO NE entirely. We have no parsing reference for each sentence, but with this principle the native annotators still can effectively avoid reducing the readability of the sentence structure, which also leads to more consistent annotation results. Example 3  X   X  (Yesterday), (,)  X   X   X  (a website)  X   X   X  (expose) [  X  X  3.3.2 The specification Based on the above principles, in order to improve the consistency of the manual annotation process, we constitute more detailed specifications. Note that in example sentences hereafter, the tag just after the slash is either the POS tag or the PRO NE tag for the word (or punctuation) just before the slash. The POS tag set is listed in the Appendix and the PRO NE tag consists of BRA, TYP and PRO as defined in Sect. 3.2. 3.3.2.1 The tagging of quotation marks attached to a PRO NE In a PRO NE, quotation marks are used to set off alias names, series names or brand names. They can be tagged as follows:  X  Quotation marks which are used to set off alias names or series names are tagged Example 4  X  (This)/r  X   X  (is)/v [ X /w  X  (blue)/a  X   X  (eidolon)/n  X /w]/PRO  X   X  Quotation marks which are used to set off brand names are tagged inside the Example 5  X   X  (equipped with)/v  X  (an auxiliary word)/u [ X /w  X   X   X   X  3.3.2.2 The tagging of a Chinese brand name and its English translation equivalent Sometimes, a PRO NE contains both a Chinese brand name and its English translation equivalent. In such cases, they can be tagged as follows:  X  When both a Chinese brand name and its English translation equivalent appear Example 6 [  X   X  BenQ/BRA M770GT/TYP  X   X  (cell phone)/n]/PRO  X  When both a Chinese brand name and its English translation equivalent occur Example 7 [DOGGY- X   X  /BRA MP3/nx  X   X   X  (personal stereo)/n]/PRO 3.3.2.3 The tagging of expressions like  X ...  X   X  (series) X  and  X ...  X  (type) X  When expressions like  X ...  X   X  (series) X  and  X ...  X  (type) X  are contained in a PRO NE, they can be viewed as the extension of TYP and are included inside PRO. Example 8 [  X   X   X   X  (Motorola)/BRA A  X   X  (Series)]/PRO 3.3.2.4 The tagging of coordinate structures and elliptical structures Sometimes, coordinate structures and elliptical structures appear inside a PRO NE. In such cases, they can be tagged as follows:  X  If two expressions each describing a PRO NE are connected by a conjunction, Example 9  X   X  (Samsung)/BRA  X  (of)/u [X100/TYP]/PRO  X  (and)/c [X600/
In the above example, X100 and X600 are two kinds of Samsung products, and they are connected by the conjunction  X  X nd X . We tag them separately as two PRO NEs. Likewise, C60 and MC60 are tagged separately as well.  X  In some cases, some common components (usually the basic elements) of the Example 10 [EOSDCS3/TYP  X  (type)/k]/PRO  X  /w [EOS X  X N/TYP  X  (type)/k
In Example 10,  X  X OSDCS3  X  (type)  X  EOS X  X N  X  (type)  X   X  (camera) X  is a coordinate structure, where  X  X OSDCS3  X  (type) X  is an elliptical structure. We tag two separate PRO as  X  X EOSDCS3/TYP  X  (type)/k]/PRO X  and  X  X EOS X  X N/TYP  X  (type)/k  X   X  (camera)/n]/PRO X  and exclude the  X   X   X  in the PRO NE annotation. 3.3.2.5 Annotating to the maximum length of possible extension When tagging PRO NEs, we follow the rule of annotating to the maximum length of possible extension.  X  The basic elements of a PRO NE, the descriptive modifiers embedded inside Example 11 [  X   X  (Kodak)/BRA DCS520/TYP  X   X  (Digital)/n  X  X  X  (SLR)/b]/ Example 12 [  X   X  (super-thin)/b  X   X   X  (titanium)/n  X   X  (cell phone)/n BenQ/  X  For two appositives, if there is no conjunctive symbol between them, then they Example 13  X   X  (Bird)/BRA  X  (of)/u  X  (two)/NUM  X  (a quantifier)/q  X   X  The  X  X aximum length X  rule must comply with the main principle of maintaining Example 14 Nikon/ORG  X   X  (announce)/v 400  X  (SD400)/NUM  X   X  (and)/c 3.3.2.6 TYP Annotation Product Type (TYP) is usually composed of numbers, letters, and other symbols. If they are expressions (usually in English) about the version or series information of a product, then they can be combined and tagged as a single TYP. However, Chinese characters are not considered to be a TYP, nor subpart of TYP, although some of them do contain version or series information. For instance, in  X 2005  X   X   X   X  (Happy New Year)  X  (version)  X   X  (cell phone) X ,  X   X   X   X   X  (Happy New Year)  X  (version) X  is not considered to be a TYP. 3.3.2.7 BRA Annotation In some cases, it is very difficult to determine whether an expression is an organization name or a brand name. In such cases, we tag the expression as an organization.
 Example 15  X  (This)/r  X  (is)/v  X   X  (because)/p  X   X  (Samsung)/ORG  X   X   X  In Example 15,  X   X   X  (Samsung) X  may refer to Samsung Corporation or the Samsung brand, and thus we tag it as an organization. In comparison, in Example 11,  X   X   X  (Kodak) X  refers to the Kodak brand because it co-occurs with  X  X CS520  X   X  (Digital)  X  X  X  (SLR) X , so we tag it as BRA. 3.4 Construction of the CASIA_PRO corpus We collected web pages related to product information, such as product releases, market trends, and product evaluations. These web pages were converted into plain text formats and all of them are non-structured free texts. These text files constitute the CASIA_PRO corpus. Currently, the size of CASIA_PRO1.2 is about 1,000,000 Chinese characters, including more than 1,500 web page texts in the fields of telecommunications and electronic digital equipment.

The corpus was processed pipeline through word segmentation, POS tagging, and general NER tagging (Wu et al. 2003 ). Then, the NE tags were proofread manually. 3.4.1 The manual annotation process of PRO NEs Three students majoring in linguistics manually annotated PRO NEs in the corpus. The annotation process consists of three phases: pre-annotation, consistency testing and large-scale annotation.  X  Pre-annotation: first of all, the three annotators studied the draft of the  X  Consistency testing: after the pre-annotation, we conducted consistency testing  X  Large-scale annotation: after we finalized the specification, the three annotators 3.4.2 Consistency testing: Kappa coefficient To measure the annotation consistency, we conducted consistency testing experi-ments on a sample of the corpus (5% of the CASIA_PRO corpus which was annotated by the three annotators individually) and modified the annotation specification based measure the annotation consistency, which was computed as: where P ( A ) is the proportion of times that the annotators agree and P ( E ) is the proportion of times that we would expect them to agree by chance; n is the total second, and third annotator put into the i th category, respectively; m is the number
Our consistency testing experiments on the sample corpus achieved a Kappa coefficient of 0.81, which demonstrates that the consistency of PRO NE annotation is relatively satisfactory. 3.4.3 Some statistics of the PRO NE annotated corpus The NE statistics of the CASIA_PRO1.2 corpus are shown in Table 1 . In total, there are 12,432 PRO, 5,047 BRA, 10,606 TYP, 424 PER, 1,733 LOC, and 4,798 ORG in the corpus. 4 Automatic PRO NER PRO NER involves the identification of product proper names in unconstrained text and their classification into different kinds of PRO NEs, namely PRO, TYP, and BRA in this paper.
 4.1 The difficulties of automatic PRO NER In this section, we explore some particular characteristics of various PRO NEs to attain a clear understanding of the challenges in recognizing them. In comparison with general NEs, PRO NEs have their own special characteristics.  X  For general NEs, there are some cues indicating their occurrence in the text. For  X  There are many category ambiguities in PRO NER.  X  PRO NEs have more flexible forms. The same entity can be expressed in several  X  PRO NEs frequently have nested structures. More efforts must be made to 4.2 Hybrid approach for PRO NE recognition Based on observations from the real data, there are three features we can use for this task. First, the components inside PRO NEs have certain characteristics. For example, many PRO NEs have an alphanumeric string inside, which denotes type or series information. Second, various contextual information can be very helpful in boundary detection and the classification process. Third, related knowledge bases, such as brand lists, can also provide helpful information for PRO NER. We try to take full advantage of these features in our strategy, which can be performed in two steps.  X  First, the triggering step for detecting potential PRO NE candidates is very critical.  X  After triggering candidates, we try to make use of contextual information to 4.2.1 Overall workflow of PRO NER The workflow of PRO NER is illustrated in Fig. 2 , which includes the following three steps:  X  Preprocessing : Word segmentation, POS tagging, and general NER are primarily  X  Generating PRO NE candidates : PRO NE as well as ORG (single-brand-word  X  Disambiguating candidates : The boundary ambiguity and classification ambi-4.2.2 HHMM for PRO NER application The HHMM, a recursive hierarchical generalization of the HMM, is applied to address the PRO NER problem due to its ability of modeling the multiplicity of length scales and recursive nature of the sequences (Fine et al. 1998 ). By HHMM, PRO NER can be formulated as a tagging problem using Viterbi algorithm. Unlike the traditional HMM in POS tagging, the topology of the HHMM is not fixed and some states can be a similar stochastic model on themselves, which are called internal states, in contrast to production states which emit only observations.
For the HHMM-based PRO NER, the input sequence is a Chinese sentence which has been word-segmented, POS tagged, and general NE tagged. The sentence can be speech (or general NE tag), respectively, and n is the number of words in the sentence. The POS tag set is the combination of the POS tag set from Peking University (PKU-POS shown in the Appendix) (Yu et al. 2003 ) and general NE (GNE) categories including PER, LOC, ORG, TIM, and NUM. We construct the HHMM for PRO NER as follows:  X  the state set { S }, which consists of {GNE}, {BRA, PRO, TYP}, and {V}, where  X  the observation set { O }, which is equal to { V }.
 In the above model, only PROs are internal states which may activate other production states such as BRA and TYP resulting in recursive HMM. Consistent with S. Fine X  X  the PRO NER problem is to find the most-likely state activation sequence Q *, a multi-scale list of states, based on the dynamic topology of the HMM given an observation
From the root node of the HHMM, the activation flows to all other nodes at different k th level as an example (activated by the m th state at the k  X  1th level). production states in the k th level; w q k corresponding to the state q j k . For p  X  X  w q k estimations:  X  If q k j 2ff GEN g ; f V gg ; then we assume that the results of pre-processing are  X  If q j k = BRA , for simplification, we assign p  X  X  w q k  X  If q j k = TYP , TCC defined in Table 2 are applied, i.e., the words associated with  X  If q j k = PRO , because PRO is an internal state, production states in the ( k+ 1)th Figure 3 uses a simple example to illustrate the process of state transition of the HHMM in the application in PRO NER. In the example, a tree-layer HHMM is used. The parameters in the above equations are estimated from the training set based on maximum likelihood estimation, where the parameters are smoothed using the deletion interpolation approach proposed by Jelinek and Mercer ( 1980 ). 4.2.3 Integration of two HHMM instances In Sect. 4.2.2, we have implemented a simple HHMM for PRO NER, which we call HHMM-1. Note that in HHMM-1, we exploit the contextual features only at levels of word forms and semantic categories (i.e., general NE types). In order to investigate the effect of POS information for PRO NER, we construct another HHMM (HHMM-2) based on POS tag information. After that, we hope to exploit multi-levels of contextual features for PRO NER by integrating HHMM-1 and HHMM-2.

The difference between HHMM-2 and HHMM-1 is the state set S II and e., O II = {POS}. Accordingly, S II ={{ POS }, { GNE }, BRA, TYP, PRO }, among which PRO is an internal state. In HHMM-2, PRO NER is formulated as follows.
The description and computation of HHMM-2 is similar to HHMM-1. Both models make use of the semantic classification information from general NE tags, and word form features make HHMM-1 more discriminative, while POS features lead to the robustness of HHMM-2. Intuitively, the integration of these two models may be helpful for improving the performance of PRO NER by balancing robustness and discrimination, as Eq. 11 indicates: where  X  is a tuning parameter for adjusting the weight of two models. Instead of its proper form, we often use logarithmic form for convenience.  X  Q  X  X  argmax
Note that instead of trying to combining the word forms and POS features into one sophisticated HHMM, we just integrate the two models in a very simple and effective way, which enables us to investigate the integrating influence on perfor-mance and explore different roles of those two feature types separately as well. In addition, the HHMM is a generative model and it is also not straightforward to create one HHMM which can combine different types of observation features as the discriminative model does. One possible way to do this is to combine the two types of features into one compound feature such as  X  X ord + POS X  for each word, whereby it is not feasible to evaluate the two feature types separately. Another problem with that is more serious data sparseness resulting from features with more refined granularity. 5 Experiments and analysis We conducted extensive experiments to see whether the proposed method was suitable for Chinese PRO NER. The data set, evaluation metric, experimental results and analysis are presented in this section. 5.1 Data set preparation The training data and testing data are selected from CASIA-PRO1.2, which was introduced in Sect. 3.4. We randomly select 140 texts (digital 70, cell phone 70) as an open test set (OpenTestSet), the rest as a training set (TrainingSet), from which 160 texts are extracted as a closed test set (ClosedTestSet). The NE statistics in two test sets are presented in Table 3 . We can see that, there are 1800 PRO, 803 BRA, 1364 TYP, 39 PER, 207 LOC, and 614 ORG in the open test set, and there are 1,553 PRO, 513 BRA, 1,296 TYP, 55 PER, 248 LOC, and 619 ORG in the closed test set. 5.2 Evaluation metric Due to the characteristics of variant forms in PRO NEs, a soft evaluation method is applied in our experiments to make the evaluation more reasonable. The main idea is that we score recognized NEs from three aspects: detection, classification, and boundary.  X  NEs which are detected, classified correctly, and bounded correctly are scored  X  NEs which are detected and classified correctly, but have boundary errors, Traditional metrics of precision, recall and F-measure are employed in our evaluations using the following formulae: 5.3 Experimental results and analysis 5.3.1 Evaluation on the influence of  X  in the integrated model In the integrated model denoted as Eq. 12, the  X  value reflects the different contribution of two individual models to the overall system performance. The larger the  X  value, the greater the contribution made by HHMM-2. Figure 4-6 illustrate the varying curves of recognition performance with the  X  value on PRO, TYP, BRA, respectively.
 Note that if  X  equals 1, then two models are integrated with equivalent weight. We can see that as  X  goes up, the F-measures of PRO and TYP first increase and then begin to decrease slightly after a period of flat growth. It can be explained that HHMM-2 mainly exploits POS and general NE features which can relieve the sparseness problem to some extent, which is more serious in HHMM-1 due to the lower level of contextual information such as word form. However, as  X  becomes larger, the problem of imprecise modeling in HHMM-2 becomes more salient and begins to show a side effect in the integrated model. Thus the performance can be improved at the early stage of  X  and finally declines. In contrast, the influence of  X  on BRA is negligible because its candidates are triggered by a relatively reliable knowledge base and its sub-model in the HHMM is assigned a constant as shown in Eq. 8.

From the performance curves, we can see that the integrated model can make up for the weakness of HHMM-1 (when  X  = 0) and achieve better performance on the whole. In addition, the performance improves as the  X  value increases, which indicates that HHMM-2 can make more contributions in the integrated model. This is due to the fact that high-level features are more robust since annotated data the above experimental results. 5.3.2 Evaluation on the portability of PRO NER in two domains We evaluate the performance of PRO NER in the corpus of the digital domain and cell phone domain. We use the same PRO NER system, without training the domain specific models separately. Tables 4 and 5 , respectively, show the performance of PRO NER in the two domains (where P , R , and F represent precision, recall, and F-measure, respectively). It is evident that PRO NER has achieved fairly high performance in both domains. This can validate to some extent the portability of our system.

Second, the results also show that our system performs slightly better in the cell phone domain in both the closed test and the open test. This is due to the fact that there are more challenging ambiguities in the digital domain owing to more complex product taxonomy and more flexible variants of PRO NEs.
 5.3.3 The performance comparison between HHMM-1, HHMM-2, integrated Xiong et al. ( 2004 ) used a two-layer ME model in organization name recognition, and obtained satisfactory performance. We use this method in PRO NER. The Maxent Toolkit ( http://homepages.inf.ed.ac.uk/s0450736/maxent_tool-kit.html )is used in our experiment. Due to the nesting structure of the three kinds of PRO NEs, we train two ME models to, respectively, recognize BRA and TYP in the inner layer and PRO in the outer layer. The feature selection of the ME model is consistent with that of the integrated model. The feature types include the word forms and POS tags in the context (window size = 5 words), the NE tag (NE and PRO NE) of the last position, the surface feature of the word (CWF), brand list, etc.

We compared the integrated model and the ME model. Table 6 gives the experimental results, where  X 1 X ,  X 2 X , and  X 1 + 2 X , respectively, denote HHMM-1, HHMM-2 and the integrated model; and  X  P  X ,  X  R  X , and  X  F  X , respectively, denote precision, recall and F-measure. It is evident from Table 6 that all three HHMM models outperform the ME model according to the F-measure score. The reasons may be as follows. The ME model for PRO NER processes the input sequence from left to right. This sequential recognition mode may result in the accumulation of recognition errors. Information on different layers cannot complement each other. On the contrary, the HHMM-based PRO NER approach can integrate the constraint information in each layer and among different layers; as a result, it has a more powerful modeling ability for PRO NEs which have nested structures and variant composition and lengths. In addition, Table 6 shows that HHMM-1 tends to result in low precision and high recall, while HHMM-2 yields high precision and low recall; therefore, neither of them can perform well enough to attain a high F-measure. As discussed in Sect. 5.3.1, it is clear that the integrated model can benefit from combining the two individual models and attain better F-measures for all three kinds of PRO NEs. 6 Conclusions and future work In this paper, we analyze the characteristics of PRO NEs and establish a specification for building PRO NE annotated corpora. Using the corpus we built, studies on automatic PRO NER methods in Chinese text are explored. Experimental evaluation of the proposed HHMM-based method indicates that this is a promising line of research. However, in order to make the HHMM-based method suitable for business-informatics applications, improvements need to be made in several areas.
First, the specifications on PRO NE annotation can be further improved to obtain more consistent annotation. Second, we can try to use long distance dependency information in PRO NER to remove some ambiguities that are difficult to remove in the current system. Third, the processes of segmentation, POS tagging, general NER and PRO NER can be integrated in order to alleviate error spreading.
 Appendix: Peking University X  X  TagSet for POS Tagging Chinese Texts (Yu et al. 2003 ) References
