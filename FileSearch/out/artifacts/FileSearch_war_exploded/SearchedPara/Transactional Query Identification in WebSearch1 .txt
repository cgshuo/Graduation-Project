 The Web is rich with various sources of information. Therefore, the need behind a user X  X  query is often not informational. Classic IR that focuses on content information cannot satisfy various needs [3]. Fusion IR studies have repeatedly shown that combining multiple types of evidence such as link information and url information can improve retrieval performance [10]. However, it is not easy to make a general purpose method that shows good performance for all kinds of need. There are studies that try classifyin g users X  needs and solving each category with a different method [5]. [2] showed that users X  queries can be classified into three categories according to the intention of a user.  X  Informational Query  X  Navigational Query  X  Transactional Query mational queries. For example,  X  What is a prime factor?  X  X r X  prime factor  X  X s an informational query. Its goal is finding the meaning of  X  prime factor  X . Con-trary to Informational queries, users are interested in navigating a certain site with navigational queries. For example,  X  Where is the site of Johns Hopkins Medical Institutions?  X  X r X  Johns Hopkins Medical Institutions  X  is a navigational query. The goal of this query is finding the entry page of  X  Johns Hopkins Medical Institutions  X . Users are interested in finding a document that offers the ser-vice described in a transactional query. For example,  X  Where can I find Bea-tles X  lyrics?  X  X r X  beatles lyrics  X  is a transactional query. Users do not desire to learn about lyrics of Beatles X  songs, but simply a desire to view the lyrics themselves [9].
 natural language query to infer the expected type of an answer [6]. These rules were built by considering the first word of a query as well as large patterns of words identified in a query. For example, query  X  Where was Babe Ruth born?  X  might be characterized as requiring a reply of type LOCATION . While previous studies focused on informational queries, nowadays we should consider not only informational queries but also navigational queries and transactional queries for Web search. Previous methods need large-scale training data to extract rules and patterns for analyzing query [6]. However, there is a case in Web search when we cannot analyze a query with extracted rules and patterns. For example, two queries,  X  Where is Papua New Guinea?  X  X nd X  Where is Google?  X  X avethe same sentence patterns. However,  X  Google  X  has special meaning on the Web. User wants to visit  X  Google  X  site on the Web. The intention of the latter query is not informational but navigational. To make matters worse, the properties of words are changed. For example, Korean query  X  EOLJJANG  X  1 cannot be analyzed without the usage information on the Web.  X  EOLJJANG  X  X asformerly an informational query. As an informational query, a possible answer document may contain a definition such as  X  EOLJJANG means a good looking person.  X  Nowadays,  X  EOLJJANG  X  is a transactional query. What a user wants is finding and downloading pictures of  X  EOLJJANG  X  X . We may use a dictionary to find the property of  X  EOLJJANG  X , like previous query analysis methods. However it is not feasible to contain all new words and maintain their changes of properties. tional queries. They also proposed dynamic combination of content information, link information and URL information according to a query type. In this pa-per, I extend their classification and combining method to include transactional queries. Each hyperlink related to an anchor text has an anticipated action with a linked object. Possible actions include reading, visiting and downloading a linked object. These tagged anchor texts can be used training data for a query classification module. We can collect a l arge-scale and dynamic training data automatically.
 tion methods are briefly explained. In section 3, a query type classification method for classifying queries into informational, navigational and transactional is presented. In section 4, Service Link information is presented for transac-tional queries. Various experiments are conducted to show the performance of the proposing classification and combining method, in section 5. Conclusion is followed in section 6. 2.1 Query Taxonomy [2] and [9] randomly selected queries from a commercial search engine X  X  query logs. They manually classified queries and showed the percentages of each query type. Although their hierarchies are not the same, top-level hierarchies are the same. From their results, over 40% of queries were non-informational. They all insisted the importance of processing transactional queries. [9] showed that navigational queries appear to be much less prevalent than generally believed. This implies that search engines should consider transactional queries to cover more queries.
 2.2 Automatic Query Type Classification An entry page of a site usually does not have many words. It is not an explana-tory document for some topic or concept, but a brief explanation of a site. We can assume that site entry pages have the different usage of words. If we find distinctive features for site entry pages, then we can classify a query type using keywords of a query. [5] proposed a method for classifying queries into informa-tional queries and navigational queries. They divided a document collection into two sets whether the URL type of a document is  X  root  X  X ypeornot.TheURLof a X  root  X  type document ends with a domain name like  X  X ttp://trec.nist.gov X . A document collection that includes only  X  X oot X  type documents represents navi-gational queries and other documents represent informational queries. If a given query X  X  some measures in two collections show large difference, then we can as-sume the type of a query. Four classifiers were used to determine the type of a query. Four classifiers were as follows.  X  Distribution of terms in a query  X  Mutual Information of each term in a query  X  Usage rate of query term as anchor texts  X  POS information search according to a type of a user X  X  query. For navigational queries, combining link information like PageRank and URL information like the depth of directory improved the retrieval performance of a search engine [7]. However, for infor-mational queries, it degraded the retriev al performance. In addition, retrieval algorithms such as TFIDF and OKAPI also show different effect in Web search. In this paper, I extend this classification in order to include transactional queries. In addition, I propose useful information for transactional queries. 3.1 Preparation for Classification Model Some expression can be used to tell the type of a query. For example,  X  winamp download  X  is a transactional query and  X  thesiteofSONY  X  is a navigational query. We can assume the types of two queries with cue expressions (e.g.  X  download  X  and  X  thesiteof  X ).
 moved from the query. For example,  X  What is a two electrode vacuum tube?  X  X s expressed as follows.
 use all words with the position in a query. I assume that the sequence and the position of word are important in classifying transactional queries. We can say [5] is a keyword-based classifier and my method is an expression-based classifier. 3.2 Extracting Cue Expressions To extract cue expressions, anchor text and the title of a document are used. The definition or the explanation of a linked object can be extracted from a title and an anchor text. For example, a ticket reservation page has a title related to ticket reservation and a download button has an anchor text that explains a linked object. We can classify linked objects according to possible user X  X  activities with them. Possible activities include reading, visiting and downloading. If a linked object is a binary file that is not readable, then its possible activity is downloading. However, in some cases, there is a linked object whose activity is ambiguous. For example, if a linked object is an html file, then assuming the action of the hyperlink is not easy. So, we clustered hyperlinks according to the extension of a linked object instead of using three categories: informational, navigational and transactional. If an expression occurs more frequently in a specific link type, then we can assume that it is a cue expression for a certain link type. For example,  X  download file  X  X nd X  reserve ticket  X  can be key evidence that the type of a given query is a transactional query.
 object (Table 2). In the Table 2 Site and Subsite are usually for navigational queries. For example, anchor texts  X  Fan Club  X  X nd X  Homepage  X  can be extracted as Site and Subsite types.
 tagged hyperlink. The first two words and the last two words are used to ex-tract cue expressions. There are 5 templates for extracting candidates of cue expression.
 text  X  winamp full version download  X  has 5 cue expression candidates (Table 4). expression [1]. The frequency of each ca ndidate is normalized with the total number of expression in each link type. With a given query, we can calculate a link score for each link type by adding score of each candidate expression. For example, the link score of a site type is calculated as follows.
 and whether an index term is from an anchor text or not. 3.3 Combining Classifiers To detect a transactional query, I extend the method of [5]. I used TiMBL [4], a Memory-Based Learning software package, to combine multiple classifiers. A Memroy-Based Learning is a classification-based supervised learning approach. It constructs a classifier for a task by storing a set of examples. Each example associates a feature vector (the problem description) with one of a finite number of classes (the solution). Given a new feat ure vector, the classi fier extrapolates its class from those of the most similar feature vectors in memory. The metric defining similarity can be automatically adapted to the task at hand.  X  IN ( Q ): whether a given query is an informational query or a navigational  X  isF ileN ame ?: whether a given query is a file name or not? (e.g.  X  stand by  X  w 1 : the first word of a query  X  w l : the last word of a query  X  LinkScoreV ec : LinkScore site , LinkScore subsite , LinkScore music , where  X  IN ( Q ) X  is the result of the Kang X  X  method. The result of  X  IN ( Q ) X  is Informational or Navigational. w 1 and w l provide a special action verb such as  X  download  X  and an interrogative such as  X  where  X . A query can be the name of the file that a user wants to achieve.  X  isF ileN ame ? X  indicates whether a given query is a file name or not. Simple regular expression is used to decide the value of isF ileN ame . LinkScoreV ec is a vector that consists of all kinds of link score. water  X  are extracted as keywords by excluding stop words. We assigned a Part-of-Speech Tag to each word. With tagged keywords,  X  IN ( Q ) X  is calculated. Then calculate LinkScores for each link type. The result vector looks like as follows. can assume that this query does not have sp ecial cue expressions for transactional queries. In this section, useful information for a transactional query is proposed. A good result document for a transactional query should provide good service. To pro-vide service, the further action of a user is needed. A user wants to buy some products, do some game, download a music file and a picture file, and so on. For example, query  X  winamp download  X  has the intention that a user wants to download a  X  winamp  X  program file by clicking or saving a linked file. Retrieved Web documents should have a download button or a linked file. For a trans-actional query, designated service is implemented by some mechanisms. These mechanisms contain a CGI program, a linked file (except an html file), and so on. These mechanisms usually implemented by a hyperlink. If a Web document has useful hyperlinks, then we can assume it is a kind of a document that provides some types of transaction. I propose a formula that accounts for the existence of hyperlinks. We call this  X  Service Link information  X .
 where,  X  service links  X  means the union of music, picture, text, application, service, and file links. # service links is normalized with the number of links. link count means the number of all hyperlinks in a document and avg. link count means the average number of all hyperlinks. In this paper, I set the value of  X  1 to 0.5 and  X  2 to 1.5. Service Link information is normalized by the number of link count ( d ). Service Link information is added to content information as follows to reorder result documents [5]. In this section, we conduct various experiments to see the usefulness of our classification method. In addition, experiments to see the usefulness of Service Link information for transactional queries are also conducted. 5.1 Test Set Six query sets are used for experiments. For informational queries, queries of the TREC-2000 topic relevance task (topics 451-500) and queries of the TREC-2001 topic relevance task (topics 501-550) are used. We call them QU ERY I  X  TRAIN and QU ERY I  X  TEST . For navigational queries, queries for randomly selected 100 homepages 2 and 145 queries of the TREC-2001 homepage finding task are used.Wecallthem QU ERY N  X  TRAIN and QU ERY N  X  TEST , respectively. For transactional queries, 100 service queries extracted from a Lycos log file are used for training and testing. I divided 100 queries into QU ERY T  X  TRAIN and QU ERY T  X  TEST . Table 6 shows selected examples of transactional queries. The WT10g collection is used for making a classification model. Training queries are used to calculate the value of constants such as  X  and  X  in the Eq. 7. 5.2 Distinguishing Query Types To measure the performance of our classification model, precision and recall are calculated with the following equations.
 Every query has at least one query type. Therefore the precision and the recall of classification are the same. Table 7 shows the results of classifying query types. The last column QUERY-TEST means queries from all test sets were used. By combining each classifier, we could increase precision and recall. From the table,  X  IN ( Q ) X  is good for distinguishing informational queries and navigational queries.  X  LinkScore  X  shows good performance in detecting transactional queries. 5.3 Service Link Information for Transactional Queries For the evaluation, binary judgment was used to measure the retrieval perfor-mance of transactional queries. The version of a program and the media type should be matched with a description in a query. The result document that needs further navigation to listen or download an object is not correct. Since we do not know all relevant results, precision at 1, 5, and 10 documents are used. actional queries. Top 100 documents were retrieved with Google, and then I combined Service Link information to get new top 10 documents. Since we did not know the similarity score of each result document, estimated score according to a rank was used. 0.9 was calculated from a training phase with training data. where, r ( d ) is the rank of document d . I used an estimated score instead of a real similarity score. Thus, the improvement of retrieval performance was low. However, we can conclude that Service Link Information is good for transactional queries.
 5.4 Retrieval Performance with Classification Three ranking algorithms were used acco rding to a query type. OKAPI algorithm was used for informational queries. For navigational queries, PageRank and URL information were combined with OKAPI score. For transactional queries, Ser-vice Link Information was combined with OKAPI score [5]. Table 9 shows the retrieval performance with the best and worst possible performance that we could achieve. Average Precision was used for measuring the retrieval perfor-mance of informational queries, MRR for navigational queries and precision at 10 documents for transactional queries.  X  BEST  X  is obtained when we have all correct answers and  X  WORST  X  is obtained when we have all wrong answers in classifying query types.
 formational queries, 90% in navigational queries and 91% in transactional queries could be achieved. probability of a query type, the proper weight of each type of information is decided, and then combined. The following equation was used to weight each type of information. where, the values of  X  1 ,  X  2 ,and  X  3 are determined based on the probability of query type. Table 10 shows the retrieval performance of dynamic weighting. method that uses special engines for transactional queries. When a query type is ambiguous, proper weighting of bot h types showed a better performance. We have various forms of resources in the Web and consequently purposes of users X  queries are diverse. Classic IR that focuses on content information can-not satisfy the various needs of a user. Search engines need different strategies to meet the purpose of a query. In this paper, we presented a method for classifying queries into informational, navigationa l and transactional queries. To classify a query type, link type that exploits anc hor texts is used. I tagged each anchor text according to a possible action with a linked object. 9 link types were used to tag an anchor text. These tagged anchor texts can be used as large-scale training data. Cue expressions of each type are automatically extracted from tagged an-chor texts. After we classified the type of a query, different types of information for a search engine are used. To retrieve better results for a transactional query, we add Service Link information. In addition, I proposed dynamic weighting method that combines each type of information according to the probability of each query category. Dynamic weighting showed a slightly better performance than the method that uses special engines for transactional queries. When a query type is ambiguous, proper weighting of both types showed a better per-formance.
 paper, we use 9 link types for three categories: informational, navigational and transactional. However, we can pinpoint target categories with 9 clusters. Cate-gories for explaining the need of user should be extended. In addition, research on indexing model for our classification method is needed.

