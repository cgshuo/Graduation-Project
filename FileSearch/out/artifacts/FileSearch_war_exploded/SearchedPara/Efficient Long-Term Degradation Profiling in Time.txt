 The long term operation of physical systems inevitably leads to their wearing out, and may cause degradations in performance or the unexpected failure of the entire system. To reduce the pos-sibility of such unanticipated failures, the system must be moni-tored for tell-tale symptoms of degradation that are suggestive of imminent failure. In this work, we introduce a novel time series analysis technique that allows the decomposition of the time series into trend and fluctuation components, providing the monitoring software with actionable information about the changes of the sys-tem X  X  behavior over time. We analyze the underlying problem and formulate it to a Quadratic Programming (QP) problem that can be solved with existing QP-solvers. However, when the profiling resolution is high, as generally required by real-world applications, such a decomposition becomes intractable to general QP-solvers. To speed up the problem solving, we further transform the prob-lem and present a novel QP formulation, Non-negative QP, for the problem and demonstrate a tractable solution that bypasses the use of slow general QP-solvers. We demonstrate our ideas on both syn-thetic and real datasets, showing that our method allows us to accu-rately extract the degradation phenomenon of time series. We fur-ther demonstrate the generality of our ideas by applying them be-yond classic machine prognostics to problems in identifying the in-fluence of news events on currency exchange rates and stock prices. We fully implement our profiling system and deploy it into several physical systems, such as chemical plants and nuclear power plants, and it greatly helps detect the degradation phenomenon, and diag-nose the corresponding components.
The long term operation of physical systems causes degradation of their components. Degradations, such as wearing out or aging lead to condition changes expressed in deviations in mean values, Work done during an internship at NEC Laboratories America, Princeton. We use terms degradation and aging interchangeably in this paper. c  X  amplitudes or frequencies in the sensed signals of the system, and are an unavoidable property of any system. However, well-timed detection and profiling of an aging phenomenon or trend help avoid consequences and problems it may cause and are crucial tasks in the modern machinery. It is important to note, if one component of a system fails, it may lead to the stoppage of the whole system, and, as already well known, even short interruption in production process may cause huge money waste and serious business related issues [9].

The problem of trend analysis and extraction in time series has attracted significant attention recently, and a plethora of methods have been designed [4,14]. However, the proposed schemes mainly focus on extracting general trend behavior from time series, and none of them specifically addresses the aging detection and profil-ing without any prior knowledge of the time series properties (i.e., seasonality, level of noise, etc.).

The aging phenomenon profiling is a critical task in detection and analysis of the degradation behavior in time series obtained from sensors on machinery. Such a problem is complicated because a system is usually operated with strong patterns. The aging behavior is usually invisible due to high noise and operational signals, and thus is too small to be detected. Figure 1 shows an example of a one-year-long time series collected from a pipe of a chemical plant. A component inside the pipe started wearing out at the beginning of January 2013, and another started at the beginning of March. This leads to the degradation of the whole pipe. Such aging phenomenon is too tiny to be captured by human eyes but may cause damage to the whole system.
 Figure 1: Example of time series showing aging (long-term degra-dation) phenomenon.

To resolve this issue, in this paper, we aim to provide a time se-ries analysis technique that accurately extracts the aging phenom-ena of given time series, analyzes the aging behavior, and ranks its severity. We observe that in physical systems, the aging usually is generated in long-term and incremental fashions, such as buildups or component wear out, and thus, naturally, the aging behavior can be modeled as a monotonic signal. Moreover, for systems under normal operations, the long-term operational signal should be stationary. For example, it does not make sense if a system is normally operated to always increase/decrease temperature, water flow, or pressure for five years, although the instant value can fluc-tuate at different time points. Under such observations, we want to develop an aging profiling engine that decomposes the given time series into two components -a monotonic aging trend that captures all the degradation phenomena in the time series and a fluctuation term that represents the normal operational signals and noises. In decomposition, we analyze the aging trend to profile its changes and evolutions including the slope and the shape that indicates the severity and starting point of the degradation.

More particularly, we formulate the aging extraction problem as an optimization problem. Its objective function consists of two parts: (1) Minimizing the reconstruction error to ensure an accu-rate profiling, and (2) Ensuring flatness of the fluctuation term over time so that the aging trend captures as much degradation signal as it can. Under such objectives, the solution must also satisfy two constraints: (1) the extracted aging trend needs to be monotonic to satisfy the nature of the component wearing out, and (2) all the extracted signals need to be real valued and non-negative. We an-alyze the formulated objective function and convert this problem statement to a Quadratic Programming (QP) formulation [11] that can be solved with existing well-known solvers. However, when the profiling resolution is high, as generally required by real-world applications, such a problem becomes intractable to general QP-solvers. To further speed up the problem solving, we propose a ma-trix transformation technique to simplify the constraints and reduce the number of constraints from two to one  X  only non-negativity constraint. We convert the problem to a Non-negative QP problem and solve it much more efficiently using iterative updates [21]. We show that, using the optimization techniques proposed in this pa-per, the solution of the problem is tractable, and thus applicable to large-scale time series profiling.

We design two scoring functions to give an aging score and a confidence score to analyze the extracted aging component of the time series. Based on such scores, our aging profiling engine re-ports the result of decomposition with a ranking of the aging sever-ity and the corresponding confidence level of the extraction, which can assist the domain experts to further diagnose the system.
We demonstrate our ideas on both synthetic and real data, show-ing that our method allows us to accurately divorce the trend and the shape of rapidly arriving time series. We further demonstrate the generality of our ideas by applying them beyond classic ma-chine prognostics to problems in identifying the influence of news events on currency exchange rates. We fully implement our aging profiling system and deploy it into several physical systems, such as a chemical plant and a nuclear power plant in Japan, which greatly helps detect the aging phenomenon and diagnose the corresponding components.

To summarize, in this paper we make the following three contri-butions:  X  We formulate an objective function for extracting trend and  X  We demonstrate that the problem is a convex problem, convert  X  We fully develop the system and deploy it into several real-
The rest of the paper is organized as follows. In Section 2 we pro-vide our detailed scheme and problem formulation. Section 3 gives optimization techniques to efficiently solve our problem. Section 4 presents the conducted experiments. The related work is presented in Section 5. We conclude this paper in Section 6.
In this section, we describe our approach for aging profiling in time series data. First, we present the formal definition of the prob-lem. Then, we form the objective function and formulate it to a Quadratic Programming Problem, a subclass of the convex prob-lems whose optimal solution can be obtained with existing solvers. After that, we present the scoring functions to rank the aging sever-ity of the input time series and the confidence level of out system.
In physical and other complex systems, the monitored signals (time series) generally are a mixture of aging phenomena, system operational signals, and noises. Our goal is to extract and profile the aging components/phenomena/signals out of the given time series. The aging extraction problem can be defined as follows: given an input time series of length T , s  X  R T  X  1 , we want to decompose it into the following terms: where x a is the aging term and x f is the fluctuation term. Illustra-tion of the desired decomposition is presented in Figure 2. Figure 2: The desired decomposition of a time series to extract the aging trend: the clear separation of the two components  X  the aging trend and the fluctuation term.

We require the trend component to be monotonic  X  either non-increasing or non-decreasing 2 , and the fluctuation term to be flat, i.e., stationary, to make sure it does not interfere with the aging trend. Having this problem statement, we formulate our problem into an objective function optimization in the following section.
To ensure that the trend x a is monotonic, we can simply write the constraint of the objective function as
To make the fluctuation term stationary and do not have the mean change over the time, we segment the time series, and ensure the mean value difference of each segment to be as small as possible. More specifically, given a time series, we partition it into K seg-ments, each having mean value m k , k = 1 , 2 ,...,K . Then, we minimize the difference between mean values of each pair of the segments to ensure flatness of the fluctuation term over time as:
For other aging behaviors, such as frequency or variance change, they can always be transformed to value change and modeled as monotonic signals. Here W is a weight matrix, each entry W ij of which specifies the weight we want to assign in order to minimize the mean difference between the segment pair m i and m j . If W is set to be all 1 X  X , then all the segments have equal weight. In practice, to ensure the long-term mean change being minimized, we can increase weights when the distance of the segment pair increases (e.g., linear growth of the weight based on the distance between segments m i and m In this way, the farther the two segments are apart from each other, the more weight is given to minimize their mean difference.
We formulate the objective function of the optimization problem as minimizing the reconstruction error k s  X  x a  X  x f k 2 ing flatness of the fluctuation term over time (Equation (3)), which is subject to the following constraints: (1) monotonicity constraint and (2) non-negativity constraint. The monotonicity constraint can be represented using Equation (2). The non-negativity constraint means that the extracted aging trend and fluctuation term must have only non-negative values. It assumes that the original time series has only non-negative values as well, but if it is not the case it can be easily shifted up by summing up the original values with the absolute value of the minimum (negative) value of the time series. Combining this with Equations (2) and (3), the whole objective function can be written the following way:
However, Equation (4) cannot be solved in the form presented above. We now transform it to a Quadratic Programming formula-tion whose optimal solution can be obtained. We begin with rewrit-ing Equation (3), the flatness objective. For each of the segments m , we define an indicator vector e i as follows: e i = [0 , 0 ,..., 0 where l is the length of the segment. We let and then such flatness objective (Equation (3)) can be written as where L = D  X  W and D = diag ( W  X  1 ) .

After that, in Equation (4), we replace the original form of the flatness objective with its new form in Equation (6) and obtain the following formulation:
Then, we rewrite Equation (2), the monotonicity constraint. We define x = [ x &gt; a , x &gt; f ] &gt; , E 2 = [ I , I ] , E T  X  T identity matrix. We define matrices B and C as follows:
B = Under such a definition, the monotonicity constraint can be written as and the non-negative constraints can be written as We further rewrite the objective function in Equation (7) and obtain its form as follows:
Now, the Equation (10) has a form of a Quadratic Programming optimization problem. Later in Section 3 we propose an efficient optimization method to solve this problem.
We decompose a given time series into the aging part (trend) and the fluctuation part. During the decomposition, the reconstruction error is introduced, and thus, the confidence of such decomposition must depend on the value of the error. We use scores to assess the severity of the aging as well as the confidence our tool provides. Essentially, the aging score can be described by the slope of the aging trend, while the confidence score depends on the closeness of the slope of the extracted aging trend to the slope of the original time series. We tune two sigmoid functions to quantify the two scores. For the aging score, we use the slope of the extracted aging trend as the input of the sigmoid function, that gives a value from 0 (no aging expressed) to 1 (severe aging). For confidence score, we use the difference ratio between the slope of the original time series and the slope of the extracted aging trend, i.e., ( ori. _ slope  X  ext. _ slope ) /ori. _ slope , as the input. The higher the ratio is, the lower the confidence score will be. The two scoring functions can be flexibly tuned according to different application requirements. For example, for five-year monitoring of a physical system, we can pre-tune aging score to give 0 for zero-slope aging trend, while giving 1 when the slope is greater than 0.015, as shown in Figure 3(a). The confidence score function can be tuned so that it scores 1 when the ratio is 0, while it scores 0 when the ratio is close to 1, as shown in Figure 3(b). Figure 3: Aging score and confidence score sigmoid functions
To summarize, the design of the aging profiling system is illus-trated in Figure 4.
We formulate the underlying aging profiling problem to a QP problem. However, the general QP-solvers are used for a wide range of purposes and are considerably slow, especially for large time series (e.g., more than 1000 data points). Essentially, find-ing a solution for a time series of 1000 data points is equivalent to Figure 4: The system overview. A time series is decomposed into the aging and fluctuation terms. Based on the aging term we obtain the aging score (ranking) and the confidence score for it. solving a system of equations with 1000 variables, which is very computationally costly, and thus, is not tractable.

In this section, we aim to reduce the computational cost and pro-vide a tractable solution for reasonably long time series. Our idea is to further rewrite the QP formulation in Equation (10) to elimi-nate the monotonicity constraint and only keep the non-negativity constraint to make the problem much easier to solve.
We observe that monotonicity constraint expresses the fact that the difference between two neighboring elements is non-negative . Based on the observation, we introduce a transition variable  X  x and change the problem statement to the following way: instead of using x a as a part of the variables, we can use the following surrogate  X  x a as the variable, which satisfies the equality In other words, the first element in  X  x a is equal to the first element of x a , and the remaining elements in  X  x a represent the difference between two neighboring elements of x a .

The relationship between x a and  X  x a can be written in the follow-ing way: where  X  =  X   X  if the trend is nonincreasing, while  X  =  X  + the trend is nondecreasing
An example of a trend x a and its difference values  X  x a trated in Figure 5.
 the monotonicity constraint Cx  X  0 in Equation (8) and non-
In case of nonincreasing sequence every preceding element is greater or equal to the following, and in case of nondecreasing se-quence, vice versa, each following element is greater or equal to the preceding one. negative constraint x  X  0 in Equation (9) to just one constraint: We let  X  E 2 = [ X  I ] . The original QP problem in Equation (10) can be written in the following form with the only one constraint: We further define then the problem can be written as a simple non-negative QP prob-lem:
After solving Equation (17), the obtained aging trend x a recovered with  X  x a as it is shown in E. q. (11). The next section shows that indeed such a non-negative QP problem can be solved much more efficiently than a general QP problem.
The advantage of using the non-negative QP formulation is that it makes the structure simpler, since non-negativity constraints are much easier to handle than linear inequality constraints. Typically they lead to closed-form iterations that can be computed very effi-ciently. For example, the multiplicative update studied in [21] can be used to obtain the solution. Let Q + and Q  X  be defined as Q Then, the update can be written as where x i is the vector x obtained after i iterations.

A good initialization can improve convergence. One can use | ( Q  X  1 c ) | suggested in [21] as the starting solution. To compute Q  X  1 , one can use low-rank approximation techniques which is lin-ear complexity.

This avoids using general QP-solvers that are typically designed for general purpose formulations with both linear and nonlinear constraints, and thus, makes the solving process much more ef-ficient. A comprehensive comparison between solving efficiency using general QP-solvers and the proposed method is later shown in Section 4.1.3.
The formal presentation of our algorithm for time series decom-position can be found in Algorithm 1. Algorithm 1 The aging profiling algorithm 1: Check the slope of s 2: if slope is negative then 3:  X  =  X   X  4: else 6: end if 7: Compute Q, c 10: while difference &gt; do 11: Compute  X  x by (19) 15: end while
In the algorithm, the first step is to check the slope of the input time series and decide if  X  + or  X   X  should be used. Then, the next step in line 7 is to compute Q and c according to the Equation (16). In line 8, we assign initial value of  X  x a to be | ( Q that, we execute the iterative updates until the difference between objective function values becomes less than , e.g., 0.001. In line 16, we split the  X  x a into its two components -the aging trend differ-ence values and the fluctuation term, and recover the aging trend by multiplying  X  by  X  x a in line 17. The algorithm returns the extracted aging trend and the fluctuation term.
We have fully developed our aging profiling system and deployed it into several physical systems, such as chemical plants and nuclear power plants in Japan. In this section, we first evaluate the aging profiling accuracy, computational complexity, and the intuition of the parameter tunning of the scheme by applying it to synthetic datasets with different properties. Then, we demonstrate the good profiling and diagnosis performance by applying it to the real-world data collected from one of the systems it is deployed in. Finally, we further demonstrate the generality of our scheme by applying it beyond classic machine prognostics to problems in identifying the influence of news events on currency exchange rates and stock prices.
We generate synthetic data that covers time series with different properties in trend, seasonality, and noise. For trend component, we generate three types of aging trends: no trend, linear trend, and nonlinear trend. Figure 6 summarizes trends that are used in the synthetic data generation. Essentially, to generate a linear trend, we applied the slope in the whole length of time series. For a nonlinear trend, its first half is a flat line (no trend), and the non-linear curve starts in the middle of the time series. We intentionally generate the nonlinear trend this way to test whether our scheme can detect the starting point of the aging. Moreover, all the generated trends are very small (can be seen from their slope values) in order to ensure that the aging trend is not obvious or visible by eyes.
The fluctuation terms are built according to the following scheme:  X  sine wave: sin( a X t ) ,a = [1 / 16 , 1 / 8 , 1 / 4 , 1 / 2 , 1] ,  X  noise: b  X  rand (0 , 1) ,b = [1 / 4 , 1 / 2 , 1 , 2 , 4] ,  X  combination of noise and sine wave: sin( a X t )+ b  X  rand (0 , 1) .
Combinations of possible trends and fluctuations give nine fami-lies of time series, presented in Figure 7. In total, we generated 385 synthetic time series, each containing 5000 points. The next section explains parameter setup for the experiments and their justification.
As a careful reader could notice, our model has several parame-ters, namely  X  , K , and W .  X  balances the minimization weights between reconstruction error and flatness of the fluctuation term. K control the resolution of the flatness of the fluctuation term. W adjusts the weights in the fluctuation term and can be set to linearly increase depending on the distance between the pairwised segments (e.g., 1 , 2 , 3 ,... ).

To evaluate the effect of different parameter values, we list a range of values for each parameter and try all the combinations to all the synthetic time series. In Table 1, for each time series, we record the best and worst profiling accuracies that are the minimum and the maximum values of the distances between the estimated and actual trends normalized by the time series length. As we can observe, the difference between the reconstruction results is not significant. Thus, our system is not sensitive to the values of the parameters. In practice, based on our extensive experiments, we suggest to set  X  = 0 . 1 and K = 5 .
To evaluate the decomposition quality, we compute the Euclidean distances between the extracted and actual trends. We compare our method with Singular Spectrum Analysis (SSA), Moving Average (MA), and Wavelet. Table 2 presents the results of the comparison. Table 2: Euclidean distance between actual and extracted trends
From this table we can see that our method performs best among the majority of the compared schemes with the smallest error be-tween the extracted trend and the ground-truth trend. Especially when the slope is small and the aging phenomenon is tiny, our method performs about 10 times better SSA and 30 betters than SMA and Wavelets. Moreover, although in two cases our method gets higher error than SSA, the aging trend extracted by our scheme is monotonic and satisfies the nature of the aging behavior, while SSA, SMA or Wavelets does not have such advantage as they have no monotonic constraint in extracting the trend. A comparison of extracted slopes with our method and actual trends is shown in Fig-ure 8, which demonstrates how the extracted trends correspond to the actual trends.

In addition, Figure 9 demonstrates an example of outputs from our tool. From this figure, we can see our profiling scheme accu-rately detects and profiles the aging shape of the input time series.
Any algorithm that utilizes iterative updates opens a question on how fast it converges upon a solution. This answer depends on the choice of that satisfies the accuracy of the results and gives a reasonable speed of computation. For all our experiments we fixed value to be 0.001, and set the initial values for the solution to be | ( Q  X  1 c ) | . Figure 10 shows the average converge speed for time series with 300 data points. From this figure, we can see that the algorithm converges within about 60 iterations. Figure 10: Convergence speed for time series length of 300 data points To compare the efficiency of the original formulation solved with QP-solvers and the optimized non-negative QP formulation with it-erative updates (named No QP-solver ), we run load tests for differ-ent length of time series and plot the execution time for time series with length from 500 to 5000 in Figure 11. The running time is based on a PC with CPU i7-920 3.0GHz with 8 cores 4 . From this figure, it is obvious to see that our approach outperforms general QP-solver based technique, and its speed is about 30 times faster than general QP-solvers. Please note that, since our goal is to cap-ture long-term degradations in physical systems, we do not need a very fine granularity and usually 2000 points is enough for 5-years of monitoring data.
Figure 11: Solution time for QP-solver and without QP-solver
We use sigmoid functions to define the aging and confidence scores shown in Figure 3(a) and (b). The aging scores of time se-ries with different slopes of trends are shown in Figure 12. From this figure, we can see that the aging score computed based on the
The algorithm can be easily parallelized along multiple time se-ries, as there is no need of memory sharing between different time series. extracted aging trend highly correlates with the slope value of the actual aging trend.
Similarly, the confidence scores presented in Figure 13 show the closeness of the slopes of the original time series and the extracted trend. From this figure we can see that when the slope of the actual trend is greater than 0.001, our scheme can have a confidence score higher than 0.99.
In this section, we evaluate the profiling performance of our method using real-world datasets collected from different markets: (1) multi-variant time series collected from sensors in a manufac-ture system of a chemical plant, (2) time series from current ex-change rate between Russian Rubles and Ukrainian Hryvnias, and (3) time series from the US stock price of Apple Inc.
We deploy our profiling system to 8 chemical plants, and col-lect time series that contain more than 2000 sensors. The sensors are distributed to monitor pressures, temperatures, water flows and sound frequencies of the system. The data has more than 20,000 points, which includes 6 years of monitoring of the system to make sure it captures aging behavior, if any. Since we only focus on long-term behavior, we sample 800 points for each time series and index them using integers from 1 to 800.

After deployment, we run our system on all the collected time series and list the top 9 sensors, showing both strong aging behavior and confidence score, in Table 3. We also plot their original time series and extracted aging curves in Figure 14. From this figure, we can see that the system parts start to have aging behavior at around 80 th , 290 th , 580 th points. This is confirmed with domain experts that operate the systems. At around these three points, the pipes of the system that the 9 sensors are monitoring start to have buildups, and the quality of product starts to decrease. This shows our aging profiling engine can accurately profile the aging behavior of the system and observe aging phenomena that cannot be captured by eyes or simple statics.
Although this paper mostly considers aging trends expressed in physical systems, our techniques are not limited to this domain and can be applied in many scenarios with long term monotonic changes.

Particularly, we demonstrate how our approach may be used to detect certain events that had influence on the currency exchange rates. Note that we are not claiming applicability of our techniques to the general currency exchange rates monitoring, however, in case of special circumstances our techniques are helpful to detect cer-tain events. Recent events in Ukraine [3] led to a significant de-crease of Russian and Ukrainian currencies -Russian Rubles and Ukrainian Hryvnias. Significant changes in the trend appeared in the beginning of 2014 when an unrest started in Ukraine. Figure 15 demonstrates exchange rates between the United States Dollar and aforementioned currencies. Our maximum slope change happens at exactly the same time as that event happens. We obtained currency exchange data from [1] and retrieved the relevant time frame.
Another application our approach can find is the profiling of long term stock prices. This tracking may be useful to observe changes in a given company success and also to monitor if anything partic-ular happens at some certain time. There are many web resources that provide the information on stock and share prices. For this case study we used data obtained from Yahoo Finance [2] web site and investigated the changes in stock prices of Apple Inc. Figure 16 demonstrates stock prices of Apple Inc. during last 5 years. We can see that the fastest slope change of the trend happened in Novem-ber 2011 -about the time where iPhone 4S was released, which is detected by our scheme.
In this section, we discuss related work that has been done in two directions: in time series decomposition and in prediction and analysis of technical system failures.
The time series research, especially trend extraction, has attracted significant efforts in recent decades. In this section, we highlight some relevant techniques and refer an interested reader to a recent survey [4] and therein.

One of the simplest approaches to determine if a time series has a trend is a null hypothesis testing for its presence/absence ( H change/shift between two time segments) [16]. The other approach is smoothing or filtering [14, 20]. It can be done using different techniques, including wavelets [12] and the centered moving aver-age that allows getting mean values of a time series in each certain period of time, thus, detecting any systematic change. Another in-tuitive possibility for trend extraction is fitting a linear or higher level model to the time series data [6]. The common way of fitting a model is a method of least squares [7].

AutoRegressive Integrated Moving Average (ARIMA) is a model-based technique that allows extracting trend and seasonal compo-nents from the time series [5]. This approach can be used for both modeling and forecasting, and it is especially useful when there is a certain seasonal component like a yearly change in temperatures or water levels. The drawback of this model is that, in case of absence of domain information about the time series, the user must provide the parameters that may be very subjective, and thus, leading to in-adequate results. Therefore, model-based approaches, as it follows from the name, are model sensitive and can be used when there is available information about the model.

One of the parameter free decomposition techniques for time se-ries is Singular Spectrum Analysis (SSA) [10]. SSA allows extrac-tion of alleged trend, seasonal and noise components from time se-ries. The name comes from singular decomposition of a matrix into its spectrum of eigenvalues. The time series can be reconstructed by regrouping different important components. The SSA method is well-known and is used in a broad spectrum of domains [10]. How-ever, it has some drawback that we are aiming to mitigate. We de-fine the trend for aging behavior as a monotonic change, whereas, SSA decomposition can return the trend component of arbitrary shape that is not suitable for the problem at hand. In other words, it cannot give clear interpretation of the obtained components, and the trend and high-frequency components are not ensured to be sep-arated.
 Another method of time series decomposition is Independent Component Analysis (ICA) [8]. This method allows decompos-ing of a time series into several additive subparts assuming they are statistically independent and have non-Gaussian distribution. There are two possibilities of how to define the independence of the extracted components. One of them is minimization of mu-tual information and the other is maximization of negentropy (a measure of distance to normality). This method has the drawback similar to SSA for our problem application: it does not provide nec-essary condition of trend monotonicity. Moreover, we assume that the signal may change drastically over time, thus, cannot compose the proper ICA set using pieces of different time segments.
The problem of aging and performance degradation has attracted significant attention in the research community because this aspect is very important for virtually all technical systems [17, 19]. Here, we discuss only some recent and relevant works.

Djurdjanovic et al. [9] proposed a comprehensive framework for analysis and monitoring of the systems based on the time series analysis. They were concerned more with methodology of the col-lecting and analysis of the data than with the methods of decom-posing time series and extracting necessary features. In contrast, in this work we are solving a problem of aging behavior detection that can be expressed as a monotonic change in some properties (particularly, mean value of the time series over time).
The aging behavior also can be expressed in software systems [13]. It was observed that long running software tends to be more failure prone over time, and thus, generally, it is suggested to restart the software systems. However, the definition of a time point when the software must be restarted requires some investigation and re-search. Authors of [13] demonstrated that the periodical restart may not work well because the aging mostly depends on the sys-tem workload. Thus, it is critical to analyze the aging behavior over time to determine when the system must be restarted.

A similar claim that the scheduled maintenance does not always help avoid the failures and degradation in performance is also pre-sented in [22], in relation to the hardware systems. The work is con-cerned with log-based predictive analysis in order to monitor the conditions of the operating equipments and provide timely main-tenance. The authors built a model in order to classify events and collections of the events as "positive" or "negative" with respect to the failure occurrence. After this, they used this model to predict if the system had come or is coming to a degrading state. The method deals with extracted features and not the shape of the time series.
For data centers failure monitoring, recently a probabilistic method that takes into account network topology and ping data was pro-posed [15]. This approach is domain specific and initially builds a network model. In our work, as we mentioned above, we are aim-ing to provide a general approach that could deal with any domain and decompose the time series without usage of a model.

Incident diagnosis from a different prospective was proposed in [18]. Authors presented an approach that allows finding cor-relation between actual events and time series in order to diagnose incidents. Their approach is able to match events with certain sub-sequences of time series in order to give a real explanation of the time series shape. However, this work is mostly concerned with finding patterns in time series, whereas our method is dealing with the whole length of time series in order to detect monotonic degra-dation of an underlying system.
 We gratefully acknowledge funding from NSF IIS-1161997 II.
In this paper, we profile the long-term degradation in time series by decomposing them into aging and fluctuation components. We formulate the underlying decomposition problem to an optimiza-tion problem, and convert it to the Quadratic Programming (QP) formulation whose optimal solution can be obtained. To efficiently solve the formulated problem, we further transform it to a Non-negative QP problem and propose a method to obtain its solution with iterative updates, which is much faster than using general QP-solvers. We implement and deploy our approach to various phys-ical systems, and evaluate our algorithm with both synthetic and real data. We demonstrate that the proposed approach can approxi-mate the true aging trend with fine resolution (with slope coefficient as small as 10  X  6 ), which greatly helps diagnose the corresponding system components. [1] Currency Exchange Rates. http://www.oanda.com/ [2] Yahoo Finance. http://finance.yahoo.com/ . [3] 2014 Ukrainian revolution. http://en.wikipedia. [4] Theodore Alexandrov, Silvia Bianconcini, Estela Bee [5] George EP Box, Gwilym M Jenkins, and Gregory C Reinsel. [6] K Hung Chan, Jack C Hayya, and J Keith Ord. A note on [7] Abraham Charnes, EL Frome, and Po-Lung Yu. The [8] Pierre Comon. Independent component analysis, a new [9] Dragan Djurdjanovic, Jay Lee, and Jun Ni. Watchdog agent  X  [10] James B Elsner and Anastasios A Tsonis. Singular spectrum [11] Donald Goldfarb and Ashok Idnani. A numerically stable [12] Alexander Grossmann and Jean Morlet. Decomposition of [13] Michael Grottke, Lei Li, Kalyanaraman Vaidyanathan, and [14] Robert Henderson. Note on graduation by adjusted average. [15] Herodotos Herodotou, Bolin Ding, Shobana Balakrishnan, [16] Denis Kwiatkowski, Peter CB Phillips, Peter Schmidt, and [17] C Joseph Lu, William Q Meeker, and Luis A Escobar. A [18] Chen Luo, Jian-Guang Lou, Qingwei Lin, Qiang Fu, Rui [19] Felix Salfner, Maren Lenk, and Miroslaw Malek. A survey of [20] Abraham Savitzky and Marcel JE Golay. Smoothing and [21] Fei Sha, Lawrence K Saul, and Daniel D Lee. Multiplicative [22] Ruben Sipos, Dmitriy Fradkin, Fabian Moerchen, and
