 Categories and Subject Descriptors: H.3.3 Information Storage and Retrieval: Information Search and Retrieval General Terms: Algorithms, Experimentation Keywords: real-time search, document enrichment
A common practice in web search is enriching document representations with incoming anchor text, aggregated in some manner [5, 4], so that the anchor text  X  X ield X  is avail-able at ranking time. In this paper, we present a prelim-inary investigation of the value of tweets and tweet con-versations as anchor text. Twitter is a communications platform on which users exchange 140-characters messages (called tweets). It is often used as a broadcast mechanism to publicize newly-published web pages: for example, the web-site techcrunch.com might tweet a link (URL) to a breaking technology-related news story as soon as the page is posted on the web, as a way to generate traffic to the site. In a sense, the tweet text itself serves the same role as traditional anchor text to the web page.

For the most part, tweets with links serve primarily to alert followers (recipients) to the presence of new stories and contain little more than article titles. A typical example is: However, tweets often generate discussion, providing a rich source of content terms not directly found in the article itself. Consider the following tweets, referencing the same article or responding to a previous tweet that referenced it:
In the case of breaking news stories, anchor text is hard to acquire, primarily because new web pages require time to accumulate inbound links. A notable exception is a news site linking to new articles from other new articles (or from a portal page), but anchor text from this type of linking behavior usually consists only of the title, which is uninter-esting. The lack of interesting anchor text means that web search engines cannot take advantage of what is typically a rich relevance signal for ranking. In contrast, for real-time text processing applications, tweet text contains relevance signals that are unlikely to be found anywhere else at the time the tweet was posted.

We present, to our knowledge, the first systematic char-acterization of the phenomenon of tweets as anchor text, which we dub  X  X wanchor text X . Our goal is to convince the reader that there is substantial value in twanchor text for search and other text mining tasks. Due to limited space, we stop short of actual extrinsic evaluation in an end-to-end application, but present our arguments in terms of statistical characterization of twanchor text content.
 Related Work. An early study of anchor text X  X ocusing on differences between anchors and the landing page X  X as presented in [2]. Although tweets have not been used as or compared to anchors, several other similar sources of in-formation have, including social annotations [3] and search queries [1]. Finally, a search system based on indexing tweets instead of the linked documents was recently discussed in [6].
We X  X e developed SpiderDuck, a high-throughput fetcher that listens to the Twitter firehose (stream of all tweets) and downloads the content of all URLs found in tweets. 1 This itself is a non-trivial engineering challenge due to the high throughput demands and usage of URL shortening services, but these issues are beyond the scope of this paper. Our collection consists of all links tweeted in the month of January 2012. Many of the tweeted URLs point to photos and other media, which are not relevant for our analysis. Since we are primarily interested in new web pages of high quality, we restrict our attention to a list of approximately 15K news domains, constructed semi-automatically (again, for space constraints we omit the details). Over the entire month, we observe about 7.1 million unique resolved URLs, in 123M tweets, from these hosts. Additional statistics are provided in Table 1. We emphasize that this figure is arrived at after resolving the target of shortened links; frequently, especially for popular pages, multiple users independently tweet different shortened URLs to the same page. For each page, we collected the following:  X  The title of the web page.  X  Text content of the web page (after removing tags, js, etc.)  X  Tweets linking to the page.  X  Tweet conversations around the link, up to three levels.
The first level is defined as all tweets in response to the original tweet containing the link. The second level is defined as all responses to first level tweets, and so on.  X  Anchor text to the web page. Note that we are restricted to extracting anchor text from other pages that have been tweeted (SpiderDuck is not a general-purpose web crawler).
By definition these anchor texts are limited in scope (but see previous discussion).

To measure the potential contribution of twanchor text in the context of search, we focus on new terms introduced through these texts: that is, terms included in the tweets and their replies that are not part of the web page itself (or its title). Our argument is simple: in the case of real-time search (and unlike web search), recall plays as important a role as precision, and so the more relevant terms are available for retrieving the document, the better.

Note that there are other potential gains from using twan-chors. For example, although a particular term may already appear in the page text, its inclusion in referencing tweets may signal increased importance. Other more complex ap-proaches (such as measuring the diversity among twanchors) may also prove useful, and while we believe this is the case, it is beyond the scope of this short piece. We note that con-versations around an article often expresses sentiment, from which we can gauge users X  responses to the content. Finally, twanchor text and conversations often contain hashtags, a Twitter convention that can be treated as topic-labels for semi-supervised machine-learning purposes.
Table 2 shows the potential contributions of direct twan-chor text, as well as that of surrounding conversations. For each potential content source (anchors, twanchors, and con-versations) we show the average number of new terms added to a URL, as well as break down the contribution to the fraction of URLs that has no new terms, the fraction that has fewer than 10 new ones, and the fraction that has 10 or more new terms. Furthermore, we separately show the contribution to three types of URLs: head , defined as URLs appearing in 100 or more tweets; tail , URLs appearing in 5 or fewer tweets, and torso  X  X verything else. The corpus breakdown is 0.5% head, 13.1% torso, and 86.4% tail.
The potential gains from twanchors are substantial: tweets and their replies contribute new terms significantly more than anchor text, consistently across the board. Although the contribution to head URLs is the strongest, we are par-ticularly encouraged by the contribution to torso and tail URLs. Top news pages tend to be discovered and ranked ef-fectively by search engines due to an abundance of incoming links and high-quality hosts; not so for lower-tier articles. Nevertheless, these still engage many users X  X he number of Table 3: Twanchor text contribution; queried terms tweets referencing torso and tail URLs exceeds the number referencing head ones. The paucity of information available to traditional web search engines (without Twitter signals) limits effectiveness in retrieving those pages.

Clearly, not all new terms added are indeed useful in a retrieval setting; stopwords and other function words that are common on Twitter (e.g.,  X  X T X , an abbreviation for  X  X etweet X ) do not contribute much. In Table 3 we repeat our evaluation, this time limiting the new terms to new queried terms  X  X hat is, terms that appeared in a search query is-sued by at least 1000 unique users to twitter.com over the same month our data was collected on. We omit the break-down into head, torso, and tail, but the numbers are pro-portional to those shown in Table 2: the majority of newly-available terms (about two-thirds, on average) are terms ac-tually found in common queries.
Using a simple proxy X  X he amount of additional textual content X  X e demonstrate that, at least in the case of news-centric search, tweets referencing web pages provide a valu-able source of content not found in the pages themselves. Using such tweets as  X  X wanchors X  improves significantly over using anchors themselves, particularly for long-tail pages that may have few other external information sources. In follow-up work we will show how to utilize twanchors in a full retrieval setup, using additional information present in tweets referencing web pages (e.g., raw counts).
