 Research in the area of Geographic Information Systems (GIS) has been growing in recent years, and digital GIS data is now widely available on numerous Internet websites. Consequently, this valuable GIS data is liable to be illegally copied, modified or distributed due to its digital nature. This stands for a compelling need of copyright protection to combat illegal use of GIS data. A popular solution for the protection of GIS data is using digital watermarking systems that enable the identification of unauthorized use of GIS data.
 data model. The raster model (image) stores the geographic information into a form of grid cells, and each cell represents the natural corresponding value on the ground (e.g. color scale). On the other hand, the vector data model stores the geographic information into geometrical entities which have properties such as length, a starting point and an ending point [ 15 ]. GIS vector data is defined by a sequence of coordinates, and includes shapes such as points, polylines and polygons [ 1 ]. This paper focuses on the vector format of GIS data. Data mining in general and clustering in particular, have been recently used for analysing GIS data for a variety of applications such as government and public services; business and service planning; logistics and transportation; and environmental studies [ 5 ], [ 6 ], [ 19 ]. There are, however, only a limited number of approaches using clustering methods in the watermarking field [ 2 ]. In addition, although many watermarking methods have been proposed for digital multimedia data (e.g. images, audio, texts and videos) copyright protec-tion, e.g. [ 20 ], [ 23 ], [ 25 ], digital vector data received less attention, as pointed out in several recent review papers [ 1 ], [ 4 ], [ 28 ].
 Our previous work is based on the use of k-medoids clustering for water-marking ESRI (Environmental Systems Research Institute) shapefiles of polygon type [ 2 ]; which is discussed in more detail in Section 2 .
 In this paper, we propose an improvement to our previous work [ 2 ], by using the bounding box property of vector map data, to achieve: (a) robustness to simplification (i.e. deletion of some vertices) [ 14 ] and interpolation (i.e. adding new vertices) [ 26 ] attacks, and (b) preservation of the balance between the map fidelity (the imperceptibility of the inserted watermark) and capacity (distri-bution of the watermark bits within the data) for GIS vector map copyright protection. These terms are discussed in more detail in Section 2 .
 The rest of this paper is organized as in the following. In Section 2 ,the GIS map watermarking process is briefly explained and a detailed overview of relevant previous work is presented. Section 3 describes the GIS vector data format and the platform used for the experimental evaluation of the proposed approach. Section 4 presents in detail our approach, while Section 5 discusses the experimental results. Section 6 concludes the paper. A digital GIS watermarking system consists of three main stages: embedding, attack/modification and extraction (Fig. 1 ). The embedding stage aims to insert a watermark (e.g. digital binary sequence) into the GIS vector map points, by using a specific computing approach; the embedding space is normally the Carte-sian coordinates [ 14 ], [ 22 ]. The attack or modification stage is the process of distorting the digital map content. The extraction stage refers to obtaining the watermark from the host GIS data in order to retrieve the original map. There are three key requirements for reliable GIS watermarking system: fidelity, capac-ity and robustness [ 1 ], [ 4 ].
 The fidelity requirement refers to the quality of the watermarked GIS data, in the sense that the watermark embedding process should not affect the quality of the host data and that the watermark should not be noticeable to the human eye [ 21 ]. The fidelity also indicates the similarity between the original data and the watermarked data. In the case of GIS raster data (image), which offers an extended range (color-scale) for a pixel, this can be solved easily by maintaining the pixel value within a specific range. In contrast, the fidelity requirement stands as a crucial issue in GIS vector data context due to their Cartesian coordinates values sensitivity, which if changed will affect the map shape, and, consequently, will have a negative impact on the usability of GIS map.
 be embedded in the host map data. The more watermark bits are embedded, the more secure the watermark becomes. Moreover, it is important not only to have high capacity, but also to have the watermark distributed across the entire map [ 2 ]. This could also leads to a loss of fidelity: the more watermark bits are embedded, the more the host vector map is changed, thus, leading to a loss of map quality. Consequently, the fidelity and capacity requirements need to be balanced to achieve both map quality and watermark quality, in order to ensure the effectiveness of the watermarking method. We refer to this relation between fidelity and capacity as a trade-off, given that an increase in one leads to a decrease in the other, and vice versa.
 withstand malicious modifications to the host GIS map, called attacks. There are many types of attacks [ 31 ], of which geometric modifications are particularly important for GIS vector data; such modification processes are rotation, trans-lation and scaling. Rotation means turning the vector map around its center by a specific angle [ 16 ]. Translation means moving the whole map by a specific distance towards a specific direction [ 29 ]. Scaling refers to altering the size of the map, in both axes by a specific value [ 16 ]. Other relevant types of attacks are interpolation [ 26 ] and simplification [ 14 ] attacks. Simplification attacks refer to the process of removing vertices from the map [ 14 ], while interpolation attacks refer to the process of adding new vertices in the map [ 26 ].
 vector data are reviewed in relation to the trade-off between fidelity and capacity. watermark into GIS vector data of point geometry type. The evaluation of the watermark robustness was measured by the similarity degree between the extracted watermark and the original watermark. However, this algorithm lacks the consideration of both capacity and fidelity measurements, which have crucial implications on the security and usability of the digital map.
 Jianguo et al. [ 14 ] used fuzzy spatial clustering analysis for embedding a binary watermark into GIS vector data, and applying some optimization rules for selecting the watermark locations based on the coordinates X  values and their associated attributes, which led to high fidelity, but low capacity. Lee and Kwon [ 17 ] presented an approach for watermarking CAD (computer-aided design) drawing by using the k-means++ clustering method. CAD draw-ings share the vector structure format with GIS vector data. In terms of speed and accuracy, the k-means++ method outperforms the standard k-means in the way of selecting the initial centers. In this approach, however, only a small num-ber of watermark bits can be embedded into the host data, thus leading to low capacity.
 Huo et al. [ 12 ] used a k-means partitioning clustering method for inserting a watermark into GIS vector data, based on ESRI shapefile format, according to the polygons X  mean centers. Although their fidelity achievement is considerably high, the capacity of the watermark was relatively low for the size of the map they used. Therefore, their approach, like the previous ones, does not achieve a good trade-off between fidelity and capacity.
 All previously mentioned approaches have three limitations: (a) low capacity, which leads to vulnerability to simplification and interpolation attacks; (b) lack of balance between the fidelity and capacity requirements, which has an impact on the map usability and security, and (c) experimentation with small maps, i.e. with small number of polygons, which questions the ability of the proposed approaches to deal with the higher computational complexity brought by bigger maps; as data nowadays is increasing in size, there is a need to demonstrate that the proposed approaches can deal with bigger maps.
 To address the trade-off issue, our previous work [ 2 ] introduced the use of k-medoids-based partition clustering for embedding watermark bits into three digital GIS vector maps of 27, 53 and 132 polygons, and using mean polygons X  centers for locating the optimum position to embed watermark bits into the digital map; the aim was mainly to improve the approach of Huo et al. [ 12 ]. Although our approach achieved a considerable improvement in terms of the balance between capacity and fidelity, like the other approaches, it is still vul-nerable to simplification and interpolation attacks, and has not been shown to work on larger maps.
 In this paper, we build on our previous work to address the vulnerability to simplification and interpolation attacks and to show that the proposed approach is feasible for larger maps. Thus, we argue that using a particular property of vector data called a bounding box in combination with our k-medoids approach, addresses the vulnerability to the two mentioned attacks, while also preserving a good trade-off between fidelity and capacity.
 This section describes the GIS vector data that has been used for testing the proposed approach. As shown in Fig. ( 2a ), ( 2b ) and ( 2c ), the used GIS maps are polygon-based maps that represent administrative boundaries of 3 countries in Africa: Benin, Angola and Burkina Faso. These GIS vector maps are freely available, in ESRI shapefile format, from the Natural Earth website. format for geographic information system applications [ 18 ]. It has several promi-nent features: small storage space, easy reading and writing, fast shape editing, storing both spatial and attribute information, and supporting point, polyline and polygon geometry types [ 7 ]. [ 24 ], [ 12 ], the advantage of the shape bounding box feature in the shapefile header has not yet been exploited in this context. As shown in Fig. 3 , the bounding box properties we are interested in are the minimum and maximum coordinates X  values in both horizontal and vertical axes.
 our approach in MATLAB version R2013b (8.2.0.701). For more information regarding MATLAB, see the Mathworks website 4 .
 and using the bounding box information in the ESRI shapefile. We compare the results of this approach with our previous work [ 2 ], which used k-medoids cluster-ing with mean polygon centers, to establish the role of the bounding box property in addressing the vulnerability to simplification and interpolation attacks, and to investigate if the trade-off between fidelity and capacity is preserved. This section presents our approach following the three stages outlined earlier in Fig. 1 : embedding (Section 4.1 ), attack (Section 4.2 ) and extraction (Section 4.3 ). 4.1 Embedding Stage The embedding approach, as illustrated in Fig. 4 , consists of several steps. First, the locations for inserting the watermark are identified by computing the poly-gon X  X  centers using the bounding box information for each polygon, and then applying k-medoids to cluster the computed centers. The number of clusters establishes in how many polygons the watermark will be inserted. We exper-imented with three different proportions of numbers of polygons in the vector map, i.e. 25%, 33% and 50%. After identifying the locations for watermark inser-tion, the mean distance length is calculated for the selected polygons and the watermark is inserted into the means distance length by utilizing an odd-even indexing rule.
 Embedding Location Identification The approaches given by our previous work [ 2 ]andHuoetal.[ 12 ] calculate polygons X  centers by summing up all vertices coordinates, in both axes, for each polygon and dividing the sum by the number of vertices minus one; the minus one is due to the the last vertex coordinates being the same as for the first vertex, according to the polygon shapefile format [ 7 ].
 ing polygons X  centers. Bounding boxes refer to the stored values that represent the extent of the geometry shape in the shape file [ 7 ]. Polygons X  bounding box centers are calculated in both axes, as shown in Equation( 1 ) and Equation( 2 ), respectively. where: x c and y c are the coordinates of polygon X  X  center in both x and y axes respectively; x min is the minimum vertex coordinate in x-axis; imum vertex coordinate in x-axis; y min is the minimum vertex coordinate in y-axis; y max is the maximum vertex coordinate in y-axis. y max are each of 8-byte length [ 7 ].
 robustness to outliers and the fact that the medoids (representative objects) of clusters are represented by actual points in the dataset [ 9 ], [ 10 ], unlike other methods, such as k-means, where the representative objects of clusters are arti-ficial points which are not present in the dateset [ 12 ]. Therefore, the k-medoids approach can efficiently manage most forms of GIS Vector data.
 Around Medoids), as shown in Algorithm 1 , to cluster the bounding box cen-ters in order to determine the best positions for embedding the watermark. The PAM method assigns seeds, i.e initial representative objects, for the given poly-gons X  centers. These seeds are replaced by other representative objects, called medoids, through a number of iterations until the resulting medoids can not be improved or changed. Polygons X  centers are clustered into resulting medoids are kept as a secret key ( key 1). The polygons corresponding to the medoids resulted from clustering are then used for watermark insertion. Algorithm 1. k -medoids method for GIS vector data clustering Watermark Insertion The concept of zero watermarking [ 27 ] is utilized in our proposed watermark embedding process. Zero watermarking aims to exploit some of the host GIS data characteristics in order to generate a more robust watermark. In this case, the topological characteristic of the host GIS data that is used, is the mean-distance length of polygons. This is calculated for the polygons identified through the clustering process.
 The watermark is constructed by adding or subtracting a bit value of 1 from the mean-distance length of polygons. The mean-distance length of each polygon is defined by the average value of distance lengths from that polygon X  X  vertices to its center [ 12 ], [ 29 ], where the center is calculated as described in Equation( 1 ) and Equation( 2 ). This is illustrated in Fig. 5 , while Equation( 3 ) demonstrates the way of calculating the mean-distance length of selected polygons. where: L c is the mean distance length; n is the number of vertices in a polygon; x c and y c are the center coordinates in x and y axes, respectively; the vertex coordinates in x and y axes, respectively.
 they represent the selective positions for embedding the watermark. These are based on the polygons whose bounding box centers were selected as final medoids by the k-medoids clustering method. The watermark is embedded by applying odd-even indexing [ 12 ], [ 3 ], as outlined in Equation ( 4 ).
 where: W i is the i th bit value of the watermark; OES stands for Odd-Even Status; I is the order index of the mean-distance length value in the matrix; is the value of the 4th digit of the mean-distance length value, after the decimal point [ 12 ].
 using an additional random sequence proposed by [ 12 ], to get more consistent positions for embedding the watermark. This consistency sums up both: (a) the indexing as a vital role in the clustering process, and (b) maintaining the security of the watermark position by storing the index values as a key instead of utilizing a random sequence that is not relevant to the used data. This also offers the ability to control the watermark capacity in order to preserve the map fidelity, whereas the use of a random sequence [ 12 ] will limit that choice of control.
 OES (Odd-Even Status) of the I and T variables. The conditions are set based on two scenarios as in the following:  X  If the OES of I is odd, 1 will be subtracted from the value of  X  In contrast, if the OES of I is even, 1 will be added to the value of distance length will be represented by L  X  c . The indexes of new mean-distance length values are stored as another secret key ( key 3), to secure the positions in which the watermark is embedded. The change rate  X  c is calculated as depicted in Equation ( 5 ): through clustering on the basis of the embedding condition, as given in equations 6 and 7 : where: v  X  x and v  X  y are the new vertices X  coordinates after embedding the water-mark according to the aforementioned condition in Equation ( 4 ). 4.2 Attack Stage Robustness reflects the watermark X  X  resistance to a set of attacks or modifi-cations. This paper addresses geometric attacks such as rotation, translation and scaling due to their relevance to the geometrical properties of polygons in the GIS vector maps context. Also other relevant attacks such as simplification, interpolation and tracing the positions of watermark bits are taken into account. 1. Rotation Attack: rotation means turning the vector map around its center by a specific angle [ 16 ]. Rotation is of crucial importance because it changes spatial locations of the vector map points. In our approach this problem is tackled by using the mean distance length which is known for its resilience to the rotation process [ 2 ], [ 12 ]. 2. Translation Attack: translation means moving the whole map by a specific distance towards a specific direction [ 29 ]. Translation also has the property of changing the positions of vector map points, but has no effect on the mean distance length because the distances between the vector map points will remain unchanged [ 2 ], [ 12 ]. 3. Scaling Attack: the scaling attack refers to altering the size of the map, in both axes by a specific value [ 16 ]. Although the scaling attack could change the distances between the vector map points, the scaling factor could be computed by dividing the mean-distance values of the scaled map by the mean-distance values of the original map [ 2 ], [ 12 ]. Consequently, the scaled map can be easily retrieved to its original form after it undergoes the scaling attack. 4. Simplification Attack: the simplification attack refers to the process of remov-ing vertices from the map [ 14 ]. If the polygons X  centers are calculated as the average of the vertices, removing some vertices, will change that average.
The bounding box centers, however, are not affected by the number of ver-tices in a polygon; consequently, our approach has more robustness to the simplification attack. 5. Interpolation Attack: the interpolation attack refers to the process of adding new vertices to map X  X  borders [ 26 ]. Similary to the simplification attack, when the centers of polygons are calculated by averaging the vertices, adding more vertices will change that average. As the bounding box is independent of the number of vertices in a polygon, out approach will lead to more robust-ness to interpolation attacks. 6. Tracing watermark bits positions: the positions of the embedded watermark are secured by using a set of three different keys, which are kept secret from the attackers, and stored for the use in the extraction stage. These keys are: (a) the values of computed clusters X  centers, (b) the values of mean-distance lengths and (c) the indexes of the new mean-distance values.
 4.3 Extraction Stage In the literature, the extraction stage is classified into three categories: blind, semi-blind and non-blind approaches [ 1 ]. In the blind approach the original map is not needed in the watermark extraction stage. Semi-blind extraction refers to the case in which the original watermark is used instead of the original map in the watermark extraction stage. Non-blind extraction means that the original map is needed in the watermark extraction stage.
 which means that both the watermark embedding and the watermark extraction processes are quite similar. The keys stored in the embedding process are used in the process of extraction. Firstly, the bounding box center of each polygon is recalculated, and then the polygons X  centers are divided into the k-medoids method, in order to compare with the stored The assumption here is that the attacker will not change the bounding box information, which identifies the boundaries of the whole map, as well as each polygon in the map, because such a change will destroy the map X  X  quality and usability. In the next step, the mean-distance length for the watermarked map is calculated in the same way as in the embedding process. By comparing the computed mean-distance to the stored key 2and key 3 (Section 4.1 ), it becomes easy to extract the watermark bits (1 or -1), and restore the original map even when the watermarked GIS vector map has undergone the attacks mentioned in Section 4.2 . A set of experiments was implemented to assess the balance between fidelity and capacity achieved by our proposed approach. These experiments are carried out on GIS vector maps of 222, 501 and 1046 polygons, as shown in Fig. ( 2a ), ( 2b ) and ( 2c ). The capacity and fidelity results are displayed in Table 1 . and reflects its degree of invisibility. This metric is significant because it has two crucial effects in the context of GIS vector data: one on the map shape, and another, consequently, on the usability of the GIS vector map. Fidelity is measured by using PSNR (Peak Signal to Noise Ratio), in decibels [ 12 ]; there is no specific range for PSNR values but a higher PSNR would normally indicate that the data is of higher quality [ 13 ]. Typical values are considered to be between 30 and 50 dB, in the context of digital images [ 8 ]. In order to use this metric, we stored the watermarked GIS vector maps in JPEG image format (jpg) for the measurement purpose.
 importance of the watermark capacity is specified by its vital implication on increasing the watermark robustness to cropping attacks. Cropping is the process of cutting some parts of the watermarked GIS vector map [ 30 ]. Consequently, it is important not only to have high capacity, but also to have the watermark distributed across the entire map [ 2 ], to avoid having areas of the map with no watermark, which can be then cut off and used without being able to identify ownership. In our approach, the distribution across the map is achieved through the clustering process.
 Table 1 compares the results of our approach described in this paper, using the bounding box centers, with the results of our previous work [ 2 ], using poly-gons X  mean centers, to investigate how the performance of the two approaches compare in terms of the trade-off between fidelity and capacity.
 There are two considerable differences between our approach and the previous one [ 2 ]. The first difference is in the way of calculating the polygons X  centers, i.e. using the bounding box as explained in Section 4.1 versus using the mean of vertices coordinates in our previous approach [ 2 ]. Consequently, the given results can be attributed to the use of the bounding box properties. The second difference is the use of GIS vector maps that contain large numbers of polygons in contrary to [ 2 ], which was tested only on small number of polygons (27, 53 and 132 polygons). This should indicate if the approach is suitable for maps with large number of polygons.
 As shown in Table 1 , the trade-off between fidelity and capacity is balanced by increasing the watermark capacity (number of vertices) while keeping higher watermark invisibility (PSNR). Three different proportions of map size, i.e. 25%, 33% and 50%, were used to observe the effect of increased capacity and its effect on fidelity. These proportions represent approximately a quarter, a third and (exactly) half of the number of polygons in the used maps.
 The relation between the map size proportions and the number of clusters is illustrated in the following for each of the three maps used in the experiments. Thus, for the map of Benin, 25%, 33% and 50% corresponds to 56, 74 and 111 clusters, respectively; for the map of Angola, 25%, 33% and 50% corresponds to 126, 167 and 251 clusters, respectively; and for the map of South Africa, 25%, 33% and 50% corresponds to 262, 349 and 523 clusters, respectively. This shows that our approach is valid for GIS maps that contain large numbers of polygons. notice that the capacity values for the approach proposed in this paper (bounding box-based k-medoids), i.e. 1428, 4334 and 15630, are higher than those from our previous approach [ 2 ], i.e. 1321, 4118 and 15350. At the same time, it is noticeable that the fidelity values are also higher than the approach of [ 2 ], despite the increase in capacity. The same can be observed for the 33% and 50% sizes on all three maps.
 bounding box centers is that it does not depend on the number of vertices in a polygon, which has an advantages of more robustness to the interpolation and simplification attacks. Therefore, the approach proposed in this paper improves our previous approach [ 2 ] by achieving robustness to simplification and inter-polation attacks, while also increasing the fidelity and capacity metrics, and, at the same time, preserving the balance between the two metrics. The influence of using the bounding box properties for protecting the copyright of GIS vector data was investigated in this paper. We introduced the use of bounding box centers in the context of watermarking research, and compared our approach with previous work [ 2 ].
 aspects: fidelity and capacity. The experimental results show that the use of the bounding box centers has a significant implication on the trade-off between the fidelity and the capacity metrics, and resulted in higher fidelity as capacity increased.
 the use of bounding box centers adds more robustness to the simplification and interpolation attacks due to their independence from the number of vertices in a polygon. By using vector maps with large numbers of polygons, the approach has been shown to be feasible for large maps.
 work in this area, including our previous work [ 2 ], which is an improved work of the approach by Huo et al. [ 12 ]. This metric, however, is used in image water-marking and is not necessarily the best metric for GIS vector data [ 22 ], as it does not exploit the properties of vector data. As there is no current alternative for measuring fidelity, in future work, we will investigate different metrics that would be more suitable for vector map data.
 set of initial representatives for our k-medoids-based watermarking approach to achieve more predictability and efficiency, to eliminate the randomness involved in the initial selection of the centers involved in the typical PAM-based k-medoids method [ 2 ]. Also, we will experiment with other clustering approaches proposed in the literature, such as grid-based and density-based approaches, to explore the capability of different cluster analysis tools in the research context of GIS vector map data copyright protection.
