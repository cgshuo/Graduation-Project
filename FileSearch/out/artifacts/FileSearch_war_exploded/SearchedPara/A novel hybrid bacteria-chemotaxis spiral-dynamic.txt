 fl exible systems. 1. Introduction
This section presents a general overview of metaheuristic algorithms and a general description of the two types of meta-heuristic algorithms, including their characteristic features con-sidered in this study. Moreover, a brief description of two types of fl exible systems and their status in the current research in the context of modelling and controller design is given. Finally, an overview of the application of various types of optimisation algorithms in modelling of fl exible systems is presented. 1.1. Flexible systems
The research on fl exible systems is increasingly gaining attention from researchers worldwide. The application of such system can be extensively found in various sectors such as in robotics ( Gharooni advantages they offer compared to their rigid body counterparts. Two types of commonly used fl exible manoeuvring system, namely robot manipulator and twin rotor system (TRS) are considered in this work.

Flexible robot manipulators are used in the manufacturing industry considered in this work. This is a single-input multi-output system fl exible beam joining the rigid body and payload produces vibrational motion at the end point of the system. The natural vibrational mobility, consumes less power, is less expensive, operates cost-ef fi ciently, has higher payload to robot weight ratio and offers more safety to the user ( Ostergaard (2012); Tokhi et al., 2000 ).
The TRS used in this work is a laboratory scale fl exible manoeuvring system, which mimics a real helicopter in hovering mode. In real world, the application of such a system is mostly which requires less space compared to fi xed wing aircraft, rotate et al., 2012 ). The body construction of the system is very unique and complex. It has vertical and horizontal channels to initiate motion in vertical and horizontal directions respectively. More-over, interaction between both channels introduces coupling effect and hence produces nonlinearity in its dynamic behaviour. While in hovering mode, motion-induced oscillation causes the system to fl uctuate and lose stability. Therefore, an ef fi cient control system is required to operate the system effectively. Modelling and control of fl exible systems are challenging tasks. Their vibrational behaviour and nonlinear characteristics make the modelling of such systems a challenge and lead to very complex mathematical models. Through conventional modelling approaches suchaspartialdifferentialequation( Azad, 1994 ), fi nite-difference, fi nite-element methods ( Tokhi and Azad, 1995; Tokhi and Mohamed, 1999 ), to get a very precise model, many parameters should be taken into account and in many cases, certain assumptions have to be made to simplify the derivation of equation of motion, thus reducing the accuracy of the derived model. From a model-based control point of view,anaccuratemodelofthesystemisverycrucialsincethe model of the fl exible system based on input  X  output data from the computing technology make this method easy to implement, reliable and more importantly can result in highly accurate models. Linear parametric approach is one of various techniques in system identi tion to estimate a linear model of a system ( Ljung, 1999 ). In this method, a set of unknown parameters in a prede fi ned structure must is represented by a transfer function or a set of coef fi of identi fi cation for unknown parameters of a dynamic model of a system in linear parametric modelling can be easily realised using metaheuristic algorithms. 1.2. Overview of the application of optimisation algorithms to modelling of fl exible systems
The application of various optimisation algorithms to optimally determine dynamic model of prede fi ned linear and non-linear has been extensively found in the literature. This section gives an overview of the application of the algorithm in the modelling of the fl exible robot manipulator and the TRS.

Rovner and Cannon (1987) and Fujimori et al. (1995) employed recursive least squares (RLS) to optimise the dynamic model of a fl exible manipulator system. Yurkovich et al. (1990) proposed an exponential data weighted RLS in comparison to original RLS algorithm to optimise autoregressive-moving-average (ARMA) model. Shaheed and Tokhi (2002) conducted a study comparing least mean squares (LMS), RLS and genetic algorithm (GA) to optimise parameters of an autoregressive-moving-average model with exogenous inputs (ARMAX) model of fl exible manipulator. It was shown that the GA could produce better results than the
LMS but it needed more time to complete the whole optimisation process compared to the other two contestants. Liu and Sun (2001) applied observability range space extraction algorithm to optimise a dynamic model for a single link fl exible manipulator. Alam and
Tokhi (2007a) employed particle swarm optimisation (PSO) to optimise the parameters of an ARMA model structure of the fl exible manipulator. Md. Zain et al. (2009a,b) carried out com-parative assessment of RLS, GA and hybrid GA  X  RLS in the optimi-sation of ARMA model of a fl exible manipulator. The results show that the hybrid type algorithm produced better dynamic model compared to the original algorithms but at the expense of longer computation time. Supriyono and Tokhi (2012) employed adaptive and original bacterial foraging algorithm (BFA) to optimise auto-regressive with exogenous inputs (ARX) dynamic model of struc-ture of the fl exible manipulator. The results indicated that the adaptive approach produced more adequate dynamic model for the system but the total computation time for the optimisation process was similar. Yatim et al. (2012) performed a study comparing conventional least square and GA to optimise a line-arised model of single link manipulator system which was devel-oped based on fi nite difference method. It was found that the conventional least square predicted better model for a linearised system. In another work, the authors compared the PSO with
RLS to optimise the same system and it was found that the PSO performed better than the conventional RLS algorithm ( Yatim et al., 2013 ).

For the TRS, on the other hand, the utilisation of the system identi fi cation toolbox of Matlab to optimise an ARMAX model was presented by Ahmad et al. (2001) . Aldebrez et al. (2004) employed
RLS algorithm to optimise a multi-layer perceptron neural net-work model. Mat Darus et al. (2004) conducted a study on comparing the performances of GA and conventional RLS to optimise an ARMAX model and it was found that the GA predicted better model as compared to the RLS. Alam and Tokhi (2007b) performed a comparative assessment of GA and PSO to approx-imate a linear model for one and two degrees-of-freedom (DOF)
TRS. The results showed that the PSO had better accuracy and shorter computation time than the GA. Subudhi and Jena (2009) hybridised the GA, PSO and differential evolutionary (DE) algo-rithm with back-propagation (BP) algorithm to optimise a neural network model for one DOF around a pitch axis and the hybrid DE was found with fastest convergence speed. A comparative study was performed by Toha and Tokhi (2010) where the RLS, real-coded GA and PSO with spread-factor were used to determine parameters of ARMA model. The results indicated that the PSO with spread-factor outperformed the other two algorithms. Omar et al. (2011) applied the hybrid RLS  X  BP to optimise an adaptive neuro-fuzzy model for the twin-rotor motion in the vertical plane or pitch motion. Toha et al. (2012) employed ant colony algorithm to optimise ARX model of the TRS and the results showed that the estimated model was adequate to represent system. It is noted from the above that the performance of metaheuristic algorithm in dealing with the modelling issue of a real system is better than the heuristic or other conventional type algorithms. 1.3. Metaheuristic algorithms
Metaheuristic algorithms play an important role and are considered as ef fi cient optimisation tools in solving real world
A metaheuristic algorithm is a higher level optimisation algorithm comprising a heuristic approach and iterative process in which the strategy is generally inspired from natural phenomena. Alter-natively, metaheuristic can be de fi ned as a process that is iteratively generated to guide a subordinate heuristic by combin-ing intelligently various techniques for globally exploring and locally exploiting a search area and utilising learning strategies to structure information in order to ef fi ciently fi nd an optimum solution ( Osman and Laporte, 1996 ). The ease of implementation, ability to solve real world problems in various applications and the capability of producing an optimum and a reliable solution are the advantages and among the reasons they have been continuously received attention from researchers around the world. BFA is a popular and well-known metaheuristic type algorithm while spiral dynamics algorithm (SDA) is a newly developed metaheur-istic algorithm that has similar advantages and potential to solve real world problems ef fi ciently. Nevertheless, these two algo-rithms have limitations and drawbacks which are discussed in the following subsections. 1.3.1. Bacterial foraging algorithm
BFA is a metaheuristic algorithm introduced by Passino (2002) and it was developed based on the adaptation of foraging strategy of living micro-organism in human intestines, namely Escherichia
Coli bacteria. The algorithm consists of three main phases, namely chemotaxis, reproduction, and elimination-dispersal.

From optimisation algorithm point of view, chemotaxis is the most important phase in BFA and it contains a very important parameter that determines the performance of the algorithm both in terms of convergence speed and accuracy. This is the step size of a bacterium to move from one place to another and is represented as C .De fi ning a small value for the step size may lead to high accuracy as the bacterium can reach all the points within the search space. However, the drawback of this strategy is that the bacterium needs more steps to reach a target point and this may lead to slower convergence as well as higher computation time.
On the contrary, a large value of C may expedite the convergence speed since the bacterium will move with a large step size and it will need fewer steps to reach a goal point. But, this limits the movement of a bacterium within the search space and the bacterium may not reach the optimum location at all if it is located in a remote area. Moreover, this may introduce oscillation (back and forth movement) about the optimum point. Thus, in the bacteria chemotaxis good exploration is associated with large step size and good exploitation is associated with small step size. Hence, a fi xed step size creates imbalance between the exploration and exploitation, and this affects the performance of the algorithm.

Reproduction and elimination-dispersal phases are the second and third phases of BFA respectively. All the three processes are continuous and they are repeated until the end of bacteria life.
Overall, the BFA is a very effective way to search for global best solution. However, it is relatively complex, has slower convergence and more computation time might be needed to complete the whole search operation. Since the introduction of BFA, many successful applications of the original and modi fi ed versions of BFA to solve real world problems have been reported.

Generally, the modi fi cations of BFA are made through adaptive or hybrid approaches. The adaptive approach involves variation of bacteria step size based on fi tness cost, index of iteration or combination of both ( Dasgupta et al., 2009; Majhi et al., 2009 ).
Apart from mathematical relationship, the adaptation of bacteria step size can be realised through an intelligent approach ( Mishra, 2005; Venkaiah and Vinod Kumar, 2011 ). Synergising BFA with other metaheuristic algorithms is another effective approach to improve the algorithm performance. This technique is gaining attention from researchers worldwide as the strengths or unique properties of two or more algorithms can be combined to complement one another, and thus reduce/eliminate the short-comings of the original algorithms. Some of the existing BFA hybrid techniques include BFA  X  PSO ( Biswas et al., 2007a ,BFA ( Panigrahi and Ravikumar, 2008 ), BFA  X  biogeography based algo-
BFA-bee colony ( Zhong et al., 2011 ). 1.3.2. Spiral dynamics algorithm SDA is a metaheuristic algorithm introduced by Tamura and
Yasuda (2011a) and it is inspired from spiral phenomena in nature such as spiral of galaxy, hurricanes and tornados, geometry of nautilus shell, shape of human fi ngerprint, etc. The unique property of SDA is that it contains a very powerful spiral model, which forms a spiral motion trajectory for search agents in a search space for both exploration and exploitation strategies. The model causes all the agents to be diversi fi ed and intensi initial and fi nal phases of the search operation respectively. The diversi fi cation represents exploration of an optimal solution in a wider space with a large step size while the intensi fi cation represents exploitation strategy to search for a highly accurate solution in a remote location with smaller step size. Moreover, with the presence of spiral model, the step size of agents can be steadily controlled and dynamically varied throughout the search operation. Moreover, the motion of all agents is always guided towards the best optimum location found in that particular fast and smooth convergence behaviour, less computation time, as well as good accuracy, and thus the potential of solving real world problems. The performance of SDA particularly on the conver-gence speed and fi tness accuracy is mostly determined by two important constant parameters of spiral model namely spiral radius, r and angular displacement,  X  . Selection of suitable values and  X  may increase the convergence speed but it may also trap the agents to local optima and vice versa. These two parameters also cause all the agents to have constantly varying step size through-out the operation regardless of their distance from optimum location. In other words, the convergence rate for all agents towards the best location is uniform. This may also limit the movement of the agents within the search area hence may potentially lead them to get trapped into local optima. The problem may be solved by introducing an effective way of varying r and  X  or improving the exploration by adopting a strategy from other metaheuristic algorithms.

A study on performance comparison between the SDA and other well-known metaheuristic algorithms was conducted by Tamura and Yasuda (2011b) and it was found that the SDA has better performance compared to PSO and showed competitive result compared to DE. In the literature, there are several techni-ques proposed by researchers to improve the performance of SDA. Some of these have successfully employed the improved SDA to solve real world problems. Nasir et al. (2012a) have proposed hybrid spiral-dynamics bacteria-chemotaxis (HSDBC) in which a chemotaxis scheme of bacteria is incorporated into SDA to enhance the exploration strategy. The bacteria motion is designed such that they tumble and swim in a spiral form with the same or different value of spiral radius or angular displacement. Nasir and Tokhi (2013a) made a further study on the algorithm, replacing the spiral chemotaxis scheme to random tumble and swim approach. Moreover, to avoid oscillation in the convergence and to achieve optimum solution, the authors introduced the best fi tness and the best optimum location terms in the chemotaxis phase. Nasir et al. (2012c) proposed adaptive versions of SDA where the spiral radius or angular displacement was made adaptive with fi tness cost through linear and nonlinear mathematical formulations as well as fuzzy logic based relationships. Nasir et al. (2012b) further proposed a hybrid SDA approach namely hybrid spiral-dynamic bacteria-foraging (HSDBF), which synergised chemotaxis phase of bacteria through spiral tumble and swim with HSDBC algorithm to balance between the exploration and exploitation strategies. However, the algorithm was limited to low dimension problems only. The HSDBF implements a spiral approach in both tumble and swim for the exploration phase, followed by HSDBC for the exploitation phase. A deterministic approach is applied in both exploration and exploitation phases where in both phases the motion of bacteria is guided by the fi ttest bacteria in that particular iteration. More importantly, in the exploration phase of the HSDBF, it is hard to determine the bacteria motion if their next position is not a nutrient rich location and for higher dimensional problems, the algorithm may possibly fail to converge to a global optimum solution.

This paper presents a novel hybrid bacteria-chemotaxis spiral-dynamic (HBCSD) algorithm, where a BFA is synergised with SDA with the aim to improve the performance mainly on the accuracy and the convergence speed as well as to eliminate the drawbacks of its original constituent algorithms. The algorithm was initially et al., 2013b ), and this paper provides a more comprehensive study of the algorithm with application to dynamic modelling of two types of fl exible systems with different dynamic behaviours and complexity. The rest of the paper is organised as follows: The experimental rigs used in this work are described in Section 2 .
Section 3 describes the proposed hybrid algorithm. Section 4 presents application of the HBCSD to optimise parameters of high order ARX models, one for each of the highly nonlinear fl systems. Results and discussion are presented in Section 5 , and the main conclusions of the paper are drawn in Section 6 . 2. The experimental rigs
Two types of fl exible systems that have different dynamic behaviours are considered in this work. The fi rst system is a fl exible robot manipulator and the second is a TRS, which replicates the behaviour of a helicopter in a laboratory setting. 2.1. Flexible manipulator system A schematic diagram of the fl exible manipulator is shown in
Fig. 1 (a) ( Azad, 1994 ). The system consists of a single made of aluminium beam and attached to an electromechanical motor. A U9M4AT type printed circuit board with bi-directional drive ampli fi er is used to rotate the motor shaft in both counter-clockwise and clockwise directions. As there are three outputs of interest to be gauged from the system, three different sensor units are attached to the body of system. An accelerometer is placed at the tip (end-point) of the beam and used to measure end-point acceleration while an encoder with a resolution of 2048 pulses/ revolution and a tachometer are attached to motor shaft and used to measure hub-angle and hub-velocity respectively. Moreover, a personal computer (PC) embedded with Pentium Celeron 500 MHz processor is connected with PCL818G interfacing unit to the fl exible manipulator system. Matlab/Simulink software installed in the PC is used as a tool for controlling and manipula-tion of the system. The physical parameters of the beam such as length, l width, w and thickness, h are 960 mm, 19.008 mm and 3.2004 mm respectively, the Young modulus, E  X  71 10 9 , the second moment of inertia, I b  X  0.04862 kg-m 2 , mass-density/ volume,  X   X  2710 kg-m -3 and hub inertia, I h  X  5.86 10 4 2.2. Twin rotor system
The laboratory-scale TRS designed by Feedback Instrument Ltd. is used in this work ( Feedback, 1996 ). A schematic diagram of TRS and tail rotor at both ends of horizontal beam pivoted on a base of the system. The main rotor blade rotates about yaw-axis while the tail rotor blade rotates about pitch-axis causing the system to move in vertical and horizontal directions respectively. The ible motion due to unbalanced mass distribution on the system produces vibration while the system is in operation. Moreover, due the vertical and horizontal directions. In the experimental work for the TRS, a random signal that is equivalent to electrical motor voltage is separately on the vertical and horizontal axes. The main the main rotor drives the vertical movement of the system about pitch axis while the tail rotor drives the horizontal movement about yaw axis. In this information processing stage, the move-ment of the beam that holds the main and tail rotors about pitch and yaw axes is kept limitless. This is to ensure all dynamic behaviour of the system can be acquired at the maximum range. In this system, dynamic coupling effect of the vertical input to the horizontal output and coupling effect of the horizontal input to the vertical output must be taken into account. The literature shows that there is interaction between vertical input to the horizontal output but very small interaction between horizontal input to the vertical output and this is thus negligible ( Ahmad et al., 2001 ). 3. The proposed HBCSD algorithm
In order to ef fi ciently apply the BFA and SDA to solve real world problems, a novel strategy hybridising between the two algo-rithms is proposed in this section. In the proposed HBCSD algo-rithm, BFA and SDA are combined so as to balance the exploration and exploitation parts of the constituent algorithms. This algo-rithm is designed such that bacteria chemotaxis phase represents an exploration part while the SDA represents the exploitation part in the search operation.

Bacteria chemotaxis phase that consists of random tumble and swim actions is de fi ned with large step size and must be placed in the fi rst part of the algorithm. This is to ensure the bacteria can cover the search area thoroughly and also to expedite the algo-rithm convergence as bacteria tumble and swim with a large step. In this part, bacteria step size, C and total number of chemotaxis N are two important and crucial parameters that must be determined by the user. They must be de fi ned such that the bacteria should have enough time to cover the whole search area and to reach the optimum point in the exploration stage. In other the exploration part is terminated when the convergence just reaches optimum value or starts to oscillate at the same location be too large so that to ensure the algorithm can converge to an optimum location in the exploration phase. The numerical value of both parameters may be different for different problems. At the end of exploration part, the local best location found by each bacterium is then stored and is used as the initial position of each bacterium in the second part of the algorithm. In the proposed
HBCSD, the reproduction and elimination-dispersal phases of BFA are excluded as these will simplify the algorithm and reduce the total computation time of the algorithm. Nevertheless, they are replaced by another promising and effective approach that com-plements the exploration process performed through the chemo-taxis strategy.

The second part of the HBCSD is exploitation part where at this stage, bacteria motion is done based on spiral model in SDA and guided by a global optimum point found in that particular iteration. The search operation of this part focuses on both global and local operations. This is because at the initial phase of spiral motion, the bacteria move diversely with a large step size towards a global optimum point while at the fi nal phase of the spiral motion, bacteria move with a smaller step size to converge towards global optimum location. Moreover, the diversi fi very important as the bacteria may fi nd any better position along the way to the global optimum point in a wider space rather than simply move directly towards the goal point. It is worth noting
Therefore, in HBCSD, the centre point of spiral model is considered as global optimum location after exhaustive search done by chemotactic strategy rather than simply picking up randomly from a search area. Since the step size is dynamically varied as the iteration progresses, the bacteria can easily reach any remote area or location that cannot be reached during exploration. It also may eliminate the oscillation problem that arises when a large value of C is de fi ned in the exploration part.

Moreover, to make the search operation more ef fi cient, the spiral radius and angular displacement of the spiral model are adaptively de fi ned based on linear relationship with respect to fi tness of each bacterium. Incorporation of this approach into the spiral model can help to improve the algorithm performance in terms of convergence speed and fi tness accuracy. The mathema-tical formulation for the linearly adaptive relationship is de r  X  r l r u  X  X  = 1  X  c 1 where r la is linear adaptive spiral radius,  X  la is linear adaptive angular displacement, c 1 and c 2 are positive constants and is absolute fi tness value of a particular point. r u and r maximum radius and minimum radius of spiral path trajectory range [0,1]. Similar formulation for the linear adaptive angular displacement,  X  la is used as in the formulation for the linear adaptive spiral radius r la . The r l and r u can be replaced as  X  respectively within the range [0, 2  X  ].

It is important to note that, in the exploration part of HBCSD, the bacteria move independently of one another in a random manner and they freely determine their own direction. In the exploitation part, bacteria motion is guided toward a goal point in a spiral manner, which is a kind of deterministic approach. Combination of these two approaches may help the algorithm to avoid local optima and have faster convergence speed. The para-meters used in n -dimensional HBCSD algorithm are described in Table 1 and the fl owchart of the algorithm is shown in Fig. 2 .
It is noted that the algorithm consists of exploration part through random tumble and swim action in the fi rst phase and exploitation part, which is performed by SDA in the second phase. In the second phase, all the local best bacteria locations found in the exploitation part. Then, the best location among the optimum locations is set as the centre point of the spiral. Moreover, the adaptive spiral radius and angular displacement are applied in the second phase. 4. Model construction
This section deals with data collected from actual hardware during experimentation for both the fl exible manipulator system and the TRS. Then, modelling and validation of dynamic models for the two systems using the proposed HBCSD and its constituent algorithms, namely SDA and BFA, are discussed in detail. 4.1. Preliminary experimentation
In the case of fl exible manipulator, there are one input and three output responses to be observed. Here, a random signal input is applied to the system and this is represented as electrical motor torque. The amplitude of the torque was considered as 7 0.3 Nm. The measured output responses of the system comprise the hub-angle, hub-velocity and end-point acceleration. However, in this work, the end-point acceleration is chosen as the output response of interest since it dominantly represents the vibrational behaviour of the system. In real world applications, the capability of a controller in dealing with suppressing vibration at the end-implemented to acquire dynamic model of the system from input torque to end-point acceleration output, here referred to as end-point acceleration model. A total of 2300 experimental input-output data was collected to estimate the end-point acceleration model of the fl exible manipulator. The fi rst 1500 data was used in the modelling phase while the remaining unused 800 data was used in the validation phase.

For the TRS, the vibrational behaviour dominantly occurs at chosen as the output of interest. A random signal 7 1.0 radian with a sampling time, T s of 0.1 s or sampling frequency, f was used as input in the vertical channel of the system. A total of 8000 actual input  X  output data was recorded to estimate the vertical channel model of the TRS. The fi rst two-thirds of the data were used in the modelling phase while the remaining data was used to test the validity of the estimated model. 4.2. Model structure formulation
Formulation of the model structure is an essential step in a system identi fi cation procedure since it characterises the dynamic model of a system under study. Choosing the right structure and the best order are keys to the performance for an estimated model and give true description about a system or process. A structure with low order that is too simple may lead to an inaccurate model, while a structure with high order that is too complex may lead to a very complex model. Both cases are not favoured in controller design since inaccurate model formulation clearly leads to poor control performance. On the contrary, determination of optimum parameters for a very complex model with high order is a very dif fi cult task and requires more computing time. Moreover, high computing time might be needed when the model is used in a simulation software to design a controller. Therefore, compro-mises must be made in formulating the right model structure. The unknown parameters of the chosen model can be determined by representing them as coef fi cients in the numerator or denomi-nator of a transfer function. If no prior information and physical description of a system is available, a black-box model approach have been utilised to estimate dynamic model of fl exible manip-ulator and TRS. The latest study by Supriyono and Tokhi (2012) indicates that ARX model, which has a simple structure and relatively low computational cost can offer similar good perfor-mance in case of a fl exible manipulator system. Similar conclusion has been drawn by Toha et al. (2012) with the use of ARX model for the TRS. Considering the performance and computational cost of the optimisation algorithm, in this work, the ARX model structure was determined the best candidate for both the fl manipulator and the TRS. The general mathematical expression of the ARX model structure can be written as ( Ljung, 1999 ) _ y  X  t
 X  X   X  N where a i and b j are the output and input coef fi cients, N the number of coef fi cients for the output and input samples, the noise or disturbance and _ y , y and u are the predicted output, measured output and measured input respectively. Assuming the actual model of the system is very good, then the measured output is highly dependent on the excited input and previous measured output and thus the noise term in the ARX expression can be neglected ( Supriyono and Tokhi, 2012; Toha et al., 2012 ). In discrete transfer function form, the general expression of ARX structure is represented as Y  X  z  X  U  X  z  X  where N is the order of the transfer function and the number of poles present in the system. An accurate and stable dynamic model of a system can be developed by determining the unknown coef fi cients of the denominator and numerator through an opti-misation technique. The error of the optimisation algorithm for the  X 0.1  X 0.05 0.05 0.15 modelling exercise can be regarded as the difference between the actual output and the predicted output, e as e  X  t  X  X  y  X  t  X  _ y  X  t  X  X  4  X 
The error and accuracy have an inverse relationship where if the error value is reduced then the accuracy of the predicted model is improved. Moreover, by performing validation test, the accuracy of the estimated model can be evaluated. In practical terms, the selection of the model structure, order of transfer function and determination of parameters are done iteratively study on the same system, the order of the transfer function for end-point acceleration of fl exible manipulator was found at its best performance when de fi ned as eight. On the other hand, a fi fth-order transfer function was found to be the best for the vertical channel dynamic model of the TRS. 4.3. HBCSD  X  based modelling
The main concern in the modelling part is determination of the unknown parameters a i and b j in the ARX structure de fi previously. The parametric modelling strategy with optimisation employed for both systems is depicted in Fig. 3 .

The _ y  X  t  X  in Fig. 3 is the predicted output while y  X  recorded output-input from the experimental system. The e modelling error and is used in formulating the cost function for the square error with gain function was selected as a minimisation cost with penalty approach is thus de fi ned as: f  X  t  X  X  1 f  X  t  X  X  1 where K is total number of sampled data, e isthedifferencebetween  X 1  X 0.5 0 0.5 1 error is produced. The penalty gain in Eq. (6) can be de fi constant value. In this work, the penalty gain and w have been de as 1 10 9 and 1 10 3 respectively. Incorporating such approach into the optimisation algorithm may lead to extra challenge but a stable 4.4. HBCSD  X  based validation
In general, three types of tests are conducted to evaluate the adequacy of a predicted model to represent the actual system.
Only if the estimated model passes all the tests, then it can be considered as adequate to represent the actual system. However, if it does not pass at least one of the tests, then the modelling exercise must be repeated. (a) Experimental input  X  output data (b) Stability test  X 0.05 Error Magnitude (m / sec / Hz) (c) Correlation test
The correlation test is a popular approach used to test the adequacy or quality of the predicted model. It is regarded as model validity test to identify whether there are any un-modelled linear or non-linear terms in the residual, which normally lead to biased estimates. A linear time-invariant model is considered valid if the following conditions are satis fi ed ( Billings and Voon, 1986 )  X  t
 X  X  E  X   X  t  X   X   X   X  t  X   X   X   X   X   X   X   X 
 X  X  Eu  X  t  X   X   X   X  t  X   X   X  0 ; 8  X   X  7  X   X  t  X  ,  X   X   X   X  is impulse function and  X  sampled input and output signals, the correlation function can be normalised within a range of 7 1. Moreover, the correlation between con fi dence boundary. 5. Results and discussion
This section presents results and associated discussion of dynamic modelling of the fl exible systems. Comparative assessment of the optimisation algorithms under study is presented on the basis of and the convergence speed to reach an optimum point. Moreover, the response of the estimated model in both modelling and validation phases is compared to the actual experimental data to assess how good the acquired model compared to the actual system is. The pole-zero map, correlation plot and frequency-domain plot are also shown to assess the stability, the adequacy and dynamic behaviour of the acquired model. 5.1. Dynamic model identi fi cation for the fl exible manipulator system
This section describes dynamic modelling for end-point accel-points were placed randomly in a high dimension space and they were kept the same for all algorithms as the placement of initial positions affect the performance of the optimisation. This provides similar dif fi culty and equal chances to all algorithms to global optimum point. 5.1.1. Modelling phase for end-point acceleration
Naturally, vibration will occur when an external force is applied on a fl exible structure. In the fl exible manipulator, vibration occurs due to fast motion. This is measured by an accelerometer placed at the end point of the fl exible beam. Previous studies have shown that the fl exible manipulator system response consists of three main dominant modes within 0  X  100 Hz ( Alam and Tokhi, 2007a ).
Thus, to model the end-point acceleration over 0  X  100 Hz, at least three pairs of complex conjugate poles are required resulting in a sixth-order transfer function. However, incorporating the rigid body dynamics of the fl exible manipulator, an eight-order ARX model is considered for end-point acceleration ( Supriyono and for the system can be represented in discrete transfer function form as:
Y  X  z  X 
U  X  z  X 
Therefore, there are 16 unknown parameters to be identi fi using the optimisation algorithms. The number of search points for SDA and number of bacteria for BFA and HBCSD were de fi as 50 while 1000 iterations were considered for SDA and HBCSD.
The optimisation parameters for BFA were de fi ned as N sw
N  X  30, N re  X  6 and N ed  X  6 hence giving 1080 iterations in total for BFA, which is almost similar to the total iterations for SDA and to complete the whole search operation. Moreover, this parameter setup enables the assessment and comparison of the algorithms performance in terms of convergence speed and fi tness accuracy within 1000 iterations can be conducted. Considering both speed and accuracy of BFA, various step sizes of the bacteria were iteratively tested and it has shown the best performance with C  X  0 : 01. On the other hand, after applying various radii and angles through exhaustive test, SDA has shown the best performance performance when the parameters were de fi ned as N sw  X  4, C radius of the HBCSD, the r l , r u , c 1 and c 2 were de fi 0.1 and 0.3 respectively. The step size, C and number of chemo-taxis, N c in HBCSD were selected as 0.01 and 500 respectively to ensure it had at least similar convergence speed compared to BFA during the exploration process and at the same time able to achieve positions with good accuracy prior to the exploitation phase. Then, the rotational angle,  X  must be selected such that it can perform a good exploitation process and able to achieve any dif fi cult position in remote area as fast as possible. Other para-meters in HBCSD were found by trial and error after performing exhaustive tests.

The convergence plots, time-domain and frequency-domain results for end-point acceleration of the fl exible manipulator in themodellingphasethusobtainedaredepictedin Fig. 5 .Notice  X 0.08  X 0.06  X 0.04  X 0.02 0.02 0.04 0.06 0.08 Error Fitness value that at the initial phase, the SDA converged sharply towards better fi tness location, and was faster than the other two algorithms. However, at iteration 700, HBCSD intercepted the
SDA graph and it continuously searched the feasible region and converged to a better fi tness location. On the contrary, at this point, the BFA and SDA gradually settled and trapped at local optima. The numerical results for the convergence plots are presented in Table 2 . Here, the best fi tness value for the whole computation and the speed of convergence at the iteration when the convergence plot intercepts the fi tness value 35 are recorded. The best fi tness value f x  X  22 : 99 was achieved by
HBCSD, followed by SDA and BFA with fi tness values f x  X  and f x  X  35 : 49 respectively. The time-domain plots show that the response with HBCSD followed the actual response better than those with SDA and BFA.

Substituting the optimised parameters into the ARX model structure, the eight-order discrete transfer functions for the predicted end-point acceleration model optimised with a sam-pling period of 0.001 s (sampling frequency of 1000 Hz) are obtained as respectivelywhilethedotted-linecircleinthediagramrepresentsa unit-circle indicating that they were all stable. Some of the zeroes were outside the unit-circle, which imply the presence of non-minimum phase behaviour. 5.1.2. Validation phase for end-point acceleration
In the validation phase, the remaining unused experimental input-output data was used to test the closeness of the estimated model response to the actual system response. Then, all the data from this test were used to assess the auto-correlation and cross-correlation relationships of the response from estimated model. Results and domain response, it is noted that all the estimated model responses were approximately coinciding the end-point acceleration response from actual system and the error signal shows that HBCSD achieved the end-point acceleration response using HBCSD algorithm was able corresponding power spectral density (PSD) plots show three  X 1  X 0.5 0 0.5 1
H  X  z  X  3 0 : 02064 Z 2  X  0 : 004525 Z  X  0 : 02602 0 : 01754 Z 2 0 : 1027 Z  X  0 : 2114
H  X  z  X  0 : 01559 Z 2  X  0 : 006081 Z  X  0 : 01818 0 : 103 Z 2  X  0 : 413 Z 0 : 102
H  X  z  X  006531 Z 3  X  0 : 0009403 Z 2  X  0 : 01424 Z  X  0 : 01195 : 3894 Z 3 0 : 06197 Z 2  X  0 : 5 Z 0 : 204 resonance modes at 11.72 Hz, 39.06 Hz and 66.41 Hz. It is noted that the PSD of model response using HBCSD algorithm tracked the actual PSD better than the others.

The auto-correlation plots for the estimated models using BFA, SDA and HBCSD represent the relationship between end-point acceleration plots represent relationship between end-point acceleration residual and the motor torque input, and are presented in Fig. 8 .Thedotted models were within the 95% interval, showing that the predicted models optimised by the optimisati on algorithms were acceptable. 5.2. Dynamic model identi fi cation for the twin rotor system
This section presents dynamic modelling of vertical channel of the TRS. In this work, fi fth-order ARX models are considered.
Replacing the values of N and M in Eq. (3) as 5 and 4 respectively, in discrete transfer function form, the ARX model for the system is represented as: Yz  X  X  U  X  z  X 
Therefore, there are a total of 10 unknown parameters to optimise using the optimisation algorithms for vertical channel of TRS. 5.2.1. Modelling phase for vertical channel
The number of search points in SDA and HBCSD is equivalent to the number of bacteria in BFA and they were de fi ned as 10. They were de fi ned the same to ensure a fair comparison can be conducted on the performance assessment. The number of itera-tions for SDA and HBCSD were kept the same as 200 while for BFA, it was 480 since it depends on N c , N re and N ed . They were de enough iteration to complete the whole search operation hence achieve optimum performance. The selection of bacteria step size Magnitude (dB / Hz)  X 0.08  X 0.06  X 0.04  X 0.02 Error for BFA has been iteratively tested and it has the best performance when the step size was de fi ned as C  X  0 : 0175. After performing exhaustive test, the parameters r  X  0 : 98 and  X   X  0 : 72 were de for SDA as they gave the best performance. The HBCSD had the best performance when the parameters were de fi ned as N sw
C  X  0 : 04, N c  X  50 and k max  X  150. For the adaptive spiral radius of 0.97 respectively while  X  l  X  1 : 03,  X  u  X  1 : 8, c 1  X  110 and c were de fi ned for the adaptive angular displacement or rotational algorithm convergence during the exploration phase. Consequently, the parameters for the HBCSD in the exploitation phase must be area to complement the strategy in the exploration phase. The numerical results for the convergence plot are shown in the speed of convergence at a time when the convergence plot intercepts the fi tness value 15 were recorded. Notice that the best fi tness among those three algorithms was achieved by HBCSD with f  X  8 : 80. This was followed by SDA and BFA, with best fi tness values of 12.69 and 14.32 respectively. Moreover, HBCSD acquired the fastest convergence speed at 83 iterations. The convergence plots for vertical channel, the predicted-actual plot for vertical channel output in the time-domain and their corresponding errors the predicted outputs successfully followed the actual output of the vertical channel with very small error. The results show that
HBCSD achieved the smallest error range and the corresponding model response successfully followed the actual response more accurately compared to others.

The fi fth-order discrete transfer functions for the predicted TRS vertical channel model optimised with sampling period of 0.1 s (sampling frequency of 10 Hz) are obtained as
H  X  z  X 
H  X  z  X 
H  X  z  X  The pole-zero location for the estimated model is shown in
Fig. 10 . The marks  X  x  X  and  X  o  X  represent pole and zero for the estimated model respectively while the dotted-line circle in the diagram represents a unit-circle. The pole-zero location shows that all the poles were within the unit-circle which indicates that the acquired models were stable. Some of the zeroes were outside the unit-circle, which imply non-minimum phase model behaviour. 5.2.2. Validation phase for vertical channel
In the validation phase, the 2000 unused experimental data was utilised to examine the closeness of the estimated model response to the actual response. The data and results produced by the test consequently were used to plot auto-correlation and cross-correlation of predicted model responses. Graphical results for vertical channel of TRS in the validation phase are depicted in
Fig. 11 . Notice that, all the graphs almost overlapped with each other for the whole 2000 samples and the error in the validation that HBCSD had the smallest error range within  X  0 : 059 ; by BFA. It is clearly evident from the time-domain (zoomed-in) response that the vertical channel response produced by esti-mated model using HBCSD followed the actual response better than the other two responses. Their corresponding PSD plots showed one dominant resonance mode at 0.35 Hz.
 The auto-correlation plots for the estimated model using BFA,
SDA and HBCSD represent those of the modelling error, and are the relationship between the input and the modelling error, and are shown in Fig. 12 . The dotted line in the fi gures represent 95% and cross-correlation plots for the estimated models were within the 95% interval, showing that the predicted models optimised by the optimisation algorithms under study were acceptable. Clearly, the auto-correlation and cross-correlation plots of the vertical channel model optimised by HBCSD have satis fi ed the 95% boundary better than the other two algorithms. 6. Conclusion
A novel hybrid bacteria-chemotaxis spiral-dynamics optimisa-tion algorithm namely HBCSD has been proposed. Chemotactic strategy of bacteria through spiral tumble and swim actions of bacteria has been adopted to improve the exploration strategy of
SDA. Moreover, spiral radius and angular displacement of the spiral model have been made adaptive to enhance the movement of bacteria within a feasible region. Incorporating these two schemes and excluding the reproduction, elimination and disper-sal phases as an alternative to reduce the complexity of BFA has successfully avoided the SDA and BFA from getting trapped into local optima points and has resulted in faster convergence. The proposed algorithm has been utilised to optimise ARX model for fl exible systems through linear parametric modelling approach using experimental input and output data from laboratory scale fl exible systems. Results have shown that the proposed hybrid algorithm has outperformed its predecessor algorithms in terms of convergence speed and fi tness accuracy. Time-domain results have shown that the predicted model response using HBCSD algorithm has successfully followed the actual response. Moreover, frequency-domain results have indicated that the estimated mod-els based on HBCSD algorithm have successfully captured the dynamic behaviours of the fl exible systems very well and better than SDA and BFA. The proposed algorithm has effectively opti-mised the dynamic models of the fl exible systems and thus is suitable to use as an optimisation tool for solving real world problems in various applications. In future work, it is envisaged to apply the algorithm to nonlinear modelling of fl exible systems using neural networks and fuzzy logic paradigms.
 Acknowledgement Ahmad Nor Kasruddin Nasir is on study leave from Faculty of Electrical and Electronics Engineering (FKEE), Universiti Malaysia Pahang (UMP) and is sponsored by Ministry of Higher Education, Malaysia (MOHE).
 References
