 With the proliferation of harmful Internet content such as pornography, violence, hate messages and objectionable content, effective content-filtering systems are essential. At present, there are four content-filtering approaches: Platform for Internet Content Selection (PICS), URL blocking, keyword filtering, and intelligent content analysis [1]. PICS is a voluntary self-labeling system. Each Web content publisher is totally lisher to filter Web pages according to the embedded PICS rating labels. URL blocking technique restricts or allows access by comparing the requested Web page X  X  URL. This approach has advantages for its speed and efficiency. However, this approach requires implementing a URL list, and it can identify only the sites on the list. And keeping the tem X  X  accuracy will decrease over time owing to the explosive growth of new Web sites. Keyword filtering compares offensive words and phrases on a retrieved Web page against those in a keyword dictionary of prohibited words and phrases. Blocking occurs when the number of matches reaches a predefined threshold. However, it is well known for overblocking. The high overblocking rate is often unacceptable and greatly jeopardizes the system X  X  capability. So intelligent content analysis, which can auto-matically classify Web content, is needed. On the other hand, web-filtering systems are either client-or server-based [2]. A client-based system performs Web content filtering vides filtering to computers on the local area network where it is installed. 
In this paper, an efficient topic-specific filtering framework for Web text based on feature selection method is briefly introduced in Section 2. Section 3 presents the efficient framework to filter the topic-specifi c text. The filter engine is introduced in Section 4. Section 5 describes experimental data set and presents the experimental result. Finally the conclusions are summarized in Section 6. high number of features may slow down the process of text preprocessing, sometimes even hard to get result, and at the same time a good subset can even get better result than using full features. And to make our system fit for topic-specific text filtering in real-time such as embedding this model in firewall or gateway, we need to further select more accurate and few features. In [3], we know there are many feature selec-tion methods such as DF, CHI statistic, information gain, mutual information, but the number of features selected by one of these methods is still high for good result. For-tunately, with Rough sets theory proposed by Pawlak in 1982 [4], it can also be used to select subset more accurately from thousands of features. But the existing attributes reduction methods based on rough set are not applicable for very large data set be-cause of the high time and space complexity. 
Rough Set Attribute Reduction removes redundant conditional attributes from nominal datasets, retaining the information content intact whilst reducing the mount of knowledge involved. In [5], a feature subset selection algorithm named QUICKREDUCT Algorithm is proposed base on the attribute dependency. The Algo-rithm only produce one possible minimum reduct, which is not enough to judge whether the new Web text is relevant to the topic or not. So we proposed a new algo-The special point is that between these reducts there are no common attributes, so these attributes have more powerfully capability to classify new objects. This Attrib-utes Reduction algorithm is extended from the QUICKREDUCT Algorithm. 
We proposed a hybrid feature selection method. We use CHI statistic methods to reduce the number of the features (step two). Thus more accurate and few features are extracted. The feature selection architecture is shown in Fig 1.
 The topic-specific Web text filtering framework is composed of training offline phase and filtering online phase. The system architecture is shown in Fig 2. The main sub-modules are: reduction to select features (see section 2). normal text. VSM classifier . In this phase we use vector space model (VSM) [6,7] to distinguish the negative text from suspicious text. Filter engine . To improve the system speed, we employ the finite state automata the-ory to construct the filtering engine (see section 4). construct the filter are as following: Step 1. Computing the center vector for each class, Step 2. Representing the incoming text into vector, 
Step 3. Computing the similarity between incoming text vector and center vector of each class, Step 4. Classifying the incoming text into the class with maximal similarity. 
The similarity between incoming text vector and center vector of each class is computed by the cosine formula. number of selected features. In our system, the speed to extract features and judge whether the incoming Web text is relevant to the topic or not is very important, so we employ the finite-state automata theory to improve this need. Finite-state automata theory has been used in various language processing [8]. For the DFSA Method, three functions: goto , failure , and output are initially constructed from a given set of patterns. The pattern matching process now becomes the state transition process, which begins with the start state. into another state. If a final state is reached, the patterns specified by the output func-tion are matched. During the state transition process, the goto function outputs the fail message, when an input character causes a mismatch. When it occurs, the failure function is used to choose a state, and the state transition restarts from that state. 
In application, we first construct finite-state automata based on the selected fea-tures. Then the FSA is always running at server. Once incoming text stream is cap-placed with other words only re-trained by la rge text corpora to fit the different needs for content filtering in the future. We choose a Chinese dataset as our datasets, which is captured from Web. This data-the topic, which includes 949 documents; the other class is about objectionable con-tent for the topic as negative, which includes 1464 documents. We firstly separate Chinese text into words, then prune infrequent words and high frequency words, and delete preposition, pronoun, auxiliary words, measure words, etc, and we only hold the noun, verb, adjective and some phrases. Thus we get a vocabulary of about 5139 words in this phase. 
Next, we use CHI statistic to select features primarily, thus we get a vocabulary of 1384 words in this phase. To make our system fit for the application and to embed this model gateway for real-time text filtering, we need to further select more accurate have this function in nature. 
We primarily use the term frequency-inverse document frequency (TF-IDF) to es-tablish the particular degree of important of term in a document. We denote normalized space into 11 values calculated by floor (10 w ). Next we construct decision table for the 2413 documents based on these 1384 selected words. Then we use the rough set method we pr oposed to further reduce the number of the features. Then we use vector space model (VSM) to build the topic filter using the selected features based on the training data sets. And we get 343 negative documents for testing, which unreduced training data set, but the performance is poor in testing data set (only 91.01%). When m is 3, the performance gives same accuracy almost as in unreduced these words are all more relevant to the positive and negative documents; moreover, underlying semantics between th ese words is preserved. 
We run our system with the filter engine in our gateway for unseen web text by keywords firstly filtering suspicious text from normal text and further judging by VSM Classifier based on the selected keywords to distinguish the negative text from suspicious text when in need, we get good accuracy. See Table 2. In this paper, an efficient topic-specific Web text filtering framework is proposed. This framework focuses on blocking some topic-specific Web text content. Espe-cially, we proposed a hybrid feature selection method based ro ugh set theory, and to improve the system speed, we employ the finite state automata theory in language processing to construct the filtering engine. The result suggests our framework is client-based system. The future work is about two: one the one hand, we will combine URL blocking technique to improve system speed; on the other hand, we will con-sider relevant feedback technique to improve the capability to adapt to the rapid pene-tration of the Web. This research is supported by the National Natural Science Foundation of China under NO.60402019, and the National 863 High-Tech Research Plan of China under NO.2003AA142160. 
