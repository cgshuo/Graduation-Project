 In this paper, we propose a framework of recommending users and communities in social media. Given a user X  X  pro-file, our framework is capable of recommending influential users and topic-cohesive interactive communities that are most relevant to the given user. In our framework, we present a generative topic model to discover user-oriented and community-oriented topics simultaneously, which en-ables us to capture the exact topic interests of users, as well as the focuses of communities. Extensive evaluation on a data set obtained from Twitter has demonstrated the ef-fectiveness of our proposed framework compared with other probabilistic topic model based recommendation methods. Categories and Subject Descriptors: H.3.3[Information Search and Retrieval]: Information filtering Keywords: User Recommendation; Community Recom-mendation; Social Media; Topic Modeling
In social media, a community is often formed by a col-lection of users with social connections as well as similar topic preferences. Taking online marketing campaign as an example, marketers not only target individuals with certain interest, but also hope the marketing messages could be cas-caded to large audience sharing similar interests. In such a scenario, one critical issue of utilizing social media data is how to precisely identify users X  personal interest and the in-terest of communities which these users are connected to or frequently interact with. Thus it is very important to capture both user-oriented and community-oriented topics.
Automated discovery of topics and communities has re-ceived widespread attention in academia and has been ad-dressed differently in previous works. A common approach is to use generative Bayesian models to capture the correla-tions among users, communities and topics. However, prior approaches cannot make a distinction between user-oriented and community-oriented topics. Taking a query  X  X ampaign + economy X  as an example, the task is to identify users and communities that are interested in US presidential campaign and also often discuss the topic of economy related to the campaign.  X  X ampaign X  is discussed by a lot of people as it is relevant to the presidential selection, whereas  X  economy X  often appears in users X  general posts and may not be related to  X  X ampaign X . In this case, The advantage of modeling user-oriented and community-oriented topics simultaneously is that it could identify high-quality community topics by sampling the topic for each word from either the community topic-word distribution or the user topic-word distribution. Thus the noises induced by a wide variety of user interests that could contaminate the community topics can be naturally mitigated.

In our work, we identify the latent relationships among social objects, i.e. users and communities, by distinguishing a user X  X  interest from interests of communities. We propose a generative topic model to capture both types of interests as topics in a parameter universe with a mechanism that identifies the association of interests to either a given user or a given community. Our proposed model makes use of the communities derived from the social links of users to avoid the expensive computation of combining the commu-nity discovering process with the topic modeling process. We further provide a novel F ramework of Rec ommendation, named FRec , based upon the derived relationships, which is able to recommend topic-related influential users and topic-cohesive interactive communities for a given user X  X  profile.
The contribution of our work is three-fold: (1) A model-ing approach to distinguishing community v.s. user interests (cf.  X  3) by using a Bernoulli variable to control the distri-bution from which a word is drawn; (2) A principled frame-work (cf.  X  4) which is capable of recommending topic-related influential users and topic-cohesive interactive communities given a user profile; and (3) Extensive evaluation (cf.  X  a Twitter dataset related to  X  X residential campaigns X  that demonstrates the effectiveness of the framework.

The rest of the paper is organized as follows.  X  2presents a brief summary of prior work relevant to community-based topic models and recommender systems.  X  3 discusses the proposed topic modeling approach, and  X  4 describes the rec-ommendation strategy. Empirical evaluation of our method is reported in  X  5. Finally  X  6 concludes the paper.
User recommendation, often referred to as friendship rec-ommendation or link prediction, focuses on recommending users to a target user based on diverse criteria. From a network perspective, user recommendation refers to find-ing missing edges in a user network. Typical approaches to solving this problem often utilize the network structure and node connections, e.g., proximity measures that are based on network topological features [8], supervised learning meth-ods [1], relational learning methods [10], etc.

In social media, the content generated by users, e.g., user relationships or posts, is a valuable information source to model users X  preference. Recently, several methods have been proposed to resolve user recommendation in social me-dia by employing latent Dirichlet allocation (LDA) alike topic models [9]. These efforts, however, only consider inter-est similarity, and ignore the interactiveness of users, which is essential for expanding social network. In our work, we try to recommend users with influence abilities, given the factthattheseuserscanhelpenrichtheinteractionsamong users. In addition, our model can distinguish users X  personal interests from the topics discussed within communities.
Automated community discovery has been well studied by researchers. One direction in community discovery involves using the social linking structure among users to identify communities, e.g., min-cut based partitioning, centrality-based and Clique percolation methods [5, 11]. However, they did not take into account the content generated by users in social network, which might result in the irrationality of the identified communities.

Another direction in community discovery is to incorpo-rate content analysis into the discovery process. Proba-bilistic models are often employed to capture the topics being discussed by users and within communities [14, 15, 16, 18], which assume all the content generated by a user will contribute to the community detection. In reality, how-ever, an online user often posts his/her personal informa-tion, e.g., moods and activities, which might not be re-lated to any community. Comparatively, our model distin-guishes community-oriented topics from users X  personal top-ics within the content, which is more reasonable in modeling the topic interests of users.

Given the detected communities, a further step for online community management is co mmunity recommendation. [4] proposes a collaborative filtering method for personalized community recommendation, by considering multiple types of co-occurrences in social data, e.g., semantic and user information. [3] uses association rule mining to discover associations between sets of communities that are shared across many users, and LDA [2] to model user-community co-occurrences via latent aspects. Both works performed experimental evaluation on Orkut data set. However, they cannot distinguish community topics from users X  interest.
In this section, we first discuss two basic topic models used for tracking topic interests of online users or online communities. Based on the discussion, we propose User-Community-Topic model to resolve the issues in the two basic models. We then describe how to learn the hyper-parameters using Gibbs sampling.
Fig. 1(a) shows the graphical model for what we refer to as the  X  X ser-topic model X  (UT). UT aims to capture the correlation between users and topics. The generation of a document (containing all the posts of a user) is considered as a mixture of topics. Each topic corresponds to a multino-mial distribution over the vocabulary. Based on the learned posterior probability, each user X  X  preference of using words and involvement in topics can be discovered. However, in most cases, users might have diverse interests over topics. By using UT model, the obtained posterior probability of a user over a specific topic might be affected by the general topic interests of this user. In addition, users in social media often share common interests over topics, which cannot be captured in UT model.

Another model is called  X  X ommunity-topic model X  (CT) (as shown in Fig. 1(b)), where the generation of a document is affected by both the topic factors and the community fac-tors in a hierarchical manner. In CT model, we treat all the posts within a community as a document. The differ-ence from UT is the community factor c , by which topics within a document would be affected. One major problem of the CT model is that user posts in a community could include various topics, rendering the community document highly inconsistent. Sampling for all the words in a commu-nity document would result in uncontrolled generalization error for inference due to the noisy feature of social media data. In addition, there is no way to capture a specific user X  X  interests using CT model, since no user factor is involved.
Our goal is to model the relations among users, topics and communities within the environment of social media. Taking Twitter as an example, we have the tweets posted by users and the follower-followee relations of users; however, we do not have the explicit community membership of users. We perform community discovery on the users X  friendship net-work, and allow a user to belong to multiple communities by using soft clustering based methods. To achieve this, we employ the algorithm introduced in [17] to obtain the com-munity memberships of users. We therefore assume there is a community factor c that captures the user-community memberships with respect to user u . Also, within each com-munity, users might discuss different topics, and hence we have a topic factor z that characterizes the topic-community relations. For topic mixture and term mixture, we give them Dirichlet priors; for community mixture, we use the distri-bution derived by analyzing the follower-followee relations. In this way, we are not concerned with the relations between the community and the user, but focus more on the relations between the community and the topic (i.e., p ( z | c )), and the relations between the user and the topic (i.e., p ( z | u )). Ta-ble 1 lists the notations used in our model.

We denote our proposed topic model as  X  X ser-community-topic model X  (UCT in Fig. 1(c)). We add a latent Bernoulli variable s (a binary factor) to indicate whether a word is related to a user itself or to a community. In particular, s takes value 0 if the word w is generated via the user-topic route, value 1 if the word is generated from the community-topic route. The variable s in our model acts as a switch: if s = 0, words are sampled from a user-specific multinomial  X  u ,whereasif s = 1, words are sampled from a community-specific multinomial  X  c (with different symmetric Dirichlet priors parameterized by  X  u and  X  c ). s is sampled from a document-specific Bernoulli distribution  X  ,whichinturn has a prior . The joint probability of the UCT model can be written as: where p ( z | u, c, s,  X  u , X  c )= p ( z | u, s =0 , X  u )(where s =0), p ( z | u, s =0 , X  u ) is the probability of a user-specific topic, whereas p ( z | c, s =1 , X  c ) is the probability of a community-specific topic. Given the graphical model described in Fig. 1(c), the generative scheme is shown in Alg. 1.
To estimate the model, we use the collapsed Gibbs sam-pling [6]. For our UCT model, we are interested in the latent user-topic portions  X  u , the latent community-topic portions  X  c , the topic-word distributions  X  k and the topic index as-signments for each word z i . Also in the learning process, the value of s will be generated based on a Bernoulli dis-tribution and be updated through the Gibbs sampling for each word.  X  u ,  X  c and  X  k can be calculated using just the topic index assignments z i , i.e., z is a sufficient statistic for the three distributions. Therefore, we can integrate out the multinomial parameters and simply sample z i and s i . Table 1: Notations for quantities in the model.
 Algorithm 1 Generative scheme of UCT model.
The collapsed Gibbs sampler needs to compute the prob-ability of a topic z beingassignedtoaword w i ,givenall other topic assignments to all other words, with respect to aspecificvalueof s (0 or 1). Similarly, it needs to cal-culate the probability of s being assigned to a word w i , all s assignments except for s i . The probabilities that we updates for these probabilities are described in Table 2.
We analyze the computational complexity of Gibbs sam-pling in the proposed UCT model. As discussed above, in Gibbs sampling, we need to compute the posterior proba-community-word pairs ( C  X  V ), where V is the total number and requires a constant number of operations, resulting in O ( V  X  K  X  U ), assuming U&gt;&gt;C , for a single sampling.
In our work, we try to recommend a list of users with rel-evant topic interests and cohesive discussions. The target user can select some of the recommended users as friends, and then start to involve the discussion among these users. Our recommendation framework, FRec , provides various rec-ommendation mechanisms based on our user-community-topic model. We also consider the user influence with re-spect to a topic. For each topic in the topic list, we can use the derived probabilities p ( u | z ) as the initialization of the PageRank algorithm [7], and run PageRank on the friend-ship network to obtain the influence scores of users towards a specific topic z . Then the topic-relevant user influence can be denoted as R ( u | z ). We setup a threshold (0.01) for p ( u to filter out low probabilities.
Given a target user  X  u , we can rank other users based on p ( u i |  X  u ), and then select top ranked ones as  X  u  X  X  recommen-dation. p ( u i |  X  u ) can be calculated using Eq.(2). Here p ( z |  X  u ) is the probability of topics given a test user  X  u , which can be obtained by extending Gibbs iterations over the test users after the hyper-parameters are learned. Note that in Eq.(2), we consider both user-based topics ( p ( z | u i ,s = 0)) and community-based topics ( p ( z 1)). The user-based topics often include a user X  X  personal interest. To make the recommendation more community-oriented, we can focus on community-based topics by re-moving the user-based component. The recommendation can be refined as
By integrating the user influence into p ( u i |  X  u ), we can have
In this strategy, the user-to-user relations residing in the friendship network are not considered. In order to make the recommendation more reasonable, we incorporate the neighborhood similarity between u i and the target user  X  u into the recommendation. The neighborhood similarity can be calculated as where neighborhood (  X  ) denotes all the neighbors of the user. By integrating sim ( u i ,  X  u ) into Eq.(4), we have  X  p ( u i |  X  u )  X  p ( u i )  X  sim ( u i ,  X  u )(5)
Given a target user  X  u , we can also recommend commu-nities to  X  u based on the derived correlations among users, topics and communities. Given a community c , we can mea-sure the relevance between  X  u and c by p ( c |  X  u )= z
A community with more influential users is likely to be more interactive, i.e., it may involve more activities of shar-ing information and discussing topics. Therefore, we con-sider the user influence for community recommendation. By integrating the user influence into p ( c |  X  u ), we have  X  p ( c |  X  u )  X  p ( c ) z
The data set used in the experiment is a collection of tweets related to  X  X residential campaigns X  between Barack Obama and Mitt Romney, ranging from March 1st, 2012 to May 31st, 2012. We crawled the tweets through Twit-ter Streaming API by feeding a list of keywords related to the campaign (e.g., campaign, Obama, Romney, economy, etc.) into the API request. We then crawled the follower relationships of each user within the tweets data set. Due to the property of microblogging services, the crawled tweets might contain a lot of noise, which would hinder the topic modeling. Therefore, we did a series of preprocessing to al-leviate the negative impact of noise data, including: (1) re-moving short tweets (with the word count less than 10); (2) removing tweets with hashtags more than 3; (3) removing tweets whose author has no more than 5 tweets; and (4) re-moving usernames (starting with X  X  X ) and URLs. After pre-processing, the tweets data contain 133,465 users, 5,558,763 mutual-following relationships and 5,079,994 tweets.
For topic modeling, we concatenate the tweets of each user in the data set as a document. We process the tweets data by removing stopwords, tokenizing and stemming using MAL-LET. We also calculate the TF-IDF score of each word and then select the top ranked 10,000 words as features. After processing, the total number of word tokens in the tweets data is 6,643,278. We compare UCT model with two base-lines: (1) CCF (Combinational Collaborative Filtering) [4], which combines the bag-of-users and bag-of-words models to capture the relations among topics, communities and users within the network; and (2) TUCM (Topic User Community Model) [14], which assumes that a user X  X  membership in a community is conditioned on its social relationship, the type of interaction and the shared information with other mem-bers. We also include the models shown in Fig. 1(a) (UT) and Fig. 1(b) (CT) in the comparison.

For all the models, we empirically set the number of com-munities as 500. We set the hyper-parameters to the follow-ing values [13]:  X  =0 . 01,  X  =  X  u =  X  c =0 . 01 and =0 . 3. We run 200 iterations of Gibbs sampling for training and extend the chain with 100 iterations over the test set. We compare the predictive performance of our proposed UCT model with other baselines by computing the perplex-ity of unseen words in test documents. We calculate the av-eraged perplexity for 10-fold cross validation on the tweets data set. The lower the perplexity, the better the perfor-mance of the model [12]. As is depicted in Fig. 2, the predic-tive performance of two basic models (UT and CT) are not comparable with the other three topic models. The reason is straightforward: in both models, only one aspect (either u or c ) is considered, which violates the characteristics of the data, since in social media, people post information not only for their own purpose, but also expecting to interact with each other. CCF combines the word factor and the user factor to capture the correlation between users and commu-nities, and TUCM takes into account the type of interactions between users. These two models achieves better predictive performance compared with UT and CT. Our model distin-guishes community-oriented topics and user-oriented topics. Such a distinction indeed exists in most real-world scenarios, i.e., a user has his/her personal topic interests, and is also often involved in the discussion within a specific community. In the recommendation experiments, we set the number of topics as 500 for all the models.
To evaluate the user-profile based recommendation, we adopt the leave-one-out or leave-n -out strategy as described in [3]. precision and recal l are used to measure the recom-mendation effectiveness. Precision is calculated at a given cut-off rank, considering only the topmost results recom-mended by the approach, e.g., top@10. We limit the size of our recommendation list to at most 30.
Figure 3: Comparison for user recommendation.
We compare the user recommendation strategy introduced in  X  4.1 with several topic model based recommendation ap-proaches: (1) UT: The recommendation can be achieved using the strategy similar to Eq.(2), by removing the com-ponents related to c ; (2) CT: By considering the identified community membership, we can select a list of top ranked users, based on p ( u | c ), from the community that the target user belongs to; (3) CCF: This method provides user rec-ommendation by calculating the user similarity introduced in [4]; (4) TUCM: The recommendation can be achieved us-ing the strategy similar to Eq.(2).

Our goal is to select a list of users whose topic interests are close to the target user. By removing the user-oriented components from Eq.(2), we can make the recommendation results more community oriented, as defined in Eq.(3). Note that in Eq.(3), we consider the community information of both the target user and the recommended user. To this end, we randomly select 2,000 users from the user reposi-tory as the test set and randomly delete a set of links of each test user: (1) S 1: removing 20% links; and (2) S 2: re-moving 2% links. We conduct experiments based on these two setups. Fig. 3 shows the results for these users. For com-parisons with topic models and link prediction methods, the experiments use setup S 1; To evaluate the effect of different components in Eq.(5), we use setup S 1and S 2.
 From Fig. 3(a), we observe that our proposed framework FRec achieves the best recommendation performance in terms of precision and recal l . Simply using topics (UT in Fig. 3(a)) cannot guarantee high-quality recommendation results. For example, two users might share similar interests but they do not have connections in the social graph.

In Fig. 3(b), we evaluate how user influence (UI) and users X  local similarity (LS) affect the recommendation per-formance. We compare the basic model of FRec , the model with UI, the model with LS and the model with UI and LS for two different settings S 1and S 2. Basedonthecom-parison, we observer that: (1) User influence component and local similarity component slightly improved the per-formance of user recommendation. Intuitively, a user will prefer to make friends with influential people, since through these people he/she can reach more friends. Also, a user will be likely to interact with friends-of-friends. (2) The user recommendation has more accurate results if more so-cial links of users are reserved. This is primarily because so-cial links can help identify the underlying communities and then enrich the recommendation model through the user-community relations.
For community recommendation, we treat the communi-ties identified from the module of community detection as the ground truth. We randomly sample 2,000 users from the user repository and recommend communities for these users. The comparison includes: (1) FRec : The basic strat-egy described in Eq.(6); (2) FRec -s1: removing the fac-tor of p ( z | u, s = 0) from Eq.(6), i.e., only considering the community-oriented topics for recommendation; (3) FRec -IN: the strategy described in Eq.(7); and (4) FRec -IN-s1: removing the factor of p ( z | u, s = 0) from Eq.(7), i.e., consid-ering user influence and the community-oriented topic fac-tor. We also compare FRec with several recommendation approaches, including CCF and TUCM as introduced pre-viously. These two approaches use the inferred probabilities of p ( z | u )and p ( z | c ) for community recommendation. We report the comparison in Fig. 4.

As observed in Fig. 4, the model of FRec -IN-s1 has the best performance against other baselines, which explains that users in social media would like to interact with in-fluential users, and prefer to share information that is often discussed within a community, i.e., by a group of people. The community-oriented topic factor p ( z | c, s =1)hassu-perior power over user-oriented topic factor p ( z | u, s =0)in dominating the results of community recommendation. We have introduced a generative graphical model, User-Community-Topic model (UCT), for capturing user-oriented topics and community-oriented topics simultaneously in so-cial media data. Based on the model inference, we further proposed a novel recommendation framework, FRec .Given a user X  X  profile, FRec is able to recommend a list of topic-related influential users or a list of topic-cohesive interactive communities. The proposed framework can be easily ex-tended to the case that recommends users and communities based on a set of keywords. In addition, it can be seamlessly integrated into real-life social networks.
 The work is supported in part by a Xerox University Affair Committee (UAC) Award and by US National Science Foun-dation under grants DBI-0850203, CCF-0939179, HRD-0833093, CNS-1126619, and IIS-1213026.
