 Many probabilistic models incorporate multivariate Gaussian distributions to explain de-pendencies between variables. Gaussian process (GP) models and generalized linear mixed models are common examples. For non-Gaussian observation models, inferring the parame-ters that specify the covariance structure can be difficult. Existing computational methods can be split into two complementary classes: deterministic approximations and Monte Carlo simulation. This work presents a method to make the sampling approach easier to apply. In recent work Murray et al. [1] developed a slice sampling [2] variant, elliptical slice sam-pling , for updating strongly coupled a-priori Gaussian variates given non-Gaussian obser-vations. Previously, Agarwal and Gelfand [3] demonstrated the utility of slice sampling for updating covariance parameters, conventionally called hyperparameters , with a Gaussian observation model, and questioned the possibility of slice sampling in more general settings. In this work we develop a new slice sampler for updating covariance hyperparameters. Our method uses a robust representation that should work well on a wide variety of problems, has very few technical requirements, little need for tuning and so should be easy to apply. 1.1 Latent Gaussian models We consider generative models of data that depend on a vector of latent variables f that are Gaussian distributed with covariance  X   X  set by unknown hyperparameters  X  . These models are common in the machine learning Gaussian process literature [e.g. 4] and throughout the statistical sciences. We use standard notation for a Gaussian distribution with mean m and covariance  X , and use f  X  X  ( m ,  X ) to indicate that f is drawn from a distribution with the density in (1). Figure 1: (a) Shows draws from the prior over f using three different lengthscales in the squared The generic form of the generative models we consider is summarized by The methods discussed in this paper apply to covariances  X   X  that are arbitrary positive definite functions parameterized by  X  . However, our experiments focus on the popular case where the covariance is associated with N input vectors { x n } N n =1 through the squared-exponential kernel, distances between inputs into covariances between the corresponding latent values f . For non-Gaussian likelihoods we wish to sample from the joint posterior over unknowns, We would like to avoid implementing new code or tuning algorithms for different covariances  X   X  and conditional likelihood functions L ( f ). A Markov chain transition operator T ( z 0  X  z ) defines a conditional distribution on a new position z 0 given an initial position z . The operator is said to leave a target distribution  X  and P (  X  | f ), invariant. Under fairly mild conditions the Markov chain will equilibrate to-wards the target distribution [e.g. 5].
 Recent work has focused on transition operators for updating the latent variables f given data and a fixed covariance  X   X  [6, 1]. Updates to the hyperparameters for fixed latent variables f need to leave the conditional posterior, invariant. The simplest algorithm for this is the Metropolis X  X astings operator, see Algo-rithm 1. Other possibilities include slice sampling [2] and Hamiltonian Monte Carlo [7, 8]. Alternately fixing the unknowns f and  X  is appealing from an implementation standpoint. However, the resulting Markov chain can be very slow in exploring the joint posterior distri-bution. Figure 1a shows latent vector samples using squared-exponential covariances with different lengthscales. These samples are highly informative about the lengthscale hyperpa-rameter that was used, especially for short lengthscales. The sharpness of P (  X  | f ), Figure 1b, dramatically limits the amount that any Markov chain can update the hyperparameters  X  for fixed latent values f . 2.1 Whitening the prior Often the conditional likelihood is quite weak; this is why strong prior smoothing as-sumptions are often introduced in latent Gaussian models. In the extreme limit in which there is no data, i.e. L is constant, the target distribution is the prior model, ing f and  X  does not work well because they are strongly coupled. One strategy is to reparameterize the model so that the unknown variables are independent under the prior. Independent random variables can be identified from a commonly-used generative procedure for the multivariate Gaussian distribution. A vector of independent normals,  X  , is drawn independently of the hyperparameters and then deterministically transformed: Notation: Throughout this paper L C will be any user-chosen square root of covariance matrix C . While any matrix square root can be used, the lower-diagonal Cholesky decom-position is often the most convenient. We would reserve C 1 / 2 for the principal square root, because other square roots do not behave like powers: for example, chol( C )  X  1 6 = chol( C  X  1 ). We can choose to update the hyperparameters  X  for fixed  X  instead of fixed f . As the original latent variables f are deterministically linked to the hyperparameters  X  in (5), these updates will actually change both  X  and f . The samples in Figure 1a resulted from using the same whitened variable  X  with different hyperparameters. They follow the same general trend, but vary over the lengthscales used to construct them.
 The posterior over hyperparameters for fixed  X  is apparent by applying Bayes rule to the generative procedure in (5), or one can laboriously obtain it by changing variables in (3): Algorithm 2 is the Metropolis X  X astings operator for this distribution. The acceptance rule now depends on the latent variables through the conditional likelihood L ( f ) instead of the prior N ( f ; 0 ,  X   X  ) and these variables are automatically updated to respect the prior. In the no-data limit, new hyperparameters proposed from the prior are always accepted. Neither of the previous two algorithms are ideal for statistical applications, which is illus-trated in Figure 2. Algorithm 2 is ideal in the  X  X eak data X  limit where the latent variables f are distributed according to the prior. In the example, the likelihoods are too restrictive for Algorithm 2 X  X  proposal to be acceptable. In the  X  X trong data X  limit, where the latent vari-ables f are fixed by the likelihood L , Algorithm 1 would be ideal. However, the likelihood terms in the example are not so strong that the prior can be ignored.
 For regression problems with Gaussian noise the latent variables can be marginalised out an-alytically, allowing hyperparameters to be accepted or rejected according to their marginal the conditional posterior P ( f |  X , data). To build a method that applies to non-Gaussian likelihoods, we create an auxiliary variable model that introduces surrogate Gaussian ob-servations that will guide joint proposals of the hyperparameters and latent variables. We augment the latent Gaussian model with auxiliary variables, g , a noisy version of the true latent variables: For now S  X  is an arbitrary free parameter that could be set by hand to either a fixed value or a value that depends on the current hyperparameters  X  . We will discuss how to automatically set the auxiliary noise covariance S  X  in Section 3.2.
 given the hyperparameters. It is possible to sample from this distribution in the opposite order, by first drawing the auxiliary values from their marginal distribution and then sampling the model X  X  latent values conditioned on the auxiliary values from posterior given the surrogate data g . Again we can describe the sampling process via a draw from a spherical Gaussian: We then condition on the  X  X hitened X  variables  X  and the surrogate data g while updating the hyperparameters  X  . The implied latent variables f (  X ,  X  , g ) will remain a plausible draw from the surrogate posterior for the current hyperparameters. This is illustrated in Figure 2. We can leave the joint distribution (3) invariant by updating the following conditional distribution derived from the above generative model: The Metropolis X  X astings Algorithm 3 contains a ratio of these terms in the acceptance rule. 3.1 Slice sampling The Metropolis X  X astings algorithms discussed so far have a proposal distribution q (  X  0 ;  X  ) that must be set and tuned. The efficiency of the algorithms depend crucially on careful choice of the scale  X  of the proposal distribution. Slice sampling [2] is a family of adaptive search procedures that are much more robust to the choice of scale parameter. Algorithm 4 applies one possible slice sampling algorithm to a scalar hyperparameter  X  in the surrogate data model of this section. It has a free parameter  X  , the scale of the initial proposal distribution. However, careful tuning of this parameter is not required. If the initial scale is set to a large value, such as the width of the prior, then the width of the proposals will shrink to an acceptable range exponentially quickly. Stepping-out procedures [2] could be used to adapt initial scales that are too small. We assume that axis-aligned hyperparameter moves will be effective, although reparameterizations could improve performance [e.g. 9]. 3.2 The auxiliary noise covariance S  X  The surrogate data g and noise covariance S  X  define a pseudo-posterior distribution that softly specifies a plausible region within which the latent variables f are updated. The noise covariance determines the size of this region. The first two baseline algorithms of Section 2 result from limiting cases of S  X  =  X  I : 1) if  X  = 0 the surrogate data and the current latent variables are equal and the acceptance ratio reduces to that of Algorithm 1. 2) as  X   X  X  X  the observations are uninformative about the current state and the pseudo-posterior tends to the prior. In the limit, the acceptance ratio reduces to that of Algorithm 2. One could choose  X  based on preliminary runs, but such tuning would be burdensome.
 For likelihood terms that factorize, L ( f ) = Q i L i ( f i ), we can measure how much the likeli-hood restricts each variable individually: A Gaussian can be fitted by moment matching or a Laplace approximation (matching sec-ond derivatives at the mode). Such fits, or close approximations, are often possible analyti-cally and can always be performed numerically as the distribution is only one-dimensional. ( S ing procedure is a grossly simplified first step of  X  X ssumed density filtering X  or  X  X xpectation propagation X  [10], which are too expensive for our use in the inner-loop of a Markov chain. We have discussed samplers that jointly update strongly-coupled latent variables and hy-perparameters. The hyperparameters can move further in joint moves than their narrow conditional posteriors (e.g., Figure 1b) would allow. A generic way of jointly sampling real-valued variables is Hamiltonian/Hybrid Monte Carlo (HMC) [7, 8]. However, this method is cumbersome to implement and tune, and using HMC to jointly update latent variables and hyperparameters in hierarchical models does not itself seem to improve sampling [11]. Christensen et al. [9] have also proposed a robust representation for sampling in latent Gaussian models. They use an approximation to the target posterior distribution to con-struct a reparameterization where the unknown variables are close to independent. The approximation replaces the likelihood with a Gaussian form proportional to N ( f ;  X  f ,  X (  X  f )): where  X  is often diagonal, or it was suggested one would only take the diagonal part. This Taylor approximation looks like a Laplace approximation, except that the likelihood Thinking of the current latent variables as a draw from this approximate posterior,  X   X  X  (0 , I ) , f = L R We can then fix the new variables and update the hyperparameters under When the likelihood is Gaussian, the reparameterized variables  X  are independent of each other and the hyperparameters. The hope is that approximating non-Gaussian likelihoods will result in nearly-independent parameterizations on which Markov chains will mix rapidly. Taylor expanding some common log-likelihoods around the maximum is not well defined, for example approximating probit or logistic likelihoods for binary classification, or Pois-son observations with zero counts. These Taylor expansions could be seen as giving flat or undefined Gaussian approximations that do not reweight the prior. When all of the like-lihood terms are flat the reparameterization approach reduces to that of Section 2.1. The alternative S  X  auxiliary covariances that we have proposed could be used instead. The surrogate data samplers of Section 3 can also be viewed as using reparameterizations, by treating  X  = L  X  1 R posals. A proposal density q (  X  0 , X  0 ;  X  , X  ) in the reparameterized space must be multiplied by the Jacobian | L  X  1 R bility of proposing the reparameterization must also be included in the Metropolis X  X astings acceptance probability: A few lines of linear algebra confirms that, as it must do, the same acceptance ratio results as before. Alternatively, substituting (3) into (15) shows that the acceptance probability is very similar to that obtained by applying Metropolis X  X astings to (14) as proposed by using different pseudo-posterior means and the surrogate data method has an extra term for the random, rather than fixed, choice of reparameterization.
 The surrogate data sampler is easier to implement than the previous reparameterization work because the surrogate posterior is centred around the current latent variables. This means that 1) no point estimate, such as the maximum likelihood  X  f , is required. 2) picking the noise covariance S  X  poorly may still produce a workable method, whereas a fixed repa-rameterized can work badly if the true posterior distribution is in the tails of the Gaussian approximation. Christensen et al. [9] pointed out that centering the approximate Gaus-sian likelihood in their reparameterization around the current state is tempting, but that computing the Jacobian of the transformation is then intractable. By construction, the surrogate data model centers the reparameterization near to the current state. We empirically compare the performance of the various approaches to GP hyperparameter sampling on four data sets: one regression, one classification, and two Cox process inference problems. Further details are in the rest of this section, with full code as supplementary material. The results are summarized in Figure 3 followed by a discussion section. In each of the experimental configurations, we ran ten independent chains with different random seeds, burning in for 1000 iterations and sampling for 5000 iterations. We quantify the mixing of the chain by estimating the effective number of samples of the complete data likelihood trace using R-CODA [12], and compare that with three cost metrics: the number of hyperparameter settings considered (each requiring a small number of covariance decompositions with O ( n 3 ) time complexity), the number of likelihood evaluations, and the total elapsed time on a single core of an Intel Xeon 3GHz CPU.
 The experiments are designed to test the mixing of hyperparameters  X  while sampling from the joint posterior (3). All of the discussed approaches except Algorithm 1 update the latent variables f as a side-effect. However, further transition operators for the latent variables for fixed hyperparameters are required. In Algorithm 2 the  X  X hitened X  variables  X  remain fixed; the latent variables and hyperparameters are constrained to satisfy f = L  X  data samplers are ergodic: the full joint posterior distribution will eventually be explored. However, each update changes the hyperparameters and requires expensive computations involving covariances. After computing the covariances for one set of hyperparameters, it makes sense to apply several cheap updates to the latent variables. For every method we hyperparameter update. One could also consider applying elliptical slice sampling to a reparameterized representation, for simplicity of comparison we do not. Independently of our work Titsias [13] has used surrogate data like reparameterizations to update latent variables for fixed hyperparameters.
 Methods We implemented six methods for updating Gaussian covariance hyperparame-ters. Each method used the same slice sampler, as in Algorithm 4, applied to the following model representations. fixed: fixing the latent function f [14]. prior-white: whitening with the prior. surr-site: using surrogate data with the noise level set to match the site posterior (12). We used Laplace approximations for the Poisson likelihood. For classifi-cation problems we used moment matching, because Laplace approximations do not work well [15]. surr-taylor: using surrogate data with noise variance set via Taylor expansion of the log-likelihood (13). Infinite variances were truncated to a large value. post-taylor and post-site: as for the surr-methods but a fixed reparameterization based on a posterior approximation (14).
 Binary Classification (Ionosphere) We evaluated four different methods for perform-ing binary GP classification: fixed , prior-white , surr-site and post-site . We applied these methods to the Ionosphere dataset [16], using 200 training data and 34 dimensions. nal variance. The -taylor methods reduce to other methods or don X  X  apply because the maximum of the log-likelihood is at plus or minus infinity.
 Gaussian Regression (Synthetic) When the observations have Gaussian noise the post-taylor reparameterization of Christensen et al. [9] makes the hyperparameters and latent variables exactly independent. The random centering of the surrogate data model will be less effective. We used a Gaussian regression problem to assess how much worse the sur-rogate data method is compared to an ideal reparameterization. The synthetic data set had 200 input points in 10-D drawn uniformly within a unit hypercube. The GP had zero mean, unit signal variance and its ten lengthscales in (2) drawn from Uniform(0 , noise had variance 0.09. We applied the fixed , prior-white , surr-site / surr-taylor , and post-site / post-taylor methods. For Gaussian likelihoods the -site and -taylor methods coincide: the auxiliary noise matches the observation noise ( S  X  = 0 . 09 I ). Cox process inference We tested all six methods on an inhomogeneous Poisson process with a Gaussian process prior for the log-rate. We sampled the hyperparameters in (2) and a mean offset to the log-rate. The model was applied to two point process datasets: 1) a record of mining disasters [17] with 191 events in 112 bins of 365 days. 2) 195 redwood tree locations in a region scaled to the unit square [18] split into 25  X  25 = 625 bins. The results for the mining problem were initially highly variable. As the mining experiments were also the quickest we re-ran each chain for 20,000 iterations. Figure 3: The results of experimental comparisons of six MCMC methods for GP hyperparameter On the Ionosphere classification problem both of the -site methods worked much better than the two baselines. We slightly prefer surr-site as it involves less problem-specific derivations than post-site .
 On the synthetic test the post-and surr-methods perform very similarly. We had expected the existing post-method to have an advantage of perhaps up to 2 X 3  X  , but that was not realized on this particular dataset. The post-methods had a slight time advantage, but this is down to implementation details and is not notable.
 On the mining problem the Poisson likelihoods are often close to Gaussian, so the exist-ing post-taylor approximation works well, as do all of our new proposed methods. The Gaussian approximations to the Poisson likelihood fit most poorly to sites with zero counts. The redwood dataset discretizes two-dimensional space, leading to a large number of bins. The majority of these bins have zero counts, many more than the mining dataset. Taylor is unsurprising that post-taylor performs similarly to prior-white . While surr-taylor works better, the best results here come from using approximations to the site-posterior (12). For unreasonably fine discretizations the results can be different again: the site-reparam-eterizations do not always work well.
 Our empirical investigation used slice sampling because it is easy to implement and use. However, all of the representations we discuss could be combined with any other MCMC method, such as [19] recently used for Cox processes. The new surrogate data and post-site representations offer state-of-the-art performance and are the first such advanced methods to be applicable to Gaussian process classification.
 An important message from our results is that fixing the latent variables and updating hyperparameters according to the conditional posterior  X  as commonly used by GP practi-tioners  X  can work exceedingly poorly. Even the simple reparameterization of  X  X hitening the prior X  discussed in Section 2.1 works much better on problems where smoothness is important in the posterior. Even if site approximations are difficult and the more ad-vanced methods presented are inapplicable, the simple whitening reparameterization should be given serious consideration when performing MCMC inference of hyperparameters. Acknowledgements We thank an anonymous reviewer for useful comments. This work was supported in part by the IST Programme of the European Community, under the PASCAL2 Network of Excellence, IST-2007-216886. This publication only reflects the authors X  views. RPA is a junior fellow of the Canadian Institute for Advanced Research. References [1] Iain Murray, Ryan Prescott Adams, and David J.C. MacKay. Elliptical slice sampling. [2] Radford M. Neal. Slice sampling. Annals of Statistics , 31(3):705 X 767, 2003. [3] Deepak K. Agarwal and Alan E. Gelfand. Slice sampling for simulation based fitting [4] Carl Edward Rasmussen and Christopher K. I. Williams. Gaussian Processes for ma-[5] Luke Tierney. Markov chains for exploring posterior distributions. The Annals of [6] Michalis Titsias, Neil D Lawrence, and Magnus Rattray. Efficient sampling for Gaussian [7] Simon Duane, A. D. Kennedy, Brian J. Pendleton, and Duncan Roweth. Hybrid Monte [8] Radford M. Neal. MCMC using Hamiltonian dynamics. To appear in the Handbook [9] Ole F. Christensen, Gareth O. Roberts, and Martin Sk  X ald. Robust Markov chain Monte [10] Thomas Minka. Expectation propagation for approximate Bayesian inference. In Pro-[11] Kiam Choo. Learning hyperparameters for neural network models using Hamiltonian [12] Mary Kathryn Cowles, Nicky Best, Karen Vines, and Martyn Plummer. R-CODA [13] Michalis Titsias. Auxiliary sampling using imaginary data, 2010. Unpublished. [14] Radford M. Neal. Regression and classification using Gaussian process priors. In J. M. [15] Malte Kuss and Carl Edward Rasmussen. Assessing approximate inference for binary [17] R. G. Jarrett. A note on the intervals between coal-mining disasters. Biometrika , 66 [18] Brian D. Ripley. Modelling spatial patterns. Journal of the Royal Statistical Society, [19] Mark Girolami and Ben Calderhead. Riemann manifold Langevin and Hamiltonian
