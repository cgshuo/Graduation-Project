 Given a large social network, how can we catch strange user behaviors, and how can we find intriguing and unexpected connectivity patterns? While the strange behaviors have been documented across se rvices ranging from telecommunication fraud [1] to deceptive Ebay X  X  reviews [2] to ill-gotten Facebook X  X  page-likes [3], we study here a complete graph of more than 117 million users and 3.33 billion edges in a popular microblogging service Tencent Weibo (Jan. 2011). Several recent studies have used social graph data t o characterize conn ectivity patterns, with a focus on understanding the community structure [4 X 6] and the cluster property [7, 8]. However, no analysis was presented to demonstrate what strange connectivity pattern we can infer strange behavior from and how.

In this paper, we investigate lockstep behavior pattern on Weibo X  X   X  X ho-follows-whom X  graph, that is, groups of followers acting together, consistently following the same group of followees, often with little other activity. Therefore, though the followees are not popular, they could have a large number of followers. We study different types of lockstep behavio r, characterize connectivity patterns in the adjacency matrix of the graph, and examine the associated patterns in spectral subspaces. Fig.1.(a,c,e) plot co nnections in the matrix, in which a black point shows the follower on the X-axis connecting to the followee on the Y-axis. Fig.1.(b,d,f) plot each follower node by its values in a pair of the left-singular vectors of the adjacency matrix. These fig ures visualize the spectral subspaces, and the dashed lines are X-and Y-axis. Specifically, we show that  X  No lockstep behavior: According to the Chung-Lu model [9], we generate  X  Non-overlapping lockstep behavior: On Weibo , there is a group of followers  X  Partially overlapping lockstep behavior: A more surprising connectivity pat-
Motivated by this investigation, we further propose a novel approach, which include effective and efficient techniques th at can learn the connectivity patterns and infer following behaviors in lockstep. The contributions are as follows:  X  Insights: We offer new insights into the fingerprints on the singular vectors  X  Algorithm: We propose an efficient algorithm that exploits the insights above, The rest of the paper is organized as follo ws: Section 2 discusses related work. Section 3 provides insights from strange connectivity patterns and Section 4 in-troduces our algorithm inferring lockstep behaviors. We give experimental results in Section 5 and conclude in Section 6. A great deal of work has been devoted to mining connectivity patterns. For finding social communities, Leskovec et al. [4] capture the intuition of a cluster as set of users with better internal connectivity than external connectivity. Clauset et al. [10] and Wakita et al. [11] infer community structure from network topology by optimizing the modularity. It is desirable that user of a community have a dense internal links and small numb er of links connected to users of other communities. For graph clustering and partitioning, Ng et al. [12] present a spectral clustering algorithm using eig envectors of matrices derived from the data. Huang et al. [13] devise a spectral bi-partitioning algorithm using the second eigenvector of the normalized Laplacian matrix.
 The properties of spectral subspaces have recently received much attention. Prakash et al. [14] show that the singular vectors of mobile call graphs, when plotted against each other, have separate lines along specific axes, which is asso-ciated with the presence of tightly-knit communities. The authors propose Spo-kEn to chip the communities embeded in the graphs. Ying et al. [15] suggest that the lines formed by nodes in well-st ructured communities are not necessar-ily axes aligned. Wu et al. [16] give theoretical studi es to explain the existence of orthogonal lines in the spectral subspaces.

However, none of the above approaches provided a guide for practitioners to understand real settings, namely, non-overlapping and partially overlapping lockstep behaviors, with an explanation for the strange spectral patterns we observe ( X  X taircase X  and  X  X earl X ), and strange connectivity patterns. In this section, we first introduce how to plot spectral subspaces. We then study different types of lockstep behavior, show the connectivity patterns. and give a list of rules on which type of behavior the spectral patterns represent. 3.1 Spectral-subspace Plot The concept of  X  X pectral-subspace plot X  is fundamental. The intuition behind it is that it is a visualization tool to help us see strange patterns. Let A be the N  X  N adjacency matrix of our social graph. Each user can be envisioned as an N -dimensional point; a spectral-subspace plot is a projection of those points in N dimensions, into a suitable 2-dimensio nal subspace. Specifically, the subspace is spanned by two singular vectors.

More formally, the k -truncated singular value decomposition (SVD) is a fac-torization of the form A = U X V T ,where  X  is a k  X  k diagonal matrix with the first k singular values, and U and V are orthonormal matrices of dimensions N  X  k . U and V contain as their columns the left-and right-singular vectors, re-spectively. Let u n,i be the ( n , i )entryofmatrix U , and similarly, v n,i is the entry of matrix V .Thescore u n,i is the coordinate of n -thfolloweronthe i -th left-singular vector. Thus, we define ( i , j )-left-spectral-subspace plot as the scatter plot of the points ( u n,i ,u n,j ), for n =1 ,...,N . This plot is exactly the projec-tion of all N followers on the i -th and j -th left-singular vectors. We have the symmetric definition for the N users as followees: ( i , j )-right-spectral-subspace plot is the scatter plot of the points ( v n,i ,v n,j ), for n =1 ,...,N . Clearly, it is easy to visualize such 2-dimensional plots; if used carefully, the plots can reveal a lot of information about the adjacency matrix, as we will show shortly.
As we had shown in Fig.1.(a-b), normally, given a random power law graph, we would expect to find a cloud of points around the origin in all the spectral subspaces. However, we find strange shapes ( X  X ay X  and  X  X earl X ) in some left-spectral-subspace plots of Weibo data. The question we want to answer here is: What kind of user behavior could cause  X  X ays X  and  X  X earls X  in spectral subspaces?
The short answer is different types of lockstep behavior. We explain below in more detail what type of lockstep behavior generates such the odd patterns. 3.2  X  X ay X  for Non-overlapping Lockstep Behavior In order to enumerate all the types of lockstep behavior, we introduce concepts of  X  X amouflage X  and  X  X ame X . If a group of followers F had monetary incentives to follow the same group of followees E in lockstep, they could follow additional followees who are not in E , which is called  X  X amouflage X  that helps look normal. Similarly, the group of followees E could have additional followers who are not in F , which we succinctly call  X  X ame X .

With these concepts, we can now study users X  lockstep behavior with synthetic datasets. We first generate a 1 M  X  1 M random power law graph and then inject two groups of followers that separately operate in lockstep. In detail, we create 50 new followers in group F 1 to consistently follow 50 followees in group E 1 . Similarly, we create another new follower group F 2 to follow a followee group E . Thus, if we plot black dots for non-zero entries in the adjacency matrix in the left side of Fig.2, we spot two 50  X  50 non-overlapping, dense blocks. Properties of the non-overlapping lockstep behavior are discussed as follows:  X  Density: High, if a new follower connects to 90% of the related followee  X  Camouflage: With camouflage, if the follower c onnects to 0.1% of other fol- X  Fame: With fame, if a new followee is also followed by 0.1% of other followers;
The spectral subspaces formed by left-and right-singular vectors are plotted in the middle and right of Fig.2, respectively. We spot footprints left in these plots by the different types of non-overlapping lockstep behavior and summarize the following rules:  X  Rule 1 (short  X  X ays X ): If the lockstep behavior of followers is compact on the  X  Rule 2 (long  X  X ays X ): If a group of followers and a group of followees are  X  Rule 3 (tilting  X  X ays X ): If the follower group has  X  X amouflage X  or the followee
In summary, we find that non-overlapping lockstep behavior creates rays on the spectral-subspace plots: as the densi ty decreases, the rays elongate; as the followers add camouflage or the followees add fame, the rays tilt. 3.3  X  X earl X  for Partially Overlapping Lockstep Behavior If a group of followers consistently follows their related group of followees, and partially connect to other groups of followees, we say they have partially over-lapping lockstep behavior.

Here we inject the random power law graph with three follower groups F i ,for i =1 ,..., 3, and five followee groups E i ,for i =1 ,..., 5. Each follower group has 1,000 fans and each followee group has 10 idols. Followers in F 1 connect to followees in E 1 -E 3 ; followers in F 2 connect to followees in E 2 -E 4 ; and followers in F 3 connect to followees in E 3 -E 5 ; Fig.3.(a) plots the adjacency matrix and (b) plots the left-and right-spectral s ubspaces. We summarize a new rule here.  X  Rule 4 ( X  X earls X ): Overlapping lockstep behavior creates  X  X taircase X  in the
In our case, Fig.3.(b) shows  X  X earls X  of three clusters, each having 1,000 fol-lowers in groups from F 1 to F 3 . Fig.3.(c) shows five clusters, each having 10 followees in E 1 to E 5 . If the follower groups share some followees, or followee groups have the same followers, their clusters are close on these plots.
With the insights into patterns on spectral-subspace plots (Rule 1-4), it is now easy for a practitioner to predict conn ectivity patterns in the adjacency matrix and infer different types of lockstep behavior. Our lockstep behavior infer ence algorithm has two steps:  X  Seed selection: Following Rule 1-4 in Sect.3, select nodes as seeds of followers  X   X  X ockstep X  propagation: Propagate  X  X ockstep X  score between followers and 4.1 Seed Selection The algorithm can start with any kind o f seeds, even randomly selected ones. However, careful selection of seeds obvious ly accelerates the response time. Fig.4 shows how we conduct the seed selection.

First, generate a range of spectral-subspace plots. We compute the top k left-singular vectors u 1 ,...,u k , and plot all the follower points in the subspace formed by each pair of the singular vectors. For example, Fig.4.(a) shows  X  X ays X  and  X  X earls X  in (1,3)-and (2,8)-left-s pectral-subspace plot, respectively.
Second, use the points as input to Hough transform and plot them in polar coordinates ( r ,  X  ), where r is the perpendicular distance and  X  is the rotation angle. As shown in Fig.4.(b), for  X  X ays X , it shows two straight lines at  X  =0 o and  X  =90 o ; for  X  X earls X , it shows a set of micro-clusters at some big r values. Third, divide r and  X  axes into bins and plot node frequencies in each bin. Therefore, for  X  X ays X , the  X  -bin plot shows two apparent spikes at 0 o and 90 o ; for  X  X earls X , the r -bin plot shows a single spike apart from r = 0. With median filtering, we can detect the spikes and then catch the related nodes as seeds.
Notice that if there is no lockstep beh avior, no dense block in the adjacency matrix, the spectral-subspace plots show a cloud of points around the origin, as shown in Fig.1.(a-b). The node frequency of angle  X  should be almost a constant, and the node frequency of distance r should decrease smoothly with the value increasing. The r -and  X  -bin plots are omitted for saving space. 4.2  X  X ockstep X  Propagation We now interpret how we start with the seeds and refine a group of followers and followees with lockstep behavior. The  X  X ockstep X  value of a followee is defined as the percentage of the seeds or  X  X ockstep X  followers who are its followers. Similarly, the  X  X ockstep X  value of a follower is defined as the percentage of the  X  X ockstep X  followees who are its followees. We need a threshold to decide which users are new  X  X ockstep X  followers/followees and here we use 0 . 8 as default.
The algorithm recursively propagates this value from followers to followees, and vice versa, like what Belief Propagation method does. In more detail, we explain the steps as follows.  X  From follower to followee: Fig.5.(a) shows an example of a directed graph  X  From followee to follower: Next for each follower, we count how many its fol- X  Repeat until convergence: Report the groups of  X  X ockstep X  followers and fol-Note that our algorithm is linear to the scale of the social graph and thus scalable to be applied in real applications. In this section we present our empirical evaluation, first on a large, real-world graph, and then on synthetic graphs where the ground truth is known. 5.1 Real-world Graph We operate our algorithm on the 100-million-node social graph Weibo . Table 1 report the statistics of strange connectivity patterns that we find on the network.  X   X  X locks X  and  X  X taircase X : With the proposed rules and algorithm, we catch  X  High density, small  X  X amouflage X  and small  X  X ame X : The density of every The above numbers validate the existence of non-overlapping and partially over-lapping lockstep behavior and also the effectiveness of our method. Further, we give additional evidence of the similar personalities of the  X  X ockstep X  followers.  X  Strange profiles: The login-names of 10,787 accounts from the  X  X ockstep X   X  Small in-degree values of followers: The average in-degree value of followers  X  Similar out-degree values of followers: The out-degree values of  X  X ockstep X  For the last point, we want to say, most graphs exhibit smooth degree distri-butions, often obeying a heavy-tailed distribution (power law, lognormal, etc). Deviations from smoothness are strange: Border et al. [17] said that in the case of the web graph, the spikes were due to link farms. Thus, if the removal of some  X  X ockstep X  users makes the degree plots smoother, then we have one more reason to believe that indeed those users were strange. 5.2 Synthetic Data Here we want to validate the effectiveness of Rule 3 (tilting  X  X ays X ) and 4 ( X  X earls X ). We inject a group of followers and followees operating in lockstep on a 1-million-node random power law g raph. The goal is to predict who are the injected nodes. We adopt Accuracy to qualify the performance, which is the ratio of correct predictions.
First, we add camouflage to the followers, i.e., we increase the density of connections between the followers and other followees on the graph from 0 to 0.01. We compare the performance of different versions of our algorithm: one considers Rule 3 when it selects seeds from s pectral-subspace plots, and the other does not. Rule 3 says when the followers have camouflage, the rays tilt. Fig.7.(a) shows that both accuracy values decrea se with the camouflage increasing, and the algorithm that considers Rule 3 performs much better.
Second, we inject partially overlapping lockstep behavior. In other words, we put a  X  X taircase X  in the adjacency matrix. We change the size of the staircase, i.e., the number of followers. One of the algorithms compared here considers Rule 4 and the other does not. Rule 4 says when there is a staircase, some spectral-subspace plots have  X  X earls X . Fig.7.(b) shows that our algorithm that fully considers all the rules is sensitive to the number of  X  X ockstep X  followers. When it is bigger than 7, which is big enough for the behaviors to show footprints in the eigenspaces, we can catch over 95% of the followers, while the version that does not consider Rule 4 fails to predict them.
 In this paper, we have proposed a novel method to infer users X  lockstep behaviors from connectivity patterns on large  X  X ho-follows-whom X  social graphs. We offer new understanding into the plots of spectral subspaces. The suspicious  X  X ay X  and  X  X earl X  patterns are created by differ ent types of lockstep behaviors. Using the insights, we design a fast algorithm to detect such behavior patterns. We demonstrate the effectiveness of our method on both a large real-world graph and synthetic data with injected lockstep behaviors.
 Acknowledgement. This work is supported by National Natural Science Foundation of China, No. 61370022, No. 61003097, No. 60933013, and No. 61210008; International Science and Technology Cooperation Program of China, No. 2013DFG12870; National Program on Key Basic Research Project, No. 2011CB302206; NExT Research Center f unded by MDA, Singapore, WBS:R-252-300-001-490. Thanks for the support of National Science Foundation, No. CNS-1314632;Army Research Laboratoryunde r Cooperative Agreement Number W911NF-09-2-0053; U.S. Army Research Office (ARO) and Defense Advanced Research Projects Agency (DARPA), No. W911NF-11-C-0088; and the National Science Foundation Gra duate Research Fellows hip, Grant No. DGE-1252522.
Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation, DARPA, or other funding parties. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation here on.

