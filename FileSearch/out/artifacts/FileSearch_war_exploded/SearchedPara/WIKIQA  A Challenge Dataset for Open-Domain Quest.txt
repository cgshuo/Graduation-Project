 Answer sentence selection is a crucial subtask of the open-domain question answering (QA) prob-lem, with the goal of extracting answers from a set of pre-selected sentences (Heilman and Smith, 2010; Yao et al., 2013; Severyn and Moschitti, 2013). In order to conduct research on this im-portant problem, Wang et al. (2007) created a dataset, which we refer to by QAS ENT , based on the TREC-QA data. The QAS ENT dataset chose questions in TREC 8-13 QA tracks and selected sentences that share one or more non-stopwords from the questions. Although QAS ENT has since become the benchmark dataset for the answer se-lection problem, its creation process actually in-troduces a strong bias in the types of answers that are included. The following example illustrates an answer that does not share any content words with the question and would not be selected: Q: How did Seminole war end? A: Ultimately, the Spanish Crown ceded the colony to United States rule.
 One significant concern with this approach is that the lexical overlap will make sentence selection easier for the QAS ENT dataset and might inflate the performance of existing systems in more natu-ral settings. For instance, Yih et al. (2013) find that simple word matching methods outperform many sophisticated approaches on the dataset. We ex-plore this possibility in Section 3.

A second, more subtle challenge for question answering is that it normally assumes that there is at least one correct answer for each question in the candidate sentences. During the data construction procedures, all the questions without correct an-challenge of answer triggering , an important com-ponent in QA systems, where the goal is to detect whether there exist correct answers in the set of candidate sentences for the question, and return a correct answer if there exists such one.

We present W IKI QA, a dataset for open-tains 3,047 questions originally sampled from Bing query logs. Based on the user clicks, each question is associated with a Wikipedia page pre-sumed to be the topic of the question. In order to eliminate answer sentence biases caused by key-word matching, we consider all the sentences in the summary paragraph of the page as the candi-date answer sentences, with labels on whether the sentence is a correct answer to the question pro-vided by crowdsourcing workers. Among these questions, about one-third of them contain correct answers in the answer sentence set.

We implement several strong baselines to study model behaviors in the two datasets, including two previous state-of-the-art systems (Yih et al., 2013; Yu et al., 2014) on the QAS ENT dataset as well as simple lexical matching methods. The results show that lexical semantic methods yield better performance than sentence semantic mod-els on QAS ENT , while sentence semantic ap-proaches (e.g., convolutional neural networks) outperform lexical semantic models on W IKI QA. We propose to evaluate answer triggering using question-level precision, recall and F 1 scores. The best F 1 scores are slightly above 30%, which sug-gests a large room for improvement. In this section, we describe the process of creat-ing our W IKI QA dataset in detail, as well as some comparisons to the QAS ENT dataset. 2.1 Question &amp; Sentence Selection In order to reflect the true information need of gen-eral users, we used Bing query logs as the ques-tion source. Taking the logs from the period of May 1st, 2010 to July 31st, 2011, we first se-lected question-like queries using simple heuris-tics, such as queries starting with a WH-word (e.g.,  X  X hat X  or  X  X ow X ) and queries ending with a question mark. In addition, we filtered out some entity queries that satisfy the rules, such as the TV show  X  X ow I met your mother. X  In the end, approx-imately 2% of the queries were selected. To fo-cus on factoid questions and to improve the ques-tion quality, we then selected only the queries is-sued by at least 5 unique users and have clicks to Wikipedia. Among them, we sampled 3,050 ques-tions based on query frequencies.

Because the summary section of a Wikipedia page provides the basic and usually most impor-tant information about the topic, we used sen-tences in this section as the candidate answers. Figure 1 shows an example question, as well as the summary section of a linked Wikipedia page. Figure 1: An example question and the summary paragraph of a Wikipedia page. 2.2 Sentence Annotation We employed crowdsourcing workers through a platform, which is similar to Amazon MTurk, to label whether the candidate answer sentences of a question are correct. We designed a cascaded Web UI that consists of two stages. The first stage shows a testing question, along with the ti-tle and the summary paragraph of the associated Wikipedia page, asking the worker  X  X oes the short paragraph answer the question? X  If the worker chooses  X  X o X , then equivalently all the sentences in this paragraph are marked incorrect and the UI moves to the next question. Otherwise, the sys-tem enters the second stage and puts a checkbox along each sentence. The worker is then asked to check the sentences that can answer the question in isolation , assuming coreference is resolved. To ensure the label quality, each question was labeled by three workers. Sentences with inconsistent la-bels would be verified by a different set of crowd-sourcing workers. The final decision was based on the majority vote of all the workers. In the end, we included 3,047 questions and 29,258 sentences in the dataset, where 1,473 sentences were labeled as answer sentences to their corresponding questions.
Although not used in the experiments, each of these answer sentence is associated with the an-swer phrase , which is defined as the shortest sub-string of the sentence that answers the question. For instance, the second sentence in the summary paragraph shown in Figure 1 is an answer sen-tence. Its substring  X  X aul the Apostle and Tim-othy our brother X  can be treated as the answer phrase. The annotations of the answer phrases were given by the authors of this paper. Because the answer phrase boundary can be highly ambigu-ous, each sentence is associated with at most two answer phrases that are both acceptable, given by two different labelers. We hope this addition to the W IKI QA data can be beneficial to future re-searchers for building or evaluating an end-to-end question answering system. 2.3 W IKI QA vs. QAS ENT Our W IKI QA dataset differs from the existing QAS ENT dataset in both question and candi-date answer sentence distributions. Questions in QAS ENT were originally used in TREC 8-13 QA tracks and were a mixture of questions from query logs (e.g., Excite and Encarta) and from human editors. The questions might be outdated and do not reflect the true information need of a QA sys-tem user. By contrast, questions in W IKI QA were sampled from real queries of Bing without edi-torial revision. On the sentence side, the can-didate sentences in QAS ENT were selected from documents returned by past participating teams in the TREC QA tracks, and sentences were only included if they shared content words from the questions. These procedures make the distribu-tion of the candidate sentence skewed and unnat-ural. In comparison, 20.3% of the answers in the W IKI QA dataset share no content words with questions. Candidate sentences in W IKI QA were chosen from relevant Wikipedia pages directly, which could be closer to the input of an answer sentence selection module of a QA system.

To make it easy to compare results of dif-ferent QA systems when evaluated on the W
IKI QA dataset, we randomly split the data to training (70%), development (10%) and testing (20%) sets. Some statistics of the QAS ENT and W IKI QA datasets are presented in Tables 1 and 2. 3 W IKI QA contains an order of Table 3: Question classes of the QAS ENT and W
IKI QA datasets. magnitude more questions and three times more answer sentences compared to QAS ENT . Unlike QAS ENT , we did not filter questions with only incorrect answers, as they are still valuable for model training and more importantly, useful for evaluating the task of answer triggering, as de-scribed in Section 3. Specifically, we find nearly two-thirds of questions contain no correct answers in the candidate sentences.

The distributions of question types in these two W
IKI QA contains more description or definition questions, which could be harder to answer. Many systems have been proposed and tested on the QAS ENT dataset, including lexical semantic models (Yih et al., 2013) and sentence seman-tic models (Yu et al., 2014). We investigate the performance of several systems on W IKI QA and QAS ENT . As discussed in Section 2, W IKI QA of-fers us the opportunity to evaluate QA systems on answer triggering. We propose simple metrics and perform a feature study on the new task. Finally, we include some error analysis and discussion at the end of this section. 3.1 Baseline Systems We consider two simple word matching methods: Word Count and Weighted Word Count. The first method counts the number of non-stopwords in the question that also occur in the answer sentence. The second method re-weights the counts by the IDF values of the question words.

We reimplement LCLR (Yih et al., 2013), an answer sentence selection approach that achieves very competitive results on QAS ENT . LCLR Table 4: Baseline results on both QAS ENT and W
IKI QA datasets. Questions without correct an-swers in the candidate sentences are removed in the W IKI QA dataset. The best results are in bold . makes use of rich lexical semantic features, including word/lemma matching, WordNet and vector-space lexical semantic models. We do not We include two sentence semantic methods, and Convolutional Neural Networks (CNN; Yu et al., 2014). The model score of PV is the cosine similarity score between the question vector and the sentence vector. We follow Yu et al. (2014) and employ a bigram CNN model with average pool-ing. We use the pre-trained word2vec embeddings For computational reasons, we truncate sentences up to 40 tokens for our CNN models.

Finally, we combine each of the two sentence semantic models with the two word matching fea-tures by training a logistic regression classifier, re-ferring as PV-Cnt and CNN-Cnt. CNN-Cnt has been shown to achieve state-of-the-art results on the QAS ENT dataset (Yu et al., 2014). 3.2 Evaluation of Answer Triggering The task of answer sentence selection assumes that there exists at least one correct answer in the can-didate answer sentence set. Although the assump-tion simplifies the problem of question answering, it is unrealistic for practical QA systems. Modern QA systems rely on an independent component to pre-select candidate answer sentences, which uti-lizes various signals such as lexical matching and user behaviors. However, the candidate sentences Table 5: Evaluation of answer triggering on the W
IKI QA dataset. Question-level precision, recall and F 1 scores are reported. are not guaranteed to contain the correct answers, no matter what kinds of pre-selection components are employed. We propose the answer triggering task, a new challenge for the question answering problem, which requires QA systems to: (1) de-tect whether there is at least one correct answer in the set of candidate sentences for the question; (2) if yes, select one of the correct answer sentences from the candidate sentence set.

Previous work adopts MAP and MRR to eval-uate the performance of a QA system on answer sentence selection. Both metrics evaluate the rela-tive ranks of correct answers in the candidate sen-tences of a question, and hence are not suitable for evaluating the task of answer triggering. We need metrics that consider both the presence of answers with respect to a question and the correctness of system predictions.

We employ precision, recall and F 1 scores for answer triggering, at the question level. In partic-ular, we compute these metrics by aggregating all the candidate sentences of a question. A question is treated as a positive case only if it contains one or more correct answer sentences in its candidate sentence pool. For the prediction of a question, we only consider the sentence in the candidate set that has the highest model score. If the score is above a predefined threshold and the sentence is labeled as a correct answer to the question, then it means that the prediction is correct and the question is answered correctly. 3.3 Results W
IKI QA vs. QAS ENT The MAP and MRR results are presented in Table 4. We only evalu-ate questions with answers in the W IKI QA dataset under these metrics. On the QAS ENT dataset, as found by prior work, the two word matching meth-ods are very strong baselines, in which they sig-nificantly outperform sentence semantic models. By incorporating rich lexical semantic informa-tion, LCLR further improves the results. CNN-Cnt gives results that match LCLR, and PV-Cnt
The story on the W IKI QA dataset is differ-ent. First, methods purely rely on word match-ing are not sufficient to achieve good results. Sec-ond, CNN significantly outperforms simple word matching methods and performs slightly better than LCLR, which suggests that semantic under-standing beyond lexical semantics is important for obtaining good performance on W IKI QA. Finally, word matching features help to further boost CNN results by approximately 3 to 4 points in both MAP and MRR.
 Evaluation of answer triggering on W IKI QA We evaluate the best system CNN-Cnt on the task of answer triggering, and the results are shown in Table 5. We tune the model scores for making pre-dictions with respect to F 1 scores on the dev set, due to the highly skewed class distribution in train-ing data. The absolute F 1 scores are relative low, which suggests a large room for improvement.
We further study three additional features: the length of question (QLen), the length of sentence (SLen), and the class of the ques-tion (QClass). The motivation for adding these features is to capture the hardness of the question and comprehensiveness of the sentence. Note that the two question features have no effects on MAP and MRR. As shown in Table 5, the question-level F 1 score is substantially improved by adding a simple QLen feature. This suggests that designing features to capture question information is very important for this task, which has been ignored in the past. SLen features also give a small improve-ment in the performance, and QClass feature has slightly negative influence on the results. 3.4 Error Analysis &amp; Discussion The experimental results show that for the same model, the performance on the W IKI QA dataset is inferior to that on the QAS ENT dataset, which suggests that W IKI QA is a more challenging dataset. Examining the output of CNN-Cnt, the best performing model, on the W IKI QA dev set seems to suggest that deeper semantic understand-ing and answer inference are often required. Be-low are two examples selected that CNN-Cnt does not correctly rank as the top answers: Q1: What was the GE building in Rockefeller Plaza called before? A1: [GE Building] Known as the RCA Building until 1988, it is most famous for housing the head-quarters of the television network NBC.
 Q2: How long was I Love Lucy on the air? A2: [I Love Lucy] The black-and-white series originally ran from October 15, 1951, to May 6, 1957, on the Columbia Broadcasting System (CBS).
 Answering the first question may require a better semantic representation that captures the relation-ship between  X  X alled before X  and  X  X nown ... un-til X . As for the second question, knowing that on a TV channel (e.g., CBS) implies  X  X n the air X  and a time span between two dates is legitimate to a  X  X ow long X  question is clearly beneficial. We present W IKI QA, a new dataset for open-domain question answering. The dataset is con-structed in a natural and realistic manner, on which we observed different behaviors of various meth-ods compared with prior work. We hope that W
IKI QA enables research in the important prob-lem of answer triggering and enables further re-search in answer sentence selection in more real-istic settings. We also hope that our empirical re-sults will provide useful baselines in these efforts.
