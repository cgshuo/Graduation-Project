 tance, notable research efforts have been made to improve the quality of data. Currently, a natural way to deal with dirty data is data cleaning. Many data cleaning systems have been proposed, such as Potter X  X  Wheel [4], AJAX [3]. without knowledge, machine could not tell how to revise the data. Even though expert thods are difficult to compute, which are NP-hard problems or even non-computable. 
Since crowdsourcing [1] integrates the efforts of non-experts and could achieve the goal with low cost, we attempt to clean the data with crowdsourcing to balance the cost and quality of data cleaning. Additionally, with crowdsourcing, some problems that are difficult for machine could be easily solved by human. For example, for automatic approaches, the repairing for inconsistency detected with CFD is NP-Complete [10]. 
With these advantages, we develop CrowdCleaner which use crowdsourcing to rent systems, our system has following benefits. High Accuracy but Low Costs. CrowdCleaner makes human answer the questions through Crowdsourcing. To reduce the cost and ensure the cleaning quality, we methods for crowdsourcing, and choose a few reliable workers. Simpleness. CrowdCleaner uses human to input answers via crowdsourcing to clean data, neither complex machine-calculation nor extra knowledge base is needed. ferent requirements of users, such as incompleteness, inconsistency or conflicts. problems. We also design questions forms to make workers answer easily. 
The remaining parts of the paper are organized as follows. Section 2 shows the ar-chitecture of our system. Section 3 describes the algorithms used in our system CrowdCleaner. Demo scenarios are introduced in the Section 4. We draw conclusions in Section 5. In this section, we introduce the architecture of our system which is shown in Figure 1. We use a flexible architecture to solve different data quality problems. In our system, we can deal with three data quality problems named incompleteness, inconsistency and conflicts which are the most common among data quality problems. 
When a user uploads a dirty data file through the user interface, the system scans the data set to check if there exists incompleteness, inconsistency or conflicts. The detec-inconsistency is detected by rules such as FD and CFD [9]. Conflicts could be found by entity resolution [7]. invoked to generate questions for workers and send them to the crowdsourcing platform. from workers. Then combining with the cleaning results of automatic and crowd-sourcing cleaning approaches, the results review module show the whole results to users. In this section, we will introduce the techniques used in our system. Since error detection in this section, we focus on crowdsourcing-related techniques. inconsistency and conflicts, we use entropy on the fraction of tuples to calculate the uncertain score of a record [8]. For missing attribute imputation, we compute the un-tuples with uncertainty larger than a given threshold. which calculated by automatic method to workers. For inconsistency and conflicts, we provide several candidate options with their frequency of occurrence as a reference, so that workers can achieve enough information to make a choice. Result Filtration. Answers from different workers are sent to result filtration module. We calculate the confidence degree of each answer according to the quality of work-ers who provide the answer. The quality of workers are maintained based on history information [8]. To choose the proper answer and reduce the cost, we design a model to evaluate the confidence degree of each answer and make decision once the evidence is sufficient. animal, school on the web. Since data sources may contain errors or inconsistency, we use them as our experimental data. With the consideration that crowdsourcing the demonstration, we develop a crowdsourcing platform special for data cleaning. We plan to demonstrate features of CrowdCleaner in following 4 parts. Basic Concepts. We demonstrate basic concepts of data cleaning and crowdsourcing in CrowdCleaner with a poster, where the system architecture and the flow of algorithms are shown. After cleaning, the user can download the clean results as a flat file. the users choose manual crowdsourcing method, we will show the detail of dirty cost in Figure 2(b). Data Cleaning Result Review . As the interface shown in Figure 2(c), CrowdCleaner provides an interface for the detail of different data problems and the records we have corrected by automatic cleaning or crowdsourcing. To deal with the problems of lack of knowledge and computation difficulty in current data cleaning systems, we develop CrowdCleaner, a data cleaning system based on share of data for crowdsourcing and choosing proper answers from workers. Friendly accuracy. Acknowledgement. This paper was partially supported by NGFR 973 grant 2012C B316200, NSFC grant 61003046, 61111130189 and NGFR 863 grant 2012AA011004. 
