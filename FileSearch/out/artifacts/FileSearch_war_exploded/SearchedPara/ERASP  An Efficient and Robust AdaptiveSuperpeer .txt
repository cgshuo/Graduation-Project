 Peer to peer (P2P) networks have recen tly become a popular media through which huge amount of data can be shared . Peers are connected among themselves by some logical links forming an overlay above the physical network. Due to dynamics that take place in the network, maintaining stability of the overlay structure is a major challenge for the P2P network community.

Many typical P2P overlay structures h ave been described in the literatures [3,7,8]. More r ecently, some novel P2P systems wer e proposed [9,10,11]. Currently superpeer (SP) topologies are emerging as most influencing structure among them. By introducing the concept of SP, the P2P topologies are now organized through a two-level hierarchy [4,5,6,8,12]. The SP nodes that are faster and/or more reliable than  X  X ormal X  nodes connect to each other forming the upper level in the network hierarchy. Each SP works as a server on behalf of the set of client peers who form the lower level of network hierarchy.

The SP paradigm allows decentralized ne tworks to run more efficiently by ex-ploiting heterogeneity and distributing load. However, building and maintaining this topology is not simple. The extreme scale and dynamism call for robust and efficient protocols, capable to self-organ ize and self-repair a SP overlay in spite of both voluntary and unexpected events like joins, leaves and crashes.
Pyun et al. proposed a scalable unstructured P2P system (SUPS) which is a special kind of SP network [6]. In [4], Montresor proposes a generic mechanism for the construction and maintenance of the SP overlay structures. The approach is that the nodes with smaller capacity are replaced by the bigger in order to receive a minimum number set of SPs. Gnutella protocol 0.6 [1] employs a hy-brid architecture combini ng centralized and decentralized model. The ERSN [12] utilizes peer sampling protocol based on random walks to estimate the network requirements for constructing an efficie nt SP network and establishes emergence links between leaf peers to get a robust network.

In this paper, we design and implement an efficient and robust adaptive su-perpeer protocol ERASP on the basis of the existing hierarchical topology man-agement protocols. ERASP takes capacity and online time metric of each par-ticipant peer into account. Furthermore, the connectio n intension from client to SP is enhanced. Experiment results show that ERASP is an efficient and robust adaptive protocol for building P2P overlay network.

The remainder of the paper is organized as follows. In Section 2 we describe the ERASP in detail. Experimental results that validate our mechanism are presented in Section 3. Finally, we con clude our paper and draw directions for future work in Section 4. We start out by giving some notations. Let n i be a peer in an N  X  nodes network. Each SP maintains two neighbor sets: the client peer set G cp ( n i )andtheSPset G sp ( n i ). In order to distinguish peers that are capable to act as SPs from peers that can join just as clients, we associate each peer n i with a parameter c n i representing its capacity. Parameter t n i denote the online time factor of n i . Additionally, S denotes candidate SP set and load n i is the real load of n i .
Informally speaking, a SP overlay topology is characterized as follows. Peers must be assigned one of two mutually-exclusive roles: SP or CP. Our goal is to produce a SP topology characterized by minimum number of SPs. Peers with higher capacity and longer online time a re considered better candidates as SPs. At each time, the target topology is the one composed by the minimum set of peers whose total capacity is sufficient t o cover all other client peers and these SPs have longer online time. 2.1 Selecting Clients and Superpeers To build a topology with desirable characteristics, we propose a mechanism based on the well-known gossip paradigm [1,2]. Topology information such as identifier, capacity, online time, current role and neighborhood of participating peers are disseminated through periodic gossip me ssages between randomly selected peers. Based on the received information, peer s update their neighborhoods in order to obtain a better approximation of the target topology.
Algorithm 1 shows the ERASP evolutionary framework. The rationale behind the process is that all SPs try to push clients towards more powerful and the longer online time peers that are willing to accept more load. In lines 2-7, the protocol performs a random selection among those SPs that are underloaded and whose capacity is larg er or equal than the capacity of the local peer. After that each peer judges its role. If the current peer p is SP and the selected SP q is not empty, then p tries to transfer all its clients to the selected SP q and itself becomes p  X  X  a client. If q is empty, just do nothing. In line 15, if the role of p is CP and the selected SP q is not empty, then p becomes a client of q . In line 17, a clint peer who can not join any SP will become a SP itself. The result of select is that each client peer is connected to its SPs. 2.2 The Connectivity Enhancement In order to increase the robustness of our protocol, the connectivity from client peers to SPs is strengthened in ERASP. That is, each client peer maintains d super peers. The client peer n i maintains different peer sets in different cases:  X  If G sp ( n i ) is not empty and | G sp ( n i ) | X  d , then select d SPs that have  X  If G sp ( n i ) is empty but S is not empty, then select d candidate SPs from S  X  If both G sp ( n i )and S are empty, then n i is connected to other client peers Note that the capacity and the online time parameters may be incompatible. Which parameter should be selected depend on particular application occasion. It is easy to see that in the absence of failures, this mechanism eventually pro-duces the target topology. In fact, all SPs continually try to discover peers with larger capacity and longer online time t hat are not completely utilized. These are selected from the union of the underloaded sets, that progressively shrinks until it becomes empty or reaches its minimum size. To validate ERASP, we have performed numerous experiments based on simu-lation. We were intereste d in three main questions: (i) what is the behavior of the protocol with respect to its paramet ers; (ii) how robust the protocol is; and (iii) what is the performance advantage compared to related protocols.
Fig.1(a) shows the behavior of our protocol over time. As initial configuration, we selected a topology that is the farthest from the target: a random topology where all peers behave as SPs. The curves represent the number of SPs con-tained in the network after the specified number of rounds, averaged over 20 experiments. The algorithm proves to be extremely fast, independently from the distribution considered: after a few rounds the resulting topologies approximate extremely well the target.

The construction of an efficient SP topology should decrease the number of peers firstly. The theoretical minimum number of super peers is the minimum value of super peers required. Fig.1(b) shows the comparison of optimal ( d =1) and suboptimal ( d = 2) cases. We can see that when d = 2 the topology has smaller SPs, but receives the be tter robustness (see later).

Fig.2 shows relation between time complexity and network size. Three dif-ferent points in time are considered. Interestingly, the time needed to reach such utilization thresholds is independent from network size. While the target configuration requires a larger number of rounds, that grows (approximately) logarithmically with respect to the size of the network.

From the point of topology stability even if all of the SPs failed, ERASP can self-organized as a new topology quickly. Of course, the probability of this case is very low, especially the selected SPs have the longest online time factor. This makes clients covered by SPs stably. Once the topology reaches stable state, the role of each peer will not change continually. Thus the traffic within the network decreases greatly.

In the following we will demonstrate the robustness of ERASP. Fig.3 shows a catastrophic scenario: at round 30, 30% of the SPs are removed. After the initial period when all client peers whose SPs h ave crashed become SP by themselves, the protocol behaves as usual and repair s the overlay topology by selecting new SPs among the remaining peers. We can s ee the protocol reaches steady state quickly again. Comparing the different value of d , d =2makesthenumberof SP increase little but the number of uncov ered client peer decreases remarkably.
Finally, we compare the efficiency of ERASP with that of Gnutella 0.6 and literature [4] in terms of network over head and operations performed by each peer to form such SP overlays. The comp arison of total network overhead is illustrated in Fig.4. We find that the overhead spent by ERASP to construct SP topology is far less Gnutella 0.6 and literature [4] with the network size increasing. The reason is that ERASP chooses stable peer with longer online time and higher capacity, this results in less network traffic necessarily. In this paper we propose an efficient and robust adaptive protocol ERASP for constructing superpeer P2P overlay netw ork. The peer with higher capacity and longer online time will be selected. The simulation results show that comparing with the existing approaches it decreases network traffic evidently. The future work includes to incorporate ERASP with the ability of handling locality hetero-geneity and to explore the behavior of such hierarchical topology under churn.
