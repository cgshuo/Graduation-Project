 management of the increasing mass of knowledge they accumulate and search on it. However, as reported by Susan Feldman [1], knowledge workers still spend from 15% to 35% of their time searching for information and 40% corporate users can X  X  find the users perform, expert finding is a frequently faced problem and a variety of practical scenarios of organizational situations that lead to that problem have been extensively presented in the literature [2], [3], [4]. 
Because of the target shifting from document to expert, simply using searching approach. The reason lies that there is a variety of data structures (Web-pages, Emails and Database et al) and formats (e.g. HTML, PDF, WORD) in an enterprise information environment, and it X  X  difficult to extract and combine useful information from those different resources. Furthermore, it X  X  also a challenge to build up a relationship between query and expert via documents because experts X  information is not all accurately and explicitly documented. Traditional retrieval algorithm which is generally based on keyword matching may not lead to the relevant experts. 
The main contributions of our work are that we propose a person-centered model which builds a direct relationship between query and expert by searching among Person Description Document (PDD)s for each expert. This model also provides a convenient approach to handle the problem of mining and integrating expertise evidence in multi-resource. We also adopt a term dependence model for ranking retrieved PDDs, which helps to improve searching precision and accuracy. 
The rest of paper is organized as follows. Section 2 gives a brief review of related work on expert finding. Section 3 introduces details of the PDD-based search model and term dependency retrieval method. Experiment evaluation is presented in Section 5 to assess the performance of the proposed algorithm. Finally come the discussions and conclusion. importance in real organizations, expert finding attracts lots of researchers X  interest in "knowledge maps") through manual entry of expertise data are many organization used CONNEX [6] and the SAGE People Finder [7] are examples of this approach. However, expert databases are known to suffer from numerous shortcomings [8]: manually developing the databases is a labor intensive and expensive task and databases are usually infected by the propensity of the experts to devote time to offer detailed description of their expertise. 
Nowadays, people attempt to develop systems that exploit experts by retrieving information from corporate documents in organizations. Generally speaking, there are two alternative expert search models: the query-time generated and the aggregated search models. 
In query-time generated models, source databases are searched employing information internally. The system ExpertFinder created by Mattox and his colleague through queries to the search engine then gathers the evidence and combines to a single score for one person. The ContactFinder system [10] and some commercial systems like Autonomy X  X  IDOL Server [11] also employ query-time generated models to find expert. 
In other approaches of associating experts to aggregated expertise models, experts are linked to a pre-constructed or dynamically generated central representation of expertise which can be a kind of knowledge model (ontology), organizational structure, etc. Several studies have been conducted on this model, for example, Tacit X  X  KnowledgeMail [12] and Lotus X  X  Discovery Server [13]. A typical system built by Nick Craswell, and David Hawking is P@NOPTIC Expert [14]. This system maintains a list of experts, gathered from the corporate documents which mention those people to build  X  X mployee documents X , and exploit experts in those documents. 
Query-time generated model has one shortcoming that it is hard to manipulate expertise information and to allow for an open and multi-purpose exploit of the expertise data from all types of documents [15], but organizations often have a mixture of data types and each data type has particular characteristics, including inter and intra document structure. To overcome this shortcoming, the proposed PDD-based search integrates expertise evidence from multi-source. However, unlike previous aggregated search models, the search model in this paper consists of a refined person description document constructed from web pages and a novel PDD ranking model using bi-gram retrieval. 3.1 PDD-Based Search Model As mentioned, expert finding suffers from two tough problems. First, expertise data are (Web sites, databases, Emails and the like). How well expertise indicators like terms information is not fully documented, and usually only a part of a document is related to the expert whom it mentions. Hence how to solve these problems is our research focus. Definition 1: There is potential expertise evidence distributed in heterogeneous sources, which can be recognized and extracted to reform a document that describes the particular expert. This refined document is called Person Description Document ( PDD) . In an organization, all these PDDs compose a PDD collection. A PDD represents the expertise data associated with an expert. This PDD-based ranking method represents whether or not a PDD is relevant to a specific area where the user wants to find the experts. 
The model is based on the assumption that each expert can be represented by a list of keywords which are related to him, and in a limited document collection expert evidence are extracted as PDD to approximate the ideal description of him. As a whole, PDD-based search model estimates (| ) pe q , the probability of the expert e given the query q . specifically. The model is defined as: person e to approach e  X  . The PDD-based ranking method will be described in section 3.3. 
This PDD approach gains benefits from two processes: information clustering and data cleansing. This model aggregates expertise information to tackle the problem of heterogeneity and distribution of sources and implements information extraction process as filters to documents avoiding searching for documents altogether. PDD while in query-time generated model expertise data is dispersed in piles of documents. 
Another advantage is that the PDD approach could provide flexible accurate expertise evidence extraction. Each data type in the corporation has particular different data type. What X  X  more, PDDs could be human readable. In the returned PDD list, the user could choose to look at a PDD for a candidate expert and from that PDD documents related to that expert. 
Intuitively, variant weights are given to expertise data from different source so as to aggregate information effectively, which has already been discussed by some previous work [14]. How to collect not-documented expertise information, especially from web extracting expertise information from Web Pages as component of PDD. 3.2 Construction of PDD from Web Pages Three kinds of features have been proposed to construct the PDD from web-pages, namely context information , distance-weighted functional information , and group information . have been proved to be supportive to him. This information is a window of text which supplies detailed and descriptive information. Distance-weighted functional information is generated using Markup terms in HTML documents, such as the Title, Heading , Bold , etc, which have significant contribution in describing web pages, containing summary words and have abundantly expressive force [16]. However, it X  X  not accurate and appropriate to simply extract all the Markup information as component of PDD. A document may have more than one indiscriminate Markup information extraction may cause the topic-drift problem. A occurrence of a person, the nearest Markup information ahead of the person are considered to be reliably potential expertise information. For example, the caption of a paragraph that mentioned a person may supply recapitulative expertise evidence of him. 
Group information is extracted considering both plain text information and Markup context as a group, we examine a mixture of patterns that group information expressed. table, the left column list person names and in the right column give the corresponding individual information of group members are respectively treat and extracted as When an expert to the given topic is affirmed, his or her group mates are provided as an expanded answer. 
In the experiment section, the effects of all the above PDD-features will be discussed. 3.3 Term Dependency Ranking Model for PDD-Based Search Expert related queries are very well-defined and specific [17]. Generally they contain more than one word and replete with professional keywords which are correlated with adjacent words have strong relationship with each other. Based on our previous work would be more likely to be relevant. 
In implementation, this method is combined with BM2500 term weighting by information and adding to the original query term weights as a summation. The traditional BM2500 formula given by Robertson [20] is that: document number of collection. Our modified BM2500 considering word pair is as follow: Where wp df stands for exact document frequency of word pair in the collection and  X  speaking, 2 W is smaller than original weights for DF of word pair is not high relative relationship between word pair in queries is emphasized. Now we describe our empirical results. 4.1 Experimental Setting The PDD-based search model approach is evaluated on web page part of dataset in TREC (Text REtrieval Conference, http://trec.nist.gov/) 2005 expert finding task. The collection is a crawl of the public W3C (*.w3c.org) sites and comprises 331,037 documents, in which 132643 are Web pages. Participants could use all the documents professional short terms like  X  X emantic Web Coordination X . In TREC 2005 enterprise track, the search topics were so-called  X  X orking groups X  of the W3C, and the experts were members of these groups. These ground-truth lists were not part of the collection but were located after the crawl was performed. This enabled TREC to dry-run this task constructed manually by TREC. 4.2 Effect of Component in PDD shown in figure 1 and figure 2. In these experiments,  X  in word pair ranking method is set to 1. and context field also provide about 0.2 mean average precision, though not as much as former two. The bold text and anchor text provide low MAP correspondingly. Then the fields are merged together and Figure 2 shows the effect of their combination. We take combination of &lt;title&gt; and anchor text give minor increase to MAP while combination Anchor text field is added to the former combination but it doesn X  X  bring more enhancements. evidence is reasonable. After observation on many organizational HTML documents, introducing technology and a group of experts, they often put the keywords and mentions well by containing summary information. 
Context information and group information are combined in these experiments as person-based and group-based context information. The results prove that it is important and dependable expertise data. 
At last, anchor text and bold text don X  X  provide great increase to MAP when they are combined with other effective fields. Anchor text may contain repeated expertise information that title field represents and may contain some noise of no use. For bold text, the results are explained from two aspects: in one hand, the amount of bold text extracted is not large; in the other hand, it X  X  frustrate to determine the effectiveness of bold text because the author use bold text to emphasize may not be have relevance with expert it mentions. 4.3 Effect of Word Pair Based Ranking Model In this section, the effectiveness of our ranking method based on word pair is examined. 
First the impact that the method has on size of context length is illustrated in Figure3 average precision increase as window-size rises and achieves best performance at 60-80 words, then MAP falls when window-size becomes larger. The lower curve is word pair can achieve better performance than original BM2500 method on context improvement. 
Second, Table 1 illustrates a consistent improvement on other features of PDD after word pair based ranking method applied. Notice that although comparing with the all-pervading improvement in all main evaluation is demonstrated. 
The basic idea of the word pair based ranking model is that if adjacent words in the query are also adjacent in the document, then the document is relevant. When the text area is not long enough, this method doesn X  X  express its usefulness much. The reason is adjacent words that are also adjacent in queries is small. The experiments prove this by improvement of this ranking method is trivial. When the window enlarged, the precision increase because more adjacent query words are included in PDD. However, when the window-size is too large, in an extreme case, the entire document is viewed as a window, the performance is not good. Too much noise are covered in the context at this situation. 4.4 Comparison Experiment on Search Model In this section, the effectiveness of PDD-based search model is examined by comparing to experiments of query-time generated search model. 
Firstly, a contrastive experiment is conducted which involves two steps. In step 1, documents relevant to the query are retrieved using traditional IR model; and in step 2 candidates are explored in the returned documents. While the previous step takes full advantage of well-studied IR models, in the second step true experts are selected within the relevant documents using voting method. Three voting ways are attempted, name-occurrence counting, document-similarity-based and document-ranking-based schemes. The latter two calculate a person X  X  score according to the similarity score or the ranking of the documents where he or she appears. In all these schemes, the features considered in PDD are also involved in contrastive experiment to clarify whether or not the feature information is factor that makes effort on the gap and the results shows that there X  X  trivial difference. Additionally, word pair based ranking model is used in the first phrase. 
Table 2 shows the improvement of results of PDD approach on the result of the scheme based on documents ranking. The results illustrate a considerable gap between generate model in TREC2005 expert finding task is also presented and we achieved the best performance in the evaluation as participant. Best result using query-time generated model in 
The results show that the PDD-based search model is more effective by a more than 45% improvement to contrastive experiment in search precision. The seasons can be analyzed in several aspects. 
Potential expertise information is extracted from the documents at mean time this process cleanses the data and abandons useless information. Then this data is aggregated as PDD which means that a relationship is built up between documents and persons. PDD approach centralizes expertise data which can fortify the description of the person while in query-time generated model expertise data is dispersed in piles of documents. Notice that BM2500 normalized the PDD length at retrieval step acting as a person normalization which avoids that in such cases as certain irrelevant people whose names appear in almost every document and query-time generated model will assign high scores to them. 
Query-time generated model first retrieve documents relevant to the query, however, it X  X  not reasonable to say that because the document has the biggest similarity to the query-related and the expertise data in PDD just represents the person, so it X  X  intuit to say that more similar the PDD to the query, more relative the person to query. SOURCE Docs PDD Docs Size (MB) PDD Size (MB) 
Meanwhile, the PDD-based search is efficient. Table 3 illustrates that the PDD collection is much smaller than original document collection both in document number and in collection size. The PDD documents number is 2.3% of original source and the offline job, therefore the benefit that providing more efficiency online service is gained with small index. Oppositely, query-generated model use the original document collection to index and to retrieve, so it put all the expert exploitation at online time. This paper proposes a PDD based search model to solve the expert finding problem. This model develops a strategy to extract the features and context from semi-structured web pages as filter to non-expertise data then combine these expertise data together as PDD to fortify the evidence of expert and to reduce number of documents in collection. A word pair based ranking method is adopted to rank the retrieved PDDs effectively. person-centered model is proposed, which builds a direct relationship between query and expert by searching among PDD for each expert. This model also provides a convenient approach to handle the problem of mining and integrating expertise evidence in multi-resource. Especially, this paper proposes how to mine expertise information in web pages. Second, a term dependence ranking model is proposed which helps to improve search precision. 
This research is mainly focus on finding expert using web pages resource and one of the future works is to extract expertise information from multi-sources, especially from emails which is another import part of corporate data and to found a effective way to integrate this information as one PDD. Another future work is to make more application on other vertical search fields. Regarding the characteristic of PDD-based search model, this approach can be extended to object-centralized search such as software search, MP3 search and so on. 
