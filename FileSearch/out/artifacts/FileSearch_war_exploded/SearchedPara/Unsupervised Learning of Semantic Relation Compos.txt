 Capturing the meaning of text is a long term goal within the NLP community. Whereas during the last decade the field has seen syntactic parsers mature and achieve high performance, the progress in se-mantics has been more modest. Previous research has mostly focused on relations between particular kind of arguments, e.g., semantic roles, noun com-pounds. Notwithstanding their significance, they target a fairly narrow text semantics compared to the broad semantics encoded in text.

Consider the sentence in Figure 1. Semantic role labelers exclusively detect the relations indicated with solid arrows, which correspond to the sentence syntactic dependencies. On top of those roles, there are at least three more relations (discontinuous ar-rows) that encode semantics other than the verb-argument relations.

In this paper, we venture beyond semantic rela-tion extraction from text and investigate techniques to compose them. We explore the idea of inferring a new relation linking the ends of a chain of rela-tions. This scheme, informally used previously for combining HYPERNYM with other relations, has not been studied for arbitrary pairs of relations.
For example, it seems adequate to state the fol-lowing: if x is PART -OF y and y is HYPERNYM of z , then x is PART -OF z . An inference using this rule can be obtained instantiating x , y and z with engine , car and convertible . Going a step further, we consider nonobvious inferences involving AGENT , PURPOSE and other semantic relations.

The novelties of this paper are twofold. First, an extended definition for semantic relations is pro-posed, including (1) semantic restrictions for their domains and ranges, and (2) semantic primitives.
Second, an algorithm for obtaining inference ax-ioms is described. Axioms take as their premises chains of two relations and output a new relation linking the ends of the chain. This adds an extra layer of semantics on top of previously extracted re-lations. The conclusion of an axiom is identified us-ing an algebra for composing semantic primitives.
We name this framework Composition of Seman-tic Relations (CSR). The extended definition, set of primitives, algebra to compose primitives and CSR algorithm are independent of any particular set of relations. We first presented CSR and used it over PropBank in (Blanco and Moldovan, 2011). In this paper, we extend that work using a different set of primitives and relations. Seventy eight inference ax-ioms are obtained and an empirical evaluation shows that inferred relations have high accuracies. Semantic relations are underlying relations between concepts. In general, they are defined by a textual definition accompanied by a few examples. For ex-ample, Chklovski and Pantel (2004) loosely define ENABLEMENT as a relation that holds between two verbs V V assess::review and accomplish::complete .

We find this widespread kind of definition weak and prone to confusion. Following (Helbig, 2005), we propose an extended definition for semantic re-lations, including semantic restrictions for its argu-ments. For example, AGENT ( x , y ) holds between an
Moreover, we propose to characterize relations by semantic primitives . Primitives indicate whether a property holds between the arguments of a relation, e.g., the primitive temporal indicates if the first ar-gument must happen before the second.

Besides having a better understanding of each re-lation, this extended definition allows us to identify possible and not possible combinations of relations, as well as to automatically determine the conclusion of composing a possible combination.

Formally, for a relation R ( x , y ), the extended def-initions specifies: (a) D OMAIN ( R ) and R ANGE ( R (i.e., semantic restrictions for x and y ); and (b) P (i.e., values for the primitives). The inverse relation  X  1 can be obtained by switching domain and range, and defining P 2.1 Semantic Primitives Semantic primitives capture deep characteristics of relations. They are independently determinable for each relation and specify a property between an el-ement of the domain and an element of the range of the relation being described (Huhns and Stephens, 1989). Primitives are fundamental, they cannot be explained using other primitives.

For each primitive, each relation takes a value from the set V = { + ,  X  , 0 } .  X  +  X  indicates that the primitive holds,  X   X   X  that it does not hold, and  X  that it does not apply. Since a cause must precede its
Primitives complement the definition of a relation and completely characterize it. Coupled with do-main and range restrictions, primitives allow us to automatically manipulate and reason over relations.
The set of primitives used in this paper (Table 1) is heavily based on previous work in Knowledge Bases (Huhns and Stephens, 1989), but we consid-ered some new primitives. The new primitives are justified by the fact that we aim at composing rela-tions capturing the semantics from natural language. Whatever the set of relations, it will describe the characteristics of events (who / what / where / when / why / how) and connections between them (e.g., CAUSE , CORRELATION ). Time, space and volition also play an important role. The third column in Table 1 indicates the value of the primitive for the inverse relation: id. means it takes the same; op. the opposite. The opposite of  X  is + , the opposite of + is  X  , and the opposite of 0 is 0 . 2.1.1 An Algebra for Composing Semantic The key to automatically obtain inference axioms is the ability to know the result of composing primi-tives. Given P i primitive for R P ble 2 depicts the algebra for all primitives. An  X   X   X  means that the composition is prohibited.

Consider, for example, the Intrinsic primitive: if both relations are intrinsic ( + ), the composition is intrinsic ( + ); else if intrinsic does not apply to ei-ther relation ( 0 ), the primitive does not apply to the composition either ( 0 ); else the composition is not intrinsic (  X  ). Semantic relations are composed using inference ax-ioms. An axiom is defined by using the composi-tion operator  X   X   X ; it combines two relations called premises and yields a conclusion . We denote an ax-iom as R der to instantiate an axiom, the premises must form a chain by having argument y in common.

In general, for n relations there are n each pair, taking into account inverse relations, there are 16 possible combinations. Applying property combine R combine R  X  1 . The most interesting axioms fall into category (a) and there are n 2 n 2 + n potential axioms in this category.
Depending on n , the number of potential axioms to consider can be significantly large. For n = 20 , there are 820 axioms to explore and for n = 30 , 1,830. Manual examination of those potential ax-ioms would be time-consuming and prone to errors. We avoid this by using the extended definition and the algebra for composing primitives. 3.1 Necessary Conditions for Composing There are two necessary conditions for composing  X  They have to be compatible. A pair of relations  X  A third relation R 3 must match as con-3.2 CSR: An Algorithm for Composing Consider any set of relations R defined using the ex-tended definition. One can obtain inference axioms using the following algorithm:
Given R , R  X  1 can be automatically obtained (Sec-tion 2). P ossible conc ( R, R unless R it returns R procedure that compares the values assigned to each primitive; two values are consistent unless they have different opposite values or any of them is  X   X   X  (i.e., the composition is prohibited). 3.3 An Example: Agent and Purpose We present an example of applying the CSR algo-rithm by inspecting the potential axiom AGENT ( x , y )  X  PURPOSE  X  1 ( y , z )  X  R agent of y , and action y has as its purpose z . A state-ment instantiating the premises is [Mary] x [came] y to [talk] z about the issue . Knowing AGENT ( Mary , came ) and PURPOSE  X  1 ( came , talk ), our goal is to identify the links R
We use the relations as defined in Table 4. First, we note that both AGENT and PURPOSE  X  1 are com-patible (Step 1). Second, we must identify the pos-sible conclusions R Given P P Out of all relations (Section 4), AGENT and IN -TENT  X  1 fit the conclusion match. First, their do-mains and ranges are compatible with the composi-tion (Step 2a). Second, both P are consistent with P Thus, we obtain the following axioms: AGENT ( x , y )  X  PURPOSE  X  1 ( y , z )  X  AGENT ( x , z ) and AGENT ( x , y )  X  PURPOSE  X  1 ( y , z )  X  INTENT  X  1 ( x , z ).
Instantiating the axioms over [Mary] x [came] y to [talk] z about the issue yields AGENT ( Mary , talk ) and INTENT  X  1 ( Mary , talk ). Namely, the axioms yield Mary is the agent of talking , and she has the in-tention of talking . These two relations are valid but most probably ignored by a role labeler since Mary is not an argument of talk . In this Section, we apply the CSR algorithm over a set of eight well-known relations. It is out of the scope of this paper to explain in detail the semantics of each relation or their detection. Our goal is to obtain inference axioms and, taking for granted that annotation is available, evaluate their accuracy.
The only requirement for the CSR algorithm is to define semantic relations using the extended defini-tion (Table 4). To define domains and ranges, we use the ontology in Section 4.2. Values for the prim-itives are assigned manually. The meaning of each relations is as follows:  X  CAU ( x , y ) encodes a relation between two situa- X  PRP ( x , y ) holds between a concept y and its main  X  AGT ( x , y ) links a situation y and its intentional  X  MNR ( x , y ) holds between the mode, way, style or  X  AT -L ( x , y ) defines the spatial context y of an ob- X  AT -T ( x , y ) links an object or situation x , with  X  SYN ( x , y ) can be defined between any two entities 4.1 Inference Axioms Automatically Obtained After applying the CSR algorithm over the relations in Table 4, we obtain 78 unique inference axioms (Table 5). Each sub table must be indexed with the first and second premises as row and column re-spectively. The table on the left summarizes axioms dle axiom R axiom R
The CSR algorithm identifies several correct ax-ioms and accurately marks as prohibited several combinations that would lead to wrong inferences:  X  For CAUSE , the inherent transitivity is detected  X  The location and temporal information of con- X  As expected, axioms involving SYNONYMY as  X  The AGENT of y is inherited by its causes, pur- X  A concept intends the effects of its intentions
It is important to note that domain and range re-strictions are not sufficient to identify inference ax-ioms; they only filter out pairs of not compatible re-lations. The algebra to compose primitives is used to detect prohibited combinations of relations based on semantic grounds and identify the conclusion of composing them. Without primitives, the cells in Ta-ble 5 would be either empty (marking the pair as not compatible) or would simply indicate that the pair has compatible domain and range (without identify-ing the conclusion).

Table 5 summarizes 136 unique pairs of premises (recall R range restrictions mark 39 (28.7%) as not compati-ble. The algebra labels 12 pairs as prohibited (8.8%, [12.4% of the compatible pairs]) and is unable to find a conclusion 14 times (10.3%, [14.4%]). Fi-nally, conclusions are found for 71 pairs (52.2%, [73.2%]). Since more than one conclusion might be detected for the same pair of premises, 78 inference axioms are ultimately identified. 4.2 Ontology In order to define domains and ranges, we use a sim-plified version of the ontology presented in (Helbig, 2005). We find enough to contemplate only seven ( ent ) refer to any concept and are divided into situa- X  Situations are anything that happens at a time and  X  Objects can be either concrete ( co , palpable, tan- X  Descriptors state properties about the local ( loc ,
This simplified ontology does not aim at defining domains and ranges for any relation set; it is a sim-plification to fit the eight relations we work with. An evaluation was performed to estimate the valid-ity of the 78 axioms. Because the number of axioms is large we have focused on a subset of them (Table 6). The 31 axioms having SYN as premise are intu-itively correct: since synonymous concepts are in-terchangeable, given veracious annotation they per-form valid inferences.

We use PropBank annotation (Palmer et al., 2005) to instantiate the premises of each axiom. First, all instantiations of axiom PRP  X  MNR  X  1  X  MNR  X  1 were manually checked. This axiom yields 237 new MANNER , 189 of which are valid (Accuracy 0.80). Second, we evaluated axioms 1 X 7 (Table 6). Since PropBank is a large corpus, we restricted this phase to the first 1,000 sentences in which there is an instantiation of any axiom. These sentences contain 1,412 instantiations and are found in the first 31,450 sentences of PropBank.

Table 6 depicts the total number of instantiations for each axiom and its accuracy (columns 3 and 4). Accuracies range from 0.40 to 0.90, showing that the plausibility of an axiom depends on the axiom. The average accuracy for axioms involving CAU is 0.54 and for axioms involving PRP is 0.87.

Axiom CAU  X  AGT  X  1  X  AGT  X  1 adds 201 rela-tions, which corresponds to 0.89% in relative terms. Its accuracy is low, 0.40. Other axioms are less pro-ductive but have a greater relative impact and accu-racy. For example, axiom PRP  X  MNR  X  1  X  MNR  X  1 , only yields 71 new MNR , and yet it is adding 3.21% in relative terms with an accuracy of 0.82.

Overall, applying the seven axioms adds 923 re-lations on top of the ones already present (2.84% in relative terms) with an accuracy of 0.77. Figure 2 shows examples of inferences using axioms 1 X 3. 5.1 Error Analysis Because of the low accuracy of axiom 1, an error analysis was performed. We found that unlike other axioms, this axiom often yield a relation type that is already present in the semantic representation. Specifically, it often yields R ( x , z ) when R ( x X  , z ) is already known. We use the following heuristic in order to improve accuracy: do not instantiate an ax-iom R form R
This simple heuristic has increased the accuracy of the inferences at the cost of lowering their pro-ductivity. The last three columns in Table 6 show results when using the heuristic. There have been many proposals to detect seman-tic relations from text without composition. Re-searches have targeted particular relations (e.g., CAUSE (Chang and Choi, 2006; Bethard and Mar-tin, 2008)), relations within noun phrases (Nulty, 2007), named entities (Hirano et al., 2007) or clauses (Szpakowicz et al., 1995). Competitions include (Litkowski, 2004; Carreras and M`arquez, 2005; Girju et al., 2007; Hendrickx et al., 2009).
Two recent efforts (Ruppenhofer et al., 2009; Ger-ber and Chai, 2010) are similar to CSR in their goal (i.e., extract meaning ignored by current semantic parsers), but completely differ in their means. Their merit relies on annotating and extracting semantic connections not originally contemplated (e.g., be-tween concepts from two different sentences) us-ing an already known and fixed relation set. Unlike CSR, they are dependent on the relation inventory, require annotation and do not reason or manipulate relations. In contrast to all the above references and the state of the art, the proposed framework obtains axioms that take as input semantic relations pro-duced by others and output more relations: it adds an extra layer of semantics previously ignored.
Previous research has exploited the idea of using semantic primitives to define and classify seman-tic relations under the names of relation elements , deep structure , aspects and primitives . The first at-tempt on describing semantic relations using prim-itives was made by Chaffin and Herrmann (1987); they differentiate 31 relations using 30 relation el-ements clustered into five groups (intensional force, dimension, agreement, propositional and part-whole inclusion). Winston et al. (1987) introduce 3 rela-tion elements (functional, homeomerous and sepa-rable) to distinguish six subtypes of PART -WHOLE . Cohen and Losielle (1988) use the notion of deep structure in contrast to the surface relation and uti-lizes two aspects (hierarchical and temporal). Huhns and Stephens (1989) consider a set of 10 primitives .
In theoretical linguistics, Wierzbicka (1996) in-troduced the notion of semantic primes to perform linguistic analysis. Dowty (2006) studies composi-tionality and identifies entailments associated with certain predicates and arguments (Dowty, 2001).
There has not been much work on composing relations in the field of computational linguistics. The term compositional semantics is used in con-junction with the principle of compositionality, i.e., the meaning of a complex expression is determined from the meanings of its parts, and the way in which those parts are combined. These approaches are usually formal and use a potentially infinite set of predicates to represent semantics. Ge and Mooney (2009) extracts semantic representations using syn-tactic structures while Copestake et al. (2001) devel-ops algebras for semantic construction within gram-mars. Logic approaches include (Lakoff, 1970; S  X anchez Valencia, 1991; MacCartney and Manning, 2009). Composition of Semantic Relations is com-plimentary to Compositional Semantics.

Previous research has manually extracted plau-sible inference axioms for WordNet relations (Harabagiu and Moldovan, 1998) and transformed chains of relations into theoretical axioms (Helbig, 2005). The CSR algorithm proposed here automati-cally obtains inference axioms.

Composing relations has been proposed before within knowledge bases. Cohen and Losielle (1988) combines a set of nine fairly specific relations (e.g., to determine plausibility is the transitivity charac-teristic of the aspects: two relations shall not com-bine if they have contradictory values for any aspect. The first algebra to compose semantic primitives was proposed by Huhns and Stephens (1989). Their relations are not linguistically motivated and ten of them map to some sort of PART -WHOLE (e.g. PIECE -OF , SUBREGION -OF ). Unlike (Cohen and Losielle, 1988; Huhns and Stephens, 1989), we use typical relations that encode the semantics of natural lan-guage, propose a method to automatically obtain the inverse of a relation and empirically test the validity of the axioms obtained. Going beyond current research, in this paper we investigate the composition of semantic relations. The proposed CSR algorithm obtains inference ax-ioms that take as their input semantic relations and output a relation previously ignored. Regardless of the set of relations and annotation scheme, an ad-ditional layer of semantics is created on top of the already existing relations.

An extended definition for semantic relations is proposed, including restrictions on their domains and ranges as well as values for semantic primitives. Primitives indicate if a certain property holds be-tween the arguments of a relation. An algebra for composing semantic primitives is defined, allowing to automatically determine the primitives values for the composition of any two relations.

The CSR algorithm makes use of the extended definition and algebra to discover inference axioms in an unsupervised manner. Its usefulness is shown using a set of eight common relations, obtaining 78 axioms. Empirical evaluation shows the axioms add 2.32% of relations in relative terms with an overall accuracy of 0.88, more than what state-of-the-art se-mantic parsers achieve.

The framework presented is completely indepen-dent of any particular set of relations. Even though different sets may call for different ontologies and primitives, we believe the model is generally appli-cable; the only requirement is to use the extended definition. This is a novel way of retrieving seman-tic relations in the field of computational linguistics.
