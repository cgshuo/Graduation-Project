 We discuss part-of-speech (POS) tagging using the well-known conditional random field (CRF) model introduced originally by Lafferty et al. (2001). Our focus is on scenarios, in which the POS labels have a rich inner structure . For exam-ple, consider where the compound labels PRON+1SG, V+NON3SG+PRES, and N+SG stand for pro-noun first person singular, verb non-third singular present tense, and noun singular, respectively. Fine-grained labels occur frequently in mor-phologically complex languages (Erjavec, 2010; Haverinen et al., 2013).

We propose improving tagging accuracy by uti-lizing dependencies within the sub-labels (PRON, 1SG, V, NON3SG, N, and SG in the above ex-ample) of the compound labels. From a technical perspective, we accomplish this by making use of the fundamental ability of the CRFs to incorporate arbitrarily defined feature functions. The newly-defined features are expected to alleviate data spar-sity problems caused by the fine-grained labels. Despite the (relative) simplicity of the approach, we are unaware of previous work exploiting the sub-labels to the extent presented here.

We present experiments on five languages (En-glish, Finnish, Czech, Estonian, and Romanian) with varying POS annotation granularity. By uti-lizing the sub-labels, we gain significant improve-ment in model accuracy given a sufficiently fine-grained label set. Moreover, our results indi-cate that exploiting the sub-labels can yield larger improvements in tagging compared to increasing model order.
 The rest of the paper is organized as follows. Section 2 describes the methodology. Experimen-tal setup and results are presented in Section 3. Section 4 discusses related work. Lastly, we pro-vide conclusions on the work in Section 5. 2.1 Conditional Random Fields The (unnormalized) CRF model (Lafferty et al., 2001) for a sentence x = ( x 1 ,...,x | x | ) and a POS sequence y = ( y 1 ,...,y | x | ) is defined as p ( y | x ; w )  X  where n denotes the model order, w the model pa-rameter vector, and  X  the feature extraction func-tion. We denote the tag set as Y , that is, y i  X  Y for i  X  1 ... | x | . 2.2 Baseline Feature Set We first describe our baseline feature set {  X  transition features. The emission feature set as-sociates properties of the sentence position i with the corresponding label as {  X  j ( x,i ) 1 ( y i = y 0 i ) | j  X  1 ... |X| ,  X  y 0 i where the function 1 ( q ) returns one if and only if the proposition q is true and zero otherwise, that is and X = {  X  j ( x,i ) } |X| characterizing the word position i . Following the classic work of Ratnaparkhi (1996), our X com-prises simple binary functions: 1. Bias (always active irrespective of input). 2. Word forms x i  X  2 ,...,x i +2 . 3. Prefixes and suffixes of the word form x i up 4. If the word form x i contains (one or more) Binary functions have a return value of either zero (inactive) or one (active). Meanwhile, the transi-tion features capture dependencies between adjacent labels ir-respective of the input x . 2.2.1 Expanded Feature Set Leveraging The baseline feature set described above can yield a high tagging accuracy given a conveniently sim-ple label set, exemplified by the tagging results of Collins (2002) on the Penn Treebank (Mar-cus et al., 1993). (Note that conditional random fields correspond to discriminatively trained hid-den Markov models and Collins (2002) employs the latter terminology.) However, it does to some extent overlook some beneficial dependency infor-mation in case the labels have a rich sub-structure. In what follows, we describe expanded feature sets which explicitly model the sub-label dependen-cies.

We begin by defining a function P ( y i ) which partitions any label y i into its sub-label compo-nents and returns them in an unordered set. For example, we could define P ( PRON+1+SG ) = { PRON, 1, SG } . (Label partitions employed in the experiments are described in Section 3.2.) We denote the set of all sub-label components as S .
Subsequently, instead of defining only (2), we additionally associate the feature functions X with all sub-labels s  X  X  by defining {  X  j ( x,i ) 1 ( s  X  X  ( y i )) | X  j  X  1 ... |X| ,  X  s  X  X } , where 1 ( s  X  P ( y i )) returns one in case s is in P ( y i ) and zero otherwise. Second, we exploit sub-label transitions using features Note that we define the sub-label transitions up to order m , 1  X  m  X  n , that is, an n th-order CRF model is not obliged to utilize sub-label tran-sitions all the way up to order n . This is be-cause employing high-order sub-label transitions may potentially cause overfitting to training data due to substantially increased number of features (equivalent to the number of model parameters, | w | = |  X  | ). For example, in a second-order ( n = 2 ) model, it might be beneficial to em-ploy the sub-label emission feature set (5) and first-order sub-label transitions while discarding second-order sub-label transitions. (See the exper-imental results presented in Section 3.)
In the remainder of this paper, we use the fol-lowing notations. 1. A standard CRF model incorporating (2) and 2. A CRF model incorporating (2), (4), and (5) 3. A CRF model incorporating (2), (4), (5), and 2.3 On Linguistic Intuition This section aims to provide some intuition on the types of linguistic phenomena that can be captured by the expanded feature set. To this end, we con-sider an example on the plural number in Finnish.
First, consider the plural nominative word form kissat ( cats ) where the plural number is denoted by the 1-suffix -t . Then, by employing the features (2), the suffix -t is associated solely with the com-pound label NOMINATIVE+PLURAL. However, by incorporating the expanded feature set (5), -t will also be associated to the sub-label PLURAL. This can be useful because, in Finnish, also adjec-tives and numerals are inflected according to num-ber and denote the plural number with the suffix -t (Hakulinen et al., 2004,  X 79). Therefore, one can exploit -t to predict the plural number also in words such as mustat ( plural of black ) with a com-pound analysis ADJECTIVE+PLURAL.

Second, consider the number agreement (con-gruence). For example, in the sentence fragment mustat kissat juoksevat (black cats are running) , the words mustat and kissat share the plural num-ber. In other words, the analyses of both mustat and kissat are required to contain the sub-label PLURAL. This short-span dependency between sub-labels will be captured by a first-order sub-label transition feature included in (6).

Lastly, we note that the feature expansion sets (5) and (6) will, naturally, capture any short-span dependencies within the sub-labels irrespective if the dependencies have a clear linguistic interpre-tation or not. 3.1 Data For a quick overview of the data sets, see Table 1. Penn Treebank. The English Penn Treebank (Marcus et al., 1993) is divided into 25 sections of newswire text extracted from the Wall Street Journal. We split the data into training, develop-ment, and test sets using the sections 0-18, 19-21, and 22-24, according to the standardly applied di-vision introduced by Collins (2002).
 Turku Depedency Treebank. The Finnish Turku Depedendency Treebank (Haverinen et al., 2013) contains text from 10 different domains. The treebank does not have default partition to training and test sets. Therefore, from each 10 consecutive sentences, we assign the 9th and 10th to the development set and the test set, respec-tively. The remaining sentences are assigned to the training set.
 Multext-East. The third data we consider is the multilingual Multext-East (Erjavec, 2010) corpus, from which we utilize the Czech, Estonian and Ro-manian sections. The corpus corresponds to trans-lations of the novel 1984 by George Orwell. We apply the same data splits as for Turku Depen-dency Treebank. Table 1: Overview on data. The training (train.), development (dev.) and test set sizes are given in sentences. The columns titled tags and train. tags correspond to total number of tags in the data set and number of tags in the training set, respectively. 3.2 Label Partitions This section describes the employed compound la-bel splits. The label splits for all data sets are sub-mitted as data file attachments. All the splits are performed a priori to model learning, that is, we do not try to optimize them on the development sets.

The POS labels in the Penn Treebank are split in a way which captures relevant inflectional cat-egories, such as tense and number. Consider, for example, the split for the present tense third sin-gular verb label P ( VBZ ) = { VB, Z } .

In the Turku Dependency Treebank, each morphological tag consists of sub-labels mark-ing word-class, relevant inflectional categories, and their respective values. Each inflec-tional category, such as case or tense, com-bined with its value, such as nominative or present, constitutes one sub-label. Consider, for example, the split for the singular, adessive noun P ( N+CASE_ADE+NUM_SG ) = { POS_N, CASE_ADE, NUM_SG } .
 The labeling scheme employed in the Multext-East data set represents a considerably different annotation approach compared to the Penn and Turku Treebanks. Each morphological analysis is a sequence of feature markers, for example Pw3 X  r. The first feature marker (P) denotes word class and the rest (w, 3, and r) encode values of inflec-tional categories relevant for that word class. A feature marker may correspond to several differ-ent values depending on word class and its posi-tion in the analysis. Therefore it becomes rather difficult to split the labels into similar pairs of in-flectional category and value as we are able to do for the Turku Dependency Treebank. Since the in-terpretation of a feature marker depends on its po-sition in the analysis and the word class, the mark-ers have to be numbered and appended with the word class marker. For example, consider the split P ( Pw3 X  X  ) = { 0 : P, 1 : Pw, 2 : P3, 5 : Pr } . 3.3 CRF Model Specification We perform experiments using first-order and second-order CRFs with zeroth-order and first-order sub-label features. Using the notation introduced in Section 2, the employed mod-els are CRF(1,-), CRF(1,1), CRF(2,-), CRF(2,0), and CRF(2,1). We do not report results us-ing CRF(2,2) since, based on preliminary exper-iments, this model overfits on all languages.
The CRF model parameters are estimated using the averaged perceptron algorithm (Collins, 2002). The model parameters are initialized with a zero vector. We evaluate the latest averaged parameters on the held-out development set after each pass over the training data and terminate training if no improvement in accuracy is obtained during three last passes. The best-performing parameters are then applied on the test instances.

We accelerate the perceptron learning using beam search (Zhang and Clark, 2011). The beam width, b , is optimized separately for each lan-guage on the development sets by considering b = 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 until the model accuracy does not improve by at least 0.01 (absolute).
Development and test instances are decoded us-ing Viterbi search in combination with the tag dic-tionary approach of Ratnaparkhi (1996). In this approach, candidate tags for known word forms are limited to those observed in the training data. Meanwhile, word forms that were unseen during training consider the full label set. 3.4 Software and Hardware The experiments are run on a standard desktop computer (Intel Xeon E5450 with 3.00 GHz and 64 GB of memory). The methods discussed in Section 2 are implemented in C++. 3.5 Results The obtained tagging accuracies and training times are presented in Table 2. The times in-clude running the averaged perceptron algorithm and evaluation of the development sets. The col-umn labeled it. corresponds to the number of passes over the training data made by the percep-tron algorithm before termination. We summarize the results as follows.

First, compared to standard feature extraction approach, employing the sub-label transition fea-tures resulted in improved accuracy on all lan-guages apart from English. The differences were statistically significant on Czech, Estonian, and Finnish. (We establish statistical significance (with confidence level 0.95) using the standard 1-sided Wilcoxon signed-rank test performed on 10 randomly divided, non-overlapping subsets of the complete test sets.) This results supports the in-tuition that the sub-label features should be most useful in presence of large, fine-grained label sets, in which case the learning is most affected by data sparsity.

Second, on all languages apart from English, employing a first-order model with sub-label fea-tures yielded higher accuracy compared to a second-order model with standard features. The differences were again statistically significant on Czech, Estonian, and Finnish. This result suggests that, compared to increasing model order, exploit-ing the sub-label dependencies can be a preferable approach to improve the tagging accuracy.

Third, applying the expanded feature set in-evitably causes some increase in the computa-tional cost of model estimation. However, as shown by the running times, this increase is not prohibitive. In this section, we compare the approach pre-sented in Section 2 to two prior systems which at-tempt to utilize sub-label dependencies in a similar manner.

Smith et al. (2005) use a CRF-based system for tagging Czech, in which they utilize expanded emission features similar to our (5). However, they do not utilize the full expanded transition features (6). More specifically, instead of utilizing a sin-gle chain as in our approach, Smith et al. employ five parallel structured chains. One of the chains models the sequence of word-class labels such as noun and adjective. The other four chains model gender, number, case, and lemma sequences, re-spectively. Therefore, in contrast to our approach, their system does not capture cross-dependencies between inflectional categories, such as the de-pendence between the word-class and case of ad-jacent words. Unsurprisingly, Smith et al. fail to achieve improvement over a generative HMM-based POS tagger of Haji  X  c (2001). Meanwhile, our system outperforms the generative trigram tag-ger HunPos (Hal X csy et al., 2007) which is an im-proved open-source implementation of the well-known TnT tagger of Brants (2000). The obtained HunPos results are presented in Table 3.
 Table 3: Results using a generative HMM-based HunPos tagger of Halacsy et al. (2007).
 Ceau  X su (2006) uses a maximum entropy Markov model (MEMM) based system for tag-ging Romanian which utilizes transitional behav-ior between sub-labels similarly to our feature set (6). However, in addition to ignoring the most in-formative emission-type features (5), Ceau  X su em-beds the MEMMs into the tiered tagging frame-work of Tufis (1999). In tiered tagging, the full morphological analyses are mapped into a coarser tag set and a tagger is trained for this reduced tag set. Subsequent to decoding, the coarser tags are mapped into the original fine-grained morpholog-ical analyses. There are several problems associ-ated with this tiered tagging approach. First, the success of the approach is highly dependent on a well designed coarse label set. Consequently, it requires intimate knowledge of the tag set and lan-guage. Meanwhile, our model can be set up with relatively little prior knowledge of the language or the tagging scheme (see Section 3.2). More-over, a conversion to a coarser label set is neces-sarily lossy (at least for OOV words) and poten-tially results in reduced accuracy since recovering the original fine-grained tags from the coarse tags may induce errors. Indeed, the accuracy 96.56, re-ported by Ceau  X su on the Romanian section of the Multext-East data set, is substantially lower than the accuracy 97.29 we obtain. These accuracies were obtained using identical sized training and test sets (although direct comparison is impossible because Ceau  X su uses a non-documented random split). We studied improving the accuracy of CRF-based POS tagging by exploiting sub-label dependency structure. The dependencies were included in the CRF model using a relatively straightforward fea-ture expansion scheme. Experiments on five lan-guages showed that the approach can yield signif-icant improvement in tagging accuracy given suf-ficiently fine-grained label sets.

In future work, we aim to perform a more fine-grained error analysis to gain a better under-standing where the improvement in accuracy takes place. One could also attempt to optimize the compound label splits to maximize prediction ac-curacy instead of applying a priori partitions. This work was financially supported by Langnet (Finnish doctoral programme in language studies) and the Academy of Finland under the grant no 251170 (Finnish Centre of Excellence Program (2012-2017)). We would like to thank the anony-mous reviewers for their useful comments.
