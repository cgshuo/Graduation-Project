 Visualization systems traditionally focus on graphical re presenta-tion of information. They tend not to provide integrated ana lytical services that could aid users in tackling complex knowledge dis-covery tasks. Users X  exploration in such environments is us ually impeded due to several problems: 1) valuable information is hard to discover when too much data is visualized on the screen; 2) Users have to manage and organize their discoveries off line, beca use no systematic discovery management mechanism exists; 3) th eir discoveries based on visual exploration alone may lack accu racy; and 4)they have no convenient access to the important knowle dge learned by other users. To tackle these problems, it has been recog-nized that analytical tools must be introduced into visuali zation sys-tems. In this paper, we present a novel analysis-guided expl oration system, called the Nugget Management System (NMS). It lever -ages the collaborative effort of human comprehensibility a nd ma-chine computations to facilitate users X  visual exploratio n processes. Specifically, NMS first helps users extract the valuable info rmation (nuggets) hidden in datasets based on their interests. Give n that similar nuggets may be rediscovered by different users, NMS con-solidates the nugget candidate set by clustering based on th eir se-mantic similarity. To solve the problem of inaccurate disco veries, localized data mining techniques are applied to refine the nu ggets to best represent the captured patterns in datasets. Visual ization techniques are then employed to present our collected nugge t pool and thus create the nugget view. Based on the nugget view, in-teraction techniques are designed to help users observe and orga-nize the nuggets in a more intuitive manner and eventually fa ciliate their sense-making process. We integrated NMS into XmdvToo l, a freeware multivariate visualization system. User studies were per-formed to compare the users X  efficiency and accuracy in finish ing tasks on real datasets, with and without the help of NMS. Our u ser studies confirmed the effectiveness of NMS. Visualization systems traditionally focus on building gra phical de-pictions of relationships among information in a human comp re-hensible format. By doing so, they help users to better under stand the information. This means that the users can either learn f acts that are difficult to discover without the graphical depicti on, or the users X  knowledge regarding some facts can become deeper or m ore precise. The usefulness of visualization systems has been w ell es-tablished [13; 14; 17].  X  This work is supported under NSF grant IIS-0414380.
 Figure 1:  X  X AUP X  dataset vi-sualized with Parallel Coordi-nates Figure 3: One  X  X artial cluster X  found by users Recently, visual analytics [15] has been proposed as a means to solve complex knowledge discovery tasks in many important fi elds, ranging from homeland security and credit fraud detection t o finan-cial market analysis. Solving such tasks usually requires a nalysts to perform complicated and iterative sense-making process es [5; 7]. Thus, it has been recognized that relying on analysts X  pe rcep-tual power alone to conduct visual exploration may not alway s be the most effective method to solve these problems.
 To fully support visual analytics, visualization systems h ave to be improved by tackling some key challenges. While we use clus-tering examples in Figures 1 -4 to illustrate the these chall enges, our goal over time is to support a rich set of patterns, includ ing trends, outliers and associations. 1) Overloaded Displays: When too much information is visualized on the screen, effective knowl-edge discovery is difficult. For example, as shown in Figure 1 , when a dataset, even with modest numbers of records and dimen -sions, is visualized, overloaded displays can make knowled ge dis-covery a time-consuming process. 2) Disorganized Discoveries: Since there is no systematic discovery management mechanis m provided by visualization systems themselves, users have t o man-age and organize their discoveries off line on their own. For ex-ample, some users, either due to rich domain knowledge or aft er a long time of exploration, may be able to identify the pattern s (e.g., the cluster highlighted in red in Figure 2). Unfortunately, she may not be able to store it in the system nor easily retrieve it for future exploration. Even if the systems provide some simple record ing functionality, since a pattern may be repeatedly visited, r edundant recordings may be generated (e.g., the clusters in Figures 3 and 4 are very similar). Such redundancy causes information over load that may hinder the future use of those recordings. 3) Inaccurate Discoveries: Discoveries found by user X  X  perceptual power alone may be inaccurate. For example, the  X  X lusters X  found by user s in Figures 3 and 4 are actually subparts of a complete cluster de picted in Figure 2. Such inaccurate discoveries may lead to low-qua lity decision making (i.e., this user may miscount the populatio n of the whole cluster, if she works on the  X  X artial cluster X  in Figur e 3). 4) Isolated Knowledge: Even if valuable knowledge may have al-ready been uncovered, there is no convenient mechanism for u sers to access and share it. For example, a user interested in  X  X lu sters X  in the dataset may spend a lot of time to find the one mentioned i n Figure 2, even if it may have already been previously discove red. Previous efforts to tackle these problems can be roughly cla ssified into two categories. 1) User-driven: In this category, whil e the knowledge discovery process still relies on users X  percept ual power, a variety of visual interaction mechanisms, such as zooming , filter-ing, color coding and dynamic querying, are offered by the vi su-alization systems to facilitate exploration [1; 17]. Our fr amework applies these techniques to allow users to best use their per ceptual power during visual exploration. 2) Data-driven: Data-dri ven tech-niques aim to expedite knowledge discovery with the help of t he analytical power of machines. Data mining algorithms [4; 9; 23], which detect useful patterns or rules in large datasets, ful fill an im-portant role here. These techniques are employed in our fram ework to improve the accuracy of discoveries.
 More recently, some initial efforts have emerged to take adv an-tage of both human perceptual abilities and computational p ower of computers to deal with the challenging process of knowled ge discovery [15]. Visual data mining (VDM) [3; 8] involves use rs in the mining process itself, rather than being carried out com pletely by machines. In VDM, visualizations are utilized to support a spe-cific mining task or display the results of a mining algorithm , such as association rule mining. However, VDM offers little help for knowledge organization and management, thus it does not sup port an iterative and comprehensive sense-making process. Our f rame-work takes a different approach from VDM, that is, we put user s at the first stage of the knowledge discovery process and appl y data mining techniques as secondary method to refine and enha nce what the users have already identified as interesting during their ini-tial exploration. [5] proposed interactive tools to manage both the existing information and the synthesis of new analytic know ledge for sense-making in visualization systems. This work so far has not paid much attention on how to consolidate the users X  disc ov-eries. Collaborative visual analytics [7] introduced comp utational power into the sense-making process with a focus on supporti ng the exchange of information among team members. [6] propose d a framework to track the history of the knowledge discovery p ro-cess for visualization systems. It created a generalized mo del so the tracking can be done across multiple application, syste ms, indi-viduals and locations.
 In this work, we design, implement and evaluate a novel analy sis-guided exploration system, called the Nuggets Management S ys-tem (NMS), which leverages the collaborative effort of huma n in-tuition and computational analysis to facilitate the proce ss of visual analytics. Specifically, NMS first extracts nuggets based on both the explicit and implicit indication of users X  interest. To eliminate possible redundancy among the collected nuggets, NMS combi nes similar nuggets by conducting nugget clustering. Then, dat a min-ing techniques are applied to refine the nuggets and thus impr ove their accuracy in capturing patterns present in the dataset . Visual-ization techniques are applied to the nugget pool and thus cr eate an overview of the nugget space, which we call the nugget view. F ur-thermore, interaction techniques are designed based on the nugget view. By interacting with the nugget view, users will have mo re flexibility in observing the nuggets and be able to manage (e. g., users can attach annotations [11]) and organize nuggets (e. g., users can select a set of nuggets as the evidence to support a hypoth esis) to support their sense-making processes. Lastly, the well-organized nugget pool can be used to guide users X  exploration in both us er-and system-initiated manners.
 To verify the feasibility of NMS, we have integrated it into X mdv-Tool [17], a freeware tool developed at WPI for visual explor ation and analysis of multivariate data sets. The main contributi ons of this paper are: This work is an extension to two previous conference papers [ 20; 21]. The majority of the new material concerns the visualiza tion of the nugget space and the sense-making process based on it, wh ich are presented in Sections 5 and 6. The remainder of this paper is organized as follows: Section 2 introduces Nugget Extrac tion. Section 3 describes the techniques used in Nugget Combinati on. Nugget Refinement techniques are discussed in Section 4. Fin ally, we describe experimental evaluation in Section 7. Generally, a nugget is some valuable information extracted from the dataset, which could be clusters, outliers, associatio ns and any other patterns. Additional attributes of a nugget, such as a name and annotations, can be attached to it as well. In our current imple-mentation, a nugget is defined by a subset of the multivariate data plus the bounding box containing it.
 The concept of nuggets is independent of the display methods in multivariate visualization systems, such as Parallel Coor dinates, Scatterplot matrices and Glyphs [17]. We use Parallel Coord inates to demonstrate the examples in this paper. Thus visually a nu gget appears as a blue band across the axes, which represents the q uery ranges on each dimension, and the red (highlighted) lines th at indi-cate the selected records (result) of the query. Nugget extraction can be achieved by observing a user X  X  expl o-ration process (user-driven) or by conducting analysis of t he pat-terns existing in the data (data-driven). The NMS framework is compatible with the nuggets derived using either of these tw o meth-ods. Data mining algorithms for pattern detection have been exten-sively studied in the KDD community and any of these methods could be plugged into our framework. Here, we instead focus o n nugget extraction via user-driven methods. The main benefit of user-driven methods is that we can bring into play the advant age of human perceptual and cognitive abilities to identify pat terns in a knowledge discovery process. In NMS, the nuggets can be ex-tracted based on either the explicit or implicit indication of users X  interest. The specific techniques supporting those two nugg et ex-traction methods are discussed in detail in [20]. Relying on nugget extraction alone suffers from several pro blems. 1) Nugget redundancy may arise, because as the users navigat e in the datasets, similar nuggets with slightly different boun daries are likely to represent the same data features. 2) An excessivel y large nugget pool generated during a long exploration period may m ake it difficult for users to access individual nuggets. 3) Conti nuous growth of the nugget population may lead to low system perfor -mance. An efficient method is needed to keep the nugget pool of modest size yet with high representativeness. Several tech niques, such as sampling, filtering and clustering of nuggets may be e m-ployed to achieve this goal. We chose clustering, which grou ps similar nuggets and generates representatives for each gro up. Clustering aims to group objects based on their similaritie s. It re-quires a distance measure that expresses the domain specific sim-ilarity between objects. To solve this problem, we develope d dis-tance metrics to capture the distances between any pair of nu ggets. Query Distance : Nuggets are defined by both queries and their results. So, naturally, nuggets defined by similar queries s hould be considered to be more similar than those defined by rather dif ferent queries. Thus our problem can be transformed into quantifyi ng the similarity of queries. The major principle utilized in prev ious work [18; 19] for measuring query similarity (QS) between Nugget A and Nugget B can be summarized as: Note that QA and QB are the qualifiers of these two queries. We adopt this idea as the basic principle for our query similari ty mea-sure on individual dimensions. We have also studied several im-portant refinements to this basic idea, which enhance it to ha ndle different types of domains (discrete, continuous, nominal ) and at best level capture the visual similarity of nuggets. We have also ex-tended the previous metric defined for a single dimension to n ow be applicable for multiple dimensions. Details of these techn iques can be found in [21]. After we X  X e normalized the acquired query s im-ilarities (between 0-1), we can easily calculate the query d istances (QD) as shown in Formula 2: Data Distance : However, nuggets are not only characterized by their queries (profile), but also by the results of the querie s ob-tained when applying the queries to a particular dataset (co ntent). As shown in Figures 5 and 6, two nuggets generated by very simi -lar queries may be rather different in terms of actual data co ntent. The former contains a cluster, while the latter is empty. Cle arly, we need to enhance the capability of our distance metrics by als o con-sidering the  X  X ontents X  of the nuggets. Now, the problem is h ow we Figure 5: A nugget capturing a cluster in the  X  X ris X  dataset can measure distance between two subsets of a multi-dimensi onal dataset. Previous work to tackle such problems [2; 12] can be clas-sified into two main categories: statistical and transform-cost ap-proaches. Below, we will introduce our proposed algorithm b ased on extending a basic transform cost algorithm.
 In transform-cost approaches, the distance between two obj ects is expressed as the minimum cost of transforming one object to a n-other. A well known algorithm that relies on Transform Cost i s the Nearest Neighbor Measure (NNM) [12]. But unfortunately, NN M is a population-insensitive algorithm. It may lead to bad co mpari-son results in our case, because comparing nuggets with diff erent populations is going to be the norm in our work. We propose a ne w algorithm called the Exact Transformation Measure (ETM).
 First, we formulate the problem. Given dataset D, | D | = m datasets A and B, A  X  D, B  X  D, | A | = a, | B | = b, 0  X  a  X  b  X  m, | A  X  B | = l, | B | X  X  A  X  B | = n . Assume data points in D can be viewed as geometrically distributed in the value spac e based on their values in different dimensions. Our goal is to trans form A to be exactly equal to B with minimum cost. To solve this probl em, simply moving data points in A to their nearest neighbors in B will fail in many cases, because it is neither globally optimal no r sen-sitive to population. Thus, in order to achieve the transfor mation with minimum cost, we define three types of operations: By using  X  X ove X  and  X  X dd X , we are guaranteed to always be able to transform A to B, since A always has a smaller or equal sized population to that of B. However, simply relying on  X  X ove X  an d  X  X dd X  will impose  X  X orced matches X , which may not always lea d to the capture of the real distance between two datasets. Fig ure 7 shows an example of two 2-dimensional datasets where movin g and adding are not sufficient to make a cost effective transfo rmation plan. Members of datasets A and B are represented as white and black points, respectively. If only  X  X ove X  and  X  X dd X  are use d, we have to match some data points in A with data points in B that are far away from them. In the worst case, the existence of a fe w  X  X utlier X  data points that do not have a  X  X ear neighbor X  clos e to them will eliminate opportunities for many other data point s to be matched with their real nearest neighbors.
 To deal with this disadvantage of  X  X orced matches X , we use a  X  Delete X  operation. With it, we no longer need to suffer from  X  X orced m atches X , because for a given data point in A,  X  X ove X  is no longer the onl y option for it. We can choose  X  X elete X , if moving it will bring too Figure 7: Trasforming A to B with moving and adding only much global cost. However, how to make an optimal transforma -tion plan, which has the minimum cost, is still a complex prob lem. In order to tackle this problem, we need to study the cost of ea ch operation first. Cost(M[x,y]): The cost of moving a data point x to y is equal to the normalized Euclidean distance between x a nd y (between 0-1). COA: Cost of adding a new point and COD: Cost of deleting an existing point are both estimated values that have a negative association with | A | .
 Having set the costs of all our transfer operations, we now es tablish our solution for finding an optimal (most cost-effective) tr ansfor-mation plan. We note that making such an optimal transformat ion plan is non-trivial. Fortunately, the Hungarian Assignmen t [16] which was designed for finding minimum cost bipartite matche s, provides a good approach to solving this problem. The algori thm takes an n  X  n matrix as input. Each row in the matrix represents a data point in A, and each column represents a data point in B. Then each entry is filled with the distance between the row and the column it belongs to. The algorithm returns a minimum cost ma tch in O ( n 3 ) time.
 Once we make a proper input matrix, the Hungarian Assignment Method will generate an output matrix representing the opti mal matches. When the output matrix has been produced, by simply summing all the values in the input matrix entries that match an entry location with a  X 0 X  in its output matrix, and dividing t he sum by | B | , we get the Data Distance ( DD ) between two nuggets. Nugget Distance : Finally, we combine the Query Distance ( QD [ X, Y ]) and Data Distance ( DD [ X, Y ]) to present the Nugget Distance ( ND [ X, Y ]) between any pair of nuggets X and Y. ND [ X, Y ] =  X   X  QD [ X, Y ]+  X   X  DD [ X, Y ] (  X  +  X  = 1) (3) where  X  and  X  are experimentally derived weights. Note that will be normalized (between 0 to 1).
 For more details about nugget distance, please see [21]. Once we have computed the distances between nuggets, any gen eric clustering algorithm can be applied to conduct nugget clust ering. The clustering process consolidates our nugget pool by remo ving redundant nuggets while keeping good representativeness. Besides the automatic nugget clustering to the whole nugget pool, ou r sys-tem also supports manual nugget clustering with provided in terac-tion techniques based on visualized the nugget space. It may lead to more meaningful clusters for each individual user, because domain expert knowledge might be more effective than generic clust ering algorithms. Moreover, this could even save the cost of runni ng an expensive global clustering algorithm against all the co llected nuggets. The visualized nugget space and the specific intera ction techniques supporting manual nugget clustering are introd uced in Section 5. In this section, we introduce the concept of using data minin g tech-niques to refine the candidate nuggets extracted from users X  logs. Such a refinement can be performed when a nugget was made be-cause users were searching for some identifiable pattern typ es, such as clusters and outliers. For example, assume a user was sear ching for a cluster in the dataset, and for some reason, she missed p art of it (Figure 9). Then, NMS will refine the nugget to capture th e complete cluster (Figure 10).
 Figure 9: A nugget which cap-tures the main body of a cluster but misses part of it Nugget refinement offers two main advantages over both pure l og analysis and mining techniques of the data itself. Firstly, log anal-ysis techniques, for example, the nugget extraction introd uced in Section 2, rely on users X  actions only, without any help from com-putational analysis of the datasets and their properties. T hus they may lack accuracy in nugget specification. Nugget refinement likely improves the accuracy by exploiting both of them. Secondly, even assuming the system knows the specific pattern type a user is i nter-ested in, in many cases the user is not searching for all possi ble pat-terns but only for certain patterns of this type. This makes r unning expensive global pattern detection algorithms not cost eff ective and unrelated patterns detected may even cost users more effort to iso-late the useful ones. We chose density-based clustering [4] and distance-based outlier detection [9] as our sample pattern detection algorithms, which are popular algorithms in the data mining field. The refinement process is divided into two phases, called the match and refine phases.
 In the match phase, we aim to match the identified nuggets with pat-terns  X  X round them X  within the data space. In other words, ou r goal is to determine which patterns users were searching for when these specific nuggets were made. In this work, we concentrate nugg ets refinement on two important pattern types, clusters and outl iers. The concept of  X  X atch X  is used to judge whether some data pat-terns or the major parts of these patterns primarily contrib ute to a nugget. If it is the case, we call the nugget and these patter ns  X  X atched X . The nuggets may be  X  X atched X  with more than one pattern. Or, put differently, a nugget may contain several p atterns. Technically, to match a nugget with patterns, we have to comp ute two important factors that each represent one side of the mat ch: Next we show a specific example of how to calculate PR and CR between a nugget and a cluster (the left side cluster on Figur e 11). Figure 11: A nugget which captures the main bodies of two clusters The covered pattern population ( P.population  X  N.population equals 5 (containing data points 2, 3, 4, 5, 6), and the patter n pop-ulation ( P.population ) equals 6. So P R = 5 / 6 = 0 . 83 Nugget Area ( N.area ) in this example is the area denoted by the Nugget Boundary. The Pattern Area ( P.area ) is indicated by the Pattern Boundary. Overlap Area ( P.area  X  N.area ) is the over-lap area depicted by the shaded area in the figure. Let X  X  assum e Overlap Area/Nugget Area=0.3. The concept of  X  X rea X  here ex -tends to the hypervolume when the number of dimension increa ses. We also know that the Nugget Population equals 12. So CR= (0.3+5/12)/2=0.39 Now we use PR and CR to match a nugget with the patterns around it. We use MatchRate ( P, N ) to express the result of a match be-tween a nugget N and all patterns of type P. Based on the match results, we classify nuggets into different categories. He re we con-centrate our discussion on clusters. Techniques to handle o ther pat-tern types can be found in [20].
 MatchRate ( C, N ) = X Where C i  X  X  are all the cluster patterns fully or partially covered by the nugget. T is a threshold which decides whether the nugget and the patterns match. In this case, a nugget is matched with one or more clusters. In other words, the main components of this nu gget are clusters.
 The match phase reveals what type of patterns a user was likel y searching for. We now describe the refinement phase. If a nugg et is classified into the first two categories mentioned above, we fi nish nugget refinement using the following two steps, called spli tting (if necessary) and modification.
 Splitting: If a nugget is composed of more than one pattern, we could split it into several new nuggets, each representing o ne pat-tern only. Because we already know all patterns the users wer e searching for from the match phase, simply putting all the me m-bers of each pattern into a new nugget will finish this job. Modification: For the nuggets representing a single pattern only, the modification is to make the nugget boundaries exactly the same as the pattern boundaries.
 In Figure 12, we show the new nuggets after nugget refinement. Each now represents one pattern only.
 As with nugget clustering, nugget refinement can either be au -tomatically performed against all the collected nuggets, o r users could manually pick the nuggets of interest from the nugget s pace view as refinement candidates. Specific interaction techniq ues to support manual nugget refinement are also discussed in Secct ion 5. Up to now, we have obtained a set of nuggets, each of which is either defined by users or is generated by extraction, combin ation and/or refinement. We call this set the nugget space . A natural requirement from analysts is a visual overview of these nugg ets. In this section, we propose a visualization approach, the MDS nugget starfield , to present such an overview to users, which is inspired by the VaR display [22] developed by Yang et al. In addition, som e interaction techniques are discussed to help users expose p atterns in nugget space and do maintenance on nuggets. Figure 13 shows an MDS nugget starfield to present a nugget spa ce obtained from the cars dataset. Each glyph is an overview of a nugget and we generate this layout using an MDS algorithm [10 ]. The proximity among nugget positions reflects nugget distan ces. Assume that we have N nuggets in this nugget space, the proced ure to get such a starfield is as follows: (1) We calculate nugget d is-tances and record them into an N  X  N matrix. (2) This matrix is regarded as the input to an MDS algorithm [10], which generat es a position for each nugget. (3) Each nugget overview is render ed in the position obtained from the MDS algorithm.
 Figure 13: MDS Nugget Starfield. Each glyph represents a nugg et. The distances among glyphs are determined by nugget distanc es. The advantage of this approach is obvious. First, users can e as-ily observe the distribution of nuggets and clusters in nugg et space since this layout conveys the distance among nuggets. Then d if-ferent actions, such as manual clustering and refinement, ca n be easily applied to some nuggets. For example, in Figure 13, we can see that there are four nugget clusters and two outlier nugge ts. For each cluster, we can do nugget maintenance using interactio n tech-niques as discussed in the following subsection. Figure 14: When users select a nugget on the MDS Starfield, a popup dialog shows its details.
 We propose a set of interaction techniques to help users expl ore nugget space and maintain nuggets. These interactions incl ude: Focus+Context : If users want to see details of one nugget, an orig-inal view can be displayed as shown in Figure 14.
 Figure 15: When users select a group of nuggets, the NMS syste m merges these queries and generate a new nugget.
 Figure 16: NMS refines a selected nugget and shows the results in a new dialog.
 Nugget Brushing : We allow users to select a subset of nugget space based on attributes such as the person who defined this n ugget, or when it was created or visited. In such a way, users can focu s on important nuggets or those of interest. For example, sele cting only those nuggets which were visited recently helps users f ocus on important nuggets and de-emphasizes old and less interesti ng ones. Move : Users can move one nugget to make it closer to or farther from other nuggets using  X  X rag and drop X . The reason why we in -troduce this action is that nugget distance in the users X  min d might be different from our distance formulas or the MDS algorithm re-sult. Such an action allows users to correct the error from al go-rithms based on the knowledge of domain experts. It is possib le for experts to make a mistake, thus we allow users to restore to th e dis-tances generated by our distance formulas or the MDS algorit hm. Compare : This action can popup a dialog to show the distances (query, data, nugget) between two nuggets selected by the us er. The query arguments are also listed in this dialog to facilit ate user X  X  comparison.
 Manual Clustering : As discussed before, NMS can do clustering on existing nuggets. However, users might not be satisfied wi th the automated clustering result. Thus our system allows users t o select several nuggets and group them. A new nugget will be shown to r e-place these selected nuggets. For the flexibility, we do not d elete the results from the clustering algorithms. Users can switch be tween automatic and manual results. An example of manual clusteri ng is shown in Figure 15.
 Automatic Refinement : Figure 16 shows the interface to do nugget refinement based on the algorithm discussed in Section 4. Aft er the user select one nugget of interest, NMS runs the algorithm to refine the selected nugget and then pop up a dialog to show the result s. If the user is satisfied with the refined results, NMS can replace the original nugget with the refined one.
 In the above actions, Move and Manual Clustering potentially en-able our system to learn some domain knowledge from experts, which is proposed as a part of our future work. In this section, we introduce techniques to support nugget-based sense making. As described in [5; 7], visualization-based s ense making is usually a complicated and interactive process sup ported by continuous interacting with visualized evidence sets. B esides evidence collecting, another major task is to reveal the int errela-tions among individual pieces of evidence. Thus, beyond vis ual-ization techniques for evidence sets, namely, the nugget sp ace in our case, more sophisticated nugget organization mechanis ms need to be provided to support nugget-based sense making.
 In particular, we use two distinct but interlaced phases to s umma-rize the nugget-based sense making process. They are nugget se-lection and interrelation discovery. This is because a user  X  X  opinion of a certain hypothesis is eventually formed based on a selec ted set of evidence and also the interrelations among them. We us e an important sense making model, which is hypothesis assess ment, to demonstrate the techniques we develop to support nugget-based sense making. However, the general principles we propose fo r nugget-based sense making and the design for  X  X ypothesis vi ews X  can easily be adapted to several other models, such as future pre-diction and alternative comparison. Before we present the d etails of nugget organization mechanisms, we introduce the hypoth esis view, which acts as the nugget organization bed for hypothes is as-sessment in our system. As shown in Figure 17, a hypothesis vi ew for a certain hypothesis is mainly composed of a  X  X verview X , a  X  X upport view X  and a  X  X efute view X . Initially, all the nugge ts re-lated to the given hypothesis are collected in the  X  X verview  X . The nuggets which are considered to be positive or negative evid ence for the hypothesis are later separated from the  X  X verview X  a nd put into the  X  X upport view X  and  X  X efute view X  respectively. After long term exploration by multiple users, a single data set may have accumulated a certain amount of nuggets in its nugget sp ace. Figure 17: An example of  X  X ypothesis View X  over four dataset s. Totally 19 nuggets are collected as evidence to access a hypo thesis: The stock value of  X  X BC X  company is over-estimated. 4 of them are considered to be positive evidence and thus being put in s upport view (the user is expanding the second one to view the details of it). 6 of them are judged to be the negative evidence and put in refu te view. Others remain in the overview.
 Many, if not most, of these nuggets may be unrelated to a certa in hypothesis, because different users may have different int entions when exploring the dataset, and even for a single user, her ex plo-ration may be for pursuing multiple goals. Moreover, to asse ss a hypothesis (e.g., whether the stock value of a certain comp any is over-estimated), an analyst may need to analyze the evide nce from multiple data resources (e.g., datasets recording sto ck mar-ket transactions, datasets recording company profits). Thu s, our nugget selection techniques should allow users to efficient ly select related nuggets from multiple nugget spaces. In NMS, such se -lections could either be achieved by users X  direct operatio ns on the system interface (e.g., drag nuggets from nugget spaces int o the hy-pothesis view), or by automatically importing the nuggets, which fulfill the queries submitted by users, to the hypothesis vie w. NMS provides functionality, such as sorting and querying on sta tistical information and keyword based search on additional attribu tes, to help users quickly access the nuggets of interest. Figure 17 shows an example of selecting nuggets from four different nugget s paces. Interrelation discovery against selected evidence is a cri tical yet complicated task for sense-making. It aims to incrementall y inte-grate individual evidence pieces to form larger evidence pi eces, i.e., sub-opinions, until the final opinion is reached. Here we not e that there may exist numerous interrelation models among the evi dence and some of them may be very complex. In this work, we describe several simple interrelation models among nuggets and the p roto-type in our system that helps alalysts use them in the hypothe sis views. We show examples of the interrelation models we suppo rt in figure 18.
 Group relation: Group relation is one of the simplest interrelation models. It indicates that a group of evidence together suppo rts or refutes some component of a hypothesis. This is similar to nu gget selection, because even among the positive or negative evid ence for a hypothesis, different evidence may support or refute the h ypothe-sis from different aspects. In NMS, users can group nuggets i n the support or refute view and the system marks different groups with frames in different colors. Moreover, in a group of nuggets, some of them may have greater importance than others and act as the  X  X ore evidence X  for the whole group, which is distinguished from others by a wider frame.
 Sequence relation: Sequence relations among nuggets are based on group relations but involve the concept of a time sequence . This is important, because, in many cases, a group of evidence mak es most sense when they are considered in a certain order. For ex am-ple, in order to assess the hypothesis that the current gas pr ice is at a wave bottom, a user may have to gather the national average g as prices for previous months, and analyze them in a time sequen ce. In NMS, users can define sequence relations among nugget grou ps. In particular, to express the order of two nuggets, users can stretch an arrow from one to another. Finally, the whole  X  X ugget stri ng X  connected by the arrows forms a  X  X toryline X , which supports or re-futes the hypothesis from one aspect (In the current version of our system, we do not allow  X  X ycles X  in a storyline). the support or refute view, we also introduce an external rel ation between positive and negative evidence, which is a contradi ction. Although, in general, the positive and negative evidence ev entu-ally contradicts with each other, the  X  X ontradiction X  we de fine here refers to a direct conflict between two specific pieces of evid ence. For example, a nugget extracted from dataset A shows that the gas price in Massachusetts is lower than the national average, w hile another nugget extracted from dataset B may indicate the opp osite. Such direct conflict usually indicates uncertainty or error s in the datasets. Figuring out these contradictions will help user s to be aware of  X  X ad X  evidence, and eventually avoid data from unre liable data sources. As shown in figure 18, in NMS, two nuggets involv ed in contradiction are marked by dashed frames and connected b y a dashed line.
 Figure 18: An example of interrelation discovery based on hy poth-esis view. 5 nuggets in refute view are grouped together to fo rm an evidence group, and the one in the center is considered to b e the  X  X ore evidence X  of this group. 2 groups of nuggets, 4 in each, are recognzied to be evidence sequences and thus linked togethe r by arrows in the support view. A pair of nuggets are pointing to e ach other by a double-direction dashed arrow, which indicates t hat they are contradicted with each other. In order to show the effectiveness of NMS, we have performed some preliminary user studies to compare user efficiency and ac-curacy when solving tasks with and without the help of NMS. We divided 12 students into 4 groups, 3 users per group. All 4 gro ups were asked to finish the same 5 knowledge discovery tasks, whi ch were based on 3 real datasets; three groups (group 2, 3, 4) wer e sup-ported by NMS. All the users were encouraged to finish the task s as quickly and correctly as possible. Our user studies showe d that NMS may not only greatly improve users X  time efficiency when solving knowledge discovery tasks, but also it can enhance u sers X  accuracy of finishing these tasks. Details of the experiment al setup, methodology and results of these user studies can be found in [20]. Here we note that these user studies were mainly designed to e valu-ate the functionalities of the analytical components of NMS , namely the nugget extraction, nugget combination and nugget refine ment. The nuggets in these user studies were displayed with very ba sic vi-sualization techniques, such as pull-down item lists. The a dvanced visualization and interaction techniques introduced in Se ction 5 and 6 were not employed in these user studies.
 To further evaluate the functionalities of the nugget visua lization (NV) and nugget-based sense making (NBSM) components in NMS , we conducted a preliminary case study to compare the effecti veness of NMS alone and NMS(NV+NBSM). In this case study, we in-vited 4 users (all WPI graduate students, but different from those in-volved in the previous user studies) to analyze the nuggets p ool col-lected during previous users X  exploration. They were asked to iden-tify the most  X  X ell-mined X  nuggets, i.e., those that captur e users X  interest best, and also to eliminate the  X  X isinterpreted X  n uggets, which were most likely generated by misinterpretation of us ers X  in-terest. In this case study, 2 of the 4 users used NMS first and th en NMS(NV+NBSM), while other 2 used them in the reverse order. Our case study showed that all 4 users were much more efficient in terms of both time spent and accuracy when using NMS(NV+ NBSM) to perform the tasks. Moreover, all 4 users gave com-ments that NMS(NV+NBSM) was  X  X seful X  and easier to use. This result was expected, because the nuggets view gave an intuit ive overview of the interrelations among nuggets and the nugget sense-making component provides convenient mechanisms to organi ze the nuggets. In this paper, we introduce a framework for analysis-guided visual exploration of multivariate data. Our system (NMS) leverag es the collaborative effort of human intuition and machine comput ations to extract, combine, refine and visualize the valuable infor mation (nuggets) hidden in large datasets. NMS also provides funct ional-ity to support users X  sense-making processes based on the nu gget space. Our preliminary evaluations indicate that NMS may gr eatly improve users X  time efficiency when solving knowledge disco very tasks. It may also be able to enhance users X  accuracy in finish ing these tasks, although more complicated tasks are needed to v al-idate this. Our future work includes expanding the recogniz able nugget types(nugget extraction), pattern types(nugget re finement) and nugget interrelation models (nugget-based sense-maki ng). Au-tomatic mining for interrelations among nuggets and techni ques to guide users X  further exploration with the well-organize d nugget spaces will also be investigated. Finally, more comprehens ive user studies that involve more users and more complex tasks will b e a major component of our future work. [1] A.Inselberg. Multidimensional detective. Proc. of IEEE Info-[2] G. Cobena, S. Abiteboul, and A. Marian. Detecting change s [3] M. C. F. de Oliveira and H. Levkowitz. From visual data ex-[4] M. Ester, H.-P. Kriegel, J. Sander, and X. Xu. A density-b ased [5] D. Gotz, M. Zhou, and V. Aggarwal. Interactive visual syn the-[6] D. P. Groth. Tracking and organizing visual exploration activ-[7] P. Keel. Collaborative visual analytics: Inferring fro m the spa-[8] D. A. Keim. Information visualization and visual data mi ning. [9] E. M. Knorr, R. T. Ng, and V. Tucakov. Distance-based out-[10] J. Kruskal and M. Wish. Multidimensional Scaling . Sage Pub-[11] J. Lin and B. Katz. Question answering from the web us-[12] E. A. Riskin. Optimal bit allocation via the generalize d [13] S.Havre, E.Hetzler, K.Perrine, E.Jurrus, and N.Mille r. Inter-[14] B. Shneiderman. Tree visualization with tree-maps: A 2 d [15] J. J. Thomas and K. A. Cook. Illuminating the Path: The Re-[16] K. Tranbarger and F. P. Schoenberg. The hungarian metho d [17] M. Ward. Xmdvtool: Integrating multiple methods for vi sual-[18] J. Wen, J. Nie, and H. Zhang. Clustering user queries of a [19] G. Xue, H. Zeng, Z. Chen, W. Ma, and Y. Yu. Clustering user [20] D. Yang, E. A. Rundensteiner, and M. O. Ward. Analysis [21] D. Yang, E. A. Rundensteiner, and M. O. Ward. Nugget dis-[22] J. Yang, D. Hubball, M. Ward, E. Rundensteiner, and W. Ri b-[23] T. Zhang, R. Ramakrishnan, and M. Livny. Birch: an effi-
