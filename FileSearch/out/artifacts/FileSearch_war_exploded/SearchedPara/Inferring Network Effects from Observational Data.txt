 We present Relational Covariate Adjustment (RCA), a gen-eral method for estimating causal effects in relational data. Relational Covariate Adjustment is implemented through two high-level operations: identification of an adjustment set and relational regression adjustment. The former is achieved through an extension of Pearl X  X  back-door criterion to rela-tional domains. We demonstrate how this extended defini-tion can be used to estimate causal effects in the presence of network interference and confounding. RCA is agnostic to functional form, and it can easily model both discrete and continuous treatments as well as estimate the effects of a wider array of network interventions than existing exper-imental approaches. We show that RCA can yield robust estimates of causal effects using common regression models without extensive parameter tuning. Through a series of simulation experiments on a variety of synthetic and real-world network structures, we show that causal effects esti-mated on observational data with RCA are nearly as accu-rate as those estimated from well-designed network experi-ments.
Causal inference X  X stimating the effect of interventions X  is central to data-driven decision making. Increased atten-tion has been paid to randomized experimentation (A/B testing) as a method for causal inference [11, 3, 5, 6]. Re-cent work has extended randomized experimentation to the case of network interventions [27]. However, there are nu-merous circumstances where performing an experiment may be infeasible, expensive, or time-consuming.

Fortunately, a variety of methods have been devised for inferring causal effects from observational data. Classical methods for causal inference from observational data con-sist of two steps. First, an adjustment set [22] is identified, which consists of variables that are causally related to both the prospective cause variable (termed a treatment ) and the Equal contribution.
 potential effect variable (termed an outcome ). Second, a procedure such as regression [21] or matching [24] is used to estimate the direct effect of treatment on outcome, cor-recting for the effects of the adjustment set. Extending this classical framework of estimation to relational data requires: (1) identifying adjustment sets in relational data, and (2) adjusting for the full range of the effects of those variables. Item 1 is primarily a structural question, and item 2 con-cerns estimation.

As a motivating example, consider the problem of esti-mating how a user-selected privacy setting influences the time that users spend interacting with an online social net-work. The privacy setting either requires users to explicitly approve others X  posts to their page or it allows posting with-out such an approval process. Site administrators may be in-terested in changing the default privacy setting but want to ensure that such a change would not adversely affect site us-age. Randomized experimentation on privacy settings may be controversial. Further, the propensity of users to share their posts with their friends could be influenced by charac-teristics of those friends. Figure 1 illustrates this example by indicating an implied correlation between social disposi-tion and use of the privacy setting as well as a correlation between social disposition and time spent on site.

The task of adjusting for this confounding is particularly challenging because some confounding variables can be prop-erties of neighbors in the friendship network. In Figure 1, the social disposition and privacy settings of Lucy, Sue, John, and Fred could affect both the privacy settings of Carl and the amount of time he spends on the site. The task of de-ciding how to set privacy policy is an intrinsically causal question because it requires reasoning about the effect that intervening on the privacy setting would have on site us-age. Additionally, modeling network effects is of central importance X  X ime on site is a function of the privacy set-tings of an entire sub-network of friends rather than the privacy setting of an individual.

In this paper, we present Relational Covariate Adjust-ment (RCA), the first reliable method for inferring arbi-trary causal effects in networks from observational data. RCA uses a two-stage procedure. The first stage automati-cally identifies the set of variables that must be adjusted for. This stage uses relational d -separation [17], an extension of d -separation [22] to relational data. The second stage per-forms regression adjustment using relational non-parametric estimators. This adjustment procedure makes limited as-sumptions about the nature of the causal relationship be-tween treatment and outcome. We provide theoretical guar-antees showing that RCA produces a consistent estimate of causal effect.

The rest of the paper is structured as follows. Section 2 provides background for causal effect estimation and rela-tional d -separation. Sections 3 and 4 introduce Relational Covariate Adjustment and discuss practical issues of imple-mentation. Section 5 compares the estimates of RCA to es-timates obtained via experimentation using multiple graph structures with data simulated under multiple functional forms, and shows that the performance of RCA can be com-petitive with experimental results.
We assume that we are given an undirected graph G =  X  V,E  X  . Let N = | V | , the number of vertices in the graph. Let T be a random variable composed of the treatment variables t i of each node i in the network, so that T =  X  t ,t 2 ,...,t N  X  . Let  X  be an assignment to T , that is,  X  =  X   X  1 , X  2 ,..., X  N  X  , where  X  i is an assignment to t i . The aver-age causal effect (ACE) is defined as the expected difference in outcome Y under treatment  X  , contrasted with an alter-nate treatment  X  0 :
ACE(  X  ,  X  0 ) = E [ Y | do ( T =  X  )]  X  E [ Y | do ( T =  X  Throughout the paper, we use the do operator [22] to refer to the interventional distribution, that is, the distribution that would arise due to manipulation of T rather than passive ob-servation. Equation 1 may also be expressed in the potential outcomes framework [25] by regarding Y as a node-specific function of treatment. Ugander et al. [27] consider a special case of equation 1 where  X  = ~ 1 and  X  0 = ~ 0. Hudgens and Halloran [9] refer to the above quantity as the population average overall causal effect .

Expressed directly in equation 1 is the notion that the outcome of subject i is a function of the entire treatment assignment vector, not only  X  i . This distinction is critical for estimating network effects, as we now have a language to express interventions on multiple subjects. When deal-ing with causal quantities as in equation 1, it is common to assume that E [ Y | do ( T =  X  )] is invariant with respect to treatment assignments to nodes which do not neighbor i . Let T nbr i denote the treatment variables of i  X  X  neighbors, and let  X  nbr i = {  X  j |{ i,j } X  E } and  X  0 nbr i be multisets repre-senting assignments to T nbr i . The neighborhood invariance assumption leads to the following reformulation of the aver-age causal effect: ACE(  X  ,  X  0 ) = 1 Equation 2 is consistent with the peer exposure models con-sidered by Aronow et al. [2], Toulis and Kao [26], and the no-tion of effective treatments considered by Manski [18]. These causal quantities facilitate answering questions about inter-ventional strategies including: 1. E [ Y | do ( t i = 1 ,T nbr i = ~ 1)]  X  E [ Y | do ( t 2. E [ Y | do ( t i = 1 ,T nbr i = ~ 0)]  X  E [ Y | do ( t 3. E [ Y | do ( t i = 0 ,T nbr i = ~ 1)]  X  E [ Y | do ( t By considering different settings of  X  and  X  0 , we can exam-ine a large number of possible intervention strategies, with-out being restricted to applying the same  X  X ype X  of inter-vention to each node in the network. In practice, no single value of  X  could be used to apply interventions (2) and (3) in the list above to all nodes in the network. However, we can consider targeted interventions on specific individuals in the network, so it is useful to consider these effects.
We now briefly introduce the relational concepts necessary to describe Relational Covariate Adjustment, following the notation and terminology of Maier et al. [17, 16].
Let a relational schema S = ( E , R , A , card ) be the set of entity, relationship, and attribute classes of a domain. It includes a cardinality function that imposes constraints on the number of times an entity instance can participate in a relationship. Without loss of generality, we will focus our presentation on the case of a simple network, where there is a single entity, and a single many-to-many relationship, e.g. a social network. Continuing the example of Figure 1: Users are connected to potentially many other users, each of which has a time on site, disposition, and privacy set-ting attribute. Relational schemas are often visualized with entity-relationship diagrams as in Figure 2.

A relational skeleton is a partial instantiation of a rela-tional schema that specifies the set of entity and relation-ship instances that exist in the domain. Using our online social network example, this corresponds to specific users and the friends that they connect to through the site. With a given schema, a relational path can be defined, which is a predicate that defines a path with respect to a schema. In our example, relational paths correspond to friendship paths, defined through the connectivity properties of the on-line social network. We will refer to variables with a trivial relational path (e.g., the immediate attributes of individu-als), as propositional variables . Relational variables consist of a relational path and an attribute that can be reached through that path. For instance, the multiset of privacy set-tings for friends adjacent to user i is a relational variable. Relational variables can have causal dependencies defined between them, specified by a relational model M = ( S , D ). This model consists of a collection of relational dependen-cies ( D ) defined over a relational schema ( S ). The relational model represents, as one example, the property that a user X  X  time on site is affected by the privacy settings of adjacent users. M also specifies a parametrized conditional distri-bution of each relational variable given its parents. In the context of this work, we do not have access to these distri-butions and must estimate them from data.
 To evaluate conditional independence queries on a model M , we first construct an abstract ground graph (AGG) [17], a lifted representation that admits the computation of d -separation queries on multi-relational domains. Abstract ground graphs are defined from a given perspective, spec-ifying a base item of the analysis, and include nodes that correspond to relational variables. In general, the construc-tion of an AGG can involve creating auxiliary  X  X ntersec-tion X  variables. However, for the case of single-entity, single-relationship networks (e.g. social networks or simple com-munication networks) there exists a single AGG that can be represented without the use of auxiliary variables. That is:
Proposition 1. Given a model with a single entity sin-gle, relationship schema, the complete set of d -separation facts can be determined by considering only propositional variables and relational variables.
 The proof stems from a direct application of relational d -separation and is presented in the Appendix. The conse-quence of Proposition 1 is a relatively simple representa-tion 1 . Within our running example there is a single per-spective (person) and relational variables are defined with Relative to those required for multi-relational domains. Figure 3: Abstract Ground Graph for the Social Network Example. In this example, each user X  X  disposition ( U affects that user X  X  privacy settings ( U 0 .Prv ) and time on site ( U 0 .ToS ). Further, the dispositions and privacy settings of a user X  X  immediate peers ( U 1 .D and U 1 .D , respectively) affect that user X  X  time on site. A user X  X  privacy settings are also influenced by their peers X  privacy settings. This structure repeats for U 2 , representing friends of friends. Higher orders of U p can be considered, but are not shown here. respect to the relative distance to an individual (e.g. friends and friends of friends). One plausible abstract ground graph for this example is shown in Figure 3, in which the dispo-sition and privacy settings of a person and her friends af-fect her time spent on site. Note that in Figure 3 there are two different types of variables present. Propositional variables are those preceded by U 0 , and are measured on a single instance. Relational variables are named as U for i &gt; 0. These variables representing the values of a person X  X  friends and the friends of her friends, respectively. Given the AGG, conditional independence facts can be com-puted directly using the same rules of d -separation used for Bayesian networks. For instance, from Figure 3, we can see that U 2 . Prv  X  X  X  U 0 . Prv | U 1 . Prv , because U 1 all d -connecting pathways between the privacy settings of friends of friends and a user X  X  time spent on site. These d -separation properties are essential to identifying a suffi-cient set of conditioning variables for a given causal query, discussed in more detail in the following section.
With a suitable representation in hand, we now turn to the core aim of this work: identifying interventional distri-butions. The approach taken here is to use an extension of the back-door criterion [22] to relational domains:
Definition 1. (Relational Back-Door Criterion) A set of variables C satisfies the relational back-door criterion with respect to variable sets ( X 1 ,X 2 ) in an AGG G if: 1. No node in C is a descendant of any node in X 1 in the 2. C blocks every back-door path between X 1 and X 2 in Note that here a back-door path refers to a path with an arrow into a member of X 1 . Definition 1 is a direct extension to relational data of the back-door criterion presented by Pearl [22]. In the case of a single entity with no relationships, the definition reduces to the propositional case.

When such a set C can be identified, an estimate of the interventional distribution can be obtained through a simple application of the adjustment formula: P ( X 2 | do ( X 1 = x )) = Then, average causal effects can be computed as follows: where P represent either a probability density or probabil-ity mass function. Semantically, because relational variables take on values that may be multisets, there is a notion of exhangeability encoded in this estimation framework. Con-sider once again the example of Figure 1. In this case, Sue has three neighbors, John, Bob and Carl. Let U 1 Sue . Prv rep-resent the multiset of time on site values of these neighbors (see Table 1). As presented, U 1 Sue . Prv takes on the value { On, On, Off } . Intervention on Carl or Bob X  X  privacy set-ting would yield the interventional regime do ( U 1 Sue { On, Off, Off } ). As such, our interventional language is in-variant with respect to the identities of the instances under intervention, and focuses strictly on the variables measur-able on those entities. There is a close relationship between Relational Covariate Adjustment and the adjustments performed for peer-effects in the network experimentation literature (c.f., [2, 27, 8]). Given this connection, we discuss this relationship for read-ers familiar with network experimentation. Current work in network experimentation are described within the potential-outcomes framework and assume strong ignorability , i.e., that (1) the outcome is rendered independent of treatment given treatment status and (2) that all instances have a treatment probability, p  X  (0 , 1). Within non-network ex-periments condition (1) is trivially satisfied via randomiza-tion. However, even in the simple network setting there is dependence between other treatments and an individual X  X  outcome. Further, by virtue of network randomization de-signs (i.e., [27, 8]), dependence is induced between the treat-ment status of instances. This dependence is depicted in Figure 4. The graphical view shows that simple use of Re-lational Covariate Adjustment can be applied to adjust for network bias, with U 1 .Prv constituting the adjustment set. Thus, the estimator of Gui et al. [8] can be seen as a special Figure 4: An abstract ground graph representing the de-pendence structure under network experiment. This struc-ture is similar to 3, except that disposition no longer influ-ences privacy settings, and is excluded from the diagram. A variable D representing the experimental design may induce marginal dependence between treatments. It is possible that the outcome of peers ( U 1 .ToS ) affects U 0 .ToS , but includ-ing U 1 .Prv in a conditioning set is sufficient to satisfy the back-door criterion for treatment U 0 .Prv . case of Relational Covariate Adjustment, with an assumed dependence structure of Figure 4 and adjustment performed with a linear model. However, in contrast to current net-work experimentation estimation methods, Relational Co-variate Adjustment can be applied easily to observational data with multi-valued and continuous treatments and an arbitrary number of confounders without modification.
We now discuss how to practically estimate the effects of interventions in relational domains. In contrast to the non-relational setting, computing the adjustment formula in equation 5 is not straightforward because the hypotheti-cal values of X 1 could be multisets. We present a strategy for conditioning on multisets that does not make strong as-sumptions about functional form. Algorithm 1 presents the procedure. Step 1 identifies the adjustment set by using re-lational d -seperation to find the necessary set of variables C to block all back-door paths between T and Y .
 The causal effect is then estimated as E [ Y | do ( T = t )] = where equation 7 is a Monte-Carlo approximation to the integral. E [ Y | T = t, C = c i ] can be estimated from a re-gression of y on features T and C .
Algorithm 1 can be applied to estimate a variety of causal effects derived from the definition presented in equation 2. In what follows, U 0 .T refers to a subject X  X  treatment and U .T refers to the treatments of immediate neighbors. Algorithm 1: RelationalAdjustment Input: Relational model M , outcome Y , treatment(s)
Output: h ( x ) = P N i =1 E [ Y | do ( X = x )]
Use relational d -separation to identify adjustment set C
Estimate E [ Y | X, C ] via regression or classification h ( x ) = P N i =1 E [ Y | X = x, C = c i ] return h ( x ) Marginal Individual Effect This effect represents the expected change in an arbitrary subject X  X  outcome, U 0 .Y , when considering two alternate settings of that subject X  X  treatment, U 0 .T (1 and 0). The function h represents the expected outcome when applying a hypothetical intervention to U 0 .T , conditioning on C . Ad-ditionally, the treatment assignment of peers, U 1 .T , can in-fluence both U 0 .T and U 0 .Y , which requires including peer treatment values in the set of confounders, i.e, U 1 .T  X  C . Marginal Peer Effect The above case concerns the causal effect of settings of the treatment assignments of peers, U 1 .T .  X  and  X  0 are mul-tisets consisting of the treatment values of neighbors. For instance, in the context of Figure 1,  X  Sue = { On , On , Off } . We could consider altering the treatment of Sue X  X  neighbor-hood to  X  0 Sue = { Off , Off , On } . The effect of the intervention the estimation of arbitrary treatment settings of a node X  X  neighborhood.
 Total Effect h = RelationalAdjustment M ,Y, ( U 0 .T,U 1 .T ) h (1 , ~ 1)  X  h (0 , ~ 0) = E [ U 0 .Y | do ( U 0 .T = 1 ,U This effect represents an intervention on both U 0 .T and U .T . The adjustment procedure is valid for simultaneous interventions on these variables because the back-door cri-terion (Definition 1) applies to sets of variables. Now, h is a function of two variables, the hypothetical intervention to U .T and the hypothetical intervention to U 1 .T . The first argument to h is, in the case of binary treatments, 0 or 1. The second argument to h is a multiset. This class of effects is most applicable to estimation of applying an intervention to all individuals on a network, e.g., a site-wide feature roll-out.
When any term in the adjustment equation is a relational variable, E [ Y | T, C ] cannot be directly estimated using re-gression or classification estimators designed for independent and identically distributed data because relational variables X  instances consist of multisets rather than single observations. A common approach to address this is to create aggregations to succinctly represent the sets with a small number of real-valued features. There is a long history in statistical rela-tional learning of using user-specified aggregation functions to model the distribution of a relational variable [12, 23]. While these approaches have yielded impressive results for the task of prediction, causal inference requires stronger guarantees about what is being captured by the aggrega-tion functions. The aggregation function should be a suffi-cient statistic of the underlying distribution of the variable, rendering model parameters independent of the data. For instance, specifying the mean aggregation would be sufficient if the values of a relational variable are Poisson distributed, and in the case of a normal distribution, the variance ag-gregation must also be present. When sufficient statistics are employed, then we can be confident that all relevant as-pects of the distribution of a set have been accounted for when marginalizing to compute the interventional distribu-tion. When assumptions can be made about the marginal distribution of relational variables, a set of features can be constructed for regression by taking the sufficient statistics for each instance of a relational variable. Once this set is constructed, any consistent regression or classification model can be used to estimate E [ Y | T, C ]. In the absence of known sufficient statistics, estimates of a number of the moments of a distribution can be used as an approximate solution. We assume that the sufficient statistics S x of the true dis-tribution can be described as a function of its k -th order moments: mate of the k -th moment of X . This implies the following procedure: (1) for each relational variable generate a set of k aggregates of the 1 ,...,k moments of the set, (2) use this new data set as the features to a non-linear regression or classification model to estimate E [ Y | T, C ].
In this section we evaluate whether, and under which cir-cumstances, Relational Covariate Adjustment can serve as a feasible alternative to experimentation for causal infer-ence. To that end, we constructed an evaluation suite to compare RCA to state-of-the-art techniques for estimating causal effects from experiments. We provided experimental techniques with experimental data, and we provided RCA-data with more challenging data sets in which relational con-founding variables are present. We examined a variety of real and synthetic networks, using simulated data with mul-tiple functional relationships between treatment and out-come.
Data generation process was performed as follows: 1. Generate a random network 2. Sample treatment using one of two regimes: 3. Sample outcome according to the treatment assigned
In both the Obs regime and the Exp regime, the task is identical: estimate the relationship between treatments (in-dividual and those of peers) and outcomes. We compared the performance of models learned from the observational data to estimates obtained by experimentation 2 .
We considered two network structures in our synthetic experiments: small-world networks and preferential attach-ment networks. For small-world networks, each node has degree (in+out) of 10 in the initial lattice. We varied the ability of 0 results in a regular lattice, and a rewiring prob-ability of 1 results in a random (Erd  X os-R  X enyi) network. For preferential attachment networks, we varied the power of networks we consider have 1024 nodes.

Each network has a simple relational model consisting of a single entity ( U ) and relationship (adjacency). Each in-stance of U (i.e., a node in the network) has four attributes, C , C 2 , T , and Y . We are interested in estimating the ef-fects of U 0 .T (intrinsic treatment) and U 1 .T (treatment of peers) on U 0 .Y (intrinsic outcome).
In the Obs regime, propensity for treatment can be caused by intrinsic covariates, covariates of peers, and treatments of peers. To simulate data from that regime, we first con-structed a confounding term L i which is a linear combination of: Then, treatment is sampled as a binomial random variable with success probability that is a logistic function of L simulate influence between the treatments of subject i and its neighbors, we use a Gibbs sampling technique inspired by Manski [18]. After initially assigning treatment, we resam-ple treatment with an additional parameter  X  nbr i ,s  X  1 proportion of i  X  X  neighbors that are treated at the previous iteration. This process is repeated until s = 3.

Here,  X  X  (0 , 1). We vary the strength of the confound-ing coefficient,  X  L , from 0 to 3. We vary the strength of
Code used to reproduce these experiments is available at https://github.com/darbour/RelationalAdjustment dependence on peers X  treatments,  X  T , from 0 to 10. When  X 
T = 2, we find that the distribution of peer treatment pro-portions,  X  nbr i , is roughly uniform. When  X  T = 10, this distribution is bi-modal with peaks at 0 and 1.

In the Exp regime, treatment was assigned randomly (with probability 0.5) at the level of graph clusters rather than individuals using a technique outlined by Ugander et al. [27]. This clustering technique assigns treatment in such a way that nodes are more likely to have completely treated or completely untreated neighborhoods. In other words, graph cluster randomization leads to bi-modal distributions of  X  nbr i with peaks at 0 and 1. This randomization tech-nique is employed by experimental estimators to estimate the total effect of equation 11.
We explored the use of three distinct outcome forms. In the first case, outcome is a linear function of individual treat-ment, the proportion of treated peers,  X  adj i , confounding variables L i , with noise that is distributed as a standard normal. The general form of this function is shown below in equation 14. The relationship between the  X  adj i and out-come is shown in Figure 5b for a specific parameter setting. We also considered non-linear functions of treatment and covariates. The first of these is shown in equation 15, and is a sigmoid function of T i ,  X  nbr i , and L i . Figure 5a shows one instance of this function class. This function is bounded in the range (0 , 1). As  X  I and  X  P grow, the outcome approaches 1 more sharply.

Y i  X  (1 + exp (  X  (2  X  I T i + 2  X  P  X  nbr i +  X  L L i + ))) The final outcome model we use is linear in T i and L i , but depends on  X  nbr i through a radial basis function about 0.5. An instance of this function can be seen in Figure 5c. In this case, the outcome peaks when  X  nbr i = 0 . 5.
 In what follows, we refer to the functions outlined in equa-tions 14, 15, and 16 as linear , sigmoid , and RBF , respec-tively. In practice, any consistent conditional estimator of E [ Y | T, X  nbr i , C ] will satisfy the requirements of the rela-tional adjustment technique, provided C satisfies the rela-tional back-door criterion. For our experiments, we used gradient boosted trees (GBMs) to model this expectation, where C consists of the means and variances of U 1 .C 1 and U .C 2 .

Gradient boosted trees [7] are a nonparametric ensemble where each base learner is a low-depth decision tree. At each iteration training samples are reweighted according to their predictive error on the previous iteration. The boosting procedure has been shown to be consistent [7], and provides near state-of-the-art results on a variety of tasks.
We employed two experimental effect estimators within the Exp regime, Horvitz-Thompson estimation [27] and a linear additive model [8]. The Horvitz-Thompson estimator can be written as a weighted sum of outcomes of nodes which fall into two distinct exposure categories. We defined a node i as  X  X xposed X  if T i = 1 and  X  nbr i &gt; 0 . 75. We defined a node is varied. as  X  X on-exposed X  if T i = 0 and  X  nbr i &lt; 0 . 25. Nodes which do not fall into one of these categories are not used in the estimation process. 1 N The probabilities in the denominator are estimated using the dynamic programming algorithm introduced by Ugander et al. [27]. This method is useful primarily when the effect of interest is the total effect and the distribution of  X  bimodal with peaks at 0 and 1. We refer to this estimation strategy as ExpHT .

The linear additive model introduced by Gui et al. [8] fits the conditional expectation E [ Y | T, X  nbr i ], which is appropri-ate when treatment is assigned experimentally and outcome is a linear model. We refer to this model as ExpLM .
It is important to note that, for both ExpHT and ExpLM , the results reported are with respect to a performed experiment. This is contrast to the setting of Relational Covariate Ad-justment, which is given access only to observational data, without the benefit of randomization.
For each combination of parameter settings, spanning rewiring probability,  X  I (individual effect),  X  P (peer effect),  X  founding strength), and  X  T (treatment auto-correlation), we performed 25 trials to assess variance. This resulted in 2269  X  25 = 56,725 datasets, some belonging to the experi-mental regime ( Exp ) and some belonging to the observational regime ( Obs ). Within the experimental regime, we estimated total effect using ExpHT and ExpLM , the current state-of-the-art techniques for effect estimation on networks. Within the observational regime, we used the Relational Covariate Adjustment procedure with gradient boosted trees. This is referred to as ObsGBM in what follows. We also include re-sults for an unadjusted GBM which does not include any relational covariates. We refer to this model as ObsGBM-U .
Accuracy of the total causal effect estimates for the linear outcome model are shown in Figure 7. Each box in this fig-ure represents the distribution of performance values across all network settings and model parameterizations. These results indicate that the ExpLM model performs best in this context, with ExpHT yielding slightly more bias and signif-icantly more variance. However, in the observational case, which is a more complex estimation task, the Relational Covariate Adjustment implementation, ObsGBM is competi-tive with the linear model in terms of bias, and yields only slightly more variance than the HT estimator.

We also examined the performance of these models across a variety of outcome functions. The error in total causal ef-Figure 7: Comparison of estimates obtained from retrospec-tive, confounded, observational data (left) and those from experimentation (right). An overestimated effect results in positive error, and an underestimated effect results in neg-ative error. These methods almost always overestimate the true global effect.
 Table 2: Root mean squared error for marginal individual effects. One standard error is shown in parentheses. fect estimates are shown in Figure 6. This demonstrates two dimensions of variability in our simulations. First, different functional forms lead to more or less challenging estimation tasks. Most significantly, as the strength of confounding (  X 
L ) is increased from 1 to 3, the observational regime be-comes more challenging. This matches intuition X  X n the ex-treme, where  X  L = 0, any confounding between treatment and outcome disappears.

While the ExpHT model is specifically designed to esti-mate only total effects, ExpLM and ObsGBM can also compute marginal individual effects and marginal peer effects. We computed the root mean squared error between estimated individual effects and actual individual effects X  X his error is shown in Table 2. ObsGBM is competitive with ExpLM primar-ily for non-linear functional forms.

Finally, we examined the ability of the ExpLM and ObsGBM to model marginal peer effects. Unlike the total effect and the marginal individual effect, there is a spectrum of peer effects induced by varying  X  nbr i . The possible functional relationships between  X  nbr i and Y i are shown in Figure 5. Figure 8 provides another concrete example of such a func-tion along with the models estimated by ExpLM and ObsGBM . Table 3: Root mean squared error for marginal peer effects. One standard error is shown in parentheses.
 Figure 8: An example of the sigmoid outcome model. In this case, a model of the marginal peer effect is estimated from observational data using a boosted model and from experimental data with a linear model, with  X  I =  X  P = 5 and  X  L = 1.
 Table 3 shows the root mean squared error for peer effects  X  nbr i  X  { 0 , 0 . 1 ,..., 0 . 9 , 1 } . In the linear case, the model has an advantage over ObsGBM . However, the impor-tance of modeling non-linearity becomes clear in the RBF and sigmoid examples, for which the observational estimator is superior to the experimental estimator.
To demonstrate the applicability of RCA to large net-works for which the edge generation process is unknown, we also compared the performance of ObsGBM and ExpLM on the Enron graph [14]. The nodes of the Enron network are in-dividuals, with an edge between them if either of them have sent an email to the other. The network is contains 36,692 nodes and 183,831 edges in total, with a clustering coefficient of approximately 0.5 and diameter of 11. In the absence of ground truth measures, we generated synthetic random vari-ables following the procedure of Section 5.1, and use the real Table 4: Root mean squared error for marginal individual effects in Enron data.
 Table 5: Root mean squared error for marginal peer effects in Enron data. graph topology to test scalability and efficacy. The form of the generative functions were identical to those used in the observational setting. We then measured the estimates of the total effect, marginal peer effects, marginal individual effects for each method.

Figure 9 shows the quality of estimated total effects across each outcome model. While the results from a synthesized network experiment are superior to the estimates from Ob-sGBM , the results are on comparable scales. Table 4 and Ta-ble 5 show the error in estimated individual and peer effects, respectively. Again, the results from ObsGBM are similar to ExpLM . ExpLM performs exceptionally well at experimental data with a linear outcome. However, ObsGBM has a clear ad-vantage in estimating marginal peer effects under the RBF and Sigmoid models. We conjecture that the scale-free na-ture of the Enron network leads to particularly favorable circumstances for experimental approaches such as ExpLM . Scale-free networks have many nodes with only one or two neighbors, thus the probability that an entire neighborhood will be completely treated or completely untreated is rela-tively high.
Ugander et al. [27] and Gui et al. [8] present methods which aim to measure the effect of placing the entire net-work under treatment versus control. In both cases, this is achieved by partitioning the graph into clusters, treat-ing each cluster randomly and estimating the the average causal effect after adjustment for peer confounding. Toulis and Kao [26] consider experimental design and estimation to measure average peer effect as a quantity of interest. In both cases, the methods discussed within this paper can be seen as complimentary work, providing interpretation within the causal graphical models framework. This interpretation aids the identification of threats to validity and provides a uni-fied framework for estimation of a variety of causal effects. Importantly, the causal graphical model view of this work also admits inference in the non-experimental setting.
There have been numerous applications in recent year that seek to measure causal effects in real relational domains. Bakshy et al. [4] performed large scale experiments to under-stand the effect of social cues on consumers X  receptiveness to advertisements. Aral and Walker [1] used experimentation to understand the process of social diffusion, or  X  X irality X  in large-scale social systems.

Within the observational setting, researchers have applied quasi-experimental designs (QEDs) to perform causal infer-ence in relational data. QEDs exploit fortuitous circum-stances in data that allow for the approximation of an ex-perimental design post-hoc. For example, Oktay et al. [20] apply QEDs to Stack Overflow, an online question and an-swer site for programming, to understand the dynamics of users X  behavior on the site. Krishnan and Sitaraman [13] consider a quasi-experimental design to determine the rela-tionship between network quality and user engagement with online content. Kearns et al. [10] study patterns of network formation by performing an experiment where subjects were anonymously paired, and subsequently were asked to inter-actively complete a graph-coloring video game.

Manski [18] considers the problem of identifiability in the potential-outcomes framework in the presence of peer influ-ence. Ogburn and VanderWheele [19] enumerate configu-rations of causal graphs that result in bias from social ef-fects on single entity, single relationship networks. Maier et al. [17] considers the more general case of d -separation for multi-relational domains. Maier et al. [15] apply the rules implied by Maier et al. [17] to learn the causal structure of relational domains, but explicitly do not consider inference of individual causal effects. We have described and evaluated Relational Covariate Adjustment, an extension of nonparametric adjustment to relational data. Through the use of nonparametric regres-sion estimators, RCA allows for estimation of a wide range of functional dependencies without modification. We showed the efficacy of this approach to causal inference with a set of experiments that examine Relational Covariate Adjust-ment and other experimental adjustment methods over a range of graph topologies.

This work represents one step toward a much larger goal of general causal inference in relational domains. Toward that end, we plan to extend RCA to the case of multiple entities and relationships and to extend the calculus of interventions by developing techniques that can estimate the effects of interventions that add or remove nodes or edges from the network.
 [1] S. Aral and D. Walker. Creating social contagion [2] P. M. Aronow and C. Samii. Estimating average [3] E. Bakshy, D. Eckles, and M. S. Bernstein. Designing [4] E. Bakshy, D. Eckles, R. Yan, and I. Rosenn. Social [5] J. Bosch. Building products as innovation experiment [6] D. S. Choi. Estimation of monotone treatment effects [7] J. H. Friedman. Greedy function approximation: A [8] H. Gui, Y. Xu, A. Bhasin, and J. Han. Network a/b [9] M. G. Hudgens and M. E. Halloran. Toward causal [10] M. Kearns, S. Judd, and Y. Vorobeychik. Behavioral [11] R. Kohavi, A. Deng, B. Frasca, T. Walker, Y. Xu, and [12] D. Koller. Probabilistic relational models. In Inductive [13] S. S. Krishnan and R. K. Sitaraman. Video stream [14] J. Leskovec and A. Krevl. SNAP Datasets: Stanford [15] M. Maier, K. Marazopoulou, D. Arbour, and [16] M. E. Maier. Causal Discovery for Relational [17] M. E. Maier, K. Marazopoulou, and D. D. Jensen. [18] C. F. Manski. Identification of treatment response [19] E. L. Ogburn and T. J. VanderWeele. Causal diagrams [20] H. Oktay, B. J. Taylor, and D. Jensen. Causal [21] J. Pearl. Graphs, causality, and structural equation [22] J. Pearl. Causality . Cambridge university press, 2009. [23] C. Perlich and F. Provost. Distribution-based [24] D. B. Rubin. Matching to remove bias in observational [25] D. B. Rubin. Causal inference using potential [26] P. Toulis and E. Kao. Estimation of causal peer [27] J. Ugander, B. Karrer, L. Backstrom, and
Proof. In constructing a conditional independence query with relational d -separation [15], paths composed of propo-sitional variables, relational variables, and intersection vari-ables must be considered. The set of propositional and rela-tional variables to be considered for a perspective is directly identifiable from the relational model. Intersection vari-ables, as defined by Maier et al. [15], are required for sound and complete reasoning of d -separation in relational domains whenever there exists two paths, P 1 = [ A,...,B ] ,P [ A 0 ,...,B 0 ] that are not subsets of each other and whose beginning and ending entity are the same, i.e., A = A 0 and B = B 0 . We consider the case of the single entity, single re-lationship graph. Denote E to be the entity and R to be the relationship. Without loss of generality, we consider paths that begin at the entity. All possible path specifications then must be of the form [ A ( BA )  X  ], where  X  is the Kleene star. It follows directly that any two path specifications are either identical, or the shorter path is a sub-path of the other. This implies that for single entity, single relationship networks, intersection variables do not exist.
