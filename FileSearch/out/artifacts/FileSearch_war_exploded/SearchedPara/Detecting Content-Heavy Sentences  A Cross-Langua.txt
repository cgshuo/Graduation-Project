 To generate text, people and machines need to de-cide how to package the content they wish to ex-press into clauses and sentences. There are multi-ple possible renderings of the same information, with varying degrees of ease of comprehension, compactness and naturalness. Some sentences, even though they are grammatical, would be more accessible to a reader if expressed in multiple sen-tences. We call such sentences content heavy sen-tences, or heavy sentences for brevity.

In the established areas of language research, text simplification and sentence planning in dia-log and generation systems are clearly tasks in which identification of content-heavy sentences is of great importance. In this paper we introduce a novel flavor of the task in the cross-lingual setting, which in the long term may guide improvements in machine translation. We seek to identify sentences in Chinese that would result in heavy sentences in English if translated to a single sentence.
Example I in Table 1 shows a Chinese sentence and its two English translations A and B. Transla-tor A used three English sentences to express all the information. Translator B, on the other hand, used a single sentence, which most readers would find more difficult to read. Example II illustrates a case where a translator would be hard pressed to convey all the content in a sentence in Chinese into a single grammatical English sentence.
Here we provide an operational characteriza-tion of content-heavy sentences in the context of Chinese-English translation. Instead of establish-ing guidelines for standalone annotation, we re-purpose datasets developed for evaluation of ma-chine translation consisting of multiple reference translations for each Chinese sentence. In this cross-lingual analysis, sentences in Chinese are considered content-heavy if their content would be more felicitously expressed in multiple sentences in English.

We first show that, with respect to English, content-heavy Chinese sentences are common. A fifth to a quarter of the sentences in the Chi-nese news data that we analyze are translated to multiple sentences in English. Moreover our experiments with reader preference indicate that for these sentences, readers strongly prefer multi-sentence translation to a single-sentence transla-tion (  X  4.1). We also compare the difference in ma-chine translation quality for heavy sentences and find that it is considerably lower than overall sys-tem performance (  X  4.2). Then we study the con-nection between heavy sentences and the factors used in prior work to split a Chinese sentence into multiple sentences, showing that they do not fully determine the empirically defined content-heavy status (  X  5). Finally, we present an effective system to automatically identify content-heavy sentences in Chinese (  X  6, 7, 8). The need for identifying content-heavy sentences arises in many specialized domains, including di-alog systems, machine translation, text simplifica-tion and Chinese language processing but it is usu-ally addressed in an implicit or application specific way. In contrast, we focus on identifying heavy sentences as a standalone task, providing a uni-fying view of the seemingly disparate strands of prior work. We now overview the literature which motivated our work.
 Sentence planning. In text generation, a sen-tence planner produces linguistic realizations of a list of propositions (Rambow and Korelsky, 1992). One subtask is to decide whether to package the same content into one or more sentences. In the example below (Pan and Shaw, 2005), the multi-sentence expression B is much easier to process: Identifying sentence [A] as heavy would be useful in selecting the best realization.

A crucial difference between our task and its counterpart in sentence planning is that traditional text generation systems have access to rich se-mantic information about the type of propositions the system needs to convey, while in our task we have access only to Chinese text. In some dia-log systems, content selection is treated as an op-timization problem, balancing the placement of full-stops and the insertion or deletion of proposi-tions with the similarity of the resulting output and an existing corpus of acceptable productions (Pan and Shaw, 2005). Others formulate the problem as a supervised ranking task, in which different pos-sible content realizations are generated, including variation in the number of sentences (Walker et al., 2001; Stent et al., 2004). With the introduction of the concept of content-heavy sentences, we can envision dialog systems addressing the sentence realization task in two steps, first predicting if the semantic content will require multiple sentences, then having different rankers for expressing the content in one or multiple sentences. In that case the ranker will need to capture only sentence-level information and the discourse-level decision to use multiple sentences will be treated separately. Text simplification.  X  X ext simplification, de-fined narrowly, is the process of reducing the lin-guistic complexity of a text, while still retain-ing the original information content and mean-ing X  (Siddharthan, 2014). An important aspect of simplification is syntactic transformation in which sentences deemed difficult are re-written as multi-ple sentences (Chandrasekar et al., 1996; Alu  X   X sio et al., 2008). Our task may be viewed as identi-fying sentences in one language that will require simplification when translated, for the benefit of the speakers of the target language. In rule-based simplification systems, splitting is performed al-ways when a given syntactic construction such as relative clause, apposition or discourse connec-tive are detected (Chandrasekar et al., 1996; Sid-dharthan, 2006; De Belder and Moens, 2010). Most recently, text simplification has been ad-dressed as a monolingual machine translation task from complex to simple language (Specia, 2010; Coster and Kauchak, 2011; Wubben et al., 2012). However simplification by repackaging the con-tent into multiple sentences is not naturally com-patible with the standard view of statistical MT in which a system is expected to produce a single output sentence for a single input sentence. Some of the recent systems using MT techniques sep-arately model the need for sentence splitting (Zhu et al., 2010; Woodsend and Lapata, 2011; Narayan and Gardent, 2014). Identifying heavy sentences in simplification is equivalent to identifying sen-tences that require syntactic simplification. Sentence structure and MT. Prior work in ma-chine translation has discussed the existence of sentences in Chinese which would result in a poor translation if translated in one sentence in English. The main factors proposed to characterize such problematic sentences are sentence length (Xu and Tan, 1996) and the presence of given syntactic constructions (Xu et al., 2005; Yin et al., 2007; Jin and Liu, 2010). Mishra et al. (2014) used rules in-volving similar factors to distinguish sentences in Hindi that need simplification prior to translation.
In each of these approaches, the identified sen-tences are segmented into smaller units. Similar to work in text simplification, the simplification rules are applied to all sentences meeting certain crite-ria, normally to all sentences longer than a pre-defined threshold or where certain conjunctions or coordinations are present. In contrast, the model we propose here can be used to predict when seg-mentation is at all necessary.

Our approach to the problem is more compat-ible with the empirical evidence we presented in our prior work (Li et al., 2014) where we ana-lyzed the output of Chinese to English machine translation and found that there is no correlation between sentence length and MT quality. Rather we showed that the quality of translation was markedly inferior, compared to overall transla-tion quality, for sentences that were translated into multiple English sentences. This prior work was carried over a dataset containing a single reference translation for each Chinese sentence. In the work presented in this paper, we strengthen our find-ings by examining multiple reference translations for each Chinese sentence. We define heavy sen-tences based on agreement of translator choices and reader preferences.
 Commas in Chinese. Often a comma in a sen-tence can be felicitously replaced by a full stop. Such commas offer a straightforward way to split a long sentence into multiple shorter ones by replac-ing the comma with a full stop. Monolingual text simplification systems often try to identify such commas. They are particularly common in Chi-nese and replacing them with full stops leads to improvements in the accuracy of syntactic parsing (Jin et al., 2004; Li et al., 2005). Moreover, exist-ing syntactically parsed corpora conveniently pro-vide numerous examples of these full-stop com-mas, and thus training data for systems to identify them (Xue and Yang, 2011; Yang and Xue, 2012). In this paper, we systematically study the relation-ship between the presence of full-stop commas in the sentence and whether it is content-heavy for Chinese to English translation. In this work we use three news datasets: the newswire portion of the NIST 2012 Open Ma-chine Translation Evaluation (OpenMT) (Group, 2013), Multiple-Translation Chinese (MTC) parts 1-4 (Huang et al., 2002; Huang et al., 2003; Ma, 2004; Ma, 2006), and the Chinese Treebank (Xue et al., 2005). In OpenMT and MTC, multiple reference translations in English are available for each Chinese segment (sentence).

To study the relationship between content-heavy sentences and reader preference for multi-sentence translations (  X  4.1), we use OpenMT (688 segments) and MTC parts 2-4 (2,439 segments), both of which provide four English translations for each Chinese segment. This analysis forms the basis for labeling heavy sentences for supervised training and evaluation (  X  5, 6, 7).

The Chinese Treebank (CTB) has been used in prior work as data for identifying full-stop com-mas. Moreover, 52 documents in MTC part 1 were drawn from the CTB. The intersection of the two datasets allows us to directly analyze the relation-ship between heavy sentences and full-stop com-mas in Chinese (  X  5). Furthermore we use this in-tersection as test set to identify heavy sentences so we can directly compare with models developed for comma disambiguation. To be consistent with the rest of the MTC data, we use 4 out of the 11
Our model for Chinese full-stop comma recog-nition is trained following the features and training the overlapping MTC/CTB documents mentioned above. There are 12,291 sentences in training that contain at least one comma. A classifier for detecting heavy sentences is trained on OpenMT and MTC (excluding the test set). A quick in-spection of both datasets reveals that Chinese sen-tences without a comma were never translated into multiple sentences by more than one translator. Therefore in our experiments we consider only sentences that contain at least one comma. There are 301 test sentences, 511 training sentences in OpenMT and 2418 in MTC. Sentences are pro-standard parses are used to obtain full-stop com-mas and to train comma disambiguation models. In this section we provide an operational definition for which sentences should be considered content-heavy, based on the choices made by translators and the fluency preferences of readers when a sen-tence is translated into a single or multiple sen-tences. We further demonstrate the difference in machine translation quality when translating content-heavy sentences compared to other sen-tences. 4.1 Content-heaviness and multi-sentence First we quantify how often translators choose to translate a Chinese sentence into multiple English sentences. Content-heavy Chinese sentences are those for which there is a strong preference to pro-duce multiple sentences when translating to En-glish (at the end of the section we present specific criteria).

Obviously, splitting a sentence into multiple ones is often possible but is not necessarily pre-ferred. In Table 2, we show in the  X %data X  Table 2: Percentage of sentences for which a given number of translators prefer to use multiple sen-tences in English, along with percentage of times a multi-sentence translation was selected as most fluent and comprehensible by readers. columns the percentage of source sentences split in translation by 0, 1, 2, 3 and all 4 translators. For about 20% of segments in OpenMT and 15% in MTC, at least three of the translators produce a multi-sentence translation, a rate high enough to warrant closer inspection of the problem.

Next, we conduct a study to find out what level of translator agreement leads to strong reader pref-erence for the same information to be presented in multiple sentences.

For each Chinese segment with one, two or three multi-sentence reference translations, we ask five annotators on Mechanical Turk to rank the reference translations according to their general flow and understandability. The annotators saw only the four randomly ordered English transla-tions and were not shown the Chinese original, with the following instruction:
We obtain reader preference for each segment in the following manner: for each annotator, we take the highest ranked translation and check whether it consists of multiple sentences. In this way we have five binary indicators. We say readers prefer a sentence to have a multi-sentence translation in terms of flow and comprehensibility if the major-ity of these five indicators are positive.

In the  X %best multi X  columns of Table 2, we tabulate the percentage of segments with major-ity preference for multi-sentence translation, strat-ified by the number of translators who split the content. Obviously the more multi-sentence trans-lations there are, the higher the probability that the readers will select one as the best translation. We are interested in knowing for which conditions the Table 3: Percentage of data for heavy sentences along with BLEU scores for heavy and non-heavy sentences and their difference. preference for multi-sentence translation exceeds the probability of randomly picking one.

When only one (out of four) translations is multi-sentence, the best translations chosen by the majority of readers contain multiple sentences less often than in random selection from the avail-able translations. When two out of the four ref-erence translations are multi-sentence, the reader preference towards them beats chance by a good margin. The difference between chance selec-tion and reader preference for multiple sentences grows steadily with the number of reference trans-lations that split the content. These data suggest that when at least two translators perform a multi-sentence translation, breaking down information in the source sentence impacts the quality of the translation.
 Hence we define content-heavy sentences in Chinese to be those for which at least two out of four reference translations consist of multiple sen-tences. 4.2 A challenge for MT We now quantitatively show that heavy sentences are particularly problematic for machine transla-tion. We collect translations for each segment in OpenMT and MTC from the Bing Translator. We split the sentences into two groups, heavy and other, according to the gold standard label ex-plained in the previous section. We then com-pare the BLEU score for sentences in a respective group, where each group is in turn used as a test set. The difference in BLEU scores (  X  bleu) is a strong indicator whether these sentences are chal-lenging for MT systems.

In Table 3 we show the BLEU scores and  X  bleu for sentences that are heavy (Y) and non-heavy (N). Also included in the table is the percentage of heavy sentences in all the data.
 Translations for heavy sentences received a BLEU score that is 3.9 points lower than those that are not. This clearly illustrates the challenge and potential for improvement for MT systems posed by content-heavy sentences. Therefore the ability to reliably recognize them provides a first step to-
Figure 1: Coordinating IP structure at the root. Table 4: Count of heavy and non-heavy sentences with and without full-stop commas. wards developing a better translation approach for such sentences. In Chinese, commas can sometimes act as sen-tence boundaries, similar to the function of an En-glish period. In Xue and Yang (2011), the au-thors showed that these full-stop commas can be identified in the constituent parse tree as coordi-nating IPs at the root level, shown in Figure 1. Fancellu and Webber (2014) demonstrated that it is beneficial to split sentences containing negation on these types of commas, translate the resulting shorter sentences separately, then stitch the result-ing translations together. They report that this ap-proach prevented movement of negation particles beyond their scope. Here we study the degree to which the content-heavy status of a sentence is ex-plained by the presence of a full-stop comma in the sentence. We show that they are interrelated but not equivalent.
 Corpus analysis. First we study how often a heavy sentence contains a full-stop comma and vice versa, using the overlapping MTC/CTB doc-uments. We show in Table 4 the number of heavy and non-heavy sentences with and without full-in the sentence, there is a higher chance that the sentence is content-heavy. Yet of the 102 heavy sentences in this data, fewer than 40% contain full-stop commas; of the 242 sentences without full-stop commas, more than a quarter are heavy. Therefore, although comma usage in the Chinese sentence may provide clues for detecting content heaviness, the two phenomena are not equivalent and heavy sentences are not fully explained by the presence of full-stop commas.
 Learning with full-stop commas. Here we evaluate the usefulness of using full-stop commas as training data to predict whether a sentence is content-heavy. From the analysis presented above we know that the two tasks are not equivalent. Nevertheless we would like to test directly if the Chinese Treebank X  X he large (but noisy for the task at hand) data available for comma function disambiguation X  X ould lead to better results than learning on the cleaner but much smaller datasets for which multiple translations are available.
We use logistic regression as our classification sentences on the MTC/CTB overlapping test set is compared using the following methods: [Parallel] A classifier is trained using four English translations for each Chinese sentence (OpenMT and MTC training set). Following the definition in Section 4.1, content-heavy sentences are those translated into multiple English sen-tences by two or more translators. [Oracle comma] A test sentence is assigned to class  X  X eavy X  if there is a full-stop comma in its corresponding gold standard parse tree. [Predicted comma] We train a comma disam-biguation system on CTB to predict if a comma is a full-stop comma. In testing, a sentence is marked  X  X eavy X  if it contains a predicted full-stop comma. Features. We reimplemented the per-comma best performing system, features are extracted from gold-standard parse trees during training and from automatic parsing during testing. These in-clude: words and part-of-speech tags immediately before and after the comma; left-and right-sibling node labels of the parent of the comma; ordered ancestor node labels above the comma; punctua-tion tokens ordered from left to right of the sen-tence; whether the comma has a coordinating IP structure; whether the comma X  X  parent is a child of the root of the tree; whether there is a subordi-nation before the comma; whether the difference in number of words before and after the comma is greater than or equal to seven. Table 5: Performance for identify heavy sentences using multiple reference data (parallel) vs. full-stop comma oracle labels (oracle comma) and pre-dicted full-stop commas (predicted comma).

For parallel , feature values are accumulated from all the commas in the sentence. For binary features, we use an or operation on the feature val-ues for each individual comma.
 Results and comparison. In Table 5, we show the accuracy, precision and recall for identifying content-heavy sentences using the three methods described above. We do not include the majority baseline here because it assumes no sentences are content heavy.

Interestingly, the system using oracle informa-tion in each test sentence for full-stop commas per-forms the worst. The system trained to identify full-stop commas outperform the oracle system with about 10% better in recall and less than 1% lower in precision. This finding strongly suggests that the features used for learning capture certain characteristics of heavy sentences even with non-ideal training labels. The best performance is ob-tained learning directly on parallel corpora with multiple reference translations. Note that we try to provide the best possible setting for full-stop comma prediction, using much more training data, gold-standard parses, same-domain training and testing, as well as the reimplementation of state-of-the-art system. These settings allow us to con-servatively interpret the results listed here, which confirm that content-heaviness is different from using a full-stop comma in the Chinese sentence. It is more advantageous X  X eading to higher pre-cision and overall accuracy X  X o learn from data where translators encode their interpretation in the form of multi-sentence translations. In this section, we experiment with a wide range of features from the sentence string, part-of-speech tags and dependency parse trees.
 Baseline. Intuitively, sentence length can be an indication of too much content that needs to be repackaged into multiple sentences. Therefore as our baseline we train a decision tree using the Sentence structure cues. We collect potential signals for structural complexity: punctuation, conjunctions, prepositional phrases and relative clauses. As features we count the number of commas, conjunction, preposition and postposi-tion part-of-speech tags. In Chinese  X  X E X  of-ten marks prepositional phrases or relative clauses among other functions (Chang et al., 2009a). Here we include a simple count the number of  X  X EG X  tags in the sentence.
 Dependencies. Dependency grammar captures both syntactic and semantic relationship between words and are shown to improve reordering in MT (Chang et al., 2009b). To account for such rela-tional information we include two feature classes: the percentage of each dependency type and the typed dependency pairs themselves. For the latter we use the universal part-of-speech tags (Petrov et al., 2012) for each word rather than the word itself to avoid too detailed and sparse representations. For example, the relation dobj(  X   X  /handle,  X   X  /matter) becomes feature dobj(verb, noun) .
Furthermore, we use dependency trees to ex-tract four features for potentially complex con-structions. First, we indicate the presence of noun phrases with heavy modifiers on the left. These are frequently used in Chinese and would require a relative clause or an additional sentence in En-glish. Specifically we record the maximum num-ber of dependents for the nouns in the sentence. The second type of construction is the use of se-rial verb phrases, illustrated in Figure 2. We record the number of dependents of the head verb of the sentence. The third feature class is the typed de-pendencies (over universal POS tags) whose edge crosses a comma. Finally, we also record the max-imum number of dependents in the sentence to capture the general phrasal complexity in the sen-tence. Table 6: Accuracy, precision and recall (for the content heavy class) of binary classification using proposed features to identify content-heavy sen-tences.
 Parts-of-speech. POS information captures nu-merous aspects of the sentence such as the fre-quency of different classes of words used and the transition between them. Historically they are also shown to be helpful for phrase boundary detection (Taylor and Black, 1998). Here, we first convert all Chinese POS tags into their corresponding uni-versal tags. We then use the percentage of each tag and tag bigram as two feature classes. To capture the transition of each phrase and clause in the sen-tence, we construct functional POS trigrams for each sentence by removing all nouns, verbs, adjec-tives, adverbs, numbers and pronouns in the sen-tence. Percentages of these sequences are used as feature values.
 Comma disambiguation features. We also in-corporate most of the features proposed by Xue and Yang (2011), aggregated in the same way as the parallel method (cf. Section 5). These include: POS tags immediately before and af-ter the comma; left-and right-sibling node labels of the parent of the comma; the punctuation to-kens ordered from left to right in the sentence, whether the comma has a coordinating IP struc-ture; whether the comma X  X  parent is a child of the root of the tree; whether there is a subordination before the comma; whether the difference in num-ber of words before and after the comma is greater than or equal to seven. 7.1 Recognizing content-heavy sentences We train a logistic regression model as in the par-allel method in Section 5 using features illustrated above. In Table 6, we show the performance of detecting heavy sentences using four systems: the baseline system using the number of words in the sentence and three systems using our full feature set, trained on MTC, OpenMT and both.

The baseline performance is characterized by a remarkably poor recall. It becomes appar-Table 7: Number of segments, precision, recall and posterior probability (for the content-heavy class) for examples where at least 0-4 translators split the sentence. ent that length alone cannot characterize content-heaviness. On the other hand, using the full fea-ture set achieves an accuracy of above 80%, a pre-cision close to 80% and a recall about 58%. The improvement in precision and recall over using or-acle full-stop commas (Table 5) are about 12% and 19%. When compared with using features tuned for comma disambiguation from Xue and Yang (2011) (Table 5), our full feature set achieved a 5% increase in accuracy, about 10% increase in precision and 8% increase in recall.

We also demonstrate the usefulness of having more multi-reference translation data by compar-ing training using MTC and OpenMT individually and both. Remarkably, using only the very small dataset of OpenMT is sufficient to produce a pre-dictor that is more accurate than all of the meth-ods listed in Section 5. Adding these examples to MTC drastically improves precision by more than 13% with a less than 3% drop on recall.

Finally, we consider the portions of our test set for which at least n translators provided a multi-sentence translation ( n ranges from 0 to 4). In Table 7 we show the respective precision, re-call and the average posterior probability from the classifier for marking a sentence as content-heavy. There is a clear trend that the classifier is more confident and has higher precision for sentences where more translators produce multi-sentence translations. Although the model is not highly confident in all groups, the precision of the predictions are remarkably high. Miss rate also decreases when more translators translate the source into multiple sentences. 7.2 Post-hoc feature analysis Here we identify which of the feature classes from our full set are most helpful by performing for-ward feature selection: in each iteration, the fea-ture class that improves accuracy the most is se-lected. The process is repeated until none of the re-maining feature classes lead to improvement when added to the model evaluated at the previous itera-tion. We use our test data as the evaluation set for forward selection, but we do so only to evaluate features, not to modify our system.

Five feature classes are selected using this greedy procedure. The first selected class is the typed dependencies over universal POS tags. Re-markably, this single feature class achieves 76.6% accuracy, a number already reasonably high and better than features used in Xue and Yang (2011). The second feature added is whether there is a comma of coordinating IP structure in the auto-matic parse tree of the sentence. It gives a fur-ther 1.7% increase in accuracy, showing that the comma structure provide useful information as features for detecting heavy sentences. Note that this feature does not represent full stop commas, i.e., it does not record whether the comma is un-der the root level of the parse tree. The next se-lected class is typed dependencies over universal POS tags that have an edge across commas in the sentence, with an 1% increase in accuracy. The fourth feature selected is the number of preposi-tions and postposition POS tags in the sentence, improving the accuracy about 1%. Finally, part-of-speech tags before each comma are added, with a 0.3% improvement of accuracy.

The results from forward selection analysis re-veal that the dependency structure of a sentence captures the most helpful information for heavy sentence identification. The interplay between punctuation and phrase structure gives further im-portant enhancements to the model. The final ac-curacy, precision and recall after forward selec-tion are 0.804, 0.8209, 0.5392, respectively. This overall performance shows that forward selection yields a sub-optimal feature set, suggesting that the other features are also informative. It is important to know whether a predictor for content-heavy sentences is good at identifying challenging sentences for applications such as ma-chine translation. Here, we would like to revisit Section 4.2 and see if predicted heavy sentences are harder to translate.
 For all the source sentences in OpenMT and MTC, we compare five criteria for dividing the test data in two subsets: whether the sentence contains a full-stop comma or not; whether the sentence is longer than the baseline decision tree threshold Table 8: Data portion, BLEU scores and dif-ferences for sentences with/without a full-stop comma, are/are not longer than the length thresh-old, are/are not content heavy. (47 words) or not; whether the sentence is pre-dicted to be content-heavy with posterior proba-bility threshold of 0.5, 0.55 and 0.6. Predictions for the training portion is obtained using 10-fold cross-validation. In the same manner as Table 3, Table 8 shows the percentage of data that satis-fies each criterion, BLEU scores of Bing transla-tions for sentences that satisfy a criterion and those that do not, as well as the difference of BLEU be-tween the two subsets (  X  bleu). As reference we also include numbers listed in Table 3 using ora-cle content-heavy labels.

First, notice that regardless of the posterior probability threshold, the numbers of sentences predicted to be content-heavy are much larger than that using the length cutoff. These sentences are also collectively translated much worse than the sentences in the other subset. Sentences that con-tain a predicted full-stop comma are also harder to translate, but show smaller difference in BLEU than when sentence heaviness or length are used as separation criterion. As the posterior probability threshold goes up and the classifier becomes more confident when it identifies heavy sentences, there is a clear trend that system translations for these sentences become worse. These BLEU score com-parisons indicate that our proposed model identi-fies sentences that pose a challenge for MT sys-tems. In this work, we propose a cross-lingual task of detecting content-heavy sentences in Chinese, which are best translated into multiple sentences in English. We show that for such sentences, a multi-sentence translation is preferred by readers in terms of flow and understandability. Content-heavy sentences defined in this manner present practical challenges for MT systems. We further demonstrate that these sentences are not fully ex-plained by sentence length or syntactically defined full-stop commas in Chinese. We propose a clas-sification model using a rich set of features that effectively identify these sentences.

The findings in this paper point out a defi-nite issue in different languages currently under-investigated in text-to-text generation systems. One possible way to improve MT systems is to incorporate sentence simplification before trans-lation (Mishra et al., 2014). Future work could use our proposed model to detect heavy sentences that needs such pre-processing. Our findings can also inspire informative features for sentence qual-ity estimation, in which the task is to predict the sentence-level fluency (Beck et al., 2014). We have shown that heavy Chinese sentences are likely to lead to hard to read, disfluent sentences in English. Another important future direction lies in text simplification. In our inspection of par-allel Wikipedia/Simple Wikipedia data (Kauchak, 2013), around 23.6% of the aligned sentences in-volve a single sentence on one side and multiple sentences on another. A similar analysis using ideas from this work can be useful in identify-ing sentences that needs simplification in the first place.
 We would like to express our gratitude to Bonnie Webber for her detailed comments on earlier ver-sions of this paper. Her encouragement and sup-port were essential in seeing the work through to publication. We would also like the reviewers for their thoughtful suggestions which we have tried to incorporate in the final version. The work was partially supported by NSF CAREER grant IIS-0953445.

