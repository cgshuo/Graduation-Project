 Microblog services typically contain very short documents (e.g., tweets) containing comments about the latest news and events. Many of these documents are not informative or have very little content due to their personal and ephemeral nature. Providing effective retrieval in a microblog service will require addressing the challenge of distinguishing the high-quality, informative documents from the others. Recent work has focused on finding features that indicate the quality of microblog documents, but the impact these quality features on retrieval is not clear. In this paper, we suggest a low-cost quality model using surrogate judgments based on user behavior (i.e., retweets) that can be collected automatically. We analyze the relationship between document informativeness and re levance judgments for microblog retrieval. Then we demonstrate that our behavior-based quality metric has a high correlation w ith manual judgments. Also, we perform experiments to study the impact of the quality model on microblog retrieval. The results based on the TREC Microblog track show that the proposed qua lity model, combined with a variety of retrieval models, can improve retrieval performance and is competitive with a model trained using manual relevance judgments. H.3.3 [ Information Search and Retrieval ]: Information Search and Retrieval Algorithms, Experimentation Quality model, microblogs, quality-biased ranking A microblog is medium that is similar to a traditional blog in terms of being used to post pe rsonal opinions. However, it is different than a traditional blog in that the users of microblogs tend to post smaller content that is highly related to timely events (e.g., breaking news) and closely connected with offline and online social network relationships . In this paper, we focus on microblog ad-hoc retrieval, which aims to find relevant and recent content for current trend-relate d queries issued by anonymous users [20]. The realtime ad-hoc task of the TREC 2011 microblog track describes a similar scenario in which the goal is to find  X  X he most recent but relevant X  tweets at a specific time. To achieve this goal, participating systems need to detect topically relevant documents and arrange them according to the post time from the most recent to the oldest. In general, most microblog documents are posted by individuals who want to spread breaking news and to express their personal feelings. As a result, we can rarely be assured of the quality of microblog content. In addition, unlike other user-generated contents (e.g., Q&amp;A and Blog), microblog documents often have constraints. For example, Twitter X  X  140-character limit makes it difficult to distinguish informative content, since the length limitation causes many cases of word abbreviations and poor linguistic usag e. In this sense, to improve microblog retrieval, we need to take into account the quality of the document content. Quality models have been studied in a variety of settings, especially for Web search, sin ce they facilitate distinguishing informative or authoritative content from less useful content. For example, PageRank [3] and HITS [8] are popular models based on link analysis. On the other hand, recent papers show that deterministic quality-biased ra nking [2] using content-based features can improve the retrieval performance of Web search. It is notable that simple and easy-to-compute features can distinguish the quality of documents. However, there is a drawback with deterministic quality-biased ranking, in that it depends on supervised learning, which requires training examples to train the model. In our preliminary analysis, we found that retweet behavior (abbreviated to RT), which indicates a user quoting or forwarding other users X  content on Twitter, can be used as a surrogate judgment for informa tive content. For example, if a microblog document is quoted by other users, we can consider that it contains informative or in teresting content since users tend to broadcast something worthwhile for their neighbors. While it is unclear what makes people retweet, there are several probable reasons to retweet such as c ontent, network and temporal influence [16]. Among them, we focused on the content of the tweet, which has a large effect on retweeting. We found that retweets influenced by content generally indicate the existence of the informative content, but retweets influenced by a user X  X  network (e.g., most of a celebrity  X  X  tweets are retweeted) do not. The assessment results show that the informativeness and the relevance of the tweet are highly correlated and retweeted messages are more likely to be informative than those not retweeted. We train a quality model based on these surrogate judgments of informative content by using both previously used and novel quality features. We evaluate our RT-based quality model using the TREC 2011 Microblog track corpus. The evaluation results demonstrate that our quality model can improve retrieval performance compared to the baselines and is competitive with quality models trained using manual relevance judgments. Furthermore, we demonstrate that the RT-based quality model tends to demote uninformative content such as spam filtering, rather than promote informative content. Overall, our approach brings some advantages for finding informative content, which have applications beyond the retrieval task. A number of quality models have been previously studied, based on both link analysis and content features (e.g., the information-noise ratio). Bendersky et al [2] proposed quality-biased ranking (QBR) for web search, which directly introduces document quality as part of the ranking function. Features based on the content, readability, and spam level of a web page were used. To improve retrieval performance for microblogs, some recent papers have suggested using quality-biased features. For example, Alonso et al. [1] used crowdsour cing to detect "interesting X  content from randomly selected tweets and reported the presence of a hyperlink in a tweet was strongly correlated with interestingness. Duan et al. [5] incorporated account authority and tweet-specific features in a l earning-to-rank framework. Massoudi et al. [10] adapted quality indicators such as emoticons and capitalization, which came from blog post retrieval. Our work is related to this previous work in that we used quality-biased features to improve microblog retrieval, indeed we adapt many of the features from the previous papers. However, unlike previous work that has employed human labeling data to train a quality -biased ranking function, our quality model uses surrogate judgments based on user behavior (i.e., retweeting) that can be coll ected automatically. In fact, some researchers attempted to predic t popular messages [6] by focusing on how information spread through retweeting. As a result, topological features (e.g., number of followers) were useful. Here, we focus on capturing a signal of high-quality document that can be incorporated into the retrieval model. Meanwhile, Huang et al. [7] suggested a quality-biased ranking model, which incorporates a regularization factor to overcome the sparse quality judgment data. Our approach has a similar goal. Recently, Naveed et al. introduced the probability of being retweeted [14,15] as a quality measure, and showed that quality improve retrieval performance for shorter queries but deteriorates for longer queries. To the best of our knowledge, their work is th e closest to ours. To improve their work, we investigate the relationship between retweets and informativeness based on analysis of our user assessment data. Furthermore, we combine the quality score with state-of-the-art retrieval models. The result of experiments with the TREC Microblog track data shows that our approach improves the performance of a variety of retrieval models. In this section, we introduce our user assessment study. Our aim is to help understand the diffe rence between two evaluation metrics relevance and informativeness, and how these metrics are related to retweeting. To obtain assessment data, we sel ected 59 topics from a topic list (described in Section 4) and randomly sampled 100 tweets per each topic from the tweets containing the topic keywords. Then, we asked the assessors to evaluate a tweet in terms of relevance and informativeness. The voluntary assessors were twelve computer science major students and each assessor evaluated 5 topics, 100 tweets per each topic. An assessor first judged a tweet as to whether it was relevant or not to the given topic on a three-point scale: 0 (non-relevant), 1 (re levant) and 2 (highly-relevant). In addition, we asked them to judge whether the tweet was informative or not: using 1 (informative) or 0. To define informativeness, we asked the asse ssors to consider the question,  X  X oes it contain specific information that people might search? X  which is similar to the  X  X nteresti ngness X  used in [1]. This means that even a tweet marked as non-relevant could be marked as informative. We investigated the relationship between relevance and informativeness. The assessment results are displayed in Table 1. A large portion of documents (approximately 50%) turned out to be uninformative. This result corre sponds to previous research [1] on the informativeness of microblog documents. Comparing the conditional probability of relevance given informativeness, an informative document is more likely to be relevant than an uninformative one (c.f., P(R  X  1|I=1)=0.91, P(R  X  1|I=0)=0.36 ). We found that tweets containing pe rsonal feelings about specific topics were marked as releva nt but uninformative documents. Although it is not clear whether these personal tweets can be relevant or not, it is also true th at some people want to read other people X  X  thoughts through microblog documents. The results comparing relevance and retweeting demonstrates that retweeting has a small correlati on with the relevance score. ( P(R  X  1|RT=1)=0.72, P(R  X  1|RT=0)=0.61 ) . This means that if we directly use the information of being retweeted as one of the features [5,10], we can only get marginal benefit from it. 72% of relevant tweets were non-retweets, whereas 28% were retweeted. Note that there is only a small number of retweets (e.g., 7%) in real-world data whereas we a ssess more retweets (e.g., 28%) for the user study. Meanwhile, the assessment results comparing informativeness and retweeting shows that the RTs are more likely to be informative than the non-RTs ( P(I=1|RT=1)=0.62, P(I=1|RT=0)=0.45 ) . In summary, from the user assessment study, we found that the RT-set can be used as surrogate judgments for a quality measure (informativeness), and the estimated quality measure can be us ed to help identify relevant documents. Cohen X  X  kappa, the in ter-annotator agreement of the randomly selected two assessors who evaluated the same topics, was 0.66 for relevance and 0. 56 for informativeness. We extract topic keywords by using a simple outlier detection method directly from the corpus. Topic keywords consist of unigrams, bigrams and trigrams where longer keywords have priority. For example, we select  X  X eith Olbermann X  rather than  X  X lbermann X  for topic keywords if both are detected by our algorithm. In this manner, we extracted 931 topics for 18 days, approximately 50 topics per each day from the training corpus. The extracted topic keywords were used for collecting microblog documents to build a quality mode l. Meanwhile, previous work on retweets [6,14,15] defined the retweet set by matching RT signatures, (i.e., RT @username). However, there are many near-duplicates among the tweets. Since retweets represent positive samples in our quality model approach, creating a high-quality retweet set is crucial for the robustness of the quality model. To this end, we detect near-dup licates among the tweets using the Jaccard similarity measure based on bigram overlapping method. Once we find variations of same content according to the similarity measure, we retain the earliest tweet based on its post time and remove the others from training set. If one tweet in a group contains a RT signature, we consider the earliest tweet of the group as the retweeted tweet, ev en if the earliest tweet doesn X  X  contain a RT signature. In th is manner, we collected 44,734 (3.4%) retweets from the candidate set. The rest of the tweets (96.6%) were denoted as the non-retweet set. In general, the quality of document can be seen as a prior probability, denoted P(D) , and it is often assumed to be uniform in the language model (LM) [19]. Zhou and Croft suggested the document quality language model [22] for Web search which uses the conditional probability of the document is classified into high quality class, given the quality features. In this work, we introduce a binary random variable RT and rank the documents in descending likelihood of Q generating the retweeted document D . We use the chain rule and the fact that Q and RT are conditionally independent given D . As a result, we formulate the quality model using P(RT|D) , that is, the probability of a tweet being retweeted given document as Eq. (1 ). In this formula, P ( Q | D ) stands for text matching scores of a variet y of language models and P(D) is still assumed to be uniform. In [22], the conditional probability was estimated directly from the training data by using a kern el density estimation technique, since they used only two quality features. However, we incorporate more than 20 quality f eatures, and these features are generally correlated with each other. As a result, we use logistic regression to estimate P ( RT | D ). The advantage of using a logistic regression model is that the output is continuous value, which can be regarded as a probability. In th e closest work [14,15], a logistic regression model was also used to estimate the retweet probability. We use features from previous work and also introduce novel features: nonRTScore, tweetDocMat ch, and tweetUrlMatch. First, we adapt Web-specific content-based features that were the most important in previous work [2] for Web search. Those are numVisTerms (number of terms), avgTermLen (average length of terms), entropy (entropy of the content), fracStops (stopword/non-stopword ratio), and stopCover (frac tion of terms in stopword list). We also use microblog-specific content-based features that used separately in previous work [1,5,6,7,10,13,14,15]. Those are tfIdfScore (sum of tf-idf scores ), fracEnglish (fraction of English terms), fracLetter (fraction of alphabet letters), fracCap (fraction of capital letters), fracUnique (fraction of unique terms), maxTermLen (maximal length of terms), minTermLen (minimal length of terms), hasHashTag (pre sence of a hashtag), hasPerson (presence of person name), hasL ocation (presence of location), hasOrgan (presence of organization), hasExcl (presence of an exclamation mark), hasQues (p resence of a question mark), isReply (is the tweet a reply tweet), and isBeginTag (is the tweet beginning with a hashtag). In particular, we calculate KL-divergence from non-RT set to RT set to compute a novel feature: nonRTScore (sum of non-RT word scores). This score indicates that the tweet contains terms that are more likely to happen in the non-RT set, so we call it nonRTS core. We show some sample terms sorted by D KL (non-RT||RT) and D KL (RT||non-RT) in Table 2. The left side of the table indicates that there exist many personal postings with some internet slang (i.e., lol) in non-RT set, which were used heuristically to detect newsworthy tweets [4]. In contrast, the right side of the tabl e shows that RT set is biased to certain types of tweets (e.g., celebrities). For this reason, we only use D KL (non-RT||RT) for demoting personal tweets. We also download URLs that are contained in a tweet and use them to calculate URL-based features. We hypothesize that if the content of link contains some us eful information, they might share the same terms. Therefore, we use hasLink (presence of a hyperlink), tweetDocMatch (term overlap between a tweet (T) and tweetUrlMatch (term overlap between a tweet (T) and the resolved URL (U), that is, |T  X  U| / |T|). Lastly, we use numTweets (number of tweets an user posted) as a User-based feature. We use the Dirichlet smoothing LM (QL) [21] as a baseline. We found that the smoothing parameters tuned on the training corpus were relatively small (i.e.,  X  =500~1200) compared to other collections. We hypothesize that is because the microblog document lengths are short and their variances are also small [17]. We also choose the MRF model [11], which uses query term proximity in a document. There are two variants: the sequential dependence model (SDM) and the full dependence model (FDM). In previous work, Metzler and Ca i reported that the FDM yielded superior results to the SDM [13]. They hypothesized that was because the FDM promoted tweets that contained more query terms. We evaluate their assumption through the following experiments with uniw=0.8, odw =0.2, and uww=0.0 for model parameters. The last choice of retrieval model is the Relevance model (RM) [9]. By using expanded queries, the RM can potentially address issues related to synonymy and polysemy. Since microblog documents contain many cases of word variations caused by the different language use of microblog users, the RM may help. We use releva nce models using QL, SDM, and FDM for the initial retrieval, de noted by RM, SDRM and FDRM respectively. We used fbDo cs=10, fbTerms=10 for model parameters and weighted the orig inal and expansion query equally. In Section 4.2, we introduced Eq. (1) which incorporates P ( RT | D ) as a quality factor. We now define the score of a document as a linear combination of a text matching score and a quality score. That is, we take the logarithm and use the parameter  X  to combine two probabilities. Here, we need to estimate the  X  , which decides how much the quality score affects the retrieval result. In this work, we use a learning-to-rank a pproach for estimation. Even though we use surrogate judgments to train the quality model, it is very difficult to estimate the ranking parameter without any evidence for relevance. For this reason, we combine the quality model with retrieval models as in QBR. To address the relationship between the quality model and retrieval performance, we also conduct QBR experiments us ing the same features of the quality model. While our quality model uses surrogate judgments to find optimal weights for quality features, QBR employs human judgments. Indeed, QBR has outperformed other quality models [2,7] because it optimizes quality feature weights according to the resulting performance. As a result, we evaluate QBR performance and compare the model parameters to our quality model. By doing this, we focus on differences be tween surrogate judgments and human judgments. We used Coordi nate-Ascent [12] for learning-to-rank approaches. All experiments are done using 5-folds cross-validation. The TREC 2011 microblog track released 16M tweets and 50 topics and preferences for the ad-hoc search task. Unlike the other TREC tasks, the microblog track topic contains the timestamp when the query was issued by the user, which means that no documents newer than a given query's timestamp should be retrieved. Furthermore, by the guidelines of the microblog track, the final ranked results must be ordered chronologically. These constraints mean that we retrieve initial results based on the relevance score, and then rank th em by posting time. We index all tweets in the microblog copora using the Galago retrieval system, and stem with the Porter2 stemme r. We use the stopword list which was used in [2]. To tune the language model parameters (e.g.,  X  ), we used a training corpus with 59 t opics and user assessment results described in Section 3. The traini ng corpus consists of 17M tweets that had been crawled using Twitter API. This data had been crawled between January 8rd and February 8th, 2011. There are overlapping days between the training corpus and the TREC Microblog track data. However, we found that there were no common tweets between the two corpora. We guess that this is caused by the difference of sampling methods used for gathering the data. As a result, the quality model is trained on different data than the evaluation data, that is, the TR EC data. We use six variants of language models as our baselines . We denote the performance of our quality model as Base+Q , which indicates the quality score combined with the baseline model, and QBR for the quality-biased ranking. To evaluate the performance, we used two measures, MAP and precision at 30 (P@30). P@30 was used as the official measurement in the TREC Microblog ad-hoc task. We display the experimental results in Table 3. The results show that our quality model improves the baseline retrieval models in most cases. Significant differences were observed compared to the QL and FDM baselines. We found th at these trends were also observed in QBR and our RT-based model is competitive. In the case of the baselines based on relevance models, there are some improvements but they were not significant. Note that this is the case even with the QBR run. This is a very different result than was found with web documents, wher e pseudo-relevance feedback techniques are not competitive with the quality-biased model. We hypothesize that the retrieval models that use query expansion overcome the low-quality document problem to some degree by matching large number of query term s. That is, the more terms are matched in a document, the more informative the document will be. This effect would be more obvious for microblog documents, which use only small number of words. RM techniques are, however, more expensive in terms of computati on than the quality-based models. To understand the utility of features, we divided them into four groups, and then repeated the experiment removing one group of features each time. We display the results for the quality model and the QBR in Figure 1. Figure 1: The performance results of feature elimination We note that there is little differen ce with regard to the features for RM-based models compared to QL, SDM and FDM. The result of the QBR experiment shows that URL features are the most important. In particular, we found that the overlap ratio between the tweet and the crawled page content (i.e., tweetDocMatch ) is also of use as much as the existence of hyperlinks. Also, the result shows that microblog-specific content-based features play an important role for improving performance. However, the web-specific content-based features which were useful for Web search have little impact for microblog retrieval. In contrast to the result of the QBR performance, the result of our quality model is more affected by content-based features, both of Web-specific and microblog-specific, but is less affected by URL features. In Figure 2, we display the feature weight of the QBR and our RT-based quality model in the FDM baseline experiment. Each weight was normalized by the weight of retrieval model score (i.e., output of FDM), so we can compare their relative importance. Interestingly, most of negative weights are highly related, but positive weights of the QBR model are not. This means that our RT-based quality model can demote uninformative documents by using negative features (e.g., nonRTScore , entropy, isReply, etc.), but, does less well at promoting more informative documents. Indeed, the positive features (e.g., fracEnglis h, hasLink, fracUnique, etc.) of QBR are highly related to well-formed documents. As a result, we claim that our quality model based on surrogate judgments can be used for filtering out uninformative (or non-relevant) documents for microblog retrieval. In this work, we examined document quality, which plays an important role in microblog retrieval. We suggested a quality model using surrogate judgments based on human behavior (i.e., retweets) that can be collected automatically to train the model. Specifically, we described how to train the quality model, which consists of topic extraction, retweet set creation and the quality model parameters estimation. We conducted a us er assessment study which demonstrated that retweets can be used to find informative tweets. We evaluated the RT-based quality model on the TREC Microblog track data and showed that it generally improved baseline retrieval models. The results obtained with the RT-based model are competitive with the QBR model, which requires manual judgments for training. The improvements for all quality models were lower compared to baselines that use pseudo-relevance feedback because matching expanded query terms appears to promote quality, which has not been observed in experiments with web pages. Quality-based models have the advantage in terms of being faster to compute. By comparing the mode l parameters with QBR, which uses human judgments for traini ng, we found that our RT-based quality model demoted low-quality documents effectively. We also used a variety of quality features from the previous work for Web and microblog search, and analyzed which features were useful for the retrieval task. This work was supported in part by NHN Corp. and in part by the Center for Intelligent Information Retrieval. Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors X  and do not necessarily reflect those of the sponsor. [1] O. Alonso, C. Carson, D. Gerste r, X. Ji, and S. U. Nabar. [2] M. Bendersky, W. B. Croft, and Y. Diao. Quality-biased [3] S. Brin and L. Page. The anatomy of a large-scale [4] C. Castillo, M. Mendoza, and B. Poblete. Information [5] Y. Duan, L. Jiang, T. Qin, M. Zhou, H. Shum. An empirical [6] L. Hong, O. Dan, and B. D. Davison. Predicting popular [7] M. Huang, Y. Yang, and X. Zhu. Quality-biased ranking of [8] J. M. Kleinberg. Authoritative sources in a hyperlinked [9] V. Lavrenko, W. B. Croft. Relevance-based language [10] K. Massoudi, E. Tsagkias, M. de Rijke, and W. Weerkamp. [11] D. Metzler, W. B. Croft. A Markov random field model for [12] D. Metzler and W. B. Croft. Li near feature-based models for [13] D. Metzler and C. Cai, US C/ISI at TREC 2011:Microblog [14] N. Naveed, T. Gottron, J. Kune gis, and A. Che Alhadi. Bad [15] N. Naveed, T. Gottron, J. K unegis, and A. Che Alhadi. [16] H.-K. Peng, J. Zhu, D. Piao, R. Yan and J. Y. Zhang. [17] J. Seo and W. B. Croft. Unsupe rvised estimation of dirichlet [18] M. D. Smucker, J. Allan, and B. Carterette, A Comparison of [19] J. M. Ponte and W. B. Croft. A language modeling approach [20] J. Teevan, D. Ram age, and M. Morris. #Twittersearch: A [21] C. Zhai and J. Lafferty. A study of smoothing methods for [22] Y. Zhou and W. B. Croft. Document quality models for web 
