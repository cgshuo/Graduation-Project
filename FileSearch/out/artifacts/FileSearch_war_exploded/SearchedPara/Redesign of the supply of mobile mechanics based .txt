 fi ciency than the previous methods. The proposed optimization algorithm 1. Introduction
Theaimoflogisticsistogettherightmaterialstotherightplace at the right time, while optimizing a given performance measure (e.g. minimizing total operating cost) and satisfying a given set of constraints (e.g. time and capacity constraints) ( Christopher, 2005 ).
Supply chain management includes the planning and management of all activities involved in sourcing, procurement, conversion, and logistics management as well as crucial components of coordination and collaboration. It deals with several problems like Distribution Network Con fi guration, Trade-Offs in Logistical Activities, Inventory
Management or Distribution Strategy ( Bowersox et al., 2002 ). In most distribution systems, goods are transported from various origins to various destinations. For example, many retail chains manage dis-tribution systems in which goods are transported from a number of suppliers to a number of retail stores. The challenge is to optimal, usually the cheapest, tra nsportation plan according to some objective functions and conside ring additional constraints ( Beamon, 1998 ). This is a complex combinatorial optimization problem, com-monly an NP-hard task. In logistics, several types of problems could come up; one of the most remarkable is the set of route planning problems.

The major motivation of this work is derived from a real industrial problem, which came up at E.ON Hung X ria Zrt., the leading energy provider of Hungary. E.ON Network Services Kft. provides services primarily to the electricity and gas supply companies of the E.ON Hung X ria Group. This service includes the full range of operations management activities, like ensuring uninterrupted energy supply, regular maintenance of network objects, and the elimination of disruptions associated with mal-functions. In addition, the company installs consumption meters, while it also renovates consumption sites, and eliminates mal-functions reported by clients.

The motivating optimization problem, which emerged at our industrial partner is presented in Fig. 1 . The company has a star topology, which means that a truck transports the required materials from the Central Depot to the Warehouses, while mechanics at the Bases transport the materials from the Warehouse to the Bases. This topology produces high operational costs, thus the company wanted to replace this supply system with one truck, which can serve the Warehouse and all the Bases with necessary materials. For detailed description of problems with the current solution, see Section 5.2 . This problem can be modeled as a multiple Traveling Salesmen Problem (mTSP) with time windows and additional constraints.
In the mTSP, a set of n nodes (locations or cities) are given and m salesmen are located at a single depot node. The remaining nodes or cities that have to be visited are the intermediate nodes . The goal is to fi nd tours for all the salesmen, who all start and end their route at the central depot, such that each intermediate city is visited exactly once, and the total traveling cost is minimized. The mTSP is a generalization of the Traveling Salesmen Problem (TSP), where m Z 1 salesmen are concerned. The cost metric can be de fi ned in terms of distance, time, etc. The possible variations of the problem can be found in Bektas (2006) and Gutin and Punnen (2002) . In our case, additional constraints are given, e.g. for maximal tour length per salesman, and time windows which represents the trucks' loading times.

In the next sections, fi rstly, we will give the formal de the problem together with the current problem's cost function. In
Section 3 , the most important literature will be reviewed, followed by the novel genetic operators for multi-chromosome representation in Section 4 , where also the GA-based solution is discussed. There-after, detailed statistical analysis will be presented in Section 4.2 .
Section 5.1 discusses the concept of the automated Google Maps-based framework, while in Section 5.2 , we will give a comprehensive view about the main motivation of the article, the optimization problem and application for one of the biggest Hungarian companies.
The last section contains our concluding remarks and future plans. 2. Problem formulation
In our case, traf fi c conditions have to be considered and loading times are also presented at each location. We have additional constraints, like maximum traveling time/distance of each salesman ; time window at each location ,andthecompanyhastoinvestineach new truck. Therefore, the problem can be de fi ned as an asymmetric multiple Traveling Salesman Pro blem with Time Windows (mTSPTW) and additional special constraints, where the number of salesmen is an upper bounded variable.

Usually, the mTSP is speci fi ed as an integer programming formulation. Before presenting the model of the modi fi ed mTSP mentioned above, some technical de fi nitions will be given. The mTSP is de fi ned on a graph G  X  X  V ; A  X  , where V is the set of n nodes (vertices) and A is the set of arcs (edges). Let C  X  X  c ij (distance or duration) matrix associated with A . The matrix C is symmetric when c ij  X  c ji ; 8 X  i ; j  X  A A and asymmetric otherwise.
The problem which is analyzed in this article is more complex than the traditional mTSP problem. It is a so-called mTSPTW ( Bektas, 2006 ) with additional constraints, which can be formu-lated as follows. Let us de fi ne the following binary variable: x
Let's de fi ne M as the maximum number of salesmen which can be included in the solution, i.e. M is the upper bound of m , the actual number of salesman used. Let S be the maximum length of any tour in the solution. Furthermore, let us de fi ne the cost (distance or duration) matrix associated with A as C t  X  X  c t ij  X  ,where c t , and c ij is the ordinary cost (e.g. the driver's wage, which is proportional to distance, since they are paid by the hour) of the arc ij ,and c j tw is the cost of the time window. Time window means, that every salesman has to wait in each location, which can be e.g. the duration of loading the goods. Obviously, C t cannot be a symmetric matrix, since in a real life application c ij a because of there can exist e.g. one-way roads. Thus, the optimiza-tion problem can be given as follows: minimize  X  n s : t : assignment-based objective function is altered into Eq. (1) , where the cost of the involvement of a salesman appears too ( c are the usual assignment constraints, using the binary variable x and (7) ensures that the tour length of each salesman is under the speci fi ed bound, S.
 include several factors, thus the cost function in (1) becomes more complicated. So we can express the cost of a transport in the the wage of the driver, the consumption of the truck, or the toll on a highway. All components of the objective function must be transformed to real costs. This is done by weights, representing, e.g., the fuel cost or driver's wage per km. This approach can be associated with a multi-objective model, as it can be seen in several works in the literature, like in Samanlioglu and Kurz (2008) and in Jozefowiez et al. (2008) . However, the aggregation of these cost factors is self-evident enough, because every part of the denoted cost function can be expressed in currency, e.g. in USD or in HUF. Thus, the main task remains a single-objective optimi-zation problem, which can be solved by the help of a novel approach, which will be proposed in the next sections. maximal tour length, the above formalism could change slightly.
Let
Thus, Eq. (1) is changed in the following way: minimize  X  m
In (10) , the penalty is proportional to the tour length of a salesman above the upper bound S , while the degree of the punishment is determined by the constant  X  , which value much depends on the range of c ij . Note that another sort of penalty could be a cutoff of the route of a salesman who reaches the upper bound. 3. Literature review
In the last decades the TSP received a large amount of interest, and various approaches have been proposed to solve the problem ( Kara and Bektas, 2003, 2006 ). Some of these methods are exact algorithms, while others are near-optimal or approximate algo-rithms. The exact algorithms usually use integer linear program-ming approaches with additional constraints. Recently, an open source software framework for benchmarking and testing the TSP has been made available, which provides a convenient way to implement TSP solvers in Java ( Weise et al., 2014 ).

The research of the mTSP is much narrower. Bektas (2006) gives a comprehensive review of the known methods. Recent research can be found in Nallusamy et al. (2009) where the authors used the combination of different approaches to solve the mTSP problem.
Using K-Means Clustering the problem is reduced into m TSPs, where m is the number of salesmen. Initial TSP solutions are formed by the Shrink Wrap Algorithm and fi nally they apply Tabu Search and Simulated Annealing to solve the mTSP. The number of sales-men is fi xed, and only synthetic data was used to test the algorithm with 60 cities and 8 salesmen. Comparison with other methods is not part of the article, and basically multiple TSPs are optimized and the solutions are combined to form the fi nal solution. Ant colony optimization for the mTSP is used very recently like in Ghafurian and Javadian (2011) , where the authors provide a solution for the multi-depot mTSP. After the review of AC solutions for the mMTSP, they present the fi xed destination mMTSP considering traveling limits for each salesman. They use tabu lists to maintain visited destinations and apply constraints to ensure valid solutions. Their tests are based on synthetic data only, and the number of depots and trucks are fi xed. In Shi and Weise (2013) a quite similar problem is presented to the one we discussed in the previous section, however, the authors use different terminology and the objective function is slightly different. In that article, an initialized
ACO algorithm is presented to solve the Vehicle Routing Problem with Time Windows (VRPTW). The algorithm optimizes the pro-blem in a novel way, where the number of vehicles needed is minimized as the primary goal, as well as the overall travelling distance as second-priority goal. The goals are optimized simulta-neously, but not in a Pareto fashion. A good review about Ant
Colony Optimization for scheduling problems is presented in Neto and Filho (2013) .

Recently, genetic algorithms are successfully implemented to solve the TSP and its variants. GAs are direct, random search algori-thms, based on the evolutionary model ( Goldberg, 1989 ), related with Darwin's evolutionary theory. Potvin presents a survey of GA approaches for the general TSP ( Potvin, 1996 ). To solve the mTSP, due to its combinatorial complexity, it is necessary to apply some heuristic in the solution, especially in real-sized applications.
In the literature there are several examples that a good problem-speci fi c representation can dramatically improve the ef fi ciency of genetic algorithms. A problem-speci fi c individual design can reduce the search-space, and using special operators to handle this representation, the problem can be modeled more effectively. These properties make the problem-speci fi c genetic algorithm more suitable for the given task, and it becomes more easily interpretable. Most of the work on solving mTSPs using GAs have focused on the
Vehicle Scheduling Problem (VSP). VSP typically includes additional constraints, like the capacity of a vehicle (it also determines the number of cities each vehicle can visit), or time windows for the duration of loadings. In Malmborg (1996) the minimization of unit periods of waiting (UPW) is presented. The author demonstrates the scheduling of a single truck for delivery of mails between destinations during a fi xed operation period. The vehicle has unlimited capacity and each destination can be reached from any location. It is a two-phase solution, where random routes are generated. Firstly it handles the sub-problems as TSPs and in the second phase these relatively good solutions are combined by the GA. A hybrid GA is submitted in Park (2001) , where each step of the GA generates feasible solution, which is guaranteed by a repair process. Park applied a 4-step mechanism, where the population is divided into sub-populations, and the best individuals are selected in each step of the GA to form the new sub-populations. The function is the combination of the three objective functions: the normalized total travel time, the normalized total weighted tardi-ness, and the normalized fl eet size. Another recent application can be found in Tang et al. (2000) , where GAs are developed for hot rolling scheduling. There are no constraints on the route lengths of the salesmen, and it introduces a lot of dummy nodes and some additional binary variables, thus they can convert the mTSP into a single TSP and apply a modi fi ed GA to solve the problem.
In the next section, we propose a genetic algorithm based on a novel multi-chromosome representation for mTSP, which is similar to the representation used for vehicle scheduling in Tavares et al. (2003) . However, the crossover operators suggested by Tavares et al. may produce infeasible children, thus, additional improvement steps have to be performed. In contrast, our operators always generate feasible solutions, i.e. further corre ction is not necessary. Therefore, in the following we will present a short description of the used representation, and the description of novel crossover operators will receive the prime focus.

The main motivation to use multi-chromosome genetic repre-sentations originates from the recognition that although salesmen in the mTSP are separated from each other  X  physically  X  , almost every previous solutions of the mTSP with GA has used a single chromosome to represent a whole solution. These approaches are the one chromosome technique ( Zhang et al., 1999 ), the two chromosome technique ( Malmborg, 1996; Park, 2001 ) and the most effective single-chromosome one so far, the so-called two-part chromosome technique ( Carter and Ragsdale, 2006 ), which reduces the size of the search space by the elimination of redundant solutions. A recent novel grouping GA uses a representation very close to multi-chromosome approach ( Singh and Baghel, 2009 ) and the proposed algorithm minimizes redundancy during repro-duction. The GA presented by Singh and Baghel applies either the crossover or the mutation operator on the individuals in each step. The crossover operator is highly complex, where new individuals are generated using the best possible route from the parents, iteratively. They use two different fi tness functions, one is for minimizing the total distance traveled by all the salespersons and the other is for minimizing the maximum distance traveled by any salesman. Further constraints or costs are not presented. Since Singh and Baghel propose the best computational results so far, we will discuss a comparison with our novel method in the next section.

As it can be seen from our review, most of the previous solutions for the mTSP reduce the problem into several TSPs, and apply some method to solve their combination. On the other hand, we reviewed several approaches which are capable to solve the mTSP without this separation, however, either the number of salesmen is fi xed or no additional constraints are presented, like maximum per-salesmen cost or both. Therefore, we introduce a novel method, which meets all of our requirements, capable to solve the mTSP considering the necessary additional constraints without the transformation to several TSPs.
 4. Algorithm development
As we mentioned earlier, our work is derived from an industrial problem, where an effective, easy -to-use and fast application is needed to offer a feasible and near-optimal solution for the redesign of supply of mobile mechanics. The main motivation of our research was the lack of an algorithm which is  X  intelligent  X  enough to handle constraints on tour length, asymmetric distances, or where the number of salesmen is not prede fi ned, and can vary during the evolution of individual solutions. To satisfy these conditions, a re mathematical representation is needed, which re fl ects the compound character of the cost function. Our main expectations were to research a genetic method, which can support not only the implementation, but the initialization and heuristic fi ne-tuning of the individual routes easily. For this purpose, we have developed a novel genetic algorithm using a different representation to solve the mTSP. Based on this representation, a set of new genetic operators have been de modify the individuals accurately enough. To improve the conver-gence of the algorithm, we have developed complex operators, which combine simple ones. To prove the necessity and accuracy of the novel representation, a comprehensive analysis will be presented, compar-ing our method with the best published approaches, and supplemen-tary resources are published on our website, detailing further tests.
Furthermore, a novel automated tool will be discussed, which provides a complete solution for the redesign of the supply of mobile mechanics at Hungary's leading energy provider. The implemented tool is capable of optimizing a logistic problem necessitating only a map de fi ned on the Google Maps web interface. We used the automated tool to support our detailed tests also.

In the rest of this section we will present how the multi-chro-mosome representation can be further developed by novel complex operators. Therefore, a short overview of the used genetic represen-tation will be followed by the description of the operators and the ef fi ciency of our algorithm will be illustrated by simulation results. 4.1. A novel way to solve MTSP with GA
In Fig. 2 , we represent how a multi-chromosomal genetic algo-rithm can be used in the solution of an mTSP with twenty cities ( n  X  20) and with fi ve salesmen ( m  X  5). Further discussion can be found in Tavares et al. (2003) .

As we saw earlier, many examples can be found in the literature for genetic operators. Most of these operators can be derived from other operators, for example, a multi-chromosomal mutation can be constructed from a sequence of single-chromosomal mutations.
The operators described below also can be created from other simple operators, but the new representation necessitates the introduction of new genetic operators also. There are two sets of mutation operators, the so-called In-route mutations and the Cross-route mutations . We have implemented several operators for the novel representation, but only an overview of them will be given here.
 the gene sequence inversion or the fl ip , which just swaps 2 genes inside a chromosome. Good references for these  X  classical sentations and operators can be found in Larranaga et al. (1999) . somes at once. Note that using classical nomenclature and con-sidering chromosomes as individuals, this operator could be very similar to the regular crossover operator. Fig. 3 illustrates the operator when randomly chosen sequences of genes from two chromosomes are transposed, i.e. the  X  Swap  X  . If one of the gene sequences is empty, the operator will be realized as the insertion of the nonempty sequence to a randomly chosen place in the other chromosome. The crossover operator is also a cross-route muta-tion, which does a one-point crossover between two salespersons.
We have also applied a so-called  X  Local Optimization  X  operator, which is a simple TSP solver using genetic algorithm. This operator operates on each salesman and optimizes their routes separately. Its bene fi ts will be discussed in the next section.
 complex operators, which can speed up the evolutionary process, thus improve the ef fi ciency of the GA. Fig. 4 illustrates the method when two cross-route operators are applied one after the other, composing a complex mutation. Firstly, a slide operator is applied, which moves the last gene from each chromosome to the begin-ning of another one; thereafter a Swap is applied producing the new offset.
 of the operators can be constructed. Fig. 5 shows a tree, which represents our operators used for testing the novel representation and algorithm. Using these and other simple operators, additional more complex ones can be generated. 4.2. Numerical analysis of the proposed representation
As we previously presented in Kir X ly and Abonyi (2011) , using the multi-chromosome technique for the mTSP reduces the size of the solution space, which is n ! n 1 m 1 . It is equal with the solution space in Carter and Ragsdale (2006) , but this approach is more suitable to model an mTSP, so it is more problem-speci fi therefore more effective, as it will be proven later in the paper.
To analyze the new representation, a GA using this multi-chromosomal technique was developed in MATLAB, and the new method was compared with the best known one-chromosomal approach (the two-part chromosome technique). To make a fair comparison, we have developed two different algorithm, both of them are based on the implementation available on MATLAB
Central. 1 The complete actual code of the algorithms is available on our website.

Thealgorithmsusetwomatricesasinputs,thesetofcoordinatesof the locations (for visualization) and the distance matrix which contains the traveling distances be tween any two cities (in kilometers or in minutes). Of course, genetic parameters have to be speci like population size, number of iterations, or the constraints for the novel algorithm. First, the initial population is generated which consist ofindividualswithrandomlypermutedgenes.Inbothalgorithms,the fi tness function simply computes the sum of overall route length (or duration) of each salesman inside an individual. For comparison, per-salesmen costs, salaries, asymmetries or penalties are not incorporated in these tests, only the minimum number of cities per route is 3. These additional parameters will be considered in our new GA, which will be discussed in Section 5 .Theselectionis tournament selection , where in our case the tournament size (i.e. the number of individuals who compete for survival) is 8. The individual with the smallest fi tness value wins the tournament, thus it will be selected for generating new individuals, and this member will be transferred into the new population without any modi fi cation.

To analyze the effectiveness of the new representation, it was tested using several examples, only one containing 1 depot and 100 additional locations is presented here in details.
The results are presented in Fig. 6 . The new representation was compared with the so-called two-part chromosome approach ( Carter and Ragsdale, 2006 ), which is the best technique to optimize the mTSP using a single chromosome so far. It is evident, that two different genetic algorithms cannot be compared totally fairly, because the performance of these stochastic methods greatly depends on their parameters, thus it is impossible to fi nd a parameter set which results optimal performance for both algo-rithms. However, we aspired to make the representations fairly comparable, therefore two different algorithms were developed, but both of them are based on the same implementation available on the web. The two methods are almost the same, only the genetic representation and the applied operators are different.
In each case, the population size was 80 and the iteration number was 20,000. Fig. 6 shows an average result of 100 runs of the algorithms. During a single run, the initial population of the two variety of the algorithm was the same. The fi gure shows unambiguously that the new approach produces better results in these cases. The founded minimum is better in the multi-chromosome case, and this technique can converge to the optima faster. In the example above, multi-chromosome approach needed only 7411 iterations to fi nd the value 996, while two-part chromo-some technique required 18,861 iterations. Execution times of the algorithms were almost equal, which is due to the equal complex-ity of the representations. Thus, the representations can be comparable only in case of best objective function value per iteration. These test results con fi rm the ef fi ciency of the proposed representation for solving mTSP problems using genetic algo-rithms. We tested the novel method with several randomly generated synthetic examples, varying the number of input loca-tions, the population size and the number of iterations. Some of them are presented in Table 1 . The results in the table present a fair comparison, while the algorithms were very similar, both were run in the same environment. A nearly complete list of the test cases, and the algorithms are available on our website. 2
Table 1 summarizes the results of our tests using synthetic data sets. All the result presented during the paper were generated on a PC with a Core i5, 2.66 GHz processor with 3 GB of RAM. Table 1 shows clearly that the novel approach can fi nd solutions with smaller overall distance, and it can fi nd this solution during fewer iterations. The time needed to fi ndtheoptimawerealmostidentical,thusthe novel approach can be considered more effective in these test cases.
Table 2 represents the results of our tests using initialization on the initial population, and using complex mutation operators (see Section 4.1 and Figs. 4 and 5 ). The initialization was done by a local optimization process, namely a TSP solver on each salesman in every individual of the population. After initialization, the simple operators were used (see the 2nd column). Complex opera-tors using Local opt. or L.O. in Fig. 5 apply the same method.
Column 3 indicates the case when the optimization was done without the initialization step, using the complex operators (see the 3rd level of the operators' hierarchy in Fig. 5 ). Our tests highlight that the usage of initial local optimization can improve the process' accuracy and speed, while the application of complex operators results in much stronger convergence, but it makes the approach slower, and the accuracy is slightly worse too. These result implies the necessity of initialization by local optimization (e.g. using TSP solver) but indicates that we should be careful with the usage of too complex operators. However, because these operators can produce much higher variability in the population than simple ones, they can produce better results in highly complex search spaces. Of course, the selection of proper operators may differ from problem to problem.
 further tests were performed using well-known test problems from TSPLIB ( Reinelt, 1991 ) and the test data of Carter and
Ragsdale ( Carter and Ragsdale, 2006 ) which were used in Brown et al. (2007) and Singh and Baghel (2009) . Since the programming languages and the running environments differ greatly, we dis-regard the presentation of running times in the following tables. increasing size, using 5 salesmen. Our results are compared to the
Ant Colony Optimization algorithm which was proved to perfo-rm better than GAs in Junjie and Dingwei (2006) .Resultsshow unambiguously that our novel metho d performs better especially in huge problems.
 genetic algorithm for mTSP, namely GGA-SS. This method was analyzed using the data of Carter and Ragsdale (2006) compared with their algorithm, GGA2PC (using two-part chromosome repre-sentation). Our performance tests are presented in Table 4 using the same data as Singh and Bagel and our implementations in
MATLAB. Although GGA-SS performs better in cases using bigger number of salesmen, our approach can fi nd better solutions in most instances.
 our industrial problem (see next section), where per-salesmen costs, salaries for drivers, per-km costs, real driving distances, time windows and penalties are presented. We used Google's route planning service for calculating driving distances and the real expenses have been provided by our industrial partner: per-km cost: 150 HUF/km 0.7 USD/km; time window: 7 min.

The fi tness functions were modi fi ed to handle the different expenses. After optimization, the results are concluded in Table 5 .
The problem contains 30 cities in the Transdanubium, which are equal to the real base locations of our industrial partner (see
Section 5.2 ). The maximum number of salesmen is 6 and the minimum tour length is 3. Using real costs, the multi-chromosome method serves cheaper solution, which is mostly based on its capability to minimize the number of salesmen as well. 5. Application study
We are presenting a complete methodology in this section, which demonstrates a novel component-based framework using web technologies and MATLAB. An application study will also be presented which will guide the reader trough an industrial project from the de fi nition of the problem to the visualization of results.
The web-based framework presented in this section relies heavily on the Google Maps API, which is unique in the literature so far. 5.1. Framework development
Based on the novel genetic representation, we have developed a novel algorithm, which differs from the algorithms mentioned in the previous section, since it is able to handle the additional constraints and time windows, which were discussed in Section 2 .
The algorithm can minimize the number of salesmen included in the solution also, considering their initial cost. The paper passes over the presentation of source codes, which are accessible on our website. Note that the penalization of routes exceeding constraints is realized as a split, using the chromosome partition operator instead of the assignment of proportionally high fi tness value.
Since the algorithm minimizes the number of salesmen involved, this penalty has a remarkable effect on the optimization process.
Furthermore, the algorithm can handle the constraints for the routes and the time windows for the locations too, and we adjudge that the applied representation is more similar for the character-istic of the problem, than the ones until now, thus it can be more easily understandable and realizable.

The problem itself, which has motivated this research can be addressed as an mTSP problem, which should be solved by an automated system. A schematic fl owchart of such a system is represented in Fig. 7 . The baseline should be a map (e.g. de Google Maps) and the distances between the locations can be calculated by a web-based service like Google Maps. Since in the real application the amount of goods delivered is much less than the capacity of vehicles, the volume or mass constraints can be ignored (which de fi nes the problem as an mTSP instead of a VRP). The output of the system has to be a route plan which can be de fi ned on a web-based map or on a GPS device. The calculation of cost, time and material fl ows are also necessary. We decided to use the free and publicly available Google Maps API, because it provides a fast and reliable web-service for de fi ning user-friendly maps, computing traveling distances and time, and visualizing routes. Furthermore, it is the most popular mapping service nowadays.

Based on Google's services, we have developed a complete and automated framework to provide an automated system like the one presented in Fig. 7 . By the help of this program, users are able of optimize an mTSP problem de fi ned on a Google Maps map in a few minutes, and the result of the computation is visualized in a really easily interpretable way. A concrete example will clarify these statements in the next section.

The presented method provides a very handy tool for solving transportation problems, as well as a useful decision support system. The retrieval of coordinates from a Google Maps, the distance table calculation, the optimization and the visualization are all automated processes, which make users capable of opti-mizing a complex problem in an interactive, free, and easy way via web applications. 5.2. Solution of an industrial problem
The system to be optimized contains more than 500 mobile mechanics, whose supply is managed in a so-called star topology (see Fig. 1 ). In this system, mechanics themselves have to collect the tools/resources from warehouses. It is a very inef fi solution, since the wages of mobile mechanics are relatively high, and during tool and device collection, they are unable to do their main task: fi xing and installation. It causes not only fi but also reduces the service level. Therefore, this topology should be replaced by a route system, where products are transported by trucks, considering additional constraints like time-windows. The activities of the mobile mechanics are controlled by a Field
Service Management System (FSMS) with the target of dynamically optimizing the planned/unplanned maintenance tasks in the power/ gas network. Since the travel for material of mobile mechanics is a non-productive task within the FSM S, the supply from 20 warehouses (regional, central) represents a complex and economically important problem for the E.ON Network Services Kft. The new dynamic approach presented in this paper aims a signi fi cant reduction of activities, regarding material handling for the mobile teams with extending of serving locations from 20 to 100. The design of the supply system can be considered as a complex combinatorial optimi-zation problem, where the goal is to fi nd a route plan with minimal route cost, which services all the demands from three central ware-houses while satisfying other constraints like time windows.
We have developed a complete software package to solve this type of optimization problems. The input data is given by a Google Maps map, which contains the locations (including the depot) and the output is a route system de fi ned by a Google Maps map also. A complete, automated solution is freely available at our website web-based service. However, it should be mentioned that for the sake of reducing the load on our server, this application provides only a demo, where the number of input locations is limited to 10. After a planned future IT development at our department, these restrictions will be removed. Therefore, the real project was optimized by an off-line genetic algorithm. In the following section, we will demonstrate the optimization of the industrial problem, however, only representa-tive locations are shown.
 First of all, the user has to de fi ne a map with Google's service.
In this example, it contains 30 locations. Google's route planner necessitates, therefore, we use a simple text-mining method to retrieve them from this map. The result of this step is an Excel spreadsheet, which serves as the input for the next stage, which is the determination of the distance matrix. It is computed by iterative calls of Google Maps API, which provides real traveling distances between each pair of locations, which are de fi longitude and latitude coordinates, using traf fi c data. A portion of the generated distance table, which contains 30 locations (includ-ing the depot), is shown in Table 6 . The task is to determine the optimal routes for these locations with the following constraints: maximum number of salesmen is 5; maximum traveling distance of each salesman is 450 km; maximum traveling duration of each salesman is 8h.
 the solution with the new representation. In this case, our GA takes into consideration the per-salesmen costs and asymmetries, and includes salaries and penalties into the objective function.
Since all the salaries and traveling distances are proportional to the overall driving duration, and the time constraint (8 h including time windows for packing) is usually more strict than distance constraint (450 km), we made our algorithm minimize duration.
Due to the higher complexity of the problem, population size should be increased to ensure fast convergence. During our manual tuning of parameters, we have found ef fi cient to run the GA with population size 320 and do 200 iterations.
 constraints. With the visualizer component we can visualize the results, as it is shown in Fig. 8 . It is also capable of computing the real costs for each routes, considering the per kilometer cost, the hourly wage of the drivers and the packing staff (including time windows), given by an Excel table. It gives the opportunity to assign different wages to different employees and different costs to different trucks. The length of the computed routes in our example are 261 km, 422 km, 333 km and 384 km respectively, and the duration of the routes considering 5 min for packing are 304, 503, 368 and 471 min respectively. The results satisfy the constraints, thus the algorithm provided a feasible solution of the problem. The algorithm necessitates the input data as Excel tables and provides the resulting route system as an Excel table also. The number of mechanics for each bases is provided by the company, as well as the length of time windows (usually 5  X  7 min). ing the information retrieval from a Google Maps map, the distance matrix determination and the visualizer components, which can draw the fi nal routes one after the other are all unique tools. 6. Conclusions
The travel for material of mobile mechanics is a non-productive task. In this paper, we present a novel approach for the optimiza-tion of serving locations to reduce these activities. A modi mTSP with additional constraints was introduced and solved by this method. The complexity of the motivating problem implied the introduction of an improved genetic algorithm using novel crossover operators for multi-chromosome individual representa-tion, where a separate chromosome is assigned to each salesman.
The approach presented here is innovative in the reproduction of individuals, in the handling of the constraints, and it gives a whole methodology and a novel complete framework to solve an NP-hard problem, the mTSPTW. Beside the proposed methodology, the paper presented the developed tool utilizes Google Maps to visualize the supply structure and collect raw data used for optimization. The new dynamic approach results in signi fi reduction of activities regarding material handling for the mobile teams by extending of serving locations from 20 to 100.
The application of the novel tool containing the optimization process and the web-based framework in a real industrial problem's solution justi fi ed the necessity of the research. E.ON Hungaria Zrt. already applied the proposed tool. Preliminary economic calculations and experiences show that the implementation add up to signi savings while the quality of service also improved.
 Acknowledgments The research of Andr X s Kir X ly has been supported by the
European Union and the Hungarian Republic through the T X MOP-4.2.2/A-11/1/KONV-2012-0071 project. The research of J X nos Abonyi was realized in the frames of T X MOP 4.2.4. A/2-11-1-2012-0001  X 
National Excellence Program Elaborating and operating an inland student and researcher personal support system  X  . The project was subsidized by the European Union and co-fi nanced by the European Social Fund. We are grateful to Zolt X n Gyozs X n at E.ON Business
Services Kft, and Dr. A. E. Carter and Dr. A. Singh for providing us their test data.
 References
