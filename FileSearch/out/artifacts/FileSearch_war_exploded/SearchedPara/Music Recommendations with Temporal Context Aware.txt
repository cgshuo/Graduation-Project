 We present a system capable of recommending music playlists select user preferences as learned for the concrete time situation of the request. H.5.1 [ INFORMATION INTERFACES AND PRESENTATION ]: Multimedia Information Systems General Terms : Algorithms, Design, Human Factors Keywords : Recommendations, Context, Multimedia One recent trend in information processing and retrieval systems is the acquisition of contextual data and its incorporation to information processing [1]. Following this trend, there are approaches to improve recommendations by incorporation of alleviate the problem of excessive number of hits, or to adapt better to specific needs of the user that are dependent on her current context. Incorporation of context, however, can come at the cost of additional complexity (and computational cost) of the algorithm. In particular, observing context in a Recommender Systems converts a 2-dimensional user/item problem into an n-dimensional one through the addition of several contextual dimensions or variables. There are three main ways to introduce context information into a Recommender System:  X  Contextual pre-filtering uses data from the context to select  X  Contextual post-filterin g techniques ignore contextual  X  In contextual modelin g, context information is directly fed Our approach belongs to the family of pre-filtering contextual recommendations. In particular, it uses a micro-profiling pre-filtering input, in which variations in the user context are used to generate a segmentation in context space and produce micro-profiles of the user, for each recurrent contextual situation. In this particular case we use context-constrained micro-profiles based on recurrent time frames. We are therefore able to generate the The timestamped listening data was obtained from the social media site LastFM. A random samp le was taken from the set of LastFM users satisfying some pr e-conditions: same geographical area (Spain) and minimal amount of activity (account older than 1 year and an average minimum number of played tracks per day). The geographical limitation helps to ensure some kind of homogeneity in the space of listened artists, while the minimum activity threshold helps to reduce sparsity of data (especially important in our case since micro-profiles span only a subset of user behaviour). The complete dataset of timesta mped songs listened by those users in 2008 was then gathered off-line; it amounts to around 3.6 million items. This was the basis for micro-profile definition. By analyzing the temporal patterns in the data [4] we decided on six different micro-profiles as mo st discriminative, generated as the Cartesian product (morning, afternoon, evening-night) x (weekday, weekend) With those profiles defined, the dataset was split into them and a profile) was defined as input for the recommendation engines. To improve live performance, reco mmenders work with data in memory. The timestamped da taset is dumped onto the recommender memory upon startup time, and feed two recommendation paths: a) a time-sensitive recommender, which splits the items into 
