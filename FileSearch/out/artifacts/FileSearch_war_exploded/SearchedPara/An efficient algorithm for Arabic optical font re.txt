 ORIGINAL PAPER Mahmoud A. A. Mousa 1 , 2  X  Mohammed S. Sayed 3 , 4  X  Mahmoud I. Abdalla Abstract This paper proposes a new algorithm for Arabic optical font recognition (AOFR) as the first stage for Ara-bic optical character recognition. The proposed algorithm uses scale-invariant detector, gradient-based descriptor, and k -means clustering. The scale-invariant detector is used to find key points that identify the font of an image of printed Arabic text. The work in this paper compares between sev-eral scale-invariant detectors and selects the best one for AOFR. A gradient-based descriptor similar to the one in the famous scale-invariant feature transform algorithm is used to describe the detected key points. In addition, k -means clus-tering is used for font classification. In this paper, the mean recognition rate is used to evaluate the performance of the proposed algorithm. The proposed algorithm shows superior performance when compared with recently published algo-rithms for AOFR.
 Keywords Arabic optical font recognition (AOFR)  X  Arabic optical character recognition (OCR)  X  Scale-invariant detectors Font recognition is a step which is very useful in multi-fonts opticalcharacterrecognition(OCR)system.Arabiclanguage has characteristics that represent challenges for OCR. The first characteristic is the cursive nature of the Arabic text which is written from right to left. The second and the most important characteristic is that Arabic characters may have different shapes for the same character, and this depends on the location of the character in the word [ 1 ]. Also, the character shape changes from font to another. Hence, optical font recognition is an essential step in Arabic OCR systems [ 1 , 8 ]. Font identification is used in OCR systems to detect the characters dataset in which the classification process will take place. Figure 1 shows different Arabic fonts used in this paper. Some fonts are similar in most characters X  shapes, and this presents a big challenge.

This paper presents a new algorithm for Arabic optical font recognition (AOFR) as the first stage for Arabic opti-cal character recognition (AOCR). The proposed algorithm uses scale-invariant detector, gradient-based descriptor, and k -means clustering to identify the used Arabic font. The rest of the paper is organized as follows. Section 2 reviews several optical font recognition algorithms. Section 3 gives a brief overview on scale-invariant detectors and descriptors. Sec-tion 4 presents the proposed algorithm for AOFR. Section 5 demonstrates the results and performance analysis. Section 6 concludes this paper. There are several font recognition approaches. These appro-aches differ mainly in the method used for features X  extrac-tion. Feature extraction stage is important to find a set of measured values that accurately identify the input font. Two common approaches exist in this field. 1. Recognition based on typographical features which ana-2. Recognition based on textural features which uses, for In [ 2 ], a sliding window with a fixed length or width is used to extract a vector of features that is used to identify the font using Gaussian mixture models. The fixed sliding window is used in both the horizontal and vertical directions. For hor-izontal window with width eight pixels, it uses a window height of 45 pixels. In addition, the vertical window with height eight pixels uses a window width of 20 pixels. Those windows are applied in a sequential manner. For each itera-tion, the window moves by 1 pixel from right to left or from top to bottom. This algorithm was applied on images with text lines level so character segmentation is not required to be done. Training and test stages were done on 10 different fonts. Each font has 10 different sizes in the training image databases. This algorithm gives 93.2% recognition rate for those 10 fonts. The output of the binarization for dots and broken stocks is used as features in [ 3 ]. It uses the size of the bonding box that contains the binarized points as a feature to recognize a specific font. This algorithm was applied on seven different fonts with seven different sizes each and gives a recognition rate of 95.7%.

An algorithm based on the statistical analysis of edge pixel relationships was presented in [ 4 ]. A preprocessing opera-tion is done on the text image in order to remove the spaces between words, subwords, and lines. The output of the pre-processing stage is inputted to a Laplacian filter. Features are extracted by applying an eight neighboring kernel matrix which relates the scoped pixel to their neighboring pixels. This paper uses 18 features by calculating homogeneity, pixel regularity, weights, edge direction, and edge regularity. It gives a maximum recognition rate of 97.85%. The algorithm in [ 5 ] proposed wavelet-based feature extraction in Arabic OFR approach to produce a feature vector which was used with neural network in the recognition stage. This algorithm gives recognition rate of 99% in single font multi-size sys-tem. It also gives 96.5% recognition rate when applied on 10 fonts with five different sizes each.

In [ 6 , 7 ], features from the holes of the letters and the hor-izontal profile projection of the text lines are used. These algorithms work at the text line images level to identify the font type. They depend on observation that the shape of the holes which found in letters is varied according to the font used, and this can be used to extract features distinct for font classes. The algorithm in [ 6 ] uses some features from the horizontal profile of the text line image such as the height of the text line, the distance between top of the text line and the base line, the distance between bottom of text line and the base line, and the location of both the 2nd and 3rd maximums with respect to baseline. The algorithm was used to recognize seven different fonts with seven different sizes each. It gives a recognition rate of 93.7%. Slimane et. al. presented in [ 8 ] a stochastic-based approach to tackle the problem of font and size recognition. Their method treats a word image with a fixed-length overlapping sliding win-dow where each window is represented with a 102 features whose distribution is captured by Gaussian mixture models (GMMs). 3.1 Detectors The scale-invariant detectors such as Hessian, difference of Gaussian (DoG), and Harris-Laplace were designed such that they find a set of key points that are not affected by the vari-ations in image scale or orientation. Those key points such as corners exhibit signal changes in two directions. Those detectors [ 9  X  12 ] will be discussed briefly as follows:  X  Harris-Laplace detector computes the multi-scale rep-where:  X  Hessian detector uses Harris corner measure on the sec-H  X  Hessian Laplace detector localizes the interest points of  X  Difference of Gaussian (DoG) detector is done by sub- X  Scale-Invariant Feature Transform (SIFT) detector con- X  Dense SIFT (D_SIFT) detector is another version of SIFT  X  Multi-scale approaches such as multi-scale Harris and 3.2 Gradient (SIFT) descriptor The SIFT descriptor is suitable for all the above interest point detectors and achieves good results with them. It encodes the image information in a localized set of gradient orientation histograms. It operates on the regions around the key points extracted from the detectors by sampling these regions using the region scale to select the level of the Gaussian blur [ 12 , 13 ]. Figure 2 shows a text image with the interest points located on it using Hessian detector as an example. The figure shows the number of matched interest points between (a) two different text images with the same font, (b) two images with the same text in different fonts, (c) two images with different texts in different fonts. It is clear from the figure that for two images with the same font, even with different texts, the number of matched key points is very larger (3094 matches in Fig. 2 a). However, for two images with different fonts, even with the same text, the number of matched key points is very small (66 matches in Fig. 2 b). In addition, when the text and font differ, the number of matched key points is still very small (58 matches in Fig. 2 c) that means the number of matched key points does not go high except when the fonts match. Therefore, number of matched key points can be used as an efficient differentiation feature between Arabic fonts.

The proposed algorithm consists of a scale-invariant detector which is used to extract key points. Next, the SIFT gradient local descriptor is used to describe those extracted key points. The features vector outputted from the descrip-tor is entered to the K -means clustering algorithm to make a classification decision [ 11 , 14 ]. Since the recognition rate of our algorithm depends on the selected scale-invariant detec-tor, we studied several scale-invariant detectors to select the most suitable one for AOFR.

AsshowninFig. 1 , each font has its own characters shape that must be correctly identified in order to describe the font characteristics. A complete study was done on Arabic char-acters in order to provide a proof of concept to select the best key point detectors for AOFR. The key point detectors which are suitable for Arabic characters should satisfy the following conditions: 1. Identifies the start and the end curvatures of the charac-2. Identifies the dash ( X ) which connects the beginning cur-3. Identifies the Hamza and the points in the characters. These conditions should satisfy together to achieve good per-formance. Figures 3 , 4 and 5 show the detected key points for characters Alif ( ), Geem ( ), and Kaaf ( )using Times New Roman (Headings CS) font using different detectors. These detectors are Hessian, Hessian Laplace, Harris-Laplace, DoG, multi-scale Harris, multi-scale Hessian, SIFT, and D_SIFT.
 Figure 3 shows the key points detected for the character Alif ( ) using different key point detectors. Hessian detector detects key points that describe the Hamza, the beginning, and the end of the character but does not describe the vertical dash which connects the beginning and the end of the charac-ter. Hessian Laplace and multi-scale Hessian detectors detect key points for Hamza, beginning, end, and the dash, but there are key points detected in the plank area around the Hamza which may cause errors in the recognition. D_SIFT detector detects large number of key points that does not help us in the recognition of the character and decreases the recognition rate. The DoG detector detects key points that describe only the Hamza and the end of the character. The SIFT detector detects only the key points that cover the Hamza. All the pre-viously discussed key points are not suitable for the character Alif ( ). Harris-Laplace and multi-scale Harris detectors are the best ones that cover the character important parts. From Figs. 4 and 5 , it can be seen that Harris-Laplace detector is the best one which describes the characters Geem ( ) and Kaaf ( ) with few redundant key points less than other detectors.
After studying all Arabic characters and the key points detected for them, it was concluded that the key points detected with Harris Laplace detector represent characters and their features (i.e., start and end curvatures, dash, Hamza, and points) better than the other detectors. In addition, all the above-mentioned detectors were examined on Arabic text images typed in different fonts to select the best detector as explained the results section. From the testing results, it was concluded that using Hessian or Harris-Laplace detectors results in the best performance for AOFR. Although Har-ris Laplace detector is slower than Hessian detector, it was selected in the proposed algorithm because it is more robust. The datasets used in our paper is divided into two parts. The first part is to train the system which consists of 20 pages for each font. The second part is to test the performance of the system which consists of 100 pages for each font. Each page consists of Arabic printed text using only one font with font sizes varying from 10 to 48.
 The performance analysis is divided into three phases. In the first phase, different scale-invariant detectors are examined along with the gradient descriptor and k -means clustering, and the mean recognition rate is estimated for each of them. This phase aims to find the best key point detectors that are suitable for describing the nature of Arabic fonts and can be used in AOFR. The scale-invariant detec-tors considered in this paper are (Harris-Laplace, Hessian, Hessian Laplace, DoG, SIFT, D_SIFT, multi-scale Harris, multi-scale Hessian).
 Figure 6 shows the mean recognition rate (RR) of the AOFR systems with each of the scale-invariant detectors mentioned above with respect to the number of fonts used. This comparison was carried out using (ACS Fayrouz Bold, ACS Morgan Bold, AF_El Khobar, AGA Cairo Regular, Al-Kharashi 27, Andalus, Arabic Transparent, B Homa, Droid Arabic Naskh, Kufi, B Zar, DecoType Thuluth, M Unicode Sara, SH_Roq X  X , Traditional Arabic) Arabic fonts, where the first five fonts were used for the five font results in Fig. 6 and the first 10 fonts were used for the 10 font results. It can be noted from the test results of the different scale-invariant detectors that Hessian and Harris-Laplace detectors have the best performance for AOFR.

The second test phase is to compare the performance of the proposed algorithm with that of the state-of-the-art algorithms in the field of AOFR. Table 1 shows the mean recognition rate for the proposed algorithm and the algo-rithms in [ 2  X  8 ]. The results of the proposed algorithm in each row of Table 1 were obtained using the same set of fonts used in the paper that it is compared with. The fonts used for each comparison are shown also in Table 1 .From the mean recognition rate in Table 1 , it is clear that the pro-posed algorithm outperforms the other algorithms in [ 2  X  8 ]. The miss classification in our algorithm occurs when trying to find the font type of a page that has very few written words. With a few written words, the located key points are insuf-ficient to take the correct decision especially with fonts that have high similarity such as Traditional Arabic, Simplified Arabic, and Arabic Transparent which can be seen in Fig. 1 .
The third test phase is to find the critical resolution in which the tested image X  X  font can be identified correctly with the same mean recognition rate shown in Table 1 . Figure 7 shows the average mean recognition rate over 15 fonts for different test images X  resolution reductions with respect to the training images resolution. The horizontal axis represents the attenuation ratio between the test image resolution and the training image resolution, and the vertical axis represents the average mean recognition rate for the reduced resolution. It can be concluded that the accepted attenuation factor in the test images X  resolution is 38% of the training images X  resolution.

The proposed algorithm succeeded in detecting the font of images containing only one line. So, for multi-font text, paragraphs can be separated with any well-known segmen-tation approach and apply the algorithm to detect the font for every paragraph. The paragraph size can be as small as one line; however, it has to have only one font. Font recognition is an essential step in multi-fonts optical character recognition (OCR) systems. Arabic language has challenging characteristics for OCR that elevates the need for Arabic optical font recognition (AOFR). A new algorithm for AOFR is proposed in this paper. The proposed algorithm uses scale-invariant detector, gradient-based descriptor, and k -means clustering to recognize the Arabic font in text image. The proposed algorithm shows a promising performance, and it produces a mean recognition rate of 99.2 X 99.5% and out-performs the algorithms in [ 2  X  8 ] that are used for AOFR.
