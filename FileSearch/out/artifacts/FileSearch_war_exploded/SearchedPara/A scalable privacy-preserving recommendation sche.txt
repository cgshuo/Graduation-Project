 1. Introduction stances by simplifying access to useful information ( Shardanand &amp; Maes, 1995 ). proposed applying memory-based approaches for discovering specific context in learning object repositories.  X  ( Ameur, Brassard, Fernandez, &amp; Mani Onana, 2008; Canny, 2002a; Polat &amp; Du, 2005 ). based algorithms typically operate on the entire data to produce recommendations. Model-based schemes, on the other approaches utilize both schemes for improved performance.
 framework is evaluated in both CF and PPCF frameworks.

Major contributions of the work are, as follows: 1. A novel PPCF framework based on bisecting k -means clustering is proposed. 2. A two-level preprocessing scheme is suggested to deal with scalability and accuracy problems. 3. Effects of scalability and sparseness challenges are alleviated considerably. background on CF in the next section. We deeply describe our novel scheme and the proposed preprocessing methods in results in Section 6 . Finally, we conclude the paper and give future research directions in Section 7 . 2. Related work scalability.
 techniques usually require considerably large computation power to tune complex parameters related to the model.
Researchers propose to construct hybrid methods in order to combine advantages of memory-and model-based tech-reduce number of items, where Bilge and Polat (2012b) propose an item ordering method to improve its accuracy. Thilagamani &amp; Shanthi, 2011 ).
 with comparable accuracy to non-private schemes. 3. Preliminaries 3.1. Recommendation algorithm
CF systems collect ratings and form a user-item matrix, U bors on q . Such similarities between a and any user u are calculated using various methods. Most typically employed measure, Pearson X  X  correlation coefficient (PCC) is given in ( Herlocker et al., 2004 ): in the following equation: 3.2. Privacy protection by randomization
High quality predictions can only be produced upon authentic data. However, customers often hesitate to submit their tion from user profiles and yet still be able to produce precise predictions. by obstructing disclosure of individual data items.

In terms of PPCF, RPTs offer to disguise a vote entry v by replacing it with tion, random numbers are generated with zero mean and r while in uniform distribution, random numbers are generated over the range [ a ,+ a ], where a is a constant and based on the value of b max associated with the density of user-item matrix. After the data holder sets r the data holder, which creates a disguised user-item matrix, U Algorithm 1. Data Disguising Procedure Require: User vector ( u 1 m ), r max , b max 1: u mean  X  u  X  ; r u std  X  u  X  2: for all items in u ( j 1to m ) do 3: z j  X  X  u j u  X  = r u 4: end for 5: b rnd  X  0 ; b max  X  ; r rnd  X  0 ; r max  X  ; a 6: e # of empty cells; g # of genuine ratings 7: F e b % . # of empty cells to be filled 8: dist RANDOM (uniform, Gaussian) 9: R dist ( g + F ; l =0, r j a ) 10: for all items in u ( j 1to m ) do 11: z 0 j  X  X  z j  X  R j  X  12: end for 3.3. Bisecting k-means clustering tion does not change significantly or the membership of the clusters no longer changes. ( Steinbach et al., 2000 ). 3.4. Feature-based profiles (FBPs) in Table 2 . FBPs of users are given in Fig. 1 .

As seen from Fig. 1 , Alice X  X  FBP is [2,2,2,0,1] because there are two items, i rated both items; hence, corresponding FBP value is 2; similarly, there are two items, i of items. Similarly, number of features might be different for various items, as i 4. A novel scalable PPCF scheme applied clustering method can be run on masked data. 4.1. Forming BDT via bisecting k-means likely to happen very close membership values in case of two clusters, which intensify the algorithm X  X  sensitivity. simply traversing down the tree.
 structed to efficiently form neighborhoods, as described through a pseudo-code layout in Algorithm 2 . Given U based tree structure can be formed easily.

Algorithm 2. BDT formation via bisecting k -means clustering 1: function BKM( F , N ) . bisecting k -means cluster 2: IDX ( n ) 0 3: BDT . centers 2 f null 4: BDT . left null 5: BDT . right null 6: BDT . LST : a new BDT . Left sub-tree 7: BDT . RST : a new BDT . Right sub-tree 8: [ IDX , BDT . centers ]= k -means( F ,2) 9: for all u i in F ( i 1to n ) do 10: if IDX ( u i )=  X  X  X eft X  X  then 11: append u i into BDT . left 12: else 13: append u i into BDT . right 14: end if 15: end for 16: if size ( BDT . left )&gt; N then 17: BDT : LST  X  BKM  X  BDT : left ; N  X  18: end if 19: if size ( BDT . right )&gt; N then 20: BDT : RST  X  BKM  X  BDT : right ; N  X  21: end if 22: return BDT 23: end function
During an online transaction with a , the PPCF server first generates FBP of a , F
F ing cluster centers are indexed at the root of the tree as C ing scheme on scalability can be seen more clearly as the number of users in the system increases. 4.2. Cloning users by producing PSPs boost accuracy in CF systems.
 tering approach, the other can still cover overheads caused by it.
 in clones are to be determined experimentally.
 Algorithm 3. Generating clones of a user by PSPs Require User-item matrix ( U n m ), User-id ( id ), 1: Initialize: Clones x m 0 . clones matrix 2: for i 1to x do 3: Clones ( i )= U ( id ) . create identical clones 4: end for 5: n r # of ratings in U ( id ) 6: i ec index of empty cells in U ( id ) 7: r ec RandomPermutation  X  i ec  X  . random index of empty cells 8: n ec n r q . # of empty cells to be filled 9: for all u i in U ( i 1to n ) do 10: similarities  X  i  X  X  pcc  X  U  X  i  X  ; U  X  id  X  X  11: end for 12: sorted sim  X  sort  X  similarities ; descending  X  . to be used by PSP production 13: for i 1to x do 14: for j 1to n ec do 15: idx =( i 1) n ec + j 16: target _ item = i ec ( r ec ( idx )) 17: Clones  X  i ; target item  X  PSP  X  sorted sim ; target item  X  . estimated using Eq. (2) 18: end for 19: end for 4.3. Bisecting k-means on masked data
After estimating FBPs of the collected disguised user vectors, the server forms a BDT by running Algorithm 2 , where similarities between user profiles and cluster centers. Thus, we analyze how precise the server can cluster U 0 . vector and its disguised version shall produce the same FBP.
 dure of profiles, effects of those artificial ratings are diminished. Given m i =1,2, ... , m d ), each element of F u is estimated by incrementing the related feature values of u
P and as m d grows, expected value of increase in each element of F
P the process, number of users will increase drastically and effects of random filling procedure will become further insignificant.
 5. Performance and privacy analysis the employed individual privacy protection mechanism is provided to see what extent it is effective. 5.1. Overhead costs analysis
Compared to the traditional k -nearest neighbor-based CF approaches, neither of our preprocessing schemes introduces and off-line phases remain the same.
 corded after each recursive call. Therefore, at each level, there will be at most 2 Consequently, total storage cost of both schemes is in the order of O ( nm ). manner it produces actual recommendations, which has an online running time in the order of O ( n in the order of O ( n 3 log n ) for each iteration. At each level for BDT, at most 2 performed yielding a total computation cost in the order of O (2 stants, where typically N n in systems suffering from scalability. 5.2. Privacy analysis system. 5.2.1. Discriminating genuine and forged ratings can predict the set of genuine items with some probability.

We measure privacy provided by random selection of b as Shannon entropy ( Shannon, 1948 ) of user X  X  apparent rating distribution. Recall that the entropy of a random variable X with possible values { x ity mass function p is defined as H  X  X  X  X  P n i  X  1 p  X  x come. Intuitively, such uncertainty can be maximized through uniform selection of b % over (0, b normal distribution N X  x ; 0 ; r 2  X  or uniform distribution U X  x ; 2 r cells of a particular user, respectively. Accordingly, let P ={ p from 5 to 100, where the user is assumed to have 50 genuine ratings on 500, 1000, and 2000 ratable items. ability of determining genuine ratings from a given disguised user vector is 1 out of b number of combinations of g 0 objects chosen g at a time. 5.2.2. Determining real values of ratings 6. Experiments
We conducted experiments on benchmark data sets collected for CF purposes to investigate how proposed schemes analyzed in terms of their significance. 6.1. Data sets and evaluation criteria especially MLM is very large. Detailed information about the data sets is given in Table 3 . (MAE), which measures how close the predictions are to the actual ratings as an average of absolute errors, i.e., e referrals is also recorded. 6.2. Experimentation methodology ronment using a computer with an Intel Xeon 2.8 GHz processor and 6 GB RAM. For k -means clustering operations, MAT-utilizes correlation as the distance measure based on PCC. 6.3. Results and discussion explained in the following. 6.3.1Evaluation in non-private schemes
To examine improvements with respect to scalability, we first produced predictions relying on the BDT constructed by schemes will hereafter be referred to as BKM and CF methods, respectively. Then, we employ the second preprocessing and online performance. 6.3.1.1 BKM model.

We experimented on the BKM model to examine its effects on accuracy and online performance. For all folds, we pro-Outcomes are displayed in Table 4 for both data sets.
 the system. stricted due to information losses caused by narrowing down search space through a BDT. However, BKM+ model must be analyzed in the following.
 experiments were repeated 100 times and average results were computed to obtain more dependable outcomes. Estimated MAEs and measured T values for both data sets are given in Table 5 .
 comes present the robustness of the proposed BKM model in terms of scalability. given in Table 6 .
 imizes accuracy. Note that the reached maximum accuracy values of about 0.73 are higher than both CF and BKM models X  accuracy, which concludes that by combining two preprocessing methods, we can both produce more precise predictions and achieve a significant enhancement in online performance.
 in Fig. 5 .
 level. 6.3.2. Evaluation in privacy-preserving schemes
After examining effects of the preprocessing schemes on non-private CF schemes and determining optimum values of experimental outcomes. Also, we proceeded experiments only with BKM+ scheme in privacy-preserving parts because dis-tinct effects of preprocessing were investigated in previous section. Privacy-preserving form of the proposed scheme (P
BKM+) was examined against the PPCF method (P 2 CF) in terms of accuracy. For disguising schemes, we kept standard of varying forgery rates ( b max ) were studied. b max ] to mask genuine ratings. Effects of different b max fects of this parameter on accuracy. In the experiments, N was set at 80 for both data sets while b average of outcomes are demonstrated in Table 8 .
 model especially for MLP, losses are not that much for the proposed P losses are approximately 0.06 for MLP and 0.12 for MLM. Thus, we can infer that P goals accuracy and privacy for this case. 6.3.2.2. Overall comparison. We conducted the last experiment to demonstrate a clear comparison among CF, P
P
BKM+ schemes in terms of accuracy, like we did in non-private scheme. For this purpose, we set b
P Estimated MAE values are presented in Fig. 6 .

As seen from Fig. 6 , the proposed P 2 BKM+ scheme performs significantly better than P performed paired t -tests to compare the accuracy of P 2 CF and P fidence level.
 are not significant. Also, it can be seen from Fig. 6 b that P allow providing high quality private referrals in considerably less amount of time. 7. Conclusions and future work
We proposed a novel CF scheme based on two preprocessing methods, which can be performed off-line in order to im-serving scheme is able to produce predictions with comparable accuracy to original non-private scheme. Moreover, the put matrix gets larger, which is vital to scale CF systems.
 marketing over diverse products.
 on what empty cells to be filled with PSPs and to combine our proposed schemes with previously proposed CF enhancing approaches such as data reduction techniques as future research goals.
 Acknowledgement This work is supported by TUBITAK under Grant 108E221.
 References
