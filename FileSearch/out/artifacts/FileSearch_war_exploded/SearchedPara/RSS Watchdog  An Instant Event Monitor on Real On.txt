 This paper introduces the RSS Watchdog system, which is capable of news clustering and instant event monitoring over multiple real and online RSS news streams. We brie fl ymen-tion software architecture design, technical implementation, and prototype demonstration. In addition, the results of real case studies are presented to notice the RSS Watch-dog X  X  functionality.
 H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval; H.3.4 [Information Storage and Retrieval]: Systems and Software Design, experimentation
The Really Simple Syndication (RSS) is a class of Web feed formats widely used to publish frequently updated en-tities, such as news headlines and blog entries. An RSS document, so-called a  X  X eed X  or  X  X hannel X , includes full or summarized text, plus metadata such as publishing dates and authorship. News on di ff erent RSS channels however has implicit similarity someh ow. Important or urgent news often appears in many RSS channels within a short period. For example, after a new a ff air about  X  X arack Obama X  oc-curs, worldwide news channels will rapidly report this news. Nonetheless, we never know what and when Obama X  X  news will occur again in the future. It is unclear that some kinds of news may have de fi nite or periodic reports, but others may be occasional or irregular. Discovering temporal rela-tionship among relevant items over multiple news streams is interesting. This encourages our study of how to resolve possible relationship among particular items, how to manage RSS channels e ffi ciently, and how to provide better quality of experience on fast digesting news over many news feeds. For this purpose, we design an RSS Watchdog system, which is capable of news clustering and instant event monitoring over multiple real and online news streams. The subsequent sections quickly describe RSS Watchdog X  X  architecture de-sign and implementation, and present real case studies of prototype demonstration.

Figure 2: Workload patterns: Obama vs. Gaza vs. Iraq. channels produce considerable duplicate items. For exam-ple, given with a keyword "Iraq," Associated Press and CNN generate about 100% duplicate items.

Channel Clustering: We adopt the model-based cluster-ing approach, based on the Expectation-Maximization (EM) algorithm with Gaussian distribution [2]. The channel clus-tering process runs in four steps: (1) counting daily his-togram, (2) deciding cluster centroids, e.g. peaks, (3) clus-tering items with their nearest centroids, and (4) recom-puting new centroids and repeat from step 2. Particularly, the clustering process groups "relevant items" into clusters in temporal order. Their relevancy is determined by user-speci fi c news keywords [1].

Pattern Generation: Given with di ff erent cluster series by the same keyword, the mapping process will fi gure out a generic pattern of cluster series over multiple data streams. This procedure is sophisticated in practice. For experimen-tal observations, two heuristic gain functions, GF1 and GF2, are inspected for determining the representative pattern. Real case studies in Section 4 will present their usability.
The formula GF1 considers the number of clusters  X  X  X   X  on the candidate channel  X  X  X   X  , and average temporal di ff erence  X  with the minimum is the outcome. where  X  0  X  and  X  X  X  0  X  are the scaled values [0,1] of  X   X  and  X  X  X   X  by using min-max normalization method [2]. The weighted parameter  X  is used to control the relative in fl uence.
The formula GF2 considers average coverage ratio  X  X  X   X  by every  X  X  X  X  . Likewise, normalized  X  X  X  0  X  and  X  X  X  0  X  are used. The candidate channel with the maximum is taken.
To simplify demonstration, we choose three real cases based on top 10 channels as the cases of keywords "Obama," "Gaza," and "Iraq" because they have di ff erent representa-tive workload patterns and enough items for supporting the study of temporal relationship on multiple news streams, as depicted in Figure 2. Their patterns are similar to those reported by Technorati.com [3], as the inside chart. Particu-larly,  X  X bama X  is the hottest. It has a top peak around 2009 US Presidential Inauguration on 1/20. The pattern  X  X aza X  increases dramatically and descends gradually, since Israeli aircraft attacked Hamas security compounds across Gaza on
