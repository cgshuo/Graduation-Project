 In this paper, we show how a user profile can be enhanced when a more detailed description of the products is included. Two main assumptions have been considered: the first im-plies that the set of features used to describe an item can be organized into a well-defined set of components or cate-gories, and the second is that the user X  X  rating for a given item is obtained by combining user opinions of the relevance of each component.
 H.3 [ Information Storage and Retrieval ] Algorithms Probabilistic Reasoning, Recommender System, Recommender Systems, Learning User Profiles
Recommender systems (RS) [4] attempt to automatically link users with the products that they might potentially  X  X onsume X  (buy, look at, listen to, read, etc.). This paper focuses on content-based RSs which analyze item descrip-tions to identify those that are of particular interest to the user. In particular, using the information in the database of ratings (obtained either explicitly by means of ratings or implicitly by using visited links, etc.) and the description of the item X  X  content, a user profile is built. The predictions for unobserved items are then obtained by considering their similarity with the user profile.

The items are traditionally described by means of a set of attributes or features and represented as (weighted) vec-tors which are equal in size to the total number of attributes [4]. In this paper, we shall attempt to improve the descrip-tion of the user X  X  profile by means of a more thorough de-scription of an item X  X  content. In particular, we shall as-sume that the set of features used to describe an item can be organized into a well-defined set of k structural com-ponents or categories H = { H 1 , . . . , H k } . For instance, the categories used to describe a movie might be title, genre, actors, keywords, etc. . In order to describe each component, H i , a subset of a large number l i of features F order to describe the component genre of a movie, we can use a subset of { action, comedy, sci-fi, etc. } .
Although we might have a better product description, it is quite common for a user only to rate the observed products with an overall rating. We may assume, however, that this rating is a mixture of the user X  X  opinions about the relevance of those components describing the item. In this article, we will study how this kind of information may be included in an enhanced user profile. This profile could have two different parts: one which determines how the user might rate each content component, and the other representing how this information is combined in an overall rating. By using this profile, recommendation explanations are better since we might inspect the rules governing prediction of a particular instance 1 .
 In this paper, we propose to model the profile using Bayesian Networks. From a recommending perspective, our final goal is to predict how an individual would rate an as yet un-seen item. In this case, the prediction process can be seen as a classification problem: an item I must be assigned to one of a set of r pre-defined ratings, v j , (categories). More specifically, the predicted rating is obtained by selecting vote = arg max j P r ( v j | I,  X  ).
We will learn the user profile by considering a training database where each entry, d i , contains an overall rating given to the observed item and the set of features used to describe the item, i.e. d m = { v m i , f m 1 , 1 , . . . , f paper, three different alternatives will be considered:  X  NB : Firstly, we consider a flat description of an item (no structural information is used). In this case, assuming that the rating (class) is known and the features are independent, a Naive Bayesian classifier (NB) might be used. It should
This is important because if users trust the system, they are more likely to buy the items offered; if they don X  X , they will stop using it. be noted that the NB classifier has proved to perform well [1] when the dimensionality of the input space is high.  X  HNB : The second alternative attempts to learn a model by incorporating structural knowledge. The proposed model might be considered as a Hierarchical Naive Bayes model (HNB) [3], i.e. tree-shaped Bayesian Networks where the variables are partitioned into three disjoints sets: { C } is the class variable (vote variable, in our case), F is the set of features, and H is the set of hidden or latent variables (see Figure 1). Although latent variables are usually introduced to relax the independence statements between attributes, in our model, these variables are given an explicit seman-tics since they will represent the structural components or categories such as genre , actors , etc. These components will have the same number of states as the rating variable. Since the topology is fixed, the problem is to find the most likely parameters for the given data set. For this purpose, we propose the use of the Expectation-maximization (EM) algorithm which converges to a local maximum of the like-lihood function.  X  INB : The third alternative tries to reduce the computa-tional cost involved with the EM procedure. We therefore propose the use of k + 1 independent NB models learned in a three-step process: 1. For each variable H i learn an NB model, NB Hi , from D 2. Create the structural training data set, D ST . 2.1 For each data d m  X  X  , d m = [ v m , f m 1 , 1 , . . . , f 3. Let NB V H be the NB model learned from the D ST set.
The recommended rate will then be obtained by, firstly, predicting the rate for each structural component H i , i.e. h i = arg max j P r ( h j | F i , NB Hi ), and then, by combining these ratings as rate = arg max j P r ( v j | , h 1 , ..., h
A movie recommender framework is used to illustrate the ability of the models to learn the user profile. In this ar-ticle, we show the results obtained when using information about { actors H 1, actresses H 2, directors H 3, genres H 4 } for five different users: three of these ( UA, UB, and UC ) represent real users obtained by combining Movielens (con-taining user ratings) and IMDB (used to obtain the content descriptions) 2 . On the other hand, and in order to check the system X  X  ability to learn the user X  X  behaviour, we have used two artificial individuals, UM and UD : the first where the movie rating is defined as the majority of the ratings given to each component, and the other where the rate is the same as the one used to rate the actors ( H 1) component. Table 1 shows the number of records, N , and the number of features in each structural component. The data sets have been split at 80% for training and 20% for testing purposes.
In order to measure the accuracy of the RS, we have con-sidered two metrics [2]: MAE , which measures the average
Since IMDB provides a cast overview  X  X n credits order X , actors, actresses and directors have been filtered using their average gross at the box office: www.the-numbers.com . absolute deviation between a predicted rate and a user X  X  true rate, and F 1, which balances recall and precision when trying to find good items 3 . The table below shows the re-sults obtained for each candidate model (we also show the results obtained by considering each structural component separately). It is possible to draw various conclusions from this table. The first is that by using a structural profile (INB) we might improve system accuracy. This profile is particularly beneficial when considering synthetic data since all the structural components which affect the overall rating may have been considered. In such situations, HNB obtains very good results. In addition, good results are obtained by only using genres, H 4, since we have more data for learning: on average, those features describing genres appear approx-imately 15 times more frequently than actors, actresses or directors.

Although we have focused on system accuracy, one im-portant fact is that by means of this kind of profile better explanations could be obtained for the recommendations, for instance by considering the values of those structural components which better justify the evidence (implying an abduction process). For example, the system might indicate  X  X ou might like this movie because of its genre and its cast X  .
In this paper, we have studied the problem of learning a profile that captures the mechanisms which a user uses to rate an item. This new user profile, represented by means of Bayesian Networks, includes information about a product X  X  structural content. The problem of explaining the predicted rate and the selection of the best features for recommending will be tackled in future work. [1] P. Domingos and M. Pazzani On the optimality of the [2] J. L. Herlocker, J. A. Konstan, L. G. Terveen, [3] H. Langseth and T.D. Nielsen. Classification using [4] P. Reskick, H.R. Varian. Recommender systems .
We consider a movie rated with 4 or 5 as  X  X ikeable X , and a score of 1 to 3 to represent it being  X  X rrelevant X  to the user.
