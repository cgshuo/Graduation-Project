 Microblogging services have emerged as an essential way to strengthen the communications among individuals. One of the most important features of microblog over traditional social networks is the extensive proliferation in information diffusion. As the outbreak of information diffusion often brings in valuable opportunities or devastating effects, it will be beneficial if a mechanism can be provided to pre-dict whether a piece of information will become viral, and which part of the network will participate in propagating this information. In this work, we define three types of in-fluences, namely, interest-oriented influence, social-oriented influence, and epidemic-oriented influence, that will affect a user X  X  decision on whether to perform a diffusion action. We propose a diffusion-targeted influence model to differentiate and quantify various types of influence. Further we model the problem of diffusion prediction by factorizing a user X  X  intention to transmit a microblog into these influences. The learned prediction model is then used to predict the future diffusion state of any new microblog. We conduct experi-ments on a real-world microblogging dataset to evaluate our method, and the results demonstrate the superiority of the proposed framework as compared to the state-of-the-art ap-proaches.
 J.4 [ Computer Applications ]: Social and Behavioral Sci-ences; H.1 [ Information Systems ]: Models and Princi-ples X  Human information processiong Algorithms, Experimentation Social network; Social influence analysis; Diffusion predic-tion
Recent years have witnessed the development of microblog-ging services and the important role they played in changing the way people live and communicate. As a novel type of so-cial network, microblog integrates the specialities of various other traditional social media. Similar to Facebook, people can use it to manage the interpersonal relationships with their friends and post updates about their daily activities to keep themselves socially active. Microblog also operates like news media, where bountiful official accounts (by ordinary users in some cases, such as the witness of an accident) keep publishing the latest and miscellaneous news about the so-ciety. Additionally, microblog also serves as an interest dis-covery tool, assisting people in exploring and disseminating the content conforming to their personal interests.
The extent to which a social network spreads informa-tion is a key measurement that impacts the degree of user engagement as well as its revenue. Unlike friendship-based networks, in which the content spread is confined to close group of friends, content-centric microblogging network pro-motes the spread of information with no restriction: it allows users to connect with any people sharing common interests with them, and repost any content they deem interesting. Therefore, we could observe plenty of diffusion actions (i.e., the action that a user disseminates a microblog from his friend instead of posting original content) in microblogging platforms, and the number of diffusion actions could in turn reflects the distinction of the associated microblog, in terms of its novelty, popularity and importance. It has been re-ported [9] that the size of information cascades fits power-law, which means that of all the microblogs posted every-day, only a tiny proportion of them will break out (i.e., a large number of users participate in propagating these mi-croblogs), while most will diminish. It will be of great benefit if a trending microblog could be predicted early before the outbreak actually happens. For instance, if a user predicts that a piece of information will emerge in the near future and propagates this information in the early stage, then his ideas or comments will have more chances to be exposed to other people, which could help to increase his reputation and influence. In addition to predicting trending microblogs, the ability to predict which users may participate in the diffu-sion process of a particular microblog is also desirable and valuable in many cases, e.g., analysing the predicted future participants to choose better advertisement strategy, recom-mending a microblog to potential participants to accelerate the information propagation process, etc.
In recent years, information diffusion has drawn consider-able research interest in computer science, and a variety of techniques and models have been developed to capture the information diffusion in online social networks [14]. Some re-searchers focus on building standard models to explain the general information diffusion process, such as the two sem-inal models, namely Independent Cascades (IC) model [10] and Linear Threshold (LT) model [16]. These models are useful for simulating the information flow in social networks. However, they cannot be directly applied to predict the dif-fusion process. Another research direction lies in detecting the outbreak of information cascades [20], which focuses on the cascades that have already broken out. In this work, we target at a different problem: given a new microblog, we in-tend to predict whether it will become trending in the near future, and we also try to predict which users will participate in the future diffusion process of this microblog.
A user X  X  action of propagating a microblog from a friend may be affected by various factors. Generally, there are three factors that contribute to a diffusion action: 1) the content of the microblog is in accordance with this user X  X  interest; 2) the microblog is posted by this user X  X  close friend, and his repost action is due to social needs; and 3) the information is epidemic (e.g., a piece of breaking news), and his propa-gation action is a result of conformity behavior (i.e., the act of matching attitudes, beliefs, and behaviors to group norms [23]). These factors exhibit different types of influences ex-erted on a user from different sources: his friends, his inter-ests, and the information content. It is difficult to quantify these influences due to several challenges. The first challenge is how to differentiate these influences. In our scenario, only the diffusion action is observable, while the underlying in-fluences that trigger this action is implicit. Therefore, it is impractical to directly infer the degree of different influences based on the performed diffusion actions. Second, in order to obtain the interest-oriented influence, we need to gener-ate the user X  X  interest profile, i.e., what kind of content he is interested in, from his microblogging history. Nowadays, a growing proportion of microblogs contain multimedia infor-mation [3, 8], e.g., both texts and images, and images could provide more information than the short texts contained in a microblog. How to discover the interest profile of a user from these multimedia contents remains a problem. A third challenge is in constructing a unified model that can jointly leverage various types of influences to model and predict the information diffusion process.

To solve the proposed problem and tackle the above chal-lenges, we propose a novel scheme to quantify the three types of influences and adopt the learned influences to model and predict users X  diffusion actions. Specifically, the proposed framework comprises three essential stages: user interest profile learning, diffusion-targeted influence learning, and microblog diffusion modeling and prediction. First, in order to learn a user X  X  interest profile, we need to map the user X  X  microblogs into the corresponding interest categories. We devise a classification approach, termed Multi-Task Trans-fer Learning , to jointly classify the multimedia microblogs posted by a user into various interest categories. In order to address the deficiency of labeled training data, we bring in external knowledge domain where labeled samples are easy to acquire, and the transfer learning technique is adopted to project data samples from different domains into the same embedding space. Meanwhile, a multi-task co-learning pro-cess is integrated for the classification task, which will bene-fit from the joint information shared by different media con-tents. In the second part, we propose a diffusion-targeted influence model to quantify various influences a user receives. Three types of influences are formally defined, and a factor graph model is elaborated to categorize and analyse these influences. Finally, given the history diffusion action set, we learn how the various influences could affect a user X  X  de-cision of whether to perform a particular diffusion action. The learned weighting configuration for various influences will eventually contribute to the prediction of future diffu-sion status with regard to a new microblog.

The rest of the paper is organized as follows. Related works are briefly summarized and discussed in Section 2. In Section 3, we describe the formal definition of the problem addressed in this paper, and give a brief overview of the whole framework. In Sections 4, 5 and 6, respectively, we introduce the three main stages of our framework. Section 7 presents the experimental design and evaluation results. Finally, we conclude our work in the last section.
Influence analysis. Social influence is the behavioral change of a person because of the perceived relationship with other people, organizations and society in general. It has been a widely accepted phenomenon for decades, and many works have been done to demonstrate the existence of social influence in online social networks [1, 19, 13]. One important research direction is the problem of influence maximization. Given a network with influence estimates, influence maxi-mization tries to select an initial set of users such that they will eventually influence the largest number of users. Kempe et al. introduced a fundamental work [16]. Following this, many other methods [6, 12, 5, 27] have been proposed to im-prove the efficiency. All the related works discussed above assume the influence probability on the edges are given as input, which is impractical for real-world problems. Some works have been done to infer the degree of influence from a given social network [11, 24, 2]. A probabilistic model was proposed in [11] to learn influence probabilities by mining past influence cascades. Tang et al. studied the topic-level social influence in [24], and a Topical Affinity Propagation (TAP) method was proposed to model this problem. Other works include the detection of influential users [26], influence measurement in Twitter [4], etc.

Outbreak detection. The target of outbreak detection is to select a set of nodes from a social network in order to detect the spread of a virus as fast as possible. Leskovec dt al. presented a general methodology for near-optimal sensor placement in [20]. By exploiting submodularity they de-veloped an efficient algorithm much faster than the greedy algorithm. The work in [18] conducted evolutionary analysis in blog networks, and showed that the blogspace had been expanding in metrics of community structure and connect-edness. The goal of the above works is to detect existing outbreaks, which is different from our target of predicting the outbreak of a microblog diffusion process before it hap-pens. Recently, Cui et al. [9] raised the question of cascading outbreak prediction. Based on the historical cascade data, a data driven approach was proposed to select important nodes as sensors. The prediction is based on the cascading behaviors of these sensors. Although the problem is simi-lar to ours, the above method could only predict whether a ca scade will breakout, but could not provide more detailed information about the scale of the cascade or which of the users will participate in the future diffusion process. Besides, the limitation with the small number of sensors results in low recall in prediction performance. The models described in [22] and [23] aim at modeling and predicting users X  social actions based on the past action history. However, since a model needs to be trained for each information diffusion pro-cess, and the training process requires a considerable number of actions, these models could not be adopted for the diffu-sion prediction of a relatively new microblog. Unlike these methods, our proposed framework could quantify general in-fluence degree. The prediction model is trained with regards to the behavior of users while is not constrained to any spe-cific diffusion process. Therefore, our model can handle new incoming microblogs without the need to train a new model every time.
We denote the social network as a directed graph G = ( V, E ), where V is the user set and E  X  V  X  V represents the social relationships between users. We denote a user u  X  as a friend of u if there is a edge ( u, u  X  )  X  E , i.e., u is a follower of u  X  . The basic action of a user is to post microblogs, which can either be original or reposted from friends. A microblog m contains two multimedia components: the textual part m t and the visual part m v (either m t or m v could be empty). We denote M u as the set of all microblogs the user u has posted, and the overall microblog set as M =  X  u  X  V M u . Next, we present the formal definitions of some terms used in this paper.

De nition 1 . Interest Profile. The microblogs could be related to various interest categories. We denote C = { c 1 , ..., c |C| } as the collection of all interest categories. The interest profile of user u , I ( u ), is a |C| -dimensional vector which represents the user X  X  interest distribution over all in-terest categories C .

De nition 2 . Diffusion action. The users in the so-cial network interact with each other through reposting mi-croblogs published by their friends. A diffusion action is defined as a triple a = ( u, u  X  , m ), representing the user u re-posts a microblog with content m from his friend u  X  . Here, m can either be original microblog sent by u  X  or a microblog reposted by u  X  from his friend.

The input to our problem is the social network G , the past microblogging history of all users M , as well as the diffusion action set A which contains the past diffusion actions of all users. For a new incoming microblog m new , we intend to predict: (1) whether it will become trending in the near future, and (2) which of the users will participate in the diffusion process of this microblog.

Figure 1 presents the overall flowchart of our proposed framework, which comprises three main stages: user inter-est profile learning, diffusion-targeted influence learning and microblog diffusion modeling. The first component aims to discover a user X  X  interest profile based on his microblog-ging history. Specifically, each microblog is first classified into a interest category, then the interest profile is gener-ated based on the aggregation of these classification results. In the second stage, we define three types of influences, namely, interest-oriented influence, social-oriented influence and epidemic-oriented influence, which will affect a user X  X  de-cision of whether to perform a diffusion action. We propose the diffusion-targeted social influence model to distinguish and quantify the degree of these three types of influences. Finally, in the third part, we take in the learned influences as factors, and analyze the weighting parameters of each in-fluence in affecting a user X  X  diffusion decision based on the diffusion action history. The learned weighting parameters are then adopted for predicting the trending microblog and the future diffusion activity of a new microblog.
Generally, a user will show different level of interest and possess different level of expertise for various interest cate-gories, e.g., sports, music, history, etc. Therefore, the degree of influence he exerts to his friends, as well as his interest in propagating further information, will be different for var-ious categories. As a result, learning the interest profile will be crucial for detailed analysis of a user X  X  influence on his friends, his diffusion actions, and the prediction of his future action.

Given a user X  X  historical microblogging data, the target of interest profile learning is to map the microblogs to the interest categories C , which in essence is a microblog classi-fication problem. Under the circumstance of microblogging, we are confronted with the following two problems:
In order to address the first problem, we propose to in-clude external knowledge into the training process to assist the classification of microblogs into the related interest cat-egories. The well-edited articles from portal website (such as Sina.com 1 ) are chosen as the external knowledge with the following reasons: 1) the articles in portal website are well-categorized, which means we can directly get the in-terest category labels for these articles; 2) the contents of these articles cover nearly all aspects; and 3) these articles contain rich multimedia information, which is appropriate for our cross-media classification problem. We denote the external knowledge as E = { ( e t , e v ) } , where each data sam-ple includes the textual content e t and the visual content e . Besides, we also have the | E | X |C| label matrix Y of the external knowledge, with each element y ij  X  X  X  1 , 1 } dicating whether the i -th data sample belongs to the j -th interest category.

Although the microblog domain and the external knowl-edge domain are relevant, their data distribution are differ-ent, which makes it infeasible to directly use external data as training samples. Domain adaption is a solution to this problem [29]. Domain adaption aims at solving a learning problem in the target domain by utilizing training data in the source domain, allowing data from the both domains to be transferred to the same embedded space. Traditional domain adaption problems usually target at a single me-dia type, while the problem in our scenario contains two modalities. One naive solution is to apply domain adaption techniques on each media type separately, and then train two unrelated classifiers for text and image. However, the contents of the two media types are not isolated and there is interrelationship between them. For example, the text and image contained in the same microblog data are usually related to the same topic. By applying the classification sep-arately, these beneficial relationship will be ignored. With the above consideration, we propose the Multi-Task Transfer Learning (MTTL) model, which targets at the cross-media, domain-adaptive classification task.
Given the unlabeled microblog data M and the labeled external knowledge E , we target at jointly handling both the textual and visual classification tasks in microblogs. In each task, the external knowledge and microblog data need to be transferred to the same embedded space.

We first delineate two desirable properties for the transfer learning task, namely: 1) maximal alignment of distribution between the source and target domain data in the embedded space; and 2) preservation of the local geometry. 1) Objective 1: Distribution Matching. We employ trans-fer component analysis (TCA) [21] for transfer learning. Specifically, let the kernel matrices defined on the microblog domain, external knowledge domain, and cross-domain data in the embedded space be K M;M , K E;E and K M;E , respec-tively, and the kernel matrix defined on all the data be h ttp://www.sina.com.cn/ then TCA tackles the domain adaptation problem by mini-mizing the MMD distance between the two domains: dimensionality of the embedding space; and L ij = 1 / | M both x i and x j  X  M , L ij = 1 / | E | 2 if both x i and x and L ij =  X  1 / ( | M | X | E | ) otherwise. 2) Objective 2: Locality Preserving. We would like to preserve the local structures of both the microblog and ex-ternal knowledge data, i.e., if two data samples are close to each other in the original domain, this relationship should be preserved in the embedded space [28]. Let G be the k nearest neighbors graph of the original data with g ij = exp (  X  d 2 ij / X  2 ) for x i , x j  X  M  X  E if x i and x j same data domain and x i belongs to the k nearest neighbor set of x j , or vice versa, and g ij = 0 otherwise. Let d resents the distance of x i and x j , and the graph Laplacian matrix of G be L . Note that after domain adaption using TCA, the data projection in the embedded space is Q T K , where the i -th column [ Q T K ] i provides the embedding co-ordinates of x i . Hence, we minimize the following objective function for locality preserving:
With the above two objectives, we are able to map the un-labeled microblog and the labeled external knowledge data into the same embedded space. In order to jointly learn both the textual and visual classifiers, we propose to uti-lize the following multi-task model to explores the intrinsic correlation: where t = 1 indicates the text classification task and t = 2 indicates the image classification task. { W t , b t } are classifi-cation regression parameters. Q t is the embedding matrix of the t -th task. The cross-media consistency is preserved by the  X  2 ; 1 regulation term  X  W  X  2 ; 1 , where W = [ W 1  X  W .

Combining the three objectives in Eq.(2), (3) and (4), the final optimization problem for MTTL can be written as: where A t = K t L t K t +  X K t L t K t , and  X  ,  X  and  X  are the balance parameters.
The problem in Eq.(5) can be reformulated as wh ere S is a diagonal matrix with S jj = 1 2  X  w the following iteration strategy which includes two steps:
Step 1 : Keep Q t fixed, and update W t and b t . By setting the derivative of Eq.(6) w.r.t. b t to zero, we obtain where n t is the number of training samples in the t -th task. Then substituting the derived b t into Eq.(6) and setting the derivative w.r.t. W t to zero, we get where U t = H t K t Q t , V t = H t Y t , and H t = I  X  1 centering matrix.

Step 2 : We update Q t by fixing W t and b t . With W t and b fixed, the objective function in Eq.(6) is reduced to This optimization problem can be efficiently solved by the algorithm introduced in [25].
 The whole algorithm is summarized in Algorithm 1.
 A lgorithm 1 Muti-Task-Transfer-Learning (MTTL) Input : Output: 1: Construct the kernel matrix K based on Eq.(1), the 2: for t = 1 to 2 do 3: Initialize Q t , W t and b t ; 4: end for 5: repeat 6: Update the matrix S ; 7: for t = 1 to 2 do 8: Update b t according to Eq.(7); 9: Update W t according to Eq.(8); 10: Solve Eq.(9) to update Q t ; 11: end for 12: until convergence
The learned transformation matrix and regression param-eters could be adopted to classify new microblogs. By denot-ing k m as the kernel vector of microblog m , the classification corresponding interest category of m , C ( m ), is the category with largest classification output in either textual or visual domain. The interest profile of the user u is then defined as:
Generally, the reposting action of a user may be affected by the following three types of influences: Fi gure 2: Graphical representation of the diffusion-targeted influence model. Three example diffusion actions of user u from the friend u  X  are shown as examples.
Formally, let F I ( u, u  X  , c ) denote the interest-oriented in-fluence receive by user u from his friend u  X  related to the interest category c ; F S ( u, u  X  ) the social-oriented influence receives by u from u  X  ; and F E ( u, m ) the epidemic-oriented influence of the microblog m . A user may receive differ-ent degree of influences from different friends according to either the closeness of their social connection, the friend X  X  authority in the corresponding interest category, or simply the epidemic-degree of the disseminated information. In the following subsection, we elaborate a diffusion-targeted in-fluence model, which efficiently differentiates and quantifies different types of influences.
Consider a diffusion action a = ( u, u  X  , m )  X  A . As afore-mentioned, this action could be triggered by three types of influences. We introduce a latent variable z , which indicates the source of the influence that leads to the diffusion action a . More precisely, z = k, k  X  X  1 , 2 , 3 } indicates that a is caused by the k -th type of influence. In order to infer the latent influence-indicator z for each diffusion action, as well as to quantify the degree of F I , F S and F E , we propose the Diff usion-targeted Influence Model. Figure 2 shows an il-lustrative example of three diffusion actions between user u and his friend u  X  . Our model comprises the following three feature functions which models the three types of influences F , F S and F E , respectively.
Typically, the target of this influence model is to best fit (reconstruct) the observation data, which is usually achieved by maximizing the likelihood function. With these feature functions, we define the objective likelihood function as: where Z = { z 1 , z 2 , ..., z | A | } represents the hidden variables corresponding to all the actions in A , and R is a normal-ization factor. Figure 2 describes an illustration of this fac-torization. Each feature function (denoted in black box) is connected to the corresponding variables.
We intend to find the optimal parameter configuration that maximizes the objective function in Eq.(10). We pro-pose to use the sum-product algorithm [17] to infer the latent variables. Two update rules are defined, one for message sent from variable node to factor node: and one for message sent from factor node to variable node: where  X  is the passed message; f  X   X  z \ f represents that f a neighbor node of the variable z on the factor graph except factor f ; z  X   X  f \ z indicates that z  X  is a neighbor node of the factor f on the factor graph except variable z , and  X  X  z represents all the variables in Z except z .
 After the learning process, the interest-oriented influence F ( u, u  X  , c ), social-oriented influence F S ( u, u  X  ) and epidemic-oriented influence F E ( u, m ) could be achieved by calculating f ( u, u  X  , c ), f S ( u, u  X  ) and f E ( u, m ), respectively.
After learning the influence between the users and their friends, our next target is to utilize these influences for mi-croblog diffusion analysis and prediction. Let h  X  X  X  1 , 1 indicates whether an action ( u, u  X  , m ) is actually performed, i.e., whether user u reposts the microblog m of his friend u . We maximize the conditional probability of user ac-tions given the input social network G and history action set A , i.e., P ( H | G, A ). More precisely, for each action in A , we construct a training instance. We target at finding the optimal parameter  X   X  to maximize the joint conditional probability for all the actions.
 Note that the diffusion action set A used for training in Section 5 contains only those performed actions. As the task here is to predict whether a user will perform a diffu-sion action, we also include unperformed diffusion actions as negative samples into the training set A . Suppose u  X  post a microblog m at time t u  X  , and u does not repost this mi-croblog. Then we add the unperformed actions ( u, u  X  , m ) interval, and t u is the activation time stamp of the user u , i.e., u performs certain activity at the time. The under-lying reasons for choosing these unperformed actions is as follows. If the interval between the posting time of a mi-croblog post and the activation time is too large, then un-performed diffusion action may probably because the user misses the corresponding microblog. On the contrary, if the microblog is presented within the time duration ( t u  X   X  , t and this user does not repost this microblog, then we have good reason to believe that the unperformed diffusion ac-tion is actually caused by the lack of influence, and thus is suitable to be included to the training set.

In order to maximize the probability P ( H | G, A ), we fac-torize the global probability as the product of several local factor functions. We adopt the influences learned in the previous stage as the input factors, and learn the weighting parameters. Integrating all the factors together, we obtain the following log-likelihood objective function:
O (  X  ) = log P ( H | G, A ) = wh ere g ( h k , F (  X  )) acts as the feature functions to link the factors to the corresponding variables, which is defined as  X  ,  X  and  X  are the factor weights, and R is a normaliza-tion factor which ensures that the distribution is normalized with the sum of the probabilities equals to 1. With the function defined in Eq.(11), the objective of the training process is to estimate an optimial parameter configuration of  X   X  = {  X   X  ,  X   X  ,  X   X  } from the training set A that maximizes O (  X  ). The learning process contains two steps: 1) com-pute the gradient for each parameter; and 2) optimize all parameters with gradient descents. Specifically, we first ap-proximate the marginal distribution P ( h k | G, A ). With the marginal probabilities, the gradient of a parameter can be obtained by summing over all the corresponding factor func-tions. Next, we use a gradient descent method to solve the above problem.

Diffusion Prediction . Given a new microblog m new , and the action set A new consisting of all existing diffusion actions related to m new , the learned influences and weight-ing parameters can be used to predict the future participants in disseminating this new microblog. In practice, it is mean-ingless to do prediction for every new microblog since only a small portion will finally break out according to the power-law of information cascades [9]. Therefore, we devise certain criteria for starting the monitoring and prediction, e.g., we delay the prediction until the number of existing diffusion actions | A new | exceeds some minimum number N delay .
The diffusion of microblogs through the social network fits the Independent Cascade (IC) model [16]. IC starts with an initial set of active nodes, and the process unfolds in discrete steps according to the following rule: when a node becomes active, it is given a single chance to activate each currently inactive neighbor. If it succeeds, the corresponding neighbor will become active and follow this rule to activate more neighbors. But whether or not this node succeeds, it cannot make further attempts to active its neighbors in the subsequent rounds. This process runs until no more activations are possible. Following the IC model, for each active user (user that has already performed the diffusion action) u and each of his friend u  X  , we predict whether the action a new = ( u, u  X  , m new ) will be performed by predicting the corresponding indicator h according to: h  X  = arg max
The above prediction process simply assumes that the de-lay in receiving the information will not affect the diffusion action. In other words, no matter how long the message is received after the original posting time, the user will make the same diffusion decision. However, this assumption will not hold under the microblogging circumstance, where peo-ple have more intention in reposting fresh microblogs, and the outbreak of a microblog usually happens during a rela-tively short time period. To handle this problem, we propose to incorporate a time decay factor to the feature functions in Eq.(12) as: where 0 &lt;  X  &lt; 1 is the decay parameter and l is the length of the diffusion path when information reaches the predicted user. This new feature function penalizes long pathes.
With the above prediction process, we are able to predict the future hotness of a microblog in terms of its estimated reposting number, as well as the users who will participate in the diffusion process.
In this section, we present the experimental results for evaluating our proposed approach.
We conduct the experiments on a real-world dataset col-lected from Tencent Weibo 2 , one of the largest microblog-ging platforms in China. We crawled a network with around 2.62 million users and all the microblogs posted by them from July 1st to August 31th in 2013, which gives rise to a total number of 192.3 million microblogs. We could ob-serve a very high percentage of diffusion actions in the col-lected dataset, in which 63% of these microblogs are reposted from friends. The statistics of this dataset is shown in Table 1. In this experiment we focus on the original microblogs, and predict how they will be diffused through this social network. In order to estimate the diffusion lifetime of a microblog, we calculated the average duration between the time a microblog is originally posted to the time that the repost number of this microblog reaches 90% of the total repost number. The average time is less than 4 days, which means most of the diffusion actions are performed within 4 days after a microblog is posted. According to this observa-tion, we divided our dataset into two parts, the training set with microblogs posted in the first 50 days, and the testing set with microblogs posted in the following 8 days, while we exclude the original microblogs posted in the last 4 days from the testing set, as the diffusion process of these mi-croblogs may not have been finished and could not provide a valid groundtruth for our evaluation. For the external knowledge required in the MTTL classification model, we crawled 0.65 million articles (with 0.83 million images) from 20 categories 3 from Sina.com 4 .

Before the evaluation, we first pre-processed the texts and images. Texts were firstly segmented, then stop words, low-frequency words, mentions and urls were removed from the text vocabulary. For visual feature extraction, scale-invariant feature transform (SIFT) descriptors were first ex-tracted from each image. We then trained a code book of 1,000 visual words. With the trained codebook, each de-scriptor was quantized into a visual word. Each image was further represented as a 1,000-D bag-of-visual-words feature. The parameters in MTTL were empiricially set as follows:  X  = 1,  X  = 0 . 1,  X  = 0 . 1,  X  = 0 . 01. The threshold time interval  X  is set to 10 minutes.

One important parameter which will influence the exper-iment performance is the decay factor  X  , which reflects the h ttp://t.qq.com/
The 20 categories are listed in the Appendix. http://www.sina.com.cn/ Fi gure 3: The distribution of repost number for all microblogs in our dataset. simulation for time delay, i.e., the time duration between the initial posting of a microblog and the time that it reaches the user. Figure 4 shows the influence of  X  in affecting the performance of predicting trending microblogs in terms of F1 value (refer to the following subsection for experiment details). As we can see, a large  X  fails to provide enough decay ability, and a small  X  causes too many potential diffu-sion actions to be rejected. Therefore, we adopt the optimal value of 0.95 for  X  .
Our first task is to predict whether a new coming mi-croblog will become trending in the near future. Figure 3 shows the power-law distribution of the repost number in our dataset. We empirically define the trending microblog as one with repost number exceeding 1,000. This results in 168 trending microblogs in the testing set. We also randomly selected 832 non-trending microblogs with more than 200 repost number from the testing set. The prediction perfor-mance is measured for these 1,000 microblogs. We repeated the random selection 20 times, and the average result is re-ported. We compare our approach (denoted as TMP) to the following state-of-the-art methods: Fi gure 4: Influence of  X  , in terms of F1 value of predicting trending microblogs.
Furthermore, we also design two comparing methods by replacing the diffusion-targeted influence model of our frame-work with other influence learning model, and build the pre-diction model based the new types of influence. Specifically, the following influence models are adopted:
The delaying number N delay (refer to Section 6) is set in the range of { 10 , 50 , 100 , 150 , 200 } . Precision, recall and F1 score are used as the evaluation measures. The results for our proposed TMP and the comparing methods are pre-sented in Figure 5. From this figure, we have the follow-ing observations. 1) In terms of F1 measurement, TMP significantly outperforms the comparing methods. Larger delaying number will benefit the prediction performance as more information about the diffusion process is available. 2) OSLOR achieves slightly better performance on precision as compared to TMP, however, the recall performance of OSLOR is far worse than that of TMP. OSLOR is designed to only monitor the most influential users, who are probable to trigger many reposting actions while inevitably less likely to participate in many outbreaking diffusion processes. In contrary, instead of the global influential measurement, our method models the local influences for each user and takes more factors into consideration in the prediction procedure, leading to more comprehensive results. 3) In general, the influence based methods, i.e., TMP, TFG and IPL, perform better than feature based methods, i.e., ETL and PMP. This is because those simple features defined on the small number of early participating users do not possess sufficient predic-tion ability. 4) By comparing TMP with the other two in-fluence based methods, i.e., TFG and IPL, the performance Precision
N Precision improvement demonstrates the effectiveness of our proposed influence model. While our proposed TMP characterizes the network in a more comprehensive way, the other two influ-ence models only model either the interest-related influence or pair-wise influence among users.
The second task targets at predicting which users will par-ticipate in propagating a particular microblog. We compare our proposed TMP with the following methods:
Both of the two comparing methods need to train a pre-diction model, which requires a sufficiently large number of positive training samples to achieve satisfactory perfor-mance. We randomly select 1,000 microblogs whose final repost numbers exceed 200, and we want to predict all the diffusion participants when the retweet number of this mi-croblog (denoted as # early participants) reaches 10, 50, 100, 150 and 200, respectively. The average prediction re-sults for these 1,000 microblogs are presented in Figure 6. The results demonstrate the superiority of our proposed method under all evaluation measurements. In addition, our method also shows more stable prediction performance over different early participant numbers. The underlying reason is that our training procedure does not depend on these early diffusion activities. On the other hand, the two comparing methods need to train a prediction model for each microblog diffusion process, and the performance heavily relies on the number of training samples, i.e., the early participants.
In this part, we evaluate the effects of the three types of in-fluences defined in our framework, namely, interest-oriented influence, social-oriented influence and epidemic-oriented in-fluence; while the interest-oriented influence is closely re-lated to the result of user interest profile learning. Specif-ically, the following cases are evaluated: 1) TMP-P, which replaces our interest profile learning component with LDA to generate topics and infer user interest profile. 2) TMP-I,TMP-S and TMP-E, which removes the interest-oriented influence, social-oriented influence and epidemic-oriented in-fluence from our framework, respectively. The results of predicting trending microblogs in terms of F1 measurement are shown in Figure 7. From the figure, we can see that the performance drops significantly by removing any of the proposed components. Specially, epidemic-oriented influ-ence has the strongest correlation with the diffusion pro-cess of trending microblogs, hence removing it will decrease the prediction performance the most. Besides, by replacing our proposed interest profile learning component with other profile learning method, the performance decreases, which demonstrates the effectiveness of our model. F1 Fi gure 7: Effects of different components, in terms of F1 value of predicting trending microblogs.
In this work, we presented a novel approach for predict-ing the trending microblogs and the subsequent diffusion actions in microblogging network. Specifically, we defined three types of influence, namely, interest-oriented influence, social-oriented influence, and epidemic-oriented influence, which jointly determine the user diffusion action. We de-vised a multi-task transfer learning model for identifying the interest categories of microblogs. A diffusion-targeted influ-ence model was proposed for quantifying different types of influences. We formulated the diffusion prediction as a fac-torization of the user intention of reposting a microblog. Ex-tensive experiments have been conducted on a real-world mi-croblogging dataset to show the superiority of our proposed approach as compared to the state-of-the-art methods.
This research is supported by the Singapore National Re-search Foundation under its International Research Centre @ Singapore Funding Initiative and administered by the IDM Programme Office.
