 to integrate and automate business processes across organisations [1]. To support such developing new methods to improve current workflow management and infrastructure technologies [2-5]. 
Unlike traditional workflow management, an inter-organisational business process involves more than one participating organisation that is loosely coupled with each other. As an autonomous business entity, a participating organisation shall be able to keep the control of its own business as well as the control of its participation in inter-information of participating organisations from being disclosed during the interaction. These requirements can hardly be satisfied by those inter-organisational workflow processes and how these local workflow processes participate in inter-organisational collaboration are made public to all other organisations [2, 3]. Some previous research, such as the workflow view model [6] and the process view model [7] provide support to autonomous organisations and business privacy, we proposed an organisation centred approach called relative workflow [5]. 
Recently, we saw that Web services provide a promising solution to inter-organisational workflow applications. Compared with the traditional Client/Server architecture, Web services behave as independent entities, each having a distinct responsibility within the system and each specifying its own internal behaviour. Since Web services have no dependency on each other, we can use them to connect already exist either within, or outside an organisation. The current basic layer of Web services mainly concentrates on the behaviours between single Web services. More methods are required to co-operate multiple Web services into a reliable and dependable business solution supporting an appropriate level of complexity. 
In this paper, we apply Web service technologies to relative workflows for modelling and implementing inter-organisational business processes. With regards to the support of business collaboration, Web service technology and relative workflow approach complement with each other. From one side, Web service technology provides the required support on loose-coupling at infrastructural level to relative workflows. From the other side, the process management mechanism from relative required business objectives. The use of Web service technology in our relative workflow approach demonstrates a feasible way for organisations to adopt the Web service technology in the field of inter-organisational business process management. 
The specific contributions of this paper are listed below: of our relative workflows framework. Section 3 presents the mapping from the components of relative workflows to the elements defined in Web Service Description Language (WSDL) and the extended WS-BPEL. Section 4 discusses the architecture of workflow management system to facilitate relative workflows on the basis of Web services. Section 5 introduces some related work. Concluding remarks are given in Section 6, together with an indication of the future work. In this section, we briefly review the relative workflow model [5], which is based on a visibility control mechanism. In our context, a collaborative workflow process organisations and their interaction. We call these intra-organisational workflow processes as local workflow processes. Definition 1 Local Workflow Process (LWfP). A local workflow process lp is the set of tasks, and R  X  T  X  T is the set of arcs repres enting the execution sequence. lp , ... , lp n }. An individual LWfP lp i of g is denoted as g . lp i . 
During the collaboration, the organisation applies visibility control to protect the critical or private business information of some workflow tasks from disclosing to other organisations. Table 1 lists the three basic visibility values defined for business interaction and workflow tracking. Due to the high diversity of business collaborations, value table is open for future extension. Definition 3 (Visibility Constraint). A visibility constraint vc is defined as a tuple ( t , v ), where t denotes a workflow task and v  X  { Invisible , Trackable , Contactable }. v ) |  X  t ( t  X  lp . T )}. another organisation g 1 is defined as ( VC , MD , f ), where  X  VC is a set of visibility constraints defined on g  X  f : MD  X  g The generation of g 0 .lp g 1 from g 0 .lp will be discussed later. Definition 5 Relative Workflow Process (RWfP). A relative workflow process g 1 . rp where parts: parts:  X  L , the set of messaging links between LWfPs and PWfPs, consisting of two across organisations. Given the discussion and definition of the relative workflow process above, a necessary procedure for an organisation, g 0 or g 1 , to generate RWfPs constraints, message links and matching functions. Once the perceptions on LWfPs of its partner organisations have been defined, an RWfP can be generated by two more steps: composing tasks and assembling RWfPs. 
The purpose of composing tasks is to hide some private tasks of LWfPs. We choose to merge invisible tasks with the contactable or trackable tasks into composed combined into a blind task. Accord ing to the perception defined from g 1 , an LWfP of g after this step becomes a PWfP for g 1 . In the step of assembling RWfPs, an organisation may assemble its RWfPs from LWfPs, the PWfPs from partner organisations, together with the messaging links. As shown in Figure 1, an RWfP of g 1 consists of the LWfPs, the PWfPs from g 0 , and the messaging links obtained by matching the message descriptions defined in the perceptions of g 0 and g 1 . 
The related algorithms for composing tasks and assembling RWfPs are discussed in [5]. 3.1 Mapping Rules In the current standard stack of Web services , WSDL [8] is used to specify the static types, etc. WS-BPEL [9] is used to define the orchestration and choreography of Web services towards specific business objectiv es. To implement our relative workflow approach on the Web service platform, we designed a mapping from our relative representing relative workflow components in WS-BPEL and WSDL. 
The LWfPs defined in an RWfP can be considered as a network of collaborative intra-organisational workflow processes, wh ich have interactions with each other. Since these LWfPs belong to the same organisation, say g 1 , there is no restriction on visibility. In another word, all details about these LWfPs and the interactions between these LWfPs are available to g 1 . Therefore, we can treat these collaborative LWfPs as a composite workflow process, which represents the interaction behaviours between the involved local Web services. To struct urally unite these collaborative LWfPs, the messaging links between these processes can be represented by WS-BPEL elements response on the event of partner link invocations. Since each component LWfPs can start and be executed independently, therefore the composite workflow process may have multiple starting activities. To deal with this, we can use standard WS-BPEL coordinate the concurrent starting activities. 
Different from LWfPs, the PWfPs defined in an RWfP of organisation g 1 are subject mainly used to provide instructions on necessary interaction interfaces and handling collaboration. Therefore, the PWfPs should be long to a non-executable part of a WS-BPEL document. In this paper, we extend BPEL4WS with a couple of new elements, viz. &lt;perceivableProcesses&gt; and &lt;perceivabl eProcess&gt;. In the extended BPEL4WS, the in the &lt;process&gt; element, is used to describe an individual PWfP. 
In the context of BPEL4WS, the services with which a workflow process interacts are modelled as partner links. Each partner link is characterised by a partnerLinkType. The message links defined in the relative workflow model will be mapped to be partner links connecting Web services, which provide the corresponding business function for the tasks connected by the message links. We use an extended attribute invokeType LWfP and a PWfP, respectively. With the given invokeTypes and messaging directions, represented by this RWfP. 
Finally, we list all mapping rules in Table 2, including major relative workflow components to the elements defined in WSDL and WS-BPEL. 3.2 Process Mapping Example and customer relation management (CRM), and one perceivable process of a manufacturer for production. The retailer X  X  product ordering process collects orders form customers, and then orders products from the manufacturer. At the same time, the CRM process is responsible to record all customer related behaviours. 
Based on the mapping rules listed in Table 2, the RWfP in Figure 2 (a) can be mapped to an extended WS-BPEL document as shown in Figure 2 (b). 
As shown in Figure 2 (b), the underlying Web service interaction behaviours of the two collaborative local workflow processes, i.e. the product ordering process and the CRM management process, are merged as th e main content of th e &lt;process&gt; element. And the Web service behaviours of perceivable production process are described in the &lt;perceivableProcess&gt; element. 4.1 Workflow Management System Architecture implement a workflow management system for each participating organisation, with the Agreement Management Se rvice, the Workflow Modelling Service, the Workflow Engine Service and the Workflow Monitor Service. As shown in Figure 3, the local components and databases, while the external ports to partner organisations. The whole lifecycle of an RWfP through thes e four administrative services goes as follows: First, the Agreement Management Service wraps an LWfP into PWfPs for partner organisations; Thereafter, the Workflow Modelling Service generates RWfPs with the PWfPs from partner organisations; Finally, RWfPs will be executed by the Workflow Engine Services of the host organisation and the partner organisations. And the monitoring over the execution will be handled by the Workflow Monitor Services of involved organisations. 4.2 Administrative Services 4.2.1 Agreement Management Service The function of Agreement Management Service, shown in Figure 3 (a), is to define perceptions and generate PWfPs for partner organisations. The perception generator of the Agreement Management Service extracts the visibility constraints from the manually signed commercial contracts and then defines them into perceptions. The the procedure of composing tasks. The gene rated PWfPs are stored in the Perceivable Workflow Process Database. 4.2.2 Workflow Modelling Service The Workflow Modelling Service, shown in Figure 3 (b), is responsible for local workflow modelling and relative workflow assembling. To generate an RWfP shown in Figure 2 (a), the perceivable process locator of the retailer first enquires the perceivable process checker of each partner organisation X  X  Agreem ent Management Service, such as workflow process assembler can assemble an RWfP with LWfPs and the retrieved PWfPs. The generated RWfPs are stored in the Relative Workflow Process Database. 4.2.3 Workflow Engine Service The function of Workflow Engine Service, shown in Figure 3 (c), is to coordinate and collaboration process flows from an organisation to another organisation, the context organisation accordingly changes too. For ex ample, when the retailer places an order with the manufacturer, the manufacturer handles its collaboration following the RWfP defined from its own perspective, while the retailer continues its collaboration following the RWfP defined in Figure 2 (a). As we can see, in this organisation centric approach, the RWfP may change with the host organisation. Therefore, the workflow coordinator is assigned to keep the correct correspondence of participating workflow instances. Technically, the workfl ow coordinator can recognise whether the process is flowing from an external organisation or from the host organisation by referring the  X  X nvokeType X  attribute of the invoking partner links. 
If the invoking partner link is from an external organisation, the workflow coordinator will first record the instance ID of the requesting workflow instance, and identify that which relative workflow instance in the Relative Workflow Instance Database is in correspondence with this requesting instance, with the help of the Agreement Management Service. Afterwards, the workflow coordinator needs to find the local workflow instances that particip ate in the recognised relative workflow instance. Such association information will assist the workflow manager to perform services. The workflow instantiation and work list handling will be done by the process instantiation starter and the worklist generator , respectively. 4.2.4 Workflow Monitor Service responsible for tracking the local part of a relative workflow instance, i.e. the status of the tasks that belong to LWfPs. As for the perceivable workflows, the monitoring manager will propagate status requests to the c ounterparts of partne r organisations. At locate the LWfPs of the requested instan ces with the help of the Agreement Management Service, and then find the ex ecution status via the local monitor and finally return them to the requesting organisation. With the retrieved information, the requesting organisation X  X  status assembler can update the execution status of the relative workflow instance in the Relative Workflow Instance Database. 
Due to the space limit, we can hardly exte nsively discuss the handling procedure of this architecture in this paper. The Electronic Business XML (ebXML [10]) consortium defined a comprehensive set of specifications for an industrial-strength usage pattern for XML document exchange among trading partners. The ebXML archit ecture allows businesses to find one another by using a registry, define tradin g-partner agreements, and exchange XML messages in support of business operations [1 1]. This proactive collaboration scheme is also supported by our relative workflow approach. We pay special attention to the relativity of participating organisations, which lays the foundation of local autonomy and privacy protection. A flexible visibility control mechanism is proposed to support the relativity. 
Chiu, Li, Liu et al [6, 7] borrowed the notion of  X  X iew X  from federated database systems, and employed a virtual workflow view (or virtual process view) for the inter-organisational collaboration instead of the real instance, to hide internal information. Schulz and Orlowska [4] developed a cross-organisational workflow architecture, on the basis of communication between the entities of a view-based workflow model. Very recently, Issam, Dustdar et al [12] proposed another view-based approach to support inter-organisational workflow cooperation from the motivation of considering an inter-organisational workflow as a cooperation of several pre-established workflows of different organisations. In comparison, our relative workflows approach workflow approach distributes the macro business collaboration into interactions between neighbouring organisations, and these interactions are performed by the relative workflows designed from the perspective of individual organisations. This paper described our work on facilitating relative workflows with Web service technologies to provide a solution for supporting local autonomy and loose-coupling in inter-organisational workflow applications. This work is performed at two levels, one is to extend present WS-BPEL to fully characterise the basic components, processes and operations in the context of relative workflows; the other is to design a new architecture for workflow management systems. The proposed solution presents a comprehensive picture for organisations to adopt Web services for supporting complex business collaboration and interaction. 
We are refining and extending the current research to further consider some important issues, such as the coordination mechanism between participating organisations and the derivability of visibility constraints. Currently, we are developing a prototype for incorporating relative workflows in Web service environment. The work reported in this paper is partly supported by the Australian Research Council discovery project DP0557572. 
