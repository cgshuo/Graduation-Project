 There are a variety of applications that arise from connecting linguistic content X  X e it a word, phrase, document, or entire corpus X  X o geography. Lei-dner (2008) provides a systematic overview of geography-based language applications over the previous decade, with a special focus on the prob-lem of toponym resolution  X  X dentifying and disam-biguating the references to locations in texts. Per-haps the most obvious and far-reaching applica-tion is geographic information retrieval (Ding et al., 2000; Martins, 2009; Andogah, 2010), with ap-plications like MetaCarta X  X  geographic text search (Rauch et al., 2003) and NewsStand (Teitler et al., 2008); these allow users to browse and search for content through a geo-centric interface. The Perseus project performs automatic toponym resolution on historical texts in order to display a map with each text showing the locations that are mentioned (Smith and Crane, 2001); Google Books also does this for some books, though the toponyms are identified and resolved quite crudely. Hao et al (2010) use a location-based topic model to summarize travel-ogues, enrich them with automatically chosen im-ages, and provide travel recommendations. Eisen-stein et al (2010) investigate questions of dialec-tal differences and variation in regional interests in Twitter users using a collection of geotagged tweets.
An intuitive and effective strategy for summa-rizing geographically-based data is identification of the location X  X  specific latitude and longitude X  X hat forms the primary focus of each document. De-termining a single location of a document is only a well-posed problem for certain documents, gen-erally of fairly small size, but there are a number of natural situations in which such collections arise. For example, a great number of articles in Wikipedia have been manually geotagged; this allows those ar-ticles to appear in their geographic locations while geobrowsing in an application like Google Earth.
Overell (2009) investigates the use of Wikipedia as a source of data for article geolocation, in addition to article classification by category (location, per-son, etc.) and toponym resolution. Overell X  X  main goal is toponym resolution, for which geolocation serves as an input feature. For document geoloca-tion, Overell uses a simple model that makes use only of the metadata available (article title, incom-ing and outgoing links, etc.) X  X he actual article text is not used at all. However, for many document col-lections, such metadata is unavailable, especially in the case of recently digitized historical documents.
Eisenstein et al. (2010) evaluate their geographic topic model by geolocating USA-based Twitter users based on their tweet content. This is essen-tially a document geolocation task, where each doc-ument is a concatenation of all the tweets for a single user. Their geographic topic model receives super-vision from many documents/users and predicts lo-cations for unseen documents/users.

In this paper, we tackle document geolocation us-ing several simple supervised methods on the textual content of documents and a geodesic grid as a dis-crete representation of the earth X  X  surface. Our ap-proach is similar to that of Serdyukov et al. (2009), who geolocate Flickr images using their associated to language modeling approaches in information re-trieval (Ponte and Croft, 1998). Discrete cells rep-resenting areas on the earth X  X  surface correspond to documents (with each cell-document being a con-catenation of all actual documents that are located in that cell); new documents are then geolocated to the most similar cell according to standard measures such as Kullback-Leibler divergence (Zhai and Laf-ferty, 2001). Performance is measured both on geo-tagged Wikipedia articles (Overell, 2009) and tweets (Eisenstein et al., 2010). We obtain high accuracy on Wikipedia using KL divergence, with a median error of just 11.8 kilometers. For the Twitter data set, we obtain a median error of 479 km, which improves on the 494 km error of Eisenstein et al. An advan-tage of our approach is that it is far simpler, is easy to implement, and scales straightforwardly to large datasets like Wikipedia. Wikipedia As of April 15, 2011, Wikipedia has some 18.4 million content-bearing articles in 281 language-specific encyclopedias. Among these, 39 have over 100,000 articles, including 3.61 mil-lion articles in the English-language edition alone. Wikipedia articles generally cover a single subject; in addition, most articles that refer to geographically fixed subjects are geotagged with their coordinates. Such articles are well-suited as a source of super-vised content for document geolocation purposes. Furthermore, the existence of versions in multiple languages means that the techniques in this paper can easily be extended to cover documents written in many of the world X  X  most common languages.
Wikipedia X  X  geotagged articles encompass more than just cities, geographic formations and land-marks. For example, articles for events (like the shooting of JFK) and vehicles (such as the frigate USS Constitution ) are geotagged. The latter type of article is actually quite challenging to geolocate based on the text content: though the ship is moored in Boston, most of the page discusses its role in var-ious battles along the eastern seaboard of the USA. However, such articles make up only a small fraction of the geotagged articles.

For the experiments in this paper, we used a full cluded in this dump is a total of 10,355,226 articles, of which 1,019,490 have been geotagged. Excluding various types of special-purpose articles used pri-marily for maintaining the site (specifically, redirect articles and articles outside the main namespace), the dump includes 3,431,722 content-bearing arti-cles, of which 488,269 are geotagged.

It is necessary to process the raw dump to ob-tain the plain text, as well as metadata such as geo-tagged coordinates. Extracting the coordinates, for example, is not a trivial task, as coordinates can be specified using multiple templates and in mul-tiple formats. Automatically-processed versions of the English-language Wikipedia site are provided by icantly simplify the preprocessing. Unfortunately, these versions still need significant processing and they incorrectly eliminate some of the important metadata. In the end, we wrote our own code to process the raw dump. It should be possible to ex-tend this code to handle other languages with little difficulty. See Lieberman and Lin (2009) for more discussion of a related effort to extract and use the geotagged articles in Wikipedia.

The entire set of articles was split 80/10/10 in round-robin fashion into training, development, and testing sets after randomizing the order of the arti-cles, which preserved the proportion of geotagged articles. Running on the full data set is time-consuming, so development was done on a subset of about 80,000 articles (19.9 million tokens) as a training set and 500 articles as a development set. Final evaluation was done on the full dataset, which includes 390,574 training articles (97.2 million to-kens) and 48,589 test articles. A full run with all the six strategies described below (three baseline, three non-baseline) required about 4 months of computing time and about 10-16 GB of RAM when run on a 64-bit Intel Xeon E5540 CPU; we completed such jobs in under two days (wall clock) using the Longhorn cluster at the Texas Advanced Computing Center. Geo-tagged Microblog Corpus As a second eval-uation corpus on a different domain, we use the corpus of geotagged tweets collected and used by sages from 9,500 users tweeting within the 48 states of the continental USA.

We use the train/dev/test splits provided with the data; for these, the tweets of each user (a feed) have been concatenated to form a single document, and the location label associated with each document is the location of the first tweet by that user. This is generally a fair assumption as Twitter users typically tweet within a relatively small region. Given this setup, we will refer to Twitter users as documents in what follows; this keeps the terminology consistent with Wikipedia as well. The training split has 5,685 documents (1.58 million tokens).
 Replication Our code (part of the TextGrounder system), our processed version of Wikipedia, and in-structions for replicating our experiments are avail-Geolocation involves identifying some spatial re-gion with a unit of text X  X e it a word, phrase, or document. The earth X  X  surface is continuous, so a natural approach is to predict locations using a con-tinuous distribution. For example, Eisenstein et al. (2010) use Gaussian distributions to model the loca-tions of Twitter users in the United States of Amer-ica. This appears to work reasonably well for that restricted region, but is likely to run into problems when predicting locations for anywhere on earth X  instead, spherical distributions like the von Mises-Fisher distribution would need to be employed.
We take here the simpler alternative of discretiz-ing the earth X  X  surface with a geodesic grid; this al-lows us to predict locations with a variety of stan-dard approaches over discrete outcomes. There are many ways of constructing geodesic grids. Like Serdyukov et al. (2009), we use the simplest strat-egy: a grid of square cells of equal degree , such as shrink latitudinally, becoming progressively smaller and more elongated the closer they get towards the poles. Other strategies, such as the quaternary trian-gular mesh (Dutton, 1996), preserve equal area , but are considerably more complex to implement. Given that most of the populated regions of interest for us are closer to the equator than not and that we use simple grid system was preferable.

With such a discrete representation of the earth X  X  surface, there are four distributions that form the core of all our geolocation methods. The first is a standard multinomial distribution over the vocabu-lary for every cell in the grid. Given a grid G with cells c  X  equivalent distribution for a single test document d i.e.  X  reverse of the first: for a given word, its distribution over the earth X  X  cells,  X  tribution is over the cells,  X 
This grid representation ignores all higher level regions, such as states, countries, rivers, and moun-tain ranges, but it is consistent with the geocod-ing in both the Wikipedia and Twitter datasets. Nonetheless, note that the  X  to such regions is likely to be much flatter (spread out) but with most of the mass concentrated in a set of connected cells. Those for highly focused point-locations will jam up in a few disconnected cells X  X n the extreme case, toponyms like Spring-field which are connected to many specific point lo-cations around the earth.

We use grids with cell sizes of varying granular-lution, there are a total of 259,200 cells, of which 35,750 are non-empty when using our Wikipedia training set. For comparison, at the equator a cell non-empty) and at d =0 . 1  X  a cell is about 11.3x10.6 km (6,480,000 cells; 170,005 non-empty).

The geolocation methods predict a cell  X  c for a document, and the latitude and longitude of the degree-midpoint of the cell is used as the predicted location. Prediction error is the great-circle distance from these predicted locations to the locations given by the gold standard. The use of cell midpoints pro-vides a fair comparison for predictions with differ-ent cell sizes. This differs from the evaluation met-rics used by Serdyukov et al. (2009), which are all computed relative to a given grid size. With their metrics, results for different granularities cannot be directly compared because using larger cells means less ambiguity when choosing  X  c . With our distance-based evaluation, large cells are penalized by the dis-tance from the midpoint to the actual location even when that location is in the same cell. Smaller cells reduce this penalty and permit the word distributions  X  are harder to predict exactly and suffer more from sparse word counts compared to courser granular-ity. For large datasets like Wikipedia, fine-grained grids work very well, but the trade-off between reso-lution and sufficient training material shows up more clearly for the smaller Twitter dataset. Our methods use only the text in the documents; pre-dictions are made based on the distributions  X  ,  X  , and  X  introduced in the previous section. No use is made of metadata, such as links/followers and infoboxes. 4.1 Supervision We acquire  X  and  X  straightforwardly from the train-ing material. The unsmoothed estimate of word w probability in a test document d Similarly for a cell c word distribution by aggregating all of the docu-ments located within c We compute the global distribution  X  of all documents D in the same fashion.

The word distribution of document d to the global distribution  X   X  empirical probability of having seen a word once in the document, motivated by Good-Turing smooth-ing. (The cell distributions are treated analogously.) The distributions over cells for each word simply renormalizes the  X  tribution: A useful aspect of the  X  distributions is that they can be plotted in a geobrowser using thematic mapping techniques (Sandvik, 2008) to inspect the spread of a word over the earth. We used this as a simple way to verify the basic hypothesis that words that do not name locations are still useful for geolocation. In-deed, the Wikipedia distribution for mountain shows high density over the Rocky Mountains, Smokey Mountains, the Alps, and other ranges, while beach has high density in coastal areas. Words without inherent locational properties also have intuitively correct distributions: e.g., barbecue has high den-sity over the south-eastern United States, Texas, Ja-maica, and Australia, while wine is concentrated in France, Spain, Italy, Chile, Argentina, California,
Finally, the cell distributions are simply the rela-tive frequency of the number of documents in each cell:  X 
A standard set of stop words are ignored. Also, all words are lowercased except in the case of the most-common-toponym baselines, where uppercase words serve as a fallback in case a toponym cannot be located in the article. 4.2 Kullback-Leibler divergence Given the distributions for each cell,  X  we use an information retrieval approach to choose a location for a test document d ilarity between its word distribution  X  each cell, and then choose the closest one. Kullback-Leibler (KL) divergence is a natural choice for this (Zhai and Lafferty, 2001). For distribution P and Q , KL divergence is defined as: This quantity measures how good Q is as an encod-ing for P  X  the smaller it is the better. The best cell  X  c the test document: The fact that KL is not symmetric is desired here: the other direction, KL (  X  the test document is a good encoding for. With KL (  X  d word is weighted by the probability of the word in the test document,  X  the divergence is more sensitive to the document rather than the overall cell.

As an example for why non-symmetric KL in this order is appropriate, consider geolocating a page in a densely geotagged cell, such as the page for the Washington Monument. The distribution of the cell containing the monument will represent the words from many other pages having to do with muse-ums, US government, corporate buildings, and other nearby memorials and will have relatively small val-ues for many of the words that are highly indicative of the monument X  X  location. Many of those words appear only once in the monument X  X  page, but this will still be a higher value than for the cell and will weight the contribution accordingly.

Rather than computing KL (  X  tire vocabulary, we restrict it to only the words in the document to compute KL more efficiently: Early experiments showed that it makes no differ-ence in the outcome to include the rest of the vocab-ulary. Note that because  X  no zeros, so this value is always defined. 4.3 Naive Bayes Naive Bayes is a natural generative model for the task of choosing a cell, given the distributions  X  and  X  : to generate a document, choose a cell c cording to  X  and then choose the words in the docu-ment according to  X  This method maximizes the combination of the like-lihood of the document P ( d probability  X  4.4 Average cell probability For each word,  X  in the grid. A simple way to compute a distribution for a document d the distributions for all words to compute the aver-age cell probability (ACP):
This method, despite its conceptual simplicity, works well in practice. It could also be easily modified to use different weights for words, such as TF/IDF or relative frequency ratios between ge-olocated documents and non-geolocated documents, which we intend to try in future work. 4.5 Baselines There are several natural baselines to use for com-parison against the methods described above. Random Choose  X  c distribution over the entire grid G .
 Cell prior maximum Choose the cell with the highest prior probability according to  X  :  X  c arg max c Most frequent toponym Identify the most fre-quent toponym in the article and the geotagged Wikipedia articles that match it. Then identify which of those articles has the most incoming links (a measure of its prominence), and then choose  X  c to be the cell that contains the geotagged location for that article. This is a strong baseline method, but can only be used with Wikipedia.

Note that a toponym matches an article (or equiv-alently, the article is a candidate for the toponym) ei-ther if the toponym is the same as the article X  X  title, or the same as the title after a parenthetical tag or comma-separated higher-level division is removed. For example, the toponym Tucson would match ar-ticles named Tucson , Tucson (city) or Tucson, Ari-zona . In this fashion, the set of toponyms, and the list of candidates for each toponym, is generated from the set of all geotagged Wikipedia articles. The approaches described in the previous section are evaluated on both the geotagged Wikipedia and Twitter datasets. Given a predicted cell  X  c for a docu-ment, the prediction error is the great-circle distance between the true location and the center of  X  c , as de-scribed in section 3.
 Grid resolution and thresholding The major pa-rameter of all our methods is the grid resolution. For both Wikipedia and Twitter, preliminary ex-periments on the development set were run to plot the prediction error for each method for each level of resolution, and the optimal resolution for each method was chosen for obtaining test results. For the Twitter dataset, an additional parameter is a thresh-old on the number of feeds each word occurs in: in the preprocessed splits of Eisenstein et al. (2010), all vocabulary items that appear in fewer than 40 feeds are ignored. This thresholding takes away a lot of very useful material; e.g. in the first feed, it removes both  X  X irkland X  and  X  X edmond X  (towns in the East-side of Lake Washington near Seattle), very useful information for geolocating that user. This suggests that a lower threshold would be better, and this is borne out by our experiments.

Figure 1 graphs the mean error of each method for different resolutions on the Wikipedia dev set, and Figure 2 graphs the distribution of error distances dev set. These results indicate that a grid size even dev set increased slightly, from 323 km to 348 and the minimum.

For the Twitter dataset, we considered both grid size and vocabulary threshold. We recomputed the distributions using several values for both parame-ters and evaluated on the development set. Table 1 shows mean prediction error using KL divergence, for various combinations of threshold and grid size. Similar tables were constructed for the other strate-surprising, given the small size of the corpus. Over-all, there is a less clear trend for the other methods
Thr. 0.1 0.5 1 5 10 in terms of optimal resolution. Our interpretation of this is that there is greater sparsity for the Twit-ter dataset, and thus it is more sensitive to arbitrary aspects of how different user feeds are captured in different cells at different granularities.

For the non-baseline strategies, a threshold be-tween about 2 and 5 was best, although no one value in this range was clearly better than another. Results Based on the optimal resolutions for each method, Table 2 provides the median and mean er-rors of the methods for both datasets, when run on the test sets. The results clearly show that KL di-vergence does the best of all the methods consid-ered, with Naive Bayes a close second. Prediction on Wikipedia is very good, with a median value of 11.8 km. Error on Twitter is much higher at 479 km. Nonetheless, this beats Eisenstein et al. X  X  (2010) me-dian results, though our mean is worse at 967. Us-ing the same threshold of 40 as Eisenstein et al., our results using KL divergence are slightly worse than theirs: median error of 516 km and mean of 986 km.
The difference between Wikipedia and Twitter is unsurprising for several reasons. Wikipedia articles tend to use a lot of toponyms and words that corre-late strongly with particular places while many, per-haps most, tweets discuss quotidian details such as what the user ate for lunch. Second, Wikipedia arti-cles are generally longer and thus provide more text to base predictions on. Finally, there are orders of magnitude more training examples for Wikipedia, which allows for greater grid resolution and thus more precise location predictions. Ships One of the most difficult types of Wikipedia pages to disambiguate are those of ships that either are stored or had sunk at a particular location. These articles tend to discuss the exploits of these ships, not their final resting places. Location error on these is usually quite large. However, prediction is quite good for ships that were sunk in particular battles which are described in detail on the page; examples are the USS Gambier Bay , USS Hammann (DD-412), and the HMS Majestic (1895). Another situa-tion that gives good results is when a ship is retired in a location where it is a prominent feature and is thus mentioned in the training set at that location. An example is the USS Turner Joy , which is in Bre-merton, Washington and figures prominently in the page for Bremerton (which is in the training set).
Another interesting aspect of geolocating ship ar-ticles is that ships tend to end up sunk in remote bat-tle locations, such that their article is the only one located in the cell covering the location in the train-ing set. Ship terminology thus dominates such cells, with the effect that our models often (incorrectly) geolocate test articles about other ships to such loca-tions (and often about ships with similar properties). This also leads to generally more accurate geoloca-tion of HMS ships over USS ships; the former seem to have been sunk in more concentrated regions that are themselves less spread out globally. Lieberman and Lin (2009) also work with geotagged Wikipedia articles, but they do in order so to ana-lyze the likely locations of users who edit such ar-ticles. Other researchers have investigated the use of Wikipedia as a source of data for other super-vised NLP tasks. Mihalcea and colleagues have in-vestigated the use of Wikipedia in conjunction with word sense disambiguation (Mihalcea, 2007), key-word extraction and linking (Mihalcea and Csomai, 2007) and topic identification (Coursey et al., 2009; Coursey and Mihalcea, 2009). Cucerzan (2007) used Wikipedia to do named entity disambiguation, i.e. identification and coreferencing of named enti-ties by linking them to the Wikipedia article describ-ing the entity.

Some approaches to document geolocation rely largely or entirely on non-textual metadata, which is often unavailable for many corpora of interest, Nonetheless, our methods could be combined with such methods when such metadata is available. For example, given that both Wikipedia and Twitter have a linked structure between documents, it would be possible to use the link-based method given in Back-strom et al. (2010) for predicting the location of Facebook users based on their friends X  locations. It is possible that combining their approach with our text-based approach would provide improvements for Facebook, Twitter and Wikipedia datasets. For example, their method performs poorly for users with few geolocated friends, but results improved by combining link-based predictions with IP address predictions. The text written users X  updates could be an additional aid for locating such users. We have shown that automatic identification of the location of a document based only on its text can be performed with high accuracy using simple super-vised methods and a discrete grid representation of the earth X  X  surface. All of our methods are simple to implement, and both training and testing can be easily parallelized. Our most effective geolocation strategy finds the grid cell whose word distribution has the smallest KL divergence from that of the test document, and easily beats several effective base-lines. We predict the location of Wikipedia pages to a median error of 11.8 km and mean error of 221 km. For Twitter, we obtain a median error of 479 km and mean error of 967 km. Using naive Bayes and a simple averaging of word-level cell distribu-tions also both worked well; however, KL was more effective, we believe, because it weights the words in the document most heavily, and thus puts less im-portance on the less specific word distributions of each cell.

Though we only use text, link-based predictions using the follower graph, as Backstrom et al. (2010) do for Facebook, could improve results on the Twit-ter task considered here. It could also help with Wikipedia, especially for buildings: for example, the page for Independence Hall in Philadelphia links to geotagged  X  X riend X  pages for Philadelphia, the Liberty Bell, and many other nearby locations and buildings. However, we note that we are still pri-marily interested in geolocation with only text be-cause there are a great many situations in which such linked structure is unavailable. This is especially true for historical corpora like those made available
The task of identifying a single location for an en-tire document provides a convenient way of evaluat-ing approaches for connecting texts with locations, but it is not fully coherent in the context of docu-ments that cover multiple locations. Nonetheless, both the average cell probability and naive Bayes models output a distribution over all cells, which could be used to assign multiple locations. Further-more, these cell distributions could additionally be used to define a document level prior for resolution of individual toponyms.
Though we treated the grid resolution as a param-eter, the grids themselves form a hierarchy of cells containing finer-grained cells. Given this, there are a number of obvious ways to combine predictions from different resolutions. For example, given a cell of the finest grain, the average cell probability and naive Bayes models could successively back off to the values produced by their coarser-grained con-taining cells, and KL divergence could be summed from finest-to-coarsest grain. Another strategy for making models less sensitive to grid resolution is to smooth the per-cell word distributions over neigh-boring cells; this strategy improved results on Flickr photo geolocation for Serdyukov et al. (2009).
An additional area to explore is to remove the bag-of-words assumption and take into account the ordering between words. This should have a num-ber of obvious benefits, among which are sensitivity to multi-word toponyms such as New York , colloca-tions such as London, Ontario or London in Ontario , and highly indicative terms such as egg cream that are made up of generic constituents.
 This research was supported by a grant from the Morris Memorial Trust Fund of the New York Com-munity Trust and from the Longhorn Innovation Fund for Technology. This paper benefited from re-viewer comments and from discussion in the Natu-ral Language Learning reading group at UT Austin, with particular thanks to Matt Lease.

