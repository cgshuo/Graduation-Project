 To enhance the quality of document search, recent research studies have started to exploit the social networks of users by considering social influence (SI), measurement of the affin-ity between a query user and the publisher of a retrieved document, in addition to the commonly used textual rele-vance (TR). We refer to such document search that con-siders social networks as social web search . In this paper, we focus on efficient top-k social web search and propose two search strategies: (i) TR-based search and (ii) SI-based search that tailor document examination orders upon TR and SI, respectively. We evaluate the proposed strategies through experimentation.
 H.2 [ Database Management ]: Database applications Algorithms ,Performance top-k , social web search, search algorithms, social influence
Numerous web pages, blogs, forum comments, etc, collec-tively termed as documents in this paper, have been pub-lished by individuals and made accessible online. Document search becomes essential for us to find information of inter-est. A query for document search consists of a set of query keywords . According to queried keywords, top-k documents with the largest textual relevance (TR) to a query are re-turned. Here, the TR of a document measures the degree of matching between the document and the query keywords. Example 1 illustrates a top-1 search based only on TR.
Example 1. (Top-k search based on TR only) .In this example, three documents, d 1 , d 2 and d 3 are published by John and Paul. Suppose that George issues a query X  X IKM X . Figure 1 lists the three documents together with their occur-rences of keyword  X  X IKM X , TR (based on TF/IDF, which will be discussed later) and document publishers. Since d has the largest TR (because of its largest occurrence of  X  X IKM X ), it is returned as the top-1 search result.

As reported by many studies, TR alone do not always provide the most suitable measurement of document rele-vance [3, 5], thus unable to offer search result of very good quality. However, this situation can be improved by incorpo-rating other ranking heuristics. One of the most promising directions is to incorporate document search with social net-works between the query user and document publishers [3, 8, 9], which in turn can be explicitly extracted from online social networking services such as MySpace 1 , Facebook 2 or inferred from other sources (e.g., citation network DBLP and CiteSeer 4 ). Intuitively, advices, recommendations and information from friends (or friends X  friends in the same com-munity) are more likely to be interesting and convincing than those from others. Recent research studies [3, 8, 9] found that social influence (SI), which measures the close-ness/affinity between the query user and document publish-ers in a social network, can be integrated in existing search algorithms to improve document search effectiveness. Logi-cally, the closer a document publisher is located in a social network, the stronger the social influence from the publisher exerts to the query user. As a result, the relevance of a docu-ment to a query can be measured as the TR of the document to query keywords plus the SI of corresponding publishers to a query user. In this paper, we refer to document search that considers users X  social networks as social web search . We use Example 2, extended from Example 1, to illustrate the idea of top-k social web search. In particular, we focus on efficient top-k socialwebsearchinthispaper.

Example 2. (Top-k Social Web Search) .Suppose that a social network, which captures collaboration relation-ship among George, John, Paul and Ringo, is now available http://www.myspace.com http://www.facebook.com http://www.informatik.uni-trier.de/  X  ley/db http://citeseer.ist.psu.edu (as shown in Figure 2). The SI X  X  of others with respect to George (measured by distance-based social influence as to be discussed in the next section) is shown in Figure 3. In this situation, if SI is more weighted by a query than TR, d 2 published by John would be returned to George instead of d by Paul.
 Figure 2: Social network
Since the TR of documents to a query and the SI of document publishers to a query user are independent from each other, strategies to perform efficient top-k social web searches need to examine these two factors seamlessly to-gether. This renders a need for new search algorithms for social web searches.

In this paper, we develop two search strategies: (1) TR-based search and (2) SI-based search . The main idea be-hind them is that the top-k result documents should have large TR and/or large SI. Searches according to one of these two factors are very likely to quickly locate candidate re-sult documents. Thus, as briefly described, TR-based search operates in a pipeline fashion. It iteratively examines doc-uments in non-ascending order of TR, and determines the corresponding SI on the run. Likewise, SI-based search also performs in a pipeline fashion. It accesses documents in non-ascending order of SI and determines the TR of candidate documents. We implemented the two search strategies and evaluated their performance through experiments. The ex-periment indicates that the SI-based approach outperforms the TR-based approaches for all evaluated  X  .

The remainder of the paper is organized as follows. We first discuss (i) the quantitative measurements of document TR and user SI, (ii) a scoring function upon TR and SI, and (iii) related work in Section 2. Next, we present the TR-based search and SI-based search strategies in Section 3. Further, we report our performance evaluation in Section 4. Finally we conclude this paper and state our future direc-tions in Section 5.
In this section, we formalize (i) textural relevance (TR) and (ii) social influence (SI) and (iii) a scoring function on TR and SI in determining the relevance of documents with respect to users and their queries. Further, we review some existing works related to this research.
Without loss of generality, we use the TF/IDF [2] to mea-sure the TR of a document to a query in this paper. TF/IDF comprises: (i) TF (i.e., term frequency) that measures the frequencies of individual query terms (i.e., keywords) in doc-uments and (ii) IDF (i.e., inverse document frequencies) that measures the specificities of given keywords among all doc-uments to determine the importance of the keywords in an overall rating. We denote the TF of a keyword w in a doc-ument D by TF D ( w )andtheIDFofakeywordinadoc-ument set D by IDF D ( w ). IDF D ( w ) can be determined as aquery Q is defined as in Equation (1):
TR D ( Q )= TFIDF D ( Q )= We represent a social network as a weighted directed graph G , in which a set of nodes U represent all users and each edge ( u, v ) connecting from node u to node v bears a positive weight  X  ( u, v ) denoting the closeness of two connected users. A path P ( u, v )from u to v is a set of connected edges (i.e., ( n and n | P ( u,v ) | = v . Then, an intuitive measurement of close-ness between two users in a network is the inverse of their shortest path distance between users, i.e., the sum of the weights of edges on the shortest path [9]. The shorter the shortest path distance between two users is, the closer the users are considered to be. We refer to this measurement as  X  distance-based social influence  X . Equation (2) calculates the distance-based social influence of v exerting to u .
SI v ( u )= where P ( u, v ) denotes all possible paths from u to v in
The SI shown in Example 2 (with all edge weights assigned to 1) adopts this distance-based social influence.
As suggested in [3, 8, 9], both TR and SI are consid-ered together in determining the document ranking. Since these two measurements are not comparable, maximum TR (
MaxTR ) and maximum SI ( MaxSI ) are introduced to nor-malize the TR and SI of a document D published by a user v with respect to a query Q issued by u (i.e., TR D ( Q )and SI v ( u ), respectively). As such, normalized TR and normal-ized SI are bounded between 0 and 1. Here, we ignore D u the set of documents published by u in top-k social web search as D u is already known to u . Accordingly, MaxTR and MaxSI are defined below in Equation (3) and Equa-tion (4), respectively.
 where D and U represent an entire document set and all users, respectively.

Thereafter, a weighting factor  X  is introduced to allocate weights on normalized TR and SI, resulting in a scoring function on a document D against a user u and the corre-sponding query Q as stated in Equation (5).

Score D ( Q, u )=
In the equation, a larger  X  means a bigger contribution of TR to the final score and vice versa. Finally, since only textually relevant documents are desired, those with zero TR  X  X  are ignored from processing.
Recently, the ideas of integrating social networks in doc-ument searches attract a lot of attention from the research communities [3, 6, 8, 9]. According to the aforementioned findings, one X  X  interests can be very similar to her friends X . In [6], social relationships are incorporated in collaborative filtering. As such, searches on documents can be extended to incorporate social influence (SI) to improve the quality of search result. To capture SI, various definitions are pro-posed. In [9], the number of users between one and another in the social network is used to reflect their social influence. As discussed earlier, this is a distance-based SI measure-ment. Meanwhile, similarity-based SI measurements are also studied in [3, 8]. In [8], number of common tags is used to measure the similarity between two users in social-tagging networks. Delicious 5 applies this idea. In [3], one X  X  SI to another is measured by (i) their similarity, (ii) directness of their social relationship, or (iii) combined (i) and (ii).
Different from previous works emphasizing on search effec-tiveness, this paper X  X  focus is on the search efficiency. The two proposed approaches operate in a pipeline fashion, in contrast to existing approaches that perform searches in a step-wise manner. TR-based search incorporates SI compu-tation as early as textually relevant documents are retrieved. Besides, our SI-based search enables us to quickly determine documents with the largest SI. This strategy has not been studied so far.
In this section, we detail the two search strategies for effi-cient top-k social web search. Section 3.1 presents the TR-based search and Section 3.2 details the SI-based search.
The basic idea of TR-based search is to iteratively fetch unexamined documents with the largest TR to a query Q , through accessing an inverted file. For each fetched docu-ment D , it checks the corresponding publisher v .Next,it traverses the social network to determine v  X  X  SI to a query user u . Thereafter, D  X  X  ranking score is determined based on both D  X  X  TR and v  X  X  SI with respect to a weighting fac-tor  X  (see Equation (5)). The search completes when all documents with non-zero TR are examined.
 We use our running example to illustrate the algorithm. Suppose that  X  is set to 0 . 2. Paul X  X  d 3 with the largest TR is accessed first and put into R . Later, d 2 with the final score (i.e.,  X  0.867) larger than d 3  X  X  (i.e., 0.6) is accessed. Then R is updated to { d 2 } . Since no other textually relevant document remains unvisited, the search terminates and d 2 is returned as the top-1 search result.
 Further, we can see that in TR-based search, repeated SI computation is invoked, thereby causing high network traversal costs. Observing that all SI computations are rooted from u and share some overlapped traversals, we incorpo-rate a SI cache to improve subsequent SI computations in our implementation. The design of the cache is to preserve the SI of every visited user traversed from u . Whenever a new path needs computed, the search can look up the dis-http://delicious.com tance from the cache or start from those appropriate visited nodes instead of u . In our example, after Paul X  X  SI is deter-mined, John X  X  SI can be quickly accessed from the cache as John should have been visited before Paul on the way from George. It is noteworthy that caching SI for some visited users is highly feasible. Consider node IDs and SI are stored in 4-byte integers and 4-byte floating numbers, respectively. A few MB main memory is sufficient to cache the SI of sev-eral million users. Besides, by using a hash-table to index the SI for each user, the lookup of cached SI is very efficient. SI-based search examines documents according to their SI, i.e., those documents whose publishers have larger SI to a query user u are accessed earlier through gradual net-work expansion rooted at u . Then, for each document, the ranking score based on both TR and SI are derived. If it is among the k largest scores obtained so far, it is maintained as one of the candidate documents. After an entire network is examined, all candidate documents are returned as the top-k result documents.

Refer to our running example with  X  set to 0.2. John is first visited and his d 2 remains as a candidate of top-1 re-sult. Next, Ringo is accessed but he publishes no document. Later, Paul is examined. Since his d 3 provides a smaller score (i.e., 0 . 6) than d 2  X  X  (i.e., 0.867), d 2 is retained as the candidate and finally returned as the search result. In this section, we evaluate the efficiency of our proposed TR-based search and SI-based search (labeled as TRSearch and SISearch , respectively). Here, the performance metric is elapsed time that measures the time duration from when a query is initiated to when a complete result is computed.
In this evaluation, we use a fixed document set D ,which consists of 26,230 unique keywords in 10,000 documents, ob-tained from the ICWSM 2009 Spinn3r Dataset [1] while us-ing social networks of different scales. All experimented so-cial networks are extracts from the one used in [4]. They contain subsets of users and preserve the network charac-teristics such as the number of edges between users follow-ing the same power-law distributions [7]. We distribute the documents uniformly over each network. In what follows, we test the sensitivity of all the approaches against different factors, namely, the size of a social network (i.e., the num-ber of users |U| ), the number of query keywords ( |Q| ), the balancing parameter (  X  ) and desired result size k . Table 1 summarizes the parameters, values and default values used. Parameters Values Defaults No. of documents ( |D| ) 10,000 10,000
Social network size ( |U| ) 1,000, 10,000
Weight (  X  ) 0.1, 0.3, 0.5, No. of req. documents ( k ) 1, 10, 20, 50 10 No. of query keywords ( |Q| ) 1, 2, 3, 4, 5 3
Experiment results presented in the following subsections are the average of 100 trial runs upon Windows XP comput-ers equipped with Intel(R) Core(TM) 2 Duo 3.16GHz CPU
Figure 4: Exp. on |U|
Figure 6: Exp. on  X  and 4GB RAM. All the approaches are implemented using Java 1.6.0. For SI computation, we assume all edge weights in social networks are set to one.
The first experiment set examines the performance of both approaches against different social network sizes expressed as the number of users |U| ranging from 1,000 up to 100,000, while all other factors are fixed at their defaults. With a fixed document set, a large |U| results in large SI computation overhead as wide network traversals are in-evitably incurred to reach the publishers of result docu-ments. As shown in Figure 4, elapsed times incurred for all the approaches gradually increase from about 1 second up to 200 seconds while |U| grows from 1,000 to 100,000.
On the other hand, we can see the differences between two approaches narrow when the network is expanded. Precisely, the performance of SISearch becomes similar to TRSearch when a very large network is experimented. This is because in a larger network, many users who provide result docu-ments in general are farther away from a query user and they provide smaller and very similar SI. In this case, rank-ing scores are mostly determined by TR.
Next, we examine the impact of the number of query keywords |Q| . Here, query keywords are randomly chosen. While more keywords are specified, more documents that have matched keywords are considered to be textually rel-evant and accessed. With all the other parameters set as defaulted, we can see from Figure 5 that elapsed times for TRSearch increase as |Q| grows from 1 to 5 since more tex-tually relevant documents have to be examined. SISearch provides almost fixed elapsed times for different |Q| as it visits the user-specific inverted files of all users in a network. Here, SISearch provide better and more stable performance. Further, we examine the impact of the weights between TR and SI,  X  by varying it from 0.1 to 0.9 and keep others to default values. Then we change k from1to50andset others to default. We can see from Figure 6 and 7 that  X  and k do not affect the TRSearch and SISearch performance. This is because they both access almost the same amount of documents regardless of  X  and k .

From the evaluation presented in this section, we observe that while  X  and k have no effect on performance. With a large network in terms of |U| , TRSearch and SISearch provide very similar performance. Otherwise, SISearch should be used for small social network. Also, SISearch performance is not affected by | Q | .
In this paper, we researched efficient top-k social web search that considers both textual relevance (TR) and so-cial influence (SI) in determining the document relevance to a query. We proposed two search strategies, TR-based search and SI-based search. We also performed experiments to evaluate their performance against different factors.
In fact, the two proposed approaches still have a lot of optimization opportunities to explore. For TRSearch ,exam-ination of all textual relevant documents could be avoided if unexamined documents have too low TR for them to be the search result even though the corresponding publish-ers produces high SI score. Similarly, SISearch could avoid traversing the whole network if those far away users can only produce too low SI scores for their documents. As our fu-ture work, we investigate optimization techniques for these two strategies to enhance their efficiency. Also, we develop a cost model and conduct a more comprehensive performance evaluation to evaluate these two approaches.
In this research, Ken C. K. Lee was in part supported by University of Massachusetts Dartmouth Chancellor X  X  Re-search Fund and UMass Joseph Healey Endowment 2011.
