 The information overload problem has made the task of decision making a real chal-lenge for Internet users especially for online shoppers. Recommender System (RS) is a interesting items from a huge information source. Most previous work has focused on improving the accuracy of RS. These studies inclined to use the accuracy metrics such as RMSE, MAE to measure the performance of recommendation algorithm. 
In addition to recommendation accuracy, more factors should be considered to sa-tisfy users X  need, such as diversity. For e-commerce websites, to recommend users ucts grow to be popular. Chris Anderson coined the evolutions from niche products to popular ones on Internet market as  X  X he Long Tail X . Most of successful Internet companies, including Amazon, Yahoo, and Apple etc., have used long-tail as part of their business strategy to improve their online services. 
A good top-N recommendation list with diversity in e-commerce is a list of items (e.g. they do not belong to the same product category). In this paper, we address the importance of the diversity from a psychological perspective which has been over-looked by previous studies. The second contribution of this paper is that a general RS framework (DivRec) is proposed to improve diversity without lowering accuracy. The effectiveness of the framework is demonstrated through experiments on a real dataset. Section 2. We motivate the diversity into recommendation with a psychological expe-Section 6 concludes the paper. The Collaborative Filtering (CF) which establishes the connection between users and items is commonly used in recommendation systems. Two popular approaches are the gression-Based Latent Factor Model [2], Probabilistic Matrix Factorization [3], and Singular Value Decomposition [4]. 
In recent year, there has been some work on diversifying the recommendation lists to increase users X  satisfactions. These works can be classified to two categories based on the way how diversity is measured: (1) Content-based diversity, which is known as an instance of p-dispersion problem [5]. Most of the content-based recommendation diversification methods so far are attributes based. In [6], the diversity of recommen-items. In [7], item explanation is employed to measure the distance between items to works to use temporal information for reco mmendation diversification, e.g. [8] ex-amines the temporal characteristics of item rating patterns to increase recommenda-tion diversity, and [9] increases temporal diversity with product purchase intervals. 
There are few previous work discuss why diversity is important especially for e-commerce websites, although they proposed the approaches how to improve the diversity of recommendation lists. Another problem is how to diversify the item lists efficiently. Taking attribute-based method as an example, the search step for analyz-ing intrinsic properties of items is time consuming when the product database is large, especially when the attributes are not le veraged by recommendation strategies (some related work has been discussed in [5]). We focus on how to tackle these problems in this paper. We start our work with a psychological study in the next section. Associative Interference has been widely studied in psychology and advertising fields [10] [11]. The core of this theory is that the amount of the retroaction will increase in material in learning and memory. Associative Interference studies the negative effect between RS and users when recommendations provided are similar to each other. 
We simulate the interactions between RS and online shoppers through a psychologi-cal survey. The participants are 50 undergraduates who had online shopping experience. They had been asked to provide their demographic data. In our survey, each recom-mendation was tagged with two attributes, product relevance and product category. Group (DG). Participants in SG were offered with relevant recommendations which concentrate on same few categories. Unlike SG, recommendations in DG are both rele-vant and diverse in product categories. We did not select personalized CF algorithms for these recommendations to avoid the impact of the quality of the algorithm itself. 
The survey was conducted as follows. In each time all participants were offered a questionnaire with 8 recommendations followed a simple product introduction. The participants were asked to rate these recommendations on a 1-5 score scale. All par-rating tasks, participates were asked to evaluate the whole recommendations. 
In our survey, we recommended 453 products to DG users and 221 products to SG from two groups are examined to verify the hypothesis. In Fig. 1, the average rating mendations. There is negative effect within the more similar recommendation lists. values in DG are larger than the value of SG. The ratings in SG decrease with time. significant within similar item set and lowers the recommendation quality. riance is as follows: the null hypothesis of our survey is that a product receives same ratings in any case. We reject the null hypothesis with 99% confidence with the p-value 7.65e-04 which is less than 0.01. 
As the final part of our survey, the participants are asked about how to measure the recommendation performance. In summary, 94% said RS should offer the user rele-vant product and 6% chose neutral option.82% said RS should provide more different recommendations and 14% were neutral about the choice. 76% of participants in SG responded that the diversity of recommendations is more important. It is apparent that a good recommendation list should contai n products less similar to each other. The observations in Section 3 motivate us to design a new framework to ensure both recommendation accuracy and diversity in recommendation lists. Moreover, we our goals in this section. 4.1 Diversification Framework To the best of our knowledge, the first work combing result diversity and relevance is Maximal Marginal Relevance (MMR) [13] from information retrieval. It aimed to reduce the redundancy within search results. In MMR, each remaining document is checked which combines the relevance to query and the similarity with resulted list. It is defined as: ure the relevance of D i to the query Q and the similarity between two documents re-spectively. 
Our method, which has resemblance with MMR, exploits the fact that similar rec-ommendations will lower the diversity of a recommendation list. We penalize the items that similar to those has been selected. We call this variation as relev-mendation result set S by maximizing the following objective function: and diversity. The reasons for this combinat ion are from two-fold: (1) We do realize top-N recommendations; (2) Some methods su ch as SVD can be used to extract item attributes efficiently for following diversification step. above framework, we resort to the matrix factorization method, Singular Value De-space of dimensionality f so the user-item interactions are modeled as inner products squared error function: where the regularization parameter  X   X  is determined by cross validation. 
For an item  X  , the elements in vector  X   X  measure the extent for each corresponding factor. Intuitively, the vectors corresponding to two similar items are more closed to each other which has been verified in [15]. Thus,  X  X  X   X   X , X   X  can be cosine similarity: 4.2 Improvement on Recommendation Accuracy In the above framework relevance-aware max-sum diversification , we seek to tradeoff achieved at the cost of recommendation accuracy loss. However, even if a RS is good performance. Therefore, more improvement should be proposed to enhance the rec-ommendation accuracy of our framework. 
Recommendation accuracy can be improved by taking implicit correlations between items into consideration, which provides a useful indication of user prefe-rences. We can introduce co-occurrence between two items as item correlation follows: tion measure can be combined linearly into Equation (2). nores the tiny items and highlights the distinct ones. By using case amplification, the similarity measure sim ( i , j ) is modified as follows: where  X  is used to control the effect of case amplification. The same transformation can be also applied to the item correlation R : 
By employing these improved methods, we change Equation (2) into the following formulation: are used to control the extent of diversity and item relevancy respectively. 4.3 DivRec The framework described in Equation (10) is called DivRec. The corresponding di-versification algorithm (pseudo-code) outlined in Algorithm 1 is a greedy heuristic. Algorithm 1. The Top-N recommendation Algorithm for DivRec Input: item set I . Parameters:  X  X  X _ X  X  X  ,  X  ,  X  ,  X  Output: top-N item list L u Initialization:  X  X  X  X  X   X   X  X  X  X  X  X  X  X   X   X  X , X  X  X  X  X  : X  ,  X   X   X  X  Steps: 1:  X  X  X  X  X  X   X  X   X  X  X  X   X  X , X  X  X  X  X  . 2:  X   X   X  X   X   X   X   X   X  . 3: for N  X 2 to X  4:  X  X  X  X  X  X   X   X   X  X  X  X  X  X  5:  X   X   X  X   X   X   X   X   X  . 6: end for sult list size) of them have been selected. Note that the item moved each time has the maximum ranking score calculated by DivRec. Parameter min_rel denotes the mini-mum relevance threshold for user  X  and parameters  X , X , X  are defined in DivRec. We conducted our experiments on a dataset gathered from Jingdong which is one of the biggest B2C e-commerce websites in China. The data we collected consist of 310,000 users, 18,000 products 1,650,000 ratings between 1st December 2003 and 15th January 2010. We preprocessed the dataset and removed users whose rates are less than 20. The final dataset has 15,680 users, 15,171 products and 553,875 ratings and its density is 0.233%. We randomly selected 80% of the users X  rating as the training set  X   X  X  X  X  X  X  and the other 20% are treated as the test set  X   X  X  X  X  X  . non-personalized algorithm which recommends top-N most popular products to users; (2) SVD . The SVD algorithm proposed in [14]; (3) MMR . MMR is a base diversifica-tion framework and we use the implementation presented in [13]. Although these models are not explicitly support recommendation accuracy and diversity, they are considered as reasonable ba selines to evaluate the performance of our approach. 
We studied the effectiveness of all methods on predicting top-N recommendation lists for each user. Experiments were started with 4 different top-N result list size: N= ducted to tuning the parameters achieving he best Recall value. 5.1 Evaluation Metrics Recall of the recommendation list. 
Following [6], we adopted the on-Category Intra-list Similarity (CIS) to measure the similarity in a recommendation list with a size  X  : Here we used a product category in commercial systems to determine two items whether they are similar, e.g. the APPLE iPhone 5S is similar to SAMSUNG Galaxy S5 because they belong to a product category named Cellphone . If two items  X  and  X  higher CIS value of a recommendation list, the less diverse be within it. 
We adapted a variant of Recall and Precision, which was proposed in [16], to eva-top-N list size: where  X  X  X  X  is the amount of successful test cases. For a test case, we randomly select (  X  mended to user  X  in the top-N recommendation list. 5.2 Results Fig.3 shows the average CIS values of recommendation lists generated by prediction algorithms. Among the baselines, MMR is the best one in terms of diversity because closer to MMR and show the advantages to other baselines. This maybe thank to the fact that our DivRec framework has resemblance to MMR. 
Next, we analyzed the effectiveness measured by the Recall and Precision of the different approaches. In Fig.4 (a), we can see that as the list size increases, the Recall value increases. It matches our intuition that an item is most likely to be recommend-achieves diversity in recommendation lists while lowers the accuracy. Our algorithm, DivRec, outperforms both MMR and SVD in terms of recall. (70%+ to MMR, and 25%+ to SVD). We can see that DivRec doe s improve the accuracy of top-N recom-DivRec has a significant improvement on precision compared to baseline models. 5.3 Long-Tail Product Recommendation We find that the top-100 most popular product s in our dataset used receive more than 20% of total ratings. Fig.5 shows the rating count of the products in our dataset. Most of the products were rated by only a few times (  X  5). The distribution of product pop-amine the performance of DivRec on long-tail recommendation. products and the rest are long -tail products. Then we change the experimental setting: ments. Fig.6 shows the performances of prediction algorithms on the long-tail product recommendation tasks. We omit TopPop because it only concerns the popularity and is invalid to recommend long-tail products. We can see that DivRec outperform others with all settings of size N on the long-tail product recommendation task. One possible explanation is that though DivRec is not targeted for recommending long-tail prod-ucts, DivRec tends to add more different items into a recommendation list as well as ensure the recommendation accuracy. The DivR ec algorithm is able to capture users X  preferences feedbacks for the long-tail products and is demonstrated to be efficient. In this paper, we studied the problem of top-N recommendation with diversification. We logical survey. Then we proposed a general recommendation framework, DivRec, to improve the diversity without lowering the accuracy. Finally, we investigated the effect of our framework on a real dataset from Jingdong . The experimental results demonstrate which do not have an extensive rating history are easier to be recommended. Acknowledgement. The work is partially supported by National High Technology Research and Development Program 863 of China (Grant No. 2009AA01Z4). 
