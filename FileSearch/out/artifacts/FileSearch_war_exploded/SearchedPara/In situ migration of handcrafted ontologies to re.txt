 1. Introduction
In ontology development there is often a tension between large-scale production of relatively simple representations of knowledge and small-scale, rich and intricate representations of some of the same knowledge. This tension can be particu-larly great when it is the knowledge holders themselves who build the ontology. Lacking the skills in knowledge represen-the ontology is stuck in its simpler, lean form.

In this paper, we propose a methodology that exploits the range of expressivity in the web ontology language (OWL) [1] description logic (DL) version of OWL (OWL-DL). Each stage in between has its benefits and our methodology advocates that movement to the next stage should be based on these benefits so that judgement can be used in deciding how to migrate to another level of expressivity in a representational form.

Ontologies should provide a shared understanding of a domain to facilitate the communication and integration of data vocabulary with which to describe that domain of interest.

The conceptualisation that captures the community knowledge in an ontology needs to be encoded or represented so that reasoning support. Ideally, the language chosen should reflect the purpose to which the ontology will be put and the lan-authoring, (2) common access to information, and (3) indexing for search.

The combination of application area and domain of interest will determine what is represented in the ontology and how complex the encoding should be in a particular representation. As a result, though there is much argument about whether idea of what a particular representational feature brings in terms of application benefits (Section 2 ).
When a community sets out to build such a ontology to promote understanding and uptake, it is necessary to constrain
This paper outlines a methodology to migrate a simple lean ontology into a more formal, richer ontology using a more com-plex and explicit representation.

The methodology is illustrated by the Gene Ontology Next Generation (GONG) project, was a two year DARPA DAML programme project to investigate how an existing ontology could be migrated to a more expres-approach in which the process can be staged both in coverage and complexity of definitions. The GONG methodology itself the outcomes and wider implications of this work are discussed in Section 7 . 2. The range of terminology representations and their uses
If we are to make a judgement about how and why to migrate from a lean to rich ontology by capitalizing on the expres-the escalator.

Moving upwards on the escalator is triggered by changing requirements and results in the addition of novel features to support those requirements. The goal of an ontology developer is to choose a level that supports their community X  X  needs.
The steps on the escalator are: (1) A controlled vocabulary; (2) A structured controlled vocabulary (hierarchy); (3) A single subsumption hierarchy (single inheritance); (4) Multiple hierarchies (multiple inheritance); (5) Compositional classes on demand.
 When a community agrees on such a list for aspects of their data, it is possible to pool data across the community.
Step 2: A structured controlled vocabulary . If the number of vocabulary terms grows, there is usually a move to organise them into related groups to form some kind of hierarchy. In a thesaurus-like ontology the relationship between parent and child terms is one of a vague narrower than or broader than navigation around the tree and (ii) help retrieval of items associated with terms.

The medical subject headings (MeSH) [10] is an example of a controlled vocabulary in a thesaurus structure used to assign should return documents annotated with the child term. Therefore, archy is used for retrieval only or is to be interpreted only by humans.

Step 3: A single subsumption hierarchy . Many ontology-like resources have been used, not just for manual navigation and retrieval, but for statistical aggregation of data.
 used a controlled vocabulary to do so. Its modern day counterpart, the International Classification of Diseases tributed than the parent X  X hild relationships found in MeSH.

In a subsumption relationship the child implies the parent. All instances denoted by the child are also instances of the subsumption relationship. It would not be correct to include as would happen with the relationship described in the MeSH terms above. So, with a strict subsumption hierarchy, where can be exploited when asking queries.

Step 4: Multiple subsumption hierarchies . When the nature of concepts in the ontology becomes complex, there are multi-an aspect of the term X  X  definition. For example, Stomach cancer term and a disease term. Each term can be classified in its own right: axis. Providing these multiple subsumption relationships (multiple inheritances) allows the user to either search for or aggregate data along different axes.

This added functionality, however, comes at a cost to the maintainers of the ontology. Maintaining an exhaustive multiple subsumption hierarchy has been shown to be difficult, leading to a significant rate of omitted subsumption relationships [11,8] .

Human users may have a limit to the number of views they require, but application developers providing decision sup-an ontology (such as angina in a disease ontology, and betablocker subsumption relationships to more specific classes of that situation (more specific class of ber of such abstractions can grow enormously, giving rise to a structure that is too complex to navigate around by humans but is always being extended to support the next decision support rule.
 900 kinds of accident incoherent to a user or ontology developer, but many of the combinations are bizarre. For instance, there is a concept for accident while riding an exploding bicycle are the relationships between them. When a new kind of term is needed, the building blocks are composed to dynamically a system has obvious benefits, but is at the top of the feature escalator.

In Steps 3 X 5, strict is -a is the only ontological structure taken into account. The upon which other properties may be placed (as is indeed the purpose of the GONG process).
Moving up the escalator from a lean ontology to one that is richer requires more expressive power. It is this expressive power that enables features and also allows more to be stated more precisely within the ontology. 2.1. OWL and the feature escalator ety of constructs available in a sophisticated KR language such as a DL based language like OWL-DL. The web ontology lan-three forms, depending on expressivity and computational tractability: OWL -Lite . OWL-Lite is the less expressive form.

OWL -DL . OWL-DL maps to the DL SHOIN  X  D  X  . 5 It is more expressive than OWL-Lite specially with regards to class OWL -Full . OWL-Full is the most expressive OWL type and the computational tractability is not guaranteed. simple knowledge organisation system 6 (SKOS) uses OWL objects and properties between them to represent the more informal hierarchies of Step 2.

Fig. 3 shows the definition of a complete class in OWL-DL. It can be used to describe the conditions for class membership on the feature escalator.

Class expressions can be formed using the standard Boolean operators. Restrictions can be either existentially or univer-be defined in terms of domain/range, subproperties, and property features (functional, inverse functional, transitive, symmetric).

The restrictions used to describe the members of a class fall into two categories:
These sufficiency conditions, expressed in OWL-DL X  X  strict semantics, are enough to enable automatic reasoning. DL rea-indicate any inconsistency and infer any additional subsumption relationships implied by the axioms in the ontology. OWL-fication on demand described in Step 5.

OWL-DL is thus capable of representing anything from the simplest handcrafted tree of terms through to rich descriptions described earlier.
 switch to this formal approach. Experience from SNOMED-RT and SNOMED-CT with a simple representation, then slowly migrate to such an approach when and if it becomes necessary. 3. The Gene Ontology
The gene ontology 8 (GO) was developed as a resource to promote comparisons between genomic databases of different
GO provides a controlled vocabulary of some 21,974 terms 9 common function, processes, and locations can be shared across databases enabling a de facto integration [7] . Terms of GO are placed within a multiple subsumption hierarchy (see Fig. 4 ), represented by the GO Consortium as a
Directed Acyclic Graph (DAG) in the OBO file format [16] . Terms are also placed within a multiple partonomy hierarchy, nodes in the DAG and represent classes of the instances to which they refer. For example represents the class of instances of that process. The is for example, acetylcholine biosynthesis is defined as  X  X  X he formation from simpler components of acetylcholine, the vided as annotations upon a term node.

GO is also used for aggregated statistics (Step 3 on the escalator). Users can ask the question  X  X  X ow many gene products across all model organisms have kinase activity ? X . For example, the multiple hierarchy enables proteins with protein kinase C activity to be aggregated according to either its
GO is now used by some 20 species genome databases and several community wide databases of gene products. It is a handcrafted ontology; each term is placed within the is -tain errors that fall into two broad categories: (2) Structural validity X  X re all the terms in the most appropriate location with all the subsumption relationships implied
These two categories obviously overlap. It is the second category, however, that can be addressed by Steps 3 and 4 in the feature escalator. The Gene Ontology Next Generation (GONG) methodology principally addresses the structural validity of of a term X  X he biology itself is incorrect. 4. Methodology 4.1. Untangling
With complex conceptualisations, it is very easy to get into a  X  X  X angle X . A complex concept has different aspects all of which can be used to create a subsumption relationship. Fig. 4 shows such a tangle in GO originating from the term tylcholine biosynthesis . Such a tangle has resulted from a concept which has only two key aspects: (i) the nature of the biological process X  biosynthesis (ii) the nature of the chemical substance on which the process acts X  acetylcholine .

Rector et al. [18] have proposed a methodology for untangling such taxonomies, and so easing their maintenance. The stages in this  X  X  X ormalisation X  are: (1) Choose only one aspect with which to manually create subsumption relationships. In the tangle above this could be (2) Re-express most of the other aspects of the class, not as subsumption relationships, but as restrictions on each con-(3) The previous step does not provide sufficient information to recreate the original subclass link to (4) Submit both ontologies to a DL reasoner such as FaCT++ (5) Report back on satisfiability, including any inferred subsumption relationships found.
Fig. 5 shows how these various steps can untangle such an example. 4.2. One-off or incremental change?
One approach taken by the GALEN project [19] to this untangling is to use the existing terminologies as source informa-tion from which to formulate wholly new taxonomies and property-based definitions [20] . Reasoning is then used to con-struct an overall taxonomy that is based on these new logic definitions.

There are limitations to this approach: (1) Building taxonomies and property-based definitions for all of an ontology is a large knowledge elicitation task. (2) It may not be possible to recreate an ontology that resembles the original taxonomy with which users are familiar.
We cannot provide complete definitions for all concepts within the GO in a one-off effort. In fact, many believe that the task of writing definitions is an ongoing one in which definitions are amended constantly to reflect response to feedback new organism databases join the consortium, new requirements expand the ontology. Additionally, as our understanding of the world of biology changes so will the GO. The GONG project has developed a similar evolutionary methodology, but with-in the DL environment [8] .

In the GONG methodology, small groups of concepts are defined in terms of OWL-DL and then the ontology is submitted for DL reasoning. The reasoner infers new subsumption relationships and flags any logical inconsistencies that can be fed back to the GO editorial team. The benefits of providing definitions can be shown in small increments and the whole ap-proach can be validated at an early stage in the project. The GONG project, therefore, took the following approach: (1) Conversion from source encoding to OWL-DL. (2) Small areas untangled in situ. (3) Descriptions of classes derived, either complete or partial: (4) Definitions may not be complete; that is, with necessary and sufficient conditions. (5) New information added to the ontology through reasoning over descriptions. No existing information is removed a (6) Changes reported back to the source ontology that remains in its native form.
To mitigate Step 3 it is important to harness as many internal and external sources of pre-existing knowledge in order to concepts.

Moving a GO with around 22,000 terms in a one-off fashion, with a complete change to a formal representation with com-areas of GO must be addressed, in an incremental fashion, at any one time.

Deciding when it is necessary to migrate to a more formal representation is a question that has not received much atten-
If the structure is, however, complex, in which concepts have more than one parent then experience shows that the taxo-nomic structure becomes difficult to maintain by hand.
 ogy and the average number of subsumption relationships. A small ontology with only hundreds of concepts can become impossible to maintain if it has an average number of superclasses of six [21] .

Although the initial ontology may be simple, it must be sufficiently well formed to enable a migration to a formal repre-nature of all relationships explicit and try to limit parent X  X hild relationships to only be subsumption relationships.
Keeping in step with mainstream development of the source ontology is essential to this approach. This requires that the ommendation from the inferences made over the migrated ontology. This is an amendment to the normalisation method-ology in which the existing ontology is completely deconstructed and re-built using terminological reasoning. Any changes made by the mainstream development team must be fed into the more formal representation. Eventually, the ontology. 5. Using the Gene Ontology Next Generation (GONG) methodology 5.1. Converting DAG to OWL-DL
The first stage in migrating towards an OWL-DL, property-based form for GO is its conversion from DAG into an OWL-DL DL version of GO, including any biological mistakes.

There is no generic solution to the step of converting non-OWL-DL representations. Conversions into OWL-DL have to be developed for each representation. If the meaning of statements in the source encoding cannot be represented in OWL-DL, then the GONG process cannot commence. One advantage, however, of OWL-DL is its ability to represent a wide range of conceptualisations from simple taxonomies, to complex graphs with many kinds of relationships. 5.2. Sub-setting the ontology: attacking small areas duces the time it takes to iterate through the process and feed enhancements back to the mainstream community.
The reduction in time is as a result of both the reduced scope and amount of knowledge acquisition and also the reduced computational time taken by reasoning software. At the moment reasoning time rises exponentially as a function of both ontology size and the complexity of formal definitions. Keeping to small sub-sets ensures reasoning time does not become a limiting factor in the process.

Most ontologies vary widely in the style of their conceptualisation. Some may be straight forward to migrate to a formal normalisation of the ontology. 5.2.1. Implementing a sub-setting step
The simplest manner to describe a sub-set in a hierarchical structure is to identify a concept in the hierarchy and then to include all concepts linked to concepts in the sub-set by non-taxonomic relationships (e.g. ancestors.
 shown that links outside the sub-set hierarchy are sparse. This simple method works for the lean ontologies from which we are migrating. More sophisticated techniques do exist for richer ontologies [22,23] . 5.3. Automated dissection where possible
Producing formal definitions for classes by hand has several disadvantages. Firstly, it requires significant time from an individual trained in writing formal concept definitions to commit to a consistent pattern. Secondly, any such process is prone to human error. Therefore, the methodology aims to automate mundane time consuming tasks and moves the human effort from definition production to definition checking and augmentation. 5.3.1. Mining class labels
Many class labels of ontologies in the life sciences are actually phrases whose structure and lexical content can provide to a pattern which is repeated for many concepts in a given area of an ontology. For example, GO includes a large section where x is a class of chemical e.g. carbohydrate metabolism an area of a specific ontology; increasing the need to migrate sub-sets of the ontology. A domain expert must be involved in developing the formal definition pattern and its mapping, because the rubric does not provide a complete definition for the concept.

The resulting formal definition either may or may not capture a complete definition for a concept. In the example above, for the concept carbohydrate metabolism , a definition such as  X  X  X  subclass of metabolism which acts solely on carbohy-drate X  can be generated from the rubric and considered complete; it is sufficient to recognise instances of that kind of metabolism. 5.3.2. Implementing rubric mining ond group matches the word  X  X  X etabolism X  occurring at the end of the rubric.

This approach is not just applicable to GO. SNOMED-CT also contains a large number of rubrics that follow a repetitive in their naming styles. The approach of using a grammar is taken by Mungall [25] . 5.3.3. Mining free-text definitions
The degree to which free-text definitions can be mined depends on the degree to which it really is free-text and the constrained and stereotyped pattern; for example many concepts have a definition of the form  X  X  X atalysis of the reaction: language counterparts of the computational form we desire. Translation from this form would be relatively easy. 5.4. Hand annotation when necessary
There is a limit to how much of an individual definition or what proportion of an ontology X  X  classes can be automatically there is a process of hand curation, to check and augment these definitions. 5.4.1. Utilising existing taxonomies and mapping to them
As property-based descriptions are made for classes in the target ontology, supporting ontologies are needed to supply and complete (necessary and sufficient), that point to classes of the supporting ontologies.
In the process of normalisation, the untangled ontologies are these supporting ontologies. Sometimes these will be cre-ated de novo, often in the form of value partitions. 12 For instance, many GO biological processes involve both negative regulation. A value partition of negative and positive has _ regulation property. Often, much larger scale ontologies are needed to drive the untangling. For example, transport , binding , enzyme activity , etc., all involve chemicals. An ontology of chemicals was extracted from MeSH for
Similarly, all development classes need an anatomy ontology; ferentiation classes need a cell types ontology, etc.

The GONG process is somewhat dependent on the existence of such supporting ontologies. This is another reason for the piecemeal or in situ migration of the DAG form to an OWL-DL formalism. The Open Biomedical Ontologies (OBO) project offers a wide and growing range of such ontologies that themselves have to be converted to OWL-DL for the GONG process.
It should be remembered, however, that even a partial migration using the de novo smaller supporting ontologies such as classifies along one axis and will structurally validate that axis of the ontology being processed. 5.5. Reporting changes
As each sub-set of the GO is reasoned over and the resulting changes collated, it must be fed back to the owners of the changes to a coherent, topic based sub-set, changes can be fed back to the source ontology in a coherent manner. The changes are sent to GO curators for reviewing and possible inclusion in GO. This is done using the SourceForge GO the source ontology as it evolves. 5.6. Implementation
The GONG workflow can be executed using a program called BONG to execute the GONG workflow using any OBO ontologies. The process is as follows: (1) The user configures the settings of the workflow using a special OWL ontology, the GONG ontology. The regular (2) If the OBO ontologies are not already in OWL, they can be converted to OWL using another program available in the (3) If all the necessary files (the OBO ontologies in OWL format and the GONG ontology) are in place, the workflow can be (4) Once the dissection has finished, the new dissected ontology with new semantics is sent to a DIG 6. Results
Having described our migration process in general and its specific application to the GO, in this section we report upon these descriptions, from metabolism , transporter activity results for the new descriptions of GO terms generated by the workflow. 6.1. Results of regular expressions a particular sub-set.

When capturing the terms with the regular expressions, the semantic content that would be accessible to the reasoner was greatly determined by the design of the regular expressions. In general the approach worked because, as mentioned be-ular manner. There were, however, two kinds of problems:
Some terms were not captured at all (2% in the case of the syntactically stereotyped. Examples include: MHC class II protein binding, via lateral surface tion release factor activity, codon non-specific , amongst others.

Even when captured, in some cases the syntactic subtleties of the term were not translated to new semantics in the final ontology. For example, the term RNA polymerase II transcription factor activity in the subterms  X  X  X NA polymerase II transcription factor activity, enhancer X  (chemical axis) and  X  X  X inding X  (functional axis). The first subterm did not match any class in the MeSH, due to its complexity. On the other hand, there were sub-terms that could be used taking advantage of OWL-DL X  X  expressivity. Subterms like  X  X  X nhancer X  and  X  X  X ranscription factor X  could be captured using alternative regular expressions and mappings to more complex OWL-DL class descriptions.
There is a cost-benefit analysis in writing regular expressions X  X ow many terms or what proportion of terms being cap-tured make it worthwhile to form regular expressions? When only either two or three would be captured, we have resorted that is worth reporting to the GO curators. It also means that we do not form a regular expression for these  X  X  X utliers X . 6.2. Example transformations to OWL-DL
The GO term alanine:sodium symporter activity is mapped to the class description in Fig. 6 . (The class description are classes in the supporting chemical ontology from MeSH.

Finally, this class is made a subclass of symporter activity maps from  X  X  h transport function i  X  in the GO term. The 6.3. Results of reasoning
The percentages of terms captured in each sub-set and the percentage of classes having new subsumption relationships inferred in each sub-set can be seen in Table 2 . For example, in the case of were captured applying the regular expressions (98%). From the original terms, 17% were changed (another relationship
Table 2 shows the tangible results of the GONG process. With very few patterns a great proportion of GO terms were cap-tured in a sub-set. We also see a large number of subsumption relationships inferred from the OWL-DL class descriptions generated via these regular expression matches. We see in Table 2 that many of these new relationships were accepted of only asking for glucose metabolism or glucose transporter would be able to ask for all biological processes that acts especially those forming restrictions, the more questions or inferences may be made over the ontology. Obviously, more tional possibilities of such knowledge from rich on meaning, but axiomatically lean ontologies. sults of the reasoning over OWL-DL definitions lead to the following categories of results: Discovery of missing subsumption relationship; Moving a term to a more specific parent; Stimulating the addition of a new, more specific, parental class to GO; Feedback from domain experts prompts change in supporting auxiliary (and simply wrong) ontology;
Contradiction X  X .g. GO had a biosynthesis as a kind of catabolism
These categories captured all the kinds of changes inferred by the reasoner. It should be noted that very few of the changes given to the GO curators were wasted. In fact, few of the changes inferred by the reasoner were wasted. Some ful in prompting discussion.

Someofthenewsubsumptionrelationshipsfromthe binding sub-setacceptedbytheGOstaffcanbeseenin Table3 . There were two main reasons why a new subsumption relationship inferred by the reasoner was not accepted by the GO curators:
The relationship was already there: this in fact demonstrates the accuracy of the GONG workflow, because most of the curators reviewed the new relationships against a newer GO version than the version used for the GONG process. Thus, the GONG workflow added the same new relationships as the human curators did.

Lack of biological accuracy: this is due to the fact that the MeSH ontology was used for the chemical taxonomy. For exam-ple, the suggestion of adding high affinity ammonium transporter activity porter activity was rejected because ammonium is not organic. 7. Discussion
Even if the execution of the GONG workflow described herein did not have a 100% performance, the GONG approach can be seen to have worked and demonstrated that the migration to a DL environment can have benefits for the structural val-idation of an ontology such as GO. New relationships were accepted by the GO team and possible application areas for the axiomatically enriched OWL-DL ontology were suggested. By the application of a simple dissecting procedure, even without full coverage and a minimum of programming and reviewing work, the taxonomic structure of GO improved substantially.
This demonstrates the usefulness of the GONG process. Other factors must, however, be taken into consideration: GONG is an automated procedure but not all the semantics will always be fully captured, so human intervention is needed. Human intervention introduces errors and is time consuming and expensive.

The GONG process allows a migration from a simple representation to a more expressive formalism. It moves from an in elaborate term names. These terms work well for the purposes of a controlled vocabulary, but the semantics in the term names are not computationally available. The GONG methodology draws the semantics out of the term names and makes lised process with an ontology expert performing the migration. It can, however, be coupled with a community ontology aims to allow more local adaptation by community groups, followed by a process of centralised harmonisation. Much of the
OWL. Such experts will, however, readily supply terminology in a systematic manner and therefore, the GONG process could be applied to such contributions as part of a tooling for the Diligent methodology.

The ontology maintainer can stop at any position on the feature escalator that is the optimal stage of balance between expressivity and ease of modelling. It is unrealistic to require large-scale involvement of the existing development team and users during the migration. Therefore, especially in the early stages, the migration must be decoupled from day to day use, whilst improvements must be fed back into the released version. This ensures that the community can see the ben-efits of the migration, even within the early stages. As the process advances the community will become more confident in working with the more expressive steps of the escalator (as they can always come back to the original stage) and finally, sion of the bio-ontology, thus probably fully exchanging to OWL-DL.

The process we describe is piecemeal. Eventually, we would expect to see a fully normalised GO. The taxonomies pulled out for metabolism , transporter activity , binding , etc. would eventually coalesce to form a taxonomy for molecular function taxonomy covering catalysis, transport, binding, regulation of proteins and processes would be supported by: Small molecules, atoms and ions; Macromolecules; Reactions; Biological processes; Cellular components.

In this eventuality, the currently separate ontologies of the Open Biomedical Ontologies project would interoperate more maintain and extend.

This migration could also be useful outside the life sciences. Such a migratory approach will be important in the devel-opment and delivery of the Semantic Web. 18 The Semantic Web relies on the semantic description of Web content and ser-ogies for any Semantic Web. The GONG methodology can be applied to any structured vocabulary whose representation can simple representation and progressively migrate to a richer ontological form as required. Acknowledgements
We would like to thank Michael Ashburner, Amelia Ireland, Jane Lomax and Chris Mungall, of the GO consortium, without whose help this work would not have been possible. We would also like to thank Olivier Dameron for technical help. Chris
Wroe was supported by the GONG project grant (DARPA DAML subcontract PY-1149 from Stanford University) and the Grid eScience pilot project grant (EPSRC GR/R67743).

References
