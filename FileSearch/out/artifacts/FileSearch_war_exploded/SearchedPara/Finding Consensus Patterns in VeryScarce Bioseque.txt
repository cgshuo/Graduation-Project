 Finding frequently occurring patterns (called consensus patterns )withinasetof biosequences is a common task in molecular biology. The kinds of patterns used in the various methods may differ very significantly [3], for example compare the patterns used in the PROSITE [9] database and the TEIRESIAS algorithm [7]. The patterns we consider are strings over a finite alphabet  X  and a variable symbol  X * X , where its language is the strings obtainable by (independently) replacing all variables in the pattern with strings over  X  [8].

Our approach to consensus pattern is based on finding so-called minimal mul-tiple generalizations (mmg) [2] from subclasses of the pattern languages. Given any sample set S of strings over  X  , the mmgs are the most (syntactically) specific set of up to k patterns over the given class where their languages together contain S . Arimura et. al. [2] gave a polynomial time algorithm MMG for finding such mmgs. Others [1, 11, 10, 6] have studied how well the MMG discovered mmgs perform in predicting gene functions. Here, we consider instead the resemblance between the discovered mmgs and well established consensus patterns.
As samples, we use the sigma factor dependent promoter sequences in Bacil-lus Subtilis , which has well established consensus patterns [4]. The difficult part in using these samples is that they are not very abundantly available, and hence it is difficult for candidate patterns to achieve sufficient levels of statistical sig-nificance. We show that by constraining our search to only patterns of slightly more specific forms, some patterns in the discovered mmgs match the known consensus patterns fairly accurately. We also note some qualities that can be found in the better matching patterns. Let  X  be a finite set of alphabets. A regular pattern is a string over  X   X  X  X  X  , where the  X   X   X  symbol is called a variable .A substitution  X  for a pattern p is a set of replacements for variables in p with regular patterns. p q iff p is obtainable from q via some substitution  X  ; p  X  q iff p q but not q p . Given two sets of patterns P and Q , P Q iff for each p  X  P , p q for some q  X  Q ,and P Q iff P Q but not Q P . The language of a pattern p , L ( p )= { w  X   X   X  | w p } . For a set of patterns P , L ( P )= p  X  P L ( p ). Note that P Q  X  L ( P )  X  L ( Q )[8].

Given k  X  N , a finite set S  X   X   X  and a class of patterns P X  (  X   X  X  X  X  )  X  ,a set of patterns P  X  X  is a k -minimal multiple generalization (or k -mmg) for S over P if P  X  k , S  X  L ( P ), and there are no other set of up to k patterns Q in P where Q P and S  X  L ( Q ). We use the efficient algorithm MMG in [2] for finding such mmgs.

Using different classes of patterns in MMG may change its output very sig-nificantly. Originally the regular patterns were studied in [2]. Then, the regular patterns with restricted number of variable occurrences were studied in [1]. In this work we study those classes, with the addition of so-called range specifiers (as in the PROSITE patterns) where a variable is written  X   X  ( x, y ) X  for some x , y  X  N . A variable written this way, when r eplaced with consta nt strings, can only be replaced with st rings of length at least x and at most y . We run our tests using a straight-forward implementation of the MMG algo-rithm (downloadable from www.daisy.ai.kyutech.ac.jp/  X  kalngyk). The program is given as input a set of biosequences S ,amaximumnumber k of patterns al-lowed in a k -mmg, and finally, a class of patterns P . The output k -mmg is then compared with known consensus patterns. This is repeated for k =5and k =10 over all combinations of our candidates for S and P , as follows. (For S ) We use the sigma factor dependent promoter sequences in B. subtilis (refer [4]) for samples. These sequences (and consensus patterns) are obtained from the on-line database DBTBS [5]. We use the regulons sigD (33/51/59), sigE (62/44/51), sigH (48/37/50), sigW (32/42/45) (numbers are for sample size, average sequence length and maximum se quence length), b ecause their sample sizes are relatively large and there are relatively long contiguous conserved re-gions within their consensus patterns. (For P ) We use subclasses of the regular patterns with restricted use of vari-ables. We also consider patterns of the following form, the rational of which will be made clear in its description: Assume that each of the target patterns con-sists of exactly two segments. That is, they are of the form  X   X  1 v  X  2 w  X  3  X , where v , w are non-empty strings over  X  and the  X  i s are variables. We further assume that v is not too close to the end of the sequences, while w is not too close to the beginning of the sequences. For this reason, we place upper bounds on the maximum length of the words that can be used to replace  X  1 and  X  3 .Inthis study we use the same length x as the upper bound for both  X  1 and  X  2 ,and we set x to 0.5 times the length of the longest biosequence in the input sample. This gives us the pattern  X   X  (0 ,x ) v  X  (0 ,  X  ) w  X  (0 ,x ) X . For comparison, we also test with other classes to observe the effects of the fixed pattern form and the use of the range specifiers. In total we have the following for candidates of P : 1. patterns of fixed form  X   X  (0 ,x ) v  X  (0 ,  X  ) w  X  (0 ,x ) X  where v , w  X  (  X   X  X  X  X  )  X  2. patterns of fixed form  X   X  v  X  w  X   X  X here v , w  X  (  X   X  X  X  X  )  X  3. regular patterns with at most 3 variable occurrences
To evaluate how a pattern p in a k -mmg fits a sample S , the most intuitive measure is the number of sequences in S which matches the pattern p , i.e. ( S  X  L ( p )). Another useful measure is that of coverage , introduced in [6], which is the total number of sequences in L ( p ) of length up to the longest sequence in S , i.e. ( { w  X  L ( p ) | w is not longer than the longest sequence in S } )whichwe shall simply refer to as the coverage of p . Intuitively, the coverage of p should be related to the amount of generalization committed by L ( p ) based on the sample S , and this has been observed in [6]. Table 1 show the mmgs obtained from the different pattern classes P .Wereport only patterns in the k -mmg with either very high number of matching sequences or with very low coverage, with emphasis on the former. Each pattern listed is followed by two values ( x, y ), where x is the number of sequences in S which matches the pattern, and y is the coverage of the pattern (for simplicity, range specifiers have been ignored in the computation of these coverages).
Here we see that the use of range specifiers enables MMG to not mix up between the two segments in the pattern, which is most evident in the sigD patterns. Without the use of range specifiers, the patterns obtained from fixed form patterns (pattern class 2) are often not much better than those obtained from regular patterns (pattern class 3). We also note that good correspondence with the known consensus pattern almost always come from patterns with  X  X igh X  number of matching sequences and  X  X ow X  co verage, even though we currently lack a method to decide the ideal range of these values.
 In summary, we found that using more restrictive classes of languages in the MMG algorithm gave us consensus patterns that matches the known consensus patterns fairly reasonably. (Though not included in this shorter version of the paper, we also found that patterns using so-called composite symbols ,asinthe PROSITE patterns, tend to yield less resembling patterns.) Of course, this does not mean that more restricti ve classes necessarily produce better patterns. For example the class generated by  X   X  (0 ,x ) vw  X  (0 ,x ) X  where v , w  X   X   X  , though more restrictive than the class  X   X  (0 ,x ) v  X  (0 ,  X  ) w  X  (0 ,x ) X , would not produce the consensus patterns we want in our test cases.

On the other hand, the results do show some promise for using the MMG algorithm in finding consensus patterns, provided that a suitable pattern class is given as input to the algorithm. Since each computation of the MMG algorithm runs very quickly (typically in a few seconds), it is conceivable for the algorithm to be employed interactively  X  where a us er would iteratively specify a class of patterns to use, and decide when the output is suitable for consensus patterns.
It would be ideal if we can furthermore automate this process by running the algorithm with successively more restrictive classes of languages, and stop when successive iterations provide no further improvements in the patterns obtained. To do this, we need only (1) a criteria to evaluate if a set of patterns is better than another (for example the measures we have discussed herein may be adapted for this purpose), and (2) a measure to classify how restrictive is a class of languages. Problem (1) seems to be the more difficult problem, but we note that even the classification in (2) may not be simple. For the classes of languages used in this paper, proper inclusions between the classes allow us to estimate how restrictive the classes are. However, this will not work for classes that are incomparable with respect to inclusion. For example, we could not say if the class generated by patterns of the form  X   X  w  X  is less, more, or just as restrictive as that generated by  X  w  X   X , since they do not include each other  X  though assuming homogeneity in word generation, they should intuitively be considered equally restrictive. For this reason, more theoretical work on the complexity of subclasses of the pattern languages is perhaps needed to improve the use of the MMG algorithm. Acknowledgements. We thank Prof. Satoru Kuhara (Kyushu University) for introducing us to the topic.

