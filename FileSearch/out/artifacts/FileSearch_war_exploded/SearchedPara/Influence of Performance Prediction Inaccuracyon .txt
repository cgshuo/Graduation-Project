 Grid computing[1] is becoming increasingly popular recently. Task scheduling, the problem of scheduling tasks to processors so that all the tasks can finish their execution in the minimal time, is a critical component for achieving high perfor-mance in grid environment. Usually the scheduling process of a task scheduling algorithm involves two phases: task selection and processor selection. In task selection phase, the tasks are sorted in a list according to some criterion related with the workloads of the tasks; while in processor selection phase, the first task in the list is allocated to a processor based on another criterion typically re-lated with the speeds of the processors. Therefore, the prediction for the task workloads and processor speeds is critical for achieving satisfying performance in grid task scheduling system. Usually such prediction are executed by some performance prediction tools such as NWS[2].
 perfect knowledge about the performance of both tasks and processors. However, although nowadays the performance prediction tools can provide increasingly accurate prediction, it is still impossible to achieve absolutely accurate prediction since grid is a highly dynamic environment[1]. Therefore the performance of task scheduling algorithms will be influenced by such inaccurate prediction, and different task scheduling algorithms reveal different degrees of sensitivity to the inaccurate prediction. In this paper, we would focus on the study of the influence of performance prediction inaccuracy on task scheduling from the perspectives of task selection and processor selection in grid environment.
 the influence of prediction inaccuracy on task scheduling, introduce the concept of degree of misprediction, and establish related formulas. The impact of the parameters in the formulas for the degree of misprediction is evaluated in section 3. Finally, the paper is concluded in section 4. 2.1 Task Selection Grid computing is a highly heterogeneous and dynamic environment. Task scheduling problem in such a heterogeneous and dynamic environment is much more difficult than that in homogeneous system. Furthermore, since it is impossi-ble to obtain absolutely accurate prediction for the workloads of tasks because of the dynamicity, the actual workloads of tasks will be different from the predicted values, and this will influence the performance of task scheduling algorithms. For example, if the actual workload of task T i is less than that of task T j , while be-cause of prediction error, the predicted value of T i is more than that of T j , then we will make wrong scheduling decision if we schedule the tasks based on their workloads.
 a set of independent tasks. The actual workloads of these tasks are independent identical distribution(i.i.d.) random variables. In grid scheduling system when performance prediction tools are used to predict the performance of the tasks, the predicted errors usually lie in an interval of the actual workloads according to some probability distribution.
 loads are denoted by positive numbers x 1 and x 2 respectively. The prediction errors of T 1 and T 2 , y 1 and y 2 , are independent random variables and follow some probability distribution in the ranges of [-ax 1 ,bx 1 ] and [-ax 2 ,bx 2 ], where the possible value fields of a and b are [0,1) and [0,  X  ) respectively. The proba-bility density function of prediction error is denoted by g ( y ). For the predicted workloads of T 1 and T 2 , denoted by z 1 and z 2 , we have the following equations: dicted workloads, for example, schedule the task with the largest workload first or with the smallest workload first, so the prediction inaccuracy has remarkable influence on the performance of scheduling algorithms when the actual workload of T 1 is smaller than that of T 2 while because of the prediction errors, the pre-dicted value of T 1 is greater than that of T 2 . We call such situation misprediction . Because different performance prediction tools have different degrees of predic-tion inaccuracy, they can arouse different degrees of misprediction. Therefore, what we are interested in is the probability of the misprediction to happen, i.e., where y 1  X  [  X  ax 1 ,bx 1 ], and y 2  X  [  X  ax 2 ,bx 2 ].
 area above the line L: y 1 = y 2 + x 2 -x 1 , and the probability of P( y 1 &gt;y 2 + x 2 -x 1 | x 1 &lt;x 2 ) can be expressed by the area of the overlapping region between L and the rectangle surrounded by the lines y 1 =-a x 1 , y 1 =b x 1 , y 2 =-a x 2 and y 2 =b x 2 in the y 1 , y 2 coordinate system.
 rectangle: they either don X  X  overlap or overlap in a triangle region.
 Proof. Case(1): This case is shown in figure 1. The line which is parallel to L and passes the point (b x 1 ,-a x 2 )is y 1 = y 2 +a x 2 +b x 1 . If L is above this line, then we can see intuitionally that there is no overlapping between L and the rectangle. That is to say, if x 2 -x 1  X  a x 2 +b x 1 , i.e., if (1-a) x 2  X  (1+b) x 1 , mathematically as: Case(2): If L is under the line y 1 = y 2 +a x 2 +b x 1 , then it will overlap with the rectangle. The probability for the misprediction to happen equals to the area of the overlapping region. The line which is parallel to L and passes the point must be above the line y 1 = y 2 +a( x 2 -x 1 ) in any way. From figure 2 we can see that the overlapping region can only be a triangle.
 by the double integral of the probability density functions g( y 1 ) and g( y 2 ). So we have the following equation: application is f(x) and the value field of the actual workload x is [xl,xu], then the degree of misprediction for the grid application, which is denoted by DM ,is defined as the average of the degree of misprediction between any two tasks in the application. In virtue of the equation for the degree of misprediction between two tasks as shown before, DM can be expressed as:
DM = 2.2 Processor Selection In processor selection phase, usually a task scheduling algorithm selects a pro-cessor according to the predicted computational speed of the processors, for example, select a fastest processor or a slowest processor, while because grid is a highly dynamic environment, the performance prediction tools usually can not provide entirely accurate prediction for the processor speeds, and such prediction inaccuracy will affect the performance of the task scheduling algorithm. computational speed of processor P i (1  X  i  X  m) is denoted by s i . The predic-tion error of s i , which is denoted as t i , typically lies in a range of s i following some probability distribution. The prediction errors of different processors are independent random variables. Let s i and s j be the actual speeds of proces-sor P i and P j respectively. The prediction errors for them are t i and t j . t i and t are independent random variables. The value fields of t i and t j are respec-0  X  a&lt; 1 ,b  X  0(a and b here are different from that in the above subsec-tion). The predicted speeds of P i and P j are w i and w j . We have the following equations: of the event that the actual computational speed s i is smaller than s j , while because of prediction errors, the predicted speed w i is greater than w j , that is, the probability P( w i &gt;w j | s i &lt;s j ). This can be further transformed to: for processor selection: P ( t i &gt;t j + s j  X  s i | s i &lt;s j )= m processors, which is denoted by DM P , is defined as the average of the degree of misprediction between any two processors. In virtue of the equation for the degree of misprediction between two processors as shown before, DM P can be expressed as: We present the results from our evaluations which assess the impact of the parameters in formula (5), the influence of prediction inaccuracy on processor selection. The results are shown in figures 3(a)-(f), where the horizontal axis in every figure is the combination of the values of a and b, and the vertical axis is DM p , the degree of misprediction for processor selection.
 distribution for the prediction error of processor execution speed is assumed, that is, the probability density function of h(t) is assumed to be while s is the actual execution speed of a processor. We also assume that there are 6 processors in the grid computing system(m=6) and the actual execution time of the first processor is s 1 =500. To evaluate the impact of the grid heterogeneity on the degree of misprediction, two groups of estimations are conducted: in figure 3(a), (c) and (e) the actual execution times of the processors increase successively by the increment of 5( s i +1 -s i =5,1  X  i  X  m-1), while in figure 3(b), (d) and (f) the increment is assumed to be 250( s i +1 -s i = 250, 1  X  i  X  m-1). can see that, the degree of misprediction decreases as the heterogeneity of grid computing system increases. In figure 3(a) and (b) the range of (a,b) shifts grad-ually from (0.1,0.9) to (0.9,0.1), that is, the prediction error shifts gradually from overestimate to underestimate. From figure 3(a) and (b) we can see that the degree of misprediction increases as the prediction inaccuracy changes from overestimate to underestimate, moreover, such increase is fleet in highly hetero-geneous grid system, while in grid system with low heterogeneityp, the degree of misprediction increases slowly with the shift of (a,b). In figure 3(c) and (d), the with (a) and (d) with (b), we can see that the degree of prediction increases as the range of prediction error increases, and higher heterogeneity results in faster increase. In figure 3(e) and (f), (a,b) increases from (0.1,0.1) to (0.9,0.9), while the average prediction error remains constantly to be 0. In figure 3(e) and (f), the degree of misprediction increases as the range of prediction error increases. it is expected that the task selection phase can reveal similar results. The prediction inaccuracy for the performance of tasks and processors usually exists so that influences the performance of task scheduling algorithms in grid computing. This paper studies such influence from the perspective of task selec-tion and processor selection. Evaluation results show that an underestimate of performance can result in greater influence on task scheduling compared with an overestimate, while higher heterogeneity results in smaller influence. We hope our results can provide some references for task scheduling in grid environment.
