 G  X abor Bart  X ok bartok@ualberta.ca Navid Zolghadr zolghadr@ualberta.ca Csaba Szepesv  X ari szepesva@ualberta.ca Partial monitoring can be cast as a sequential game played by a learner and an opponent. In every time step, the learner chooses an action and simultaneously the opponent chooses an outcome. Then, based on the action and the outcome, the learner suffers some loss and receives some feedback. Neither the outcome nor the loss are revealed to the learner. Thus, a partial-monitoring game with N actions and M outcomes is defined with the pair G = ( L,H ), where L  X  R N  X  M is the loss matrix , and H  X   X  N  X  M is the feedback matrix over some arbitrary set of symbols  X . These matrices are announced to both the learner and the opponent before the game starts. At time step t , if I  X  N = { 1 , 2 ,...,N } and J t  X  M = { 1 , 2 ,...,M } denote the (possibly random) choices of the learner and the opponent, respectively then, the loss suffered by the learner in that time step is L [ I t ,J t ], while the feedback received is H [ I t ,J t ].
 The goal of the learner (or player) is to minimize his cumulative loss P T t =1 L [ I t ,J t ]. The performance of the learner is measured in terms of the regret , defined as the excess cumulative loss he suffers compared to that of the best fixed action in hindsight: The regret usually grows with the time horizon T . What distinguishes between a  X  X uccessful X  and an  X  X n-successful X  learner is the growth rate of the regret. A regret linear in T means that the learner does not ap-proach the performance of the optimal action. On the other hand, if the growth rate is sublinear, it is said that the learner can learn the game.
 In this paper we restrict our attention to stochastic games, adding the extra assumption that the oppo-nent generates the outcomes with a sequence of inde-pendent and identically distributed random variables. This distribution will be called the opponent strategy . As for the player, a player strategy (or algorithm) is a (possibly random) function from the set of feedback sequences (observation histories) to the set of actions. In stochastic games, we use a slightly different notion of regret: we compare the cumulative loss with that of the action with the lowest expected loss.
 The  X  X ardness X  of a game is defined in terms of the minimax expected regret (or minimax regret for short): where  X  M is the space of opponent strategies, and A is any strategy of the player. In other words, the minimax regret is the worst-case expected regret of the best algorithm.
 A question of major importance is how the minimax regret scales with the parameters of the game, such as the time horizon T , the number of actions N , the num-ber of outcomes M . In the stochastic setting, another measure of  X  X ardness X  is worth studying, namely the individual or problem-dependent regret, defined as the expected regret given a fixed opponent strategy. 1.1. Related work Two special cases of partial monitoring have been extensively studied for a long time: full-information games, where the feedback carries enough informa-tion for the learner to infer the outcome for any action-outcome pair, and bandit games, where the learner receives the loss of the chosen action as feed-back. Since Vovk (1990) and Littlestone &amp; Warmuth (1994) we know that for full-information games, the minimax regret scales as  X ( games, the minimax regret has been proven to scale as  X (  X  ual regret of these kind of games has also been studied: Auer et al. (2002) showed that given any opponent strategy, the expected regret can be upper bounded ference between the loss of action i and an optimal action.
 Finite partial monitoring problems were introduced by Piccolboni &amp; Schindelhauer (2001). They proved that a game is either  X  X opeless X  (that is, its minimax re-gret scales linearly with T ), or the regret can be upper tion of hopeless games. Namely, a game is hopeless if it does not satisfy the global observability condition (see Definition 5 in Section 2). Their upper bound Cesa-Bianchi et al. (2006), who also showed that there exists a game with a matching lower bound.
 Cesa-Bianchi et al. (2006) posted the problem of char-acterizing partial-monitoring games with minimax re-since then. The first steps towards classifying partial-monitoring games were made by Bart  X ok et al. (2010), who characterized almost all games with two outcomes . They proved that there are only four categories: games with minimax regret 0, e  X ( and named them trivial , easy , hard , and hopeless , re-that are easy, but can not easily be  X  X ransformed X  to a bandit or full-information game. Later, Bart  X ok et al. (2011) proved the same results for finite stochastic par-tial monitoring, with any finite number of outcomes. The condition that separates easy games from hard games is the local observability condition (see Defini-tion 6). The algorithm Balaton introduced there works by eliminating actions that are thought to be suboptimal with high confidence. They conjectured in their paper that the same classification holds for non-stochastic games, without changing the condition. Re-cently, Foster &amp; Rakhlin (2011) designed the algorithm NeighborhoodWatch that proves this conjecture to be true. Foster &amp; Rakhlin prove an upper bound on a stronger notion of regret, called internal regret . 1.2. Contributions In this paper, we extend the results of Bart  X ok et al. (2011). We introduce a new algorithm, called CBP for  X  C onfidence B ound P artial monitoring X , with var-ious desirable properties. First of all, while Balaton only works on easy games, CBP can be run on any non-hopeless game, and it achieves (up to logarithmic factors) the minimax regret rates both for easy and hard games (see Corollaries 3 and 2). Furthermore, it also achieves logarithmic problem-dependent regret for easy games (see Corollary 1). It is also an  X  X nytime X  algorithm, meaning that it does not have to know the time horizon, nor does it have to use the doubling trick, to achieve the desired performance.
 The final, and potentially most impactful, aspect of our algorithm is that through additional assumptions on the set of opponent strategies, the minimax regret of even hard games can be brought down to e  X ( While this statement may seem to contradict the re-sult of Bart  X ok et al. (2011), in fact it does not. For the precise statement, see Theorem 2. We call this prop-erty  X  X daptiveness X  to emphasize that the algorithm does not even have to know that the set of opponent strategies is restricted. Recall from the introduction that an instance of partial monitoring with N actions and M outcomes is defined by the pair of matrices L  X  R N  X  M and H  X   X  N  X  M , where  X  is an arbitrary set of symbols. In each round t , the opponent chooses an outcome J t  X  M and simul-taneously the learner chooses an action I t  X  N . Then, the feedback H [ I t ,J t ] is revealed and the learner suf-fers the loss L [ I t ,J t ]. It is important to note that the loss is not revealed to the learner.
 As it was previously mentioned, in this paper we deal with stochastic opponents only. In this case, the choice of the opponent is governed by a sequence J 1 ,J 2 ,... of i.i.d. random variables. The distribution of these variables p  X   X  M is called an opponent strategy , where  X 
M , also called the probability simplex, is the set of all distributions over the M outcomes. It is easy to see that, given opponent strategy p , the expected loss of action i can be expressed as ` &gt; i p , where ` i is defined as the column vector consisting of the i th row of L . The following definitions, taken from Bart  X ok et al. (2011), are essential for understanding how the struc-ture of L and H determines the  X  X ardness X  of a game. Action i is called optimal under strategy p if its ex-pected loss is not greater than that of any other ac-action is optimal under opponent strategies yields the Definition 1 (Cell decomposition) . For every action i  X  N , let C i = { p  X   X  M : action i is optimal under p } . The sets C ,..., C N constitute the cell decomposition of  X  M . Now we can define the following important properties of actions: Definition 2 (Properties of actions) .  X  Action i is  X  Action i is called degenerate if it is non- X  If an action is neither dominated nor degener-From the definition of cells we see that a cell is either empty or it is a closed polytope. Furthermore, Pareto-optimal actions have ( M  X  1)-dimensional cells. The following definition, important for our algorithm, also uses the dimensionality of polytopes: Definition 3 (Neighbors) . Two Pareto-optimal ac-tions i and j are neighbors if C i  X  X  j is an ( M  X  2) -dimensional polytope. Let N be the set of unordered pairs over N that contains neighboring action-pairs. The neighborhood action set of two neighboring ac-tions i , j is defined as N + i,j = { k  X  N : C i  X  X  j  X  X  Note that the neighborhood action set N + i,j naturally contains i and j . If N + i,j contains some other action k then either C k = C i , C k = C j , or C k = C i  X  X  j . In general, the elements of the feedback matrix H can be arbitrary symbols. Nevertheless, the nature of the symbols themselves does not matter in terms of the structure of the game. What determines the feedback structure of a game is the occurrence of identical sym-bols in each row of H . To  X  X tandardize X  the feedback structure, the signal matrix is defined for each action: Definition 4. Let s i be the number of distinct sym-bols in the i th row of H and let  X  1 ,..., X  s i  X   X  be an enumeration of those symbols. Then the sig-nal matrix S i  X  { 0 , 1 } s i  X  M of action i is defined as S The idea of this definition is that if p  X   X  M is the op-ponent X  X  strategy then S i p gives the distribution over the symbols underlying action i . In fact, it is also true that observing H [ I t ,J t ] is equivalent to observing the vector S I out loss of generality that the learner X  X  observation at time step t is the random vector Y t = S I that the dimensionality of this vector depends on the action chosen by the learner, namely Y t  X  R s I t . The following two definitions play a key role in classify-ing partial-monitoring games based on their difficulty. Definition 5 (Global observability (Piccolboni &amp; Schindelhauer, 2001)) . A partial-monitoring game ( L,H ) admits the global observability condition, if for all pairs i,j of actions, ` i  X  ` j  X  X  X  k  X  N Im S &gt; k . Definition 6 (Local observability (Bart  X ok et al., 2011)) . A pair of neighboring actions i,j is said to be locally observable if ` i  X  ` j  X   X  k  X  N + denote by L  X  N the set of locally observable pairs of actions (the pairs are unordered). A game satisfies the local observability condition if every pair of neighbor-ing actions is locally observable, i.e. , if L = N . The main result of Bart  X ok et al. (2011) is that lo-cally observable games have e O ( It is easy to see that local observability implies global observability. Also, from Piccolboni &amp; Schindelhauer (2001) we know that if global observability does not hold then the game has linear minimax regret. From now on, we only deal with games that admit the global observability condition.
 A collection of the concepts and symbols introduced in this section is shown in Table 1.
 Our algorithm builds on the core idea underlying al-gorithm Balaton of Bart  X ok et al. (2011), so we start with a brief review of Balaton . Balaton uses sweeps to successively eliminate suboptimal actions. This is done by estimating the differences between the expected losses of pairs of actions, i.e. ,  X  i,j ( ` i  X  ` j ) &gt; p  X  ( i,j  X  N ). In fact, Balaton exploits that it suffices to keep track of  X  i,j for neighboring pairs of actions ( i.e. , for action pairs i,j such that { i,j } X  X  ). This is because if an action i is suboptimal, it will have a neighbor j that has a smaller expected loss and so the action i will get eliminated when  X  i,j is checked. Now, to estimate  X  i,j for some { i,j } X  X  one observes that under the local observability condition, it holds that ` i  X  ` j = P k  X  N + tors v i,j,k  X  R  X  k . This yields that  X  i,j = ( ` i  X  ` P of the distribution of symbols under action k , which can be estimated by  X  k ( t ), the empirical frequencies of the individual symbols observed under k up to time t , Since none of the actions in N + i,j can get eliminated before one of { i,j } gets eliminated, the estimate of  X  i,j gets refined until one of { i,j } is eliminated. The essence of why Balaton achieves a low regret is as follows: When i is not a neighbor of the optimal action i  X  one can show that it will be eliminated be-fore all neighbors j  X  X etween i and i  X   X  get eliminated. Thus, the contribution of such  X  X ar X  actions to the re-gret is minimal. When i is a neighbor of i  X  , it will be eliminated in time proportional to  X   X  2 i,i  X  . Thus the contribution to the regret of such an action is propor-contribution to the regret of i cannot be larger than  X 
T . Thus, the contribution of i to the regret is at most min(  X  i T, X   X  1 i )  X  When some pairs { i,j } X  X  are not locally observable, one needs to use actions other than those in N + i,j construct an estimate of  X  i,j . Under global observabil-V i,j  X  N and an appropriate set of vectors v i,j,  X  . Thus, if the actions in V i,j are kept in play, one can estimate the difference  X  i,j as before, using P k  X  N + This motivates the following definition: Definition 7 (Observer sets and observer vectors) . The observer set V i,j  X  N underlying a pair of neigh-boring actions { i,j } X  X  is a set of actions such that isfy the equation ` i  X  ` j = P k  X  V of the observer sets and vectors is restricted so that V server set V i,j is constrained to be a superset of N and in particular when a pair { i,j } is locally observ-able, V i,j = N + i,j must hold. Finally, for any action the confidence width of action k .
 The reason of the particular choice V i,j = N + i,j for lo-cally observable pairs { i,j } is that we plan to use V i,j (and the vectors v i,j,  X  ) in the case of locally observable pairs, too. For not locally observable pairs, the whole action set N is always a valid observer set (thus, V i,j can be found). However, whenever possible, it is bet-ter to use a smaller set. The actual choice of V i,j (and v i,j,k ) is postponed until the effect of this choice on the regret becomes clear.
 With the observer sets, the basic idea of the algorithm becomes as follows: (i) Eliminate the suboptimal ac-tions in successive sweeps; (ii) In each sweep, enrich the set of remaining actions P ( t ) by adding the ob-server actions underlying the remaining neighboring plore the actions in P ( t )  X  X  ( t ) to update the symbol frequency estimate vectors  X  k ( t ). Another refinement is to eliminate the sweeps so as to make the algorithm enjoy an advantageous anytime property. This can be achieved by selecting in each step only one action. We propose the action to be chosen should be the one that maximizes the reduction of the remaining uncertainty. This algorithm could be shown to enjoy locally observable games. However, if we run it on a non-locally observable game and the opponent strat-egy is on C i  X  X  j for { i,j } X  X  \L , it will suffer linear regret! The reason is that if both actions i and j are optimal, and thus never get eliminated, the algorithm will choose actions from V i,j \ N + i,j too often. Fur-thermore, even if the opponent strategy is not on the boundary the regret can be too high: say action i is optimal but  X  j is small, while { i,j }  X  N \L . Then a third action k  X  V i,j with large  X  k will be chosen proportional to 1 / X  2 j times, causing high regret. To combat this we restrict the frequency with which an action can be used for  X  X nformation seeking purposes X . For this, we introduce the set of rarely chosen actions, where  X  k  X  R , f : N  X  R are tuning parameters to be chosen later. Then, the set of actions available at time regret in the general case, while it will also be shown to achieve an O ( a benign strategy. A pseudocode for the algorithm is given in Algorithm 1.
 It remains to specify the function getPolytope . It gets the array halfSpace as input. The array half-Space stores which neighboring action pairs have a confident estimate on the difference of their expected losses, along with the sign of the difference (if confi-Algorithm 1 CBP Input: L , H ,  X  ,  X  1 ,..., X  N , f = f (  X  )
Calculate P , N , V i,j , v i,j,k , W k for t = 1 to N do end for for t = N + 1 ,N + 2 ,... do end for dent). Each of these confident pairs define an open halfspace, namely  X  The function getPolytope calculates the open poly-tope defined as the intersection of the above halfspaces. Then for all i  X  P it checks if C i intersects with the open polytope. If so, then i will be an element of P ( t ). Similarly, for every { i,j } X  X  , it checks if C i  X  C j in-tersects with the open polytope and puts the pair in N ( t ) if it does.
 Note that it is not enough to compute P ( t ) and then drop from N those pairs { k,l } where one of k or l is excluded from P ( t ): it is possible that the boundary C k  X  X  l between the cells of two actions k,l  X  P ( t ) is included in the rejected region. For an illustration of cell decomposition and excluding cells, see Figure 1. Computational complexity The computationally heavy parts of the algorithm are the initial calculation of the cell decomposition and the function getPoly-tope . All of these require linear programming. In the preprocessing phase we need to solve N + N 2 linear programs to determine cells and neighboring pairs of cells. Then in every round, at most N 2 linear pro-grams are needed. The algorithm can be sped up by  X  X aching X  previously solved linear programs. The first theorem in this section is an individual upper bound on the regret of CBP .
 Theorem 1. Let ( L,H ) be an N by M partial-monitoring game. For a fixed opponent strategy p  X   X   X 
M , let  X  i denote the difference between the expected loss of action i and an optimal action. For any time horizon T , algorithm CBP with parameters  X  &gt; 1 ,  X  k = W
E [ R T ]  X  X  X  stants.
 short explanation of the different terms in the bound. The first term corresponds to the confidence interval failure event. The second term comes from the ini-tialization phase of the algorithm. The remaining four terms come from categorizing the choices of the algo-rithm by two criteria: (1) Would I t be different if R ( t ) was defined as R ( t ) = N ? (2) Is I t  X  P ( t )  X  N These two binary events lead to four different cases in the proof, resulting in the last four terms of the bound. An implication of Theorem 1 is an upper bound on the individual regret of locally observable games: Corollary 1. If G is locally observable then
E [ R T ]  X  X Proof. If a game is locally observable then V\ N + =  X  , leaving the last two sums of the statement of Theo-rem 1 zero.
 The following corollary is an upper bound on the min-imax regret of any globally observable game.
 Corollary 2. Let G be a globally observable game. Then there exists a constant c such that the expected regret can be upper bounded independently of the choice of p  X  as The following theorem is an upper bound on the min-imax regret of any globally observable game against  X  X enign X  opponents. To state the theorem, we need a new definition. Let A be some subset of actions in G . We call A a point-local game in G if T i  X  A C i 6 =  X  . Theorem 2. Let G be a globally observable game. Let  X  0  X   X  M be some subset of the probability simplex such that its topological closure  X  0 has  X  0  X  X  i  X  X  j =  X  for every { i,j } X  X  \L . Then there exists a constant c such that for every p  X   X   X  0 , algorithm CBP with achieves where b is the size of the largest point-local game, and d pmax is a game-dependent constant.
 In a nutshell, the proof revisits the four cases of the proof of Theorem 1, and shows that the terms which for a limited number of time steps.
 Remark 1 . Note that the above theorem implies that CBP does not need to have any prior knowledge about  X  0 to achieve rithm is  X  X daptive X .
 An immediate implication of Theorem 2 is the follow-ing minimax bound for locally observable games: Corollary 3. Let G be a locally observable finite par-tial monitoring game. Then there exists a constant c such that for every p  X   X  M , Remark 2 . The upper bounds in Corollaries 2 and 3 both have matching lower bounds up to logarith-mic factors (Bart  X ok et al., 2011), proving that CBP achieves near optimal regret in both locally observable and non-locally observable games. We demonstrate the results of the previous sections us-ing instances of Dynamic Pricing, as well as a locally observable game. We compare the results of CBP to two other algorithms: Balaton (Bart  X ok et al., 2011) which is, as mentioned earlier in the paper, the first algorithm that achieves e O ( locally observable finite stochastic partial-monitoring games; and FeedExp3 (Piccolboni &amp; Schindelhauer, all non-hopeless finite partial-monitoring games, even against adversarial opponents. 5.1. A locally observable game The game we use to compare CBP and Balaton has 3 actions and 3 outcomes. The game is described with the loss and feedback matrices: We ran the algorithms 10 times for 15 different stochastic strategies. We averaged the results for each strategy and then took pointwise maximum over the 15 strategies. Figure 2(a) shows the empirical minimax regret calculated the way described above. In addition, Figure 2(b) shows the regret of the algorithms against one of the opponents, averaged over 100 runs. The results indicate that CBP outperforms both FeedExp and Balaton . We also observe that, although the asymptotic performace of Balaton is proven to be better than that of FeedExp, a larger constant factor makes Balaton lose against FeedExp even at time step ten million. 5.2. Dynamic Pricing In Dynamic Pricing, at every time step a seller (player) sets a price for his product while a buyer (opponent) secretly sets a maximum price he is willing to pay. The feedback for the seller is  X  X uy X  or  X  X o-buy X , while his loss is either a preset constant (no-buy) or the differ-ence between the prices (buy). The finite version of the game can be described with the following matrices: L = This game is not locally observable and thus it is  X  X ard X  (Bart  X ok et al., 2011). Simple linear algebra gives that the locally observable action pairs are the  X  X onsecutive X  actions ( L = {{ i,i + 1 } : i  X  N  X  1 } ), while quite surprisingly, all action pairs are neighbors. We compare CBP with FeedExp on Dynamic Pric-ing with N = M = 5 and c = 2. Since Balaton is undefined on not locally observable games, we can not include it in the comparison. To demonstrate the adaptiveness of CBP , we use two sets of opponent strategies. The  X  X enign X  setting is a set of opponents which are far away from  X  X angerous X  regions, that is, from boundaries between cells of non-locally observ-able neighboring action pairs. The  X  X arsh X  settings, however, include opponent strategies that are close or on the boundary between two such actions. For each setting we maximize over 15 strategies and average over 10 runs. We also compare the individual regret of the two algorithms against one benign and one harsh strategy. We averaged over 100 runs and plotted the 90 percent confidence intervals.
 The results (shown in Figures 3 and 4) indicate that CBP has a significant advantage over FeedExp on benign settings. Nevertheless, for the harsh settings FeedExp slightly outperforms CBP , which we think is a reasonable price to pay for the benefit of adaptivity. Audibert, J-Y. and Bubeck, S. Minimax policies for adversarial and stochastic bandits. In COLT 2009, Proceedings of the 22nd Annual Conference on Learning Theory, Montr  X eal, Canada, June 18 X  21, 2009 , pp. 217 X 226. Omnipress, 2009.
 Auer, P., Cesa-Bianchi, N., and Fischer, P. Finite-time Analysis of the Multiarmed Bandit Problem. Mach. Learn. , 47(2-3):235 X 256, 2002. ISSN 0885-6125. Auer, P., Cesa-Bianchi, N., Freund, Y., and Schapire, R.E. The nonstochastic multiarmed bandit problem. SIAM Journal on Computing , 32(1):48 X 77, 2003. Bart  X ok, G., P  X al, D., and Szepesv  X ari, Cs. Toward a classification of finite partial-monitoring games. In ALT 2010, Canberra, Australia , pp. 224 X 238, 2010. Bart  X ok, G., P  X al, D., and Szepesv  X ari, Cs. Minimax re-gret of finite partial-monitoring games in stochastic environments. In COLT , July 2011.
 Cesa-Bianchi, N., Lugosi, G., and Stoltz, G. Regret minimization under partial monitoring. In Infor-mation Theory Workshop, 2006. ITW X 06 Punta del Este. IEEE , pp. 72 X 76. IEEE, 2006.
 Foster, D.P. and Rakhlin, A. No internal regret via neighborhood watch. CoRR , abs/1108.6088, 2011. Littlestone, N. and Warmuth, M.K. The weighted majority algorithm. Information and Computation , 108:212 X 261, 1994.
 Piccolboni, A. and Schindelhauer, C. Discrete pre-diction games with arbitrary feedback and loss. In COLT 2001 , pp. 208 X 223. Springer-Verlag, 2001. Vovk, V.G. Aggregating strategies. In Annual Work-
