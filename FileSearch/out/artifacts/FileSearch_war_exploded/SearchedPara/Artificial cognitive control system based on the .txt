 1. Introduction ( Sanz and Go  X  mez, 2008 ). Recent results in different disciplines, such as neuroscience, psychology, artificial intelligence, and robotics, and results related with new machines and intelligent processes, have laid the foundations for a computational theory of intelligence ( Meystel, 1994 ). There are many definitions of intelli-gence, one of them is the ability of human beings to perform new, highly complex, unknown or arbitrary cognitive tasks efficiently and then explain those tasks with brief instructions. It has spurred many researchers in areas of knowledge such as control theory, computer science, and artificial intelligence (AI) to explore new paradigms to achieve a qualitative change and then to move from intelligent control systems to artificial cognitive control strategies ( Albus, 2008 ).
 perception, action, deliberation, communication, and both indivi-dual interaction and interaction with the environment. What makes a natural cognitive system different is that it can function efficiently under circumstances that were not explicitly specified when the system was designed. In other words, cognitive systems have certain flexibility for dealing with the unexpected ( Vernon et al., 2007 ). A cognitive system can also reason in different ways, using large quantities of knowledge adequately represented in advance. In addition, a cognitive system can learn from experience to improve how it operates. Furthermore, it can explain itself and accept new directions, it can be aware of its own behavior and reflect upon its own capabilities, and it can respond robustly to unexpected changes. Thus, artificial cognitive agents must share with natural cognitive systems key traits and some cognitive and neurobiological principles.

General systems analysis about the heterogeneous aspects of cognitive phenomena demonstrates that, bearing in mind the known mechanisms of human mind, cognition can be defined as model-based behavior ( Huerta and Nowotny, 2009; Ito, 2008;
Rabinovich et al., 2006 ). During cognitive or executive control, the human brain and some animal brains process a wide variety of stimuli in parallel and choose an appropriate action (task context), eveninthepresenceofaconflictofobjectivesandgoals.Thus,there is a shift from attention control (a selective aspect of information processing that enables one to focus on a relevant objective and ignore an unimportant one) to cognitive change in itself.
At present there is a wide variety of strategies and initiatives related with the partial or full emulation of cognitive capacities in computational architectures. Each one is based on a different stance regarding the nature of cognitive capacity, what makes a cognitivesystem,andhowtoanalyzeandsynthesizesuchasystem.
However,thereare twowidespread trends, the cognitivist approach (reflected, for example, in architectures such as Soar , EPIC , and
ICARUS ), based on representational systems as a tool for processing information symbolically ( Pylyshyn, 1984 ), and the approach that describes emerging systems ( AAR , Global Workspace , and SASE ), which include connectionist systems, dynamic systems, and enac-tive systems ( Thelen and Smith, 1994 ). They are all based to a greaterorlesserextentontheprinciplesofself-organization( Clark, 2001 ). The cognitivist approach rests on cognition X  X  being devel-oped on the basis of symbolic representations, while the connec-tionist approach treats cognition as an enactive system, that is, a system defined  X  X  X s a simple network of processes that it produces itself and that constitutes its identity X  X . This sense-making ( Weber andVarela,2002 )hasitsrootsinautonomy,anautonomoussystem being a distinguishable individual ( Froese, 2007 ). There are also hybrid models that combine the two visions; i.e., they use representations which are only constructed by the system itself when it interacts with and explores its environment.

On the other hand, there are thousands of complex systems and processes which are waiting for artificial cognitive control strate-gies in order to behave adequately before disturbances and uncertainties ( Sanz et al., 2007 ). In this century, the manufacturing is a clear example of a dynamic social and technical system operating in a turbulent environment characterized by continuous changes at all levels, from the overall manufacturing system network right down to individual factories, production systems, machines, components, and technical processes. Nowadays, the highest priority goes to the development of technologies that enable faster, more efficient manufacturing by means of coopera-tive, self-organized, self-optimized behavior through process con-trol systems. In addition, manufacturing processes are conditioned by the presence of nonlinear and time-variant dynamics that are determined by forces, torques, and other variables  X  even, in the case of nano-scale processes, with strong interactions at inter-molecular level. These characteristics increase the functional complexity of manufacturing due to nonlinearities, and they exponentially increase the functional and precision requirements of sensors, actuators, and computing resources.

This work is based on the shared circuits model (SCM) approach ( Hurley, 2008 ). SCM approach serves as the foundation for design-ing an artificial cognitive control system where imitation, delib-eration, and mindreading processes are emulated through computational efficient algorithms in a computational architec-ture. Hurley X  X  approach suggests that these capacities can be achieved just by having control mechanisms, other-action mirror-ing, and simulation. An artificial cognitive control system should incorporate these capacities and therefore it would be capable of responding efficiently and robustly to nonlinearities, disturbances and uncertainties. The modifications introduced to the SCM approach make that this preliminary version can be applied to design a control architecture for a case study: a high-performance drilling process. In order to improve efficiency of a high-perfor-mance drilling process, the current study focuses on the design and implementation of a control system for drilling force. This article is organized into five sections. A brief description of SCM as described by Hurley is given in Section 2. The modified shared circuits model (MSCM) incorporated to an architecture in which is implemented an artificial cognitive control system is explained in Section 3. Section 4 shows the experimental results of applying a simplified implementation of the MSCM applied to a case study represented by a high-performance drilling process. Finally, the conclusions are presented in Section 5. 2. Shared circuits model to enable imitation, deliberation, and mindreading. A review
SCM approach is supported on a layered structure to describe how certain human capacities (i.e., imitation, deliberation, and mindreading) can be deployed thanks to subpersonal mechanisms of control, mirroring, and simulation ( Fig. 1 ). Basically, SCM is based on the observation of the human brain. Some brain regions are in charge of coding actions for reaching objectives and how other regions code means for reaching objectives. So, the brain may be envisaged as making use of not only inverse models that estimate the necessary motor plan for accomplishing an objective in a given context,butalsoaforwardmodelthatenablesthebraintoanticipate theperceivableeffectsofitsmotorplan,withtheobjectofimproving response efficiency. The first kind of behavior is covered by the action of layer 1 of SCM, while the behavior described in the forward model iscovered bylayer2 ofSCM.Layer4 of the schemeisthe layer in charge of controlling when to perform one type of behavior or another.

Other kind of behavior is the imitation that, in addition to playing an important role in both the sociability and the develop-ment of the human adult, is a means of learning. Imitative learning requires mirroring the actions of others in response to given circumstances. In order to perform this task, first the observer copies the input/output associations already observed, inhibiting the mirroring mechanism. SCM represents this mirroring capacity in its layer 3. The interaction between layer 3 and the inhibition control performed by layer 4 serves to emulate the agent X  X  capacity to distinguish self from other.

SCM also describes, from a functional point of view, how the agent can carry out the cognitive skill of mindreading. This capacity is emulated by the operation of layer 5, which is in charge of simulating possible other-related inputs that are external (exo-genous) to the agent. 3. An architecture for artificial cognitive control. Modified shared circuits model
A computational architecture for an artificial cognitive control system is proposed for high-performance manufacturing pro-cesses, underpinned by the modified shared circuits model (MSCM). Therefore, it is necessary to enrich SCM approach from acomputationalscienceviewpoint.Todevelopacomplex cognitive agent, it is necessary to make a global structure that would be a collection of information processing elements, linked by informa-tion forwarding elements layered atop physical/information inter-faces ( Sanz et al., 2009 ).

This section explains the modifications introduced to SCM to enrich and improve its capacities, taking into account the sugges-tions reported in the state-of-the-art and the main constraints of the SCM approach. Since a layer-based model is incorporated in a computational architecture, five modules are constructed made up of one or more processes performed by the above-described layers.
Moreover, some limitations of SCM approach and some modifica-tions to enrich and improve the SCM approach are introduced.
A functional parallelism between layers in SCM and modules in are established.
 while the MSCM proposal can be applied to any domain. The work developed by Vijaya Kumar et al. (2009) , Jamaludin et al. (2009) ,or
Liao et al. (2008) are examples of control strategies that cannot be extended to other processes. The first is specifically designed for elevator control, the second for the control of a helicopter flight, while the third work suggests a fuzzy logic controller for an oil refinery process. In the development of a self-tuning fuzzy logic controller for elevator system presented by Kumar et al., the controller is adjusted by modifying functions and selecting the most appropriate fuzzy rule set based on measure performance results. This update of the parameters is costly and it slows the control process. The architecture presented in MSCM uses a model, thus the control process is faster, and only updates the parameters in the presence of noise, as discussed below.
 by Felix et al. (2009) shows a cognitive solution for this problem, due to which it has to face with nonlinearities in the synchronous generator dynamics. The nonlinearities at the control problem are present at MSCM control, but the neural block control uses a specific mathematical model developed to control a synchronous generator. The intelligent distributed and supervised flow control methodology for production systems presented by Tamani et al. (2009) describesdistributedcontrolarchitecture.AsMSCM,ittakes inherent advantages such as modularity, reconfigurability, adapt-ability, fault tolerance, extensibility, etc. But the MSCM proposal defines each module in terms of cognitive ability that emulates, while Tamani X  X  proposal takes into account the control planning.
This and other proposals before showed and submitted at Engi-neering Applications of Artificial Intelligence are not biological inspired. They do not emulate some capabilities of a natural cognitive system that show an effective behavior through percep-tion, action, deliberation, communication including individual interaction and interaction with the environment. Similar to
MSCM, Chen and Chiang (2008) and Chu et al. (2008) describe more general intelligent control systems that use an adaptive control law. But they model high-level cognitive elements of human reasoning, and they do not address the low level details of perception and real-time behavior in the natural environment.
MSCM embodies a computational infrastructure that is plausible from a neuroscience and psychological viewpoint. However, the modularity and flexibility of MSCM allow that it can be imple-mentedusingthesuggestionsoftheseworksor,forexample,taking into account the robust adaptive interval proposed by Lin (2009) . work are twofold. Firstly, the SCM is enriched and improved on the basis of the state of the art. For example, SCM does not cover the descriptionofan executivelevelto managefunctioningoflayers, so the module in charge of this task is also described. Secondly, the implementation of an artificial cognitive control system uses the enriched SCM and, the application to a high-performance manu-facturing process corroborates on the basis of experimental results the suitability of the suggested approach. 3.1. Module 1: basic adaptive feedback control objectives so that an output can be generated. However, SCM does not establish how the agent selects appropriate objectives ( Paglieri and Castelfranchi, 2008 ) or where layer 1 X  X  output is sent. Another aspect to consider is how the exogenous signal is integrated into the input signal. SCM does not specify whether the exogenous signal forms part of the input signal or, on the contrary, modifies it.
Ifthelater,whethertheexogenoussignalconstitutesadisturbance, and, if so, the type of disturbance created.

SCM approach lies within the scope of philosophy, psychology, and neuroscience, so it does not consider essential aspects of the problemsthatmustbe addressedto representandincorporateSCM to a computational architecture. The layer 1 (feedback control) is vaguely described in Hurley X  X  paper as a flow of information supplied by the effect of the actual output on the environment, taking account of the actual state of the environment, i.e., the exogenous signal. Therefore, SCM approach does not clearly justify how the agent learns from observing others, i.e., how successful instrumental of other agents in its behavior associations are incorporated ( Paglieri and Castelfranchi, 2008; Nielsen, 2008 ).
In this work from the perspective on System Theory and Computational Science, module 1 of MSCM is equivalent to layer 1 in SCM. Module 1 is represented by a controller C and an optimization/adjustment process for this controller. This controller performs the instrumental association between input and output, similar to the description in SCM and very similar to closed-loop control systems widely used since the early 20th century ( Fig. A.1 ).
For the sake of clarity it is assumed that the feedback ( y 0 ) is the process output with noise and disturbances ( y nn ). Thus, the proposed system partakes of the enactive nature underlined by
SCM. The feedback can be inhibited to benefit the output prediction ( y ) generated by module 2, as shown later. So, similar to layer 1 of
SCM, the inputs are a reference signal r , according with the objectives, and the system output y 00 . The control signal u 00 is the output of this module.

Thisoutput u 00 issentviatheinterfacethatenables thedescribed architecture to communicate with the actuator system or the process P that comprises it. This does not include the exogenous input, because, in order to check whether the desired objective has been reached, the objective is only compared with the internal signal y 00 . The exogenous input will influence on feedback process, since the information it provides will depend on the actual characteristics and influence of the environment on the process itself.

In order to harmonize all components of module 1, unlike SCM, an external module in charge of objectives management is pro-posed to run at the executive level. Moreover, the instrumental association-making process is equipped with an initial knowledge base of instrumental associations, which undergoes modification as agents learn from their environment.

Apart from this own knowledge base, there is another knowl-edge base, a sort of common repository, which is enriched and modified by the successful input/output relationships the agents observe. This knowledge base is managed by module 3. In SCM, this process is equivalent to learning, and it is where observation is referred to, since an architecture made up of agents is proposed. In this work, there is a space to hold common, shared knowledge modified by all the agents that have the same role or belong to the same type. Inter-agent communications are thus eliminated, and the architecture is accordingly simplified. Nevertheless, this solu-tion implies that a mechanism for controlling access to the knowledge base has to be included.

Using these two knowledge bases, an agent learns through what modules 3 and 1 do. The knowledge base managed by module 3 collects and manifests the behavior of others on the basis of what is envisaged in the common repository, and it is in the second knowledge base managed by module 1, where this new knowledge isincorporated,asweshallseelater.Ifneithertheactionsdescribed in the instrumental associations used by module 1 nor any other imitable actions are successful, module 1 will be the module in charge of carrying out a new action resulting from a controller optimization/adjustment. Module 1 also contains an optimization/ adjustment process.
 An optimization/adjustment procedure is introduced in MSCM. This procedure uses a set of inverse models M that module 2 handles, as shown later. The minimization or maximization criterion in optimization is determined by performance index J (see Module A: perfomance index computation ). Also participating in this module is an anticipative stage C 0 that attempts to speed up the control process by anticipating changes in the system reference. 3.2. Module A: performance index computation
SCM approach does not address temporal issues in which the different layers operate. However, in this work, the module that handlesthefunctionoflayer4isequippedwithexecutivefunctions to determine the sequence of functioning modules. It is very important to provide some relevant information about the perfor-mance of the agent. Module A in MSCM estimates a performance index or figure of merit ( Fig. A.1 ). This is an essential module because the performance index that is calculated by this module takespartinthedecisionofwhenmodulesactandinwhatmodules combined or not run.

In this work, the system utilizes a performance index or a figure of merit J to assess its own behavior. Therefore, a performance index J is calculated by weighting the figures of merit J selector J s according with the actual objectives and goals. These performance indices are basically error-based criteria (i.e., devia-tion of the process output with respect to the reference). 3.3. Module 0: objective management
It is important to note that SCM does not manage objectives and goals, therefore the management of objectives are not adequately addressed. Thus, it is necessary to include a module that carries out this task. The main role of module 0 is to supply a set of reference signals that module 1 uses to achieve the eventual objectives. MSCM can handle multi-objectives by technical, production, economic, and other objectives into references r i and the corre-sponding figures of merit J i at the system X  X  executive level.
The user sets the objectives into the objective manager or module 0 which translates these input into a reference signal r to the basic adaptive feedback control implemented to the module 1 (see Module 1: Basic Adaptive Feedback Control ) and into a perfor-mance index switch J s ( Fig. A.1 ). The performance index switch selects a figure of merit that evaluates how well the objectives are being achieved (see Module A : Performance Index or Figures of Merit Computation ). 3.4. Module 2: simulative prediction of effects for improved control
Layer 2 of SCM is the layer in charge of simulating the effects of a possible action on the future input signal anticipating and thus avoiding some negative effects of the feedback process ( Fig. A.1 ). However, as Behrendt critically pointed out ( Behrendt, 2008 ), it is too soon to predict the effect of an action on the environment when the action has never been observed before, as SCM approach assumed. Makino also remarks ( Makino, 2008 ) that SCM does not specify when the operation of layer 2 should be inhibited. He also enunciates the self-observation principle ( SOP ) and establishes that, in order to enact the property of mindreading (one of the properties whose enactment SCM describes), one needs to develop a predictive model on the basis of observation of one X  X  own movements. In this sense, Llina  X  s and Roy suggest that it is needed that the nervous system evolves a set of strategic and tactical rules to optimize prediction in order to generate intelligent motricity ( Llina  X  s and Roy, 2009 ).

The SOP principle serves to adapt some modification basically in layer 2 of SCM. In module 2 there is a set of forward models M on whose basis, given a control signal, a future output is generated. In order to perform this task, it is also relevant to take into account the actual characteristics of the environment, i.e., the exogenous input and/or the influence of noise and disturbances. This input differs from the output of the actuator system because it consists of external events to the agent independent of the agent X  X  action.
Makino also proposes that the inhibition performed by layer 4 should not be selective, but rather that it hinge on failure monitoring, and for that purpose he also suggests others modifica-tions to the original SCM approach. Failure monitoring seems to be the sole criterion for deciding whether or not to inhibit the deliberation and imitation capacities exercised by layers 2 and 3, respectively, since the system focuses on accomplishing certain objectives satisfactorily.

In order to be more specific, module 2 of this proposal runs beforethe actionisperformedinordertoevaluate/deliberateabout different action possibilities, depending on whether the agent X  X  criteria (module 1) are successful or not. However, it is always functioning with the object of its output X  X  being compared to the output of the actual process, so that module 1 can learn (see Module Interaction ).

SCM approach establishes that, when the actual input and the predicted input do not match, the actual input is used as module 1 X  X  input. This rule is applied in this work at module 2 of the MSCM since the meaning of the deviations of the process models is the presence of noise or unknown behavior y n . An artificial mechanism can be introduced to update the model and to use module 1 using a threshold for the level of noise. This mechanism is carried out by a process that observes the new effects and learns to incorporate these new effects into model M . 3.5. Module 3: mirroring for priming, emulation, and imitation
In layer 3 of SCM, the property of imitation is enacted. The agent carries out an action that mirrors or copies behavior observed in others. Hurley underlines this fact as an important one in the learning process. However, as Carpendale and Lewis critically observe ( Carpendale and Lewis, 2008 ), mere mirroring of an action does not lead to understanding of that action, as shown in the examples given by the authors. Carpendale and Lewis identify the cause of this error as the interrelationship between layers in SCM, whose description evades the distinction between information and knowledge. In addition, as Heyes pointed out ( Heyes, 2008 ), that
SCM adopts imitation as conjunction, i.e., a phenomenon that conjugates at the same time:
Learning of an instrumental relationship between a body movement and its effect, and thus a way of carrying out such movement.

Nevertheless, Heyes argues that in addition to the literature in this field, empirical evidence and daily experience support the idea that both learning through observation and imitation can occur independently. Under this philosophy, we tend to forget that the copying process often requires the observer to establish the necessary relationship between the visual information gained from observing the action and motor output, under conditions where it is not obvious how the necessary information for this sort of mapping has been acquired. So MSCM proposal enriches SCM work addressing  X  X  X earned knowledge X  X  as that knowledge that has been incorporated into the set of instrumental associations, that module 1 handles in MSCM. In the meantime, the knowledge that expresses imitation, used in layer 3 in SCM, remains in the set managed by module 3 in MSCM.
 mirroring the behavior of others, as depicted in Fig. A.1 .Theinputfor module 3 similarly to the input for module 1 may be determined eitherbythesysteminputplusfeedbackorbytheeffectssimulatedby module 2, depending on whether module 4 is inhibiting module 2 or not. The module 3 supports a set of inverse models M 1 that obtains an imitative output action taking the error e as input ( Fig. A.1 ). common knowledge base (discussed in detail in the description of module 1), a sort of repository shared by the agents, which is enriched and modified by the agent-observed relationships that prove successful. 3.6. Module 4: management of monitored output inhibition combined with prediction and/or mirroring evaluating different possibilities of action according with SCM. However, SCM approach does not identify when to inhibit, as
Makino remarked ( Makino, 2008 ). In addition, the conceptual scheme of SCM does not clarify the influence of the action of layer 4 on the interaction among layers 2 and 3. If layer 4 is not inhibiting the input simulation in layer 2, layer 3 may have as inputs the actual input or the input simulated by layer 2. Likewise, if layer 4 is not inhibiting the output simulation in layer 3, layer 2 may have as its input this simulated output or the actual output.
 is necessary to define and implement some mechanisms to decide whether or not to perform imitation. That is why the decision whether to enact deliberation (which occurs through the operation of module 2)or imitation (which is enacted inlayer 3) is proposed to bedoneinanothermodule.Themodulethatisinchargeofmanaging any orders of this sort issued to SCM layers 2 and 3. So, very close to
SCM layer 4, MSCM module 4 in our proposal, therefore performs executive functions within the system, as it is the module in charge of managing the aforesaid orders ( Fig. A.1 ).
 2008 ), inhibition depends on failure monitoring. What kind of inhibition that characterizes the deliberation, action, and imitation cycle, as described in Module Interaction . We might stress that, where there is a certain amount of disturbance in the environment, there must be no imitation. The use of a performance index J is used as a figure of merit in module 4 is introduced in MSCM approach. convincinglyaddressedintheSCM.Onepossibilityistoobservethe behavior of others when layer 4 is not inhibiting layer 3, in order to acquire the observed input/output relationships. In this work, since there is a common knowledge base where each agent contributes, no observation entailing an exchange of messages among agents is necessary.
 is enabled at module 2, because it depends on the system X  X  status (deliberating, acting, etc.), forming part of the system X  X  operational cycle. Therefore, module 4 is in cha rge of checking if the system shifts from one state to another (see Module Interaction ); accordingly, module 4 also decides when to perform optimization and learning. 3.7. Module 5: counterfactual input simulation the behavior of other processes on the basis of self X  X  own behavior.
In the computational system, this translates into a module in charge of simulating effects while running offline. In our proposal, this is module 5.

There is another process not reported in SCM approach, for simulating the reaction of other agents on the basis of output. In order to perform this task, there is a set of forward models, D ,that gather the associations between dictated action u 000 and the possible, or counterfactual, inputs (i.e., the reactions of others) ( Fig. A.1 ).
Module 4 of MSCM is the module that decides when to run this simulation; and when it does, actual process P is replaced by one of the models in set D that offers a prediction about what disturbances would occur. In this way, the system envisages the exogenous input that would occur if action u 000 were performed, thus enhancing the architecture X  X  enactive qualities. So, together with the operation of module 3 (not inhibited by module 4), it affords information about the acts of others. The system as a whole is enabled to deliberate about possible strategies that others may enact by incorporating the deliberation that takes place thanks to module 2 X  X  role.
The authors believe that, unlike as it is proposed in SCM, the decision to inhibit/not inhibit the operation of module 5 is not a self-decision, but may be made by module 4. The activation of one module alone or combined modules (modules 2, 3, and 5) enables one capacity or another; accordingly, it is advisable for the decision to be centralized in a single module. So deliberation on how a possible action would influence others or external noise (exogen-ous input) is made if modules 2 and 5 are running at once.
Deliberation on how a possible imitated action would influence others or external noise (exogenous input) is made if modules 2, 3 and 5 are functioning together. 3.8. Module interaction
The relationships and interactions among modules make pos-sible to artificially emulate the cognitive capacities of deliberation, imitation, and mindreading. In order to develop a computational framework aiming at control system design, it is necessary to address module interactions. Layers interactions is one of the main weaknesses of the SCM approach.

SCM approach just outlined these interactions, neglecting the temporal issues underneath how they operate. This temporal pattern is essential to clarify how and when the system acts, and therefore it is necessary to set a method or strategy to establish a sequence of actions for each module. In this section, one of the possible operating sequences of the different modules is explored, in view of the results already reported in the literature.
On the basis of the SCM approach it is possible to address person X  X  facial movements. These facial movements can be asso-ciated with the visual information related with observed facial movements, to enable imitation; and the model reaches the conclusion that some correspondences are innate and others are acquired with experience in front of a mirror, being imitated ( Hurley, 2008, p. 14 ). This leads us to posit that the starting point is some innate knowledge, although Hurley does not commit herself toestablishingwhichcorrespondencesareinnate,acquired,orboth ( Hurley, 2008, p. 14 ).

As Nielsen points out ( Nielsen, 2008 ), SCM overlooks a crucial component for imitation: motivati on. Whether or not imitation takes place, as we have seen, depends on whether or not module 3 has been inhibited from functioning. Under Makino X  X  assertions, the necessary motivation can be provided by failure monitoring: if the actual action is not successful, the imitati on mechanisms are triggered.
Hurley also asserts that an animal with resources for mirroring/ imitation may not have ever used a means to achieve an objective.
Butif a new observed means is copied and can be combined flexibly with objectives, the copied means is associated (with its corresponding objective), whereupon information is gathered about the new instrumental structure in the observed action, and learning by imitation is activated ( Hurley, 2008, p. 15 ).

In addition, using the foundations given by Meltzoff X  X  work ( Meltzoff, 2005 ), SCM suggests that first self is related with actions of other, as evidenced by observation of newborns X  imitation of the facial gestures of others. And afterwards, those self is related bidirectionally with the mental states of self in a certain way, through learning ( Hurley, 2008, p. 10 ).

Moreover, Hurley utilizes Tomasello X  X  ratchet effect ( Tomasello, 1999 ) to establish that the most skillful individuals are selective imitators, i.e., those who let others toil in their stead to find new means of attaining objectives, whereupon the selective imitators imitate the successful association, thus avoiding the cost of learning through trial and error ( Hurley, 2008, p. 8 ). However, as Carpendale and Lewis pointed out ( Carpendale and Lewis, 2008 ) upon analyzing SCM, the model offers no evident mechanismwhereby an action can be comprehended through the imitation process.

The above-mentioned arguments lead to introduce new mechanisms in the MSCM, as follows. If the result of evaluating the set of possible innate or already-acquired actions is not satisfactory, the action leading to the sought-after objective is imitated. If this action is satisfactory, the agent learns, incorporat-ing the action into the set of instrumental associations that the module 1 control uses. Otherwise, module 1 acquires new knowl-edge by means of an optimization process. The optimization process is the last mechanism, because it is more costly than copying an observed association.

Thus, learning is looked at the process with two paths of realization:
Adjustment/optimization of the control parameters handled by the models in module 1 or those that characterize the effect modeling steered by module 2.

Thetransferofinformationfromthemodelshandledbymodule3 (underpinning the capacity for imitation) to module 1, which is where control is performed. This information is translated into the inverse models that these modules handle.

Thus, in MSCM it is envisaged that an imitable action (or its equivalent instrumental association) has been learned when it is incorporated into the private set of inverse models belonging to module 1. It is through the operation of module 3 that the agent imitates behavior observed in other agents, or behavior that other agents have added to the common knowledge base after observing the behavior in question as successful, executing the behavior and achieving the desired end. If a specific agent observes that by imitating it is successful, this agent incorporates this knowledge in the private knowledge base handled by module 1.

The following knowledge bases, according to the described models, set upon the type of involved models, are proposed in this work:
Own set of forward models D , handled by module 5 to simulate the counterfactual effects of actions taken by the system. This set replaces process P if this simulation is required.
Own set of forward models for effects M , available for the module 2.

Set of inverse models for imitation M 1 , available for the module 3.

Inthis approach the strategic deliberation thatperforms module5 must participate in all deliberation phases of the procedure shown in Fig. 2 together with module 2. The rationale is that it is important to roughly know the eventual disturbances that could appear in deliberation to anticipate the influence of disturbance on the process.

An artificial cognitive control system is designed according the method described in Fig. 2 . In this iterative procedure, the evalua-tion of whether or not there is an excessive noise is determined by observing whether noise surpasses a certain threshold.
We can point out that, when a decision X  X  success is evaluated in the action, imitation, and learning procedure, success will depend directly on the error found for the decision X  X  implementation.
In order to carry out this process with the described modules, the modules are connectedas shown in Fig. A.1 . The main feature to stress here is that now module 4 is inhibiting module operation by acting on the switches to choose between the output calculated by modules 1, 2, and/or 3. Thus, module 4 is in charge of governing the action, imitation, and learning cycle.

The comparator at the output of module 2 enables to discern whetherthepredictedinputissimilartotheactualinput;ifitisnot, the actual input is used to calculate next control actions. The actuator system receives a signal and acts on the process input
P. Module 2 is always operating, because it handles a representation of the process (model). The process model is necessary to enable the optimization/adjustment in module 1 from the results of comparing theprocessoutputandmodeloutputinmodule2.Thisoptimization/ adjustment is not the learning process to incorporate successful imitative knowledge of module 3 to module 1. The optimization/ adjustment process is carried out when the imitative action is not successfulatthedeliberationstage,anditisnecessarythatmodule1 performs a new action enabled for this optimization/adjustment. module 5 can be treated as a single signal, since they act jointly on the suggested operating mechanism. However, this is an operating sequence procedure introduced in this work, and the two cases are considered separately aiming at further research on their activity independently. The interaction between modules is represented in detail in the expanded block diagram shown in Appendix A. would activate the imitate signal, not inhibiting the operation of module 3 (which covers the observations or instrumental associa-tions to be imitated).Moreover, it would activate to simulate signal; and it would deactivate the no-deliberate signal, i.e., enabling feedback on the basis of the output of module 2 without taking into account actual process P. 4. MSCM as the basement to control a complex process. A case study of high-performance drilling process control system based on MSCM foundations, the authors have selected the drilling process. Drilling is one of the most intensely used processes in the manufacturing of aircraft parts, automobile parts, and molds and dies in general. Due to the ferocious competition for markets, one of the main corporate objectives is to diminish down time to a minimum and increase product quality.
Production time is reduced through a higher material removal rate while taking advantage of the entire useful life of the cutting tool and producing the required finish quality. Increasing the material removal rate is directly related with maintaining a constant cutting force throughout the entire operation. Cutting force can be kept constant by modifying in real time the feed rate at which the cuttingtool worksthe material.Maximizingcuttingforce causes an increase in the material removal rate, but it speeds up wear on the cutting tool and may lead to cutting-tool breakage and impaired workpiece quality.
 inspired methods have improved methods for designing and implementing new intelligent control systems in order to regulate complex processes such as manufacturing processes. In the field of
AI-based techniques as applied to process control, hybridization or combination of more than one technique has led to novel neuro-fuzzy systems. Systems that combine fuzzy strategies, artificial neural network and evolutionary strategies facilitate tasks such as the modeling and control of highly complex nonlinear systems ( Babuska and Verbruggen, 2003 ).
 necessary theoretical framework to design an artificial cognitive control system. The most adequate paradigms can be selected from among the extensive choice provided by Control Theory, Artificial
Intelligence and its techniques, Computer Science, System Theory and Information Theory. The study and selection of the most viable method from among the many offered by the myriad topics mentioned above is not straightforward. One way is to exploit the advantages of neurofuzzy systems for combining the semantic transparency and intrinsic robustness of fuzzy systems ( Precup et al., 2008 ) with the learning ability of artificial neural networks.
These capacities for incorporating experience, for learning, and for adaptation and self-adjustment ( Fukuda and Kubota, 1999 ) are aligned with the capacities available in the MSCM for emulating sociocognitive experiences such as imitation, deliberation, and mindreading.
 The neurofuzzy system known as Adaptive Network-based
Fuzzy Inference System (ANFIS) is one of most well-known neurofuzzy system. Moreover, ANFIS is a pioneering work, as well as simplest computationally and the most viable for real-time applications ( Jang, 1993 ). For these reasons, ANFIS was selected to implement some tasks to be performed in some modules of the MSCM. The scheme of this neurofuzzy system is depictedin Fig.3 .Forthesakeofsimplicity,theinputisrepresented by f (feed rate) and the output is represented by F (drilling force).
Indeed, according to Linear and Nonlinear Control Theory there aremanystrategiesthatcanbeusedinthemodulesoftheMSCMby establishing analogies between the roles of the modules and control paradigms. A comparative study using certain resem-blances to some common control strategies such as feedforward control, adaptive control, predictive control, and robust control, to nameonlyafew,goesbeyondthescopeofthispaper.Theroleofthe internal models in the MSCM approach opens the possibility of using the design method provided by Internal Model Control paradigm, as shown in the next section. 4.1. Modules 2 and 3 from the viewpoint of internal model control paradigm
The IMC provides the necessary basement to design control systems by using direct and inverse process models for designing the control system ( Morari and Zafiriou, 1989 ). The use of the IMC paradigm theoretically guarantees control system robustness and stability in the presence of external disturbances. And after some simplifications, analogies between some modules of the MSCM and IMC paradigm can be drawn.

From the point of view of control theory, the basis scheme is a closed-loop control system having both forward model M (described in module 2) of the process to be controlled P situated in parallel with P , and an inverse model M 1 (the model handled in module 3), where y n represents environmental disturbances ( Fig. 4 ). Certainly, the IMC paradigm sets a control design strategy which explicitly uses a model of the process ( Goodwin et al., 2001 ).
This principle is very similar to the role assigned to the forward and inverse models defined in MSCM (see Module Interaction ), which are essential for implementing modules 2 and 3.

Fig. 4 shows a basic configuration of MSCM applied to control process P using modules 0, 2, and 3. These modules are selected to implement in a simplified manner the artificial cognitive control system. The main rationale of this selection is twofold. The first argument is the need of evaluating the interaction of two modules in the architecture and the second motivation is to show the computational viability of two relevant modules. Modules 2 and 3 interact to control using forward and inverse internal models, respectively, and this interaction is also essential for IMC scheme. As explained before, IMC is a widely applied control paradigm. Accordingto IMC paradigm,the development ofthese twomodules is relatively simple and it serves to provide some fast results that support the computational feasibility of an artificial cognitive control system inspired in the MSCM.

The role of modules 2 and 3 and their interaction can be effectively represented by neurofuzzy systems (e.g., ANFIS) and the IMC scheme. Module 0 receives the main objectives or goals and translates itintoareference value r . Inthiscasestudy, the reference is the drilling force y. Module 3 (inverse model), has one input (i.e., the difference between the reference value and the resulting value y 00 of the difference between the process output y and the direct model output y 2 ). The control action or control signal in this case study is the feed rate u 2 . The control signal or control action u on the process P and on the direct model used in module 2. Assuming an ideal case, with no disturbance and a perfect model used by module 2, the difference of forces y 00 is 0 and module 3 uses the reference r as input to generate the control signal u
For the sake of simplicity, a simplified artificial cognitive control system is implemented using a simplified architecture of MSCM shown in Fig. 4 . The IMC paradigm and the ANFIS neurofuzzy system are used in this work to provide functioning capabilities to modules 2 and 3. The main rationale of using both methods was previously explained. ANFIS is used to generate direct models (the model used in module 2) and inverse models (the model used in module 3) which shape the knowledge on which th e system is initially based.
The experimental data are obtained from tests performed on cast iron test pieces, a material commonly used in the aerospace industry. Two variables are taken into account in this process: the force on the piece at the Z -axis and the tool feed rate ( Fig. 5 ). The nominal operating conditions are a spindle speed of 870 rpm, an initial feed rate of 100 mm/min, and a cutting depth of 15 mm.
First the ANFIS system is trained using real-world input/output data so that it learns the process dynamics, and a direct process model is obtained. Another ANFIS system is trained to learn the inverse process dynamics and performs as a nonlinear controller, obtaining the inverse model ( Gajate and Guerra, 2009 ). For the direct model used in module 2, feed rate is taken as the input variable to obtain a mean cutting force y 2 as the output variable. As mentioned above, for indirect model used in module 3, cutting force is used as the input variable to obtain a feed rate u outputvariable. Inorderto adjustthe model,a set oftraining datais used to create an initial neurofuzzy model. Then, a second set of data is used to adjust the initial system parameters. Direct and inverse models are shown in Fig. 6 . Moreover, module 3 collects a repository of models with satisfactory input/output associations that other beings/systems keep enriching. The self incorporates these associations into its models, which module 1 then uses during learning by imitation (see Module Interaction ).
During the modeling stage, some parameters, such as the number and type of membership functions in fuzzification, and the order of the Takagi X  X ugeno defuzzification rules can be modified. Similarly, model accuracy can be improved by changing the learning process parameters (hybrid learning or error back propagation, number of iterations, step size, etc.). These para-meters were chosen according a tradeoff between the root mean square error (RMSE) criterion and model X  X  dynamic response.
The direct and inverse models that best matched the system response are those that use two Gaussian-shaped membership functions in the fuzzification stage, with linear or first-order
Takagi X  X ugeno rules as shown in Fig. 6 . The training sets are 100 iterations of the training algorithm (a higher number of iterations causes overtraining and, resulting in undesired peaks in the system output) which utilizes a hybrid training mode such that error back propagation did not reach the output value desired, along with a step size of 0.01. The increase in step size did not produce a significant improvement in the output; however, it did increase operation computation time. The models are obtained with the fuzzy toolbox provided by Matlab . The choice of the models was based on their good dynamic behavior (responses without oscilla-tions) and computational efficiency.
 For the direct model: Takagi X  X ugeno output functions: Force ( low )  X  34.5 f +4218N Force ( high )  X  165 f +1.7 10 4N Rule 1. If Feed rate is  X  X  X ow X  X  then Force is  X  X  X ow X  X  Rule 2. If Feed rate is  X  X  X igh X  X  then Force is  X  X  X igh X  X  Rule 1. If Force is  X  X  X ow X  X  then Feed rate is  X  X  X ow X  X  Rule 2. If Force is  X  X  X igh X  X  then Feed rate is  X  X  X igh X  X  response. A fundamental requirement of the direct model is a good transientresponsebecauseofthenegativeeffectthattheovershoot has on the useful tool life.
 area networks means that, in further developments, MSCM can be adapted to a distributed (networked) modular concept. The main idea is to use another application to enable the integration of heterogeneous components inside the distributed system, offering great flexibility in terms of operating system and programming language. In addition, this software should have a real-time speci-fication, which affords advantages in efficiency and deterministic behavior in accessing memory and communications resources. programming are selected from computational tools to implement this architecture. The main motivation is that each module can be viewed as an object that can be placed in a node of a communica-tion network. By means of object-oriented strategies, entities and agents can be implemented by combining state and behavior into a single independent object. Likewise, an object-oriented implementation furnishes encapsulation and simplifies develop-ment ( Heck et al., 2003 ). In addition, it facilitates a high degree of cohesion and a low degree of coupling among modules, rendering their individual development independent. In this way we enable modules to develop in parallel, to be implemented and modified independently, and even to be able to change and fine tune their models without the need to modify the other modules X  models. 4.2. Experimental results
Once the direct and inverse neurofuzzy models have been created, modules 2 and 3 can be implemented and the simplified version of an artificial cognitive control system is ready to be verified by means of experiments. The main goal is to obtain a good transient response withoutovershoot using the cutting parameters given by the tool manufacturer for this tool and workpiece material combination. Experimental trials are conducted using a machining center equipped with an open computer numerical controller. In the experiments a 10 mm diameter tool is used.

Networked control is achieved using a personal computer connected to the computer numerical controller via an industrial network (see Fig. 8 ). The application to read/write variables was implemented in Labview s 1 and the control system is implemented in Real-Time Windows Target of Matlab/ Simulink . 2 In order to test the effectiveness of the control system developed, several trials are performed with the nominal conditions recommended for a steel alloy material. The force is measured with a dynamometer. The parameters are provided by the computer numerical controller via the industrial network.

The response of the artificial cognitive control system when controlling a complex process, using this simplified implementa-tion (i.e., modules 2 and 3), is shown in Fig. 9 . According to the objective, the reference r is set to 1000 N, which corresponds to the drilling of the steel alloy material with a tool diameter of 10 mm.
In spite of the demanding initial condition and the delay, system fulfilled the design requirements with a fast closed-loop response and without oscillations. In order to sup press the cutting-force increase, the feed rate is decreased gradually as the drilling depth increases, and the cutting force is quite well regulated at the given setpoint r  X  1000 N. Furthermore, the quality of the transient response and the nonexis-tence of overshoot and peaks lead to better utilization of the tool life.
The use of a deliberative stage, by using a forward model of the process, allows MSCM to deal with disturbances and noise to keep constant the process output. The process P is constantly influenced by the presence of disturbances and noise. But thanks to the deliberation, that leads to compare what would happen in an ideal situation with the real process, the control exercised by the use of an inverse model (module 3) maintains the output of the process close to the reference value, as shown in Fig. 9 .

However, an overall artificial cognitive control system designed on the basis the five modules of MSCM is not yet designed and implemented to accomplish more than one objective. This is due to all cognitive stages that are described in our proposal do not take part in this case study, and modules are not distributed in a network.Inthiscase,theresponseofthesystemtotheoutputcould be slower. These preliminary results have been obtained with a simplified version of MSCM to illustrate the benefits of this approach and its computational viability from the perspective of computational science and control system. 5. Conclusion
This paper presents a first approach to design an artificial cognitive control system from the conceptual framework that is given by the shared circuit models approach to emulate socio-cognitive capacities. The shared circuit model (SCM) approach is enriched and improved using the state-of-the-art on this field.
Moreover, relevant reports on this issue as well as the contributions of the authors are also outlined. The modified SCM (MSCM) is postulated from the viewpoint of System Theory and Computer
Science. The conceptual scheme consists of the translation from the viewpoint of SCM layers to MSCM modules. Therefore, a sequence of operating MSCM is proposed in this paper. The suggested procedure enables the activity of combined modules or a module alone. In general, MSCM goes beyond the SCM approach with the aim of deriving a computational solution to a complex control problem.
Another contribution of the modified SCM is to enable more efficient and faster manufacturing through cooperative, self-orga-nized, self-optimized behavior by process control systems. This work leads to a progress on artificial intelligent systems from the imitation of self-human mind evolution.

From a theoretical point of view, MSCM provides an alternative conceptual framework to perform control tasks in an efficient, robust fashion that characterizes human cognitive processes. In order to exploit these advantages, five modules are proposed using
MSCM approach. Basically MSCM translates the learning imitative process described by SCM into the transfer of information between actions to imitate handled by module 3, with the proper knowledge of the agent that manages module 1. MSCM also employs an optimization/adjustment process in module 1 to improve a new action that is not previously considered in the SCM. A module that informsaboutthebehavioroftheartificialcognitivecontrolsystem using a performance index is a must. This information is used by module 4 to select which module acts at the control process.
Another aspect is that SCM does not provide the necessary basement about how to manage objectives and goals. Thus, it is necessary to include a module to carry out this task. Likewise, the procedure of functioning layers is not sufficiently specified in SCM, and therefore it is necessary to set a sequence of operation or to set an artificial mechanism. For example, the suggested module 2 can run before the action is performed in order to evaluate/deliberate about different possible actions, depending on whether the agent X  X  criteria (module 1) has had success or not.

In order to assess the suitability of the proposed approach, an artificial cognitive control system is designed and implemented to drilling force regulation as case study of a manufacturing process.
The simplified version implemented (modules 2 plus module 3) from the MSCM approach demonstrates its viability from the perspective of computational science and control system. In addition, the proposed modular architecture enables to improve and modify these modules in future.
 Acknowledgement
This work was supported by DPI2008-01978  X  X  X etworked cognitive control system for high-performance machining pro-cesses X  X  (COGNETCON) of the Spanish Ministry of Science and Innovation.
 Appendix A. Expanded block diagram of the proposed system References
