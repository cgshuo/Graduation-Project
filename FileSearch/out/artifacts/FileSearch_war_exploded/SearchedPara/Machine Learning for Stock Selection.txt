 In this paper, we propose a new method called Prototype Ranking (PR) designed for the stock selection problem. PR takes into account the huge size of real -world stock data and applies a modified competitive learning technique to predict the rank s of stocks. The primary target of P R is to select the top performing stocks among many ordinary stocks . PR is designed to p erform the learning and testing in a noisy stocks sample set where the top performing stocks are usually the minority . The performance of PR is evaluated by a trading simulat ion of the real stock data . Each week the stocks with the highest predicted ranks are chosen to construct a portfolio. In the period of 19 78 -2004, PR X  X  portfolio earns a much higher average return as well as a higher risk -adjusted return than Cooper X  s method , which shows that the PR method leads to a clear profit improvement. I.5 [ PATTERN RECOGNITION ] Algorithms Stock selection Recently a considerable amount of work has b een devoted to predicting stocks based on the machine learning techniques (e.g., [1;3;6] ). These methods use a set of training samples to generate an approximation of the underlying function of data. Comparing with statistical methods , machine learning methods do not involve assumptions about sample independence or special distribution [7] . These assumption s may not always be met in the real world situations , which machine learning methods are designed to adapt . In this paper , we investigate the issue of stock selection to form a po rtfolio with high return . In a real world trading environment, given a set of stocks, how can we select those  X  X est X  stocks? This task involves a ranking prediction of stocks and chooses the top ones to form the portfolio. The usual categorical prediction systems ( i.e., The price/return trend prediction [3] that only predicts the direction of the price movement rather tha n the expected price ) are not appropriate for this task. For instance, we do not know how to select the 5 -best stocks if the system predict s that 20 stocks will move upward. Therefore, the task of stock selection needs a continuous prediction system. All the stock price/return prediction method s (i.e., linea r regression) are continuous systems. However, they may still lead to unreliable results. When it comes to the individual stock prediction, the majority of previous methods (e.g., [6] ) select the model that achieves the maximum overall prediction accuracy (i.e., sum of squared deviations from actual outputs) for all stocks. However, in the case of stock select ion , where the goal is to form a portf olio by those  X  X est X  stocks, we only care about the top performing stocks. Thus, the optimized model for all stocks may not be suitable for our task. We propose a new method, namely Prototype Ranking (PR) that is based on the competitive learning [5] . PR is designed for the stock selection task rather than the individual stock prediction task. The overall prediction accuracy is no longer the primary objective during the model search ing . Instead, PR tries to learn a network of prototypes , where the prototypes are the  X  super points X  that represent a group of training samples nearby and the whole network can be consider ed as a model . This network has a better chance to distinguish the top performing stocks from ordinary stocks. PR is applied to samples of NYSE and AMEX individual stocks over the period 19 78 to 2004. The experiments results show that PR is robust in short -term stock selection, and its performance is better than the traditional Cooper X  X  method of selection [2] after the transaction costs. Section 2 defines the task of stock selection. Section 3 introduces the process of PR learning and testing. The experiments results are shown in section 4 . A conclusion is given in section 0 . In this section , we will discuss the formulation of stock selection task and its evaluation. We assume that trading days ( when the market is open) are divided into  X  X eeks X  of five days labeled by the index t . The task of stock selection is to find n best performing stocks in the set of stocks t  X  that we choose for week t , given only information set t  X  available at the start of the week. In order to formulate the stock selection into a machine learning task we need to specify the following entities:  X   X  As a typical machine learning process, a ranking function g that approximates f is learned from t  X  by a specific algorithm . The rank of a testing sample j in t  X  is then predicted assigned the predicted ranks, n stocks with highest/lowest rank s are se lected to form a portfolio of week t . This process is repeated from the first testing week ts to the last testing week te . We can see that such stock selection task depends on two key decisions: We will discuss how to use the competitive learning based method PR to find the ranking function g in section 3.1 . For the predictor vector, we follow Cooper [2] in the choice of predictors . This will be disc ussed in section 4.1 . In this section , we discuss the algorithm of PR method consisting of a training process and a testing process . PR applies a modified competitive learning method to learn a ranking functi on g based on the training sample set and generate s predicted ranks for testing samples. A quick review of traditional competitive learning is as follows: A competitive learning model (network)  X  consists of H as  X  X uper points X  that represent a group of actual training an associated reference vector R w v  X  . The general competitive lea rning process can be described as follows: 1. Initialize the set  X  X  by randomly choosing w i for each 2. For each training sample R S v  X  , calculate the distance 3. Adapt the reference vector of winners towards S: The competitive learning algorithms are widely used for making clustering analysis [5] and feature mapping [4] . As shown in Figure 2 , the PR training consists of the following three steps. (1). Data Preparation. The raw stock data is converted into (2). Training prototype tree. The traditional competitive (3). Optimizing the trained prototype tree into a ranking model The idea of PR testing is assigning each testing sample a predicted ranking score. Inside the ranking mode l obtained from the training, there are a number of prototypes with expected ranks distributed in the the nearby samples, the rank of a testing sample should be close to the ranks of its neighbo ur prototypes. Therefore, we may apply the kernel regression [10] to calculate the predicted rank of a testing sam ple. Those testing stocks with the highest/lowest predicted rank ing scores are selected to form a portfolio. The real return of this portfolio is then evaluated as a measure to judge the performance of PR . As a summary, PR method has several properties:  X  It has the ability to process the real -world stock dataset. To  X  PR method takes the properties of stock data into account.  X  PR method does not predict the individual stock return or In this section , some empirical experiment results are discussed. In section 4.1 , w e first introduce the data used in the experiments. The procedure of the experiments as well as the measurement is discussed in sec tion 4.2 . In the following sections, the results of three experiments that we design to evaluate the PR methods are provided. The data come from the database of the center for Research in Security Prices (CRSP). We exami ne all samples of NYSE and AMEX individual stocks over the period 1962 (Dec.) to 2004 (Dec.). The stock universe we study is revised monthly. It consists of the 300 NYSE and AMEX stocks that have the largest market capitalization. In all 504 different stoc ks were chosen. We convert the daily data into five -trading -day weekly data. In a given week, we omit any stock that has missing volume or price information for any of the previous ten days. Samples in the weekly data set have the same format: where t  X  is the index of week and j is the stock permanent number. The predictor vector ( , ) X jt  X  contains three predictors: Predictor 1 x (1 ,j,t X  ) = the return of stock j for the week t -1. Predict or 2 x (2 ,j,t X  ) = the return of stock j for the week t -2. Predictor 3 x (3 ,j,t X  ) = volume value ratio defined as where V 1, V 2 are the values of the volume for stock j for weeks t -1, t -2. Comparing with the volume ratio Cooper used, which is represented by 12 symmetric distribution of values. The PR method is evaluated in the time period from the first week of 19 78 to the last week of 2004. We apply PR on training a model and then make predict ion s for the stocks in To evaluate the performance of PR , we need to compare the predicted results with real results. As we mentioned in section 1 , appropriate. The right thing we need to evaluate is the efficiency of the algorithm. That is, whether or not those stocks chosen by PR are  X  X rofitable X . Clearly, th is could be evaluated by checking the real return of the chosen stocks, a portfolio.
 In this paper we have used a simple portfolio formation scheme. Each week we form a neutral portfolio consisting of n stocks long and n stocks short. The long (short) stoc ks are those with highest (lowest) ranks. Each stock has equal weight (except when there are several stocks tied for last place, and then all those stocks are chosen with equal reduced weight). The average return of these portfolios over the testing time p eriod, which is denoted by ARP , is what we study.
 PR method aims to minimize the danger of data snooping .  X  Data snoop ing occurs when a given set of data is used more than once for purposes of inference or model selection  X  [9] . Therefore, the parameters of learning must be decided prior to the testing time period. In this experiment, PR searches the optimal values of its parameter s in the time period from 1963 to 197 7 and makes learning and testing in 1978 -2004. Those optimal values of par ameters are d =4 , ( ) 0.9 t and T =0.8. We design two experiments for different evaluating purposes. Experiment 1 tests the predictability of the PR method . Testing Training Experiment 2 compares PR method with Cooper X  X  method both before and a fter the transaction costs. In these experiments, we divide the testing period into two (1978 -1993 and 1994  X  2004), because 1978 -1993 was the one Cooper used for his tests so we can obtain a direct comparison . The predictability of PR can b e evaluated by comparing the returns of different portfolios it construct s in the same time period. Given a week t , two portfolios P 1, P 2 are constructed. P 1 has 1 2 n stocks and P 2 has 2 2 n stocks. We denote the expected return and the real return of a portfolio P in week t as () P RP  X  and () P RP respectively. Naturally , if a portfolio perform s as it is predicted, the algorithm that generates the portfolio is considered to be with predictability. The condition of predictability can be defined as: However, PR does not really calculate the expect return of a portfolio. PR always chooses the stock with the highest (lowest) rank and the chosen stock always has the highest expected return in the set of remaining stocks . The more stocks involved in a por tfolio, the lower its expected return . Therefore we may change the condition of predictability to: Similarly, the condition of predictability in a certain time period is defined as follows. However, the above condition only works in the pure dataset with no noise . Given a real -world stock dataset, PR generates two portfolios P 1 with 1 n stocks and P 2 with n and 2 n are too close (i.e., 1 5 n  X  and 2 6 n  X  ), even if PR has a certain level of predictability , the above condition may still be violated because of the heavy noise in the training samples. To correctly reflect PR X  X  predictability under the noisy environment, the difference between 1 n and 2 n should be larger enough to tolerate the noise. We always set that 21 5 nn  X  X  . In this experiment, for both time periods 1978 -1993 and 1994 -2004, PR generates ten portfolios with different stock numbers 2 n ( 5 , 1, ,10 n i i  X   X   X   X  ). We compare these portfolios and present the results in Figure 3 . For each time period, t he predictability condition has been tested by 9 cases. In all the cases, the condition is satisf ied. In both given periods, the average return of the port folio increases steadily as n decreases from 50. In addition, we calculate the return difference d between the return of the expected best portfolio and the return of the expected worst portfolio . d b/w represents the level of predictability in a way. where arg max{ ( )} PP i RP  X   X  and argmin{ ( )} PP j RP may rewrite the equation as follows . In 1978 -1993, d b/w is 1.01% and in 1994 -2004, d They are both significant changes. All these results show strong evidence s of the predictability of PR over 1978 -1993 and 1994 -2004 . In this paper, we focus on the short -term stock selection based on only historical return and volume information. C ooper [2] investigated the same problem and proposed a method (CP). In the learning phase, Cooper first, for each predictor, divides into deciles the historical distribution of predictor values. Using the decile boundary values, the three -dimens ional predictor space is partitioned into 1000 cells, with each cell assigning an average one -week return of all stocks in it. In the testing phase, the average return of a cell can be used as the predicted return of testing samples belonging to this cell. CP has no machine learning techniques involved. The comparison between PR and CP will show us whether the stock selection task benefits from applying some machine learning techniques. We apply both PR and CP to the same stock data set using the same proce dure discussed in section 4.2 . For each week from 19 78 to 2004, each method forms three weekly portfolio s with 10, 20, 30 stocks respectively . Table 1 reports the ir performances in 1978 -1993 and 1994 -2004. In all cases, t he PR earns higher Ave. return compared with CP. The average margin of three PR return s over three CP return s in the 1978 -1993 is 76.3% and in 1994 -2004, it is 58.4%. We also compare the risk -adjusted portfolio performance, which is usu ally measured by the Sharpe Ratio (retun/std.) . Table 1 shows that in this case PR also outperform s CP . For example, the Sharpe Ratios of three PR portfolio over 1978 -1993 are 0.51, 0.52, and 0.52 respectively. In contrast, the Sh arpe Ratio of CP portfolios are 0.32, 0.38, and 0.37 over the same time period , respectively . The comparison in 1994 -2004 shows the similar results. The above experiment compares the predictability of PR and CP and shows that PR generates more accurate a nd stable predictions. We also evaluate whether PR X  X  predictions are more profitable compared to CP X  X  predictions under the transaction costs. The final investment value (FIV) of the portfolios under the transaction costs is used as the measure. Although e stimating reasonable to suppose that the costs for CP and PR would have been similar. For technical convenience, we follow Cooper [2] in setting the round -trip cost levels to evaluate the after -cost performance for both methods : Transaction costs 0.5%; 2 (medium transactio n costs)
Portfolio Performance 10 -stock 20 -stock 30 -stock We compare the 10 -stock portfolios of PR and CP, which represent their best profitability. Considering that the investing is a continuous process, we do not split the testing period. Therefore we calculate the FIV of the portfolios in 2004 (Assume that investors start off with $1 in 1978 and reinvest the portfolio income every week) under different transaction costs. These results are shown in Table 2 . T ransaction Costs FIV of PR (2004) Low 6E5 256 .5 Medium 717.7 0.22 High 1.43 0 For both methods, the profit drops dramatically as the transaction costs increase from 0.25% to 0.75%. Under the same costs level, PR always outper forms CP. At the low cost level, the FIV of PR and CP in 2004 are $ 6E5 and $256, respectively. In the cases of medium and high transaction costs, PR portfolios are still profitable. The FIVs of PR are $717.7 (medium) and $1.43 (high) . In contrast, the pro fit of CP portfolios has disappeared under medium or high transaction costs. As we expected, PR survives a higher level of costs relative to CP and shows better profitability. This paper proposed a machine learning method called Prototype Rank ing (PR) for short -term stock prediction. The goal of the PR method is to select n best performing stocks from a stock set based on the ranking function g learned in the historical stock data. PR applies a modified competitive learning technique, which is designed for discovering model s under the noisy and imbalanced environment. In the testing phase , each testing sample is assigned a predicted rank ing score and the stocks with the highest/lowest ranks ar e selected to form a portfolio. The experimental resu lts show strong evidences of the predictability of PR . In addition, PR outperforms CP, which is a non -machine -learning method. This shows the advantage of applying machine learning in the short -term stock prediction. This work can be further improved in t wo directions. First, given current predictors, we may apply boosting techniques to improve the accuracy . Second, in the paper we only apply the short -term predicting . It is possible to combine the short -term predicting with the long -term predicting for the stock selecti on. We appreciate the access to the CRSP database provided by the University of Western Ontario via the WRDS system.
 [1] Avramov,D., and Chordia,T. (2006), Predicting stock returns , Jou rnal of Financial Economics 82 , 387 -415. [2] Cooper,M. (1999), Filter rules based on price and volume in individual security overreaction , Review of Financial 
Studies 12 , 901 -935. [3] Edwards,R.D. and Magee,J., Technical Analysis of Stock 
Trends (Amacom Books, 1997). [4] Fritzke,B. (1994), Growing Cell Structures -A Self -Organizing Network for Unsupervised and Supervised 
Learning , Neural Networks 7 , 1441 -1460. [5] Fritzke,B. Some competitive learning methods. 1997. [6] Hamid,S.A., and Iq bal,Z. (2004), Using neural networks for forecasting volatility of S&amp;P 500 Index futures prices , 
Journal of Business Research 57 , 1116 -1125. [7] Hastie,T., Tibshirani,R., and Friedman,J.H., The Elements of Statistical Learning (Springer, 2003). [8] Hel lstrom,T. (2001), Optimizing the Sharpe Ratio for a 
Rank Based trading System , EPIA 2001, LNAI 2258 130 -141. [9] Sullivan,R., Timmermann,A., and White,H. (1999), Data -
Snooping, technical trading rule performance, and the boostrap , The journal of Finance 54 1647 -1691. [10] Wolberg,J.R., Expert trading systems : modeling financial markets with kernel regression (; Wiley, New York 2000).

