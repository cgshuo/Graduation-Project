 This poster investigates a novel query suggestion technique that selects query refinements through a combination of many users X  post-query navigation patterns a nd the query logs of a large search engine. We compare this technique, which uses the queries that retrieve in the top-ranked search results places where searchers end up after post-query browsing (i.e., the landing pages ), with an approach based on query refinements from user search sessions extracted from query logs. Our findings demonstrate the effectiveness of using landing pages for the direct generation of query suggestions, as well as the complementary nature of the sugge stions it generates with regard to traditional query log base d refinement methodologies. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  Query formulation, search process. Algorithms, Experimentation, Human Factors. Search engine, query log analysis, landing pages, search sessions. Search engines facilitate access to the vast amount of information on the World Wide Web, and form a key enabling technology to help users address a broad range of information problems [3]. Given the diversity of their users X  information needs, Web search engines have added many tools a nd features to enhance users X  search effectiveness (e.g., spelling correction, machine translation, query federation, and question answering). Among these, all major commercial search engines provide query suggestions comprising semantically-related query refinements presented alongside search results to improve the effectiveness of subsequent query formulations. In this poster, we investigate an approach to generate query suggestions based on the pages where many users who submit a particular query end up through post-query browsing. These so-called landing pages are frequently among the top-ranked search results, but can also lie on clic k trails far beyond the search results page, may not contain the queried terms, or may not even be indexed by the search engine. These popular landing pages can capture  X  X he wisdom of the crowds X  for information needs. We propose the suggestion of queries that return these pages as top-ranked search results, hence utilizing not only other users X  querying decisions, but also the choices other users make following query submission. In a st udy conducted to evaluate this technique, we compare the suggesti ons it generates with a more traditional query suggestion appro ach similar to [6] that uses queries entered by many users following the original query in the same session. There has been relevant relate d work on query refinement and the discovery of semantically similar queries. Beeferman and Berger [1] proposed an approach that exploits search engine click-through data, in which they represented user queries and visited search results as a bi partite graph, and applied an agglomerative clustering technique to identify related queries and Web pages. Cui et al. [4] showed that the lexical features of the query space and the Web document space are different, and investigated the mapping between query words and the words in visited search results in orde r to perform query expansion. Daum X  and Brill [5] extracted suggestions based on document clusters that have common top -ranked documents. Various other sources of information have been investigated, such as pre-computed document abstracts [2], temporal query patterns [7], and query substitutions [6]. Our approach differs from all these techniques in that it utilizes user behavior information far beyond the search result list (and perhaps more like information that users eventually target) and leverages multiple sources of interaction data (i.e., queries and post-query browsing behavior). We conducted a study compari ng landing pages and query sessions for query suggestions. The study did not compare relative effectiveness of these techniques but rather how the suggestions generated related to ea ch other. In this section we describe the data from which s uggestions are generated, the method used in both techniques to generate suggestions, the experiment conducted, and its findings. We used Live Search query logs, which contained the overall query frequency as well as anonymized user search session information. For landing page ge neration, we also used Web activity logs colle cted with permission from hundreds of thousands of users, which included details of all pages they visi-ted. Both sets of logs were gathered during the same time period. Two query suggestion techniques are compared in this study: one that uses landing pages (LP) an d one using query sessions (QS). From the Web activity logs we r econstructed temporally ordered sequences of viewed pages join ed with hyperlink clicks and originating with a query submission to a commercial search engine such as Google, Yahoo!, and Live Search. We refer to these page sequences as search trails . These trails are terminated when one of the following events occurs: (1) a new query is submitted; (2) a user returns to their homepage, checks e-mail, logs in to an online service (e.g., MySpace or del.ico.us), types a URL or visits a bookmarked page; (3 ) a page is viewed for more than 30 minutes with no activity; (4) the user closes the active browser window. If a page meets any of these criteria, the trail terminates on the previ ous page (i.e., the landing page ). For each landing page of an original, unrefined query, we mine the search engine query logs to find queries sent by users that retrieved the landing page in the one of the top ten search results. These queries are collected and us ed as potential suggestions for the original query. The rationale behind this approach is that landing pages capture the underlying information intent of many users, so the queries that ge t users to these pages may be effective query suggestions. Give n the potential for noise, we are particularly interested in using as suggestions those queries that return the landing page on the first position. A more traditional method of generating query suggestions is to utilize the query refinements of many users as gathered from query logs (e.g., [6]). Using th is approach suggestions are extracted for an original query if they immediately follow in a search session (i.e., a period of search activity terminated by 30 minutes or more of inactivity) co nducted by at least three users. Our goal is to explore the potential that these methods offer for query suggestion when used indi vidually and in combination. We ran our experiments on a set of 5,000 queries, which were obtained by randomly sampling by frequency a one month query log of the Windows Live search engine (i.e., each query had a chance of being selected propor tional with its frequency). We were able to compute at least one landing page for 2,073 of these queries. In total, we obtained 347 ,193 landing pages, giving us an average of 167 landing pages per covered query. We then mined the query logs of the search engine to locate queries distinct from the original queries and that retrieved the landing pages in the top 10 search results. We found a total of 290,117 such queries for 31,456 landing pages of 1,612 of the original queries. Figure 1 shows the average numbers of queries in the query log that returned the target landing pages as the top n ranked result (where n = 1..10). Note the large number of queries found to return the landing page in the top position. These could be viewed as  X  X deal X  LP suggestions in a stratified variant of the technique. Overall, we were able to derive a total of 88,554 suggestions that would retrieve 14,452 landing pages on the top position for 1,366 of the original queries. QS suggestions were also derived from user search se ssions in query logs (as described in Section 3.2.2). Using this method we gene rated 338,003 QS suggestions for 4,076 of the original queries. The average Jaccard coefficient (defined as the size of the intersection divided by the size of the union) for the sets of original queries covered by the LP and QS was 0.38, suggesting that there was a fair amount of overlap between the queries for which suggestions were offered, w ith many more original queries having QS suggestions. Figure 2 i llustrates differences in the coverage and average number of suggestions obtained by the two methods. While LP provides a much lower coverage than the QS, it has the merit of hypothesizing quite different suggestions. The average Jaccard coefficient for th e suggestion sets was 0.13, and the LP suggestions appeared to be complementary to the QS suggestions. For example, for th e query  X  X cademy awards X , LP suggests queries focused on winners and the ceremony; while QS generated a scattered space of s uggestions, most of them related to nominated movies and movie stars. Each method offers distinct ad vantages and disadvantages. LP guarantees to return in the top search results of at least one of the user landing pages, but is highly bi ased toward pages retrieved in the past as top search results and pages which can be reached through hyperlinks from these. QS suggestions are guaranteed to match previously seen quer y refinements, but have the disadvantage of being correlated with search results retrieved by the search engine in thos e previous sessions and may be outdated rapidly with changing search indices and ranking. Our findings show that computing landing pages for the user queries and extracting other queries that retrieve these pages as top-ranked search results obtains a reasonably high coverage and can provide quite different query suggestions from the method of mining query refinements from us er sessions. This strongly suggests employing a combinati on of the two methods. The use of landing pages captures mostly the cases in which the users X  needs are satisfied by a search engine (or pages a few clicks away from a result page), whereas the use of query sessions captures mostly the other cases, in which users refine queries to direct the search engine into a new result space because they were not completely satisfied with the results for the original query. Landing page suggestions generate less substantial modifications of the search result space, whereas query session suggestions could more significantly alter the search direction. [1] Beeferman, D. and A.L. Berger (2000). Agglomerative [2] Billerbeck, B. and J. Zobel (2004). Techniques for efficient [3] Broder, A. (2002). Taxonomy of web search. SIGIR Forum [4] Cui, H., J.R. Wen, J.Y. Nie, and W. Ma (2002). Probabilistic [5] Daum X , H. and E. Brill (2004). Web search intent induction [6] Jones, R., B. Rey, O. Madani , G. Greiner (2006). Generating [7] Vlachos, M., C. Meek, Z. Vagena, and D. Gunopulos (2004). 
