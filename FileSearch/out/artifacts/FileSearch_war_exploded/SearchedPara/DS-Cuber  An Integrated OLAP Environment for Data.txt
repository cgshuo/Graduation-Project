 Most of emerging applications deal with an infinite data stream in an incessant, immense and volatile manner. Consequently, it is very important to analyze not only the varying characteristics of a source data stream in a short-term period but also those in a long-term period. For this purpose, th is paper demonstrates an OLAP system, DS-Cuber ( Data Stream Cuber ) for the analysis of data streams. The proposed system consists of two analytic components: short-term and long-term , so that it can provide an integrated analysis environment for infinite data streams. Furthermore, each of these two components supports diversified exception detection methods which can be used for the automatic identification of abnormality in the data elements of a data stream in order to guide the data cube navigation of a user effectively. Network traffic flow streams are used to demonstrate the features of the DS-Cube system. H.2.8 [ Database Management ]: Database applications Algorithms, Design Data streams, OLAP, Data cube During the past decade, OLAP [1] has been proven to be useful for multi-dimensional data analys is. Because of this, various OLAP techniques have been evolved for the analysis of an enormous amount of historic data on a persistent storage device. A data cube is a multi-dimensi onal data model of OLAP and it shows various aspects of an underlying dataset through two key concepts: dimensions and measures . Most of emerging applications such as network traffic analysis, web click stream monitoring and sensor data processi ng deal with an infinite data stream which generates its data elements continuously in a rapid rate. Therefore, it is impossible to store all of its data elements in a persistent storage device. As a result, traditional data cube techniques cannot be applied to a data stream. MAIDS [2] was developed to support OLAP operations over a data stream. It incorporates a stream cube based on an H-tree [3]. The stream cube of MAIDS is unable to provide an accurate reaction to the radical changing of the data stream distribution. DS-Cuber employs a dynamic data cube [5] which is represented by a cube tree. Each level of the tree is mapped to one of the attributes of a base data stream uniquely. While a user needs to define a set of popular paths to confine the expansion of an H-tree, two support thresholds S min and S max are used to control the expansion of a cube tree. In addition, the z-exception detection algorithm [5] is implemented to identify an exception in a data cube on the fly. The key objective of DS-Cuber is to analyze the time-varying characteristics of a data stream with respect to a wide range of a time period. For this purpose, DS-Cuber supports two analytic components: short-term and long-term . The short-term compo-nent supports the real-time OLAP analysis of a data stream on a dynamic data cube while the l ong-term component provides the historic aspects of the data stream based on the aggregated information of the past data elements of the data stream. The overall configuration of the proposed system is shown in Figure 1. Both the short-term a nd long-term analyzers consist of two different modules: DDL parser and OLAP analyzer. Besides, the short-term analyzer additionally has a statistics capture module. On the other hand, the long-term analyzer additionally supports several data manipulation operators that can restructure data files stored in the component. A user can perform various OLAP operations like roll-up/drill-down and aggregation functions such as SUM, AVG, MIN and MAX on a dynamic data cube as shown in Figure 2. The value of a measure is represented by two different terms: micro-term and macro-term . For a particular measure, its micro-term value represents the current instant value of the measure while its macro-term value of a measure represents the value of the measure in a short period of time. By comparing these two terms, the instant variation of the measure can be analyzed easily. The short-term analyzer has the following features: 1) To cope with the time-varying characteristics of a data stream, a cube tree [5] is constructed for a base data stream. By adjusting the values memory usage as well as processing time of a cube tree can be adaptively controlled. 2) An interactive multi-dimensional analysis environment is provided. With the z-exception detecting method, a user can explore the data cube more intuitively. 3) The subtle fluctuations of the recent values of a measure on a cube cell can be easily monitored by examining the micro-term and macro-term values. 4) The aggregated measure values of top-k dimension values in a base data st ream are displayed in real-time. Although the long-term analyzer is a kind of a conventional OLAP system, its components are th e same as those of the short-term analyzer in order for a user to identify any discrepancy between the analytic results of these two analyzers easily. The long-term analyzer consists of three functional modules: DDL parser, OLAP analyzer, data manipulator. More than one table in the long-term analyzer can be linked to a base data stream in the short-term analyzer. There are several distinct features of the long-te rm analyzer. First, the synopsis uploader is implemented by the rsync utility to upload newly generated tuples of a base data st ream to the linked tables in the long-term analyzer. Second, it s upports various data manipulation operators such as sampling, join and union. Two tables can be merged by either join or union operations. A subset of tuples in a table can be extracted as a new table by sampling. A user can perform OLAP operations on any of the tables. In addition to the z-exception detection method, a multi-way exception detection method based on the Secant-Bisection method [4] is provided. The DS-Cuber system will be demonstrated by network packet flow data. Initially, a user defines the schema of a new base data stream by the DDL parser. The ba se data stream is continuously reflected on not only the dynamic data cube of the short-term analyzer but also the predefined table of the long-term analyzer using rsync utility. A user can analyze the ongoing change of the base data stream by performing OLAP operations or viewing the graphical charts of statistics fo r frequently occurred values. The connection between two analyzers is established by the synopsis uploader. After the tuples processed in the short-term analyzer are inserted to a table in the long-term analyzer, the table can be restructured by applying various data manipulation operations. Subsequently, a user can analyze the table by OLAP operations or the exception detection methods. In this demonstration, a user can identify a large difference of the same cube cell between the data cubes of the two analyzers. If the exception detected in a cube cell of the short-term analyzer is not found in the same cube cell of the long-term analyzer, a user can c oncentrate on the analysis of the recent data of the cube cell. The detailed information can be found at http://database.yonsei.ac.kr/dscube. This work was supported by the Korea Science and Engineering Foundation (KOSEF) NRL Program grant funded by the Korea government (MEST) (No. R0A-2006-000-10225-0). [1] R. Kimball and M. Ross. The Data Warehouse Toolkit: The [2] Y.D. Cai, D. Clutter, G. Pape, J. Han, M. Welge, and L. [3] J. Han, J. Pei, G. Dong, and K. Wang. Efficient computation [4] A. Neumaier. Introduction to numerical analysis . Cambridge [5] W.S. Yang and W.S. Lee. On-lin e Evaluation of a Data Cube 
