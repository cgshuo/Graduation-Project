 culture[1]. Given a query calligraphic character, retrieving all the similar ones may help studying different written styles of the same character. However, the current approach is to use metadata or indices, which are created manually in a tedious, labor intensive and expensive process. Moreover, so far, although some research efforts have been focus on the studies of the shape-similarity-based retrieval and indexing [2,6]. To the best of our knowledge, no one use the number of strokes of a character to facilitate the effectiveness(see Section 3). In our previous work [6], we studied the character However, although the two characters in Fig.2(a) and Fig.2(b) are similar, their corresponding number of strokes are different. Hence, the number of strokes of a character can also be regarded as an effect ive pruning criterion(i.e., another feature) to facilitate character retrieval. we propose an interactive high-dimensional indexing scheme based on hybrid features(e.g., shape and stroke ), called HF-Tree . With the aid of the HF-Tree index, a high-dimensional 
The primary contributions of this paper are as follows: 1. We propose a novel interactive hybrid retrieval method to effectively support the 2. We introduce a hybrid-feature-tree( HF-Tree )-based indexing method to H ybrid -F eature-Tree (HF-Tree)-based high-dimensional indexing scheme to dramatically experiments which are designed to evaluate the efficiency and effectiveness of the proposed approach. Finally, we conclude in Section 4. In order to improve the retrieval efficiency, in this section, we develop a novel high-dimensional indexing technique, called the H ybrid-F eature Tree (HF-Tree for short), to accelerate the retrieval process. 2.1 Preliminaries clusters(denoted as Cj ) by an AP-Cluster algorithm [5], and the centroid( O j ) of each cluster( Cj ) can be adaptively selected, where j  X  [1, T ]. Then the centroid distance and the number of strokes of each character are computed. Moreover, its style and the type are identified at the same time. Finally, a uniform index key of a character is obtained, which is inserted by a B + -Tree. character which has the longest distance to Oj is defined as the cluster radius of C j , denoted as CR j .
 centroid of cluster Cj , CRj is the cluster radius. Definition 2 (Centroid Distance) . Given a character V i , its centroid distance is defined as the distance between V i and Oj, the centre of cluster that V i belongs to: 2.2 The Data Structure In order to effectively prune the search region, we propose the HF-Tree , an interactive hybrid-feature indexing scheme in which the high-dimensional index for contour and the number of strokes of each character are computed. Thus the character V i can be modeled as a four-tuple: to; NS is the number of strokes of V i ; CD is the centroid distance of V i ; 
For each character V i in a cluster sphere, its index key can be defined as: 
Since the characters are grouped into T clusters, to get a uniform index key of image in different clusters, the index key in Eq. (3) can be rewritten by Eq. (4): where the CID is the ID number of cluster V i falls in. Note that since CD ( V i ) may be larger than one, the value of CD ( V i ) should be normalized into the range of [0,1] by being divided a large constant MAX.

To facilitate retrieving characters via submitting an auxiliary information (e.g, the number of strokes) of V i , its index key can be derived in Eq. (5): which is set 10 3 empirically. 
For a character, its two values of CD and NS are recorded in the corresponding index key of HF-Tree. Fig. 3 shows the detail steps of constructing a HF-Tree. Note that the BInsert (key, bt ) is a B + -tree insert procedure. 2.3 k -NN Search Algorithm In this section, we will study a k-NN search of Chinese calligraphic character, which retrieves the k most similar characters that are closest in distance to a given character. For example, when user submits a query character  X   X   X , its NS equals to 8. Then the search range over the HF-Tree is [ left , right ], where 
Fig. 4 details the whole search proce ss which is composed of filtering and radius, and step by step, the radius is increas ed to form a bigger query sphere iteratively stops, then the (| S |-k) characters which are longest to the query one are identified (lines 6-7) and removed from S (line8). In this way, the k nearest neighbor characters of Vq are just returned. Note that, routine RSearch ( Vq,r ) is the main range search function which returns the candidate characters of range search with centre Vq and radius r and character which is the longest from Vq in S and S i s denoted as the candidate character set. BRSearch ( left , right ) is a B + -tree range search function. In this section, we present an extensive performance study to evaluate the effectiveness Calligraphic characters image data we used are from China-America Academic Digital Library Project [5] which contains a set of contour point features extracted from the 12,000 character images in which each feat ure point is composed of a pair of coordinates &lt; x axis , y axis &gt;. 
We implemented the hybrid-based retrieval approach and the HF-Tree index in C language. The index page size of B + -tree is set to 4096 Bytes. All the experiments are run on a Pentium IV CPU at 2.0GHz with 1GB memory. All the following experiments X  performances are measured in terms of the average disk page access, and the CPU time over 100 queries. 3.1 Effectiveness of the Retrieval Method In the first experiment, we have implemented an online interactive &amp; hybrid retrieval system for Chinese calligraphic characters to testify the effectiveness of our proposed retrieval method comparing with the conventional one [6]. As shown in Fig. 5, when and the number of strokes as well, the cand idate characters are retrieved by the system with the aid of the HF-Tree. The left part of the figure is the query result by submitting only a character and the right part demonstrates the query results of the hybrid retrieval (e.g., query character and the number of strokes as two query elements). Fig. 6 illustrates a Recall-Precision curve for the performance comparisons of the APC-based method [6] and our proposed composit e search. It compares the average retrieval result (the average precision rate under the average recall rate) of 20 characters composite search is better than that of the APC-based one by a large margin. 3.2 Efficiency of HF-Tree Index In the following, we test the performance of our proposed indexing method X  X F-Tree under different sizes of databases and different k . 3.2.1 Effect of Data Size characters. Fig. 7a shows the performance of query processing in terms of CPU cost. It HF-Tree increases slowly as the data size gr ows. It X  X  worth mentioning that the CPU cost of sequential scan is ignored since the computation cost of it is very expensive. In Fig. 7b, the experimental result reveals that the I/O cost of HF-Tree is superior to other three methods. The PDM [6] exhibits a dramatically increase in terms of page access and it finally exceeds the sequential scan when the data size is 8000 because of its I/O intensive operations during query process. 3.2.2 Effect of k HF-Tree. Figs. 8a and 8b both indicate that when k ranges from 10 to 40, the HF-Tree is superior to other methods in terms of page access and the CPU cost. The results conform to our expectation that the search region of HF-Tree is significantly reduced and the comparison between any two characters is a CPU-intensive task. The CPU cost of sequential scan is ignored due to the expensive computation cost of it. characters by choosing hybrid featur es; Then a novel hybrid-feature-tree( HF-Tree )-based high-dimensional indexing scheme is then proposed to boost the retrieval performance of the large Chinese calligraphic characters. The prototype retrieval system is implemented to demonstrate the applicability and effectiveness of our new approach to Chinese cal-studied in our future work. 
