 With the growing popularity of social media tools such as Twitter and Facebook, mil-lions of users actively participate in these social media platforms and engage in online social activities, for example, posting a tweet and uploading a photo. User interests can be manifested through contents shared in a social context and various types of social activities. Learning user interests from social networks is particularly useful to understand online user behavior and has thus attracted much research attention in recent year [Han et al. 2012; Guo et al. 2009; Ahmed et al. 2011; Wang et al. 2011; Shi et al. 2009]. Apart from analyzing the shared content in the social network, such as user tweets or blog entries, it is also important to consider online social network connections [Tang et al. 2009; Weng et al. 2010; Bakshy et al. 2011; Anagnostopoulos et al. 2008]. For example, people find someone interesting on Twitter, and  X  X ollow X  them to subscribe to their tweets. They may also be followed by others. Through such social connections, user interests might be driven to be similar.

Social connections are often represented by graphs where nodes are users and links indicate two users are connected. To leverage graph links, cluster assumption is often used: nearby nodes are more similar and nodes on the same structure (typically referred to as a cluster or a manifold) are likely to be similar [Zhou et al. 2004]. Various studies adopt this assumption in different tasks. In classification, nearby nodes or nodes in the same structure have similar labels [Li et al. 2008; Ji et al. 2011]. In learning topic similarities, similar nodes have close topic distributions [Mei et al. 2008]. In online social networks, this assumption can be explained as an online user having similar interests with her neighbors or friends [Ma et al. 2011], for example, followees on Twitter or friends on Facebook.

Online social networks are complex in nature, and there can be multiple types of social connections between users. For example, on Twitter, there are three major types of social links between two users [Kwak et al. 2010; Welch et al. 2011]: (1) following , a user has added another user in her friend list; (2) retweeting , a user has forwarded a tweet from another user; (3) mentioning , a user has included another user in her own tweet. As shown in previous studies, these links may indicate different levels of topical relevance, for example, retweeting is a stronger indicator of topical relevance than following [Welch et al. 2011]. As such, algorithms based on the cluster assumption may not be effective here, since they rely on a single link between two nodes and do not distinguish different types of social interactions. Also, social networks built on various types of social interactions are very sparse and dynamic in nature. Take Twitter as an example: (1) about 42% of users have fewer than five followers 1 ; and (2) link changes can happen where existing following links might be removed and new links can be added [Hopcroft et al. 2011]. Therefore, simple application of algorithms based on the cluster assumption to online social networks may not lead to good performance.
We argue that learning user interests from complex, sparse, and dynamic social net-works should be based on the link structure assumption . In particular, under the link structure assumption, node similarities are not measured based on the existence of explicit links. Instead, they are evaluated based on the local link structures between two nodes. For example, people sharing many followers or followees are likely to be sim-ilar in terms of their topical interests. Hence, nodes with similar local link structures tend to be similar. Compared to the traditional cluster assumption, the link structure assumption can be potentially more robust to adapt to various types of social connec-tions and more resilient to sparse and dynamic networks. An illustrative example to compare these two assumptions is shown in Figure 1.

In this article, we propose a novel algorithm of learning user interests from social networks based on the link structure assumption. User interests can be reflected in various forms, for example, interests over items in rating systems [Ma et al. 2009b] or interests over trending topics in microblogs [Zhao et al. 2011]. We consider user interests as distributions over topics in Twitter, that is, we would like to learn the relative weights which measure interests on hot topics for a user. Here a topic refers to a semantically coherent theme which receives substantial attention from users, for example,  X  X ealth Care Reform X  and  X  X ran Election X .

To model the link structure assumption, we propose a regularization-based frame-work by utilizing the relation bipartite graph , which can be constructed based on any types of relationships. Take Twitter as an example, the retweet links can be used to build a relation bipartite graph. Our framework consists of two regularization factors, out-link regularization and in-link regularization, which naturally transform directed relationships into undirected relationships. We perform both quantitative and qual-itative evaluations on the Twitter dataset. We show that our method outperforms a baseline which does not consider social network connections. It also gives superior performance compared to a method based on the traditional cluster assumption.
To the best of our knowledge, no prior work has studied link structure assumption in online social networks. With the growing popularity of online social networks, there is a urgent need to consider various types of social connections for analyzing online content and understanding user behaviors. Our proposed framework provides a principled solution to model social connections, especially directed social relations. We study the problem of inferring user interests over topics in Twitter. User inter-ests over various topics in Twitter can be manifested in a number of different ways, including reading tweets, following hot topics, forwarding tweets from friends (a.k.a. retweet), and publishing original tweets. We focus on one particular activity of a user posting tweets on her interested topics. A tweet is a short document with a limit of 140 characters. We do not discriminate between retweets and original tweets .

Topic. A topic t is a semantically coherent theme which receives substantial attention from users. Here we do not make any specific assumption on topic representations. A topic can be represented as a multinomial distribution over the vocabulary, a trending hashtag, or a keyphrase of named entities, etc. Let T be the set of K hot topics on Twitter.

Relation Graph. Let U be the set of users on Twitter. Formally, a network of users for relation R can be defined as a directed graph G R = ( U , E R ), and the statement that there exists relation R between two users u and v can be denoted as an ordered pair ( u ,v )  X  E relation. For example, if we instantiate R to be retweet , u  X  v can indicate that u has retweeted at least one message from v . Given an edge u  X  v , v may potentially influence the interests of u .

Relation Bipartite Graph. From the relation graph G R , we can construct the relation bipartite graph G R = ( V H , V A , E R ) for relation R . Here we define V H , V A to be exactly thesameas U . Given a pair of users ( h , a ), a  X  V A , h  X  V H , we build a link from a to h if there is a link between a and h in the original relation graph. Further, we define a weight w R ( h , a ) to be associated with this link, which indicates the strength between h and a in relation R . An example of how to derive a relation bipartite graph from a relation graph is illustrated in Figure 2. Based on this definition, we can see that there are two different roles for users in Twitter in analogy with the HITS algorithm, hubs and authorities.

With the relation defined here, it can be seen that any type of directed connection in online social networks can be modeled by the relation bipartite graph. For a reciprocal link or undirected link between two nodes u and v , we can add two directed links u  X  v and v  X  u to the relation bipartite graph.

Interest Profile. Given a time span [ s b , s e ], an interest profile of a user u is represented weight which measures the degree of u  X  X  interests in i th topic. We further require that The main goal of our task is to infer the interest profile over topics for each user in U in a time interval S = [ s b , s e ] based on the historical data we have. In this article, we mainly focus on two types of topics: (1) multinomial topics, that is, topics learnt from topic models, such as Latent Dirichlet Allocation (LDA) [Blei et al. 2003]; and (2) hashtag topics, that is, a hashtag itself is treated as a topic. 2 The first type is widely studied in topic modeling from text; the second type is mainly rooted in microblogs, which is designed to better search and organize information. Although topics can evolve in a complex manner (e.g., emerging, growing, shrinking, etc.), we simplify the problem by making an assumption here that topics in S are fixed and independent. 3 In practice, the predicted interval S is usually short, and hence most topics are persistent within S . In this section, we present a simple method which considers each user independently without taking into account social networks and discuss how to estimate user interests based on the historical data which contains topic-related content that users write or retweet. Given a set of K topics and a user u , we first count the number of activities u performs over these K topics, that is, n u , 1 ,..., n u , K . Then we apply the maximum like-lihood method to estimate the underlying interest profile ( f u (1) ,..., f u ( K )). Formally, we can write the likelihood function
To maximize this function, we set f u ( k ) = n u , k smoothing to avoid  X  X ividing by zero X , where  X &gt; 0 controls the smoothing degree. We refer to  X  f u ( i ) as the na  X   X ve estimation of f u ( i ), since it only considers each user in isolation without taking into account the attached social networks.

For multinomial topics, we set n u , k to be the number of tokens which is assigned to topic k for user u ,andset  X  = 50 K , as in LDA [Griffiths and Steyvers 2004]; for hashtag topics, we set n u , k to be the number of the k th hashtag that user u has used in her tweets, and set  X  to 1, which is essentially the add-one smoothing.

Although this method seems very straightforward, it has a few shortcomings. First, merely relying on users X  own historical data may not be able to capture user interests completely. Second, users X  own historical data can be very sparse, therefore ML esti-mation often fails to derive users X  interest profiles accurately. Finally, as shown Weng et al. [2010], users with the same set of following links are more similar than those without. Hence, social connections should be taken into account when deriving user interest profiles. The aforementioned method oversimplifies the complicated nature of user interests. We propose a novel framework to model user interests based on the link structure assumption that users sharing many common in-links (i.e., parent links) or out-links (i.e., child links) in a relation bipartite graph should have similar topic interests. Our proposed framework consists of three factors, out-link regularization, in-link reg-ularization, and a fitting constraint.

Out-Link Regularization. Two users are similar if they share many out-links in a relation bipartite graph, that is, they co-link many common authorities . In Figure 2(b), both v 1 and v 3 in the hub set link v 4 in the authority set, so the values of v 1 and v 3 tend to be correlated.
The out-link regularization factor tries to capture the similarity between vertices in hub set V H that are strongly related. We measure the relatedness between two vertices u and v with a function w A ( u ,v ). The subscript of A in w A ( u ,v ) denotes that the relatedness is computed based on the vertices in the authority set. Formally, we represent each user as a vector of authority weights and then use the cosine function to compute the similarity where w R ( u , a ) is the edge weight in the relation bipartite graph introduced in Section 2, which reflects the strength between u and a in relation R .
 With the introduction of w A ( u ,v ), we implement the out-link regularization factor
In-Link Regularization. Two users are similar if they share many common in-links in a relation bipartite graph, that is, they are linked by many common hubs . In Figure 2(b), both v 1 and v 3 in the authority set are linked by v 2 in the hub set. Thus the values of v and v 3 tend to be correlated.

The in-link regularization factor tries to capture the similarity between vertices in the authority set V A that are strongly related. We measure the relatedness between two vertices u and v with a function w H ( u ,v ). The subscript of H in w H ( u ,v ) denotes that the links are computed based on the vertices in the hub set. Similar to w A ( u ,v ), we have With the introduction of w H ( u ,v ), we implement the in-link regularization factor
Fitting Constriant. The third factor we consider is that user interests learnt from our models should not deviate too much from the interests estimated from users X  own data, that is,  X  f u ( k ). Formally, we define the fitting constraints
Combining Equations (3), (5), and (6), our objective function is a linear combination of these three cost functions: where  X  +  X  +  X  = 1and  X ,  X ,  X   X  0. We can tune  X ,  X ,  X  based on different datasets. This model considers two aspects of link structures, namely, in-links and out-links, and we denote it as CoReg .

This general framework can capture various relations through the two regulariza-tion factors introduced in Equations (3) and (5). Intuitively, to minimize our objective function, we have to seek a trade-off between information derived from users X  own his-torical data and information from similar users. Usually, the values of  X  ,  X  ,and  X  can be set either empirically or by incorporating prior knowledge. The relation strength w there is no explicit link between v 1 and v 3 . Using CoReg, we can add two virtual links between them, one is through the authority vertex v 4 and the other is through the hub vertex v 2 .

A previous study [Ma et al. 2011] utilizes the friend-like relationships, for example, the following relation or the trust relation, by examining whether there is an explicit link between two users. However, not all relations indicate friendship, and thus some of these relations may have weak topical similarities. As a result, regularization based on a single link between two users lacks the robustness in capturing user interests. Dif-ferent from Ma et al. [2011], our proposed framework examines the similarity between the local structures of two vertices, which is potentially more robust in learning user interests. Also, through modeling two different roles for vertices, hub and authority, our framework naturally transforms directed relations into undirected ones. We can separate different cost functions to obtain the partial derivatives with respect to f u ( k ) as follows
The derivative of Equation (7) is a linear combination of the previous derivative functions
It can be easily verified that this equation satisfies:
We present a pseudocode for the proposed method in Algorithm 1. Here, iter is a predefined number of iterations. Steps 1 X 6 are for initialization and steps 7 X 18 for the iterative algorithm. We discuss some of the implementation details next. Storing the matrix w A (  X  ,  X  ) usually takes up significant memory space. In practice, we do not store all the edge weights but only keep the edges with large weights to allow for more efficient computation in step 10 in Algorithm 1.
Variants and Connections to Existing Methods. Our proposed optimization frame-work can be generalized to many different tasks. In this section, we make connections with other existing methods. There are three parameters in our objective function,  X  ,  X  ,and  X  , which represent the weights of different constraints on the relation bipartite graph. Different settings of these parameters lead to several variants.
 (1)  X  = 0 , X  = 0 , X  = 0. Equation (8) can be rewritten as follows (2)  X  = 0 , X  = 0 , X  = 0. Only the regularization through hub vertices is considered. (3)  X  = 0 , X  = 0 , X  = 0. Only the regularization through authority vertices is (4)  X  = 0 , X  = 0 , X  = 1. Our method reduces to the simple MLE method, which ignores (5)  X  = 0 , X  = 0 , X  = 0. In this case, our method is built fully on the social networks
Detailed results obtained using our proposed framework with different parameter settings will be presented in Section 6.7.

Reexamination of the Link Structure Assumption. Finally, we reexamine the link structure assumption described in Section 1. By studying Equations (3) and (5) care-fully, it can be observed that the traditional cluster assumption is actually embedded in the link structure assumption. Given two vertices u and v , two virtual links can be built between them with weights of w H ( u ,v )and w A ( u ,v ), respectively. With such virtual links, vertices similarity can be measured based on the cluster assumption. Although the link structure assumption can be reduced to the cluster assumption with the proper insertion of virtual links, the former is more general than the latter, since it also takes into account local link structure apart from explicit links between two nodes when evaluating node similarities.
 Our framework can account for different types of relations. In this section, we show an application of our method by considering a specific type of relation between Twitter users: the retweeting relation. Compared with the following relation, the retweeting relation is a much stronger indicator of social influence [Welch et al. 2011].
We first set the relation strength w R ( u ,v ) between u and v to the number of tweets that u has forwarded to v . The in-link and out-link regularizations can be explained as follows.

Out-link  X  Co-Retweet. Two users are similar if they constantly forward the tweets of common authorities . For example, two users who often forward tweets from @cnnbrk and @nytimes are likely to have similar interests in news-related topics. Similarly, two users who often forward tweets from music celebrities are likely to have similar interests in music-related topics. We let w A ( u ,v ) be the co-retweet similarity between u and v . The subscript of A in w A ( u ,v ) denotes that the links are built through the authorities that u and v co-retweet. We can compute w A (  X  ,  X  ) according to Equation (2).
In-link  X  Co-Retweeted. Two users are similar if their tweets are often forwarded by common hubs . For example, both Lady Gaga and Justin Bieber are popular music celebrities, and it is common to see many Twitter users are fans of both of them and therefore could re-tweet many of their tweets. Similar to w A (  X  ,  X  ), we let w H ( u ,v )bethe co-retweeted similarity between u and v . The subscript of H in w H ( u ,v ) denotes that the links are built through the hubs who co-retweet u and v . We can compute w H (  X  ,  X  ) according to Equation (4).

With the instantiation of w H (  X  ,  X  )and w A (  X  ,  X  ), we then run Algorithm 1 iteratively until it converges. Besides the methods in Equations (2) and (4), we can also use other similarity measurement methods, for example, Jaccard similarity, to set w A (  X  ,  X  ) and w H (  X  ,  X  ). Nevertheless, they don X  X  work better compared to our proposed similarity measurement method in our experiments. We have also tested our framework using the following relation. The conclusions drawn are similar to those using the retweet relation. Due to the space limit, in this article, we only report the experimental results obtained using the retweet relation. We evaluate our method on a Twitter dataset which spans the second half of 2009 [Kwak et al. 2010]. We take the data in August and September 2009 for evaluation.

Since our focus is to study how to leverage various social connections to learn user interests, we simplify this evaluation task as follows: (1) we only consider persistent topics so that user interests over them should be relatively stable; (2) although relation networks can change in these two months, we take a snapshot of relation networks at the end of September 2009 and then use it in all our experiments. We use the data in August 2009 for training and the data in September 2009 for testing. Training and test data with smaller sizes, for example, two weeks, have also been evaluated. However, the resulting data for a single user becomes very sparse, and hence the evaluation results are less meaningful.

We consider two types of topical representations. The first type is the topics learnt from topic models such as LDA [Blei et al. 2003], where each topic is represented as a multinomial distribution over the terms in the vocabulary. Similar to the findings in Zhao et al. [2011], we find that most of the topics generated by LDA are long-standing topics. There are a few event-related topics such as  X  X ealth Care Reform X ,  X  X ran Election X , and  X  X fghanistan War X , which are also persistent topics. The second type is the trending topics, which are the most popular themes discussed in Twitter. We select the most frequent and relatively stable hashtags in Twitter as follows. We consider a hashtag to be daily active if at least ten different users used it in a day. We only keep the hashtags which are active for at least ten days in both the training and test data. We refer to topics of the first type as multinomial topics , and the second type as hashtag topics .

In Twitter, a large number of users do not use hashtags at all. As such, if we simply select users randomly, we may end up with the case where most of the sampled users rarely used any hashtags. In order to avoid such a problem, we first select the top 60,000 users who used hashtags most in their tweets. We further divide all the users into six groups and randomly select five users in each group to form a set of 30 seed users. Then we use a breadth-first search to add users by following the retweeting links of these seed users, and run the search algorithm with two iterations. Finally, we get 28,825 users. We keep all the tweets from these users and build the retweet graph among them. The same dataset is used for the evaluation of both multinomial topics and hashtag topics. We want to examine the performance of our proposed framework for different types of topics on the same set of users. We summarize our data statistics in Table I. We consider the following baseline methods for comparison.  X  MLE . The simple maximum likelihood estimation has been described in Section 3, in which we do not consider the social networks. Users X  interest profiles are derived using Equation (1).  X  InfPR . We also consider a simplified version of the method in Ma et al. [2011] which is based on the cluster assumption that a user should be similar to her friends. where w ( v, u ) is the normalized number of tweets that u has retweeted from v , R u is the set of users that u has retweeted from, and  X  is a coefficient to tune.

Since it is similar to PageRank, we denote it as influence PageRank (InfPR).  X  CoReg . This is our proposed method as described in Section 4.  X  OutReg . A variant of our proposed method by setting  X  = 0 in Equation (8), that is, we only consider out-link regularization.  X  InReg . Another variant of our proposed method by setting  X  = 0 in Equation (8), that is, we only consider in-link regularization.

Apart from MLE, all the other methods run iteratively until convergence or until they reach the maximum number of iterations which is empirically set to 10 here. For evaluation on multinomial topics, we first learn topics using standard topic models such as LDA, and then estimate user interests, that is, user topic distributions, over these topics. For each user, we generate two documents with the first containing her tweets in August 2009 as the training document and the second containing her tweets in September 2009 as the held-out document. Then we use the implementation of LDA in M ALLET 4 and train it on all the training documents. LDA generates a set of topics {  X  the assignment of {  X  f u ( k ) } in CoReg and InfPR. After running these algorithms, we can obtain multiple estimations of user interests, which are probability distributions , from different methods.

This evaluation task aims to examine the overall generalization ability of modeling unseen or held-out data. The commonly used perplexity measure is adopted as the evaluation metrics of document modeling. A lower perplexity score indicates better generalization or prediction performance [Blei et al. 2003]. In our experiments, a test document consists of all the tweets posted by a user in September 2009. Given a test set D test , the perplexity is computed as where d u is a document from user u in D test , w d number of tokens in d u , K is the number of topics, and P ( w d word w d on the held-out document set. It is worth noting here that by explicitly introducing the user interests f u ( k ), perplexity is actually calculated in a similar way as that in the Author-Topic model [Steyvers et al. 2004]. In order to evaluate the impact of user interests, we treat each tweet as a document as opposed to the previous experiments where all the tweets of a user are concatenated into a single document. We then train LDA on the tweets in the training set and perform inference on the tweets in the test set to compute the perplexity results. We denote the results as  X  X DA X  in Table II.
We empirically set  X  =  X  = 0 . 05 , X  = 0 . 9 in CoReg, and  X  = 0 . 9 in InfPR. The perplexity results are presented in Table II by varying the number of topics between 50 and 100. It can be observed that InfPR and CoReg outperforms MLE, indicating the importance of incorporating social relationships for learning user interests. Both OutReg and InReg perform similarly, and they give a better performance compared to InfPR. CoReg is a combination of OutReg and InReg, and it gives the best results compared to all the other baselines. The difference between CoReg and InfPR is that CoReg can leverage implicit relationships to better capture user interests, which is very important in sparse directed social networks. Finally, we notice that the incorporation of user interests significantly reduces the perplexities, since all the baselines and our proposed methods outperform LDA by a large margin. This is inline with what has been observed in Hong and Davison [2010] that the aggregation of tweets by users is more effective than treating each tweet as a separate document. The second type of topics we consider are hashtag topics. We select top 500 hashtags used in Romero et al. [2011], since these hashtags receive substantial attention from Twitter users and have a broad coverage of topics. Inspired by the evaluation in infor-mation retrieval, we adopt precision@N as our evaluation metric. Equation (1) is used to initialize  X  f u ( k ), and the models are trained on the August 2009 data and tested on the September 2009 data. A candidate method will return a user interest profile which is a distribution over hashtags based on the training data, and the top-N hashtags are compared against the actual hashtags used in the testing data for each user. 5 We compute the average precision of correctly predicted hashtags among the top-N hash-tags over all the users. In the Twitter data evaluated here, a user used 14 different hashtags on average (among our selected 500 hashtags). As such, N issetto1,3,5,7, and 10.

We empirically set  X  =  X  = 0 . 2 , X  = 0 . 6 in CoReg, and  X  = 0 . 6 in InfPR. The results are shown in Table III. Similar conclusions can be drawn, as in the evaluation results on multinomial topics. Both InfPR and CoReg outperform MLE. CoReg and its two variants, OutReg and InReg, give better results compared to InfPR. Considering the in-link and out-link constraints simultaneously (CoReg) perform better than only taking into account one type of constraints (OutReg or InReg). We also notice that for recommending hashtags,  X  and  X  should be set with larger values compared with those for multinomial topics. The main reason is that for multinomial topics, users X  interest profiles are estimated based on the word statistics over topics which are less sparse compared to the frequency of hashtag topics. Hence, for hashtag recommendation, statistics collected from a user X  X   X  X imilar X  friends are boosted to alleviate the data sparsity problem.

After obtaining the user interests over the top-N hashtags, we can further analyze the diversity of hashtag uses. We employ the entropy of user interests over hashtags to measure the diversity where K = 500 is the number of the most frequent hashtags considered here, f u (  X  ) are user interests learned from our method CoReg. A larger entropy indicates that a user tends to use more diverse hashtags, and a smaller value tells that a user only uses a small set of hashtags. We compute the hashtag entropy for every user in our dataset and then rank users by their entropy values. Figure 3 shows that most users have an entropy value between 2.5 and 4. The  X  X ocused X  users (  X  1 . 5) are mostly organizations and groups. They use a very small set of hashtags to advertise or broadcast for themselves. The most  X  X iverse X  users are mainly common users who comment a lot on a wide range of topics and have at least several thousands followers. These users can be viewed as opinion leaders who play a key role in the two-step information propagation, as studied in Wu et al. [2011]. In this section, we further quantitatively evaluate different methods on retweet predic-tion which predicts whether a user will forward a tweet or not. Similar to the evaluation on multinomial topics in Section 6.3, a set of topics {  X  k } and a unique topic distribution for a user u , {  X  u ( k ) } can be obtained from the training data in August 2009. Methods for learning user interests can then estimate { f u ( k ) } based on {  X  u ( k ) } , which can be evaluated subsequently on the test data in September 2009.

Generally speaking, retweet prediction is a very challenging problem. Previous re-search [Hong et al. 2011; Feng and Wang 2013] explores the use of an extensive set of features, including user features, style features, temporal features, and content fea-tures for retweet prediction. Since our goal is to perform retweet prediction depending solely on user interests, we simplify the retweet prediction task as follows. For each user, we only consider the tweets of her followed users from whom she has forwarded at least one tweet in August 2009. We compute the topic similarity between a candidate tweet and the topical interest of a user. Then we rank these tweets based on the topic similarity scores in a descending order. A better method should be able to rank those tweets that the user has actually forwarded in higher positions.

Given a set of topic models {  X  k } K k = 1 , we compute the conditional probability of the k th topic given a tweet d for each of topic from which we derive the topic distribution for a tweet d , { P ( k | d ) } K k = 1 . Given a user and a set of candidate tweets, we first compute the negative KL-divergence of the topic distributions of the user and each of the candidate tweets, and subsequently rank these tweets in descending order. We adopt precision@N and MRR (mean reciprocal rank) commonly used in information retrieval as our evaluation metrics [Manning et al. 2008]. We conducted experiments with the topic number set to 50, 75, and 100 and found that the findings are similar regardless of the topic number settings. As such, we only report the results on 75 topics in Table IV.
 The results shown in Table IV are consistent with what have been observed in Tables II and III. MLE still performs the worst, and incorporating social links improves upon MLE. Both OutReg and InReg give superior results than InfPR, and a combination of these two methods, that is, CoReg, performs best. The overall performance of all the methods on retweet prediction is quite low since only user interest profiles are used for retweet prediction. Nevertheless, the results show the effectiveness of our proposed method over other baseline models. Finding topical authorities is an important text mining task in online social networks. We mainly consider two aspects to solve this problem, authority and topical relevance. We used the standard PageRank value of a user in the retweet graph as a measure of user authority and used the learnt user interests as the measure of topical relevance. Formally, we compute the ranking score of user u on the k th topic according to the following equation where score( u , k ) is the authority score of user u on the k th topic, PageRank( u )isthe PageRank value of user u ,and  X  u ( k ) is the interest value on the k th topic learnt using CoReg or InfPR. Here we only consider hashtag topics as an illustration.

We present the top five topical authorities on three example topics in Table V. We can see that CoReg has identified more correct topical authorities in the top five ranks than InfPR. Recall that our method is based on the link structure assumption which can be reduced to the traditional cluster assumption if we capture the implicit links by adding two this section, we aim to shed some light on the virtual links we constructed to understand why our method is effective. We select four graphs for comparison. The first graph is the retweet graph and used as the baseline for comparison. Our regularized networks are built through out-links and in-links, and the weight of a link between vertices u by setting either  X  or  X  to zero. We refer to these two graphs as InReg and OutReg , respectively.

We summarize the statistics of degree distribution in Table VI. On average, we can see that vertices in the InReg and OutReg networks have more neighboring vertices than those in the retweet graph. As a combination of InReg and OutReg, CoReg has the largest average node degree. We further plot the degree distribution of different networks in Figure 4. For the original retweet graph, we can see in Figure 4 that a large proportion of users have fewer than ten neighbors, and the influence propagation algorithms (e.g., InfPR) may not work well in such a sparse network. On the contrary, our CoReg can leverage more implicit relationships which are not captured in the retweet graph. By adding these virtual links between vertices, our regularized network is able to alleviate the network sparsity problem and hence gives more accurate results compared to other algorithms based on the cluster assumption.

Another interesting point is that InReg (the links built on co-retweeted) is much more sparse than OutReg (the links built on co-retweet). The main reason is that most Twitter users usually receive very few retweets but tend to retweet more. Although InReg is relatively sparse compared to OutReg, it is able to capture the implicit rela-tionships between top users in Twitter. For example, Lady Gaga and Justin Bieber don X  X  usually retweet from each other or from common users. Hence there will be no links between these two stars in the retweet graph or the OutReg graph. On the contrary, it is common to see many users co-retweet from these two celebrities. This implied mutual interests in music shared between them. Such implicit relationships can be captured by the InReg graph.

We present four illustrative examples of implicit links found by our CoReg algorithm in Table VII. Users in the first two examples have the relation type of organization-member, while users in the last two examples are linked because they published similar content and hence have similar topical interests. These implicit relationships are not captured by the retweet graph. We have two kinds of weights for a pair of users u and v , namely, w A ( u ,v )and w H ( u ,v ). In practice, for a user u , we do not need to keep all edges of her linking neighbors, but We find that M = 30 yields a good trade-off between computational efficiency and accuracy.

As we discussed before, due to the dynamic nature of the social networks, the weights w
A ( u important issue is how often we need to update these weights. Taking the retweet relation as an example: we split the data between August and September 2009 on a weekly basis and ended up with a total of eight epochs. At the i th epoch, we use all the are used to quantify the differences of top-M neighbors and their corresponding linking weights for u at different epochs. The first measure is to count how many of the top-M ( M = 30 in the experiments) neighbors change between two epochs:
If user v appears in the top-M neighbors of user u at both the s th and i th epochs, we then use the following measure to compute the relative weight change between u and v . and ( i  X  1), respectively, to compute the accumulative change (i.e., respective to the 1st week) and consecutive change (i.e., respective to the previous week). Having the values of these two measures, we further average them over all the users to see the overall change patterns.

We present the results in Table VIII and IX. It can be observed that the consecutive change of the first four weeks is more significant compared to the last four weeks. Also, after the first four weeks, the change seems to be relatively small, and the network becomes more stable. These observations suggest that for a new user, her corresponding link weights should be updated more regularly, for example, on a weekly basis; while for a user of Twitter for a longer time, her weights can be updated less frequently, for example, on a monthly basis. By doing so, it is possible to run our proposed method efficiently on a very large dataset comprising of millions of users.
 In this section, we discuss how to set the parameters of our proposed method CoReg. Recall that there are in total three parameters in CoReg:  X  ,  X  ,and  X  . In our exper-iments, it generally works well when we have the same weights for both the in-link regularization and the out-link regularization, that is,  X  =  X  . With the constraint  X  +  X  +  X  = 1, we only have one parameter to tune, that is,  X  .Once  X  is fixed, we have  X  =  X  = (1  X   X  ) / 2. To see how  X  affects our method, we tune the values of  X  from 0 to 1 with a step of 0.05. We present the results in Figure 5 and choose the optimal result from InfPR as a comparison. From this figure, we can see that CoReg performs consistently better than InfPR when the value of  X  is beyond 0.4. Empirically, we notice that when we have more evidence (i.e., more data) from users themselves, we should set a larger value for  X  , and vice versa. Our work is mainly related to the following topics.

Graph Regularization. There is a very long history of the application of regular-ization techniques in machine learning [Neumaier 1998], in which it was first used to find meaningful approximate solutions of ill-conditioned or singular systems. In statistics and machine learning, regularization techniques are mainly used to prevent over-fitting [Tibshirani 1994], for example, L 2 regularization.

In recent years, with the emergence of various data with rich attributes (e.g., network links), regularization techniques have been adopted in order to model these useful features. Specially, graph regularization methods have been proposed to utilize the graph structure underlying the data [Mei et al. 2008; Li et al. 2008; Ji et al. 2011; Zhou et al. 2004] and have been widely applied to various social media mining tasks, for example, tag recommendation [Guan et al. 2009], object classification [Yin et al. 2009], and collaborative filtering [Ma et al. 2009a, 2011]. Apart from studies on undirected graph regularization, Zhou et al. [2005a, 2005b] proposed two methods to deal with directed graphs in the regularization framework. The main idea is to transform directed graphs to undirected ones; therefore, the undirected regularization framework can be reused. Our work is partly inspired by their study. While they aim to perform classification on data instances with directed links, we focus on a different task of learning user interests from online social networks, taking into account various social connections.

Regularization methods have been applied on rating networks [Ma et al. 2011] and author networks [Mei et al. 2008]. Nevertheless, Twitter itself is more complex than those networks, which makes our task more challenging. The most significant differ-ence between our work and the previous research is the underlying assumptions made. Existing work is mainly built on the cluster assumption, while ours is built on the novel link structure assumption, which is arguably more suitable for online social net-work analysis. Under the cluster assumption, node similarities are measured based on the existence of explicit links. However, under the link structure assumption, node similarities are evaluated based on the local link structures between two nodes. Our experimental results show that algorithms built on the link structure assumption is potentially more robust in complex and dynamic networks.
 as topic distributions over topics in text . Yang et al. [2012] modeled user interests as a weighted term vector based on the tweets users posted, and then used a cosine function to calculate the user similarities. Yin et al. [2010] utilized tags that users have used to represent user interests. Some recent studies took temporal factors into consideration when modeling user interests [Yin et al. 2011; Ahmed et al. 2011]. In this article, following Steyvers et al. [2004], we represent user interests as distributions over a set of fixed topics.

There has also been some research on analyzing and learning user interests from social networks [Han et al. 2012; Guo et al. 2009; Wang et al. 2011; Shi et al. 2009]. Our work is different from theirs in that we go beyond friend-link relationships and propose a principled framework to leverage various types of social connections under the link structure assumption.
 terize and analyze Twitter topics; topic-model-based and hashtag-based approaches. Zhao et al. [2011] proposed a Twitter-LDA which extracts topics from tweets con-catenated for each user. Hong et al. [2012] proposed extracting meaningful topics by combining geography information. Another way to characterize topics is to utilize the mechanism of hashtagging. Kwak et al. [2010] used top-ranked hashtags as trending topics in Twitter. Romero et al. [2011] performed a preliminary study of the adoption of hashtags. Based on that, Yang et al. [2012] further examined how dual role affects hashtag adoption. Lehmann et al. [2012] provided a temporal analysis of different types of hashtags. A way to combine content analysis and network regularization is to develop a joint topic model, as in Mei et al. [2008]. Our proposed method can work with any topic representations, including multinomial topic distributions or hashtag topic representations.
 studies. Both traditional cluster assumption and our link structure assumption are formal ways to define and characterize homophily in social networks. Our method consists of two regularization factors, namely, the in-link regularization factor and the out-link regularization factor. We propose in-link and out-link similarity functions for user similarity measurement. These functions are related to SimRank [Jeh and Widom 2002], which assumes that two objects are similar if they are related to similar objects. Nevertheless, there are a couple of notable differences between SimRank and our proposed similarity functions. First, SimRank can X  X  be used in sparse directed networks. Instead, our proposed similarity functions can be easily adapted to handle various relations (recall we have the relation weight function w R (  X  ,  X  )inEq.(2)and Eq. (4) in sparse directed networks. Second, SimRank is a recursive method for learning similarities which can be very time consuming. When the structural context of one vertex (or object) changes, SimRank needs to be rerun. On the contrary, our method only stores the top-M most similar neighbors for each user. Hence, when the structural context of a vertex changes, we only need to update the similarity scores of its top-M neighbors. As have been discussed in Section 6.8, the similarity scores or weight scores of the links do not need to be updated very often. As such, our method is more efficient than SimRank. In this article, we have proposed a novel framework to learn user interests from online social networks. In particular, we have introduced the link structure assumption for evaluating user similarities based on the local link structures instead of merely relying on explicit links, as is often the case in the previous studies. We have provided a principled solution to model implicit and directed social connections. Our proposed model outperforms a few competitive baselines on learning user interests over both multinomial topics and hashtag topics. Moreover, the experimental results on a range of tasks, including retweet prediction and topical authority identification, show that our model consistently performs the best.

Under the introduced link structure assumption, more complicated methods can be explored to define the user similarities, such as counting the number of common trian-gles within the neighborhoods of two users in the relation graph. Nevertheless, such methods could potentially require larger time and memory complexity and therefore may not be scalable in large datasets. In this article, we have presented a relatively simple but effective way to compute user similarities. We believe that our proposed framework will inspire more follow-up studies under the link structure assumption.
There are a few directions we would like to explore in the future. First, we transform directed graphs into undirected ones, which may result in information loss due to the removal of link directions. One possible solution is to differentiate between explicit and implicit links and keep the direction information in explicit links. Second, we only consider out-link and the in-link regularization factors under the link structure assumption. There could be other alternative methods to instantiate this assumption. We plan to investigate this further in the future.

