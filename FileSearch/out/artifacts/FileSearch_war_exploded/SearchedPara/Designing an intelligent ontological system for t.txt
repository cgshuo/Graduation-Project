 Maryam Keyarsalan, Gholam Ali Montazer n 1. Introduction
As a result of an increase in urban traffic, the limited capacities of road network and developing technological aspects in traffic tools and approaches, many entities, relations, situations and rules have entered traffic light control domain and transformed it into a knowledge area. Modeling knowledge of this domain helps traffic agents and applications manage traffic efficiently regarding real-time conditions. One of the most appropriate ways for comprehensive knowledge modeling of such domains is using ontology concept ( Go  X  mez-Pe  X  rez et al., 2004 ).  X  X  X ntology is a formal, explicit specification of a shared conceptualization. X  X  ( Gruber, 1994 ). The previous models are fundamental infrastruc-tures of ontology construction to build a shared domain of knowledge with semantic richness. In addition to the importance of ontology as conceptualization formalism, it has the potential power to reason over the represented data. This ability will improve in making decisions about performance and other non-functional features in intelligent systems ( Lera et al., 2006 ). In recent years, research studies on ontology are becoming a new hot topic in different activities such as Artificial Intelligence,
Knowledge Management, Semantic Web, E-business and several other application areas ( Lera et al., 2006 ). One of these domains is intelligent traffic systems (ITS). Some efforts have been made into this area by presenting and using ontologies for detecting traffic congestion ( Murray and Liu, 1995 ), managing non-urban road meteorological incidents ( Toma  X  s and Garc X   X  a, 2005 ), driving advi-sory systems ( Avram et al., 2006 ) and sharing and integrating an information platform for intelligent transportation systems ( Zhai et al., 2007 ). The purpose of this paper is to present a traffic light control ontology (TLCO) for reusing the knowledge of this context and control the isolated intersections efficiently. This new approach applies an intelligent agent that uses knowledge of fuzzy TLCO for decision making. This system uses the images of intersections taken by installed surveillance cameras. These images are processed by image processing algorithms and exploiting a neural network approach and then sent to an intelligent agent. In Section 2, we will briefly explain a back-ground of the technologies utilized in this work including seman-tic web technologies, intelligent agent technologies and traffic light control approaches. In Section 3, the architecture of the new system is presented which is based on layered semantic web architecture ( Berners-Lee et al., 2001 ). Section 4 describes the traffic light control fuzzy ontology building step-by-step based on
Methontology ( Go  X  mez-Pe  X  rez et al., 2004 ). Information extraction from intersection images is explained in Section 5. In Section 6, the operation of intelligent system is described completely and finally the proposed approach is evaluated in Section 7 and the discussions and conclusions are stated. 2. Background
This section explains the technologies applied in this work including semantic web technologies specially ontology and fuzzy ontology. Moreover, state of the art of traffic light control approaches is presented briefly. 2.1. Semantic web technologies  X  X  X he semantic web is defined as an extension of the current web in which information is given well-defined meaning; better enabling computers and people to work in cooperation X  X  ( Berners-
Lee et al., 2001 ).There are several layers in the semantic web architecture suggested by Berners-Lee shown in Fig. 1 . The development of the semantic web proceeds in steps, each step building a layer on top of another. At the bottom layer there is
XML, a markup web language which represents web documents in a structured format with a user-defined vocabulary. It is particularly suitable for sending documents across the web. At the next higher layer, RDF is located as a basic data model, such as the entity-relationship model, for writing simple statements about Web objects (resources). The RDF data model has an
XML-based syntax. Besides RDF, there is RDF Schema which provide modeling primitives for organizing web objects into hierarchies. It can be used as a primitive language for writing ontologies. But there is a need for more powerful ontology languages such as OWL that expands RDF Schema and allows the representations of more complex relationships between web objects. This knowledge representation language can describe wide-spread features about properties and classes, such as all kinds of relations between classes, cardinality, equality, richer typing of properties, characteristics of properties and enumerated classes ( Grigoris and Van Harmelen, 2004 ).

Although ontologies are the backbone technology of the semantic web, the core concept of the term  X  X  X ntology X  X  originally is borrowed from philosophy and it has gained substantial popularity in computer science and information systems since less than twenty years ago ( Hepp, 2007 ). There are many formal definitions of ontology which have changed and evolved over the years, but one of the most complete definitions belongs to Studer ( Angele et al., 1998 ), who says:  X  X  X ntology is a formal, explicit specification of a shared conceptualization. Conceptualization refers to an abstract model of some phenomenon in the world by having identified the relevant concepts of that phenomenon.
Explicit means that the type of concepts used and the constraints on their use are explicitly defined. Formal refers to the fact that the ontology should be machine-readable. Shared reflects the notion that an ontology captures consensual knowledge, that is, it is not private of some individual, but accepted by a group X  X  ( Go  X  mez-Pe  X  rez et al., 2004 ). By ontologies, users and systems can communicate through an easy information exchange and integra-tion. Nevertheless, since the application domains, in which the predominant information is vague are not unambiguously discrete, a theoretical formalism founded upon conventional ontology may fail to represent it. One more point to bear in mind is the fact that fuzzy knowledge has an integral role to play in applications including knowledge and information that is uncertain, unstructured and unpredictable, such as text mining, multimedia information systems, medical informatics, machine learning and natural language processing. In this approach, fuzzy ontology can be regarded as an extension to the conventional ontology ( Zhai et al., 2008 ). In the present paper, we have adopted a definition of fuzzy ontology presented by Zhai et al. (2008 ).
The fuzzy domain ontology is used to model domain expert knowledge. There are several methodologies for ontology con-struction such as Cyc method ( Lenat and Guha, 1990 ), KACTUS approach ( Schreiber et al., 1995 ) and Methontology ( Go  X  mez-Pe  X  rez et al., 2004 ). Among others Methontology has been proposed to ontology construction by the Foundation for Intelligent Physical Agents (FIPA), which promotes inter-operability across agent-based applications ( Go  X  mez-Pe  X  rez et al., 2004 ). Some ontology tools such as ODE and Prote  X  ge  X  support Methontology. One of the key decisions to make in the ontology development process is to select the language (or set of languages) in which the ontology will be implemented. In the past decades, several ontology implementation languages have been created, such as RDF and OWL all of which are based on XML. Among these languages, OWL covers most of the features of the others and completes them ( Go  X  mez-Pe  X  rez et al., 2004 ). So, the TLCO has been constructed based on Methontology and implemented by OWL in Prote  X  ge  X  3.4. 2.2. Traffic light control approaches and intelligent agents technologies
There are two main different kinds of traffic signal control approaches. The first strategy is the fixed-time and the second one is traffic responsive strategy. In the fixed time approach, the predefined plan determines the optimal green lights duration and the optimal cycle time based on day and time. The essential aim of such approaches is to minimize the total waiting time. Obviously, this kind of traffic light control strategy has precise disadvantages. Its main weakness is its inability to adjust itself with regard to real-time environmental traffic conditions such as vehicle and pedestrian congestions. The second approach means the traffic-responsive strategy was proposed to solve this problem by applying some detective tools, such as inductive loops or pattern-recognition digital cameras. In this way, the new approach is able to measure real-time conditions and decide effectively. In recent years, several kinds of traffic light control systems in this category have been proposed ( Yan et al., 2008 ). According to Wiering et al. (2004 ), traffic responsive strategy includes in the expert systems, prediction based optimization, fuzzy logic based, evolutionary algorithms, reinforcement learn-ing and intelligent agents X  categories. Among them, some meth-ods such as fuzzy logic ( Henry et al., 1998 ; Murat and Gedizlioglu, 2005 ; Nair and Cai, 2007 ; Zarandi et al., 2009 ; Karakuzu and Demirci, 2009 ; Chong et al., 2009 ) and intelligent agents ( Hirankitti and Krohkaew, 2007 ; Tubaishat et al., 2007 ; Sirisaengtaksin and Safin, 2009 ; Oliveira and Camponogara, 2010 ) and also a combination of them are more considerable. The main reason for applying fuzzy logic is its capability to model intrinsic uncertainty involving traffic light control at junctions and intersections like human operators.  X  X  X he simplicity of this approach compared to mathematical models, makes fuzzy logic a desired approach in developing the controller X  X  ( Nair and Cai, 2007 ) .We were also persuaded to use fuzzy logic in creation of the TLCO. In addition to applying fuzzy logic,  X  X  X ntelligent agents systems have been successful in solving unstructured problems (for which adequate models are not known), in the replacement of and assistance to humans, in solving high abstraction problems and in handling discrete decisions X  X  ( Oliveira and Camponogara, 2010 ). This approach is suitable to illustrate and describe the dynamical structure of human behavior with reference to traffic and transportation. The abilities of fuzzy logic and intelligent agents in traffic light control encourage us to use them in the proposed system. We have used fuzzy theory to model the TLCO more accurately and efficiently. Applying intrusive sensors, including inductive loop detectors, micro-loop probes and pneu-matic road tubes is so prevalent in traffic surveillance systems. On the other hand, they have some disadvantages such as interrup-tion of traffic during installation and repair which leads to a high cost of installation and maintenance. Besides these detectors, some over the ground sensors like videos, radars and ultrasonic systems are used ( Tubaishat et al., 2007 ). Applying such detectors like video image processing has several distinct advantages over the inductive loop-based technology in traffic detection. For example, inductive loops are capable of gathering traffic flow data at a certain point, while video image technology can provide a wide range of standard traffic data information about traffic flow in larger areas. Although some of the newer detection technologies can also monitor a larger area, video has actually the largest control area. Moreover, video detection is capable of sending real time images and providing extra information to the control center ( Versavel, 2007 ). However, the data provided by the system must be accurate and delivered to the traffic inter-section agents within a certain time for real-time applications. 3. The ontology-based intelligent traffic light control system
The architecture of ontology-based intelligent traffic light con-trol system has been adopted from layered structure of semantic web. This architecture contains three layers. The bottom layer is structured around imagery information extracted from images of intersection in the XML format. The middle layer is the traffic light control fuzzy ontology which represents the traffic light control knowledge including concepts, relations, properties, axioms and the rules in the form of OWL. At the top of the structure there is the reasoning layer which uses fuzzy ontology and XML instances for specifying real-time suitable sequence phasing and green times for each phase. Fig. 2 shows the architecture of an ontology based intelligent traffic light control system. The fuzzy traffic light control ontology as the most important part of the system is constru-cted manually and represents the traffic light control domain knowledge. After receiving images of intersection which is almost taken simultaneously by surveillance traffic camera system, impor-tant traffic data such as vehicle and pedestrian congestion are extracted by image processing algorithms using MATLAB image processing toolbox and neural network toolbox. According to predefined XML schema, this data is transformed into the XML format by MATLAB XML toolbox as XML instances. The agent reads XML instances and TLCO and maps instances onto TLCO X  X  concepts.
In the first step, the fuzzy rules are checked for specifying optimized cycle time and phasing type. Next, the agent uses results for determining sequence phasing and optimized green time for each phase.

In the rest of this section, the construction and functionality of each part of the system are described. 3.1. Fuzzy traffic light control ontology
The transportation domain is composed of several objects such as roads, junctions, vehicles, signals, etc. In this domain, there are many applications that should interoperate with each other. For doing so, a general specification reference including traffic light knowledge is needed to share and reuse it among the applica-tions. As a result of this necessity for Intelligent Transportation Systems (ITS) applications, an international standard called
Geographic Data Files (GDF) specifies the conceptual and logical data model and the exchange format for geographic data bases ( Lorenz et al., 2005 ). The ISO/DIS 14825(E) standard was repre-sented in 2002 with a concentration on ITS applications and emphasis on road and road related information. This standard encompasses the ontology of notions in the domain of traffic networks. As a result of extraction, extension and representation of this ontology in the form of OWL, the Ontology of Traffic
Networks (OTN) has been created and used as a general-purpose ontology in ITS thoroughly ( Oliveira and Camponogara, 2010 ).
Nevertheless, it does not encompass traffic light control domain as good as other parts of traffic networks. Hence, OTN is not completely suitable for the purpose of traffic light controlling and we need an extended version of it. In the construction of TLCO, we have used two sub domains of OTN called Road and Ferries and Road Furniture and extracted some concepts such as Road, Road
Element, Intersection, Traffic Light, etc. The rest of the TLCO X  X  elements have been defined based on literature and knowledge of experts such as traffic engineers and managers. In the first step of construction based on Methontology, the glossary of basic terms
Image classification was collected from standards and the literature including 10 concepts, 8 relationships and 14 properties. In the second step, concept taxonomies and ad-hoc binary relationship diagram were built in the form of Fig. 3 illustration. As shown in Fig. 3 , the concepts have relationships with one another. For example, each intersection contains road elements. In the next step, all of the concepts were explained in detail by defining their properties, relations and instances in a dictionary. This activity is also done for describing relations and properties and, in addition, some information including source and destination concepts, cardinal-ity, mathematical properties and inverse relations is specified for relations in this step. For an illustration, the source concept of  X  X  X ermits X  X  relation is  X  X  X hasing X  X  and its destination concepts are  X  X  X raffic movement X  X  and  X  X  X edestrian-movement X  X  and its cardin-ality is the one or more.

Also for properties, some information including the amount of related concepts, value type, measurement unit, range of values and cardinality are specified. For instance, the  X  X  X ycle time X  X  property belongs to  X  X  X raffic light X  X  concept which takes fuzzy values {short, medium, long and very long} with cardinality one. Due to the fuzzy type of some properties such as vehicle and pedestrian congestion and the cycle time, fuzzy membership functions for them were defined. The membership functions of vehicle and pedestrian congestion are defined in the next part regarding image processing and classification activities.
Finally, the axioms and rules are defined based on related literature and standards such as HCM 2000 and GDF. We have defined some axioms and two types of fuzzy rules. For example, one of the axioms states that all left-turn movements are free. Hence, there are four main traffic movements in three ways and eight other ones in four-ways. Moreover, two types of fuzzy rules are defined for specifying phase types and optimized cycle time. These IF-THEN rules are based on some fuzzy input variables. The fuzzy variables for selecting suitable phase type are intersection type, the average vehicle and pedestrian congestion. The output variable, phasing type, is selected from a predefined set including members such as simple two phases, simple three phases, simple four phases and lead-lag which is a standard phase type. All rules in this category are shown in Table 1 .

Also, Fig. 4 shows the schematic representation of output patterns. This selection helps the intelligent system to determine phase sequencing in the next step.

Another fuzzy rule category is related to estimating the optimized cycle time. The fuzzy variables of these rules are weather condition, time, day and the average vehicle congestion.
For this reason 60 fuzzy rules are defined. Weather condition is retrieved from the Meteorology Institute. Day and time are also predefined based on traffic expert X  X  knowledge in the form of fuzzy variables. Fig. 5 shows the membership functions of day, time and cycle time. The day parameter is predefined on a calendar based on holiday and normal day and their relation to the amount of cycle time. For example, the period of cycle time on holidays is less than that of normal days. So, the membership degree of normal days is more than holidays.

For instance a fuzzy rule for phase type selection is stated as follows:  X  X  X f an intersection type i s four-ways, the average vehicle congestion is low, the average pedestrian congestion is medium, Then the phase type is simple two phases X  X . Also, the fuzzy rule for cycle time estimator is expressed as follows:  X  X  X f weather condition is sunny, time is morning, day is normal and average vehicle congestion is low, Then the cycle time is short X  X . All rules in this category are presented in Appendix A.

At the end of this step, the validity of TLCO X  X  items should be assessed. This function was done using expert X  X  opinions. The main purpose of the evaluation process is to show the usefulness of the developed ontology and its associated software environ-ment ( Go  X  mez-Pe  X  rez et al., 2004 ). Although all information, especially traffic light control rules has been extracted from international standards and scientific traffic literature, the knowl-edge of experts is the final validation criterion for correctness of them. In this process, all fuzzy rules including the optimized cycle time and phasing type rules, were prepared in the form of questionnaires and presented to some experts including three traffic colonels from Tehran Police Department and two traffic engineers from Tehran Traffic Organization. As a result of Delphi process of the expert X  X  opinion, about 84% of phasing type rules and 87% of optimized cycle time were accepted. Moreover, all
TLCO X  X  segments including concepts, relations, properties and axioms were assessed and verified by these experts, simulta-neously. We evaluated the TLCO based on evaluation process of On-To-Knowledge methodology ( Go  X  mez-Pe  X  rez et al., 2004 ). During this process two activities including checking the require-ments and competency questions and testing the ontology in the target application environment are carried out. Since TLCO has been constructed based on the requirements such as specifying optimized cycle time, phasing type, sequences of traffic move-ments and optimized green time for each phase, the first activity was done with best results. TLCO satisfies all the needs in the traffic light control and can answer the competency questions. This claim can be supported by performance evaluation process. We examine this process in experimental results section. 3.2. Information extraction using image processing
Images of an intersection contain semantic information in traffic light control domain such as road, road element, pedestrian crossing and divider position and also some properties such as vehicle and pedestrian congestion. This information is observable and understandable for humans but not for computers. Therefore, the images have to be processed and some machine understand-able description has to be extracted from them. For this purpose, we have used MATLAB image processing toolbox for region choosing to specify road element and pedestrian crossing location and for feature extraction including vehicle and pedestrian number congestion. Moreover, MATLAB neural network toolbox has been applied for classification of feature in the form of fuzzy value of ontology properties. Fig. 6 shows the whole process of informa-tion extraction from images.

According to intersection type, three or four images are almost simultaneously taken by surveillance cameras from each way of the intersection. The whole process, including: region choosing, feature extraction and classification is described as follows: 3.2.1. Region choosing In this phase we use Sobel edge detection algorithm ( Sobel and
Feldman, 1968 ) for primitive segmentation in MATLAB. This algorithm takes a grayscale image as its input. Hence, before starting, colored images of intersection are converted to gray scale images. For simplicity, pedestrian crossing concept is selected as the first location to find. Because of the horizontal essence of pedestrian crossing concept, horizontal Sobel method is applied in this step. As a result of this method on each gray scale image, a binary image consisting of horizontal segments is achieved. Next, Hough transform technique is applied to locate horizontal lines in the image. The two longest lines among them specify the location of pedestrian crossing. Finding other loca-tions, including divider and road elements, is done based on this location. The divider location is determined using the transverse line which crosses the middles of the two boundary lines of pedestrian crossing. This line divides the road into two road elements. Hence, the distance between divider and the images of right and left boundary represents the location of road elements.
Fig. 7 illustrates step-by-step region choosing process on an intersection image.

Although these distances do not only contain road element boundaries and encompass some other sections such as pave-ments and trees, they are not a serious problem for congestion estimation and also the effects of this problem are decreased by applying neural network approach in the classification phase which is described below.

Time complexity of this phase and even the image processing section depends on the Sobel operation because all other parts have constant order. A Sobel is a faster edge detection method than the other ones such as Canny (1986 ) and its time complexity is y  X  size  X  , where size is the size of the input image ( Mohan and Gupta, 2009 ). The size of all intersection X  X  images is 576 768 so
Sobel X  X  time complexity is y (1). Moreover this time completely depends on the speed of hardware. 3.2.2. Feature extraction
The aim of this section is to measure vehicle and pedestrian congestion. Pedestrian congestion is measured on the pedestrian crossing during the red light. To do so, the proportion of black to white pixels in the binary version of gray scale image is calcu-lated. This version is created by a threshold for black pixel range.
For example, every pixel with color number less than 245 is represented as black pixel. This is done to include even pedes-trians with light coverings. Before measuring vehicle congestion, the limited area of road elements should be specified accurately.
In other words, the pedestrian crossing area should be omitted from road element boundaries. After that, the number of small lines is enumerated on each road element on the image of horizontal lines. Fig. 8 shows the vehicle congestions in the road element areas. These lines in the road element areas nearly represent vehicles; nevertheless, it is not exactly correct because of the existence of other objects such as leaves of trees, borders of streets, etc. For more accurate estimation, these are given to a neural network along with other data for classifying congestions in the form of fuzzy parameters. 3.2.3. Classification
As mentioned in the ontology construction section, pedestrian and vehicle congestions are fuzzy properties which take fuzzy values including low , medium and heavy . Because of quantitative and uncertain obtained values as a result of earlier activities, we use Radial Basis Function neural network (RBFNN) to classify the primary results in the categories that match the fuzzy membership functions. This network is a two layered feed forward network with useful properties such as simplicity, robustness and optimal approximation. It has successfully been applied to the image classification and image index ( Chang and
Fu, 2006 ).As mentioned before, obtained values for pedestrian and vehicle congestions encompass some noisy data that origi-nate from the nature of intersection environment such as the differences between lengths and widths of pedestrian crossing and road elements, existence of some unrelated objects in the road element areas such as leaves of trees and borders of streets which are different in the road elements. These differences cause uncertainty in the estimation of congestions. We solve this problem using another parameter which represents road ele-ment X  X  number. In this way, all road elements in the intersection are numbered from north and clockwise. This number along with related congestion is given to RBF neural network. This network consists of two layers including hidden radial basis layer and an output linear layer. The transfer function for a radial basis neuron is a Gaussian function f  X  x  X  X  e x 2 and it is also a linear function for linear neuron. There are two different designs for RBFNN in MATLAB, one of which is referred to as the exact design (NEW-
RBE) and the other one as the more efficient design (NEWRB). In this paper, the best results were obtained using NEWRB. Two RBF neural networks are considered for vehicle and pedestrian con-gestions in the form shown in Fig. 9 . Both of them classify vehicle and pedestrian congestion in the light, medium and heavy classes which match values 1, 2 and 3, respectively. The image data set, consisting of 730 patterns, was classified by experts considering both vehicle and pedestrian congestions.

About 510 patterns have been dedicated to training set and 220 patterns to the testing one. The error of recognition rate of pedestrian congestion and vehicle congestion classification is 0.00212 and 0.0046, respectively. According to the obtained results from both of the trained networks, each of the output categories is classified in a different range. So, light, normal and heavy categories are classified as fuzzy sets shown in Fig. 10 .
These fuzzy membership functions belong to both pedestrian and vehicle congestion fuzzy properties. 3.3. XML generation and intelligent agent functionality
The extracted information form images of the intersection are considered as instances that should be organized and used for suitable traffic light control. The ontology is responsible for orga-nizing these instances in the form of their concepts and properties.
To do so, instances should be understandable for ontology. There-fore, in this step, all extracted information is transformed into the XML format. We use XML schema for restricting the structure of
XML instances based on TLCO X  X  content. This XML schema is shown in Fig. 11 . Each instance consists of detailed information about all road and road elements in an intersection such as their direction, vehicle and pedestrian congestions, etc.

We have used XML Toolbox in MATLAB and the XML Schema for generating XML instances. These instances are mapped onto
TLCO by one-to-one mapping between XML elements and ontol-ogy concepts and properties. This process is done in the Eclipse environment using Jena package. Because of the fuzzy essence of ontology rules, the optimized cycle time and phase type are calculated using MATLAB fuzzy engine and TLCO X  X  fuzzy rules, as mentioned before, for specifying cycle time and phase type .Then they are transformed to XML format and mapped onto related ontology properties. Therefore, some inferences are made by MATLAB fuzzy inference system. As a result of ontology manipulation, the intelligent system obtains traffic information and uses the knowledge of TLCO to match these facts with the different conditions modeled in the ontology. The most important task of the system is to determine the traffic movements and their sequences and optimized green time in each phase scheduling.
This system uses phasing type and vehicle congestions of road elements and compares them with each other and makes deci-sions about the priorities and sequences of traffic movements in each phase. Then it calculates the optimized green time for each phase based on proportion of vehicle congestions of permitted traffic movements in each phase to total vehicle congestion in the whole intersection. This ratio is multiplied by optimized cycle time and gives the optimized green time for each phase.
Therefore, the final results of intelligent system are detailed information about phasing including all permitted vehicle and pedestrian permitted movements and optimized green time for each of them. 4. Experimental results
In this section, we have setup some experiment in order to compare the performance of our approach with other works. In this process, we have simulated this proposed system in
MATLAB using fuzzy inference engine and considered a complex intersection with different types of traffic condition which has been adopted from Chong et al. because of similarities of their assumptions to our approach especially regarding isolated inter-section. They used traffic data collected in 1998, in Route 20 between Arlington Street in Boston and Route 128 in Waltham.
That study used B.U Bridge as a reference intersection with the traffic flow rates as follows ( Karakuzu and Demirci, 2009 ): (i) For a light traffic flow, flow rate (vehicles/s)  X  326/(60 60)  X  0.09. (ii) For a moderate traffic flow, flow rate. (vehicles/s)  X  ((1600  X  326)/2)/(60 60)  X  0.27. (iii) For a heavy traffic flow, flow rate (vehicles/s)  X  1600/(60 60)  X  0.44.

They used spawn frequencies to simulate different traffic conditions estimated by referring to actual traffic data. Based on above flow rate, we use three types of spawn frequencies estimated to simulate different traffic conditions as follows: (i) Frequency of 0.25(one vehicle generated for every four cycles) is set to simulate light traffic condition. (ii) Frequency of 0.5(one vehicle generated for every two cycles) is set to simulate moderate traffic condition. (iii) Frequency of 0.75(three vehicle generated for every four cycles) is set to simulate heavy traffic condition.

The traffic data sets are classified into three groups: balanced spawn frequency, unbalanced spawn frequency and complemen-tary. In balanced spawn frequency, there are data sets which simulate different traffic densities with a balanced vehicle volume flowing into the intersection from all four directions. Data sets in the unbalanced spawn frequency simulate asymmetrical traffic volumes flowing into the intersection. For instance, one direction has either a heavier or a lighter traffic volume rather than the other three directions. The complementary spawn frequency is similar to unbalanced one, but in this class, the four directions are divided into two pairs with opposite directions as one pair. Each pair has different traffic volumes flowing into the intersection ( Karakuzu and Demirci, 2009 ). Table 2 shows all traffic conditions based on these classes.

According to the mentioned condition in Table 2 , the proposed system was simulated in MATLAB during 1 h for each condition and the average delayed time for each car in one cycle was calculated. According to environmental conditions, including day, time and weather which were considered in the new approach, each condition of Table 2 was evaluated for 20 h with considering all different parameters. Table 3 shows these parameters.
Following that, we compared these results with both methods including pre-timed and vehicle actuated signal control or briefly  X  X  X A X  X  in optimized conditions by Synchro 6.0 traffic simulation software.

In order to evaluate the 99% confidence interval of the proposed system, the standard deviation was computed for each condition. Table 4 shows all the results which are also shown in Fig. 12 .Since these two methods do not consider the parameters in Table 3 ,their results in the different environmental conditions are the same. Hence, in Table 4 we have mentioned the longest delayed time of the proposed method among all 20 different hours.

As shown in Fig. 12 , the results of ontological approach with 99% confidence interval gives a lower average delayed time for all conditions compared with the other two approaches. 5. Discussion
Although many projects have been done on intelligent traffic light control around the world, a few of them are completely context-based. Most of them focus on applying traffic data like vehicle congestion without considering other influential traffic parameters such as weather conditions. This paper proposes a new way to understand and collect accurately all traffic related variables including vehicle and pedestrian congestion, weather condition, day and time by providing the specific ontology and applying fuzzy theory in its construction to model the traffic light control domain,. In this way, the controlling steps including selection of the phasing type, calculation of the optimized cycle time and dedication of the optimized green time to each phase are done based on considering relevant parameters and they are supported by the domain knowledge. Moreover, for determining real-time traffic congestion, this paper uses video image proces-sing which is more closely related to human X  X  observations compared with other methods. Despite the fact that various commercial intelligent traffic light control systems apply traffic data by inductive loops, most of the time, especially in the heavy traffic condition, are not efficient enough and police officers prefer to control the light based on their observations. This deficiency motivated us to use video image processing. Therefore, according to Section 3.2, the vehicle and pedestrian congestions are estimated in different ways with suitable results.
The novel method is completely distinctive from other similar approaches based on using the combination of ontology and video image processing. The experimental results in all conditions show that the proposed approach causes few delayed time in compar-ison with other methods including pre-timed and VA, consider-ably. Although this new method has been completely designed in the academic space, its results can be a positive sign for expansion of this new way in the commercial area.

Despite the advantages of the proposed method, it involves some limitations. The most important restriction is that the video image processing cannot recognize the congestions well in specific situations, especially in darkness and in bad weather. So, applying other detectors and using their data traffic to cover this problem is inevitable.

Moreover, we had some problems in achieving enough images of intersections with respect to covering all considered para-meters. To such a degree, we needed images in 280(14 5 2 2) according to different manners of parameters. However, we could achieve only 730 images which did not cover the all values of the all parameters. So, we had to manipulate some of the images to be similar to the desired situations. This problem postponed the evaluation of the image processing step and also the evaluation process in general.

For improvement of the novel approach and its expansion, we plan to extend TLCO into an ontology for controlling network of intersections. Also, using other types of traffic data such as inductive loop signals can help achieve higher performance of the proposed system. To do so, we intend to use this type of data in parallel with visual data. Moreover, we intend to extract semantic information of intersection images using multimedia ontology in future. 6. Conclusion
This paper has presented a novel ontology based intelligent system for controlling the traffic light in isolated intersections.
The first new element of this work is the construction of the fuzzy traffic light control ontology. According to the literature review, the other traffic light control approaches have not applied ontology for intelligent controlling until now and this paper has presented and discussed this element for the first time. The proposed ontology is a knowledge base for traffic light control applications and systems for future usages. The second new aspect of this paper is to apply intersection images as primary traffic data in contrast to other similar approaches. Although this type of data is not always suitable especially in bad weather or in darkness, it has some advantages such as monitoring larger areas, sending over real time images to control room and measuring traffic parameters carefully, especially when interruption or malfunctioning of other traffic detectors occur ( Versavel, 2007 ).The data were processed by image processing algorithms and neural network in MATLAB toolboxes. Extracted information from this process is converted to XML instances. Then they are mapped onto TLCO and the fuzzy engines conclude suitable phase type and optimized cycle time based on instances. Finally, the system makes decisions about the sequence of traffic and pedestrian movements based on congestions in each phase and determine optimized green time based on congestions and optimized cycle time. The whole process of proposed system has been evaluated by experts and its results are compared with the results of other approaches including pre-timed and VA. The
Results show that the average delayed time for each car in each cycle in the new system is much lower than that of other approaches.
 Acknowledgement The authors would like to thank colonels Azizi, Mohebbi and Kian Mehr from Tehran Police Department and engineers
Chavoshi, Abdollahi and Zolfaghari from Tehran Traffic Organiza-tion as the experts in this work for their kind cooperation and insightful advice.
 Appendix A Fuzzy rules for cycle time, see Table A1 .
 References
