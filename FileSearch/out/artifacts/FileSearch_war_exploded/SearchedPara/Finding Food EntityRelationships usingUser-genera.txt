 Rakuten recipe is a recipe site where users can submit their recipes and share with the others. Since recipe contents are generated by users, they usually contain many misspellings, abbreviations, synonyms, hypernyms and hyponyms. Iden-tifying and normalizing these words is essential to retrieve relevant recipes to user X  X  request. In this paper, we intro-duce a new approach to finding related words in a recipe domain using the data structure. Based on the observation that people usually write the main ingredient in the first po-sition of ingredient lists of each recipe and such a ingredient is strongly related to the categories where recipes belong, we calculate relation scores of word pairs using real service data, which contains 790 categories and 405,519 recipes. The ex-perimental result showed that we successfully found seman-tically related word pairs with f-score of 0.93.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Experimentation, Measurement Recipe, food entity relation, search effectiveness
In the United State, there are ten million recipe searches a day on Google in 2011 [3], and large recipe sites like allrecipes.com and www.foodnetwork.com are now attract-ing numerous users. Recipe sites are also popular in Japan, and Rakuten recipe ( recipe.rakuten.co.jp ) provides over 460,000 user-generated recipes.

Like many web sites relying on user-generated contents, recipe sites are faced with the challenge of organizing and extracting the knowledge contained in the data provided by users, while accounting for variability inherent in the input. In this paper, we focus on discovering and normalizing re-lations between ingredient names used by recipe authors. Finding those relations can help search engines to retrieve more relevant recipes by expanding user X  X  query.

Ingredients in recipe sites are written in various ways by spelling variations, misspelling, and abbreviating. In this paper, we refer to such user-generated variants as synonyms, i.e. the words that have equivalent meaning. For instance, we regard  X   X  X  X  X  X  X  X  X  X   X ( spaghetti ) and  X   X  X  X  X  X  X  X   X ( spaghetti ) as being in a synonym relation. On the other hand, users may also input finer-grained varieties of ingredients. We re-fer to such ingredients as hyponyms, i.e. the words that are in IS-A relationship. For example,  X   X  X  X  X  X  X  X   X ( May Queen ) and  X   X  X  X  X  X  X  X   X ( potato ) are in a hyponymy relation. In this paper, we regards two words as related if they are in either synonymy or hyponymy relation.

It is necessary to identify and normalize these relations in order to provide accurate search results based on the textual information. Although previous approaches based on text similarity can find some synonym relations such as abbrevi-ations or misspelling, they still cannot cover all synonyms such as loanwords and dialects. On the other hand, previous approaches based on existing food knowledge bases such as Wikipedia or Wordnet cannot cover all possible hyponymy relations, since ontology information in those data usually focuses on general knowledge such as scientific classification and nutrients. Moreover, they cannot reflect booming in-gredients and ingredients that are referred to using proper names such as brand names.

In this paper, we propose a new approach to finding such related words in recipe data. Based on the observation that users generally input the main ingredient in the first position of ingredient lists of recipes, we assume that the first ingre-dient in each recipe is strongly related to the category where a given recipe was submitted. We propose a method for cal-culating a relation scores between ingredients and category names using the position. We also examine what types of semantic relation exist in a recipe domain.
 Our main contributions are as follows:
The rest of the paper is organized as follows. In Section 2, we review previous studies related to extracting important keywords and keyword relations. Section 3 describes our approach to finding related food entities in detail. In Section 4, we introduce the dataset and report on the performance of the proposed approach. In Section 5, we conclude our works and discuss possible future directions.
Much research has been done on keyword extraction from web pages. Yih et al. used the location of the occurrence of the word in document as a feature for extracting important keyword for advertisement based on the assumption that the important words and phrases usually appear at the begin-ning of a document [5]. Our approach is similar in terms of considering the position of ingredients, but we focus on finding the relation between different keywords.

Many researchers have studied on finding misspelled words or spelling variants based on text similarity. Levenshtein edit distance is one of the most used methods for this pur-pose [2]. It measures the number of character edits between two words, and if the distance is shorter than a threshold, those two words are regarded as the same. However, this method requires a user-defined threshold, which is hard to be decided.

Clements et al. detected synonyms in social tags to ex-pand a search query and retrieve more relevant documents [1]. They used ternary relation in social tagging system, i.e. a user-tag-item relation to derive similarity between two tags. Our approach is differ from this in terms of exploiting the re-lation between a position of ingredient and a category name.
There exists a large body of research on acquiring syn-onym and hyponymy relations from Wikipedia structure. Sumida et al. acquired over one million hyponymy relations with a very high precision using the hierarchical layout of Wikipedia and text patterns [4]. We extracted hyponymy relationship from Japanese Wikipedia, but the results were not sufficient to cover variations in user-generated data.
We focus on the location of keywords in user-generated data in order to extract domain-specific relations. In ad-dition, we show various food entity relationships in user-generated data. Our finding can be exploited to improve recipe searches, which has been relatively unexplored in pre-vious research.
To find the relationship between food entities, we focused on the position of ingredients in ingredient lists of each recipe, and the relation between the main ingredient of each recipe and the category where the recipe was submitted. We observed that main ingredients of each recipe are strongly related to a given category, and users usually input the main ingredient at first while entering recipe data. Indeed, among randomly selected 200 recipes, 92.5% listed their main in-gredient in the first position.

To evaluate the relation between an ingredient and a cat-egory, we construct an ingredient-position matrix M c for each category c , where a row represents each ingredient and a column represents the position in the ingredient list. The length of a row is the total number of ingredients in a cat-egory c and the length of a column is the maximum length of an ingredient list of a recipe in a category c . When there are m ingredients and the maximum length of an ingredi-ent list is n in a category c , the element M c ( i; j ) repre-sents an occurrence of an ingredient i at the position j in recipes of category c . For example, if tiger prawn appeared in the first position in three recipes in the shrimp category, M shrimp ( tiger prawn; 1) is 3. Using this matrix, we propose three scoring strategies.
 Freq this score counts the occurrence of an ingredient in each category based on the assumption that the most fre-quent ingredient is related to a category. The relation score ( i; c ) then will be given by: Tf-idf this score calculates the importance of an ingredient in each category based on the assumption that important ingredients are related to category c . When there are total C categories in corpus, the tf-idf score will be: tf-idf ( i; c ) = FI this score counts the ingredients in the first position in recipes based on the observation that the main ingredient comes in the first position of each recipe and is related to a category. We normalize this score using the total number of occurrences of the ingredient to catch main ingredients that started booming and were not used by many users.

Freq score and tf-idf score were normalized between [0,1] for each category. In Section 4, we will use Freq and tf-idf scores as simple baselines and show the FI approach per-formed best in extracting related food entities.
We implemented approaches proposed in Section 3 and evaluated their performances using real service data. In this section, we introduce the dataset in detail, and categorize the relation patterns in a recipe domain. We then show the extraction performances of different scoring strategies and analyze the result.
We used the Rakuten recipe dataset, which contains 405,519 recipes submitted from June 2011 to April 2012. The cat-egories are organized into a three-level hierarchy, and we used 790 categories at the lowest level. We divided these categories into six types.

The number of categories and recipes in each type is listed in Table 1. Note that some categories do not contain any recipes.
 Category ty pe Number of categories Number of recipes Meal and Dish 354 153,638 (37.9%)
In this pap er, we used 218,138 recipes in ingredient-type categories 1 and 6,998 ingredients that appeared more than ten times in each category. Using these ingredients and cat-egories, we manually annotated ingredient-category pairs if they were either in synonymy or hyponymy relation. Among 12,769 pairs, 1,101 pairs were labeled as positive.
To understand users X  behavior in entering ingredients, we categorized 1,101 ingredient X  X ategory pairs into two types: synonyms and hyponyms. As for synonyms, we subdivided them into variants, abbreviations, common names, and mis-spellings. As for hynonyms, we subdivided them into va-rieties, processed ingredients, and part of ingredients. The details are shown in Table 3. Interestingly, misspelled words were very few in synonymy relation. Instead, spelling varia-tions such as Hiragana-Katakana, Chinese character-Japanese character were dominant. As for hyponymy relation, 41.4% of pairs were fine-grained varieties of ingredients. This im-plies knowledge of varieties is essential for recipe search en-gines to retrieve recipes.
We evaluated if the proposed approach could identify re-lated pairs categorized in Section 4.1. We then compared the extracted pairs of different scoring strategies. We also compared the proposed approach with a previous approach based on Wikipedia in terms of hyponymy relation extrac-tion.
We fo cused on ingredient type categories, since recipes in categories of this type generally have one main ingredients. Recipes in categories of other types sometimes contain two or three main ingredients.
We regarded ingredient-category pairs as related if their score were over the threshold. Precision, recall, and F-score were calculated. The result are shown in Table 2. At all thresholds, the FI approach achieved the best performance. This confirmed our assumption that users usually input the main ingredient in the first position of an ingredient list and that fact can be used to identify relations between food enti-ties. Figure 1 shows precisions and recalls of each strategy at different threshold. Although the tf-idf approach achieved a similar precision to FI approach, the FI approach obtained a higher recall which contributed to the overall performance of F-score.
 Table 2: Performance of related words extraction. The proposed method FI achieved the highest F-score regardless of a threshold.

We compared the top shrimp-related words obtained by different scoring strategies. The top eight words are listed in Table 4. Frequency-based approach assigned high scores to condiments such as salt , water , and mayonnaise , since there are frequently used ingredients in all recipes. Tf-idf-based approach failed to identify words related to shrimps, but it identified important ingredients in the shrimp cat-egory. In Japan,  X   X  X  X  X  X  X   X ( Shrimp in mayonnaise ) is a popular recipe of which main ingredients are potato starch and mayonnaise. Since many shrimp in mayonnaise recipes exists in the shrimp category, the tf-idf approach selected potato starch and mayonnaise as related words to shrimp. On the other hand, first position-based approach identified many spelling variations of shrimp. This approach also suc-cessfully found  X   X  X  X  X  X  X  X  X  X  X  X  X  X   X ( seafood mix ), which is a Japanese product that mainly contains frozen shrimp and squid and used in the same way as shrimp in cooking. By exploiting this knowledge, we can suggest shrimp as a re-lated category of seafood mix , or show additional recipes containing seafood mix when users search a query shrimp .
We checked whether 305 ingredient-category pairs in va-riety relation could be found based on Japanese Wikipedia (a version as of May 2012). We focused on variety relation, for it was a dominant type of hyponymy relation.

We extracted hyponymy relations from Japanese Wikipedia using an open source tool provided by National Institute of Information and Communications Technology 2 . This tool extracts a noun pair ( a; b ) from Wikipedia and computes http://alaginrc.nict.go.jp/hyp onymy/index.html Figure 1: Precision and recall of score strategies. Precisions of strategies are shown in a solid line, and recalls are shown in a dashed line. the hyponymy relation scores which represent the degree of a being a hypernym of b with over 90% of precision.
Surprisingly, hypernyms of only 45 ingredients were ex-tracted. Many product varieties were not listed on Wikipedia. For example, 66 varieties of shrimp were listed on Wikipedia, but many of them were not used as food in Japan. Wikipedia also lacked information of proper names;  X   X  X  X  X  X  X   X , which is a formal name of  X   X  X  X  X  X  X  X  X  X  X  X   X ( tiger prawn ), is listed on Wikipedia even though the latter is dominantly used in recipe domain. In contrast, FI approach with the score threshold 0.5 correctly found 275 among 305 ingredient-category pairs. These results show that previous approaches are not sufficient to extract relationship in recipe domain.
In this paper, we introduced a new approach to finding food entity relations based on recipe data structure. We evaluate our approach using the real recipe service data con-tains 790 categories and 405,519 recipes. The result showed that we could find words in synonymy or hyponymy rela-tions with very high performance, f-score of 0.93. Our find-ings can improve recipe searches by expanding user X  X  query and retrieve more relevant recipes. For future direction, we will introduce this knowledge to real service and evaluate the search improvement by measuring the number of search results and click data. [1] Clements, M., de Vries, A. P., and Reinders, [2] Levenshtein, V. I. Binary codes capable of correcting [3] Moskin, J. Can recipe search engines make you a [4] Sumida, A., Yoshinaga, N., and Torisawa, K.
 [5] Yih, W.-t., Goodman, J., and Carvalho, V. R.

