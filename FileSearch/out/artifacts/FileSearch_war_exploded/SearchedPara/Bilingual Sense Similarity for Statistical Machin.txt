 The sense of a term can generally be inferred from its context. The underlying idea is that a term is characterized by the contexts it co-occurs with. This is also well known as the Distribu-tional Hypothesis (Harris, 1954): terms occurring in similar contexts tend to have similar mean-ings. There has been a lot of work to compute the sense similarity between terms based on their distribution in a corpus, such as (Hindle, 1990; Lund and Burgess, 1996; Landauer and Dumais, 1997; Lin, 1998; Turney, 2001; Pantel and Lin, 2002; Pado and Lapata, 2007). 
In the work just cited, a common procedure is followed. Given two terms to be compared, one first extracts various features for each term from their contexts in a corpus and forms a vector space model (VSM); then, one computes their similarity by using similarity functions. The fea-tures include words within a surface window of a fixed size (Lund and Burgess, 1996), grammati-cal dependencies (Lin, 1998; Pantel and Lin 2002; Pado and Lapata, 2007), etc . The similari-ty function which has been most widely used is cosine distance (Salton and McGill, 1983); other similarity functions include Euclidean distance, City Block distance (Bullinaria and Levy; 2007), and Dice and Jaccard coefficients (Frakes and Baeza-Yates, 1992), etc. Measures of monolin-gual sense similarity have been widely used in many applications, such as synonym recognizing (Landauer and Dumais, 1997), word clustering (Pantel and Lin 2002), word sense disambigua-tion (Yuret and Yatbaz 2009), etc. 
Use of the vector space model to compute sense similarity has also been adapted to the mul-tilingual condition, based on the assumption that two terms with similar meanings often occur in comparable contexts across languages. Fung (1998) and Rapp (1999) adopted VSM for the application of extracting translation pairs from comparable or even unrelated corpora. The vec-tors in different languages are first mapped to a common space using an initial bilingual dictio-nary, and then compared. 
However, there is no previous work that uses the VSM to compute sense similarity for terms from parallel corpora. The sense similarities, i.e. the translation probabilities in a translation mod-el, for units from parallel corpora are mainly based on the co-occurrence counts of the two units. Therefore, questions emerge: how good is the sense similarity computed via VSM for two units from parallel corpora? Is it useful for multi-lingual applications, such as statistical machine translation (SMT)? 
In this paper, we try to answer these questions, focusing on sense similarity applied to the SMT task. For this task, translation rules are heuristi-cally extracted from automatically word-aligned sentence pairs. Due to noise in the training cor-pus or wrong word alignment, the source and target sides of some rules are not semantically equivalent, as can be seen from the following real examples which are taken from the rule table built on our training data (Section 5.1): The source and target sides of the rules with (*) at the end are not semantically equivalent; it seems likely that measuring the semantic similar-ity from their context between the source and target sides of rules might be helpful to machine translation. 
In this work, we first propose new algorithms to compute the sense similarity between two units (unit here includes word, phrase, rule, etc .) in different languages by using their contexts. Second, we use the sense similarities between the source and target sides of a translation rule to improve statistical machine translation perfor-mance. 
This work attempts to measure directly the sense similarity for units from different languag-es by comparing their contexts 1 . Our contribution includes proposing new bilingual sense similarity algorithms and applying them to machine trans-lation. 
We chose a hierarchical phrase-based SMT system as our baseline; thus, the units involved in computation of sense similarities are hierar-chical rules. The hierarchical phrase-based translation method (Chiang, 2005; Chiang, 2007) is a formal syntax-based translation modeling method; its transla-tion model is a weighted synchronous context free grammar (SCFG). No explicit linguistic syn-tactic information appears in the model. An SCFG rule has the following form: where X is a non-terminal symbol shared by all the rules; each rule has at most two non-terminals.  X  (  X  ) is a source (target) string con-sisting of terminal and non-terminal symbols. ~ defines a one-to-one correspondence between non-terminals in  X  and  X  . I ni . p hr .  X   X  X  X   X   X  X  he attended the mee t ing
Rule frequencies are counted during rule ex-traction over word-aligned sentence pairs, and they are normalized to estimate features on rules. Following (Chiang, 2005; Chiang, 2007), 4 fea-tures are computed for each rule: 
Empirically, this method has yielded better performance on language pairs such as Chinese-English than the phrase-based method because it permits phrases with gaps; it generalizes the normal phrase-based models in a way that allows long-distance reordering (Chiang, 2005; Chiang, 2007). We use the Joshua implementation of the method for decoding (Li et al., 2009). To compute the sense similarity via VSM, we follow the previous work (Lin, 1998) and represent the source and target side of a rule by feature vectors. In our work, each feature corres-ponds to a context word which co-occurs with the translation rule. 3.1 Context Features In the hierarchical phrase-based translation me-thod, the translation rules are extracted by ab-stracting some words from an initial phrase pair (Chiang, 2005). Consider a rule with non-terminals on the source and target side; for a giv-en instance of the rule (a particular phrase pair in the training corpus), the context will be the words instantiating the non-terminals. In turn, the context for the sub-phrases that instantiate the non-terminals will be the words in the remainder of the phrase pair. For example in Figure 1, if we have an initial phrase pair  X   X  X  X   X   X  X  ||| he attended the meeting , and we extract four rules from this initial phrase:  X   X  X  X   X  X 1 ||| he at-tended X 1 ,  X  X  ||| the meeting ,  X  X 1  X  X  ||| he X 1 the meeting , and fore, the and meeting are context features of tar-get pattern he attended X 1 ; he and attended are the context features of the meeting ; attended is the context feature of he X 1 the meeting ; also he, the and meeting are the context feature of at-tended (in each case, there are also source-side context features). 3.2 Bag-of-Words Model For each side of a translation rule pair, its context words are all collected from the training data, and two  X  X ags-of-words X  which consist of col-lections of source and target context words co-occurring with the rule X  X  source and target sides are created. where ) 1( I i f i  X   X  are source context words which co-occur with the source side of rule  X  , and ) 1( J j e j  X   X  are target context words which co-occur with the target side of rule  X  . 
Therefore, we can represent source and target sides of the rule by vectors f v uation (2): where and target context feature; normally, these values are based on the counts of the words in the cor-responding bags. 3.3 Feature Weighting Schemes We use pointwise mutual information (Church et al., 1990) to compute the feature values. Let c ( f B c  X  or e B c  X  ) be a context word and ) co-occurring with the context word c . The pointwise mutual information ) , ( c r MI is de-fined as: where N is the total frequency counts of all rules and their context words. Since we are using this value as a weight, following (Turney, 2001), we drop log, N and ) ( r F . Thus (3) simplifies to: It can be seen as an estimate of ) | ( c r P , the em-pirical probability of observing r given c . 
A problem with ) | ( c r P is that it is biased towards infrequent words/features. We therefore smooth ) , ( c r w with add-k smoothing: where k is a tunable global smoothing constant, and R is the number of rules. There are many possibilities for calculating simi-larities between bags-of-words in different lan-guages. We consider IBM model 1 probabilities and cosine distance similarity functions. 4.1 IBM Model 1 Probabilities For the IBM model 1 similarity function, we take the geometric mean of symmetrized conditional IBM model 1 (Brown et al., 1993) bag probabili-ties, as in Equation (6). sumes that all source words are conditionally independent, so that: 
To compute , we use a  X  X oisy-OR X  combina-tion which has shown better performance than standard IBM model 1 probability, as described in (Zens and Ney, 2004): in the translation of e B , and is the IBM model 1 probability. 4.2 Vector Space Mapping A common way to calculate semantic similarity is by vector space cosine distance; we will also use this similarity function in our algorithm. However, the two vectors in Equation (2) cannot be directly compared because the axes of their spaces represent different words in different lan-guages, and also their dimensions I and J are not assured to be the same. Therefore, we need to first map a vector into the space of the other vec-tor, so that the similarity can be calculated. Fung (1998) and Rapp (1999) map the vector one-dimension-to-one-dimension (a context word is a dimension in each vector space) from one lan-guage to another language via an initial bilingual dictionary. We follow (Zhao et al., 2004) to do vector space mapping. 
Our goal is  X  given a source pattern  X  to dis-tinguish between the senses of its associated tar-get patterns. Therefore, we map all vectors in target language into the vector space in the source language. What we want is a representa-tion vector of the i th source feature, be a linear combination over target features. That is to say, given a source feature weight for f i , each target feature weight is linked to it with some probability. So that we can calculate a transformed vector from the target vectors by calculating weights i f ing a translation lexicon: where ) | ( j i e f p is a lexical probability (we use IBM model 1 probability). Now the source vec-tor and the mapped vector a v mensions as shown in (11): 4.3 Na X ve Cosine Distance Similarity The standard cosine distance is defined as the inner product of the two vectors f v malized by their norms. Based on Equation (10) and (11), it is easy to derive the similarity as fol-lows: where I and J are the number of the words in source and target bag-of-words; transformed weight mapped from all target fea-tures to the source dimension at word f i . 4.4 Improved Similarity Function To incorporate more information than the origi-nal similarity functions  X  IBM model 1 proba-bilities in Equation (6) and na X ve cosine distance similarity function in Equation (12)  X  we refine the similarity function and propose a new algo-rithm. 
As shown in Figure 2, suppose that we have a extracted according to the definition in section 3 from the full training data for  X  and for  X  , re-spectively. cooc f C and cooc e C are the contexts for  X  and  X  when  X  and  X  co-occur. Obviously, they satisfy the constraints: full f cooc f C C  X  and functions are to compare the two context vectors built on full training data directly, as shown in Equation (13). 
Then, we propose a new similarity function as follows: where the parameters i  X  ( i =1,2,3) can be tuned via minimal error rate training (MERT) (Och, 2003). 
A unit X  X  sense is defined by all its contexts in the whole training data; it may have a lot of dif-ferent senses in the whole training data. Howev-er, when it is linked with another unit in the other language, its sense pool is constrained and is just is the metric which evaluates the similarity be-tween the whole sense pool of  X  and the sense pool when  X  co-occurs with  X  ; tric for  X  . They range from 0 to 1. These two metrics both evaluate the similarity for two vec-tors in the same language, so using cosine dis-tance to compute the similarity is straightfor-ward. And we can set a relatively large size for the vector, since it is not necessary to do vector mapping as the vectors are in the same language. the context vectors when  X  and  X  co-occur. We model 1 probability and cosine distance similari-ty functions as Equation (6) and (12). Therefore, on top of the degree of bilingual semantic simi-larity between a source and a target translation unit, we have also incorporated the monolingual semantic similarity between all occurrences of a source or target unit, and that unit X  X  occurrence as part of the given rule, into the sense similarity measure. We evaluate the algorithm of bilingual sense si-milarity via machine translation. The sense simi-larity scores are used as feature functions in the translation model. 5.1 Data We evaluated with different language pairs: Chi-nese-to-English, and German-to-English. For Chinese-to-English tasks, we carried out the ex-periments in two data conditions. The first one is the large data condition, based on training data for the NIST 2 2009 evaluation Chinese-to-English track. In particular, all the allowed bilin-gual corpora except the UN corpus and Hong Kong Hansard corpus have been used for esti-mating the translation model. The second one is the small data condition where only the FBIS 3 corpus is used to train the translation model. We trained two language models: the first one is a 4-gram LM which is estimated on the target side of the texts used in the large data condition. The second LM is a 5-gram LM trained on the so-called English Gigaword corpus . Both language models are used for both tasks. We carried out experiments for translating Chinese to English. We use the same develop-ment and test sets for the two data conditions. We first created a development set which used mainly data from the NIST 2005 test set, and also some balanced-genre web-text from the NIST training material. Evaluation was per-formed on the NIST 2006 and 2008 test sets. Ta-ble 1 gives figures for training, development and test corpora; |S| is the number of the sentences, and |W| is the number of running words. Four references are provided for all dev and test sets. Parallel 
For German-to-English tasks, we used WMT 2006 4 data sets. The parallel training data con-tains 21 million target words; both the dev set and test set contain 2000 sentences; one refer-ence is provided for each source input sentence. Only the target-language half of the parallel training data are used to train the language model in this task. 5.2 Results For the baseline, we train the translation model by following (Chiang, 2005; Chiang, 2007) and our decoder is Joshua 5 , an open-source hierar-chical phrase-based machine translation system written in Java. Our evaluation metric is IBM BLEU (Papineni et al., 2002), which performs case-insensitive matching of n -grams up to n = 4. Following (Koehn, 2004), we use the bootstrap-resampling test to do significance testing. 
By observing the results on dev set in the addi-tional experiments, we first set the smoothing constant k in Equation (5) to 0.5. 
Then, we need to set the sizes of the vectors to balance the computing time and translation accu-racy, i.e. , we keep only the top N context words with the highest feature value for each side of a rule 6 . In the following, we use  X  X lg1 X  to represent the original similarity functions which compare the two context vectors built on full training data, as in Equation (13); while we use  X  X lg2 X  to represent the improved similarity as in Equation (14).  X  X BM X  represents IBM model 1 probabilities, and  X  X OS X  represents cosine dis-tance similarity function. 
After carrying out a series of additional expe-riments on the small data condition and observ-ing the results on the dev set, we set the size of the vector to 500 for Alg1; while for Alg2, we set the sizes of full
The sizes of the vectors in Alg2 are set in the following process: first, we set N 2 to 500 and let N 1 range from 500 to 3,000, we observed that the dev set got best performance when N 1 was 1000; then we set N 1 to 1000 and let N 1 range from 50 to 1000, we got best performance when N 1 =100. We use this setting as the default setting in all remaining experiments. 
Table 2 compares the performance of Alg1 and Alg2 on the Chinese-to-English small data condition. Both Alg1 and Alg2 improved the performance over the baseline, and Alg2 ob-tained slight and consistent improvements over Alg1. The improved similarity function Alg2 makes it possible to incorporate monolingual semantic similarity on top of the bilingual se-mantic similarity, thus it may improve the accu-racy of the similarity estimate. Alg2 significantly improved the performance over the baseline. The Alg2 cosine similarity function got 0.7 BLEU-score ( p &lt;0.01) improvement over the baseline for NIST 2006 test set, and a 0.5 BLEU-score ( p &lt;0.05) for NIST 2008 test set. Table 3 reports the performance of Alg2 on Chinese-to-English NIST large data condition and German-to-English WMT task. We can see that IBM model 1 and cosine distance similarity function both obtained significant improvement on all test sets of the two tasks. The two similari-ty functions obtained comparable results. 6.1 Effect of Single Features In Alg2, the similarity score consists of three parts as in Equation (14): ) , ( cooc tance similarity function ) , ( cooc Therefore, our first study is to determine which one of the above four features has the most im-pact on the result. Table 4 shows the results ob-tained by using each of the 4 features. First, we better improvement than ) , ( cooc diverse than the latter when the number of con-text features is small (there are many rules that have only a few contexts.) For an extreme exam-ple, suppose that there is only one context word in each vector of source and target context fea-tures, and the translation probability of the two context words is not 0. In this case, bility of the context word pair, while also give some improvements even when used independently. For a possible explanation, con-sider the following example. The Chinese word  X   X   X  can translate to  X  X ed X ,  X  X ommunist X , or  X  X ong X  (the transliteration of  X  , when it is used in a person X  X  name). Since these translations are likely to be associated with very different source score. Another Chinese word  X  X  X  may translate into synonymous words, such as  X  X rook X ,  X  X tream X , and  X  X ivulet X , each of which will have more  X  X angerous X  word than  X  X  X  , since choos-ing the wrong translation for it would be a bad mistake. But if the two words have similar trans-lation distributions, the system cannot distinguish between them. The monolingual similarity scores give it the ability to avoid  X  X angerous X  words, and choose alternatives (such as larger phrase translations) when available. 
Third, the similarity function of Alg2 consis-tently achieved further improvement by incorpo-rating the monolingual similarities computed for the source and target side. This confirms the ef-fectiveness of our algorithm. Table 4: Results (BLEU%) of Chinese-to-English large data (CE_LD) and small data (CE_SD) NIST task by applying one feature. 6.2 Effect of Combining the Two Similari-We then combine the two similarity scores by using both of them as features to see if we could obtain further improvement. In practice, we use the four features in Table 4 together. 
Table 5 reports the results on the small data condition. We observed further improvement on dev set, but failed to get the same improvements on test sets or even lost performance. Since the IBM+COS configuration has one extra feature, it is possible that it overfits the dev set. Alg2 IBM+COS 20.8 27.9 21.5 Table 5: Results (BLEU%) for combination of two similarity scores. Further improvement was only ob-tained on dev set but not on test sets. 6.3 Comparison with Simple Contextual Now, we try to answer the question: can the si-milarity features computed by the function in Equation (14) be replaced with some other sim-ple features? We did additional experiments on small data Chinese-to-English task to test the following features: (15) and (16) represent the sum of the counts of the context words in C full while (17) represents the proportion of words in the context of  X  that appeared in the context of the rule (  X   X  , ); similarly, (18) is related to the properties of the words in the context of  X  . where ) , ( counts of rule  X  or  X  co-occurring with the context word Table 6: Results (BLEU%) of using simple features based on context on small data NIST task. Some im-provements are obtained on dev set, but there was n o significant effect on the test sets. 
Table 6 shows results obtained by adding the above features to the system for the small data condition. Although all these features have ob-tained some improvements on dev set, there was no significant effect on the test sets. This means simple features based on context, such as the sum of the counts of the context features, are not as helpful as the sense similarity computed by Equation (14). 6.4 Null Context Feature There are two cases where no context word can be extracted according to the definition of con-text in Section 3.1. The first case is when a rule pair is always a full sentence-pair in the training data. The second case is when for some rule pairs, either their source or target contexts are out of the span limit of the initial phrase, so tha t we cannot extract contexts for those rule-pairs. For Chinese-to-English NIST task, there are about 1% of the rules that do not have contexts; for German-to-English task, this number is about 0.4%. We assign a uniform number as their bi-lingual sense similarity score, and this number is tuned through MERT. We call it the null context feature. It is included in all the results reported from Table 2 to Table 6. In Table 7, we show the weight of the null context feature tuned by run-ning MERT in the experiments reported in Sec-tion 5.2. We can learn that penalties always dis-courage using those rules which have no context to be extracted. Table 7: Weight learned for employing the null con-text feature. CE_SD, CE_LD and DE are Chinese-to-English small data task, large data task and German-to-English task respectively. 6.5 Discussion Our aim in this paper is to characterize the se-mantic similarity of bilingual hierarchical rules. We can make several observations concerning our features: 1) Rules that are largely syntactic in nature, such as  X  X ||| the X of , will have very diffuse  X  X eanings X  and therefore lower similarity scores. It could be that the gains we obtained come simply from biasing the system against such rules. However, the results in table 6 show that this is unlikely to be the case: features that just count context words help very little. 2) In addition to bilingual similarity, Alg2 re-lies on the degree of monolingual similarity be-tween the sense of a source or target unit within a rule, and the sense of the unit in general. This ha s a bias in favor of less ambiguous rules, i.e. rules involving only units with closely related mean-ings. Although this bias is helpful on its own, possibly due to the mechanism we outline in sec-tion 6.1, it appears to have a synergistic effect when used along with the bilingual similarity feature. 3) Finally, we note that many of the features we use for capturing similarity, such as the con-text  X  the, of  X  for instantiations of X in the unit the X of , are arguably more syntactic than seman-tic. Thus, like other  X  X emantic X  approaches, ours can be seen as blending syntactic and semantic information. There has been extensive work on incorporating semantics into SMT. Key papers by Carpuat and Wu (2007) and Chan et al (2007) showed that word-sense disambiguation (WSD) techniques relying on source-language context can be effec-tive in selecting translations in phrase-based and hierarchical SMT. More recent work has aimed at incorporating richer disambiguating features into the SMT log-linear model (Gimpel and Smith, 2008; Chiang et al, 2009); predicting co-herent sets of target words rather than individual phrase translations (Bangalore et al, 2009; Maus-er et al, 2009); and selecting applicable rules in hierarchical (He et al, 2008) and syntactic (Liu et al, 2008) translation, relying on source as well as target context. Work by Wu and Fung (2009) breaks new ground in attempting to match se-mantic roles derived from a semantic parser across source and target languages. 
Our work is different from all the above ap-proaches in that we attempt to discriminate among hierarchical rules based on: 1) the degree of bilingual semantic similarity between source and target translation units; and 2) the monolin-gual semantic similarity between occurrences of source or target units as part of the given rule, and in general. In another words, WSD explicitly tries to choose a translation given the current source context, while our work rates rule pairs independent of the current context. In this paper, we have proposed an approach that uses the vector space model to compute the sense similarity for terms from parallel corpora and applied it to statistical machine translation. We saw that the bilingual sense similarity computed by our algorithm led to significant improve-ments. Therefore, we can answer the questions proposed in Section 1. We have shown that the sense similarity computed between units from parallel corpora by means of our algorithm is helpful for at least one multilingual application: statistical machine translation. 
Finally, although we described and evaluated bilingual sense similarity algorithms applied to a hierarchical phrase-based system, this method is also suitable for syntax-based MT systems and phrase-based MT systems. The only difference is the definition of the context. For a syntax-based system, the context of a rule could be defined similarly to the way it was defined in the work described above. For a phrase-based system, the context of a phrase could be defined as its sur-rounding words in a given size window. In our future work, we may try this algorithm on syn-tax-based MT systems and phrase-based MT sys-tems with different context features. It would also be possible to use this technique during training of an SMT system  X  for instance, to im-prove the bilingual word alignment or reduce the training data noise. S. Bangalore, S. Kanthak, and P. Haffner. 2009. Sta -tistical Machine Translation through Global Lexi-cal Selection and Sentence Reconstruction. In: Goutte et al (ed.), Learning Machine Translation . MIT Press. R. L. Mercer. 1993. The Mathematics of Statistical 
Machine Translation: Parameter Estimation. Com-putational Linguistics , 19(2) 263-312. J. Bullinaria and J. Levy. 2007. Extracting semanti c representations from word co-occurrence statistics:
A computational study. Behavior Research Me-thods , 39 (3), 510 X 526. M. Carpuat and D. Wu. 2007. Improving Statistical 
Machine Translation using Word Sense Disambig-uation. In: Proceedings of EMNLP , Prague. M. Carpuat. 2009. One Translation per Discourse. In : 
Proceedings of NAACL HLT Workshop on Se-mantic Evaluations , Boulder, CO. Y. Chan, H. Ng and D. Chiang. 2007. Word Sense Disambiguation Improves Statistical Machine Translation. In: Proceedings of ACL , Prague. D. Chiang. 2005. A hierarchical phrase-based model for statistical machine translation. In: Proceedings of ACL , pp. 263 X 270. D. Chiang. 2007. Hierarchical phrase-based transla-tion. Computational Linguistics. 33(2):201 X 228. D. Chiang, W. Wang and K. Knight. 2009. 11,001 new features for statistical machine translation. I n: Proc. NAACL HLT , pp. 218 X 226. K. W. Church and P. Hanks. 1990. Word association norms, mutual information, and lexicography. Computational Linguistics , 16(1):22 X 29. W. B. Frakes and R. Baeza-Yates, editors. 1992. In-formation Retrieval, Data Structure and Algo-rithms . Prentice Hall. P. Fung. 1998. A statistical view on bilingual lexi con extraction: From parallel corpora to non-parallel corpora. In: Proceedings of AMTA , pp. 1 X 17. Oct. Langhorne, PA, USA. J. Gimenez and L. Marquez. 2009. Discriminative Phrase Selection for SMT. In: Goutte et al (ed.), Learning Machine Translation . MIT Press. K. Gimpel and N. A. Smith. 2008. Rich Source-Side Context for Statistical Machine Translation. In: Proceedings of WMT , Columbus, OH. Z. Harris. 1954. Distributional structure. Word , 10(23): 146-162. Z. He, Q. Liu, and S. Lin. 2008. Improving Statisti cal 
Machine Translation using Lexicalized Rule Selec-tion. In: Proceedings of COLING , Manchester, UK. D. Hindle. 1990. Noun classification from predicate -argument structures. In: Proceedings of ACL . pp. 268-275. Pittsburgh, PA. P. Koehn, F. Och, D. Marcu. 2003. Statistical Phras e-Based Translation. In: Proceedings of HLT-NAACL . pp. 127-133, Edmonton, Canada P. Koehn. 2004. Statistical significance tests for ma-chine translation evaluation. In: Proceedings of EMNLP , pp. 388 X 395. July, Barcelona, Spain. T. Landauer and S. T. Dumais. 1997. A solution to 
Plato X  X  problem: The Latent Semantic Analysis theory of the acquisition, induction, and represent a-tion of knowledge. Psychological Review . 104:211-240. Z. Li, C. Callison-Burch, C. Dyer, J. Ganitkevitch, S. 
Khudanpur, L. Schwartz, W. Thornton, J. Weese and O. Zaidan, 2009. Joshua: An Open Source Toolkit for Parsing-based Machine Translation. In: Proceedings of the WMT . March. Athens, Greece. D. Lin. 1998. Automatic retrieval and clustering of similar words. In: Proceedings of COLING/ACL-98 . pp. 768-774. Montreal, Canada. Q. Liu, Z. He, Y. Liu and S. Lin. 2008. Maximum 
Entropy based Rule Selection Model for Syntax-based Statistical Machine Translation. In: Proceed-ings of EMNLP , Honolulu, Hawaii. K. Lund, and C. Burgess. 1996. Producing high-dimensional semantic spaces from lexical co-occurrence. Behavior Research Methods, Instru-ments, and Computers , 28 (2), 203 X 208. A. Mauser, S. Hasan and H. Ney. 2009. Extending 
Statistical Machine Translation with Discrimina-tive and Trigger-Based Lexicon Models. In: Pro-ceedings of EMNLP , Singapore. F. Och. 2003. Minimum error rate training in statis tic-al machine translation. In: Proceedings of ACL . Sapporo, Japan. S. Pado and M. Lapata. 2007. Dependency-based con-struction of semantic space models. Computational Linguistics , 33 (2), 161 X 199. P. Pantel and D. Lin. 2002. Discovering word senses from text. In: Proceedings of ACM SIGKDD Con-ference on Knowledge Discovery and Data Mining , pp. 613 X 619. Edmonton, Canada. K. Papineni, S. Roukos, T. Ward, and W. Zhu. 2002. 
Bleu: a method for automatic evaluation of ma-chine translation. In Proceedings of ACL , pp. 311 X  318. July. Philadelphia, PA, USA. R. Rapp. 1999. Automatic Identification of Word Translations from Unrelated English and German Corpora. In: Proceedings of ACL , pp. 519 X 526. June. Maryland. G. Salton and M. J. McGill. 1983. Introduction to Modern Information Retrieval . McGraw-Hill, New York. P. Turney. 2001. Mining the Web for synonyms: 
PMI-IR versus LSA on TOEFL. In: Proceedings of the Twelfth European Conference on Machine Learning , pp. 491 X 502, Berlin, Germany. D. Wu and P. Fung. 2009. Semantic Roles for SMT: A Hybrid Two-Pass Model. In: Proceedings of NAACL/HLT , Boulder, CO. D. Yuret and M. A. Yatbaz. 2009. The Noisy Channel 
Model for Unsupervised Word Sense Disambigua-tion. In: Computational Linguistics . Vol. 1(1) 1-18. R. Zens and H. Ney. 2004. Improvements in phrase-based statistical machine translation. In: Proceed-ings of NAACL-HLT . Boston, MA. B. Zhao, S. Vogel, M. Eck, and A. Waibel. 2004. 
Phrase pair rescoring with term weighting for sta-tistical machine translation. In Proceedings of 
EMNLP , pp. 206 X 213. July. Barcelona, Spain. 
