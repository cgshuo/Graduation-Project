 Data mining is commonly used for inducing association rules from transaction data [1]. In real applications, different items ma y have different criteria to judge their im-portance and quantitative data may exist. We thus divide the fuzzy data mining approaches into two kinds, namely Single-minimum-Support Fuzzy-Mining ( SSFM ) [2, 7, 9] and Multiple-minimum-Support Fuzzy-Mining ( MSFM ) problems [10]. However, the membership functions were usually assumed to be known in advance in the above problems. 
For SSFM problems, Kaya et al. proposed a GA-based approach to derive a prede-fined number of membership functions for getting a maximum profit within an inter-val of user specified minimum support values [8]. Hong et al. also proposed a genetic-fuzzy data-mining algorithm for extracting both association rules and mem-bership functions from quantitative transactions [6]. For MSFM problem, Chen et al. proposed a genetic-fuzzy approach for extracting minimum support values, member-ship functions and fuzzy association rules from quantitative transactions [3]. It evalu-ated each chromosome by the criterion of requirement satisfaction which was composed of the number of 1-itemsets and the suitability of membership functions. Although the evaluation only by 1-itemsets was much faster than that by all itemsets be scanned once for each chromosome. 
In this paper, the clustering technique is thus used to reduce the execution time in solving the MSFM problem. An enhanced approach, called the cluster-based genetic-fuzzy mining algorithm for items with multiple minimum supports ( CGFMMS ), is proposed to speed up the evaluation process and keep nearly the same quality of solu-tions as that in [3]. The well-known clustering approach, k -means, is used to achieve this purpose [11]. Experimental results also show the effectiveness of the proposed approach. The proposed cluster-based genetic-fuzzy mining framework for items with multiple minimum supports (CGFMMS) is shown in Fig. 1. 
It can be divided into two phases, respectively for mining multiple minimum sup-ports and membership functions and for mining fuzzy association rules. In the first phase, the proposed framework maintains a population of sets of minimum support values and membership functions, and uses genetic algorithm to automatically derive the resulting one. Data preprocessing is first done to get initialization information. Initial minimum support values and membersh ip functions are then generated accord-similar chromosomes into groups. All the chromosomes then use the requirement satisfaction derived from the representative chromosomes in the clusters and their own suitability of membership functions to calculate their fitness values. Since the number for scanning a database decreases, the evaluation cost can thus be reduced. The evaluation results are utilized to choose appropriate chromosomes for mating. The offspring sets then undergo recursive evolution until a good set has been ob-tained. Finally, the derived minimum support values and membership functions are used to mine fuzzy association rules in the second phase. The approach proposed by Lee et al. [10] is used here to achieve this purpose. In order to develop a good set of minimum support values and membership functions from an initial population, the genetic algorithm selects parent chromosomes for mat-minimum support values and membership functions. The fitness function of a chro-mosome C q is defined as follows: where RS ( C q ) is the requirement satisfaction defined as the closeness of the number of derived large 1-itemsets for chromosome C q to its required number of large 1-itemsets ( RNL ) . The RNL is a criterion used to reflect the user preference on the derived knowl-suitability ( C q ) is used to measure the shape suitability of the membership functions. It consists of two factors, namely coverage factor and coverage factor, which is used to reduce the two bad types of membership functions, too redundant and too separate. However, since the transactions must be scanned once for each chromosome to get its requirement satisfaction, it is thus time-consuming. In the past, we proposed a method based on the clustering technique to reduce the evaluation time of large 1-itemsets [4] for SSFM problem. In this paper, we thus modify the previous approach to solve the MSFM problem. Since in the MSFM problem, each item has its own minimum sup-port, using only the two attributes (coverage factor and overlap factor) as used in [4] for clustering is not enough. The average minimum support values of items (called the support factor) will be used as an additio nal attribute for clustering chromosomes. That is: where m is the number of items and  X  j is the minimum support value of item I j . The cluster, the chromosome which is the nearest to a cluster center is thus chosen as the representative and used to derive its requir ement satisfaction. Each chromosome then estimates its requirement satisfaction by the requirement satisfaction of its representa-tive chromosome. The estimated requirement satisfaction of chromosome C q which belongs to the cluster cluster g is defined as: the requirement satisfaction of RepChro g . Finally, each chromosome uses its esti-mated requirement satisfaction and its own suitability of membership functions to calculate its fitness value. The proposed cluster-based genetic-fuzzy mining algorithm for items with multiple minimum supports (CGFMMS): Step 1: Generate a population of P individuals. Step 2: Calculate the coverage , overlap and support factors of each chromosome. Step 3: Divide the chromosomes into k clusters by the k -means clustering approach Step 4: Calculate the requirement satisfaction of each representative chromosome by 
Substep 4.2: For each item region R jk , , 1  X  j  X  m , calculate its scalar cardinality on 
Substep 4.3: For each R jk , 1  X  j  X  m and 1  X  k  X  l , check whether its count jk is larger Substep 4.4: Set the requirement satisfaction of each representative chromosome. Step 5: Calculate the requirement satisfaction of the representative chromosomes. Step 6: Calculate the fitness value of each chromosome by the following formula: Step 7: Execute the crossover operation on the population. Step 8: Execute the mutation operation on the population. Step 9: Calculate the fitness values of chromosomes by using STEPs 2 to 6. Step 10: Use the selection operation to choose individuals for the next generation. Step 12: Find the chromosome with the highest fitness value. Get the set of minimum Step 13: Mine fuzzy association rules using the set of minimum support values and In this section, experiments made to show the performance of the proposed approach are described. 64 items and 10000 transactions were used in the experiments. The population size was set at 50, the crossover rate was set at 0.8, and the mutation rate was set at 0.001. The parameter d of the MMA crossover operator was set at 0.35 according to Herrera et al.  X  X  paper [5]. The percentage of the required number of large 1-itemsets was set at 0.8. Experiments were made to compare the proposed method ( CGFMMS ) with our previous one ( GFMMS ) [3] for showing the effect of using clus-ters in evaluation. The average fitness values of the chromosomes along with different numbers of generations for different numbers of clusters are shown in Fig. 2. 
From Fig. 2, it can be observed that the average fitness values by the proposed ap-proach were a little less than those by the previous one. They were close when the number of clusters increased. The results were reasonable since the proposed approach just estimated the requirement satisfaction of chromosomes. The compari-sons for the execution time of the two approaches with different numbers of clusters were also made. The results showed that the proposed approach ran much faster than the previous one. It can thus be conclude d that the proposed approach can get a good trade-off between accuracy and execution time. In this paper, we have proposed a cluster-based genetic-fuzzy mining algorithm for extracting multiple minimum support values, membership functions and fuzzy associa-tion rules from quantitative transactions. The evaluation cost can be significantly re-duced due to the time-saving in finding requirement satisfaction. The experimental results show that using the clustering technique to speed up the evaluation process can nificantly reduce execution time. In the future, we will continuously enhance the cluster-based genetic-fuzzy mining framework for more complex problems. 
