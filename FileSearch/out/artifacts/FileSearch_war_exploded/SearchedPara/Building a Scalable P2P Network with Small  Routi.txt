 nisms, which cause tremendous communicati on overhead for large systems [3,4,5,6]. for storing a certain range of identifiers together with the corresponding data items or their locations (addresses). DHT provides a basic function, ) id ( lookup , which maps an arbitrary identifier to the responsible node. To implement such a function, an overlay highly-dynamic environment where nodes frequently join and depart, the maintenance overhead for the overlay P2P network is a major design concern [7]. A recent survey on different types of P2P networks can be found in [17]. 
When constructing a P2P network, there exists a fundamental space-time tradeoff between the number of neighbors (i.e., the size of the routing table) and the network diameter (i.e., the length of the routing path) [8]. Many P2P networks have an adjust-able parameter ( k ) that can be tuned for different space-time tradeoffs. For example, if k = N log , both time and space complexities of CAN become ) N (log O , where N is the number of nodes in the system. For all P2P networks, however, the maintenance changes continuously as nodes join/depart. 
PRR [9] and Pastry [10] require ) ( O hops with high probability . In the following, we shall omit  X  X ith high prob-neighbors and route in ) kN ( O k
The first asymptotically-optimal system is Viceroy [14], which requires seven achieve asymptotical optimality with ) k ( O neighbors and ) where [16] assumes k = )) n log( poly ( O . 
In the family of P2P networks, one important member is much less investigated, Such a network is appealing in practice becau se of its small routing delay, which does not grow with respect to the size of the network. Each routing hop in a P2P network requires a message to travel end-to-end from one node to another, likely crossing the networks such as PRR, Pastry, and randomized Chord, where the neighbors of a node achieve ) d ( O routing hops with ) dN ( O d are now a function of N because the base k is related to N . As N changes, the base causing considerable maintenance overhead. 
One solution for reducing maintenance overhead is to use random neighbors, which require little maintenance. A node can take any other node s as its neighbors based on certain probability distribution. Among the random P2P networks [14,,16], [16] have constant routing distance by adjusting k . 
This paper proposes a new random P2P network that combines arbitrary neighbor selection, typically used only in unstructured P2P networks, with a DHT (distributed hash table) ring. It is the first of its kind to resolve requests in no more than d hops probability c that a request is not resolved in d hops. When it does happen, a slower routing path will be taken, which guarantees to find the responsible node. The number of neighbors per node is ) dN ) c ln (( O d When nodes join or depart, the random neighbors of all other nodes remain un-number of random neighbors only when N doubles (or halves). Note that the location of any particular neighbor is independent of N . 
In Appendix A we prove that, for routing paths to be bounded by d hops, the lower bound on the number of neighbors is ) N ( d
The rest of the paper is organized as follows. Section 2 defines the model, notations and performance metrics. Section 3 proposes a random peer-to-peer network. Sec-space complexity. Section 6 draws the conclusion. assigned an identifier by hashing its address or domain name. When the node identifi-about a data item is stored at x if the identifier of the item belongs to ) x ( seg . request( id ), which is routed through an overlay network to the node that is responsi-location to the user. The performance/overh ead tradeoff achieved by the routing algo-rithm is fundamentally determined by the structure of the overlay topology. reference. We evaluate the performance of a peer-to-peer system based on the follow-ing metrics. the overlay topology before reaching ) id ( node information pricing, etc., are beyond the scope of this paper. time and space complexities are ) d ( O and ) N ( O d abstract description of the system. We then present some analytical results and discuss the protocols/algorithms that realize the system. 
For all above complex ities in the forms of ) N ( O d system. 3.1 Overlay Topology Each node knows a set of neighbors that it will directly communicate with. There are two types of neighbors, as shown in Figure 1, where the circle represents the ID space. random neighbors: A node x takes a number of randomly selected nodes as its ran-dom neighbors, denoted as x R . super segment of x . neighbors. A node is required to store the following information about its neighbors.  X   X 
For each random neighbor x R z  X  , it uses two integers to store the neighbor X  X  super 
The above information is learned from the neighbors. The space complexity for sequential neighbor or itself) is responsible for the identifier. On the other hand, if the identifier belongs to the super segment of a random neighbor z , x should forward the request to z . 3.2 Routing Algorithm When a node x receives a request( id ), it processes the request by the following algo-rithm. Suppose the request carries the address of the node that originates the request. 
A few routing examples are given in Figure 2. first plot in the figure and implemented by Lines 1-2 of the algorithm. figure and implemented by Lines 3-4 of the algorithm. the figure and implemented by Lines 5-6 of the algorithm. Three-hop case : It takes three or more hops otherwise, as shown by the last plot in the figure and implemented by Lines 7-8 of the algorithm. 
For the first three cases, x knows for sure which is the next node to forward the re-TTL field in the request message such that the request can only travel d or less hops and allows up to 2  X  d levels of broadcast (to random neighbors). As illustrated in the figure, the last two hops do not require br oadcast as the node receiving the request has enough information to determine whether two more hops can reach ) id ( node and if so, which is the next node to forward the request. 
Below we give a basic analyti cal result. Suppose each node has s sequential responsible for equal-sized segments of the ID space. We will show that the analytical results with this assumption match very well with the simulation results without this less hops. The following upper bound of 2  X  d , P d is proved in Appendix B. 
We will demonstrate shortly that, by appropriately choosing the values of s and r , 3.3 Determining Appropriate Values for s and r
Define the following quantity. 
Rewrite (2) as below. when 3 = d , it becomes RP2P(3, c ). Suppose each request carries a TTL field whose initial value is d . We modify the routing algorithm such that the longest routing path has no more than d hops. Theorem 1. The probability for RP2P( c , d ) to resolve a request in d or less hops is larger than c  X  1 , where 2  X  d and ) ... ( c 1 0  X  . on networks of 1000,10000, and 100000 n odes, respectively. The simulation was repeated for different values of c . The results are shown in Table 2. The column of c because our analysis made a conservative si mplification when using (5) to derive the upper bound of d P in Appendix B. The maximum number of hops that a request will travel in RP2P( c , d ) is d , and the formly at random. The network is the first of its kind to resolve requests within a con-management when nodes join/depart. The ti me and space complexities of the pro-analysis to derive the properties of the systems. Our simulation results match with the analytical results. Theorem 1: The average nodal degree must be ) N ( d with diameter d . reach all nodes by a breadth-first search tree of d levels in depth. Let x be the aver-age nodal degree. The number of nodes in the tree is ) x ( O N d less hops if and only if the following two conditions are satisfied. By induction we have, for 2  X  d , 
We simplify the formula as follows. 
