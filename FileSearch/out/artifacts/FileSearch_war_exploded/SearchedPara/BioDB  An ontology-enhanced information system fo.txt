 1. Introduction de biological information system designed based on a deep ontological underpinning. what role a biological entity, such as the human microRNA (miRNA), plays in the disease process. He explores and of molecular interactions) are important to understand the molecular mechanism of the microRNAs to BIODB and perform the next round of query, analysis and biological experiments. Notice that by the end of the come from different sources, have different data types and each type of data carries some speci the data contains both biological semantics that represents the domain signi correlator. The biological semantics may be speci fi ed through ontologies in the OBO (Open Biomedical Ontologies queried, navigated and interlinked to bring out the scienti enhanced rather than ontology-based information systems.

Through the design of the BIODB system, we have developed a number of generic design principles for ontology-enhanced heterogeneous information models (relational, graphs, trees), extended with and connected through their ontological systems like D2R ( http://www4.wiwiss.fu-berlin.de/bizer/d2rmap/D2Rmap.htm ) that explicitly converts all data into a common data model (in this case RDF). earlier. elements to ontologies and (b) accommodating multiple information models within the same catalog structure. the fi rst ontology-enhanced information system that has these capabilities.
In the rest of the paper, we describe four components of the BIODB information system. Section 2 presents the overall instead of a full query language. Section 8 presents a brie current state of the art in four areas of information systems research. In Section 9 , we brie systems biologist like Joe, and then conclude the paper with an outlook of future work. 2. An architectural overview of BIODB elements of the system, and present more details of the ontology-related aspects in the following sections. 2.1. Data readers
BIODB uses a number of data readers for common forms of data, like data exported from relational databases, BioPAX graph-structured pathways, and so forth. 2.2. Data ingestion and transformation annotations that a user may supply during or after ingestion. 2.3. Type-partitioned data store (e.g., the relational interval tree) are implemented over the same relational system, while some (e.g., suf separately. 2.4. Query processor array keyword query processing using ontologies is one of the primary mode of use for the system. 2.5. Ontology transformation and ingestion search and manipulate the data. 2.6. Semantic and association catalogs ontologies. They are detailed in Sections 4 and 5 , respectively. 2.7. Index structures
This process is detailed in Section 6 . 2.8. Upper-level query processing units biologist. This means that the general purpose retrieval task (e.g., the other hand, when the data sets are actually detected, the operations to be performed are with graph-2 and eliminate all edges of type mphX; call this graph G ;then 3. The BIODB ontology framework
Just as the BIODB framework allows different data sets to be dropped into the data store, the system allows quali back end, OntoQuest builds on a relational schema motivated by the IODT system from IBM [6] , that shreds OWL and OBO queries make use of the data access functions of OntoQuest. 3.1. A graph model for ontologies
OntoQuest models the class-level ontologies as a pair of rooted graphs property tree is shown in Fig. 2 .
 in P must occur in C . All literal nodes in P must be type-matched with the corresponding relationships in C . symmetric incident on literal nodes valued true or false respectively.
 subdomains. For example, shape is a quality, and elongated is a "subdomain quality" of shape, and signi quality that specializes elongated. Similar to P , some class nodes are de intersection class with members C 1 , C 2 .If C 1 is a class,  X C with quanti fi ers. By default, an edge is represented as triples like (
The fi rst triple uses the distinguished edge label subclass-of, and represents the sentence miRNA an application-de fi ned edge-label that is explicitly decorated with the existential quanti for universal quanti fi cation ( gene :forall:transcribes-to mRNA :produces mature-miRNA ).
 may choose to follow. For instance, if there are multiple axes along which a concept can be classi the concept nodes to be "colored". For example, according to genetic classi create subclasses of miRNA as genetic::intronic_miRNA, stru ctural::symmetric_miRNA rules advocated by the proposed OWL 2.0 standard. This enables non-recursive
B ) ontology mappings. 3.2. OntoQuest operators more involved aspects of the more complex operators. ontology and then would like to fi nd instances of classes they browse over. selectEdges(p) : The canonical use of this operation to fi fi nd, for instance, all the universally quanti fi ed relationships.
 project(pat) : This is one of the most used functions. A question like " graph connected these classes". This would be expressed by the pattern: (GO::'acetyltransferase',BioDB:descendant, X), (X, BioDB: fl attenPropTree('regulates'), Y), (Y, BioDB:descendant, regexp(GO:'histone'*)), operation produces the graph that is projected out. getTransitiveDescendants(n, Label, k): This operation uses the internal DAG index built for the transitive relation-ships. The index-based access produces signi fi cant bene common query operation.
 more commonly used edge labels are path-indexed for k-long paths. Otherwise, the operation is performed through graph traversal.

Induce(N): Unlike the centerpiece subgraph computation described next, the induce operation constructs a minimal and explore neighboring parts of the ontology. centerpiece(N): The centerpiece subgraph, motivated by [10] de in the context of the ontology, by adjusting node weights according to the criteria speci described next. 4. The BIODB data framework sets that are submitted by users. Both these components make extensive use of the ontology framework. 4.1. Catalogs
We fi rst explain the catalog structure using the examples of relations and graphs. 4.1.1. The semantic relational catalog BMRC is similar to the database catalog used in most commercial DBMS, with the following extensions. of a relation's semantics.
 in a column called Column_Ontology_Reference. If T ( C 1 , C annotated column recorded in the All_Attributes relation, C dom ( C )  X  subclass(OntoTerm1)-subclass(OntoTerm2), thus designating that the domain of the column C is an ontology fragment covering all subclasses of OntoTerm1 that are not subclasses of OntoTerm2.
However, de fi ning the ontology expression for a column may be far from simple. Suppose a relation R has a column G the example case, we use the expression:
Here OBI :0000118 stands for "gene lists" created for experimental data, the relationship toward quali relationship to hint to a semantic schema dependency between relations R and EC , andspeci condition is speci fi ed. In Section 5 , show how M2 is de exploration and query evaluation. 4.1.2. The semantic graph catalog algorithms accept only this form of data. The master graph catalog (BMGC) has the following components. whether graph represents a protein  X  protein interaction graph, a metabolic network, etc., and 2) whether the weights relationships ontology [12] .
 processor to map between data graphs and ontologies. However, this structure only provides a partial cross mapping types have also been de fi ned. 4.2. Data sets
As an illustration, we show the ontology-referencing data representations for two common cases annotated sequences . 4.2.1. Annotated relations
An annotated relation is a standard relation R ( A 1 , A 2 associated with the expression  X  GO :0005634  X  X  X  PATO : inheres _ in PATO _0000052 toward punctate set of ontological expression to a single value is that often multiple associations need to be speci different ontologies. 4.2.2. Annotated sequences
An annotated sequence A ( a ) is a pair (  X  ,  X  ) where sigma is a interval tree (implemented on top of a relational interval tree [15] ) whose nodes de along with the name of the ontology and the identi fi er of the ontology element(s) referred.
An example of this is shown in Fig. 3 . The top part of the b ontology N tag.
 mappings and indexes between data sets and ontologies.
 5. The BIODB association framework
There two ways in which two data sets can be related. The miRNATargets from our motivating example. miRNATargets(miRNA_ID, gene_symbol, transcript_ID, length, total_sites)
This relation may have domain annotations as follows: mapping(miRNATargets.miRNA_ID, BioDB:maps_to, SO:microRNA.ID) mapping(miRNATargets.gene_symbol, BioDB:maps_to SO::gene.gene_name)
Now, consider a different data set, such as a pathway graph expressed in BioPAX. b bp:Pathway rdf:ID="MicroRNA_biogenesis" N b bp:pathwayComponent rdf:resource="#Pol_II_mediated_transcription_of_microRNA_genes" / b bp:pathwayComponent rdf:resource="#Microprocessor_complex_cleaves_pri_miRNA_to_pre_miRNA" / b bp:pathwayComponent rdf:resource="#Exportin_5_recognizes_3__overhang_of_pre_miRNA_" / b bp:pathwayOrder rdf:resource="#Microprocessor_complex_cleaves_pri_miRNA_to_pre_miRNAStep" / b bp:pathwayOrder rdf:resource="#Pol_II_mediated_transcription_of_microRNA_genesStep" /
This pathway description is annotated to refer to microRNA from the Sequence Ontology. mapping(Reactome::bp:Pathway.rdf:ID="MicroRNA_biogenesis, BioDB:isAbout, SO:0000276") term).
 may also have other children representing other cluster properties like the variance of values within a cluster. The SchemaBasedAssociation table relates microRNAs and miRNATargets as:
SchemaBasedAssociation(miroRNAs.miRNAID pk-fk miRNATargets.miRNA-ID) where pf-fk is a known relationship to biodb. Similarly, the DataAssociation table relates table miRNATargets with ExpressionBasedCluster as:
DataAssociation(miRNATargets.miRNA-ID joins-with leaves(ExpressionBasedCluster)) expression: table EC , that can be identi fi ed by the attribute pair hGene". In other words each gene in G is expressed. If we wanted to make a one-to-one mapping between a gene in R and a speci will be used to de fi ne the mapping. where the rule is a simple positive conjunctive query over relations ECR and EC that produces the mapped term Gene. take the second approach in BIODB. There are two forms of bridges inter-concept relationships (e.g., equivalence, hypernym, the primary ontologies they reference. 6. Query processing in BIODB how the ontologies and ontology references described earlier are evaluated. 6.1. Processing keyword queries
A keyword query in BIODB is an Boolean expression with wildcards (PARK* stands for PARKIN, PARK2, to the query evaluation process. The fi rst part, called candidate generation , is standard. 1. The query is fi rst sent to a query analysis unit to identify terms that are known to the ontology sources. (C1) 2. The analyzed query goes through query expansion unit that uses the ontology to the ontology. (C2) store, relation store etc.). (C3) the result. (C4) and the candidate record is the node that holds the identi remapping of the results instead of result ranking performed by most other keyword search engines. that for each relevant ontology the user can view the returned records in the context of the ontology.  X 
A3, A4 are not included. If the data is annotated and the query terms match the annotation, the IRC is de
IRC-cache.  X  the data-ontologies indices like the SGO cross-index and inter-ontology indices speci top-k ontologies are chosen for the next step.  X 
LCAPathDAG. If D is a DAG, and m 1 , m 2 , ... m k are matched nodes of D , an LCAPathDAG is de of D  X  corresponds to the root of D , the nodes of D  X  correspond to the nodes of D and the edges of D paths in D , (ii) m 1 , m 2 , ... m k are leaves of D  X  , (iii) If n is a non-leaf node in D parent or an ancestor of nodes in m 1 , m 2 , ... m k in D (v) If two nodes m i , m j havean LCA l in D , then l appears in D use a variant of the subgraph indexing technique described in [9] to compute ancestor  X 
Instead, the data are "virtually joined" by creating a link from every matched node in the ontology ( m adding a virtual node for each IRC connected to the m nodes through an edge-labeled result . 6.2. Augmenting keyword search by ontology conditions
Consider the following query fragment: keyword($k1 AND ($k2 OR "microtubule")) where $k1 REACHABLE FROM GO::"Cellular process disassembly" VIA (subclass-of)
AND $k1 NOT REACHABLE FROM GO::"equatorial microtubule organizing center disassembly"
VIA (subclass-of) AND $k2 SATISFIES (GO::0007026 GO::"negatively_regulates" $k2)
This keyword query uses variables $k1, $k2 that are further quali the form label 1| label 2 (either label1 or label2 ), ( label 1) 0007026 of the gene ontology. Currently, the query will: 1. evaluate the variables $k1, $k2 by searching the ontology by using OntoQuest search functions. (S1) 2. construct an equivalent keyword query. (S2) 3. evaluate the query as a regular keyword query as described in the previous section. (S3)
More ef fi cient search strategies are under investigation. 6.3. Combining ontological keyword search with data queries the Association Framework to guide the users' query formulation.
 shown below.

ANALYZE( keyword($k1 AND ($k2 OR "microtubule")) where $k1 REACHABLE FROM GO::"Cellular process disassembly" VIA (subclass-of)
AND $k1 NOT REACHABLE FROM GO::"equatorial microtubule organizing center disassembly"
VIA (subclass-of) AND $k2 SATISFIES (GO::0007026 GO::"negatively_regulates" $k2) ) AS Q1
This construct performs steps S 1, S 2 (see above) and then steps C 1, C 2, C 3to elements of this list.

Let us assume that the ontological keyword query identi fi miRNATargets, a gene expression table geneExpress (downloaded from the GEO database at www.ncbi.nlm.nih.gov/geo/ ) over these sources and presents a query form that contains searchable miRNATargets table has a column for "genes". Let us assume, that this table
Section 5 . simplistic approach to construct the integrated view  X  we just take the the portion of the schema that needs to participate in join-chasing. Let us consider two examples. In the relation miRNATargets, and the following XML schema fragment: b xs:sequence N b /xs:element N view(miRNA_ID, gene_symbol, transcript_ID, length, total_sites, fullName, ref) consider the same miRNATargets relation and the following fragment of an RDFS schema. b Class rdf:ID="gene" N b /Class N b Class rdf:ID="DNASequence" N b /Class N b range rdf:resource=" &amp; xsd;integer"/ N b range rdf:resource=" &amp; xsd;integer"/ N where miRNATargets.gene_symbol is mapped to the range of the property hasSymbol for the class gene. Before de
DNA. Thus, after all inferences are complete by fi nding the data type properties of the subqueries are dispatched to appropriate data sources using a re in [19] .

Some potential problems may arise if the number of quali fi and the inter-relationship between these sources is dense. In that case, forming an appropriate view as well as ef
Similarly, we are also exploring the effectiveness of our 7. Evaluation language within the elements of the user interface. Speci presence of subproperty hierarchies.

Q1. A single term ontological query synonyms(Hippocampus) is expanded through the ontology to Hippocampus OR "Cornu Q2. transcription AND gene AND pathway  X  a conjunctive query with 3 terms.

Q3. (gene) AND (pathway) AND (regulation OR "biological regulation") AND (transcription) AND (recombinant)
Q4. synonyms(zebra fi sh AND descendants(promoter,subclassOf)), where zebra Q5. synonyms(descendants(Hippocampus,partOf)) expands to all parts of hippocampus and all their synonyms
Q6. synonyms(Hippocampus) AND equivalent(synonyms(memory))
Q7. synonyms(x:descendants(neuron,subclassOf) where x.neurotransmitter='GABA') AND synonyms(gene where gene.
Q8. synonyms(x:descendants(neuron,subclassOf) where x.soma.location=descendants(Hippocampus,partOf)) the ontological predicates are executed. Two factors in fl evaluatetheontologypredicatesandthetimetolocatetheda ta by searching the catalog and the indices. Q1 takes longer because the result size is about 2 M records. Q2 and Q3 have very high selectivity. For Q4 this query the ontology predicate evaluation dominates because it needs to evaluate the has_neurotransmitter edge for data fetching time.
 of OntoQuest are extensions to what we have reported earlier. Lines 1 the term 'brain'. Each query returns not only the IDs of the nodes, but the entire subgraph. simple edge-traversal used in lines 4-5 for the same part of the DAG. When the same query is executed in a more dense linear scan ( Table 3 ). 8. Related work
There are four areas of information systems research that are relevant to this paper this paper. 8.1. Biological information systems In 2001 [20] presented one of the early surveys on management and integration of heterogeneous data for biology.
While the survey mentions the potential role of ontologies, it focuses more on the problem of de based system that integrated disparate relational informatio nwithadditionaldomainknowledgebyexpressingdescription performed simple inferences. A different category of work came from bioinformatics researchers who treated ontologies these common mappings. A third group of researchers use these master vocabularies for integrating information from slight variation of this theme, [26] adopts the strategy of two groups do not use the inter-term relationships provided by the ontologies. The fourth group of data integration researchers use the ontology to perform query expansion al ong the subclass or the part-of hierarchy and then use the expansioniscarriedoutaspartoftheviewde fi nition. In this case, an integrated view might look like view(x,z)
The YeastHub system, for instance, uses the D2R tool ( http://www4.wiwiss.fu-berlin.de/bizer/d2rmap/D2Rmap.htm )to 8.2. Ontological information systems
As mentioned in the Introduction , our work is partly motivated by ontology-based databases, multiple ontology models within the same OBDB structure [30,31] . While our work signi viewed as extensions that can be mapped to this kernel. In our system, we keep the ontologies con not need to consider. 8.3. Cross-model approaches (c) mapping and semantics extraction techniques across these models [37 within a relational system, and (e) integrating multiple models [43 another.

Among the above, one of the more general frameworks is offered by Atzeni et al. [40] , where the goal is to create a a supermodel. A supermodel is realized through a four part dictionary with two coordinates: schemas versus models and model-speci fi c versus model-generic (i.e., constructs that occurs in the supermodel). A supermodel de one source to the ontology or to another source, or the mapping of domain-speci to perform the kind of schema translation demonstrated in the MIDST tool. Next, consider the SWIM system [43,44] that techniques. While the OntoQuest component of BIODB formally adheres to the OWL-2 model, the ad hoc data collected by users and mapped to the ontology hardly does. This makes it very dif in an abstract conceptual language. Their discovery algorithms require the user to provide additional "simple correspondences. Our work can bene fi tfromthediscoveryprocess,eventhoughwebelievewecanonlydiscoveronlypartial
The SchemaWeb effort [39] has taken a different approach to the problem. They have de speci fi cation describing the schema elements of a relational database using properties like hasColumn, isIdenti that SPARQL cannot directly express. This prompted us to develop our own query language which is in one sense more restricted than SPARQL and is more powerful in another. 8.4. Keyword-based search
Answering keyword-based queries in structured and semi-structured data is an active area of research [17,18,47 keyword-based search approach, we follow the standard steps of using a standard inverted index to
Instead, [50] is designed to return subgraph structures, and use graph summarization in the computation of the top-k accomplish this. 9. Conclusion 9.1. Using BioDB
In this paper we described the basic components of the BIODB system, and showed how deeply ontologies innervate its information framework. This ontological connection is signi ingestion, information discovery, querying information, scienti indirect correlation between known data sets and data sets just obtained. As a new gene is reported as signi
A user wants to fi rst merge all pathway graphs (whose nodes are genes or gene products and edges re like regulation) related to some biological process (e.g., a disease), and then wants to obtained through experimental or computational tasks. 9.2. Future research
For relational data we will use techniques like [36,52] . We will also need to resolve entities speci cost model for performing joint queries over the heterogeneous data sets through the Association Catalog? 5) Can we issues we plan to investigate. 10. Role of funding source This research was partially funded by the NIH/NIGMS project 1R01GM084881-01 and by the Neuroscience Information
Framework (NIF) Project funded by the NIH/Neuroscience Blueprint contract HHSN271200800035C. Acknowledgments We would like to thank our biologist collaborators Profs. Maryann Martone from UCSD, and Animesh Ray from the Keck whose comments led to substantial improvement of the quality and comprehensiveness of the paper.
References
