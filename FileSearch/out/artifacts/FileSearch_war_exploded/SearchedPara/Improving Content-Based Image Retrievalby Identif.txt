 Recently, content-based image retrieval (CBIR) based on local feature extraction has at-tracted a lot of attention. One of the widely used approaches is based on so-called  X  X ag of visual words X  or  X  X ag of features X  (BOF) 1 . This model was inspired by the  X  X ag of words X  (BOW) framework from text information retrieval. The BOW represents docu-ments as orderless  X  X ag X  of terms containing some words from the dictionary. In CBIR, terms from the text retrieval correspond to groups of local image patches (called visual words). A BOF representation of an image is a histogram of the visual words X  counts in the image. The BOF approach is a mid-level representation that helps to reduce seman-tic gap between human perception and m achine representation of images.

The local features based on BOF disregard the information about correlations be-tween visual words. However, when the vo cabulary size (the number of clusters) is small, the BOF X  X  coefficients tend to be highly correlated. Such correlations can be exploited in order to improve the BOF performance.
Proximity-based correlations are often utilized to capture the spatial relative infor-mation between instances of visual words and enhance the visual representations. Here, we will utilize both proximity-based and image-level correlations to adapt the similar-ity measure and re-rank the top images returned in the first round retrieval. To the best of our knowledge, no systematic comparison has been conducted between image-level and proximity based notions of correlation in the context of query expansion in image retrieval.

Existing approaches (query expansion like frameworks) often modify the current query, which leads to the normalization of histograms. This may not be desirable, since the (mid-level) semantic meaning of bins may be lost and the representations may be-come less discriminative due to the varied complexity of images. Moreover, many re-searchers incorporate the tf  X  idf weighting scheme from text retrieval although some experiments suggest that even the most frequent visual words are important to the re-trieval (see [1]). However, others ([13]) report performance improvement for tf  X  idf and thus the results are not conclusive. We believe that this may be domain specific. tf  X  idf may work better in case when the precise object matching is important. In this paper we are concerned with generic image retrieval only and our model avoids the re-normalization by modifying the similarity measure.

Current approaches are also data storage and computationally expensive which makes them less suitable for real user oriented applications, for example, to incorporate content into a user profile.

To tackle the aforementioned problems, we propose a novel approach to exploit the inter-relationships between the visual words. We introduce and test a few notions of cor-relation. First, we generate a matrix of co rrelations between visual words for each top image returned in the first round retrieval. Second, we aggregate the matrices and iden-tify the dominant and least correlated coefficients. Thus obtained information, along with the visual words X  frequencies from the current query, is then utilized to weight the similarity measure. Certain coefficients in the similarity measure corresponding to highly correlated terms are then increased, w hile the coefficients related to least corre-lated visual words are deemphasized. The images returned in the first round retrieval are then re-ranked according to the modifie d similarity measure. The improved per-formance, observed on three different data collections, is in our opinion a promising indicator for the real user evaluation. The proposed approach should let us directly in-corporate image content into user profiles , where each profile would be represented in a form of a matrix of correlations between visual words obtained from the query history. Thus obtained user profile, which would store user visual preferences, could be utilized to adjust the similar ity measure with respect to each individual user. Readers interested in local features and the  X  X ag of visual words X  approach are referred to [1,2,3] for the detailed description and application of aforementioned methods.
An interactive image retrieval model with adaptive similarity measure is introduced in [14]. The weights for adjusting the similarity measure (with respect to the image content representation -globa l features) are calculated according to the consistency of the vectors X  components representing image s collected from user relevance feedback. First, the representations of images deem ed relevant by the user are stacked to form a matrix. Next, if a column c ontains elements with similar values then this particular dimension is considered to be a good indicator of the user X  X  information need and the weight is calculated as an inverse of standard deviation across this dimension.
Liu et. al. ([6]) exploit co-occurrence information in spatial domain. Authors make an assumption that the related visual words would appear in a certain neighbourhood. They utilize the equivalent of tf  X  idf weighting scheme from text retrieval. Having ob-tained the information about the relationships, they use it to update the current query by weighting all the coefficients in the histogram. This leads to the normalization process which may hamper the performance [1].

Another approach [7] tries to capture the spatial relationships between pairs of visual words by building a visual word tree. The tree i s generated by clustering interest points that co-occurred within some spatial distance. Latent Semantic Analysis (LSA) is then applied to compute the importance of each visual word to the given query, and the most important ones become so-called topic words. The tf  X  idf weighting scheme and the topic words are then utilized to re-rank the images. This approach, although quite efficient in comparison with others, is not applicable to real user evaluation because of the computational cost (high dimensional Scale Invariant Feature Transform descriptor, costly LSA).

Model proposed in [8] utilizes data mining techniques to discover spatially co-occurrent patterns of visual words. Aut hors report limitations of standard codebook generation techniques (related to synonym y and polysemy of visual words) and pro-pose a novel approach, which constructs a higher-level visual phrase lexicon consisting of groups of co-located visual words.

Spatial correlations are also exploited in [9] where they are represented by cor-relograms. Experimental results show, that the joint models (B.O.F and correlogram) outperform standard appearance-only models. However, models based only on correlo-grams perform worse than standard B.O.F approach.

Jamieson et. al. [10] propose to group features that exist within a local neighbour-hood, claiming that arrangements or structures of local features are more discriminative. Such groups of visual words are then associated with annotation words.

Trigram model is proposed in [11] to help in image classification. The method cap-tures spatial correlations between image p atches. Comparison between unigram and trigram models shows that the latter one improves the classification accuracy.
Another model [12] defines visual phrase-based image similarity. First, they count occurrences of each visual word. Then the o ccurrences of adjacent patch pairs formed by frequent visual words are counted and finally, the visual phrases are generated by selecting the adjacent patch pairs whose occu rrences are higher than the threshold. The similarity between two images is measured by cosine metric with tf  X  idf weighting scheme adapted from text retrieval.

In general, methods that utilize informatio n about correlations between visual words try to group semantically similar visual words X  together. They usually consider co-occurrences at one contextual level and are computationally expensive and not scalable. Our method, in contrast, is c omputationally and data s torage cheap, utilizes co-occurrences at various contextual levels, and avoids the normalization of histograms of visual words X  counts. These properties make it suitable for a real user evaluation, where a user profile would represent user visual preferences. Such type of user profile would be utilized to put a query into the right context. Here, we introduce image-level and proximity-based notions of correlation. In text re-trieval (see [5]) document-level correlations seem to be stronger. A document may con-tain correlated terms not because of their pr oximity, but because they refer to the same topic.

Because our histograms of visual words X  c ounts can be classified as a mid-level representation (the BOF reduces the semantic gap), we can introduce the correlations in a relatively intuitive way. Let us first focus on the correlations at the image level.
Correlation 1 can be regarded as the number of all pairs between the instances of dif-ferent visual words (see Figure 1). Here, for instance, the squares denoted as A represent different instances of the same visual wor d (image patches) tha t appears within an in-dividual image. When dealing with a set of images, we would aggregate the correlation matrices generated for each image. In case of Correlation 1, this would be equivalent to putting histograms of visual words counts as r ows in a matrix and mu ltplying the trans-position of this matrix by itself. This is an analogy to document-level correlation in text IR. Correlation 2 is a normalized version of Correlation 1, where the denominator is a total number of all possible pairs between occurrences of visual words (Figure 2).
Correlation 3 (Figure 3) can also be regarded as the number of pairs between the occurrences of different visual words, but this time the correspondence is as follows (see Figure 3). 1. corr ( vt i ,vt j )= vt i f  X  vt j f 3. corr ( vt i ,vt j )=min( vt i f,vt j f ) where vt i , vt j denote the i th and j th visual term respectively, and vt i f , vt j f denote the frequencies (number of occurrences) of the terms. By calculating the correlations between all visual words in a particular image, we will obtain a matrix of correlations: The matrix corresponding to the first notion of correlation can also be obtained by calculating the inner product of a transposed vector image representation and itself h t  X  h . At first, there does not seem to be much difference between these three relationships. A closer look will show us the contradictions with our intuition of correlation.
Let us focus on Correlation 1. If the freque ncies of two pairs of visual words are { 5 , 10 } and { 5 , 100 } then the latter will be assigned higher correlation value. We would, however, expect the former pair to be at least equally correlated.

Normalization (Correlation 2) helps to overcome the above issue. However, if the frequencies are proportional, for example { 10 , 20 } and { 40 , 80 } then the former will score higher. But, intuitively, the latter is more correlated.

Correlation 3 seems to be intuitively right, b ut will ignore the additional information from the frequencies (see example for Correlation 1). Normalization of correlation 3 will produce similar side effects to Correlation 2. Therefore, we introduce the Corre-lation 4, which does not seem to contradict our intuition. Experimental results confirm the superiority of this notion of correlation in the user simulation.

Above notions of correlation consider two instances of visual words to co-occur if they appear somewhere within an image (vi sual context -the whole image). Let us now introduce, by analogy to text retrieval, what we will refer to as proximity-based correlation. Two instances of visual words will be considered correlated if they appear together within a certain neighbourhood (visual context - X  X liding window X ). In case of dense sampling this is rather straightforward. When dealing with sparse sampling, however, we need to shift the window (square, circular) from one instance of visual word to another. Figure 4 shows an example of proximity-based correlation. Here, the squares denote instances of various visual words. Now we can show how to incorporate the information about correlations into the Pseudo Relevance Feedback (PRF). PRF assumes that the top documents from the first round retrieval are all relevant to the query. Then, the additional information from the top documents is usually utilized to expand the query.

Initially, the first round retrieval is perfo rmed. Then, for each image from the top returned images, the matrix of correlations will be created. We aggregate all the matrices in order to obtain the final matrix from which the most and least dominant correlations will be identified (in terms of values). Notice, that in case of Correlation 1, this approach would be equivalent to constructing a matrix with rows corresponding to each image representation (from the top returned images) and multiplying M t  X  M ,where t denotes the transpose operation. The advantage of our method is that it does not restrict us to one notion of correlation and we can define it in a more intuitive way. As aforementioned, we can identify a few most and least correlated visual words from the matrix of correlations. We can now utilize this information to modify the similarity measure. For this purpose, we are going to use Minkowski fractional similarity measure (the method may be used with any measure from the Minkowski X  X  family of distances).
First, we must identify a certain number (see Experimental Setup section for details) of most and least correlated visual terms by looking at the correlation matrix X  X  elements X  values above or below the diagonal (symmetrical matrix). Let X  X  assume that we have identified the dominant correlation { v k ,v l } and the least correlated pair { v n ,v m } .Let us now look at the query and extract the frequencies of visual terms corresponding to v ,v l ,v n ,v m . We can assume that v k f  X  v l f and v n f  X  v m f ,where vf denotes the frequency of a visual word taken from the query.

We can weight the similarity measure as follows where Q denotes the query representation, I is an image representation from the data collection, and c ( v k ,v l ) and c ( v n ,v m ) are the correlation values taken from the corre-lation matrix..

Thus, we increase the elements corresponding to the visual word in the query with lower frequency value (dominant correlations), and decrease the elements correspond-ing to the visual word in the query with higher frequency value (least correlated pairs). Having done the similarity measure weighting, we re-rank the top images by calculating the new distance between the query and the images returned in the first round retrieval. We evaluate the proposed method on three large data collections: ImageCLEFphoto 2007 (20000 images), MIRFlickr 25000 (25000 images) and a collection from British Geological Survey (BGS, 7432 images). The collections differ significantly in size and content. For each of the 100 query topics (6 0 for ImageCLEF) we retrieve 16 images and calculate Mean Average Precision (MAP ). To test the influence of the correlations on the retrieval performance, we generate the correlation matrix from these 16 images, weight the similarity measure, and re-rank the top images. Next, we compute the Mean Average Precision and compare it with the baseline (which does not take the correlations into account).

Some images belong to a few categories. The evaluation on MIRFlickr and BGS collections was the  X  X enient X  one. We assumed that an image is relevant if it shares at least one category with the query image (based on the ground truth data provided). 5.1 Experimental Setup The implemented local features utilize the random sampling technique. We set the num-ber of sample points to 900. A large number of sample points (in random sampling) is expected to give better results than othe r sampling methods (see [3]). For each sample point of an image, a 10  X  10 square patch around it was characterized as multidimen-sional vector by applying a local descriptor. Each image patch has 9 dimensions (3 for each colour channel), and the codebook size is 40. The visual features, despite using low dimensional vectors and small vocabulary, are comparable with more sophisticated approaches (ImageCLEF2010 Wikipedia Retrieval Task). For a detailed description of the local features used, the reader is referred to [15].

When exploiting the correlations between visual words, we identify 5 dominant and 1 least correlated pair. The p and c parameters X  values in the similarity measure are set to 0.5 and 1.31 for all three data collections and were determined experimentally. In case of proximity-based correlation, we will consider two instances of visual words to be correlated if they both appear within a circle of radius 14.15. This is approximately the sum of two diagonals of square sub-images (image patches may overlap). 5.2 Experimental Results and Discussion Tables 1, 2, and 3 show the experimental results. They present the results for the case when no Pseudo Relevance Feedback was incorporated (NP), when only the dominant correlations were taken into account (D), and the MAPs for both dominant and least correlated pairs (DL). The performance of five notions of correlation is also depicted in the tables. Labels C1, C2, C3 and C4 correspond to correlations 1, 2, 3 and 4 ac-cordingly (see Correlation Between Visual Words section, image-level) whereas C0 de-notes proximity-based correlation. The computation of correlation 1 and then addition of matrices is equivalent to commonly used multiplication of the transpose of an image representation matrix by itself. It is one of the standard ways for capturing correlation. Therefore, correlation 1 can also be consider ed as another baseline. Results presented in bold font are significantly different (two-tailed t-test, 0.05) from the baseline.
It can be seen that C4 and C3 correlations obtained the best results on all three data collections. The addition of information about the least correlated visual words often further improves the performance. Moreover, image level correlations outperformed proximity based one. This may be due to the notion that an image may contain corre-lated visual words not because of their proximity but because they refer to the same topic.
We should be aware, however, that the assumption in PRF framework that all the top documents are relevant to the query may produce a number of false correlations. The process will therefore depend on the adequacy (the ability to capture relevant properties) of the image representation and the retrieval performance of the implemented methods. The real user evaluation should, however, be able to overcome these limitations because all the queries will be selected by the user. In this paper we propose a new approach for i dentifying and utilizin g the information about correlations between visual words. We implement and test various notions of correlation at different contextual levels (we refer to them as image-level and proximity based). To the best of our knowledge, this i s the first time these two were compared within this type of framework in image retrieval.

Experimental results show the superiority of two notions of correlation, C4 and C3, which are image level correlations. For these two correlations, we report significant improvement in terms of Mean Average Precision on two data collections within PRF evaluation framework. Moreover, the additio n of information about the least correlated visual words often further improves the performance. Proximity based notion of corre-lation does not show a significant improvement in the context of this model.
The proposed method is computationally an d data storage cheap, utilizes correlation at different contextual levels, and avoids the normalization of histograms. We believe that the our approach can be successfully incorporated into the experiment involving real users. Thus, a user profile (correlation matrix generated from the query history) could be stored for each individual user, and t he information from the profile would be utilized to put the query in the right visual context.

We are planning to extend our evaluation to other various weighting schemes and similarity measures. The ultimate goal, however, would be the aforementioned real user evaluation. The proposed method was developed for this purpose. We will try to take into account the ranking of the top retrieved images and the order of the queries in the query history, as the current query should be given more importance than others. When it comes to the automated methods, like Pseudo Relevance Feedback for example, the assumption that all the top documents are relevant to the query may produce a number of false correlations. The process will therefore depend on the adequacy (the ability to capture relevant properties) of the image representation and the retrieval performance of the implemented methods. The real user evaluation should, however, be able to overcome these limitations and the promising results encourage us to pursue the proposed approach.
