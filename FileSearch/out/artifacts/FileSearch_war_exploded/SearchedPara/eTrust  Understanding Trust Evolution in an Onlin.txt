 Most existing research about online trust assumes static trust relations between users. As we are informed by social sciences, trust evolves as humans interact. Little work ex-ists studying trust evolution in an online world. Researching online trust evolution faces unique challenges because more often than not, available data is from passive observation. In this paper, we leverage social science theories to develop a methodology that enables the study of online trust evo-lution. In particular, we propose a framework of evolution trust, eTrust, which exploits the dynamics of user prefer-ences in the context of online product review. We present technical details about modeling trust evolution, and per-form experiments to show how the exploitation of trust evo-lution can help improve the performance of online applica-tions such as rating and trust prediction.
 H3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering Algorithms, Design, Experimentation Multi-faceted Trust, Trust Evolution, User Preference
The notion of online trust has attracted increasing atten-tion from the computer science community in recent years [8, 22, 15]. Trust plays a central role in helping users overcome perceptions of risk and insecurity [6], especially for online users who seek advice from trusted sources to make deci-sions. The trustworthiness of the users is often tantamount to the reliability of the information they provide. Trust is widely exploited to help online users collect reliable infor-mation in applications such as high-quality reviews detec-tion [19] and product recommendation [10].

Most existing work on online trust assumes static trust re-lationships between users [27, 8, 7]. However, trust evolves as humans interact based on the findings from social sci-ences [11, 30, 12]. Sociologists investigate the evolution of trust in a physical world [30, 29]. Recent years witness many trust related online applications such as intelligent recom-mender systems [21, 7], collaborative filtering [10, 2], review quality prediction [19] and viral marketing [26], but little work is on online trust evolution due to some unique chal-lenges. For example, in an online world, most of the in-formation that a sociologist collects for trust evolution may not be available. In a physical world, sociologists first in-vite a group of participants, usually a small group, and then record their sociometric information on interpersonal trust and conditions or situations for the change [30]. In an online world, users are distributed all over the world. Even if one could find a study group, it would be difficult to gather so-ciometrics on trust. In other worlds, passive observation is the modus operandi for studying trust evolution. Since it is important to study trust evolution, we ask whether we can study online trust evolution and how we can gather online information to model trust evolution.

An important characteristic of product review sites such as Epinions 1 is that there exist trust networks among users. Such sites provide a sensible platform to study trust in an online world [8, 24, 18, 20]. Figure 1 shows a simple online rating system from Epinions at two different time points, denoted as T 1 and T 2 . There are two types of objects: users ( u 1 to u 5 ) and items ( I 1 to I 5 ), and two types of actions: establishing trust relations among users and creating rat-ings from users to items. The rating system evolves over time, highlighted in Figure 1(b), when (1) new users (e.g., u and new items (e.g., I 5 ) are added; and (2) new trust rela-tions (e.g., u 2  X  u 1 ) and new ratings (e.g., u 5  X  I 4 created. The dynamic online rating system on product re-view sites serves an observable environment to investigate online trust evolution. First, trust networks with temporal information from product review sites are available, includ-ing time points when users entered and the trust relations established. Second, sources, reflecting the changing of user preferences, are available from product review sites. The dy-namics of user preferences can be captured by their rating information, widely exploited for collaborative filtering [4, 14, 16]. The evolution of people X  X  trust can be witnessed http://www.epinions.com via the changes of their preferences [11]. For example, when people are interested in X  X lectronics X  X t time t , they trust ex-perts in  X  X lectronics X  while people shift their preferences to  X  X ports X  X t time t +1, they trust experts in this facet. Ziegler et al. [32] pointed out that there is a strong and significant correlation between trust and user preference similarity. The more similar two persons are, the greater the trust between them exists. In other words, trust relationships will evolve with the drifting of user preferences.

In this paper, we make a first attempt to study online trust evolution by exploiting the dynamics of user preferences in the context of online product review. Main contributions of this work include:
The rest of paper is organized as follows. The problem of trust evolution is formally stated in Section 2. Section 3 in-troduces the details about our proposed framework, eTrust. Section 4 discusses applications of eTrust. Section 5 presents experimental results and findings about eTrust. Section 6 briefly reviews related work. Finally, Section 7 concludes this study with future work.
A rating system of product review sites consists of two types of objects with two different actions, as shown in Fig-time t (e.g., U T 1 = { u 1 , u 2 , u 3 , u 4 } ) where n at time t (e.g., I T 1 = { I 1 , I 2 , I 3 , I 4 } ) where m of items at time t . Note that new users or new items may be added 2 thus U t  X  U t +1 and I t  X  I t +1 . Users can perform two types of actions in the rating system: establishing new
W e do not consider the deletion of existing users or items in this work. trust relations and creating new ratings. Let X t  X  R n t  X  n t denote the trust network at time t where X t ( i, j ) = 1 if u trusted by u j at time t and zero otherwise. Let R t  X  R n t  X  m t represent the ratings at time t and r t ij is used to represent the entity at i -th row and j -th column, i.e., the rating of I given by u i at time t .

Users may have quite different preferences over items from different facets. We assume that there are K latent facets for items and a user has similar preferences over items of the same latent facet. Let p t i  X  R K + denote the u i  X  X  preference u  X  X  preference over the k -th facet at time t . Let q j  X  R K be the characteristic vector of the item I j and q j ( k ) denote the characteristic of I j in the k -th latent facet. Let W R t  X  n t  X  K denote the multi-faceted trust relations at time t and w t ivk is used to denote the strength of trust relation from u i to u v in the k -th facet at time t .

With above notations, the trust evolution problem with the dynamics of user preferences can be stated below.
Given T time slices, {U t } T t =1 , {I t } T t =1 , { X t understand the evolution of trust (eTrust), i.e., {W t } T exploiting the changing of user preferences, {{ p t i } u which is formally defined as,
One challenge to studying online trust evolution is lack of conventional sociological data, and passive observation is a common approach to data collection. The dynamic rating system on product review sites provides a new means to the study of online trust evolution. In the next subsections, we introduce a framework of trust evolution, eTrust, with details on modeling and parameter estimation.
It is observed [32] that trust has a strong correlation with user preference similarity in rating systems, reflected in their rating information. Thus most existing work about trust is studied in the context of rating prediction [2, 27]. In this work, we explore the dynamics of user preferences to model trust evolution for rating prediction. The user-item pairs, ( i, j ), and their known ratings at time t , r t ij , are stored in O dicted rating from the known rating r t ij . A baseline model for rating prediction is the latent factor model [13] based on user preferences p t i a nd item characteristics q j , Another approach for rating prediction is based on the trust network, a variant of the nearest-neighborhood model [13] by considering multi-faceted trust relationships between users, where N t i represents the set of people trusted by u i at time t . Assume that r t vj vj ( t vj &lt; t ) is the rating given by u at time t vj . The influence of u v to u i on the rating given the distance between t vj and t . The earlier ratings reflect users X  previous preferences and should have less influence on the current ratings [4]. The closer t vj and t , the more strongly r t vj vj influences r t ij . Thus we choose an exponential time function to allow the influence of past ratings to decay gradually, which is widely adopted in such applications [4, 14]. Thus r vj in Eq. (3) can be stated as,  X   X  0 controls the user specific decay rate for u i and should be learnt from the data. w t ivk in Eq. (3) is the trust strength between u i and u v in the k -th facet at time t . There is a strong and significant correlation between trust and user preference similarity [32]. Thus we define s t ivk  X  R L as the preference similarity vector between u i and u v in the k -th facet at time t , based on their preferences in k -th facet metrics to measure their preference similarity. We further assume a linear relation between trust strength w t ijk and s ijk [31], formally stated as, where f : R  X  [0 , 1] is an active function to control the trust strength, 0  X  w ivk  X  1 and b i is a user specific bias of u
The latent factor model does not incorporate the influence from the trust network while the neighborhood model does not consider the user preferences and item characteristics. Earlier work [13, 2, 27] indicated that a proper combination of these two models would help rating prediction. Therefore, we estimate the rating of u i about I j at time t as,  X  r In this formulation, the rating of u i on I j at time t is de-termined by two factors. One captures the preferences of u i at time t and the characteristics of I j , and the other is about user X  X  trusted people.  X  r t ij should be influenced by u trusted people. w t ivk indicates their trust strength in the k -th facet. The stronger u i trusts u v , the more similar  X  r is to r vj . The second part models the influence from their trusted people. The parameter  X   X  [0 , 1] adjusts the con-tributions from these two parts. Then the trust evolution problem, embedded in rating prediction, can be formulated as the following minimization problem, where the parameter  X  controls the quadratic regularized term to avoid overfitting, c (  X  ) a function to model how user preferences change, and  X  for the speed of change. When  X   X  0, we do not consider any relations of user preferences at different time points. When  X   X  +  X  , the user preference vectors at different time points are restricted to be the same. eTrust requires the following parameters: w , b i ,  X  i , the characteristics vector for each item I j , q j , the user prefer-ence vector for each user u i at each time slice t , p t i users enter the rating system at different time points, t user u i . Thus, for each u i , we need to estimate his prefer-
In our implementation, we use a projected gradient method to solve Eq. (7) and parameters can be updated as, which are chosen to satisfy Goldstein Conditions [25].  X  w  X  the objective function in Eq. (7) with respect to w , b i q ( k ) and p t i ( k ), respectively,  X  i = 2  X  X  i + 2(1  X   X  ) )  X  ( Q  X  1  X  2(1  X   X  ) X where f  X  w , f  X  b who trust u i at time t . E t ij , P t ij , Q t ij and H t E P Q H Next we discuss our choice of f (  X  ) and c (  X  ) for eTrust. f (  X  ) is an active function to control the estimated trust strength in [0 , 1]. It should be real-valued and differentiable function and the range of this function is limited in [0 , 1]. However, we still lack the detailed description about this function. In this case, a sigmoid function is often used [1]. It exhibits a progression from small beginnings that accelerates and approaches a climax over the domain, formulated as, Then f  X  w , f  X  b c (  X  ) is used to capture how user preferences change over time. User preferences are usually assumed to change smoothly over time [16]. Under this assumption, c (  X  ), c  X  are defined as follows:
We discuss the role of eTrust in product review applica-tions to help improve the performance of rating and trust prediction.
Rating prediction is the task of predicting a given user X  X  ratings for a given item based on past ratings or other infor-mation, regarded as one of the most important algorithms for recommendation system. People tend to seek advices from their trusted friends thus trust networks are widely exploited to improve the task of rating prediction. Most ex-isting trust network based methods assume single and static trust relations. However, rating systems in product review sites are highly dynamic and user preferences are drifting over time, indicating the evolution of trust relations. Thus eTrust, modeling the trust evolution, can be used to further improve the performance of prediction.

Given the previous ratings {O t } T t =1 , the task of trust pre-diction aims to predict the ratings at time T +1, O T +1 . The rating from u i to I j at time T + 1 can be predicted as,  X  r ij =  X  q + (1  X   X  ) where w is learnt from testing data. For the existing item, I , its characteristics vector, q j , is not evolved. For the existing user, u i , b i and  X  i are independent on time slices, directly applied to T +1. We define the change speed of u preference in the k -facet, Z ik , as, then user preference at T +1, i.e., p T +1 i ( k ), can be estimated from that at T by considering the change speed of the user preference as,
At time T + 1, new users and new items might be in-troduced; and a challenge for eTrust is how to address the cold-start problem where no historical ratings on items or users are available. Homophily [23] is employed to deal with the cold-start problem: similar users are more likely to trust each other. Therefore, for a new user, we first find his top- X  similar users based on their profiles to establish his trust network and then use the average user preferences from his trust network to estimate his preferences. A similar strategy is adopted for each new item: the characteristics of a new item are estimated from its top similar items.
T rust between users is widely exploited by search and recommendation systems. Inferring unknown trust between users attracts more and more attention recently [8, 18, 3]. Trust propagation model is a popular model to derive trust relationships based on known trust relationships [8]. How-ever, users X  trust relationships usually follow a pow-law dis-tribution and 80% of users are in the long tail. Thus in practical, there is not enough information to apply this tech-nique. Furthermore, the propagation model is not directly applicable to the new users who have little information. Pre-vious work suggests that models, combining rating similarity with trust networks, can achieve better performance than trust propagation model [18, 3]. eTrust can be applied to the task of trust prediction.

Given trust networks and ratings before time T , we want to recommend trust relationships at time T + 1. eTrust learns its parameters by solving the problem in Eq. (7) based on the trust networks and rating information before T . Then the trust strength between u i and u v in the k -th facet can be calculated by Eq. (5). For a new user, we use the average user preferences of his top- X  similar users in terms of profiles to represent his preferences. After obtaining trust strengths for each facet, the overall strength can be computed as,
In this section, we conduct experiments to evaluate the proposed framework, eTrust. We first introduce the details about the dataset used in the experiments; next describe the findings and results of applying eTrust to online appli-cations, i.e., rating prediction and trust prediction.
To study the evolution of trust, we collect a dataset from a popular product review site, Epinions, in the month of May, 2011. In Epinions, people can rate various products and add members to their trust networks or  X  X ircle of Trust X . We started with a set of most active users and then did breadth-first search until no new users could be found. For each user, we collected their profiles (user name, location, real name, registration time, self-description, and favorite websites), product rating entries and trust relations. For each product rating entry, we collected the time point of the entry, product name, category and the rating. For each trust relation, we collected trustee, trustor and the time point when the trust relation established.

We compute the trustors and trustees for each user and the distributions are shown in Figure 2(a) and Figure 2(b). Most people have few trustors and trustees, while a few users have an extremely high number of trustees or trustors: sug-gesting a power-law distribution that is typical in social net-works. We check the distributions of new actions and new objects w.r.t. the current number of actions and objects. The results for new actions and new objects are shown in Figure 2(c) and Figure 2(d), respectively: also suggesting power-law-like distributions. Some other statistics of the dataset are shown in Table 1.

The earliest rating was published on Jul 05, 1999 and the latest one was on May 08, 2011. However, the tempo-ral information about the trust relations established before (a) Trustees Distribution (c) New Actions Distribution 11th January, 2001 is not available from Epinions. There-f ore we split the whole dataset into 11 timestamps, i.e., T = { T 1 , . . . , T 11 } , where T 1 covers the data before 11th January, 2001, T 11 contains data after 11th January, 2010 and for T 2 to T 10 , each of them contains one-year data. For example, T 2 contains data from 12th January, 2001 to 11th January, 2002. In the following experiments, we choose T 1 T 10 as the training set to estimate the parameters of eTrust.
In Eq. (7), s t ivk is the preference similarity vector for u and u v in the k -th facet at time t and in this work, we define the following 9 metrics of preference similarity as, s ijk = [ p t i ( k ) , p t j ( k ) , p t i ( k ) + p t j ( k ) , p p j ( k )  X  p t i ( k ) , ( p t i ( k )  X  p t j ( k ))
Some interesting findings are summarized below. h ttp://www.shopping.com/ http://www.ebay.com/ http://en.wikipedia.org/wiki/Epinions Figure 4: User Preference Evolution. Note that x-a xis, y-axis and z-axis denote the facet ID, user ID and user preference, respectively.
 Figure 5: Speed of Changes w.r.t. Users and Facets eTrust can be naturally applied to the online application of rating prediction, as discuss in Section 4.1. T 11 is the test-ing set in this experiment and we further divide it into two parts: the ratings involved in new items or new users(cold-start problem), denoted as N ; the remaining ratings from T 11 denoted as K . We closely examine T 11 and find that N contains 10 . 06% of the ratings at T 11 .

We use Root Mean Squared Error (RMSE), a common metric, to evaluate prediction accuracy [13].
 where |M| is the size of the testing set, M . Note that eTrust can be easily applied to other rating prediction methods thus we aim to investigate whether considering dynamics of trust relations and user preferences allows us to improve the prediction performance, instead of comparing different rating prediction methods. Table 2: RMSE of Rating Prediction in Epinions
The prediction results are shown in the Table 2 and the m ethods listed in the table are defined as follows: Note that all baseline methods cannot tackle the cold-start problem thus we adopt the similar strategy as eTrust by considering their top- X  similar existing users (items) based on their profiles. For example, for Mean , the rating of a new item is predicted by the average rating of its top- X  sim-ilar items. The parameters of all methods are determined through cross-validation. For eTrust, the parameters are set as: K = 20,  X  = 0 . 3,  X  = 0 . 05 and  X  = 0 . 1.

We notice that RMSE values for all methods are very close to each other. However, small improvement in RMSE terms can have a significant impact on the quality of the top few recommendation [13]. As reported in [13], when the performance improved from 0 . 9025 to 0 . 8870 w.r.t. RMSE, it gains more than 50% relative improvement in terms of top few recommendation. Mean obtains better performance than NN . There are two main reasons. First, most of the time, the majority of users actual ratings are close to the average and by closely examining the dataset, we find that more than 70% users give a score of 4 or 5. Second, NN treats all trust relations equally, however, people may trust a part of their trust networks more strongly than others. When considering heterogeneous trust strengths, MF+NN outperforms both MF and NN , further demonstrating that people trust their friends differently while only give similar ratings with their strongly trusted friends.

NN and MF+NN assume single and homogeneous trust relations, however, people with multi-faceted interests and experts of different types suggest multiple and heterogeneous trust relations [27]. mTrust considers multi-faceted trust re-lations and obtains better performance than MF+NN . eTrust Figure 6: RMSE w.r.t. the Number of Selected Top S imilar Users consistently outperforms all other methods and we believe that this improvement is contributed by exploiting the dy-namics of both trust relations and user preferences.
The performance of all methods degrades in N . How-ever, eTrust obtains much better performance than other methods, gaining 0 . 0592 absolute improvement in terms of RMSE. These results demonstrate that eTrust is more ro-bust to the cold-start problem. We also investigate how the performance of eTrust varies with the number of selected top-similar users or items,  X  , and the results are shown in Figure 6. The performance with  X  = 1 is always worst, even worse than that with all users or items. It suggests that users (items) with most similar profiles do not necessarily have most similar user preferences (item characteristics).
Trust plays an important role in helping collect reliable in-formation for users in online communities. If trust relations can be predicted accurately, users can use these relations to make decisions on the reliability of information. For eTrust, trust relations can be inferred by user preferences with esti-mated w and user specific bias { b i } by Eq. (5).
Data from T 11 are treated as the testing set, separated into two parts: E : trust relations established among ex-isting users and N : trust relations involved in new users, covering 23 . 51% of the whole trust relations at T 11 . We fol-low the metric used in [17] to evaluate the performance of trust prediction. Let A be the set of pairs of users, having no relations at time T 10 , and B denote the set of pairs of users, establishing trust relations at time T 11 . Each trust predictor ranks pairs in A in decreasing order of confidence and we take the first | B | pairs as the set of predicted trust relations, denoting as C . Then the prediction accuracy (PA) can be calculated as, where | X | denotes the size of a set.

The PA results are shown in Table 3 and the trust predic-tors mentioned in the table are defined as follows: Table 3: Accuracy of Trust Prediction in Epinions Trust propagation always obtains the worst performance. TP predicts trust relationship between two users when there are existing trust relationships connecting them indirectly. However, connectivity information is not always enough for correct trust prediction, especially when trust connectivity is not high enough for applying propagation techniques. For example, TP cannot be applied to the dataset N . Simi ob-tains better performance than TP , demonstrating that users with similar ratings or profiles are likely to trust each other. When considering both existing trust networks and simi-larity, Simi+TP outperforms both TP and Simi , indicating similarity information and existing trust networks are com-plementary with each other for trust prediction. eTrust performs consistently best. For example, eTrust gains 9 . 72% and 14 . 45% relative improvement in E and N , respectively. There are two main reasons: (1) eTrust per-forms trust prediction facet by facet, overcoming the prob-lem of the heterogeneous trust relations [27]; and (2) trust relations are inferred based on user current preferences. We observe that the performance of all predictors decreases in N . However, based on profile similarity, Simi still obtains 28 . 94% in terms of prediction accuracy, much larger than a random predictor whose accuracy is less than 1%. This ob-servation demonstrates the existence of homophily in trust networks: similar users are more likely to trust each other.
Trust has attracted more and more attention from com-puter science community [20, 5]. In recent years, many trust related online applications are proposed and we next briefly review some of them related to our work.

Rating Prediction. People are likely to seek advices from their trust networks thus trust networks are widely ex-ploited in the task of rating prediction. In [20], several meth-ods for incorporating trust networks are proposed to im-prove the performance of rating prediction. [22] studied and modeled the bidirectional effects between trust relations and product rating. Koren introduced some innovations to both latent factor models and neighborhood models. The fac-tor and neighborhood models can now be smoothly merged, thereby building a more accurate combined model [13]. It reported that a proper combination of these two models can significantly improve the prediction performance. All these methods do not consider the changes of user purchase inter-est. However, customer preferences for products are drifting over time [14]. Ding et al. presented a novel algorithm to compute the time weights for different items by assign-ing a decreasing weight to old data [4]. Koren proposed a methodology and specific techniques for modeling the dy-namics of user preferences in recommender systems [14]. It claimed that temporal dynamics in the data can have more significant impacts on accuracy than designing more com-plex learning algorithms.

Trust Prediction. Trust plays an important role in helping online people collect reliable information. If trust relations can be predicted accurately, users can use these relations to make decisions on the reliability of information. Guha et al. developed a formal framework of trust propaga-tion schemes [8]. It first separates trust and distrust matrix and then performs operations on them to obtain the tran-sitive trust between two nodes. The connection between trust and user similarity was studied in [32], and a strong and significant correlation is found between trust and sim-ilarity. The more similar two people are, the greater the trust between them is. In [3], rating similarity is exploited to enrich traditional trust propagation methods. This work demonstrated that predicting trust is more successful for pairs of users that are similar to each other if we combine the topology of the trust network with rating similarity.
Trust Strength Prediction is another direction of re-lated research, which differs from trust prediction. The for-mer focuses on modeling the strength of existed links rather than link existence. In [31] a latent variable model is de-veloped to estimate relationship strength from various in-teraction activities and user similarities. In this model, re-lationship strength is modeled as the hidden effect of user similarities and it also impacts the nature and frequency of online interactions. Au et al. show heterogeneous trust strengths of trust relations in product review sites and a modified matrix factorization technique is proposed to esti-mate strengths of trust relations. Trust, as a social concept, naturally has multiple facets, indicating multiple and hetero-geneous trust relations between users. Our previous work, mTrust, investigated multi-faceted trust relations between users. People place trust differently on different people and the work of mTrust demonstrates that trust strength can be inferred under the context of rating prediction [27].
In this paper, we study online trust evolution in the con-text of product review. By exploiting the correlation be-tween user preferences and trust relations, we propose a framework, eTrust, to understand the evolution of trust in an online world and apply eTrust to various online applica-tions such as rating prediction and trust prediction. Inter-esting findings are observed in our experiments using real-world data, Epinions; and eTrust can be applied to improve the performance of rating prediction and trust prediction. In our future work, we will continue our research on eTrust and investigate trust evolution in areas such as ranking evolu-tion, useful message recommendation [9] and linked feature selection [28].
 The work is, in part, supported by ARO (#025071) and NSF (#0812551). [1] J. Anderson, R. Michalski, R. Michalski, J. Carbonell, [2] C. Au Yeung and T. Iwata. Strength of social [3] P. Borzymek, M. Sydow, and A. Wierzbicki. Enriching [4] Y. Ding and X. Li. Time weight collaborative filtering. [5] H. Gao, G. Barbier, and R. Goolsby. Harnessing the [6] D. Gefen, E. Karahanna, and D. Straub. Trust and [7] J. Golbeck. Trust and nuanced profile similarity in [8] R. Guha, R. Kumar, P. Raghavan, and A. Tomkins. [9] X. Hu, N. Sun, C. Zhang, and T. Chua. Exploiting [10] M. Jamali and M. Ester. Trustwalker: a random walk [11] G. Jones and J. George. The experience and evolution [12] P. Karmakar and R. Roy. Evolution of trust and [13] Y. Koren. Factorization meets the neighborhood: a [14] Y. Koren. Collaborative filtering with temporal [15] J. Leskovec, D. Huttenlocher, and J. Kleinberg. [16] R. Li, B. Li, C. Jin, X. Xue, and X. Zhu. Tracking [17] D. Liben-Nowell and J. Kleinberg. The link-prediction [18] H. Liu, E. Lim, H. Lauw, M. Le, A. Sun, J. Srivastava, [19] Y. Lu, P. Tsaparas, A. Ntoulas, and L. Polanyi. [20] H. Ma, H. Yang, M. Lyu, and I. King. Sorec: social [21] P. Massa and P. Avesani. Trust-aware recommender [22] Y. Matsuo and H. Yamamoto. Community gravity: [23] M. McPherson, L. Smith-Lovin, and J. Cook. Birds of [24] A. Mishra and A. Bhattacharya. Finding the bias and [25] J. Nocedal and S. Wright. Numerical optimization . [26] M. Richardson and P. Domingos. Mining [27] J. Tang, H. Gao, and H. Liu. mtrust: Discerning [28] J. Tang and H. Liu. Feature selection with linked data [29] S. Tang. The social evolutionary psychology of fear [30] G. Van de Bunt, R. Wittek, and M. de Klepper. The [31] R. Xiang, J. Neville, and M. Rogati. Modeling [32] C. Ziegler and J. Golbeck. Investigating interactions of
