 Diana McCarthy  X  Roberto Navigli Abstract Since the inception of the S ENSEVAL series there has been a great deal of debate in the word sense disambiguation (WSD) community on what the right sense distinctions are for evaluation, with the consensus of opinion being that the dis-tinctions should be relevant to the intended application. A solution to the above issue is lexical substitution, i.e. the replacement of a target word in context with a stitution task and report an exhaustive evaluation of the systems participating in the task organized at SemEval-2007. The aim of this task is to provide an evaluation where the sense inventory is not predefined and where performance on the task would bode well for applications. The task not only reflects WSD capabilities, but also can be used to compare lexical resources, whether man-made or automatically created, and has the potential to benefit several natural-language applications. Keywords Lexical substitution Word sense disambiguation SemEval-2007 1 Introduction The English lexical substitution task was conceived as a means of examining the issue of word sense representation by giving participants a free reign over the lexical inventories used on a task that evaluates the inventories and also contextual disambiguation. The identification of the meaning of a word in context, namely word sense disambiguation (WSD), is a task with a long history in the computational linguistics field (Ide and Ve  X  ronis 1998 ). While it has been argued that word senses might boost applications such as information retrieval (Schu  X  tze and Pederson 1995 ; Stokoe et al. 2003 ) and machine translation (Chan et al. 2007 ; Carpuat and Wu 2007 ) there has been a long standing debate as to the appropriateness of predefined sense inventories for computational purposes (Palmer 2000 ; Hanks 2000 ; Ide and Wilks 2006 ; Kilgarriff 2006 ). Many are concerned with granularity because fine-grained distinctions are not easy to make by either humans or machines (Navigli et al. 2007 ; Navigli 2006 ; Palmer et al. 2007 ; Ide and Wilks 2006 ) although note that there are also indications that some more subtle distinctions might be useful for some applications (Stokoe 2005 ). Generally what is agreed is that the distinctions should befit the application. An outstanding problem is determining the appropriateness of an inventory for a given application, other than machine translation where the sense distinctions can be determined by the target languages (Chan et al., 2007 ; Carpuat and Wu 2007 ; Resnik and Yarowsky 2000 ).

While it is very encouraging that we are at last seeing some results that indicate the benefits of WSD for machine translation (Chan et al. 2007 ; Carpuat and Wu 2007 ), there are many monolingual applications that also stand to gain from being parallel data for making generalisations about sense distinctions for monolingual understanding because the sense distinctions made by translations depend entirely on which language pairs are used; ultimately any distinction that can be made will be made by some pair of languages (Palmer et al. 2007 ).

The lexical substitution task was proposed for SemEval-2007 following earlier ideas on the topic (McCarthy 2002 ). The task requires systems to produce a substitute word for a word in context. For example a substitute of game might be given for the word match in the following sentence:
After the match , replace any remaining fluid deficit to prevent problems of chronic dehydration throughout the tournament .

Crucially the systems are not given the possible substitutes for a target word in advance. This means that the inventory is as much part of the evaluation as the disambiguation component. It also means that systems can select the inventory of their choice or induce a new one and we can investigate the merits of different inventories.
There are a great many applications that either require or might benefit from systems to find a replacement word or phrase in context, for example summarisation or text simplification. Capabilities at the lexical substitution task would also be useful for systems that recognise paraphrases, for example, for question answering and textual entailment (Dagan et al. 2005 ).

The structure of this paper is as follows. In Sect. 2 we describe the task and how it was set up, with motivations for the choices that were made for the data sampling, annotation, sub-tasks and scoring. We finish the section with a description of the baselines provided for the task. In Sect. 3 we describe the participating systems with a detailed breakdown of the resources and techniques adopted by the systems. In Sect. 4 we provide an overview of the results and analysis by part-of-speech (PoS). We also provide analysis to contrast the ability of systems to find substitutes compared with the ability to determine the right substitute for the right context. We follow this with a section on post hoc analysis where we sought the judgements of fresh annotators after the SemEval-2007 evaluation period to quantify how much the systems were able to come up with good substitutes that the original annotators did not think of. 2 The task The lexical substitution task involves annotators and systems finding a substitute for a word in the context of a sentence. The motivation for our lexical substitution task was to allow a representation of meaning that does not necessitate a pre-defined listing of senses and where systems are free to select an appropriate representation for the task. By not prescribing the inventory, we avoid the need for mappings between inventories which can mask results and we provide a level playing field for systems which use a non-standard inventory such as those which automatically induce meanings (Schu  X  tze 1998 ; Pantel and Lin 2002 ). Lexical substitution involves both: 1. finding the set of candidate substitutes for the word 2. finding the best candidate given the context of the word token
There are a large number of pre-defined (Fellbaum 1998 ; Roget 1911 ; Barnard 1986 ) and automatically induced (Pantel and Lin 2002 ) inventories of word meaning which provide information on semantically related words. This task also provides a means of comparing performance of these different resources for finding good candidates. 2.1 The data The data for this task was collected for a sample 201 words: nouns, verbs, adjectives and adverbs. For each word we collected ten sentences containing that word in the given PoS. The data was selected from the English Internet Corpus ( EIC ) produced by Sharoff ( 2006 ) from the web ( http://corpus.leeds.ac.uk/internet.html ). This is a balanced corpus similar in flavour to the British National Corpus ( BNC ) (Leech 1992 ), though with less bias to British English, obtained by sampling data from the web. We selected EIC on the grounds that it was freely available and because it would reduce any bias due to systems over-training on this data, since currently most systems use the BNC (Leech 1992 ), Gigaword (Graff 2003 ) or Google Web 1T (Brants and Franz 2006 ). We removed noisy data (e.g. lists of items) automatically by selecting for sentences between 6 and 79 words long and where the target word was not capitalised (or all caps) when not at the start of a sentence. We used the PoS tags supplied with the corpus to obtain sentences for the word and PoS combination and then manually screened the sentences for problems.

The data set comprises 2010 sentences (201 target words each with 10 sentences). We released 300 for the trial data and kept the remaining 1710 for the test release. 1 The words included were selected either manually (70 words) from examination of a variety of lexical resources and corpora, or automatically (131) using information in these lexical resources. Words were selected provided that they have more than one meaning with at least one synonym. Since typically the distribution of meanings of a word is strongly skewed (Kilgarriff 2004 ), for the test set we randomly selected 20 words in each PoS for which we manually chose the sentences 2 whilst for the remaining words the sentences were selected randomly. 2.2 Annotation The annotators were five native English speakers from the UK; three women and two men. Three had a linguistics background and two did not. They were given full instructions 3 before annotating the entire data set in their own time on a web interface. They could log in and out at any point. Annotators were instructed to find a word as a replacement for the target word in context that preserves the meaning of the original word as much as possible. The interface displayed one sentence at a time with the target word highlighted in bold. The annotators were led through all the sentences for one word before the next and all received the sentences in the same order. The annotators could return to any sentence at any time and change their response (just as the systems can). Annotators were not provided with the PoS of the target (noun, verb, adjective or adverb) though the systems were.

The annotators were allowed to provide up to three substitutes however, they were instructed that all substitutes given for an item should be equally valid. They were instructed that they could provide a phrase if they could not think of a good single word substitute and also that they could use a slightly more general word if that is close in meaning. There was a  X  X  NAME  X  X  response if the target is part of a proper name and a  X  X 
NIL  X  X  response where the annotator could not think of a decent substitute. Items were responses for the item from the set of annotators. Annotators were permitted to consult a dictionary or thesaurus of their choosing, and if they did they were also asked to tick a  X  X  X sed dictionary X  X  check box which held its value for that word. Since a given sentence may include an occurrence of a target word within a multiword (phrase functioning as a word), the annotators were instructed to identify sentences where they felt the target word is an integral part of a phrase, and what that phrase was. This data was used for multiword subtasks which are not described here due to space limitations, see McCarthy and Navigli ( 2007 ) and McCarthy ( 2008 ) for further details. 2.2.1 An example In Fig. 1 , we provide an example of the substitutes given by annotators for the noun charge . The figure shows the substitutes provided by the annotators for each of the 10 sentences in the test data. Thus for the first sentence for charge :
In the event of a chemical spill, 3/4 X  X  of the children know that they should evacuate (leave area) as advised on radio, TV, or by people in charge . the substitutes selected by the five annotators were: Annotator 1 2 3 4 5 substitutes control, command control authority power command
Note that the frequency of substitutes can exceed the number of annotators (five) since each annotator can provide up to three responses if they feel all fit the sentence equally well. The variation of substitutes highlights the different meanings of the words, for example charge has meanings power , allegation and cost in the ten sentences. 2.2.2 Inter-annotator agreement We calculated inter-annotator agreement on the test set using 2 measures: 1. pairwise agreement between annotators ( PA ) 2. pairwise agreement with the mode, i.e. the most frequent response ( PA m )
Let H be the set of annotators, T be the set of test items with two or more responses (non NIL or NAME ) and h i be the set of responses for an item i 2 T for annotator h 2 H . This set is empty if the response from the annotator was  X  X  NAME  X  X  o r  X  X  empty responses from any pair of annotators in H for item i . Let f h i ; h 0 i g2 P i be one combination of annotators responses for a pair of annotators h , h 0 . So pairwise agreement between annotators is calculated as: frequency
Thus, pairwise agreement measures the average proportion of all the paired responses (in P i ) for which the two paired annotators gave the same response.
For each i 2 T we calculate the mode ( m i ) provided that there is a response more frequent than the others. The set of items where there is such a mode is referred to as T . Pairwise agreement with the mode is calculated as: where HT m is the set of all non empty h i for h 2 H for the items in T m .
Pairwise inter-annotator agreement ( PA ) was 27.75%. 73.93% of the test items had modes, and PA m was 50.67%. Agreement is increased if we remove one annotator who typically gave two or three substitutes for each item, which increased coverage but reduced agreement. Without this annotator, inter-annotator agreement was 31.13%, and 64.7% with the mode. Agreement is low compared to wrong answer for many items, but several possibilities where some may be better than others, reflected in the popularity of the choice among annotators. Table 1 shows the agreement figures by PoS, with the number of items in T (#) for each PoS and the percentage of items with a mode (4th column). Note that there was most agreement for adverbs, then nouns, verbs and the lowest agreement was for the adjectives, presumably because there is typically a larger variety of potential substitutes for adjectives. 2.3 The test data and gold standard From the 300 items released as trial data, there were 298 items in T , that is having at least two substitutes from the set of annotators. From the 1710 items released for the test set, 1696 of the test release remained after filtering items with less than 2 non NIL and non NAME responses and a few with erroneous PoS tags.

All substitutes were semi-automatically lemmatised unless the lemmatised version would change the meaning of the substitute.
 2.4 Scoring There are two separate subtasks which will be described below. 4 best the system gives as many guesses as it believes are fitting, but where the oot (out of ten) up to 10 guesses with no penalising for multiple guesses to cope
In the equations and results tables that follow we use R for recall, and Mode R annotators, provided that there is a majority. 5
As before, let H be the set of annotators, T be the set of test items with two or more responses (non NIL or NAME ) and h i be the set of responses for an item i 2 T for annotator h 2 H :
As explained in subsection 2.2.2 , for each i 2 T we calculate the mode ( m i ) i.e. the most frequent response provided that there is a response more frequent than the others. The set of items where there is such a mode is referred to as T m . Let A (and A ) be the set of items from T (or T m ) where the system provides at least one substitute. Let a i : i 2 A (or a i : i 2 A m ) be the set of guesses from the system for item i . For each i we calculate the multiset union ( H i ) for all h i for all h 2 H and for number of times it appears in H i .

For example, given an item (id 9999) for happy;a supposing the annotators had supplied answers as follows: Annotator 1 2 3 4 5 substitutes glad, merry glad cheerful, glad merry jovia then H i would be { glad glad glad merry merry cheerful jovial }. The res with associated frequencies would be glad 3 merry 2 cheerful 1 and jovial 1 . 2.4.1 best Measures This requires the best file produced by the system which gives as many guesses as the system believes are fitting, but where the credit for each correct guess is divided by the number of guesses. The first guess in the list is taken as the best guess ( bg ). We calculate recall ( R ) as the average annotator response frequency of substitutes found by the system over all items in T :
Mode recall ( Mode R ) is calculated as the proportion of matches between the best guess and the mode from the annotator X  X  responses over the number of items with a mode (| T m |):
A system is permitted to provide more than one response, just as the annotators were. They can do this if they are not sure which response is better, however systems will maximise the score if they guess the most frequent response from the annotators. For R the credit is divided by the number of guesses that a system makes to prevent a system simply hedging its bets by providing many responses. The credit is also divided by the number of responses from annotators. This gives higher scores to items with less variation. We want to emphasise test items with better agreement.
Using the example for happy;a id 9999 above, if the system X  X  responses for this item was glad; cheerful the credit for a 9999 in the numerator of R would be
For Mode R we use the system X  X  first guess and compare this to the mode of the annotators responses on items where there was a response more frequent than the others. 2.4.2 oot Measures Out-of-ten measures ( oot ) allow a system to make up to ten guesses. The credit for each correct guess is not divided by the number of guesses. This accounts for the fact that there is a lot of variation for the task and we only have five annotators. With ten annotators. There is no ordering of the guesses and the Mode scores give credit where the mode was found as any one of the system X  X  ten guesses. Our measures for oot are:
The above formulas are similar to Eqs. ( 3 ) and ( 4 ) (in contrast to the latter, the number of guesses | a i | for an item i , and the position of m i in a i do not influence the formulas for oot ). 2.5 Baselines We produced baselines using WordNet 2.1 (Fellbaum 1998 ), the Roget X  X  thesaurus (Roget 1911 ) and a number of distributional similarity measures.

For the WordNet best baseline we found the best ranked synonym 6 using the criteria 1 to 4 below in order: 7 1. Synonyms from the first synset of the target word, and ranked with frequency 2. Synonyms from the hypernyms (verbs and nouns) or closely related classes 3. Synonyms from all synsets of the target word, and ranked with the BNC 4. Synonyms from the hypernyms (verbs and nouns) or closely related classes
For the Roget baseline, the best ranking substitute was chosen among all possible synonyms of the target word ranked with the BNC frequency data (notice that in Roget X  X  thesaurus entries are not ranked).

The best baselines produced using distributional similarity measures were obtained by applying the measures to the contexts provided by grammatical relation data obtained from parsing the written portion of the BNC using the RASP system (Briscoe and Carroll 2002 ). Different grammatical relations were used for obtaining synonyms for target words with different PoS. For nouns we used verbs for which the nouns occurred as direct objects or subjects and adjective or noun modifiers. For verbs, we used the nouns acting as direct objects or subjects. For adjectives we used the modified noun or modifying adverb and for adverbs, we used the modified adjective or verb. We used the l1, jaccard, cosine, lin (Lin 1998 ) and a SD 8 (Lee 1999 ) distributional similarity measures. We took the word with the largest similarity (or smallest distance for a SD and l1) for best . 3 Systems There were eight participating teams. The teams all participated in both tasks, expect that MELB only participated in best and SWAG 2 only participated in oot .
We use the name of the team when referring to the system, however two teams (
SWAG and IRST ) each entered two systems. In the descriptions and results that follow, respectively. In this section we provide an overview of the systems to facilitate comparisons between systems when interpreting the results. For full details of the systems please use the reference to the SemEval-2007 proceedings given in Table 2 .
The systems all used one or more predefined lexical inventories for obtaining candidate substitutes. The inventories that were used by each team are indicated in Table 2 . The lexical inventories used are WordNet (Fellbaum 1998 ), 9 Roget X  X  New Millenium Thesaurus (Thesaurus.com 2007 ), the Macquarie thesaurus (Barnard 1986 ), the Oxford American Writer X  X  thesaurus (OAWT)(Lindberg 2004 ) and the Microsoft Encarta Thesaurus (an online encyclopedia and thesaurus). USYD was the only system to supplement candidates from predefined resources (WordNet and Macquarie) with candidates from corpus data (the Web 1T (Brants and Franz 2006 )), though the candidates from the predefined thesaurus were selected in preference to those from the corpus data.

Table 3 lists the corpus data used by each system. Most used search engine to obtain counts for disambiguation. The BNC was also used for deriving morphological information ( UNT ), for domain modelling using latent semantic analysis ( LSA )( IRST 1), for creating frequency vectors as representations for the senses in Roget ( SWAG 2) and for pointwise mutual information ( pMI ) to measure association between Macquarie categories and the target context and also frequency to rank the candidates within a category ( TOR ). Only one system ( UNT ) used sense-tagged data for WSD in a semi-supervised system (Mihalcea and Csomai 2005 ) which used SemCor (Miller et al. 1993 ) for training. One other system MELB used the frequency information from SemCor. In this case the labelled data was used for filtering infrequent synonyms from the list of candidates.

We will not attempt to duplicate the more detailed descriptions of the systems provided in the SemEval-2007 proceedings and referenced here in Table 2 . Clearly as well as the actual resources and approaches taken, there were other differences in the methods, for example any smoothing taken for the n-gram approach. We will highlight similarities and differences that seem pertinent when analysing the results in the following section. Note that UNT was a complicated system involving a combination of modules which used two thesauri, two n-gram models a semi-supervised WSD system described in (Mihalcea and Csomai 2005 ), a Wikipedia LSA model (Wiki) and Google and Altavista translation engines (TE) to translate the test sentence back and forth between English and French. 4 Results In this section we provide results of the submitted systems along with new analysis. In described above in Sect. 2.4 . In addition to the results provided in (McCarthy and Navigli 2007 ) we provide PoS analysis for both best and oot subtasks. We do not show the breakdown of systems for performance on items without a multiword target or substitute. In (McCarthy and Navigli 2007 ), we show that all systems did better when the target word was not identified by the annotators as being a multiword, and did better on all items when only considering the substitutes that were not multiwords.
The lexical substitution task has two main components: finding the candidate substitutes and selecting the one that best fits the target context. In two subsections, we examine the capabilities of the systems for both (i) finding substitutes for the target word and PoS and (ii) matching the substitutes to the sentence. In subsection 4.2 we compare the set of substitute words over all sentences for the target word and PoS combination from the gold-standard and the system bg (first choice i.e. best guess) responses. We only use the bg response from the best subtask to simplify the analysis. We examine the extent that the systems find the full set of substitute types from the annotators within the bg responses that they provide for the ten sentences for the word and PoS combination. We examine this in the context of the total number of bg substitute types that they provide for a word and PoS combination, and the extent that they find substitute types as bg that the annotators also find which are not found by the other systems. In subsection 4.3 we look at the disambiguation performance of systems where they have found the gold-standard mode within their set of bg responses for ten sentences for the word and PoS. That is, where the system has access to the best answer for the word and PoS and the issue is whether or not they can select the best substitute for the context. 4.1 Results using the task scorer In this section we show the results of all submitted systems on the best and oot tasks in two respective subsections. We only show recall, because most systems provided a response for all the items so the precision was only marginally better than recall. The exceptions to this were the USYD and particularly SWAG 2 and SWAG 1 which did not provide answers for all items and precision was a few percentage points better than recall. For each system, we provide separate scores for each PoS. We show all scores as percentages i.e. we multiply the scores in Sect. 2.4 by 100.

Firstly, it is important to stress that these were the results of the officially submitted systems. There were several apparent errors in the system responses which could easily be corrected. For example, the responses from USYD included non-word substitutes such as punctuation and digits which could be filtered as unlikely substitutes. TOR had many repetitions of the target word as the substitute, again these errors could have been removed with filtering. The IRST 2 system performed poorly on best because it supplied many answers to each item so credit was divided. The first answer was typically a good guess as shown by the better performance of IRST 2 on the mode scores. 4.1.1 Results for the best task The figures for best using recall and mode recall are given in Tables 4 and 5 respectively. In Table 6 we analyse the performance of all baselines on the best subtask for the recall measure to see the relative performance of the baselines by PoS. The last column displays the order of performance for the different PoS: nouns (n), verbs (v), adjectives (a) and adverbs (r).

We see from the results of best recall and mode recall in Tables 4 and 5 that systems that rely on WordNet seem to do very well on adverbs. This follows from the high performance of the WordNet baseline on this PoS shown below in Table 6 .
The best recall score (see Eq. 3 ) divides the credit for each answer by the sum of the responses of the human annotators (| H i |) to allow more credit to be given to the items with less variation, i.e. where there is most agreement. This means that the recall score for the best task depends on the frequency of the most frequent substitute from the annotators 10 and the total frequency of all responses from the annotators. The theoretical upper bound for this score is calculated as: That is, we concur with Yuret ( 2007 ) on the upper bound for the best measure (45.76%), though note of course that this upper bound is theoretical and assumes a human could find the most frequent substitute selected by all five annotators. The upper bound will undoubtedly be lower because of human variability on this task, see the PA m scores in Table 1 . For the mode scores 11 the theoretical upper bound is 100% because credit is not divided by | H i |, see Eq. ( 4 ). We discuss the oot upper bound in the section below.
 Table 6 shows how the baselines described in Sect. 2.5 perform by PoS. While the WordNet baseline outperforms those obtained using automatically acquired thesauri, it is interesting to note that although WordNet outperforms the automatic thesauri on verbs and adverbs, the Lin baseline is better on nouns and the a SD thesaurus is better on adjectives. Indeed three out of the five automatically induced resources outperform WordNet on adjectives and nouns. Furthermore the Lin automatically induced thesaurus obtained the best results on nouns even compared to all the participating systems, which all attempt disambiguation in contrast to this rudimentary baseline. This is probably due to the fact that rarer senses, which confuse systems more than they help, are not well represented in the nearest neighbours of distributional thesauri. The l1 thesaurus is the automatic thesaurus that comes closest to the WordNet performance on verbs. WordNet does better on verbs than adjectives, contrary to the results of the systems using it for candidates, this is probably due to the impact of ambiguity. Roget meanwhile outperformed many of the distributional baselines for verbs and adverbs, but did poorly on adjectives and nouns in particular. This is undoubtedly because Roget offers a vast amount of choice, particularly for nouns and adjectives, and since it does not have a sense order (as WordNet does) it performs poorly without some form of contextual disambiguation. 4.1.2 Results for the oot task The results for oot using recall and mode recall are shown in Tables 7 and 8 . It was noted when analysing the results for oot , that some systems ( IRST 2, USYD and TOR ) had included duplicates in the ten responses provided for some of the items. We had not anticipated this when designing the task and scorer. The effect of duplicates on the oot scores are that it is possible to get inflated scores which might then exceed 100% because the credit for each of the human answers ( freq res ) is used for each of the duplicates, so a system that provides duplicates for responses that the annotators have provided will do better. For mode scores, providing duplicates is more likely to reduce a system X  X  score because credit for each item simply requires a match between the mode from the annotators and any of the ten responses. Options for a match are reduced with duplicates. 12 While we could simply remove duplicates from the system responses, this would depart from the official scoring and would leave systems which did supply duplicates at a disadvantage. To avoid direct comparison with those that do not duplicate any responses, we partition the systems accordingly in the results reported here.

Duplicates in the oot task affect the theoretical upper bound. If one does not permit duplicates in the ten responses for any item then the theoretical upper bound for the oot task 13 is 100% because the entire set H i can potentially be found within 10 responses then this increases the theoretical upper bound for this task since if one used the most frequent word type in H i for all ten answers one would obtain ten times the best upper bound equation ( 7 ). That is the theoretical upper bound is 457.6%. Note however that the systems that have included duplicates may have done so unwittingly, and they do not do so for all items. In Tables 7 and 8 we have given the results of IRST 1, USYD , TOR before the others as these systems include duplicates. The number of items with duplicate substitutes in the ten responses is shown in the column IwD. 4.2 Overlap analysis The lexical substitution task involves both finding the substitutes and disambigu-ation of the target in context to find an appropriate substitute given the context. This subsection analyses how the systems did at finding the substitute types across all sentences using the union of all responses for the word and PoS given by the annotators i.e. the distinct word types in H i . 14 For this  X  X verlap X  analysis we only looked at items where the target word was not considered to be a multiword and at single word substitutes (from both systems and humans). For each word and PoS combination ( wp ) we found the union of all substitute types from the annotators over the ten sentences for that word and PoS ( GU wp ) and the union from the system for the word and PoS ( SU wp ). To simplify the analysis, for SU wp we just took the first guess from the systems on the best task ( bg ) that is used for scoring best mode recall ( Mode R ).
 We then calculated the average intersection between these two sets: where WP is the full set of word and PoS combinations in the test data. This figure is given in the second column of Table 9 . We also calculated the average number of substitutes types per word and PoS combination over the ten sentences for each system, again using the first response ( bg ) of the system. This calculation is shown as #subs in Table 9 and reflects the variation in responses i.e. did the system vary the best guess or was a given candidate often applied in many different contexts. The final column in Table 9 ( TypeOverlap uniq ) is the average number of j SU wp \ GU wp j that were not found in the responses from ANY of the other systems. This demonstrates the original contribution of the system in finding good candidates that other systems failed to find.

Performance on these metrics is related to the resource used, rather than the sentences which will determine the score because we are not considering the token frequency of annotator responses, but the union of the substitute types. Both KU and USYD systems obtain a higher score on Type Overlap uniq reflecting the fact that they both use resources for obtaining substitutes (Roget and the Web 1T) that are not used by other systems in the best subtask. From the # subs we see that systems such as
KU , USYD and IRST 2 were quite varied in their responses, with USYD providing the most variation. These systems also all used the Web 1T corpus for matching context to substitute, albeit in different ways. The UNT system also used this corpus for n-gram modelling, but alongside many other resources. While UNT did not show such a varied response, it was clearly adept at matching context to candidate given its high ranking on the best and oot recall metrics. We shall turn to the disambiguation capabilities of systems in the next subsection. 4.3 Disambiguation analysis In this section we analyse the results so as to demonstrate the disambiguation capabilities of the systems for sentences where they have found the best mode within SU wp . We do this in order to focus on disambiguation, rather than whether the system came up with the substitute as a candidate. We calculate precision using the bg compared to the mode from the annotators on: All Items where all systems found the mode within their SU wp (NB there were Sys Items where the given system found the mode within its SU wp That is, precision is calculated as: and
As in the previous subsection, we restrict ourselves to items where the target guess.

The results are displayed in Table 10 . As predicted, given the high scores for the task yet low variation per candidate, UNT shows optimal performance at disambig-uation for items where it had found the candidate within SU wp . Typically systems with more variation will have a harder disambiguation task on items where the mode is within their SU wp . The other systems that use a search engine query for disambiguation ( HIT and MELB ) also do well on Sys precision. The systems TOR and IRST 1 that restricted training to the BNC performed lower than those that used either the Web 1T or a search engine for disambiguation. It would be interesting to know if they would have outperformed an n-gram approach, such as KU , if the n-grams were obtained from the BNC . The USYD approach also does not do as well on Sys . This may be because it has to choose between a great many candidates (see the #subs column in Table 9 ) or it may be because the pMI filtering it performs on the Web 1T does not provide such good disambiguation as the n-gram approach. 4.4 Post hoc analysis The task of choosing a lexical substitute for a given word is not clear cut and there is inherent variation in the task. It is likely that there will be synonyms that humans do not think of. We therefore conducted a post hoc analysis after obtaining the results from the systems to check if the synonyms selected by the original annotators were better, on the whole, than those in the systems responses. We randomly selected 100 sentences from the subset of items which had more than two single word substitutes, no NAME responses, and where the target word was not one of those identified as a multiword by two or more annotators. We then mixed the substitutes from the human annotators with those provided by the systems for the best task. Three fresh annotators were given the test sentences and asked to categorise the randomly ordered substitutes for each sentence as good, reasonable or bad. These post hoc annotators were all native English speakers from the UK. When collating the post hoc responses, we took the majority verdict for each substitute. If there is one reasonable and one good verdict, then we categorise the substitute as reasonable. The percentage of substitutes for systems (sys) and original annotators (origA) categorised as good, reasonable and bad by the majority vote of the post hoc annotators are shown in Table 11 . The substitutes from the humans have a higher proportion of good or reasonable responses by the post hoc annotators compared to the substitutes from the systems.

Table 12 gives the percentage of substitute types under each category where the substitute was found by: (i) ONLY original annotators (ii) ONLY systems (iii) both. This measures how much the systems find substitutes that the humans did not think of, and vice versa. From these figures we can verify that systems are capable of generating many more substitutes than humans but these are not typically of such high quality. Only a very small percentage of responses from the systems ONLY are liked by the post hoc annotators. This is a difficult task without cut and dried answers and the original annotators do not always provide responses that are liked by the post hoc annotators, however the proportion of disliked substitutes is far less considering the substitutes only from humans (28%) compared to those only from systems (82%). If we look at these examples where only humans provided the substitute and the majority of post hoc annotators categorised the human annotation as  X  X ad X  we find many that look reasonable to us, for example:
Appointed by the CDFA, public members are chosen for their usefulness in helping the commodity board carry out its purpose and to represent the public interest. The annotation judged as  X  X  X ad X  X  was management which seemed reasonable to us.
There were 52 such substitutions 15 from the original human annotators (not systems) deemed  X  X  X ad X  X  by the post hoc annotators. Of these cases, 50 were substitutes provided by only one annotator of the five, and the remaining two cases involved substitutes provided by only two of the original annotators. Furthermore, in 38 of these 52 occurrences one of the three post hoc annotators was of a different opinion: 31 times the outlier annotator selected  X  X  X easonable X  X  and 7 times they selected  X  X  X ood X  X  (as in the board example above). While there are still 14 substitutes provided only by humans which all post hoc annotators disliked, it is much easier to cases where the substitute was selected by two of the original annotators, at least one of the post hoc annotators gave a  X  X  X easonable X  X  verdict. 5 Conclusions and future directions We think this task is an interesting one in which to evaluate automatic approaches of capturing lexical meaning. There is an inherent variation in the task because several substitutes may be possible for a given context and different choices might be equally valid even though they were not selected by our human annotators, 16 though as we show from the post hoc evaluation, only 18% (3% good and 15% reasonable) of substitutes from the systems that were considered good or reasonable were not elicited by our original five annotators. The inherent variation makes the task hard and scoring is less straightforward than a task which has fixed choices. On the other hand, we believe the task taps into human usage of words to convey meaning and we hope that computers that perform well on this task will have potential in NLP applications. Since a pre-defined inventory is not used, the task allows us to compare lexical resources as well as disambiguation techniques without a bias to any predefined inventory. It is possible for those interested in disambiguation to focus on this, rather than the choice of substitutes, by using the union of responses from the annotators in future experiments. References
