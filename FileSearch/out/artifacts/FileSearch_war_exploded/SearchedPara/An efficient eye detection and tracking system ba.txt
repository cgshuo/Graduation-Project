 fi 1. Introduction
In recent decades, human eye detection and tracking has emerged as a challenging task that spans multiple disciplines such as image analysis and computer vision. This is due to the wide range of applications in vision based man  X  machine interaction technology. Robust, dynamic, and real-time eye-tracking provide new means for man  X  machine interaction that can greatly improve the underlying user experience. The main idea is to make the computer perceive various natural user communicative cues such as gaze directions to activate or command devices. New applica-tions for eye-tracking communication interfaces are being con-sidered in complex technological environments, such as hospital operating rooms, airplane cockpits, and industrial control units ( Kim et al., 2000 ; Park and Lim, 2001 ). Consumer applications have been developed for assisting people with disabilities ( Betke et al., 2002 ; Chau and Betke, 2005 ), monitoring driver vigilance ( Ishikawa et al., 2004 ; Ji and Yang, 2001 ; Wang et al., 2010 ), gaze tracking for gaming design ( Corcoran et al., 2012 ), and for identifying Website Keyobjects ( Vel X squez, 2013 ).

Eye detection and tracking techniques can be classi fi ed into two main categories: intrusive methods (head-mounted) which require direct contact with the eyes and non-intrusive (remote) methods which avoid any physical contact with the user. Typically non-intrusive methods are more attractive since the camera and the light sources are placed at a distance from the user, usually below or around the computer screen, making the user less constrained to uncomfortable equipment. In non-intrusive meth-ods, eye detection is fi rst performed. Various methods of eye detection have been proposed to detect and localize eyes in still images ( Kumar et al., 2002 ; Motwani et al., 2004 ; Tivive and Bouzerdoum, 2005 ; Turkan et al., 2008 ; Wu and Zhou, 2003 ; Zhou and Geng, 2004 ; Zhu et al., 2002 ; Wang and Chen, 2006 ). Turkan et al. (2008) proposed a method for eye localization in face images with frontal pose and upright orientation. In this method, a given face region is fi ltered by a highpass wavelet-transform fi Candidate points for each eye are detected after analyzing hor-izontal projections and pro fi les of edge regions in the highpass fi ltered image. All the candidate points are then classi fi support vector machine (SVM). Locations of each eye are then estimated according to the most probable ones among the candidate points. Once the locations of the eyes are detected, tracking them in successive images is performed. Broadly speak-ing, non-intrusive methods can be classi fi ed into active infrared (IR) illumination based approaches and traditional image-based eye tracking passive approaches. The former approaches are simple and effective. They exploit the spectral properties of the pupil under near IR illumination. Many techniques ( Ebisawa, 1998 ;
Ji and Yang, 2001 ; Morimoto and Flickner, 2000 ) have been developed based on this principle. They are based on an active
IR light source to produce the dark or bright pupil effects. Most of these methods require distinctive bright/dark pupil effect to work well.

On the other hand, traditional image-based eye tracking approaches detect and track eyes based on exploiting the differ-ences between frames and assume that the eyes have distinctive properties in its shape and intensity dissimilar from other facial features. According to Zhu and Ji (2005) , traditional image-based approaches are classi fi ed into three categories: Appearance based methods ( Bacivarov et al., 2008 ; Kawato and Tetsutani, 2004 ; Zhu and Ji, 2005 ), feature based methods ( Lucas and Kanade, 1981 ;
Sirohey et al., 2002 ; Tian et al., 2000 ), and template based methods ( Akashi et al., 2007 ; Al-Mamun et al., 2009 ; Tan et al., 2003 ). In appearance-based methods, the eyes are detected based on their photometric appearance. These methods require large sets of training data for training the classi fi er (e.g. neural network or the support vector machine). Training data should represent the eyes of the different subjects under various face orientations and illumination conditions. Appearance-based methods can be com-bined with active IR illumination methods as in ( Zhu and Ji, 2005 ) to solve common eye tracking issues such as the presence of glasses and varying lighting conditions. Methods based on active appearance models were proposed for eye tracking. Bacivarov et al. (2008) proposed a statistical active appearance model (AAM) designed to recover the eye blinking parameters of an eye model as well as tracking the location of the eyes in image sequences for various subjects with various expressions or poses.
Kawato and Tetsutani (2004) presented a new algorithm where blinking can be detected based on the differences between two consecutive video frames. Head movements are also taken into consideration. For eye tracking, a template of  X  Between-the-Eyes  X  is used instead of the eye template.

In the feature-based methods, the eyes are tracked based on exploring their characteristics to identify a set of distinctive features around the eyes such as edges and color intensity variations in the iris and eye corners. Tian et al. (2000) proposed a method of tracking the eye location, detecting the eye state, and estimating the eye parameters for each frame in a video sequence.
Manual initialization of the eye template in the fi rst frame is required in this method. The iris is detected and tracked by intensity and edge information and then the eye state is obtained by the iris detection. If the iris is detected, the eye is open. Then, for open eyes eyelid center points are tracked using the tracking method developed by Lucas and Kanade (1981) . According to
Sirohey et al. (2002) , methods of tracking the motion of the head and the independent motions of the irises and upper eyelids in an image sequence are described. These methods require no manual initialization and do not need any prior assumptions about the relative positions of the irises and eyelid.

In template-based methods, a generic eye model is initially designed and template matching algorithm is utilized to search the image for the reference eye template. Considering the possible changes in the face orientation, conventional template matching technique cannot be applied even when the templates are updated frame-by-frame with patterns of current located positions. This is because the tracking points will gradually migrate out from the eyes. Therefore the tracked points do not always represent the centers of the eye pattern. Deformable template-matching ( Tan et al., 2003 ) is a variant of the traditional template matching algorithm in which the reference eye template is allowed to translate, rotate and deform to fi t the best representation of the eye shape in the image. Although this method can yield high tracking accuracy, it is computationally expensive, and requires a good image contrast for the method to converge correctly. In
Al-Mamun et al. (2009) an eye detection algorithm based on genetic deformable template matching was presented to avoid exhaustive blind search associated with traditional template matching techniques. Akashi et al. (2007) proposed a population inheritance genetic algorithm (GA) for eye detection and tracking to overcome the high computational cost associated with applying
GA with the deformable template matching in each frame in a video sequence. These methods do not require any prior knowl-edge about the eye geometry or potential eye locations on the facial image as in Turkan et al. (2008) and Bacivarov et al. (2008) since they use arti fi cial eye templates.
 attention in the last decade due to their robustness, fl exibility, and the increasing demand on their applications. Particle swarm optimization (PSO) ( Eberhart and Kennedy, 1995 ; Eberhart and
Shi, 2001 , 1998 ) is one of the popular swarm intelligence based methods that has been applied successfully as an optimizer in many domains such as training arti fi cial neural networks, linear constrained function optimization, wireless network optimization, data clustering, and many other areas where GA can be applied. In
Perez et al. (2010) a PSO-based method was proposed to generate templates for frontal faces and iris localization in real time. The method was applied to frontal view faces to generate a set of templates for different face sizes. Eye positions were used to align faces in order to make the PSO algorithm converge to a solution.
One alternative for this method is to use faces from different subjects to generate a generic PSO template. Another alternative is to create personalized templates by using a set of faces from the same subject to create the PSO templates. The method also allows the control of the maximum number of points in the template thus reducing the computational time, allowing real-time processing.
The PSO templates were tested and compared to other methods based on anthropometric templates and Adaboost for face locali-zation. Furthermore, it was compared to a method using combined binary edge and intensity, and to a method based on SVM classi fi ers for iris localization. Results showed that the PSO templates exhibit better spatial selectivity for frontal faces result-ing in a better performance in face and iris localization. or PSO used for eye detection ( Al-Mamun et al., 2009 ; Perez et al., 2010 ) and eye tracking ( Akashi et al., 2007 ) have some limitations.
The ef fi ciency of these methods is limited especially under various undesirable conditions such as eye-blinking, partially closed eyes, and oblique face orientations. Furthermore, they are inappropriate for real-time implementation since they are computationally expensive. To overcome the shortcomings of these methods, in this paper an ef fi cient eye detection and tracking system is proposed. The proposed system combines PSO-based inheritance deformable multiple template matching and adaptive block matching search algorithms. The former algorithm is used to the center of an eye position within an image in a video sequence.
Since this step is the most computationally expensive, it is dynamically performed when the eye position could not be detected by the latter algorithm. In the proposed system, multiple templates are used and the system can select among them to increase the detection accuracy. For eye tracking, adaptive block-based matching search algorithm is presented to reduce the computational complexity required to perform the PSO-based algorithm. In this algorithm, the appropriate size of search area is predicated from the previously tracked group of frames (GOF).
Therefore, the predicted value may vary from a GOF to another during the eye tracking process and it can then signi fi cantly affect the performance of the algorithm.

The rest of the paper is organized as follows: the deformable template matching algorithm is presented in Section 2 .In Section 3 the proposed eye detection and tracking system with multiple template matching and block-based matching search algorithm is explained. The experimental results are presented in Section 4 .
Finally, the paper is concluded in Section 5. 2. Deformable template matching
Template matching corresponds to the process in which a reference template is searched for in an input image to determine its location and occurrence ( Akashi et al., 2007 ; Al-Mamun et al., 2009 ; Tan et al., 2003 ). Over the last decade, different approaches based on searching the space of transformations using a measure-ment similarity have been proposed for template based matching.
The canonical template matching algorithm matches a fi xed-size template in a prede fi ned orientation which makes it appropriate for tracking rigid objects. However, the eye cannot be regarded as a rigid object because it is deformable and the matched region may not have the same size or orientation of the base template.
Deformable template-matching is an effective method to deal with the variation of these features because of its inherent ability to modify the reference pattern. The template size and the rotation angle are adjusted to fi nd the search area that best matches the reference template. Given an m n image I and an p q reference template T such that p o m and q o n then template matching is de fi ned as a search method which fi nds out the portion in I which corresponds to the maximum correlation. The match is de fi terms of the normalized cross correlation coef fi cient (NCC)  X  described in Al-Mamun et al. (2009) as follows:  X   X  x ; y  X  X  where f f  X  T  X  c ; t  X  T 0 ;
I  X  x ; y  X  X  1 pq  X  for c  X  f 1 ; 2 ; 3 ... ; p g ; t  X  f 1 ; 2 ; 3 ; ... ; q g ; x  X  f 1 f 1 ; 2 ; 3 ; ... ; n q  X  1 g
In the template matching algorithm the template T slides over I and the values of  X  are calculated at each coordinate ( x , y ).
The value of the cross-correlation coef fi cient  X   X  [ 1, 1]. The values of 1 and 1 indicate a complete agreement and disagreement between T and I ( x , y ), respectively. The point associated with the maximum correlation with the template speci fi es the detected eye center.

However, this method is computationally expensive and can hardly achieve real-time performance. For a template with L degrees of freedom with variation ranges { R 1 , R 2 , R 3 deformable template matching has a worst case complexity of O ( R
R
R 3 ... R L mn ). This time is considerably large especially for real-time implementation. Therefore, deformable template match-ing was used with genetic and particle swarm algorithms not only to achieve scale and orientation invariance but also to reduce time required for template matching. This section brie fl y reviews the deformable template matching techniques based on genetic and
PSO algorithms that are utilized in the proposed eye tracking system. 2.1. Genetic-based deformable template matching
GA is an optimization paradigm inspired by natural genetic evolution of genes. GA is not new in pattern analysis and classi fi cation, with detailed studies and applications discussed in Goldberg and Holland (1988) , Eberhart and Shi, (1998 , 2001 ), Suganthan (2002) , and Bandyopadhyay et al. (2007) . The initial step in applying GA to a particular problem is the encoding of the feasible solutions of the problem into a string structure known as a chromosome. GA starts with a population of randomly generated solutions (chromosomes) that evolves through a sequence of generations (iterations). In each generation the objective function determines the fi tness (goodness) of each chromosome and based on these values, some of them are selected for reproduction. The number of offspring  X  s reproduced by an individual is directly proportional to its fi tness value, thereby embodying the natural selection procedure. Highly fi tted chromosomes are selected for reproduction whereas weaker individuals are eliminated. Genetic operators such as crossover and mutation are applied to rando-mize the search process to prevent it from being trapped in local optima. The new offspring  X  s constitute the next generation and the procedure is repeated until the termination criterion is satis
In eye detection, an image may be rotated and that means the head and eyes are also rotated. Therefore, deformable template matching was used with GA in Al-Mamun et al. (2009) and Tan et al. (2003) to achieve scale and rotation invariance of an eye template. 2.2. PSO-based deformable template matching
PSO proposed by Eberhart and Kennedy (1995) is a meta-heuristic algorithm that is based on the phenomenon of collective intelligence inspired by the social behavior of bird fl ocking or schooling ( Eberhart and Shi, 1998 , 2001 ). The search process in PSO exploits a combination of deterministic and probabilistic rules that depend on information sharing among the population mem-bers to enhance the search process. However, unlike GA algorithm, PSO has no evolution operators such as crossover and mutation. Each particle in the search space evolves its candidate solution over time, making use of its private memory and knowledge attained by the swarm as a whole. Furthermore, the information sharing mechanisms in GA and PSO are considerably different. In GAs, chromosomes share information with each other, so the whole population moves like one group towards an optimal area. In PSO, the global best particle found among the swarm is the only information shared among particles. It is a one-way information sharing mechanism. Computational time of PSO is signi fi cantly less than that of GAs because all the particles in PSO tend to converge to the best solution rapidly ( Eberhart and Shi, 1998 ).
PSO is initialized with a population (swarm) of randomly generated processing elements conceptualized as particles. Each particle, fl ies through the D -dimensional solution space of the optimization problem searching for the optimum solution and thus its position represents a candidate solution for the problem. Evolution is driven by a fi tness function de fi ned to evaluate the quality of the acquired solution. The fi tness function is evaluated for each particle in the swarm and is compared to the fi tness of the best previous result for that particle and to the fi tness of the best particle among all particles in the swarm. After fi nding the two best values, the particles evolve by updating their velocities and positions according to the following equations: V  X  t  X  1  X  X   X  : V i  X  t  X  X  c 1 : r 1  X  P ibest  X  t  X  X i  X  t  X  X  X  c X  X  t  X  1  X  X  X i  X  t  X  X  V i  X  t  X  1  X  for i  X f 1 ; 2 ; ... ; reached solution and p gbest is the global best solution in the swarm.
Constants c 1 and c 2 are cognitive and social parameters that are bounded between 0 and 2. r 1 and r 2 are two random numbers, with uniform distribution in [0,1]. V max is the maximum velocity that bounds the velocity vector, where V max  X  V i ( t + 1 )
Eq. (2) the fi rst component  X  represents the inertia of pervious velocity. Suitable correction of  X  provides a balance between global and local explorations and exploitations. It also signi reduces the number of iterations required to fi nd a suf fi optimal solution. An inertia correction function called inertia weight approach (IWA) ( Eberhart and Shi, 2001 ) is utilized in this work as follows:  X  where  X  min and  X  max are the minimum and maximum values of the inertia weight, Itr max is the maximum number of iterations, and Itr is the current iteration. The second component in (2) repre-sents the  X  cognitive  X  component representing the private experi-ence of the particle itself; the third component is the  X   X  component, representing the cooperation among the particles. The recursive steps will go on until termination condition is reached.
PSO-based deformable template matching algorithm can be used to detect the eye position in an arbitrary image. To do so, four parameters are used to describe the rectangular window identify-ing the eye region. The parameters are the 2D coordinates of the central point of the template ( x, y ), the scaling factor k, and the rotation angle  X  . These parameters build up a four-dimensional search space in which each particle in the swarm presents a candidate search window with speci fi c values of parameters, which can be de fi ned as: P  X f p i j p i  X  x i ; y i ; k i ;  X  i  X  ; for i  X  1 ; 2 ; ... ;
The initial population of particles encoded as described in (5) is randomly generated. These particles are evaluated according to their fi tness values calculated in terms of the NCC described in (1).
After this, the next generation is created by the PSO position and velocity update operators. The PSO-based deformable template matching algorithm is summrized in Fig. 1 .
 makes the search algorithm computationally expensive. To develop an ef fi cient searching strategy it is reasonable to assume that the motion is continuous under tracking situations. Popula-tion inheritance between successive frames is utilized to accel-erate the initialization of particles. Suppose p b  X  x b ; best particle in the previous frame, the initialized particles in the current frame p i  X  x i ; y i ; k i ;  X  i  X  should be around p offsets in each dimension. Therefore, by dispersing particles in a relatively smaller region instead of the whole space, searching procedure can be de fi nitely accelerated. 3. Proposed eye detection and tracking system canonical GA-driven template matching algorithm (initially designed for still images) to video sequences, it is dif fi achieve ef fi cient and fast tracking. To avoid this problem, the population inheritance GA ( Akashi et al., 2007 ) was proposed. In this scheme, the genetic information that is evolved in the previous frame is used in the next frame. In fact, the initial population for the current frame is generated with the fi population achieved in the previous frame. This population inheritance property can signi fi cantly reduce the processing time. single static eye template. Using the same template throughout the entire tracking process makes it fails particularly under undesirable dynamic conditions such as eye-blinking, partially closed eyes, or changes in the face orientation as shown in
Fig. 2 . Even updating the templates frame-by-frame cannot follow these changes since the tracking points migrate out from the eye positions. The accuracy detection is then severely reduced. There-fore, in order to reduce computational cost and increase the detection accuracy, we propose eye detection and tracking system that switches between PSO-based inheritance deformable multi-ple template matching and adaptive block matching search tech-niques. Fig. 3 presents the block diagram of the proposed system.
Detailed description of the proposed system is presented in the following sub-sections. 3.1. PSO-based inheritance deformable multiple template matching
The objective of this stage is to fi nd the initial position of the eye center within a frame in the video sequence. This is achieved by using the PSO-based inheritance deformable multiple tem-plate matching algorithm on the fi rst frame of the video sequence. In subsequent video frames the block match search algorithm will be used to search for the eye position. PSO-based inheritancedeformablemultipletemplatematchingwillbe performed only when the eye position cannot be detected by the adaptive block matching search algorithm. This is different from other existing implementations ( Bacivarov et al., 2008 )in which the deformable template matching algorithm is repeated periodically every 10  X  30 frames. Three different templates are used in the system. Two of them are fi xed and one is a dynamic template which is updated during the eye tracking process. The main bene fi t of using multiple templates and selecting among them is to increase the detection accuracy.

With this algorithm, the initial template (the fi rst fi xed eye template) shown in Fig. 4 (a) is used to detect the initial eye position in the fi rst video frame. After detecting the eye position, the updated template is created by cropping the region around the detected eye position. For the next video frames if an eye center location cannot be detected by the adaptive block match-ing search algorithm as mentioned below, PSO-inheritance deformable multiple template matching is performed. The updated template is created using the template adaptation procedure described in Fig. 5 . It is based on calculating two criteria: fi rst, the correlation between the updated template and the current frame. Second, the distance between the eye center positions for two successive video frames d x and d y .Ifthedistanceis paper as (20, 20) and the correlation is greater than or equal a threshold value ( E )chosenas0.95,thetrackingisregardedas successful and the updated template is created by cropping the region around the detected eye center.

Otherwise, if the distance is out of the range, the template selection procedure is performed. In this case we select among the fi rst fi xed template, the updated template, or the second fi xed template (closed eye) shown in Fig. 4 (a), (b), or (c), respectively. This can be done by performing PSO inheritance deformable template matching algorithm using the updated template to calculate a new eye position. If the new eye position is within the range, the updated template is then adapted by cropping the region around the detected eye center. Otherwise it is updated by the second fi xed template. If after these attempts we cannot fi nd the appropriate template, the fi rst fi xed template is then selected. That means the updated template contains the fi rst fi xed template, the second fi xed template, or the region cropped around the detected eye center. In other words, the updated eye template is continuously updated by the eye successfully detected from the PSO inheritance deformable template matching or by the fi rst/second templates to avoid error propagation within the adaptive block matching tracker. Whereas, the fi rst and second fi xed templates remain unchanged and used in the entire system.

Note that, the values for ( Pd x , Pd y )and E are chosen heur-istically. The prede fi ned pixel range is set to (20, 20) as it was found that for fast video seque nces the displacement between two successive frames does not exceed this range. Moreover, the threshold value is set to 0.95 since it was found that very high correlation scores of about 0.9  X  1.0 can be obtained when an eye is in the normal open state as in the template adaptation stage ( Fig. 5 ) or when the tracking is successful as in the block matching stage ( Fig. 3 ). The scores below this range mean the tracker has lost the location of the eye. Therefore, the chosen values for the pixel range and the threshold guarantee the best estimation of the eye center location. Otherwise the system must be reinitialized to relocate and track the new position of the eye.
 3.2. Adaptive block-matching search algorithm
The block-matching algorithm is widely used in various kinds of video applications for its simplicity and ef fi ciency ( Li et al., 1994 ). Each eye is tracked using the block-matching search algorithm in order to reduce the computational complexity asso-ciated with performing the PSO inheritance deformable multiple template matching algorithm. The position of the eye center ( x ) within the current frame ( f t ) is obtained using the position of the eye center ( x t 1 , y t 1 ) of the previous frame ( f t 1
Instead of performing a full search in the current frame, the search is performed in the squared search area, which is up to pixels in horizontal and vertical directions around the detected eye position in the previous frame. The search is used to evaluate the correlation at every pixel in the search area and to select the pixel location that has maximum correlation. In other words, the full search is used to fi nd the best match point (candidate location) ( x , y t ) with the updating template in a square region of S S of the detected candidate location. The correlation obtained at the candidate location is tested. If it exceeds a fi xed prede old value ( E ), the candidate location is accepted as the position of the eye center for the current frame, otherwise PSO inheritance deformable multiple template matching algorithm is executed.
It should be mentioned that the size of search area affects the performance of the block-matching algorithm. Increasing the size of search area can provide a good match but at greater computa-tional cost. For slow motion video sequences, small search areas are appropriate whereas large search areas are required for fast video sequences. Moreover, the speed of motion could be varied within the different frames of a single video sequence. Therefore, using a fi xed size for the search area during the eye tracking process will result in an unnecessary increase in the computa-tional time especially for slow video sequences. To overcome this problem, we propose a method to predict the suitable size of search area during the eye tracking process. For the block-matching algorithm with adaptive search area (named adaptive block matching algorithm), the value of the search area is predicted from the N previously tracked frames as follows: the initial value of the search area is set to a small selected value (i.e.
S  X  S min ). It is then updated after tracking N successive frames according to
S x  X  ^
S  X  max  X  S x ; S y  X  X  7  X  where ^ S is the predicted value of the search area and the distance between the eye center positions for two successive video frames in the horizontal and vertical directions are d x  X  x t x d y  X  y t y t 1 , respectively. The suitable value of search area S is then calculated as follows: S  X  where S min and S ma x are the minimum and maximum values of the search area. 3.3. Detection accuracy locations are compared with the exact eye center locations based on a relative error measure proposed by Jesorsky et al. (2001) . annotation), and x t and y t be the detected eye position. The relative error of this estimation is measured according to the formula:
D  X  jj X  x t where || || denotes the norm and d rl is the total distance between the centers of the right and left eyes (manually annotated). In a human face, the width of a single eye equals to the distance between inner eye corners. Therefore, half an eye width approxi-mately equals to a relative error of 0.25. Thus, in this paper, we considered a relative error of D o 0.25 to be a correct estimation of eye positions. 4. Experimental results 4.1. Implementation details of the proposed eye detection and tracking system. These experi-ments were conducted on the VidTIMIT Video Dataset ( Sanderson and Lovell, 2009 ) which comprises video recordings of different 43 individuals reciting short sentences. The video sequences in this dataset contain different undesirable eye tracking conditions such as eye-blinking, partially closed eyes, and diverse head poses. The size of the target image is 512 384 pixels. These experiments were performedona2.27GHzprocessorwith8GBofRAM.Theproposed system can be applied directly to whole size images. However, to reduce the processing time, a prep rocessing stage was performed to crop the facial region from an input image in a video sequence using askincolordetectionalgorithm( Wang and Yuan, 2001 ). The obtained facial region is then resized into a 160 200 pixel image to make the system scale-invariant.

In order to demonstrate the ef fi ciency of the PSO deformable template matching over the GA-based algorithm, GA with inheri-tance deformable multiple template matching was also incorpo-rated into the proposed system. As discussed in Section 3 , in both the GA-and PSO-based algorithms, it is assumed that the chromo-somes or the particles in any frame are initialized around the tracking window of the previous frame. By dispersing particles in a relatively small region instead of the whole space, searching procedure can be de fi nitely accelerated. Moreover, to expedite the search process, the search space parameters given in Eq. (5) is bounded by some constraints. In this case, the values of x may vary in the detected face region in the range [0, 160] and [0, 200] respectively. Rotation angle  X  is con fi ned in the range [ 32, +
The parameters used in the PSO algorithm were chosen experimentally in order to get a satisfactory solution quality in an acceptable time span. During the pilot experiment, six swarm sizes of 10,15, 20, 25, 50 and 100 particles were selected to test the algorithm. The outcome of swarm population of 15 particles was the best, in terms of accuracy and execution time so this value was used in all further tests. Cognitive and social parameters c were tested at various values in the interval [0.1, 0.7] in increments of 0.1. The inertial weight  X  was reduced from  X  max to  X  the iterations according to Eq. (4) , where  X  max was tested in the interval [0.5  X  0.9], and  X  min was tested in the interval [0.1
The maximum velocities V xmax ,and V ymax in both the x and y directions respectively were tested at various values in the interval [5, 30] pixels. It was found that the combination of c  X  0.5, c 2  X  0.5,  X  max  X  0.7,  X  min  X  0.3, and V xmax and V pixels yielded the best results and was used throughout the experiments. Similarly, the GA parameters were obtained experimentally as follows: the population size was set to 15; uniform mutation was employed with probabilities of crossover and mutation of 0.7 and 0.25, respectively. The processing of both GA and PSO was terminated after 100 generations. Due to the non-deterministic nature of the algorithm, multiple inde-pendent runs for each video were carried out to ensure result consistency. The best and average results of experiments from 10 independent runs were colle cted for performance compar-ison. The results presented in this section represent the average accuracy and computation time for the various trails of each method. 4.2. Effect of search area size match search area on the performance of the proposed system, different fi xed search areas were examined. Moreover, the block-matching algorithm with adaptive search area was inte-grated and tested in the proposed system. Figs. 6 and 7 show the average detection accuracies and the corresponding average pro-cessing time of the proposed system utilizing the GA or PSO and the block-matching algorithm with various fi xed and proposed adaptive search areas. It can be seen that the proposed system with adaptive search area exhibits better detection performance than that with a fi xed size search area especially with the videos that have eye-blinking and changes in the face orientations such as the videos named (mwbthead, fcfthead, fakshead, mcem-head). Furthermore the computational complexity of the pro-posed system employing either GA or PSO and the block-matching algorithm with adaptive search area decreases drasti-cally as compared to that with a fi xed size search area. The reason behind this as mentioned i n the previous section is that the speed of motion can vary signi fi cantly within a single video sequence and using a fi xed size search area within all frames in a video sequence during the eye tracking process uselessly increases the computational time. Therefore, predicting and updating the size of search area during the eye tracking process yields a signi fi cant performance improvement over using a size search area. 4.3. Comparison with the state of the art eye tracking methods
The ef fi ciency of the proposed system employing GA or PSO inheritancedeformablemultipletemplatematchingwiththe adaptive block-matching algorithm was compared to the inheritance deformable templ ate matching techniques such as those based on GA ( Akashi et al., 2007 )andPSOalgorithms.
Fig. 8 shows the average detection and tracking accuracies of various inheritance deformable template matching eye detectionandtrackingmethods.Itcanbeseenthatthe proposed system with GA or PSO deformable multiple template matching outperforms the other methods with detection rate improvements of 3.68% and 4.82%, respectively. This improve-ment is achieved particularly in videos with dif fi cult tracking situations such as severe variations in face orientations.
It is also observed that the performance of the proposed system with PSO is slightly impr oved compared to that with GA, where the improvement of detection and tracking accuracies is approximately 1.2%. Samples of the subjective detection results of fi ve consecutive video frames obtained using the PSO-based inheritance deformable template matching and the proposed system utilizing GA or PSO inheritance deformable multiple template matching with the adaptive block-matching algo-rithms is presented in Fig. 9 . Additional qualitative results for different subjects under signi fi cant face orientations are shown in Fig. 10 . These results demonstrate that the proposed system can track the eye even with the disappearance of bright pupils due to eye closure and oblique face orientations. The overall computational time of the proposed technique compared with the various eye tracking methods is illustrated in Fig. 11 .The computational times are normalized by the length of each video in the database and thus listed in seconds (sec) per frame. It is observed that the overall computational complexity of the proposed technique is much less than that of the other meth-ods, where the PSO deformable multiple template matching with the adaptive block-matching algorithm saves about 13 of the time used by the other methods. This result is expected since applying the adaptive block-matching algorithm reduces the computational complexity required to perform either GA or
PSO deformable multiple template matching algorithm, where the average percentages of performing the GA or PSO within the proposed system are 36.5% and 33.6%, respectively.

In order to further demonstrate the ef fi ciency of the proposed system, comparisons were carried out to other well-known methodssuchastheAAM( Bacivarov et al., 2008 ) and eye localization based on proje ction functions and SVM ( Turkan et al., 2008 ). Table 1 gives a summary of the performance of the proposed system in terms of accuracy and computational time compared to various eye tracking methods. It is obvious that the proposed system improves the overall eye-tracking accuracy with low computational complexity. As can be observed from Table 1 ,asigni fi cant performance improvement is achieved by using the proposed method over the other methods. Furthermore, the pro posed method outperforms the
AAM method in two important aspects. First, it does not require prior training for the system from the different subjects with various eye states and diverse head poses. This is due to the fact that the proposed method adaptively updates the model eye template during the tracking process. Secondly, the multiple template matching algorithm is not performed periodically but it is performed only if the adaptive block search method fails to detect the eye position. Moreover, the proposed system achieves better performance than that of the edge projections based method ( Turkan et al., 2008 ) which is designed to detect eyes in face images with frontal pose a nd upright orientation. There-fore, this method fails to detect eyes of the subjects with various eye states and diverse head directions. Since the edge projec-tions based method is applied to every frame in the video sequence and the SVM is used to classify all the candidate points from each frame, it is considerably more computationally expensive than the proposed method. 5. Conclusion proposed to track eye robustly under various conditions such as head movements, eye blinking, and occlusions. The proposed system performs well regardless of whether the pupils are directly visible or not. This is achieved by switching between thePSOinheritancedeformablemultipletemplatematching algorithm and the adaptive block-matching search algorithm.
First, the use of PSO inheritance deformable template matching with multiple templates increases the detection accuracy. Sec-ond, block-matching search algorithm with adaptive size of search area is presented to reduce the computational complexity required to perform the PSO-based algorithm. Experimental results showed that the proposed system provides a signi fi improvement in eye tracking robustness and accuracy over the existing eye trackers based on the deformable template match-ing, the AAM, and edge projections. Moreover, the proposed system has been shown to provide high accuracy with low computational complexity which makes it quite attractive for embedding in different applications.
 References
