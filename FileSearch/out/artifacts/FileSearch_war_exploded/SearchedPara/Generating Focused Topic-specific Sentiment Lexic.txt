 In the area of media analysis , one of the key tasks is collecting detailed information about opin-ions and attitudes toward specific topics from var-ious sources, both offline (traditional newspapers, archives) and online (news sites, blogs, forums). Specifically, media analysis concerns the follow-ing system task: given a topic and list of docu-ments (discussing the topic), find all instances of attitudes toward the topic (e.g., positive/negative sentiments, or, if the topic is an organization or person, support/criticism of this entity). For every such instance, one should identify the source of the sentiment, the polarity and, possibly, subtopics that this attitude relates to (e.g., specific targets of criticism or support). Subsequently, a (hu-man) media analyst must be able to aggregate the extracted information by source, polarity or subtopics, allowing him to build support/criticism networks etc. (Altheide, 1996). Recent advances in language technology, especially in sentiment analysis , promise to (partially) automate this task.
Sentiment analysis is often considered in the context of the following two tasks:  X  sentiment extraction : given a set of textual  X  sentiment retrieval : given a topic (and possi-How can technology developed for sentiment analysis be applied to media analysis? In order to use a sentiment extraction system for a media analysis problem, a system would have to be able to determine which of the extracted sentiments are actually relevant, i.e., it would not only have to identify specific targets of all extracted sentiments, but also decide which of the targets are relevant for the topic at hand. This is a difficult task, as the relation between a topic (e.g., a movie) and specific targets of sentiments (e.g., acting or spe-cial effects in the movie) is not always straight-forward, in the face of ubiquitous complex lin-guistic phenomena such as referential expressions ( X . . . this beautifully shot documentary  X ) or bridg-ing anaphora ( X  X he director did an excellent jobs X ).
In sentiment retrieval , on the other hand, the topic is initially present in the task definition, but it is left to the user to identify sources and targets of sentiments, as systems typically return a list of documents ranked by relevance and opinion-atedness. To use a traditional sentiment retrieval system in media analysis, one would still have to manually go through ranked lists of documents re-turned by the system.
To be able to support media analysis, we need to combine the specificity of (phrase-or word-level) sentiment analysis with the topicality provided by sentiment retrieval. Moreover, we should be able to identify sources and specific targets of opinions.
Another important issue in the media analysis context is evidence for a system X  X  decision. If the output of a system is to be used to inform actions, the system should present evidence, e.g., high-lighting words or phrases that indicate a specific attitude. Most modern approaches to sentiment analysis, however, use various flavors of classifi-cation, where decisions (typically) come with con-fidence scores, but without explicit support.
In order to move towards the requirements of media analysis, in this paper we focus on two of the problems identified above: (1) pinpointing ev-idence for a system X  X  decisions about the presence of sentiment in text, and (2) identifying specific targets of sentiment.

We address these problems by introducing a special type of lexical resource: a topic-specific subjectivity lexicon that indicates specific relevant targets for which sentiments may be expressed; for a given topic, such a lexicon consists of pairs ( syn-tactic clue , target ). We present a method for au-tomatically generating a topic-specific lexicon for a given topic and query-biased set of documents. We evaluate the quality of the lexicon both manu-ally and in the setting of an opinionated blog post retrieval task. We demonstrate that such a lexi-con is highly focused , allowing one to effectively pinpoint evidence for sentiment, while being com-petetive with traditional subjectivity lexicons con-sisting of (a large number of) clue words.
Unlike other methods for topic-specific senti-ment analysis, we do not expand a seed lexicon. Instead, we make an existing lexicon more fo-cused, so that it can be used to actually pin-point subjectivity in documents relevant to a given topic. Much work has been done in sentiment analy-sis. We discuss related work in four parts: sen-timent analysis in general, domain-and target-specific sentiment analysis, product review mining and sentiment retrieval. 2.1 Sentiment analysis Sentiment analysis is often seen as two separate steps for determining subjectivity and polarity. Most approaches first try to identify subjective units (documents, sentences), and for each of these determine whether it is positive or negative. Kim and Hovy (2004) select candidate sentiment sen-tences and use word-based sentiment classifiers to classify unseen words into a negative or posi-tive class. First, the lexicon is constructed from WordNet: from several seed words, the structure of WordNet is used to expand this seed to a full lexicon. Next, this lexicon is used to measure the distance between unseen words and words in the positive and negative classes. Based on word sen-timents, a decision is made at the sentence level.
A similar approach is taken by Wilson et al. (2005): a classifier is learnt that distinguishes be-tween polar and neutral sentences, based on a prior polarity lexicon and an annotated corpus. Among the features used are syntactic features. After this initial step, the sentiment sentences are classified as negative or positive; again, a prior polarity lexi-con and syntactic features are used. The authors later explored the difference between prior and contextual polarity (Wilson et al., 2009): words that lose polarity in context, or whose polarity is reversed because of context.

Riloff and Wiebe (2003) describe a bootstrap-ping method to learn subjective extraction pat-terns that match specific syntactic templates, using a high-precision sentence-level subjectivity clas-sifier and a large unannotated corpus. In our method, we bootstrap from a subjectivity lexi-cion rather than a classifier, and perform a topic-specific analysis, learning indicators of subjectiv-ity toward a specific topic. 2.2 Domain-and target-specific sentiment The way authors express their attitudes varies with the domain: An unpredictable movie can be positive, but unpredictable politicians are usually something negative. Since it is unrealistic to con-struct sentiment lexicons, or manually annotate text for learning, for every imaginable domain or topic, automatic methods have been developed.
Godbole et al. (2007) aim at measuring over-all subjectivity or polarity towards a certain entity; they identify sentiments using domain-specific lexicons. The lexicons are generated from man-ually selected seeds for a broad domain such as Health or Business , following an approach simi-lar to (Kim and Hovy, 2004). All named entites in a sentence containing a clue from a lexicon are considered targets of sentiment for counting. Be-cause of the data volume, no expensive linguistic processing is performed.

Choi et al. (2009) advocate a joint topic-sentiment analysis. They identify  X  X entiment top-ics, X  noun phrases assumed to be linked to a sen-timent clue in the same expression. They address two tasks: identifying sentiment clues, and clas-sifying sentences into positive, negative, or neu-tral. They start by selecting initial clues from Sen-tiWordNet, based on sentences with known polar-ity. Next, the sentiment topics are identified, and based on these sentiment topics and the current list of clues, new potential clues are extracted. The clues can be used to classifiy sentences.

Fahrni and Klenner (2008) identify potential targets in a given domain, and create a target-specific polarity adjective lexicon. To this end, they find targets using Wikipedia, and associated adjectives. Next, the target-specific polarity of ad-jectives is detemined using Hearst-like patterns.
Kanayama and Nasukawa (2006) introduce po-lar atoms: minimal human-understandable syn-tactic structures that specify polarity of clauses. The goal is to learn new domain-specific polar atoms, but these are not target-specific. They use manually-created syntactic patterns to identify atoms and coherency to determine polarity.
In contrast to much of the work in the literature, we need to specialize subjectivity lexicons not for a domain and target, but for  X  X opics. X  2.3 Product features and opinions Much work has been carried out for the task of mining product reviews, where the goal is to iden-tify features of specific products (such as picture , zoom , size , weight for digital cameras) and opin-ions about these specific features in user reviews. Liu et al. (2005) describe a system that identifies such features via rules learned from a manually annotated corpus of reviews; opinions on features are extracted from the structure of reviews (which explicitly separate positive and negative opinions).
Popescu and Etzioni (2005) present a method that identifies product features for using corpus statistics, WordNet relations and morphological cues. Opinions about the features are extracted us-ing a hand-crafted set of syntactic rules.
Targets extracted in our method for a topic are similar to features extracted in review mining for products. However, topics in our setting go be-yond concrete products, and the diversity and gen-erality of possible topics makes it difficult to ap-ply such supervised or thesaurus-based methods to identify opinion targets. Moreover, in our method we directly use associations between targets and opinions to extract both. 2.4 Sentiment retrieval At TREC, the Text REtrieval Conference, there has been interest in a specific type of sentiment analysis: opinion retrieval. This interest materi-alized in 2006 (Ounis et al., 2007), with the opin-ionated blog post retrieval task. Finding blog posts that are not just about a topic, but also contain an opinion on the topic, proves to be a difficult task. Performance on the opinion-finding task is domi-nated by performance on the underlying document retrieval task (the topical baseline).

Opinion finding is often approached as a two-stage problem: (1) identify documents relevant to the query, (2) identify opinions. In stage (2) one commonly uses either a binary classifier to distin-guish between opinionated and non-opinionated documents or applies reranking of the initial result list using some opinion score. Opinion add-ons show only slight improvements over relevance-only baselines.
 The best performing opinion finding system at TREC 2008 is a two-stage approach using rerank-ing in stage (2) (Lee et al., 2008). The authors use SentiWordNet and a corpus-derived lexicon to construct an opinion score for each post in an initial ranking of blog posts. This opinion score is combined with the relevance score, and posts are reranked according to this new score. We de-tail this approach in Section 6. Later, the authors use domain-specific opinion indicators (Na et al., 2009), like  X  X nteresting story X  (movie review), and  X  X ight X  (notebook review). This domain-specific lexicon is constructed using feedback-style learn-ing: retrieve an initial list of documents and use the top documents as training data to learn an opin-ion lexicon. Opinion scores per document are then computed as an average of opinion scores over all its words. Results show slight improvements (+3%) on mean average precision. In this section we describe how we generate a lex-icon of subjectivity clues and targets for a given topic and a list of relevant documents (e.g., re-Figure 1: Our method for learning a topic-dependent subjectivity lexicon. trieved by a search engine for the topic). As an ad-ditional resource, we use a large background cor-pus of text documents of a similar style but with diverse subjects; we assume that the relevant doc-uments are part of this corpus as well. As the back-ground corpus, we used the set of documents from the assessment pools of TREC 2006 X 2008 opin-ion retrieval tasks (described in detail in section 4). We use the Stanford lexicalized parser 1 to extract labeled dependency triples ( head, label, modifier ). In the extracted triples, all words indicate their cat-egory ( noun, adjective, verb, adverb, etc.) and are normalized to lemmas.

Figure 1 provides an overview of our method; below we describe it in more detail. 3.1 Step 1: Extracting syntactic contexts We start with a general domain-independent prior polarity lexicon of 8,821 clue words (Wilson et al., 2005). First, we identify syntactic contexts in which specific clue words can be used to express attitude: we try to find how a clue word can be syn-tactically linked to targets of sentiments. We take a simple definition of the syntactic context: a single labeled directed dependency relation. For every clue word, we extract all syntactic contexts, i.e., all dependencies, in which the word is involved (as head or as modifier) in the background corpus, along with their endpoints. Table 1 shows exam-ples of clue words and contexts that indicate sen-timents. For every clue, we only select those con-texts that exhibit a high entropy among the lemmas at the other endpoint of the dependencies. E.g., in our background corpus, the verb to like occurs 97,179 times with a nominal subject and 52,904 times with a direct object; however, the entropy of lemmas of the subjects is 4.33, compared to 9.56 for the direct objects. In other words, subjects of like are more  X  X redictable. X  Indeed, the pronoun I accounts for 50% of subjects, followed by you (14%), they (4%), we (4%) and people (2%). The most frequent objects of like are it (12%), what (4%), idea (2%), they (2%). Thus, objects of to like will be preferred by the method.

Our entropy-driven selection of syntactic con-texts of a clue word is based on the following as-sumption: For every clue word, we select the top D syntac-tic contexts whose entropy is at least half of the maximum entropy for this clue.

To summarize, at the end of Step 1 of our method, we have extracted a list of pairs ( clue word, syntactic context ) such that for occurrences of the clue word, the words at the endpoint of the syntactic dependency are likely to be targets of sentiments. We call such a pair a syntactic clue . 3.2 Step 2: Selecting potential targets Here, we use the extracted syntantic clues to iden-tify words that are likely to serve as specific tar-gets for opinions about the topic in the relevant documents. In this work we only consider individ-ual words as potential targets and leave exploring other options (e.g., NPs and VPs as targets) for fu-ture work. In extracting targets, we rely on the following assumption: We extract all endpoints of all occurrences of the syntactic clues in the relevant documents, as well as in the background corpus. To identify potential attitude targets in the relevant documents, we com-pare their frequency in the relevant documents to the frequency in the background corpus using the standard  X  2 statistics. This technique is based on the following assumption: For every potential target, we compute the  X  2 -score and select the top T highest scoring targets.
As the result of Steps 1 and 2, as candidate tar-gets for a given topic, we only select words that oc-cur in subjective contexts, and that do so more of-ten than we would normally expect. Table 2 shows examples of extracted targets for three TREC top-ics (see below for a description of our experimen-tal data). 3.3 Step 3: Generating topic-specific lexicons In the last step of the method, we combine clues and targets. For each target identified in Step 2, we take all syntactic clues extracted in Step 1 that co-occur with the target in the relevant documents. The resulting list of triples ( clue word, syntactic context, target ) constitute the lexicon. We conjec-ture that an occurrence of a lexicon entry in a text indicates, with reasonable confidence, a subjective attitude towards the target.

Table 2: Examples of targets extracted at Step 2. We consider two types of evaluation. In the next section, we examine the quality of the lexicons we generate. In the section after that we evaluate lexicons quantitatively using the TREC Blog track benchmark.

For extrinsic evaluation we apply our lexi-con generation method to a collection of doc-uments containing opinionated utterances: blog posts. The Blogs06 collection (Macdonald and Ounis, 2006) is a crawl of blog posts from 100,649 blogs over a period of 11 weeks (06/12/2005 X  21/02/2006), with 3,215,171 posts in total. Be-fore indexing the collection, we perform two pre-processing steps: (i) when extracting plain text from HTML, we only keep block-level elements longer than 15 words (to remove boilerplate mate-rial), and (ii) we remove non-English posts using TextCat 2 for language detection. This leaves us with 2,574,356 posts with 506 words per post on average. We index the collection using Indri, 3 ver-sion 2.10.

TREC 2006 X 2008 came with the task of opin-ionated blog post retrieval (Ounis et al., 2007). For each year a set of 50 topics was created, giv-ing us 150 topics in total. Every topic comes with a set of relevance judgments: Given a topic, a blog post can be either (i) nonrelevant, (ii) relevant, but not opinionated, or (iii) relevant and opinionated. TREC topics consist of three fields ( title , descrip-tion , and narrative ), of which we only use the title field: a query of 1 X 3 keywords.

We use standard TREC evaluation measures for opinion retrieval: MAP (mean average precision), R-precision (precision within the top R retrieved documents, where R is the number of known rel-evant documents in the collection), MRR (mean reciprocal rank), P@10 and P@100 (precision within the top 10 and 100 retrieved documents). In the context of media analysis, recall-oriented measures such as MAP and R-precision are more meaningful than the other, early precision-oriented measures. Note that for the opinion retrieval task a document is considered relevant if it is on topic and contains opinions or sentiments towards the topic.

Throughout Section 6 below, we test for signif-icant differences using a two-tailed paired t-test, and report on significant differences for  X  = 0 . 01 ( N and H ), and  X  = 0 . 05 ( M and O ).

For the quantative experiments in Section 6 we need a topical baseline: a set of blog posts po-tentially relevant to each topic. For this, we use the Indri retrieval engine, and apply the Markov Random Fields to model term dependencies in the query (Metzler and Croft, 2005) to improve topi-cal retrieval. We retrieve the top 1,000 posts for each query. Lexicon size (the number of entries) and selectiv-ity (how often entries match in text) of the gen-erated lexicons vary depending on the parame-ters D and T introduced above. The two right-most columns of Table 4 show the lexicon size and the average number of matches per topic. Be-cause our topic-specific lexicons consist of triples ( clue word, syntactic context, target ), they actu-ally contain more words than topic-independent lexicons of the same size, but topic-specific en-tries are more selective, which makes the lexicon more focused. Table 3 compares the application of topic-independent and topic-specific lexicons to on-topic blog text.

We manually performed an explorative error analysis on a small number of documents, anno-Table 3: Posts with highlighted targets (bold) and subjectivity clues (blue) using topic-independent (left) and topic-specific (right) lexicons. tated using the smallest lexicon in Table 4 for the topic  X  X arch of the Pinguins. X  We assigned 186 matches of lexicon entries in 30 documents into four classes:  X  REL: sentiment towards a relevant target;  X  CONTEXT: sentiment towards a target that  X  IRREL: sentiment towards irrelevant target  X  NOSENT: no sentiment at all In total only 8% of matches were manually clas-sified as REL, with 62% classified as NOSENT, 23% as CONTEXT, and 6% as IRREL. On the other hand, among documents assessed as opio-nionated by TREC assessors, only 13% did not contain matches of the lexicon entries, compared to 27% of non-opinionated documents, which does indicate that our lexicon does attempt to sep-arate non-opinionated documents from opinion-ated. In this section we assess the quality of the gen-erated topic-specific lexicons numerically and ex-trinsically. To this end we deploy our lexicons to the task of opinionated blog post retrieval (Ounis et al., 2007). A commonly used approach to this task works in two stages: (1) identify topically rel-evant blog posts, and (2) classify these posts as being opinionated or not. In stage 2 the standard approach is to rerank the results from stage 1, in-stead of doing actual binary classification. We take this approach, as it has shown good performance in the past TREC editions (Ounis et al., 2007) and is fairly straightforward to implement. We also ex-plore another way of using the lexicon: as a source for query expansion (i.e., adding new terms to the original query) in Section 6.2. For all experiments we use the collection described in Section 4.
Our experiments have two goals: to compare the use of topic-independent and topic-specific lexicons for the opinionated post retrieval task, and to examine how different settings for the pa-rameters of the lexicon generation affect the em-pirical quality. 6.1 Reranking using a lexicon To rerank a list of posts retrieved for a given topic, we opt to use the method that showed best per-formance at TREC 2008. The approach taken by Lee et al. (2008) linearly combines a (top-ical) relevance score with an opinion score for each post. For the opinion score, terms from a (topic-independent) lexicon are matched against the post content, and weighted with the probability of term X  X  subjectivity. Finally, the sum is normal-ized using the Okapi BM25 framework. The final opinion score S op is computed as in Eq. 1: where k 1 , and b are Okapi parameters (set to their default values k 1 = 2 . 0 , and b = 0 . 75 ), | D | is the length of document D , and avgdl is the average document length in the collection. The opinion score Opinion ( D ) is calculated using Eq. 2:
Opinion ( D ) = X where O is the set of terms in the sentiment lex-icon, P ( sub | w ) indicates the probability of term w being subjective, and n ( w, D ) is the number of times term w occurs in document D . The opinion scoring can weigh lexicon terms differently, using P ( sub | w ) ; it normalizes scores to cancel out the effect of varying document sizes.

In our experiments we use the method de-scribed above, and plug in the MPQA polarity lexicon. 4 We compare the results of using this topic-independent lexicon to the topic-dependent lexicons our method generates, which are also plugged into the reranking of Lee et al. (2008).
In addition to using Okapi BM25 for opinion scoring, we also consider a simpler method. As we observed in Section 5, our topic-specific lexi-cons are more selective than the topic-independent lexicon, and a simple number of lexicon matches can give a good indication of opinionatedness of a document: where n ( O, D ) is the number of matches of the term of sentiment lexicon O in document D . 6.1.1 Results and observations There are several parameters that we can vary when generating a topic-specific lexicon and when using it for reranking: D : the number of syntactic contexts per clue T : the number of extracted targets S op ( D ) : the opinion scoring function.  X  : the weight of the opinion score in the linear Note that  X  does not affect the lexicon creation, but only how the lexicon is used in reranking. Since we want to assess the quality of lexicons, not in the opinionated retrieval performance as such, we factor out  X  by selecting the best setting for each lexicon (including the topic-independent) and each evaluation measure.

In Table 4 we present the results of evaluation of several lexicons in the context of opinionated blog post retrieval.

First, we note that reranking using all lexi-cons in Table 4 significantly improves over the relevance-only baseline for all evaluation mea-sures. When comparing topic-specific lexicons to the topic-independent one, most of the differences are not statistically significant, which is surpris-ing given the fact that most topic-specific lexicons we evaluated are substantially smaller (see the two rightmost columns in the table). The smallest lex-icon in Table 4 is seven times more selective than the general one, in terms of the number of lexicon matches per document.

The only evaluation measure where the topic-independent lexicon consistently outperforms topic-specific ones, is Mean Reciprocal Rank that depends on a single relevant opinionated docu-ment high in a ranking. A possible explanation is that the large general lexicon easily finds a few  X  X bviously subjective X  posts (those with heavily used subjective words), but is not better at detect-ing less obvious ones, as indicated by the recall-oriented MAP and R-precision.

Interestingly, increasing the number of syntac-tic contexts considered for a clue word (parame-ter D ) and the number of selected targets (param-eter T ) leads to substantially larger lexicons, but only gives marginal improvements when lexicons are used for opinion retrieval. This shows that our bootstrapping method is effective at filtering out non-relevant sentiment targets and syntactic clues.
The evaluation results also show that the choice of opinion scoring function (Okapi or raw counts) depends on the lexicon size: for smaller, more fo-cused lexicons unnormalized counts are more ef-fective. This also confirms our intuition that for small, focused lexicons simple presence of a sen-timent clue in text is a good indication of subjec-tivity, while for larger lexicons an overall subjec-tivity scoring of texts has to be used, which can be hard to interpret for (media analysis) users. 6.2 Query expansion with lexicons In this section we evaluate the quality of targets extracted as part of the lexicons by using them for query expansion. Query expansion is a commonly used technique in information retrieval, aimed at getting a better representation of the user X  X  in-formation need by adding terms to the original retrieval query; for user-generated content, se-lective query expansion has proved very benefi-cial (Weerkamp et al., 2009). We hypothesize that if our method manages to identify targets that cor-respond to issues, subtopics or features associated Table 5: Query expansion using relevance mod-els and topic-specific subjectivity targets. Signifi-cance tested against the baseline. with the topic, the extracted targets should be good candidates for query expansion. The experiments described below test this hypothesis.

For every test topic, we select the 20 top-scoring targets as expansion terms, and use Indri to re-turn 1,000 most relevant documents for the ex-panded query. We evaluate the resulting ranking using both topical retrieval and opinionated re-trieval measures. For the sake of comparison, we also implemented a well-known query expansion method based on Relevance Models (Lavrenko and Croft, 2001): this method has been shown to work well in many settings. Table 5 shows evalu-ation results for these two query expansion meth-ods, compared to the baseline retrieval run.
The results show that on topical retrieval query expansion using targets significantly improves re-trieval performance, while using relevance mod-els actually hurts all evaluation measures. The failure of the latter expansion method can be at-tributed to the relatively large amount of noise in user-generated content, such as boilerplate material, timestamps of blog posts, comments etc. (Weerkamp and de Rijke, 2008). Our method uses full syntactic parsing of the retrieved doc-uments, which might substantially reduce the amount of noise since only (relatively) well-formed English sentences are used in lexicon gen-eration.

For opinionated retrieval, target-based expan-sion also improves over the baseline, although the differences are only significant for P@10. The consistent improvement for topical retrieval sug-gests that a topic-specific lexicon can be used both for query expansion (as described in this section) and for opinion reranking (as described in Sec-tion 6.1). We leave this combination for future work. We have described a bootstrapping method for de-riving a topic-specific lexicon from a general pur-pose polarity lexicon. We have evaluated the qual-ity of generated lexicons both manually and using a TREC Blog track test set for opinionated blog post retrieval. Although the generated lexicons can be an order of magnitude more selective, they maintain, or even improve, the performance of an opinion retrieval system.

As to future work, we intend to combine our method with known methods for topic-specific lexicon expansion (our method is rather concerned with lexicon  X  X estriction X ). Existing sentence-or phrase-level (trained) sentiment classifiers can also be used easily: when collecting/counting tar-gets we can weigh them by  X  X rior X  score provided by such classifiers. We also want to look at more complex syntactic patterns: Choi et al. (2009) re-port that many errors are due to exclusive use of unigrams. We would also like to extend poten-tial opinion targets to include multi-word phrases (NPs and VPs), in addition to individual words. Finally, we do not identify polarity yet: this can be partially inherited from the initial lexicon and refined automatically via bootstrapping.
 This research was supported by the European Union X  X  ICT Policy Support Programme as part of the Competitiveness and Innovation Framework Programme, CIP ICT-PSP under grant agreement nr 250430, by the DuOMAn project carried out within the STEVIN programme which is funded by the Dutch and Flemish Governments under project nr STE-09-12, and by the Netherlands Or-ganisation for Scientific Research (NWO) under project nrs 612.066.512, 612.061.814, 612.061.-815, 640.004.802.

