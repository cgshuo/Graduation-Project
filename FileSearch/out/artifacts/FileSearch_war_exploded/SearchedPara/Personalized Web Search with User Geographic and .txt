 With the large scale of data in the Internet, how to provide user the most relevant and essential search results according to user X  X  preferences has become the important problem faced with the search engine developers and researchers. When a user issues a query, he/she usually has geographic and temporal preferences in mind. For example query  X  X epartment discount X , user prefers to find department discount information in some place(s) recently or some time in the future (e.g. Christmas). But currently most commercial search engines return roughly the same results to all users not paying at-tention to user X  X  geographic and temporal intents and preferences. It is important for the search engine to capture user X  X  geographic and temporal preferences, which can pro-vide more satisfied results for the user and impove search quality. Rather than solving the general problem of personalized web search results, we focus on queries that have geographic and temporal dependent preferences in this paper. There are two intuitive ways to personalize web search results: one is by query rewriting and one is by document re-ranking. We propose a novel approach based on document re-ranking to personalize web search results according to user X  X  geographic and temporal preferences by mining search results data and user click-through data leveraging knowledge bases. The experiment results show the effectiveness of our approach in improveing search results quality. 
The main contributions of this paper are four-fold: The remainder of the paper is organized as follows. Section 2 introduces related work. perimental data setup and evaluating results of our approach. Section 6 summarizes the main contributions of the paper and future work. covery or search results personalization in web search and dataspaces environment. We then conclude differences between our work and the existed works. [3,13-17] are related work about leveraging temporal information in query process or results clustering. [3] proposed clustering and exploring search results using timeline timeline is generated from a collection of supporting documents. The components of a search. [15] proposed a approach which in tegrated the temporal dimension into a language model based retrieval framework. [16] proposed a algorithm to mining im-atemporal, temporally unambiguous, temporally ambiguous. [4,5,18] are related work in intent discovery or personalization according to geographic location. [4] built a geo intent analysis system to learn a model from large amounts of web-search logs for this discovery. It built a city language model, which is probabilistic representation of lan-personalization approach that captured the user X  X  interests and preferences in the form of concepts by mining search results and their clickthroughs. [18] built a probabilistic model to identify implicit local intent queries and leverage user X  X  physical location to improve web search results for these queries. [6, 8, 10] are related works done in the query classification. [6] proposed using past user-click behavior and anchor-link analysis of an unlabeled query log containing hundreds of millions of queries. [10] used click graphs(bipartite-graph representation of click-through data) in improving query intent classifiers. Besides there also some related works which leveraging the external knowledge base such as [12, 20]. [12] proposed using Wikipedia to discovery intent. [20] proposed a intent based categorization of search results using web Q&amp;A corpus. [7] captured the context, the interests, and the preferences aspects of a user X  X  intent with a context network, an interest set, and a preference network. In [2] a query intent suggestion algorithm was proposed by mapping implicit intent queries to a set of po-tential explicit intent query suggestions. [1] proposed a clusters refinements algorithm based on their likely underlying user intent by combining document click and session co-occurrence information. The algorithm operates by performing multiple random walks on a Markov graph that approximates user search behavior. [19] Proposed an approach that combined click and reformulation information to find likely user intents using Expand, Filter, Cluster three steps. enables a search engine to rewrite a simple keyword query into a structural query that encodes schema information from a given data source. Other integration system such as through its push-button listing-based inte rface or a form-based interface. However, these user interfaces are not expressive enough and restrict users from specifying their intent in a flexible manner. 
The differences between our work and existing works are: z [4, 5, 22] only consider geographic location intent or preference. [3,13-17] only z [4] preprocesses the query before it is submitted to search engine. [5] submits the z [5] proposed a user profiling strategy to capture user X  X  content and location z [9] is the technique used in dataspace which introduces iTrail to confine and temporal preferences, which combined query intension feature and user specific preferences feature in the form of query profile and user preference profile by mining both web search results and user click-through data. 3.1 Problem Definition temporal information; Z axis is about content information, the query results space of query Q satisfying user X  X  specific or implicit geographic and temporal preferences is 3.2 The Process of Our Approach The general process of our approach is depicted in Figure1. Given a query Q input by the user, firstly with the decomposer tool the system decomposes it into content, geo-content part, Q g is geographic part, Q t is temporal part. Then submit the query to the backend search engine (e.g., one of the top commercial search engines). The returned search results are processed through personalized tool of our system. The content terms and geographic terms, temporal terms are mined online from the top k (in our experi-ment k is set 100) search results and are stored in query profiles. When the user clicks graphic terms and temporal terms are collected by the user click-through collector and stored in user preference profile. Finally re-rank the search results according to query profile and user preference profile . 3.3 Query Decomposition DBpedia . The matching results maybe short of geographic part or/and temporal part. Step2: transformer normalizes the geographic part and temporal part. Step3 : classifier profile. 
Matcher uses mapping functions and match functions to decide which part of the query belongs to each of the content, geographic and temporal part. Transformer uses regular expressions to normalize the temporal part due to heterogeneous temporal algorithm according to the query content a ssociated with geographic and temporal information, which is described in detailed in section 4.2. capture user X  X  geographic and temporal preferences. The former is got by mining web click-through data using User click-through analyzer . 4.1 Search Results Analyzer poral extraction tool are used to extract content terms (denoted as c i ), geographic terms (denoted as g i ) and temporal terms/expressions (denoted as t i ) from documents of web search results leveraging Location KB and DBpedia . The content terms, geographic geographic and temporal spaces arising from a query which can be maintained along example query  X  X epartment discount X  with the content terms, geographic terms and temporal terms extracted. 
DBpedia is used as our off-line knowledge base which currently describes more than 3.4 million things. We use location ontology to maintain the geographical relationships among locations. 
Location KB is built and maintained based on ontology in our framework. Previous research has show that a large portion of explicit geo queries contain city level infor-mation [21], so we define our user X  X  implicit geographic preference at the city/location level. We define the city level ontology beforehand which we named geographic location ontology . We predefined location ontology consisting of country name, prov-ince/state and city in Location KB . 
Content extraction tool extracts all the content terms ( c i ) from the top k search result web-snippets arising from each query Q. We adopt the following formula to find terms associated with a query content part. number of documents returned and | c i | is the number of term c i . If the value of F of a term for the query Q . ments (due to sparse of them) leveraging location KB . The types of geographic terms include the followings: place names e.g. New York, Beijing, Shanghai; other locators e.g. postcode, ZIP code; terms descriptive of lo cation e.g. state, country, city; adjectives of place e.g. American, Eastern; geographic features e.g. island, lake. Currently direc-tions and spatial prepositions (e.g.  X  X outh X ,  X  X ear X ,  X  X etween X  and  X  X orth of X  etc.) are not considered in our approach. 
Temporal extraction tool extracts all the temporal terms/expressions ( t i ) such as  X  X ay 25, 2010 X ,  X  X harismas Eve X ,  X  X ctober 2010 X  from the full documents (due to document, currently our approach only focuses on the following time granularity, i.e., year, month, and date. 
We adopt some existed extraction tools in our experiments section. Details of extraction tools are beyond the scope of this paper. 4.2 Query Profile query content itself has different geographic and temporal requirements (demanding). For example the correlated geographic inform ation with query  X  X broad travel X  is larger than temporal information. However  X  X ewest movies introduction X  is a both geo-graphic and temporal-demanding query. But query  X  X ava programming X  has higher content demanding than geographic and temporal demanding. 
We introduce the concepts of geographic Ratio (denoted as R g ) and temporal Ratio with content information of a query. We adopt entropy when calculating the value of R l and R t inspired from approach [5]. The information entropy of discrete random variable p( x i )=pr( X = x i ). R g and R t are defined as formula (3), (4). 
Then we use decision tree to classify the query into five classes (denoted as C1~C5 ) according to values of R l and R t , which is showed in Figure 3. Decision trees have the advantage that they can learn conjunctions of features. If the value of R l is more than a deemed low. If the value of R t is more than a threshold  X  2 (defined in our experiment is 0.5) we deem it as high, otherwise low.  X  2 is set smaller than  X  1 because we found in experiment that the number of temporal terms is usually less than geographic terms in information but low temporal information such as query  X  X tudy abroad X . Queries of C3 have low association with location information but high temporal information such as query  X  X tock price X . Queries of C4 have relative low association with location infor-mation and temporal information. Queries of C5 have no obvious association with location and temporal information, which are not sensitive to temporal or geographic information such as query  X  X ealth X . 4.3 User Click-through Analyzer Click-through data is important in analyzing user preference and behavior on a search engine. It is obvious that different user has different content, geographic and temporal preferences associated with a query. The user X  X  click actions reflect his/her diversity of  X  X otus X , the concept terms of it composes of  X  X oftware X ,  X  X ar X ,  X  X lant X ,  X  X odaka X  and so on. If the user X  X  preference is lotus car, then he/she will click the accordingly search results containing content terms  X  X ar X . 
We adopt clicked entropies (similar to formula (4)) to indicate user preferences result together with its assocaited content terms, geographic terms and temporal terms analyzer . The content terms, geographic terms and temporal terms extracted from the user X  X  clicked results indicate a user X  X  possible concept, geographic and temporal preference spaces. 4.4 User Preference Profile graphic location preference (denoted as PRE l ) and temporal preference (denoted as PRE t ) mined from user X  X  click-through data which are defined as follows (for-mula(5)~(7)). When user clicked some search result, the content terms, geograhic terms feature vector and temporal feature vector respectively. user u , | T | =| t 1 | + | t 2 | + ... + | t k |, and p(ti) = | t |
If the vaule of PRE is high, the user is more likely to be interested in many content (geographic,temporal) terms; otherwise, the user is biased towards certain content (geographic,temporal) terms. 4.5 Re-ranking According to Us er Geographic and Temporal References Documents are re-ranked according to rank score S (Q,d) which is showed below. We use simple linear model to re-calculate rank score S (Q,d) for each document in search results.  X 
PRE t is the weight associated with S(Q t ,d) . The values of  X  ,  X  and  X  are set according to different query class in our experiment beforehand (see section 5.3). c  X  , l  X  and t  X  represent content feature vector, geographic feature vector and temporal feature vector respectively, and c  X  , l  X  and t  X  are their corresponding weights. Supervised learning is used to estimate the parameter c  X  , l  X  and t  X  to maximize the relevance after personalization. To evaluate our approach of personalizatio n web query according to user X  X  geographic and temporal preferences we conduct the experiments. The primary objective of our evaluation here is to show the advantage of our approach and also aim to show that the results personalized by our approach are indeed meaningful. 5.1 Experimental Setup Because of person privacy problems of using some commercial search engine data, we developed a middleware which use one of the top commercial search engines as the backend search engine. The middleware includes user click-through analyzer and web results analyzer. We use search results data and click-through data of small size from Table 2 shows the topical categories of the test queries we have chosen. The statistics of collected click-through data is showed in Table 3. 5.2 Experimental Data Preprocess Similar queries Due to sparse of content terms of query we first merge them based on similarity. We considered query having the following similarities of query content parts as similar query . A. The content parts of the two queries are pa rent-child relationship in the concept of 5.3 Experimental Parameters Setting and Evaluation showed in Table 4. In each class ( C1~C5 ) there has  X  +  X  +  X  =1. 
In the evaluation of ranking quality of the personalization method, we use search results returned by the backend search engine as the baseline. Figure 4 shows com-parisons between baseline and our approach on the top 10, 20, 30 and 50 precisions. The experiments results show that the preci sions are improved compared to the base-personalization method. Namely we treat all the queries with the same content, geo-graphic and temporal weights (  X  ,  X  and  X  are same). Figure 5 shows top 10, 20, 30 and 50 precisions for not considering query profile and our approach. We observe that the user preference profile . 
Intuitively, a good ranking function or good query results should give high ranking to links that the users want. Thus, the smaller the average rank of the users X  clicks, the better the ranking quality. So we measure ranking quality based on the average rank of users X  clicks, denoted by Avg.c (Q) . Thus the smaller of Avg.c (Q) indicates the better ranking quality. We evaluate the effectiveness of our approach by comparing Avg.c (Q) before and after personalized process. The experiments show the average relevant rank improvement, which is showed is Table 5. In this paper, we propose a novel approach for automatically extracting and learning user X  X  geographic and temporal preferences associated with web query based on search results and user X  X  click-through data. Experimental results confirmed that our approach can provide more personalized results associated with geographic location and tem-poral preferences comparing to the origin al results and improve the importance of temporal and geographic features related of documents in the ranking score. Currently our approach set the weights of query class manually and can not adjust them by the system automatically. In the future work we will find an effective learning algorithm to give the proper weights to each query class. Foundation of China (No. 60973021, 61003059), the National High Technology Development 863 Program of China (No. 2009AA01Z131). 
