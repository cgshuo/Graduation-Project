 To compute the gradient  X   X (  X  ), we first write the gra-dient in terms of the gradients of Z t (  X  ) and  X   X  :  X   X (  X  ) = From the definition of Z t (  X  ), we have that Letting  X  J t (  X  ) = 1 Z rewrite the gradient as  X   X (  X  ) = the policy is represented by a large neural network, it is convenient to write the gradient as a sum where the output at each state appears only once, to produce a set of errors that can be fed into a standard back-propagation algorithm. For a neural network policy with uniform output noise  X  and mean  X  ( x t ), we have and the gradient of the objective is given by  X   X (  X  ) =
X The gradient can now be computed efficiently by feed-ing the terms after  X   X  ( x i t ) into the standard back-propagation algorithm.
 This appendix describes the dynamical systems cor-responding to the simulated robots in the swimming, hopping, and walking tasks. Images of each robot are provided in Figure 1 of the paper.
 Swimmer: The swimmer is a 3-link snake, with 10 state dimensions for the position and angle of the head, the joint angles, and the corresponding velocities, as well as 2 action dimensions for the torques. The sur-rounding fluid applies a drag on each link, allowing the snake to propel itself. The simulation step is 0 . 05s, the reward weights are w u = 0 . 0001, w v = 1, and w h = 0, and the desired velocity is v ? x = 2m/s.
 Hopper: The hopper has 4 links: torso, upper leg, lower leg, and foot. The state has 12 dimensions, and the actions have 3. To make it easier to optimize a gait with DDP, we employed a softened contact model as proposed in (Tassa et al., 2012). The reward weights are w u = 0 . 001, w v = 1, and w h = 10, and the desired velocity and height are v ? x = 1 . 5m/s and p ? y = 1 . 5m. A lower time step of 0 . 02s was used to handle contacts. Walker: The walker has 7 links, corresponding to two legs and a torso, 18 state dimensions and 6 torques. The reward weights are w u = 0 . 0001, w v = 1, and w h = 10, and the desired velocity and height are v ? x = 1 . 2m/s and p ? y = 1 . 5m. The time step is 0 . 01s. 3D Humanoid: The humanoid consists of 13 links, with a free-floating 6 DoF base, 4 ball joints, 3 joints with 2 DoF, and 5 hinge joints, for a total of 29 degrees of freedom. Ball joints are represented by quaternions, while their velocities are represented by 3D vectors, so the entire model has 63 dimensions. The reward weights are are w u = 0 . 00001, w v = 1, and w h = 10, and the desired velocity and height are v ? x = 2 . 5m/s and p ? y = 0 . 9m. The time step is 0 . 01s. Due to the complexity of this model, the joint noise was reduced
