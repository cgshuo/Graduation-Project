 Point-of-Interest (POI) recommendation has become an im-portant means to help people discover attractive locations. However, extreme sparsity of user-POI matrices creates a severe challenge. To cope with this challenge, viewing mo-bility records on location-based social networks (LBSNs) as implicit feedback for POI recommendation, we first propose to exploit weighted matrix factorization for this task since it usually serves collaborative filtering with implicit feedback better. Besides, researchers have recently discovered a spa-tial clustering phenomenon in human mobility behavior on the LBSNs, i.e., individual visiting locations tend to cluster together, and also demonstrated its effectiveness in POI rec-ommendation, thus we incorporate it into the factorization model. Particularly, we augment users X  and POIs X  latent fac-tors in the factorization model with activity area vectors of users and influence area vectors of POIs, respectively. Based on such an augmented model, we not only capture the spatial clustering phenomenon in terms of two-dimensional kernel density estimation, but we also explain why the introduc-tion of such a phenomenon into matrix factorization helps to deal with the challenge from matrix sparsity. We then eval-uate the proposed algorithm on a large-scale LBSN dataset. The results indicate that weighted matrix factorization is superior to other forms of factorization models and that in-corporating the spatial clustering phenomenon into matrix factorization improves recommendation performance. H.2.8 [ Database Management ]: Database Applications X  data mining ; H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  clustering,information fil-tering Weighted Matrix Factorization; Location Recommendation; Kernel Density Estimation; Location-based Social Network
With the popularity of smart mobile devices and the di-versification of positioning technologies, it has become easier for people to acquire real-time information regarding their locations. This development has triggered the advent of location-based social networks (LBSNs), such as Foursquare, Jiepang, Facebook Place and so on. This emergence has not only led to location-based socializing becoming a new form of social interaction, but has also helped people speed up familiarization of the surroundings. To achieve the latter goal, Point-of-Interest (POI) recommendation has become one important means.

Recently, POI recommendation has become a popular re-search topic due to easy access of large-scale mobility records and inclusion of social network information. One of the most important problems in POI recommendation is how to deal with a severe challenge stemming from extreme sparsity of user-POI matrices. To this end, viewing mobility records on the LBSNs, i.e., check-ins, as implicit feedback for POI rec-ommendation, we first propose to exploit weighted matrix factorization for this task because it usually serves collabo-rative filtering with implicit feedback better than the other approaches [8, 18]. In this algorithm, users and POIs are mapped onto a joint latent space by approximating a user-POI 0/1 rating matrix (each 0/1 in the matrix indicates whether a user has checked in at a POI) in a weighted way, such that a user X  X  preference for a POI is modeled as in-ner product between them in that space. The reasons that check-ins can be considered as implicit feedback for POI rec-ommendation lies in the following three aspects: first, check-in datasets just include the locations where users have been and therefore they likely prefer. In other words, they just provides positive examples. Second, the visit frequencies of a user to her visiting locations reflect her confidences of being fond of them. The visiting patterns of higher frequency in-dicate the preferences of higher confidence. Third, locations where a user has never visited are either really unattractive or undiscovered but potentially appealing. However, these two cases are usually difficult to differentiate from each other if no extra information is provided.

Fortunately, due to inclusion of geographical information of POIs, some researchers have recently discovered a spa-tial clustering phenomenon [21] in human mobility behav-ior on the LBSNs, i.e., individual visiting locations tend to cluster together, and leveraged it to assist POI recommen-dation. For example, Ye et al. [24] characterized it by a power law distribution on the distance between any pair of visited locations. Instead of making the power law dis-tributed assumption, Zhang et al. [26] directly performed k ernel density estimation to this distribution. To avoid the cost in computing the distance between paired locations, in [2, 12], the authors modeled the spatial clustering phe-nomenon in terms of geo-clustering and tried to estimate individual spatial distribution. Actually, by modeling the spatial clustering phenomenon, it becomes possible to par-tially distinguish unattractive locations from undiscovered but potentially appealing ones. In particular, it is much more likely that unvisited POIs near a frequently visited lo-cation are really unattractive and this likelihood depends on the visit frequency to that location. This is because if a user often visits a certain POI but has never patronized surrounding POIs, it is highly unlikely for her to visit them in the future. Therefore, weighted matrix factorization will benefit from the introduction of such a phenomenon.
For the sake of joint geographical modeling and matrix factorization, we augment users X  and POIs X  latent factors of the factorization model with non-negative activity area vectors of users and non-negative influence area vectors of POIs, as shown in Figure 1. These augmenting vectors con-sist of a set of grids with the same fixed size. Each entry in a user X  X  activity area vector represents the possibility of this user showing up in the corresponding grid while each entry in a POI X  X  influence vector indicates the degree of in-fluence that this POI has on the corresponding grid. The reason for such an explicit augmentation with geographical information is that there is still no evidence showing that the latent space has included geographical information (It is easy for other information, e.g., POI categories, to be incor-porated into this framework in a similar manner). In this way, a user X  X  preference for a POI is modeled as inner prod-uct between them in the augmented space and thus includes both the interest of the user from the latent space and her preference for the location of the POI. If a user X  X  preference for the location of a POI is non-zero, the activity areas of the user intersect with the influence areas of the POI so that this POI is reachable from the activity areas of the user. In other words, it is possible for the attractiveness of the POI to cross the gap arising from the distance.

More importantly, it is possible to exploit such a represen-tation of users X  preference to partially distinguish unattrac-tive locations from undiscovered ones. Let X  X  go back to the previous example, where a user often visited a POI i , but has never patronized POIs nearby. Using such a represen-tation, the user has similar location preference for the POIs around i . However, since this user has never visited nearby POIs, from the perspective of approximation, such a repre-sentation requires inner product in the latent space to offset the location preference. Therefore, we have introduced more potentially unattractive locations ( negative examples) into matrix factorization. Thus, it explains why the incorpora-tion of spatial clustering phenomenon into the factorization model can help to deal with the challenge stemming from the user-POI matrix sparsity.

When only considering augmenting vectors in the pro-posed model and assuming that influence areas of POIs are fixed in advance, the proposed model is reduced to a non-negative weighted least square problem. Supposing that in-fluence on a grid from a POI is determined by the density at the grid X  X  center of the two-dimensional normal distribution centered at this POI, the reduced model encompasses two-dimensional kernel density estimation on individual visiting Figure 1: The augmented model for weighted matrix f actorization, where the dimension of latent space is K and the number of grid areas is L . locations. In particular, the estimated density at a location i with respect to a user equals to the averaging density at the location i of the normal distributions centered at each of her visiting locations, or inversely, it equals to the averaging density at each of her visiting locations of the normal distri-bution centered at the location i . When mapping POIs onto grids and constituting users X  activity area vectors with grids and their visited frequency, the estimated density is in pro-portion to inner product between the augmenting vectors. Thus, two-dimensional kernel density estimation is a special case of the reduced model so that our model captures the spatial clustering phenomenon from the perspective of ker-nel density estimation (KDE). However, different from KDE, the advantage of the proposed model lies in its consistent ob-jective goal with weighted matrix factorization. Therefore, the modeling of the spatial clustering phenomenon is seam-lessly incorporated into matrix factorization.

To summarize, in this paper, we have made the following contributions to POI recommendation.
POI recommendation is commonly studied on a user-POI matrix C  X  N M  X  N , where there are M users and N items. Then each entry c u ,i in the matrix C records the visit fre-quency of a user u to a POI i , where u and i is reserved in-dexing users and POIs respectively. Here, following common symbolic notation, upper case bold letters denote matrices, lower case bold letters denote column vectors without any specification, and non-bold letters represent scalars.
Given this frequency matrix, one possible approach to POI recommendation is low rank matrix factorization with re-spect to it. This involves mapping users and POIs into a joint latent space with dimension K  X  min( M, N ), such that a user X  X  preference for a POI is modeled as inner prod-uct between them in that latent space. The mapping is achieved by approximating the frequency matrix by solving the following optimization problem, where P  X  R M  X  K and Q  X  R N  X  K are users X  latent vectors and POIs X  latent vectors, respectively. k X k F is the Frobenius norm of matrices, simply the square root of the sum of the squared values in matrices. And this optimization can be uniquely solved by singular value decomposition (SVD) by taking the first K pairs of singular vectors. However, due to the large number of users and POIs, it is more practical to alternate these two kinds of latent factors to solve the least square problem. For the sake of further scalability, it has become a popular solution to simply approximate the ob-served ratings (frequency), that is, minimizing the following weighted square errors, where  X  is the Hadamard product operator, i.e., element-wise multiplication of matrices. W is a binary weighted matrix whose entry w u,i indicates whether a user u has vis-ited a POI i , i.e., w u,i = I ( c u,i &gt; 0). In order to reduce the generalization error (performance on unseen data), reg-ularization terms are usually added to this objective goal to shrinking the latent vectors toward zero, i.e.,
The previously discussed matrix factorization is designed for rating predictions in a typical scenario of movie recom-mendation. In such cases, users not only reveal their fa-vorite movies with high ratings, but also their least favoriate movies with low ratings. However, in POI recommendation, a user X  X  visit to a location reflects her preference for it. The visit frequency to this location determines the confident level of her preference for it. In particular, a higher visit fre-quency corresponds to a larger confidence of preference for the location. Therefore, in the frequency matrix, there are only positive examples observed so that POI recommenda-tion is considered as a well-known One Class Collaborative Filtering (OCCF) problem [18, 8].

One solution to such an OCCF problem is to randomly sample some negative examples for each user and to assign them smaller weights than positive ones since the confidence in their negative attitude is less than the positive attitude of the positive examples. It is also possible and effective to consider all the unvisited locations as negative examples when the weights to all negative examples are assigned the same value, i.e., 1. In particular, we set the weighting matrix as follows, where  X  ( c u,i ) &gt; 0 is a monotonically increasing function with respect to c u,i . Such a setting exactly encodes the ob-servation that the frequency is a confidence of users X  prefer-ences. Based on this weighted matrix, the objective function for the implicit feedback is represented as follows: It is similar to Eq (3), except that the frequency matrix C is substituted with a 0/1 rating matrix R , where each entry r u,i  X  { 0 , 1 } indicates whether a user u has visited a POI i . Therefore, this new form of objective actually approximates whether users have visited locations in a weighted way. How-ever, due to the weight setting, the approximation error is summed over all entries in the user-POI matrix. Fortunately, the approximate error can be efficiently reduced via alterna-tive least square and its time complexity for each iteration is in proportion to the total number of visited locations, i.e., the number of non-zero entries in the frequency matrix. We will provide detailed analysis in a later section.
Weighted matrix factorization works well in most of im-plicit feedback datasets since it takes all unvisited locations as negative examples and assigns larger weights to positive examples than negative ones. However, in the case of POI recommendation, since POIs are naturally equipped with geographical information, there is still room for improve-ment in this algorithm. For example, if a user often visits a POI i but never patronizes POIs around i , it is more likely that these unvisited POIs surrounding i will become nega-tive examples than unvisited but distant ones, and this likeli-hood depends on the visit frequency to the POI i . Although there are some recent studies that leverage this geographi-cal information to assist POI recommendation [24, 2, 12, 26] by modeling the well-known spatial clustering phenomenon, these approaches are almost independent of the procedure for collaborative filtering, particularly, matrix factorization. The incorporation of geographical information into matrix factorization, in particular weighted matrix factorization for implicit feedback datasets, is important, because it may not only help to understand how to recommend POIs in the pres-ence of geographical information, but may also help to ex-plain why the modeling of the spatial clustering phenomenon can help to cope with the challenges of matrix sparsity. More importantly, it may boost the overall recommendation per-formance. To this end, we propose GeoMF for joint geo-graphical modeling and matrix factorization.
Before presenting the GeoMF model, for the sake of con-venience, we must first clarify two terms involved: user X  X  activity areas and POI X  X  influence areas. Roughly speaking, a user X  X  activity areas consist of location regions where the Figure 2: Generating an influence area vector for a P OI (the red point). user will show up and POI X  X  influence areas are those re-gions to which the influence of this POI can be propagated. As for influence areas, we take Eiffel Tower as an example of a POI. Its influence areas may consist of all the areas in Paris since it is a famous symbol of Paris. More specifi-cally and formally, when we assume the areas are obtained by splitting the whole world into L even grids, denoted as L = { g 1 , g 2 , ..., g L } , we have the following definitions:
Definition 1 (User X  X  Activity Areas). A user X  X  ac-tivity areas are determined by a set of pairs of a grid area l  X  L where the user may show up and a non-negative real value v  X  R + indicating the possibility of appearing. We can represent a user X  X  activity areas as a non-negative vector x  X  R L + . Each entry x l in the vector x indicates the possibility that this user will appear in the grid g l  X  L .
Definition 2 (POI X  X  Influence Areas). Influence ar-eas of a POI consist of a collection of pairs of a grid area l  X  L to which the influence of this POI can be propagated and a non-negative real value v  X  R + indicating the quantity of influence from this POI.
 A POI X  X  influence areas can also be similarly converted into a non-negative vector y  X  R L + . Usually, influence areas are different from POI to POI. For simplicity, we assume the influence areas of a POI are fixed in advance and have a normal distribution centered at this POI. In particular, the influence y l at a grid g l from a POI i is y l = 1  X  K ( where K (  X  ) is standard normal distribution and  X  is the standard deviation. Figure 2 shows an example of such a setting.

The advantage of setting the influence areas in this way is that inner product between x and y encompasses two-dimensional kernel density estimation on a user X  X  visiting locations. Specifically, the estimated density of a user u at a POI i equals to 1 | P visited POIs by user u . If these POIs P u are mapped into her visited areas of grids L u  X  L , this estimation becomes the grid g l , and thus is in proportion to x T y by setting x as the visit frequency to the corresponding grid areas. In this way, we actually model the spatial clustering phenomenon using two-dimensional kernel density estimation. However, different from kernel density estimation, a user X  X  activity area vector x is a variable learned by the subsequent opti-mization.

We then leverage x and y to augment user X  X  and POI X  X  latent factors in the matrix factorization, respectively, as shown in Figure 1. We obtain the estimated preference ma-trix for our proposed GeoMF model as follows where we stack the activity area vector of each user by row to obtain a users X  activity area matrix X  X  R  X  M  X  L and stack the influence area vector of each POI by row to obtain a POIs X  influence area matrix Y  X  R  X  N  X  L . One reason for such an explicit augmentation with geographical informa-tion is that there is still no evidence showing that the latent space has already included them (It is easy for other infor-mation, e.g., the POI categories, to be incorporated into this framework in a similar way). In this way, a user X  X  preference for a POI is modeled as an inner product in this augmented space and thus includes both the interest of the user from the latent space and her preference for the locations of the POI. If her preference for the locations of a POI is non-zero, her activity areas intersect with the influence areas of the POI so that the POI is reachable from her activity areas.
Another reason for this kind of augmentation is that it explains why the modeling of the spatial clustering phe-nomenon can help to deal with the challenge of matrix spar-sity. In particular, returning to the example in the first paragraph of this section, where a user has often visited a POI i , but never patronized POIs around i . Using such a representation, this user has similar non-negative location preference for the POIs around i . However, since this user has never visited these surrounding POIs, such a representa-tion requires the inner product in the latent space to offset the location preference, from the perspective of approxima-tion (Minimizing weighted square loss similar to weighted matrix factorization; discussed later). In this way, we in-troduce more potential unattractive locations (confidently negative examples) into matrix factorization.
The learning of these three matrices is achieved by mini-mizing a similar objective function to weighted matrix fac-torization for implicit feedback, i.e., min where k X k 1 is  X  1 norm of matrix X . One reason for impos-ing such a matrix norm is that users are usually constrained around several long-stay locations, such as, home or work-place, while  X  1 norm of the matrix is generally exploited to restrict the sparsity of matrices [16]. Another benefit of placing the sparse constraint is that it can also improve the effectiveness and the efficiency of recommendation (shown in experimental section).

This objective function is minimized with an alternative optimization, consisting of one procedure of learning latent factors when fixing X and another one of non-negative weighted sparse least square with respect to X when fixing latent fac-tors. Since in each procedure, the objective function is not increasing, the iteration of such an alternative optimization can guarantee the non-increase of the objective function.
When fixing activity area matrix X , the optimization of this objective function with respect to the users X  and POIs X  latent factors is similar to alternative least square in weighted matrix factorization discussed previously. More specifically, the latent factors of user u i s updated based on where W u is an N  X  N diagonal matrix, subject to W u i,i w u,i and r u is a column rating vector of user u . Here, since we have set the same weight, i.e., 1 to the unvisited locations, there is a trick to speed up its calculation [8]. In particular, Q
T W u Q = Q T ( W u  X  I ) Q + Q T Q . In this case, the second part is independent of users so that it can be precomputed while the first part only requires O ( k r u k 0 K 2 ), where  X  of matrix (vector) is the number of non-zero entries in this matrix (here, it is also the number of visited locations of user u ). For the inverse of a K  X  K matrix, we assume it requires O ( K 3 ) time even though more efficient algorithms exist but probably are less relevant for the typically small values of K . Applying the similar trick to calculate the remaining part Q T W u  X  r u , where  X  r u = ( r u  X  Yx u O ( k  X  r u k 0 K ) to get a K  X k  X  r u k 0 matrix. Completing the final matrix multiplication between the inversed matrix and the intermediate matrix requires O ( k  X  r u k 0 K 2 ) time. Therefore, u in total. If we update all users X  latent factors in sequence (parallel updating is possible since there is no dependence between users), the total update time is O ( k  X  R k 0 K 2 where  X  R = R  X  XY T .

Similarly, we can update the latent factor of a POI i as: where W i is an M  X  M diagonal matrix, subject to W i u,u w u,i and r i is a column rating vector of the POI i . Applying the similar optimization trick, we can complete the update of POIs X  latent factors in O ( k  X  R k 0 K 2 + NK 3 ) time.
Since k  X  R k 0 &gt; ( M + N )  X  K is usually satisfied, the to-tal complexity of updating latent factors in one iteration is O ( k  X  R k 0 K 2 ). K is set as a small number (50  X  200) so that it can be considered as proportional to the number of non-zero entries in new matrix  X  R , but larger than the orig-inal one R . Therefore, the sparsity constraint of X is also important to the efficiency of updating these latent factors. Additionally, for the sake of higher efficiency, we assume that the two-dimensional normal distribution for generat-ing influence areas of POIs is truncated so that the sparsity structure of Y can also be guaranteed. In other words, only those areas within a certain threshold of distance (i.e., d km) from a POI are considered as its influence areas. This is reasonable to some extent since the normal distribution usually decays quickly with the increase of the distance from its center.

According to previous analysis, the updating of latent factors corresponds to approximating the new matrix  X  R = R  X  XY T . Therefore, by introducing the geographical in-formation, we have added many negative examples for the latent factor model. These negative examples in this new matrix  X  R have negative ratings due to the non-negativeness of X and Y , and their absolute values are in proportion to a user X  X  preference for the locations of POIs. Thus it is more likely that unvisited POIs near frequently visited POIs will become negative examples. This confirms the preceding explanation why incorporating the spatial clustering phe-nomenon into collaborative filtering can help to cope with the challenge of matrix sparsity.
 Now let X  X  turn to learning users X  activity area matrix X . When fixing the latent factors, the objective function with respect to X is similar to a non-negative weighted least square problem, which can be further generalized as a bounded-variable least square problem [10]. Such kinds of problems have been solved by several approaches, including active set method [10], sequential coordinate-wise algorithm [4], pro-jected gradient descent method [11] and so on. Among these methods, projected gradient descent is highly efficient and has been extensively studied in non-negative matrix factor-ization, which can also be cast into two sub-problems related to non-negative least square [11]. The general idea of the projected gradient descent algorithm is to update param-eters by gradient descent and then to project the updated ones into feasible regions defined by bound constraints. Nev-ertheless, the choice of learning rate in the gradient descent needs to guarantee that the projected parameters can suf-ficiently decrease the objective function. Thus we leverage the methods proposed in [11] to update users X  activity area matrix. However, due to the existence of the weighting ma-trix and latent factors, the gradient of this objective function with respect to X is a full matrix. It is impractical to update all the parameters at one time. Thus, instead, we update the activity area vectors for each user independently.
Let X  X  rewrite the objective function with respect to the activity area vector of a user u and discard the irrelevant terms.
 The gradient of L ( x u ) with respect to x u is Based on this gradient, we update x u as follows where P + ( x ) is a function to project a vector x  X  R L its non-negative orthant R L + . In particular, The learning rate,  X  is chosen so as to ensure the sufficient decrease of the objective function, i.e., where  X  is a parameter of this condition and commonly set as 0 . 01. Since our objective is a quadratic function w.r.t x this condition can be quickly evaluated via the gradient and Hessian matrix (  X  2 L ( x u ) = Y T W u Y ), i.e., in each step, although the objective function has decreased sufficiently, it requires repeatedly searching the learning rate (based on some heuristic rules). And with the change in learning rate, the gradient increases by  X  2 L ( x u ) X  x there are approximately an equal number of influence ar-eas (denoted as n  X  i ) for different POIs, the increase of the gradient along with evaluating the sufficient decrease condi-tion costs at most O ( k x u k 0 n  X  i ). The part that is irrelevant to x u in the gradient can be computed in a way that is similar to updating the latent factors and its complexity is denominated by the calculation of the Hessian matrix, that i s, O ( k r u k 0 n 2  X  i ). If we perform an updating operation for each user in sequence (it can be done in parallel), the over-all complexity is O (# iter  X  t k X k 0 n  X  i + k R k 0 n is the number of iterations to be updated and t is the aver-age number of trials for searching the learning rate. Here, we once again observe the importance of the sparse structure in the efficiency of optimization.

Someone may be curious about what a user X  X  activity ar-eas will be based on such an updating strategy. Thus we will try to conduct an analysis from this perspective. For simplicity, assume that the latent factors are not taken into account. The users X  activity area matrix X is initialized to zero. After the first iteration, x u =  X P + ( Y T W u r u thus including the regions that can be directly reached from a user X  X  visiting POIs by means of Y . The possibility of showing up in a grid area depends on the visiting frequency via the weighting matrix W u . Thus, the update in this first iteration is similar to kernel density estimation except that it is subject to the decrease of the objective function. In the subsequent iterations, a user X  X  activity areas are expanded by Y T W u Y , which encodes the personalized spatial corre-lation between POIs, under the condition of decreasing the objective function.
We evaluate the proposed algorithm on a large-scale location-based social network dataset. This dataset was crawled from Jiepang, a Chinese location-based social network, similar to Foursquare and spanned almost two years from March. 2011 to March. 2013. Although check-ins of Jiepang users are not publicly available on Jiepang itself, they are synchronized to other social networks, i.e., Weibo, so that they can be ob-tained by the open APIs of these social networks. In this way, we crawled 36,143,085 Jiepang check-ins at 1,000,457 POIs from 454,375 users. If this data is represented as a user-POI matrix, its density is 7 . 95  X  10  X  5 . In this dataset, each user made 80 check-ins on average and these check-ins are dispersed at 47 POIs on average. If we distribute these check-ins by their date, we find that each user only make 1.5 check-ins each day on average. If we distribute these POIs into 3 km 2 regions, each region contains 13 POIs on average and up to 13,068 POIs in the maximal case. Then we select POIs that are visited by at least two users and users who have been to at least 10 distinct locations. Finally, 276,450 users and 574,095 POIs are then reserved and the density of these users on these POIs is 1 . 27  X  10  X  4 .

For each user, we randomly select 30% of her visiting lo-cations as ground truth for testing. The remaining portions from each user constitute a training dataset for learning the parameters of the proposed model. The learned model scores each unvisited location for each user (i.e., not in her training portion) and then ranks them according to the scores. The learned model is then assessed by its capacity of finding the ground truth locations for each user among the ranked lo-cations. Such a capacity is usually measured by two widely-used metrics, i.e., Recall@k and Precision@k, in the top k POI recommendation [24, 12, 5]. The former metric w.r.t each user indicates what percentage of her visiting locations can emerge in the top k recommended POIs while the latter metric w.r.t each user indicates what percentage of locations among the top k recommended POIs has been visited by her. Formally, if we define S u ( k ) as the top k recommended POIs and V u as the visited locations of user u , The above procedure corresponds to one trial. The final performance of the recommendation algorithms is obtained by averaging on the metrics of 5 times independent trials.
Next we set up the parameters controlling the complex-ity and being not learned via optimization. All these pa-rameters are set by cross validation. The dimension of the latent space is set as 50 and the weighted matrix is set by  X  ( c u,i ) = 1 + log(1 + c u,i  X  10  X  ) where  X  = 10. However, the recommendation performance is not sensitive to the reg-ularization coefficient  X  for shrinking latent factors since all negative examples (unvisited locations) are taken into ac-count and thus we set it as  X  = 0 . 01. For the parameters related to modeling locations, including the  X  1 regularization coefficient  X  for the sparsity constraint and the distance d for truncated normal distribution for setting the influence area matrix, we examine them in the result part.

In the following sections, we will evaluate the proposed algorithm according to three aspects. First, we compare the different approaches to using matrix factorization for POI recommendation. Then we study the modeling of spatial clustering phenomenon, denoted as GeoWLS (which just ignores the latent factors in GeoMF), under the different parameter settings and compare it with kernel density esti-mation. Finally, we compare the proposed model ( GeoMF ) with weighted matrix factorization ( WMF ) and GeoWLS in order to understand the benefit of geographical information.
For the sake of understanding the effectiveness of WMF for POI recommendation, we compare it with user-based collaborative filtering ( UCF ) [24] and the following factor-ization algorithms. )
The result of the comparison is shown in Figures 3(a) and 3(d). The first observation is that factorization on fre-quency matrix ( MF-Freq ) based on square loss function per-forms worst among all the factorization models (even if we apply logarithm to the frequency). However, if we make use of divergence instead of square loss, the performance (i.e., B-NMF ) improves compared to MF-Freq since it can model the skewness of visit frequency [2, 12]. This con-stitutes our second observation. Unfortunately, according to the third observation, it doesn X  X  perform as well as the factorization on 0/1 rating matrix ( MF-01 ) and user-based collaborative filtering ( UCF ). This indicates that approxi-mating frequency, in spite in terms of Poisson likelihood in B-NMF , will attenuate the capacity of factorization models for recommendation. Additionally, in the next observation, MF-01 is superior to both B-NMF and UCF . This may arise from the sparsity of individual visited locations because B-NMF only optimizes over a small subset of all the entries in the matrix for the sake of efficiency and UCF is modeled on the observed individual visited locations, while MF-01 con-siders all unvisited locations as negative examples efficiently. The superiority of MF-01 to UCF also confirms the advan-tage of matrix factorization models in recommendation sys-tems compared to memory-based collaborative filtering [1]. When using the visiting frequency as the confidence of a user X  X  preference for locations, we can further improve the recommendation performance, based on the fifth observa-tion, that WMF outperforms MF-01 . In summary, weighted matrix factorization works better for collaborative filtering on implicit feedback than the other forms of matrix factor-ization and user-based collaborative filtering. The final ob-servation, which we make by comparing the results of WMF with WMF-B , is that we can X  X  observe a significantly large improvement due to the introduction of the POIs X  biases. One reason for this is that weighted matrix factorization may already imply such bias information. Also, the common reason to introduce the bias in the traditional matrix factor-ization algorithm is to center user-item rating matrix, but in weighted matrix factorization, the user-item rating matrix is filled with 0/1 entries, indicating that users has a certain action on items, so that there is no special requirement for centering. In other words, it is not essential to include the items X  biases when applying weighted matrix factorization for collaborative filtering with implicit feedback.
By ignoring the latent factors in the GeoMF model, the reduced model (GeoWLS) tries to capture the spatial clus-tering phenomenon. In this model, the sparsity structure of the activity area matrix of users and the influence area matrix of POIs are important to the effectiveness and ef-ficiency of GeoMF. These two parts are captured by two separated parameters, i.e., the regularization coefficient  X  of  X  matrix norm and d km of truncated normal distribution for generating POIs X  influence areas. Thus, in this section, we examine the effect of these two parameters and show the results in Figure 3(b) and 3(e). We can make the following observations:
First , we compare the recommendation performance un-der different distance thresholds for truncated normal distri-bution. In particular, we take grid regions within 0.5km and 1km of POIs to generate the influence area matrix of POIs while setting  X  to zero, i.e., without any sparsity constraints, and then train two GeoWLS models based on such settings. According to the recommendation performance of these two models, we only observe a small improvement after taking more grid regions into account. One major reason lies in the high density of POIs. For such a sake, we analyze the density of POIs in our check-in dataset, which we measure via the number of POIs reached by expanding visited POIs to their nearby locations. In particular, if we expand visited POIs to nearby locations within d km distance, we would like to know how many unvisited locations can be added to the candidates for recommendation. Thus we draw a scat-ter plot between them, shown in Figure 4(a), where the x axis indicates the expanded distance while the y axis rep-resents the number of candidate POIs (Since this value is different from person to person, we plot the (25%,50%,75%) quantile of its distribution over the population). We can see that when we expand visited POIs to nearby locations within 0 . 5 km, the number of candidate locations will be around 8,000 among half users and when expanded to 1 km, this number increases to 11,000. Therefore, expanding to 0 . 5 km may already include sufficient candidates for top-k recommendation ( k  X  8 , 000). Moreover, with the help of this analysis, we can see that it is really difficult to recom-mend POIs based only on location information. Therefore, the recommendation performance that only uses locations is lower than collaborative filtering approaches.

Second , by fixing the distance to 0 . 5 km but varying  X  , we explore the effect of sparsity constraints of users X  activ-ity area matrix on recommendation performance. According to these two figures, increasing from 0 to 10, the perfor-mance of GeoWLS improves consistently. In other words, the sparsity structure of users X  activity area matrix can help improve the recommendation performance because this con-straint reduces some of the noisy activity areas. Moreover, the sparsity constraint reduces the number of non-zero en-tries in the matrix and increases the efficiency of our GeoMF model. However, when continuing to increase its value from 10 to 20, the performance only improves in the top positions compare GeoMF with two components (WMF and GeoWLS). while those at the bottom start to decrease. The underlying reason is that stronger sparsity constraints also remove some significant activity areas at the same time of reducing noise.
It is possible to suspend the necessity of weighted square loss instead of square loss, since this procedure may be in-dependent of matrix factorization. To this end, we com-pare GeoWLS with a non-weighted version GeoLS under the same setting of parameters in the third step. From the results, we can see that GeoWLS outperforms GeoLS. Thus the goal of geographical modeling is consistent with weighted matrix factorization w.r.t POI recommendation so that geographical modeling is seamlessly incorporated into matrix factorization for recommending POIs.

Although GeoWLS encompasses two-dimensional kernel density estimation ( 2D-KDE ), it is subject to the minimiza-tion of weighted square loss and is different from 2D-KDE. Hence, finally , we compare GeoWLS with 2D-KDE. Based on the results, we observe that GeoWLS is much better than 2D-KDE and that the formalization in terms of weighted non-negative least square is effective for POI recommenda-tion. Moreover, we also study the reasonableness of Ge-oWLS by plotting the activity areas of a sample user in Figure 4(b). The results show that it is similar to 2D-KDE, that is, in the areas with larger number of visited locations, users have a higher possibility of showing up. However, the difference is that in GeoWLS there will be a larger possi-bility of showing up in less popular areas given two areas with the same visit frequency (these two regions are indis-tinguishable via 2D-KDE). This is reasonable, considering that a visit to less popular areas implies a larger preference for it compared to popular ones.
In this section, we will compare GeoMF with its two com-ponents, i.e., WMF and GeoWLS in order to determine the benefits of introducing geographical information into WMF. Additionally, we use Gradient Boosting [6] to integrate these two components, denoted as GeoMF-GB , since our GeoMF model can be considered an additive model of WMF and Ge-oWLS. It is similar to one round of GeoMF optimization (it alternates between GeoWLS and WMF three times in our experiments) starting with GeoWLS. However, we can set different weighting strategies for GeoWLS and WMF since these two models are independent of each other in the Gradi-ent Boosting framework. We omit the implementation here due to space limitation. We simply show the results in Fig-ure 3(c) and 3(f). We first observed that GeoMF greatly outperforms WMF, indicating that GeoMF benefits from the knowledge of geographical information. In other words, latent vectors in the WMF may not capture the geographi-cal information so that its explicit modeling in GeoMF can remedy this weakness. Second , GeoMF is slightly better than GeoMF-GB. This, on the one hand, indicates GeoMF can benefit from multiple alternation between GeoWLS and WMF; on the other hand, it implies the information ob-tained by the negative examples from GeoWLS is limited with respect to WMF. One potential reason is that all the unvisited locations are already considered as negative exam-ples in WMF. Another possible reason is that these two mod-els are relatively independent of each other so that multiple alternation can not boost the recommendation performance a great deal. Figure 4: (a) Number of candidate locations vs. the e xpansion distance (b) The density plot of activity areas of one user
Our proposed GeoMF model is a general framework for using the content information of POIs in matrix factoriza-tion. POIs also include category attributes and these cat-egories are organized by two-level hierarchy. The top level only contains several coarse categories while the bottom ones include finer categories. Therefore we also try to incorpo-rate finer categories into the factorization models. However, our results show no significant improvement to the factor-ization models. One reason is that POIs X  latent factors may already encode such information. Another one lies in the in-completeness of POIs X  categories. According to a statistics to the categories of POIs, we find that over 40% of POIs don X  X  have finer categories. Nevertheless, one interesting thing is that the visit time of users X  to locations may help us to deduce the category information according to [23]. Thus, one future task is to exploit the time information in matrix factorization for POI recommendation.

Another assumption for the GeoMF model is that normal distribution would be truncated with the same influence dis-tance of all POIs. However, in practice, different POIs may have different influence distances. In other words, some loca-tions (i.e., restaurants) are only visited by nearby users while others (i.e., hotels, attractions) may be visited by many non-natives. Thus, it is interesting to learn the influence distance of POIs and to study the correlation between it and POIs X  categories.

Besides, social network information is not taken into con-sideration in our model. This is because our model focuses on incorporating location into matrix factorization. How-ever, our model can be easily extended with social inter-action, e.g., by imposing a Graph Laplacian regularization. Due to space limitation, we will discuss it in the future work.
Location recommendation has been an important topic in location-based services. For example, some research has focused on recommending some specific types of locations. Park et al. [19] designed a system based on Bayesian learn-ing with both users X  preferences and location contexts to recommend restaurants. Similarly, Horozov et al. [7] devel-oped a user-based collaborative filtering system to recom-mend restaurants to a user, by finding which restaurants similar users have visited before. Zheng et al. [28] designed a random walk style model to do tourism hot spot recom-mendation by taking into account both users X  travel expe-riences and location attractiveness. In addition to single-type location recommendation mentioned above, there is also some other work considering multiple-activity-type lo-cation recommendation. For example, Zheng et al. consid-ered location recommendation and activity recommendation together, so that they can provide location recommendation w.r.t. different types of activities [27]. The proposed model formulates a location-activity matrix for collaborative filter-ing and uses some additional information such as location features to help recommendation.

With the growing popularity of location-based social net-works, location recommendation is drawing plenty of atten-tion once again, since it is possible to obtain large-scale lo-cation visit records and several new challenges, including an extremely sparse user-location matrix and the presence of social networks, have arisen from this data. To address these challenges, several methods have been proposed. For example, Ye et al. [24] discovered the spatial clustering phe-nomenon of individual visited locations and characterized it by a power law distributed distance of any pair of visited locations [24]. In addition, they also exploited the similar-ity between users based on location history and social rela-tionships on social networks for collaborative filtering. To better incorporate social relationships from social networks into collaborative filtering, Noulas et al. [17] conducted ran-dom walk with a restart on user-POI bipartite graph and social graph. With regard to modeling the spatial cluster-ing phenomenon, instead of making the power law distri-bution assumption, Zhang et al. [26] suggested using kernel density estimation to estimate the distribution of distance between pairs of locations. Concentrating on modeling the distance distribution may ignore the multi-center character-istics of individual visiting locations according to [2]. Thus, the authors tried to apply clustering techniques on indi-vidual visited locations for encoding the spatial clustering phenomenon. They also exploited Bayesian non-negative matrix factorization for location recommendation, placing a Gamma prior on non-negative latent factors since this model can capture the skewness of the visit frequency to locations. These two models are then multiplied together since both of them are modeled in a probabilistic way. To improve the ad hoc integration between them, Liu et al. [12] proposed a ge-ographical probabilistic factor analysis framework to takes geo-clustering and Bayesian non-negative matrix factoriza-tion into consideration by defining a user X  X  preference for locations as a multiplication of her interest in the locations, the locations X  popularity and the distance between her and POIs.

In addition to studying the effect of social network infor-mation and of spatial clustering phenomenon, there has also been research into studying the impact of context informa-tion, e.g., time, and the textual content of locations on POI recommendation. For example, in [13, 25, 22], they tried to leverage content information of locations via topic model-ing to assist POI recommendation; In [5], Gao et al. pro-posed distinguishing a user X  X  latent factors at different times and exploiting several strategies to aggregate a user X  X  time-dependent latent factors; In [3, 14], the authors leveraged the information from previous POIs, including the POIs them-selves, categories and so on, for next POI recommendation.
Comparing our work with these existing ones, there are many differences. First, we leverage weighted matrix fac-torization for POI recommendation since according to our experimental results it may be more appropriate than other methods for collaborative filtering from implicit feedback. Second, the modeling of the spatial clustering phenomenon is similar to two-dimensional kernel density estimation and t hus doesn X  X  make any assumption about the distribution of visited locations. Finally, geographical modeling is seam-lessly incorporated into weighted matrix factorization and this incorporation explains why modeling the spatial clus-tering phenomenon helps to deal with the challenge of ma-trix sparsity. However, we don X  X  take the content informa-tion into consideration in our proposed model since we don X  X  have any other information except the categories of POIs in our dataset. This information can easily be incorporated into the current framework. Actually, we have tried to in-corporate the categories of POIs, but haven X  X  found much benefit from doing so. We have elaborated on the related issues in the discussion of Experimental section.
In this paper, we first studied POI recommendation from the viewpoint of weighted matrix factorization. We then augmented the latent space obtained from weighted ma-trix factorization with geographical information. Particu-larly, users X  latent factors were augmented with users X  ac-tivity areas while POIs X  latent factors were augmented with POIs X  influence areas. At the same time, sparse and non-negative constraints were imposed on both of them. Based on this augmented model, we did not only modeled the spatial clustering phenomenon from the novel perspective of two-dimensional kernel density estimation, but we also explained why the modeling of the spatial clustering phe-nomenon can help to deal with the challenge of matrix spar-sity. Then we evaluated the proposed model on a large-scale check-in dataset. The experimental results showed that weighted matrix factorization is superior to other kinds of factorization models for POI recommendation and that incorporating the modeling of the spatial clustering phe-nomenon into matrix factorization improved the recommen-dation performance. Moreover, the imposed sparsity con-straint also boosted the recommendation performance at the same time of promoting efficiency.
