 Recently, the advent of the Semantic Web, with the promises to make the web accessible and understandable, not only by human, but more importantly by machines [1], is creating opportunities for new approaches and tools to resource discovery on the Internet. Semantic Web makes it possible to associate with each resource semantics that can be understood and acted upon by software agents. In particular, web search agents, which can usually be programmed to crawl the web pages in search of keywords, can now be augmented to take advantage of semantic data to carry out sophisticat ed tasks, such as evaluating similarity among the web pages, and processing data of interest for users.

In support of the Semantic Web vision, the focus of a great deal of research work has been on using ontologies to annotate date and make it machine-understandable, thereby reducing human involvement in the process of data integration and data understanding. The ability to incorporate detailed seman-tics of data will facilitate greater cons istency in its use, understanding and ap-plication. It is widely believed, however, that the next generation web will not be primarily comprised of a few large, consistent ontologies, recognized and ac-cepted by the Internet communities at larg e [2]. Rather, it is envisioned that it will be a complex web of small ontologies, and largely created by groups of users. In such an environment, companies, unive rsities, or ad hoc interest groups will be able to link their webs to ontological content of their interests, thereby al-lowing computer programs to collect an d process web contents, and to exchange information relevant to their needs freely and efficiently.

In accordance with this vision, we propose a user profile driven framework to allow individual users to organize themselves into communities of interest based on ontologies agreed upon by all community members. In this framework, users are able to define and augment their personal views of the Internet by associat-ing specific properties and attributes to objects and defining constraint functions and rules that govern their i nterpretation of the semant ics associated with these objects. These views can then be used to c apture the user X  X  interests and inte-grate these views into a user defined Personalized Web (PW) [3]. Furthermore, through active advertising and discovery of objects, users automatically expand their  X  personal web of interest  X  to include other users X  personalized webs, thereby enabling  X  X atural X  formation of communities of similar interests .
Enabling communities of interest (CoI) requires the development of efficient data structures, mechanisms and protocols to support information dissemina-tion, object discovery and access in a user -transparent manner. Furthermore, in order to support potentially large and dynamic user communities, the protocols and mechanisms must be scalable, and robust. To address these requirements, we propose a peer-to-peer (P2P) architecture which leverages the benefits of agent technology and DHT-based overlay networking into an integrated seam-less infrastructure to support CoIs. In this paper, we show how DHT-based P2P overlay networks can be efficiently integ rated with an agent-driven framework to provide the foundation for a large-scale, self-evolving adhoc infrastructure for resource access and knowledg e sharing within a community of similar interests.
The rest of the paper is organized as fo llows. First, we discuss the related works. We then describe the overall architecture to enable CoIs, introduce the concept of a Semlet , an agent for resource advertising and discovery, and discuss the basic functionalities of the Ontoloty Overlay Network (OON) to support resource advertising and discovery. Following, we describe three advertising and retrieval schemes. We then present a set of emulation-based and simulation-based experiments to evaluate the per formances of these schemes and discuss their results. Lastly, we conclude by describing our future work. The concept of PW was originally introduced in [3]. In this paper, the framework is generalized to include the concept of ontology-based  X  community of interests  X . Furthermore, we introduce the concept of s emantic-aware agents for resource ad-vertising and access, and propose novel sch emes to advertise and retrieve objects of interest to users within a CoI.

Theworkproposedinthispaperisrelate d to several other research efforts in different fields, including ontology, semantic web, agent technology, and resource discovery. Due to space limitation, we limit our discussion to works which support object advertising and retrieval on the Internet.

The most similar work to the proposed architecture is the architecture referred to as a publish and subscribe, or event not ification service. The architecture allows users to specify what to receive an d advertise based on some predicates. Early works of publish and subscribe systems provide simple channel and topic-based service, where subscribers and publishers communicate through channels or topics of interest. Recent works propose content-based publish and subscribe services, where subscribers and publishers can specify, at the content level, their interests [4, 5]. These works support similar functionalities as those provided by the proposed architecture. However, the proposed architecture, to enable CoIs, enhances the basic  X  X ublish X  and  X  X ubscribe X  functionalities by supporting filtering capabilities which use ontology-based attributes, agreed upon by all community members. It enables object filte ring based on user defined semantics. These capabilities allow a PW to evolve into a fine-tuned advertising and retrieval infrastructure which reflects closely th e interests of a user within a community of similar interest.

In the field of P2P overlay networking, several publish and subscribe ser-vices using DHT-based P2P overlay networ ks have been recently proposed. Early works, including scribe and pFilter , target to support topic-based publish and subscribe service th rough DHT-based overlay network of rendezvous nodes [6, 7]. Recent developments in this field attempt to support content-based publish and subscribe services. Most of these works p roposeaschemetomapsubscriptions and notifications to a set of rendezvous n odes using attributes [8]. These pro-posed frameworks work well for  X  X losed X  environments, where a globally defined ontology or a set of well defined semantics and encoding schemes are used to sup-port publish and subscribe services. The use of a single ontology, however, may notberealisticinanopenenvironment,whe re users freely define their interests. Consequently, these frameworks fall short in supporting the basic functionalities of a PW. In this Section, the framework used to support the functionalities of the CoI architecture is described. F irst, the main components of the proposed architec-ture, their associated data structures and basic functionalities are presented. The mechanisms and schemes used by the overl ay architecture for object indexing, advertising and retrieval are then discussed. 3.1 Object Metadata, Semlets, and User Interest Profiles In the CoI architecture, an object is associated with metadata which is com-posed of two main attributes:  X  X ocation X  and  X  X emantic X  .Formally,ametadata of object o ,withinaCoI c , can be represented by m o =( L o ,S c o ), where L o is the location of object o ,and S c o define the semantic of object o , as agreed upon by the members of c .

The location attribute is used to locate an obj ect and is typically represented by the object URL. The Semantic attribute is concerned with the meaning of the associated element, as agreed upon by the members of a CoI. This attribute is represented by a set of concepts defined by the community ontology, referred to as Cmm-Ont . A Cmm-Ont can be viewed as a dictionary of words and their relations used within a community. It is used to ensure consistency in semantic classification within the community.

In practice, a semantic representation of an object can be inferred from the keywords that appear in the object attributes. Typically, an extraction function, thereof referred to as X() , scans the object semantic to extract a set of keywords. The extracted keywords are mapped into the concepts defined by the Cmm-Ont. These concepts are then used to index and advertise associat ed objects within the CoI. Note that the mapping of keywords into Cmm-Ont concepts is  X  X ell-defined X  within a CoI and, as such, is accessible to all members of the community.
In addition to its attributes, an object is also associated with a semantic-aware agent, referred to as a semlet . A semlet acts as the  X  surrogate  X  agent to advertise its associated object and and retrieve similar objects of interest ,as specified in the user X  X  interest profile .Formally,asemlet,associatedwithan where L Sl o is the semlet locator, R Sl o is the set of semantic rules, and  X  Sl o is a user-defined similarity algorithm with respect to object o . The semlet locator is typically the URL of its associated object . Notice that a semlet needs not reside at the same location as its object, as long as it maintains a pointer to the object location.

The R Sl o component of the semlet profile is derived from the  X  X ser X  X  personal interests X  with respect to an object o . These interests can be either explicitly expressed by the user in an interest profile or implicitly derived from objects created by the user 1 . These interests are mapped into a set of Personalized Interest Rules (PIR), using a user-defined mapping function, denoted as U() .
For a given object o and a semlet Sl o , each rule, included in R Sl o , is a logical expression involving a set of concepts and a set of logical operations. These operations typically include AND (  X  ), OR (  X  ), or NEGATE (  X  ). Formally, R Sl o is represented by a tuple ( S u o ,  X  ), where S u o is the concept set associated with user u of community c with respect to object o ,and  X  is the set of operations defined on the concepts in S u o .Noticethat S u o  X  S c o =  X  , thereby ensuring that the rules used by a user to acquire an object of interest within c , are at least partly expressed based on the CoI defined seman tics. This constraint is necessary to  X  X ntegrate X  a user X  X  PW within a specific CoI, without limiting its integration into other CoIs.

The semlet uses its associated object me tadata to advertise the objet to mem-bers of a CoI. During its itinerary, the sem let registers its interests with respect to object o , based on its associated R Sl o . Consequently, when a new object is advertised, the semlet is notified if at least one of the rule in its R Sl o is  X  sat-isfied  X  by the semantic of the new object metadata. To illustrate this process, assume that the set R Sl o of semlet Sl o contains rule s i  X  ( s j  X  s k ). A new object, advertising a metadata containing the concepts { s i ,s k } and { s j ,s k ,s l } causes Sl o to be notified.

Upon notification, Sl o uses its associated user-de fined similarity algorithm,  X 
Sl o , to assess the similarity of the new object to the user X  X  interest and, in the case of a match, include the object to the user X  X  PW.

To support semlet advertising and retri eval in a dynamic, heterogeneous net-work environment, object metadata and s emlet profiles are distributed and in-dexed among the overlay nodes using the P2P overlay network, referred to as Ontology Overlay Network (OON). The OON uses community ontology cou-pled with DHT to infer a semantic structure that regulates location and access to a distributed set of objects and semlets. Consequently, the OON provides adaptive and scalable search and discovery to support the functionality of the proposed architecture. In the following section, the OON setup and organization are described. 3.2 PW Overlay Setup and Organization To support semantic-based indexing, discovery and advertising, the OON struc-ture assumes that the Intern et is organized into a set, D , of autonomous domains. Each domain, d  X  D , elects a node, n d , to act as an OON node in the semantic overlay network. The set of OON nodes, referred to as N , forms the basis of the OON. Hence, N = { n d | d  X  D and n d is an OON node } .Eachnode, n d  X  N ,has a set of neighbors, N d , which it uses to route data using a DHT-based strategy. The nodes in a given domain, d , address the semlet search and advertising to the OON node n d  X  N . Each OON node n d  X  N is assigned a set of semantics S n , and has responsibility to advertise objects and retrieve objects of interest for the semlets associated with any s i  X  S n .  X  s i  X  S n ,hash ( s i )= h i where h i is the key responsible by n d . A node that is responsible for s i is denoted as n s i .
A metadata is advertised and indexed to the OON based on its associated community concepts. These concepts are hashed using a system-wide hash func-tion to obtain a set of keys. These keys are then mapped to the overlay nodes using the DHT-based mapping scheme. These nodes are responsible for the ob-ject metadata. A semlet profile is stored and indexed in the OON using the same mapping scheme. Note, however, the mapped concepts are those extracted from the personalized interest rule. The indexing model describing how object metadata and personalized interest rules are indexed through OON is depicted in Figure 1. The underlying strategy of semlet advertising and retrieval is to advertise  X  ag-gressively  X  X oandretrieve X  selectively  X  from the community members of similar interest. A semlet advertis es and retrieves an object through the OON. First the semlet locates an OON node within its own domain. It then sends a query which contains the object metadata and its profile to this OON node. This OON node then routes the query to the OON node responsible for one of the hash keys of its associated concepts. When the quer y arrives at an OON node, it triggers the OON node to execute a procedure to discover semlet profiles whose rules are satisfied by its carried metadata. It also triggers the OON node to find objects whose metadata satisfy its carried rules. The object metadata and semlet profile contained in the query may be stored or indexed in this node for later discovery and notification. The matched profiles and object metadata are then forwarded to the next OON node responsible for the n ext concept in the associated concept set. The forwarding continues until all OON nodes responsible for the concepts in the concept set are visited. At the la st OON node, the query triggers the OON node to notify all semlets associated wi th collected profiles about the object, and send back the collected object metadata to the advertising semlet.

To support large number of semlets and objects in a heterogeneous and dy-namic environment, OON must efficiently manage storage and communication used in semlet advertising and retrieval. To this end, three semlet advertising and retrieval schemes, namely aggressive, crawler-based, and minimum-cover-rule schemes will be investigated in the following Sections. 4.1 Aggressive Scheme The  X  aggressive  X  scheme uses storage and communication aggressively to support semlet advertising and retrieval. The basic principle is to perform data indexing and storing on all the OON nodes responsible for their associated concepts. As a semlet visits these nodes, its associat ed object metadata and semlet profiles are stored and indexed for later discovery and advertising.

The advantage of the aggressive scheme is its added ability to deal with node failures. This is achieved through object metadata replication. The drawback of the aggressive scheme is the need to use multiple overlay nodes to store sem-let profiles and object metadata. This m ay lead to excessive overhead in term of storage. To address this shortcoming, a crawler-based scheme, which trades storage at the cost of increasing communication overhead, is described next. 4.2 Crawler-Based Scheme Similar to the aggressive scheme, the crawler-based scheme advertises and re-trieves objects of interest by sending a query to all the nodes that are responsible for its associated concepts. However, t he object metadata and semlet profile will be stored only in a subset of these nodes.

Using this strategy, a semlet may miss an object notification. Consider the case when a metadata of an object v with concepts { s i ,s j ,s l } is stored at n s l . Later, a semlet Sl o arrives with interest rules s i  X  s j  X  s i  X  s k and decides to semlet misses the object v .
 To resolve this problem, semlets no longer wait passively for notifications. Instead, a semlet periodically sends refr esh messages to update previously ad-vertised objects and potentially harves t new objects of interest at the remote site. In the case above, when the semlet of object v does refreshing, it discovers the newly added semlet profiles, and ad vertises to those semlets that missed advertising previously. The advertising and retrieval mechanism of this scheme is similar to the aggressive scheme, except that the subset of keys representing metadata and rules are stored for later notification and advertising. In addition, each semlet schedules an alarm to refresh a query periodically.

Overall, the crawler-based scheme saves storage at the cost of additional re-freshing. Consequently, the frequency at which refreshing is performed plays a crucial role in the overall performance of the scheme. In an environment where objects are created frequently, the rat e at which a semlet performs refreshing must be high. This is necessary to ensure that a semlet discovers the newly ad-vertised objects of interest. In static envi ronments, however, excessive refreshing may unnecessarily result in potentially prohibitive overhead. Therefore, the rate of refreshing must reflect the trade off between the awareness of newly advertised object and communication overhead. 4.3 Minimum-Cover-Rule Scheme The minimum-cover-rule (MCR) scheme leverages the benefit of aggressive and crawler-based scheme, while reducing its functional cost in term of communica-tion and storage. To achieve this goal, the MCR scheme computes a minimum set of nodes to ensure that all intereste d semlets are immediately notified when new objects are advertised, while minimi zing the storage requirement and com-munication overhead.

The minimum set of nodes is computed from a data structure representing a minimum set of key IDs associated with rules, referred to as Minimum Rule-Cover-Node Set ( MRS ). Each member of a MRS is represented by a tuple ( h, R h ), where h is a key ID and R h is a set of rules stored at the node responsible for h . For example, the MRS of a rule set R = { r 1 :( s i  X  s j ) ,r 2 :( s i  X  s k ) ,r 3 : ( s that rule r 1 and r 2 are assigned to be stored at the node responsible for h s i and rule r 3 is assigned to be stored at the node responsible for h s j . Therefore, the storage cost used to store these rules and bandwidth used to carries these profiles are minimized.

Finding a MRS for a given rule set is a two-step process: extracting  X  indepen-dent  X  rules from the rule set, and assigning rules to the most frequently appearing concepts. An independent rule is a rule which can be evaluated independently from other rules, and which cannot be broken down to smaller independent considered as an independent rule. r 2 is not because it contains two conjunctive clauses; it can be broken down into two independent rules ( s i  X  s m )and( s m  X  s l ). An independent rule is used to identify a concept dependency, which allows us to select minimum node responsible for storing a given rule. For example, r 1 in the example above can be stored at either n s i or n s k .

Using this scheme, the storage for per sonalize interest rules and matching computation are minimized. Consider the case, when a semlet Sl o has a rule set R = { r 1 :( s i  X  s j ) ,r 2 :( s i  X  s k ) ,r 3 :( s j  X  s l  X  s j  X  s k ) } and MRS = { the rule r 1 and r 2 to be stored at n s i and r 3 to be stored at n s j , instead of send-set does not affect the effectiveness of the semlet advertising and retrieval. The MRS can be computed off-line , prior to the semlet advertising or retrieval. The objective of this study is to assess and compare the performance of the advertising and retrieval schemes described above. To this end, a set of experi-ments, using different scenarios, are conducted to measure two key performance metrics: the effectiveness and efficien cy of the retrieval and advertising.
The effectiveness is measured in terms of the precision and recall of advertising and retrieval. The precision of advertis ing and retrieval is defined as percentage of the number of relevant object metadata that are retrieved to the number of all object metadata that are retrieved . The recall is defined as the percentage of the number of relevant object metadata that are retrieved to the number of relevant object metadata in the system . The efficiency is measured in term of the network and peer resources used for adver tising and retrieval, namely bandwidth consumption and storage used to store rules and object metadata. 5.1 Experimental Design and Procedure Two set of experiments are setup in the stable and churn environments. In a stable environment, prior to object crea tion, an OON structure is formed, and remains stable through out the experiment. In this experiment, Modelnet is used to simulate delay and bandwidth consumption for a given network topology [9]. The simulated network topology was generated by the Inet-topology software. For this study, four 5,000-node wide-area AS-level networks were generated, with 50, 100, 150, and 200 overlay nodes respectively. The overlay nodes and the core network were connected using 10 Mbps links with 100 ms latency. All stub-stub links are assigned 1 Gbps with 20 ms latency. The OON service is developed using a software package of Bamboo-dht , a recently developed DHT substrate targeted to provide a public DHT service [10]. Each OON node runs the OON service to support semlet advertising and retrieval. A cluster of 16 computers connected with 100 Mbps links is used in this experiment. One machine with a 2.0 GHz cpu is setup as an emulator, and the other 15 each with 1.4 GHz cpu are used to emulate multiple OON nodes. The emulator emulates the network delay by acting as a hub responsible for holding and releasing the packets destined to different overlay nodes.

In a churn environment, an OON structure is formed and dynamically changes as nodes randomly join and leave the network. Nodes are classified into two classes: long -lived and short -lived. A long-lived node is characterized by the node that once joins the network remains in the network through out the simulation. While a short-lived is defined as the node that joins and leaves the network with the average live-time of two minutes. Three scenarios of churn are simulated over a 500-node network, with 10%, 35% and 50% node churn respectively. In this experiment, the simulation software provided by the Bamboo-dht package is setup on a machine with 3.2 GHz cpu, and 1 GB of ram. The main objective of this experiment is to measure the effectiveness of the advertising and retrieval of the proposed schemes in a churn environment.

For each simulation scenario, three experiments were conducted. All experi-ments are tested using five thousands ob jects. Each object is randomly created by one of the OON nodes using Poisson process with inter-arrival time of 20 sec-onds per OON node. Each object is associated with 2 to 4 concepts drawn from an ontology described using 100 concepts. This relatively small size ontology was used to ensure some level of similari ties between different objects, which in turn allows the formation of different PW s. The selection of a concept associated with an object and a rule follows the Zipf distribution, where the frequency of selecting a concept that is i th -most-frequently-used is approximately inversely proportional to i . This distribution is well known in representing semantic se-lection in natural languages. Conseque ntly, few PWs are expected to have large collections of objects. Once an object is created by an OON node, the OON service generates a single rule of a conjunc tive clause involving all concepts gen-erated for the object. For example, a rule s i  X  s j  X  s k is generated for an object metadata with semantic { s i ,s j ,s k } . This rule is then associated with a semlet profile, which is sent to an OON node, based on the OON index model defined in Figure 1, for advertising and retrieval.

The average precision and recall is obtained by the post-process of the off-line computation. Upon the completion of the simulation, the number of objects retrieved for each semlet is computed. The info rmation of all semlets, their object metadata, profiles and objects of inter est from all the OON nodes is collected and used to compute the number of relevant objects , and those of which are retrieved . These numbers are then used to compute the precision and recall as described above. For the crawler-based sc heme, four refreshing intervals, of size 200, 400, 600, and 800 seconds respectively, were considered. The goal was to study the impact of the interval size on the performance of the crawler-based scheme in comparison to the other schemes. 5.2 Precision and Recall Stable Environment: The results show that the aggressive and minimum-rule-cover scheme give 100% precision and recall, while the crawler-based scheme only achieved 100% precision. This can be explained by the fact that using crawler-based scheme, a semlet may miss the objects that are advertised earlier and stored on the nodes that the semlet does not visit. The percent of missing objects is directly impacted by the size o f the OON and the size of the refreshing intervals, as shown in Figure 2. Churn Environment: The results in Figure 3 show that the aggressive scheme and the crawler-based scheme with small refreshing periods (200 and 400 sec-onds) outperform the minimum-rule-cover scheme as the percentage of churn nodes in the network increases. The results also confirm that as the refresh in-terval increases, the effectiveness of cra wler-based scheme reduces considerably. This can be explained by the fact that the churn of the OON causes the lost of object metadata and semlet profiles previously advertised. The aggressive scheme is the most effective since it provides some level of replication. The crawler-based scheme with small refresh intervals, though without replication, outperforms the minimum-rule-cover, since its refreshin g strategy provides some level of data re-covery. As the refresh interval increases , the effectiveness of the crawler-based scheme decreases as the data recovery are not able to catch up on the data lost. 5.3 Bandwidth and Storage Efficiency The results in Figure 4 confirm that the crawler-based scheme consumes more bandwidth than the other two schemes. The results also show that the OON size does not impact the bandwidth consumption of the aggressive and minimum-rule-cover scheme. However, in the crawler-based scheme, as the OON size in-creases, the bandwidth consumption per node decreases. This can be explained that when the OON is small, most of the OON nodes handle the refreshing traf-fic. On the other hand, when the OON increases in size, this traffic is spread widely among the OON nodes. As a result, the average bandwidth consumption decreases.

For the storage efficiency, the result sh ows that the crawler-based scheme deploys storage most efficiently among the three schemes. The aggressive scheme, on the other hand, exhibits the worst performance with respect to storage. It also shows that as the OON size increases, the average storage used per OON node decreases. This is because the metadata and profiles are spread among more OON nodes as the OON size increases.
 An architecture to enable the dynamic formation of communities of interest is proposed. The data structures, mechanisms, and protocols necessary to support resource access and knowle dge sharing among membe rs of a community of in-terest are described. A study to assess the p erformance of different strategies for resource advertising and retrieval is presented. The experimental results show that the minimum-rule-cover scheme is m ore effective and efficient than the other two schemes in the stable environment. The scheme exhibits a 100 % precision and recall, while consuming an acceptabl e amount of bandwidth and storage. In the churn environment, however, the aggressive and crawler-based schemes outperform the minimum-rule-cover sch eme. The tradeoff between the recall and the storage and communication cost in different churn environments will be the focus of the future work. Furthermore, strategies to balance the load among OON nodes, including caching and data chaining, will be explored. Lastly, to enhance robustness and increase data availability, mechanisms such as data replication and erasure coding will be considered.

