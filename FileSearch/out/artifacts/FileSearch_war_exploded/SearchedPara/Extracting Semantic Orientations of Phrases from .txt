 Technology for affect analysis of texts has recently gained attention in both academic and industrial ar-eas. It can be applied to, for example, a survey of new products or a questionnaire analysis. Automatic sentiment analysis enables a fast and comprehensive investigation.

The most fundamental step for sentiment analy-sis is to acquire the semantic orientations of words: positive or negative (desirable or undesirable). For example, the word  X  X eautiful X  is positive, while the word  X  X irty X  is negative. Many researchers have de-veloped several methods for this purpose and ob-tained good results. One of the next problems to be solved is to acquire semantic orientations of phrases, or multi-term expressions, such as  X  X igh+risk X  and  X  X ight+laptop-computer X . Indeed the semantic ori-entations of phrases depend on context just as the se-mantic orientations of words do, but we would like to obtain the orientations of phrases as basic units for sentiment analysis. We believe that we can use the obtained basic orientations of phrases for affect analysis of higher linguistic units such as sentences and documents.

A computational model for the semantic orienta-tions of phrases has been proposed by Takamura et al. (2006). However, their method cannot deal with the words that did not appear in the training data. The purpose of this paper is to propose a method for extracting semantic orientations of phrases, which is applicable also to expressions consisting of unseen words. In our method, we regard this task as the noun classification problem for each adjective; the nouns that become respectively positive (negative, or neutral) when combined with a given adjective are distinguished from the other nouns. We create a lexical network with words being nodes, by con-necting two words if one of the two appears in the gloss of the other. In the network, each node has one of the three orientation values and the neighboring nodes expectedly tend to have the same value. For example, the gloss of  X  X ost X  is  X  X  sacrifice, loss, or penalty X  and these words (cost, sacrifice, loss, and penalty) have the same orientation. To capture this tendency of the network, we adopt the Potts model for the probability distribution of the lexical net-work. For each adjective, we estimate the states of the nodes, which indicate the semantic orientations of the adjective-noun pairs. Information from seed words is diffused to unseen nouns on the network.
We also propose a method for enlarging the seed set by using the output of an existing method for the seed words of the probability computation.

Empirical evaluation shows that our method works well both for seen and unseen nouns, and that the enlarged seed set significantly improves the clas-sification performance of the proposed model. The semantic orientation classification of words has been pursued by several researchers. Some of them used corpora (Hatzivassiloglou and McKeown, 1997; Turney and Littman, 2003), while others used dictionaries (Kobayashi et al., 2001; Kamps et al., 2004; Takamura et al., 2005; Esuli and Sebastiani, 2005).

Turney (2002) applied an internet-based tech-nique to the semantic orientation classification of phrases, which had originally been developed for word sentiment classification. In their method, the number of hits returned by a search-engine, with a query consisting of a phrase and a seed word (e.g.,  X  phrase NEAR good X ) is used to determine the ori-entation. Baron and Hirst (2004) extracted colloca-tions with Xtract (Smadja, 1993) and classified the collocations using the orientations of the words in the neighboring sentences. Their method is similar to Turney X  X  in the sense that cooccurrence with seed words is used. In addition to individual seed words, Kanayama and Nasukawa (2006) used more compli-cated syntactic patterns that were manually created. The four methods above are based on context infor-mation. In contrast, our method exploits the internal structure of the semantic orientations of phrases.
Wilson et al. (2005) worked on phrase-level se-mantic orientations. They introduced a polarity shifter. They manually created the list of polarity shifters. Inui (2004) also proposed a similar idea.
Takamura et al. (2006) proposed to use based on latent variable models for sentiment classification of noun-adjective pairs. Their model consists of vari-ables respectively representing nouns, adjectives, se-mantic orientations, and latent clusters, as well as the edges between the nodes. The words that are similar in terms of semantic orientations, such as  X  X isk X  and  X  X ortality X  (i.e., the positive orientation emerges when they are  X  X ow X ), make a cluster in their model, which can be an automated version of Inui X  X  or Wilson et al. X  X  idea above. However, their method cannot do anything for the words that did not appear in the labeled training data. In this paper, we call their method the latent variable method (LVM). If a variable can have more than two values and there is no ordering relation between the values, the network comprised of such variables is called Potts model (Wu, 1982). In this section, we ex-plain the simplified mathematical model of Potts model, which is used for our task in Section 4. The Potts system has been used as a mathematical model in several applications such as image restora-tion (Tanaka and Morita, 1996) and rumor transmis-sion (Liu et al., 2001). 3.1 Introduction to the Potts Model Suppose a network consisting of nodes and weighted edges is given. States of nodes are represented by c . The weight between i and j is represented by w
Let H ( c ) denote an energy function, which indi-cates a state of the whole network: H ( c ) =  X   X  where  X  is a constant called the inverse-temperature , L is the set of the indices for the observed variables, a is the state of each observed variable indexed by i , and  X  is a positive constant representing a weight on labeled data. Function  X  returns 1 if two arguments are equal to each other, 0 otherwise. The state is penalized if c H ( c ) , the probability distribution of the network is represented as P ( c ) = exp { X  H ( c ) } /Z , where Z is a normalization factor.

However, it is computationally difficult to exactly estimate the state of this network. We resort to a mean-field approximation method that is described by Nishimori (2001). In the method, P ( c ) is re-placed by factorized function  X  ( c ) = Q Then we can obtain the function with the smallest value of the variational free energy: By minimizing F ( c ) under the condition that  X  i , equation for i  X  L :
The fixed point equation for i /  X  L can be obtained by removing  X  X  ( c, a
This fixed point equation is solved by an itera-tive computation. In the actual implementation, we represent  X  crete Tchebycheff polynomials (Tanaka and Morita, 1996). Details on the Potts model and its computa-tion can be found in the literature (Nishimori, 2001). After the computation, we obtain the function model in this formulation is equivalent to the mean-field Ising model (Nishimori, 2001). 3.2 Relation to Other Models This Potts model with the mean-field approximation has relation to several other models.

As is often discussed (Mackay, 2003), the min-imization of the variational free energy (Equa-tion (2)) is equivalent to the obtaining the factorized model that is most similar to the maximum likeli-hood model in terms of the Kullback-Leibler diver-gence.

The second term of Equation (2) is the entropy of the factorized function. Hence the optimization problem to be solved here is a kind of the maxi-mum entropy model with a penalty term, which cor-responds to the first term of Equation (2).

We can find a similarity also to the PageRank al-gorithm (Brin and Page, 1998), which has been ap-plied also to natural language processing tasks (Mi-halcea, 2004; Mihalcea, 2005). In the PageRank al-gorithm, the pagerank score r where d is a constant ( 0  X  d  X  1 ). This update equation consists of the first term corresponding to random jump from an arbitrary node and the sec-ond term corresponding to the random walk from the neighboring node.
 Let us derive the first order Taylor expansion of Equation (3). We use the equation for i /  X  L and denote the denominator by Z exp x  X  1 + x , we obtain Equation (5) clearly has a quite similar form as Equation (4). Thus, the PageRank algorithm can be regarded as an approximation of our model. Let us clarify the difference between the two algorithms. The PageRank is designed for two-class classifica-tion, while the Potts model can be used for an arbi-trary number of classes. In this sense, the PageRank is an approximated Ising model. The PageRank is applicable to asymmetric graphs, while the theory used in this paper is based on symmetric graphs. In this section, we explain our classification method, which is applicable also to the pairs consisting of an adjective and an unseen noun. 4.1 Construction of Lexical Networks We construct a lexical network, which Takamura et al. (2005) call the gloss network, by linking two words if one word appears in the gloss of the other word. Each link belongs to one of two groups: the same-orientation links SL and the different-orientation links DL .

If a negation word (e.g., nai, for Japanese) follows a word in the gloss of the other word, the link is a different-orientation link. Otherwise the links is a
We next set weights W = ( w where l j , and d ( i ) denotes the degree of word i , which means the number of words linked with word i . Two words without connections are regarded as being connected by a link of weight 0. 4.2 Classification of Phrases Takamura et al. (2005) used the Ising model to ex-tract semantic orientations of words (not phrases). We extend their idea and use the Potts model to ex-tract semantic orientations of phrasal expressions.
Given an adjective, the decision remaining to be made in classification of phrasal expressions con-cerns nouns. We therefore estimate the state of the nodes on the lexical network for each adjective. The nouns paring with the given adjective in the train-ing data are regarded as seed words, which we call seen words, while the words that did not appear in the training data are referred to as unseen words.
We use the mean-field method to estimate the state of the system. If the probability  X  able being positive (negative, neutral) is the highest of the three classes, then the word corresponding to the variable is classified as a positive (negative, neu-tral) word.

We explain the reason why we use the Potts model instead of the Ising model. While only two classes (i.e., positive and negative) can be modeled by the Ising model, three classes (i.e., positive, negative and neutral) can be modelled by the Potts model. For the semantic orientations of words, all the words are sorted in the order of the average orientation value, equivalently the probability of the word be-ing positive. Therefore, even if the neutral class is not explicitly incorporated, we can manually deter-mine two thresholds that define respectively the pos-itive/neutral and negative/neutral boundaries. For the semantic orientations of phrasal expressions, however, it is impractical to manually determine the thresholds for each of the numerous adjectives. Therefore, we have to incorporate the neutral class using the Potts model.

For some adjectives, the semantic orientation is constant regardless of the nouns. We need not use the Potts model for those unambiguous adjectives. We thus propose the following two-step classifica-tion procedure for a given noun-adjective pair &lt; n, a &gt; . 1. if the semantic orientation of all the instances 2. otherwise, use the Potts model.

We can also construct a probability model for each noun to deal with unseen adjectives. However, we focus on the unseen nouns in this paper, because our dataset has many more nouns than adjectives. 4.3 Hyper-parameter Prediction The performance of the proposed method largely de-pends on the value of hyper-parameter  X  . In order to make the method more practical, we propose a cri-terion for determining its value.

Takamura et al. (2005) proposed two kinds of cri-teria. One of the two criteria is an approximated leave-one-out error rate and can be used only when a large labeled dataset is available. The other is a no-tion from statistical physics, that is, magnetization :
At a high temperature, variables are randomly ori-ented ( paramagnetic phase , m  X  0 ). At a low temperature, most of the variables have the same direction ( ferromagnetic phase , m 6 = 0 ). It is known that at some intermediate temperature, ferro-magnetic phase suddenly changes to paramagnetic phase. This phenomenon is called phase transition . Slightly before the phase transition, variables are lo-cally polarized; strongly connected nodes have the same polarity, but not in a global way. Intuitively, the state of the lexical network is locally polarized. Therefore, they calculate values of m with several different values of  X  and select the value just before the phase transition.

Since we cannot expect a large labeled dataset to be available for each adjective, we use not the approximated leave-one-out error rate, but the magnetization-like criterion. However, the magne-tization above is defined for the Ising model. We therefore consider that the phase transition has oc-curred, if a certain class c begins to be favored all over the system. In practice, when the maximum of the spatial averages of the approximated probabil-ities max increasing  X  , we consider that the phase transition has occurred. We select the value of  X  slightly be-fore the phase transition. 4.4 Enlarging Seed Word Set We usually have only a few seed words for a given adjective. Enlarging the set of seed words will in-crease the classification performance. Therefore, we automatically classify unlabeled pairs by means of an existing method and use the classified instances as seeds.

As an existing classifier, we use LVM. Their model can classify instances that consist of a seen noun and a seen adjective, but are unseen as a pair. Although we could classify and use all the nouns that appeared in the training data (with an adjective which is different from the given one), we do not adopt such an alternative, because it will incorporate even non-collocating pairs such as  X  X reen+idea X  into seeds, resulting in possible degradation of classifi-cation performance. Therefore, we sample unseen pairs consisting of a seen noun and a seen adjective from a corpus, classify the pairs with the latent vari-able model, and add them to the seed set. The en-larged seed set consists of pairs used in newspaper articles and does not include non-collocating pairs. 5.1 Dataset We extracted pairs of a noun (subject) and an ad-jective (predicate), from Mainichi newspaper arti-cles (1995) written in Japanese, and annotated the pairs with semantic orientation tags : positive, neu-tral or negative. We thus obtained the labeled dataset consisting of 12066 pair instances (7416 different pairs). The dataset contains 4459 negative instances, 4252 neutral instances, and 3355 positive instances. The number of distinct nouns is 4770 and the num-ber of distinct adjectives is 384. To check the inter-annotator agreement between two annotators, we calculated  X  statistics, which was 0.640 2 . This value is allowable, but not quite high. However, positive-negative disagreement is observed for only 0.7% of the data. In other words, this statistics means that the task of extracting neutral examples, which has hardly been explored, is intrinsically difficult.
We should note that the judgment in annotation depends on which perspective the annotator takes;  X  X igh+salary X  is positive from employee X  X  perspec-tive, but negative from employer X  X  perspective. The annotators are supposed to take a perspective subjec-tively. Our attempt is to imitate annotator X  X  decision. To construct a classifier that matches the decision of the average person, we also have to address how to create an average corpus. We do not pursue this is-sue because it is out of the scope of the paper.
As unlabeled data, we extracted approximately 65,000 pairs for each iteration of the 10-fold cross-validation, from the same news source.

The average number of seed nouns for each am-biguous adjective was respectively 104 in the la-beled seed set and 264 in the labeled+unlabeled seed set. Please note that these figures are counted for only ambiguous adjectives. Usually ambiguous ad-jectives are more frequent than unambiguous adjec-tives. 5.2 Experimental Settings We employ 10-fold cross-validation to obtain the averaged classification accuracy. We split the data such that there is no overlapping pair (i.e., any pair in the training data does not appear in the test data).
Hyperparameter  X  was set to 1000, which is very large since we regard the labels in the seed set is reliable. For the seed words added by the classifier, lower  X  can be better. Determining a good value for  X  is regarded as future work.

Hyperparameter  X  is automatically selected from { 0.1, 0.2,  X  X  X  , 2.5 } for each adjective and each fold of the cross-validation using the prediction method described in Section 4.3. 5.3 Results The results of the classification experiments are summarized in Table 1.

The proposed method succeeded in classifying, with approximately 65% in accuracy, those phrases consisting of an ambiguous adjective and an unseen noun, which could not be classified with existing computational models such as LVM.

Incorporation of unlabeled data improves accu-racy by 15.5 points for pairs consisting of a seen noun and an ambiguous adjective, and by 3.5 points for pairs consisting of an unseen noun and an am-biguous adjective, approximately. The reason why the former obtained high increase is that pairs with likely to be found in the added unlabeled dataset.
If we regard this classification task as binary clas-sification problems where we are to classify in-stances into one class or not, we obtain three accu-racies: 90.76% for positive, 81.75% for neutral, and 86.85% for negative. This results suggests the iden-tification of neutral instances is relatively difficult. Next we compare the proposed method with LVM. The latent variable method is applicable only to instance pairs consisting of an adjective and a seen noun. Therefore, we computed the accuracy for 6586 instances using the latent variable method and obtained 80.76 %. The corresponding accuracy by our method was 80.93%. This comparison shows that our method is better than or at least comparable to the latent variable method. However, we have to note that this accuracy of the proposed method was computed using the unlabeled data classified by the latent variable method. 5.4 Discussion There are still 3320 (=12066-8746) word pairs which could not be classified, because there are no entries for those words in the dictionary. However, the main cause of this problem is word segmenta-tion, since many compound nouns and exceedingly-subdivided morphemes are not in dictionaries. An appropriate mapping from the words found in cor-pus to entries of a dictionary will solve this problem. We found a number of proper nouns, many of which are not in the dictionary. By estimating a class of a proper noun and finding the words that matches the class in the dictionary, we can predict the semantic orientations of the proper noun based on the orienta-tions of the found words.

In order to see the overall tendency of errors, we calculated the confusion matrices both for pairs of an ambiguous adjective and a seen noun, and for pairs of an ambiguous adjective and an unseen noun (Table 2). The proposed method works quite well for positive/negative classification, though it finds still some difficulty in correctly classifying neutral in-stances even after enhanced with the unlabeled data.
In order to qualitatively evaluate the method, we list several word pairs below. These word pairs are classified by the Potts model with the la-beled+unlabeled seed set. All nouns are unseen; they did not appear in the original training dataset. Please note again that the actual data is Japanese. positive instances negative instances
For example, although both  X  X alary X  and  X  X om-mission X  are kinds of money, our method captures
Gold standard neutral 198 1656 286 2140 60 427 104 591 the difference between them;  X  X igh salary X  is posi-tive, while  X  X ow (cheap) commission X  is also posi-tive. We proposed a method for extracting semantic ori-entations of phrases (pairs of an adjective and a noun). For each adjective, we constructed a Potts system, which is actually a lexical network extracted from glosses in a dictionary. We empirically showed that the proposed method works well in terms of classification accuracy.

Future work includes the following:  X  We assumed that each word has a semantic ori- X  The value of  X  must be properly set, because  X  To address word-segmentation problem dis- X  The semantic orientations of pairs consisting of
