 We present SmartVenues, a system that recommends nearby venues to a user who visits or lives in a city. SmartVenues models the variation over time of each venue X  X  level of at-tendance, and uses state-of-the-art time series forecasting algorithms to predict the future attendance of these venues. We use the predicted levels of attendance to infer the popu-larity of a venue at future points in time, and to provide the user with recommendations at different times of the day. If the users log in with their Facebook account, the recommen-dations are personalised using the pages they like . In this demonstrator, we detail the architecture of the system and the data that we collect in real-time to be able to perform the predictions. We also present two different interfaces that build upon our system to display the recommendations: a web-based application and a mobile application.
 Categories and Subject Descriptors: H.3.3 [Informa-tion Storage &amp; Retrieval]: Information Search &amp; Retrieval Keywords: venue recommendation; location-based social network; attendance prediction; time series forecasting; Four-square; Facebook
Mobile technologies are changing the way we look for and consume information. Search is becoming increasingly lo-cal, and is now mostly performed using mobile devices Looking for venues while on the move is a new task that is receiving growing interest, demonstrated by the popular-ity of Location-Based Social Networks (LBSNs) [11] such as Foursquare 2 , Yelp 3 , or Google Places 4 . In these LBSNs, users can broadcast their location to their friends (or to other users), and can rate or comment the venues they vis-ited. The preferences of users are derived from this implicit feedback, allowing the applications of the LBSNs to provide users with personalised venue recommendations [9, 10].
There are two main drawbacks in the current venue recom-mendation applications proposed by the leading LBSNs [3]. Firstly, they do not take the time of the day or the date into account. Indeed, the popularity of venues varies through-out the day, and can also depend on the day of the week or the season of the year. For example, bars are more likely to be crowded on week end nights, while parks are signifi-cantly more attractive during spring or summer time. Sec-ondly, they require the users to rate large amounts of venues to perform accurate personalised recommendations. This drawback is also known as the cold start problem of recom-mender systems [8].

In this demonstrator, we present SmartVenues, a venue recommendation system for discovering popular and person-alised venues in a city at different times of the day, with-out requiring the users to enter their preferences. Smart-Venues aims at 1) modelling the popularity of individual venues over time by predicting their levels of attendance, 2) recommending personalised venues to the users by us-ing the pages they like on Facebook, and 3) providing ap-propriate interfaces that are suitable for exploration (web-based) or discovery (mobile-based) scenarios. SmartVenues relies on a backend system that computes the predictions and recommendations (described in Section 2), on the top of which we have implemented the two different interfaces (Section 3). The web interface of SmartVenues can be ac-cessed at http://demos.terrier.org/SMART/venuesuggestion , and the mobile application can be downloaded from the Google Play store at https://play.google.com/store/apps/
The SmartVenues system is composed of two parts. The first one models the popularity of venues over time by query-ing Foursquare to obtain the levels of attendance for each venue in real-time, and by computing predictions of these levels of attendance. The second one is interactive and ranks the venues for a given Facebook user, at a given location and a given time. SmartVenues currently proposes recommen-dations for four cities: London, Amsterdam, San Francisco, and Glasgow.
We take a simple yet realistic definition of the popularity of a venue by considering its level of attendance: a venue that attracts a lot of people is more likely to be popular [5]. Figure 1: Predicting the attendance of the Harrods department store (London) on the 18 th November 2013, using three state-of-the-art time series fore-casting models. Models were trained from the 12 nd to the 17 th .
 We use the API of Foursquare 5 , which allows to obtain the number of people currently visiting the venue. By querying the API every hour for each venue, we build comprehensive time series of venue attendance. An example of such time series can be seen in Figure 1, where the green line represents the observations made over a six days period for the Harrods department store in London.

We predict the future levels of attendance of venues using time series forecasting algorithms, such as ARIMA (Autore-gressive integrated moving average), Exponential Smooth-ing, or Neural Networks [7]. These algorithms use past ob-servations to learn trends, seasonal variations, and recur-ring patterns in the data. It suits perfectly our use case, for which we have large amounts of very precise (i.e. hourly) data. Moreover, they offer the advantage to predict not only the value of the next point of the time series, but the val-ues of the next N points. In our case, we predict the levels of attendance of each venue for the next 24 hours. An ex-ample of these predictions is displayed in Figure 1, where we see the output values of three forecasting models for the seventh day, after having trained the models on the first six days. All of the time series forecasting models were built us-ing the well-known forecast package of R [4]. The ARIMA algorithm was found to be the most accurate according to our preliminary experiments, and we logically use it as our default forecasting model.
The other part of SmartVenues focuses on the actual re-trieval and recommendation of venues. However, this pro-cess does not rely on traditional collaborative filtering ap-proaches, and hence does not require the users to enter a list of preferences nor does it ask them to rate venues. We per-sonalise the recommendations by asking the users to log in with their Facebook account, thereby using the pages they like on the social network as a surrogate for their personal interests. We used the authentication software development kit provided by Facebook 6 in order to obtain the pages that users like without storing any personal information.
We employ a simple and straightforward approach for personalising the recommendations. First, we indexed the homepages of the venues using the Terrier IR platform [6]. Then, when the users  X  logged in with their Facebook ac-count  X  request recommendations, we use the category (e.g.  X  X usic X ,  X  X uthor X ,  X  X useum X , ...) of each of the Facebook pages they like as a query to retrieve a ranked list of venues. In other words, the score of a venue v is computed as follows: where likes( u ) denotes the set of Facebook pages liked by the user u , and cat( p ) is the category of the page p .In this demonstrator, we use the DPH weighting model [1] as the RSV function. Finally, we only keep the venues that are close to the location that the user entered as an input parameter, in order to recommend nearby venues. More specifically, we do not recommend venues that are more than 500 meters away from their location.
The web-based application allows the users to set custom locations and to explore the recommendations, as well as the venue popularity predictions. Conversely, the mobile application focuses on a real-time scenario, where the users are in the city and want to obtain entertaining suggestions. We detail their components in the following sections.
First, users need to log in with their Facebook account to receive personalised recommendations. We set a predefined list of locations, represented as links that the user can click on, in order to help users in their exploration. They can easily change their location by double-clicking on a specific point of the map, thus triggering a change in the recommen-dations. The interface, depicted in Figure 2, is composed of three main parts.

The first one is the map (A), on which the venues are displayed as red balloons. The location of the user is repre-sented by a green arrow. The second part is the recommen-dation list (B). When users click on a venue in this list, the map is centered around this venue and an information win-dow  X  containing venue information such as its categories, its URL in Foursquare, and a randomly selected image  X  is displayed. The last part (C) is a graph showing the fore-casted attendance of a selected venue for the past and com-ing hours, and is the main originality of this interface. The users can then look at the current popularity of the venues, and see when the system predict their popularity to be at its maximum. Moreover, they can drag the slider of this graph further into the  X  X uture X , which will automatically re-compute the recommendations and re-rank the venues by taking their future popularity into account. This feature can be used to explore the popularity of different venues (or an entire area of the city) at different times of the day, and can hence help the users to take decisions and plan their day.
While the web-based application focuses on exploration and allows the users to see how the rankings change depend-ing on the hour, the mobile application is centered on an  X  X n-the-move X  scenario. In this scenario, the user does not have to specify his location, it is automatically inferred from Figure 2: The web-based application is composed of three parts: (A) an interactive map, (B) a recom-mendation list, and (C) a graph showing the fore-casted attendance of the selected venue. the GPS or the mobile access data. Then, recommendations are provided using the approach detailed in Section 2.
Again, the users have to log in with their Facebook ac-count to be able to see the personalised recommendations, as shown on the left-hand picture of Figure 3. The recom-mended venues are displayed on a map and are represented by icons associated to their categories (e.g. Food, Arts &amp; Entertainment). A ranked list of recommendations is also presented to the user, showing information such as the total number of check-ins, the distance between the location of the user and the venue, or the rating. When clicking on a venue, the mobile application provides more detailed infor-mation, as shown on the right-hand picture of Figure 3. It includes a detailed map, along with pictures of the venue that have been taken by Foursquare users, some social in-formation (number of likes, check-ins, and unique users), as well as the comments that have been provided by other users. The users can then choose to check in the venue, bookmark it, or ask the application to show them the direc-tions towards the venue. Finally, when the users move to a new location (distant enough from the initial one), the ap-plication automatically sends them a notification and pushes new recommendation of nearby popular venues.
We have described SmartVenues, a system that aims at providing popular and personalised venue recommendations to users, and we have presented two interfaces that we built on the top of this system. While the web-based interface is suitable for exploratory scenarios (e.g.  X  X hat will be the most interesting and popular venue in three hours around this location? X ), the mobile application can be used whilst on the move and thereby can help to address increasing local and mobile information needs.

The context-aware suggestion of venues is still a challenge within the Information Retrieval community [2], especially in relation to the evaluation of such a complex task. There-fore, we envision several uses of the mobile application for evaluation purposes. Firstly, we could use the GPS function of the smartphones to actually see if a user visited a venue that was recommended, and derive several indicators such as the time spent in a venue. Secondly, we could use these in-formation to perform A/B testing or interleaving evaluations Figure 3: Two views of the mobile application. On the left-hand side, the recommended venues are dis-played on the map and as a ranked list. Details about venues are provided when clicking on them, as shown on the right-hand side picture. in order to compare the effectiveness of various recommen-dation or ranking algorithms. The interaction data could also be used to deploy algorithms that can learn over time if users prefer popular or personalised recommendations, and to re-rank venues accordingly. Finally, we could obtain city-wide data that would help us answer questions such as: why do people visit these venues? Are there areas of the city that need to be improved to attract more people? This work has been carried out in the scope of the EC co-funded project SMART (FP7-287583).
