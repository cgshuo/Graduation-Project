 Query performance prediction is aimed at predicting the re-trieval effectiveness that a query will achieve with respect to a particular ranking model. In this paper, we study query performance prediction for a ranking model that explicitly incorporates the time dimension into ranking. Different time-based predictors are proposed as analogous to existing keyword-based predictors. In order to improve predicting performance, we combine different predictors using linear regression and neural networks. Extensive experiments are conducted using queries and relevance judgments obtained by crowdsourcing.
 Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval General Terms Algorithms, Experimentation, Performance Keywords Query performance prediction, Time-aware rank-ing
In this paper we study the performance prediction of a query explicitly provided with time, for example, the erup-tions of volcanoes in Iceland before 2010 . The query is explic-itly p rovided with temporal information needs , which means that a user wants to know about volcanic events in Iceland during the years before 2010. To determine query perfor-mance accurately, both textual and temporal information must be considered. If the query is predicted to perform very poorly, the system can help a user reformulate the query by performing X  X uery suggestion X  X f terms and/or time relevant to the query, e.g., a list of all volcanic mountains and time periods of major eruptions in Iceland. On the other hand, if the query is predicted to be sufficiently good , it can gain fur-ther improvement by document re-ranking with time-based pseudo-relevance feedback [6]. Let q be a temporal query, D be a document collection, T be a set of all temporal expressions in D . N D is the to-tal number of documents in D and N T is the number of all distinct temporal expressions in T . Temporal query perfor-mance prediction is aimed at predicting the retrieval effec-tiveness for q . Because q is strongly time-dependent, both the statistics of the document collection D and the set of temporal expressions T must be taken into account. Tempo-ral query performance prediction is defined as f ( q, D, T )  X  [0 , 1], where f is a prediction function (so-called a predictor) giving a predicted score that can indicate the effectiveness of q . We are only interested in pre-retrieval predictors because they predict query performance independently from a rank-ing method as opposed to post-retrieval predictors. Tempo-ral expressions and the publication date of a document is represented as a quadruple [1]: ( tb l , tb u , te l , te and tb u are the lower bound and upper bound for the be-gin boundary of a time interval respectively. Similarly, te and te u are the lower bound and upper bound for the end boundary of a time interval. A temporal query q is com-posed of keywords q text and temporal expressions q time . A document d consists of the textual part d text , i.e., a bag of words, and the temporal part d time composed of the publica-tion date PubTime ( d ), and temporal expressions mentioned in the document X  X  contents ContentTime ( d ) or { t 1 , . . . t
We propose ten different time-based predictors analogous to keyword-based predictors, including T-AvQL , T-AvIDF , T-MaxIDF , T-AvICTF , T-SCS , T-SumSCQ , T-SumVAR , T-AvVAR , T-AvPMI and T-MaxPMI . The first time-based predictor T-AvQL is similar to the average length of a query in [7]. T-AvQL = 1 | q ample, a query X  X  temporal expression July 2010 is more spe-cific than 21 st century , and the first query should perform better than the latter. Hence, the shorter the time span of query, the better it performs. T-AvIDF is determines the specificity of q by leveraging document frequencies as done in [4] and can be computed using the INQUERY idf formula. df ( t ) is the number of documents containing t . T-MaxIDF is the maximum value of idf scores. Similar to [4], the averaged inverse collection time frequency is measured as T-AvICTF = 1 | q ber of occurrences of t in T . The simplified (pre-retrieval) version of Clarity Score [2] is proposed in [4]. We incorporate time into the simplified Clarity Score given as T-SCS .
T-SumSC Q is analogous to the summed collection query similarity [8], and it is aimed at capturing the similarity between q time and all temporal expressions in T .
The sum of query weight deviation [8] estimates how diffi-cult it is for the retrieval model to rank documents contain-ing query terms by examining term weights e.g. TF-IDF. For a temporal query, temporal weights will be determined instead of term weights . In this paper, we employ the time-aware ranking method TSU [6] to measure temporal weights . wh ere D t are documents containing t and | D t | is the size of D , or df ( t ). T-AvVAR is the averaged value of T-SumVAR . Time-based predictors above ignore the relationship between query terms and time. The query tsunami 2004 should per-form better than tsunami 2002 because tsunami and 2004 co-occur in a collection more often than by chance, while tsunami and 2002 rarely occur together. PMI is used to de-termine the relationship between a query term w  X  q text and time t  X  q time [3]. T-AvPMI is the averaged value of all PMI scores. The maximum score T-MaxPMI is also considered in a case that the averaged PMI value is low but at least one pair of query term and time has a high PMI.
The New York Times Annotated Corpus is used and 40 queries and judgments from [1]. Queries with day , month or year are grouped into the category  X  X hort period X  de-noted SP , and queries with decade , century as  X  X ong period X  queries denoted LP . There are two retrieval modes: 1) inclu-sive (both query terms and a temporal expression comprise a query q text ) and 2) exclusive (only query terms constitute q text and a temporal expression is excluded from q text ). We use the time-aware ranking method TSU [6] for determin-ing MAP. Parameters of TSU are an exponential decay rate DecayRate = 0 . 5,  X  = 0 . 5, and  X  = 6 months. We use the Weka implementation to model simple linear regression for a single predictor, and linear regression and neural network for combining multiple predictors as done in [5]. The models are trained using cross-validation of 5 folds with 10 repeti-tions. The averaged values of correlation coefficient and root mean squared error (RMSE) of 5 folds are reported.
Table 1 shows the results of single predictors, where each predictor is statistically tested with the worst performed pre-dictor (as underlined) using paired t-test with p &lt; 0 . 05 (in bold). Because all queries in the dataset associate with one temporal expression, we omit the result of some predictors, e.g., the results of T-MaxIDF and T-AvIDF are the same, so we only report one of them. AvQL and T-AvICTF out-perform other predictors for  X  X hort period X , while MaxIDF , SumSCQ and T-SumSCQ perform best for  X  X ong period X . RMSE shows similar results, that is, AvQL and T-AvICTF perform best (having the lowest RMSE) for  X  X hort period X . T-AvIDF is the worst predictor for  X  X ong period X , and its RMSE value unusually too high (=0.65). We found that the predicted scores of T-AvIDF for  X  X ong period X  queries are very small yielding high RMSE values.

Table 2 shows the results of combination methods using linear regression  X  and neural networks  X  . Each combined predictor is statistically tested with that of the best per-forming single predictors (that is, AvQL for  X  X hort period X  and T-SumSCQ for  X  X ong period X ). Each time-based predic-tor is combined with its corresponding keyword-based pre-dicto r. E.g., T-AvQL  X  denotes the combining of T-AvQL and its keyword-based predictor using linear regression. The combination of all predictors is denoted ALL . For  X  X hort pe-riod X  X nd inclusive , both T-AvQL  X  , T-AvQL  X  , ALL  X  and T-MaxPMI  X  outperform the best single predictor significantly. For X  X ong period X  the combined methods do not perform well since the correlation coefficient of T-SumSCQ is relatively high (though it is negative).
To conclude, time-based single predictors outperform the baseline predictors significantly for  X  X hort period X  queries, and the combined methods outperform single predictors sig-nificantly for most cases. Our planned future work are: 1) increase the number of temporal queries used for analysis, 2) consider time uncertainty as an indicator for predicting query performance, and 3) study post-retrieval prediction for temporal search.
