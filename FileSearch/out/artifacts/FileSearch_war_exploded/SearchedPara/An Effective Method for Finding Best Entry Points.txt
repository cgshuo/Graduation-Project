 Focused structured document retrieval employs the concept of best entry point (BEP), which is intended to provide optimal starting-point from which users can browse to relevant document components [4]. In this paper we describe and evaluate a method for finding BEPs in XML docum ents. Experiments conducted within the framework of INEX 2006 evaluation campaign on the Wikipedia XML collection [2] shown the effectiveness of the proposed approach. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  retrieval models, search process. Algorithms, Experimentation. Best entry points, XML, element retrieval, INEX. In traditional (flat) information retrieval, results are typically presented as a list of matching documents. For structured or focused information retrieval this alone is not a viable option: The user also needs to know where in the documents he can find the relevant text. Structured doc ument retrieval makes use of document components as the basis of the retrieval process, rather than complete documents. Within th is context the concept of Best Entry Points (BEPs) has been defined as document components from which the user can browse to obtain optimal access to relevant document components [6]. BEPs algorithms were studied in [4] on experimental data from the Shakespeare user study, which developed and evaluated different approaches to the problem of automatic identification of BEPs. The basic characteristics of BEPs are presented in [6] while [7] investigates different types of best entry points in structured document retrieval, and their usage and effectiveness in real information search tasks. In this paper we focus on automatic detection of the one  X  X rue X  BEP  X  i.e. a unique BEP per semi-structured document as required in the Best In Context task of INEX 2006. The aim of the task is to first identify relevant articles (the fetching phase), and then to identify the element corre sponding to the best entry points for the fetched articles (the br owsing phase). In the fetching phase, articles should be ranked according to their topical relevance. In the browsing phase, we have a single element whose opening tag corresponds to the best entry point for starting to read the relevant information in the article. Recent BEPs studies [3] suggested that the users have a strong preference for the most specific, most focused components that contain the most amount of rele vant information and the least amount of irrelevant content. They also identified several types of BEPs of which  X  X tart reading here X  BEPs  X  i.e. a leaf level entry point, representing the point where the users would prefer to be directed to and where they would want to start reading the text. This is the BEP type the most related to the INEX 2006 Best In Context task requirements. This was the most popular BEP type occurring in the Shakespeare collection. 62% of the  X  X tart reading here X  BEPs were the first leaf nodes occurring in a sequence of relevant leaf nodes. This em phasizes the importance of the document order for the automatic detection of BEPs. Starting from these experimental observati ons we tuned our algorithm for detecting the BEPs to return the first most relevant non-overlapping focused element for the requested topic. Each element in an XML document may be composed of a set of possible nested XML elements, textual pieces of information, unordered &lt;attribute, value&gt; pairs, or a mixture of such items. XML documents are generally repres ented as rooted, ordered, and labeled trees in which each node corresponds to an element and each edge represent a parent-child relationship. Leaf nodes are document components that correspond to the last elements of the hierarchical relationship chain. We compute the relevance score for all the leaves elements of the XML tree containing at least one of the researched terms. The relevance value v i  X  [0..1] of a node e i is computed as the normalized sum of the IDFs of the content only (CO) request terms  X  k that occur inside the element boundaries: where k is the number of terms  X  k in the CO request,  X  weighting factor specifying the di scriminating power of the term  X  in the collection :  X  k = 1  X  log((1+|D  X  k |)/(1+|D|)) ; where |D  X  k | is the number of documents in which  X  k is occurring ; |D| the total number of documents in the collection ; and  X  a normalization constant  X  = 1 /  X  k (  X  k ) ; We implemented a focused retrieval approach in which we consider the XML element containing a researched term as the basic and implicitly valid unit of retrieval regardless of its size. However, for XML nodes with mixed content like paragraphs or sections including presentation tags (i.e. italics , emphasized , etc.) overlapping elements may occur in the result list. To find the most exhaustive and specific element in a path we use a two phase process. First, we aggregate the relevance of the elements in order to reflect the relevance of their descendant elements (if any). The weights are calculated in a bottom-up manner starting from leaves to the highest non overlapping nodes composing the answer. The relevance of a node is computed as the arithmetic average of all its descendant relevant nodes including its own relevance. Second the most relevant element is selected recursively as long as it not overl aps with an already selected element. The first most releva nt non-overlapping element in the document order is selected as the BEP for the document. Its weight is propagated at the document level and used to rank the files by relevance. The proposed approach was evaluated within the framework of INEX 2006 evaluation campaign. The test collection [2] is composed of 659,388 English artic les in XML format extracted from Wikipedia and totaling 4.6 GB. A set of 111 content only (CO) and content and structure (CAS) topics with their associated BEPs assessments were used fo r the evaluation. In INEX 2006, the assessors were asked to i ndicate one and only one BEP for every document that has relevant content. Runs were evaluated with two metrics: i) a set based measure, BEPD (For BEP-Distance); and ii) an extension of precision recall (EPRUM) [1]. We present in Figure 1 and Table 1 the INEX 2006 Best In Context task official results compared with the proposed approach. At indexing time, the most frequent presentation tags and jump tags (i.e. emph , collectionlink , languagelink , etc.) were ignored. The documents were pr eprocessed for stopword removal and stemming and no constraints were used for phrase search. 
Table 1. INEX 2006 Best In Context Task official evaluation results. The ranks / 77 submissions are given in parentheses. Metric A=0.01 A=0.1 A=1 A=10 A=100 The runs are evaluated with different values for the A parameter (see Table 1). Note that high values of A (e.g. 10) does not discriminate whether the retrieved element is near to or far from the BEP. Whereas, low values of A (e.g. 0.1) favour runs that return elements very close to a BEP [1]. The proposed approach was ranked on the 1 st place out of 77 official submissions by both the BEPD and EPRUM metrics wh en using A=0.01. Similar to the proposed approach, [5] reported evaluation results that used a vague interpretation of the structural constraints specified in the CAS topics and different met hods for aggregating the nodes relevance values. These extensions did not augment the retrieval performances of the base method. We have described and evaluate d an efficient and effective method to automatically detect BEPs in semi-structured documents. This may help users to obtain optimal access to relevant information inside an XML document. In the future we plan to compare the benefits brought by our BEPs approach versus the performances of a sta ndard  X  X lain X  IR engine from the users X  point of view. [1] M. Lalmas, G. Kazai, J. Kamps, J. Pehcevski, B. Piwowarski [2] L. Denoyer and P. Gallinari. The Wikipedia XMLCorpus.
 [3] G. Kazai and E. Ashoori. What does Shakespeare have to do [4] M. Lalmas and J. Reid. Automatic identification of best [5] E. Popovici, G. M X nier, and P.-F. Marteau. SIRIUS XML IR [6] J. Reid, M. Lalmas, K. Finesilver, and M. Hertzum. Best [7] J. Reid, M. Lalmas, K. Finesilver, and M. Hertzum. Best 
