 Personal social networks are considered as one of the most influential sources in shaping a customer X  X  attitudes and be-haviors. However, the interactions with friends or colleagues in social networks of individual customers are barely observ-able in most e-commerce companies. In this paper, we study the problem of customer identification in social networks, i.e., connecting customer accounts at e-commerce sites to the corresponding user accounts in online social networks such as Twitter. Identifying customers in social networks is a crucial prerequisite for many potential marketing applica-tions. These applications, for example, include personalized product recommendation based on social correlations, dis-covering community of customers, and maximizing product adoption and profits over social networks.

We introduce a methodology CSI (Customer-Social Iden-tification) for identifying customers in online social networks effectively by using the basic information of customers, such as username and purchase history. It consists of two key phases. The first phase constructs the features across net-works that can be used to compare the similarity between pairs of accounts across networks with different schema (e.g. an e-commerce company and an online social network). The second phase identifies the top-K maximum similar and sta-ble matched pairs of accounts across partially aligned net-works. Extensive experiments on real-world datasets show that our CSI model consistently outperforms other commonly-used baselines on customer identification.
 H.2.8 [ Database Management ]: Database Applications  X  Data Mining E-commerce; Social Network; Customer Identification
Personal social networks affect the adoption of individ-ual innovations and products [13]. For example, customers usually gather information from friends, when they contem-plate purchasing goods and services. Customers also share opinions within their social networks regarding to different products which they have recently purchased or they are fa-miliar with. Such actions of acquiring and disseminating in-formation are critical to understanding customer behaviors and analyzing the factors that affect a customer X  X  decisions [16]. However, these actions are implicit in the social con-nections (e.g., the relationship of friends or colleagues) that are barely observable in most e-commerce sites.

Fortunately, the emergence of online social networks, such as Twitter and Facebook, presents a great opportunity to ac-cess publicly available information of social connections. It appears that considerable potential exists for novel applica-tions via leveraging the rich information from online social networks. Examples of applications include prediction of product adoption [6], personalized product recommendation via exploiting social correlation [6, 9] , and maximization of product adoption and profits over social networks [5]. In addition, mining the integrated information from social net-works and commercial companies leads to other promising applications, such as discovering community of customers and analyzing opinions [15, 28] of target customer commu-nities for designing a marketing strategy. One common and crucial assumption of these applications is the knowledge of social connections between customers. However, since an online social network is built for social communication, this knowledge has not been used for e-commerce.

To fulfill the gap between conventional companies and so-cial networks, in this paper, we tackle the problem of cus-tomer identification in social networks. The mapping of cus-tomers to their user accounts in social networks serves as a prerequisite for applying existing marketing techniques to a broader range of e-commerce. Moreover, astroturfing be-comes a serious problem in e-commerce nowadays. In 2013, the survey conducted by Dimensional Research 1 shows that 90% of consumers are influenced by online reviews in their purchasing decisions. The false advertising not only influ-ences a large amount of customers to make wrong purchasing decisions but also slanders good products/companies. How-ever, it is challenging to verify whether the review is spam or not due to lack of user information. Therefore, identifying customers in online social networks also provides a promis-ing way to facilitate fake review detection 2 . h ttp://www.zendesk.com/resources/customer-service-and-lifetime-customer-value The privacy issues are worth discussing. According to the Consumer Privacy Bill of Rights, e-commerce sites should Figure 1: Example of customer identification across a customer-product network and a social network.

Generally, in an e-commerce system, customers interact with products (or services) only 3 , while users in an online social network have connections with each other and inter-act with user-generated contents (e.g., tweets, pictures and videos posted by users). Therefore, the schema of these two systems are essentially different: the former is a bipartite customer-product network, but the latter is a general het-erogeneous social network involving all kinds of connections among users and user-generated contents.

Figure 1 shows an example of a customer-product network and a social network. In the customer-product network, five customers adopt three products; meanwhile, six users dis-cuss these products in the social network. Note that among the five customers, four of them also have user accounts in the social network but only two customers are identified (pairs of accounts marked in solid red lines). The task of cus-tomer identification is to discover which pair of accounts, as shown in question marks in Figure 1, belongs to the same idenvidual in real-world.

Although users may create alias accounts on social net-works, in most cases users will stick to a single account be-cause of the difficulty of managing multiple accounts. Fur-thermore, only the primary account that reveals the major social activities is of interest to the investigation. Hence, we assume that each customer shall be identified as at most one (primary) user account in social network and vise versa 4
Despite its value and significance, the customer identifi-cation task has not been addressed as it is very challenging due to the following two reasons: 1) Difference in network schema. Unlike most prior works on link prediction [12, 20, 21, 18], customer identification requires to predict links across networks with completely different schema (i.e., bipartite network vs. general hetero-geneous network). Most existing features for link predic-provide the privacy settings that allow users to avoid being t racking and keep their feedbacks/reviews private. On the other hand, users are encouraged and have better to adjust the privacy settings to their comfort levels.
Although contents generated by customers are useful, they are rare in most commercial companies, and thus they are not included in this work.
We ignore the case that an individual can have multiple accounts in the same network which is a different research problem and has been addressed in [7]. tion, such as number of common neighbors and Jaccard X  X  coefficient, are computed by enumerating the connections between nodes within a single network. However, due to the one-to-one constraint on the links across multiple net-works, existing features will reduce to a constant value if we directly apply them to predict links across networks [18]. The situation is even more severe when one of the networks is a bipartite network, where no connections exist between customers. Although a bipartite network can be projected onto a unimodal network [4], such as a co-adoption network, many important features (e.g., interests of customers) will be lost during the transformation. Furthermore, customers barely have social interactions with neighbors in the uni-modal network [10]. 2) Partially aligned networks. Another fundamental prob-lem lies in the fact that most networks can only be partially aligned, w.r.t the one-to-one constraint. For example, in Fig-ure 1, not all customers have accounts in the social network. Thus, anchor link prediction [18] and conventional network alignment approaches [3], which assume that two networks are fully aligned, cannot be directly used in the customer identification problem. A detailed comparison between cus-tomer identification problem and other related problems are reported in Table 1.

To tackle the customer identification problem involving the above issues, we present the following contributions:
We discuss related work in Section 5 and conclude with possible extensions in Section 6.
The customer identification problem we focus on, in this paper, is to connect customer accounts at an e-commerce site (represented as a customer-product network) to the corre-sponding user accounts in an online social network. Though the proposed framework can easily be generalized to the set-ting with more than one pair of networks. In this section, we first define the concept of customer-product network and social network, and then present the formulation of the cus-tomer identification problem. Table 2 lists the main nota-tions we use throughout the paper.
Customer-Product Network: Let G c = ( U c , P , E c ) de-note a customer-product network, where U c is the set of customers, P is the set of products, and E c  X  U c  X P is the set of adoption links . The type of adoption, depending on the genre of the e-commerce site, can be purchase of a product, subscription of a video or check-in on a hotel. To provide a general model for most e-commerce sites, we con-sider only the structure properties between customers and products and discard the semantic meaning of the adoption.
In online social networks, a large amount of contents is generated by users daily and most of them are irrelevant to the concerns. For the sake of efficiency, one may filter out redundant messages by setting predefined rules. For in-stance, an e-commence company can specify a list of terms related to the products of interest to the company and in-quire for the relevant contexts from online social networks. Therefore, the user-generated contents in the social network after filtering should be relevant to the products of interests, e.g., either containing the names of the products or the URL links to the product pages in the e-commerce site. Without loss of generality, we assume the customer-product network and the social network share the same sets of products of interests P . Here we focus on studying the social networks filtered with the product related terms.

Social Network: A social network is represented as G s = ( V s , E s ), where V s = U s S P is the set of nodes including two types of nodes. U s is the set of users and P is the set of the products of interests mentioned in the user-generated contents. E s  X  X  s  X V s is the set of edges of different types in the social network G s . The types of edges include the social links between users, the links between users and the products mentioned by the users, represented by U s  X U s and U s  X P , respectively.

Customer Identification: Suppose we have a customer-adoption network G c and a social network G s , with a small set of identified pairs A , the task of customer identification is to find the optimal set A  X  in which all the customers in G c , who can be identified in G s , are matched to their corresponding accounts in G s .

Given a candidate pair ( u c i , u s j ) of a customer u c a social network user u s j in U s , we shall decide whether this pair belongs to the same individual. Let f ( u c i , u s j the customer identification function , i.e., f ( u c i , u s j ) =
Recall that each customer can only be identified as at m ost one (primary) user account in a social network and vise versa, i.e., one-to-one constraint. Hence, the set of known pairs A can be defined in the following formula: , where i 6 = i  X  and j 6 = j  X  . The optimum set A  X  is the maximum set of A , since A  X  contains all the customers who can be identified in the social network. In addition, due to the one-to-one constraint, A  X  is unique, i.e., no other combination of pairs that have the same size as A  X  .
The customer identification task serves as a prerequisite for developing many potential marketing applications in gen-eral e-commerce sites, as we have discussed in the Introduc-tion. However, it involves two key challenges that make it difficult to be solved by applying existing social link predic-tion techniques [12, 20, 21, 18]. First, the target links to be predicted are one-to-one relationships between two sets of nodes across networks with completely different schema (e.g., a customer-product network and a social network). To predict the existence of target links, we shall compare the similarity between pairs of nodes across networks. How-ever, most existing features for link prediction, such as num-ber of common neighbors, are designed for predicting the target links within a single network. The social features that exploit the social connections of identified pairs across networks are also not applicable, since there are no con-nections between customers in customer-product networks. How can we extract informative features for this customer i dentification task using basic information available in most e-commerce sites? Second, the prediction of all target links should be considered collectively, not only due to the one-to-one constraint but, more importantly, because the nature of multiple networks tends to be partially aligned. How can we effectively match all the customers, who can be identified in social networks, to their corresponding social user accounts? In this section, we introduce a novel method, CSI (Customer-Social Identification), for effectively identifying customers in social networks. It consists of two phases, each of which ad-dresses one major challenge of customer identification. The first phase tackles the feature extraction across networks with different schema, while the second phase manages to identify customers in partially aligned networks.
As the first phase, CSI constructs the features that can be used to measure the similarity between pairs of accounts across networks with different schema. Because individuals often exhibit consistent behavioral patterns across networks, such as selecting similar usernames and passwords [29, 31, 22], we can make use of the similarities between candidate pairs to discover the same individuals.

Considering our purpose is to provide a general model for most e-commerce sites, we shall extract features by us-ing the basic customer information which is generally avail-able. Therefore, two common information sources are inves-tigated: user profiles and the (product) interests of users. In the following, we present several similarity measures cor-responding to each information source. The scores of these measures will be treated as the features for the next phase.
When a customer registers an account in an e-commerce site, s/he is usually asked to select a unique username and to fill in her/his full name and email address. This reg-istration builds up the basic user profile of the customer. Other attributes, such as the city of residency, gender and ages, are also useful to identify individuals. Though, these attributes are inconsistent in multiple sites and often left blank by the customer. Hence, we attempt to measure the similarity mainly by exploiting names and email addresses.
Names: Usernames are unique on each web site and can be viewed as identifiers of individuals, whereas the full names, i.e., the combinations of first name and last name, are not unique. In [31], Zafarani et. al. observed that human tends to have consistent behavior patterns when se-lecting usernames in different social media sites. For ex-ample, individuals often select new usernames by changing their previous usernames, such as add prefixes or suffixes or abbreviate part of their full names. However, their study mainly focus on the assumption that multiple prior user-names of the same individuals are available. This may not be an appropriate assumption in our problem, because most e-commerce sites usually obtain only one single prior user-name of each customer.

Therefore, among the top 10 important features presented in [31], we select the four features that can be calculated by the single prior username. Besides, we also consider the Lev-enshtein Edit Distance [19], which can capture the changes of candidate usernames, as another feature. The five fea-tures are listed as follows:
Email: Email addresses can uniquely identify individu-als, whereas they are not public available in most online social networks. In this paper, email addresses are used as for verification of the identification. Once we discover that they exist in both customer profiles and user profiles in on-line social networks, we can pair the both accounts of their owners and put them into the set of identified pairs.
In additional, the products that adopted by customers and mentioned by social network users reflect their common interests to some extent. Therefore, we propose to extract user interest features based on the similarity between the products of interests that customers and social network users both have in common.

Here we extend the definition of some of the most effec-tive measures in social link prediction [20, 1, 32]. All the measures compute the similarity between customer u c i in G and social network user u s j in G s , and assign a similarity score ( u c i , u s j ) to the candidate pair ( u c i , u 1) Common Interests (CI): The most direct implemen-tation of this idea for customer identification is to consider the number of interests that customer u c i and social network user u s j both have in common. We denote the interests of u i as  X  p ( u c i ) and the interests of u s j as  X  p ( u s common interests is defined as follows: score ( u c i , u s j ) = |{ p x | ( u c i , p x )  X  X  c } X  X  p where |P| is the cardinality of the set P . 2) Jaccard X  X  Coefficient (JC): The Jaccard X  X  coefficient is a normalized version of common interests, i.e., the number of common interests divided by the total number of distinct products of interests in  X  p ( u c i )  X   X  p ( u s j ). 3) Admic/Adar Index (AA) [1]: The AA index refines the simple counting of common interests by weighting rarer interests more heavily. We denote the customers who adopt p x as  X  c u ( p x ) and the social network users who mention p as  X  s u ( p x ). We extend the AA index into multi-network set-tings, where the common interests are weighted by their average degrees in log scale. The similarity score of u c u j is derived as follows: 4) Resource Allocation Index (RA) [32]: The RA index is similar to the AA index except the weight is dis-tributed averagely instead of in log scale. Above four measures compute the similarity between cus-tomer u c i and social network user u s j based on their shared (products of) interests directly, as illustrated in Figure 2(a). However, customer u c i may not actively mention the prod-ucts that s/he has adopted in social networks. To compute the interest similarity between u c i and u s j , we need to seek other connections or paths between them.

According to the researches of social influence on purchase behaviors [14, 13, 6], a customer is more likely to buy a product if his/her friends have widely adopt it. Thus, we consider utilizing the interests of friends to help locate the inactive customers. There are two types of paths between u i and u s j through the interests of friends we can exploit. Figure 2(b) shows an example of the first type of a path. In Figure 2(b), the product p x mentioned by u s y , a friend of u s j , is also adopted by u c i . If u c i and u s j adoption of p x is related to the post from u s y . The second type of a path is similar to the first one, except this time we will make use of the identified pairs. For example, in Figure 2(c), the product p x adopted by u c z , who is identified as u (a friend of u s j ), is also adopted by u c i . Similar to the first of p x made by u s j is related to that made by u s y ( u and u s j belong to the same individual.

Note that the common interests with (identified) friends is a weaker indicator than the common interests for a can-didate pair. In this paper, we extend the Katz X  X  index [17] to provide a weighted measure on the collection of paths between u c i and u s y . 5) Katz X  X  Index [17]: The Katz X  X  index sums over the collection of paths, exponentially damped by length to count short paths more heavily, leading to the  X  -parameterized measure. u . Here we adapt the truncated Katz score, in which the length-l is limited to l max instead of  X  as in the original Katz X  X  measure, since the truncated Katz often outperforms Katz for link prediction [24]. In this paper, we set l max to capture both factors of the common interests and common interests with (identified) friends. | paths h 1 i u c as the number of common interests, while | paths h 2 i u c the number of paths through the interests of friends. For 2(b) and 2 paths between them in Figure 2(c), and thus
With the features extracted in the previous phase, we can train a binary classifier (e.g., SVM or logistic regression) to roughly decide whether candidate pairs across networks be-long to the same identities or not. However, the predictions of the binary classifier cannot be directly used for customer identification. This is because the inference of conventional classifiers are designed for constraint-free settings (e.g., one customers can be paired with multiple user accounts in a so-cial network), and thus the one-to-one constraint on account pairs across networks may not hold.

Instead of simply relying on the decision made by the classifier, we notice that most classifiers also generate simi-larity scores for classification. Based on the similarity scores that are further calibrated [30], one may think of applying conventional matching techniques, such as stable marriage [11] and maximum weight matching, to find a one-to-one matching between pairs of accounts across two networks. Nevertheless, these techniques could be problematic in the customer identification task, since they usually assume net-works are fully aligned, whereas in fact most networks are partially aligned. That is to say, some customers in an e-commerce site do not have any user accounts in an online social network. We should not pair these customers to any user accounts in the social network recklessly; otherwise, we may waste valuable resources on inappropriate targets.
In order to tackle the above issues, we propose to formu-late the customer identification in partially aligned networks as a top-K maximum similarity and stable matching prob-and K = 2 , respectively. lem 5 . Specifically, our goal is to find the top K pairs that have the maximum similarity (or weight) among all the sta-ble matching of any combination of K pairs across networks.
Generally speaking, stable matching is a one-to-one match-ing A with the principle that there is no unmatched pair ( m, w ) such that m and w both prefer each other to their current assignments in A . Here we say  X  m prefers w over z  X , if the score of pair ( m, w ) is larger than the score of pair ( m, z ). The primal reason for limiting our solution to stable matching is because stable matching methods can maximize the local benefits of one set of nodes. Other matching meth-ods, such as maximum weight matching , are less suitable since they usually focus on maximizing the overall benefit of the mapping of the entire networks.

Take Figure 3 as an illustrative example of different meth-ods. Suppose in Figure 3(a) we are given the similarity scores from the binary classifier for each candidate pair. Fig-ure 3(b) shows that link prediction methods with a fixed threshold (e.g., 0 . 5) may not be able to predict well, be-cause one customer could be linked with multiple accounts in the social network. In Figure 3(c), maximum weight match-ing methods can find a set of pairs with maximum sum of weights (or similarities), whereas it may not be a good solu-tion for customer identification. Since the similarity score of ( u 1 , u s 1 ) is larger than that of ( u c 1 , u s 2 ), customer u
Assuming K , the number of customers to be identified, is specified in advance, we propose to find the top K pairs of accounts with the maximum similarity, following the princi-ple of stable matching mentioned above. Figure 3(d) shows an illustrative example of CSI with K =1. Pair ( u c 1 , u top-1 pair that has the maximum similarity score among all candidate pairs. Hence, we would identify u s 1 as the social network account of customer u c 1 . As a consequence, when K =2 in Figure 3(e), we should ignore the candidate pairs that associate with u c 1 or u s 1 due to the one-to-one constraint. Thus, the next pair we would choose is ( u c 2 , u s 2 ), whose score is the best among the rest pairs. In fact, among all the cus-tomers, probably only customer u c 1 has a user account, u in the social network, because the scores of other customers do not indicate that they are similar enough to any users in
T his problem is a variation of maximum weighted stable marriage (or royal couple matching in [26]) problem. The major difference is in that we aim at finding a one-to-one mapping for K nodes, instead of mapping all nodes. Algorithm 1: C ustomer-Social Identification
Input : a customer-product network G c , a social
Output : a set of predicted pairs A  X  /* first phase*/
Construct a training set with known labels using A
For each pair ( u c i , u s j ), extract features
Training classification model C on the training set.
Perform classification using model C on the test set. /* second phase */
Calibrate the similarity scores of candidate pairs and sort them into a max heap H by the scores.
Initialize all unlabeled u c i in G c and u s j in G s as free.
A  X  =  X  while H 6 =  X  and |A  X  | &lt; K do 11 P op the pair ( u c i , u s j ) with the max score from H 12 if u c i and u s j are both free then 14 Set u c i and u s j as occupied. the social network. Therefore, the result in Figure 3(d) is t he most appropriate solution. Nonetheless, we should be able to find the top K -1 pairs before move to the K -th pair, which has lower similarity score than the top K -1 pairs.
The proposed CSI method for customer identification is shown in Algorithm 1. In each iteration, we select the pair of accounts ( u c i , u s j ) with the maximum similarity score from candidate pairs. If both u c i and u s j have not yet assigned to any account, we add ( u c i , u s j ) to the solution set A set u c i and u s j as occupied; otherwise if either u c i occupied, we ignore ( u c i , u s j ). To facilitate the process of finding the pair with maximum score, we can maintain a max heap instead of a matrix to store the similarity scores of candidate pairs. The algorithm stops when the top K pairs are found, or there are no remaining candidate pairs in the max heap. The matching computed by the CSI method is guaranteed to be a stable matching, according to Theorem 1 in [26]; furthermore, it has the maximum similarity score among all the stable matching of any combination of K pairs across networks, which can be easily proved by mathematical induction. Due to lack of space, we skip all the proofs.
It is worth noting that the selection of the parameter K i s a challenging issue for most problems that need to find out the top-K elements. Different approaches are proposed for finding K, such as cross-validation and bootstrapping. In fact, the selection of K can also be implemented in other ways. For example, instead of setting K directly, one can find the top similar pairs until the similarity score of the matching pair is less than a threshold.
In this section, we first introduce the data sets for the experiments, and then present experimental results as well as empirical analysis.
We conduct the experiments on the real-world datasets spanning 10 months, as summarized in Table 3. We choose Kickstarter.com, one of the largest sites for crowdfunding as an e-commerce site because the adoption histories of each customer are public available. More importantly, novel and creative crowdfunding projects are notably discussed on Twit-ter where users are willing to share their interests.
Twitter: We gathered all the tweets regarding Kick-starter from Nov. 2012 to Sep. 2013. For each tweet X  X  author, we queried Twitter API for the metadata about the author as well as the social links of the author. For each project in Kickstarter we consider only the tweets that can link to its webpage. We further filtered out the projects that were seldom discussed (less than 5 tweets) in Twitter. The Twitter dataset after filtering consists of 3,725 projects, 178K users, 5.4 million social links and 385K tweets that construct 234K links between Twitter users and projects.
Kickstarter: We recorded all the projects in Kickstarter launched after Nov. 2012 and completed before Sep. 2013. For each project, we obtained all of its backers, which can be viewed as its customers. For each customer, we crawled his/her user profile and recorded his/her Twitter account, if available. The Kickstarter dataset after filtering consists of 3,725 projects, 545K customers and 868K adoption links between customers and projects. The detailed analysis of these datasets is available in [23].

Data preprocessing: In order to conduct the experi-ments, we preprocess these raw data to obtain the ground-truth of identified pairs. If a customer, in the Kickstarter dataset, has shown his/her Twitter account in his/her user profile, and the Twitter account also exists in the Twitter dataset, we can safely treat the pair of accounts of the cus-tomer as an identified pair. The identified pairs represent the positive instances and they can be used to help construct negative instances of pairs. Due to the one-to-one constraint, we can easily find a negative pair by taking one account from an identified pair and connecting it to any account, in the opposite network, other than the corresponding one. Thus, we can obtain up to 1.3 billion negative pairs.

However, in practice, if an e-commerce company wants to identify one of its customer in a social network, it would probably inquire for the social network accounts whose user-names are similar to the names (i.e., username and full name) of the customer in the company. Consequently, it is critical for the e-commerce company to distinguish the ac-
C rowdfunding  X  in which people can propose projects and raise funds through collaborative contributions of crowd. tual one from others with very similar usernames. To sim-u late the query process, we shall select the negative pairs in which two accounts are likely to have similar usernames. Hence, for each account in the identified pairs, we search the candidate accounts, whose usernames contain a part of the names of the given account, in the opposite network. Then, the candidate accounts are ranked by the Levenshtein edit distance between the candidate usernames and the given customer username. Finally, we sample negative pairs by connecting the given account with up to 100 candidate ac-counts, other than the corresponding one, with the smallest edit distance. The statistics of the original networks and the sampled networks are presented in Table 3. In the following experiments, we mainly conducted on the sampled networks.
We compare our CSI method with eight baseline meth-ods, which are commonly-used baselines including both su-pervised and unsupervised link prediction approaches. The compared methods are summarized as follows: 1) Unsupervised Link Prediction methods: We com-pare with a set of unsupervised link prediction methods using the user interest features discussed in Section 3.1: Common Interests ( CI ), Jaccard Coefficient ( JC ), Adamic/ Adar index ( AA ), Resource Allocation index ( RA ), and Katz X  X  index ( Katz ). Following the setting in [20], we test the performance of Katz with three different values of  X  (i.e., 0.05, 0.005 and 0.0005). Each link predictor outputs a ranked list of candidate pairs in deceasing order of similarity scores. We can evaluate the performance of an unsupervised method based on the ranked list. 2) Supervised Link Prediction methods: We test supervised link prediction methods using different types of feature sets separately. As discussed in section 3.1, two fea-ture sets are considered, i.e., Profile and Interest . We also compare with the combination of both sets of features ( Profile+Interest ). The label predictions of the base clas-sifier are directly used as the final predictions. 3) Customer-Social Identification (CSI): The pro-posed method in this paper. CSI leverages all the extracted features, i.e., Profile+Interest, for training the base classi-fier. Based on the scores generated by the classifier, CSI takes the top-K maximum similarity and stable matching as the final predictions. In default, K is set as the size of real identified pairs in the testing set. We will analyze the performance of CSI method with K varied in the experiment.
Evaluation Measures. We evaluate the performance of each method in terms of Precision, Recall, F1-score and area under ROC curve (AUC). The first three measures can eval-uate the link prediction performances, while AUC evaluates negative pairs the ranking performances. Since unsupervised methods only p redict a real-valued score instead of a label prediction for each candidate pair, we only show the AUC performances of unsupervised methods. Moreover, CSI and Profile+Interest share the same set of features and thus they have the same ranking scores generated by the base classifier. Hence, for AUC measure, we use CSI to represent both methods. For fair comparisons, LibSVM [8] of linear kernel with the de-fault parameter is used as the base classifier for all the com-pared methods. Accuracy is not included in the evaluation measures, since we mainly focus on the real-world imbal-anced datasets in which Accuracy is usually meaningless.
Noteworthily, the F1-score and Recall of maximum weight matching (MWM) are consistently lower than 0.1, and the Precision and AUC of MWM are consistently lower than 0.2, which are significantly worse than those of other base-line methods. This is because MWM aims at maximizing the overall benefit of the entire matching instead of the lo-cal benefits of individuals, as mentioned in Section 3.2. Since MWM is not suitable for the customer identification prob-lem, MWM is not listed as one of the competitive methods.
We conduct the experiments using 5-fold cross validation: one fold is used as training data, the remaining folds are used Figure 4: Comparison of customer identification us-i ng different features as testing data. We report the average results and standard deviations of 5-fold cross validation on the dataset.
We first investigate the performance of different features in the unsupervised methods. In Figure 4, Katz X  X  methods outperform the methods using other features. It indicates that by exploiting the paths through the interests of friends, we have a better opportunity to identify customers in a so-cial network. Even though the customers are not active in the social network, the common interests with friends may leak the information of the customers and direct us to iden-tify them. However, from the comparison between Katz X  X  methods with different  X  , which exponentially decreases the weight of longer path, we notice that the importance of f riends X  interest should not be overrated.

Next, the customer identification problem in real world involves distinguishing the real social network account of a customer from many other similar candidates. If we consider the real pair of accounts as a positive instance and other candidates as negative instances, the number of negative instances usually dominates that of positive instances. In other words, the data instances are usually imbalanced. It is crucial to identify customers in such imbalanced datasets.
Thus, we test the performance of each method with im-balanced datasets. In each round of the cross validation, we sample pairs of accounts as the data samples according to different imbalance ratios. The imbalance ratio is defined as the number of negative pairs divides by the number of posi-tive pairs. Table 4 presents the performance of each method under different imbalance ratios. The best performances on each of the evaluation criteria are listed in bold. The re-sults show that Profile features can be used as the most precise tool to identify some positive pairs but cannot cover most of them. By taking both Profile and Interest features into account, we are able to identify the majority of positive pairs effectively, while only slightly decreasing the precision of identification. The performance can be further improved through the one-to-one matching step in the proposed CSI method. As shown in Table 4, CSI consistently outperforms the other methods in F1-score, Recall and AUC with up to 38%, 80% and 21% improvement, respectively.

Another challenge of customer identification is that, in practice, there are only a small number of identified pairs. Hence, we next study the performance of each method using a small set of identified pairs for training. In each round of cross validation, we randomly sample a percentage of iden-tified pairs from the training fold and use them for training. The results of all compared methods are reported in Table 5. Again, CSI method consistently outperforms other methods in F1-score, Recall and AUC. Especially when only 20% of identified pairs from the training fold are used, the F1-score increases from 0.342 to 0.875 (with 156% improvement) and the Recall increases from 0.211 to 0.875 (with 315% improve-ment). We also notice that the performance of CSI method is quite stable with the change of the number of training samples. This is because CSI method is designed to find the best stable matching all the time. Lack of training sam-ples only affect the accuracy of similarity scores, while it probably would not change the preference of each account.
Finally, we investigate the performance of each method with K varied, where K is the number of pairs we should find in a one-to-one matching. In our experiments, K is set as 1466, which is the size of real pairs in our testing set, in default. Since the predictions of classifications cannot be directly compared, we won X  X  be able to find the top-K pairs using the above baseline methods. Thus, in this ex-periment, we compare the performance of the CSI methods using different sets of features. We denote the CSI method using only Profile feature set as  X  X rofile (w/ match) X , and we denote that using only Interest feature set as  X  X nterest (w/ match) X . Figure 5 shows that CSI method incorporat-ing the more features can achieve the better performance. Besides, the CSI method using only the Interest feature set performs better than that using only the Profile feature set. More importantly, our proposed CSI method achieves the best performance when K is around 1466, the actual size of F igure 5: Comparison between CSI and baselines with K varied pairs to be identified. This indicates that CSI method can effectively find the top-K pairs that are most likely to be the real pairs before it moves to pick the less possible pairs.
Due to the emergence of online social network services, so-cial network analysis have been intensively studied in recent years [24, 18, 21, 12]. One active research topic is to predict unknown link in social network. Liben-Nowell and Kleinberg [20] developed unsupervised link prediction methods based upon several topological features. These proposed features can be further used to train a binary classification model for link prediction. There are many other recent efforts on link prediction problem in social networks. For example, in [2], Backstrom et al. proposed a supervised random walk al-gorithm to estimate the strength of link in social networks. Lichtenwalter et. al. [21] have a detailed discussion over different challenges of link prediction problem. Kong et al. [18] formulated the problem of connecting accounts across social networks as a anchor link prediction task, w.r.t one-to-one constraint across social networks. They leverage the heterogeneous features, such as social, spatial and temporal information, to help predict the anchor links.

Recently, user identification across multiple social net-works has attracted many attentions [31, 22, 27, 25]. Za-farani et al. [31] observed that individuals often exhibit consistent behavioral patterns across networks when select-ing usernames. Based on the observation, they proposed a behavior model to determine whether two usernames are be-long to the same individual. In [27], Raad et al. addressed the problem of matching user profiles for inter-social net-works. [25] analyzed users X  online digital footprints and ap-plied context specific techniques to measure the similarity of accounts across networks. These studies indicate that user-name is one of the most discriminative features for disam-biguating user profiles. However, customer identification has some unique properties that make it different to the previous works. First, it requires to predict links across networks with completely different schema (i.e., bipartite network vs. gen -eral heterogeneous network). Second, since most networks are partially aligned, we should identify the most similar pairs instead of mapping the entire networks. Due to these issues, previous approaches may not be directly applicable to customer identification.
In this paper, we have described and studied the prob-lem of customer identification in social networks. Different from previous works in link prediction and network align-ment, customer identification requires to predict links be-tween accounts across partially aligned networks with com-pletely different schema. We have proposed to extract two types of features, user profile features and user interest fea-tures, that can be used to compute the similarity scores of pairs across such networks. By finding the top-K maxi-mum similar and stable matching, our proposed approach CSI (Customer-Social Identification), can effectively con-nect customers with their corresponding social network ac-counts. Extensively experiments have demonstrated that our CSI method consistently outperforms other commonly-used baselines on customer identification.

In summary, this work provides a promising step towards incorporating existing online social networks for e-commence. By leveraging the rich information from social networks, many potential applications could be developed. Examples of applications include personalized product recommenda-tion using social correlations, spam detection by identifying true customers, and maximization of product adoption and profits over social networks.
 This work is supported in part by NSF through grants CNS-1115234, and OISE-1129076, US Department of Army through grant W911NF-12-1-0066, and the Pinnacle Lab at Singa-pore Management University. [1] L. A. Adamic and E. Adar. Friends and neighbors on [2] L. Backstrom and J. Leskovec. Supervised random [3] M. Bayati, D. F. Gleich, A. Saberi, and Y. Wang. [4] N. Benchettara, R. Kanawati, and C. Rouveirol. [5] S. Bhagat, A. Goyal, and L. V. S. Lakshmanan. [6] R. Bhatt, V. Chaoji, and R. Parekh. Predicting [7] I. Bhattacharya and L. Getoor. Collective entity [8] C.-C. Chang and C.-J. Lin. LIBSVM: A library for [9] F. C. T. Chua, H. W. Lauw, and E.-P. Lim.
 [10] D. J. Crandall, D. Cosley, D. P. Huttenlocher, J. M. [11] L. E. Dubins and D. A. Freedman. Machiavelli and [12] L. Getoor and C. P. Diehl. Link mining: a survey. [13] S. Guo, M. Wang, and J. Leskovec. The role of social [14] S. Hill, F. Provost, and C. Volinsky. Network-based [15] M. Hu and B. Liu. Mining and summarizing customer [16] M. Jiang, P. Cui, R. Liu, Q. Yang, F. Wang, W. Zhu, [17] L. Katz and L. Katz. A new status index derived from [18] X. Kong, J. Zhang, and P. S. Yu. Inferring anchor [19] V. I. Levenshtein. Binary codes capable of correcting [20] D. Liben-Nowell and J. M. Kleinberg. The link [21] R. Lichtenwalter, J. T. Lussier, and N. V. Chawla. [22] J. Liu, F. Zhang, X. Song, Y.-I. Song, C.-Y. Lin, and [23] C.-T. Lu, S. Xie, X. Kong, and P. S. Yu. Inferring the [24] Z. Lu, B. Savas, W. Tang, and I. S. Dhillon. [25] A. Malhotra, L. C. Totti, W. M. Jr., P. Kumaraguru, [26] A. Marie and A. Gal. On the stable marriage of [27] E. Raad, R. Chbeir, and A. Dipanda. User profile [28] M. Tsytsarau, S. Amer-Yahia, and T. Palpanas. [29] J. Yan, A. Blackwell, R. Anderson, and A. Grant. The [30] B. Zadrozny and C. Elkan. Transforming classifier [31] R. Zafarani and H. Liu. Connecting users across social [32] T. Zhou, L. L  X  u, and Y.-C. Zhang. Predicting missing
