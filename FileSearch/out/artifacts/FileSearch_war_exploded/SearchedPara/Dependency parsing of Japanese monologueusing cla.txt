 Tomohiro Ohno  X  Shigeki Matsubara  X  Hideki Kashioka  X  Takehiko Maruyama  X  Hideki Tanaka  X  Yasuyoshi Inagaki Abstract Spoken monologues feature greater sentence length and structural complexity than spoken dialogues. To achieve high-parsing performance for spoken monologues, simplifying the structure by dividing a sentence into suitable language units could prove effective. This paper proposes a method for dependency parsing of Japanese spoken monologues based on sentence segmentation. In this method, dependency parsing is executed in two stages: at the clause level and the sentence level. First, dependencies within a clause are identified by dividing a sentence into clauses and executing stochastic dependency parsing for each clause. Next, dependencies across clause boundaries are identified stochastically, and the dependency structure of the entire sentence is thus completed. An experiment using a spoken monologue corpus shows the effectiveness of this method for efficient dependency parsing of Japanese monologue sentences.
 Keywords Dependency structure Parsing accuracy Parsing time Sentence segmentation Speech corpus Speech understanding Spoken language Stochastic parsing Syntactically annotated corpus 1 Introduction Recently, such spoken monologue data as professional lectures and commentaries have gathered attention as valuable intellectual human properties. To effectively and efficiently use such data, they must not only be accumulated but also structured. However, few attempts have parsed spoken monologues. Spontaneous spoken monologues include many grammatically ill-formed linguistic phenomena such as fillers, hesitations, and self corrections. To robustly deal with extra-grammaticality, techniques for parsing dialogue sentences have been proposed (Hindle 1983 ; Bear and Price 1990 ; Core and Schubert 1999 ; Delmonte 2003 ; Ohno et al. 2005b ). On the other hand, monologues are also characterized by sentences generally longer than those in task-oriented dialogues that have been treated by previous researches, and sometimes they have extremely long sentences (Kashioka and Maruyama 2004 ). 1 Generally speaking, the longer a sentence is, the more complex its dependency structure becomes. Therefore, for monologue sentences, parsing time will increase and parsing accuracy will decrease. More effective, high-performance spoken monologue parsing can be achieved by dividing a sentence into suitable language units for simplicity.

This paper proposes a method for dependency parsing of monologue sentences based on sentence segmentation. The method executes dependency parsing in two stages: at the clause level and the sentence level. First, a dependency relation from one bunsetsu 2 to another within a clause is identified by dividing a sentence into clauses based on clause boundary det ection and then executing stochastic dependency parsing for each clause. Next, the dependency structure of the entire sentence is completed by stochastically identifying dependencies across clause boundaries. An experiment on monologue dependency parsing showed that parsing time can be drastically shortened and parsing accuracy can be increased.
 This paper is organized as follows: The next section describes a parsing unit of a Japanese monologue. Section 3 presents dependency parsing based on clause boundaries. The parsing experiment and discussion are reported in Sects. 4 and 5 , respectively. Related works are described in Sect. 6 . 2 Parsing unit of Japanese monologues Our method achieves efficient parsing by adopting a shorter unit than a sentence as a parsing unit. Since the search range of a dependency relation can be narrowed by dividing a long monologue sentence into small units, we can expect parsing time to be shortened. 2.1 Clause and dependencies In Japanese, a clause basically contains one verb phrase. Therefore, a complex sentence or a compound sentence contains one or more clauses. Moreover, since a clause constitutes a syntactically sufficient and semantically meaningful language unit, it can be used as an alternative parsing unit to sentences.

Our proposed method assumes that a sentence is a sequence of one or more clauses, and every bunsetsu in a clause, except the final bunsetsu, depends on another bunsetsu in the same clause. As an example, the dependency structure of the following Japanese sentence
Senjitsu sorifu-ga happyo-itashi-mashi-ta seron-chosa-ni yori-masu-to shikei-wo shiji-suru-toyuu hito-ga hachiju-pasento-chikaku-ni nat-te-ori-masu (A public opinion poll announced by the Prime Minister X  X  Office the other day indicates that the ratio of the people supporting capital punishment is nearly 80%) is presented in Fig. 1 . This sentence consists of four clauses:  X  Senjitsu sorifu-ga happyo-itashi-mashi-ta (announced by the Prime Minister X  X   X  seron-chosa-ni yori-masu-to (A public opinion poll indicates that)  X  shikei-wo shiji-suru-toyuu (supporting capital punishment)  X  hito-ga hachiju-pasento-chikaku-ni nat-te-ori-masu (the ratio of the people is
Each clause forms a dependency structure (solid arrows in Fig. 1 ), and a dependency relation from the final bunsetsu links the clause with another clause (dotted arrows in Fig. 1 ). 2.2 Clause boundary unit monologue sentence into clauses as preprocessing for the following dependency parsing. However, since different kinds of clauses are embedded in main clauses, it is fundamentally difficult to divide a monologue into clauses in one dimension (Kashioka and Maruyama 2004 ).

Therefore, by using a clause boundary annotation program (Maruyama et al. 2004 ), we approximately achieve clause segmentation of a monologue sentence. This program can identify units corresponding to clauses by detecting the end boundaries of clauses. Furthermore, it can specify the positions and types of clause boundaries simply from a local morphological analysis. For a sentence morpho-logically analyzed by ChaSen (Matsumoto et al. 1999 ), the positions of clause boundaries are identified, at which clause boundary labels are inserted. 147 labels 3 exist, such as  X  X ompound clause X  and  X  X dnominal clause. X 
In our research, we adopt the unit sandwiched between two clause boundaries detected by clause boundary analysis called the clause boundary unit as an alternative parsing unit. 2.3 Relation between clause boundary units and dependency structures In this research, we assume that a clause boundary unit constitutes a syntactically sufficient language unit and utilize it as a parsing unit of dependency analysis. However, in fact, dependency relations across clause boundaries exist, as shown in Fig. 2 . To verify the validity of the above assumption, we investigated the monologue corpus  X  X su-Wo-Yomu. X  4 In our investigation, we used 200 sentences for which morphological analysis, bunsetsu segmentation, clause boundary analysis, and dependency parsing were automatically performed and then modified by hand. Here, the specification of parts-of-speech is in accordance with the IPA parts-of-speech used in the ChaSen morphological analyzer (Matsumoto et al. 1999 ), the rules of bunsetsu segmentation with those of CSJ (Maekawa et al. 2000 ), the rules of clause boundary analysis with those of Maruyama et al. (Maruyama et al. 2004 ), and dependency grammar with the Kyoto Corpus (Kurohashi and Nagao 1998 ).
Table 1 shows the analysis results of the 200 sentences. Among the 1,479 bunsetsus, those remaining after removing the final bunsetsus (951) of the clause boundary units from all bunsetsus (2,430), only 94 bunsetsus depend on a bunsetsu located outside the clause boundary unit. This result means that 93.6% (1,385/ 1,479) of all dependency relations are within a clause boundary unit. Therefore, the results confirmed that, to some extent, the assumption made by our research is valid. 3 Dependency parsing based on clause boundaries In accordance with the assumption described in Sect. 2 , in our method, the transcribed sentence, on which morphological analysis, clause boundary detection, and bunsetsu segmentation are performed, is considered the input. 5 Dependency parsing is executed based on the following procedures: 1. Clause-level parsing : The internal dependency relations of clause boundary 2. Sentence-level parsing : Dependency relations are identified in which the In this paper, we describe a sequence of clause boundary units in a sentence as C dependency relation in which the modifier bunsetsu is bunsetsu b i k as dep  X  b i k  X  ; and a dependency structure of the sentence as f dep  X  b 1 1  X  ; ... ; dep  X  b m n
First, our method parses dependency structure f dep  X  b i 1  X  ; ... ; dep  X  b i n the clause boundary unit whenever clause boundary unit C i is inputted. Then, it parses dependency structure f dep  X  b 1 n dency relations whose modifier bunsetsu is the final bunsetsu of each clause boundary unit in the input sentence. In addition, in both of the above procedures, our method assumes the following three syntactic constraints: 1. No dependency is directed from right to left. 2. Dependencies don X  X  cross each other. 3. Except the final one in a sentence, each bunsetsu depends only on one bunsetsu.
These constraints are usually used for Japanese dependency parsing. 3.1 Clause-level dependency parsing When the sequence of bunsetsus in input clause boundary unit C i is described as B  X  X  b i 1 ; ... ; b i n dependency structure S i  X  X f dep  X  b i 1  X  ; ... ; dep  X  b i n of a clause boundary unit is not identified. Assuming that each dependency is independent of the others, P  X  S i j B i  X  can be calculated as follows: when the sequence of bunsetsus B i is provided. Unlike conventional stochastic sentence-by-sentence dependency parsing methods, in our method, B i is the structure of B i and is calculated by dynamic programming (DP).
 independent words in a modifier bunsetsu is represented by h i k ; its part-of-speech t i k ; and type of dependency r i k ; while the basic form of the independent word in a distance between bunsetsus is described as d ii kl ; which takes either 1 or gt 1. Here, gt 1 indicates that the distance is greater than 1. In additoin, if a modifier bunsetsu has one or more ancillary words, the type of dependency r i k is the basic form, the part-of-speech, and the conjugated form of the rightmost ancillary word, and if not, it is the part-of-speech and the conjugated form of the rightmost morpheme. This attribute is the same one used in our stochastic method proposed for robust dependency parsing of spoken dialogues (Ohno et al. 2005b ). Incidentally, the above attributes are identical as those used by conventional stochastic dependency parsing methods (Collins 1996 ; Ratnaparkhi 1997 ; Fujio and Matsumoto 1998 ; Uchimoto et al. 1999 ; Charniak 2000 ; Kudo and Matsumoto 2002 ).

Additionally, we prepared attribute e i l to indicate whether b i l is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. An attribute that indicates whether a modified bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g, Uchimoto et al. 1999 ).
 as follows: Note that F is a co-occurrence frequency function.
 (2), we adopted the smoothing method described by Fujio and Matsumoto ( 1998 ): if 3.2 Sentence-level dependency parsing Here, the modified bunsetsu of the final bunsetsu of a clause boundary unit is identified. Let B  X  X  b 1 1 ; ... ; b m n S fin be a set of dependency relations whose modifier bunsetsu is the final bunsetsu of a clause boundary unit, f dep  X  b 1 n the maximum, is calculated by DP. P  X  S fin j B  X  can be calculated as follows: where P  X  b i n the sequence of the sentence X  X  bunsetsus B is provided. In sentence-level parsing, our method narrows the modified bunsetsu candidates of a bunsetsu in consideration of the dependency structure of each clause boundary unit previously parsed. In Fig. 1 , the modified bunsetsu candidates of bunsetsu  X  shiji-suru-toyuu (supporting) X  are generally the following three bunsetsus at the right-hand side:  X  hito-ga (the ratio of people), X   X  hachiju-pasento-chikaku-ni (nearly 80%), X  and  X  nat-te-ori-masu (is). X  From these candidates, our method preliminarily removes bunsetsu  X  hachiju-pasento-chikaku-ni (nearly 80%) X  because the dependency relation between bunsetsu  X  shiji-suru-toyuu (supporting) X  and  X  hachiju-pasento-chikaku-ni (nearly 80%) X  crosses the dependency relation previously identified in clause-level parsing.
In addition, P  X  b i n modified bunsetsu of b j l is the final bunsetsu of a sentence. Here, we consider analysis results in which about 70% of the final bunsetsus of clause boundary units depend on the final bunsetsus of other clause boundary units. 6 We also use attribute e here: 4 Parsing experiments To evaluate the effectiveness of our method for Japanese spoken monologues, we conducted an experiment on dependency parsing. 4.1 Outline of experiment We used the spoken monologue corpus  X  X su-Wo-Yomu, X  annotated with informa-tion on morphological analysis, clause boundary detection, bunsetsu segmentation, and dependency analysis. 7 In this experiment, we removed fillers, which have a harmful effect on dependency parsing, from the  X  X su-Wo-Yomu X  corpus because they can be detected by a speech recognizer or a morphological analysis system (Stolcke and Shriberg 1996 ; Asahara and Matsumoto 2003 ). 8 Table 2 shows the data used for the experiment. We used 500 sentences as test data. Although our method assumes that a dependency relation does not cross clause boundaries, 152 dependency relations contradicted this assumption. This means that the dependency accuracy of our method is less than 96.8% (4,646/4,798). On the other hand, we used 5,532 sentences as learning data.

To carry out comparative evaluation of our method X  X  effectiveness, we executed parsing for the above data by the following two methods and obtained parsing time and accuracy.  X  Our method : First, our method provides clause boundaries for a sequence of  X  Conventional method : This method individually parses a sentence without 4.2 Experimental results The parsing times of both methods are shown in Table 3 . The parsing speed of our method improves about five times on average in comparison with the conventional method. Here, the parsing time of our method includes the time taken not only for dependency parsing but also for clause boundary analysis. The average time required for clause boundary analysis was about 1.2 milliseconds per sentence. Therefore, the time cost of performing clause boundary analysis as dependency parsing preprocessing can be considered small enough to disregard. Figure 3 shows the relation between sentence length and parsing time for both methods. The parsing time of the conventional method clearly begins to rapidly increase when the length of a sentence becomes 12 or more bunsetsus. In contrast, our method changes little composed of 11.8 bunsetsus on average, this result shows that our method is suitable for improving the parsing time of a monologue sentence whose length is longer than the average.

Table 4 shows the parsing accuracy of both methods. The first line shows parsing accuracy for all bunsetsus within clause boundary units except the final bunsetsus of the clause boundary units. The second line shows parsing accuracy for the final bunsetsus of all clause boundary units except the sentence-end bunsetsus. We confirmed that our method analyzed with higher accuracy than the conventional method.

As mentioned above, our method is clearly more effective than the conventional method in shortening parsing time and increasing parsing accuracy. 5 Discussion Our method detects clause boundaries and then executes dependency parsing. If clause boundary analysis fails, the error negatively affects subsequent dependency parsing. Further, our method assumes that every bunsetsu in a clause boundary unit, except the final bunsetsu, depends on another bunsetsu in the same clause boundary unit. Due to this assumption, the method cannot correctly parse dependency relations across clause boundaries.

In the following, we first discuss the negative effect caused by errors of clause boundary detection in Sect. 5.1 . Next, we separately discuss the effect of our method on parsing accuracy for bunsetsus within clause boundary units (except the final bunsetsus) and for the final bunsetsus of clause boundary units in Sects. 5.2 and 5.3 , respectively. Finally, we describe our method X  X  inability to parse dependency relations across clause boundaries in Sect. 5.4 . 5.1 Influences of clause boundary detection errors Table 5 shows the accuracy of the clause boundary analysis executed by CBAP. The accuracy was evaluated based on only the position of a clause boundary without a clause boundaries were detected in the wrong positions. These prevented our dependency parsing from correctly identifying four dependency relations. Figure 4 shows an example of the errors. The analysis incorrectly detected a clause boundary between bunsetsu  X  atarashii (new) X  and  X  wakugumi-wo (framework). X  This inaccu-rate clause boundary forced bunsetsu  X  wakugumi-wo (framework) X  to belong to a clause boundary unit different from bunsetsu  X  boeki-no (for trading). X  Therefore, our parsing method incorrectly made bunsetsu  X  boeki-no (for trading) X  depend on bunsetsu  X  atarashii (new) X .

Next, we investigated 47 clause boundaries that could not be detected. 27 dependency relations could not be identified due to a lack of clause boundaries. Such an example is shown in Fig. 5 . Since the clause boundary between bunsetsu  X  kibishiku (are strong and) X  and  X  shakai-ni (to society) X  could not be detected, the dependency relation of which the modifier bunsetsu was  X  kibishiku (are strong and) X  was identified in clause-level parsing. Thus, since our parsing basically failed to identify the correct modified bunsetsu,  X  okii (is large), X  parsing error arose.

However, since these dependency relations occupy only 0.6% (31/4,790) as a whole, we believe that clause boundary analysis exerts almost no harmful influence on subsequent dependency parsing. 5.2 Parsing accuracy for bunsetsus within clause boundary units (except final Table 6 compares parsing accuracies for bunsetsus within clause boundary units (except final bunsetsus) between the conventional method and our method. There are 3,061 bunsetsus within the clause boundary units except the final bunsetsus, among which 2,499 were correctly parsed by both methods. 202 dependency relations were correctly parsed by our method but incorrectly parsed by the conventional method, indicating that our method can narrow the modified bunsetsu candidates.

In contrast, 93 dependency relations were correctly parsed solely by the conventional method. Among them, 46 were dependency relations across clause boundaries that cannot in principle be parsed by our method. This means that our conventional method can correctly parse except for dependency relations across clause boundaries.
 5.3 Parsing accuracy for final bunsetsus of clause boundary units Table 4 shows that parsing accuracy for the final bunsetsus of clause boundary units by both methods is much worse than for bunsetsus within clause boundary units. This reflects the difficulty of identifying dependency relations whose modifier bunsetsu is the final one of a clause boundary unit.

Table 7 compares how the two methods parse dependency relations when the modifier bunsetsu is the final bunsetsu of a clause boundary unit. There are 1,737 dependency relations whose modifier bunsetsu is the final bunsetsu of a clause boundary unit, among which 1,037 were correctly parsed by both methods. The number of dependency relations correctly parsed only by our method was 103, which is higher than the dependency relations correctly parsed only by the conventional method. This result might be attributed to our method X  X  effect; that is, it narrows modified bunsetsu candidates based on the first-parsed dependency structure for clause boundary units. 5.4 Dependency relations across clause boundaries Table 8 shows the accuracy of both methods for parsing dependency relations across clause boundaries. Since our method parses based on the assumption that such dependency relations do not exist, it cannot correctly parse anything. Although from the experimental results, our method did identify two dependency relations across clause boundaries, these were only identified because dependency parsing was performed based on incorrect clause boundaries. On the other hand, the conventional method correctly parsed 46 dependency relations our of 152 that crossed clause boundaries in the test data. The conventional method could correctly dependency relations.

In other words, it is possible to improve parsing accuracy by giving consideration to dependency relations across clause boundaries. Figure 6 illustrates the types 9 of clause boundary units containing the modifier bunsetsus of dependency relations across clause boundaries and their occurrence rate in the experimental test data. The appearance of dependency relations across clause boundaries depends on the types of clause boundary units.

There were 42 cases of  X  X opicalized element wa , X  which was the largest category. Clause boundary unit  X  X opicalized element wa  X  is an exception to the clause definition:  X  X  clause is ameaningful constituent including one verb phrase. X  However, since it can be regarded as syntactically independent, we considered it a clause boundary unit. Figure 7 shows part of a sentence containing the above dependency relation. In this example, bunsetsu  X  imaya (now), X  an adverb phrase, depends on bunsetsu  X  roppyakuoku-en-desu (are sixty billion yen), X  a verb phrase, and is located outside clause boundary unit  X  imaya (now) uriage-wa (sales) . X 
Second, modifier bunsetsus of 38 dependency relations across clause boundaries exist in clause boundary unit  X  X dnominal clause. X  Figure 8 shows part of a sentence containing a dependency relation. In this example, since there is a parallel dependency relation between bunsetsu  X  gawa-to (side and) X  in an  X  X dnominal clause X  and bunsetsu  X  gawa-no (side), X  which is modified by final bunsetsu  X  kariru (borrowing) X  of the  X  X dnominal clause, X  the dependency relation crosses the clause boundary.

Third, modifier bunsetsus of 27 dependency relations across clause boundaries exist in clause boundary unit  X  X ompound te -clause. X  Figure 9 shows part of a sentence containing a dependency relation. In this example, bunsetsu  X  kensatsu-gawa-ga (the prosecution) X  depends on bunsetsu  X  shi-te-ori-mashi-ta (and appealed to) X  based on the annotation criteria. However, since the subject of bunsetsu  X  motome-te (asked for) X  in the  X  X ompound te -clause X  is bunsetsu  X  kensatsu-gawa-ga (the prosecution), X  such a dependency relation should also be deemed correct.
These three clause boundary unit types occupied 70.4% of the total. 6 Related works Since monologue sentences tend to be long with complex structures, considering their features is important. Although there have been very few studies on parsing monologue sentences, some studies on parsing written language have dealt with long-sentence parsing. To resolve the syntactic ambiguity of long sentences, some have focused on the  X  X lause. X 
First, there are studies that focused on compound clauses (Agarwal and Boggess 1992 ; Kurohashi and Nagao 1994 ). They tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the  X  X cope embedding preference X  of Japanese subordinate clauses (Shirai et al. 1995 ; Utsuro et al. 2000 ). Furthermore, Kim et al. ( 2004 ) divided a sentence into  X  X (ubject)-clauses, X  defined as a group of words containing several predicates and their common subject. The above studies attempted to reduce parsing ambiguity between specific types of clauses to improve the parsing accuracy of an entire sentence.

On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of long-sentence parsing, we considered it more effective to cyclopaedically divide a sentence into all types of clauses and then parse the local dependency structure of each clause. Moreover, since our method can perform dependency parsing clause-by-clause, we can reasonably expect our method to be applicable to incremental parsing (Ohno et al. 2005a ). 7 Conclusion In this paper, we proposed a technique for dependency parsing of monologue sentences based on clause-boundary detection. Our method achieves more effective, high-performance spoken monologue parsing by dividing a sentence into clauses effectiveness of our method for Japanese spoken monologues, we conducted an experiment on dependency parsing of spoken monologue sentences recorded in  X  X su-Wo-Yomu. X  From the experimental results, we confirmed that our method shortened parsing time and increased parsing accuracy compared with the conventional method, which parses a sentence without dividing it into clauses.
Future research will include thorough investigations of the relation between types of dependency and clause boundary units. We also plan to investigate techniques for identifying dependency relations across clause boundaries. Second, since it has been reported that the accuracy of dependency parsing for the final bunsetsus of clause boundary units is improved by using information about the  X  X cope embedding preference X  of Japanese subordinate clauses (Shirai et al. 1995 ; Utsuro et al. 2000 ), we would like to incorporate the ideas of previous works into our method to improve the performance of monologue dependency parsing. Furthermore, we plan to integrate our method with a scheme for robust dependency parsing of spoken dialogues (Ohno et al. 2005b ) that can treat grammatically ill-formed phenomena. In addition, since the experiment described in this paper has shown the effectiveness of our technique for the dependency parsing of long sentences in spoken monologues, we believe our technique can also be effective for written language. Therefore, we want to examine its effectiveness by conducting parsing experiments of long written sentences.
 References
