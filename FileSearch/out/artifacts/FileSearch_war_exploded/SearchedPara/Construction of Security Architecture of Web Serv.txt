 As organizations are becoming increasingly dependent on information technology, the in Enterprise Application Integration (EAI) have been proposed [1]. Web Services (WS), emerging as the next generation of integration technology, provides an attrac-tive alternative for EAI. The new technology supports a loosely coupled collaboration style that eliminates many of the interoperability issues that the traditional EAI solu-and security challenges. 
In the WS based EAI environment, business functions are provided as services, re-quests and replies of which occur between the components that are providing services management application to update the transaction/delivery status. There is a problem the control of a single enterprise. multi-password is a frequent consequence of multi-service environments. It often hand a user may be authorized to use a particular service and creates a business event to another service which may be in different geographical location. 
With the problem mentioned above, this paper proposes a new approach to con-the idea of Single Sign On (SSO) and authorization with Role-based Access Control (RBAC) model. The security architecture provides once identity recognition and ex-plicit authorization for the same user on the different service providers of a business service chain. The standard way not only provides the necessary level of security but also simplifies the authentication and authorization at each trust layer. 
In section 2, some related work about authentication and authorization are intro-posed in section 3. And section 4 particularly describes the key techniques to imple-ment a prototype of the security architecture. Last a conclusion is made and prospects of the future work are looked forward. Information security management theory introduces the Confidentiality, Integrity, and Availability (CIA) concept as the guideline to implementing secure software [3]. With the requirement of Availability concept, authentication and authorization, the security problem of EAI, are mainly discussed in this paper. 
In recent years, the internal security problem of enterprise applications is discussed very widely and various authentication and authorization mechanisms are fully ap-plied. However, insufficient research has been devoted to authentication and authori-zation in EAI [4]. 2.1 Single Sign On (SSO) SSO is an authentication method by which users need to have an identity recognition access integrated applications easier and improve their access security [5]. Today, for Web-based service environments two major approaches to SSO exist: user identifier to the services. The Libert y Alliance [7] was founded to set up a SSO standard which should lead to different interoperable products from different vendors. erative service providers. The standard aims to support all popular operating systems, programming languages, and network structures and is designed to ensure the compatibility and security between Liberty-aware applications. 
Centralized SSO approach requires all the integrated applications share the same grated applications. So distributed SSO approach is adopted in our security architec-ture. 2.2 Role-Based Access Control (RBAC) Role-Based Access Control (RBAC) has emerged as a proven and superior alternative authorization mechanism in enterprise applications. As shown in Fig.1, its basic idea users get operation authorities from roles assigned. Because roles are more stable and have more direct understanding than users in applications, the workload and complex-ity of applications X  administrators will be decreased greatly. vant problem that this scheme presents when applied to open distributed applications uted RBAC solution. Relationships between users and roles and relationships between roles and authorities are maintained by distributed applications. As shown in Fig.2, EAI Virtual Environment (EVE) is a WS environment of EAI. All the integrated applications and the security architecture must be provided according to the requirements of WS. In EVE there are three kinds of services: Integrated Business Service, Integrated Security Service and Information Shared Service. Service Request (SR) can find and safely invoke business service with protection of the security archi-tecture. 3.1 Integrated Business Service EAI can take place on different levels, which is a fact that has been recognized since a long time. In [1], D. Linthicum identifies the following four levels: data level, appli-paper falls into the scope of application interface level EAI which means an applica-tion interface is an interface that gives access to services provided by a custom appli-cation or a standard package. 
So EVE has many decentralized nodes called Service Provider (SP). All the application interfaces integrated in EVE ar e provided as Web Services by SP. These shared services are called Integrated Business Service (IBS). 3.2 Integrated Security Service grated Security Service. The security archit ecture of WS based EAI mainly consists of IP, AES and AOS which supports safe access with unified way in the whole EVE not only in a single application. 3.2.1 Authenti cation Service EVE has two kinds of authentication node: Identity Provider (IP) and Authentication Server (AES). IP provides management of user accounts for relevant SP. Authentica-tity token to user passing verification. User can log in only once and then may access IBS with his identity token. Collaboration with AES and IP provides distributed SSO based authentication service in EVE. 3.2.2 Authorization Service EVE has a special authorization node, Auth orization Server (AOS). AOS only main-check whether the user has access roles of the IBS. AOS provides distributed RBAC based authorization service. 3.3 Information Shared Service UDDI Server is the centralized information shared node in EVE. Correlative informa-coordinator of other nodes. ture and have implemented Integrated Security Service. There are several key tech-niques to implement the security architecture. 4.1 Distributed SSO Base d Authenticati on Mechanism In the security architecture, AES implements distributed SSO based authentication. Before the first authentication process begins, users need to choose the right IP where Then authentication can be performed normally. 
The process of a successful login is depicted in Fig.3. Firstly SR sends authentica-and password, etc.) to AES, secondly user X  X  identity information will be redirected to mation in a session and last an identity token is assigned to the user. Next time SR can access IBS with user X  X  identity token so as to avoid authentication time after time. 
Different with normal web-based SSO approach, our SSO approach for authentica-occur between the components that are providing services instead of directly between user and end service. Three kinds of session management services are required at least: 
In session management user X  X  identity token is the key and user X  X  information only can be obtained with his identity token. 4.2 Distributed RBAC Based Authorization Mechanism In the security architecture, distributed RBAC based authorization has been imple-mented. On the basic idea of this authorization mechanism, AOS only maintains rela-maintained by SP. Before authorization pro cess begins, authorization records need to be set up at AOS and SP respectively. Every SP has its own authority control system that determines which resources can be accessed and how to access with the role. 4.2.1 Authorization in AOS identity token and roles binding with IBS to AOS. But AOS does not check them directly. Firstly AOS sends request to AES to get user information, secondly Session Management of AES finds user X  X  session with the identity token, thirdly AES get user information from session and return to AOS and last Role Management of AOS verify the relationship between user and roles. SP decides user X  X  next action on the basis of verified result. 
In fact, the security architecture has two kinds of role management policy: one is a centralized role management by AOS and the other is role management by every SP itself. The latter means that SP need maintain the whole relationship among user, role and authority. SP get users X  information directly from AES with their identity tokens. for each independent SP. It can control auth ority optionally and applications without RBAC support can be integrated in EVE also. Both policies are all important for the security architecture implementation and they are complementary for each other. Which one will be used is decided by SP according to actual condition. 4.2.2 Authorization in SP stract level. 
The process of authorization in SP is illustrated in Fig.5. Firstly Role Checker (RC) gets the role list binding with the invoked IBS, secondly authorization process in AOS described above is executed, thirdly Authority Control System (ACS) parses the AOS is passed and last relevant applicatio n interface is enforced. Details of the ACS will not be discussed in this paper. The security problems in open, heterogeneous and distributed applications pose im-centralized security mechanism to distributed one and constructs an external architec-ture to support security information exchange between applications. 
The implementation has shown that the security architecture represents effective security guarantee in EAI environment. SSO based authentication mechanism reduces lose security information because of frequent operations. RBAC based authorization process that user access integrat ed applications, only user X  X  identity token is passed in EVE. Identity token is harder to fabricate than user information. Session Management of AES ensures that every identity token is generated by AES and fabricated ones can not work normally in EVE. 
And moreover, in such security architecture, each integrated unit represents more trusting coordination. Authentication and authorization can be supported in a way that authentication server and actual verification is done by integrated unit independently. Each integrated unit constructs its own access control under the unified role definition on authorization server. Then the access control can be performed at diverse granular-authentication and authorization not only in a single domain. 
So WS based EAI with the security architecture makes a high request for the inter-action of integrated units and meets the security needs of the EAI better. 
However in heterogeneous environments wh ere different integr ated applications, once to a unified RBAC approach. So WS based EAI with the security architecture is more suitable for integration of new developed application than legacy system. An-in AOS will become more complicated. One user may own many roles. Perhaps plenty of definitions of relationships between role and user are reduplicate. The sim-plified RBAC is not enough. 
The technique presented in this paper should be useful in configurable security mechanism for EAI. Developers can pay more attention to business process integra-low: 1.To use hierarchy RBAC model to support role integration and reduce redupli-architecture. 
