 1. Introduction
In order to design and analyze a control system, a suitable model is often required to represent the relationship between the input and output of the system. System identification deals with the problem of building mathematical model of a dynamical system based on observed data. Conventionally, model identifica-tion requires the knowledge of the input and output data of the system of interest. Such data are typically obtained from tests or physical rules governing the system and later used to identify the system model.

In general, system identification involves two steps, namely, the selection of a suitable model structure and estimation of model parameters. In the first step, a priori knowledge is used to determine a class of models to which the target system may belong. If there is no a priori knowledge available, then the structure realization might be done by a trial-and-error method ( Levine, 1995 ). The main focus in system identification is on the parameter identification process. Well-developed techniques such as least-square, instrumental variable and maximum likelihood exist for parameters estimation of models. However, these techniques often fail in search for the global optimum if the search space is not differentiable or linear in the parameters ( Hossain et al., 1995 ).

To date, artificial intelligence (AI) techniques have become potential candidates to many control applications. One of the most powerful AI techniques is genetic algorithm, which has been widely used and applied to control systems ( Bedwani and Ismail, 2001 ). Genetic algorithms are very good for optimization problems with several local minima where conventional search algorithms fail. GA techniques can be effectively applied to system identification problem to estimate the model parameters. A GA simultaneously evaluates many points in the parameters space and converges toward the global solution. It does not require the search space to be differentiable or continuous ( Kargupta and
Smith, 1991 ; Kristinsson and Dumont, 1992 ). Many researchers have applied the GA techniques to identify linear and non-linear systems.

Hossain and coworkers ( Hossain et al., 1995 ) employed GA for identification of a flexible beam to design an active vibration controller. They used FD method to study the behavior of the beam and constructed a suitable simulation algorithm. Then, system identification was done using GA to find the system model parameters. They employed 30 individuals with a 20 bit string for each as initial population. Roulette wheel method was utilized as the selection strategy. Although the execution time of the GA-based algorithm was reported to be more than that of the conventional scheme, a more suitable solution for real-time application was found.
 Li (1999) studied the application of GA to the identification of a
Hammerstein model. He used piecewise linear and not a polynomial, to approximate the memoryless non-linear charac-terization. The effectiveness of GA to identify the corresponding system was shown. Doung and Stubberud (2002) presented a method for identifying systems through input X  X utput behavior and application of GA. The GA identification method was compared to the least-square (LS) method and it was found that the GA method provided a more accurate solution than the LS method. However, because of the complexity (particularly for high order systems), it was reported that the GA identification method has computational advantages over the LS method.
Puangdownreong (2006) investigated the identification of a cart-plus-pendulum system model via the GA. The results were compared with the Box X  X enkins (BJ) model obtained from the conventional identification method based on regression analysis.
It was found that the GA provided superior performance in representing the system dynamics compared to the BJ model.
Ghaffari et al. (2007) utilized GA to identify and control a power plant. Their results indicated a successful identification of the high order de-superheating process as well as improve-ments in the performance of the steam temperature controller.
Abdelhafid (2008) presented a new technique based on GA to obtain the best series of parameters for the identification of the
ZnO surge arrester models. The validity of the predicted para-meters was then checked by comparing the predicted results with the experimental results available in the literature. Ebrahimzadeh and Ranjbar (2008) employed GA to optimize the number of nodes in the hidden layer of a neural network for digital signal-type identification.

In this research, a real coded GA together with a novel truncation-based selection algorithm is employed for the model identification of a rectangular flexible plate system. Accordingly, this study is conducted to highlight the effectiveness of the proposed GA for system identification of flexible structures in which a fast convergence to global optimum is often required. The first step would be to simulate the flexible thin plate using the FD approach. Then, GA-based system identification is carried out using the input X  X utput data of the system acquired from simulation and the proposed GA. The performance of the proposed selection algorithm for system identification of the plate system is compared with another conventional selection strategy through which the superiority of the proposed scheme is demonstrated. Finally, the validity of the obtained model is investigated. 2. Simulation of the flexible plate system 2.1. Dynamic equation of the thin plate
The governing equation of a flexible thin plate can be formulated as a differential equation together with corresponding boundary conditions. The plate is assumed to undergo a small lateral deflection. Using Kirchhoff X  X  plate theory, this yields ( Timoshenko and Woinowsky-Krieger, 1959 ) @ w  X  x ; y ; t  X  @ x 4  X  2 where w is the lateral deflection in z direction, r the density of plate with dimension mass per unit volume, h the thickness, external force with dimensions of force per unit area, E the modulus of elasticity and u the Poisson ratio. For a clamped edge (at x = a ), the boundary condition is as follows: w 9
For simulation purposes, it is natural to assume that initially the plate has no deflection. In other words, the forces and moments of the plate due to its weight are neglected. Thus, for every point located on the plate w 9 t  X  0  X  0  X  3  X  2.2. Numerical solution
To simulate the plate system, the finite difference method is employed to numerically solve Eq. (1). In FD method, the entire solution domain is divided into a grid of cells. Then, the derivatives in the governing partial differential equation are written in terms of difference equations. The FD method is used so that to sense or apply action to any point on the plate, and this is desirable for design and realization of an active vibration control system. Considering the boundary conditions, a unique solution can be obtained for the overall system equation. In the case of a flexible plate, a three dimensional coordinate system is consid-ered. The x -axis is represented with the reference index i , the y -axis with reference index j and the time axis with index k , interior of the grid ( x i , y j , t k ) where i =0,1, y n ; j =0,1, 1 y p , a Taylor series expansion is used to generate the central FD can be substituted by a suitable difference equation as follows: @ @ x 4 ! ! @ @ y 4 ! @ @ t 2 !
Substituting Eqs. (4) to (7) into Eq. (1) yields w where P  X  6 D x 4  X  8 D x 2 D y 2  X  6 D y 4 ; Q  X  4 D x 4 4 D x 2 D y 2 R  X  4 D y 4 4 D x 2 D y 2 ; S  X  2 D x 2 D y 2 ; T  X  1 D x 4
The differential equations for boundary and initial conditions defined by Eqs. (2) and (3) for a clamped edge (at x = a ) can be written as w 9
According to Eq. (3), the displacement of each point on the plate at t=0 is assumed to be zero. Therefore, w
The stability of the algorithm can be examined by ensuring that the iterative scheme described in Eq. (8) converges to a solution. According to the stability rules for convergence of the FD equation, Eq. (11) can be derived to satisfy the necessary condition for the convergence of Eq. (8) as follows ( Mat Darus and Tokhi, 2001 ): 0 r c r 1 4  X  11  X  where c  X  D D t 2 r D x 2 D y 2 2  X  2.3. Implementation and results
To study the dynamic behavior of the plate system, a 3.2 mm thick aluminium plate (relevant dimensions and parameters depicted in Table 1 ) with all clamped edges was considered and input signal) is identified appropriately on the plate. The location the nodal lines defined by the first five natural frequencies of the plate. Using the FD method, the length and width of the mentioned plate were divided into 30 and 20 sections, respectively. Therefore, the space between successive nodal points would be
D x= D y= 0.05 m. The value of c in Eq. (11a) was chosen as 0.11, which results in the required sampling time of D t= 0.0000835 s. broad range of the dynamics of the flexible plate.

A uniformly distributed random input with a constant frequency of 800 Hz was exerted on the plate at point G and the dynamic response of the plate was monitored at point H during a period of 0.5 s. This type of input is chosen to ensure that a broad range of dynamics of the simulated plate system, is captured.
Fig. 2 represents the dynamic response of the plate at point H to the random excitation at point G. Previous research ( Tavakolpour et al., 2008 ) demonstrated the validity of the FD algorithm to model a rectangular flexible thin plate. Thus, the same FD algorithm was adopted in this study to simulate the dynamic behavior of the thin plate system. 3. Model identification using Genetic algorithm 3.1. Model structure
The most basic relationship between the input and output of a system is the linear difference equation ( Ljung, 1999 ) given by y  X  t  X  X  a 1 y  X  t 1  X  X  ...  X  a n y  X  t n  X  X  b 1 u  X  t 1  X  X  ...  X  b where y ( t ) is the model output at time t and [ y ( t 1), u ( t 1), y , u ( t m )] are past observed data. Since the observed data would be collected by the sampling process from the simulation procedure of Section 2, it is more straightforward to relate the observed data to a discrete time model as expressed in
Eq. (12). A useful way to visualize Eq. (12) is to view it using a backshift operator z 1 as defined by
A  X  z  X  y  X  t  X  X  B  X  z 1  X  u  X  t  X  X  13  X 
Thus, y  X  t  X  X  B  X  z 1  X  A  X  z 1  X  u  X  t  X  X  14  X  where A ( z 1 ) and B ( z 1 ) are polynomials with associated parameters A  X  z 1  X  X  1  X  a 1 z 1  X  a 2 z 2  X  ...  X  a n z n  X  14a  X 
B  X  z 1  X  X  b 1 z 1  X  b 2 z 2  X  ...  X  b m z m  X  14b  X  z 1 is a back-shift operator, n and m are orders of the model and [ a is the predicted output of the model and not the real output of the output of the system. Therefore, Eq. (14) can be written as y  X  t  X  X  G  X  z 1  X  u  X  t  X  X  15  X  where G ( z 1 ) is the corresponding transfer function of the system and can be represented as follows:
G  X  z 1  X  X  B  X  z 1  X  A  X  z 1  X   X  b 1 z 1  X  b 2 z 2  X  ...  X  b
The main objective of system identification is thus to estimate the model parameters as best as possible. 3.2. Genetic algorithm
The basics of GA were developed by Holland (1975) .GAisan optimization and search technique based on the principles of genetic and natural selection. A GA allows a population composed of many individuals to evolve under specified selection rules to a state that maximizes the fitness (or optimizes the cost function). The working principle of a GA is shown in Fig. 3 .

When GA is applied to solve a practical problem, the parameter represents one possible solution to the problem. GA begins by ranked based on its fitness value. Selection, crossover and mutation are known as genetic operators through which new solutions to the problem are reproduced. A selection criterion is imposed to determine which solution shou ld be kept and which should be discarded. According to the fitne ss of chromosomes the selection process chooses solutions to be advanced to the next generation. A to create two new solution strings ( children). A mutation operator operates on only one string, thus creating a new string (a child). These three steps are repeated until a termination criterion is satisfied. The stopping criterion might be a maximum number of lie within a certain boundary ( Doung and Stubberud, 2002 ).
GAs are computationally simple and are not limited by assumptions about the search space ( Goldberg, 1989 ). GAs have been successfully applied to engineering search and optimization problems such as system identification ( Kristinsson and Dumont, 1992 ; Li, 1999 ; Puangdownreong, 2006 ) and control ( Darus, 2004 ; Hossain et al., 1995 ; Ghaffari et al., 2007 ). 3.3. Model parameters estimation via GA
In this research, u ( t ) and y ( t ) are substituted by the random point H as real output of the system, respectively. To identify the model of the flexible plate system, the obtained data from the simulation study of Section 2 ( Fig. 2 ) were employed. Using a sampling time of 5 D t s, the required data were collected for system identification scheme. The selected sampling time results in a sampling frequency of 2400 Hz, which is sufficient to fulfill the Nyquist sampling criteria. Eq. (15) was selected as the structure model. Since there was not a priori knowledge about a suitable order of the model for the flexible plate system, the structure realization was performed by a trial-and-error method. The best result was found with the 10th order model and thus, n=m= 10 was assumed. To estimate the optimized parameters of the model, GA was applied to the identification problem of flexible thin plate system. Fig. 4 shows the principle of plate system identification via GA. As can be noted, GA uses error function to estimate the model parameters. 3.3.1. Fitness function
The prediction error e ( t ) between the system output y ( t ) and the one-step-ahead estimated output y  X  t  X  at time t is e  X  t  X  X  y  X  t  X  y  X  t  X  X  17  X  where y  X  t  X  can be expressed as y  X  t  X  X  b 1 z 1  X  b 2 z 2  X  ...  X  b 10 z 10 1  X  a
The mean square error is defined as  X  t  X  X  where N is the number of sampled data. An obvious approach is then to estimate the model parameters so as to fit the predicted output y  X  t  X  as best as possible to the real output y ( t )as determined in Section 2 . In other words, the parameters should
Therefore, the mean square error was employed as the fitness function of the GA and the optimization process of the GA was conducted to estimate the model parameters so that the value of mean square error was reduced to a distinct level. 3.3.2. Coding of parameters set
The type of coding utilized in this study was selected to be multi parameter concatenated binary mapping. This coding joins together the segment codes of all parameters into one composite string (individual). According to the model structure in Eq. (12), the set of 20 parameters forms one individual of solution space as illustrated in Fig. 5 . The GA needs to assume some specified within this range. In this study, the interval of [ 1, 1] was selected.

According to the required precision ( p ) for parameters, number of bits per parameter ( k j ) can be calculated using the following expression: 2
Substituting s max =1, s min = 1 and p =2 decimal points, the required number of bits per parameter k j was calculated to be 8 into its original real value x j as follows ( Li, 1999 ): x  X  s min  X  binrep where binrep is the equivalent real number of each coded parameter. 3.3.3. Control parameters of GA
The control parameters of the GA include population size, crossover probability, mutation probability and selection strategy. The choice can affect the behavior and performance of the GA.
Therefore, running a successful GA involves having to find settings for a number of control parameters which is not a trivial task. 3.3.3.1. Population size. Suitable choice of population size is very important in all GA implementations. If it is chosen too small the
GA will usually converge too fast, and in many cases it will achieve a poor solution due to insufficient information in the population. On the other hand, too large a population will take a very long time to converge to the true solution. Thus, obtaining a balance between the requirement for a large information capacity in the population and the need to produce a solution within the limited amount of time should be considered.

In this research, the execution time of the algorithm is an important factor due to its real-time application in controller design. Taking into account the requirement of fast algorithm together with the problem of poor solution of the GA with small population, 30 individuals were used to form the solution space. gies for GAs have been proposed by a number of researchers.
These include roulette wheel selection, tournament selection and truncation selection ( Li, 1999 ; Zhong et al., 2005 ; Puangdown-reong, 2006 ). Amongst them, the truncation selection is less so-phisticated and it seems to be much faster than other selection methods. In this method the candidate solutions are ordered by fittest individuals are selected and reproduced (1/prop) times and a fixed percentage of the weakest candidate will be eliminated.
The main drawback of this method is that sometimes the weak candidates may include some components, which could prove useful following the recombination process.

In this study, a new type of truncation selection method is applied to the GA as the selection criteria. The selection flowchart is shown in Fig. 6 .

Since system identification is a minimization problem, the strongest individuals in Fig. 6 are assumed to be the ones which have smaller mean square errors. At the other extreme end, the weakest individuals are associated with higher values of mean square errors. From the flowchart, it can be seen that the individuals with higher mean square errors will be replaced by those with smaller mean square error values. Consequently, the new population produced by the selection operator will be conducted towards the minimum fitness (mean square error).
The probability values utilized in the proposed selection strategy were determined by a trial-and-error method to find the best 3.3.3.3. Crossover and mutation. Crossover allows solutions to exchange information in a way similar to that by a natural or-ganism undergoing sexual reproduction. The pairs of individuals selected by the selection operator randomly choose a single point within the binary strings and swap all the information (digits) to the right of this point between the two individuals. A certain percentage of the individuals undergo crossover based on a predefined probability P c . Typical values of P c are 0.4 to 0.9 ( Coley, 1999 ). In this study, an acceptable result was found with the crossover probability of 0.6 using a trial-and-error method.
For the purpose of simplicity one-point crossover technique was used.

Mutation is used to randomly change the value of single bits within individual strings based on mutation probability P
Mutation is typically used very sparingly. A single bit mutation is used in this research. Again by trial-and-error method, the best performance of the algorithm was found using a mutation probability of 0.01. 3.3.3.4. Termination strategy. Two termination conditions were applied to the GA simultaneously. Firstly, the allowable number of generations was restricted to 300 and secondly, the algorithm was allowed to break the generation loop if a suitable solution was found earlier. Therefore, the GA was programmed so that the fitness values of the individuals are checked repeatedly until the mean square error achieved less than 0.001 after which the gen-eration loop will be immediately broken regardless of the first condition. 3.4. Implementation and results
A computer program was written within the MATLAB environment to identify the flexible plate system based on the strategy discussed in the previous sections. Upon execution of the written program, the estimated parameters of the model (as in Eq. (12)) were computed as shown in Table 2 .

Fig. 7 shows the convergence of the GA. The best mean square error of 0.00088 was determined after 144 generations.
The GA-based predicted output of the plate system is depicted dynamic behavior of the system at point H for the uniformly distributed random input. Fig. 8 (b) represents the error variations between the sampled data from the simulation and the predicted output of the GA-based model.

In this research a new type of selection strategy was proposed for the identification of transfer function parameters of the plate system. A question may arise about the performance of the proposed algorithm compared to other conventional selection techniques. To address this question, a comparative study was done between the presented algorithm and the well known roulette wheel selection strategy. The second identification procedure was carried out using GA toolbox in MATLAB. The GA operators were assumed to be similar to the proposed identifica-tion algorithm described in Section 3.3.3 except for the selection strategy. Table 3 summarizes the GA parameters employed in the second identification scheme.

Similarly, the input X  X utput data presented in Fig. 2 were utilized for the second identification scheme. Both the roulette wheel-based and the proposed identification algorithms were executed 10 times. The identification schemes were run until the mean square error achieved less than 0.001. The maximum number of generations was also restricted to 1000. Table 4 shows the comparative results obtained from both identification procedures. It can be clearly seen that the first identification scheme with the proposed selection strategy has identified the plate system faster and more effective than the second scheme.
Furthermore, the roulette wheel strategy in some cases (iteration no. 1, 4, 5, 7 and 10) has not achieved the desirable mean square error of 0.001 within the 1000 generations, which may be attributed to the small population size considered in the GA compared to the number of parameters involved in the identification problem. However, increasing the population size will enhance the performance of roulette wheel-based selection algorithm with the expense of increasing the processing time of the identification program. 4. Model validation
Once a model of the system has been obtained, it is required to validate whether the model is good enough to represent the system. There are basically two ways to investigate the validity of a model ( Soderstrom and Stoica, 1984 ) Use of plots and common sense; Use of statistical tests on the prediction error.

It is often useful to plot the measured data and the model output. For a good model, the predicted output should resemble the measured output. Such plots and the numerical fits associated with them are of course most useful and intuitively appealing for evaluating a given model ( Ljung, 1999 ). A more convincing method of model validation is to use statistical methods. If a model of a system is adequate, then the prediction errors (residuals) e ( t ) should be unpredictable from past inputs and outputs. In other words, the residuals should not depend on something that is likely to change. 4.1. Statistical tests
The auto-correlation and cross-correlation tests are known to be the most useful statistical methods through which one can be roughly convinced about the validity of a model. The auto-correlation test examines the correlation among the residuals themselves while the cross-correlation test surveys the correla-tion between the residuals and past inputs. To check these correlations, it is reasonable to study the covariance among the residuals and changeable parameters ( Soderstrom and Stoica, 1984 ) r  X 
 X  X  r  X 
 X  X  correlation, respectively, t the lag and N the number of sampled data. In practice, normalized correlations are employed as follows: ^ r  X   X  X  ^ r  X   X  X 
Normalization ensures that all the correlation functions lie in the range [ 1, 1] irrespective of the signal strengths. The correlations will never be exactly zero for all lags and the 95% confidence bands defined as 1 : 96 = estimated correlations are significant or not. Using Eqs. (24) and (25), the correlation tests were carried out to determine the effectiveness of the GA-based model. Fig. 9 (a) and (b) shows the results of the correlation tests. The plots have been approximately located in the confidence intervals and thus, there are some reasons to validate the model in some cases. 4.2. Plots and common sense
In this section, the model X  X  ability to reproduce the input X  output data through simulation and prediction as the main tool for comparison is presented. As previously mentioned, a good model is the one that predicts the output of a system as accurate as possible. Therefore, to evaluate the GA-based model, different types of inputs were applied to excite the system at point G on the plate and the time-domain predicted responses of the system at point H were investigated during a period of one second. Then the results would be compared with the real outputs of the system found from simulation.

Fig. 10 reveals the model capability to predict the system output with different types of input. As can be seen, the GA-based model (d) and (f). To further evaluate the model, the frequency-domain (e)) were obtained and those have been shown in Fig. 11 .Itcanbe observed in Fig. 11 (a) that the first five resonance frequencies predicted by the model, occurred at 21.58, 32.92, 52.67, 63.28 and 81.57 Hz, which are the same as the actual vibration modes of the plate obtained through simulation. Another peak at 7 Hz can be signal (as shown in Fig. 10 (c). Other peaks can also be seen in the characteristics of the square signals. One should keep in mind that from the standpoint of mathematics the square signals are actually composed of a summation of an infinite series of pure sine waves. Consequently, exciting a dynamic system by a true square wave is equivalent to simultaneously excite the system with a large 5. Conclusion
A GA optimization strategy has been developed for black-box modeling of dynamic systems and this has been tested within a simulation environment of a flexible plate system subjected to external disturbances. A FD simulation algorithm characterizing the dynamic behavior of the plate has been utilized as a platform for test and evaluation of the GA modeling approach. A new truncation-based selection strategy of fittest individuals has been developed, which allows the GA to converge relatively faster. The performance of the GA has been demonstrated in the dynamic modeling of the plate using autoregressive model structure. It has been shown that the obtained model had captured the dynamic characteristics of the disturbance signals unseen in the estimation process. Future work in active vibration control of flexible structures.
 Acknowledgments
The authors wish to thank the Ministry of Science, Technology and Innovation (MOSTI) and the Universiti Teknologi Malaysia (UTM) for providing the research grant and facilities. This research is supported using a research Grant, Vote no. 79297. References
