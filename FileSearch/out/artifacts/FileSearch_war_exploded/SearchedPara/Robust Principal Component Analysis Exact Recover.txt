 The problem of finding and exploiting low-dimensional structure in high-dimensional data is taking on increasing importance in image, audio and video processing, web search, and bioinformatics, where datasets now routinely lie in thousand-or even million-dimensional observation spaces. The curse of dimensionality is in full play here: meaningful inference with limited number of obser-vations requires some assumption that the data have low intrinsic complexity, e.g., that they are low-rank [1], sparse in some basis [2], or lie on some low-dimensional manifold [3, 4]. Perhaps the simplest useful assumption is that the observations all lie near some low-dimensional subspace. In other words, if we stack all the observations as column vectors of a matrix M  X  R m  X  n , the matrix should be (approximately) low rank. Principal component analysis (PCA) [1, 5] seeks the best (in an ` 2 -sense) such low-rank representation of the given data matrix. It enjoys a number of optimality properties when the data are only mildly corrupted by small noise, and can be stably and efficiently computed via the singular value decomposition. One major shortcoming of classical PCA is its brittleness with respect to grossly corrupted or outly-ing observations [5]. Gross errors are ubiquitous in modern applications in imaging and bioinformat-ics, where some measurements may be arbitrarily corrupted (e.g., due to occlusion or sensor failure) or simply irrelevant to the structure we are trying to identify. A number of natural approaches to robustifying PCA have been explored in the literature. These approaches include influence function techniques [6, 7], multivariate trimming [8], alternating minimization [9], and random sampling techniques [10]. Unfortunately, none of these existing approaches yields a polynomial-time algo-rithm with strong performance guarantees. 1 In this paper, we consider an idealization of the robust PCA problem, in which the goal is to recover a low-rank matrix A from highly corrupted measurements D = A + E . The errors E can be arbitrary of D . This should be contrasted with the classical setting in which the matrix A is perturbed by small (but densely supported) noise. In that setting, classical PCA, computed via the singular value decomposition, remains optimal if the noise is Gaussian. Here, on the other hand, even a small fraction of large errors can cause arbitrary corruption in PCA X  X  estimate of the low rank structure, A . Our approach to robust PCA is motivated by two recent, and tightly related, lines of research. The first set of results concerns the robust solution of over-determined linear systems of equations in the presence of arbitrary, but sparse errors. These results imply that for generic systems of equations, it is possible to correct a constant fraction of arbitrary errors in polynomial time [11]. This is achieved by employing the ` 1 -norm as a convex surrogate for the highly-nonconvex ` 0 -norm. A parallel (and still emerging) line of work concerns the problem of computing low-rank matrix solutions to underdetermined linear equations [12, 13]. One of the most striking results concerns the exact completion of low-rank matrices from only a small fraction of their entries [13, 14, 15, 16]. 2 There, a similar convex relaxation is employed, replacing the highly non-convex matrix rank with the nuclear norm (or sum of singular values).
 The robust PCA problem outlined above combines aspects of both of these lines of work: we wish to recover a low-rank matrix from large but sparse errors. We will show that combining the solutions to the above problems (nuclear norm minimization for low-rank recovery and ` 1 -minimization for error correction) yields a polynomial-time algorithm for robust PCA that provably succeeds under broad conditions: This conclusion holds with high probability as the dimensionality m increases, implying that in high-dimensional observation spaces, sparse and low-rank structures can be efficiently and exactly separated. This behavior is an example of the so-called the blessing of dimensionality [17]. However, this result would remain a theoretical curiosity without scalable algorithms for solving the associated convex program. To this end, we discuss how a near-solution to this convex program can be obtained relatively efficiently via proximal gradient [18, 19] and iterative thresholding techniques, similar to those proposed for matrix completion in [20, 21]. For large matrices, these algorithms are significantly faster and more scalable than general-purpose convex program solvers.
 Our analysis also implies an extension of existing results for the low-rank matrix completion prob-lem, and including the first results applicable to the proportional growth setting where the rank of the matrix grows as a constant (non-vanishing) fraction of the dimensionality: Organization of this paper. This paper is organized as follows. Section 2 formulates the robust principal component analysis problem more precisely and states the main results of this paper, plac-ing these results in the context of existing work. The proof (available in [22]) relies on standard ideas from linear algebra and concentration of measure, but is beyond the scope of this paper. Section 3 extends existing proximal gradient techniques to give a simple, scalable algorithm for solving the robust PCA problem. In Section 4, we perform simulations and experiments corroborating the theo-retical results and suggesting their applicability to real-world problems in computer vision. Finally, in Section 5, we outline several promising directions for future work. We assume that the observed data matrix D  X  R m  X  n was generated by corrupting some of the entries of a low-rank matrix A  X  R m  X  n . The corruption can be represented as an additive error E  X  R m  X  n , so that D = A + E . Because the error affects only a portion of the entries of D , E is a sparse matrix. The idealized (or noise-free) robust PCA problem can then be formulated as follows: Problem 2.1 (Robust PCA) . Given D = A + E , where A and E are unknown, but A is known to be low rank and E is known to be sparse, recover A .
 This problem formulation immediately suggests a conceptual solution: seek the lowest rank A that could have generated the data, subject to the constraint that the errors are sparse: k E k 0  X  k . The Lagrangian reformulation of this optimization problem is If we could solve this problem for appropriate  X  , we might hope to exactly recover the pair ( A 0 ,E 0 ) that generated the data D . Unfortunately, (1) is a highly nonconvex optimization problem, and no efficient solution is known. 3 We can obtain a tractable optimization problem by relaxing (1), replacing the ` 0 -norm with the ` 1 -norm, and the rank with the nuclear norm k A k  X  = P i  X  i ( A ) , yielding the following convex surrogate: This relaxation can be motivated by observing that k A k  X  +  X  k E k 1 is the convex envelope of advances in our understanding of the nuclear norm heuristic for low-rank solutions to matrix equa-tions [12, 13] and the ` 1 heuristic for sparse solutions to underdetermined linear systems [11, 24], suggest that there might be circumstances under which solving the tractable problem (2) perfectly recovers the low-rank matrix A 0 . The main result of this paper will be to show that this is indeed true under surprisingly broad conditions. A sketch of the result is as follows: For  X  X lmost all X  pairs ( A 0 ,E 0 ) consisting of a low-rank matrix A 0 and a sparse matrix E 0 , and the minimizer is uniquely defined. That is, under natural probabilistic models for low-rank and sparse matrices, almost all observations D = A 0 + E 0 generated as the sum of a low-rank matrix A 0 and a sparse matrix E 0 can be efficiently and exactly decomposed into their generating parts by solving a convex program. 4 Of course, this is only possible with an appropriate choice of the regularizing parameter  X  &gt; 0 . From the optimality conditions for the convex program (2), it is not difficult to show that for matrices D  X  R m  X  m , the correct scaling is  X  = O m  X  1 / 2 . Throughout this paper, unless otherwise stated, we will fix  X  = m  X  1 / 2 . For simplicity, all of our results in this paper will be stated for square matrices D  X  R m  X  m , although there is little difficulty in extending them to non-square matrices. program (2). Consider, e.g., the rank-1 case where U = [ e i ] and V = [ e j ] . Without additional prior knowledge, the low-rank matrix A = USV  X  cannot be recovered from even a single gross error. We therefore restrict our attention to matrices A 0 whose row and column spaces are not aligned with the standard basis. This can be done probabilistically, by asserting that the marginal distributions of U and V are uniform on the Stiefel manifold W m r : Definition 2.2 (Random orthogonal model [13]) . We consider a matrix A 0 to be distributed accord-ing to the random orthogonal model of rank r if its left and right singular vectors are independent uniformly distributed m  X  r matrices with orthonormal columns. 5 In this model, the nonzero singular values of A 0 can be arbitrary.
 Our model for errors is similarly natural: each entry of the matrix is independently corrupted with some probability  X  s , and the signs of the corruptions are independent Rademacher random variables. Definition 2.3 (Bernoulli error signs and support) . We consider an error matrix E 0 to be drawn from the Bernoulli sign and support model with parameter  X  s if the entries of sign( E 0 ) are independently distributed, each taking on value 0 with probability 1  X   X  s , and  X  1 with probability  X  s / 2 each. In this model, the magnitude of the nonzero entries in E 0 can be arbitrary.
 Our main result is the following (see [22] for a proof): Theorem 2.4 (Robust recovery from non-vanishing error fractions) . For any p &gt; 0 , there exist R m  X  m with the singular spaces of A 0  X  R m  X  m distributed according to the random orthogonal model of rank and the signs and support of E 0  X  R m  X  m distributed according to the Bernoulli sign-and-support model with error probability  X   X  ? s , then with probability at least 1  X  Cm  X  p and the minimizer is uniquely defined.
 In other words, matrices A 0 whose singular spaces are distributed according to the random orthogo-nal model can, with probability approaching one, be efficiently recovered from almost all corruption sign and support patterns without prior knowledge of the pattern of corruption.
 Our line of analysis also implies strong results for the matrix completion problem studied in [13, 15, 14, 16]. We again refer the interested reader to [22] for a proof of the following result: Theorem 2.5 (Matrix completion in proportional growth) . There exist numerical constants m 0 ,  X  ? r ,  X  , C all &gt; 0 , with the following property: if m &gt; m 0 and A 0  X  R m  X  m is distributed according to the random orthogonal model of rank and  X   X  [ m ]  X  [ m ] is an independently chosen subset of [ m ]  X  [ m ] in which the inclusion of each pair ( i,j ) is an independent Bernoulli(1  X   X  s ) random variable with  X  s  X   X  ? s , then with probability at least 1  X  exp (  X  Cm ) , and the minimizer is uniquely defined.
 Relationship to existing work. Contemporaneous results due to [25] show that for A 0 distributed according to the random orthogonal model, and E 0 with Bernoulli support, correct recovery occurs with high probability provided However, even for constant rank r it guarantees correction of only a vanishing fraction o ( m 1 . 5 ) m 2 of errors. In contrast, our main result, Theorem 2.4, states that even if r grows proportional to m/ log( m ) , non-vanishing fractions of errors are corrected with high probability. Both analyses start from the optimality condition for the convex program (2). The key technical component of this improved result is a probabilistic analysis of an iterative refinement technique for producing a dual vector that certifies optimality of the pair ( A 0 ,E 0 ) . This approach extends techniques used in [11, 26], with additional care required to handle an operator norm constraint arising from the presence of the nuclear norm in (2). For further details we refer the interested reader to [22]. Finally, while Theorem 2.5 is not the main focus of this paper, it is interesting in light of results by [15]. That work proves that in the probabilistic model considered here, a generic m  X  m rank-r matrix can be efficiently and exactly completed from a subset of only entries. For r &gt; m polylog( m ) , this bound exceeds the number m 2 of possible observations. A similar result for spectral methods [14] gives exact completion from O ( m log( m )) measurements when r = O (1) . In contrast, our Theorem 2.5 implies that for certain scenarios with r as large as  X  r m , the matrix can be completed from a subset of (1  X   X  s ) m 2 entries. For matrices of large rank, this is a significant extension of [15]. However, our result does not supersede (8) for smaller ranks. There are a number of possible approaches to solving the robust PCA semidefinite program (2). For small problem sizes, interior point methods offer superior accuracy and convergence rates. However, off-the-shelf interior point solvers become impractical for data matrices larger than about 70  X  70 , due to the O ( m 6 ) complexity of solving for the step direction. For the experiments in this paper we use an alternative first-order method based on the proximal gradient approach of [18], 6 which we briefly introduce here. For further discussion of this approach, as well as alternatives based on duality, please see [27]. This algorithm solves a slightly relaxed version of (2), in which the equality constraint is replaced with a penalty term: Here,  X  is a small constant; as  X  &amp; 0 , the solutions to (9) approach the solution set of (2). The approach of [18] minimizes functions of this type by forming separable quadratic approxima-chosen to obtain a convergence rate of O k  X  2 . The solutions to these subproblems, can be efficiently computed via the soft thresholding operator (for E ) and the singular value thresh-olding operator (for A , see [20]). We terminate the iteration when the subgradient has sufficiently small Frobenius norm. 7 In practice, convergence speed is dramatically improved by employing a continuation strategy in which  X  starts relatively large and then decreases geometrically at each iteration until reaching a lower bound,  X   X  (as in [21]).
 The entire procedure is summarized as Algorithm 1 below. We encourage the interested reader to as a convergence proof ([18] Theorem 4.1). As we will see in the next section, in practice the total number of iterations is often as small as 200. Since the dominant cost of each iteration is computing the singular value decomposition, this means that it is often possible to obtain a provably robust PCA with only a constant factor more computational resources than required for conventional PCA. Algorithm 1 : Robust PCA via Proximal Gradient with Continuation 1: Input: Observation matrix D  X  R m  X  n , weight  X  . 2: A 0 ,A  X  1  X  0 , E 0 ,E  X  1  X  0 , t 0 ,t  X  1  X  1 ,  X  0  X  . 99 k D k 2 , 2 ,  X   X   X  10  X  5  X  0 . 3: while not converged 5: Y A k  X   X  A k  X  1 2  X  A k +  X  E k  X  D . 6: ( U,S,V )  X  svd( Y A k ) , A k +1  X  U S  X   X  2 I + V  X  . 7: Y E k  X   X  E k  X  1 2  X  A k +  X  E k  X  D . 10: end while 11: Output: A,E . In this section, we first perform simulations corroborating our theoretical results and clarifying their implications. We then sketch two computer vision applications involving the recovery of intrin-sically low-dimensional data from gross corruption: background estimation from video and face subspace estimation under varying illumination. 8 Simulation: proportional growth. We first demonstrate the exactness of the convex program-ming heuristic, as well as the efficacy of Algorithm 1, on random matrix examples of increasing dimension. We generate A 0 as a product of two independent m  X  r matrices whose elements are i.i.d. N (0 , 1) random variables. We generate E 0 as a sparse matrix whose support is chosen uni-formly at random, and whose non-zero entries are independent and uniformly distributed in the range [  X  500 , 500] . We apply the proposed algorithm to the matrix D . = A 0 + E 0 to recover  X  A and  X  E . The results are presented in Table 1. For these experiments, we choose  X  = m  X  1 / 2 . We observe that the proposed algorithm is successful in recovering A 0 even when 10% of its entries are corrupted. Table 1: Proportional growth. Here the rank of the matrix grows in proportion ( 5% ) to the dimensionality Simulation: phase transition w.r.t. rank and error sparsity. We next examine how the rank of A and the proportion of errors in E affect the performance our algorithm. We fix m = 200 , and vary  X  r . = rank( A 0 ) m and the error probability  X  s between 0 and 1. For each  X  r , X  s pair, we generate 10 pairs ( A 0 ,E 0 ) as in the above experiment. We deem ( A 0 ,E 0 ) successfully recovered White denotes perfect recovery in all experiments, and black denotes failure for all experiments. We observe that there is a relatively sharp phase transition between success and failure of the algorithm roughly above the line  X  r +  X  s = 0 . 35 . To verify this behavior, we repeat the experiment, but only vary  X  r and  X  s between 0 and 0 . 4 with finer steps. These results, seen in Figure 1 (right), show that phase transition remains fairly sharp even at higher resolution. Experiment: background modeling from video. Background modeling or subtraction from video sequences is a popular approach to detecting activity in the scene, and finds application in video surveillance from static cameras. Background estimation is complicated by the presence of foreground objects such as people, as well as variability in the background itself, for example due to varying illumination. In many cases, however, it is reasonable to assume that these background variations are low-rank, while the foreground activity is spatially localized, and therefore sparse. If the individual frames are stacked as columns of a matrix D , this matrix can be expressed as the sum of a low-rank background matrix and a sparse error matrix representing the activity in the scene. We illustrate this idea using two examples from [29] (see Figures 2). In Figure 2(a)-(c), the video se-quence consists of 200 frames of a scene in an airport. There is no significant change in illumination in the video, but a lot of activity in the foreground. We observe that our algorithm is very effective in separating the background from the activity. In Figure 2(d)-(f), we have 550 frames from a scene in a lobby. There is little activity in the video, but the illumination changes drastically towards the end of the sequence. We see that our algorithm is once again able to recover the background, irrespective of the illumination change.
 Experiment: removing shadows and specularities from face images. Face recognition is an-other domain in computer vision where low-dimensional linear models have received a great deal of attention, mostly due to the work of [30]. The key observation is that under certain idealized circumstances, images of the same face under varying illumination lie near an approximately nine-dimensional linear subspace known as the harmonic plane . However, since faces are neither per-fectly convex nor Lambertian, face images taken under directional illumination often suffer from self-shadowing, specularities, or saturations in brightness.
 Given a matrix D whose columns represent well-aligned training images of a person X  X  face under various illumination conditions, our Robust PCA algorithm offers a principled way of removing such spatially localized artifacts. Figure 3 illustrates the results of our algorithm on images from subsets 1-3 of the Extended Yale B database [31]. The proposed algorithm algorithm removes the specularities in the eyes and the shadows around the nose region. This technique is potentially useful for pre-processing training images in face recognition systems to remove such deviations from the low-dimensional linear model. Our results give strong theoretical and empirical evidences for the efficacy of using convex pro-gramming to recover low-rank matrices from corrupted observations. However, there remain many fascinating open questions in this area. From a mathematical perspective, it would be interesting to Figure 2: Background modeling. (a) Video sequence of a scene in an airport. The size of each frame is Figure 3: Removing shadows and specularities from face images. (a) Cropped and aligned images of a know if it is possible to remove the logarithmic factor in our main result. The phase transition exper-iment in Section 4 suggests that convex programming actually succeeds even for rank(A 0 ) &lt;  X  r m and important question is whether the recovery is stable in the presence of small dense noise. That is, suppose we observe D = A 0 + E 0 + Z , where Z is a noise vector of small ` 2 -norm (e.g., Gaus-sian noise). A natural approach is to now minimize k A k  X  +  X  k E k 1 , subject to a relaxed constraint k D  X  A  X  E k F  X   X  . For matrix completion, [16] showed that a similar relaxation gives stable recovery  X  the error in the solution is proportional to the noise level. Finally, while this paper has sketched several examples on visual data, we believe that this powerful new tool pertains to a wide range of high-dimensional data, for example in bioinformatics and web search.

