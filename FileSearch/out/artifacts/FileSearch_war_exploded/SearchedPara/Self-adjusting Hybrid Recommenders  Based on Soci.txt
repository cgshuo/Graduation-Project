 Ensemble recommender systems successfully enhance reco m-mendation accuracy by exploiting different sources of user pref e-rences, such as ratings and social contacts. In linear ensembles, the optimal weight of each recommender strategy is commonly tuned empirically, with limited guarantee that such weights are op timal afterwards. We propose a self-adjusting hybrid reco m-mendation approach that alleviates the social cold start situation by weighting the recommender combination dynamically at re c-ommendation time, based on social network analysis algorithms . We show empirical results where our approach outperforms the best static combination for different hybrid recommenders. Information Search and Retrieval  X  information filtering . General Terms: Algorithms, Performance, Experimentation. Keywords: Hybrid recommender systems, social networks, graph theory, link analysis. Recommender Systems (RS) aim at automatically finding the most useful products or services for a particular user, providing a pers o-nalized list of items according to different input and attributes of users and items. State-of-the-art recommender systems are usually based on ratings and implicit feedback given by users about the items. Recently, due to the large number of social systems appea r-ing in the so called Web 2.0, where friendship relations between people are explicit,  X  X ocial contexts X  exploitation has started to receive significant interest. In particular, social recommenders have started to be investigated that exploit social links between users in a community to suggest interesting items [2] , [6] . On the other hand, Collaborative Filtering (CF) is one of the most popular strategies in RS [1] , which makes use of explicit preferences to find similar-minded people according to the observed user intera c-tion with the items, and presents suggestions on this basis. 
Although social recommenders perform very well in some situ a-tions, they usually cannot provide any suggestion to users without a social context (social cold start). A solution to this problem is to exploit both sources of information, social and collaborative, by a hybrid ensemble recommendation approach. One of the most common forms of ensemble recommenders simply consists in a linear combination of recommenders. In this approach, the weights in the linear combination are generally the same for all users. H owever, not all users are equally active in terms of social connectivity . Thus, in this paper, we explore the adaptive adjus t-ments of the ensemble coefficients on a user basis . More specif i-cally, we explore a novel approach for self-adjusting the weight of each recommender by using social network analysis to balance the influence of each recommender. We report empirical results showing that our dynamic ensemble approach outperforms the best static combination in different hybrid recommenders. In [3] , a detailed taxonomy is presented where hybrid recommen d-ers are classified according to how they combine different reco m-mendation techniques. In the following, we focus on the so called weighted hybrid recommenders, in which the scores of n individual techniques are aggregated by a linear combination . Without loss of generality, we focus on the case with n = 2, as follows: with ranging between 0 and 1. This type of hybridization weights each recommender in a static way; i.e., once the value of is fixed, recommendations from each technique receive the same weight, independently of the target user. In this context, two main shor t-comings arise. First, the optimal weight has to be found empirically by relying on current recommender performance, dataset charact e-ristics, etc., which are subject to change [3] . Second, the optimal weight may not be the same for all users since the system gathers a different amount of information from each user, and thus, a re-commender may be more useful than others in different situations. 
In this paper, we explore a self-adjusting hybrid recommendation approach that makes use of adjusting factors to boost one of the combined recommenders for certain users. In our case, the value of is fixed at the user level, i.e. , aiming to promote the recommender that is expected to perform best for each particular user, e.g. because there is more meaningful available information for this recommender than for others. For this purpose, we analyze a particular hybrid configuration in which we combine social and CF recommenders. In this context, we propose to use graph-based measures as adjusting factors of the user s X  strength in the network, by balancing the influence of each recommender. More specifical-ly, we apply these measures to set the weight of the social reco m-mender, in such a way that when a user is very socially  X  X ctive X  (e.g., she plays a special role in the community), the recommend a-tions from the social recommender are assumed to be more impo r-tant than those from the CF recommender, and vice versa. 
The adjusting factors used herein are based on vertex measures from graph theory. More specifically, we use user degree , i.e., the number of friends of each user in the network, average neighbor degree , and size of two-hop neighborhood , both described in [4] ; PageRank and HITS scores, well-known measures of connectivity relevance within a social network; betweenness centrality , which is an indicator of whether a user can reach others on relatively short paths [5] ; clustering coefficient , which measures the probability that the use r X  X  friends are friends themselves [8] ; and ego components size , which is the number of connected components remaining when the user and her friends are removed [4] . We use the dataset provided in the social track of the CAMRa Challenge [7] . This dataset was gathered by the Filmtipset co m-munity, and contains social links between users, movie ratings, movie comments, and other attributes of users and movies. The set of users presented in the test set turns out to be very specific : every user has at least two friends, something not plausible in a real setting, where not every user has a social network . Because of that, we simulate a more realistic scenario to empirically compare social and CF recommenders in a fair environment where users with and without social contacts in their profiles are considered. We sampled randomly the same number of test users in the orig i-nal test set (i.e., 439 users), but forcing them to have no friends , and include them in the new test set used in our experiments. 
We evaluated a number of hybrid ensemble recommendation approaches combining CF and two different social recommenders. User-based CF [1] with a neighborhood size of 10 is denoted as UB10 . One of the social recommenders is denoted as PureSocial . It is inspired by the approach presented in [6] , and incorporates social information into the user-based CF model, by replacing the set of nearest neighbors with the active use r X  X  (explicit) friends. The other social recommender (denoted as Personal ) is described in [2] , where distances between users in the social graph are e x-plicitly incorporated in the scoring formula as: notes the social tree of user up to level , and is an attenu a-tion coefficient of the social network that determines the extent of the effect of , i.e., the impact of the distance between two users in the social graph, weighted by the rating given by user to item , i.e., . I n our experiments, we used as distance the one obtained by Dijkstra  X  X  alg orithm , and . 
We evaluated three different recommender ensembles, depen d-ing on which social recommender was combined with UB10 , and a threshold parameter in the number of common items required to decide when two users are considered neighbors . We denote the above hybrids as follows: H1 ( UB10 and Personal , with a thr e-shold value of 2), H2 ( UB10 and PureSocial , threshold is 1), and H3 (the same as in H2 but with a threshold value of 2). 
Table 1 shows the results obtained with the proposed self-adjusted hybridization technique, using the adjusting factors presented in the previous section . We only show P@5 and nDCG@5 results due to space constraints, but results are consistent for different cutoff values other than 5. In the table, we compare the results from the self-adjusted hybrid recommendations against those of the best statics, and a static with , since this value is the natural choice (and best prior on average) in the absence of information about the reco m-mender systems to be combined. We also include the performance for the extreme cases: (only social) and (collaborative). 
In the table, we observe that the self-adjusted recommenders get a general advantage over the static configurations. For instance, the PageRank-based hybrid is better than statics in all cases (without statistical significance in H3 though), and all methods, except Centrality and Clustering on H3, improve over the 0.5 static  X  X nd the best posterior static in most cases. The improvements are less significant on the H3 ensemble. We hypothesize this can be due to the fact that the social algorithm in H3 performs significantly and sys tematically better than the CF, whereby any ensemble is subo p-timal with respect to the best component (here, social) . It is impo r-tant to note that the best static is different for each ensemble (namely, for H1, for H2, and for H3), which fu r-ther highlights the importance of this result, in that the best static is not actually a real configuration: a best static configuration would require a manual tuning of , and even so, the table shows the posterior best static, which a manually tuned would not guaran-tee. Nonetheless, although no self-adjusting hybrid method is significantly better in every situation, PageRank , HITS , and ego components size factors seem to be safe alternatives. Table 1 . Performance results for the three ensembles tested . The best absolute value is underlined. Improvements over the best static are shown in bold font, and over the static 0.5 with italics. Statistical significant (p&lt;0.05) differences between self-adjusted hybrid recommenders and static 0.5, best static, and both a re marked with *,  X  , and  X  , respectively. 
Finally, it is worth noting that single approaches obtain lower accuracy values than hybrids on equal terms since they deal poorly with the social cold start situation if we measure the performance for all the users (the social component evaluated in this way is only able to recommend items for 55% of the test users, i.e., its  X  X rue X  P@5 value for H1 should be 0.206). The empirical results thus suggest that significant improvements can be drawn from the proposed self-adjustment strategy based on graph-based social factors. The herein presented adjusting criteria only make use of social network structures; we shall explore alternative factors in the future, such as distributional properties of user ratings. Acknowledgements . This work was supported by the Spanish Ministry of Science and Innovation (TIN2008-06566 -C04-02), University Aut X noma de Madrid and the Community of Madrid (CCG10-UAM/TIC-5877). 
