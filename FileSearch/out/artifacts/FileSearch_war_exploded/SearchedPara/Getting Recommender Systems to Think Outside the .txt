 We examine the case of over-specialization in recommender systems, which results from returning items that are too similar to those previously rated by the user. We propose Outside-The-Box ( OT B ) recommendation, which takes some risk to help users make fresh discoveries , while maintaining high relevance . The proposed formalization relies on item regions and attempts to identify regions that are under-exposed to the user. We develop a recommendation algo-rithm which achieves a compromise between relevance and risk to find OT B items. We evaluate this approach on the MovieLens data set and compare our OT B recommenda-tions against conventional recommendation strategies. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Algorithms, Experimentation otb, outside the box, diversity, serendipity, recommendation
Recommender systems have recently witnessed impressive gains in their research methodology and practical success (c.f., Amazon and Netflix). Lately, recommendations are appearing in social content sites such as del.icio.us and Ya-hoo! Travel [3]. A typical problem with recommenders is over -specialization : users frequently see items that are very similar to what they liked in the past. While this approach produces relevant items, anecdotal evidence suggests that they may not be the most useful recommendations, due to their lack of novelty. The push for relevancy leads recom-mender systems to produce these safe items, and reduces the chances that a user will be exposed to items that she may actually like, had she known about them (serendipi-tous recommendation) [9, 10]. In this paper, we formalize outside-the-box, OT B , recommendations which aim at help-ing users find surprisingly good items.

Seeking OT B recommendations and finding diverse rec-ommendations as in [10, 11, 12], are two different and com-plementary tasks. A user who is recommended diverse items, e.g., a comedy, a drama and an adventure movie, may still consider them too similar to previously rated ones if the user rated many such movies in the past. That same user, if rec-ommended a Sci-Fi and two thrillers, will find them more in-teresting despite being less diverse. Moreover, a user coming to an OT B system expects a different experience from a con-ventional recommender, which aims to maximize relevance only. Hence, OT B -ness should be viewed as complementary to diversification and to conventional recommendations.
We introduce a notion of regions over items, and define it based on item attributes (e.g., the genre of a movie) or user behavior (e.g., movies liked by the same group of users). Over-specialization occurs when the recommended items to a user overwhelmingly fall into regions the user is familiar with. For example, recommending the movie  X  X -Men Ori-gins: Wolverine X  to a user who has watched and liked a lot of Sci-Fi action/thriller movies is, although highly relevant, less useful , since the user is likely to know about this movie already. Intuitively, users would experience serendipity as they are recommended items from less familiar regions.
To this end, we introduce stickiness which measures a user X  X  familiarity with items in a region. Intuitively, a user is familiar with a region if her stickiness for the region exceeds the global stickiness for it. Observed unfamiliarity with a region can arise either when a user truly does not like items in the region and chooses not to rate them or when the user has not been exposed enough to the region. It is in the latter case that a region is likely to contain surprising yet relevant items. Therefore, in Collaborative Filtering (CF) , where recommended items are those popular among users who are similar to the given user (the user X  X  network)[1], we detect under-exposure by comparing a user X  X  stickiness to a region with her network X  X . In Section 2.1, we formalize this intuition into the notion of region OT B -ness .

Specifically, OT B is a recommendation strategy that takes into consideration which regions items come from, and favors items that come from regions with high OT B -ness. The pro-cess of recommending OT B items involves combining region OT B -ness with item relevance . Computing item relevance is a substantial challenge in itself since neither the user nor her network know much about those regions. Hence, we pro-pose the notion of expanded region network which relies on region-region correlations . For example, for a user John who has high OT B -ness for French restaurants (i.e., neither he nor his network knows much about French restaurants), his network becomes useless in estimating the expected ratings of French restaurants. However, if it is globally known that French restaurants are correla ted with Mediterranean ones, the expanded network built from users who like Mediter-ranean cuisine can be helpful in computing the relevance of French restaurants for John. This is further detailed in Sections 2.2 and Section 2.3, which describes our algorithm.
Finally, in Section 3, we perform comprehensive experi-ments over the 10M ratings MovieLens data set. We show that our strategy not only finds items which are different from conventional recommenders but also preserves item quality as measured by nDCG.
We start by defining a region (i.e., the  X  X ox X ) as a group of similar items. R I denotes a (potentially overlapping) assign-ment of items I into regions. Regions in R I are produced using similarity distances between items. We explore two such similarities: attribute-based and activity-based .
Definition 1. [Attribute-Based Similarity] Let A be a set of item attributes, called region dimensions .Then we can define an attribute based similarity function d A .For any two items i and j the distance d A ( i, j )=0 iff  X  a we have i.a. = j.a ,and d A ( i, j )=  X  otherwise.
For movies, region dimensions may include movie attributes like genre and directors. A region instance is often identified byitsdimensionsandtheirvalues(e.g., { (genre=comedy), (producer=Disney) } ). For attributes with a large number of distinct values (e.g., actors), a taxonomy can be intro-duced to reduce the total number of regions. For example, Jim Carrey and Adam Sandler are similar under  X  X omedi-ans. X  Our framework also supports sophisticated distance functions, e.g., a weighted combination of distances on item attributes.

Definition 2. [Activity-Based Similarity] For any two items i and j , and action a let a ( i ) and a ( j ) define the respective sets of users that performed action a on the item. Then let d ( i, j ) be the Jaccard dissimilarity between a ( i ) and a ( j ) :
Here, regions identify items rated by a large enough num-ber of similar users.

To produce an assignment of items into regions given a similarity function, we turn to the k-means ++ algorithm [4]. The algorithm is known to converge quickly, and for clus-tering n items requires only O ( nkr ) distance computations, where k is the number of clusters and r is the number of rounds performed by k-means.
We let items ( u ) denote the set of items that are rated by u , items ( r ) the set of items belong to region r , items ( u, r ) the set of items belong to region r that are rated by u , known rating of user u for item i ; Definition 3. [User Region Stickiness] The stickiness of a user u to a region r , stick ( u, r )isthe fraction between the number of items rated by u which be-long to r over the total number of items rated by u .That
A user who rated 500 movies, 50 of which are Drama, would have a stickiness of 10% for the region { (genre=Drama) Intuitively, stickiness measures the degree of familiarity of a user toward a given region: the higher the stickiness, the more likely the user already knows about items within the region. Note that if the given region is the entire set of items (
I ), then stick ( u, I ) = 1 for any user u . Similarly, we can measure the stickiness of a group of users to a region: Definition 4. [Network Region Stickiness] The stickiness of a group of users (i.e., a network) N to a region r , stick ( N, r ) is the average of each individual mem-Furthermore, we have the deviation of stickiness:
The network stickiness measures the familiarity toward the given region by a group of users collectively. The devi-ation of stickiness measures how consistent each member X  X  stickiness is with the others. The lower the deviation, the more likely every member in the group is familiar (or un-familiar) with items in the given region. When N is the entire group of users ( U ), we have the global stickiness, stick ( U ,r ), and deviation, stickDev ( U ,r ), for the region.
There are two main factors in measuring a region X  X  OT B -ness for a given user: the level of unfamiliarity and the (under-)exposure potential. We combine those two factor in the definition of OT B -ness: Definition 5. [User Region OT B -ness] The OT B -ness for a region r by a given user u is defined as otb ( u, r )= otbBase ( u, r )  X  otbFactor ( u, r ). where the level of unfamiliarity for r by u is defined as: if stick ( U ,r ) &gt; stick ( u, r ) , 0 otherwise. And the exposure factor for r by u is defined as: Here, normalization by the global deviation in otbBase is done to identify the regions whose unfamiliarity are the most statistically significant. And, a region has a high otbFactor if the user X  X  network is unfamiliar with items in the region.
Identifying good items within OT B regions now becomes a challenge since neither the user nor the user X  X  network knows much about items in those regions with a high OT B -ness for that user (according to the definitions in Section 2.1). As a result, computing the user X  X  expected rating, i.e., relevance, for items within those regions requires special attention. To address this question, we propose the notion of region-region correlation to identify the set of regions that implies each OT B region. We then construct an expanded region network , which consists of users who are similar to the target user based on items in those correlated regions.
We use association rules [2] to identify region-region cor-relations of the form r  X  r where r and r are different regions in R I .

Definition 6. [Source Region] Aregion s is a source region of a region r if and only if at least x % of the users who rate items in s also rate items in r ,where x is a custom defined threshold.

Source regions indicate general trends such as people who rate Woody Allen movies also rate David Lynch movies .We use sources ( r ), to denote the set of all source regions of a region r . We show an example of source regions found in our data set in Section 3. Based on this, exSim ( u, u ,r ), the expanded similarity of two users given a region can be defined as: exSim ( u, u ,r )= max r  X  sources ( r ) userSim ( u, u ,r ) where userSim ( u, u ,r ) is a similarity between two users re-stricted to region r , formally defined as: userSim ( u, u ,r )= where two ratings with a difference less than 2 (on a scale of 0 to 5) is considered to be similar. This is number is user customizable and chosen based on our experience.

Definition 7. [Expanded Region Network] The expanded region network, exNet ( u, r ), for a user u and a re-gion r is the set of users u  X  X  such that exSim ( u, u ,r ) where  X  is an application-dependent threshold.

Intuitively, exNet ( u, r )isthesetformedbyuserswho share similar interests with u over source regions of r .We can now have: relevance ( u, r, i )= X  u  X  exNet ( u,r ) exSim ( u, u ,r )
Finally, we define the overall score of an item i as follows: where regions ( i ) is the set of all regions an item belongs to, otb ( u, r ) denotes the OT B score of region r for user u and relevance ( u, r, i ) is the region-specific relevance score of item i for user u .

Algorithm 1 summarizes our recommendation strategy. In order to efficiently generate the top-k items, we need to de-termine those regions r with otb ( u, r ) &gt; 0. Furthermore, for each such region r , we need to create a list of items from r sorted in decreasing order of relevance (line 1). Given this information, we can generate the top-k items by a simple adaptation to a standard algorithm such as NRA or TA [6]. The two required changes are: the score of an item from a list IL r u should be weighted by the OT B -ness of r and, an item X  X  score needs to be aggregated across all its regions. The algorithm maintains a heap of current candidate items to recommend and stops when the expected overall score can not exceed the current k th score in the heap (line 6). Our experiments demonstrate two main points. First, OT B recommendations are of high quality as measured by standard metrics. Second, they differ significantly from tra-ditional ones, and this difference is not simply in the tail end of the recommendations X  X e find that they contribute significantly to overall quality. This argues that OT B rec-ommendations are complementary to conventional ones, and that both novelty and relevance are necessary to achieve user satisfaction.
 Algorithm 1 OT B Recommendation Strategy 1: Retrieve relevance lists IL r u for each r  X  R I 3: while ( cur &lt;&gt; NULL) do 4: Get item i at cur ; 9: end if 10: end if 11: cur = getNext (); 12: end while 13: return topKList( topKHeap );
We adopt the MovieLens 10M ratings data [7] (statistics in Table 1.) For attribute-based regionization, we cluster movies based on genre which results in 19 regions. Conse-quently, a movie may belong to more than one region. For activity-based regionization, we use k-means to produce the same number of (non-overlapping) regions, with the distance between two movies defined based on the two sets of users who rated them (Definition 2.) The size of each region varies from 50 to 2000 movies in the attribute-based regionization, and from 160 to 1050 movies in the activity-based one.
We further compute region-region correlations to gener-ate expanded region networks (see Definition 7.) Table 2 reports source regions for each attribute-based region using a threshold of 60%.
We studied three strategies. CF uses conventional collab-orative filtering, while OTB-ATT (resp. OTB-ACT )pro-duces OT B recommendations using attribute-based (resp. activity-based) regions.

Movie ratings range from Jan 9, 1995 to Jan 4, 2009. We used ratings by 700 active users, i.e., users who rated movies for more than a year. For each user, we divided the data into a training set which covers the first 80% of each user X  X  rating period and, a test set, the remaining 20%.

To evaluate the quality of the results we adopt the Nor-malized Discounted Cumulative Gain (nDCG) [8] measure. Each recommendation strategy generates a ranked list. For a given list of size n , we compute the discounted cumulative gain, DCG, as follows: where rel i is the rating of the movie at position i in the test set. To compute nDCG, we reorder the list such that the most relevant items appear first and compute the ideal DCG in the same way: between 0 and 1, regardless of the test set size. region source regions Action Adventure, Comedy, Crime, Drama, Adventure Crime, Drama, Horror, Mystery, Sci-Fi Animation Children, Comedy, Sci-fi Children Comedy, Documentary, Drama, Fantasy, Comedy Crime, Drama, Fantasy, Romance Crime Documentary, Drama, Thriller, War Documentary Drama Drama Action, Comedy,Romance, Sci-Fi, Thriller Fantasy Sci-Fi, Thriller Noir Drama Horror Adventure, Thriller Imax Animation Musical Romance Mystery Thriller Romance Drama, Thriller, War Sci-Fi Documentary, War Thriller War War Adventure, Western Western Drama, Action
Figure 1: Average nDCG (all three strategies.)
Figure 1 shows that CF , OTB-ATT and OTB-ACT produce statistically comparable average nDCGs (and stan-dard deviation) across all 700 users. This validates that taking more risk to produce recommendations does not hurt overall quality.
 Table 3 shows the average overlap between OTB-ATT , OTB-ACT and CF . The overlap at top-10 is quite small (about 30%.) Even for top-50 lists, the overlap is still rea-sonably small at about 50%. This suggests that OT B recom-mendations are novel and complementary to the ones found by CF .
 We further investigate nDCG values for each strategy. As shown in Figure 2, recommendations generated only by our OT B strategies contribute to a significant portion (over 80%) of the overall nDCG, indicating most of those recom-mendations rank higher up in the returned list which makes them different and novel ,hence,potentially useful . Figure 2: Contribution to nDCG by overlapping and non-overlapping recommendations.

Table 3: Average overlap with CF recommendations.
Despite being a recognized problem, over-specialization is addressed in an ad-hoc manner. Some content-based recom-mender systems, such as DailyLearner [5], filter out highly relevant items which are too similar to items the user has rated in the past. Most previous work focuses on increasing diversity, such as [11] and [12]. Finally, there are also pro-posals that incorporate randomness in recommendations [1].
