 A majority of data-driven NLP systems rely on large-scale, manually annotated corpora that are im-portant to train statistical models but very expensive to build. Nowadays, for many tasks, multiple het-erogeneous annotated corpora have been built and publicly available. For example, the Penn Treebank is popular to train PCFG-based parsers, while the Redwoods Treebank is well known for HPSG re-search; the Propbank is favored to build general se-mantic role labeling systems, while the FrameNet is attractive for predicate-specific labeling. The anno-tation schemes in different projects are usually dif-ferent, since the underlying linguistic theories vary and have different ways to explain the same lan-guage phenomena. Though statistical NLP systems usually are not bound to specific annotation stan-dards, almost all of them assume homogeneous an-notation in the training corpus. The co-existence of heterogeneous annotation data therefore presents a new challenge to the consumers of such resources.
There are two essential characteristics of hetero-geneous annotations that can be utilized to reduce two main types of errors in statistical NLP, i.e. the approximation error that is due to the intrinsic sub-optimality of a model and the estimation error that is due to having only finite training data. First, hetero-geneous annotations are (similar but) different as a result of different annotation schemata. Systems re-spectively trained on heterogeneous annotation data can produce different but relevant linguistic analy-sis. This suggests that complementary features from heterogeneous analysis can be derived for disam-biguation, and therefore the approximation error can be reduced. Second, heterogeneous annotations are (different but) similar because their linguistic analy-sis is highly correlated. This implies that appropriate conversions between heterogeneous corpora could be reasonably accurate, and therefore the estimation error can be reduced by reason of the increase of re-liable training data.

This paper explores heterogeneous annotations to reduce both approximation and estimation errors for Chinese word segmentation and part-of-speech (POS) tagging, which are fundamental steps for more advanced Chinese language processing tasks. We empirically analyze the diversity between two representative popular heterogeneous corpora, i.e. Penn Chinese Treebank (CTB) and PKU X  X  People X  X  Daily (PPD). To that end, we manually label 200 sentences from CTB with PPD-style annotations. 1 Our analysis confirms the aforementioned two prop-erties of heterogeneous annotations. Inspired by the sub-word tagging method introduced in (Sun, 2011), we propose a structure-based stacking model to fully utilize heterogeneous word structures to re-duce the approximation error. In particular, joint word segmentation and POS tagging is addressed as a two step process. First, character-based tag-gers are respectively trained on heterogeneous an-notations to produce multiple analysis. The outputs of these taggers are then merged into sub-word se-quences, which are further re-segmented and tagged by a sub-word tagger. The sub-word tagger is de-signed to refine the tagging result with the help of heterogeneous annotations. To reduce the estima-tion error, we employ a learning-based approach to convert complementary heterogeneous data to in-crease labeled training data for the target task. Both the character-based tagger and the sub-word tagger can be refined by re-training with automatically con-verted data.

We conduct experiments on the CTB and PPD data, and compare our system with state-of-the-art systems. Our structure-based stacking model achieves an f-score of 94.36, which is superior to a feature-based stacking model introduced in (Jiang et al., 2009). The converted data can also enhance the baseline model. A simple character-based model can be improved from 93.41 to 94.11. Since the two treatments are concerned with reducing differ-ent types of errors and thus not fully overlapping, the combination of them gives a further improvement. Our final system achieves an f-score of 94.68, which yields a relative error reduction of 11% over the best published result (94.02). Different from English and other Western languages, Chinese is written without explicit word delimiters such as space characters. To find and classify the basic language units, i.e. words, word segmentation and POS tagging are important initial steps for Chi-nese language processing. Supervised learning with specifically defined training data has become a dom-inant paradigm. Joint approaches that resolve the two tasks simultaneously have received much atten-tion in recent research. Previous work has shown that joint solutions led to accuracy improvements over pipelined systems by avoiding segmentation er-ror propagation and exploiting POS information to help segmentation (Ng and Low, 2004; Jiang et al., 2008a; Zhang and Clark, 2008; Sun, 2011).

Two kinds of approaches are popular for joint word segmentation and POS tagging. The first is the  X  X haracter-based X  approach, where basic processing units are characters which compose words (Jiang et al., 2008a). In this kind of approach, the task is for-mulated as the classification of characters into POS tags with boundary information. For example, the label B-NN indicates that a character is located at the begging of a noun. Using this method, POS infor-mation is allowed to interact with segmentation. The second kind of solution is the  X  X ord-based X  method, also known as semi-Markov tagging (Zhang and Clark, 2008; Zhang and Clark, 2010), where the ba-sic predicting units are words themselves. This kind of solver sequentially decides whether the local se-quence of characters makes up a word as well as its possible POS tag. Solvers may use previously pre-dicted words and their POS information as clues to process a new word.

In addition, we proposed an effective and efficient stacked sub-word tagging model, which combines strengths of both character-based and word-based approaches (Sun, 2011). First, different character-based and word-based models are trained to produce multiple segmentation and tagging results. Sec-ond, the outputs of these coarse-grained models are merged into sub-word sequences, which are fur-ther bracketed and labeled with POS tags by a fine-grained sub-word tagger. Their solution can be viewed as utilizing stacked learning to integrate het-erogeneous models.

Supervised segmentation and tagging can be im-proved by exploiting rich linguistic resources. Jiang et al. (2009) presented a preliminary study for an-notation ensemble, which motivates our research as well as similar investigations for other NLP tasks, e.g. parsing (Niu et al., 2009; Sun et al., 2010). In their solution, heterogeneous data is used to train an auxiliary segmentation and tagging system to pro-duce informative features for target prediction. Our previous work (Sun and Xu, 2011) and Wang et al. (2011) explored unlabeled data to enhance strong supervised segmenters and taggers. Both of their work fall into the category of feature induction based semi-supervised learning. In brief, their methods harvest useful string knowledge from unlabeled or automatically analyzed data, and apply the knowl-edge to design new features for discriminative learn-ing. For Chinese word segmentation and POS tag-ging, supervised learning has become a dominant paradigm. Much of the progress is due to the devel-opment of both corpora and machine learning tech-niques. Although several institutions to date have released their segmented and POS tagged data, ac-quiring sufficient quantities of high quality training examples is still a major bottleneck. The annotation schemes of existing lexical resources are different, since the underlying linguistic theories vary. Despite the existence of multiple resources, such data cannot be simply put together for training systems, because almost all of statistical NLP systems assume homo-geneous annotation. Therefore, it is not only inter-esting but also important to study how to fully utilize heterogeneous resources to improve Chinese lexical processing.
 There are two main types of errors in statistical NLP: (1) the approximation error that is due to the intrinsic suboptimality of a model and (2) the esti-mation error that is due to having only finite train-ing data. Take Chinese word segmentation for ex-ample. Our previous analysis (Sun, 2010) shows that one main intrinsic disadvantage of character-based model is the difficulty in incorporating the whole word information, while one main disadvan-tage of word-based model is the weak ability to ex-press word formation. In both models, the signifi-cant decrease of the prediction accuracy of out-of-vocabulary (OOV) words indicates the impact of the estimation error. The two essential characteristics about systematic diversity of heterogeneous annota-tions can be utilized to reduce both approximation and estimation errors. 3.1 Analysis of the CTB and PPD Standards This paper focuses on two representative popular corpora for Chinese lexical processing: (1) the Penn Chinese Treebank (CTB) and (2) the PKU X  X  Peo-ple X  X  Daily data (PPD). To analyze the diversity be-tween their annotation standards, we pick up 200 sentences from CTB and manually label them ac-cording to the PPD standard. Specially, we employ a PPD-style segmentation and tagging system to auto-matically label these 200 sentences. A linguistic ex-pert who deeply understands the PPD standard then manually checks the automatic analysis and corrects its errors.

These 200 sentences are segmented as 3886 and 3882 words respectively according to the CTB and PPD standards. The average lengths of word tokens are almost the same. However, the word bound-aries or the definitions of words are different. 3561 word tokens are consistently segmented by both standards. In other words, 91.7% CTB word tokens share the same word boundaries with 91.6% PPD word tokens. Among these 3561 words, there are 552 punctuations that are simply consistently seg-mented. If punctuations are filtered out to avoid overestimation of consistency, 90.4% CTB words have same boundaries with 90.3% PPD words. The boundaries of words that are differently segmented are compatible . Among all annotations, only one cross-bracketing occurs. The statistics indicates that the two heterogenous segmented corpora are sys-tematically different, and confirms the aforemen-tioned two properties of heterogeneous annotations.
Table 1 is the mapping between CTB-style tags and PPD-style tags. For the definition and illus-tration of these tags, please refers to the annotation guidelines 2 . The statistics after colons are how many times this POS tag pair appears among the 3561 words that are consistently segmented. From this ta-ble, we can see that (1) there is no one-to-one map-ping between their heterogeneous word classifica-tion but (2) the mapping between heterogeneous tags is not very uncertain. This simple analysis indicates that the two POS tagged corpora also hold the two properties of heterogeneous annotations. The dif-ferences between the POS annotation standards are systematic. The annotations in CTB are treebank-driven, and thus consider more functional (dynamic) information of basic lexical categories. The annota-tions in PPD are lexicon-driven, and thus focus on more static properties of words. Limited to the doc-ument length, we only illustrate the annotation of verbs and nouns for better understanding of the dif-ferences.  X  The CTB tag VV indicates common verbs that  X  The tag NN indicates common nouns in CTB.
 4.1 Reducing the Approximation Error via Each annotation data set alone can yield a predictor that can be taken as a mechanism to produce struc-tured texts. With different training data, we can con-struct multiple heterogeneous systems. These sys-tems produce similar linguistic analysis which holds the same high level linguistic principles but differ in details. A very simple idea to take advantage of het-erogeneous structures is to design a predictor which can predict a more accurate target structure based on the input, the less accurate target structure and complementary structures. This idea is very close to stacked learning (Wolpert, 1992), which is well developed for ensemble learning, and successfully applied to some NLP tasks, e.g. dependency parsing (Nivre and McDonald, 2008; Torres Martins et al., 2008).

Formally speaking, our idea is to include two  X  X evels X  of processing. The first level includes one or more base predictors f 1 , ..., f K that are indepen-dently built on different training data. The second level processing consists of an inference function h that takes as input  X  x , f 1 ( x ) , ..., f K ( x )  X  puts a final prediction h ( x , f 1 ( x ) , ..., f K ( x )) . The only difference between model ensemble and anno-tation ensemble is that the output spaces of model ensemble are the same while the output spaces of an-notation ensemble are different. This framework is general and flexible, in the sense that it assumes al-most nothing about the individual systems and take them as black boxes. 4.2 A Character-based Tagger With IOB2 representation (Ramshaw and Marcus, 1995), the problem of joint segmentation and tag-ging can be regarded as a character classification task. Previous work shows that the character-based approach is an effective method for Chinese lexical processing. Both of our feature-and structure-based stacking models employ base character-based tag-gers to generate multiple segmentation and tagging results. Our base tagger use a discriminative sequen-tial classifier to predict the POS tag with positional information for each character. Each character can be assigned one of two possible boundary tags:  X  X  X  for a character that begins a word and  X  X  X  for a char-acter that occurs in the middle of a word. We denote a candidate character token c i with a fixed window c for classification:  X  Character unigrams: c k ( i  X  l  X  k  X  i + l )  X  Character bigrams: c k c k +1 ( i  X  l  X  k &lt; i + l ) 4.3 Feature-based Stacking Jiang et al. (2009) introduced a feature-based stack-ing solution for annotation ensemble. In their so-lution, an auxiliary tagger CTag ppd is trained on a complementary corpus, i.e. PPD, to assist the tar-get CTB-style tagging. To refine the character-based tagger CTag ctb , PPD-style character labels are di-rectly incorporated as new features. The stacking model relies on the ability of discriminative learning method to explore informative features, which play central role to boost the tagging performance. To compare their feature-based stacking model and our structure-based model, we implement a similar sys-tem CTag ppd  X  ctb . Apart from character uni/bigram features, the PPD-style character labels are used to derive the following features to enhance our CTB-style tagger:  X  Character label unigrams: c ppd  X  Character label bigrams: c ppd
In the above descriptions, l and l ppd are the win-dow sizes of features, which can be tuned on devel-opment data. 4.4 Structure-based Stacking We propose a novel structured-based stacking model for the task, in which heterogeneous word struc-tures are used not only to generate features but also to derive a sub-word structure. Our work is in-spired by the stacked sub-word tagging model in-troduced in (Sun, 2011). Their work is motivated by the diversity of heterogeneous models, while our work is motivated by the diversity of heteroge-neous annotations. The workflow of our new sys-tem is shown in Figure 1. In the first phase, one character-based CTB-style tagger ( CTag ctb ) and one character-based PPD-style tagger ( CTag ppd ) are respectively trained to produce heterogenous word boundaries. In the second phase, this system first combines the two segmentation and tagging re-sults to get sub-words which maximize the agree-ment about word boundaries. Finally, a fine-grained sub-word tagger ( STag ctb ) is applied to bracket sub-words into words and also to label their POS tags. We can also apply a PPD-style sub-word tagger. To compare with previous work, we specially concen-trate on the PPD-to-CTB adaptation.

Following (Sun, 2011), the intermediate sub-word structures is defined to maximize the agreement of CTag ctb and CTag ppd . In other words, the goal is to make merged sub-words as large as possible but not overlap with any predicted word produced by the two taggers. If the position between two con-tinuous characters is predicted as a word boundary by any segmenter, this position is taken as a separa-tion position of the sub-word sequence. This strat-egy makes sure that it is still possible to correctly re -segment the strings of which the boundaries are disagreed with by the heterogeneous segmenters in the sub-word tagging stage.

To train the sub-word tagger STag ctb , features are formed making use of both CTB-style and PPD-style POS tags provided by the character-based tag-gers. In the following description,  X  X  X  refers to the content of a sub-word;  X  X  ctb  X  and  X  X  ppd  X  refers to the positional POS tags generated from CTag ctb and CTag ppd ; l C , l ctb T and l ppd T are the window sizes. For convenience, we denote a sub-word with its con-The following features are applied:  X  Unigram features: C( s k ) ( i  X  l C  X  k  X  + l C ),  X  Bigram features: C( s k )C( s k +1 ) ( i  X  l C  X  k &lt;  X  C( s i  X  1 )C( s i +1 ) (if l C  X  1 ),  X  Word formation features: character n -gram Cross-validation CTag ctb and CTag ppd are di-rectly trained on the original training data, i.e. the CTB and PPD data. Cross-validation technique has been proved necessary to generate the training data for sub-word tagging, since it deals with the train-ing/test mismatch problem (Sun, 2011). To con-struct training data for the new heterogeneous sub-word tagger, a 10 -fold cross-validation on the origi-nal CTB data is performed too. It is possible to acquire high quality labeled data for a specific annotation standard by exploring ex-isting heterogeneous corpora, since the annotations are normally highly compatible. Moreover, the ex-ploitation of additional (pseudo) labeled data aims to reduce the estimation error and enhances a NLP sys-tem in a different way from stacking. We therefore expect the improvements are not much overlapping and the combination of them can give a further im-provement.

The stacking models can be viewed as annota-tion converters: They take as input complementary structures and produce as output target structures. In other words, the stacking models actually learn statistical models to transform the lexical represen-tations. We can acquire informative extra samples by processing the PPD data with our stacking mod-els. Though the converted annotations are imperfect, they are still helpful to reduce the estimation error. Character-based Conversion The feature-based stacking model CTag ppd  X  ctb maps the input char-acter sequence c and its PPD-style character label sequence to the corresponding CTB-style character label sequence. This model by itself can be taken as a corpus conversion model to transform a PPD-style analysis to a CTB-style analysis. By processing the auxiliary corpus D ppd with CTag ppd  X  ctb , we ac-We can re-train the CT ag ctb model with both origi-nal and converted data D ctb  X  D 0 ctb .
 Sub-word-based Conversion Similarly, the structure-based stacking model can be also taken as a corpus conversion model. By processing the auxiliary corpus D ppd with STag ctb , we acquire re-train the STag ctb model with D ctb  X  D 00 ctb . If we use the gold PPD-style labels of D 00 ctb to extract sub-words, the new model will overfit to the gold PPD-style labels, which are unavailable at test time. To avoid this training/test mismatch problem, we also employ a 10 -fold cross validation procedure to add noise.

It is not a new topic to convert corpus from one formalism to another. A well known work is trans-forming Penn Treebank into resources for various deep linguistic processing, including LTAG (Xia, 1999), CCG (Hockenmaier and Steedman, 2007), HPSG (Miyao et al., 2004) and LFG (Cahill et al., 2002). Such work for corpus conversion mainly leverages rich sets of hand-crafted rules to convert corpora. The construction of linguistic rules is usu-ally time-consuming and the rules are not full cover-age. Compared to rule-based conversion, our statis-tical converters are much easier to built and empiri-cally perform well. 6.1 Setting Previous studies on joint Chinese word segmenta-tion and POS tagging have used the CTB in experi-ments. We follow this setting in this paper. We use CTB 5.0 as our main corpus and define the train-ing, development and test sets according to (Jiang et al., 2008a; Jiang et al., 2008b; Kruengkrai et al., 2009; Zhang and Clark, 2010; Sun, 2011). Jiang et al. (2009) present a preliminary study for the annota-tion adaptation topic, and conduct experiments with the extra PPD data 4 . In other words, the CTB-sytle annotation is the target analysis while the PPD-style annotation is the complementary/auxiliary analysis. Our experiments for annotation ensemble follows their setting to lead to a fair comparison of our sys-tem and theirs. A CRF learning toolkit, wapiti 5 (Lavergne et al., 2010), is used to resolve sequence labeling problems. Among several parameter esti-mation methods provided by wapiti, our auxiliary experiments indicate that the  X  X prop- X  method works best. Three metrics are used for evaluation: preci-sion (P), recall (R) and balanced f-score (F) defined by 2PR/(P+R). Precision is the relative amount of correct words in the system output. Recall is the rel-ative amount of correct words compared to the gold standard annotations. A token is considered to be correct if its boundaries match the boundaries of a word in the gold standard and their POS tags are identical. 6.2 Results of Stacking Table 2 summarizes the segmentation and tagging performance of the baseline and different stacking models. The baseline of the character-based joint solver ( CTag ctb ) is competitive, and achieves an f-score of 92.93. By using the character labels from a heterogeneous solver ( CTag ppd ), which is trained on the PPD data set, the performance of this character-based system ( CTag ppd  X  ctb ) is improved to 93.67. This result confirms the importance of a heterogeneous structure. Our structure-based stack-ing solution is effective and outperforms the feature-based stacking. By better exploiting the heteroge-neous word boundary structures, our sub-word tag-ging model achieves an f-score of 94.03 ( l ctb T and l
T are tuned on the development data and both set to 1).

The contribution of the auxiliary tagger is two-fold. On one hand, the heterogeneous solver pro-vides structural information, which is the basis to construct the sub-word sequence. On the other hand, this tagger provides additional POS informa-tion, which is helpful for disambiguation. To eval-uate these two contributions, we do another experi-ment by just using the heterogeneous word boundary structures without the POS information. The f-score of this type of sub-word tagging is 93.73. This re-sult indicates that both the word boundary and POS information are helpful. 6.3 Learning Curves We do additional experiments to evaluate the effect of heterogeneous features as the amount of PPD data is varied. Table 3 summarizes the f-score change. The feature-based model works well only when a considerable amount of heterogeneous data is avail-able. When a small set is added, the performance is even lower than the baseline (92.93). The structure-based stacking model is more robust and obtains consistent gains regardless of the size of the com-plementary data.
 6.4 Results of Annotation Conversion The stacking models can be viewed as data-driven annotation converting models. However they are not trained on  X  X eal X  labeled samples. Although the tar-get representation (CTB-style analysis in our case) is gold standard, the input representation (PPD-style analysis in our case) is labeled by a automatic tag-ger CTag ppd . To make clear whether these stacking models trained with noisy inputs can tolerate per-fect inputs, we evaluate the two stacking models on our manually converted data. The accuracies pre-sented in Table 4 indicate that though the conver-sion models are learned by applying noisy data, they can refine target tagging with gold auxiliary tagging. Another interesting thing is that the gold PPD-style analysis does not help the sub-word tagging model as much as the character tagging model.
 6.5 Results of Re-training Table 5 shows accuracies of re-trained models. Note that a sub-word tagger is built on character taggers, so when we re-train a sub-word system, we should consider whether or not re-training base character taggers. The error rates decrease as automatically converted data is added to the training pool, espe-cially for the character-based tagger CTag ctb . When the base CTB-style tagging is improved, the final tagging is improved in the end. The re-training does not help the sub-word tagging much; the improve-ment is very modest.
 6.6 Comparison to the State-of-the-Art Table 6 summarizes the tagging performance of different systems. The baseline of the character-based tagger is competitive, and achieve an f-score of 93.41. By better using the heterogeneous word boundary structures, our sub-word tagging model achieves an f-score of 94.36. Both character and sub-word tagging model can be enhanced with auto-matically converted corpus. With the pseudo labeled data, the performance goes up to 94.11 and 94.68. These results are also better than the best published result on the same data set that is reported in (Jiang et al., 2009).

Test P R F (Sun, 2011) ----94.02 (Jiang et al., 2009) ----94.02 (Wang et al., 2011) ----94.18 6
Character model 93.31% 93.51% 93.41 +Re-training 93.93% 94.29% 94.11
Sub-word model 94.10% 94.62% 94.36 +Re-training 94.42% 94.93% 94.68 Our theoretical and empirical analysis of two rep-resentative popular corpora highlights two essential characteristics of heterogeneous annotations which are explored to reduce approximation and estima-tion errors for Chinese word segmentation and POS tagging. We employ stacking models to incorporate features derived from heterogeneous analysis and apply them to convert heterogeneous labeled data for re-training. The appropriate application of hetero-geneous annotations leads to a significant improve-ment (a relative error reduction of 11%) over the best performance for this task. Although our discussion is for a specific task, the key idea to leverage het-erogeneous annotations to reduce the approximation error with stacking models and the estimation error with automatically converted corpora is very general and applicable to other NLP tasks.
 This work is mainly finished when the first author was in Saarland University and DFKI. At that time, this author was funded by DFKI and German Aca-demic Exchange Service (DAAD). While working in Peking University, both author are supported by NSFC (61170166) and National High-Tech R&amp;D Program (2012AA011101).
