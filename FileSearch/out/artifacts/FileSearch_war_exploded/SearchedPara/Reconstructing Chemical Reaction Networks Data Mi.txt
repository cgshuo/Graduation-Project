 We present an approach to reconstructing chemical reac-tion networks from time series measurements of the concen-trations of the molecules involved. Our solution strategy combines techniques from numerical sensitivity analysis and probabilistic graphical models. By modeling a chemical re-action system as a Markov network (undirected graphical model), we show how systematically probing for sensitivi-ties between molecular species can identify the topology of the network. Given the topology, our approach next uses de-tail edsensitivityprofilestocharacterizepropertiesofreac-tions such as reversibility, enzyme-catalysis, and the precise stoichiometries of the reactants and products. We demon-strate applications to reconstructing key biological systems including the yeast cell cycle. In addition to network recon-struction, our algorithm finds applications in model reduc-tion and model comprehension. We argue that our recon-struction algorithm can serve as an important primitive for data mining in systems biology applications.
 Categories and Subject Descriptors: H.2.8 [Database Management]: Database Applications -Data Mining; I.2.6 [Artificial Intelligence]: Learning -Induction General Terms: Algorithms, Measurement, Experimenta-tion.
 Keywords: Systems biology, graphical models, Markov net-works, ordinary differential equations, network reconstruc-tion.
Algorithms in computational biology and bioinformatics are helping rapidly yield new insights into biological and biochemical processes. While much of today X  X  excitement is focused on analyzing data from high-throughput screens (e.g., microarrays, RNAi assays), significant research is also being conducted in constructing and simulating mathemat-ical models of key biological processes, such as the cell cy-cle [5], circadian rhythms, and entire signaling pathways [2]. These models capture not only qualitative properties of the underlying process but also quantitative traits as revealed by mutant experiments [16]. As shown in Fig. 1, such math-ematical modeling typically begins with a chemical reaction network (CRN), which is then converted to a set of simul-taneous ordinary differential equations (ODEs), which are then numerically simulated to yield time series profiles of the participating molecular species. These profiles are then matched with real data and the model is adjusted to account for discrepancies. More sophisticated methods involving bi-furcation plots and phase portraits shed further insight into the qualitative dynamics of the underlying system.
In this paper, we study the inverse problem, i.e., analyz-ing time series profiles of the molecular species to recon-struct the CRN (see Fig. 1, dotted lines). This finds uses in not just systems biology, as studied here, but also in any domain where chemical reaction systems form the origins of the underlying numerical model (ODE), such as petro-chemical plant engineering, environmental engineering, food processing, and manufacturing.

Reconstructing CRNs is relevant not just for system iden-tification but also for model reduction. For instance, it is well acknowledged that models of key biological processes are notoriously complex and difficult to comprehend for hu-mans [2]. A key task therefore is to reduce the reaction sys-tem to a smaller system, involving fewer reactions and/or molecules, but yet retain the essential dynamical properties of the system. Given a complex mathematical model of, say, a biochemical process, we can simulate the model to generate data and reconstruct a (potentially) smaller model by mining the generated dataset. Such a model  X  data  X  model transformation is currently a hot topic in computa-tional systems biology [14].

Pertinent data for mining CRNs can hence be gathered from either experimental observations or computational sim-ulation. The former is the subject of works such as [15] and requires  X  X et-lab X  machinery as described in [1]. In this pa-per, we focus on data from computational simulations of mathematical models for three reasons: the ease of gener-ating data on demand from the given CRN in a controlled fashion, the capability to systematically perturb the CRN and observe the modified dynamics, and the desire to verify our algorithms on some  X  X round truth. X  Table 1 summarizes the input-output description of the network reconstruction problem studied here as well as the methods available to ob-serve, interrupt, or otherwise modify the behavior of the sys-tem. This setting of the CRN mining problem is pertinent in computational modeling and systems biology contexts. reproduce the dynamics observed in a given time series datas et. Our primary contributions in this paper are four fold. First, we introduce CRN mining as a new KDD problem and cast CRN mining as the task of mining an undirected graphical model followed by annotating edges and groups of edges with chemical reaction type information. In essence, we capture the dynamics of the network by modeling each species as a random variable and by looking for indepen-dence relations between them.

A key issue in mining graphical models among a given set of random variables is to decide whether to detect dependen-cies or (conditional) independencies. If we choose to detec t dependencies, we must take care to distinguish between di-rect and indirect dependencies. To avoid this issue, classi cal algorithms (e.g., see [3]) are hence almost exclusively bas ed on detecting independencies, either by explicitly identif ying such constraints and summarizing them into a network, or by defining the score of a network based on such relation-ships and searching in the space of networks. Our second contribution is to show how the novel setting of CRN mining permits us to mine dependencies and yet avoid detecting in-direct dependencies, a feature not achievable in tradition al (discrete) graphical model mining contexts. Further, our algorithm for CRN mining involves a O ( n 2 ) computation (where n is the number of species) in contrast to algorithms that have exponential running time complexity in the worst case for mining graphical models.

Our third contribution is the notion of  X  X ensitivity tables  X  as pattern matching constraints to identify reaction types , such as whether it is a reversible or irreversible reaction, en-zyme catalyzed or not, and the precise ratios between the molecules of reactants and products. We hasten to add that we cannot unambiguously distinguish between all possible chemical reaction types and we precisely state the distinc-tions that we are (un)able to make.

Finally, we demonstrate the application of CRN mining to reconstructing many important biochemical networks in systems biology applications, including prokaryotic gene ex-pression regulation and the CDC-Cyclin2 interaction form-ing the core of the budding yeast cell cycle.
CRNs have been well studied in bioinformatics applica-tions. Most of the dynamic behavior of cells can be reduced to the underlying (bio)chemistry of how molecules such as genes, proteins, and RNA interact, catalyze reactions, and contribute to the proper functioning of cells. Hence studyi ng a biological system by casting it as a CRN is typically the first step in mathematical modeling. For our purposes here, we focus on research that attempts to reconstruct CRNs.
The 1997 paper by Arkin, Shen, and Ross in Science [1] is credited with creating interest in CRN mining; it also presented an all-pairs correlation method for reconstruct ing the underlying network, with applications to the glycoly-sis metabolic process. However, the method described in [1] cannot distinguish between direct and indirect dependenci es and can thus result in spurious edges. In addition, it assume s that all species are eventually connected and hence cannot recognize disconnected components, such as the simultane-ous set of chemical reactions: { A  X  X  X  B , C  X  X  X  D } .
There have been many papers that were motivated by the Arkin, Shen, and Ross work described above. For in-stance, Wiggins and Nemenman [19] present a method to analyze time series to infer process pathway, which can be construed as representing calling invocations of one pathw ay by another. However, their method is aimed at producing a general network of relationships from genomic data and not at reconstructing chemical reaction networks. A more the-oretical approach is taken in [13] but its strong guarantees of the soundness of network reconstruction are obtained by restricting the focus to discrete dynamical systems, which capture the functional behavior of regulatory networks but not CRNs. More recently, Karnaukhov et al. [9] focus on the reaction identification problem by assuming a general parameterized form for the kinetics of the reaction and fit-ting rate constants by least squares fitting. This work build s on earlier work by the same authors [8]. CRN mining as studied here subsumes reaction identification as a sub-goal .
Thus, our formulation of CRN mining is novel for its at-tempt to model both the dependence structure of chemical species and the properties of individual reactions.
Before we present our algorithm for reconstructing chem-ical reaction networks, we review some basic chemistry and established practices in the mathematical modeling of chem -ical reactions. This is the subject of many excellent books, such as [11] which especially focus on modeling for bioin-formatics applications. For the data mining audience, we present an abridged version of this literature involving on ly topics necessary to understand the ensuing algorithm.
The simplest example of a chemical reaction is the irre-versible isomerization reaction where k 1 denotes the rate at which species A is converted into B . If the concentrations of the species A and B are represented by x A and x B , the dynamics of (1) can be for-mulated by a set of ordinary differential equations (ODEs) A typical trajectory of x A and x B in this simple system is shown in Figure 2 (a).

The reaction (1) is a special case of the reversible isomer-ization reactions
The corresponding ODEs are: A typical trajectory for this system is shown in Figure 2 (b).
Both reactions (1) and (3) are linear. The simplest non-linear example is the bimolecular reaction
The corresponding ODEs are given below. A typical trajectory of equation (6) is shown in Figure 2 (c).
The kinetics in reactions (1), (3) and (5) are simple mass action kinetic laws. But equations can be more complicated. Consider the enzyme-substrate reactions Here E represents enzyme species, whose total concentra-tion E 0 = x E + x ES remains as a constant in this chemical process. The corresponding ODEs are When k 1 and k  X  1 are much larger than k 2 , we can assume the first two reactions in (7) reach partial equilibrium. Thi s partial equilibrium assumption can be formulated by When k 2 is in a similar magnitude of k  X  1 , the equilibrium assumption (9) does not hold any more. But a steady state assumption can be made. It assumes that the concentration of ES remains a steady state after a transient period, which is formulated as It turns out that (9) is a special case of (10). Let k M = k 1 . With the assumption that E 0 is much smaller than x , we can derive Menten equation. It reduces the enzyme-substrate reaction (7) into a simple reaction denoting that substrate S is catalyzed by enzyme E to form product P . But (12) is fundamentally different from the simple reaction (1) because it follows the nonlinear enzyme kinetics (11). A typical trajectory of the reaction (12) is shown in Figure 2 (d).
A chemical reaction network (CRN) is composed of many reactions. Suppose N species are involved in M reaction channels in a CRN. Let the concentration of these species be denoted by x i , i = 1 ,  X  X  X  , N and the reaction channels be denoted by R j , j = 1 ,  X  X  X  , M . The dynamics of the system can be formulated as metric matrix.  X  ij is the unit change of x i caused by the reaction channel R j and r j ( x ) is the reaction rate function for the reaction channel R j . For example, in the simple re-action (1), there are two species and one reaction channel.  X  = [  X  1 , 1] and r 1 ( x ) = k 1 x A . In the bimolecular reac-tion (5),  X  = [  X  1 ,  X  1 , 1] and r 1 ( x ) = k 1 x A x B reduced enzyme-substrate reaction (12),  X  = [  X  1 , 1] and r
But often the state space in (13) can be reduced by ap-plying conservation laws and partial equilibrium or steady state assumptions. Examples of the partial equilibrium as-sumption and steady state assumption are given in (9) and (10) for the enzyme-substrate reaction (7). Conservation laws can be applied for all examples shown above. For ex-ample, for reaction systems (1) and (3), the sum of x A and x
B remains as a constant. That can be formulated as With this conservation law, we only need to formulate the dynamics of one variable. The other can be directly cal-culated from (14). Thus the dimension of the state space in both equations (2) and (4) can be reduced by 1. In the bimolecular reaction (5), there are two conservation laws With the two constraints, the dimension of the state space in equation (6) can be reduced to 1. x (0) = 100 and x B (0) = 0 . (b) k 1 = 3 , k 2 = 1 , x A (0) = 100 and x and x C (0) = 0 . (d) k 1 = 1 , k  X  1 = 10 , k 2 = 1 , x S P (0) = 0 .

For a complex CRN, the ODEs and the algebraic con-straints can be put together. Then we obtain a set of differential-algebraic equations (DAEs) where (16) is the differential part and (17) is the algebraic part.
Sensitivity analysis is widely used in optimization, param-eter estimation, uncertainty and stability analysis. (Here we demonstrate its applications to data mining and network re-construction.) For a CRN represented by a set of DAEs, the system often contains uncertainty due to unknown kinetic rates, environment fluctuations, and other unknown possible reaction pathways. They can be represented as parameters in DAEs. We can rewrite the equation (16-17) as with initial conditions x 0 = x 0 ( p ) and y 0 = y 0 ( p ). Sensi-tivity reflects the change rates of the state variables x and y with respect to the change in the parameter p , which are from the numerical time series data or estimated by finite difference methods during the process of solving the original DAEs and derived sensitivity equations. Software such as DASPK (in Fortran) [4] and CVODES (which comprises the CVODE [6], KINSOL, and IDE software components in C) have in-built capabilities to perform sensitivity analysis of DAEs.
Referring back to the experimental context in Table 1, we present an approach to reconstructing chemical reaction networks by systematically perturbing the network to iden-tify relationships between the given species. (Although such perturbations are well studied in biochemistry, leading to the notion of minimal cut sets in biochemical networks [10], they have primarily been used for engineering flux patterns, not for CRN mining.) As Table 1 shows, there are two main classes of perturbations available: buffering and knock-out experiments.
Buffering involves providing enough supply (intake) of some species, thus forcing it to stay constant. In the cor-responding DAEs, this is equivalent to replace the corre-sponding differential equation by a simple algebraic equa-tion. Note that buffering will break the corresponding con-servation constraints.
 For example, consider a simple chain reaction system The corresponding equations are If we perturb the initial value of A (let x A (0) = p ), we can calculate the corresponding change resulted in C (by dx C We then know A and C are connected in the system. If B is buffered, x B stays as a constant. Then the equations become We conduct the sensitivity analysis again and we will get dp = 0! This shows that after B is buffered, A and C be-come disconnected. We can then conclude about the struc-ture of this network: A affects C through B .
A second type of perturbation that is common in biol-ogy is the knock-out, i.e., to remove a molecule completely by rendering it inactive or unable to participate in the re-action. Engineered biological systems by knocking out key molecules are referred to as mutants . In the corresponding DAE, knock-outs correspond to a special form of buffering, namely replacing the respective species variables to zero.
However, knock-outs, while useful at understanding loss-of-function, are not very revealing for reconstructing CRNs. For instance, compare the chain reaction: with the enzyme catalyzed reaction: By buffering B , we can distinguish between the two cases by detecting whether dx C dp = 0 (first case) or whether dx C (second case). Here p is the initial value of A as before. However, if we knock out B from the respective equations, both of them result in dx C dp = 0! For this reason, in this paper, we exclusively focus on buffering as a means to probe CRNs. The above observations hint at the relationship between CRNs and undirected graphical models [12]. We first setup the correspondence between a given CRN and a correspond-ing graphical model. For ease of presentation, in the follow -ing lemmas and results, we assume only bimolecular reac-tions (i.e., each reaction connects only two species) altho ugh our algorithmic implementation and experimental results i n-volve both bimolecular and trimolecular reactions.
Definition 1. Given a CRN N (a set of molecular species and a set of chemical reactions between them) we define the undirected graph G ( N ) corresponding to N as the graph whose nodes corresponds to the species in N and whose edges connect nodes that participate in a common reaction.
Note that different CRNs might induce the same undi-rected graphical model. For instance, the reaction sets A  X  X  X  B  X  X  X  C and A  X  X  X  B  X  X  X  C induce the same graph even though the former involves reversible reactions and the lat -ter involves irreversible reactions. Nevertheless, the fo llow-ing results (stated without proof due to space limitations) demonstrate that mining graphical models is an useful first step to reconstructing CRNs.
 Lemma 4.1. Given a network N and its undirected graph G ( N ) , node n 1 is conditionally independent of node n a set of nodes n X in G ( N ) iff the following applies: after buffering n X in N , the sensitivity of n 1 to n 2 (and vice versa) is zero.

A direct application of Lemma 4.1 would require us to search through an exponential set of possible conditioning contexts. Instead, as stated earlier, we will seek to identi fy dependencies.
 Lemma 4.2. Given a network N and its undirected graph G ( N ) , an edge exists between node n 1 and node n 2 in G ( N ) iff the following applies: the sensitivity of n 1 to n 2 versa) after buffering all other molecules in N is non-zero.
Unlike Lemma 4.1, Lemma 4.2 requires only a search through O ( n 2 ) conditioning contexts. Then why don X  X  tradi-tional Markov network learning algorithms utilize a simila r approach? This is because to verify each of the O ( n 2 ) condi-tional dependencies, the conditioning set involve n  X  2 vari-ables and, even if each variable takes on only two values, we will have to investigate 2 n  X  2 settings for conditioning con-texts. Besides the exponential complexity, projecting to n  X  2 variables typically will retain very few tuples, typically not sufficient to estimate dependence. Other works such as [3] acknowledge these issues and, in fact, incorporate the size of the conditioning context in their analysis of algorithm com -plexity. However, in CRN mining, these limitations do not apply since there is a proportional, rather than exponentia l, cost to a buffering experiment w.r.t. the size of the con-ditioning context (i.e., the number of buffered molecules). Furthermore, the limitations of sample data sizes do not ob-viously arise in a buffering experiment.
Our approach to CRN reconstruction begins by first re-constructing the underlying graphical model (Algorithm 1: InferGraphicalModel) followed by cataloging the individu al edges or groups of edges into reactions (Algorithm 2: Find-Reactions). These are detailed next.
 Algorithm 1 InferGraphicalModel Input: V, ODE v Output: S for all i, j  X  V ( i &lt; j ) do end for Algorithm 2 FindReactions Input: V, S Output: Bi, T ri for all i, j  X  V ( i &lt; j ) do end for Initialize all elements of CV to be 0
SI  X  sign ( S, stol ) for all e k , e m  X  E ( k &lt; m ) do end for for all e = { h, i } X  E do end for
InferGraphicalModel takes as input V , the set of all chem-ical species whose dynamics are given by the system of ODEs in ODE V . As stated earlier, it conducts a O ( n 2 ) buffered simulation to identify sensitivities between all pairs of m olecules (in both directions). Here, S ( i, j ) denotes the sensitivity of j to the initial concentration of i . InferGraphicalModel produces as output the sensitivity matrix S whose non-zero entries encode the graphical model.

The next algorithm, FindReactions, takes as input the set of chemical species as before and the just computed sensi-tivity matrix S . It produces as output the list of detected bimolecular reactions in Bi and trimolecular reactions in T ri . First, it thresholds the sensitivity matrix S into SI . The array CV is used to hold a CoVer for the molecular species and their dependencies, i.e., to see if a dependency detected in InferGraphicalModel has been  X  X xplained X  by a chemical reaction. Initially no dependencies are explaine d, hence CV , indexed by the dependencies, is initialized to zero. Algorithm FindReactions then proceeds to look for trimolecular reactions that fit the sensitivity profiles com -puted in SI (using Table 3, explained in the next section) and if a suitable reaction is found, the array CV is updated suitably. Only after all trimolecular combinations are ex-hausted does it proceed to look for bimolecular reactions. At this point, it is important to mention that the algorithm LookupTriReaction (not detailed here) searches through al l permutations of the given triple of molecules in establishi ng a correspondence to sensitivity profiles. It remains to be detailed how LookupTriReaction and LookupBiReaction work. The advantage to these algorithms is that they use sensitivities between pairs of molecules wh ich can actually be computed alongside the reconstruction algo -rithm. Tables 2 and 3 contain the relevant information for disambiguating reaction types. The same information is als o summarized graphically in Fig. 3. Rather than go through each entry sequentially, we explain below how the sensitivi ty table patterns can be used to make important distinctions.
Sensitivity changes with time. Let s A,B ( t ) be the time series of sensitivity of B to the initial concentration of A. We first discretize this time series into  X + X ,  X - X , and 0 value s. The sign of the sensitivity profile, s ( A, B ), is then defined as the sign of s A,B ( t i ) where t i is the time point at which | s
A,B ( t i ) | is maximum. We index into Tables 2 and 3 using these signs and identify reaction types. Recall that Table 2 is meant to be used for identifying reactions between pairs o f molecules after Table 3 has been used to identify reactions between triples. Also, Table 3 is richer in detail than Table 2 since it gives the signs of sensitivities of six basic trimol ecular reactions: A B  X  X  X  C , A  X  X  X  B + C , A  X  X  X  B + C , A A  X  X  X  B + C , A B  X  X  X  B + C , and A + B  X  X  X  C , and under three different buffering conditions.

We should point out that not all distinctions can be made unambiguously. For instance, in Table 2 1 , there are five pos-sible reactions but only three distinct sensitivity patter ns. Hence some rows lead to multiple hypotheses. A direction of future work is to develop a constraint engine that can reason about such multiple hypotheses, across adjacent sensitivi ty profiles, to achieve greater discrimination of detection.
Distinguishing between reversible and irreversible reac-tions is straightforward, e.g., Table 2 can be readily used to distinguish between A  X  X  X  B and A  X  X  X  B by assessing the sign of s ( B, A ).
This situation requires us to distinguish between the tri-molecular reaction A + B  X  X  X  C and the combined set of two bimolecular reactions { A  X  X  X  C , B  X  X  X  C } . s ( A, B ) and s ( B, A ) are zero for the two bimolecular reactions but
A note about the asterisk in this table: due to the process of enzyme-substrate complex formation, the entry s ( B, A ) is negative for the initial reaction and later changes its sign to a plus as shown in Table 2. If we assume that the (initial) concentration of B is much smaller than the concentration of A , then this entry can be treated as a  X + X . s ( A, B ) and s ( B, A ) are negative in the trimolecular reac-tion, thus enabling the distinction.
This situation is the converse of the previous case. Note that A  X  X  X  B + C and the combined set of two bimolecular reactions { A  X  X  X  B , A  X  X  X  C } have the same signs of sen-sitivities according to Tables 2 and 3. Thus, A  X  X  X  B + C and { A  X  X  X  B , A  X  X  X  C } cannot be distinguished in our approach.
Stoichiometry refers to the relative ratios of molecules th at participate in a reaction. Thus, the only distinction betwe en the reactions: A  X  X  X  B and 2 A  X  X  X  B is one of stoichiom-etry. Using only the signs of the sensitivity entries, these reactions cannot be disambiguated. On the other hand, if information about the magnitude of the sensitivity is avail -able, e.g., if we know that s A,A ( t ) s then we can conclude the existence of reaction cA  X  X  X  B in steady state.
An enzyme-substrate reaction can be modeled with either mass action kinetics or Michaelis-Menten kinetics. When the enzyme-substrate reaction is modeled with mass action kinetics, the sensitivity profiles are identical for A B  X  X  X  C and A + B  X  X  X  C (see row 3 of Table 3). On the other hand, if the enzyme-substrate reaction is modeled with Michaelis -Menten kinetics, then these reactions can be disambiguated (see row 4 of Table 3).
Auto-catalysis is the situation where a molecule catalyzes a reaction that it itself participates in. It is easier to det ect if the catalyst is the product, rather than the reactant. For instance, as can be seen in Table 2, A  X  X  X  B and A A  X  X  X  B have the same sensitivity profile, whereas A  X  X  X  B and  X  X  X  B can be distinguished. Similarly, in Table 3, A  X  X  X  B + C and A A  X  X  X  B + C have the same sensitivity profile (see row 2) and thus cannot be distinguished.
The last two rows of Table 3 are especially designed to detect common groups of reactions. The  X + X  sign for s ( C, A ) in both these rows helps detect the existence of a loop back from molecule C to A which is not the case, for instance, in rows 3 and 4 of Table 3. Within the last two rows, further disambiguation about rate laws can be made using the sign of s ( A, B ).
By capturing more of the dynamics, these tables can be put to further use in reaction identification. For instance, consider the task of distinguishing A B  X  X  X  C from A + B  X  X  X  C (using rows 3 and 6 of Table 3). When A is buffered, s ( A, C ) and s ( B, C ) grow boundlessly in A B  X  X  X  C . Whereas, in A + B  X  X  X  C , s ( A, C ) is limited by B . Hence, s ( A, C ) stops increasing after reaching steady state. Table 2: The Bimolecular sensitivity table used to identify chemical reactions involving 2 molecules. Figure 3: A graphical notation (not meant to be a probabilistic graphical model) of the information from Tables 2 and 3. A solid arrow from node X to node Y exists if sensitivity of Y to initial value of X is positive. A dashed arrow from node X to node Y exists if sensitivity of Y to initial value of X is negative. No arrow denotes a sensitivity of zero.
Thus far, we have made two critical assumptions that are necessary to the success of our reconstruction algorithm: 1. Between a given pair or triple of molecules, there is at 2. The rate laws governing the reactions fall into the cat-
These assumptions are not difficult to surmount but their removal is beyond the scope of this paper. Consider for in-stance the network in Fig. 4 governing how cells in frog egg Figure 4: CRN governing cell-cycle transitions in frog egg extracts. extracts divide. The core of this network involves a clique of four nodes (molecules) with six overlapping reactions be -tween them! To recognize such a circuit, where dynamics be-tween a given set of molecules are best explained by multiple reactions, we must be able to decompose observed sensitivit y profiles into additive combinations of smaller components, each of which corresponds to a basic reaction. The second problem is applicable in situations where reaction rates do not fall into the two basic types studied here. For instance, rate laws can be highly non-linear and involve more than one enzyme to catalyze a given reaction. Further, very fast rate constants can cause drastic changes in concentrations , too quick to be detectable by analyzing data.

Both these problems can be alleviated by numerical mod-eling of sensitivity profiles rather than the discrete appro ach of sensitivity tables as studied here. For instance, numeri cal optimization can be used to find fits to parameterized reac-tion laws and by repeatedly modeling the residual, we can detect multiple reactions spanning a given set of molecules . The last two rows of our  X  X ll but 2 X  sensitivity table (Ta-ble 3) provide a limited capability in this regard and which we have used in the studies described below.

Finally, we mention that, in real applications, data col-lected from wet-lab experiments always contain some errors . We have to be aware that these errors are usually much larger than the numerical errors in the case studies describ ed below. However, one advantage of our algorithm is its ro-bustness. We do not require an accurate measurement of the sensitivity, just the signs of the sensitivities (relative to our threshold of 10  X  8 which can be tuned based on reliability of the measurements).
Our experimental results are focused on reconstructing key CRNs underlying important biological processes (see Ta -
Model # species # reactions Recall Precision solution time ( 10  X  CDC-Cyclin2 interaction loop (Fig. 5) 6 6 0.83 0.83 42.3 0.27 Arkin X  X  computational circuit (Fig. 6) 7 6 1 1 167 0.51 Prokaryotic gene expression model 9 8 0.875 0.875 97.6 0.56 Frog egg extracts (Fig. 4) 8 8 0.75 0.857 58 0.38 Generic yeast cell cycle model (Fig. 7) 16 21 0.857 0.88 637 2. 31 Figure 5: The CDC-Cyclin2 interaction loop form-ing the core of the budding yeast cell cycle. Cour-tesy John Tyson.
 Figure 6: A CRN designed to serve as a computa-tional element (i.e., as a logic gate). ble 4). Here we depict the number of species and reactions for each system but hasten to add that the complexity of a CRN cannot be judged merely on these factors alone. For instance, the rather innocuous looking system from Fig. 1, referred to as the  X  X regonator X , forms the model for many reaction-diffusion systems and can exhibit very complex dy-namics including sustained oscillations. It is hence the ra nge of qualitative behaviors that can be exhibited by the system that constitutes its complexity.

For each CRN studied here, we formulated the corre-sponding ODE as described in Section 3, and generated data corresponding to each ODE using the CVODE software [6]. All rate law equations were modeled using either mass ac-tion kinetics or Michaelis Menten kinetics. For each pair of molecules, the buffering algorithm buffers all but these two molecules, and the sensitivity profiles between these Figure 7: Generic CRN of the budding yeast cell cycle. Regulatory modules are given by the shaded rectangles. The different symbols denote different classes of proteins, e.g., the  X  X acMan X  denotes active forms of regulated proteins. Courtesy John Tyson. to discretize the computed sensitivities. This informatio n drives the reconstruction of topology and reaction charact er-istics. The results are evaluated using metrics of recall (n um-ber of correctly reconstructed reactions as a fraction of tr ue reactions) and precision (number of correctly reconstruct ed reactions as a function of all reconstructed reactions). In assessing correctness, to allow partial matches, we evalua te reversible reactions in both directions (i.e., if the algor ithm reconstructs the reaction in only one direction, we count it as one out of two reactions inferred correctly).

The CRNs considered here span a variety of model sys-tems in biology. The CDC-Cyclin2 interaction loop (Fig. 5 [1 7]) is the core signaling pathway driving progression through t he cell cycle. It is embedded inside the larger yeast cell cycle model described in Fig. 7 [7]. A less complex model drives cell cycle transitions in frog egg extracts, as described ea r-lier in Fig. 4. Two other models considered here are a CRN underlying gene expression regulation in prokaryotes, whi ch are primitive organisms such as bacteria that do not con-tain membrane-bound organelles (not shown due to space considerations) and a CRN meant to serve as a generic logic gate (Fig. 6).

As Table 4 reveals, our algorithm achieves consistently high values of recall and precision across these CRNs. The three reasons it fails to find correct reactions or infers spu -rious reactions are: the inherent inability to distinguish be-tween certain types of reactions (as discussed earlier), ra pid reaction rates that mistakenly cause the algorithm to infer lack of connectivity between some species, and the restric-tion to at most one reaction between a given pair or triple of molecules. Even with these caveats, it is clear that the algorithm can be used as a primitive to identify key circuits underlying a collection of molecules.
 Table 4 also tabulates the time taken to reconstruct each CRN along with the time taken to solve the ODE as well as the associated buffering/sensitivity analysis experime nts. Observe that the latter is a function of not just the size of th e CRN but also the stiffness of the underlying ODE. (A stiff equation requires that the ODE integrator use an extremely small stepsize due to components varying at different time scales or because of underlying numerical instability.)
We have presented a novel application of data mining methodology to chemical reaction system identification wit h a marriage of numerical methods and graphical models. Our work is the first to address CRN mining using KDD con-cepts and methodology. The O ( n 2 ) buffering experiments required for our algorithm is not a severe constraint and special purpose combinatorial equipment can be utilized in larger systems. The supplementary website http://bioinfo r matics.cs.vt.edu/CRNMining provides sufficient details to reproduce the experiments described here.

Our future work focuses on three directions. First, we would like to employ an Apriori like approach to searching for groups of reactions in a given sensitivity matrix, so tha t if a given reaction can be ruled out from being present, so can all its supersets. However, this requires careful understa nd-ing of the areas where monotonicity constraints over the dynamics of CRNs apply. Second, we desire to connect our work better to theories of system identification, especiall y as a way to control the complexity of network reconstruc-tion. Our work has focused exclusively on the time domain and more powerful analysis tools that work in the frequency domain can be brought to bear here. Finally, we wish to use our data mining algorithm as a aid to network compre-hension , i.e., to summarize a complex CRN in terms of its information processing capabilities. For instance, group s of chemical reactions can be viewed as forming switches, am-plifiers, or signal transducers [18]. By directly recognizi ng such circuit motifs, we can aid in reconstructing not just th e structure of CRNs but their functional aspects as well. [1] A. Arkin, P. Shen, and J. Ross. A Test Case of [2] U.S. Bhalla. Understanding Complex Signaling [3] F. Bromberg, D. Margaritis, and V. Honavar. Efficient [4] P.N. Brown, A.C. Hindmarsh, and L.R. Petzold. Using [5] K.C. Chen, L. Calzone, F.R. Csikasz-Nagy, F.R. [6] S. Cohen and A. Hindmarsh. CVODE, A [7] A. Csikasz-Nagy, D. Battogtokh, K.C. Chen, [8] A.V. Karnaukhov and E.V. Karnaukhova. System [9] A.V. Karnaukhov, E.V. Karnaukhova, and J.R.
 [10] S. Klamt and E.D. Gilles. Minimal Cut Sets in [11] E. Klipp, R. Herwig, A. Kowald, C. Wierling, and [12] S.L. Lauritzen. Graphical Models . Oxford University [13] W. Marwan, A. Wagler, and R. Weismantel. A [14] M.R. Maurya, S.J. Bornheimer, [15] J. Ross, I. Schreiber, and M.O. Vlad. Determination [16] W. Sha, J. Moore, K. Chen, A.D. Lassaletta, C.-S. Yi, [17] J.J. Tyson. Modeling the Cell Division Cycle: cdc2 [18] J.J. Tyson, K.C. Chen, and B. Novak. Sniffers, [19] C.H. Wiggins and I. Nemenman. Process Pathway
