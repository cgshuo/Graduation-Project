 Ross Girshick rbg@eecs.berkeley.edu Hyun Oh Song song@eecs.berkeley.edu Trevor Darrell trevor@eecs.berkeley.edu University of California, Berkeley, Berkeley, CA 94720 Consider the linear discriminant function where w is a parameter vector in R n , x comes from an input space X , and y is in a label space Y .
 For clarity, we will assume that n = pm for some in-teger p , where m is the length of each sparselet s i in the sparselet dictionary S . This assumption can be removed with simple modifications to the discussion that follows. We partition w into a set of blocks b i in R m such that w = ( b | Let A be an algorithm such that A ( w ,x ) computes f ( x )  X  i.e. , it solves the argmax in Eq. 1. We are going to build a bipartite graph G = ( B  X  C , E ) that represents certain computations performed by A . The graph depends on A  X  X  inputs w and x , but to lighten notation we will omit this dependence.
 Each node in G corresponds to a vector in R m . With a slight abuse of notation we will label each node with the vector that it is in correspondence with. Simi-larly, we will label the edges with a pair of vectors ( i.e. , nodes), each in R m . We define the first set of disconnected nodes in G to be the set of all blocks in w : B = { b 1 ,..., b p } . We will define the second set of disconnected nodes, C , next.
 Any algorithm that computes Eq. 1 will perform some number of computations of the form b | c , for a block b  X  B and some vector c  X  R m . The vectors c appear-ing in these computations are most likely subvectors of  X  ( x,y ) arising from various values of y . The graph G is going to represent all unique computations of this form. Conceptually, we can construct C by running the algorithm A and adding each unique vector c that appears in a computation of the form b | c to C . The edge set E connects a node b  X  B to a node in c  X  C if and only if A performs the computation b | c . For a specific algorithm A , we can construct G analyti-cally. An example graph for a multiclass classification In all of the examples we consider in this paper, the degree of each node in C is a single constant: deg( c ) = Q for all c  X  C . In this case, the speedup simplifies to the following.
 If we narrow our scope to only consider the speedup restricted to the operations of A affected by sparselets, we can ignore the T ( w ,x ) terms and note that the |C| factors cancel.
 This narrowing is justified in the multiclass classifi-cation case (with K classes) where the cost T ( w ,x ) amounts to computing the maximum value of K num-bers, which is negligible compared to the other terms. The computation graph for a simple multiclass exam-
