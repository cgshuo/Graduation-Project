 We design and implement a novel embedded software en-gine, called EUI, to understand user intents from usage data within mobile devices. By developing the EUI engine in mo-bile devices, we expect to move towards  X  X roactive X  devices for mobile personalized services. To this end, we seek to embed the Open Directory Project (ODP) into mobile de-vices, and build a robust classifier with the embedded ODP. Thus, the EUI engine classifies the usage data within mo-bile devices into some ODP categories. Our implementation handles some challenging issues in embedding the ODP and building a robust classifier. The demonstration shows that our implementation understands the semantics of the usage data effectively.
 H.4 [ Information Systems Applications ]: Miscellaneous Algorithms, Design User intents, ODP, mobile personalized services, classifica-tion, merge-centroid vectors
Recently, the rapid development of smartphones funda-mentally changes the way we use mobile devices in daily life. Not only making phone calls and texting with friends, users are also surfing the Web, checking weather forecasts, sub-scribing newspapers, sending and receiving e-mails, working with office documents, enjoying music and movies, taking and sharing photos and videos, making transactions, access-ing social network services, and running native and Web ap-plications, etc. Most of these activities make mobile devices naturally containing the user X  X  personalized data in the form of texts, images, audios, videos, usage logs, etc. Due to the personalized nature of mobile devices, this usage data is ex-tremely rich and valuable resource to understand the user X  X  intents (or interests, preferences).
 In this paper, we present a novel embedded engine, called EUI, to understand user intents from usage data within mo-into some ODP categories. To the best of our knowledge, this is the first work to embed the ODP into mobile devices. In the following section, we describe some challenging issues in embedding the ODP into mobile devices and building a robust classifier based on the embedded ODP, along with the implementation details of the EUI engine.
The ODP is a very large-scale and high-quality Web di-rectory where over 4 million web sites are classified into over 0.5 million categories. We use the title and the description of web sites as the training data for the purpose of clas-sification. We observe, however, that the large volume of categories contain only few classified web sites, which makes it difficult to train classifiers with high accuracy. 1 To han-dle this problem, we utilize the hierarchical structure of the ODP and build the novel merge-centroid (MC) vectors. The MC vector of a category augments term features from its de-scendant categories in order to enrich the semantics of the category. In addition, we control the weights of augmented features in inverse proportion to the distance to the descen-dants. That is, we assign more weights to those features augmented from closer descendants, and less weights from further descendants. Consequently, we build the MC-based classifier by replacing the typical centroid vectors of the Roc-chio classifier [2] with the MC vectors.

Due to the hardware limitation of mobile devices and the scale of the ODP, it is not feasible to embed the entire ODP dataset into the devices. Therefore, we prune relatively less important categories in the original ODP to construct our own ODP taxonomy for mobile devices. However, it is very time consuming and labor-intensive to manually perform this task from scratch. To handle this difficulty, we first apply some heuristic rules to prune many useless categories, then we modify the resulting categories manually. Thus, we finally get 3,151 categories. The details of the heuristic rules and the statistics of our ODP taxonomy are provided at the project web site.

We now describe the implementation details of the EUI engine which consists of the ODP taxonomy constructor, preprocessor, and classifier as illustrated in Figure 1. The ODP taxonomy constructor consists of the MC generator and indexer module. The MC generator produces MC vec-tors for each of the categories in the original ODP. Then, we apply the heuristic rules to the ODP and input the resulting categories to the indexer. The indexer is a GUI program by which we modify the resulting categories and construct the inverted index of the MC vectors in our ODP taxonomy for the efficient calculation of the cosine similarity performed by the MC-based classifier. We note that the ODP taxonomy constructor generates the index out of the device, and only the generated inverted index gets kept within the device.
The preprocessor takes usage data as input, and gener-ates a term vector which will finally be classified into some ODP categories. The text extractor extracts usage data from SMS/MMS, e-mails, web usage logs, and user files in the device. Then, the module constructs an XML file that contains extracted usage data along with the contextual in-formation, including the time when the usage data was cre-
Including the analysis of the ODP dataset, we provide in-depth information of the EUI engine at the project web site, http://mobide.korea.ac.kr/projects/eui/
