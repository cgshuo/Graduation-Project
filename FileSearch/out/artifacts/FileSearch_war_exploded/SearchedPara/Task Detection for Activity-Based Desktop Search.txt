 Categories and Subject Descriptors: H.3.3 [ Information Systems ]: Information Search and Retrieval X  Search process, Relevance feedback General Terms: Design, Algorithms, Experimentation, Human Factors.
 Keywords: Personal information management, user stud-ies, machine learning.
 The desktop search tools provide powerful query capabilities and result presentation techniques. However, they do not take the user context into account. We propose to exploit collected information about user activities with desktop files and applications for activity-based desktop search. When I prepare for a project review and type in a search box the name of a colleague, I expect to find her last deliverable draft, but not her email with a paper review or our joint conference presentation. Ideally, the desktop search system should be able to infer my current task from the logs of my previous activities and present task-specific search results. 1.1 Data Acquisition. A first problem for activity-based desktop search design is data acquisition using im-plicit feedback. This is a rather practical task for which we already implemented a set of monitoring tools [1]. The main challenge is to enrich the logs with task information, which can be done by interviews or additional support for manual task specification within a logging framework. 1.2 Task Detection. Task detection is a part of the user modeling process. Here, we concentrate on effective and effi-cient methods for task estimation from implicit feedback. In recent work on task detection there were tested features like window title, filepath, email metadata, snippets from the document in focus, time intervals between window switches and number of hops between two files in an access chain. We would like to concentrate on supervised learning setup, in which the set of tasks is predefined. 1.3 User Modeling. The results of task detection step should be incorporated into a user model. For the user model definition we plan to investigate the statistical characteris-tics of email usage, file and web access. The desktop search has to address two important scenarios of known-item search and ad-hoc search, while latter happens presumably less of-ten in a desktop setting. In order to map tasks to ad-hoc or known-item problems, we need to study the user search habits. The most challenging task is to evaluate the qual-ity of the user model; does it reflect users X  expectations on activity based search? The adaptive systems should behave like described in [2]:  X  X hey will go beyond helping us to find Stuff I X  X e Seen and toward identifying Stuff I Should See. X  1.4 Activity-Based Ranking. The activity-based desk-top ranking methods are mainly based on linkage-analysis algorithms. In addition, we would like to implement task-based document indexing. For example, the documents can be clustered based on task types, where each document can fall into several clusters. Ranking algorithm can use this index in addition to a content-based index. An interesting research question is what is more effective: to index con-tent and activity features separately or to cluster documents based on both evidences. For evaluation, we need to select clustering quality measures. 1.5 Evaluation of Desktop Search Systems. It is difficult to compare the effectiveness of desktop ranking al-gorithms. As look and feel is important for users, we plan to build our prototype on top of existing state-of-art desktop search tool like Google Desktop or Windows Search. We sug-gest that traditional precision-recall measures can be used within the evaluation methodology from [3], in which known-item search corresponds to  X  X ookup X  and  X  X tem X  search tasks and ad-hoc is represented as  X  X ulti-item X  search. The main problem of such a user evaluation is to make it realistic and to generalize its result over the population.

To summarize the research challenges above, we plan to develop an activity-based desktop search system that uses information from an already implemented logging frame-work and further existing activity detection methods. The system will be evaluated against several state-of-art desktop search engines, based on existing proposals for PIM evalua-tion.
