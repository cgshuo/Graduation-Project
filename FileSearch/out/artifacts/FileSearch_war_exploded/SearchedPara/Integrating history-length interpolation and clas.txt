 Language models, probability distributions over strings of words, are fundamental to many ap-plications in natural language processing. The main challenge in language modeling is to estimate string probabilities accurately given that even very large training corpora cannot overcome the inherent sparseness of word sequence data. One way to im-prove the accuracy of estimation is class-based gen-eralization . The idea is that even though a particular word sequence s may not have occurred in the train-ing set (or too infrequently for accurate estimation), the occurrence of sequences similar to s can help us better estimate p ( s ) .

Plausible though this line of reasoning is, the lan-guage models most commonly used today do not incorporate class-based generalization. This is par-tially due to the additional cost of creating classes and using classes as part of the model. But an equally important reason is that most models that integrate class-based information do so by way of a simple interpolation and achieve only a modest im-provement in performance.

In this paper, we propose a new type of class-based language model. The key novelty is that we recognize that certain probability estimates are hard to improve based on classes. In particular, the best probability estimate for frequent events is often the maximum likelihood estimator and this estimator is hard to improve by using other information sources like classes or word similarity. We therefore design a model that attempts to focus the effect of class-based generalization on rare events.

Specifically, we propose to employ the same lated (HI) models use. We define HI models as models that interpolate the predictions of different-length histories, e.g., p ( w  X  ( w 1 w 2 ) p  X  ( w 3 | w 1 w 2 ) +  X  2 ( w 1 w 2 ) p  X  ( w (1  X   X  1 ( w 1 w 2 )  X   X  2 ( w 1 w 2 )) p  X  ( w 3 ) where simple estimate; in this section, we use p  X  = p ML , the maximum likelihood estimate, as an example. Jelinek-Mercer (Jelinek and Mercer, 1980) and modified Kneser-Ney (Kneser and Ney, 1995) models are examples of HI models.

HI models address the challenge that frequent events are best estimated by a method close to max-imum likelihood by selecting appropriate values for the interpolation weights. For example, if w is frequent, then  X  ing that p ( w components p ML ( w unhelpful in this case, will only slightly change the reliable estimate p ML ( w
The main contribution of this paper is to propose the same mechanism for class language models. In fact, we will use the interpolation weights of a KN model to determine how much weight to give to each component of the interpolation. The difference to a KN model is merely that the lower-order distribution is not the lower-order KN distribution (as in KN), but instead an interpolation of the lower-order KN distribution and a class-based distribution. We will show that this method of integrating history interpo-lation and classes significantly increases the perfor-mance of a language model.

Focusing the effect of classes on rare events has another important consequence: if this is the right way of using classes, then they should not be formed based on all events in the training set, but only based on rare events . We show that doing this increases performance.

Finally, we introduce a second discounting method into the model that differs from KN. This can be motivated by the fact that with two sources of generalization (history-length and classes) more probability mass should be allocated to these two sources than to the single source used in KN. We propose a polynomial discount and show a signifi-cant improvement compared to using KN discount-ing only.

This paper is structured as follows. Section 2 discusses related work. Section 3 reviews the KN model and introduces two models, the Dupont-Rosenfeld model (a  X  X ecursive X  model) and a top-level interpolated model, that integrate the KN model (a history interpolation model) with a class model. Section 4 details our experimental setup. Results are presented in Section 5. Based on an analysis of strengths and weaknesses of Dupont-Rosenfeld and top-level interpolated models, we present a new polynomial discounting mechanism that does better than either in Section 6. Section 7 presents our conclusions. A large number of different class-based models have been proposed in the literature. The well-known model by Brown et al. (1992) is a class sequence model, in which p ( u | w ) is computed as the prod-uct of a class transition probability and an emission the class of u . Other approaches condition the prob-ability of a class on n-grams of lexical items (as op-posed to classes) (Whittaker and Woodland, 2001; Emami and Jelinek, 2005; Uszkoreit and Brants, 2008). In this work, we use the Brown type of model: it is simpler and has fewer parameters. Mod-els that condition classes on lexical n-grams could be extended in a way similar to what we propose here.
Classes have been used with good results in a number of applications, e.g., in speech recognition (Yokoyama et al., 2003), sentiment analysis (Wie-gand and Klakow, 2008), and question answering (Momtazi and Klakow, 2009). Classes have also been shown to improve the performance of exponen-tial models (Chen, 2009).

Our use of classes of lexical n -grams for n &gt; 1 has several precedents in the literature (Suhm and Waibel, 1994; Kuo and Reichl, 1999; Deligne and Sagisaka, 2000; Justo and Torres, 2009). The nov-elty of our approach is that we integrate phrase-level classes into a KN model.

Hierarchical clustering (McMahon and Smith, 1996; Zitouni and Zhou, 2007; Zitouni and Zhou, 2008) has the advantage that the size of the class to be used in a specific context is not fixed, but can be chosen at an optimal level of the hierarchy. There is no reason why our non-hierarchical flat model could not be replaced with a hierarchical model and we would expect this to improve results.

The key novelty of our clustering method is that clusters are formed based on rare events in the train-ing corpus. This type of clustering has been applied to other problems before, in particular to unsuper-vised part-of-speech tagging (Sch  X utze, 1995; Clark, 2003; Reichart et al., 2010). However, the impor-tance of rare events for clustering in language mod-eling has not been investigated before.

Our work is most similar to the lattice-based lan-guage models proposed by Dupont and Rosenfeld (1997). Bilmes and Kirchhoff (2003) generalize lattice-based language models further by allowing arbitrary factors in addition to words and classes. We use a special case of lattice-based language mod-els in this paper. Our contributions are that we intro-duce the novel idea of rare-event clustering into lan-guage modeling and that we show that the modified model performs better than a strong word-trigram symbol denotation
P [[ w ]] P w (sum over all unigrams w ) c ( w i j ) count of w i j n 1+ (  X  w i j ) # of distinct w occurring before w i j baseline. In this section, we introduce the three models that we compare in our experiments: Kneser-Ney model, Dupont-Rosenfeld model, and top-level interpola-tion model. 3.1 Kneser-Ney model Our baseline model is the modified Kneser-Ney (KN) trigram model as proposed by Chen and Good-man (1999). We give a comprehensive description of our implementation of KN because the details are important for the integration of the class model given below. We use the notation in Table 1.
We estimate p KN on the training set as follows. p
The parameters d  X  , d  X  X  , and d  X  X  X  are the discounts for unigrams, bigrams and trigrams, respectively, as defined by Chen and Goodman (1996, p. 20, (26)). Note that our notation deviates from C&amp;G in that they use the single symbol D values d  X  (1) , d  X  X  (1) , and d  X  X  X  (1) etc. 3.2 Dupont-Rosenfeld model History-interpolated models attempt to find a good tradeoff between using a maximally informative his-tory for accurate prediction of frequent events and generalization for rare events by using lower-order distributions; they employ this mechanism recur-sively by progressively shortening the history.
The key idea of the improved model we will adopt is that class generalization ought to play the same role in history-interpolated models as the lower-order distributions: they should improve estimates for unseen and rare events. Following Dupont and Rosenfeld (1997), we implement this idea by lin-early interpolating the class-based distribution with the lower order distribution, recursively at each level. For a trigram model, this means that we in-terpolate p KN ( w backoff level and p KN ( w second backoff level, where p B is the (Brown) class model (see Section 4 for details on p B ). We call this model p DR for Dupont-Rosenfeld model and define it as follows: p p where  X  ( w B tories that is covered by the clusters. We cluster bi-gram histories and unigram histories separately and write p B ( w p ( w 3 | w 2 ) for the unigram cluster model. Cluster-ing and the estimation of these two distributions are described in Section 4. The unigram distribution of the Dupont-Rosenfeld model is set to the unigram distribution of the KN model: p DR ( w ) = p KN ( w ) .
 The model (or family of models) defined by Dupont and Rosenfeld (1997) is more general than our version p DR . Most importantly, it allows a truly parallel backoff whereas in our model the recursive backoff distribution p DR is interpolated with a class distribution p B that is not backed off. We prefer this version because it makes it easier to understand the contribution that unique-event vs. all-event classes make to improved language modeling; the parame-ters  X  are a good indicator of this effect.
 An alternative way of setting up the Dupont-Rosenfeld model would be to interpolate p undesirable. The strength of history interpolation is that estimates for frequent events are close to ML, e.g., p KN ( share | cents a )  X  p ML ( share | cents a ) our corpus. An ML estimate is accurate for large counts and we should not interpolate it directly with p B ( w is subtracted from c ( w c ( w 1 w 2 w 3 ) and therefore p DR  X  p ML in this case (exactly as in p KN ). 3.3 Top-level interpolation Class-based models are often combined with other models by interpolation, starting with the work by Brown et al. (1992). Since we cluster both unigrams and bigrams, we interpolate three models: =  X  1 ( w 1 w 2 ) p B ( w 3 | w 1 w 2 ) +  X  2 ( w 2 ) p B ) where  X  wise,  X   X  model p TOP because it interpolates the three models at the top level. Most previous work on class-based model has employed some form of top-level inter-polation. We run experiments on a Wall Street Journal (WSJ) corpus of 50M words, split 8:1:1 into training, val-idation and test sets. The training set contains 256,873 unique unigrams and 4,494,222 unique bi-grams. Unknown words in validation and test sets are mapped to a special unknown word u .

We use the SRILM toolkit (Stolcke, 2002) for clustering. An important parameter of the class-based model is size |B number of n -grams (or rather i -grams) to be clus-tered. As part of the experiments we vary |B tematically to investigate the effect of base set size. We cluster unigrams ( i = 1 ) and bigrams ( i = 2 ). For all experiments, |B where |B low). SRILM does not directly support bigram clus-tering. We therefore represent a bigram as a hyphen-ated word in bigram clustering; e.g., Pan Am is rep-resented as Pan-Am .

The input to the clustering is the vocabulary B and the cluster training corpus. For a particular base set size b , the unigram input vocabulary B the b most frequent unigrams in the training set and the bigram input vocabulary B frequent bigrams in the training set.

In this section, we call the WSJ training corpus the raw corpus and the cluster training corpus the cluster corpus to be able to distinguish them. We run four different clusterings for each base set size (except for the large sets, see below). The cluster corpora are constructed as follows.  X  All-event unigram clustering. The cluster  X  All-event bigram clustering. The cluster cor- X  Unique-event unigram clustering. The clus- X  Unique-event bigram clustering. The cluster
As mentioned above, we need both unigram and bigram clusters because we want to incorporate class-based generalization for histories of lengths 1 and 2. As we will show below this significantly in-creases performance. Since the focus of this paper is not on clustering algorithms, reformatting the train-ing corpus as described above (as a sequence of hy-phenated bigrams) is a simple way of using SRILM for bigram clustering.

The unique-event clusterings are motivated by the fact that in the Dupont-Rosenfeld model, frequent events are handled by discounted ML estimates. Classes are only needed in cases where an event was not seen or was not frequent enough in the train-ing set. Consequently, we should form clusters not based on all events in the training corpus, but only on events that are rare  X  because this is the type of event that classes will then be applied to in predic-tion.

The two unique-event corpora can be thought of as reweighted collections in which each unique event receives the same weight. In practice this means that clustering is mostly influenced by rare events since, on the level of types, most events are rare. As we will see below, rare-event clusterings perform better than all-event clusterings. This is not surprising as the class-based component of the model can only benefit rare events and it is there-fore reasonable to estimate this component based on a corpus dominated by rare events.

We started experimenting with reweighted cor-pora because class sizes become very lopsided in regular SRILM clustering as the size of the base set increases. The reason is that the objective function maximizes mutual information. Highly differenti-ated classes for frequent words contribute substan-tially to this objective function whereas putting all rare words in a few large clusters does not hurt the objective much. However, our focus is on using clustering for improving prediction for rare events; this means that the objective function is counter-productive when contexts are frequency-weighted as they occur in the corpus. After overweighting rare contexts, the objective function is more in sync with what we use clusters for in our model. p
ML maximum likelihood p
B Brown cluster model p
E cluster emission probability p
T cluster transition probability p
KN KN model p
DR Dupont-Rosenfeld model p
TOP top-level interpolation p
POLKN KN and polynomial discounting p POL0 polynomial discounting only
It is important to note that the same intu-ition underlies unique-event clustering that also motivates using the  X  X nique-event X  dis-tributions n n 1+ (  X  w 3 ) / ( P n 1+ (  X  w )) butions in KN. Viewed this way, the basic KN model also uses a unique-event corpus (although a different one) for estimating backoff probabilities.
In all cases, we set the number of clusters to k = 512 . Our main goal in this paper is to compare different ways of setting up history-length/class in-terpolated models and we do not attempt to optimize k . We settled on a fixed number of k = 512 because Brown et al. (1992) used a total of 1000 classes. 512 unigram classes and 512 bigram classes roughly cor-respond to this number. We prefer powers of 2 to facilitate efficient storage of cluster ids (one such cluster id must be stored for each unigram and each bigram) and therefore choose k = 512 . Clustering was performed on an Opteron 8214 processor and took from several minutes for the smallest base sets to more than a week for the largest set of 400,000 items.

To estimate n-gram emission probabilities p E , we first introduce an additional cluster for all unigrams that are not in the base set; emission probabilities are then estimated by maximum likelihood. Cluster transition probabilities p T are computed using add-one smoothing. Both p E and p T are estimated on the raw corpus. The two class distributions are then defined as follows: p ( w 3 | w 1 w 2 ) = p T ( g ( w 3 ) | g ( w 1 w 2 )) p E ( w where g ( v ) is the class of the uni-or bigram v . 1a 1  X  10 4 .20 .40 87.42 .2 .4 87.41 2a 2  X  10 4 .20 .50 86.97 .2 .5 86.88 3a 3  X  10 4 .10 .40 87.14 .2 .5 86.57 4a 4  X  10 4 .10 .40 87.22 .3 .5 86.31 5a 5  X  10 4 .05 .30 87.54 .3 .6 86.10 6a 6  X  10 4 .01 .30 87.71 .3 .6 85.96 1b 1  X  10 4 .020 .03 87.65 .02 .02 87.71 2b 2  X  10 4 .030 .04 87.43 .03 .03 87.47 3b 3  X  10 4 .020 .03 87.52 .03 .03 87.34 4b 4  X  10 4 .010 .04 87.58 .03 .04 87.24 5b 5  X  10 4 .003 .03 87.74 .03 .04 87.15 6b 6  X  10 4 .000 .02 87.82 .03 .04 87.09
Table 2 is a key to the probability distributions we use. Table 3 shows the performance of p DR and p TOP for a range of base set sizes |B all events and on unique events. Parameters  X   X  reported for the validation set. All following tables also optimize on the validation set and report results on the validation set. The last table, Table 7, also reports perplexity for the test set.

Table 3 confirms previous findings that classes improve language model performance. All models have a perplexity that is lower than KN (88.03).
When comparing all-event and unique-event clus-terings, a clear tendency is apparent. In all-event clustering, the best performance is reached for |B i | = 20000 set size for p DR (line 2a) and 87.43 for p TOP (line 2b). In unique-event clustering, performance keeps improving with larger and larger base sets; the best perplexities are obtained for |B for p DR and 87.09 for p TOP (lines 6a, 6b).
The parameter values also reflect this difference between all-event and unique-event clustering. For unique-event results of p DR , we have  X   X  2  X  . 4 tory interpolation are both valuable when the model is backing off. But for all-event clustering, the val-ues of  X  to .01 and .30 (6a), indicating that with larger base sets, less and less value can be derived from classes. This again is evidence that rare-event clustering is the correct approach: only clusters derived in rare-event clustering receive high weights  X  polation.

This effect can also be observed for p TOP : the value of  X  unique-event clustering than for all-event clustering (with the exception of lines 1b&amp;2b). The quality of bigram clusters seems to be low in all-event cluster-ing when the base set becomes too large.

Perplexity is generally lower for unique-event case for all values of |B |B i | &gt; 20000
Table 4 compares the two models in two different conditions: (i) b-: using unigram clusters only and (ii) b+: using unigram clusters and bigram clusters. For all events, there is no difference in performance. However, for unique events, the model that includes bigrams (b+) does better than the model without bi-grams (b-). The effect is larger for p DR than for p
TOP because (for unique events) a larger weight for the unigram model (  X  apparently partially compensates for the missing bi-gram clusters.

Table 3 shows that rare-event models do better than all-event models. Given that training large class models with SRILM on all events would take sev-eral weeks or even months, we restrict our direct  X  1  X  2 perp.  X  1  X  2 perp. comparison of all-event and rare-event models to |B i | X  60 , 000 event numbers for |B As we can see in Table 5, the trends observed in Table 3 continue as |B both models, perplexity steadily decreases as |B increased from 60,000 to 400,000. (Note that for |B i | = 400000 since there are only that many words in the training corpus.) The improvements in perplexity become smaller for larger base set sizes, but it is reassuring to see that the general trend continues for large base set sizes. Our explanation is that the class compo-nent is focused on rare events and the items that are being added to the clustering for large base sets are all rare events.

The perplexity for p DR is clearly lower than that of p TOP , indicating the superiority of the Dupont-Further comparative analysis of p DR and p TOP re-vealed that p DR is not uniformly better than p TOP . We found that p TOP does poorly on frequent events. For example, for the history w continuation w with this situation because p DR ( w counted ML estimate, with a discount that is small relative to the 10,768 occurrences of cents a share in the training set. In the p TOP model on the last line in Table 5, the discounted ML estimate is multiplied by 1  X  . 05  X  . 04 = . 91 , which results in a much less accurate estimate of p TOP ( share | cents a ) .
In contrast, p TOP does well for productive histo-ries, for which it is likely that a continuation unseen in the training set will occur. An example is the his-tory in the  X  almost any adjective or noun can follow. There are 6251 different words that (i) occur after in the in the validation set, (ii) did not occur after in the in the training set, and (iii) occurred at least 10 times in the training set. Because their training set unigram frequency is at least 10, they have a good chance of being assigned to a class that captures their distributional behavior well and p B ( w is then likely to be a good estimate. For a history with these properties, it is advantageous to further discount the discounted ML estimates by multiply-ing them with .91. p TOP then gives the remaining probability mass of .09 to words w bility would otherwise be underestimated.

What we have just described is already partially addressed by the KN model  X   X  ( v ) will be rela-tively large for a productive history like v = in the . However, it looks like the KN discounts are not large enough for productive histories, at least not in a combined history-length/class model. Appar-ently, when incorporating the strengths of a class-based model into KN, the default discounting mech-anism does not reallocate enough probability mass from high-frequency to low-frequency events. We conclude from this analysis that we need to increase the discount values d for large counts.

We could add a constant to d , but one of the ba-sic premises of the KN model, derived from the as-sumption that n-gram marginals should be equal to relative frequencies, is that the discount is larger for more frequent n-grams although in many implemen-tations of KN only the cases c ( w 3 and c ( w 3
This suggests that the ideal discount d ( x ) in an in-tegrated history-length/class language model should grow monotonically with c ( v ) . The simplest way of implementing this heuristically is a polynomial of form  X x r where  X  and r are parameters. r controls the rate of growth of the discount as a function of x ;  X  is a factor that can be scaled for optimal perfor-mance.

The incorporation of the additional polynomial discount into KN is straightforward. We use a dis-count function e ( x ) that is the sum of d ( x ) and the polynomial: model is identical to p DR except that d is replaced with e . We call this model p POLKN . p POLKN directly implements the insight that, when using class-based generalization, discounts for counts x  X  4 should be larger than they are in KN.

We also experiment with a second version of the model: This second model, called p POL0 , is simpler and does not use KN discounts. It allows us to determine whether a polynomial discount by itself (without us-ing KN discounts in addition) is sufficient.
Results for the two models are shown in Table 6 and compared with the two best models from Ta-ble 5, for |B events. p POLKN and p POL0 achieve a small improve-ment in perplexity when compared to p DR (line 3&amp;4 vs 2). This shows that using discounts that are larger than KN discounts for large counts is potentially ad-vantageous. 1 p TOP .05 .04 86.74 2 p DR .30 .70 85.14 3 p POLKN .30 .70 .05 .89 85.01 4 p POL0 .30 .70 .80 .41 84.98
The linear interpolation  X p +(1  X   X  ) q of two dis-tributions p and q is a form of linear discounting: p is discounted by 1  X   X  and q by  X  . See (Katz, 1987; Jelinek, 1990; Ney et al., 1994). It can thus be viewed as polynomial discounting for r = 1 . Absolute discounting could be viewed as a form of polynomial discounting for r = 0 . We know of no other work that has explored exponents between 0 and 1 and shown that for this type of exponent, one obtains competitive discounts that could be argued to be simpler than more complex discounts like KN discounts. 6.1 Test set performance We report the test set performance of the key mod-els we have developed in this paper in Table 7. The experiments were run with the optimal parameters on the validation set as reported in the table refer-enced in column  X  X b:l X ; e.g., on line 2 of Table 7, (  X  1 ,  X  2 ) = ( . 01 , . 3) ble 3.

There is an almost constant difference between validation and test set perplexities, ranging from +.2 to +.3, indicating that test set results are consistent with validation set results. To test significance, we assigned the 2.8M positions in the test set to 48 dif-ferent bins according to the majority part-of-speech compute perplexity for each bin, compare perplexi-ties for different experiments and use the sign test for determining significance. We indicate results that were significant at p &lt; . 05 ( n = 48 , k  X  32 suc-cesses) using a star, e.g., 3 &lt;  X  2 means that test set perplexity on line 3 is significantly lower than test set perplexity on line 2.

The main findings on the validation set also hold for the test set: (i) Trained on unique events and with a sufficiently large |B events is better than training on all events: 3 &lt;  X  2 bigram and unigram classes gives better results than using unigram classes only: 3 &lt;  X  7 . Not significant: 5 &lt; 9 . (iv) The Dupont-Rosenfeld model p DR is bet-ter than the top-level model p TOP : 10 &lt;  X  11 . (v) The model POL0 (polynomial discounting) is the best model overall: Not significant: 13 &lt; 12 . (vi) Poly-nomial discounting is significantly better than KN discounting for the Dupont-Rosenfeld model p DR al-though the absolute difference in perplexity is small: 13 &lt;  X  10 .

Overall, p DR and p POL0 achieve considerable re-ductions in test set perplexity from 88.28 to 85.39 and 85.22, respectively. The main result of the ex-periments is that Dupont-Rosenfeld models (which focus on rare events) are better than the standardly used top-level models; and that training classes on unique events is better than training classes on all events. Our hypothesis was that classes are a generalization mechanism for rare events that serves the same func-tion as history-length interpolation and that classes should therefore be (i) primarily trained on rare events and (ii) receive high weight only if it is likely that a rare event will follow and be weighted in a way analogous to the weighting of lower-order dis-tributions in history-length interpolation.

We found clear statistically significant evidence for both (i) and (ii). (i) Classes trained on unique-event corpora perform better than classes trained on all-event corpora. (ii) The p DR model (which ad-justs the interpolation weight given to classes based on the prevalence of nonfrequent events following) is better than top-level model p TOP (which uses a fixed weight for classes). Most previous work on class-based models has employed top-level interpo-lation. Our results strongly suggest that the Dupont-Rosenfeld model is a superior model.

A comparison of Dupont-Rosenfeld and top-level results suggested that the KN discount mechanism does not discount high-frequency events enough. We empirically determined that better discounts are obtained by letting the discount grow as a func-tion of the count of the discounted event and im-plemented this as polynomial discounting, an ar-guably simpler way of discounting than Kneser-Ney discounting. The improvement of polynomial dis-counts vs. KN discounts was small, but statistically significant.

In future work, we would like to find a theoreti-cal justification for the surprising fact that polyno-mial discounting does at least as well as Kneser-Ney discounting. We also would like to look at other backoff mechanisms (in addition to history length and classes) and incorporate them into the model, e.g., similarity and topic. Finally, training classes on unique events is an extreme way of highly weight-ing rare events. We would like to explore training regimes that lie between unique-event clustering and all-event clustering and upweight rare events less.
Acknowledgements. This research was funded by Deutsche Forschungsgemeinschaft (grant SFB 732). We are grateful to Thomas M  X uller, Helmut Schmid and the anonymous reviewers for their help-ful comments.
