 Recommendation systems have gained a lot of attention because of their importance for handling the unprecedent-edly large amount of available content on the Web, such as movies, music, books, etc. Although Collaborative Ranking (CR) models can produce accurate recommendation lists, in practice several real-world problems decrease their ranking performance, such as the sparsity and cold start problems. Here, to account for the fact that the selections of social friends can leverage the recommendation accuracy, we pro-pose SCR , a Social CR model. Our model learns personalized ranking functions collaboratively, using the notion of Social Reverse Height, that is, considering how well the relevant items of users and their social friends have been ranked at the top of the list. The reason that we focus on the top of the list is that users mainly see the top-N recommenda-tions, and not the whole ranked list. In our experiments with a benchmark data set from Epinions, we show that our SCR model performs better than state-of-the-art CR mod-els that either consider social relationships or focus on the ranking performance at the top of the list.
  X 
Information systems  X  Collaborative and social com-puting systems and tools; Recommendation systems; collaborative ranking; social re-lationships
The collaborative filtering strategy has been widely fol-lowed in recommendation systems, where users with similar preferences tend to get similar recommendations [5]. User preferences are expressed explicitly in the form of ratings or implicitly in the form of number of views, clicks, pur-chases, etc. Relevant studies examine how to predict the rating of a user on an unseen item, also known as the rating prediction problem [8]. Instead of focusing on the accuracy of rating prediction, ranking-based models try to produce accurate ranked lists for the top-N recommendation prob-lem [9]. In relevant studies [2, 13], it has been shown that ranking-based models achieve higher recommendation accu-racy than rating prediction-based approaches in the top-N recommendation problem.

Collaborative Ranking (CR) models learn a personalized scoring/ranking function to rank the recommended items for each individual, while all functions are constructed collabo-ratively across all the users [9, 10]. In [2], authors introduce CR models that perform push at the top of the recommen-dation list, by considering that what matters in a recom-mendation system is the ranking performance at the top of the list, that is, the items the user will actually see. In doing so, the CR models that focus on the ranking performance at the top of the list achieve high ranking accuracy in the top-N recommendation problem.

Although CR models can generate accurate recommenda-tion lists, in practice several real-world problems decrease the recommendation accuracy, such as the sparsity and the cold-start problems [5]. Several approaches have been pro-posed for handling them in the rating prediction problem, assuming that users tend to trust the recommendations of their social friends [1]. However, a little effort has been made to exploit social relationships in CR models, such as the studies in [6, 14]. Nonetheless, the CR models in [6, 14] do not focus on the ranking performance at the top of the list, when learning the ranking functions.

Therefore, a pressing challenge resides on generating accu-rate recommendations able to exploit the social relationships that simultaneously focus on the top of the list. In this pa-per, we propose a Social CR model, namely SCR . Our CR model learns the personalized ranking function of each indi-vidual in a collaborative manner using the notion of Social Reverse Height. When learning the ranking functions, SCR attempts to push up users X  relevant items above the irrele-vant ones at the top of the list, by considering the ranking positions that the relevant items of their friends have. We formulate the objective function of the proposed SCR model as a minimization problem, and we provide an efficient op-timization algorithm based on alternating minimization [4] and gradient descent. Our experiments on a data set from Epinions 1 demonstrate the superiority of our SCR model over state-of-the-art CR models. http ://www.epinions.com/
Learning to rank methods have been widely studied in In-formation Retrieval and in recommendation systems. The goal is to define a ranking function on each item, and then learn toward some loss functions. Liu et al. [7] categorize learning to rank methods into point-wise, list-wise and pair-wise. In short, point-wise approaches predict ranking scores for individual items. List-wise approaches consider an in-dividual training example as an entire list of items and use loss functions to express the distance between the reference list and the output list from the ranking model. Represen-tative list-wise approaches in recommendation systems are CofiRank [12] and CLiMF [10], which use loss functions based on Normalized Discounted Cumulative Gain and Reciprocal Rank, respectively. Pair-wise approaches make a prediction for every pair of items concerning their relative ordering in the final list. A pair-wise recommendation approach is the Bayesian Personalized Ranking framework ( BPR ) [9], a CR model that learns the personalized ranking functions collab-oratively. To account for the fact that users focus on recom-mendations at the top of the list, in [2] authors introduce optimization algorithms for three CR models P-Push , Inf-Push and RH-Push , which follow different strategies when learning the personalized ranking functions. P-Push tries to push irrelevant items in the top-N list below those that have been selected as relevant; Inf-Push attempts to move the most irrelevant item in the list below all the relevant ones; while RH-Push tries to move the relevant items above the irrelevant ones. However, all the aforementioned models do not exploit the social relationships in the learning process.
Although several approaches incorporate social relation-ships in the rating prediction problem, e.g. [8], a few at-tempts have been made in the top-N recommendation prob-lem. Rendle et al. [6] present the MR-BPR model, where they combine Multi-Relational matrix factorization with the BPR framework [9] to model both users X  feedback on items and on social relationships. Zhao et al. [14] propose SBRP , a Social Bayesian Personalized Ranking model that incorporates so-cial relationships into a pair-wise ranking model, assuming that users tend to assign higher ranks to items that their friends prefer. However, MR-BPR and SBRP do not focus on the ranking performance at the top of the list. Let U and I be the sets of users and items, respectively. We assume that users express their preferences over the items by marking them as relevant or irrelevant (either via explicit or implicit feedback), stored in a ( |U| X |I| ) matrix R , with [ R ] ij =1 if user i has selected item j as relevant, -1 as irrelevant, and 0 if user i has not expressed her preference over item j . For each user i the sets of relevant and irrelevant items are denoted as I + i and I i , with x + i  X  I + i , x and n i = |I + i  X  X  i | being the total number of marked items by user i . For each user i  X  X  , we define the Reverse Height of a relevant item x + i as follows [2]:
Definition 1. The Reverse Height RH i ( x + i ) of a rel-evant item x + i in the recommendation list of user i is the number of irrelevant items ranked above x + i .
 In our setting, we assume that each user i has a set F i of friends with trusted social relationships. Given x + i  X  I + x Reverse Height of a relevant item x + i as follows:
Definition 2. The Social Reverse Height SRH i ( x + i ) of a relevant item x + i in the recommendation list of user i is the sum of (1) the number of irrelevant items x i ranked above x + i ; and (2) the number of the irrelevant items x ranked above the relevant items x + w of all her |F i | friends.
Definition 3. The goal of the proposed SCR model is to learn the personalized ranking functions collaboratively by trying to minimize SRH i ( x + i ) , that is, pushing up the relevant items x + i of user i above the irrelevant items x considering the ranking positions of the relevant items x her |F i | friends.
A trusted friend w  X  X  i might point to an interesting item that does not match the preferences of user i [1]. Hence, to measure the social influence between user i and her friend w we define the social regularization term s iw = |I + i  X  X  + which is the intersection of the sets of relevant items of user i and her friend w . For each user i we normalize s iw in [0 ; 1], by dividing each s iw value with the maximum value of all the |F i | friends.

Given a personalized ranking function r i ( x ), with i  X  U and x  X  X  , according to Definition 2 we have: wh ere 1 is the indicator function and s iw the social regu-larization term. Note that r i ( x + w ) expresses the ranking of the relevant item x + w of friend w using the ranking function of user i . The above optimization problem in Eq. (1) is in-tractable due to the non-convex indicator function 1 . Thus, we take a surrogate g i (  X  ) as follows:
In the proposed SCR model we follow a collaborative strat-egy, instead of learning a ranking function r i (  X  ) for each in-dividual i . Given the low-rank d decomposition  X  R  X  U T of the initial matrix R , with U and V being ( d  X |U| ) and ( d  X |I| ) matrices, we consider u i and v j as the ( d  X  1) la-tent vectors of user i and item j respectively, that is, the i -th and j -th columns of U and V , respectively. For read-ability, we denote the relevant item of user i as a = x + irrelevant item of user i as b = x i , and the relevant item of a friend w  X  F i as c = x + w . Using the representation of the latent factors u i and v j , Eq. (2) can be rewritten as: wh ere a  X  I + i , b  X  I i and c  X  I + w . As the logistic loss function is a convex upper bound to the indicator function 1 , based on Eq. (3) we can reformulate Eq. (1) as: Acc o rding to Definition 3, for all the relevant items a we have to minimize the SRH i ( a ) value of Eq. (4). Hence, i  X  X  the goal is to minimize the following objective function (log-log loss function [2]) with respect to matrices U and V : wh ere th e last term, called regularization term, is used to avoid model overfitting, and is the regularization parame-ter.
The goal is to learn (compute) matrices U and V to min-imize the loss function L ( U; V ) in Eq. (5). We follow the alternating minimization strategy [4] using the gradient de-scent optimization algorithm, where we update U keeping V fixed, and then, update V keeping the updated U fixed. Based on the (sub)gradients of objective function L ( U; V ) with respect to u i and v j , the update rules for each itera-tion t + 1 are: wh ere c on trols the learning rate.
We apply the chain rule to Eq. (5) to take the gradient of L with respect to u i , that is, the composition of gradi-Eq. (3) and g i ( a; b ) in Eq. (4), respectively. Note that the gradient of the regularization term in Eq. (5) with respect to u i equals u i . Thus, provided that i  X  = w , we have: th e grad ient of L with respect to u i in Eq. (5) equals:
When calculating the gradient of g i ( a; b ) with respect to v j in Eq. (3), there are the following two cases: S imil arly, we apply the chain rule to Eq. (5), to compute the gradient of L with respect to v j , that is, the composition of the gradient  X  v j g i ( a; b ) based on the two cases in Eq. (11), and the gradient  X  g i ( a;b ) SRH i ( a ), as presented in Eq. (9). The gradient of the regularization term in Eq. (5) with re-spect to v j equals v j . Let U + j and U j be the sets of users who selected item j as relevant and irrelevant, respectively. We can divide the sum over all users into sums over U j and j [2], in order to calculate the gradient of L with respect to v j as follows: Ha vin g computed U and V based on Eqs. (6) and (7) with the respective gradients in Eqs. (10) and (12), we calcu-late the low-rank d approximation  X  R  X  U T V of the initial ( |U|  X  |I| ) matrix R , and we generate a recommendation list by sorting the items in the respective i -th row of  X  descending order, for each user i .
In our experiments we used a publicly available data set 2 from Epinions, which consists of 71,002 users and 104,356 items. The total number of ratings is 571,235 at a 5-star scale, where we considered 4-5 star ratings as relevant to a user and 1-3 as irrelevant. The total number of trusted social relationships is 508,960. The data set is divided into two sub-sets: the training set and the test set. Following the evaluation protocol of similar studies [13, 14], for users with less than five ratings, one randomly selected rating is inserted into the test set. For users with five ratings or more, 10% of the randomly selected ratings are moved to the test set. The training set is further split into two subsets: the cross-validation training set and the cross-validation test set, which are used to determine the tuning parameters of each examined ranking model. We repeated our experiment ten times, and we report mean values and standard deviations on the (actual) test set over the runs.

We evaluated the performance of the examined ranking models in terms of Recall ( R @ N ), which is defined as the ratio of the relevant items in the top-N ranked list over all the relevant items for each user. In addition, we used the Normalized Discounted Cumulative Gain ( N DCG @ N ) metric, which considers the ranking of the relevant items in the top-N list. For each user the Discounted Cumulative Gain is defined as: where rel j rep resents the relevance score of the item j , bi-nary relevance in our case, that is, relevant or irrelevant to the user. N DCG @ N is the ratio of DCG @ N over the ideal iDCG @ N value for each user, that is, the DCG @ N value given the ratings in the test set. In our experiments we averaged R @ N and N DCG @ N over all users. ht tp ://alchemy.cs.washington.edu/data/epinions/
To evaluate the parameter sensitivity in SCR , we varied the learning rate in the range of [10 5 10 2 ] and we concluded in =10 4 . This means that a more conservative learning strategy is required, as higher values of decreased the per-formance of SCR , by falling in local optima when minimizing the loss function in Eq. (5). In Figure 1, we vary the number of latent factors d and the regularization parameter , while keeping =10 4 fixed. For presentation purposes, we plot R @ as a percentage (%). Figures 1(a)-(b) show that there is a slight increase on R @ after d  X  40, while there is a drop on R @ when is in the range of 0.01-1, and we select d =40 and =0.001. Fi gure 1: Effect of (a) # of latent factors d and (b) regularization parameter on R @10 (%).

We use CofiRank 3 [12] as baseline, and we compare the proposed SCR method with P-Push , Inf-Push and RH-Push using the optimization algorithms 4 of [2]. In addition, we compare SCR with MR-BPR 5 [6], a state-of-the-art method for ranking with social relationships in the recommendation problem. We also evaluate the performance of SCR against SBRP [14], a ranking model that also considers social relation-ships in the learning process, assuming that users tend to assign higher ranks to items that their friends prefer. In all ranking models, we followed the same cross-validation strat-egy to select the optimal parameters as in SCR . In Table 1 we compare the examined ranking models, where we observe that P-Push , Inf-Push and RH-Push outperform CofiRank , as these models focus on the ranking performance at the top of the list; while MR-BPR , SBPR and SCR achieve better performance than the models that do not exploit social re-lationships. The proposed SCR model beats the competitors by exploiting social relationships and focusing on the top of the ranking list. Using the paired t-test, we found that the differences between the reported results for SCR against the competitive approaches were statistically significant for p&lt; 0.05.
In this study, we presented SCR , a CR model that focuses on the ranking accuracy at the top of the list by also consid-ering users X  trusted social relationships. Our learning strat-egy uses the notion of Social Reverse Height to consider the ranking positions of friends X  relevant items, while our SCR method outperforms other state-of-the-art ranking models.
An interesting future direction is to exploit both the trust and distrust social relationships in the proposed SCR model, htt ps://github.com/markusweimer/cofirank http://www-users.cs.umn.edu/  X christa/ http://www.ismll.uni-hildesheim.de/software Table 1: Methods comparison in terms of N DCG @ and R @ , with bold values denoting the best scores ( p &lt; 0.05 in paired t-test). MR-BPR , SBPR and SCR ex-ploit social relationships.
 acco unting for the fact that users with distrust relationships usually do not have similar preferences [3]. In addition, we plan to evaluate the performance of SCR in terms of diver-sity, that is, how well we can generate diversified recommen-dations in SCR to capture the interest range of the target user [11].
