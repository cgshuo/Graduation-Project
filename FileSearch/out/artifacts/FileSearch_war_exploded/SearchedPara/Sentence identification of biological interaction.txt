 1. Introduction
Recent research in information extraction (IE) in biological science has focused on extracting information about interac-tions between biological entities from research communications. The type of interaction of interest includes protein X  X rotein, protein X  X NA, gene regulations and other interactions between macromolecules. This work broadens the definition of the term  X  X  X nteraction X  to include other types of concepts that are semantically related to cellular components and processes. tionships between concepts of molecular biology will facilitate the building of knowledge models, improve the sensitivity of IE tasks and ultimately facilitate the formulation of new hypothesis by experimentalists.

The extraction of interactions is based on the heuristic premise that interacting concepts co-occur within a given section of text. The challenge is that co-occurrence certainly does not guarantee that a passage contains an interaction [3 X 5] . Co-occurrence is highly dependent on the definition of the section of text within which the target terms are expected to be found. A thorough comparison on the prediction of protein X  X rotein interaction between abstract-level co-occurrence and sentence-level co-occurrence was undertaken [6]. It is demonstrated that abstract co-occurrence is more sensitive but less specific for interactions. At the cost of wide coverage, sentence co-occurrence increases the accuracy of interaction prediction. Since the ultimate goal of IE is to extract knowledge and accuracy is the most important aspect in evaluating the performance of such systems, it makes sense to focus the effort in seeking interaction sentences rather than passages or abstracts. Not every co-occurrence in sentences implies a relationship that expresses a fact. In the 2005 Genomics
Track dataset, 50% of all sentence co-occurrences of entities correspond to definite relationships while the rest of the co-occurrences only convey some possible relationships or contain no relationship of interest [5]. Therefore, more sophisticated text mining strategies are required to classify sentences that describe interactions between co-occurring concepts.

In the BioCreative II challenge 1 , participating teams were asked to determine whether a given passage of biological texts contained information about the interaction between two proteins. Although the best F -score of 78% was reported, this classi-
Learning Language in Logic (LLL X 05) challenge 2 was to build systems that extract interactions between genes or proteins from or models had to be learned to extract these interactions. The task focused on extracting only the interacting partners. The context of an interaction may also be critical to the validity of the extracted knowledge since not all statements found in the literature are facts.

In this work, we propose an approach to automatically extract patterns containing relevant interaction between biolog-ical concepts. This extraction is based on the assumption that biological interactions are articulated by a limited number of
POS patterns embedded in sentences where entities/concepts are co-occurring. The extracted patterns are then applied to identify interaction sentences which describe interactions between biological entities. Our work aims to identify precise sentences rather than passages. Because of the nature of the patterns, we hope that some of the contextual information present in interaction sentences also play a role in the classification task.

The rest of the paper is organized as follows: In Section 2, we review recent research advances in extracting biological interactions. Section 3 describes an experimental system designed for our work. Sections 4 X 6 elaborate the approaches and algorithms applied in the system. Performance of the system is evaluated in Section 7. Finally, Section 8 summarizes the paper and introduces future work. 2. Related work
There are three main categories of methods that are proposed to extract information from the biological domain: parsing-based methods, pattern matching approaches, and machine learning techniques.

Parsing-based methods attempt to discover biological interaction information by parsing and analyzing sentences in de-tail. Both full-and shallow-parsing strategies have been reported to perform intensive syntactical and semantical analysis [7 X 11] . Pattern matching approaches try to first generate patterns or rules which model classes of the underlying biological interactions and then use the generated patterns to detect specific interactions. The patterns can be either simple rules de-fined for extracting general relations, or complicated rules for discovering special interactions. Machine learning techniques aim to extract biological interactions by applying a set of classifiers to the test set, which is obtained by applying learning algorithms, e.g., rule induction algorithms [12], on the appropriately annotated training set.

Parsing-based methods are inherently complex, require a range of resources and their performances are sometimes not satisfactory [13] while machine learning techniques also suffer from lack of appropriately annotated text for training data [14,15] . In contrast, pattern matching approaches perform better on long or complex sentences. Also, patterns or rules are usually developed by domain experts which provide an advantage in evaluation [4] but is a problem to keep current in the long term. In the  X  X  X DD Challenge Cup X  [16], the participating systems which apply pattern matching approaches gen-erally outperformed systems using other strategies in extracting biological relations.

Early on, Blaschke [1] employed patterns to predict the presence of a protein X  X rotein interaction. A series of patterns was developed manually to cover the common descriptions of protein functions. This process was based on a set of keywords, including interaction verbs, that are commonly used to describe this type of interaction. A sentence extraction system BioIE patterns were manually defined and consisted of single words, word pairs, and small phrases. In GENIES, Friedman and col-leagues [8] manually developed more complex patterns with both syntactic and semantic constraints to extract and struc-ture information related to molecular pathways.

Although systems relying on hand-coded patterns [8,1,17,9] have achieved some success in extracting biological interac-tions, the strict requirement of dedicated expert work is problematic. Moreover, each type of interaction may require a def-inition of many different patterns including different arrangements and different variants of the same keyword. Manually encoding all patterns encountered in a corpus is time-consuming and potentially impractical in real applications. Therefore, automatically learning such patterns is a more practical solution to maintain such resource in the long term.
An approach which combines dynamic programming and biological sequence alignment algorithms [18] was introduced by Huang et al. [13]. This approach is designed to generate patterns useful for extracting protein X  X rotein interactions. The main problem with this approach is that the alignment algorithm relies on an alignment scoring scheme which contains a number of free parameters. We have showed that finding optimal scoring scheme of parameters for edit distance based sequence classification is an NP-hard problem [19,20] . In this work, we propose a method based on genetic algorithm (GA) [21] heuristics for parameter optimization to maximize the alignment procedure for the purpose of classification.
GAs were also used as a learning strategy to train finite state automata for finding biological relation patterns in texts as well as to optimize the extracted patterns [22]. In addition, phrasal patterns that describe protein functions were mined from sentences via a strict sentence pattern mining mechanism and patterns were then matched with new texts to recognize descriptions of protein functions in articles [11]. It was reported [23,22,24,25] that automatically learned patterns identify biological interactions even more accurately than hand-coded patterns. 3. Overview of system design
In this work, we have designed an experimental system to extract biological interaction patterns and identify sentences that contain these interactions. Fig. 1 illustrates the overall data flow of the system, which consists of three major modules: biological text preprocessing, interaction pattern extraction, and interaction sentence identification.

A text preprocessing reformats the original texts into a set of candidate sentences. A pattern learning method is then pro-posed to automatically extract the representative patterns of biological interactions. The obtained patterns are then used to identify sentences that describe biological interactions. Poor performance during preprocessing will have detrimental effects on later stages. In the following sections, we will describe each component of the system in detail. 4. Biological text preprocessing
Processing text from the biological literature is more challenging than from the general English texts. This is due to the domain-specific terminology and the ambiguity in some technical terms. Generally, several preprocessing steps need to be completed before performing text mining strategies. For our work, these include sentence preparation, Part-of-Speech tag-ging, biological term annotation, and text chunking. 4.1. Sentence preparation
Since our system aims to extract biological interaction patterns at the sentence level, a rule-based heuristic method is implemented to detect sentence boundaries [26]. Captions and headings that are not grammatically valid sentences are eliminated. 4.2. Part-of-Speech tagging
POS tagging is then performed to associate each word in a sentence with its most likely part of speech tag. Because sub-sequent processing steps typically depend on the tagger X  X  output, high accuracy at this level is crucial for success in later stages. A statistical tagger Lingua::EN::Tagger 3 is used to perform this task. 4.3. Biological term annotation
A learning-based biological term annotation system, ABTA [27,28] , is embedded in our system. Given unstructured texts gle X  and  X  X  X on-relevant X . Therefore, multi-word terms should be in a consistent sequence of classes  X  X  X tart (Middle)* End X  while single word terms will be indicated by the class  X  X  X ingle X . The type of terms includes molecules, such as genes, proteins transcription X . We consider that a broader definition of biological term will include more facts from literature, thus leading to more general use of interaction patterns for IE tasks.

ABTA considers the longest expression and ignores embedded entities. For example,  X  X  X L-2 receptor X  is annotated for one kind of protein molecule and the embedded entity  X  X  X L-2 X  for another kind is not annotated. Also, parenthesized abbreviations of biological terms are not processed since their immediately preceding full forms will contribute to the patterns. We simply remove the parenthesized texts that follow the biological terms. Further, instead of distinguishing terms from their relevant eral interactions between biological concepts, not only the interactions between molecules, e.g., protein X  X rotein interaction.
Tags like NN (noun) and VB (verb) are typically used to define entities and the action type of interactions, and thus they are indispensable. However, tags such as JJ (adjective), RB (adverb) and their comparative or superlative forms could occur at dif-ferent positions in a sentence. We decided to remove these tags to prevent the combinatorial effect that these tag would induce within the set of extracted patterns. Meanwhile, other tags such as PP (sentence ending punctuation) were not con-sidered in pattern definitions. 4.4. Text chunking
Next, a rule-based text chunker [29] is applied on the tagged sentences to further identify base noun phrases NP , which are defined as non-recursive noun phrases that end after their nominal head and exclude any type of postmodification (e.g., holistic structure of each sentence. Text chunking is not applied on the identified biological terms although they might also be labeled as NPs since most biological terms are linguistically expressed within noun phrases. In order to achieve more gen-various tenses of verbs.

As a result of preprocessing, every sentence is represented by its generalized form as a sequence of corresponding tags consisting of POS tags and predefined tags. Table 1 summarizes the main tags in the system.

For a sentence extracted from MEDLINE [30]  X  X  X L-2 gene expression and NF-kappa B activation through CD28 requires reactive oxygen production by 5-lipoxygenase X  (MEDLINE: 95369245), the preprocessed result is:
A biological interaction tends to involve at least three objects: a pair of co-occurring biological entities connected by a verb which specifies the action type of the interaction. Therefore, a constraint is applied that only sentences satisfying form  X  X  X ioEntity A  X  Verb  X  BioEntity B X  will be preserved as candidate sentences to be further processed in the system. It is pos-sible that the presence of two entities in different sentence structures implies a relationship. However, this work assumes the underlying co-occurrence of two concepts and a verb in the interest of improving the classification accuracy. This type of  X  X  X bject X  X elation X  X bject X  inference is also assumed in other work [1,31 X 33] .

The obtained candidate sentences are split into training and testing sets. The training set is used to extract the represen-ical interactions. 5. Interaction pattern extraction 5.1. PATRICIA trees
The method we propose to extract interaction patterns from candidate sentences is based on the use of PATRICIA trees.  X  X  X ATRICIA X  stands for  X  X  X ractical Algorithm To Retrieve Information Coded In Alphanumeric X . It was first proposed as an algo-compression by grouping common sequences into nodes. This structure provides an efficient way of storing values while standing flexibility and efficiency, PATRICIA trees have been applied to many large information retrieval problems [35,36] .
There is a precedent for the use of PATRICIA trees to perform an automatic extraction of keywords from relevant Chinese documents [35]. The tree structure helps to reduce the difficulty in processing Chinese language which is known to lack ex-plicit word boundaries. Refined by a mutual information-based algorithm and a general-word lexicon, the extracted keywords have proved useful in several Chinese information retrieval applications, such as book indexing, document classification and relevance feedback. A learning device based on PATRICIA trees was also developed to efficiently store and retrieve important information [36]. The original tree structure was enhanced with a deletion mechanism which allowed memory to be released by automatically deleting unimportant information for the purpose of storing new inputs. This enhanced PATRICIA tree has the ability to accept unlimited amounts of information and the potential to be an online training tool.

In our work, a PATRICIA tree is used for the first time to facilitate the automatic extraction of interaction patterns. All the training sentences are inserted and stored in a generic PATRICIA tree. From this tree, the common patterns of POS tags can be efficiently stored and the tree structure used to compute relevant usage statistics. 5.2. Potential pattern extraction
The premise of this work is that there is a set of frequently occurring interaction patterns that matches a majority of sta-ted facts about molecular biology. In this work, a biological interaction pattern is defined as follows: the description of certain types of biological interactions based on the consistently repeated occurrences of this sequence of tags in different interaction sentences. BIP  X f bip 1 ; bip
We first extract potential interaction patterns by populating a PATRICIA tree using training sentences. Every node in the tree contains one or more system tags, which is the preceding tag sequence of its descendant nodes in each sentence. Every sentence is composed of a path of system tags from the root to a leaf. Hence, we propose that the sequence of system tags that can be formed from traversing the nodes of the tree is a potential pattern of biological interactions.
Fig. 2 illustrates a simple example of the process of extracting potential interaction patterns from a PATRICIA tree pop-ulated by the tagged forms of four simplified sentences discussing various interactions between different biological entities symbolized as A, B, C, and D. Dotted circles represent leaf nodes while solid circles denote internal nodes. By traversing the
BIO (5) BIO VB BIO IN BIO (6) BIO VB BIO CC VB BIO . Meanwhile, the occurrence frequency of each pattern is also retrieved and recorded from the tree.

A frequency threshold f min is used as a constraint to filter out patterns that occur less than f tern set, the generalization and the usability of patterns can be also controlled by tuning f more accurate patterns are. Further, some filtering rules are adapted to control the form of a pattern and enhance the quality setting this threshold can be applied to meet special demands. As a result, the only valid pattern in the above example is at least 5 times. We consider that these patterns are representative patterns, which have been intensively employed in expressing biological interactions. Therefore, we finally set f has a time complexity of O  X  n  X  in the size of candidate sentences, n .

Algorithm 1 . PATRICIA-Tree-based Extraction of Biological Interaction Patterns 5.3. Interaction verb mining Although the obtained patterns are derived from the candidate sentences possessing the form  X  X  X ioEntity A  X  Verb  X  Bio-serve a narrative discourse purpose. Therefore, mining the correct interaction verbs becomes an important step in the auto-matic discovery of patterns.

An automatic approach was proposed in [32] to discover interaction verbs that code gene and protein interactions in molecular biology articles. The authors applied statistical tests and a logistic regression statistical model to determine whether a given verb was an interaction verb. The features used in the experiments included the frequencies of a verb before and after gene or protein names, and the frequencies of the verb in different domains. Another simpler method was applied to mine interaction verbs by raising the threshold value of the frequency of the extracted interaction patterns [13]. The authors assumed that a verb in a pattern is more likely to act as an interaction verb when the frequency of the pattern is comparatively high. The mined verbs were then manually evaluated by domain experts to remove inaccurate candidates.
We perform the latter method to mine a list of interaction verbs. This will be used to further improve the relevance of achieved patterns by filtering out patterns formed by the sentences in which the action verbs are not on the list. 6. Interaction sentence identification
Identifying interaction sentence is treated as a classification problem to differentiate between interaction sentences and action is a binary relationship between two concepts relevant to molecular or cell biology. 6.1. Pattern matching scoring
We first perform pattern matching by conversion of each sentence to be classified into a sequence of tags. This sequence is then compared to every previously extracted pattern. This is done using sequence alignment which calculates the degree of the similarity of a sentence to an interaction pattern. Our hypothesis is that the alignment scores can be used to discriminate interaction sentences from other types of sentences.
 The language used in this discussion borrows heavily on the language used in the pairwise sequence alignment literature.
The scoring scheme involved in the process of pattern matching consists of penalties for introducing gaps, match rewards and mismatch penalties for a selection of system tag pairs. Table 2 presents a practical scoring scheme derived from previous experiments for main tags used in the system. Penalties and rewards are denoted, respectively, by negative and positive values.

As a variation of global alignment [37], an end-space free alignment algorithm [38] is implemented to facilitate the com-parison of patterns and testing sentences. It assumes that gaps at the beginning or ending positions of a sentence always have a cost of zero. This enables the detection of embedded interactions within longer sentences. In this work, the shortest pattern is selected when multiple patterns align with the same score. As a result, each sentence is assigned to its most com-pact pattern that maximizes the alignment score. Therefore, high-scoring interaction sentences should be distinguishable from non-interaction sentences which are scoring low against all considered patterns. Essentially, this procedure can be seen as a variation of the k Nearest Neighbors (kNN) classification method, with k  X  1. 6.2. Performance evaluation
We then evaluate whether the alignment scores can be used to classify the testing sentences. We have proposed two independent evaluation measures: statistical analysis ( SA ) and classification accuracy ( AC ).

Since it is assumed that interaction sentences achieve much higher alignment scores in pattern matching than non-inter-action sentences, SA measures whether the scoring difference between the mean of interaction sentences and the mean of non-interaction sentences should be attributed to chance, or whether it is statistically significant. If the scoring difference between the means is statistically significant, there will be a tendency that interaction sentences outscore non-interaction sentences in alignment. Hence, it would be reliable to use alignment scores to classify testing sentences.
Although non-interaction sentences come from the same documents as interaction sentences, we assume that interaction sentences and non-interaction sentences are two independent samples. Meanwhile, the Shapiro X  X ilk test [39] package in SAS (v8.02) [40] was employed to test the normality of the score distribution for the two samples. Both distributions are nor-mal distribution. Statistical analysis is then performed based on the following theory. If x samples, the mean and the standard deviation of the sampling distribution of the statistic x where l 1 ; l 2 ; r 1 and r 2 are the means and the standard deviations of the two samples, respectively.
Then, the formula for statistical two-sample z test is given in Eq. (1) with the null hypothesis l
Although d can be any constant, in this work we test only the null hypothesis that there is no scoring difference between the means of interaction and non-interaction sentences, namely d  X  0. The conventional value of 0.05 is used for the level of significance a in the analysis.

A comparatively large z will lead to the rejection of the null hypothesis. In other words, the scoring difference is statis-tically significant. Consequently, interaction sentences can be separated from non-interaction sentences according to align-ment scores. In practice, it is reasonable to assume that the two classes are not perfectly separable but that the scoring scheme can be optimized to minimize the overlap of the distribution of scores for both classes of sentences. Under the assumption of normality, maximizing z would accomplish this task.

Conversely, AC measures the proportion of correctly classified testing sentences, including both interaction and non-interaction sentences, to the total testing sentences. An appropriate threshold T is determined for obtained alignment scores
While two evaluation measures are proposed, it is not possible to evaluate the performance without correctly pre-labeled testing sentences. We decided to manually classify the testing sentences in advance by assigning each sentence an appro-priate label of interaction or non-interaction. This work was done by two independent experts, both with Ph.D. degrees in molecular biology or a related discipline, and an agreement was reached before pre-labeling the sentences, that is, the class label assigned to each testing sentence must be in accordance with the main intention of the sentence. They studied the con-tents of each sentence, judged the principal idea, and then concluded the class label. 6.3. Scoring scheme optimization 6.3.1. NP-hardness
The scoring scheme applied in pattern matching has a crucial impact on the performance of interaction sentence identi-fication since it is based on the pattern matching scores directly determined by the different costs specified in the scoring scheme. Optimizing the scoring scheme to minimize the overlap of the distribution of scores is not a trivial problem. So far, an empirical or arbitrary scoring scheme was adopted in previous research advances for the pairwise alignments [13,25] . We have proved that finding the optimal solution is NP-hard by reducing a well-known NP-hard problem 3-SAT to this problem [19]. This is an important claim to justify the use of heuristic methods for determining the best parameter settings. 6.3.2. Heuristic approach using genetic algorithm
Since finding the optimal scoring scheme is NP-hard, a genetic algorithm (GA) [21] is used as a heuristic method to opti-mize parameters of the scoring scheme for sentence classification. The Perl package AI::Genetic canonical genetic algorithm.

In practice, our GA works with a population of potential solutions (scoring matrices). Ultimately, the resulting optimized scoring scheme is the solution scheme for sentence classification. The costs of penalties and rewards for different system tags are encoded by integer values within two predefined ranges: [ 50, 0) and (0, 50], and assembled as a potential solution of scoring scheme, which consists of 30 parameters covering the costs for tags in the alignment as listed in Table 2 . For each potential solution, the fitness function of GA performs the pattern matching procedure, evaluates the resulting alignment scores using the two evaluation measures SA and AC , respectively, and returns a z value in terms of the formula (1) or a cor-responding classification accuracy. GA iterates the fitness function with a goal of maximizing z value or classification accu-racy. A predefined strategy of AI::Genetic,  X  X  X ouletteSinglePoint X , is specified to implement roulette-wheel selection and single-point crossover. The crossover and mutation probabilities are set to the empirical values, 0.95 and 0.01, according to the genetic algorithm package.

Our GA is set up to evolve for 100 generations, each of which consists of a population of 100 potential solutions of scoring scheme. GA starts with a randomly generated population of 100 potential solutions and proceeds until 100 generations are reached. The number of generations and the population size are decided with consideration of the runtime cost of evaluating the fitness function, which requires running the scoring algorithm with each sentence. GA evaluates all individuals in a pop-ulation, and the population is replaced on a generational basis. The members of the population reproduce, and therefore their offspring must then be evaluated. Consequently, a large number of generations or a large population size would incur an expensive runtime cost of evaluation. 7. Results and evaluation
This section starts with the description of our experimental dataset. Biological text preprocessing results are then pre-sented in Section 7.2 followed by results of interaction pattern extraction in which representative interaction patterns are derived from refining the extracted potential patterns based on two types of annotations. Next, results of interaction sen-tence identification are described in detail. In the end, we conduct experiments to evaluate another state-of-the-art pattern generating algorithm in order to compare with our proposed method for interaction sentence identification. 7.1. Dataset
Our experiments have been conducted on Genia corpus (v3.02) information of sentence segmentation, word tokenization, POS tagging and biological term annotation has also been encoded in the corpus. 7.2. Biological text preprocessing results
Evaluated using the inherently equipped annotation information, our system achieves nearly 99% accuracy on segment-ing sentences and extracts 18,355 sentences from the Genia corpus. About 99% of sentences in the corpus end with a period, and nearly 94% of periods are sentence boundaries (6% at the end of abbreviations and about 0.3% as both).
Furthermore, the system obtains an overall POS tagging accuracy of 91.0% on 364,208 individual words. Table 3 shows the tagging results of main POS tags. We noticed that the tagging information encoded in Genia corpus is not always consistent throughout the whole corpus, thus introducing detrimental effects on the tagging performance. For instance, in the Genia corpus the word  X  X  X timulated X  is tagged as VBN for terms  X  X  X timulated human endothelial cells X  (MEDLINE:95202809) and  X  X  X inimally stimulated T cells X  (MEDLINE:92156807) but tagged as JJ for terms  X  X  X timulated IL-5 promoter activation X  (MED-LINE:97407957) and  X  X  X c gamma RIIA stimulated cells X  (MEDLINE:96289501). Also, considering that the tagger used in the system is developed and parameterized according to the general English domain, porting this tagger to biology domain is accompanied by some loss in performance. We expect that retraining our tagger on annotated biological language corpora will improve the tagging performance.

The system reaches an F -score of 0.705 on annotating all biological terms including both multi-word and single word terms. After performing text chunking, the system produces a set of candidate sentences. We further perform text chunking on Genia corpus based on its encoded annotations and use the resulting set of sentences for the subsequent experiments to provide a gold standard to which results produced based on system annotations can be compared. Table 4 presents some statistics of the preprocessed dataset. For Genia annotations, we extracted 16,272 candidate sentences which possess the form  X  X  X ioEntity A  X  Verb  X  BioEntity B X . For system annotations, we obtained 1,250 more candidate sentences than Genia annotations due to the annotation differences. For each type of annotation, we randomized the candidate sentence set and chose 12,525 candidate sentences as the training set to extract biological interaction patterns. The rest of candidate sen-tences are prepared as the testing set for interaction sentence identification. 7.3. Interaction pattern extraction results the training set. Evaluated by domain experts, a list of 300 interaction verbs and a list of 700 non-interaction verbs are ob-tained from 12,525 training sentences with Genia annotations. Further, inflectional variants of the verbs are also added into  X  X  X timulating X  are added. Table 5 gives some examples of mined interaction verbs.

Refined by the filtering rules and the list of interaction verbs, a final set of representative patterns of biological interac-tions are obtained. We performed our proposed pattern learning method on training sentences of both Genia and system annotations. As shown in Table 6 , while system annotations achieve more patterns than Genia annotations, there are 97 common patterns between them.

Moreover, Table 7 lists the 10 most frequent interaction patterns based on Genia annotations. For instance, a training sen-tence conforming to the second pattern is  X  X  X he expression of the QR gene is regulated by the transcription factor AP-1 X  (MEDLINE: 96146856).
 7.4. Interaction sentence identification results Four hundred sentences were randomly extracted from the testing set. All of these sentences contained the  X  X  X ioEntity A  X 
Verb  X  BioEntity B X  set of system tags. Each was manually labeled into two classes: interaction and non-interaction. The dis-tribution of class labels of the sample sentences is shown in Table 8 . 7.4.1. Validation of convergence property of GA
We generated an optimized scoring scheme using a GA (100 individuals, 100 generations) on the 400 testing sentences optimization of the scoring scheme on the testing sentences. The resulting scheme converged with a 97.75% classification accuracy. This provides an evidence of the stability of the problem with respect to the parameter values for the population size and the number of generations. 7.4.2. Comparison between two evaluation measures
We applied the evaluation measures, SA and AC , respectively in the fitness function of GA to the 400 testing sentences, and recorded the scoring scheme of every generation resulted from GA. Then, the classification accuracy in terms of each scoring scheme derived from SA is computed for comparison. Fig. 3 presents the distribution of achieved classification accuracy in terms of each scoring scheme optimized by GA. This comparison is done with respect to the generation and evaluated on 400 testing sentences using the annotation from the Genia corpus.

The achieved classification accuracy for AC increases in a ladder-like fashion, and generally outperforms the classification increase of z does not correspond to the increase of classification accuracy. The highest classification accuracy, 78%, is reached at the 56th and 57th generations. Therefore, AC is considered more efficient with the system and becomes our final choice of the evaluation measure used in the fitness function of GA.
 7.4.3. Results of sentence identification
Since our sample set is comparatively small, we implemented a strategy of cross-validation, and calculated the average performance over 8 runs of labeled sentences. First we divided the 400 sentences into 8 equal subsets. Then we used 7 sub-sets, 350 sentences, as training data, and the remaining 50 sentences as testing data. Based on the obtained interaction pat-terns, GA results in an optimized scoring scheme on the 350 sentences along with its associated scoring threshold T , which are then applied together to the other 50 testing sentences for sentence classification. This procedure was repeated eight times. Classification performances were averaged over these 8 runs to produce a single estimation. Tables 9 and 10 report the averaged system performances and the corresponding standard deviation (STDEV) on the sample set respectively to both Genia and our system annotations.

Table 9 shows that when using the Genia annotations the system achieves on average 0.816 F -score in identifying interaction sentences and an overall AC of 80.25%, which is much higher than the proportion of either interaction or non-interaction sentences in the 400 sentence subset. This indicates that the system performs well on both classes. Meanwhile, in 100 generations GA is not able to evolve a scoring scheme that leads to an AC above 86%. We have also tested 20 more generations but AC shows no improvement when GA reaches the 120th generation. This indicates that the scoring scheme and threshold resulted from the 350 training sentences cannot provide enough distinction to correctly classify some of the 50 testing sentences. Compared to Genia annotations, our system annotations achieve a lower performance shown in Table 10. We attribute the difference to the accuracy loss of system annotations in the preprocessing steps as inaccurate annota-tions will lead to inappropriate patterns, thus harming the performance of sentence identification.

There are a number of preprocessing steps that affect the final classification performance. However, even assuming an ideal preprocessing of the unstructured text, our method relies on the assumption that all interaction sentences are articu-lated by a set of POS patterns that are distinct to all other types of sentences. The manual annotation of the training/testing and the common use of comma splicing within patterns makes sentence-level classification an especially difficult task. An-other source of interactions that our system cannot identify are implied and assume a deeper semantic understanding of the concepts themselves. Other sentences are long enough that the interaction itself is merely a secondary purpose to another idea. All of these factors pose interesting challenges for future development of this work.

Moreover, we also experimented with 10 empirical scoring schemes derived from previous experiments on the 400 sen-tences, including the scheme shown in the Table 2 . Several fixed thresholds were attempted for obtained alignment scores to differentiate between interaction and non-interaction sentences. Without using GA to optimize parameters of the scoring scheme, the best performance of 10 empirical schemes is an overall AC of 66%, which has been outperformed at the 3rd gen-eration of GA optimization with Genia annotations. 7.4.4. Impact of verb tags action and non-interaction verbs, and investigated the impact of the tags on the system performance.  X  X  IVB  X ,  X  X  NONIVB  X , and  X  X  VB  X  are used to represent interaction verbs, non-interaction verbs, and verbs that are not on both lists.
Following the same experimental procedures, candidate sentences with new verb tags are prepared and corresponding will be rejected. Table 11 shows the pattern extraction results with new verb tags.

New verb tags generally result in fewer interaction patterns than the unified tag. Based on fewer patterns, the system adopting new tags achieves a noticeable improvement in performance on testing sentences in terms of both Genia and our system annotations compared to the original system. Tables 12 and 13 report the detailed results. 7.5. System performance comparison
Within the framework of our system, we further conducted experiments on the same dataset for sentence identification using interaction patterns generated by another pattern generating algorithm (PGA) [13] in order to compare with the per-formance of patterns obtained by our proposed pattern learning method.
 The algorithm is based on sequence alignment, which calculates a consensus sequence in addition to the similarity score.
This consensus sequence represents all common parts (POS tags and their positions) in the aligned sequences and could be used directly to form a pattern. The local alignment algorithm [18] was implemented for the alignment and scoring of sen-tence pairs [13]. Thus, the aligned sentences could be quite dissimilar overall, but contain regions that are highly similar.
In our implementation, PGA iterates over all pairs of candidate sentences in the training set and calculates the best align-ment for each pair in terms of the cost scheme of gap penalties proposed [13]. Each consensus sequence from the optimal alignment of each pair forms a pattern. The number of occurrences of each pattern is also calculated as the support for each. set of different alignments can lead to the same consensus sequence. On the other hand, if multiple optimal alignments exist when aligning a sentence pair, all alignments will be considered to form patterns. The filter rules proposed in [13] are also applied in our implementation. All patterns below a minimum support are removed from the set of generated patterns.
Algorithm 2 shows the procedure of the pattern generating algorithm, which has a time complexity of O  X  n 2  X  in the size of candidate sentences, n . Hence, our proposed pattern learning method is much more efficient when dealing with large col-lections of biological texts.
 Algorithm 2 . Pattern Generating Algorithm
As shown in Table 14 , PGA produces a large number of patterns, even with f 37,319 common patterns between two types of annotations.

In order to make a direct comparison, we decided to experiment with the same number of interaction patterns. For Genia annotations, we chose the most frequent 209 patterns generated by PGA to compare with the 209 patterns by our method.
For system annotations, two sets of 302 patterns are employed. Further, it is found that for Genia annotations there are 96 common patterns between the two sets of 209 patterns, and there are 153 common patterns between the two sets of 302 patterns for our system annotations. Eightfold cross-validation is performed on the 400 testing sentences for sentence iden-tification. Tables 15 and 16 present the averaged results of sentence identification of PGA over eight runs with respect to both Genia and our system annotations.

The results show that patterns generated by PGA do not perform as well as patterns obtained by our method. We further experimented with new verb tags. Although new tags help to improve the performances, they are generally inferior to the results using patterns obtained by our method. We therefore infer that our proposed method is more efficient in producing biological interaction patterns to identify interaction sentences. 8. Conclusion and future work
In this paper, a novel approach is presented to automatically extract the representative patterns of biological interactions, which are then used to detect sentences that describe biological interactions. We have conducted the experiments on our designed system based on the Genia corpus. By means of a genetic algorithm to define the scoring scheme, the system achieves on average 0.845 F -score using Genia annotations and 0.796 F -score using our system annotations by cross-evalu-ating 400 sentences in which at least two biological concepts co-occur.

We further investigated the impact of different verb tags on the system performance. Based on fewer interaction patterns, the system adopting new tags achieves a noticeable improvement in performance on testing sentences in terms of both
Genia and our system annotations compared to the original system. By comparing with another pattern generating algorithm, we infer that our proposed method is more efficient in producing interaction patterns to identify interaction sentences.

In our future work, we would like to employ the obtained interaction patterns to guide the extraction of specific inter-actions. The matching between patterns and sentences will be performed and the matched parts of each sentence will be extracted as candidate interactions. One specific application is to employ the patterns on the dataset of LLL X 05 challenge to evaluate the performance in extracting interactions between genes and/or proteins. Once the specific interactions are discovered, further reasoning processes can be performed by means of available biological ontologies, such as UMLS Seman-tic Network [41] and Gene Ontology [42], to infer more general relations from facts extracted from this specialized type of literature.

References
