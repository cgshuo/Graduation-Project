 The Collaborative Agile Knowledge Engine (CAKE) is a prototypical generic software system for integrated process and knowledge management. CAKE integrates recent re-search results on agile workflows, process-oriented case-based reasoning, and web technologies into a common platform that can be configured to different application domains and needs. We describe the main concepts and the architecture of CAKE and sketch three example applications.
One of the biggest challenges today arises from the fact that many companies and organizations must be able to more quickly adapt their business according to newly arising market opportunities and demands from customers. Also in private life, changes are more frequent today (e.g. switching jobs, places to live, houses, etc.) and managing those change requires a substantial amount of specific knowledge of how to best act in a certain environment. The increased agility of business and private life asks for new tools for dealing with  X  X rocedural knowledge X  that support groups of people in finding or defining the right procedure to execute for a certain purpose and that support their collaborative execu-tion.

Workflow management is an established area that aims at the automation of a business process according to a set of procedural rules, which has expanded in the recent years from business use towards new areas. For example, in e-science scientific workflows are executable descriptions of automatable scientific processes such as computational sci-ence simulations and data analyses [18]. In medical health-care, workflows can be used to support the execution of medical guidelines [10]. In cookery, workflows can be used as a means to represent the cooking instructions within a recipe [11] in order to provide step-by-step guidance during cooking. Recently, social workflows are proposed as an ex-ecutable process representation, serving private people and groups of people to fulfill their objectives by providing means to store, create, and link personal activities and data objects according to procedural rules [6]. Such new applications of workflows typically deal with a number of new difficulties, particularly due to These new challenges ask for new methods and tools that tightly integrate knowledge and process management. In our work during the past couple of years, we focus on the combination of case-based reasoning (CBR) [1], which is a technology for experience-based problem solving [2], agile workflows [15, 16, 19] enabling flexible and adaptive busi-ness processes, and Web technologies providing standards to link with people, data sources, and services on the web. We developed new methods for workflow agility interweaving collaborative workflow modeling and execution [14, 15], we developed new methods for process-oriented CBR (POCBR) enabling workflow retrieval and adaptation [13, 3, 11], and we developed new concepts to implement workflow support as a software as a service (SaaS) to be used by a group of users or a social network [9, 7, 6]. To demonstrate our research, the CAKE 1 (Collaborative Agile Knowledge En-gine) framework has been developed. It is a generic software system for integrated process and knowledge management, which can be configured to different application domains and needs. In this paper, we describe the main concepts and the
See http://cake.wi2.uni-trier.de architecture of CAKE and sketch three example applications to be demonstrated.
The CAKE architecture is illustrated in Figure 1. The server component consists of a storage layer which handles persistency of all workflow-related data objects, an inter-face layer for the communication with web applications and two central engines, i.e., the agile workflow engine and the knowledge engine working together on the same data items accessed via the storage layer.

The agile workflow engine is used for the enactment of ag-ile workflows and supports their collaborative modeling and adaptation in a consistent manner. Agile means that work-flows can be modeled and changed on demand at any time by any user who is granted the respective access right. Work-flow instances already running can be paused, not already executed parts of the workflow instance can be adapted, and the workflow execution can then continue while consistently considering the changes just made. The internal structure of this workflow engine is strongly tied to the reference ar-chitecture of the Workflow Management Coalition (WfMC) [4]. Thus, the workflow engine provides interfaces for mod-eling and execution of workflows, for invoking applications (service connector), and an interface for the delegation of tasks to humans (worklist manager). During workflow en-actment, certain tasks may have to be executed by services (e.g. to check the weather conditions) while other tasks may require an activity of a human workflow participants. For the synchronization of collaborative modelling and execution of workflows CAKE has a real-time push-event system and an internal synchronization that ensures workflow consis-tency [8]. The workflow engine is based on a block-oriented workflow language which supports sequential, parallel, and conditional execution of tasks. It also supports loops and the execution of sub-workflows. Further, the exchange of products (e.g. data items) can be modeled. For workflow modeling, we developed a graphical workflow modeling lan-guage we call  X  X AKE Flow Cloud Notation X  (CFCN) which is derived from UML activity diagrams [9]. As a specific in-strument for implementing agility, we introduced a stop sign icon (i.e., a kind of break point) that can be placed into the control flow of a running workflow to pause workflow execu-tion in case the stop sign is reached [14]. Placing the stop sign enables the adaptation of the subsequent sub-workflow.
Workflow modeling usually requires significant skills and experience in the respective domain. The purpose of the knowledge engine is thus to support users in finding, defin-ing, and adapting workflows according to their current needs. Therefore, the knowledge engine implements a specialized case-based reasoning (CBR) method. CBR is an established Artificial Intelligence methodology to problem solving based on the assumption that similar problems have similar solu-tions [1, 2]. Experience items (called cases) capture solu-tions to previous problems and are collected and stored in a case base, i.e., a repository of successful problem solving episodes. When a new problem must be solved, cases ad-dressing similar problems are retrieved from the case base and their solution is adapted to become a solution of the new problem. Thus, problem solving from scratch is avoided. General problem solving knowledge is replaced by a collec-tion of concrete cases, which will grow over time and thereby continuously improve problem solving performance.

Process-oriented CBR (POCBR) particularly addresses experienced-based problem solving for procedural experi-ence represented as processes or workflows [13]. Thereby a community of users is supported in collecting their work-flows in a repository. This repository is the collective ex-periential workflow knowledge of this user community. The content of this repository can be shared among the users and the POCBR methods support the reuse of workflows from the repository by retrieval and adaptation. The POCBR approach implemented in CAKE enables the retrieval of se-mantically annotated workflows [3] based on a ranking of the similarity of workflow sub-graphs. In addition to a reposi-tory of workflows, also a repository of workflow adaptation episodes can be collected. CAKE supports the transfer of previous successful adaptations to the context of a new work-flow in order to adapt it to changed requirements [11].
Workflow sharing requires that users are enabled to ac-tively control the access rights to their workflows. In CAKE, all resources can be managed and controlled by their users. The resource model implemented in the storage layer [7] ensures that any stored resource (a workflow, a task, a doc-ument, and any further workflow related resources) is ac-cessible and possesses a clear ownership. The access control mechanism is a decentralized discretionary access control with subject-object relationships specified in access control lists. In this context decentralized means that a user can transfer access rights to another subject or a group of sub-jects. The basic idea is that every resource (a workflow, a task, a document, and any further resources) in the system has a dedicated owner who is allowed to manage the ac-cess rights for the resource (read, write and execute). This way, workflows can be shared and reused among an online community. The access control mechanism of CAKE is a workflow specific concept. The overall CAKE software is implemented in JAVA as Web-based system running as a SaaS. The client user inter-faces are implemented using the Google Web Toolkit (GWT) 2 enabling access to all workflow related functions such as workflow modeling, execution, similarity-based retrieval, and adaptation using a standard browser (see Fig. 2). Further, the CAKE Server API also allows mobile applications to directly connect to CAKE, e.g., to support the mobile exe-cution of tasks on an Android-based device.

A running live demonstrator of CAKE will be shortly ac-cessable via the CAKE website. Further, the CAKE soft-ware will become publicly available under the AGPL V3 Open Source Licence.
Several applications domains for CAKE have been ex-plored recently, some of which are now briefly described.
Construction industry is characterized by complex pro-cesses, a variety of involved parties, as well as a high degree of agility. Changes to already planned processes and reas-signments of activities are daily business. We assume that integrated process and knowledge management as provided by CAKE can lead to significant productivity benefits in this domain. It can support the inherent agility of the processes by enabling changes to already running construction work-flows as they are required. It can support their execution and provides up to date information about their current sta-tus. Repositories of collected best-practice workflows (e.g. representing procedures for specific or novel crafting activi-ties) can be used as a basis for defining a good workflow to follow.

We are particularly investigating the subfield of deficiency management in construction, which is very important and challenging due to the high degree of agility [5]. For instance, a construction company receives an email from a customer notifying a certain facade crack and requesting remedy un-der warranty. An employee records the reported deficiency by extracting the customer data from the email, determining http://www.gwtproject.org/ the type of the crack. Based on this information, the em-ployee searches the workflow repository managed by CAKE and selects a workflow appropriate for processing deficien-cies. The first step of the workflow invokes the approval of whether the notified deficiency is formally eligible for rem-edy under warranty. An employee qualified to take this deci-sion is assigned and she receives the approval request on her task list, together with the relevant information to take the decision. After approval, the customer is informed by an automatically generated email, triggered by a subsequent workflow task. In parallel, a construction manager who is just at another construction site receives a work order asking him to perform a visual inspection of the facade crack. The construction manager uses the mobile CAKE app running on his mobil phone 3 . He makes a brief detour to investigate the facade crack and documents it by photos captured and se-mantically annotated by the mobile CAKE app. Supported by the CAKE knowledge engine, he selects a workflow ap-propriate for repairing the specific kind of crack and starts this new workflow. The office employee responsible for the coordination of all employees recognizes the new workflow and assigns the first task to a plasterer who is currently working near by. The plasterer receives the work order on his mobile CAKE app. He fixes the crack according to the procedure described. With a short report and a photo he documents the deficiency repair via the app.
Social Workflows are a new research area [9, 6] which deals with the utilization of workflow technology to provide ben-efit to private persons. The idea is based on the fact that more and more online services arise in the Internet and are used by people for their private purposes. Today, people are used to install new apps on their mobile phones or tablets and thereby rely on connected online services to solve real-world tasks. Actually, there is no possibility to link such services to form a flow of activities, although the complex goals of private persons require a detailed planning of several tasks to be done, involving different people such as friends or professionals. With CAKE we investigate the idea of transferring the workflow concept to address this issue.
An example scenario that mostly everyone has faced al-ready is moving to a new city. It requires searching available apartments first, then selecting potentially appropriate ones, making appointments with the landlord, visiting the apart-ment, and taking a decision. Meanwhile, information about the quality of the city district are collected, appointments must be scheduled, and information about the local infras-tructure are regarded. These additional steps can be done with an online enquiry about the city district, a calendar tool, and an online map service showing near-by supermar-kets, bus lines, or restaurants. A social workflow integrates these online services and provides apartment listings of local newspapers and magazines in an aggregated form. CAKE enables the execution of social workflows by invoking online services and integrating private persons by the inclusion of Facebook users. This way experts, friends, or volunteers can be included in the execution of a social workflow and people can conjointly solve problems or reach goals. Regarding this collaboration, the ability of CAKE to share, discover, and
A short demo video of the CAKE mobil app is available at https://www.youtube.com/watch?v=iLEA0kitodY . reuse workflows is especially meaningful for the creation of an online community.
The third application example is from the of cooking. In this domain a cooking recipe is represented as a workflow de-scribing the instructions for cooking a particular dish. To-day, cooking recipes are widely available in Internet com-munities. In CAKE, we developed a specific information ex-traction approach to automatically transform textual cook-ing recipes into formal workflow representations [17]. These workflows are enriched by semantic annotations referencing to ontological knowledge of ingredients and cooking steps. CAKE can provide a step-by-step approach to cooking, but more interestingly we focus on the selection and adaptation of cooking workflows based on user preferences as well as specific requirements and restrictions.

In this context, the POCBR knowledge engine of CAKE is essential as it provides methods to retrieve and to adapt workflows. While traditional recipe repositories solely re-gard ingredients, categories or recipe names during recipe search, CAKE is able to consider additional knowledge such as required cooking tasks, difficulty level, costs, resource consumption, available tools, and diaries. Regarding this knowledge, CAKE retrieves the most suitable recipe work-flow. However, as users have different preferences, the adap-tation of the workflow from the repository might be required, e.g. by adding an additional ingredient or modify tasks due to limited preparation tools available [12]. CAKE sup-ports this process by automatically adapting workflows to the users X  needs, which particularly supports inexperienced cooks to prepare personally optimized dishes. The presented work is partially funded by Stiftung Rheinland-Pfalz f  X  ur Innovation under grant 974 and by the German Research Foundation (DFG) under grant BE1373/3-1. [1] A. Aamodt and E. Plaza. Case-Based Reasoning: [2] R. Bergmann. Experience Management: Foundations, [3] R. Bergmann and Y. Gil. Similarity assessment and [4] David Hollingsworth. The workflow reference model, [5] S. Gessinger and R. Bergmann. Potentialanalyse des [6] S. G  X  org and R. Bergmann. Social workflows: Vision [7] S. G  X  org, R. Bergmann, S. Gessinger, and M. Minor. A [8] S. G  X  org, R. Bergmann, S. Gessinger, and M. Minor. [9] S. G  X  org, R. Bergmann, M. Minor, S. Gessinger, and [10] K. Maximini and M. Schaaf. The PROGEMM [11] M. Minor, R. Bergmann, and S. G  X  org. Case-based [12] M. Minor, R. Bergmann, S. G  X  org, and K. Walter. [13] M. Minor, S. Montani, and J. A. Recio-Garcia. [14] M. Minor, D. Schmalen, A. Koldehoff, and [15] M. Minor, A. Tartakovski, D. Schmalen, and [16] M. Reichert and P. Dadam. ADEPT-Supporting [17] P. Schumacher, M. Minor, K. Walter, and [18] I. J. Taylor, E. Deelman, and D. B. Gannon.
 [19] B. Weber and W. Wild. An Agile Approach to
