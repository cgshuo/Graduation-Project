 In this paper, we develop a system for the task of predicting the grammaticality of sentences, and present a dataset of learner sentences rated for grammaticality. Such a system could be used, for example, to check or to rank outputs from systems for text summarization, natural language genera-tion, or machine translation. It could also be used in educational applications such as essay scoring.
Much of the previous research on predicting grammaticality has focused on identifying (and possibly correcting) specific types of grammati-cal errors that are typically made by English lan-guage learners, such as prepositions (Tetreault and Chodorow, 2008), articles (Han et al., 2006), and collocations (Dahlmeier and Ng, 2011). While some applications (e.g., grammar checking) rely on such fine-grained predictions, others might be better addressed by sentence-level grammaticality judgments (e.g., machine translation evaluation).
Regarding sentence-level grammaticality, there has been much work on rating the grammatical-ity of machine translation outputs (Gamon et al., 2005; Parton et al., 2011), such as the MT Quality Estimation Shared Tasks (Bojar et al., 2013,  X  6), but relatively little on evaluating the grammatical-ity of naturally occurring text. Also, most other re-search on evaluating grammaticality involves arti-ficial tasks or datasets (Sun et al., 2007; Lee et al., 2007; Wong and Dras, 2010; Post, 2011).

Here, we make the following contributions.  X  We develop a state-of-the-art approach for  X  We create a dataset of grammatical and un-We created a dataset consisting of 3,129 sentences randomly selected from essays written by non-native speakers of English as part of a test of English language proficiency. We oversampled lower-scoring essays to increase the chances of finding ungrammatical sentences. Two of the au-thors of this paper, both native speakers of English with linguistic training, annotated the data. We refer to these annotators as expert judges. When making judgments of the sentences, they saw the previous sentence from the same essay as context. These two authors were not directly involved in development of the system in  X  3.

Each sentence was annotated on a scale from 1 to 4 as described below, with 4 being the most grammatical. We use an ordinal rather than bi-nary scale, following previous work such as that of Clark et al. (2013) and Crocker and Keller (2005) who argue that the distinction between grammati-cal and ungrammatical is not simply binary. Also, for practical applications, we believe that it is use-ful to distinguish sentences with minor errors from those with major errors that may disrupt communi-cation. Our annotation scheme was influenced by a translation rating scheme by Coughlin (2003).
Every sentence judged on the 1 X 4 scale must be a clause. There is an extra category ( X  X ther X ) for sentences that do not fit this criterion. We exclude instances of  X  X ther X  in our experiments (see  X  4). 4. Perfect The sentence is native-sounding. It has no grammatical errors, but may contain very mi-nor typographical and/or collocation errors, as in
Example (1). (1) For instance, i stayed in a dorm when i 3. Comprehensible The sentence may contain one or more minor grammatical errors, includ-ing subject-verb agreement, determiner, and mi-nor preposition errors that do not make the mean-ing unclear, as in Example (2). (2) We know during Spring Festival, Chinese  X  X hinese family X , which could be corrected to  X  X hinese families X ,  X  X ach Chinese family X , etc., would be an example of a minor grammatical er-ror involving determiners. 2. Somewhat Comprehensible The sentence may contain one or more serious grammatical errors, including missing subject, verb, object, etc., verb tense errors, and serious preposition errors. Due to these errors, the sentence may have multiple plausible interpretations, as in
Example (3). (3) I can gain the transportations such as buses 1. Incomprehensible The sentence contains so many errors that it would be difficult to correct, as in Example (4). (4) Or you want to say he is only a little boy do
The phrase  X  X o not everything X  makes the sen-tence practically incomprehensible since the sub-ject of  X  X o X  is not clear.
 O. Other/Incomplete This sentence is incom-plete. These sentences, such as Example (5), ap-pear in our corpus due to the nature of timed tests. (5) The police officer handed the
This sentence is cut off and does not at least in-clude one clause.

We measured interannotator agreement on a subset of 442 sentences that were independently annotated by both expert annotators. Exact agree-ment was 71.3%, unweighted  X  = 0 . 574 , and Pearson X  X  r = 0 . 759 . 1 For our experiments, one expert annotator was arbitrarily selected, and for the doubly-annotated sentences, only the judg-ments from that annotator were retained.

The labels from the expert annotators are dis-tributed as follows: 72 sentences are labeled 1; 538 are 2; 1,431 are 3; 978 are 4; and 110 are  X  X  X . We also gathered 5 additional judgments using category and any sentences that had been marked as such by the expert annotators. We used 100 (3.2%) of the judged sentences as  X  X old X  data in Crowdflower to block contributors who were not following the annotation guidelines. For those sentences, only disagreements within 1 point of the expert annotator judgment were accepted. In preliminary experiments, averaging the six judg-ments (1 expert, 5 crowdsourced) for each item led to higher human-machine agreement. For all experiments reported later, we used this average of six judgments as our gold standard.

For our experiments (  X  4), we randomly split the data into training (50%), development (25%), and testing (25%) sets. We also excluded all instances labeled  X  X ther X . These are relatively uncommon and less interesting to this study. Also, we believe that simpler, heuristic approaches could be used to identify such sentences.
 We use  X  X UG X  ( X  X rammatical X  versus  X  X n-Grammatical X ) to refer to this dataset. The dataset is available for research at https://github. com/EducationalTestingService/ gug-data . This section describes the statistical model (  X  3.1) and features (  X  3.2) used by our system. 3.1 Statistical Model We use ` 2 -regularized linear regression (i.e., ridge regression) to learn a model of sentence grammat-
To tune the ` 2 -regularization hyperparameter  X  , the system performs 5-fold cross-validation on the data used for training. The system evaluates  X   X  highest cross-validation correlation r . 3.2 Features Next, we describe the four types of features. 3.2.1 Spelling Features Given a sentence with with n word tokens, the model filters out tokens containing nonalpha-betic characters and then computes the num-ber of misspelled words n miss (later referred to as num misspelled ), the proportion of mis-tures. To identify misspellings, we use a freely 3.2.2 n -gram Count and Language Model Given each sentence, the model obtains the counts of n -grams ( n = 1 ... 3 ) from English Gigaword  X   X  max  X  min where S n represents the n -grams of order n from the given sentence. The model computes the fol-lowing features from a 5 -gram language model trained on the same three sections of English Gi-gaword using the SRILM toolkit (Stolcke, 2002):  X  the average log-probability of the  X  the number of out-of-vocabulary words in the
Finally, the system computes the average log-probability and number of out-of-vocabulary words from a language model trained on a col-lection of essays written by non-native English 3.2.3 Precision Grammar Features Following Wagner et al. (2007) and Wagner et al. (2009), we use features extracted from preci-sion grammar parsers. These grammars have been hand-crafted and designed to only provide com-plete syntactic analyses for grammatically cor-rect sentences. This is in contrast to treebank-trained grammars, which will generally provide some analysis regardless of grammaticality. Here, the HPSG English Resource Grammar (Copestake
We use a binary feature, complete link , from the Link grammar that indicates whether at least one complete linkage can be found for a sen-tence. We also extract several features from the about unification success or failure and the associ-ated costs. In each instance, we use the logarithm of one plus the frequency. Table 1: Pearson X  X  r on the development set, for our full system and variations excluding each fea-ture type.  X   X  X  X  indicates the full model without the  X  X  X  features. 3.2.4 PCFG Parsing Features We find phrase structure trees and basic depen-dencies with the Stanford Parser X  X  English PCFG model (Klein and Manning, 2003; de Marneffe et  X  the parse score as provided by the Stan- X  a binary feature that captures whether the top  X  features binning the number of dep rela-Next, we present evaluations on the GUG dataset. 4.1 Feature Ablation We conducted a feature ablation study to iden-tify the contributions of the different types of fea-tures described in  X  3.2. We compared the perfor-mance of the full model with all of the features to models with all but one type of feature. For this experiment, all models were estimated from the training set and evaluated on the development set. We report performance in terms of Pearson X  X  r between the averaged 1 X 4 human labels and un-rounded system predictions.

The results are shown in Table 1. From these results, the most useful features appear to be the n -gram frequencies from Gigaword and whether the link parser can fully parse the sentence. 4.2 Test Set Results In this section, we present results on the held-out test set for the full model and various baselines, summarized in Table 2. For test set evaluations, we trained on the combination of the training and development sets (  X  2), to maximize the amount of training data for the final experiments.

We also trained and evaluated on binarized ver-sions of the ordinal GUG labels: a sentence was labeled 1 if the average judgment was at least 3.5 (i.e., would round to 4), and 0 otherwise. Evaluat-ing on a binary scale allows us to measure how well the system distinguishes grammatical sen-tences from ungrammatical ones. For some ap-plications, this two-way distinction may be more relevant than the more fine-grained 1 X 4 scale. To train our system on binarized data, we replaced the ` -regularized linear regression model with an ` 2 -regularized logistic regression and used Kendall X  X   X  rank correlation between the predicted probabil-ities of the positive class and the binary gold stan-dard labels as the grid search metric (  X  3.1) instead of Pearson X  X  r .

For the ordinal task, we report Pearson X  X  r be-tween the averaged human judgments and each system. For the binary task, we report percentage accuracy. Since the predictions from the binary and ordinal systems are on different scales, we in-clude the nonparametric statistic Kendall X  X   X  as a secondary evaluation metric for both tasks.
We also evaluated the binary system for the or-dinal task by computing correlations between its estimated probabilities and the averaged human scores, and we evaluated the ordinal system for the
We compare our work to a modified version of which performed very well on an artificial dataset. To our knowledge, it is the only publicly available system for grammaticality prediction. It is very different from our system since it relies on par-tial tree-substitution grammar derivations as fea-tures. We use the feature computation components of that system but replace its statistical model. The system was designed for use with a dataset consist-ing of 50% grammatical and 50% ungrammatical sentences, rather than data with ordinal or continu-ous labels. Additionally, its classifier implementa-tion does not output scores or probabilities. There-fore, we used the same learning algorithms as for our system (i.e., ridge regression for the ordinal
To create further baselines for comparison, we selected the following features that represent ways one might approximate grammaticality if a comprehensive model was unavailable: whether the link parser can fully parse the sentence ( complete link ), the Gigaword language model score ( gigaword avglogprob ), and the number of misspelled tokens ( num misspelled ). Note that we expect the number of misspelled tokens to be negatively correlated with grammaticality. We flipped the sign of the misspelling feature when computing accuracy for the binary task.

To identify whether the differences in perfor-mance for the ordinal task between our system and each of the baselines are statistically significant, we used the BC a Bootstrap (Efron and Tibshirani, 1993) with 10,000 replications to compute 95% confidence intervals for the absolute value of r for our system minus the absolute value of r for each of the alternative methods. For the binary task, we used the sign test to test for significant differences in accuracy. The results are in Table 2. In this paper, we developed a system for predict-ing grammaticality on an ordinal scale and cre-ated a labeled dataset that we have released pub-licly (  X  2) to enable more realistic evaluations in future research. Our system outperformed an ex-isting state-of-the-art system (Post, 2011) in eval-uations on binary and ordinal scales. This is the most realistic evaluation of methods for predicting sentence-level grammaticality to date.

Surprisingly, the system from Post (2011) per-formed quite poorly on the GUG dataset. We spec-ulate that this is due to the fact that the Post sys-tem relies heavily on features extracted from au-tomatic syntactic parses. While Post found that such a system can effectively distinguish gram-matical news text sentences from sentences gen-erated by a language model, measuring the gram-maticality of real sentences from language learn-ers seems to require a wider variety of features, including n -gram counts, language model scores, etc. Of course, our findings do not indicate that syntactic features such as those from Post (2011) are without value. In future work, it may be pos-sible to improve grammaticality measurement by integrating such features into a larger system. We thank Beata Beigman Klebanov, Yoko Futagi, Su-Youn Yoon, and the anonymous reviewers for their helpful comments. We also thank Jennifer Foster for discussions about this work and Matt Post for making his system publicly available.
