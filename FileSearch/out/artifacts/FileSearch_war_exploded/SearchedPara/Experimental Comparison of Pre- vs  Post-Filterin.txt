 Recently, methods for generating context-aware recommendations were classified into the pre-filtering, post-filtering and contextual modeling approaches. Although some of these methods have been studied independently, no prior research compared the perfo rmance of these methods to determine which of them is bette r than the others. This paper focuses on comparing the pre-filtering and the post-filtering approaches and identifying which method dominates the other and under which circumstances. Since there are no clear winners in this comparison, we propose an alternative more effective method of selecting the winners in the pre-vs. the post-filtering comparison. This strategy provides analysts and companies with a practical suggestion on how to pick a good pre-or post-filtering approach in an effective manner to improve performance of a context-aware recommender system. H.3.3 [Information Systems]: Info rmation Search and Retrieval Algorithms, Management , Experimentation. Recommender systems, pre-filtering, post-filtering, collaborative filtering. Most of the traditional recommender systems provide recommendations of items to users and vice versa and do not take into the consideration the circumstances and other contextual information when the recommendations take place. In academia, several studies, such as [5], demonstrated that context induces important cha nges in a customer purchasing behavior. Experimental research on customer modeling suggests that including context in a cust omer behavior model improves predictions of her behavior and allows identification of more homogeneous patterns of customer X  X  purchasing history [9]. In the field of recommender systems (RSs), several scholars have shown that adding contextual information helps to improve performance of RSs. Some studies focus on the way context should be included in a RS [4]. [2] described a way to include the contextual information by using a multidimensional approach to recommendations, in which the traditional 2-dimensional User/Item paradi gm was extended to support additional dimensions capturing context. However, very few experimental studies comparing the context-based with the non-contextual approaches have been done so far. Two exceptions are [1] and [8]. In [3], two different algorithmic paradigms for incorporating contextual information into RSs are presented: 1. Contextual pre-filtering (PreF): contextual information is 2. Contextual post-filtering (PoF): contextual information is However, [3] did not examine which of these two methods is more effective for providing contextual recommendations, and we address this important question in this paper. Traditionally, RSs deal with users (e.g., customers) and items (e.g., products). First, each user ra tes the items that she has seen in the past, indicating how much she liked these items. Literature suggests that ratings ma y be either explicit or implicit and that it is possible to obtain implicit ratings from purchasing behavior of customers [7]. In many real-world applications (e.g., e-commerce), it is easier to collect and work with purchasing information, such as purchasi ng frequencies or time spent on a web page, than ratings explicitly provided by customers. In this paper, we follow this approach and use purchasing frequencies x of product j bought by user i as implicit ratings of that product provided by the user. Based on the known ratings, a classical RS tries to estimate the ratings of the yet unseen items for each user. This approach is extended to the contextual recommenders, where the contextual information is added so that the rating function R is defined as: where Users and Items are the sets of users and items, Ratings is a discrete and finite set of ratings, and Context is a set of contextual attributes K that can have an elaborate structure [1]. One of the main tasks of RSs is to make function R total by estimating the unknown ratings. Although the structure of attributes K can be quite complex in general, in this paper we assume that domain K is defined by a set of q attributes K = (K ,..., K q ) having a hierarchical structure associated with it. The values taken by attribute K q define finer levels, while K coarser levels of contextual knowledge. For DB1, the contextual attribute K is  X  X he period of the year X  in which a customer makes a purchase on an e-commerce portal. For DB2 K is  X  X he intent of a purchase X  made by a customer. Different periods of the year or different purchasing intents may lead to different This short paper has more extende d version that is available as Technical Report n. 1/2009 from DIMEG -Politecnico di Bari types of behavior. For instance, a customer may spend more in Winter during Christmas and less dur ing the rest of the year or change the product categories and the frequency of purchase. We used user-based collaborative filtering for the standard (2D) rating estimation purposes before (after) the contextual pre-(post-) filtering methods are applied due to its popularity. According to the pre-filtering approach [3], the contextual information is used as a label fo r filtering out those ratings that do not correspond to the specified contextual information. This is done before the main reco mmendation method is launched on the remaining selected data. In other words, if a particular context of interest is k , then this method selects from the initial set of all the ratings only those referring to a specified context k, and it generates the Users  X  Items matrix containing only the data pertaining to context k . After that, the RS method is launched on this remaining reduced dataset in order to obtain the recommendations referred to context k . There are different types of pre-filtering, such as exact pre-filtering (EPF) and generalized pre-filtering . EPF selects all the transactions referred to the exactly specified context (e.g., purchase made in winter 2008), while generalized pre-filtering selects all the transactions referred to a specific context based on the generalization of the contextual information [3]. Note that the EPF is uniquely defined by context k . According to the post-filtering approach [3], we have used the contextual information after the main 2D recommenda tion method is launched. Once the unknown ratings are estimated and the recommendations are produced, the system analyzes data for a given user in a given context to find specific item usage patterns and uses them to  X  X ontextualize X  the recommendations obtained using the 2D recommendation method, such as collaborative filtering. Note that there exist many different post-filtering methods for contextualizing 2D recommendations . For example, consider the following two methods, Weight and Filter : Weight reorders the recommended items by weighting the predicted rating with the probability of relevance in the specific context, while Filter filters out recommended items that have small probability of relevance in the specific context. Both approaches analyze data for a given user in a given context to calculate a contextual probability P k (i,j) , with which the i -th customer purchases the j -th item in context k . After that, the recommendations obtained using the 2D method are  X  X ontextualized X  by using P which is computed as the num ber of neighbors (customers similar to i ) who purchased the same item in the same context divided by the total number of neighbors. We identified this neighborhood by using the cosine similarity applied only to transactions pertaining to context k . The neighborhood size was set at 80 customers. This size was selected experimentally because the performance did not improve significantly if the size was increased. The approaches differ in how recommendations are contextualized: Weight PoF multiplies each 2D rating by P k (i,j) : R ating i j Rating i j P i j = X  whereas Filter PoF filters 2D ratings out based on a threshold value of P k (i,j) : Rating i j where P* is the threshold value. We varied the threshold value from 0.9 to 0.1 and we obtained the best results for P* = 0.1. The experimental comparisons of the pre-and post-filtering methods were performed on two different datasets. The first dataset (DB1) comes from an e-commerce portal which sells electronic products to approxima tely 120,000 users and contains about 220,000 transactions. For th is dataset, we selected TimeOfTheYear as a contextual variable. We excluded the customers having few transac tions and exhibiting abnormal behavior. The final dataset had about 1,500 users and 10,000 transactions. The second datase t (DB2) contains purchasing transactions performed by stude nts on an Amazon website in a controlled environment that also recorded the contextual information of the purchases via a special-purpose browser developed by us for the project [9]. Once a product was selected, the browser recorded th e transaction together with the context specified by the student via an API. The key contextual information elicited from the st udents by our browser was the intent of a purchase. We excluded the students from DB2 who made less than 40 transactions and who had any kind of misleading or abnormal behavior. The resulting number of students was 556, and the total number of transactions was 31,925. We used product categories instead of single items in our studies because our applications had huge numbers of items and conversions from implicit to exp licit ratings would not work due to the low amounts of rated data if single items were used. We experimentally found that the best aggregations of items are for 14 categories for DB1 and 24 categories for DB2. The customers X   X  X atings X  of vari ous products were approximated with the frequencies of purchas es of these products by the customers, as explained in S ection 2. Estimations of unknown ratings were done with the sta ndard user-based collaborative filtering method (CF) using the cosine similarity distance. When comparing the pre-and the post-filtering methods, we used the two post-filtering approaches ( Weight and Filter ) described above. For the pre-filtering case, we used the exact pre-filtering ( EPF ) method described above. We also used the same user-based CF method for estimating unknown ratings in both the pre-and the post-filtering. In summary, in this study we compare EPF with the Weight and Filter methods to determine if one dominates the other and under which circumstances . The experiments were performed for all the contextual levels. Further, we have performed t-te sts to understand if the chosen contextual variables matter. To do this, we split the ratings based on the values of the contextual variable (e.g. winter/summer, gift/personal) and performed the pairwise t-tests [6] to see if there are statistically significant differences in the ratings. The results of these tests demonstrated that there were 95% statistically significant differen ces in the rating populations for contextual variables TimeOfTheYear and IntentOfPurchase at K1 and K2 levels, meaning that these two contexts do matter. Finally, we used F-Measure and Mean Absolute Error ( MAE ) as the performance measures in our experiments, as done in [1]. In order to compute the F-Measur e we set a threshold between relevant and irrelevant items, assuming that if an item was purchased more than once, it is relevant and we would recommend such a predicted item. If the recommended item was actually purchased in the validation set, we counted it as a correct recommendation, otherw ise as a bad recommendation. We divided each dataset into the training and validation sets, containing 2/3 and 1/3 of the w hole dataset, respectively. As explained in Section 3, the comparison of the pre-and the post-filtering methods may significantly depend on the type of the post-filtering method used. Figure 1 shows the comparison between the two post-filtering ( Weight PoF and Filter PoF ) and the exact pre-filtering ( EPF ) methods and shows that Filter PoF dominates EPF for DB1 and DB2 across each contextual level. In contrast, EPF dominates the Weight PoF method in our experiments. Therefore, we conclude that the answer to the question of which method (pre-or post-filtering) is better, depends on the type of the post-filtering method used and it is not the case that pre-filtering uniformly dominates post-filtering or vice versa. Therefore, it is not clear whether the pre-or the post-filtering recommendation method should always be used. A direct way to answer this question is an exhaustive comparison of all (or most of) the post-filtering methods with EPF . However, this is a very time-c onsuming task involving extensive experimentation that should be us ed only as the last resort. We present a more practical approach in the next section. In this section, we advocate a better approach to comparing pre-vs. post-filtering that involves the un-contextual CF method. First, unlike the pre-vs. the post-filtering case,  X  X ood X  contextual post-filtering (PoF) methods dominate the un-contextual methods for the following reason. The post-filtering method uses the same 2D recommendation approach as the un-contextual CF. Then the resu lts are improved further by subsequently applying the contex tual (post-) filtering. This observation is confirmed by our experiments summarized in Figure 2 comparing the Filter PoF (the  X  X ood X  contextual post-filtering) and the un-contextual recommendations for datasets DB1 and DB2 using F-measure acro ss all the contextual levels. As we can see, post-filtering dom inates the un-contextual case across all the levels of context: for DB1, the performance difference is 6% on average, while for DB2 it is 11%. This substantial performance improvement , confirms our prior claim. In contrast to this, it is not clear whether pre-filtering dominates the un-contextual case. The answer depends on several criteria, including the granularity of context. In some cases, introduction of a very granular context increases the sparsity of the User  X  Item matrix, and leads to the reduction in performance. To demonstrate the tradeoffs be tween these two methods, we conducted experiments a nd demonstrated in Figure 3 that the un-contextual method dominates the contextual pre-filtering in some cases and is inferior in other cases. In particular, Figure 3(a) shows that EPF outperforms the un-contextual method in terms of F-measure in one cas e out of two at the level K two cases out of four at the level K 2 . Also, according to Figure 3(b), EPF and the un-contextual methods have nearly the same performance. Based on this, we propose the following approach to selecting when to use the pr e-vs. the post-filtering methods. First, compare pre-filtering with the un-contextual method. If the un-contextual method outperforms pre-filtering, do not consider pre-filtering (since it is inferior), focus only on post-filtering, and select one of the  X  X easonable X  post-filtering methods (e.g., Filter PoF). If however pre-filtering dominates the un-contextual case, then choose between th e following two alternatives: 1. use pre-filtering to achieve  X  X easonable X  results (because 2. use post-filtering, but go for the best PoF method because In our experiments, the performance gain can increase by 30% (referred to the F-measure of Weight PoF compared to Filter PoF in context  X  X ersonal work X , as in Figure 1), which may be considered not marginal. Howeve r, this evaluation should be done according to the specific application considered. In our case, we can see from Figure 3 that the EPF pre-filtering outperforms the un-contextual case in terms of F-Measure in some settings, while in other se ttings the un-contextual method outperforms the pre-filtering approach. In the latter case, we can choose to use just the pre-filtering approach in order to achieve  X  X easonable X  but not the best results . Otherwise, if we want to achieve results which are better than the un-contextual case, we can try to find the best post-filtering that works well for our problem. In fact, only a  X  X easonable X  post-filtering ( Filter PoF in our case) outperforms the un-contextual method. In this paper, we compared the pre-and the post-filtering approaches to generating contextual recommendations. In particular, we used the exact pre-filtering ( EPF ) for the former and the Weight and the Filter post-filtering methods for the latter approaches. We compared these methods across two datasets and various other experi mental settings and showed that the Filter method dominates EPF and that EPF dominates the Weight method on 2 datasets. This implies that the comparison of the pre-and the post-filtering approaches depends very significantly on the type of the post-filtering method used. This also implies that, in order to decide which approach should be used in a particular recommenda tion application, various post-filtering methods should be compared with the pre-filtering approach, which is a laborious and a time consuming strategy. To overcome this problem, we al so proposed a more practical and effective way to decide on whether the pre-or the post-filtering methods should be deployed in a specific application. In particular, we propose, first, to compare the pre-filtering with the un-contextual filtering methods. If the un-contextual case dominates pre-filtering, then we argue that good post-filtering approaches should be better than pre-filtering. Otherwise, either choose the pre-filtering as a  X  X ui ck X  and reasonable solution, or try to identify the best-performing post-filtering methods as a more expensive but a potentially better alternative. [1] Adomavicius, G., Sankarana rayanan, R.,Sen, S., and [2] Adomavicius, G., and Tuzhilin, A. 2001. Multidimensional [3] Adomavicius, G., and Tuzhilin, A. 2008. Context-Aware [4] Anand, A., and Mobasher, B. 2007. Contextual [5] Bettman, J.R., Luce, M.F, and Payne, J.W. 1998. [6] Kachigan, S.C. 1986 Statistical Analysis. Radius Press. [7] Nichols, D.M. 1998. Implic it rating and filtering. In [8] Oku, K., Nakajima, S., Miyazaki, J. and Uemura, S., 2006. [9] Palmisano, C., Tuzhilin, A., and Gorgoglione, M. 2008. 
