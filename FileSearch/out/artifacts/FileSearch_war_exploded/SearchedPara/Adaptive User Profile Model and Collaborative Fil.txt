 creates a need for automatic news recommendation to cater to individual user X  X  taste. 
According to previous studies [1][2], user X  X  interests consist of preferences in mul-these two kinds of interests actually consist of interests at different levels. 
The key problem of personalized news recommendation is to find a proper way to neither the traditional memory-based algorithms nor the prevalent model-based meth-ods have taken user similarity at different interest level into account. ture will be dynamically modified to adapt to user interests changes. Second, accord-both CBF and CF methods. clusion and future work are presented in Section 7. [1][2] or in hierarchical representations [3][4][5]. ests more precisely. 
The hierarchical structure in [3] [5] formalizes a general to specific relationship on concept categories. Only the content of this model can be changed to adapt to user X  X  the hierarchy. In PVA [3], both the cont ent and the structure are changeable. How-ever, the construction of this profile and the way it changes must follow a predefined global structure. The common limitation of the above two systems is that user X  X  most events are more precise description of their interests. A unique thinking of hierarchical user profile model is proposed by Nanas et al [4]. to human knowledge [12]. 
Many works within CF field have been proposed to utilize information from multi-of them have considered computing user similarity from hierarchical profile structure. In this section, we will introduce an adaptive user profile model which can model user learned and utilized for prediction. 3.1 Model Description As illustrated in Figure 1, this model consists of two layers, one layer with fixed con-cept categories, and the other with dynamic event nodes. 
The category hierarchy is fixed and common for different users while the dynamic Nodes (LCN). 3.2 Profile Representation Our method considers two important aspects of user X  X  interests: what he/she is inter-ested in (content) and to what extent he/she is interested in (vitality). 3.2.1 Content Representation We apply the traditional vector space model (VSM) to describe both profile nodes and weight is defined by TF-IDF method for its appropriateness in an online system. odically to reflect its decaying impact on user X  X  interests. The classic Rocchio method is utilized to update the term weights incrementally. is the decaying factor for node content. 
The noniterative version of (1) is weights and the term weights of newly inserted news documents. Decaying factor  X  tent. 3.2.2 Vitality Representation Besides the term vector, we also assign each node a real number, called energy value , to indicate the vitality of user X  X  interests on it. the decaying factor for node energy. 
The noniterative version of (3) is life span of user X  X  interests on the node. A node X  X  energy value increases when fresh gradually fade out, indicating that the user is losing interests on it. 3.3 Profile Learning the feedback to keep on par with user X  X  interests. News documents browsed by users both content and structure.
 checked. And this process will be repeated until d is assigned to corresponding LCN node: LCN( d ). The assign algorithm is illustrated in Figure 2. 
After assigning all the user feedback documents, both the content and structure of needed. 
When both the vitality have grown to a certain extent, split will be performed on this node in order to depict user X  X  interests in a more detailed way. 
In our current study, we employ k -means clustering and split the sub-node with the provement can be made by applying advanced event detection approaches like [10]. user X  X  longer-term interests should be preserved in its direct parent: 3.4 Prediction Methodology Based on the user profile, a numeric score will be assigned to each new document to this score, and the top N documents will be delivered to the user. 
The assessment is determined by both its similarity to the node and user X  X  interest following equation: Given the incoming document set document within information from these profiles. 
In the rest of this paper, we will employ MBCF to denote memory-based collabora-tive filtering algorithm, CBCF to denote content-boosted collaborative filtering algo-rithm [11] and PBCF to denote our profile-based collaborative filtering algorithm. 
To solve the sparsity problem, we create a pseudo user-ratings vector u v for every user u . users put together give a dense pseudo ratings matrix V . We then perform collabora-tive filtering using this dense matrix. 
We then apply OGM [12] to calculate user similarity by leveraging the hierarchical description of OGM. 
The top M users with highest similarity to active user a are selected as a neighbor-active user a and users in neighborhood. However, we want to consolidate the confi-Weighting factor a sw . 
The final prediction for active user a is calculated by: Correlation [9] between user a and u . vides users with ranked news stories accord ing to users X  potential interest needs con-can be categorized as a task of Find Good Items [13], which is the core recommenda-tion task and recurs in a wide variety of academic and commercial systems. user-rating of this document is predicted by each user X  X  profile model. After that, our PBCF algorithm will be utilized to compute the final predictions of the document. All ized to update the profile model. In this way, a unified framework combining CBF and our system degenerates to recommendation systems for single user like PVA in [3]. 
From figure 6, we can see that PBCF algorithm utilizes user profile model not only performing CF. The traditional MBCF approach only relies on pure user-ratings, and the CBCF algorithm depends on both user ratings and news content. In this section, we describe the dataset, metrics and methodology for the comparison between different algorithms, and present the results of our experiments. 6.1 Data Set We use proxy log data from ten proxy servers in a university of USA. For our specific statistics of extracted logs is illustrated in table 1. Time Span 2002 3.20 ~ 2002 3.31 Total user (IP) number 10765 News browsing log number (All users) 112060 Unique news page number (All users) 38922 Users* number (Who browsed for more than 8 days) 342 News browsing log number (Users*) 80615 Unique news page number (Users*) 21788 Access number per day p er person (Users*) 19.64 alleviate sparsity, we only select users with more than 8 days news browsing history ( Users* in table 2). 6.2 Evaluation Metrics and Methodologies period, we focus on the prediction accuracy for performance evaluations. formance. The precision function is defined below: Where s N is the number of news documents recommended by our system, document set that the user actually visited in the s N recommended ones. 
To demonstrate the improvement of our algorithms, we design the following ex-periments. 
We run online experiments for MyNews without PBCF and compare it with the baseline algorithm PVA to see the effect of the dynamic structure. 
First, we run online experiments with our dynamic profile and compare it with the baseline: static PVA profile. 
Second, we add PBCF into this framework and compare system performances with prove the over performance. 
Third, we compare PBCF with the baseline MBCF and CBCF algorithms so that we can see the appropriateness of proposed CF algorithm on hierarchically structured profile. 6.3 Data Preprocessing Before starting full experimental evaluation of different algorithms we determined the plots we fixed the optimum values of these parameters and used them for the rest of training and testing sets each time and taking the average Precision values. 6.4 Experiment Results line algorithms and discuss about the reason for the experiment phenomena. 6.4.1 Dynamic Structu re vs. Static Structure randomly select 50 users for test. For each test user, we select 50 news document per day as testing data, including the user X  X  actual accessed pages. And the user X  X  feed-back is generated according to actual proxy logs. We run this experiment on 10 suc-scopes. The experiment result is illustrated in figure 7. tailed manner than PVA. We also find that on day 3, PVA X  X  precisions at all scopes drop dramatically, while MyNews maintains good performance. The reason is that a hot sport event ended and one does not impair user X  X  interests on others. 6.4.2 Profile Model Only vs. Profile Model + PBCF to 20, which is also the default setting for the left experiments. From figure 8, we can see that MyNews with PBCF outperforms MyNews without collaborative filtering algorithm works well since the browsing overlap between users are high. The precision gap between two diff erent scenarios decreas es as the training profile model are purely based on single user X  X  browsing history, and as training data increases, its accuracy will increase corres pondingly. On the other hand, PBCF con-the final prediction will decrease as the pr ecision of pure profile model increases. 6.4.3 Comparison Between PBCF, MBCF and CBCF than those of CBCF and PBCF. This is because its randomicity is greater due to the sparse environment of pure user ratings. 
We can see that PBCF outperforms MBCF and CBCF although the average preci-sions of three CF algorithms are close. change while the CBCF approach needs longer time to follow this change. In this paper, we propose a novel profile model for personalized news recommenda-ommendation accuracy. The future work mainly involves three directions: 
First, we can expect further improvement on the node splitting method in our pro-file model by adopting the state of the art news event detection algorithms [10]. Thus the accuracy of profile-based predictio n will be enhanced correspondingly. 
Second, we can exploit approaches to bu ild a global hierarchy in both category and event levels to utilize hierarchy information in both these levels for better collabora-tive filtering performance. recommendations [14]. 
