 Several researchers from the Information Technology community have thoroughly investigated the problem of integrating the analytic and geographic processing [29-33]. However, much of this work does no more than proposing an operator for the system interface. Moreover, this is an arduous task and deserves some special atten-tion. The main idea is to develop an open and extensible system with the analysis capabilities available in these two technologies. Thus, a geographic processing system [5-8] could take the advantage of the facilities implemented by an analytic tool [1,16], while the latter would receive a considerable gain in aggregating some spatial treat-ment for the geographic dimension. lytic Processing Architecture) [17,18], have been studying a way of providing users with an abstraction of the complexity involved in querying analytic and geographic GOLAPA project and aims to integrate the analytic and geographic services for deci-sion support over the Web. This article presents the GMLA Web Service, which pro-vides operations for performing analytic and/or geographic analysis over a geo-graphic-multidimensional data source. The remainder of this paper is organized as follows. The second section presents a summary of the main related work. The third section outlines the XML and Web services technologies together with a view of some other related standards. In the four section, the integration model namely ISAG is presented. In the section five, some details concerning the GMLA Web Service implementation are given. The section six shows an application of the GMLA Web Service, with some experimental results. Finally, some conclusions regarding this investigation are given in the section seven. A lot of research about the integration of analytic and geographic processing has been found in literature [48-56], but just the following studies have showed to be more relevant to the work given in this paper: MapCube [29], GeoMiner [30], GOAL [31, 57] and SIGOLAP [32, 33]. graphic data and may be seen as a metaphor for an album of maps. MapCube is based on the Cube [58] operator and performs all combinations of aggregation for each data of each Data Warehouse (DW) dimension. The main difference between these two opera-tabular view, whereas the MapCube operator shows the results as both tables and maps. three basic modules. However, just two modules of them can be considered as related work: the module for geo-cubes construction and the one for geographic OLAP . In graphic data cubes: Pointer Intersection and Object Connection. These algorithms provide a means of building analytic and spatial cubes based on the selective materi-alization of a geographic dataset. The specified criteria were: 1) the geo-dataset access graphic cubes. complish the integration between DW / On-Line Analytical Processing (OLAP) and Geographical Information Systems (GIS). To achieve this, Kouba et al. [31,57] have implemented an architecture where the main component used to manage this task is the Integration Module (IM). For the case study presented in [57] the software GT Media98 and ArcView were used together with the MSOLAP server as the OLAP component. Because these tools have different interfaces for communication, the IM While the communication with ArcView was achieved by using Avenue scripts (the na-tive language of ArcView) and Delphi libraries, the communication with MSOLAP was done by implementing an OLE DB for OLAP provider [61] with Visual C++. architecture, which is based on a mediation approach. The implemented case study demonstrates this architecture by using the following technologies: MSOLAP Server; MSAccess and AutoDesk Mapguide Server; SQL Server and Visual Basic, and, Vis-ual Basic Script. With regard to the work discussed above, we shall now conclude that: the Map-Cube approach, just provides multidimensional analytic processing over geographic data without considering the GIS operators (e.g. distance and adjacency). However, despite using proprietary technologies and as a result, preventing them from being multi-platform based approaches and from providing extensibility and data inter-change capabilities, the reminding work discussed above, namely GeoMiner, GOAL and SIGOLAP do integrate SIG and OLAP functionalities. This lack of platform independence can be seen as a motivation for the work given in this paper. This paper presents a XML (eXtensible Markup Language) based approach to provide users with analytic and geographic processing over the Web. The main goal is to provide an environment for decision making that abstracts the complexity involved in simultaneously querying multidimensional and/or geographic data. To overcome the limitations cited in the previous section, we use the Web Services technology, be-with distinct functionalities. Using the Web Services and XML technologies, we have obtained an open and platform independent solution for the analytic and geographic processing integration. the Information Technology research area. XML has become a standard for data pub-new standards to be specified from it, and thus, enables the development of new tech-nologies to be operated in conformity with it. Another technology that has been de-veloped from XML is Web Services [9]. These compose a distributed computational cuted through the Web, and that publish interfaces and connections that are both defined and described in XML. 
In this paper, both the XML and Web Service technologies are considered as es-sential for the processing, interchange and visualization of the analytic and geo-graphic data over the Web. XML for Analysis (XMLA) [13], Web Feature Service (WFS) [15] and Geography Markup Language (GML) [14] are mainly standardized and key technologies, that can be used in the development of Web Services for geo-graphic-multidimensional processing. 
XML For Analysis (XMLA) is one of the open technologies that is available to en-able the OLAP [1] processing over the Web. It is a XML API based on SOAP[11] that has been created as an initiative of the Microsoft Corporation [23] and Hyperion Solutions Corporation [24] to provide an open access for multidimensional databases. This standardized access enables a non-proprietary communication between client applications and OLAP data servers through the Internet. XMLA implementation is based on the Web Services architecture and the description of its service is defined in terms of a WSDL document. XMLA provides two methods for managing their func-stored in a multidimensional OLAP Server. As these methods are invoked through SOAP, the input and output are XML documents. 
The two most important XML based technologies that makes the provision for the geographic data processing over the Web are GML [14] and WFS [15]. GML is the OpenGIS [27] XML Schema for interchanging and storing the descriptive and geo-metric properties of geo-referenced data. GML is based on the abstract model [26] of the OpenGIS consortium and its last stabilized version (i.e. 2.1.2) supports vector geo-data only. Although the GML 3.0 has recently been launched already, this is still under industry evaluation, and for this reason, we have decided to use GML 2.1.2 which is an evaluated and stabilized version. scription of operations used to manipulate geographic features (coded in GML) in a distributed environment through the HTTP protocol. The geographic features are spatial objects that must at least contain one geometric property and may have one or more descriptive properties. Operations for data manipulation include abilities to create, erase, change, obtain or search features based on spatial restrictions (e.g. adja-cency and distance) and on non-spatial criteria (e.g. population &gt;= 800.000 and gen-der = "M"). The recovery of both data and metadata stored in a geographic database is achieved by the use of the following WFS operations: GetCapabilities , DescribeFea-tureType and GetFeature . The spatial, logic, arithmetic and comparison operators, which may be used in a WFS request are described in [25]. XML Schema [22] syntax. Thus, GMLA imports, extends, and integrates the original XML Schemas. With GMLA, the data that had been previously described by two distinct schemas, can now be described and semantically integrated by just one schema. This resulting schema is then used by the GMLA Web Service to describe and validate the geographic-multidimensional data. integration of the analytic and geographic processing. Using them helped in the de-velopment of the GMLA Request Schema, of the integration model and of the GMLA Web Service. These are described in the following sections. Before developing the integration model and the GMLA Web Service for the analytic and geographic services integration, the GMLA Request Schema [37,63] was defined. This XML schema is responsible for the validation of requests that are processed by the GMLA Web Service and, consequently, for the prevention of syntactic errors. The GMLA Request Schema integrates the request syntax of the XMLA and WFS ser-vices and was defined to support the following three query types: MD (Multidimen-sional), GEO (Geographic) and GEOMD (Geographic-Multidimensional). multidimensional expression [28] or a metadata request. When this query type is submitted to the GMLA WS, it delegates this request to the XMLA analytic service just contains geographic parameters, making the GMLA WS to activate the WFS service to produce the needed result. Finally, a GEOMD request contains both ana-lytic and geographic parameters, and in this case, both services (i.e. XMLA and WFS) are processed to obtain a solution satisfying the query. In addition, a GEOMD request can be further classified as follows: 1) Mapping GEOMD, where an analytic request is sent to the GMLA WS and analytic data are displayed on a map, and 2) Integration GEOMD, where analytic and spatial restrictions are specified and used in the request processing. The GMLA Request Schema can be downloaded from http://www.cin. ufpe.br/~golapa/schemas, while some query examples can be downloaded from http://www.cin.ufpe.br/~golapa/gmlaws/requests. the development of a system. In using models, some aspects pertinent to the imple-mentation can be abstracted, enabling a be tter understanding of the main processes that compose a system. tions types, the services integration model named ISAG [37] was specified. This model was specified in UML [36] and defines an activities group to enable the inte-gration of the analytic and geographic processing. of this model are sequentially performed and each execution result is used by the following activity in the sequence, until the processing is completed and the final state is reached. Each model activity has some sub activities, which need to be performed so that the main activity is concluded. 
The ISAG model takes into account the existence of a metadata source, which con-tains information about which analytic data have a geographic correspondence, and about how to recover these correspondences. These are very useful for requests need-ing to either integrate or map the final query results. Data with geographic correspon-dences are considered here as those analy tic data which are associated with some information that represent their geometry. the activity Verify Request Type is performed which classifies the request according to the query types defined by the GMLA Request Schema (i.e. MD, GEO or GEOMD). The next activity is Extract Request Parameters , which extracts some information from the analytic and/or geographic parameters found in the user request. Following this, these parameters are validated by the activity Validate Request Parameters . Next, the analytic and/or geographic services are asked to produce the query results. Following this, for a request of type MD, the activity Request MD Service solves the executed is the Query GEO Service which recovers the geographic information satis-fying the query. Service . Then, the activity Query Metadata is performed. For a mapping GEOMD, the metadata source is used to identify which analytic data have geographic corre-spondences and how to recover these correspondences. After doing this, in the activ-ity Build GEO Request , the GEO query that recovers all geographic correspondences of the analytic members involved in the request is formulated. In the activity Map Results , the resulting document is built, which contains the analytic data together with their corresponding geographic correspondences. If the request is of type integration GEOMD, after querying the metadata source, the next activity is the Query GEO activity Integrate Results , the response document is built, which just contains the quest. GMLA Web Service that will be presented in the next sections. The main components of the GMLA Web Service (i.e. GMLA WS) architecture proposed service (i.e. XMLA) and geographic service (i.e. WFS), both discussed in the third section of this paper. This integration provides users with the capability of executing their geographic-multidimensional requests. 
This enables users to query and analyze geographic and/or multidimensional data stored in a Geographic Data Warehouse (GDW) [19,40-42]. A GDW schema is simi-lar to the traditional Data Warehouse schemas (e.g. star schema) [1-4]. However, the geometries of the geographic data are stored in the GDW as well. 
The metadata source (METADATA) plays an important role in the integration of the XMLA and WFS services. The integration metadata are accessed by the GMLA WS whenever a GEOMD request is received. Thus, the GMLA WS can find out if the analytic data have some geographic correspondences. The metadata source implemen tation has been based on the MOF (MetaObject Facility) [38] specification, by the OMG (Object Management Group) [39] and on the metamodels GAM (Geographical and Analytical Metamodel) and GeoMDM (Geographical Multidimensional Meta-model) presented in [62]. [9]. Thus, the GMLA WS provides a WSDL [21] document with the service descrip-tion and available operations, allowing a client application to be implemented regard-less of the chosen operating system or programming language. may access two other services (i.e. XMLA and WFS), and as a server, because a WSDL interface is provided to allow ot her applications to be developed. Services standard, and made by sending and receiving information coded in a SOAP envelope. On the other hand, the communication between the GMLA WS and the WFS service is achieved by sending and receiving HTTP [12] requests, instead of using the SOAP protocol due to the WFS do not operate according to the Web Ser-vices standard. cording to the GMLA Request Schema, sending these requests to the GMLA WS and then, after obtaining the response document, for graphically displaying the results. XML document is returned as the final result. The structure of this document is de-fined and validated by the GMLA Schema [17]. To illustrate an application for the GMLA WS, the processing of a GEOMD query is demonstrated having both analytic and geographic requests. In this example, the idea grouping the results by country, states and cities. The key issue in this request is that users wish to graphically visualize the result on a map. Then, a query of type mapping GEOMD will be sent to the GMLA WS containing the proper request parameters. processing is performed by the multidimensional service XMLA. 
Following this, the GMLA WS identifies the resulting elements of the multidimen-graphic service to recover all the geographic features that are involved in the correspond-ing query. WS builds a XML document containing the integration of the multidimensional and document are transformed by the GMLA CLIE NT to the Scalable Vector Graphics format (SVG) [43], showing them as a map. The multidimensional data are also sub-mitted to a XSLT processing [47] and visualized in the HTML format. The figure 4 demonstrates this query processing result, where a table with the multidimensional that have geographic correspondences is given at the top. The final graphic result can be visualized in a Web browser with a SVG Plugin [44]. For this case study, the Internet Explorer [45] was used. and 3) Cities. In these themes, all members showed in the multidimensional data table given at the bottom of the browser screen are displayed. To manipulate the data found in these themes, the operations available in the toolbar, located at the top of the web browser screen and above the map, may be used. These available operations include zoom in, zoom out, pan operator, label insertion and exclusion, and presentation of detailed information about each geographic feature found in the map. The interface component that is responsible for graphically showing the geographic data coded the in SVG format is an adaptation of the GeoClient Component of the GeoServer Project [46]. can be sent to the GMLA WS to be processed. However, this processing has not been shown here for the sake of simplicity and limitation of space. The integration between analytic and geographic processing as a single tool provides a wider context for decision support. This is so because it aggregates: the capability of quickly analyzing a large volume of data and the power of visualizing data on maps and running spatial queries. geographic-multidimensional processing. Due to the use of open and extensible tech-nologies, the solutions discussed in this paper are independent from the GOLAPA, and as a result, they may be applied to any other projects aiming at integrating analytic and geographic processing. and analysis of geographic-multidimensional data. The model is based on three request types defined by GMLA Request Schema, which integrates the syntax of both XMLA and WFS services. Also, this model takes into account the use of a metadata source to provide information about the relationships existing between the analytic and geo-graphic data. oping a Web Service namely GMLA WS. This integrates both the XMLA and WFS requests. This system prototype provides an environment that abstracts the complexity found in the joint use of analytic and spatial operators found in decision support queries. Moreover, the GMLA WS provides the visualization of both the analytic and/or geo-Finally, for implementing the system prototype, technologies such as Web Services, GML, SVG, MOF, Java and XML were used to provide an extensible and platform independent solution. 
