 Consider the problem of learning a nonlinear function f ( x ) on a high dimensional space x  X  R d . We are given a set of labeled data ( x 1 ,y 1 ) ,..., ( x n ,y n ) drawn from an unknown underlying distri-bution. Moreover, assume that we observe a set of unlabeled data x  X  R d from the same distribution. If the dimensionality d is large compared to n , then the traditional statistical theory predicts over-fitting due to the so called  X  X urse of dimensionality X . One intuitive argument for this effect is that when the dimensionality becomes larger, pairwise distances between two similar data points become larger as well. Therefore one needs more data points to adequately fill in the empty space. However, for many real problems with high dimensional data, we do not observe this so-called curse of di-mensionality. This is because although data are physically represented in a high-dimensional space, they often lie on a manifold which has a much smaller intrinsic dimensionality.
 This paper proposes a new method that can take advantage of the manifold geometric structure to learn a nonlinear function in high dimension. The main idea is to locally embed points on the manifold into a lower dimensional space, expressed as coordinates with respect to a set of anchor points. Our main observation is simple but very important: we show that a nonlinear function on the manifold can be effectively approximated by a linear function with such an coding under appropriate localization conditions. Therefore using Local Coordinate Coding, we turn a very difficult high dimensional nonlinear learning problem into a much simpler linear learning problem, which has been extensively studied in the literature. This idea may also be considered as a high dimensional generalization of low dimensional local smoothing methods in the traditional statistical literature. We are interested in learning a smooth function f ( x ) defined on a high dimensional space R d . Let k X k be a norm on R d . Although we do not restrict to any specific norm, in practice, one often employs the Euclidean norm (2-norm): k x k = k x k 2 = p x 2 1 +  X  X  X  + x 2 d . Definition 2.1 (Lipschitz Smoothness) A function f ( x ) on R d is (  X , X ,p ) -Lipschitz smooth with  X  k x  X  x 0 k 1+ p , where we assume  X , X  &gt; 0 and p  X  (0 , 1] .
 Note that if the Hessian of f ( x ) exists, then we may take p = 1 . Learning an arbitrary Lipschitz smooth function on R d can be difficult due to the curse of dimensionality. That is, the number of samples required to characterize such a function f ( x ) can be exponential in d . However, in many practical applications, one often observe that the data we are interested in approximately lie on a manifold M which is embedded into R d . Although d is large, the intrinsic dimensionality of M can be much smaller. Therefore if we are only interested in learning f ( x ) on M , then the complexity should depend on the intrinsic dimensionality of M instead of d . In this paper, we approach this problem by introducing the idea of localized coordinate coding. The formal definition of (non-localized) coordinate coding is given below, where we represent a point in R d by a linear combination of a set of  X  X nchor points X . Later we show it is sufficient to choose a set of  X  X nchor points X  with cardinality depending on the intrinsic dimensionality of the manifold rather than d . Definition 2.2 (Coordinate Coding) A coordinate coding is a pair (  X ,C ) , where C  X  R d is a set of anchor points, and  X  is a map of x  X  R d to [  X  v ( x )] v  X  C  X  R | C | such that P v  X  v ( x ) = 1 . It induces the following physical approximation of x in R d :  X  ( x ) = P v  X  C  X  v ( x ) v . Moreover, for all x  X  R d , we define the corresponding coding norm as k x k  X  = P v  X  C  X  v ( x ) 2 1 / 2 . The quantity k x k  X  will become useful in our learning theory analysis. The condition P v  X  v ( x ) = 1 follows from the shift-invariance requirement, which means that the coding should remain the same shown (see the appendix file accompanying the submission) that the map x  X  P v  X  C  X  v ( x ) v is invariant under any shift of the origin for representing data points in R d if and only if P v  X  v ( x ) = 1 . The importance of the coordinate coding concept is that if a coordinate coding is sufficiently localized, then a nonlinear function can be approximate by a linear function with respect to the coding. This critical observation, illustrate in the following linearization lemma, is the foundation of our approach. Due to the space limitation, all proofs are left to the appendix that accompanies the submission.
 Lemma 2.1 (Linearization) Let (  X ,C ) be an arbitrary coordinate coding on R d . Let f be an (  X , X ,p ) -Lipschitz smooth function. We have for all x  X  R d : To understand this result, we note that on the left hand side, a nonlinear function f ( x ) in R d is ap-is the set of coefficients to be estimated from data. The quality of this approximation is bounded by the right hand side, which has two terms: the first term k x  X   X  ( x ) k means x should be close to its physical approximation  X  ( x ) , and the second term means that the coding should be localized. The quality of a coding  X  with respect to C can be measured by the right hand side. For convenience, we introduce the following definition, which measures the locality of a coding.
 Definition 2.3 (Localization Measure) Given  X , X ,p , and coding (  X ,C ) , we define Observe that in Q  X , X ,p ,  X , X ,p may be regarded as tuning parameters; we may also simply pick  X  =  X  = p = 1 . Since the quality function Q  X , X ,p (  X ,C ) only depends on unlabeled data, in principle, we can find [  X ,C ] by optimizing this quality using unlabeled data. Later, we will consider simplifications of this objective function that are easier to compute.
 Next we show that if the data lie on a manifold, then the complexity of local coordinate coding depends on the intrinsic manifold dimensionality instead of d . We first define manifold and its intrinsic dimensionality. Definition 2.4 (Manifold) A subset M  X  R d is called a p -smooth ( p &gt; 0 ) manifold with intrinsic dimensionality m = m ( M ) if there exists a constant c p ( M ) such that given any x  X  M , there c ( M ) k x 0  X  x k 1+ p .
 This definition is quite intuitive. The smooth manifold structure implies that one can approximate a point in M effectively using local coordinate coding. Note that for a typical manifold with well-defined curvature, we can take p = 1 .
 Definition 2.5 (Covering Number) Given any subset M  X  R d , and &gt; 0 . The covering number, denoted as N ( , M ) , is the smallest cardinality of an -cover C  X  M . That is, For a compact manifold with intrinsic dimensionality m , there exists a constant c ( M ) such that its covering number is bounded by N ( , M )  X  c ( M )  X  m . The following result shows that there exists a local coordinate coding to a set of anchor points C of cardinality O ( m ( M ) N ( , M )) such that any (  X , X ,p ) -Lipschitz smooth function can be linearly approximated using local coordinate coding up to the accuracy O ( p m ( M ) 1+ p ) .
 Theorem 2.1 (Manifold Coding) If the data points x lie on a compact p -smooth manifold M , and there exist anchor points C  X  X  and coding  X  such that | C | X  (1+ m ( M )) N ( , M ) , Q  X , X ,p (  X ,C )  X  [  X c p ( M )+(1+ p m ( M )+2 1+ p p m ( M ))  X  ] 1+ p . Moreover, for all x  X  X  , we have k x k 2  X   X  1 + (1 + p m ( M )) 2 .
 The approximation result in Theorem 2.1 means that the complexity of linearization in Lemma 2.1 depends only on the intrinsic dimension m ( M ) of M instead of d . Although this result is proved for manifolds, it is important to observe that the coordinate coding method proposed in this paper does not require the data to lie precisely on a manifold, and it does not require knowing m ( M ) . In fact, similar results hold even when the data only approximately lie on a manifold.
 In the next section, we characterize the learning complexity of the local coordinate coding method. It implies that linear prediction methods can be used to effectively learn nonlinear functions on a manifold. The nonlinearity is fully captured by the coordinate coding map  X  (which can be a nonlinear function). This approach has some great advantages because the problem of finding local coordinate coding is much simpler than direct nonlinear learning: In machine learning, we minimize the expected loss E x,y  X  ( f ( x ) ,y ) with respect to the underlying distribution within a function class f ( x )  X  F . In this paper, we are interested in the function class F  X , X ,p = { f ( x ) : (  X , X ,p )  X  Lipschitz smooth function in R d } .
 The local coordinate coding method considers a linear approximation of functions in F  X , X ,p on the data manifold. Given a local coordinate coding scheme (  X ,C ) , we approximate each f ( x )  X  X  a  X , X ,p as: where g ( v ) is an arbitrary function assumed to be pre-fixed. In the Bayesian interpretation, this can be regarded as the prior mean for the weights [ w v ] v  X  C . The default values of g ( v ) are simply we only consider convex Lipschitz loss function, where |  X  0 1 ( p,y ) |  X  B . This includes the standard classification loss functions such as logistic regression and SVM (hinge loss), both with B = 1 . Theorem 3.1 (Generalization Bound) Suppose  X  ( p,y ) is Lipschitz: |  X  0 1 ( p,y ) |  X  B . Consider coordinate coding (  X ,C ) , and the estimation method (1) with random training examples S n = { ( x 1 ,y 1 ) ,..., ( x n ,y n ) } . Then the expected generalization error satisfies the inequality: We may choose the regularization parameter  X  that optimizes the bound in Theorem 3.1. Moreover, if we pick g ( v )  X  0 , and find (  X ,C ) at some &gt; 0 , then Theorem 2.1 im-plies the following simplified generalization bound for any f  X  F  X , X ,p such that | f ( x ) | = O (1) : E x,y  X  ( f ( x ) ,y ) + O h p  X  m ( M ) /n + 1+ p i . By optimizing over , we obtain a bound: E By combining Theorem 2.1 and Theorem 3.1, we can immediately obtain the following simple consistency result. It shows that the algorithm can learn an arbitrary nonlinear function on manifold when n  X   X  . Note that Theorem 2.1 implies that the convergence only depends on the intrinsic dimensionality of the manifold M , not d .
 Theorem 3.2 (Consistency) Suppose the data lie on a compact manifold M  X  R d , and the norm k X k is the Euclidean norm in R d . If loss function  X  ( p,y ) is Lipschitz. As n  X   X  , we choose  X , X   X   X  ,  X /n, X /n  X  0 (  X , X  depends on n ), and p = 0 . Then it is possible to find coding (  X ,C ) using unlabeled data such that | C | /n  X  0 and Q  X , X ,p (  X ,C )  X  0 . If we pick  X n  X  X  X  , and  X  | C |  X  0 . Then the local coordinate coding method (1) with g ( v )  X  0 is consistent as n  X   X  : Given a coordinate coding (  X ,C ) , we can use (1) to learn a nonlinear function in R d . We showed that (  X ,C ) can be obtained by optimizing Q  X , X ,p (  X ,C ) . In practice, we may also consider the following simplifications of the localization term: Note that we may simply chose p = 0 or p = 1 . The formulation is related to sparse coding [6] which has no locality constraints with p =  X  1 . In this representation, we may either enforce the constraint P v  X  v ( x ) = 1 or for simplicity, remove it because the formulation is already shift-invariant. Putting the above together, we try to optimize the following objective function in practice: We update C and  X  via alternating optimization. The step of updating  X  can be transformed into a canonical LASSO problem, where efficient algorithms exist. The step of updating C is a least-squares problem in case p = 1 . Our work is related to several existing approaches in the literature of machine learning and statistics. The first class of them is nonlinear manifold learning, such as LLE [8], Isomap [9], and Laplacian Eigenmaps [1]. These methods find global coordinates of data manifold based on a pre-computed affinity graph of data points. The use of affinity graphs requires expensive computation and lacks a coherent way of generalization to new data. Our method learns a compact set of bases to form local coordinates, which has a linear complexity with respect to data size and can naturally handle unseen data. More importantly, local coordinate coding has a direct connection to nonlinear function ap-proximation on manifold, and thus provides a theoretically sound unsupervised pre-training method to facilitate further supervised learning tasks.
 Another set of related models are local models in statistics, such as local kernel smoothing and local regression, e.g.[4, 2], both traditionally using fixed-bandwidth kernels. Local kernel smoothing can be regarded as a zero-order method; while local regression is higher-order, including local linear regression as the 1st-order case. Traditional local methods are not widely used in machine learn-ing practice, because data with non-uniform distribution on the manifold require to use adaptive-bandwidth kernels. The problem can be somehow alleviated by using K-nearest neighbors. How-ever, adaptive kernel smoothing still suffers from the high-dimensionality and noise of data. On the other hand, higher-order methods are computationally expensive and prone to overfitting, be-cause they are highly flexible in locally fitting many segments of data in high-dimension space. Our method can be seen as a generalized 1st-order local method with basis learning and adaptive local-ity. Compared to local linear regression, the learning is achieved by fitting a single globally linear function with respect to a set of learned local coordinates, which is much less prone to overfitting and computationally much cheaper. This means that our method achieves better balance between local and global aspects of learning. The importance of such balance has been recently discussed in [10].
 Finally, local coordinate coding draws connections to vector quantization (VQ) coding, e.g., [3], and sparse coding, which have been widely applied in processing of sensory data, such as acoustic and image signals. Learning linear functions of VQ codes can be regarded as a generalized zero-order local method with basis learning. Our method has an intimate relationship with sparse coding. In fact, we can regard local coordinate coding as locally constrained sparse coding. Inspired by biological visual systems, people has been arguing sparse features of signals are useful for learning [7]. However, to the best of our knowledge, there is no analysis in the literature that directly answers the question why sparse codes can help learning nonlinear functions in high dimensional space. Our work reveals an important finding  X  a good first-order approximation to nonlinear function requires the codes to be local, which consequently requires the codes to be sparse. However, sparsity does not always guarantee locality conditions. Our experiments demonstrate that sparse coding is helpful for learning only when the codes are local. Therefore locality is more essential for coding, and sparsity is a consequence of such a condition. Due to the space limitation, we only include two examples: one synthetic and one real, to illustrate various aspects of our theoretical results. We note that image classification based on LCC recently achieved state-of-the-art performance in PASCAL Visual Object Classes Challenge 2009. 1 6.1 Synthetic Data Our first example is based on a synthetic data set, where a nonlinear function is defined on a Swiss-roll manifold, as shown in Figure 1-(1). The primary goal is to demonstrate the performance of nonlinear function learning using simple linear ridge regression based on representations obtained from traditional sparse coding and the newly suggested local coordinate coding, which are, respec-tively, formulated as the following, where  X  ( x ) = P v  X  C  X  v ( x ) v . We note that (2) is an approximation to the original formulation, mainly for the simplicity of computation. Figure 1: Experiments of nonlinear regression on Swiss-roll: (1) a nonlinear function on the Swiss-roll manifold, where the color indicates function values; (2) result of sparse coding with fixed ran-dom anchor points; (3) result of local coordinate coding with fixed random anchor points; 4) result of sparse coding; (5) result of local coordinate coding; (6) result of local kernel smoothing; (7) result of local coordinate coding on noisy data; (8) result of local kernel smoothing on noisy data. We randomly sample 50 , 000 data points on the manifold for unsupervised basis learning, and 500 labeled points for supervised regression. The number of bases is fixed to be 128. The learned non-linear functions are tested on another set of 10 , 000 data points, with their performances evaluated by root mean square error (RMSE).
 points randomly sampled from the manifold. The regression results are shown in Figure 1-(2) and (3), respectively. Sparse coding based approach fails to capture the nonlinear function, while local coordinate coding behaves much better. We take a closer look at the data representations obtained from the two different encoding methods, by visualizing the distributions of distances from encoded coding lets bases faraway from the encoded data have nonzero coefficients, while local coordinate coding allows only nearby bases to get nonzero coefficients. In other words, sparse coding on this data does not ensure a good locality and thus fails to facilitate the nonlinear function learning. As another interesting phenomenon, local coordinate coding seems to encourage coefficients to be nonnegative, which is intuitively understandable  X  if we use several bases close to a data point to linearly approximate the point, each basis should have a positive contribution. However, whether there is any merit by explicitly enforcing nonnegativity will remain an interesting future work. In the next two experiments, given the random bases as a common initialization, we let the two algorithms learn bases from the 50 , 000 unlabeled data points. The regression results based on the learned bases are depicted in Figure 1-(4) and (5), which indicate that regression error is further reduced for local coordinate coding, but remains to be high for sparse coding. We also make a comparison with local kernel smoothing, which takes a weighted average of function values of K -nearest training points to make prediction. As shown in Figure 1-(6), the method works very well on this simple low-dimensional data, even outperforming the local coordinate coding approach. However, if we increase the data dimensionality to be 256 by adding 253 -dimensional independent Gaussian noises with zero mean and unitary variance, local coordinate coding becomes superior to local kernel smoothing, as shown in Figure 1-(7) and (8). This is consistent with our theory, which suggests that local coordinate coding can work well in high dimension; on the other hand, local kernel smoothing is known to suffer from high dimensionality and noise. 6.2 Handwritten Digit Recognition Our second example is based on the MNIST handwritten digit recognition benchmark, where each data point is a 28  X  28 gray image, and pre-normalized into a unitary 784 -dimensional vector. In our setting, the set C of anchor points is obtained from sparse coding, with the regularization on v replaced by inequality constraints k v k  X  1 . Our focus here is not on anchor point learning, but rather on checking whether a good nonlinear classifier can be obtained if we enforce sparsity and locality in data representation, and then apply simple one-against-all linear SVMs.
 Since the optimization cost of sparse coding is invariant under flipping the sign of v , we take a postprocessing step to change the sign of v if we find the corresponding  X  v ( x ) for most of x is obtained C , for each data point x we solve the local coordinate coding problem (2), by optimizing  X  only, to obtain the representation [  X  v ( x )] v  X  C . In the experiments we try different sizes of bases. The classification error rates are provided in Table 1. In addition we also compare with linear classifier on raw images, local kernel smoothing based on K -nearest neighbors, and linear classifiers using representations obtained from various unsupervised learning methods, including autoencoder based on deep belief networks [5], Laplacian eigenmaps [1], locally linear embedding (LLE) [8], and VQ coding based on K-means. We note that, like most of other manifold learning approaches, Laplacian eigenmaps or LLE is a transductive method which has to incorporate both training and testing data in training. The comparison results are summarized in Table 2. Both sparse coding and local coordinate coding perform quite good for this nonlinear classification task, significantly outperforming linear classifiers on raw images. In addition, local coordinate coding is consistently better than sparse coding across various basis sizes. We further check the locality of both representations by plotting Figure-3, where the basis number is 512 , and find that sparse coding on this data set happens to be quite local  X  unlike the case of Swiss-roll data  X  here only a small portion of nonzero coefficients (again mostly negative) are assigned onto the bases whose distances to the encoded data exceed the average of basis-to-datum distances. This locality explains why sparse coding works well on MNIST data. On the other hand, local coordinate coding is able to remove the unusual coefficients and further improve the locality. Among those compared methods in Table 2, we note that the error rate 1 . 2% of deep belief network reported in [5] was obtained via unsupervised pre-training followed by supervised backpropagation. The error rate based on unsupervised training of deep belief networks is about 1 . 90% . 2 Therefore our result is competitive to the-state-of-the-art results that are based on unsupervised feature learning plus linear classification without using additional image geometric information. This paper introduces a new method for high dimensional nonlinear learning with data distributed on manifolds. The method can be seen as generalized local linear function approximation, but can be achieved by learning a global linear function with respect to coordinates from unsupervised local coordinate coding. Compared to popular manifold learning methods, our approach can naturally handle unseen data and has a linear complexity with respect to data size. The work also generalizes popular VQ coding and sparse coding schemes, and reveals that locality of coding is essential for supervised function learning. The generalization performance depends on intrinsic dimensionality of the data manifold. The experiments on synthetic and handwritten digit data further confirm the findings of our analysis. [1] Mikhail Belkin and Partha Niyogi. Laplacian eigenmaps for dimensionality reduction and data [2] Leon Bottou and Vladimir Vapnik. Local learning algorithms. Neural Computation , 4:888  X  [3] Robert M. Gray and David L. Neuhoff. Quantization. IEEE Transaction on Information The-[4] Trevor Hastie and Clive Loader. Local regression: Automatic kernel carpentry. Statistical [5] Geoffrey E. Hinton and Ruslan R. Salakhutdinov. Reducing the dimensionality of data with [6] Honglak Lee, Alexis Battle, Rajat Raina, and Andrew Y. Ng. Efficient sparse coding algo-[7] Rajat Raina, Alexis Battle, Honglak Lee, Benjamin Packer, and Andrew Y. Ng. Self-taught [8] Sam Roweis and Lawrence Saul. Nonlinear dimensionality reduction by locally linear embed-[9] Joshua B. Tenenbaum, Vin De Silva, and John C. Langford. A global geometric framework [10] Alon Zakai and Ya X  X cov Ritov. Consistency and localizability. Journal of Machine Learning
