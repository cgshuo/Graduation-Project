 The unsupervised learning of linguistic structure has been an important area of investigation in various disciplines. In natural language processing, unsu-pervised methods have the practical advantage over supervised ones that relatively less training data (which is time-consuming and costly to prepare) is required. In linguistics and cognitive science, a deeper understanding of how linguistic structure can be learned from unstructured data without su-pervision sheds light on human language acquisi-tion. In this paper, we introduce Linguistica 5 , a Python-based software for research on the unsuper-vised learning of linguistic structure. This software is a descendant of Linguistica 4 and its previous ver-sions (Goldsmith, 2001; Goldsmith, 2006) dealing
In the following, we explain the axioms guiding the development of Linguistica 5 in section 2. In section 3, the dual design of both a graphical user interface (GUI) and a Python library is introduced. Section 4 demonstrates data visualization using the GUI. Section 5 exemplifies how Linguistica 5 can be used in conjunction with other computational tools in research. Section 6 concludes the paper. In the development of Linguistica 5 , we adhere closely to the axioms of reproducible, accessible, and extensible research.  X  Reproducibility : Research using Linguistica 5  X  Accessibility : Similar to all previous versions,  X  Extensibility : Linguistica 5 facilitates extensi-Previous versions of Linguistica are written in C++ and built in the Qt framework. These versions are designed to be GUI software out of the box. The ma-jor drawback is that the core backend is intimately tied with the GUI code, which makes further devel-opment and debugging difficult. To solve this prob-lem, the new Linguistica 5 takes a radically different approach.

First, we choose Python to be the new program-ming language for Linguistica, because it has been widely used in computational linguistics and natu-ral language processing for its strengths in fast cod-ing, strong library support for machine learning and other computational tools.

Second, the focus of the Linguistica 5 develop-ment is its backend as a Python library, with a GUI wrapper written in PyQt. This new architecture has several advantages. In terms of the user interface, there are two independent choices. As in previous versions of Linguistica, the GUI allows convenient data analysis  X  and visualization, a new development in Linguistica 5 (see section 4). Another novelty is that Linguistica 5 is a Python library by design. Re-searchers are able to use Linguistica 5 in a computa-tionally dynamic and automatic fashion by calling it in their own programs for any research and compu-tational work of their interest. Research along the lines of Linguistica has focused on natural language morphology. Still within the realm of unsupervised learning of linguistic struc-ture, Linguistica 5 represents an important step for-ward by attempting to (i) induce structure that goes beyond morphology, and (ii) use it to improve results in morphological learning. Given large datasets, data visualization has become indispensable for both exploring new questions as well as uncovering un-known ones. The increased interest in visualization of linguistic data and resources is reflected by spe-cialized research venues created recently, e.g., the Workshop on Visualization as Added Value in the Development, Use and Evaluation of Language Re-sources (VisLR) which debuted in 2014. Here we provide an example from our ongoing work.

The area of interest is unsupervised word category induction (see Christodoulopoulos et al. (2010) for a recent review), which potentially offers solutions to challenging problems in fully unsupervised morpho-logical learning (e.g. is the induced morphological paradigm walk-walks a verbal or nominal paradigm? And how do we characterize its potential connection with other induced paradigms such as jump-jumped-jumps ?).

Currently, we are exploring spectral approaches to the problem of unsupervised word category in-duction. A central component is to model syntactic neighborhood among words in a given dataset. The current model is implemented as a series of steps for word similarity computation. First, a graph of word similarity for all pairs of word types is com-puted based on the number of shared word ngram contexts. We compute the most significant eigenvec-tors of the normalized Laplacian of the graph. Each word is embedded in R k based on the coordinates derived from the k eigenvectors. A new graph of word similarity is obtained based on the Euclidean distance of the word coordinates. Words in this re-sultant graph are connected to one another in such a way that corresponds to syntactic neighborhood. For instance, the word  X  X he X  likely has other articles or determiners such as  X  X  X  and  X  X n X  as syntactic neigh-bors that occur in syntactically similar positions. Us-ing the Brown corpus (Ku  X  cera and Francis, 1967), several syntactic neighbors for the word types  X  X he X ,  X  X ould X , and  X  X fter X  are in Table 1.

Word Syntactic neighbors the a his their an its this my our that would could must will can should may might after before like during since without through
Importantly, the syntactic neighbors of a given word are themselves word types in the given dataset. The interconnectedness of words in the syntactic neighborhood results calls for network visualization. This can be done in Linguistica 5 as one of the key new features. Figure 1 shows a screenshot of Linguistica 5 displaying the syntactic word neigh-borhood network for the most frequent 1,000 word types in the Brown corpus, as rendered by the force-directed graph layout in the JavaScript D3 library (Bostock et al., 2011). Figure 2 zooms in for the cluster of words that would be categorized as modal verbs such as  X  X ould X ,  X  X ould X , and  X  X ust X .
With induced knowledge analogous to word cat-egories in natural language, results of unsupervised morphological learning could be improved. For in-stance, morphophonology could be learned. In-duced morphological signatures (see section 5.1) such as {  X , ed } ( walk-walked ) and {  X , d } ( love-loved ) could be aligned for allomorphy across sig-natures (words with ed and d belonging to the same word category in this case). While this is work in progress, we have shown that data visualiza-tion tools in Linguistica 5 as exemplified by syntac-tic neighborhood networks provide insights for new pursuits in research. Another new and powerful feature of Linguistica 5 is that it is a Python library by design and is there-fore callable in other Python-based programs. This is significant, because it is now possible to run the Linguistica algorithms dynamically for any data of interest from different sources (either from a local file or from an in-memory Python object).
 We illustrate how Linguistica 5 can be used as a Python library in conjunction with other tools with an example for computational modeling of human language acquisition, a growing field bringing lin-guistics, computer science, and cognitive science to-gether (cf. Villavicencio et al. (2013)). We first pro-vide the background on morphological signatures. 5.1 Morphological signatures Unsupervised learning of morphology in Linguis-tica revolves around objects known as morpholog-ical signatures. A (morphological) signature, in the sense of Goldsmith (2001), is a morphological pat-tern associated with its stems as induced in some given data. For example, {  X , s } is a morphological signature very likely to be induced in any sizable En-glish datasets, with possible associated stems such as walk-, jump-(which entails that the words walk, walks, jump, jumps occur in the data).

Using the Brown corpus (about 50,000 word types from one million word tokens) for written American English, Linguistica 5 finds over 300 morphological signatures. Those with the most associated stems are shown in the screenshot in Figure 3; the signa-ture {  X , ed, ing, s } is highlighted, with its associ-ated stems displayed on the right.
 5.2 On human morphological acquisition Given that Linguistica 5 is designed to model unsu-pervised morphological learning as a major goal, we ask how it can be used to model human morpholog-ical learning using child-directed speech data. An important criterion is that for the model to be cog-nitively plausible, it has to simulate the incremental nature of the input data. This means that the Linguis-tica algorithm for morphological learning must be called and applied flexibly over some growing data.
Concretely, we tested Linguistica 5 for its abil-ity to model morphological acquisition using Eve X  X  data in the Brown portion (Brown, 1973) of the CHILDES database (MacWhinney, 2000), an idea sketched in Lee (2015). The child-directed speech (CDS) at different ages of the target child in the data was extracted by the PyLangAcq library (Lee et al., 2016) and fed into Linguistica 5 . Table 2 shows the results of morphological signature induction from growing word types up to the ages of 18, 21, and 24 months, respectively.

The classic study of first language acquisition by Brown (1973) reports that the first three mor-phological patterns acquired by English-speaking children are the third-person singular inflection {  X , s } , the possessive {  X  X ,  X  } , and the progressive {  X , ing } . Table 2 shows these are patterns that Linguistica 5 successfully discovers in Eve X  X  child-directed speech. Other induced signatures are { ll, s } (as in she X  X l-she X  X  ) and {  X  X ,  X , s } , a more complex pattern found when more data becomes available to the learner. The results for modeling language ac-quisition here contrast sharply with those from the Brown corpus in section 5.1, for the much larger amount of input data and results in the latter. But of particular interest is the incremental nature of learn-ing in the former case. The fact that Linguistica 5 is a Python library makes it possible to devise tools embedding it for multiple learning iterations run au-tomatically.

In this section, we have shown how Linguistica 5 can be used jointly with other programs for highly dynamic computational research, which is com-plementary to its GUI counterpart for exploratory ground work. Linguistica 5 opens new doors to reproducible, ac-cessible, and extensible research in unsupervised learning of linguistic structure. Building on the strengths of its predecessors, Linguistica 5 incorpo-rates novel elements of data visualization as well as employs a flexible and modular architecture to allow its integration into other projects and to maximize continual research and development. This work was completed in part with resources pro-vided by the University of Chicago Research Com-puting Center and Big Ideas Generator. We would also like to thank the three anonymous reviewers for very helpful comments and suggestions.

