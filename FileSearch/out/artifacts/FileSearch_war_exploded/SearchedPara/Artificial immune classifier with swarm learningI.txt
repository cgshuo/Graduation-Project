 1. Introduction
In the 1990 X  X  the artificial immune systems (AIS) became one of the important research areas of computational intelligent algorithms. AIS are based on the principles and processes of the natural immune system and applied to a wide spectrum of applications. The basics of AIS algorithms come from theoretical immune system, observed immune functions, models, and principles ( Dasgupta, 2006 ). These algorithms have strong and robust information processing capabilities for solving complex science and engineering problems. AIS have a structure similar to that of the artificial neural network and just like it AIS have learning, adaptability, novelty detection, and optimization characteristics. The application domains of AIS are various fields of artificial intelligence, such as optimization ( de Castro and Von
Zuben, 2002; Campelo et al., 2005 ), anomaly detection ( Gonzalez and Dasgupta, 2003; Forrest et al., 1994 ), data clustering ( de Castro and Von Zuben, 2001 ), classification ( Igawa and
Ohashi, 2009; Leung et al., 2007; Watkins, 2001 ), fault diagnosis ( Aydin et al., 2008; Branco et al., 2003 ), and security of information systems ( Kim and Bentley, 2002 ). Although AIS development is in the early stage, they have been already applied to many practical applications.
 system, there are three models proposed in AIS. These models are clonal selection, negative selection, and immune network models ( de Castro and Timmis, 2002 ). In a negative selection algorithm, the purpose is to detect any abnormal condition of a system using a self data set. The clonal selection algorithm is an optimization and pattern recognition tool of the AIS ( de Castro and Von Zuben, 2002 ). This algorithm is a population-based stochastic method, which is capable of optimizing multimodal functions and maintaining local solutions. In this method, the proliferation and affinity maturation process are used to evolve the population. The immune network model was first proposed by Jerne (1974) .
In this model, the immune system constitutes a network of cells and molecules. These molecules and cells maintain interactions between not only an antibody and an antigen but also the antibodies themselves. The similarity among antibodies causes a negative response in the immune network system, so similar antibodies will be eliminated from the network.
 recognition and especially classification problems. The basic study, which can be regarded as a supervised classifier method, was proposed by Watkins (2001) . His classifier system was named the Artificial Immune Recognition System (AIRS), and it is based on artificial recognition balls. This classifier method gives very effective results when it is compared to the other classifier methods. However, this method has some drawbacks. First, each training antigen is given to the classifier only once.
This method may not guarantee the best memory cell (B-cell) for the presented antigen. Some antibodies are generated randomly, and they are the mutated version of the existing antibodies. The stimulation level of an antibody is inversely proportional to the distance of this antibody to an antigen. In each step, one B-cell is optimized, and this does not guarantee an optimal classifier. The least stimulated B-cells are removed from the population. Because only one antigen is evaluated in each step, the least stimulated B-cell for an antigen has a very high affinity for the other antigens. This causes a negative effect on the immune classifier as a whole.

Another study proposed by Leung et al. (2007) uses the immune system for classification. Their study uses one B-cell instead of a B-cell pool and an exemplar for each class. Each exemplar consists of a few instances per class. But their study does not use affinity-based mutation and cloning. The mutation and cloning processes are applied to each B-cell in random, therefore requiring the generation of many clones in each step.
The algorithm, which is very slow, reaches its maximum performance after an average of 237 iterations. Igawa and Ohashi (2009) proposed a negative selection based classifier method.
Their method uses negative and clonal selection algorithms and gives efficient results for some benchmark data sets. However, the method must be re-operated to generate memory cells of each class. Furthermore, an alpha control parameter must be read-justed for different data sets. Another problem is that only one memory cell is generated in each step. Zhong et al. (2006) proposed an artificial immune system as an unsupervised classifier for remote sensing imagery problems. The fundamental mechanism of the unsupervised classifier is based on antibody population evolution, clonal selection, and memory cells development. In the unsupervised classifier, the antibody popula-tion is updated for each antigen, and the best antibodies are taken as memory cells; however, the antibody population for only one antigen might have a negative effect on the immune system.

In this study, an artificial immune classifier with swarm learning (AICSL) method is proposed. The proposed method uses clonal selection and particle swarm optimization for evolution of the memory cell population. The evolution of an antibody in the search space depends on the antibody X  X  affinity and the affinity of its neighbors. With these artificial immune classifiers, the new candidate memory cells are randomly generated by a mutation operator. Then, the worst memory cells are replaced with the best antibodies. A different mutation operator is used to evolve the
B-cell population in AICSL. Each antibody belongs to a determined class, and it moves towards this class. The affinity of each antibody is determined according to three criteria: its affinity, its neighbors, and its best affinity found so far. There is no population control mechanism in this system, as the population consists of a predefined number of B-cells. The optimization is performed globally and the best affinity and position are not lost in the evolution process. The proposed method is applied to two case studies. In the first case study, the faults of the induction motors are classified. The performance of the proposed method is compared to the other classifiers in the second case study on five benchmark data sets.

The remainder of the paper is organized as follows. Section 2 provides a brief description of natural and artificial immune system. Section 3 explains the particle swarm optimization. Section 4 describes the proposed algorithm. In Section 5, the results of case studies are provided. Finally, the conclusions are provided in Section 6. 2. Natural and artificial immune systems
Our natural immune system protects our body from foreign cells called antigens by recognizing and eliminating them. This process is called an immune response ( Perelson, 1989 ). Our immune system constitutes a self-defense mechanism of the body by means of innate and adaptive immune responses. An adaptive immune response contains metaphors like pattern recognition, memory, and novelty detection. The fundamental components of the immune systems are lymphocytes or white blood cells, which are divided into two classes: B-and T-cells. B-cells have a more important function than T-cells because each B-cell has its distinct chemical structure and secretes many antibodies from its surface to eliminate the antigens. A huge variety of antibodies are generated to neutralize and eliminate antigens. Each antibody is constituted by a specific B-cell whose aim is to recognize and bind to antigens ( Jerne, 1974 ). In the immune system, an important function is clonal selection. Clonal selection determines how an immune response is given when an antigen is detected by a B-cell. Fig. 1 shows the cloning process of a B-cell receptor when it recognizes any antigen with a certain affinity.

In Fig. 1 , once a B-cell is stimulated through a certain affinity to any antigen, it immediately produces its clones and it exposes to a hypermutation process. This process produces new cells to match the antigen more closely. The B-cells that do not match any antigen will eventually die. Activated B-cells produced by the clonal selection process are selected to become memory cells. The main characteristics of the immune system are learning and memory ( de Castro and Von Zuben, 2002 ). The adaptive immune system can learn the structure of an antigen and remember this antigen for future response. This factor ensures the reinforcement learning in the natural immune system. Immune network theory is different from clonal selection with a distinctive principle. While clonal selection only controls the interactions between antigens, the immune network controls this process both between antigens and antibodies and antibodies themselves ( de Castro and
Von Zuben, 2001 ). Recognition among antibodies has a negative effect on the immune response as similar antibodies will be suppressed.

The fundamental of AIS is inspired by the theoretical immune system and the observed immune functions, principles, and models ( Timmis et al., 2008 ). The modeling of the natural immune system usually aims to provide a better understanding of immune functions. On the other hand, AIS can be used to solve problems in engineering, science, computing, and other research areas. With these features, AIS is akin to soft computing. The problem solving in AIS can be represented in a layered framework. This representation is given in Fig. 2 .

The first step of the problem solving in AIS is to represent the system components. Once the representation of the problem has been chosen, affinity measures are used to determine the interactions between system elements of the problem. AIS use many affinity measures, such as Hamming, Manhattan, and
Euclidian distance metrics. The choice of an affinity measure is partially dependent on the represented problem. The selected affinity measure has a great importance because it can affect the overall performance of the system. After the affinity measure has been selected, the appropriate immune algorithm is deter-mined according to the problem. The most important applications of AIS are computer security, numerical function optimiza-tion, combinatorial optimization, learning, bioinformatics, image processing, robotics, adaptive control system, data mining, and fault diagnosis ( Hart and Timmis, 2008 ). The last step of AIS is to present the results to the end user. 3. The principles of particle swarm optimization
Particle swarm optimization (PSO), first proposed by Kennedy and Eberhart (1995) , is a population-based optimization method.
The population is called a swarm, and each individual of the swarm is taken as a particle. A particle has two parameters: velocity and position. Each particle is the possible solution of the optimization problem. The new position of the current particle is determined by its local best position (pbest) found so far and the global best position (gbest) found so far by other particles in the swarm. If a particle discovers a new better solution, all the other particles will move closer to it. PSO algorithm performs the following steps in each iteration: (1) Initialize the swarm of particles with random positions and (2) Calculate each particle X  X  fitness value. (3) Compare each particle X  X  new fitness with the particle X  X  best (4) Compare the current particle X  X  fitness to the global best found (5) Calculate the velocity, v i and the position, x i of the each (6) Go to step (2) until the stopping condition is met. The updated simultaneously. Moreover, it needs less information about the system than conventional optimization methods. In the standard PSO, all particles may collide with each other during the optimization process. Therefore, standard PSO cannot be applied to dynamical optimization problems. To overcome this problem, a modified PSO has been proposed with an anti-collision technique ( Blackwell and Bentley, 2002 ). The advantage of this algorithm is a balance between particle attraction to the centre of mass and repulsive, collision avoiding forces. The main principles of our PSO based learning are based on the anti-collision technique. 4. Artificial immune classifier with swarm learning mechanism of AICSL is based on clonal selection followed by the
B-cells of the biological immune system and particle swarm learning. It adopts the concept of clonal selection, affinity maturation, and mutation. Antigens are taken as feature vectors, which are given to the system during the training and testing stage. Each antibody is one part of the B-cells. They are exposed to clonal expansion after an antibody is presented with an antigen.
When antibodies are cloned, they will undergo the mutation process that is inversely proportional to their antigenic affinity.
But the mutation process is not done in a randomly manner. This process is based on particle swarm based learning. The new mutant of a clone is generated according to four criteria: the affinity of this clone, the parent X  X  best locatio n of clone, the nearest same type antibody, and the nearest different type of antibody. With these features, each clone knows its target and it moves towards a determined trajectory. The best clones of an antibody are selected as B-cell. A diagram of AICSL is provided in Fig. 3 .

In Fig. 3 , each antibody has a class. This class does not evolve during the iterations of the algorithm. For a k-class problem, each class is represented by n samples. The mutant with the best affinity is compared to its parent antibody 0. If its affinity is better than the latter, it becomes the new antibody 0. Each B-cell is heterogeneous, and it consists of the antibodies of different classes. The following are the conventions to be used for a classification problem.

Let ab represents an antibody. Let ab.c and ab.f represent the class and receptor (feature vector), respectively. Let ab. f represent the value of i -th feature in ab.f. Let ab.b takes two values. If ab belongs to its real class, it takes one. Otherwise, it takes zero. In addition, it is used in the mutation of the antibodies. This parameter ensu res generating anti-collision antibodies. The new better antibodies become the new classifier. Therefore, there is no need to eliminate the similar antibodies.
Let ag represents an antigen. The training and testing data are taken as antigens. Let ag.c and ag.f represent the class and feature vector, respectively.

The data set is normalized such that each feature is in the range of [0, 1]. In the case of a 3-real valued dimensional 2-class problem, ag.c  X  2 and ag.f  X  (0.1, 0.5, 0.6, etc). The steps of the algorithm are given as follows: 1. Load training data.
 vector. 3. Until maximum number of iterations is reached : f ab c : f j  X  X  c 2 c 2 sign  X  ab sc : f j ab c : f j  X  ab best m _ rate  X  X  c 4 c 4 m _ rate  X  X  4  X  5. Case studies
The performance of the algorithm was evaluated using two case studies. The algorithm was first applied to the induction motor fault diagnosis as a real world problem. The signals were experimentally acquired from a real induction motor. The classification performance of the algorithm was also tested on five benchmark data sets that are available from a machine learning repository ( Blake and Merz, 1998 ). A ten-fold cross validation was run for each data set to compare the performance of our method to other classifiers that are reported in the literature. For two classifications, the PSO parameters are summarized in Table 1 .

The results of the case studies are given in the following sections. 5.1. Case study 1: induction motor fault diagnosis
This case study consists of three sections: a brief literature review, data acquisition and feature extraction, and fault classification. 5.1.1. Brief literature review
Induction motors are the most used electro-mechanical energy conversion devices in industrial applications. Although these machines are reliable, they are subject to faults. These faults may occur due to corrosive and dusty environments. The induction motor faults are related to three components of the motor: rotor, stator, and bearing ( Benbouzid, 2000 ). Condition monitoring and fault detection have attracted researchers X  attention in the past few years because of their considerable influence on the continuation of many industrial processes. An ideal fault detection method should take the minimum number of measure-ments from the motor, so the condition of the motor can be determined for a minimum cost and time ( Bellini et al., 2008 ). The broken rotor bar faults account for 5 X 10% of total induction motor faults ( Jung et al., 2006 ).
 detect broken rotor bar faults. These techniques are based on the monitoring of vibration, temperature, and motor currents. The fault detection based on motor current relies on examining the frequency component in the current spectrum. This method is called motor current signature analysis (MCSA). MCSA has gained attention from researchers because it is easy to use. This method performs fast Fourier transform (FFT) of stator current to detect rotor related fault frequency characteristics. MCSA gives efficient results when the motor is being operated under robust load condition. But when the motor is operated under no-load condition, MCSA fails to detect rotor faults. Two dimensional FFT, which is called time frequency representation, has been proposed to classify the induction motor faults ( Lebaroud and Clerc, 2009 ).
The method separates different faults under certain load condi-tions. The wavelet transform of startup current was proposed to detect broken rotor bar faults ( Briz et al., 2008; Supangat et al., 2006 ). Tsoumas et al. (2008) introduced a novel wavelet-based approach for detection of rotor faults in induction motors. The common characteristic of motor current signature analysis and wavelet analysis is that the fault is determined based on the rotor frequency. When the motor is operated under very weak or no-load condition, the transient stator current of startup is used to detect the rotor faults. This method is not appropriate for online condition monitoring. A fault diagnosis and monitoring method based on an artificial intelligence method has been developed for detection of broken rotor bar and stator faults ( da Silva, 2006 ). A new feature vector called an envelope has been achieved using three-phase stator current and slip computation. The phase space of this vector is formed using a nonlinear time series analysis method. Motor faults have been classified using the Bayesian classification algorithm. PSO was combined with artificial neural network and support vector machines ( Samanta and Nataraj, 2009 ). New computational intelligence methods were applied to bearing faults.
Aydin et al. (2007) proposed a time series data mining algorithm for detection of broken rotor bar faults. In their study, feature data are extracted from three-phase motor currents. One, two, and three broken rotor bar faults are diagnosed at four different speeds. 5.1.2. Data acquisition and feature extraction
For our analyses, experiments were performed on an actual induction motor. The characteristics of the three-phase induction motor used in our experiment are listed in Table 2 . The motor phase currents are saved with 3 kHz sampling frequency for a duration of 3 s.

Tests were made on a healthy motor and on a faulty motor condition in which one and two rotor bars were broken by drilling. In both cases, motor signals were acquired at no-load conditions, keeping the motor shaft free, to test the feasibility of fault diagnosis method at very low rotor slip. The test equipment is shown in Fig. 4 .

Additional tests were performed with faulty and healthy machines under five different supply voltages to assess the performance of the proposed method under low speed. The supply voltages of each motor condition were taken as 380, 340, 300, 260, and 220 V. Seven consecutive measurements were averaged to improve the signal-to-noise ratio of the fault detection system. Two feature extraction methods were proposed to obtain broken rotor bar related features for AICSL. The features were extracted from current signals in both methods. The first method uses specified periods of one-phase current signal. The Hilbert transform and
MCSA based five features were evaluated for fault diagnosis. The second method utilizes three-phase current signals. The fault related feature vector was constructed using two Park X  X  vector components obtained from the three-phase current signals.
In the first method, the fault related features are extracted from one-phase current signal. The obtained features can be used to separate broken rotor bar faults under full-load condition. The Hilbert transform based feature extraction method is used to construct a new feature signal. The Hilbert transform is a popular signal analysis method. Hilbert transform returns a complex helical sequence, sometimes called the analytic signal, from a real data sequence. Mathematically, Hilbert transform of a real sequence I ( t ) is a convolution between original signal and 1/ p t as shown in ( Cizek, 1970 ) HT  X  I  X  t  X  X  X  1 p Eq. (8) can be rewritten using mean value theorem as given by H  X  I  X  t  X  X  X  1 p t I  X  t  X  X  9  X  The analytic signal is constructed using a real signal I ( t ) and its Hilbert transform as follows: AS  X  t  X  X  I  X  t  X  X  jH  X  I  X  t  X  X  X  a  X  t  X  e j y  X  t  X   X  10  X  where a  X  t  X  X  y  X  t  X  X  arctan  X  I  X  t  X  = H  X  t  X  X   X  11  X 
The imaginary part of the analytical signal is a version of the original real sequence with a 90 1 phase shift. The advantage of the analytic signal is that all negative frequencies of the original signal have been filtered. The feature signal is constructed from the absolute value of Hilbert transform on the motor phase current. This feature is given in H  X  I  X  t  X  X  X  abs 1 p t I  X  t  X   X  12  X  Hilbert transform is applied to a specified size of phase current. This series is taken as a window. Each window consists of different number of periods of the phase current. Each window size w is determined according to where f sampling is the sampling rate of the current signals, f line frequency (50 Hz), and n is the number of periods. The healthy and faulty motor currents acquired at the sampling rate of 3 kHz are given in Fig. 5 . Hilbert transform of current window is given in Fig. 6 for healthy and faulty motors.

As shown in Fig. 5 , the phase currents of healthy and faulty motors are quite similar and the discrimination of them may be difficult. So, these signals cannot be directly applied to classifica-tion and diagnosis of motor faults. On the contrary, Fig. 6 shows a strong difference between each healthy and faulty condition of motor. The feature extracted from Hilbert transform are energy, maxima, skewness, kurtosis, and MCSA of the feature signal. The energy of the feature signal can be mathematically computed as F  X  where H k is the k -th sample of feature signal and w is the number of samples in window. The absolute maxima value of feature signal is obtained as F  X  max f H k , k  X  1 , ... , w g X  15  X  Fig. 4. Experimental setup.
The other two features are kurtosis and skewness parameters and they can be computed as
F  X 
F  X  where m H and s H represent the mean and standard deviation of each window, respectively. The last feature of the first method is the MCSA of the Hilbert transform. The overall periods of phase current are stored and the Hilbert transform of the signal is calculated. The feature signal is defined as
I h  X  9 H  X  I  X  t  X  X  9 mean  X  9 H  X  I  X  t  X  X  9  X  X  18  X  time (second) time (second) time (second) where 99 is used to calculate the modulus. This signal is the difference between the absolute value of the analytic signal and its mean. The modulus of the analytic signal reflects the energy variation of the phase current. The energy of phase current does not vary with the time in a healthy machine while this value undergoes an oscillation in broken rotor bar condition. The spectrum of Hilbert transform modulus presents a peak at frequency 2 sf . This frequency is related to the broken rotor bar fault. The slip value s in an unloaded motor is taken as 0.20%.
Therefore, the broken rotor bar related frequency is calculated as 0.18 Hz (2 sf  X  2 50 0.0020  X  0.2 Hz). This spectrum is given in
Fig. 7 for healthy and fault motor conditions for a 380 V feed voltage.

As shown in Fig. 7 , the healthy and faulty conditions of the motor can be identified easily. In the second method, the broken rotor bar related features are extracted from the three-phase motor current signals. First, Park X  X  vector components are obtained from three-phase motor current signals. Park X  X  vector approach is used to achieve a 2D representation of phase currents of a three-phase induction motor. Park X  X  vector approach is given in
I  X  r
I  X  1 ffiffiffi p b where a , b , and c are three phase motor currents. Park X  X  vector components are I d and I q . The feature vector is constituted using these Park X  X  vector components ( Aydin et al., 2009 ). The feature vector is shown in Fig. 8 .

After the feature vector has been achieved, the phase space of the feature vector is constructed for each motor condition. The nonlinear time series analysis examines a time series in a phase space. Time delay t and embedding dimension d are important parameters in constituting a reconstructed phase space or the briefly called phase space. For instance, when t  X  2 and d  X  3, the and faulty phase spaces are combined and they are ready for evaluation by any classifier. After the fault related feature groups have been obtained, each feature group is given to AICSL, separately. Hence, a classification rate is obtained for each feature group. 5.1.3. Classification of faults and experimental results The fault classification process is done for two feature groups. For the two groups, motor current signals are acquired at 3 kHz sampling rate with a duration of 3 s. In the first feature group, the current signals are divided to fixed size windows. The window size is determined in terms of Eq. (15). The number of periods ( n ) is taken as three. Therefore, the window size is calculated as 180. Each condition of the motor consists of 48 samples with five dimensions. The data set of the algorithm given an induction motor fed 380 V is given in Fig. 9 .

In Fig. 9 , the training data are taken as antigens. For these antigens, an antibody population is generated. The antibody population undergoes cloning and mutation, and the algorithm is repeated until an optimal solution is obtained. All training data are normalized before the training process starts. If the normal-ization is not applied to the training data, one sample that has a relatively large range overpowers the other attributes. The parameters used by AICSL are shown in Table 3 .

The performance of AICSL becomes constant after 40 itera-tions. Fig. 10 gives the best, average, and worst convergence speeds of the classifier. 0.2 0.4 0.6 0.8
Spectrum Amplitude (db) Sideband
Ten-fold cross validation was applied to the training data and the results of Fig. 10 were obtained. There are many factors such as number of antibodies, classes, an d attributes, which affect the performance of AICSL. The perfor mance of AICSL was compared to the artificial neural network (ANN) classifier for the same data set for this case study. A feed forward neural network performed by back-propagation training algorithm was found adequate. The number of inputs and outputs of the neural network are fixed by the number of the faults. The network has five inputs ( F 1 , F 2 , F outputs (Healthy, br 1 , and br 2 ), and a hidden layer of five neurons.
The activation functions of the hidden and output layers are  X  X  X ansig X  X  and  X  X  X ogsig X  X , respectively. The output data set was formed by the following desired outputs, which indicate the states of the motor: [1 0 0] T Healthy condition [0 1 0] T One broken rotor bar [0 0 1] T Two broken rotor bars
Table 4 gives the classification performances of the two methods as well as the standard deviations for the first featured group.

It is obviously indicated that the diagnosis accuracy of AICSL is higher than that of the ratios of neural network. The second featured group was obtained using constructed phase spaces of feature vectors for each motor condition. The phase spaces of healthy and faulty conditions exhibit nonlinear behaviors. Ten antibodies were selected per each class. The maxiteration, one of the system parameters of the classifier, was set to 100. The phase spaces and obtained memory cells are given in Fig. 11 .
The second feature data set was also evaluated by ANN and support vector machines ( Aydin et al., 2009 ). The parameters of support vector machines were adjusted applying a multi-objective immune optimization method. This data set is a typical complex and nonlinear classification problem. Therefore,
Gaussian kernel based support vector machines were applied. The results of AICSL were compared to the results of support vector machines and ANN in Table 5 .

Support vector machines are normally a two-class classification method. Multiple classifications can be made using one to others or one to another principle. Compared to ANN and SVM, AICSL is also shown to be very competitive, as only SVM gives better results than our algorithm. The performance results of two feature groups indicate that the first feature group presents better distinctive features than the second feature group. The first feature group also uses small sized current signals and is appropriate for online condition monitoring. 5.2. Case study 2: comparison with other methods on benchmark data set benchmark data sets that can be taken from the machine learning repository of California University ( Blake and Merz, 1998 ). AICSL was compared to two artificial immune based classifiers and other well-known intelligent classifiers. The immune classifiers are SAIS ( Leung et al., 2007 ) and AIRS ( Watkins, 2001 ). Two immune systems are inspired by the immune network model and consist of artificial immune cells. We compared three important features of these algorithms: classification accuracy, number of memory cells, and average number of iterations. These algorithms use all memory cells to classify test samples and the classification performance is proportional to the number of memory cells. The convergence speeds of the SAIS and AICSL were compared and the results of ten-fold cross validation were evaluated on all bench-mark data sets. For each data set, ten runs with ten-fold cross validation were performed. Therefore, the algorithm was operated Correctly classified data (%) at a total of 100 runs over each data set. The descriptions of the used data sets are summarized in Table 6 .

Each data set was divided into ten equal partitions. Nine partitions of the data set were used to train the algorithm and the performance of the algorithm was tested using the remained partition. For example; the partitions that are between two and ten are used to train the algorithm and the performance is obtained by using first partition. The other performance evalua-tions are performed in a similar manner. Each data set produces a classification performance, and the classification results of ten test data are averaged to yield an overall accuracy of correctly classified data. The average number of iterations for each data set are needed for determining a constant iteration number. The performance of AICSL is compared to SAIS ( Leung et al., 2007 ).
Table 7 shows the average number of iteration and accuracy rate of two methods for four benchmark data sets.
 Table 7 shows that AICSL is better than SAIS method on Iris,
Wine, and Ionosphere data sets. The method is worse than SAIS for the Diabetes data set, but the difference is not significant. For each data set, AICSL convergences to the optimum solution in smaller number of iterations than those for SAIS. There are two effects on the proposed algorithm: affinity measure and swarm based learning. In SAIS method, the affinity measure was not used and each antibody moves in a random manner. This movement slows down this algorithm. In AICSL, the mutation is applied to each antibody using swarm optimization. Therefore, each anti-body moves towards a determined goal. This also proves that it has used a smaller memory cells for the classification. The average convergence speed of AICSL is given in Fig. 12 for Iris data set. The data set and optimized memory cells are shown in Fig. 13 for the Iris data set.

In all experiments, the clonal rate was taken as five. The results of AICSL were also compared to other artificial immune classifier named as AIRS ( Watkins, 2001 ) on five benchmark data set. The comparisons were made for number of memory cells and accuracy rate. The results are given in Table 8 .

The performance of AICSL was compared to the well-known classification techniques such as support vector machines, neural networks, K-nearest neighbor algorithm, fuzzy neural network, and C 4.5 algorithms. While a different number of classification methods were applied to these benchmark problems, we present Average correctly classified data (%) Petal length the results of some of the best classification methods in this study.
The other classifier results were obtained from Watkins (2001 ) and Dutch (2000 ). All selected results of experiments were taken from the same conditions. The given accuracy rates were obtained by averaging ten runs of each method. Because the accuracy rates of our method were obtained by applying ten-fold cross validation method on all data sets, the classifier results applied cross validation were selected for a robust comparability. In Table 9 the results of AICSL are compared to the results of commonly used classification algorithms for five real-world data sets.
For these comparisons, AICSL is selected as the reference algorithm to evaluate the significance of results. The algorithms in
Table 9 are based on quite different learning paradigms: (1) Bayes, Bayesian method; (2) C 4.5, an implementation of C 4.5 decision tree-based (3) CART, classification and regression tree; (4) DB-Cart, a distribution based trees. (5) FUNN, fuzzy neural network; (6) INCNet, an incremental neural network; (7) KNN, K-nearest neighbor classification method; (8) MLP+BP, multi-layer perception trained by back-propagation (9) PVM 2 rules, two rule based parallel virtual machine; (10) RBF, radial basis function network; (11) SSV, an implementation of separability of split values; and (12) SVM li and SVM Gau, an implementation of support vector
The accuracy of AICSL for Iris data set is 1.6% lower than that of the Gronian method. However, for wine and sonar data sets, the accuracy rate of AICSL is better than that of other classifiers. There are small differences in performances between the best classifiers of each data set and AICSL. The largest difference was observed for ionosphere data set. It was found that, on average, AICSL is sufficiently comparable with that of other well-known classifiers.
AICSL has two main advantages in contrast to other classifier systems. First, AICSL has a smaller number of cells than those of other artificial immune classification methods. Second, the convergence speed of the AICSL is faster than that of other classifier methods. AICSL increases the convergence speed of the classification. This increase is caused by using the new particle swarm-based learning method. 6. Conclusions
In this paper, we have presented a new artificial immune classifier based upon metaphors of swarm learning and artificial immune systems. Our improved immune classifier was imple-mented to remove some drawbacks of other immune classifier systems such as population control, local optimization, and slow convergence speed. At the same time, by adequately revealing the interaction of antigens and memory cells, we add information of class type to memory cells. Thus, memory cells can preferably learn and memorize the features of the same class antigen. This characteristic improves the classification accuracy of the algo-rithm. In the original artificial immune system, the mutation operator is applied in a random manner. This does not guarantee that better antibodies will be found. The mutation operator of our method is based on particle swarm optimization. Hence, each clone moves to a target or its class. Therefore, the improved method is faster than other artificial immune classifiers. The performance of the proposed method was tested on two case studies. In the first case study, the classifier system was applied to the diagnosis of broken rotor bar faults in the induction motors.
Two feature extraction methods were used for broken rotor bar faults. The feature extraction methods successfully separate broken rotor bar faults under no-load conditions. In the second case study, the method was tested on five benchmark data set.
The results of two case studies show that the proposed method gives better results than AIRS and SAIS for real world data sets. When the results were compared to other intelligent classifiers, AICSL produced competitive results for all the problems. References
