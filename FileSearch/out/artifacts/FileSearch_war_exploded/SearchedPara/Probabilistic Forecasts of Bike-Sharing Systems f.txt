 We study the problem of making forecasts about the fu-ture availability of bicycles in stations of a bike-sharing sys-tem (BSS). This is relevant in order to make recommenda-tions guaranteeing that the probability that a user will be able to make a journey is su ciently high. To do this we use probabilistic predictions obtained from a queuing theo-retical time-inhomogeneous model of a BSS. The model is parametrized and successfully validated using historical data from the V  X elib X  BSS of the City of Paris.

We develop a critique of the standard root-mean-square-error (RMSE), commonly adopted in the bike-sharing re-search as an index of the prediction accuracy, because it does not account for the stochasticity inherent in the real system. Instead we introduce a new metric based on scoring rules. We evaluate the average score of our model against classical predictors used in the literature. We show that these are outperformed by our model for prediction horizons of up to a few hours. We also discuss that, in general, measuring the current number of available bikes is only relevant for prediction horizons of up to few hours.
In recent years, bicycle sharing systems (BSS) have proven to be very successful in several major cities and are now spreading all across the world [4, 5]. Nowadays, there exist more than 700 such systems that operate on five continents. The benefits for cities are multiple: from a greener image due to more eco-friendly means of transportation to the re-duction of tra c congestion, noise and air pollution, they provide an alternative to private motorized vehicles, espe-cially for short-distance trips. From the user X  X  perspective, they o  X  er an a  X  ordable and e cient transport alternative with several benefits over the use of a personal bicycle with respect to maintenance, theft or storage issues.

A BSS is composed of a number of stations where a lim-ited number of bikes can be parked. The dynamics is sim-ple. A user arrives at a station to pick up a bike. The ride ends when she returns the bike to any station. User experi-ence and provider revenue can be hampered when the origin station is empty, which forces the user to either resort to another means of transport or try to find an available bike in another station. Similarly, if the destination station is full, the user must either wait until one bike is picked up, or return the bike to another station with at least one parking spot available.

BSS providers publish, typically through their websites, live data about the availability of bikes and empty park-ing spots at BSS stations, as a means of helping users plan their journey. This has caught the attention of many re-searchers, who used this data to study user behavior and mobility patterns [3, 6, 14]. Some notable e  X  ort has been put on the development of predictive models for BSS, which can be calibrated using the real available datasets [9, 12, 13, 15]. Having a predictive model can benefit both the user and the BSS provider. The user can employ it as a journey advisor [15], for instance identifying likely origin/destination stations for which the trip can be successfully made. BSS providers can run the model to discover usage trends, and proactively adopt countermeasures to potentially adverse situations, such as performing a rebalancing to put more bikes in stations that will likely be emptied.

The first contribution of this paper is a predictive model of availability in BSS based on queuing theory. We model a BSS station as a queue which is subject to two stochastic events: an arrival process for the bikes that are returned, and a departure process for the bikes that are checked out by users wishing to start a journey. Thus each station is modeled in isolation, but the e  X  ects from the overall BSS are incorporated into these aggregate processes. For instance, the arrival process subsumes all journeys started from any BSS station, while the departure process accounts for pick-ups by users who had not found an available bike elsewhere.
Modeling a station in isolation simplifies the analysis and the parameter fitting. This approximation is justified by the-oretical results stating that in the asymptotic regime of the number of stations going to infinity, under mild assumptions the stations can be viewed as independent of each other [7, 8]. Furthermore, this approximation is also used in more em-pirical related works which use Bayesian classifiers [9] and time-series analysis [13]. Di  X  erently from these, our model is explanatory in that the dynamics is explicitly given. Us-ing real data from the V  X elib X  system of the City of Paris, we actually validate that the real dynamics can be accu-rately captured by time-inhomogenous Poisson arrival and departure processes. To the best of our knowledge, such a validation of a theoretical model of BSS has not been done before. In contrast, Kaltenbrunner et al. adopt a determin-istic time series [13], while in [9] stochasticity is encoded as a hidden node in the Bayesian network through a Gaussian variable learned from the data. Our model also improves on two other aspects. First, being time-inhomogeneous, it naturally accounts for non-stationary behavior (a limitation of the auto-regressive moving-average model of [13] that was pointed out in [15]). Second, it can predict the whole prob-ability distribution of the number of bikes at a BSS station, instead of a coarser Bayesian classification into occupation ranges as in [9]. Models that take into account the state of neighbouring stations have also been proposed. A time-series model is presented in [15], which encodes stochasticity through an exogenous normally distributed noise term, to be fitted from the data. However, the empirical results do not show significant improvements over neighborhood-unaware predictive models. Guenther and Bradley [12] consider both a time-inhomogeneous population continuous-time Markov chain model and a model that uses regression analysis and errors fitted to a time series. The population model has the same probabilistic behaviour as the queuing model consid-ered in this paper. They use a fluid approximation approach to obtain point estimators for bike availability in each sta-tion of the system, whereas we focus on the entire probability distribution for a single station. Furthermore, we validate the core assumptions of the approach, i.e. , Poisson arrivals.
The ability to make probabilistic forecasts can improve the usability of the models by both users and providers. A group of users wishing to ride together may obtain an estimate for the probability of finding no fewer bikes than the group size at the origin station [15]. BSS providers, on the other hand, may rank critical stations according to the probabilities of them being empty (or full) at a given time. Unfortunately, all the aforementioned approaches [9, 13, 15, 12] only focus on point estimators.

Acknowledging the stochastic nature of a BSS also has an important implication on the methodology used to mea-sure and compare the accuracy of its predictors. In the bike-sharing literature, the most important accuracy index used so far has been the well-known root mean square er-ror (RMSE) between the point predictor and the actual ob-served outcome. This is also the metric used in an ongoing initiative aimed at comparing predictive models of BSS [1]. Our second main contribution, of a methodological nature, is to challenge the use of this metric by putting forward two arguments. First, we claim that it does not properly ac-count for the inherent stochasticity in the system. In the ideal case, an RMSE of zero would indicate a perfect pre-dictor; larger values can be used to rank the accuracy of di  X  erent predictors. Instead in this paper we show an anal-ysis concluding that, when applied to a BSS, even a point predictor with perfect information about the dynamical evo-lution of the system cannot yield zero RMSE. Second, we observe that the point predictors available so far may not always be informative for practical applications such as the deployment of a recommendation system. In this case, for instance, the user is not interested in the actual number of bikes available at some point in the future; rather, she is interested in being able to pick up a bike with high proba-bility. This information cannot be recovered directly from point estimators.

To overcome these di culties, we propose new metrics for BSS based on scoring rules, known to be appropriate to evaluate the accuracy of probabilistic predictors and to rel-atively compare them [11]. We use classical scoring rules to evaluate our ability to predict the number of available bikes. We propose a new scoring rule to evaluate our ability to rec-ommend the feasibility of a journey based on a tuneable threshold on the probability of finding at least one bike at the origin station. We apply this new methodology to eval-uate the accuracy of our queuing model using a real dataset from V  X elib X  . We show that for prediction horizons up to 5 hours, it significantly outperforms other predictors such as the Last-Value predictor (where the prediction is equal to the last observed value) and the Historic-Trend predictor (where the prediction equals the historical averages). Contributions. To summarize, this paper makes the fol-lowing contributions. Paper structure. We discuss the queuing model in Sec-tion 2, and validate the model against historic data in Sec-tion 3. We show that RMSE in not relevant for our metric in Section 4. We introduce a new metric based on scoring rules in Section 5. We conclude in Section 6.
We focus on a BSS that consists of N stations located in di  X  erent areas of a city. Each station i =1 ,...,N has a fixed capacity  X  i , which corresponds to the maximum number of bikes that can be parked at this station. The number of bikes that are available for rental at station i at time t is de-noted by X i ( t ) 2 { 0 ,...  X  i } and the occupancy of all stations at t is represented by a vector X ( t )=( X 1 ( t ) ,...,X Two types of events modify the state X i ( t ): If X i ( t ) &gt; 0, a bike can be picked up at station i (this modifies X i ( t )into X ( t ) 1); and if X i ( t ) &lt;  X  i , a bike can be returned at the station (therefore increasing X i ( t ) by one). It should be clear that X is a complex stochastic process: these events are influenced not only by external factors like weather and tra c conditions, but also by endogenous variables such as the occupancy of other stations in the network.

Now assume that at time t , a user decides that she wants to start a trip at time t + h from station i to go to station j . If she had a perfect knowledge of the occupancy of the sta-tions at any time, her decision to use the system would only depend on whether there are enough resources available to complete the trip successfully. That is, she is interested in knowing if station i is non-empty at the time of departure and station j is non-full at the time of arrival. If  X  ij travel time from i to j , the trip is successful if the condi-tions X i ( t + h ) &gt; 0 and X j ( t + h +  X  ij ) &lt;  X  In practice, the user has only access to the information up to time t , denoted by F t . Given the stochastic nature of the evolution of X , the problem from the user X  X  perspective therefore reduces to estimate the following probability: In what follows, we aim to define a method to provide the user with a reliable prediction for the feasibility of her trip. We rely on a stochastic model introduced in the next section.
Throughout this paper, we focus on the behavior of one station is isolation. We consider the following Markovian model for a station X  X  behavior: Users arrive at station i to pick up bikes according to a time-inhomogeneous Poisson process 1 of intensity  X  i ( t ), and bikes are returned to sta-tion i according to a time-inhomogeneous Poisson process of intensity i ( t ). Using Kendal X  X  notation for queuing net-works [2], one station is modeled as a time-inhomogeneous M/M/ 1 /  X  i queue, represented in Figure 1. Figure 1: Time-inhomogeneous Markovian model of astation i .

This model makes two approximations. The first one is that the transitions of our system are memory-less and that the arrival processes of users and bikes can be represented as a Poisson process. While this might seem restrictive, we will see in Section 3.2 that this behavior is close to what happens in reality. Moreover, Markovian models have been successfully used to model bike-sharing systems, for exam-ple in [7, 10, 12]. The second assumption is that the state of a particular station does not depend on the state of the
A time-inhomogeneous Poisson process of intensity ( t )is defined by two properties. First, for any t 1 &lt;t 2 , the num-ber of events A t 1 ,t 2 a time interval [ t 1 ,t 2 ], follows a Pois-son distribution of parameters t &lt;t 2 &lt;t 3 &lt;t 4 , then A t 1 ,t 2 and A t 3 ,t 4 are independent other ones. Again, this is not true in practice since when a station is empty, no bike can depart from it, therefore reduc-ing the arrival rate at other stations. An alternative, more realistic assumption, would be to consider a process for each trip from an origin i to a destination j , with departure and arrival intensities ij ( t ) and  X  ij ( t ) for each process. How-ever this greatly complicates the model and the parameter fitting for little gain. Moreover, the great number of sta-tions usually involved in BSS such as V  X elib X  allows us to apply the asymptotic analysis techniques introduced in [8], which argue that the isolation approximation becomes exact as the number of stations goes to infinity. Therefore in this paper, we restrict ourselves to a model in which each station behaves as an independent M/M/ 1 /  X  queue.

Under this assumption, the probability (1) simplifies into the independent computation of P ( X i ( t + h ) &gt; 0 | X P ( X j ( t + h +  X  ij ) &lt;  X  j | X j ( t )). The problem is symmetric between the departure (number of bikes available) and the arrival (number of free parking stands) stations. Hence, in the remainder of this paper, we focus on predicting the non-empty probability.
In this section, we describe the predictors that we will compare later. A probabilistic predictor issued at a time t 2 T for a time t + h t is a guess about the probability distri-bution of P ( X i ( t + h )= y | X i ( t )= x ), and can be written and mated probability that there are y bicycles at station i at time t + h , knowing that there are x bicycles at time t . We will now discuss some commonly chosen predictors. Last-value (LVP). The last-value predictor assigns all prob-ability mass to the number of bicycles in the last observation: This predictor depends on the time t at which the prediction is issued but not on the prediction horizon h .
 tor uses statistical information about the past. We decom-pose each day into intervals of 15min. Our dataset is com-posed of measurements x i ( d, s ), where i is a station, d 2 D is one day in the set of days for which we have measurements and s 2 S represents a time interval. Let | D | denote the number of elements in D . The historical predictor is then given by This predictor does not depends on t directly. It only de-pends on which time-interval of the day t + h belongs to. The current state x of the station does not influence this predictor.
 in Section 2.2, we model the behavior of each station i as an M/M/1/  X  i queue with varying arrival or departure rate. If we know these two parameters, we can compute the proba-bility that a station is full or empty at a given time in the future. Indeed, the transition kernel of the Markov chain for matrix:
Q ( ,  X  )= Note that to simplify the notation, we often denote by Q i the quantity Q i ( t )= Q ( i ( t ) , X  i ( t )).

By using the Kolmogorov equation, the probability that the station has y bikes at time t + h given that this station has x bikes at time t is: where exp( M ) is the matrix exponential of M and exp( M ) is its term at row x and column y . In Section 3.1, we discuss how to estimate i ( t ) and  X  i ( t ) using the historical dataset.  X  X lways go X  predictor. The  X  X lways go X  predictor pre-dicts that the station will be non-empty. That is, it returns a probability distribution for the occupancy of the station such that for all x, t, h , p i (0 | x, t, h ) = 0. It disregards any information about the system and is independent of t and h . It models a situation in which the user plans to use the system but has no apriori knowledge about the system.
In all numerical evaluation, we use historical data from the V  X elib X  system in Paris collected between 1 October 2013 and 31 December 2014 provided by the operator of V  X elib X  . Our dataset contains two types of data, one describing the availability at all the stations of the system and the other containing the individual trip information. The station mea-surements are made every minute and specify the number of available bikes and free slots in each station. In the other dataset each bike move is recorded with an indication of the reason for the move (bike rental by a user, maintenance or reallocation), the stations of origin and destination as well as the departure and arrival dates and times. We use this information to compute a historical predictor and estimate the (bike) departure and arrival rates, for each minute of a typical working day or weekend day (see the details in the next section).

In the numerical evaluations, we issue a new forecast each day of the week at t 2 { 7am , 11am , 3pm , 6pm } for prediction horizons from 5min to 10 hours. To simplify notation, in Sections 4 and 5, we write that we issue forecast at a time t 2 T . In fact, each element of the set T corresponds to a prediction issued for one particular station, at one of the times (7am, 11am, 3pm or 6pm) of a particular day. What we call the average performance of a predictor is the average over these |T|  X  2  X  10 6 values.
We estimate the intensities i ( t ) and  X  i ( t ) defined in Sec-tion 2 by using the dataset. As written in Section 2.3, each measurement can be written as x i ( d, s ), where d 2 D is a day and s 2 N represents the time of day. The set D of days Figure 2: Station use intensities: arrival of users as a function of the time of the day (left) and histogram of arrivals between 10am and 12am (right). is such that the intensities are assumed to be the same (e.g., all weekdays and roughly in the same season).

So far, we have not imposed any requirements on i ( t ) and  X  ( t ). We consider that intensities are piecewise constant (also called step functions ) and depend only on the time of day and whether this day is during the weekend or not. For one day, the function i :[0 , 24 h ] ! R is piecewise constant with n steps/pieces on R if there exist times t 1 ,...,t n 1 step heights l i 1 ,...,l in such that with t 0 = 0 and t n =24 h , and t j , l ij 2 R 8 j . Similarly,  X  is piecewise constant if with m ij 2 R 8 j . We consider that the times t 1 ,...,t are evenly distributed (all intervals have the same duration) and we estimate the step heights from the dataset. A naive estimator for l ij (in seconds) based on the | D | days observed would be to count the number of observed arrivals in the | D | corresponding intervals and divide this by ( t j t j 1 ) | D | . This, however, ignores the fact that we do not observe ar-rivals that take place when the station is full. We say that a second during the observation x i ( s, d ) is  X  X alid X  for the pur-pose of estimating arrival intensities if station i is non-full; the resulting estimator for the arrival rate is  X  l A similar argument holds for  X  m j , departures and seconds during which the station is non-empty.

The estimated intensities l ij and m ij vary to a consid-erable degree among the 1225 stations in the dataset. For example, the variation in terms of arrival intensities is dis-played in the right-hand figure of Figure 2. Still, some mean-ingful trends can be observed, especially if the measurements are partitioned into a  X  X eekday X  and a  X  X eekend X  part. This can be seen in the left-hand figure of Figure 2. In partic-ular, the weekdays have two rush-hour peaks whereas the weekends have a single peak in the afternoon.

Figure 3 displays how the choice of the number of steps impacts the estimated intensities. When there are many steps ( e.g. , t i t i 1 = 5min as in the top-left figure), the estimates have considerable variance: given a dataset of a fixed size, more windows mean fewer observations per win-Figure 3: Estimated intensities using di  X  erent time granularities for the  X  X ecqueur X  station. The error bars show the 95% confidence interval of the esti-mated parameter of the Poisson distribution. dow, which in turn means more variance. However, if the windows are very large (as in the bottom-right figure, where there are only 24 windows per day), too much information may be lost. For example, the fact that the morning rush hour seems to have two peaks is less clear in the bottom-right panel of Figure 3. In the numerical evaluation, we divided a day in 96 intervals of 15min and we focus only on week-days.
Alongside parameter estimation, we use the data to val-idate the assumptions underlying the queuing model. The central assumption underlying the choice to model each sta-tion as a time-inhomogeneous M/M/ 1 /  X  queue is that the bicycle arrivals and departures form Poisson processes. There are several ways to validate this. For example, one could ver-ify whether inter-event times are exponentially distributed and uncorrelated. In this paper, we check whether on each time interval on which the arrival and departure rates are constant, the distribution of arrivals/departure follows a Poisson distribution. Let and let D j be similarly defined for the departure process. Then if ( t )= 8 t 2 [ t j 1 ,t j ] for some 2 (0 , 1 ), it should hold that Again, this is analogous for D j and a constant  X  . If we partition the entire time period of interest into n pieces as discussed in Section 3.1, then we would obtain for all j one measurement a j of A j per day. Again, this assumption is Figure 4: Comparisons between the theoretical (white dots) and empirical (black dots) CDFs for bike arrivals at two stations, in time window 6. The K-S test statistic is the maximum (vertical) dis-tance between a pair of white and black dots in the graphs. The station on the left has a higher K-S test statistic ( K =0 . 3815 )thantheoneontheright ( K =0 . 1633) . There were 53 total arrivals at Pec-queur in this time window throughout the observa-tion period, and 2186 at Gare du Nord (2187 if we account for a brief period of station fullness). invalid if there are parts of the day where the bicycle sta-tion is full (for arrivals) or empty (for departures). There are two remedies: we can discard days when the station be-comes full/empty, or we can assume that if the station is non-full/non-empty some fraction p of the time, we rescale the measurements by p (so if we observe x arrivals in win-dow j on some day and the station is full half the time, we would record 2 x measurements). The latter choice will have an impact on the confidence levels of related statistical tests; still, this is what we will use in this paper.

Having obtained measurements ( a j,d ) d 2 D of the arrivals during time window j on day d , the question is whether the resulting empirical CDF given by is  X  X u ciently X  close to F A j ( m ) as defined in (4). Several measures of the distance between F A j and  X  F A j  X  X alled  X  X oodness-of-fit X  measures  X  exist, including the Cram  X er-von Mises criterion and the Kolmogorov-Smirnov (K-S) test statistic. We focus on the latter, given by A statistical test for the null hypothesis that F A j ( m ) is the distribution underlying  X  F A j ( m ) can be performed based on K . This test is implemented for discrete distributions in the dgof package of the statistical package R. Note that we do not actually conduct the K-S test in this paper; we just use its criterion as an indicator for prediction accuracy.
The K-S test statistic is illustrated in Figure 4. For two stations, both the empirical and Poisson distribution func-tions have been displayed. The K-S test statistic is the max-imum di  X  erence between the two functions. As can be seen, the K-S test statistic has a lower value ( i.e. , a better fit) for the station on the right than for the station on the left. Figure 5: Histogram of the values of the average K-S statistics for the bike arrivals during the one-hour time windows between 5AM and 8PM.

In general, stations for which we have many observations have a better fit with the Poisson distribution. Computa-tion of K-S test statistics, or even an average of K-S statis-tics over all (or just the daytime) time windows for a station gives an indication of how well the prediction algorithm is going to perform. An example of this is Figure 5, which is a histogram of the average K-S statistics for the bike ar-rival processes during the one-hour time windows between 5AM and 7PM. The stations for which our approach can be expected to do best will be those stations corresponding to the peak on the left. To mitigate seasonal e  X  ects, we only considered observations between 1 December 2013 and 28 February 2014. Stations for which there was at least one one-hour window without arrivals between 5AM and 8PM throughout the entire observation period, or for which the station was full or empty for a whole hour during this period, were discarded, leaving 692 stations.

The median K-S statistic in Figure 5 is 0 . 23579 (see Fig-ure 4 for a visual interpretation of the K-S statistics). Bear-ing in mind that even small weather e  X  ects would violate the assumption of Poisson distributions, we can conclude that the model assumptions are valid to a reasonable degree.
Most of the work dealing with prediction for bike-sharing systems, e.g. , [9, 12, 13, 15], focuses on providing a single value for X i ( t ), whose performance is generally evaluated using the root-mean-square-error (RMSE). The recently ini-tiated bike-sharing prediction challenge [1], also uses this metric: Participants are expected to submit a deterministic time series that represents the estimated number of bikes at a given station in the future. In this section, we show that regardless of their quality, the RMSE of such predictors will always be large due to the stochastic nature of bike-sharing systems. For instance, we present evidence that the best RMSE one can expect from a single-valued estimator for a prediction 2 hours in advance will lie between 10% and 20% of the capacity of a station.
Assume we want to determine the occupancy of the sta-tions h hours in advance, using all the information available up to now. A deterministic prediction of the vector X is-sued at t for the time t + h is a vector Y t ( t + h ), where for all i =1 ,...,N , Y t i ( t + h ) 2 [0;  X  i ] is a single real-valued number that corresponds to the predicted number of bikes at time t + h for the station i .

A classical way to evaluate the performance of a deter-ministic prediction [1, 9, 12, 13, 15] is to compute the root-mean-square-error (RMSE) of a predictor, defined as where k X Y k 2 2 = steps at which predictions are made. Note that the RMSE depends on the predictor used ( Y ) and on the time horizon of the prediction, h .
The smaller the RMSE, the closer our prediction is to the true value. It is tempting to say that the best predic-tor should have an RMSE of 0. However, we have seen in Section 2 that bike-sharing systems exhibit a stochastic be-havior. We now show that this stochasticity implies that the best predictor will have an RMSE of 1 bike at 5min and 3 bikes at 1h for typical parameter values, even if we have perfect knowledge of the parameters of our model (see Fig-ure 6a). Note that these values are consistent with the ones found in [15, Table I] in which the authors show that all their predictors have this performance. Note that we also obtain similar figures for the Paris dataset (see Figure 6b).
We consider a simple scenario with one station for which ( t )= and  X  ( t )=  X  are constant in time. The quan-tity X ( t ) behaves as a time-homogeneous continuous time Markov chain of transition kernel Q = Q ( ,  X  ), as defined in Equation (2). In particular, we have In this case, the deterministic predictor Y t best ( h ) that mini-mizes the RMSE is Y t best ( h )=
In Figure 6a, we plot the RMSE of the best predictor. We consider two scenarios, in which the capacity of the station is  X  = 20 bikes and such that at the time t 2 T when the predictions are made, X ( t ) = 10 bikes. In the first scenario, the flow at the station is balanced: =  X  = 5 bikes/hour while in the second scenario: = 5 bikes/hour and  X  =2 .
We draw two observations from these figures. First, for both scenarios, the RMSE are around 0 . 9or1 . 1 for a pre-diction at horizon h = 5min and around 3 . 5 for a prediction at horizon h = 1h. This implies that even someone who has perfect knowledge of the parameters and  X  of the system cannot predict the number of bikes in 1 h with a RMSE less than 3 . 5 bikes. In particular, this shows that the predictors presented in [15] all produce values that are close to the best that can be achieved. The second remark is that the RMSE is not su cient to provide the users with a precise indication on whether a trip is feasible. In particular, a user who wants to depart from a station is interested in knowing if there will be 0 or at least 1 bike but has little interest in the real value. These numbers are hard to guess from deterministic predic-tors. For example, in the unbalanced scenario, the predic-tions at 1 h are Y best (2 h )=2 . 50 which suggest that the trip would be possible. Another tentative approach would be to use a linear predictor Y t linear ( h )=(( X ( t )+(  X  ) h ) _ 0) ^  X  , Figure 6: RMSE for the best-predictors on an arti-ficial model (left) and on the Paris dataset (right). which corresponds to a linear evolution of the number of bikes truncated at 0 or  X  when the capacity is exceeded. This would give Y linear (2 h ) = 0 and suggest that the trip is not feasible. A true calculation shows that the probability of empty is 0 . 34, but neither the two predictors proposed above is able to provide this crucial information.
In Figure 6b, we compare the RMSE of the deterministic predictors based on the queuing model introduced in Sec-tion 2.2, as well as the ones based on historical data and the last-value. The deterministic queuing model predictor is Y t ( t + h )= average number of bikes observed is the past at hour t + h .
For all prediction horizons h , our queuing model provides the best RMSE and converges to the RMSE of the historic model as h increases. Last-value outperforms the predictor from historic data up to h = 5 hours but it deteriorates significantly as the horizon grows, reaching values worse by up to 50% for a large prediction horizon. In fact, we will see in Section 5 that when one wants to assess the feasibility of a trip, last-value is beaten by historic as soon as the prediction horizon exceeds h = 1 hour. This again reflects the fact that the RMSE is not an appropriate metric when the objective is to determine whether a trip will be successful: LVP has a much smaller RMSE than HP for a time horizon of 2h but is worse at predicting successful trips (Figure 9) because in the latter case, knowing if there will be exactly 10 or 15 bikes in a station is less important whereas knowing if there will be 0 or 1 is critical. As we will see in the next section, we need a di  X  erent metric to easily express these estimations and measure probabilistic forecasts.
Bike-sharing systems exhibit stochastic behavior. Hence, an alternative to using a deterministic predictor is to forecast the probability distribution of the number of available bikes at the station in the future. In this section, we first show how to evaluate probabilistic predictors by using proper scoring rules. We then develop two scoring rules to assess the per-formance of QMP in terms of its probabilistic predictions.
A probabilistic forecast for a value X can be represented by a probability distribution P . A probabilistic forecast contains information about the value that we think X will take but also a measure of confidence in this forecast. A natural way to evaluate a forecast is to use proper scoring rules. We now recall briefly the mathematical definition of a proper scoring rule; see [11] for a more complete exposition.
Assume that we want to forecast a random variable X that takes values in a set X . A scoring rule is a function S ( P ,. ): X ! R that associates to each i 2 X a score S ( P ,i ) 2 R [ { 1 } . The score of a forecast P is defined by its average score E ( S ( P ,X )). A scoring rule is said to be proper if, when X is generated according to a probability distribution Q , the score is maximized by the distribution Q . In other word, we have for any distribution P on X : It is strictly proper if Q is the only maximizer of (5). Note that scoring rules are defined without a priori knowledge on the distribution Q : it is not necessary to know Q to define a proper scoring rule and to compute the score S ( P ,X ). This is important as in practice the distribution Q is unknown (it is the one we try to forecast).

A proper scoring rule encourages honesty: a forecaster knowing the true distribution Q of X should issue a forecast P = Q . If one is very confident that X  X  x , then the issued predictor P will be concentrated on a single value x . In that case, the score S ( P ,X ) will be high when X  X  x but very low when X is far from x . On the other hand, when one has a low confidence in the prediction, P will give weight to many values and S ( P ,X ) will be neither high nor low regardless of the actual value of X .
 Skill score. When evaluated over a trace of measurement, the performance of a probabilistic forecast is measured in terms of average score over all forecasts and realizations: The higher the score, the better the forecast.
The predictors described in Section 2.3 provide a deter-ministic or probabilistic estimation of the number of bikes in a station in the future. Each predictor is a probability distri-bution over a finite set { 0 , 1 ...,  X  i } , where  X  i is the capacity of the station i considered. Note that a deterministic predic-tor is a degenerated probabilistic predictor that assigns all the probability mass to a single value. We evaluate numeri-cally these predictors on the Paris dataset by using classical scoring rules. The results are reported in Figure 7.
The most classical scoring rules are Brier score, the spher-ical score and the logarithmic score. Given a forecast P and a realization i , Brier score assigns a score S ( P ,i )=2 p P and the logarithmic score assigns S ( P ,i )= log p i to P , respectively. In Figure 7, we report the average score of the three predictors defined in Section 2.3 as a function of the prediction horizon for Brier and the spherical score. We choose not to report the performance of the logarithmic score for two reasons: First, because the performance of the QMP Figure 7: Average Brier score and spherical score when predicting the number of bikes available (the higher the score, the better is the predictor). and of HP exhibit the same trend, and second because the average score of LVP is always 1 with this score (LVP is a deterministic predictor, so when the actual number of bikes is not exactly equal to the prediction, the score is 1 ).
For both scoring rules, the shape of the curves are sim-ilar: the QMP has the best score for a prediction up to h = 5 hours in advance. After 5 hours, HP becomes slightly better. This seems to indicate that knowing the current number of bikes in a station is only important for prediction up to 2 to 3 hours in advance. Moreover, for both scoring rules, LVP quickly has the worst score (for prediction hori-zons larger than 10min (Brier) or 45min (spherical)). This comes from the deterministic nature of LVP, leading to an over-confidence in wrong predictions that tend to be heavily penalized by these scoring rules.
Predicting the number of available bikes is important from the system operator X  X  point of view, for example when she decides how to redistribute bikes in the system. However, this metric is less useful from a user X  X  point of view: A user who wants to take a bike from a station is only interested in knowing if there is at least 1 bike available but is less interested in knowing, e.g. , if there are 5 or 15 bikes. In this section, we design a scoring rule to evaluate a user-centered prediction, which aims at predicting if there will be  X  X o bikes X  or if there will be  X 1 or more bikes X  available at a given station at a given time in the future.

To construct our scoring rule, we assume that a user has preferences that can be modeled by a utility function. If a user decides to go to a station and finds a bike available, she gets a utility U (Go , OK) greater than U (Go , ; ), the score she would get if she goes and the station is empty. If she decides not to go, her utility is U (No go , ; ) U (No go , OK), indicating that she can be frustrated by knowing that in fact her trip was possible. If the user knows the probability p for a station to be non-empty, she will decide to go to the station to see if there is a bike if p p  X  , where p  X  is equal to: p = S (Go , ; ) S (No go , ; )
Theorem 2 of and Section 3.2 of [11] show that for any util-ity U such that U (Go , OK) U (Go , ; ) and U (No go , ; ) (a) U (Go , ; )=0 ( p  X  =0 . 5) (b) U (Go , ; )= 5( p  X   X  0 . 86) Figure 8: Example of functions G of Equation (8) that correspond to the scores given by Equation (7) . U (No go , OK) the following score is a proper scoring rule: More generally, if G :[0 , 1] ! R is a convex function, then a scoring rule that assigns the following scores is proper: Conversely, any proper scoring rules have the form (8)-(9). The function G corresponding to the score (7) is represented in Figure 8 for the parameters U (Go , OK) = U (No go , ; )= 1, U (No go , OK) = 0 and two possible values of U (Go , ; ).
We evaluate numerically the average score on the Paris dataset for the three predictors given in Section 2.3 and the scoring rule (7). We plot the average score of the di  X  erent predictors as a function of the prediction horizon in Figure 9. We set the parameters U (Go , OK) = U (No go , ; )=1to normalize the values at 1: a perfect predictor will get a average score of 1. Moreover, we set U (No go , OK) = 0 and we examine three possible values of U (Go , ; ) 2 { 0 , 5 , 10 } . These may indicate increasing degrees of  X  X onservativeness X  of a recommendation system, which more heavily penalizes false positives. In practice, we believe that it is reasonable to assume that U ( Go, ; ) is closer to -10 than 0 to capture that a user is more frustrated by going at a station and not finding a bike than deciding to not go to this station and realizing later that there was in fact a bike available. First, we remark that in Figure 9, the performance of HP and of the always-go policy depends on the prediction horizon. This comes from the fact the plotted values are averages over predictions issued at 7am, 11am, 3pm and 6pm. Hence, a value at prediction horizon of 10h is the average over values at 5pm, 9pm, 1am and 4am which is di  X  erent from the average over values at 7am, 11am, 3pm and 6pm. Figure 9a indicates that, on average, a user is more likely to find a bike in the former case.

We note that when U (Go , ; ) = 0 (Figure 9a), the score obtained by a predictor corresponds to the proportion of accurate information it gives to the user. Thus, from the score the always-go predictor we can see that, on average, the stations were non-empty 89% of the time.

For a short horizon (5-15min), both LVP and QMP make relatively accurate predictions compared to the other pre-dictors. However the performance of LVP significantly de-creases with the prediction horizon, while QMP remains competitive. In particular in the case U (Go , ; ) = 0, no-tice how QMP separates from LVP and catches up with the better middle and long-term predictors when the horizon becomes large. In the latter case ( i.e. more than 3 hours), HP is su cient to give an accurate prediction to the user. This emphasizes how the main source of information used by a predictor influences its  X  X ptimal X  length of the predic-tion horizon: The more heavily it relies on the current state of the system (cf. LVP), the more appropriate it will be for short-term predictions. Instead a predictor based on the average behavior of a station such as HP will exhibit better performance for large prediction horizons, because the future availability becomes independent of the current occupancy.
While QMP only slightly outperforms LVP and is compa-rable to HP in their respective optimal prediction windows, it clearly stands out when it comes to middle-term predic-tions, i.e. for horizons between 15 minutes and 3 hours. In particular, by comparing the accuracy of QMP as a function of U (Go , ; ) indicates that it is better suited than the other predictors for more conservative recommendation systems. This is also confirmed by the analysis of the next section, which looks at the probability that the user makes the wrong decision based on a tuneable probability threshold.
In the previous section, we showed that the user X  X  util-ity function U (  X  ,  X  ) induces a unique threshold p  X  that com-pletely defines her  X  X o/No go X  policy, namely: In this section, we study the reverse question: given a thresh-old, what is the proportion of the time that a user decides to go to a station but does not find a bike: (Go , ; ); and what is the proportion of the time that a user decides not to go to a station while there was in fact a bike available: (No go , OK). For instance, the policy ( i.e. threshold) p  X  = 0 corresponds to the  X  X lways go X  behavior, whereas a policy p  X  =1will always lead to a  X  X o go X  decision. We are now interested in how often the di  X  erent predictors are misleading from the user X  X  perspective, depending on her threshold policy. Figure 10: False positive and false negative probabil-ities as functions of the threshold probability p  X  for a prediction horizon of h =30 min (lower is better).
In Figure 10 we plot the proportion of bad decisions (wrong  X  X o X  decisions or wrong  X  X o go X  decisions) for a prediction horizon of 30 minutes as a function of the parameter p  X  . When this threshold is set to 0, the proportion of wrong  X  X o X  decisions is 11%. This proportion corresponds to the proportion of wrong decisions of an  X  X lways go X  policy. It is consistent with the value 89% of Figure 9a. For both HP and QMP, the proportion of wrong  X  X o X  decisions decreases as the threshold p  X  increases while the proportion of wrong  X  X o go X  X ecisions increases. This is due to the fact that, as p increases, the user less often decides to go to the station and therefore misses more opportunities. The situation is di  X  er-ent for LVP: In this case, for any threshold p  X  2 (0 , 1), the decisions taken by a user using LVP are policy-independent since LVP returns a deterministic value (LVP returns either  X  X he trip is feasible with probability 1 X  X r X  X he trip is feasible with probability 0 X ). This shows an advantage of informing the user of the probability of the trip feasibility rather than just a recommendation to go/not go: A user can set her own risk-level and decide to go as a function of this level.
We presented an approach to make forecasts of availability in bike sharing systems (BSS). Our approach uses a queuing theoretic model. Unlike previous techniques based on time-series analysis, our model is explanatory in the sense that it provides an explicit (time-inhomogeneous) dynamics, which is successfully validated across an entire one-year dataset of all stations X  activity in V  X elib X  , the BSS of the City of Paris.
The model naturally allows one to make probabilistic fore-casts, i.e. , predictions of the probability distribution of the state of a station, whereas previous work has focused on point estimators only. Shifting to this setting requires us to revisit the notion of accuracy of a predictor, which until now was measured by the root mean square error between the estimate and the actual observation. In this paper, we challenged this view and proposed instead new scoring rules for BSS predictors.

We believe that the possibility of making probabilistic forecasts has significant added value, since it may broaden the scope of the applicability of predictive models. For in-stance, it more directly provides user-centric quantities of interest, useful for journey planning, such as the probability of finding a bike at the origin station (and dually, of find-ing an empty slot at the destination station). Furthermore, it can be used in more sophisticated recommendation sys-tems that rank stations not only on their expected number of available bikes, but also on higher-order moments (e.g., the standard deviation), to favour those that exhibit less variability.

The extensive model validation conducted in this paper suggests that our model can in general be used in these ap-plications with high accuracy for prediction horizons up to 2-3 hours. For longer time horizons, we see on average no sig-nificant gain of a model that takes into account the current number of bikes parked at a station compared to just using the historical trend. In future work, we plan to examine the prediction accuracy in specific  X  X ritical X  circumstances, for instance during peak times in popular stations that tend to be either completely empty or full.

A limitation of our model is the implicit assumption of independence which allowed us to consider a station as an isolated queuing system. Future work will aim to relax this, by incorporating the BSS network structure in order to im-prove the prediction accuracy. Furthermore, we will test the generality of the approach by validating the model against other public datasets of availability in BSS.
This work is supported by the EU project QUANTICOL, 600708. The authors would also like to thank JCDecaux for providing the access to the data of the V  X elib X  system. [1] MoReBikeS: Model reuse with bike rental station [2] G. Bolch, S. Greiner, H. de Meer, and K. Trivedi. [3] P. Borgnat, P. Abry, C. Robardet, J.-B. Rouquier, and [4] P. DeMaio. Bike-sharing: Its history, models of [5] E. Fishman. Bikeshare: A review of recent literature. [6] I. Frade and A. Ribeiro. Bicycle sharing systems [7] C. Fricker and N. Gast. Incentives and redistribution [8] C. Fricker, N. Gast, and A. Mohamed. Mean field [9] J. Froehlich, J. Neumann, and N. Oliver. Sensing and [10] D. George and C. Xia. Fleet-sizing and service [11] T. Gneiting and A. E. Raftery. Strictly proper scoring [12] M. C. Guenther and J. T. Bradley. Journey data [13] A. Kaltenbrunner, R. Meza, J. Grivolla, J. Codina, [14] R. Nair, E. Miller-Hooks, R. Hampshire, and A. Bu  X si  X c. [15] J. W. Yoon, F. Pinelli, and F. Calabrese. Cityride: a
