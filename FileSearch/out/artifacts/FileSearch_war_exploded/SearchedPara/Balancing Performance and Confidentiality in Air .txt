 Studies on the performance issues (i.e., access latency and energy conservation) of wireless data broadcast have appeared in the literature. However, the important security issues have not been well addressed. This paper investigates the tradeoff between performance and security of signature-based air index schemes in wireless data broadcast. From the per-formance perspective, keeping low false drop probability hel ps clients retrieve the information from a broadcast channel ef-ficiently. Meanwhile, from the security perspective, achiev-ing high false guess probability prevents the hacker from gues s-ing the information easily. There is a tradeoff between these two aspects. An administrator of the wireless broadcast sys-tem may balance this tradeoff by carefully configuring the signatures used in broadcast. This study provides a guid-ance for parameter settings of the signature schemes in order to meet the performance and security requirements. Exper-iments are performed to validate the analytical results and to obtain optimal signature configuration corresponding to different application criteria.
 H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing -Indexing methods ; H.2.7 [ Database Management ]: Database Administration -Security, in-tegrity, and protection Security, Management, Design.
 Security, Indexing Techniques, Wireless Data Broadcast
With rapid advent of wireless technology and growing popularity of smart wireless devices, there is a strong de-mand on pervasive data services, which facilitate wireless de-vices and information appliances alike to access much needed information from anywhere, anytime. Today, there are many wireless technologies (e.g., Bluetooth, IEEE 802.11, UMTS, Satellite, etc) that could be integrated to construct a seam-less, pervasive information access platform. Although their goals and applications are very different, information access via these wireless technologies can be logically captured by a basic model which consists of an access point (i.e., base station or satellite) and a number of wireless channels. A client may access information via two basic approaches:
On-demand access employs a basic client-server model where the server is responsible for processing a query and re-turning the result directly to the client via a dedicate point-to-point channel. Alternatively, broadcast approach has the server actively pushing data to the clients. The server de-termines the data and its schedule to broadcast. A client listens to a broadcast channel to retrieve data based on its queries and, thus, is responsible for query processing.
Compared to on-demand access, broadcast approach is scalable and therefore very attractive to applications with a large number of clients. By broadcasting an item once, all the requests for this item from different clients will be sat-isfied. Broadcast has been used for TV and radio for a long time. Recently, data broadcast service also appeared. For example, the MSN Direct Service (http://direct.msn.com), based on Smart Personal Objects Technology (SPOT) and DirectBand Network, can provide weather, sports and traffic information to its customers via smart watches.

In a wireless data broadcast environment, any client with appropriate equipment can monitor the broadcast channel and log the data items being broadcast. If the broadcast data items are not encrypted, the broadcast data content is open to the public and any person can access them. Key-based encryption is a natural choice for ensuring secure ac-cess of data on air (i.e., only the subscribers who own the valid keys can decrypt the received packets to obtain the data items). Therefore, a search for broadcast data items is answered by receiving all the broadcast data items off the air and decrypting them for further processing (i.e., fil-tering out unwanted data items). To help alleviating the high cost of receiving, decrypting and filtering broadcast data, auxiliary information may be provided on the broad-cast channel to annotate the broadcast data items. This technique is called air indexing . The basic idea is that, based on index information broadcast along with data items (including indexed attribute values, arrival schedule, length of data items, etc.), mobile clients are able to selectively skip unauthorized or unwanted data items by slipping into doze mode and switch back to active mode only when the data of desire arrives. This technique, substantially reduc-ing workload and energy consumption of mobile clients, is particularly important for encrypted data broadcast. To fa-cilitate efficient access of data on air, index information is preferred to be non-encrypted. Nevertheless, non-encrypted index information may allow unauthorized attackers to infer the data content on broadcast and therefore cause confiden-tiality loss . In this paper, we examine both performance and security issues in air indexing techniques.

Existing air indexing techniques can be roughly classi-fied as tree-based and signature-based indexes [15]. The tree-based indexes, typically based on clustered data organiza-tions, provide a very accurate and complete global view (in the form of index information) of data items being broadcast on air and thus are very energy efficient for clustered data items. Nevertheless, this  X  X omplete X  and  X  X ccurate X  index in-formation, if not encrypted, causes significant confidentiality loss which is the major security issue we are concerned in this study. On the other hand, signature-based indexes are particularly good for sequentially structured media (such as a broadcast channel) and multi-attribute indexing. By natu-rally encoding all the indexed attributes in a bit-vector (i.e., a signature), signature-based techniques allow clients to ef-ficiently filter out unwanted data items and thus improve the performance. Since signature-based techniques do not provide the most clear index information, unauthorized at-tackers cannot be sure of the content of data items and thus reduced the confidentiality loss. In this paper, we investi-gate the tradeoff between performance and confidentiality of signature-based air indexes by analysis and experiments.
The main contributions of our study are four-fold. The rest of this paper is organized as follows. In Section 2, we present the background and related work to this study. The problem is formulated in Section 3, together with the metrics for performance and security. In Section 4, we an-alyze the false drop probability as well as the false guess probability and then derive analytical models for perfor-mance and security metrics in a secure wireless broadcast system. Furthermore, we present the simulation results to validate our analysis in Section 5. Finally, we conclude this paper in Section 6.
In this section, we first give an overview of the signature techniques and their application in the wireless data broad-cast. Then, we briefly review some related work.
Signature techniques have been studied extensively in in-formation retrieval [9]. A signature is basically an abstrac-tion of the information in a data item, which contains a set of attributes. By examining only a signature, we can determine (without checking the data content) whether a corresponding data item does not contain any searched at-tributes. Therefore, the signature techniques are very suit-able for quickly filtering out unwanted data items.
There are a number of ways to generate signatures. Given a set of data items to be indexed by multiple attributes, the signature S i of data item i is typically formed by first hashing each indexed attribute in the data item into a bit string and then superimposing (i.e., bitwise-OR, denoted as  X  ) all these bit strings into a signature. Note that the size of a signature equals the size of the bit string. An example of signature generation is depicted in Figure 1, in which an attribute is hashed into a 12-bit string.

To process a query, a query signature S Q corresponding to the query Q is generated similarly. The query processing is proceeded by comparing S Q and the signatures of examined data items using bitwise-AND (denoted as  X  ). The signa-tures match if for every bit set in S Q , the corresponding bit in the compared data signature S i is also set. There are two possible outcomes of the comparison: As shown in Figure 1, three queries are issued and their cor-responding signatures are produced. Based on the result of S
Q  X  S i , the examined data item is not qualified for the first query, Q=Hacker , and hence can be discarded. However, it shows a match for both queries Q=Security (true match) and Q=Mobile (false drop). Thus, the data item has to be retrieved for further checking. Signature techniques have Security 001 100 001 001
Pervasive 101 000 100 001 Security Hacker No Match Mobile Data Item i been employed for air indexing [11]. The idea is to put data items into groups and generate a signature for each group. A server broadcasts a signature before its corresponding group of data items. Since the data items are periodically broad-cast in the broadcast channel, a complete broadcast of the data items is called a broadcast cycle . Depending on size of data groups, simple signature and integrated signature air indexing schemes have been proposed. For simplicity, we assume that there is no overlap between the data items in one group for the integrated signature scheme. As shown in Figure 2 and Figure 3 respectively, each group in sim-ple signature scheme contains only one data item while each group in integrated signature scheme contains multiple data items (two in the example). It is assumed that the hashing function H adopted to generate the signatures is known to all the clients. Therefore, when a client issues a query Q , it first generates the query signature S Q based on H and then starts the retrieval process. Since the signatures and data items are interleaved, the client listens to the signatures to decide whether to retrieve their corresponding data items. When a signature shows a mismatch, the client, by tuning into doze mode, skips the corresponding data items to save energy. It turns back to active mode again when the next signature is broadcast to continue the search process. We assume that each data item has the same size. Thus, the arrival time of the next signature packet is predictable.
Air indexing is commonly adopted to conserve battery power in mobile clients. Several tree-based indexing tech-niques, such as flexible indexing and distributed tree index-ing, for broadcast channels were first introduced by Imielin-ski et al. [6, 7]. Based on the index tree method, work presented in [3, 13] uses unbalanced indexes to improve per-formance for skewed data access. However, these studies concentrated on one-dimensional indexes for equality-based queries. Lee et al. have addressed general queries with a semantics-based broadcast approach [10]. Tan and Yu have developed a broadcast program that supports range queries [14]. Traditional index techniques, such as hashing [7] and signature file [4], were also applied in air indexing, along with hybrid approach [5]. Besides the design of different in-dexing structures for different scenarios, index organization algorithms were also studied [8]. However, none of the above techniques addresses any security issue.
 There are some related work done in the networking area. For example, [12] focused on secure multicast group key management in the network and [1] proposed broadcast en-cryption schemes that disseminate a secret to only the priv-ileged clients. However, key management and cryptography are not the focus of this paper and we try to address the se-curity issue from data management aspect. Another related work in networking is Bloom Filter [2]. Different from the signature technique, it adopts multiple hashing functions to set the bit strings. As a result, the generation and compar-ison processes of the bit string become more complicated and time-consuming. It is not as suitable for the wireless broadcast systems as the signature techniques.
Our study aims at revealing important and practical in-sight on design, deployment and administration of secure wireless data broadcast systems. We assume that data items maintained in the server are indexed by a number of at-tributes to facilitate efficient search. In order to construct a broadcast program, the system administrator chooses a hashing function H for signature generation, decides the number of attributes to be indexed in signatures, and groups data items. Our goal is to obtain a signature configura-tion which minimizes confidentiality loss without introducing much performance deterioration. In this section, we discuss the performance and security metrics, introduce parameters that affect those metrics, and describe our approach in con-ducting this study.
Access time and tune-in time have been widely used as performance metrics in the studies of wireless data broad-cast. The former represents the access latency and the latter estimates the energy consumption in mobile clients. Since index information consumes extra bandwidth, balance be-tween the overhead of access time and the gain from tune-in time is extremely important to all the broadcast systems adopting air indexes. A query issued by a client may re-quest multiple items broadcast separately. Thus, a client has to listen to the whole broadcast cycle to avoid a miss of any right answer. Therefore, the access time is only af-fected by the bandwidth overhead caused by the signature. The tune-in time depends on the filtering ability of signa-tures. As long as a signature shows a match, whether a true match or a false drop, the data items have to be down-loaded and decrypted for further checking. Therefore, the false drop probability should be reduced to minimize the energy consumption on retrieving and decrypting unwanted data items.

On the other hand, the fact that one signature can match different queries provides an uncertainty which prevents at-tackers (also called hackers ) from knowing the indexed at-tribute values of data items. The hackers scan the broadcast channel, download indexes and data items, and try to guess the encrypted content of data items from indexing infor-mation. Hence, when a hacker downloads a signature from the broadcast channel, he might start a dictionary attack . He uses all the attributes in his dictionary D H to generate | D
H | signatures and compares each of them with a down-loaded signature. Assuming that the attacker X  X  dictionary is comprehensive, he will find a set of matches in D H . Among those matches, there are correct guesses and false guesses . A key challenge for the system administrator is to determine confidentiality loss by answering  X  X ow much information has been leaked to attackers? X  It is important for system ad-ministrators to be able to estimate and minimize the infor-mation leakage. Thus, information leaking degree (ILD) is defined as the security metric in this paper. An important job of the the system administrator is to facilitate highly energy-efficient data access to only the authorized clients (maybe with a cost of some small access latency delay and bandwidth overhead), while minimizing ILD .

The tradeoff between performance and confidentiality, both of which are important to a broadcast system, is studied in this paper. The formal definitions of all the metrics are summarized as follows:
The important parameters that affect the performance and security are listed as follows: Due to the fact that a data signature is superimposed from the bit strings of the indexed attributes, the value of u im-pacts the filtering ability of the signature. In general, a signature superimposed from a small number of attributes provides a more accurate representation of the indexed item. Although this parameter is usually application dependent, it can still be adjusted subject to the system needs. In tradi-tional information retrieval applications, the size of the sig-nature, m , is set to a large value and the number of bits set, w , is carefully selected to provide a large space of hashed bit strings and minimize hash collisions. However, for secure wireless data broadcast systems, a large signature consumes too much bandwidth and extends both access latency and tune-in time. Furthermore, a larger signature may result in a higher ILD . Consequently, it is extremely important for the administrators to consider all the factors and choose proper control parameters.
This study attempts to correlate performance and security requirements of the signature-based air indexing techniques for wireless broadcast systems and investigate the trade-off between them. At the first step, we conduct an analytical study that brings us a big picture of the impact of factors considered. Based on our observation, false drop (for au-thorized clients) and false guess (for attackers) play equally important roles in performance and security of the system. Thus, we show the false drop probability , which is the prob-ability that an authorized client thinks a data item is qual-ified with her query but actually it is not; and false guess probability , which is the probability that a dictionary value shows a match with an attacked data item but actually it is not. These probabilities represent a linkage between the performance and security metrics. The combination of pa-rameter settings can govern the false drop probability and false guess probability, which in turn can determine tune-in time, access time, bandwidth overheads and ILD .

Following the derived analytical model, we show the rela-tionship between the performance and security metrics and examine various system settings. For example, we fix band-width overhead and access time and analyze the tradeoff between ILD and tune-in time by varying related parame-ters. We perform an evaluation by systematically varying signature length and bit strings. As such, we can provide a guidance to the system administrators for configuring sig-natures to meet the performance and security requirements of wireless broadcast systems.
In this section, we first analyze both false drop probability and false guess probability for the signature schemes. The performance and security metrics are then analyzed based on these two probabilities.
Without loss of generality, we assume a class of uniform hash functions are used to generate signatures. For a given application A , we use D A to denote the combined domain of indexed attributes. The notation used in our analysis is summarized in Table 1.
Semantically, the false drop probability P f refers to the probability that the signature of a data item matches the query signature, yet the data item actually does not satisfy the query. Given a query Q and corresponding signature S , false drop probability can be experimentally obtained as follows. Among the total C signatures within one broadcast cycle, let C t be the true matches, C f be the false drops, and C m 0 be the number of signatures that do not match S Q , i.e., C = C t + C f + C m 0 . The false drop probability P f is defined as the ratio of C f to ( C  X  C t ).
 Since both the hash collision and superimposition of bit strings in signature generation may cause false drops, we use P f,col and P f,sup to denote the false drop probabilities caused by hash collision and superimposition, respectively. In order to analyze hash collision, collision factor is used A an application; D A the combined domain of indexed attributes in A; D H the hacker X  X  dictionary; C number of signatures in a broadcast cycle;
C f number of matched signature due to false drops;
C t number of matched signature due to true matches;
C m 0 number of signatures that do not match;
G number of values received from the hacker X  X  G f number of values received due to false guesses;
G t number of values received due to correct guesses; m number of bits in a signature; n the size of an attribute in the unit of bit; u number of attributes indexed in a data item; s number of data items in an integrated data group; w b number of 1 X  X  in an attribute X  X  signature; w f average number of 1 X  X  in a data item X  X  signature;
P f false drop probability;
P g false guess probability;
P s selectivity of a query; to denote the average number of different inputs hashed into the same output. Given a hashing function that gener-ates a bit string from an attribute under an application A , CF A,bstr denotes the average number of attributes mapped into the same bit string by the hashing function. Similarly, the collision factor for a signature in application A, CF denotes the average number of data items hashed into the same signature. Therefore, given u indexed attributes con-tributing to the signature of a data item, there are at least ( CF A,bstr ) u  X  s attribute values colliding into a signature. On the other hand, given the average number of 1 X  X  in a signa-ture (denoted by w f ) which can be derived in terms of u , m and w b , there can be as many as ( CF A,bstr ) comb ( w f items colliding into a signature. Here comb (  X  ,  X  ) is the bino-mial function and comb ( w f , w b ) is the number of bit strings that possibly contribute to the signature. Thus, we have
For an application A , comb ( | D A | , u ) is the upper-bound of the number of the data items contained in one broad-cast cycle, which can be used to estimate C under simple signature scheme. We suppose a given query only has a simple attribute, then the number of matched items can be estimated by CF A,sig  X  comb ( | D A | X  1 , u  X  1). Among the matched items, only comb ( | D A | X  1 , u  X  1) items are the true matches while the rest are false drops due to the hash collision. As a result, P f,col can be estimated as follows.
Recall that in the integrated signature scheme, s data items are integrated into a group. A true match happens when at least one of the s items within a group contains the searched key. Thus, the number of true matches C t can be estimated as follows.
 where I t equals to comb ( | D A | X  1 , u  X  1) and I f equals to comb ( | D A | X  1 , u ). Hence, C  X  C t = comb ( I f , s ). Conse-quently, P f,col in integrated signature scheme can be derived as below. Note that when s = 1, Eq. (2) equals Eq. (4).
For a given signature S Q of a query, for each bit belong-ing to S Q that is set to one, the corresponding bit of the signature S i of a data item/group is also set to one, a match occurs. However, if the corresponding bits belonging to S are actually contributed by different attributes, a false drop is caused by superimposition. The false drop probability caused by superimposition P f,sup has been derived in the literature of traditional information retrieval [11].
Suppose an attacker receives a signature S d from the broad-cast channel, he produces a set of signatures S j where j  X  [1 , | D H | ] from his dictionary and compares each of them with S d . Let G be the total number of matched guesses, G t be the correct guesses and G f be the false guesses (i.e, G = G t + G f ). The false guess probability P g (from the at-tacker X  X  view) can be defined as the probability that a dic-tionary value matches a signature of an item but actually is different from the item.

Hash collision also has a direct impact on the false guess probability. Let CF H denote the collision factor associated with D H (usually much larger than D A ), G f can be approx-imated by ( CF H  X  1)  X  G t . Therefore, false guess probability caused by hash collision P g,col ( D H ) is defined as follows. Finally, the false guess probability caused by superimpo-sition is the same as the false drop probability caused by superimposition.

According to above analysis, we have the following obser-vations. First, P f is closely related to 1) the signature length m , 2) the bit setting w b , and 3) the number of indexed at-tributes superimposed into a data signature u . Therefore, by tuning these parameters, the system can adjust P f . More specific, P f is increased if we decrease m , increase u , or do both. The tuning of w b is more complicated, which will be explored by our simulation in Section 5.

Second, P f,col is related to 1) the size of the application X  X  domain D A , 2) the number of attributes superimposed into one signature u , and 3) the collision factor CF A,sig . Intu-itively, the larger the collision factor, the larger the P D
A and u are also related to the number of matches in signa-ture comparisons. P f,col should be made as small as possible based on the performance requirements.

Third, P g,col cannot be ignored since | D H | is much larger than | D A | . We can choose a hash function that is sufficiently good for the smaller application domain. The attackers are expected to receive more matches (due to CF H ) and thus feel more difficult to guess the right answer.
Based on the derived false drop probability and false guess probability, an analytical model for performance and secu-rity of a secure wireless broadcast system is developed.
Since we assume that a query can be completed only when all the signatures within one cycle are compared, the access time for a given query is one broadcast cycle. In addition, the client needs to perform an initial probe before a signa-ture is received. Let P ROBE denote the initial probe time which on average is a half of the summation of a data group and its signature, and CY CLE denote the time to broadcast the whole cycle, which includes both the signature segment SIG and the data segment DAT A . Given that each group contains s items, the corresponding access time ( ACC ) is derived as follows.
 The tune-in time is the time a client stays active for the initial probe P T , scanning all the signatures within one cycle and retrieving all the matched groups (including both true matches and false drops). In our analysis, P T = P ROBE . Suppose that the selectivity of a query P s is known, tune-in time ( T U N E ) can be derived as follows.
 Finally, the bandwidth overhead ( BO ) is given as folows.
For a received signature S i , suppose that a hacker finds G matches with signatures generated from his dictionary and that only G t attributes are really contained in the attacked data item. Since ILD is defined as the ratio of G t to G , it is obviously affected by the false guess probability. Thus, it can be derived based on P g .
 This equation reveals some interesting insights. When P g 0, the information leaking degree is 100%. To reduce infor-mation leaking to 50%, P g needs to be raised up to G t / ( | D G ). This finding indicates a dependency between informa-tion leaking degree and the false guess probability and points out an observation, i.e., having a reasonable false drop prob-ability, which has similar behavior as the false guess proba-bility, is not such a bad idea for security reasons, even though low false drop probability is preferred from the performance perspective.
As discussed earlier, a secure wireless broadcast system can meet different performance/security requirements by tun-ing the control parameters. We conduct several experiments by simulation to demonstrate the flexibility of signature-based air index. All the experiments are implemented in C language in a Unix system. As shown in Table 2, the applica-tion domain D A has 1 , 000 attribute values. We assume the application has 10 , 000 data items to broadcast. Each data item is characterized by 10 indexed attribute values drawn from D A . On the other hand, the attacker X  X  dictionary D contains 10 , 000 attributes which is a superset of D A (i.e., we made a conservative assumption from the administrator X  X  standpoint). The signature size, m , is set to 64, 128, and 256. By tuning w b from 1 to m , the system administrator can generate different configurations of signatures.
The experimental results shown here are obtained from the average of 100 queries, each of which is based on an attribute value drawn from D A . The false drop probability P f and false guess probability P g are obtained by both of experiments and analysis for validation. The tune-in time is obtained by Eq. (10). The ILD for each broadcast data item is experimentally obtained by counting the number of correct guesses and the number of total guesses. The ILD shown in the figures are the average of ILD for each attacked data item.
We have performed a series of experiments to validate our performance and security analysis. In our experiments, we assume each data group in the integrated signature scheme has 4 data items. By fixing signature size m to 64 , 128 and 256, we vary the number of bit settings, w b , to observe its im-pact on false drop probability, false guess probability, tune-in time, and ILD . As for the bandwidth overhead, inte-grated signatures obviously consume much less bandwidth than the simple signatures scheme because the number of integrated signatures generated is smaller.

Due to the space limitation, here we only show simple sig-nature with m = 64 and m = 256 in Figure 4 and Figure 5, representing small and large bandwidth overhead allowed, respectively.

The readers should note that the analytical value of false drop rate shown here is approximated by P f ( D A ) = P f,col + P f,sup ( D A ). The false guess probability is similarly ob-tained by P g ( D H ) = P g,sup ( D H ) + P g,col ( D H ). Since the collision factor in our analysis, ( CF A,bstr ) u  X  s , is estimated by its lower bound, the shown analysis values represent lower bound of the real values.

From the figures, we can observe that while the analytical results do not accurately approach the simulation results all the time, their curves show consistent trends. Most impor-tantly, they are close to each other at critical points. This is very useful for quick tuning of control parameters because the analytical results are easier to obtain than simulation results(it took days for us to obtain our simulation results). Also shown in the figures is that the tune-in time shows an opposite trend to ILD as we vary w b . Thus, it X  X  very im-portant for the administrator to be able to efficiently decide the best signature configurations that meet specific perfor-mance and security requirements. For example, if an appli-cation requires a higher security, the administrator can raise the false guess probability higher by choosing a larger w For an application to facilitate better energy conservation at clients, a lower false drop probability can be obtained by set-ting a smaller w b . The simulation results of the integrated signature scheme provide the same hints and therefore are ignored here due to the space limitation. In order to demon-Figure 4: Performance/Security Metrics of Simple Signature Scheme ( m = 64 ) strate the behavior of the metrics under different settings of m , we have performed extensive simulations. Due to the space limitation, we only show the results for m = 256 in Figure 5. All the trends in the figures are similar with those in Figure 4 ( m = 64). It is worth noting that the minimal false drop probability is smaller while the minimal tune-in time is not.

This is because the filtering ability of signature is im-proved with a larger m which reduces the false drop proba-bility. However, a signature with a larger m also incurs more bandwidth overhead and hence increases the tune-in time. Based on the simulation results, the energy saving owing to the decreased false drop probability is not sufficient to offset the overhead incurred due to the length of the signatures. That X  X  why the minimal tune-in time for m = 256 is even longer than that for m = 64. Similarly, a bigger m results in a decreased false guess probability and thereby the maximal ILD is increased. As a result, getting a larger signature does not necessarily guarantee a minimal tune-in time, as well as a maximal ILD .
Ideally, a secure wireless data broadcast system should provide an efficient data access with minimal information leakage. In other words, it requires the false drop probability to be small but false guess probability to be large. Since both P f and P g share the same trend, it is impossible to optimize both security and energy at the same time. However, a Figure 5: Performance/Security Metrics of Simple Signature Scheme ( m = 256 ) system administrator can still reach a balance on tune-in time and ILD by properly tuning w b .

Given a fixed m , without loss of generality, we can obtain a signature configuration that optimizes a normalized cost, ranging over [0 , 1] assigns different weights to performance and security. The larger  X  is, the more important the tune-in time is considered. In this case, the administrator would like to decrease the tune-in time while increasing ILD (which is the price he has to pay). For example, when security and performance share the same importance to a secure system,  X  = 0 . 5. As a result, the corresponding w b that achieves the optimal balance can be derived by either theoretical analysis or experiments.

The relationship between ILD and the tune-in time based on the tuning of w b is shown in Figure 6. From these fig-ures, we can observe a trade-off between the tune-in time and ILD . While we cannot obtain the minimal ILD and the minimal tune-in time at the same time, an optimal con-figuration corresponding to different values of  X  (i.e., rep-resenting different emphasis of performance and security) can be obtained. Based on our simulations, optimal w b set-tings with respect to different signature configurations (i.e., signature sizes and schemes) and  X  , along with the corre-sponding tune-in time and ILD are summarized in Table 3. As such, once an application criteria is set (by assigning a proper  X  value), the system administrator is able to set a suitable value for w b to balance both performance and secu-rity. Our analysis has provided useful and valuable insights to facilitate this task.
Air indexing is an important technique to facilitate energy conservation of mobile clients in wireless broadcast system. However, the crucial security issues on air indexing have not been discussed. This paper, to the best of our knowledge, is the first research effort to address both performance and security issues in wireless data broadcast systems.  X  m Simple Signature Integrated Signature w 0 . 25 0 . 50 0 . 75
In this paper, we argue that signature-based air index is an ideal technique to meet the performance and security requirements of applications because the tradeoff between performance and security metrics can be properly tuned by system administrators. We define a security metrics called information leaking degree to measure confidentiality loss in air indexes and analyze both security and performance met-rics in terms of a number of controllable parameters. The analysis provides much insight and guidance about tuning the system. We also conduct a series of simulation-based experiments to validate our analysis and to show that op-timal configurations can be easily obtained to meet various performance and security requirements.

This is a new research direction which deserves more ef-fort from the research community. We are developing new air indexing techniques for secure wireless data broadcast and performing more detailed analysis. Both of the perfor-mance and security aspects of wireless data broadcast will be further exploited in our future study.
 Wang-Chien Lee and Qingzhao Tan were supported in part by NSF Grant IIS-0328881.
 Peng Liu was partially supported by NSF CCR-0233324 and Department of Energy Early Career PI Award.
