 In this poster, a new Farsi (als o called Persian) stemmer which works without dictionary is in troduced. Evaluation results show significant improvement in perform ance (precision / recall) of the Information Retrieval (IR) system using this stemmer. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing.
 Design, Languages, Performance. Farsi, Persian, information retrieval, stemmer, language. 
Farsi is an Indo-European language spoken and written primarily in Iran, Tajikistan a nd parts of Afghanistan. Farsi alphabet contains 32 letters. Fars i is written from right to left. Some other languages like Arabic, Kurdish, and Urdu use Farsi X  X  form of penmanship but have th eir own specifications. Farsi also has its own specifications such as not using accents (except in special cases) and polymorphism in writing. One of the popular techniques for improving performance of the IR systems is providing searchers with ways of finding morphological variants of search terms. This can be done by a stemmer. Stemmer recovers the stem or the base form of a word by either stripping off affixes or by a static lookup in a word list (such as dictionary) for irregular forms. For example consider two words  X  X  X  X  /pes ri:/ ("a boy") and  X  X  X  X  X  /pes rh / ("boys"). The former is indefinite form and the later is plural form of  X  X  X  /pes r/ ("boy") and both can be stemmed to the word "  X  X  X  ". In this poster we introduce a new Farsi stemmer working without dictionary. Evaluation results show significant improvement in the performance of the IR system using this stemmer. In addition to this intr oduction, this poster contains four more sections. In section two, ne w advantages of this stemmer are introduced. Section three is dedicated to design of the stemmer. In section four evaluation results of the stemmer in term of precision/ recall are shown.
 a word to determine its original language. When the stemmer ensures that a given word is Arabic, it proceeds through some Arabic stemming tasks. 
The stemmer is completely rule-based. Each rule can be activated by an affix. The result of each rule is one or more actions. The starting point of the stemming is removing noun suffixes and verbal suffixes. Th en the stemmer goes to remove prefixes. The stemmer looks for th e changes that have been made in suffix-sensitive words in all the phases. 
The stemmer has ten phases. Each phase is dedicated to one or more certain grammatical rules. There is a general condition and it is that after doing each rule X  X  action(s) the length of the resulted root should not be less than a certain number. We consider 2 letters as the minimum length of the word. These are ten phases of the stemmer: 
To evaluate the stemmer, a collection of 250 Mb containing 43,680 Farsi documents was used. These documents have several subjects like sport, economic, policy, history, etc. For more information about this collection, the reader is referred to [2]. 
To evaluate the stemmer 25 queries were applied. The relevant documents of each query were selected by a native Farsi speaker. First, the system (a classic vector-based system) was started up without the stemmer in the indexer and the searcher. The queries were fed to the system and the performance of the system was evaluated (Table 5). Then the system was restarted up using the stemmer, and again it was evaluated with the same queries (Table 6). Comparing these two tables, the system which used the stemmer was 0.151 or 46% better. 
The results of our stemming test indicate that the Farsi stemmer improves retrieval. Our tests were done on a small collection, so the effect of the stemmer on bigger collections is not known at this time. There are some ways that can improve the stemmer as an example a list that has present tens roots and their corresponding past tense roots helps to better retrieval of verbs.  X  X emoving X  is a short notation. E ach phase may have some other stemming tasks in addition to just removing the affixes. 
