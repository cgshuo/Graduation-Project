 fi c alarm event threshold in WSN. The proposed model implements 1. Introduction
Wireless Sensor Networks (WSNs) provide an ideal schema for gathering data as opposed to sensor nodes and data transmission through wireless networks. These types of networks range in applications from the military ( Bekmezci and Alag X z, 2009 )and health care monitoring ( Darwish and Hassanien, 2011 )todisaster response ( Shamshirband et al., 2010 ). The existing application designs for wireless sensors afford greater fl exibility in establishing commu-nications and increasing system automation, but are de fi security and privacy ( Naserian and Tepe, 2009; Sun et al., 2013; Xu, 2010 ). The core weakness of these sensor nodes lies in the limited-resource devices, i.e. power and processing units ( Aslam et al., 2011 ). For this reason, vulnerability to various security threats is notably high. Meanwhile, adversaries may possess passive and active access to secret information, such as keys stored in a compromised node by eavesdropping ( Schaffer et al., 2012 ) or Denial of Services (DoS) attacks. Thus the wireless medium becomes overloaded and the probability of packet collisions wit hin the interfering signal's range increases, causing, in both cases, additional sensor node energy consumption ( Tan et al., 2013 ).

In mitigation security attacks, the Soft Computing (SC) approach incorporates Intelligent Intrusion Detection Systems with Preventions (IIDPSs) to detect and impede abnormal traf patterns that diverge from the modeled, expected, normal traf behavior ( Abraham et al., 2007; Anuar et al., 2013; Arun Raj Kumar and Selvakumar, 2013; Baig et al., 2013 ). A simple inspection packet mechanism was proposed by Tsunoda et al. (2008) to avoid stateful inspection against Distributed Re fl ective Denial of Service (DRDoS) attacks. Munoz et al. (2013) utilized fuzzy Q-learning for congestion detection to drop packets that differ from normal features. Misra et al. (2011) utilized a learning automaton to prevent Denial-of-Service attacks. While I DS-based SC approaches, such as misuse, anomaly and hybrid methods, display relatively reasonable performance regarding detection accuracy and minimal resource consumption, they fail to detect  X  unknown  X  attacks ( Shamshirband et al., 2013 ). Hence, applying cooperative-based soft computing McGregory, 2013 security techniques that protect the wireless sensor network infrastructure by maximizing detection accuracy remains a challenge (( Shamshirband et al., 2013 ). As such, an attempt is made through this research to address the problem of security by applying thecooperativegame-basedfuzzyQ-learningmechanism.

The philosophy behind the cooperative game system is hereby employed to integrate anomaly detection into WSNs ( Shamshirband et al., 2013; Patel et al., 2013; Huang et al., 2013; Shen et al., 2012 ). The game notion takes into account the results of the strategy selected by the players involved. In our scheme, however, the players (i.e., sink node, base station and attackers) are exchanged with actual wireless sensor nodes to detect attacks and defend against attackers by means of the cooperative game mechanism. In identifying the diversity of adversaries potentially encountered by a node, a Fuzzy Q-learning (FQL) algorithm is applied to reinforce players  X  self-learning abilities and provide detector players with an incentive function to protect the most vulnerable sensor nodes that represent possible security threats.

The remainder of the paper is structured as follows. In Section 2 related studies are presented. Section 3 describes the proposed model and its methodology. The model integrates a cooperative game theory with fuzzy Q-learning and aims to detect Distributed Denial-of-Service (DDoS) in WSN. The game model design is provided in Section 4 by introducing the player strategies, payoff functions, along with the reward and utility function. Section 5 highlights the fuzzy Q-learning algorithm, while Section 6 pre-sents the simulation setup and a performance analysis discussion, particularly the detection and defense accuracy, network lifetime as well as energy consumption. Finally, Section 7 concludes the manuscript with suggestions for future research work. 2. Related studies
Data transmission within a WSN necessitates the ful fi llment of fi ve requirements associated with security and energy consump-tion, namely data privacy, authentication, integrity, a distributed denial-of-service (DDoS) attack in terms of fl ooding attack, and energy exhaustion ( Huang et al., 2013 ). A multitude of DDoS attacks has been designed, which can be categorized as synchro-nized packets in transmission control protocol (TCP SYN) fl User Datagram Protocol (UDP) fl ooding, and Internet Control Message Protocol (ICMP) fl ooding. A fl ooding attack employs overwhelming volumes of packets to deplete the victim network's resources including the processing capability among network terminals. It may be assumed that the victim system's memory stack becomes saturated and no new demands can be processed ( Zhou et al., 2010 ). In a WSN, fl ooding is more damaging on account of unstable wireless links, unbalanced usage of network resources, and weaker network devices, in which sensors always have processing and energy capability constraints. Sensor nodes near access points (i.e., sink nodes or cluster head routers) are normally more heavily loaded ( Feiyi et al., 2007 ).

Among the numerous proposed network routing protocols over the past years, hierarchical routing protocols signi fi cantly contribute to a system's scalability, lifetime, and energy ef fi ciency ( Akkaya and Younis, 2005; Anisi et al., 2012 ). In hierarchical networks, nodes are allocated to different roles, such as CHs and cluster members. The upper level nodes, or the cluster head s (CHs), manage and collect data from the grouped, lower level nodes (cluster members). Each CH gathers data from the cluster members within its own cluster, aggregates this information, and then transmits it to the sink. All hierarchical routing protocols endeavor to select the fi nest CH and cluster the nodes into suitable g roups in order to conserve energy ( Lung and Zhou, 2010 ).

Although hierarchical protocols have innate weaknesses such as requiring time synchronization, potentially producing non-optimal routing, and utilizing higher overhead for cluster manage-ment, they reveal attractive advantages regarding WSN constraint management. Compared with fl at protocols, hierarchical protocols offer a more feasible solution to handling large-scale networks with their enhancements to share limited wireless channel band-width, balance node energy consumption and reduce communica-tion expense more optimally ( Lung and Zhou, 2010; Liu, 2012 ). For instance, BEE-C ( da Silva Rego et al., 2012 ) is a hierarchical routing algorithm bio-inspired by the behavior of bees for Wireless Sensor Networks (WSN), which aims to conserve the energy of sensor nodes. The BEE-C is based on the LEACH (Low Energy Adaptive Clustering Hierarchy) and LEACH-C (LEACH Centered) protocols, which are both prominent WSN protocols identi fi ed in literature. BEE-C is applied to sensor networks with continuous data dis-semination. The results indicate a number of BEE-C advantages over LEACH and LEACH-C. In the search for an ef fi cient approach to generate clusters, the well-understood hierarchical clustering algorithm is adopted in this paper by proposing a distributed hierarchical clustering algorithm that is discussed in Section 3.1 .
Several countermeasures ( Li et al., 2009 ), such as source-end defense points ( Mirkovic and Reiher, 2005 ), core-end defense techniques ( Chen and Hwang, 2006 ), victim-end defense ( Wang et al., 2007 ) and adaptive probabilistic fi lter scheduling ( Seo et al., 2013 ) have been developed to mitigate damage caused by fl attacks in a routing protocol. Implementing fi rewalls, rate limita-tion and access control lists (ACLs) on routers may avert ongoing fl ooding attacks. End-to-end authentication should be well designed to ensure that each user is certi fi ed prior to access to any network resource or the wireless channel ( Das, 2009 ). Tradi-tional security strategies, like fi rewall and cryptography, are alternatives to preventing external intruders and satisfying data con fi dentiality, authentication, and integrity. Conventional strategies are essentially impractical in completely protecting network resources (i.e., energy resources) from increasingly sophisticated internal attacks ( Qiu et al., 2013 ).

A different security approach incorporates Intrusion Detection and Prevention Systems (IDPSs) to detect and impede internal intrusions ( Shamshirband et al., 2013 ). The Traditional Arti Intelligence (TAI) (i.e., fuzzy set, neural network, genetic algorithm and arti fi cial immune system) adapts to the IDS to capture the network's traf fi c activity through sensors and analyze it. For instance, the fuzzy data modeling-based wireless sensor network runs its dynamic rule settings to process all malicious events observed by the sensor and implements intrusion detection tech-niques ( Kumarage et al., 2013 ). The Computational Intelligence (CI) classi fi ers (i.e., neuro-fuzzy, learning automata against DoS attack ( Misra et al., 2009 ), game theory and reinforcement learning) regulate the multiagent to generate an iterative process of obser-ving attack patterns, adjusting to the mathematical model, and predicting future attacks ( Alpadin, 2010 ). More recently, the multi agent-based computational intelligence (MCI) IDS has been employed in wireless sensor networks to alleviate a DDoS attack through a cooperative agent scheme ( Shamshirband et al., 2013 ).
The game theory is an applied mathematics branch that deals with the way rational entities or agents make decisions in the application of WSNs ( Huang et al., 2013 ), cognitive radio networks ( Elias et al., 2011 ), and ad hoc networks ( Naserian and Tepe, 2009 ). It affords an array of mathematics tools for modeling and analyzing the interactions among rational groups, whereby ration-alism is founded on the pro fi t or reward perceived by the entities ( Shoham and Leyton-Brown, 2009 ). Anomaly based WSN in the game-theoretic approach is a tremendously dif fi cult task on account of the distributed nature of numerous players in WSNs. A large number of players additionally results in dif fi culty achiev-ing equilibrium in a competitive game. To deal with a type of attack in WSN, Naserian and Tepe (2009) included an assortment of games, such as a non-cooperative, two-player, and non-zero-sum to their stratagem. In this game arrangement, better decisions are made according to the principles offered by payoff prevailing conditions. Shen et al. (2011) took into account the signaling game to create an IDPS game exhibiting the interaction between an attacker and cluster head in a WSN. The Bayesian Nash Equili-brium (BNE) scheme in conjunction with the mixed-strategies for outstanding detection policies served as the basis for their model. Thus, an ideal fundamental shield tactic to protect WSNs was achieved, while the probability of detecting attacks was simulta-neously considerably enhanced.

A multi agent system utilizes the reputation security mechan-ism to perform dynamic role assignment based on the following three parameters: reputation, bootstrap time and energy. The approach evicts highly non-cooperative and malicious nodes from the network ( Misra and Vaish, 2011 ). An adaptive learning routing protocol employs a learning automata algorithm for ef fi cient malicious node detection ( Rolla and Curado, 2013 ). The multilayer reinforcement learning framework assisted by the Hidden Markov Model (HMM) was proposed to solve real-time detection in a complex state space ( Andersen et al., 2009 ). The results indicated that the network's cost function could be optimized if the agents collaborated repeatedly. In our proposed scheme, the cooperative game is implemented into IDPS to generate the bene fi ts of a fuzzy Q-learning algorithm with a value function to mitigate the ing attack issue in a WSN with respect to detection and defense accuracy. Resource loss, accuracy of attack detection via sensors, and service inaccessibility at critical times are among the chal-lenges posed, and through this research, an effort is made to confront the security setbacks by applying the cooperative game-based fuzzy system and reinforcement learning mechanism. 3. Proposed model 3.1. WSN model
In the present research study, Fig. 1 illustrates the distributed network with hierarchical routing, which consists of clusters (C), their coordinators, or Cluster Heads (CHs), as well as the member sensor nodes (S). In the current scheme, the Cluster Head (CH) is assumed to be a Sink Node (SN) in each cluster. The SN monitors the behavior of sensor nodes by collecting data from the member sensor nodes and transmitting the critical status  X  the attack information of the sensor nodes, to a Base Station (BS). Each cluster is mapped into distributed system formation while the set of sensor nodes is mapped into each cluster grouping. Although only one BS is shown in Fig. 1 , practically there could be several implemented in a real operational WSN.

The route from a sensor node to a BS is a deemed distributed-hierarchical path that creates a hierarchical system with numerous routes, which is the main feature of cluster-based WSNs. Sensor nodes function independently to avoid the collapse of all sensor nodes in case one of them fails. The sensor node redundancy approach increases the overall reliability in distributed hierarch-ical systems. Fig.1 illustrates how sensor nodes send collected data from a sink node to a BS via other adjacent sink nodes, and the BS receives data only if all SNs within the routing formation are actively functioning. Hence, a set of clusters on a route is counted as a set of independent distributed-connected elements. Attacks in this scenario can target the WSN in multiple ways, with DDoS attacks potentially originating either from the Internet or neigh-boring wireless sensor sources. 3.2. Methodologies and techniques used
The game-based detection and defense mechanism operate to detect DDoS attacks, where the sink node and base station adapt to select the best strategy of detecting an immediate attack and respond to it. Regardless of whether the attacks are carried out on a regular or irregular basis, the IDPS can adjust its learning parameters through fuzzy Q-learning to identify future attacks. The architecture of the proposed game-based FQL is dual, that is, it has two phases ( Fig. 2 ).

Phase 1: In the primary stage of the game scenario, player 1 (the sink node) utilizes the fuzzy Q-Learning algorithm to identify the level of disruption done by the attacking player to the victim node, causing anomalies such as low access or damage. For attacker player detection, the sink player adopts three strategies, namely catch, missed, and low catch, as elaborated in Section 4.1.1 (player strategies applied to the sink node). Finally, the sink node transmits an alarm event that contains malicious node information to the base station (player 3) by an adjacent link connected to the base station ( Fig. 1 ). The malicious information is preprocessed by the sink node to travel from phase 1 to 2 based on the alarm event beyond the default value threshold, to prepare a countermeasure strategy against the attacker through a defense mechanism.

Phase 2: In the second phase of the game scenario, player 2 (base station) employs the fuzzy Q-learning algorithm to con the malicious node's behavior. It checks the memory of player 1 or looks it up in a table and compares it with its memory in order to defend against the attacker. The detection player (sink node) and defense player (base station) coordinate their defense with each other to shield the wireless sensor nodes against the attacker player (attack/intrusion).

To highlight the proposed game-based FQL, the sink node and the base station are allocated a corresponding reward/incentive functional value, which is retained by the Fuzzy Q-learning IDPS. As such, a node's evolving fuzzy state may be recorded and quanti fi ed through the fuzzy reward utility function as discussed in Section 4.1.2 (the player payoff function). When a node encounters an attack or receives an anonymous message, the sink node sends the related severity alarm event evidence and mes-sages to the BS, who then analyzes the critical data to adjust the FQL parameters. Based on the sink node information, the base station decides which nodes are under attack or at risk and elects whether to safeguard them or not. The BS has previously set a severity alarm event threshold rate, v . Once the severity alarm value acquired by a node exceeds v , the FQL IDPS deems the node under attack or at risk and strengthens its defenses to secure the cluster area in which the node is detected at the associated base station. 3.3. Possible attack categories
In this research study, the Open System Interconnect ( OSI ) model link/MAC layer, network layer, transport layer, and application layer. The attacks for each layer are analyzed by focusing on the fl ooding attack and its potential defenses. In the proposed scheme, a speci fi c kind of DDoS attack is created with respect to a attack that affects cluster heads. The generated attack sends fl ooding UDP packets to diminish the cluster head's energy. Table 1 indicates the impact of such attacks on the WSN layers as well as the defense mechanism.

In this work, only a DDoS attack in the application layer is considered. It is characterized by the presence of an attacker, and is known as a UDP fl ooding attack. In the proposed model, a UDP fl ooding attack occurs based on a random function to compromise the CH in each cluster. This kind of DDoS attack is aimed at exhausting CH energy by sending fl ooding packets in a fraction of time ( Ghosal and Halder, 2013 ). 4. The architecture of cooperative game-based FQL IDPS
The proposed game-based defense strategy is primarily a combination of the cooperative game theory and fuzzy Q-learning algorithm. The game-based detection and defense mechanism operate to detect DDoS attacks, where the sink node and base station adapt to select the best strategy of detecting an immediate attack and respond to it. Regardless of whether the attacks are carried out on a regular or irregular basis, the IDPS can adjust its learning parameters through fuzzy Q-learning to identify future attacks. A comprehensive description of the theo-retical and practical operation of the game theory and Q-learning modes, mainly concerning Fuzzy Q-learning, is provided later. Cooperative game based architecture in a WSN is shown in Fig. 3 and the block diagram of Fuzzy Q-leaning optimization system is proposed in Fig. 4.

In the primary stage of the game scenario, player 1 (the sink node) utilizes the FQL algorithm to evaluate the contents of the attacker player's level of access (i.e. low access, or damage). With regard to detection, the sink node player assumes three strategies, namely catch , missed or low catch . Upon completing the fi the sink node transmits an alarm to the base station (player 3) when the attacker assaults the sensor node. In the second phase of the game scenario, player 3 (the base station) employs the FQL algorithm to evaluate the attack records in order to defend against the attacker. The detection player (the sink no de) and defense player (the base station) take part in a game via a 3D game interface to shield the wireless sensor nodes against th e attacker player (the attack). 4.1. Game design
In the proposed game theory method, it is assumed that the sink node can identify abnormalities in view of IDS1. Accordingly, in computer-generated WSNs, the sink player or cluster head diffuses the alarm to the base station (IDS2) upon perceiving an anomaly. When the IDS1 receives an anomaly message, it acquaints itself with this sort of attack using the FQL detection algorithm and archives the information in its attack record database. The IDS2 attempts to respond to these attack records. The fundamental concepts of the proposed game theory, player strategies and player payoff function are introduced next. 4.1.1. The player strategies
The interactions between the G-FQL and the attackers are split into two main categories, as seen in Tables 2 and 3 respectively. The fi rst category represents the game between the attacker and sink node players, while the second type denotes the game between the attacker and the base station player. The game play strategy between a sink node and an attacker with respect to IDS1 comprises: (1) Best choice for sink: The sink node chooses to identify the (2) False negative: The sink node chooses not to identify the (3) Medium choice: The sink node chooses to identify the attacker (4) False positive: The sink node elects to detect the attacker, and (5) Least damage: The sink node chooses not to identify the (6) False positive: The sink node chooses to identify the attacker
The game strategy between a base station and an attacker concerning IDS2 is de fi ned as follows: (1) Best choice for base station: BS elects to defend and the attacker (2) False positive: BS elects to defend, and the attacker chooses not (3) False negative: BS elects not to defend, and the attacker (4) Least damage: BS elects not to defend, and the attacker chooses 4.1.2. The player payoff function
In this research, a payoff value is de fi ned as a player reward function if it protects the WSN. In other words, when the IDPS fails to defend the WSN in case an invader attacks, the payoff of the player would be different. The three player payoffs are expressed and the base station payoff, respectively. Table 4 displays the payoff matrix, the utility function as well as a description of the utility function. 4.1.2.1. Attacker payoff function. The attacker's payoff matrix A A where a 11  X  IR Cost processing represents  X  Number of malicious attacks = Total malicious attacks sent  X  X  processing time for attack  X  ; which is when an attacker and the sink node choose the same sensor nodes to attack and detect, respectively (AS1, SS1). The attacker's a 12  X  IR Cost processing represents an instance when the attacker attacks and the sink node do not detect it correctly. However, a 13  X  IR Cost processing means that an attacker attacks and the sink node detects a compromised node with a low rate of detection. a 21  X  Cost processing ,whichsigni fi es that an attacker does not attack at all, but the sink node falsely det ects the attacker. By subtracting IR  X  X  Number of malicious attacks = Total malicious attacks sent attacker and sink node choose two different strategies, neither of which causes an attack nor detects an attack correctly, respectively. In this case the cost of attacking one node from the original utility is attack and the sink node detects t he attack with low probability/ performance. 4.1.2.2. Sink node payoff function. By denoting the sink node's payoff with matrix B  X  b ij 2 n 3 we get: where
Cost process detect is the cost of attack detection during sink processing 4.1.2.3. Base station payoff function. By describing the base station's payoff functions with matrix C  X  c ij 2 n 2 ,itisde C where C 11  X  P k Cost defend denotes  X  Cost ofkilling attacks  X  the cost of defending against attack  X  , which is when a base station and attacker choose the same sensor nodes to attack and defend, respectively. 4.1.3. Reward function analysis
Based on the three-player game, two constant reward values are de fi ned: R 1 as the gain of the IDS1 when the sink node identi fi es the WSN and reward value R 2, or positive reward, as the gain of the IDS2 when the base station protects the WSN. If the sink node does not identify the WSN during the attack, the reward of the IDS1 would be  X  R 1 (a negative reward). Likewise, if the base station fails to defend the WSN during an attack, the payoff of the B IDS2 would be  X  R 2. An explanation of the correlated reward/ incentive functions of a sensor node and base station is provided in Table 5 . To detect a potential future DDoS attack on a sensor node, Fuzzy Q-learning is applied to enhance the self-learning ability of the IDS1 and IDS2 processes. The Fuzzy Q-learning supplies the IDPS with a learning mechanism, but the self-learning ability of the Q-learning IDS can evolve during the learning process, something that takes learning time, especially at the beginning. Through such self-iterative learning, IDSs are capable of protecting sensor nodes from recognizable potential attacks in ongoing active WSNs.

Fuzzy Q-learning is a discrete-time fuzzy-based Markovian procedure. When the process is at time t and fuzzy state FSt , the Decision Maker may choose to perform a fuzzy action. The process responds with a corresponding fuzzy reward for the decision maker at time ( t  X  1) and moves to fuzzy state Fst  X  1. The interaction details and information are as follows. Based on the Fuzzy Q-learning concept, a function fx (1) :FS 1 -FD 1 FA 1is de fi ned to demonstrate the detection and attack strategies for node x at a speci fi c interval in IDS1. For instance, fx ( state 1) ( d 1 ,a 1) depicts ( d 1 ,a 1), which is a combination of the detection and attack strategies when the node sink transits from state st to st  X  1, and the reward established by x is de fi ned as R 1( fx ( st )) as given by Eq. 4 : In the fi rst case of Eq. (4) , no detection and no attack are de Accordingly, the reward is fi xed at 0. The second case de when the sink node detects an attack with high accuracy, and its reward would be R 1. In the last case,  X  if P d  X  low and where the sink node uses strategy P d with low processing cost and high detection accuracy to identify attack strategy IR with low attack and low processing cost, the reward is  X  R 1. The fi ( P ) represents the gain of employing the sink node's strategy to detect attack strategy ai , and  X  Cost processing ) represents the cost of using strategy. The second term,  X  IR  X  , represents the gain of utilizing the attack strategy with the processing cost for the attacker.

In the IDS2 scenario, the reward function incorporates the shield policy and attack strategy when the BS transits from state s to st  X  1 , and the reward received by the base station is de R 2( fx ( st )) as given in Eq. 5 : In Eq. (5) ,the fi rst case de fi nesnodefenseandnoattack.Therefore, the reward is set to 0. In case two, when the base station defends against an attack with high defense strategy, its reward would be R 2. The last case indicates that the base station uses strategy P processing cost and low cost of defending against an attack strategy, therefore the reward is  X  R 2. The fi rst term ( P k ) represents the base station's gain of using strategy to eradicate the attack strategy ai ,and the  X  Cost processing  X  signi fi es the cost of using strategy. The second term  X  IR  X  denotes the gain of applying the attack strategy with the processing cost for the attacker.

It is assumed that the state of node x is s 0 at t  X  0. If the defense and of node x evolves from s 0 to s 1 , and node x (with respect to the sink In Q-learning, the state of node x transits from s 0 to s to sp where 1 5 p 5 k 1, where k signi fi es the ef fi ciency of IDS1 using the di strategy in detecting and defending against an aj attack strategy. Thus, the accumulated reward received by x is R  X   X  p where  X  A [0 , 1) is the discount rate parameter. An attack strategy, and the objective of IDS2, is to choose a suitable defense policy against an assault to accumulate rewards. It is noteworthy that R will be calculated as two sub-rewards, such as R 1forthebasestation and R 2 for the sink node. An instance of the reward function given to the cluster head (sink node) and attacker situation is the total amount of positive reward signals received when no attack has occurred and no alarm is raised (True Negative), and the number of correct invasion cases detected by the system (True Positive). The game theory phases are as follows:
Phase 1 : The sink node monitors message attacks through the game-based FQL operation as the fi rst step de fi ned by IDS1 (see
Table 2 ) and then conveys the message to the base station for the second step function de fi ned by IDS2 (see Table 3 ). Phase 2: Upon receiving an abnormal signal from the sink node,
IDS2 uses its detection fi tness test in conjunction with the knowledge database to assess attack patterns and severity. This evaluation permits IDS2 to regulate the overall defense strategy in order to mitigate the DDoS attack. The IDS2 function uses the fuzzy game theory principle to select an appropriate defense tactic to shield the message-consuming sensor node. The IDS2 also informs the affected sink node that it needs to protect itself against the offending attack pattern.

Phase 3: The sink node veri fi es the current state of IDS play with the sensor node. If the sink node still detects an irregu-larity, it is likely that the IDS2 operation opted for the wrong defense strategy, and in turn, the sink node advises the IDS2 to revise its detection strategy. If the attack pattern alert count at the sensor node decreases in number, the sink node system-atically endeavors to con fi rm the current state of IDS play with the sensor node until the attack condition is resolved and returns to the correct state of defense strategy.

R 1  X  f x  X  S t  X  X  X   X  low and Cost processing  X  low  X   X  high and Cost processing  X  low  X   X  low and Cost processing  X  low  X 
R 2  X  f x  X  S t  X  X  X 
Phase 4: The sink node noti fi es IDS2 that the attack at the sensor node has been successfully counteracted and the attack has ceased.

Phase 5: The IDS2 thus concludes defending the sensor node. 4.2. Utility function To appraise the ef fi cacy of the associations determined by the G-FQL and to determine the applicability of the rule at every point in time, Eq. (7) was utilized in this work, as suggested by Huang, et al. (2013) .In Table 6 the parameters of the utility function are described: U  X   X  n SP  X  n FN  X  n FP  X  7  X  The game principle approach entails detection accuracy with low time complexity, which only afterward begins to formulate a shield policy. The major drawback of the game theory is that if attacks are recurring over a short period, a considerable amount of time is consumed in the detection phase, something that weakens the defense. It can be said that the detection precision may be low while the false alert rate is high. This problem is a worst-case scenario but can be addressed using the Cooperative-FQL pro-posed by Shamshirband et al. (2013 ). Its principal contribution is identifying the probability of future attacks aimed at a wireless sensor node. For frequent attacks occurring over a short time, multiagent-based FQL was adopted to deal with the excessive time spent on detection. The aim of the proposed FQL is to obtain high detection accuracy with a low false alarm rate. 5. Fuzzy Q-learning algorithm
To overcome the required complex detection and defense time, as well as detection precision issues in our game theory method, the FQL algorithm proposed by Shamshirband et al. (2013) is applied in this paper to detect probable future points of attack in advance. To optimize Q-learning algorithm performance from the action selection method and reward function perspectives, fuzzy min-max methods were employed. In the proposed scheme, the fuzzy min-max action selection and reward function with conventional Q-learning are evaluated. High detection accuracy performance was demonstrated. For this reason, FQL was employed to reinforce a system's learning capability.

TheFLCinputsareprovidedbytwoscenariosthroughtheswitch-ing process. In the fi rst scenario, which is the game between a sink node and attacker, P d  X  X  Correct attack detection = Total detection and no detection  X  , the cost of attack detection during sink processing  X 
Cost process detect  X  as per sink node utility function and IR  X  Number of malicious attacks = Total malicious attacks sent as Cost processing  X  processing time for attack with respect to the attacker utility function, correspond to the fuzzy state of network S 1( t )fromthe fi rst scenario S 1  X  t  X  X  X  Pd ; Cost _ process second scenario that is the game between the base station and an attacker, Pk  X  cost of killing attack , Cost defend  X  Power cost during defence against attack adapts as a base station utility function and IR  X  X  Number of malicious attacks = Total malicious attacks sent and Cost processing  X  processing time for attack ,withregardtothe attacker utility function, correspond to the fuzzy state of network S 2( t )fromthe fi rst scenario: S 2  X  t  X  X  X  Pk ; Cost _ defend
The FLC output, given by the increment in states, represents the action of the sink node and the base station A ( t ). The reward signal, R ( t ), is built from FLC and is measured in both modes of adjacency in order to test if the sensors experience attacks in detection mode and the base station correctly defends against attacks. The linguistic variables Pd, Cost_ Process , and IR act as input for the fi rst scenario, while the linguistic variables Pk, Cost_defend , and IR serve as input for the second scenario.
The Detect Con fi dence ( DC 1) behaves as output for the scenario and the Defend Con fi dence ( DC 2) acts as output for the second scenario. They are both applied in the experiments ( Table 7 ).

Two fuzzy sets are identi fi ed in all inputs and outputs, whose linguistic terms are  X  Low  X  (L) and  X  High  X  (H). The fuzzy reward is elaborated in Section 4.1.3 . Hence, the objective is to determine the total reward value over time. If the defense and detect strategy di is used against the attack strategy aj at time p and the state of node x transits from S t to Sp  X  1 , the Q-learning function for IDS1 is Q: S D A -R as given in Eq. 8 : Q  X  S p ; d i ; a j  X   X  Q  X  S p ; d i ; a j  X  X   X   X  R  X  f x s p where  X  A (0 , 1] is the learning rate factor. In this scheme, the Q-function is applied in dual situations, such as IDS1 and IDS2. In each state, a cluster head (sink node) gets rewarded by the reward function using the Q-learning method, and the base station also obtains the reward. G-FQL attains the fi nal reward value of each player. A learning rate of zero means the system does not learn anything new, but a value of 1 would prompt the system to adjust its accuracy strategy as it self-learns from new attacks and update the information in its knowledge base. If the reward value is below the threshold, v , FQL IDS1 deems node x secure; otherwise it considers the node insecure and takes suitable detection action against the attack. Simultaneous to this evalua-tion, FQL IDS2 takes appropriate defensive action against any potential attacks. 6. Simulation and analysis 6.1. Simulation setup
To appraise the performance and check the connection between G-FQL and the routing protocol, NS-2 is simulated. In this work only the Distributed Denial-of-Service (DDoS) attack is considered. DDoS is characterized by the presence of an attacker and is called a fl ooding attack, and it causes noise in wireless communication by sending fl ooding packets as well as exhausts energy ( Ghosal and Halder, 2013 ). The noise disrupts communica-tion between nodes in the network, preventing them from enter-ing  X  sleep mode  X  due to the medium getting fl ooded with messages.

The Low Energy Adaptive Clustering Hierarchy (LEACH) proto-col was utilized in the simulation, as it most closely re in practice and it is also applicable to dealing with energy consumption concerns in WSNs. The simulations were run for 1000 s with LEACH as the routing protocol, the initial access point energy was 100 J, the effective transmission range of the wireless radio for the access point was 100 m, the sink node transmission range was 100 m, the common node transmission range was 50 m and the transport protocol is given in Fig. 5 . In addition, the cooperative game-based IDPS with fuzzy Q-learning, was employed to hasten the simulation.

Table 8 presents the WSN con fi guration along with the set of parameters applied in NS-2. However, in practical WSN security operation, minimizing energy usage to conserve energy and maximize detection accuracy as much as possible is vital when designing and running G-FQL within ef fi cient IDPS. The results obtained from the proposed algorithm are compared with those from Fuzzy Logic Controller, Q-learning, and Fuzzy Q-learning ( Shamshirband et al., 2013 ) as well as the Markovian Game ( Huang et al., 2013 ). 6.2. Generating and analyzing the fl ood attack strategy
The purpose of this section is to analyze the quantitative behavior of attacks in the UDP protocol layer. In the present experiments, normal UDP traf fi c was initially considered, after which the attack intensity under fl ood attacks with UDP traf was explored. Subsequently, the total energy consumed before and after attack was examined. The accuracy of detection and defense as a result of executing the G-FQL algorithm was fi nally assessed. To generate an attack, a random function was employed, which selected subject nodes from each cluster to attack. The selected nodes adjusted their functions to send fl ooding packets to the cluster head. Algorithm 1 displays the attack strategy. Algorithm 1. Attack strategy. 1. Start 2. Min( r )  X  0%% Initial round simulation (Max( r )  X  n ) 3. While ( r o 4 n ) 4. Decide r round's cluster head randomly 5. Cluster head advertises schedule time to all its common 6. Generate attack node randomly 7. Attack node receives schedule time message from its cluster 8. Attack node starts to compromise victims 8.1. Attack node sends fl ooding packets to its cluster head in 8.2. Victim (cluster head) receives data more quickly than 9. End.

In the experiment, an attack with UDP attack intensity was implemented. Fig. 6 indicates fl ooding attack intensity per packet length. Greater attack intensity percentage obviously occurred between 200 and 300 s, at which time packet length also reached elevated values. In Fig. 7 it appears that UDP attack intensity affected the WSN energy, besides the fact that energy was consumed in proportion to attack intensity. For example, for attack intensity between 100 and 150 s, the most energy was consumed.
In the present research work, three sets of experiments were conducted to examine the effects of attack detection accuracy and defense rate against attacks based on the Fuzzy Logic Controller, Q-learning algorithm, Fuzzy Q-learning and Game theory-based Fuzzy Q-learning algorithms. The cost function was calculated according to Eq. (7) .
 6.3. Analysis of the game-based FQL IDPS in terms of detection accuracy
The proposed game-based Fuzzy Q-learning (G-FQL) algorithm with the cost function U  X   X  n SP  X  n FN  X  n FP was compared with existing soft computing methods (Fuzzy Logic Controller, Q-learning, and Fuzzy Q-learning) with respect to the attack detection precision of modeled Denial-of-Service attacks. A comparison between the average utility function and G-FQL with cost maximization indicates that the latter yielded an improvement of 3.29% with 1.86 standard deviation as opposed to the FQL algorithm with 0.83 ( Table 9 ).
It is evident that G-FQL with a cooperative mechanism attained the utmost detection accuracy gain. It can also be inferred from Fig. 8 that detection accuracy per percentage of attack is higher with the G-FQL algorithm than the other methods.

In Fig. 8 , the X -axis shows the percentage of malicious nodes in an attack, and the Y -axis indicates the accuracy rate. At higher attack frequencies, the proposed method (Game-based FQL) displays greater accuracy scores. 6.4. Analysis of game-based FQL IDPS in terms of defense rate The proposed Game-FQL method was weighed against that of Huang et al. (2013) , who used the game theory and Markovian IDS with an attack-pattern-mining algorithm. According to Huang et al.'s (2013) empirical results, the defense rate effectiveness of non-cooperative-based Markovian IDS with an attack-pattern mining algorithm for 60% of malicious nodes in a network and two sink nodes ranged between 72% and 97% ( Fig. 9 ). With the proposed game-based FQL IDPS, the successful defense rate was between 79% and 98%, as per Fig. 9 as well. It can be concluded that integrating the game theory with the Fuzzy Q-learning algorithm outperforms individual defense schemes.

Fig. 9 points out that the successful defense rate values for Huang et al.'s model (2013) and the proposed methods decreased from 100% to 87% when the anomaly percentage increased. However, the proposed method gained the advantage of a successful defense rate due to the higher percentage of malicious nodes detected compared to Liao's lower success rate. It can thus be deduced that by integrating the game theory with the Fuzzy Q-training method, performance sur-passes that of any other individual defense approach. 6.5. Analysis of game-based FQL IDPS in terms of number of live nodes
This experiment was conducted to evaluate the performance of the Game-FQL algorithm in terms of number of live nodes during the simulation runtime. In the current scheme, the number of sensor nodes was 200. Fig. 10 displays the number of live nodes for different algorithms throughout simulation runtime. The simula-tion outcomes indicate the number of live nodes at the end of the simulation time (1000 s), according to which, the number of live sensor nodes in the proposed Game-FQL method is signi fi cantly greater than existing algorithms. Game-FQL maintains 50 live nodes against an attack in comparison to 42, 32, and 21 live nodes for FQL, QL, and FLC, respectively.

The procedure of adjusting rules according to FLC-based DDoS attacks is more time-consuming, and the attacker defeats a high number of nodes during FLC detection ( Baig and Khan, 2010 ). Q-learning-based DDoS attack detection is capable of handling minor-class DDoS attacks, but the multi-objective procedure or major features of a DDoS attack consume maximum resources, especially in a real-time environment ( Liu, 2008 ). Fuzzy Q-learning-based DDoS attack detection utilized the min-max fuzzy method to enhance the classi fi cation scheme. The min-max fuzzy classi fi ers perform well with a reduced dataset, but inaccurately when the high volume of traf fi c increases further and the fuzzy IDPS may crash. In addition, prior knowledge of data distribution is required for the FQL algorithm. In the Fuzzy Q-learning algorithm, observation is limited by one single classi fi er ( Shamshirband et al., 2013 ). Therefore, this algorithm fails due to high volumes of real-time traf fi c. In the currently proposed method, the cooperative policy evaluates the pro fi ciency of an agent to optimize the cost function based on weight assignment mechanisms for real-time DDoS attack detection. The countermeasure mechanisms result as modules to be applied in Game-FQL architecture and system implementation to accelerate the detection and defense learning process in a fraction of the usual time. Thus, the Game-FQL preserves a greater number of sensor nodes during simulation. 6.6. Analysis of game-based FQL IDPS in terms of energy consumption over time
In this experiment, the energy consumed by the Game-FQL algorithm during DDoS attacks on sensor nodes in comparison to FLC, QL, and FQL is studied. Fig. 11 provides the comparison between the mentioned algorithms in terms of total energy consumed by sensor nodes.

In existing detection, the players (sink node and base station) partake in activities such as local sensing and data reporting, which consume additional energy. The overhead of energy consumption may be considerable if the number of cooperating players or the amount of sensing results in the report is very large. Thus, energy ef fi ciency needs to be considered in cooperative sensing schemes. To address this issue, the cooperative game-based FQL method enhances energy ef fi ciency via optimization. 6.7. Analysis of the energy consumed by different deployed nodes in the game-based FQL IDPS
The impact of number of deployed sensor nodes on energy consumption is shown in Fig. 12 .Itisobservedthatwithan increasing percentage of deployed nodes, the proposed Game-FQL is able to consume the total amount of energy in comparison with FQL, QL, and FLC.
Finally, Fig. 12 depicts the total energy consumed with varying numbers of sensor nodes deployed in the network. The experi-ment was run for 40, 80, 120, 160, and 200 nodes. As expected, when more nodes are present in the network, the energy con-sumption rate is lower than other comparable methods. This is attributed to the fact that the proposed Game-based FQL agents prefer to maximize their own utility function by means of cooperating learning algorithm to avoid the energy consumption by sensors from each cluster. However, it would be interesting for the cooperative Game-FQL solution to be implemented, for instance, to  X  BEE-C: A bio-inspired energy ef fi cient cluster-based algorithm for data continuous dissemination in Wireless Sensor Networks  X  ( da Silva Rego et al., 2012 ), to verify the energy consumption for intrusion detection and prevention. 7. Conclusion
In this paper, the interaction between attackers, sink nodes and the base station was studied, after which a novel Game-based FQL, cooperative game theoretic defense mechanism was proposed. This system combines the cooperative-based game theory with fuzzy Q-learning algorithmic elements. As such, the cooperation between the detection sink node player and response base station players is reinforced to defend against an incoming DDoS attack that may cause congestion and downtime in WSN wireless communication as a result of fl ooding packets. The Game-FQL model is a triple-player game strategy construed as two-player, providing double defense against a single attacker. It adds con-fi dence and establishes a reputation as extremely apt in tracking an attacker and defending the system. This strategy-based coop-erative game adapts to continuous self-learning of past attacks and the behavior in the fuzzy Q-learning decision making process to overcome the attacker. By de fi ning incentives for cooperation and disincentives for fraudulent behavior, it has been determined that repeated interaction sustains cooperation, builds con fi dence and enhances reputation, something additionally offered by Game-FQL. Game theory-based Fuzzy Q-learning (Game-FQL), as a mechanism in IDPS, is an invaluable tool for increasingly securing next-generation complex heterogeneous computing and network-ing environments against sophisticated attacks and attackers, beyond what is encountered today. A future initiative is to extend the proposed Game-FQL mechanism by incorporating data from various attack types and sources to further enhance its decision making capabilities in order to thwart existing or new attacks. Also as part of future research work on complementing Game-FQL, studying a network evolutionary algorithm, such as the imperialist competitive algorithm, is considered of utmost importance. Acknowledgment This paper is fi nancially supported by the Malaysian Ministry of Education under the University of Malaya High Impact Research Grant  X  UM.C/HIR/MOHE/FCSIT/12.
 References
