 isms, or among a family of related nucleic acid or protein sequences, e.g., how might biological problems such as multiple sequence alignment, protein structure and func-tion prediction, and drug design [1]. 
There are two general categories of methods for calculating phylogenetic trees: dis-tance-based and character-based. Distance-based methods compute a matrix of pair-wise distances between sequences in an alignment, and then constructing a tree based entirely on the original distance computations instead of sequences. There exist many methods based on this idea. Such as, Neighbor-Joining [2] and other improved distance methods, WEIGHBOR [3], BIONJ [4], FASTME [5] and a latest approach considering maximum-likelihood estimated triplets of sequences [6]. Disadvantages when a sequence alignment is converted to pairwise alignment [9]. 
Character-based methods would examine each column of the alignment separately mum parsimony (MP) [7] or maximum likelihood (ML) [8]. MP chooses tree that minimizes number of changes required to explain data. ML, under a model of se-data. Character-based methods are information rich for there is a hypothesis for every column in the alignment. However, The MP method is NP-hard, and ML has un-known complexity [10] and is very hard to solve in practice. Primary sources of phy-genetics.washington.edu/phylip.html), MrBayes [11] and PAUP [12][13] implemented in these packages [14][15]. To analyze datasets containing thousands of sequences Disk Covering Methods (DCMs)[14][16][17][18] were introduced. To the best our knowledge, Recursive-Iterative-DCM3 (Rec-I-DCM3), is the best known technique heuristic for solving MP. 
AS to ML, one of the recent methods, RAxML [19][20], is among the fastest, most Neighbor Interchange adapted from PHYML [21] is not as efficient on real alignment than 1,000 sequences. 
In this paper, we present a new algorithm for reconstructing large ML phylogenetic tree by integrating algorithmic concepts from Rec-I-DCM3 and RAxML. The experi-mental results show that the proposed algorithm outperforms the existing methods. The proposed algorithm is consists of four main steps. Step 2: Construct phylogenetic tree for subproblems by using the RAxML method. Step 3: Combine the sub phylogenetic trees into a unique supertree Step 4: A hill-climbing ML search on the supertree, T', is applied to do a global rear-Some definitions used are shown as following: tree around e. subtrees X  around each edge in T Separator. Separator is the short subtree of a special edge, which would produce the most balanced bipartition of the leaves in tree T when removed. The outline of the proposed al gorithm is as following: 1. Problem Initialization 2. For n iterations do Function Recursive_Divide(S, MS, T) Input: Set of k sequences S = S1; S2; :::; Sk Maximum subset size MS 
Output: Set of subproblems, allsubsets = A1,A2, ...,Am 
Algorithm: Recursively divide a set of k sequences S into subproblems (a) Compute edge weighting for each edge by using the hamming distances. (b) Compose short subtree graph around edges by selecting set of all leaves that are number of subsets). most balanced bipartition of the leaves as centroid edge, Ec. 
The spt is the leaves of the short subtree around Ec. The subsets are then defined to be (d) For ) 1 ( x i A i Else{ /*Produce a subset-guidetree, rurTree, to keep the merge order. The rurTree is ex-pressed in a string format that uses parenthesis to start and end subtree groups, com-mas to separate group members, and subproblems names to name tree leaves.*/ } institutes subscribing to the Lecture Notes in Computer Science series have access to all the pdfs of all the online publications. Non-subscribers can only read as far as the they would like to order the pdf, and are given instructions as to how to do so. Methodology To the best our knowledge, RAxML, is the best known technique heuristic for solving ML. Therefore, we design an experiment to show that the proposed algorithm would improve over stand-alone RAxML on all datasets in order to demonstrate the benefits which arise from using the dividing method. D atasets http://www.cs.njit.edu/usman/RecIDCM3.html. The datasets we used are (1) 6281 Eukaryotes ssu rRNA sequences from the European rRNA database, (1661 sites), (2) three-domain rRNA sequences from Robin Gutell (1122 sites) [22], (4) 7769 three-domain + 2 organelle rRNA sequences from Robin Gutell (851 sites), (5) 11361 set of all bacteria ssu rRNA sequences from the European rRNA database (1360 sites)[23], and (6) 13921 proteobacteria 16s rRNA sequences from the RDP (1359 sites) [22]. In our experiments both methods start optimizations on the same starting tree. Due to the relatively long execution time on large alignments we only executed one iteration that, the apparently small differences in final likelihood values are significant because phylogenetics (T.L.Williams et al. 2004). 
The experiments clearly show that the proposed algorithm improves over stand alone RAxML on all datasets, i.e. yields better likelihood values than RAxML in the same amount of time. This results serve as an argument for the choice of the divide-and-conquer method instead of stand-alone RAxML. 
