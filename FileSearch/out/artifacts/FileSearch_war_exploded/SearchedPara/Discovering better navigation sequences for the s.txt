 1. Introduction purchasing experiences and customer satisfaction and thus increase their profits. plications suffers. To address these issues, we focus on the session construction problem alone. recorded as a line in the access log file. Each CLF record is a tuple containing the following attributes:  X 
Client machine's IP address  X 
Access date and time  X 
Request method (GET or POST)  X 
URL of the page accessed  X 
HTTP protocol version (HTTP 1.0, HTTP 1.1)  X 
Success or return code  X  Number of bytes transmitted others use the user's navigation information [30,32] .
 demands. The contributions of this paper are listed below:  X  new session model, called the  X  link-based session model  X   X  the sessions produced by Smart-SRA satisfy the properties defined in the link-based session model.  X 
Section 5 . Finally, our conclusions are discussed in Section 6 . 2. Related work and previous session reconstruction heuristics 2.1. Time-oriented heuristics egories, according to the threshold values they use:  X   X   X  the following linear function determines their threshold values: ation and  X  is a coefficient between 0 and 5. This function generates site-specific sion duration thresholds during session construction. 2.2. Navigation-oriented heuristics web pages appearing consecutively in a session. Let [ P 1 pages with increasing timestamps. In this session, for every page P
P that has a referring hyperlink to P k . If there are several pages referring to P largest timestamp ( P TSmax ) is assumed to be the page visited before P browser movements before P TSmax are inserted into the session before P 2.3. Integer programming approach allowing the repetition of a page in the k th and ( k +2) 2.4. Drawbacks of previous approaches server logs may not correspond to the navigation path of a web user due to proxies or the browser cache. covering useful patterns from these longer sessions becomes computationally more expensive. [ A , B , D ], corresponding to two meaningful paths in the web graph. does not cover combinations such as when the user may return to a page in position ( k within a session (such as [ B , C , B ]) increase the noise because of page repetition. 3. The link-based session model and motivation for this work of a backward movement pattern increases. Considering these issues, our new session model, the mendation systems and link structure optimization.
 as follows:
De fi nition (Navigation sequence). Let L = b L 1 , ... , L j , L
P , P xi +1 , ... , P xm &gt; obtained from L must then satisfy the following:  X  navigation sequences obtained from L may overlap. In other words, for a page P be several different navigation sequences containing it.  X  Timestamp Rules: -For every consecutive page pair, the former page has a smaller timestamp than the latter. -Each page in a session should satisfy the page-stay time constraint.  X  is formally defined below:
De fi nition (Link-based session model). Let L = b L 1 , ... , L ... ,  X  Maximality Rule: For all navigation sequences  X  x  X  , there is no other navigation sequence
According to this model, for each consecutive page pair ( P 4. Smart-SRA of web pages. The two main phases of Smart-SRA are explained below:  X  using both time-oriented heuristics mentioned in Section 2 .  X  1. The web pages without any referrers are determined in the candidate session using the web topology. 2. These pages are removed from the candidate session.
The details of the algorithm are given in the following subsection. 4.1. Session reconstruction algorithm
Input: (UserRequestSequence, Link)  X 
UserRequestSequence: The page request sequence by a user, in timestamp order)  X 
Output: The set of reconstructed subsessions. session reconstruction algorithm is given in Table 2 .

Algorithm 1. First phase of Smart-SRA
NewSessionSet, which satisfy the three conditions described in Section 3 .  X  [ P 1 , P 13 , P 34 , P 23 ]  X  [ P 1 , P 13 , P 49 , P 23 ]  X  [ P 1 , P 20 , P 23 ] Theorem (Connectivity). Session sequences generated by Smart-SRA form a path on web graph. the new page. Thus, each session sequence constructed by Smart-SRA corresponds to a path in the web graph. Theorem (Maximality). Subsessions generated by Smart-SRA from a candidate session are maximal.
Proof. Let L ={ S 1 , S 2 , ... , S i , S i +1 , ... , S r maximal is by contradiction. Assume that L contains a nonmaximal subsession, S potential subsession S y =[ Py 1 , ... , Py k , Py k +1 , sion of S x ( S x  X  S y ). In other words, S x  X  S y implies that m &gt; n and lowing conditions are satisfied:  X 
There is an edge from Py i to Py i +1 in the web graph.  X 
Py i occurs before Py i +1 in the candidate session.
 There are two different cases:
Algorithm 2. Second phase of Smart-SRA 1. [k=1]: We first assume that a temporary subsession T =[ Px
Smart-SRA, and the page Px n +1 (or, equivalently, Py n +1 session T is contained in S y such that Py 1 = Px 1  X  Py 2
Py n , Py n +1 , ... , Py m ] from the candidate session, then there is an edge from Py extends (line 26) the temporary subsession T =[ Px 1 , ... session S x in L.
Py k ) pair. In this case, the page Py k must be appended to the temporary sessions ending with Py session set [ Py 1 , ... , Py k  X  1 ] must have already been created if generating S added to at least one temporary session cannot initiate a new session, Py cannot be the starting page of subsession S x . Proof completed.
Session . More precisely, the average time complexity is proportional to ( out tain depth-first navigation).
 following example illustrates this. For the candidate session [ P because it has links to P 13 and P 20 that follow P 1 in this session. The out-degrees for P out-degree for this session is (2+0+1+0)/4=0.75.
 going links from pages in the candidate session to later pages in the same candidate session. referrer with a larger timestamp are selected and removed from the current candidate session at each step.
Algorithm 3. Second phase of Smart-SRA tains pages in CandidateSession P =[ P 1 , ... , P i , P i +1 analysis: out Average out-degree of a node in the graphs represented by link matrices. k Average out degree ratio: tation function, given as E ( P ) below: total number of subtracted pages in a particular step. Clearly, f ( x )=1 for all P subtraction of a single page. The expectation function becomes:
Analyzing the probability of adding any page P x to TempPageSession for candidate session P remains. For P p ( P )=1 because the first page is always included in the TempPageSet. Then p ( P to P 2 . If we assume equal distribution of nodes in the graph,  X  p ( Link [ P 1, P 2]= true )= k (average out degree ratio)  X  p ( Link [ P 1, P 2]= false )=1  X  k
Here, p ( Link [ Px , Py ]= true ) is the probability of P to P y . The probability of adding P 2 to TempPageSession is (1 probability of adding P 3 is (1  X  k ) 2 , which occurs when P
TempPageSession is (1  X  k ) n  X  1 . We know that 0  X  k  X  1, which implies 0 as following:
CandidateSession when 0 b (1  X  k ) b 1. 2. When k =1, the graph is strongly connected and only the first element P case, E ( P )=1 and we only remove one element from the TempPageSession in each step. to TempPageSession in a single step.

In case (1), the outer loop (X2) is executed n /(  X  1/ k  X 
The two nested  X  for loops  X  between (X3) and (X4) are executed n n /(  X  (X2), the expected number of web pages in the CandidateSession is n total time complexity between lines (X2) and (X4) becomes: 4.2. Extension to referrer case for the link existence  X  if( Link [ Page j , Page i ]= true ) number of sessions generated by each version. 5. Experimental results prediction comparison of Smart-SRA with the previous heuristics. 5.1. Accuracy metric tion algorithms. To simplify the notation, we denote REC H also denote S H as the set of sessions generated by heuristic H and S The formulas for calculating REC H and PRE H are given below: the m copies of sequence S in the predicted session set will count as true, and ( m possible session sequences from the web graph. In this case, the REC provide great accuracy (it will again be (1.0+0.0)/2=0.5).

In general, due to the problems mentioned above, any weighted linear functions such as metric A H , (Accuracy for heuristics H ); it is used as defined below:
For both extreme cases described above, the accuracy will be 0.0 when the geometric mean is used ( listed in the tables below:
P and 3 ). Only 4 sets among 7 in the predicted set are common to both, and the PRE 5.2. Comparison with real data each month are shown in Fig. 4 .
 served from browser/proxy caches.
 log files generated from cookies in this manner as an input to generate its own session set. data and predicted sets for each heuristic.
 performance. In the dynamic time-oriented approach (DTO), we varied tion and a minimum standard error, as in [13] .
 sions and incorrect pattern information. 5.3. Experimental results on a large-scale web site 4 GB) for these experiments.
 methods similar. 5.4. Page-prediction application methods in [35,33] . The support for each frequent pattern P is defined below: tern P is the ratio of the support of pattern P  X  x (here, the final prediction set.
 ed in the final prediction set, the current request was successfully predicted. proaches) had at least 7%  X  10% better performance than time-oriented heuristics. 6. Conclusions known reactive heuristics.
 that use link information between web pages.

References
