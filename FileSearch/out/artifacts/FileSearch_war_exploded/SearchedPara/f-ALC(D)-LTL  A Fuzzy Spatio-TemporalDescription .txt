 example, Geographic Information Systems (GIS) and spatio-temporal database [11]. Because of the increasing requirements of these spatio-temporal applica-tions, the need for management of spatio-temporal knowledge has received much attention. The research issue related to the management technologies of spatio-temporal knowledge emerges, including representation and reasoning [6]. How-ever, in many spatio-temporal applications domains, there are a lot of imprecise and uncertain temporal and spatial information as well as spatial topological relations [20]. With the emergence of fuzzy spatio-temporal knowledge, the rep-resentation and reasoning of fuzzy spatio-temporal knowledge have become one of the hot research issues in the fields of visual object tracking and GIS [16]. In particular, DLs are a logical basis of knowledge representation and reasoning of the Semantic Web [8]. Hence, how to extend DLs to realize the representation and reasoning of fuzzy spatio-temporal knowledge needs to be solved. Web, many researchers have already proposed some extensions of DLs, such as ALCRP ( D ) [8], ALCRP 3 ( D ) [10], ALC ( C ) [12], ALC ( CDC ) [4] and ALC However, the approaches described can only deal with crisp spatial information. For the reasoning of fuzzy spatial knowledge in the Semantic Web, Straccia classic region and fuzzy RCC-8 spatial predicates. To support spatial reasoning in medical image domain, Hudelot et al. [9] propose a description logic named ALC ( F ) which defines concrete domain using fuzzy mathematical morphology. Although the tableau-based algorithm for reasoning fuzzy spatial knowledge is given, the ALC ( F ) does not prove the correctness of the tableau algorithm. been investigated (see [13] for surveys). In these extensions, two common ap-based temporal description logics combine basic DLs with (linear) temporal logic (LTL) [14]. Although these temporal DLs cannot support the representation and reasoning of spatial knowledge, they give good hints and ideas for our works. hensive reports on developing fuzzy spatio-temporal description logic. Develop-description logic named f -ALC (D)-LTL that extends spatial fuzzy description spatial relations. In brief, the paper makes the following contributions:  X  We extend spatial fuzzy description logic f -ALC ( D ) with linear temporal  X  We propose a tableau algorithm for deciding satisfiability of f -ALC (D)-LTL is regarded as a basic fuzzy DL extended with spatial fuzzy concrete domain. We recall the syntax and semantics of fuzzy ALC ( D ) [21, 22].
 De nition 1 (Spatial fuzzy concrete domain D ). A spatial fuzzy concrete set of fuzzy RCC predicates d ( d  X  { C, DC, P, PP, EQ, O, DR, PO, EC, NTP, TPP, NTTP } ) over  X  D and an interpretation d D :  X  D  X   X  D  X  [0, 1], which is a fuzzy relation over  X  D .
 of original crisp RCC [15], which represents fuzzy topological relations such as {
C, DC, P, PP, EQ, O, DR, PO, EC, NTP, TPP, NTTP } . For more details about fuzzy RCC relations, it can be found in [17] and [18].
 abstract roles names, concrete roles names, abstract individual names and fuzzy role. Concepts (denoted by C or D  X  C ) of fuzzy ALC (D) can be given by:  X  of fuzzy RCC predicate names.
 spatial fuzzy concrete domain D = (  X  D ,  X  D ), where  X  I is a domain of inter-maps each abstract concept (role), individual, concrete role, and region into a membership function between 0 and 1.
 ABox A . A fuzzy TBox T is a finite set of fuzzy General Concept Inclusions 1]. A fuzzy ABox A is a finite set of fuzzy assertions, which has four types of base K , we call fuzzy GCIs and fuzzy ABox fuzzy ALC ( D ) axioms . In the next to support fuzzy spatio-temporal reasoning. In this section, we propose a fuzzy spatio-temporal description logic called f -ALC (D)-LTL which is a temporal extension of a spatial fuzzy description logic fuzzy ALC (D). 3.1 Syntax By extending f -ALC ( D ) [21] with LTL, we obtain a fuzzy spatio-temporal de-definition of f -ALC ( D )-LTL formulas.
 De nition 3 (Atomic formulas). The f-ALC (D)-LTL atomic formulas  X  are given by:  X   X  X  X   X  { X  , &gt;, &lt;,  X } , n  X  [0, 1].
 n  X  ,  X  d ( o 1 , o 2 )  X  X  X  n  X  and their negative are called f -ALC ( D ) literals. De nition 4 ( f -ALC ( D )-LTL formulas). The f-ALC (D)-LTL formulas  X  is the smallest set containing the atomic formulas such that:  X  if  X  is an atomic formula, then  X  is an f-ALC (D)-LTL formula;  X  . Obviously, 3 means  X  X ometime in the future X  and 2 means  X  X lways in knowledge, but also supports fuzzy spatio-temporal knowledge. 3.2 Models LTL. Now, we define a temporal model for f -ALC ( D )-LTL.
 De nition 5 (Temporal Model). An f-ALC (D)-LTL temporal model is a pair time and I is a fuzzy assignment function associating with each time point w  X  interpretation domain and  X  I ( w ) is interpretation function that maps:  X  1];  X  W , there is O I ( w ) i = O I ( v ) i (i = 1, 2,  X   X   X  ).
 De nition 6 (Truth). Given a temporal model M =  X  X  X  , I X  and arbitrary time point (or state) w  X  W . At time point w, the truth of f-ALC (D)-LTL formulas  X  (denoted by ( M , w )  X  ) is defined inductively as follows: De nition 7 (Satis ability). Let M =  X  X  X  , I X  be a temporal model. An f-ALC (D)-LTL formulas  X  is satisfiable iff there is a temporal model M such that ( M , w 0 )  X  , where w 0  X  W is an initial state or an initial time point. problem. Other reasoning problems (e.g., concept satisfiability) can be reduced to this reasoning problem. The following section will give a tableau algorithm for deciding satisfiability of f -ALC ( D )-LTL formula. As mentioned in Definition 5, a temporal model is an infinite sequence of f -sions of interpretation domains. Before discussing Hintikka structure, we first give closure and Hintikka set of  X  .
 De nition 8 (Closure). Given an f-ALC (D)-LTL formula  X  , the closure of  X  , which is denoted by cl(  X  ), is inductively defined as follows: cl(  X  ).
 De nition 9 (Hintikka set). Given an f-ALC (D)-LTL formula  X  . We say if  X  X   X   X  h then  X   X  h ; (H3) if  X   X   X   X  (  X  1 U  X  2 )  X  h then  X   X  2  X  h , and  X   X  1  X  h or  X   X  (  X  1 U  X  2 ) }  X  h . De nition 10 (Basic Hintikka Structure). Let  X  be an arbitrary f-ALC (D)-LTL formula. A basic Hintikka structure of  X  is a pair H = (  X  , L ), where:  X  L :  X   X  2 cl (  X  ) is a function mapping each state into a subset of cl(  X  ). De nition 11 (Hintikka structure). Given a basic Hintikka structure H = if  X  3  X   X  L (  X   X   X  2  X   X  L (  X   X   X  Theorem 1. Given an f-ALC (D)-LTL formula  X  . If there is a Hintikka struc-ture for  X  , then  X  is satisfiable.
 Proof. By Definition 11, we have to show that if  X  has a Hintikka structure, then there is a temporal model for  X  . Let H = (  X  , L ) be a Hintikka structure i.e., H  X  H  X  . Now, we have to show H  X  is a temporal model for  X  . We prove by induction that H  X  is a temporal model for  X  .
 formula  X   X  , if  X   X   X  L (  X  ), then ( H  X  ,  X  )  X   X  .
  X  ( H  X  ,  X  + 1)  X  . The other formulas have a similar situation.
 For the initial state  X  0  X   X  , ( H ,  X  0 )  X  . So,  X  is satisfiable.  X  X  X  In this section, we propose a tableau-based reasoning algorithm for determining satisfiability of f -ALC (D)-LTL formula. Our algorithm is based on the tableau algorithm for PLTL proposed by Wolper [25]. Similar to [7], our algorithm con-sists of two phases: (i) tableau construction, and (ii) tableau elimination. The first phase can obtain a complete tableau by applying a series of tableau rules for a given formula  X  . The second phase can eliminate some unsatisfiable nodes of the complete tableau by repeatedly applying elimination rules. 5.1 Tableau rules The definition of tableau rules is based on the identities: 3  X   X   X   X  3  X  ,  X   X   X   X   X   X  ,  X  called eventualities . Those of form  X   X  and  X   X   X  are called  X  -formulas . the conjugation of  X  . In f -ALC (D), there are a total of four possible con-{ X  De nition 12. Given an f-ALC (D)-LTL formula  X  . If  X  is  X  -formula or f-ALC (D) literal, then we say  X  is elementary.
  X  1 denote the decomposed elementary formula. 5.2 Tableau construction f -ALC (D)-LTL formula  X  . Before constructing tableau, we first define a tableau. De nition 13 (Tableau). Given a formula  X  . A tableau for  X  is a directed graph T = (N, n 0 ,  X  , L), where:  X  N is a finite set of nodes (states)  X  n 0  X  N is a root node  X   X  denotes a binary relation over N.  X  n  X  N,  X  t  X  N s.t n  X  t  X  L is a labeling function s.t L( n 0 ) = {  X  } , for n  X  N \{ n 0 } graph is only a graph with a root node. By repeatedly applying the tableau rules given in the tables 1-3, the initial tableau graph is expanded. Algorithm 1 ConT ab (  X  ) 1-3 is applicable to T. Otherwise, we call T is incomplete.
 avoid decomposing the same formula twice, we use  X   X  to denote a formula that has been decomposed. The construction algorithm is shown in Algorithm 1. 5.3 Tableau elimination formal definition of unsatisfiable nodes and eventualities.
 De nition 15 (Unsatis able nodes). Let T = (N, n 0 ,  X  , L) be a complete tableau graph for a given f-ALC (D)-LTL formula  X  . Aso let n be an arbitrary situations holds at least: Algorithm 2 Eliminate ( T ) De nition 16 (Unsatis able eventualities). Given a pre-state n i of a com-{  X  Otherwise, they are unsatisfiable.
 eliminate the unsatisfiable nodes in the complete tableau graph. Algorithm 2 not marked (  X  ), then the tableau graph is open. In this case, we say that the f -
ALC (D)-LTL formula  X  is satisfiable. Otherwise, we say  X  is unsatisfiable. 5.4 Correctness The correctness includes termination, soundness, and completeness. Our proof of the correctness is based on the proof for LTL [3] and PLTL [5]. Theorem 2 (Termination). Let  X  be f-ALC (D)-LTL formula. When started on input  X  , the tableau algorithm terminates.
 the upper bound of the set of formulas consisting of these two types of formulas is 2 4 l . Again since each node contains a Hintikka set for formula  X  and each cases: Case 1: all nodes in T are unsatisfiable . Since the upper bound of the the number of eventualities in each node is at most equal to l , the number of the whole Eliminate ( T ) algorithm is bounded by 2 l  X  2 4 l .  X  X  X  Theorem 3 (Soundness). Let  X  be an f-ALC (D)-LTL formula to the tableau algorithm. If  X  is satisfiable, then the algorithm returns  X  X pen X . performing elimination algorithm. Since the algorithm return  X  X losed X , the root ination rules. Combined with the Eliminate ( T ), we analyse different types of nodes eliminated.
  X   X   X   X  /  X  L ( n ). Obviously, L ( n ) is unsatisfiable.
 follows that L ( n ) = { X   X  1 ,  X   X  2 , . . . ,  X   X  m } is also unsatisfiable. (lines 4-10), a non-state n may produce one or two sons in each application of of non-state n are eliminated, L ( n  X  ) is unsatisfiable.
 there is at least one eventuality in L ( n ) that is unsatisfiable.  X  X  X  Theorem 4 (Completeness). Let  X  be an f-ALC (D)-LTL formula to the tableau algorithm. If the tableau algorithm returns  X  X pen X , then  X  is satisfiable. tableau algorithm returns  X  X pen X . To show completeness, we first show that the constructed tableau graph has a Hintikka structure.
 is nonempty set of states,  X  0 denotes an initial state, L is a mapping function from  X  to L . The construction steps are as follows: n 0 is root node, L ( n 0 ) =  X  m , L ( n k ) = until all the state nodes are found.
 In this work, we have presented a fuzzy spatio-temporal description logic f -ALC (D)-LTL, which is a temporal extension of the f -ALC (D). Our description logic enables us to reason fuzzy RCC topological relationships that change over time. We first define concept syntax, formulas syntax, and semantic interpreta-tion. Then, we present a tableau-based algorithm for f -ALC (D)-LTL to decide soundness, and completeness of the tableau algorithm using Hintikka structure. reasoning fuzzy spatio-temporal relations in the future work.

