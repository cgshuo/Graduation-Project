 YU ZHENG and XING XIE Microsoft Research Asia 1. INTRODUCTION
Recently, people start recording their outdoor movements with GPS traces for many reasons, such as travel experience sharing [Counts and Smith 2007;
GeoLife 2007], life logging [Zheng et al. 2008c, 2008d] and sports activity anal-ysis [SportsDo 2007; Bikely 2006]. A branch of websites or forums that enable users to establish some geo-related Web communities have appeared on the
Internet. By uploading their GPS traces to such communities, users can man-age their travel experiences on a Web map and share travel knowledge among each other. Although a huge amount of GPS traces have been accumulating, the travel recommendations provided by these communities are not compre-hensive enough. Being faced with such a large dataset, community users have no patience in browsing every GPS trace and identify interesting locations by themselves.

Typically, people need two types of recommendations during a journey: generic and personalized recommendations. Regarding the generic recommen-dation, people usually desire to know the most interesting locations in a geospa-tial region and the popular travel sequences among these locations. To define interesting location, we mean the culturally important places, such as Tianan-men Square in Beijing and the Statue of Liberty in New York (i.e., popular tourist destinations), and commonly frequented public areas, such as shop-ping malls/streets, restaurants, cinemas and bars. With the information men-tioned above, an individual can understand an unfamiliar city in a very short period and plan their journeys with minimal effort. Besides the generic rec-ommendation, an individual also wants to visit some locations matching her travel preferences (personalized). For instance, a food-lover prefers to find some restaurants providing delicious foods although these restaurants might not be the most popular places in a city.

However, we will meet some challenges when conducting these two types of recommendations. First, the interest level of a location does not only depend on the number of users visiting this location but also lie in these users X  travel experiences (knowledge). Intrinsically, different people have different degrees of knowledge about a geospatial region. In a journey, the users, with more travel experiences about a region, would be more likely to visit some interesting capable than overseas tourists of finding out high quality restaurants and famous shopping malls in Beijing. Second, an individual X  X  travel experience and interest level of a location are relative values (i.e., it is not reasonable to judge whether or not a location is interesting), and are region-related (i.e., conditioned by the given geospatial region). A user, who has visited many places in a city like New York, might have no idea about another city, such as Beijing. Third, current
CF models are not good enough to understand an individual X  X  travel preferences from her location history. The traditional item-based methods have a good online efficiency while cannot well model human travel behaviors, such as the visited sequence of locations. On the contrary, some user-based CF models can model human travel behavior while will cause a huge computation loads (due to the computations of similarity between each pair of users).

In this article, we conduct both generic and personalized travel recommen-dations based on multiple users X  GPS traces. To achieve the generic recommen-dation,  X  We propose a tree-based hierarchical graph ( TBHG ), which can model mul-tiple users X  travel sequences on a variety of geospatial scales.  X  Based on the TBHG , we propose a HITS-based model to infer users X  travel experiences and interest of a location within a region. This model leverages the main strength of HITS to rank locations and users with the context of a geospatial region, while calculating hub and authority scores offline.
Therefore, we can ensure the efficiency of our system while supporting users to specify any geo-regions as queries.  X  Considering an individual X  X  travel experiences and the interests of a location as well as people X  X  transition probability between locations, we mine the top popular travel sequences from multiple users X  location histories.

To conduct the second recommendation, we first mine the correlation among locations from multiple users X  GPS traces in terms of (1) the sequences that the locations have been visited and (2) the travel experiences of the users creating these sequences. Later, the location correlation is integrated into a CF-based model that predicts a user X  X  interests in an unvisited location based on her locations histories and that of others.

The rest of this article is organized as follows. Section 2 summarizes the related work. Section 3 introduces some basic concepts used in this article and gives an overview of our work. Section 4 describes the methodology of mining interesting locations and travel sequences. Section 5 illustrates the method of mining location correlation. Section 6 details the recommenders. Section 7 reports on major evaluation results followed by some discussions. Section 8 concludes this article. 2. RELATED WORK 2.1 Mining Location History 2.1.1 Mining Individual Location History. During the past years, a branch of research has been performed based on individual location history recorded in GPS traces. These works include detecting significant locations of a user [Ashbrook and Starner 2003; Hariharan and Toyama 2004], predicting the user X  X  movement among these locations [Liao et al 2005], and recognizing user-specific activities at each location [Liao et al. 2004; Patterson et al. 2003]. As opposed to these works, we aim to model multiple users X  location histories and learn patterns from numerous individuals X  behaviors. 2.1.2 Mining Multiple Users X  Location Histories. Gonotti et al. [2007] mined similar sequences from users X  moving trajectories, and Mamoulis et al. [2004] proposed a framework for retrieving maximum periodic patterns in spatio-temporal data. MSMLS [Krumm and Horvitz 2006] used a history of a driver X  X  destinations, along with data about driving behavior extracted from multiple users X  GPS traces, to predict where a driver may be going as a trip progresses. Eagle and Pentland [2006] aimed to recognize the social pattern in daily user activity from the dataset collected by 100 users with a Bluetooth-enabled mobile phone. Based on raw GPS data, Zheng et al. [2008a, 2008b; 2010a] classified people X  X  GPS trajectories into different categories of trans-portation modes consisting of driving, walking, taking a bus, and riding a bike.
In contrast to these techniques, we extend the paradigm of mining users X  loca-tion histories from exploring users X  behaviors to understanding locations and modeling the relation between users and locations. 2.2 Location Recommenders 2.2.1 Recommenders based on Real-Time Location. Mobile tourist guide systems typically recommend locations and sometimes provide navigation in-formation based on a user X  X  real-time location. Recently, some researchers aim to filter away from the returned results the invisible entities occluded by the nearby building [Beeharee and Steed 2007; Simon and Fr  X  ohlich 2007]. Mean-while, another branch of work [Abowd et al. 1997; Park et al. 2007] started involving a user X  X  location history in these systems to provide the user with a more personalized recommendation. In contrast to these techniques, we aim to integrate the social environment of an individual into travel recommenders by helping the individual deeply understand the locations around them with the knowledge mined from not only their own but also other users X  location histories. 2.2.2 Recommenders based on Location History. Using multiple users X  real-world location histories, some recommender systems, such as Geowhiz [Horozov et al. 2006], CityVoyager [Takeuchi and Sugimoto 2006], and GeoLife [Zheng et al. 2009a; Li et al. 2008; Zheng et al. 2010b], have been designed to recommend geographic locations like shops or restaurants to users. Horozov ate the recommendation of a restaurant. Takeuchi et al. [2006] attempted to recommend shops to users based on their individual preferences estimated by analyzing their past location histories. Li et al. [2008] first mined a user similarity from human location history by considering the sequence property of travel behaviors and the hierarchical property of geographical spaces. Fur-ther, Zheng et al. [2010b] incorporate this user similarity into a user-centric CF model to conduct a personalized friend &amp; location recommendation. Zheng et al. [2010c] use a collaborative learning approach to enable an activity-location recommendation based on GPS traces associated with user-generated com-ments. That is, given an activity like shopping, the system recommends the best k locations. In turn, given a location, for example, the Olympic Park of
Beijing, the best k activities that should be conducted in the location are rec-ommended.
 The major difference between these works and ours lies in three aspects.
First, we differ the travel experiences of different users. Second, we consider the relation between locations and users X  travel experiences, for example, the mutual reinforcement relation and the region-related constraints. Third, our
CF model well model users X  travel behaviors while keeping the similar efficiency as the original item-based method. 3. OVERVIEW 3.1 Application Scenarios
GeoLife [Zheng et al. 2008a, 2008b, 2008c, 2008d, 2009a, 2009b, 2009c; Chen prototype has been internally accessible within Microsoft since Oct. 2007. So far, we have had 106 individuals using this system.

Figure 1 shows the user interface of our applications running on desktop com-puters. In the right part of this figure, we can view the top five interesting loca-tions and the most five experienced users in the region specified by the present map view. The top five interesting travel sequences within this region are also displayed on the map. By zooming in/out and panning this map, an individual can retrieve such results within any regions. In addition, the photos taken at an interesting location will be presented on the bottom of the window. Once a user has accumulated a certain number of GPS traces, she can view the personalized recommendation that offers locations matching her travel preferences.
As shown in Figure 2, a user with a GPS-phone can find out the top five interesting locations and travel sequences nearby their present geographic position (the red star). In addition, when the user reaches a location, our system would provide them with a further suggestion by presenting the top three popular sequences start from this location. Of course, users can also view the personalized recommendation on a mobile phone as long as they have GPS traces stored in GeoLife.
 3.2 Preliminary
Definition 1 . GPS Trace. A GPS trace Tra is a sequence of time-stamped points, Tra = p 0  X  p 1  X   X  X  X   X  p k , where p i = ( x , y are latitude and longitude respectively, and t is a timestamp. p
Definition 2 .Dist ( p i , p j ) denotes the geospatial distance between two points p i and p j ,and Int ( p i , p j ) =| p i . t  X  p j two points.

Definition 3 .StayPoint . A stay point s is a geographical region where a user stayed over a time threshold T r within a distance threshold D trace, s is characterized by a set of consecutive points P where  X  m &lt; i  X  n , Di st ( p m , p i )  X  D r , Di st ( p
Therefore, s = ( x , y , t a , t l ), where respectively, stands for the average x and y coordinates of the collection P ; s . t leaving time.

As shown in Figure 3, { p 1 , p 2 , ... , p 8 } formulate a trace, and a stay point would be detected from { p 3 , p 4 , p 5 , p 6 } if d  X  contrast to a raw point p i , a stay point carries a particular semantic meaning, such as a shopping mall and a restaurant they visited.

Definition 4 . Location History. An individual X  X  location history h is rep-resented as a sequence of stay points they have visited with corresponding transition times, where  X  0  X  i &lt; n , s i is a stay point and t i = s i + between two stay points.

Intrinsically, people generate many trips in their lives. For instance, an individual would visit some shopping malls in a trip and start a new trip two history h into some trips if the travel time spent between two consecutive locations exceeds a certain threshold T p .

Definition 5 .Trip. A trip is a sequence of stay points consecutively visited threshold).

However, so far, people X  X  location histories are still inconsistent as the stay points detected from various individuals X  traces are not identical. To address this issue, we propose the TBHG to model multiple users X  location histories.
Generally speaking, a TBHG is the integration of two structures, a tree-based hierarchy H and a graph G on each level of this tree. The tree expresses the parent-children (or ascendant-descendant) relation of the nodes pertaining to different levels, and the graphs denote the peer relation among the nodes on the same level.

As demonstrated in Figure 4, in our system two steps need to be performed when building a TBHG . (1) Formulate a Tree-Based Hierarchy H . We put together the stay points de-(2) Build Graphs on Each Level . Based on the tree-based hierarchy H and
Definition 6 . Tree-Based Hierarchy H. H is a collection of stay point-based clusters C with a hierarchy structure L . H = ( C , L ), L the collection of levels of the hierarchy, and C ={ c ij | means the collection of clusters on different levels. Here, c cluster on level l i  X  L ,and C i is the collection of clusters on level l
Definition 7 . Tree-Based Hierarchical Graph ( TBHG ). Formally, a TBHG is the integration of H and G , TBHG = ( H , G ). H is defined in Definition 6, and
G ={ g vertexes C i and the edges E i connecting c ij  X  C i .

Based on the TBHG , we can substitute a stay point in a user X  X  location history h with the cluster ID the stay point pertains to. Supposing s c , s
Therefore, a trip can be represented as a set of consecutive stay-point-set of trips on different levels of the hierarchy, h ={ Trip
Notations . In the rest of this article, we use the following notations to simplify community, u k  X  U , 1  X  k  X | U | denotes the k th user, and Tra
TP k respectively stand for the u trips. 3.3 Architecture
Figure 5 shows the architecture of our system, which is comprised of three parts: location history modeling, knowledge mining, and recommendation. The first two operations can be performed offline, while the last process should be conducted online based on the geo-region specified by a user.

Figure 6 gives a formal description of the location history modeling, where the stay point detection algorithm is introduced in Li et al. [2008]. 4. MINING INTERESTING LOCATIONS AND TRAVEL SEQUENCES
In this section, we first briefly introduce the key idea of HITS and then describe our HITS-based inference model. Later, using such inference results, we mine the popular travel sequences from each graph of the TBHG.
 4.1 Basic Concepts of HITS
HITS stands for hypertext induced topic search, which is a search-query-dependent ranking algorithm for Web information retrieval. When the user enters a search query, HITS first expands the list of relevant pages returned by a search engine and then produces two rankings for the expanded set of pages, authority ranking and hub ranking. For every page in the expanded set, HITS assigns them an authority score and a hub score.

As shown in Figure 7, an authority is a Web page with many in-links, and a hub is a page with many out-links. The key idea of HITS is that a good hub points to many good authorities, and a good authority is pointed to by many good hubs. Thus, authorities and hubs have a mutual reinforcement relation.
More specifically, a page X  X  authority score is the sum of the hub scores of the pages it points to, and its hub score is the integration of authority scores of the pages pointed to by it. Using a power iteration method, the authority and hub scores of each page can be calculated. The main strength of HITS is ranking pages according to the query topic, which may provide more relevant authority and hub pages. However, HITS needs some time-consuming operations, such as on-line expanding page sets and calculating the hub and authority scores. 4.2 Our HITS-Based Inference Model 4.2.1 Model Description. Using the third level of the TBHG shown in
Figure 4 as a case, Figure 8 illustrates the main idea of our HITS-based inference model. Here, a location is a cluster of stay points, like c regard an individual X  X  visit to a location as an implicitly directed link from the individual to that location. For instance, cluster c 31 contains two stay points respectively detected from u 1 and u 2  X  X  GPS traces, that is, both u point to c 31 from u 1 and u 2 . Similar to HITS, in our model, a hub is a user who has accessed many places, and an authority is a location that has been visited by many users. Therefore, users X  travel experiences (hub scores) and the interests of locations (authority scores) have a mutual reinforcement relation. 4.2.2 Strategy for Data Selection. Intrinsically, a user X  X  travel experience is region-related, that is, a user who has rich travel knowledge in a city might have no idea about another city. Also, an individual, who has visited many places in a part of a city, might know little about another part of the city (if the city is very large, like New York). This feature is aligned with the query-dependent property of the HITS. Thus, before conducting the HITS-based inference, we need to specify a geospatial region (a topic query) for the inference model and formulate a dataset that contains the locations fallen in this region. However, using an online data selection strategy, (i.e., specify a region based on a user X  X  input), we need to perform lots of time consuming operations, which may reduce the feasibility of our system. Actually, on a level of the TBHG , the shape of a graph node (cluster of stay points) provides an implicit region for its descendent nodes. These regions covered by the clusters on different levels of the hierarchy might stand for various semantic meanings, such as a city, a district and a community. Therefore, we are able to calculate in advance the interest of every location using the regions specified by their ascendant clusters. In other words, a location might have multiple authority scores based on the different region scales it falls in. Also, a user might have multiple hub scores conditioned by the regions of different clusters.

Definition 8 . Location Interest . In our system, the interest of a location ( c is represented by a collection of authority scores I ij ={ denotes the authority score of cluster c ij conditioned by its ascendant nodes on level l , where 1  X  l &lt; i .

Definition 9 . User Travel Experience . In our system, a user X  X  (e.g., u experience is represented by a set of hub scores e k ={ e |
C region of c ij .

Figure 9 demonstrates these definitions. In the region specified by cluster c 11 , we can respectively calculate an authority score ( I and c 22 . Meanwhile, within this region, we are able to infer authority scores ( I region specified by cluster c 21 , we can also calculate another authority score ( I and I 2 32 )for c 31 and c 32 . Likewise, the authority scores ( I and c 35 can be re-inferred with the region of c 22 . Therefore, each cluster on the third level has two authority scores, which would be used in various occasions based on users X  inputs. For instance, as depicted in the Figure 9 A), when a user selects a region only covering location c 31 and c 32 , the authority score I can be used to rank these two locations. However, as illustrated in Figure 9(B), if the region selected by a user covers the locations from two different parent clusters ( c 21 and c 22 ), the authority value I 1 32 , I these locations.

The strategy that sets multiple hub scores for a user and multiple authority scores for a location has two advantages. First, we are able to leverage the main strength of HITS to rank locations and users with the contexts of geospatial region (query topic). Second, these hub and authority scores can be calculated offline. Therefore, we can ensure the efficiency of our system while allowing users specify any regions on a map. 4.2.3 Inference. Given the locations pertaining to the same ascendant clus-ter, we are able to build an adjacent matrix M between users and locations based on the users X  accesses on these locations. In this matrix, an item the times that u k (a user) has visited to cluster c ij (the j th cluster on the i th level). Such matrixes can be built offline for each non-leaf node. For example, the matrix M formulated for the case shown in Figure 8 can be represented as follows, where all the five clusters pertain to c 11
Then, the mutual reinforcement relationship of user travel experience e and location interest I l ij is represented as follows: where c lq is c ij  X  X  ascendant node on the l th level, 1 shown in Figure 9, c 31  X  X  ascendant node on the first level of the hierarchy is c and its ascendant node on the second level is c 21 . Thus, if l c and ( c 31 , c 32 )  X  c 21 . Also, if l = 1, c lq denotes c
Writing them in the matrix form, we use T to denote the column vector with all the authority scores, and use E to denote the column vector with all the hub scores. Conditioned by the region of cluster c 11 , T =
E = ( e 1
If we use T n and E n to denote authority and hub scores at the n th iteration, the iterative processes for generating the final results are
Starting with T 0 = E 0 = (1 , 1 ,..., 1), we are able to calculate the authority and hub scores using the power iteration method.

Figure 10 depicts an offline algorithm for inferring each user X  X  hub scores and the authority scores of each location conditioned by the different regions.
Here C x is the collection of clusters on x th level. C x c  X  X  descendant clusters on the x th level. For instance, the C and C 3 of c 11 is { c 31 , c 32 ,..., c 35 } . { I i x } scores of the locations contained in C x conditioned by their ascendant node on the i th level. 4.3 Mining Travel Sequences
With users X  travel experiences and the interests of locations, we calculate a popularity score for each location sequence within the given geospatial region. aspects. (1) The sum of hub scores of the users who have taken this sequence; (2) The authority scores of the locations contained in this sequence; (3) These authority scores are weighted based on the probability that people would take a specific sequence.

Using a graph of TBHG , Figure 11 demonstrates the calculation of the pop-ularity score for a 2-length sequence, A  X  C. In this figure, the graph nodes (A, B, C, D, and E) stand for locations, and the graph edges denote people X  X  transition sequences among them. The number shown on each edge represents the times users have taken the sequence. Equation (12) presents the popular-ity score of sequence A  X  C, which includes the following three parts. (1) The authority score of location A ( I A ) weighted by the probability of people X  X  moving out by this sequence ( Out AC ). Clearly, there are seven (5 other nodes from node A, and five out of seven of these links direct to node C. So, Out AC = 5 7 , only five sevenths of location A X  X  authority ( I offered to sequence A  X  C, and the rest of I A should be provided to A
The authority score of location C ( I C ) weighted by the probability of people X  X  moving in by this sequence ( In AC ); (3) The hub scores of the users ( U have taken this sequence.

Following this method, we calculate the popularity score of sequence C Thus, the popularity score of sequence A  X  C  X  D equals to:
Using this paradigm we are able to calculate the popularity score of any n -length sequences. Later, the top mn -length sequences with relatively high scores can be retrieved as n -length popular travel sequences. However, it is not necessary to find out the sequences with a long length, as people would not visit many places in a trip. Thus, in this article, we start with mining 2-length sequences, and then try to find out some 3-lenth sequences by extending these 2-length sequences. 5. MINING LOCATION CORRELATION
In this section, we present the algorithm that computes the correlation between locations by considering the user travel experience and the sequence of the locations.

First, we claim that the correlation between two locations does not only depend on the number of users visiting the two locations but also lie in these users X  travel experiences. The locations sequentially accessed by the people with more travel knowledge would be more correlated than those visited by those having little idea about the region. For instance, some overseas tourists might randomly visit some places in Beijing as they are not familiar with this city.
However, the local people of Beijing are more capable than them of arranging a more proper and reasonable way to visit some places in Beijing.

Second, the correlation between two locations, A and B , also depends on the sequences, in which the two locations have been visited: (1) This correlation between A and B , Cor ( A , B ), is asymmetric; that is, Cor ( A semantic meaning of a travel sequence A  X  B might be quite different from
B  X  A . For example, on a one-way road, people would only go to B from A while never traveling to A from B ; (2) The two locations continuously accessed by a user would be more correlated than those being visited discontinuously.
Some users would reach B directly from A ( A  X  B ) while others would access another location C before arriving at B ( A  X  C  X  B ). Intuitively, the Cor ( A indicated by the two sequences might be different. Likewise, in a sequence A
C  X  B, Cor ( A , C ) would be greater than Cor ( A , B ), as the user continuously accessed A  X  C while traveling to B after visiting C.

In short, the correlation between two locations can be calculated by inte-grating the travel experiences of the users visiting them in a trip in a weighted manner. Formally, the correlation between location A and B can be calculated as Eq. (15).
 where U is the collection of users who have visited A and B in a trip; e travel experience conditioned by the first shared ascendant regions (a cluster in
TBHG ) by the two locations, u k  X  U .0 &lt; X   X  1 is a dumping factor, which will decrease as the interval between these two locations X  index in a trip increases.
For example, in our experiment we set  X  = 2  X  ( | j  X  i | X  of A and B in the trip they pertain to. That is, the more discontinuously two locations being accessed by a user ( | i  X  j | would be big, thus small), the less contribution the user can offer to the correlation between these two location.
 ( A, B, C ) in different manners and create three trips ( Trip number shown below each node denotes the index of this node in the sequence.
In accordance with Eq. (15), from Trip 1 we can calculate Cor ( A
Cor ( B , C ) = e 1 , since these locations have been consecutively accessed by u (i.e.,  X  = 1). However, Cor ( A , C ) = 1 2 . e i (i.e.,  X  = to B before visiting C . In other words, the correlation (between location A and C ) that we can sense from Trip 1 might not that strong as if they are consecutively visited by u 1 . Likewise, we can learn Cor ( A , C ) = e  X  e 2 from Trip 2 , and infer Cor ( A
Trip 3 . Later, we can integrate these correlation inferred from each user X  X  trips and obtain the following results:
Figure 13 formally describes the algorithm for inferring correlation between locations. Here, b is a constant, which is set to 2 in our experiment. for the number of locations contained in the Trip and Trip [ i ] represents the i th location in Trip . For example, regarding Trip 1 shown in Figure 12,
Trip [0] = A (the first location), Trip [1] = B , Cor ( Trip [0]
For the sake of simplification, we demonstrate the algorithm only using one layer of the hierarchy.

Supposingwehave n trips in a dataset and the average length of a trip is m , this mining algorithm takes O (2 | C | 2 + m ( m  X  1) overall computing complexity Q of our approach is the combination of in-
Q = O (2 w | C || U |+ 2 | C | 2 + m ( m  X  1) 6. RECOMMENDATION 6.1 The Generic One
A user can specify any geospatial regions as an input by zoom in/out and panning a Web map. According to the zoom level, our recommender can find out the corresponding hierarchical level in the TBHG , and then collect the locations (clusters) fallen in the given region on this level. The hub and authority scores conditioned by the first shared ascendant cluster of these locations will be used to rank locations and users (refer to Figure 9). Later, the most k experienced users, top n interesting locations and top m popular travel sequences within the specified region can be returned to the users as the generic recommendations. 6.2 The Personalized One 6.2.1 Collaborative Filtering. Collaborative filtering is a well-known model widely used in recommendation systems. The CF model can be par-tition into two categories; the user-based and item-based inference methods [Linden et al. 2003].

Notations. As shown in Eq. (5), we have a matrix M describing the rela-tion between each user and each location. Here, we can regard the times an individual has stayed in a location as their implicit ratings on the location. The ratings from a user u p , called an evaluation , is represented as an array
R location j . S ( R p ) is the subset of the R p ,  X  r pj  X  of items (locations) that has been rated (visited) by u p in R p is denoted as R p , and the number of elements in a set S is collection of all evaluations in the training set is X . S evaluations containing item j ,  X  R p  X  S j ( X ) , j  X  S ( R of evaluations simultaneously containing item i and j . (1) The Pearson Correlation-Based CF . The Pearson correlation reference scheme [Adomavicius and Tuzhhilin 2005] is the most popular and accurate user-based CF model using the similarity between users, sim ( u the ratings from different individuals. Equations (16) and (17) give a formal description on calculating P ( r pj ), the predicted u p  X  X  ratings on location j .As the number of users in a system is much larger and increases much faster than the number of items, the user-based CF models are not that efficient than the item-based methods. (2) The Slope One Algorithms. These algorithms [Lemire and Maclachlan 2005] are famous and representative item-based CF algorithms, which are easy to implement, efficient to query and reasonably accurate. Given any two items i and j with ratings r pj and r pi respectively in some user evaluation R we consider the average deviation of item i with regard to item j as Eq. (18)
Given that de v j , i + r pi is a prediction for r pj based on r might be the average of all the predictions.
 where W j ={ i | i  X  S ( R p ) , i = j , | S j , i ( X ) | &gt;
Further, the number of evaluations simultaneously contain two items has been used to weight the prediction regarding different items. Intuitively, to predict u  X  X  rating of item A given u p  X  X  ratings of item B and C , if 2000 users rated the pair of A and B whereas only 20 users rated pair of A and C ,then u of item B is likely to be a far better predictor for item A than u item C is.
 6.2.2 Our Method. We integrate the location correlation into the Slop One algorithm to achieve a more effective and accurate item-based CF model. Intu-itively, to predict u p  X  X  rating of location A given u p
C , if location B is more related to A beyond C ,then u p is likely to be a far better predictor for location A than u
C is. In contrast to the number of observed ratings (i.e., the number of people who have visited two locations) used by the weighted Slope One algorithm, the mined location correlation considers more human travel behavior, such as the travel sequence, user experience, and transition probability between locations. Formally, our approach can be represented as where cor ji denotes the correlation between location i and j ,and de calculated as Eq. (18). Using Eq. (21), we can predict an individual X  X  ratings on the locations they have not accessed, and then rank these locations in terms of the predicted ratings. Later, the top n locations with relatively high ratings can be recommended. 7. EXPERIMENTS
In this section, we first present the experimental settings. Second, we introduce the evaluation approaches. Third, major results are reported followed by some discussions. 7.1 Settings 7.1.1 Devices and Users. Figure 14 shows the GPS devices we chose to col-lect data. They are comprised of stand-alone GPS receivers (Magellan Explorist 210/300, G-Rays 2 and QSTARZ BTQ-1000P) and GPS phones. Except for the
Magellan 210/300, these devices are set to receive GPS coordinates every two seconds. Regarding the Magellan devices, we configure their settings to record
GPS points as densely as possible. Carrying these GPS-enabled devices, 107 users (49 females and 58 males) recorded their outdoor movements with GPS logs from May 2007 to Oct. 2008. Figure 15 presents demographic statistics on these users. 7.1.2 GPS Data. Figure 16 depicts the distributions of the GPS data used in the experiments. Most parts of this dataset were created in Beijing, China, and other parts covered 36 cities in China as well as a few cities in the USA,
South Korea, and Japan. The volunteers were motivated to log their outdoor movements as much as possible by the payments based on the distance of GPS traces collected by them; the more data collected by them, the more money they obtained. As a result, the total distance of the GPS logs exceeded 166,372 kilometers, and the total number of GPS points is over 5 million. Considering the privacy issues, we use these datasets anonymously. 7.1.3 Parameter Selection point detection. In other words, if an individual stays over 20 minutes within a distance of 200 meters, a stay point is detected. These two parameters enable us to find out some significant places, such as restaurants and shopping malls, while ignoring the geo-regions without semantic meanings, like the places where people wait for traffic lights or meet congestion (refer to Li et al. [2008] for details). As a result, we extracted 10,354 stay points from the dataset. Clustering. We use a density-based clustering algorithm, OPTICS (Ordering points into geospatial regions in a divisive manner. As compared to an agglom-erative method like K-Means, the density-based approach is capable of detect-restaurants or shopping streets. In addition, this approach would filter out a few sparsely distributed stay points, and ensure each cluster has been accessed by some users. As a result, a four-level TBHG is built based on our dataset (see Table I for details).

Trip Partition. Based on the commonsense knowledge, we set T and obtain 5,318 trips (the average length of these trips is 3.2). 7.2 Evaluation Approaches 7.2.1 Evaluation Framework. Figure 17 illustrates the framework of the evaluation, in which we respectively explore the effectiveness of the generic and personalized recommendations by performing a user study. In this study, 29 subjects (14 females and 15 males), who have been in Beijing for more than 6 years, were invited to answer the evaluation questions. At the same time, all of them have an 3-month + GPS trace set accumulated in our system. Given the region within the fourth ring road of Beijing, we respectively retrieved the top 10 interesting locations, top 5 popular travel sequences and top 10 personalized locations by using our methods and some baselines.

Regarding the interesting locations from the generic recommendation, we conduct the following two aspects of evaluations. One is the Presentation ,which stands for the ability of the retrieved interesting locations in presenting a given region. The other is the Rank , which represents the ranking performance of the retrieved locations based on relative interests. (1) Presentation. Each subject answers the following evaluation questions: (2) Rank . Each subject had to individually rate the interest of each retrieved
With regard to evaluating the retrieved travel sequences, we required the subjects to rate each sequence in the set with the scores shown in Table III. Also, we aggregate these ratings as the method previously mentioned.
Different from evaluating the generic top n interesting locations, we first respectively calculate the ranking performance of the top 10 personalized loca-tions retrieved for each user (a user X  X  rating on a personalized location is also based on Table II) and then aggregate ranking performance of different users. 7.2.2 Measurements using the mean score of the ratings offered by the subjects. In addition, we perform a T-test for each comparison to justify the significant advantages of our method.

Measurements for Ranking . We employ two criteria, nDCG (normalized dis-counted cumulative gain) and MAP (Mean Average Precision), to measure the ranking performance of the retrieved interesting locations. MAP is the most frequently used summary measure of a ranked retrieval run. In our exper-location is retrieved. Here, a location is deemed as an interesting location if its interest level equals to 2. For instance, the MAP of an interest rating vector,
G nDCG is used to compute the relative-to-the-ideal performance of informa-tion retrieval techniques. The discounted cumulative gain of G is computed as follows: (In our experiments, b = 3.)
Given the ideal discounted cumulative gain DCG X  ,then nDCG at i th position can be computed as NDCG [ i ] = DCG [ i ] / DCG [ i ].

Measurement for Travel Sequence . We use the mean score of these subjects X  ratings, along with a T-test for each comparison, to distinguish our method from baselines. At the same time, we investigated the popular rate , which represents the ratio of sequences with a score of 2 in the set, of different methods. 7.2.3 Baselines ness of two baseline methods, rank-by-count and rank-by-frequency . Regarding the former one, the more users visiting a location the more interesting this location might be. In the latter, the more frequent people accessed a location the more interesting this location might be. The visited frequency of a location is the ratio between the number of the users visiting this location and the time span, from the first day one user accessed this location to the last day at least one individual visited it.

Baselines for Mining Travel Sequences . We compare our method with three baselines; rank-by-count , rank-by-interest and rank-by-experience . With regard to the first baseline, we rank a sequence based on the number of the users who have taken this sequence. Regarding the second one, we only take into account the interests of the locations contained in a sequence to rank the travel sequences. In the third baseline method, we only consider the experiences of the users who have taken this sequence.

Baseline for the Personalized Recommendation. We respectively investigate the performance of three baseline schemes: (1) Our approach only using user travel experience, that is, each pair of locations occurring in a trip share the same correlation; (2) Our method only considering the sequence between lo-
Correlation-based approach described in Section 6.2.1. 7.3 Results 7.3.1 Related to Interesting Locations which were respectively inferred out by our method and two baselines using the region within the fourth ring road of Beijing (the zoom level corresponds to the 3rd level of the TBHG ).

Based on these results, 29 subjects individually answered the evaluation questions with the ratings mentioned in Table II. As shown in Table IV, our method is more capable than the baselines of finding out representative loca-tions in the give region (T-test result: p 1 &lt; 0.01, the comparison between ours and the Rank-by-count ;p 2 &lt; 0.01, the comparison between ours and Rank-by-frequency ). Meanwhile, the top 10 locations retrieved by our method pre-sented a more comprehensive view of this region over the baselines (p p the subjects have been retrieved (p 1 &lt; 0.01, p 2 &lt; the development of new Beijing, while having not been noticed by many peo-ple. Regarding the baselines, Rank-by-count outperformed rank-by-frequency in finding out the representative locations (p &lt; 0.01) and presenting a compre-hensive view of the region (p &lt; 0.01). However, the former method does not show a clear advantage beyond the latter in detecting the novel interesting locations (p &gt; 0.2).

Ranking Ability. Table V depicts the ranking ability of different methods using nDCG @5, nDCG @10 and MAP as measurements. Although the set of interesting locations retrieved by our method and rank-by-count hada60per-cent overlap, our method showed clear advantages beyond baseline methods in ranking this location set. 7.3.2 Related to Travel Sequences. Using two measurements (mean score and popular rate), Table VI distinguishes the performance of our method from the baselines in finding out the popular sequences in the given region. Clearly, our method considering both users X  travel experiences and location interests outperforms rank-by-count (p 0.01), rank-by-interest (p &lt; experience (p &lt; 0.01). Meanwhile, when respectively taking into account users X  travel experiences (p &lt; 0.01) or location interests (p rank-by-count had been significantly improved. These results proved that user travel experience and location interests respectively play an important role in retrieving the travel sequences and offered a greater contribution when being used together. (See 8.2.2 for the meaning of popular rate. ) 7.3.3 Related to Personalized Recommendation effectiveness of different methods in conducting the personalized location rec-ommendation. Clearly, our approach ( Experience + Sequence ) outperforms the weighted Slope One algorithm (T-Test of NDCG@5 , p = 0.0053 of MAP , p = 0.0049 &lt; 0.01). Although our method is slightly weaker than the
Pearson correlation-based CF model in terms of the average NDCG and MAP , the T-test result ( NDCG@5, p = 0.678 0.01; MAP, p = 0.741 0.01) shows that the advantage of the Pearson correlation is not significant. Thus, we can claim that at least our method is as effective as the Pearson correlation-based one.

Efficiency . Suppose we have such a GPS dataset generated by T users. From this dataset, we discover k locations and n trips; the average length (number the upper bound of computing complexity (times) of different methods are as follows: where Q = 2 w kT + 2 k 2 + m ( m  X  1) n / 2 is the total computing complexity of inferring the location correlation, and w is the iteration times.

Using the given GPS dataset, Figure 19 depicts the upper bound of com-puting complexity of different methods in calculating a prediction. Clearly, our method is much more efficient than the Pearson correlation-based CF model, while being slightly slower than the weighted Slope One algorithm. In short, our algorithm is as effective as the Pearson correlation-based model and almost as efficient as the weighted Slope one algorithm. Alternative, we can say our method is more efficient than the Pearson correlation-based model and more effective than the Weighted Slope One algorithm. 7.4 Discussions 7.4.1 Discussion on Human Location History. Beyond the static POI/YP geographical spaces.

First, from the location history we are able to discover some places, which attract multiple users X  interests, using a data-driven approach. Thus, (1) it is not necessary to manually pre-define some locations; (2) the detected locations would be more reasonable to be recommended to users; (3) we can find out the geo-regions with irregular structures, such as a shopping street and a lake; (4) the places developed recently can be automatically discovered.

Second, from the location history, we can discover the correlated locations pertaining to different business categories. For example, our method can detect that a restaurant is correlated with a cinema, or a lake and a museum are highly correlated.

Third, the location history implies some key factors, such as the travel time, distance, reachability and sequentiality between locations, which should be taken into account to plan a trip or perform a travel recommendation. For example, if two locations A and B co-occurred in multiple users X  trips, at least we can guarantee these two locations are reachable. Further, if people always travel to location B from A , it might imply that there would be a one-way road between these two locations. Meanwhile, people prefer to travel to a shopping mall nearby them rather than a distant one unless the quality of the distant one deserves a relatively long travel.

Given the previously mentioned reasons, we believe that human location revealing the location correlation. 7.4.2 Discussion on Interesting Locations. With the data shown in
Table IV, we observe that users X  travel experiences are useful in not only re-trieving representative locations in a region but also finding out more novel and interesting locations beyond baseline methods. Intuitively, some interesting places, which contain high-quality restaurants or nice shopping malls devel-oped recently, would not be visited by many people. However, a location covering some landmarks, which is not that interesting but with a relatively long history, might be accessed by more people. Hence, the rank-by-count cannot handle this kind of problem well. Meanwhile, a user would frequently access the restaurant nearby their working place for convenience rather than food quality or having fun. Therefore, a location frequently visited by people might not be interesting. 7.4.3 Discussion on Travel Sequences. First, intuitively, without consider-ing the information of user experience, the sequence from a railway station to a nearby hotel might be detected as a popular travel sequence because some tourists usually stay in the hotels nearby the station. Obviously, this is not a good recommendation for users. Second, if only using individuals X  travel experi-ences, we would mine out some life routine of an experienced user. For instance, sometimes, an experienced user would have dinner at a restaurant nearby their home and then go to a supermarket not far away from this restaurant. Since the user has a relatively high hub score, their life routine, like from the restaurant to the supermarket, might be detected as a popular travel sequence. Third, if only considering location interest, some impractical sequences would be found out. For example, the Summer Palace and the Forbidden City are two very interesting locations in Beijing. An experienced user would not visit them in a sequence as each deserves a one day tour. However, a few tourists without much travel knowledge might carelessly visit these two places in a sequence, hence make this sequence popular. 7.4.4 Discussion on Location Correlation periences of different users, the locations randomly visited by some tourists without much knowledge about the given geo-region would also become corre-lated. Thus, the recommended locations might not be that interesting as if they are generated from some experienced users X  location histories. With a user X  X  travel experience, we can also reduce to some extent the cold start problem in the existing recommendation systems, where a location would not be recom-mended until this location has been rated (accessed) by many people. In our method, if a newly discovered place co-occurred with some locations in some experienced users X  trips (although the number of the co-occurrences is not very big), the place would become correlated with these locations, hence might be retrieved as a recommendation. (2) Sequentiality . At the first glance, people would argue that sometimes the locations accessed by an individual in a trip might share the same degree of correlation among each other. For example, A , B , C are three similar shop-ping malls. The perfect inference result should be Cor ( A
Cor ( B , C ). However, an individual would access these locations in a sequence of A  X  B  X  C . In accordance with, our approach weighting the user travel experience according to the sequence in which the locations has been visited, ber we have many users X  location histories; if these locations really share the similar degree of correlation, different users would access them in a variety of sequences, such as A  X  C  X  B and B  X  A  X  C. Therefore, the finally integrated results would be correct. On the contrary, if people always travel to these places in a sequence of A  X  B  X  C there must be some reason behind the phenomenon; that is the different degree of correlation between locations. 8. CONCLUSION
In this article, we learned the generic and personalized travel recommendations from a large number of user-generated GPS traces. In the generic recommenda-tion, we modeled multiple users X  location histories with TBHG , and mined the top n interesting locations and the top m popular travel sequences in a given geospatial region based on the TBHG and a HITS-based inference model. To achieve the personalized recommendation, we first calculated the correlation between locations by employing the user travel experiences and the sequence that locations have been visited. Then, we incorporated this correlation into an item-based CF model, which predicts a user X  X  interest in an unvisited location in terms of the user X  X  location history and that of others.

To evaluate these two types of recommendations, we performed a user study based on a real-world GPS trace dataset collected by 107 users over a period of one year. As a result, our method showed clear advantages beyond rank-by-count and rank-by-frequency by providing a better presentation ability and ranking performance. When employing both users X  travel experiences and lo-cation interests, we achieved the best performance in detecting popular travel sequences. Regarding the personalized location recommendation, our approach is more effective than the weighted Slope one algorithm with a slightly addi-tional computation. In addition, in contrast to the Pearson correlation-based
CF model, our method is much more efficient while keeping the similar effec-tiveness.

