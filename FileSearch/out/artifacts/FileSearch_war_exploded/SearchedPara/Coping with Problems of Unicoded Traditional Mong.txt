 Although traditional Mongolian script was standardized in ISO/IEC 10646 and Unicode in 1999, Unicoded traditional Mongolian is still not the prevalent encoding Mongolian script is the national standard, as opposed to the Cyrillic alphabet used in no support for Unicoded traditional Mongolian from the major OS vendors until the release of Windows Vista in 2007. However, the way traditional Mongolian is stand-ardized in Unicode presents many obstacles to its effective use and handling by the computer and the paper is an attempt to remedy the problems caused by the Unicode encoding of traditional Mongolian. As far as we know, characters with the same glyph appearance have the same internal the unique Unicode code point (U+884C). Another problem is that the consonant ang different Unicode encodings, henceforth called homographs , are generated by the com-state of affairs, as when shown on the computer screen or printed on the paper, the homographs appear the same, but internally they are different, thus resulting in great live with it now. We propose two ways to alleviate the problems caused by the current Mongolian Unicode standard [11]: first we developed a Unicode input method for Mongolian which shows the transliteration and thus helps users to select the correct homograph; second, for the bulk of existing Unicoded Mongolian, we normalize the corpus using an automatically compiled homograph table and the vowel harmony principle [1][6][10]. To test the effectiveness of our normalization method, we do experiments show significant improvement on recall. Experiments on statistical Mongolian-Chinese machine translation also result in an absolute improvement of 5.70 BLEU score [9]. The most widely used Mongolian input methods in China is Menksoft Mongolian IME [7] but it is not based on Unicode (this fact alone shows that Mongolian Unicode En-coding is problematic). There are researches on Unicode Mongolian Input method, e.g. [5][8], but few free Unicoded Mongolian Input software have emerged from the re-searches. We have implemented Yunmeng , a Mongolian Input based on the Unicode standard. We designed a transliteration scheme compatible with Unicode code standard and the specification is available online. Control characters such as three Mongolian Free Var-method: 1. To input Mongolian, one only needs to remember the pronunciations of the Mongo-lian vowels and consonants. No keyboard layout is required. 2. Both letter-by-letter and word-by-word input modes are supported. To input a Mon-and all the consonants of the remaining syllables, e.g. the word monggol  X  X  shortened didate is shown correctly. See Fig. 1 for details. 3. The transliteration can be shown along with the traditional Mongolian script. This vowel harmony (it basically says that all the vowels in a word are either of masculine or feminine gender. The neuter vowel i is compatible with both the masculine and the feminine gender), it X  X  highlighted to the user as a possible incorrect encoding. Again refer to Fig. 1 for examples. method can help to reduce the incorrect homographs caused by the current Unicode Mongolian encoding. As can be seen from Table 1, there are lots of wrongly encoded Mongolian words in the corpus. This makes the vocabulary unnecessarily large and severe data sparseness will result. If no pre-processing is done, basic NLP processing tasks such as tagging, answer is of course normalization , that is, to convert a wrongly spelled Mongolian word to its correct normal form. 
Now the problem is, how can we find all the (correct or wrong) homographs of a word? It X  X  out of the question to compile the homograph table (like Table 1) manually. There are simply too many variant spellings/encodings which appear the same. 
The second problem is, suppose we have gotten such a table, how can we determine which homograph is the correct one? Frequency information cannot be used reliably here as we have seen from Table 1 that the most used form of the word monggol is the wrong one! 
Our solutions are outlined below:  X  For problem 1, we can resort to glyph similarity comparison algorithms to find the homographs that look the same. See [4] for a review for graph matching algorithms.  X  For problem 2, as long as the application is not concerned with the morphology of the Mongolian words, it actually does not matter whether a correct homograph can be chosen or not. We can simply pick the most frequent (albeit perhaps wrong) one as the normalized encoding, although word encodings violating the vowel harmony should certainly be discarded. For example, word-based or phrase-based statistical machine translation normally does not need morphological analysis. However, if morphological information is required, then manual work is unavoidable. 
In our current implementation of the homograph mining algorithm, we require that their glyphs be exactly the same if two word encodings are regarded as homographs. below. foreach word in Vocabulary foreach generated homograph candidate according to the put the pair into a equivalent group } 
We find 84611 homograph equivalent groups for our 150-million-word corpus! To appreciate this result, here we just give an example of these groups (Yunmeng translit-
For automatic normalization for use in search engines and statistical machine trans-lation, we simply choose the most frequent variation as the normalized encoding (upon applying vowel harmony), if our small normalization table compiled manually does not show which encoding is the correct one. We report our experiments of the normaliza-tion in the next section. 
To test the effectiveness of the normalization, we do experiments both on our search engine which supports Mongolian, and on statistical Mongolian-Chinese machine translation:  X  For the search engine, we do normalization on both the query and documents.  X  For the machine translation, we also do normalization on both training and testing data. 
The result of the search engine experiment is reported in Table 2. We randomly choose a few words with various frequencies and search these words in the Google the  X  X ite: X  directive. to say that we have made a big step toward solving the search problem that has been plaguing the Unicoded Mongolian for many years! 
The result on statistical Mongolian-Chinese machine translation is shown in Table 3. The system used is an in-house phrase-based machine translation system. The train-ing data are the China laws and government reports, with 59k parallel sentences, and improvement of 5.70 BLEU-4 score can be achieved on average upon normalization. The new Mongolian-Chinese machine translation system with normalization is also We discussed the homograph plague problem that has defied the widespread use and application of Unicoded traditional Mongolian for many years, and we propose a new input method called Yunmeng and a normalization algorithm to deal with it. Experi-ments on search engines and statistical machine translation showed great improve-ments. Acknowledgements. The work done in this paper is partially supported by the Re-search Fund for the Doctoral Program of Higher Education of China (No. 20130121110040), National High-Tech R&amp;D Program of China (No. 2012BAH14F03), and the Special Fund Project of Ministry of Education of China (In-telligent Conversion System from Simplified to Traditional Chinese Characters). We thank Dr. Yanlong He for kindly providing the Mongolian-Chinese test corpus for the statistical machine translation experiment. 
