 Unsupervised clustering can be significantly improved using su-pervision in the form of pairwise constraints, i.e., pairs of instances labeled as belonging to same or different clusters. In recent years, a number of algorithms have been proposed for enhancing clus-tering quality by employing such supervision. Such methods use the constraints to either modify the objective function, or to learn the distance measure. We propose a probabilistic model for semi-supervised clustering based on Hidden Markov Random Fields (HMRFs) that provides a principled framework for incorporating supervision into prototype-based clustering. The model general-izes a previous approach that combines constraints and Euclidean distance learning, and allows the use of a broad range of cluster-ing distortion measures, including Bregman divergences (e.g., Eu-clidean distance and I-divergence) and directional similarity mea-sures (e.g., cosine similarity). We present an algorithm that per-forms partitional semi-supervised clustering of data by minimiz-ing an objective function derived from the posterior energy of the HMRF model. Experimental results on several text data sets demon-strate the advantages of the proposed framework.
 Categories and Subject Descriptors: I.2.6 [Artificial Intelligence]: Learning, H.2.8 [Database Management]: Database Applications -Data Mining.
 General Terms: Algorithms.
 Keywords: Semi-supervised Clustering, Hidden Markov Random Fields, Distance Metric Learning.
Large amounts of unlabeled data are available in many real-life data-mining tasks, e.g., uncategorized messages in an automatic email classification system, genes of unknown functions for doing gene function prediction, etc. Labeled data is often limited and expensive to generate, since labeling typically requires human ex-pertise. Consequently, semi-supervised learning , which uses both labeled and unlabeled data, has become a topic of significant recent interest [11, 24, 33]. In this paper, we focus on semi-supervised clustering , where the performance of unsupervised clustering algo-Copyright 2004 ACM 1-58113-888-1/04/0008 ... $ 5.00. rithms is improved with limited amounts of supervision in the form of labels on the data or constraints [38, 6, 27, 39, 7].

Existing methods for semi-supervised clustering fall into two general categories which we call constraint-based and distance-based . Constraint-based methods rely on user-provided labels or constraints to guide the algorithm towards a more appropriate data partitioning. This is done by modifying the objective function for evaluating clusterings so that it includes satisfying constraints [15], enforcing constraints during the clustering process [38], or initializ-ing and constraining the clustering based on labeled examples [6]. In distance-based approaches, an existing clustering algorithm that uses a particular clustering distortion measure is employed; how-ever, it is trained to satisfy the labels or constraints in the supervised data. Several adaptive distance measures have been used for semi-supervised clustering, including string-edit distance trained using Expectation Maximization (EM) [10], KL divergence trained using gradient descent [13], Euclidean distance modified by a shortest-path algorithm [27], or Mahalanobis distances trained using convex optimization [39].

We propose a principled probabilistic framework based on Hid-den Markov Random Fields (HMRFs) for semi-supervised clus-tering that combines the constraint-based and distance-based ap-proaches in a unified model. We motivate an objective function for semi-supervised clustering derived from the posterior energy of the HMRF framework, and propose a EM-based partitional cluster-ing algorithm HMRF-KM EANS to find a (local) minimum of this objective function. Previously, we proposed a unified approach to semi-supervised clustering that was experimentally shown to pro-duce more accurate clusters than other methods on several data sets [8]. However, this approach is restricted to using Euclidean distance as the clustering distortion measure. In this paper, we show how to generalize that model to handle non-Euclidean mea-sures. Our generalization can utilize any Bregman divergence [3], which includes a wide variety of useful distances, e.g., KL diverg-ence. In a number of applications, such as text-clustering using a vector-space model, a directional similarity measure based on the angle between vectors is more appropriate [1]. Consequently, clus-tering algorithms that utilize distortion measures appropriate for directional data have recently been developed [18, 2]. Our unified semi-supervised clustering framework based on HMRFs is also ap-plicable to such directional similarity measures.

To summarize, the proposed approach aids unsupervised cluster-ing by incorporating labeled data in the following three ways: We present experimental results on clustering text documents that demonstrate the advantages of our approach.
In this work, we will focus on partitional prototype-based clus-tering as our underlying unsupervised clustering model, where a set of data points is partitioned into a pre-specified number of clus-ters (each cluster having a representative or prototype) so that a well-defined cost function, involving a distortion measure between the points and the cluster representatives, is minimized. A popular clustering algorithm in this category is K-Means [29].

Earlier research on semi-supervised clustering has considered supervision in the form of labeled points [6] or constraints [38, 39, 5]. In this paper, we will be considering the model where supervision is provided in the form of must-link and cannot-link constraints, indicating respectively that a pair of points should be or should not be put in the same cluster. For each pairwise constraint, the model assigns an associated cost of violating that constraint. Considering supervision in the form of constraints is more realistic than requiring class labels in many unsupervised-learning applica-tions, e.g. clustering for speaker identification in a conversation [5], or clustering GPS data for lane-finding [38]: while class labels may be unknown, a user can still specify whether pairs of points belong to same or different clusters. Constraint-based supervision is also more general than class labels: a set of classified points implies an equivalent set of pairwise constraints, but not vice versa.
Our semi-supervised clustering model considers a set of data points X with a specified distortion measure D between the points. Supervision is provided as a set M of must-link constraints (with a set of associated violation costs W )andaset C of cannot-link constraints (with associated violation costs W ). The task is to par-tition the data into K clusters so that the total distortion between the points and the corresponding cluster representatives according to the given measure D is minimized while a minimum number of constraints are violated. Since we restrict our attention to hard clustering, every point is assigned to a single cluster in our model.
A word on the notation and terminology used in this paper: bold-face variables, e.g., x , represent vectors; calligraphic upper-case al-phabets, e.g., X , refer to sets, whose representatives are enumerated as { x i } N i x im represents the m th component of the d -dimensional vector x The term  X  X istance measure X  is used synonymously with  X  X istor-tion measure X  throughout the paper.
To incorporate pairwise constraints along with an underlying dis-tortion measure between points into a unified probabilistic model, we consider Hidden Markov Random Fields (HMRFs). An HMRF has the following components: Fig. 1 shows a simple example of an HMRF. The observed dataset consists of six points { x 1 ... x 6 } , which have corresponding cluster labels { l 1 ... l 6 } . Two must-link constraints are provided vided between ( l 3 , l 6 ). The task is to partition the six points into three clusters. One clustering configuration is shown in Fig. 1. The must-linked points x 1 , x 3 and x 4 are put in cluster 1; the point x which is cannot-linked to x 3 , is assigned to cluster 2; x which are not involved in any constraints, are put in clusters 1 and 3 respectively.

Each hidden random variable l i has an associated set of neigh-bors N i . The must-link constraints M and cannot-link constraints define the neighborhood over the hidden labels, such that the neighbors of a point x i are all points that are must-linked or cannot-linked to it. The random field defined over the hidden variables is a Markov Random Field, where the probability distribution of the hidden variables obeys the following Markov property: So, the probability distribution of the value of l i for the data point x depends only on the cluster labels of the points that are must-linked or cannot-linked to x i .

Let us consider a particular cluster label configuration L joint event L = { l i } N i the probability of a label configuration can be expressed as a Gibbs distribution [21], so that where N is the set of all neighborhoods, Z 1 is a normalizing con-stant, and V ( L ) is the overall label configuration potential function, which can be decomposed into the functions V N potential for every neighborhood N i in the label configuration
Since we are provided with pairwise constraints over the class labels, we restrict the MRFs over the hidden variable to have pair-wise potentials. The prior probability of a configuration of cluster labels L then becomes Pr ( L )= 1 Z Here, f M ( x i , x j ) is a non-negative function that penalizes the vio-lation of a must-link constraint, and f C ( x i , x j ) is the corresponding penalty function for cannot-links. Note that the third condition in the definition of V ( i , j ) is necessary since not all points are involved in the constraints. Intuitively, this form of Pr ( L ) gives higher prob-abilities to label configurations that satisfy most of the must-link constraints M and cannot-link constraints C , thereby discouraging the violation of the user-specified constraints.
Given a particular configuration of the hidden variables (unknown cluster labels), the variables in the observable field of the HMRF (the data points) are generated using specified conditional proba-bility distributions. The conditional probability of the observation set X = { x i } N i Pr ( X | L ) , which in the clustering framework is of the form: where p ( X , {  X   X   X  h } K h ized by the cluster representatives {  X   X   X  h } K h lated to the clustering distortion measure D , as we will show in Section 2.4.
 The overall posterior probability of a cluster label configuration is Pr ( L | X )  X  Pr ( L ) Pr ( X | L ) , considering Pr ( X ) stant C . Hence, finding the maximum a-posteriori (MAP) configu-ration of the HMRF becomes equivalent to maximizing the poste-rior probability: where Z 2 = CZ 1 . The negative logarithm of Pr ( L | X ) posterior energy . Note that MAP estimation would reduce to max-imum likelihood (ML) estimation of Pr ( X | L ) if Pr ( L ) However, because our model accounts for dependencies between the cluster labels and Pr ( L ) is not constant, full MAP estimation of Pr ( L | X ) is required.

Since the cluster representatives as well as the cluster labels for the points are unknown in a clustering setting, maximizing Eqn.(5) is an  X  X ncomplete-data problem X , for which a popular solution method is Expectation Maximization (EM) [16]. It is well-known that K-Means is equivalent to an EM algorithm with hard clustering as-signments [26, 6, 3]. Section 3.2 describes a K-Means-type hard partitional clustering algorithm, HMRF-KM EANS , that finds a (lo-cal) maximum of the above function.

The posterior probability Pr ( L | X ) in Eqn.(5) has 2 components: the first factor evaluates each label configuration, corresponding to cluster assignments of every point, and gives a higher probabil-ity to a configuration that satisfies more of the given must-link and cannot-link constraints. A particular label configuration determines the cluster assignments and hence the cluster representatives. The second factor estimates the probability of generating the observed data points using the conditional distributions, which are parame-terized by the cluster representatives and depend on the distortion measure. The overall posterior probability of the cluster label con-figuration of all the points therefore takes into account both the cluster distortion measure and the constraints in a principled uni-fied framework.
Eqn.(5) suggests a general framework for incorporating const-raints into clustering. Particular choices of the constraint penalty functions f M and f C , and the conditional probabilities p would be motivated by the distortion measure appropriate for the clustering task.

When considering the second term in Eqn.(5), we restrict our attention to probability densities of the exponential form: where D ( x i ,  X   X   X  l normalization constant. Different clustering models fall into this exponential form: We will discuss the connection between specific distortion mea-sures that we will study in this paper and their corresponding clus-ter conditional probabilities in more detail in Section 3.1.
Let us now examine the potential function V in the first term of Eqn.(5). In previous work, only must-linked points were con-sidered in the neighborhood of a Markov Random Field with the generalized Potts potential function [12, 28]. In this potential func-tion, the must-link penalty is f M ( x i , x j )= w ij 1 [ is the cost for violating the must-link constraint ( i , j indicator function ( 1 [true] = 1, 1 [false] = 0). This function spec-ifies that the cost of violating a must-link constraint ( irrespective of the distance between x i and x j .

In a semi-supervised clustering framework where we want to use the constraint violations to learn the underlying distance mea-sure, the penalty for violating a must-link constraint between dis-tant points should be higher than that between nearby points. This would reflect the fact that if two must-linked points are far apart according to the current distortion measure and are hence put in different clusters, the measure is inadequate and needs to be modi-fied to bring those points closer together. So, the must-link penalty function is chosen to be where  X  D is the penalty scaling function, which we choose to be a monotonically increasing function of the distance between x x according to the current distortion measure. Specific penalty functions  X  D for different distortion measures D are described in Section 3.1.

Analogously, the penalty for violating a cannot-link constraint between two points that are nearby according to the current dis-tance measure should be higher than for two distant points. This would encourage the distance learning step to put cannot-linked points farther apart. The cannot-link penalty function can be ac-cordingly chosen to be where  X  D max is the maximum value of the scaling function  X  the dataset. This form of f C ensures that the penalty for violating a cannot-link constraint remains non-negative, since the second term is never greater than the first. Note that these f M and f functions make the MRF over the hidden variables non-isotropic (i.e., the values of the potential between pairs of random variables in the field are non-uniform), but the overall model is still a valid HMRF.

Putting this into Eqn.(5) and taking logarithms gives the follow-ing cluster objective function, minimizing which is equivalent to maximizing the MAP probability in Eqn.(5), or equivalently, mini-mizing the posterior energy of the HMRF: where Z = Z 2 Z 3 . Thus, the task is to minimize J obj over {  X   X   X  ,and D (if the latter is parameterized).
The choice of a distortion measure D for a particular cluster-ing problem depends on the properties of the domain under con-sideration. A number of popular distortion measures, including Euclidean distance and Kullback-Leibler divergence, belong to a general family of functions known as Bregman divergences [3]. Another popular class of distortion measures includes directional similarity functions such as normalized dot product (cosine sim-ilarity) and Pearson X  X  correlation [31]. Selection of the most ap-propriate distortion measure for a clustering task should take into account intrinsic properties of the dataset. For example, Euclidean distance is most appropriate for low-dimensional data with distri-bution close to the normal distribution, while normalized dot prod-uct best captures similarity of directional data where differences in angles between vectors are important, while vector lengths are not. For Bregman divergences and directional similarity measures like cosine similarity, it has been shown that there exist efficient K-Means-type iterative relocation algorithms that minimize the corre-sponding clustering cost functions [2, 3].

For many realistic datasets, off-the-shelf distortion measures may fail to capture the correct notion of similarity in a clustering set-ting. Unsupervised measures like Mahalanobis distance and Pear-son correlation attempt to correct similarity estimates using the global mean and variance of the dataset. However, these mea-sures may still fail to estimate distances accurately if the attributes X  true contribution to similarity is not correlated with their variance. Recently, several semi-supervised clustering approaches have been proposed that incorporate adaptive similarity functions, including parameterization of Jensen-Shannon divergence [13] and Euclidean distance [5, 39]. In initial work [8], we have shown how Euclidean distance can be parameterized and learned in a principled man-ner in a semi-supervised clustering setting. We now turn to two other popular distortion measures, cosine similarity and Kullback-Leibler divergence, and describe how their adaptive versions can be used as distortion measures in our HMRF-based framework.
Cosine similarity can be parameterized using a symmetric positive-definite matrix A , which leads to the following distortion measure: where x A is the weighted L 2 norm: x A = rameterization is equivalent to projecting every instance x onto a space spanned by A 1 / 2 : x  X  A 1 / 2 x . Since unparameterized cosine similarity is a natural measure for prototype-based clustering under the assumption that the data is generated by a mixture of von Mises-Fisher (vMF) distributions [2], D cos distortion measure for data generated by a mixture of vMF distribu-tions in the projected space. Because for realistic high-dimensional domains computing the full matrix A would be extremely expen-sive computationally, we focus our attention on diagonal A ,which is equivalent to using a vector of weights a = diag ( A ) from now on we will be referring to the cosine measure in Eqn.(10) as D cos
To u s e D cos framework described in Section 2.4, we also use it as the penalty scaling function  X  D ( x i , x j )= D cos lowing objective function: where D cos
In certain domains, data is described by probability distributions, e.g. text documents can be represented as probability distributions over words generated by a multinomial model [35]. KL-divergence is a widely used distance measure for such data: D  X  d events:  X  d m parameterized KL-divergence multiplying m -th component by a weight  X  m : D KL ( x i , x j )=  X  d m after such parameterization D KL is no longer a Bregman divergence over probability distributions, which is undesirable since conver-gence is no longer guaranteed for the algorithm described in [13].
Instead of KL-divergence, we employ a related measure, I-diver-gence, which also belongs to the class of Bregman divergences [3]. I-divergence has the following form: D I ( x i , x j )=  X   X  butions but can be any non-negative vectors. For probability dis-tributions, I-divergence and KL-divergence are equivalent. We pa-rameterize I-divergence by a vector of non-negative weights a :
Such parameterization can be thought of as scaling every at-tribute in the original space by a weight contained in the corre-sponding component of a , and then taking I-divergence in the trans-formed space. This implies that D I respect to the transformed space.

The clustering framework described in Section 2.4 requires us to define an appropriate penalty scaling function  X  D ( x i , x in the HMRF potential functions as described in Eqns.(3) and (7-8). Since we consider unordered constraint pairs,  X  D ( x be symmetric to penalize constraints appropriately. To meet this re-quirement, we will use a sum of weighted I-divergences from x x to the mean vector x i + x j 2 . This  X  X -divergence to the mean X , D is analogous to Jensen-Shannon divergence, which is the symmet-ric  X  X L-divergence to the mean X  [14], and is defined as follows:  X 
D ( x i , x j )= D IM a ( x i , x j ) This formulation leads to the following objective function:
The two parameterized distortion measures D cos underlying generative models: weighted cosine corresponds to a von-Mises Fisher (vMF) distribution in the projected space, while I-divergence corresponds to multinomial distributions with rescaled probabilities. Thus, Pr ( X | L ) in Eqn.(4) is well-defined for the un-derlying HMRF model in both these cases, and minimizing objec-tive functions J cos corresponding underlying models. As discussed in Section 2.2, J obj can be minimized by a K-Means-type iterative algorithm HMRF-KM EANS . The outline of the algorithm is presented in Fig. 2. The basic idea of HMRF-KM EANS is as follows: in the E-step, given the current cluster representatives, every data point is re-assigned to the cluster which minimizes its contribution to J obj . In the M-step, the cluster repre-sentatives {  X   X   X  h } K h minimize J obj for the current assignment. The clustering distortion measure D is updated in the M-step to reduce the objective function simultaneously by transforming the space in which data lies. Note that this corresponds to the generalized EM algorithm [32, 16], where the objective function is reduced but not necessarily mini-mized in the M-step. Effectively, the E-step minimizes J cluster assignments L , the M-step (A) minimizes J obj over cluster representatives {  X   X   X  h } K h the parameters of the distortion measure D . The E-step and the M-step are repeated till a specified convergence criterion is reached. The specific details of the E-step and M-step are discussed in the following sections.

Note that calculating the normalizing constant Z in Eqn.(9) is computationally intensive for most distortion measures, e.g. for co-sine similarity, this corresponds to computing a Bessel function [2]. So, we make an approximation by considering log Z to be constant throughout the clustering iterations, and hence drop that term from Eqn.(9).
Good initial centroids are essential for the success of partitional clustering algorithms such as K-Means. In previous work, it was shown that using limited supervision in the form of labeled points results in good initial centroids for partitional clustering [6]. In our case, supervision is provided as pairwise constraints instead of la-beled points. However, we follow the same motivation of inferring good initial centroids from the constraints.
 Algorithm: HMRF-KMeans
Method: 2. Repeat until convergence 2c. M-step(B) : Re-estimate distance measure D to reduce J 2d. t  X  t+1
We try to utilize both the constraints and unlabeled data during initialization. For this, we follow a two stage initialization process. Neighborhood inference: We begin by taking the transitive clo-sure of the must-link constraints to get connected components con-sisting of points connected by must-links. Let there be  X  connected components, which are used to create  X  neighborhoods { N p These define the must-link neighborhoods in the MRF over the hid-den cluster variables.

Assuming consistency of the constraints, we then infer additional constraints from the neighborhoods. We augment the set M the must-link constraints inferred from the transitive closure that were not in the initial set. For each pair of neighborhoods and N p that have at least one cannot-link between them, we add cannot-link constraints between every pair of points in N and augment the cannot-link set C with these entailed constraints. This step corresponds to inferring as much information as possi-ble about the neighborhood structure of the hidden MRF, under the assumption of consistency of the constraints.

From this point onwards in the paper, we will overload nota-tion and refer to the augmented must-link and cannot-link sets as M and C respectively. Note that if we know that the given set of constraints are noisy, implying that the constraints are not consis-tent, we will not add these additional inferred constraints to and only work with the constraints provided initially.
 Cluster selection: The first stage produces  X  neighborhood sets { N p }  X  p = 1 . These neighborhoods are used as initial clusters for the HMRF-M EANS algorithm. If  X  = K ,  X  cluster centers are initial-ized with the centroids of all the  X  neighborhood sets. If  X  &lt; K ,  X  clusters are initialized from the neighborhoods, and the remain-ing K  X   X  clusters are initialized with points obtained by random perturbations of the global centroid of X .

If  X  &gt; K , K neighborhoods are selected as initial clusters us-ing the clustering distortion measure. Farthest-first traversal is a good heuristic for initialization in prototype-based partitional clus-tering algorithms [23]. The goal in farthest-first traversal is to find K points that are maximally separated from each other in terms of a given distance function. In our case, we apply a weighted variant of farthest-first traversal to the centroids of the  X  neighborhoods, where the weight of each centroid is proportional to the size of the corresponding neighborhood. We consider the weighted distance between two centroids to be the distance between them according to the distortion measure multiplied by the weights of the two cen-troids. Thus, weighted farthest-first is biased to select centroids that are relatively far apart as well as large in size.

During weighted farthest first selection, the algorithm maintains a set of centroids that have been visited so far. The centroid of the largest neighborhood is selected as the starting point and added to the visited set. At every point in the algorithm, the unvisited cen-troid with the farthest weighted distance (smallest weighted simi-larity) from the visited set is chosen. If there is a tie, it is resolved by selecting the centroid farthest from the global centroid of the data. This point is added to the visited set, and the process is continued till K centroids are visited. Finally, the K neighborhood centroids chosen by weighted farthest-first traversal are set as the K initial cluster centroids for HMRF-KM EANS .
 Overall, this two-stage initialization procedure is able to take into account both unlabeled and labeled data to obtain cluster represen-tatives that provide a good initial partitioning of the dataset.
In the E-step, assignments of data points to clusters are updated using the current estimates of the cluster representatives. In simple K-Means there is no interaction between the cluster labels, and the E-step is a simple assignment of every point to the cluster repre-sentative that is nearest to it according to the clustering distortion measure. In contrast, the HMRF model incorporates interaction be-tween the cluster labels defined by the random field over the hidden variables. As a result, computing the assignment of data points to cluster representatives to minimize the objective function is com-putationally intractable in any non-trivial HMRF model [36].
There exist several techniques for computing cluster assignments that approximate the optimal solution in this framework, e.g., iter-ated conditional modes (ICM) [9, 40], belief propagation [34, 36], and linear programming relaxation [28]. We follow the ICM ap-proach, which is a greedy strategy to sequentially update the clus-ter assignment of each point, keeping the assignments for the other points fixed.

The algorithm performs cluster assignments in random order for all points. Each point x i is assigned to the cluster representative  X   X   X  that minimizes the point X  X  contribution to the objective function o bj ( x i ,  X   X   X  h ) :
J obj ( x i ,  X   X   X  h )= D ( x i ,  X   X   X  h )+  X 
Optimal assignment for every point is that which minimizes the distortion between the point and its cluster representative (first term of
J obj ) along with incurring a minimal penalty for constraint vio-lations caused by this assignment (second and third terms of After all points are assigned, they are randomly re-ordered, and the assignment process is repeated. This process proceeds until no point changes its cluster assignment between two successive iter-ations. ICM is guaranteed to reduce J obj or keep it unchanged (if obj is already at a local minimum) in the E-step [9].

Overall, the assignment of points to clusters incorporates pair-wise supervision by discouraging constraint violations proportion-ally to their severity, which guides the algorithm towards a desir-able partitioning of the data.
The M-step of the algorithm consists of two parts. First, cluster representatives {  X   X   X  h } K h signed to them to decrease the objective function J obj in Eqn.(9). It has recently been shown that for Bregman divergences each clus-ter representative calculated in the M-step of the EM algorithm is equivalent to the expectation value over the points in that clus-ter, which is essentially their arithmetic mean [3]. Additionally, it has been experimentally demonstrated that for distribution-based clustering, smoothing cluster representatives by a prior using a de-terministic annealing schedule leads to considerable improvements [17]. With smoothing controlled by a parameter  X  , each cluster representative  X   X   X  h is estimated as follows when D I measure:
For directional measures, each cluster representative is the arith-metic mean projected onto unit sphere [2]. Taking the weighting into account, centroids are estimated as follows when D cos distortion measure:
Since constraints do not take part in cluster representative re-estimation, this step remains the same as in K-Means for Bregman divergences, and the same as in SPKMEANS for weighted cosine similarity [18].

Second, if a parameterized variant of a distortion measure is used, e.g. D cos rameters must be updated to decrease the objective function. For certain distance measure parameterizations, minimization via tak-ing partial derivatives and solving for the parameter values may be feasible, e.g. for Euclidean distance [8]. In general, however, a closed-form solution may be unattainable. In such cases, gradi-ent descent provides an alternative avenue for learning distortion measure weights. For the two distortion measures described above, D cos a and D I a , every weight a m would be updated using the update
For the two particular distortion measures that we are consider-ing, D cos
Intuitively, the distance learning step results in modifying the distortion measure so that similar data points are brought closer to-gether, while dissimilar points are pulled apart. This process leads to a transformed data space, which facilitates partitioning of the unlabeled data that respects supervised constraints provided by the user and reflects natural variance in the data.
When clustering sparse high-dimensional data, e.g. text docu-ments represented using the vector space model, it is particularly difficult to cluster small datasets. This is due to the fact that cluster-ing algorithms can easily get stuck in local optima on such datasets, which leads to poor clustering quality. In previous studies with KMEANS algorithm applied to document collections whose size is small compared to the dimensionality of the word space, it has been observed that there is little relocation of documents between clus-ters for most initializations, which leads to poor clustering quality after convergence of the algorithm [17].

This scenario is likely in many realistic applications. For exam-ple, when clustering the search results in a web-search engine like Viv  X   X simo 1 , typically the number of webpages that are being clus-tered is in the order of hundreds. However the dimensionality of the feature space, corresponding to the number of unique words in all the webpages, is in the order of thousands. Moreover, each web-page is sparse, since it contains only a small number of all the pos-sible words. Supervision in the form of pairwise constraints can be beneficial in such cases and may significantly improve clustering quality. To demonstrate the effectiveness of our semi-supervised clustering framework, we consider 3 data sets that have the char-acteristics of being sparse, high-dimensional, and having a small number of points compared to the dimensionality of the space. We derived 3 datasets from the 20-Newsgroups collection. 2 collection has messages harvested from 20 different Usenet news-groups, 1000 messages from each newsgroup. From the original dataset, a reduced dataset was created by taking a random sub-sample of 100 documents from each of the 20 newsgroups. Three datasets were created by selecting 3 categories from the reduced collection. News-Similar-3 consists of 3 newsgroups on similar topics ( comp.graphics , comp.os.ms-windows , comp.windows.x ) with significant overlap between clusters due to cross-posting. News-Related-3 consists of 3 newsgroups on related topics ( talk.poli-tics.misc , talk.politics.guns ,and talk.politics.mideast ). News-Different-3 consists of articles posted in 3 newsgroups that cover different topics ( alt.atheism , rec.sport.baseball , sci. space ) with well-separated clusters. The vector-space model of News-Similar-3 has 300 points in 1864 dimensions, News-Related-3 has 300 points in 3225 dimensions, and News-Different-3 had 300 points in 3251 dimensions. Since the overlap between topics in News-Similar-3 and News-Related-3 is significant, they are more challenging datasets than News-Different-3 .
 All the datasets were pre-processed by stop-word removal, TF-IDF weighting, removal of very high-frequency and low-frequency words, etc., following the methodology of Dhillon et al. [18].
We u s e d normalized mutual information (NMI) as our clustering evaluation measure. NMI is an external clustering validation metric that estimates the quality of the clustering with respect to a given underlying class labeling of the data: it measures how closely the clustering algorithm could reconstruct the underlying label distri-bution in the data [37, 19]. If C is the random variable denoting the cluster assignments of the points and K is the random variable denoting the underlying class labels on the points [2], then the NMI measure is defined as: http://www.vivisimo.com http://www.ai.mit.edu/people/jrennie/20Newsgroups where I ( X ; Y )= H ( X )  X  H ( X | Y ) is the mutual information be-tween the random variables X and Y , H ( X ) is the Shannon entropy of X ,and H ( X | Y ) is the conditional entropy of X given Y [14]. NMI effectively measures the amount of statistical information shared by the random variables representing the cluster assignments and the user-labeled class assignments of the data points.
We generated learning curves using 20 runs of 2-fold cross-vali-dation for each dataset. For studying the effect of constraints in clustering, 50% of the dataset is set aside as the test set at any par-ticular fold. The different points along the learning curve corre-spond to constraints that are given as input to the semi-supervised clustering algorithm. These constraints are obtained from the train-ing set corresponding to the remaining 50% of the data by ran-domly selecting pairs of points from the training set, and creating must-link or cannot-link constraints depending on whether the un-derlying classes of the two points are same or different. Unit con-straint costs W and W were used for all constraints, original and inferred, since the datasets did not provide individual weights for the constraints. Based on a few pilot studies, gradient step size  X  was chosen to have values  X  = 1 . 75 for clustering with D  X  = 1 . 0  X  8 for clustering with D I a ; weights were restricted to be non-negative. In a realistic setting, these parameters could be tuned using cross-validation with a hold-out set. The clustering algorithm was run on the whole dataset, but NMI was calculated only on the test set. The learning curve results were averaged over the 20 runs.
We compared the proposed HMRF-KM EANS algorithm with two ablations as well as unsupervised K-Means clustering. The following variants were compared for distortion measures D and D I measures respectively:
Figs. 3, 5, and 7 demonstrate the results for experiments where weighted cosine similarity D cos sure, while Figs. 4, 6, and 8 summarize experiments where weighted I-divergence D I
As the results demonstrate, the full HMRF-KM EANS algorithm outperforms the unsupervised K-Means baseline as well as the ab-lated versions of HMRF-KM EANS for both D cos tive performance of KM EANS -I-C and KM EANS -I indicates that using supervision for initializing cluster representatives is highly beneficial, while the constraint-sensitive cluster assignment step does not lead to significant additional improvements for D D (Fig. 4) and News-Similar-3 (Fig. 8) which indicates that incorpo-rating constraints in the cluster assignment process is useful for these datasets. This result is reversed for News-Related-3 (Fig. 6),
Figure 3: Clustering results for D cos Figure 4: Clustering results for D I implying that in some cases using constraints in the E-step may be unnecessary, which agrees with previous results on other domains [6]. However, incorporating supervised data in all the 3 stages of the algorithm in KM EANS -I-C-D, namely in itialization, cluster as-signment, and distance update, always leads to substantial perfor-mance improvement.

As can be seen from results for 0 pairwise constraints in Figs. 3-8, distance learning is beneficial even in the absence of any pair-wise constraints, since it is able to capture the relative importance of the different attributes in the unsupervised data. In the absence of supervised data or when no constraints are violated, distance learn-ing attempts to minimize the objective function by adjusting the weights given the distortion between the unsupervised datapoints and their corresponding cluster representatives.

In realistic application domains, supervision in the form of const-raints would be in most cases provided by human experts, in which case it is important that any semi-supervised clustering algorithm performs well with a small number of constrains. KM EANS D starts outperforming its variants and the unsupervised clustering baseline early on in the learning curve, and is therefore a very ap-propriate algorithm to use in actual semi-supervised data clustering systems.

Overall, our results show that the HMRF-KM EANS algorithm effectively incorporates labeled and unlabeled data in three stages, each of which improves the clustering quality.
A related unified model for semi-supervised clustering with const-raints was recently proposed by Segal et al. [36]. Their model is a unified Markov network that combines a binary Markov network derived from pairwise protein interaction data and a Naive Bayes Markov network modeling gene expression data. Our proposed HMRF framework is more general than this formulation, since it works with a broad class of clustering distortion measures, includ-ing Bregman divergences and directional similarity measures. In contrast, the formulation of Segal et al. considers only a Gaussian cluster conditional probability distribution, which corresponds to having Mahalanobis distance as the underlying clustering distance measure. Additionally, the HMRF-KM EANS algorithm performs distance learning in the unified framework, which is not done in the Markov Network model.

The HMRF-KM EANS algorithm proposed in this paper is re-lated to the EM algorithm for HMRF model-fitting proposed by Zhang et al. [40]. However, HMRF-KM EANS performs an addi-tional step of distance learning in the M-step, which is not consid-ered in the HMRF-EM algorithm. The discussion of the HMRF-EM algorithm was also restricted only to Gaussian conditional dis-tributions, which has been generalized in our formulation.
There has been other research in semi-supervised clustering fo-cusing individually on either constraint-based or distance-based semi-supervised clustering. COP-KM EANS is a constraint-based clus-tering algorithm that has a heuristically motivated objective func-tion [38]. Our method, on the other hand, has an underlying prob-abilistic model based on Hidden Markov Random Fields. Bansal et al. [4] also proposed a framework for pairwise constrained clus-tering, but their model performs clustering using only the const-raints, whereas our formulation uses both constraints and an under-lying distortion measure between the points.

In recent work on distance-based semi-supervised clustering with pairwise constraints, Cohn et al. [13] used gradient descent for weighted Jensen-Shannon divergence in the context of EM cluster-ing. Xing et al. [39] utilized a combination of gradient descent and iterative projections to learn a Mahalanobis distance for K-Means clustering. The Redundant Component Analysis (RCA) algorithm used only must-link constraints to learn a Mahalanobis distance us-ing convex optimization [5]. Spectral learning is another recent method that utilizes supervision to transform the clustering distance measure using spectral methods [25]. All these distance learning techniques for clustering train the distance measure first using only supervised data, and then perform clustering on the unsupervised data. In contrast, our method integrates distance learning with the clustering process and utilizes both supervised and unsupervised data to learn the distortion measure.
We have presented the general probabilistic framework for incor-porating pairwise supervision into a prototype-based clustering al-gorithm, as well as two instantiations of that framework for partic-ular distortion measures. There are several open issues that would be interesting to explore in future work.

Investigating alternative approaches to training distortion mea-sures in the M-step of our algorithm may lead to improved perfor-mance of the algorithm. Our initial results as well as other recent work on distance learning for clustering [27, 8, 5, 39] suggest that transforming the data space can be highly beneficial for cluster-ing quality. Therefore, we conjecture that developing alternative
Figure 5: Clustering results for D cos
Figure 6: Clustering results for D I
Figure 7: Clustering results for D cos
Figure 8: Clustering results for D I feature selection or feature extraction approaches, which perform other types of data space transformation using supervised data, is a promising direction for future work.

The weighted farthest-first algorithm for cluster initialization that we have described in Section 3.3 has proven itself very useful. We intend to explore theoretical implications of this initialization algo-rithm in the HMRF model, as well as develop alternative techniques that utilize both labeled and unlabeled data for initializing cluster representatives.

While we have used the ICM algorithm for constraint-sensitive cluster assignment in the HMRF model, other methods have also been proposed for this task, e.g. loopy belief propagation [36]. Ex-tensive experimental comparison of these strategies would be in-formative for future work on iterative reassignment algorithms like HMRF-KM EANS in the HMRF framework. We also want to run experiments to study the sensitivity of the HMRF-KM EANS algo-rithm to the constraint violation parameters W and W , as done in Segal et al. [36].

Finally, we want to apply our algorithm to other application do-mains. One interesting problem in bioinformatics is to improve the quality of clustering genes with unknown functions by utilizing constraints between the genes derived from domain knowledge. Se-gal et al. [36] used constraints derived from protein-protein interac-tions while clustering gene expression data using Mahalanobis dis-tance as the underlying distortion measure. We want to apply our HMRF-KM EANS algorithm to different kinds of gene represen-tations, for which different clustering distance measures would be appropriate, e.g., Pearson X  X  correlation would be an appropriate dis-tortion measure for gene microarray data [20], I-divergence would be useful for the phylogenetic profile representation of genes [30], etc. We plan to run experiments for clustering these datasets using the HMRF-KM EANS algorithm, where the constraints will be in-ferred from protein interaction databases as well as from function pathway labels that are known for a subset of the genes.
We have introduced a theoretically motivated framework for semi-supervised clustering that employs Hidden Random Markov Fields (HMRFs) to utilize both labeled and unlabeled data in the cluster-ing process. The framework can be used with a number of dis-tortion measures, including Bregman divergences and directional measures, and it accommodates trainable measures that can be ada-pted to specific datasets. We introduced the HMRF-KM EANS gorithm that performs clustering in this framework and incorpo-rates supervision in the form of pairwise constraints in all stages of the clustering algorithm: initialization, cluster assignment, and parameter estimation. We presented two instantiations of the al-gorithm based on two particular distortion measures that are popu-lar for high-dimensional data: KL divergence and cosine similarity. Experimental evaluation has shown that the algorithm derived from the HMRF framework leads to improved cluster quality on realistic textual datasets over unsupervised clustering and ablations of the proposed approach. We would like to thank Srujana Merugu for insightful comments. This research was supported by the National Science Foundation under grants IIS-0117308 and ITR: IIS-0325116, and by a Faculty Fellowship from IBM Corporation.
