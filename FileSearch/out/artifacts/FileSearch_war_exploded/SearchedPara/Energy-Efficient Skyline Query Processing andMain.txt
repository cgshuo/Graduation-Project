 The skyline query, as an important operator in databases for multi-preference analysis and decision making, has re-ceived much attention recently due to its wide application backgrounds. In this paper, we consider the skyline query problem in Wireless Sensor Network with an objective to maximize the network lifetime by proposing filter-based dis -tributed algorithms for skyline evaluation and maintenanc e. We also conduct preliminary experiments to evaluate the performance of the proposed algorithms. The experimen-tal results demonstrate that the proposed algorithms signi f-icantly outperform existing algorithms on various dataset s. H.2.4 [ Database Management ]: Query processing Algorithms, Experimentation, Performance skyline, filtering algorithm, sensor network, network life time
As one of the popular queries in modern databases, the skyline query has received much attention recently by the database community due to its wide applications in multi-criteria decision making. Most previous studies [4, 3] for t he skyline problem are based on centralized databases and dis-tributed computing environment. Recently some effort has been taken for skyline query evaluation and maintenance in wireless sensor networks (WSNs), such as [2, 1, 5]. In this paper we focus on skyline query evaluation and mainte-nance in WSNs by devising energy-efficient evaluation and maintenance algorithms for skyline queries to maximize the network lifetime. To achieve that, we invent a new concept -the local skyline certificate, which will be used to find a global filter. Based on the global filter, we then devise filter -based, distributed evaluation and maintenance algorithms for skyline queries.
We consider a wireless sensor network consisting of n sen-sor nodes randomly deployed in a region of interest, each measuring a certain number d of numeric attributes and a base station with unlimited energy supply serves as the gate -way between the sensor network and the users. We assume that the transmission range of each sensor node is identi-cal. Two sensor nodes are the neighboring nodes if they are within the transmission range of each other. The amounts of transmission and reception energy by transmitting or re-ceiving a message containing k readings are  X  t + R  X  d  X  k and  X  + r e  X  d  X  k respectively, where  X  t and  X  r are the energy consumptions of handshaking to build the communication channels between the sender and receiver and transmitting and receiving the message header. For different messages the values of  X  t and  X  r are identical. Given a sensor network, each sensor node generates a data point at a time step. A data point consists of d attributes. The dataset P contains all the points and the skyline query on P is to return the points that are not dominated by any other points in P . We assume that each node v contains a set S ( v ) of points. We refer to S ( v ) as the snapshot of data points during a given time interval. The entire set P =  X  v  X  V S ( v ), where V is the set of sensor nodes. Assume that a routing tree rooted at the base station r is built. A simple merge-based algorithm fro skyline queries proceeds as follows. Each node v  X  V computes its local skyline LSK ( v ) on set S ( v ), followed by computing the skyline SK ( v ) on set  X  u  X  C ( v ) SK ( u )  X  LSK ( v ) which is equivalent to computing the skyline on set  X  is the set of descendants of v in the routing tree. The skyline merge-based algorithm performs in-network skyline mergin g operation at each node and finally the root node r computes a set SK ( r ), which is the global skyline. We refer to this al-gorithm as algorithm Sky_Merge ( n, S ( v ) , r ), which will serve for the benchmark purpose.
In this section a filter-based algorithm for skyline query evaluation is proposed. It first finds a global skyline filter consisting of potential global skyline points, then finds a proper subset of global skyline on set of non-filtered points through in-network processing by using the global skyline filter, finally removes those dominated points by the points in the found proper subset from the global skyline filter. The final global skyline consists of the remaining global filt er points and the found global skyline points.
The certificate of a skyline is a subset of the skyline. We will make use of the skyline certificate to find a global sky-line filter. Specifically, let SK ( S ) be the skyline on set S , we choose k = max { X   X   X  X  SK ( S ) | X  , 1 } points from SK ( S ) as the certificate of SK ( S ), where  X  is a constant with 0 &lt;  X   X  1. We devise an approximation algorithm for finding a certifi-cate of size k for a local skyline at node v whose points can dominate as many points as possible. The algorithm consists of k iterations, and within each iteration, a skyline point is chosen if it dominates the maximum number of points in the local skyline that are not dominated by the points in the current certificate.
We now propose the filter-based algorithm for skyline eval-uation. We start by finding the global skyline filter. Each node v first computes the local skyline LSK ( v ) on set S ( v ). If v is the leaf node, v computes the certificate cerf ( v ) of LSK ( v ) and forwards it to its parent. LSK  X  ( v ) = LSK ( v )  X  cerf ( v ) is the set of the remaining local skyline points. Oth-erwise ( v is the internal node), v computes the skyline SK ( v ) on set LSK ( v )  X  u  X  C ( v ) filter ( u ) where u is a child node of v , and LSK  X  ( v ) = SK ( v )  X  cerf ( v ). As a result, the root r computes the skyline SK ( r ) on set S u  X  C ( r ) SK ( r ) is then used as the Global Skyline Filter, referred to as GSF ( P ) = SK ( r ). GSF ( P ) is broadcast to each node v in the sensor network, and node v removes the dominated points by the points in GSF ( P ) from LSK  X  ( v ) for every v  X  V . Denote by LSK  X  ( v ) be the set of LSK  X  ( v ) after use of the points in GSF ( P ) for filtering.

What followed is to find a proper subset of the global skyline. We apply the simple merge-based algorithm on the set of non-filtered points S v  X  LSK  X  ( v ) by traversing the nodes in the routing tree in a bottom-up fashion to find the global skyline SK  X  ( r ) at the root r .

We finally proceed the cleaning up stage by removing those dominated points by the points in SK  X  ( r ) from GSF ( P ). Let GSF  X  ( P ) be the set of remaining points in GSF ( P ). Then, the global skyline SK ( P ) on set P is SK  X  ( r )  X  GSF  X  ( P ).
We assume that the point updating and skyline evaluation can be done within a time step. Suppose SK ( P t ) is the global skyline on set of valid points in the sensor network at time step t , CSK ( v ) t is the set of candidate skyline points at node v , ADD ( v ) t is the set of the newly generated points at node v , and LSK ( v ) t is the local skyline on the points of node v at time step t . Remove ( S ) t is referred to as the expired points in set of points S at time step t . The skyline maintenance algorithm at time step t consists of two stages: find the new global skyline, followed by updating the global skyline filter at each node, using the new global skyline.
In the first stage, each node v first removes the expired points and the points dominated by ADD ( v ) t from CSK ( v ) Then v computes the local skyline LSK ( v ) t on set CSK ( v ) ADD ( v ) t , removes the points that are dominated by SK ( P from LSK ( v ) t and appends ADD ( v ) t to the updated CSK ( v ) The simple merge-based algorithm is then applied to the routing tree to find the new global skyline on set  X  v  X  V In the end the base station r computes the skyline SK ( r ) set S u  X  C ( r ) SK ( u ) t  X  CSK ( r ) t . The global skyline SK ( P on set P t is then SK ( P t ) = SK ( r ) t  X  SK ( P t  X  1  X  Remove ( SK ( P t  X  1 )) t  X  X  p | q  X  p, p  X  SK ( P t  X  1 SK ( r ) t } . What followed is to broadcast DSK t = SK ( r ) SK ( P t  X  1 ) to every node in the network. The global fil-ter at each node is updated, i.e, GSF ( v ) t = SK ( P t ) = DSK t  X  SK ( P t  X  1 )  X  Remove ( SK ( P t  X  1 )) t  X  X  p | q  X  p, p  X  SK ( P t  X  1 ) , q  X  DSK t ).
We evaluate the performance of proposed algorithms in terms of the total energy consumption, the maximum en-ergy consumption, and the network lifetime. Assume that 500 sensor nodes are deployed in a 100 m  X  100 m by the NS-2 simulator. The transmission range of each sensor is 10 m and the initial energy capacity of each sensor is 10 We set R = 0 . 0144 mJ , r e = 0 . 00576 mJ ,  X  t = 0 . 1152 mJ and  X  t = 0 . 04608 mJ . Assume that there are 1,000 ran-domly generated points at each node initially. The dimen-sionality of data points varies from 2 to 5. The certificate size of a local skyline at node v in the proposed algorithm Filter- X  is k = max { X   X   X  X  SK ( v ) | X  , 1 } and  X  = 0 . 2. We refer to the proposed dynamic filter algorithm by Huang et al [2] as algorithm DF , the single (tuple) point filter algo-rithm and the grid index filter algorithm by Xin et al [5] as algorithm TF and algorithm GI , respectively. It can be seen from Fig. 1 that algorithm Filter- X  outperforms all the other algorithms significantly on all dimensional datasets . With the growth of dimensionality, the total and maximum energy consumptions by the simple merge-based algorithm are at least twice of the amounts by algorithm Filter- X  , as shown in Figures 1(a) and (b). Meanwhile, Fig. 1(c) indi-cated that the ratio of network lifetime of algorithm Filter- X  to the best existing algorithm TF increases from 1.1 to 1.7 with the increase of the dimensionality d from 2 to 5. Figure 1: The performance of different evaluation algorithms on various datasets
In this paper we first devised a novel, distributed evalua-tion algorithm for skyline query evaluation on data snap-shot. We then proposed an energy-efficient maintenance algorithm for skyline maintenance within sliding windows. The experimental results demonstrated that the proposed algorithms significantly outperform existing algorithms o n various datasets.
