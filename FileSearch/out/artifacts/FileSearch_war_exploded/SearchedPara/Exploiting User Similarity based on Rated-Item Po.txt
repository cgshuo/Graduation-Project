 An approach to user-based colla borative filtering is proposed that refines prediction of item ratings that is based on global user similarity by incorporating information derived from a more detailed user comparison made on the basis of Rated Item Pools (RIPs). The preference spectrum defined by items that a user has rated, and ranging from best-liked to most disliked items, is divided into item sets, or RIPs, which supply the basis for a fine-grained calculation of similarity between users. The RIP-based approach makes it possible for th e model to take advantage of user tastes that are matched at one end of the spectrum, e.g., two users agree on favorites, without requiring complete correspondence of item ratings between user profiles. The approach improves rating prediction, as compared to a baseline that uses the global user simila rity alone. It does not unduly inflate computational complexity or rely on external resources, common shortcomings of competing rating prediction methods. Cases in which the nearest neighbors are re latively dissimilar, known to be challenging for user-based colla borative filtering, demonstrate particularly substantia l improvement. Performance is shown to be stable across the choice of neighborhood size, number of pools and relative pool size. [ Information Storage and Retrieval ]: Information Search and Retrieval  X  Information Filtering Algorithms, Performance, Experimentation Keywords : Recommender systems, recommendation, collaborative filtering, community-based multimedia content management, user-item matrix Efficient and reliable recommender systems become increasingly important as average users are exposed to growing amounts of content of various sorts, especially multimedia. One of the most popular recommendation concepts is collaborative filtering (CF), where the rating of a content item of the observed ( active ) user is predicted based on content ratings of the same item made by other similar users [1, 3]. Compared to content-based recommendation, which makes use of tools and techniques for content interpretation and indexing [1, 6], CF has the advantage of not needing to make use of features extracted from content and is therefore content independent [1, 18]. Additionally, CF enjoys the advantage of being relatively simple to implement and has been deployed widely with considerable success (e.g., Amazon.com [11] and Google News [4]). Essentially, CF is ba sed on processing the user-item matrix, which contains the ratings assigned by each user to individual content items. Depending on whether the preference information is derived from observing the similari ty of users rating the same items or the similarity of items rated by different users, a user-based and an item-based CF appr oach can be distinguished. The user-based CF approach, which is adopted as the basis for the algorithm proposed in this paper, consists of three main steps: user similarity calculation, near est neighbor selection and rating prediction. User similarity is calculated using a similarity metric that compares the ratings of the active user and of any other user who has rated items in the collection that are also rated by the active user. Typically all co-rate d items are taken into account, that is, users are compared based on their global similarity . The K users most similar to the active user are then selected as the nearest neighbors of the active user. The final step in the procedure is the prediction of the rating for the target item using a weighted average of the ratings by the nearest neighbors. Recommender systems must predict ratings reliably in the face of the sparse data conditions characterizing real-world application domains. Confronting this challenge is key to further improving state-of-the-art CF methods. For user-based CF, sparse data has multiple adverse affects on prediction. Users truly similar to the active user may not have rated the target item for which a rating needs to be predicted, so that the recommendation for this item is derived from less similar neighbors. Also, the ratings in the co-rated item set may not be representative of the true level of similarity between two users, which leads to inappropriate weights in the recommendation model. This paper proposes a new meth od for improving rating prediction by incorporating additional, more detailed information about the similarity of the neighbors into th e calculation of ratings in user-based CF. Under our approach, globa l user similarity is enhanced by the similarity calculated over Rated Items Pools (RIPs). RIPs are sets of rated items falling within regions defined along a user X  X  spectrum of preference, which ranges from the most highly rated items, taken to be the user X  X  favorites, to the least highly rated, taken to be disfavored by the user. The RIP-based CF approach presented in this paper proves to provide consistent improveme nt of the rating prediction performance at no additional computational costs compared to the classical approach based on global user similarity, which we adopt as the baseline. Additionally, no complex modeling or learning steps are required. The improvement is particularly substantial in cases that prove especially challe nging in real-world applications, namely those cases in which the global user similarity identifies a set of distant, and thus potent ially suboptimal, neighbors of the active user from which to derive the prediction. After we discuss the related prev ious work in Section 2, we provide a more elaborate motivation and explanation of our approach in sections 3 and 4. In Section 5, we compare this approach to the baseline and validate it experimentally using the MovieLens database [7]. The di scussion in Section 6 summarizes the main contributions of the paper and presents perspectives onto future work. The method presented in this paper is most closely related to the work such as [14] which applies Eq. (1) to predict the rating value r for an active user u on a given item q .  X  *( ) rr rr Here, N uq denotes a subset of the neighbors v of the active user u who have explicitly rated the item q . Furthermore, the user similarity sim(u,v) is normalized by the sum of all similarities computed between the active user and the neighbors from N The classical user-based CF approach calculates sim(u,v), as the global similarity. To compute sim(u,v) , either the cosine similarity metric (also referred to as the vector space similarity ) or, more commonly, the Pearson correlation coefficient [1, 3], can be deployed. The Pearson correlation coefficient is defined as: Here, r ui denotes the user u  X  X  rating on item i , C intersection of items both rated by user u and v, and average rating value of the user u across all co-rated items in C The user similarity (2) is used not only to contribute sim(u,v ) to Eq. (1), but also to select the neighbors of the active user, N Nearest neighbors are selected a ccording to one of two methods. The more popular strategy is to choose the K users, denoted as N most similar to the active user [14]. Alternately, all users are chosen whose distance to the active user does not exceed a similarity threshold [16]. We designate the classical method described above as User-based Pearson Similarity or UBPS and adopt it as the baseline for the co mparative analysis presented in this paper . Many improvement attempts have been proposed recently for the recommendation model (1) to mitigate the effects of the data sparseness. One line of inquiry has focused on dimensionality reduction, applying singular vector decomposition to condense the original user-item matrix [15], or using latent semantic models to cluster the users and items around the latent classes of user-item interactions [8]. The disadvantage of this approach is that the decomposition must be performed anew each time another user or another rating is added to the matrix. Another, more recent contribution to improving accuracy of user-based CF is based on an analysis of prediction errors [5 ]. The downside of this approach is that the calculation of errors of all ratings during training is computationally quite expensive. Alternative approaches seek to move beyond the global simila rity of nearest neighbors for additional information sources. R ecursive prediction strategies, which exploit not only the neighbor s, but also the neighbors of the neighbors, have been proposed in [19]. Unfortunately, such strategies incur high computa tional costs, since similarity calculation of neighbors of all neighbors are required. This cost grows exponentially with the dept h of the recursion. Further attempts to improve the perform ance of user-based CF have focused on enriching the informati on in user-item matrix, e.g., by taking item-item similarities into account as well [10], by unifying user-based and item-based similari ty to model user-item relevance [13, 17], by predicting missing data in the user-item matrix [12], by adopting iterative link-analysis to model user-item relationship [9], and by deploying integrated similarity metrics and aggregating functions based on multi-criteria ratings [2]. These approaches also tend to require ex tensive computational effort or, as in the case of [2, 13], include the incorporation of additional knowledge about items (for example, movie genre) that must be drawn from an external knowledge source. Under our RIP-based CF approach we would like to eliminate extra calculation that inflates the computational complexity and also avoid the need for addition of potentially expensive external knowledge resources. In order to formulate such an approach, we analyze the shortcomings of globa l similarity in situations in which the user-item matrix is sparse. The ability of globally simila r neighbors to make a useful contribution to rating prediction is impacted by several factors. First, potentially helpful neighbors who have not rated the target item are a priori excluded from the set of nearest neighbors. In other words, the set of nearest neighbors may not actually be all that near. This effect is aggravated when the user-item matrix is sparsely populated. Second, the ability of nearest neighbors to contribute to effective rating prediction is related to the degree to which their global similarity adequately reflects a match in underlying user taste. With a sp arsely populated user-item matrix, the true similarity of users is apt to be inadequately reflected by the calculated global similarity. The RIP-based approach aims to improve the contribution made by globally similar neighbors by allowing particularly helpful global neighbors to make a proporti onately larger contribution to rating prediction. Such neighbors are identified based on the information derived from a fine-grained similarity comparison between users, focusing on simila r subsets of item ratings. In other words, the approach aims to incorporate helpful information from nearest neighbors that may ac tually be relatively distant from the active user with respect to global similarity. Unlocking recommendation process stands to benefit the quality of rating prediction significantly. The potential usefulness of Rate d Item Pools to enhance the contribution of global similarity is quite straightforward. In order to have a high global similarity , two users must agree on item ratings across the board. However, a plausible case is that users agree on items they dislike, but fail to have matched tastes with respect to their favorite items . Conversely, users may share favorites, but not agree on which items they dislike. According to global similarity, two users that are not in complete agreement are quite different from each other. With the conventional UBPS model, it is not possibl e to exploit the information inherent in the well-correlated dislikes of the users in order to make predictions, unless the favorites are also correlated. Under our RIP-based approach, information concerning a partial correspondence of tastes can be exploited to improve rating prediction. We create RIPs by defining re gions along a user X  X  preference spectrum, which is constituted by a list of all rated items in a user X  X  profile ranked by the rating. We assume that a particular rating encodes the reaction of the user to that item, which reflects user X  X  preference regarding the item. We form pools by gathering items along the spectrum into sets corresponding to different user reactions. We take the basic user reaction to be positive or negative. Our adoption of this assumption as a starting point reflects our underlying intuition that information from users that share favorites but not dislikes, or dislikes but not favorites, is useful to the model. The simplest pool formation approach is thus dividing the preference spectrum in half and creating pools of favored items and pools of disliked items. This binary division makes the assumption that the reaction of the user is either strongly positive or st rongly negative and that the distinction is sharp. Less restriction is imposed when we additionally incorporate a notion of magnitude into our understanding of user reactions. In addition to being eith er positive or negative, a user X  X  reaction is either passionate or indifferent. Indifferent reactions can be grouped together into a ne utral category. In this way, we arrive at a model that captures ratings assigned by users to items as from arising of one of three possible reactions: positive, ambivalent (or neutral) and ne gative. Pools are formed by dividing the user preference spectr um into three equal parts that we take to correspond to these three reactions. We return to the issue of defining the number of pools in Section 5.6 where we report on the results of expe riments that corroborate the usefulness of our choice of three pools. Additional experiments in Section 5.6 confirm that the system is robust to the relative proportion of the pool size, supporti ng our choice of equally sized pools. In this section, we describe our proposed CF algorithm based on exploiting Rated Item Pools. The RIP-based algorithm first selects the nearest neighbors based on gl obal similarity between an active user and other users. Then, the ratings of the active user are grouped into pools corresponding to a predefined general preference level (i.e., positive, neutral, negative), and the similarities are calculated between the active user and each of neighboring users by comparing the ratings from the pools of the active user and the ratings of the corresponding items of other users. Finally, global similarity and pool-based si milarities are aggregated to predict the rating value for the active user on a given item. The flow chart of the proposed RIP-based CF algorithm is shown in Figure 1. We elaborate on different steps of our approach in more detail in the following sections. The RIP-based approach first selects a set of users that are nearest neighbors to the active user. The nearest neighbors of the active user are defined to be the K users who are most similar globally to the active user with respect to a global similarity metric. We chose this strategy of neighbor selection since it has been more common than the alternative, i.e., the selection strategy that applies a similarity threshold [16]. Since it has been reported that for the user-based CF the Pearson correlation coefficient performed better than cosine similarity [5 ], we adopt Pearson correlation in this paper as the method for user similarity computation and use the global similarity metric (2). The size of the neighborhood K constitutes a parameter of the model that is explored further during experimentation. Although we chose the Pearson correlation coefficient for our implementation, the RIP-based approach is formulated sufficiently generally to be compatible with other similarity metrics as well. Figure 1. Flow chart of the RIP-based algorithm Following the rationale for pool formation from Section 3.2, we now group the items that the active user u has rated into three pools:  X  X ositive X  ( P u pos ),  X  X eutral X  ( P u neu ), and  X  X egative X  ( P pool. In order to form the pools, we first create the user X  X  preference spectrum, by ordering all items i that the active user has rated according to their ratings. Then we build the pools by partitioning this ranked list acco rding to the following formulas: neu L i S S S i P  X  &lt;  X  = (4) neg L i S S i P  X  &lt; = where S is the relative rank score and S ui denotes the rank score of the item i in the user u  X  X  ranked list L u relative to the total number 10-member ranked list (| L u | = 10) has the relative rank score S =0.8. Here, S 1 and S 2 are the relative rank scores marking the boundaries of the three pools menti oned above. As also mentioned in Section 3, the realization of the RIP-based approach evaluated in this paper uses a partitioning that separates the list into three equal parts. In other words, the boundaries ar e selected as S and S 2 = 1/3 . Our method of preference pool formation involves the imposition of two assumptions. First, if a gi ven set of items and their ratings contains items that share the same rating, these items must still be ordered to form ranked list. The ordering of items with the same rating can be set arbitrarily. In a real world scenario, a set of items and their rankings will frequently have multiple corresponding ranked lists. We realistically assume that choosing an arbitrary ranked list consistent with the user rating will produce sufficient quality of the pools for our purpose. Second, we assume that the set of items that have been rated by the user has sufficient coverage (i.e., does not contain only items that the user is passionately positive about) and that dividing the preference list into thirds will create pools with a sufficiently close correspondence to positive, neutral and negative reactions. This second assumption is also supporte d by the observations we made on the MovieLens database. There, a large majority of the users exploited the entire range of ratin gs to encode their preferences. For the active user u and a neighboring user v we compute a pool-based similarity scor e using the ratings from the items contained in a given pool of the active user. For instance, the similarity based on the pool P u pos can be measured as: where belonging to the sets intersection C uv  X  P u pos . In the same way, the similarities for two other pools can be formed as well and the pool-based user similarity can be represented by the triplet { sim pos ( u, v ), sim neu ( u, v ), sim neg ( u, v )}. Under our proposed approach, the prediction of the rating for the active user on a target item is made by combining information from two different sources. The main source takes into account item ratings of global neighbors, users that are similar to the active user in their overall rating assignment pattern, and corresponds to the baseline recommendation model (1). The RIP-based approach enhances the base line by allowing those members of the global neighborhood that are close to the active user with respect to a particular pool of item ratings to make an extra contribution to the rating predictio n. Concretely, if a particular user from the global neighborhood assigns ratings similar to those of the active user to favorite items (i.e., items in the active user X  X  positive preference pool), this particular user will make an enhanced contribution to the prediction of the rating of an item for the active user. Specifically, the contribution of this particular user is then greater than that of users who are in the global neighborhood yet fail to exhibit ra ting behavior that make them similar to the active user in terms of patterns within any particular pool. Formally, our RIP-based ratin g prediction model is defined as: Here, N K denotes the set of nearest neighbors of the active user based on global similarity, p os user v to the items in the pool P u pos of the active user. We would like to highlight three im portant features of this model. First, we point out that the contributions from different pools involve a term of the form ( r vq  X  pos deviation of a given rating from the user pool average rather than from the overall average. We use the pool average here in order to ensure that each pool term is only dependent on items that fall within the pool and not on other it ems within the profile of the neighbor. This independence allows us to remain agnostic about the contributions of out-of-pool items in a neighbors profile to the pool-based term. In order to ensure an appropriate encoding of the overall rating average that will keep the rating prediction in an appropriate value range, the model maintains its reliance on the global term corresponding to the baseline (1). Second, we introduce the weights p 0 , p 1 , p 2, and p because we view the contribution of the baseline and each individual pool as a separate inform ation source and wish to make no unjustified assumptions about its relative contribution, but rather leave this issue open to e xperimental exploration, reported in Section 5.3. What we could sa y in general, however, is that since the baseline term provides th e proper offset, its contribution to the overall recommendation needs to carry the largest weight of all terms. For this reason, our ba sic model, which we refer to as the General Model, is tuned to set the coefficient p considerably larger than the other three coefficients. Then, the pool-based terms serve to fine-t une this estimate based on fine-grained similarities between the users. In the General Model the coefficient c is set to zero. In Section 5.4, we investigate the average improvement obtainable when p 0 , p 1 ,p 2 optimized based on the rating patterns in a typical user-item matrix. We call this model the Optimized Model. Finally, we choose to propagate the global similarity into the normalization coefficients of al l pool-based terms. Through this choice we aim at a further refi nement of pool-based similarity computation between two users. If, namely, two users have equally high pool-based similarity with the active user, still the contribution to the rating recomme ndation should be higher of the user whose global rating profile is more similar to that of the active user. In other words, while we use the pool-based similarity to enhance the rating prediction based on the global similarity, we also deploy the global similarity to learn more about the quality of the contribution of the pool-based similarity. As a result, our proposed approach can be said to emphasize the contribution from the neighbors who enjoy both high global and high pool-based similarity with the active user. In the next section, we report on experiments that demonstrate the viability of RIP-based approach w ith respect to a baseline that uses only global user similarity. In addition, we also present the results of the experiments dedi cated to provide support for the major hypotheses made above. The experiments are conducted ba sed on the MovieLens dataset produced by the GroupLens Research group at the University of Minnesota (website: http://www.grouplens.org) [7]. The data contains 100,000 discrete ratings (on a 1-5 scale) from 943 users on 1682 movies, where each user ha s rated at least 20 items. This dataset is widely used in recent work regarding CF (e.g. [4, 5, 12, 13, 17, 19]). Although the dataset contains other information as well, only user ratings for items are used in our experiments. Evaluation is carried out using 5-fold cross validation. For this purpose, we separate the MovieLen s data set into five mutually exclusive folds as defined by Gr oupLens. In each data fold, 80% of the original ratings are retained in the user-item matrix and used for training, while the remaining 20% of the ratings are removed and used for testing. For each experimental condition, the experiment is run for each fold to predict the item ratings in the test set based on the item ra tings in the corresponding training set. Performance on each fold is evaluated by comparing the predictions with the ground truth available for the test set. The final result is obtained as the average across all predicted ratings in all folds. In our experiments, all test results are generated in this manner. While different criteria can be used to evaluate the accuracy of the CF approaches, such as Precision and Recall, F-measure, Mean Square Error and Mean Absolute Error (MAE) [1, 3], we select MAE as the evaluation metric to enable a comparative analysis as reported later in this section: Here, L denotes the number of ra tings in the test set, the predictions in the test set and r ui is the corresponding ground truth. As stated in Section 2, we use the conventional UBPS approach, which uses the similarity and re commendation models (1) and (2), as the baseline for the comparative analysis of our proposed RIP-based approach. Since UBPS is repo rted to perform best on the MovieLens data set if around 50 neighbors of the active user are considered [5], we select 5, 10, 20, 30 and 50 as the neighborhood sizes in our experiments. In our first experime nt, we aim to show the viability of the proposed RIP-based approach as s hown in Eq. (7). Our position is that global similarity must be maintained as the dominant predictor of item ratings and that pool-based similarity should make an enhancing contribution. For this reason, we start by coarsely setting the contribution from each preference pool as one third of the contribution from the globally similarity term. As shown in Figure 2 and Table 1, this setup already shows a consistent improvement over the MAE of the baseline UBPS approach of 0.7% to 1.0% for various neighborhood sizes. These results are statistically significant according to the Wilcoxon signed rank test, with p-value&lt; 0.001 in all cases. This MAE improvement over baseline approach is comparable to the work proposed in [19] and confirms that the pool-based similarities from the neighbors that are exploited in the RIP-based approach do indeed provide a positive contribution to the global similarity used by the baseline. We also conduct e xperiments to verify whether a major contribution for rating predicti on is indeed provided by the baseline term in (7). As shown in Figure 2, when the contribution of the global similarity term is removed, i.e., by setting p the contributions from each RIP are weighted equally, i.e., by setting p 1 = p 2 = p 3 =1/3, the performance becomes worse than in the baseline approach. Finally, we we ight the contributions of the globally similar rating te rm and pool-based terms equally, i.e., we set p 0 = p 1 = p 2 = p 3 =1/4. These settings yield performance close to that of the baseline. A comparison of the results obtained indicates that the contribution from the baseline term in (7) should be considerable and larger than the contributions from the pool terms. Figure 2. Performance comparison between UBPS approach and a) proposed general model of RIP-based approach, i.e. p =1/2, and p 1 = p 2 = p 3 =1/6; b) model with equally weighted contributions from preference pools, i.e., p p = p 2 = p 3 =1/3; c) model with equally weighted contributions from both global and pool-based terms, i.e., p 0 = p 1 = p In the next set of experiment s, we search for optimized coefficients based on the rating patterns in a typical user-item matrix. Our expectation is that a dedicated optimization step targeting these coefficients coul d provide the upper limit of the rating recommendation performance. Via optimization, general differences in pool-based simila rities over different pools characterizing the given use case (user-item matrix) can be taken into account resulting in a recommendation that is tailored to the context and therefore more sophisticated. To shed additional light on the rationale behind the expectation given above, we note that in our model, each of the pool-based terms is associated with a separate weight. This weight incorporates into the model the flexibility to capture differences in the contributions of the pools that we believe can arise due to different patterns of user rating behavior along the user preference spectrum. An example of a rating behavior pattern of this sort might be a general tendency of ra ters to use the rating scale to express more subtle different iations between their personal favorite items and rate items they dislike with consistently the lowest possible score. Different pa tterns might lead to different pools being characterized by differ ent deviations from the average pool rating. Pools with large de viations are potentially less reliable. By tuning the relative contribution of each pool we are able to investigate whether some pools optimally make a larger or smaller contribution than others. In our experiments, we tune the parameters given in (7) to reach the maximal performance under the experimental condition in which the neighborhood size is not larger than K =50. We apply linear regression analysis based on the computed contributions in all terms in (7) and on the corresponding ground truth predictions under the condition that 50 neighbors are used in all 5 data folds, obtaining p 0 opt = 0.443, p 1 opt = 0.074, p 2 opt = 0.180, p and c = -0.058. We then used these coefficients to obtain the results in all other test cases, i.e., in all data folds with varying neighborhood sizes. Finally, to ma ke the comparison of this optimized setting with the baseline more convincing, we also introduce a more sophisticated baseline by optimizing the standard baseline usin g the same optimization process. In other words, the optimal value of the coefficient p 0 and the constant c are calculated and the pool-based te rms in Eq. (7) are omitted, i.e., p =p 2 =p 3 =0. The optimal values were obtained as p and c = -0.014. Experimental results based on th e parameter values listed above are shown in Figure 3 and Table 1. The proposed optimized CF algorithm can improve the accuracy consistently by at least 1% in various neighborhood sizes, compared to the UBPS approach, and is better than the General M odel. These results are also statistically significant according to the Wilcoxon signed rank test, with p-value&lt;0.001 in all cases. The optimized UBPS just slightly improves over the standard UP BS, and this only for the neighborhood size not larger than 20. Except for the case of 5 neighbors, it performs worse than the proposed General Model, which indicates that the impr ovement caused by pool-based contributions is much more substa ntial than a mere refinement of the baseline. Figure 3 Performance comparison between UBPS, optimized UBPS, proposed general model and proposed optimized model with varying neighborhood sizes The best performance achieved when using 50 neighbors is 0.739, which is an improvement of 1.1% compared to UBPS. It is instructive to compare RIP-based approach with two state-of-the-art approaches [5, 19], both of which used the same experimental data set and test-training splits. Compared to the recursive CF approach in [19], where the best MAE performance was reported as 0.742 and achieved when using 60 neighbors, our result of 0.739 leads to a further 0.4% relative improvement. Additionally, our results are achieved with fewer neighbors. The prediction-error-based CF approach in [5] integrates information from both neighbors and similar items. This approach outperforms the RIP-based approach, achieving a MAE of 0.718. The RIP-based approach maintains its comparative advantage in terms of computational cost, however, an aspect of our proposed RIP-based approach that we now tu rn to discuss in greater detail. The RIP-based enjoys the advantage of low computational cost due to the minimal extension it makes to the basline. RIP introduces two steps into the baseline procedure, namely, ranking items for active user and separating the items into pools. Considering the limited number of items that each user rated, the additional computational cost is close to negligible. The computational cost of the RIP-base approach is approximately that of the baseline. This simplicity contrasts with the computational cost of the recursive CF approach in [19], which is almost exponential with the recursive level. For example, there is a dramatic increase of ten times the baseline cost for a recursive level of three. The prediction-error-based approach in [5] achieves its performance at rather high co mputational cost. All the ratings in the training set need to be predicted in order to generate the prediction errors, which are used for predicting ratings in the test set. It can be surmised from the description in [5] that the computational cost of calculating th e prediction errors alone is at least four times that of the baseline. Table 1 Comparison of performance of UBPS and the proposed algorithm across all folds with varying neighborhood sizes (improvement over UBPS in brackets). We anticipated that the propos ed RIP-based approach could improve the accuracy of predictions in the situations in which the available neighbors of the acti ve user have only low global similarity, i.e., are relatively distant. This challenging case was discussed in recent work [5, 19], but has not been explicitly addressed. To investigate whethe r our expectation is borne out, we carry out an additional experi ment in which we test the RIP-based approach on a subset of our test data. Specifically, we evaluate the prediction of item ratings for the cases in which the nearest neighbors are relatively far away, i.e., have a low global similarity. In the five data fold s of our experime nts, there are, respectively, 157, 154, 142, 140 and 120 cases of items to be rated (i.e., target items) for users whose most similar neighbor has a global similarity (Pearson correlation coefficient) of less than 0.3. We measure the performance on th ese test rating predictions in each data fold and then average the results across all folds, as shown in Figure 4 and Table 2. The proposed General Model achi eves improvement over UBPS between 3-4% for various neighborhood sizes, which indicates that it is more beneficial than UBPS in the challenging cases. Moreover, the proposed Optimized model achieves improvement over UPBS by more than 5% in various neighborhood sizes, as can be seen in Figure 4 and Ta ble 2. Additionally, in each neighborhood size, the proposed appr oach consistently improves the prediction accuracy. Further, the Wilcoxon signed rank significance test confirms that the performance achieved by the RIP-based approach represents a statistically significant improvement (in all cases p-valu e&lt;0.001) over the UBPS baseline. The experimental results verify that pool-based similarity can make a significant contribution to prediction performance when users fail to have sufficiently simil ar neighbors in a global sense. Figure 4 Performance comparison in the cases of neighbors with low global user similari ty over varying neighborhood sizes Table 2 Comparison of performance of UBPS and the proposed algorithm in case of low global user similarity reported for different numbers of neighbors Figure 5 shows the results of the experiment we performed to investigate the influence of the number of pools on our RIP-based approach. Based on the discussion in Section 3, we focus here on the intuitive choice for three pools (positive, neutral, negative), but also investigate two alternatives, namely the case in which we use no neutral pool, and the case in which we use a more fine-grained structure involving more than three pools. We experiment with these two cases by dividing the rated items over two and five pools, respectively. By experimenting with the use of only two pools we can test our intuition that perhaps the neutral pool is not as informative as the positive and negative pools, which express more emphatic preferences, such as  X  X ikes X  and  X  X islikes X . In addition to the diagram in Figure 5, the results of this experiment are also reported in Table 3. We can see that the model that uses no neutral term still yields an improveme nt over the UBPS approach of around 0.5% in all cases. Compared to the proposed RIP-based model that uses thre e pool-based terms, however, the model that uses two pool-based terms lead s to a small degradation in prediction performance. The performance difference is statistically significant according to the Wilcoxon signed rank test (in all cases p-value&lt;0.001). A si milar experiment for 5 pools led to similar results, as can be seen in Figure 5. Figure 5 Performance of RIP-based approach using different number of pools, i.e. 2, 3, and 5 pools We conclude the investigatio n of pool forming with an experiment in which we consider different options for division of items into three pools. We denoted these options as 2:1:1, 1:2:1, 1:1:2 and 1:1:1. As illustration, th e pool size ratio of 2:1:1 denotes that the top 50% of the ranked item list are assigned to the positive pool, the following 25% items to the neutral pool, and the last 25% to the negative pool. Th e performance for these divisions is shown in Table 4 for the case when 50 neighbors are used. The results are always better than the baseline and indicate a similar prediction performance in all cases. Table 3 Performance of the ge neral model using two pools Table 4 Performance of the general model with different divisions of pools in th e neighborhood of 50 users This paper has presented an a pproach to improve user-based collaborative filtering, called the Rated-Item-Pool-based (RIP-based) approach. The key innovation of the RIP-based approach is that it refines the contribution of the global neighborhood by weighting the impact of global neighbors with a fine-grained similarity metric based on RIPs, subsets of item ratings in the active user X  X  profile, called pools. The RIPs are formed by partitioning the user X  X  preference spectrum, i.e., the ranked list of items that is implicit in the item ratings assigned by the active user. The RIP-based approach addresses cases in which available neighbors having low global similarity with the active user. Such cases are known to be challe nging for user-based CF. Experiments carried out on the MovieLens database confirmed that the RIP-based approach indeed fulfills the expectation that it can deliver a performance improve ment over UBPS, a baseline system that uses global similarity only. The main contributions of RIP-based approach can be summarized as: a) stable improvement of 1-2% over UBPS at various b) solid improvement of 3-6% over UBPS in the challenging c) relatively low computational cost compared to recent work d) no need for external knowledge or complex learning Although our approach requires sp ecification of number of pools and the relative pool size, our e xperiments showed that this specification is not critical for the algorithm performance. Future work will involve investig ation of alternative methods for formation of the RIPs, for example, refining the method for creation of the active user X  X  ranked list from the set of rated items and implementing a more sophisticated approach to partitioning the ranked list into preference pools. The research leading to these results was carried out within the PetaMedia Network of Excellence and has received funding from the European Commission's 7th Framework Program under grant agreement n X  216444. [1] Adomavicius G. and Tuzhilin A.,  X  X oward the next [2] Adomavicius G. and Kwon Y.,  X  X ew recommendation [3] Breese J. S., Hackerman D., and Kardie C.,  X  X mpirical [4] Das A., Datar M., Garg A., and Rajaram S.,  X  X oogle news [5] Ding S., Zhao S., Yuan Q., Zhan g X., Fu R. and Bergman L., [6] Hanjalic A.,  X  X xtracting moods from pictures and sounds: [7] Herlocker, J., Konstan, J., Bo rchers, A., and Riedl, J.,  X  X n [8] Hofmann T.,  X  X atent semantic models for collaborative [9] Huang Z., Zeng D. and Chen H.,  X  X  comparison of [10] Karypis G.,  X  X valuation of item-based top-N [11] Linden G., Smith B., and York J.,  X  X mazon.com [12] Ma H., King I., and Lyu M. R.,  X  X ffective missing data [13] Moshfeghi Y., Agarwal D., Pi wowarski B., and Jose J., [14] Resnick P., Iacovou N., Suchak M., Bergstorm P., and Riedl [15] Sarwar B., Karypis G., Konstan J., and Riedl J.,  X  X pplication [16] Shardanand U. and Maes P.,  X  X ocial information filtering: [17] Wang J., Vries A. P., and Reinders M. J. T.,  X  X nified [18] Zanker M., Jannach D., Gordea S., and Jessenitschnig M., [19] Zhang J. and Pu P.,  X  X  recu rsive prediction algorithm for 
