 1. Introduction
Within urban centers around the world, traffic volumes are increasing along with populations, resulting in slow moving, con-gested traffic. In fact, Sugiyama et al. (2008) demonstrated that, without some form of control, increasing traffic volumes beyond a point results in spontaneous traffic jam formation (without the presence of bottlenecks, traffic accidents, etc.). A simple method of addressing this problem is to increase overall capacity through expansion of the existing traffic infrastructure (e.g., addition of lanes to roads). This solution, however, continually consumes space, which is an extremely limited resource within an urban environ-ment. Intelligent traffic systems research, on the other hand, aims to increase the efficiency of traffic networks, allowing vehicles to travel more quickly through the system.

One major target of intelligent traffic research is the optimization of traffic signal plans, which control the flow of vehicles at intersec-tions within the network. Improving the ability of a traffic signal to efficiently serve vehicles at an intersection reduces the delay experienced by vehicles, thus increasing average network speed.
While there exists a wide range of previous traffic signal optimiza-tion research, these works typically suffer from several shortcomings. First, many optimization approaches operate off-line, using histori-cally measured data to determine optimal signal timing within the network. This approach is problema tic, however, as historical data typically does not accurately describe the current traffic state, as overall traffic patterns do not remain static over time. It has been proposed that signal plans developed using historical data suffer from a 3% decay in performance per year ( Bell and Bretherton, 1986 ). A second shortcoming of previous intelligent signal control research is the use of centralized control ar chitectures. With large cities having thousands of intersectio ns to control, many centralized systems (e.g., Sa  X  nchez et al., 2008 ) may be unable to make real-time signal plan updates. Centralized solutions also rely on extremely large communication networks to pass information and assign signal plans to control devices. Failures within these large networks can result in a significant degradation of performance, as a large number of control devices may be unreachable if a main line of communica-tion is broken. Finally, many intelligent signal control works have used unrealistic evaluation scenarios, often investigating perfor-mance on networks of 1 X 4 intersections with simple road structures (e.g., one-way streets). While inves tigating control systems on these small and simple networks is a satisfactory starting point, realistic scenarios must be used to demonstrate that intelligent controllers have any real-world applicability.

The work presented here makes several important contributions to intelligent signal control research. First, a methodology for the creation of realistic traffic scenarios is developed. This methodology is also used to create a traffic simulation based on a 9 7 section of the downtown core of Ottawa, Canada. This simulation uses available traffic volume measurements to compute routes based on expected vehicle entry/exit rates and turni ng ratios. This work also presents a control system which possesses a num ber of key characteristics that theauthorsbelievetobecrucialifthesolutionistobecapableof deployment in the real world. First, an agent-based solution is proposed, with the agents operating in a distributed manner, with no centralized controller, which all ows the system to scale effectively to extremely large networks. A distributed approach also increases the robustness of the system, as an agent X  X  performance is only affected by neighboring agents (instead of a centralized control agent). In the event of some sort of failure (e.g., a power outage in one area of the network), the agents outside of the affected area will continue to operate as normal. Agents within the system also rely on recently observed traffic data to adap t signal plans at the intersections within the network, which ensures that the traffic signals are addressing the current traffic st ate (as opposed to a historically measured scenario). Finally, the controlling agents rely solely on local communication and observation, which once again increases the robustness and scalability of the system. As each agent only commu-nicates with its neighbors, a single break in the communication line can affect, at most, two agents. With more complex communication networks, a single break can result in several agents being disabled.
The remainder of this paper is organized as follows. Section 2 details previous intelligent traffic signal control research approaches, identifying the advantages and disadvantages of each. Section 3 provides details on the creation of the realistic traffic model used to test the performance of the proposed control system. The actual control system, as well as the algorithms used to monitor traffic state and calculate traffic signal plans, are included in Section 4 . The performance evaluation of the control system within the realistic traffic simulation is included in
Section 5 , which includes a comparison of overall system perfor-mance when using the adaptive system and a fixed control scheme. Finally, Sections 6 and 7 summarize the presented work and identify future directions of research within the area of intelligent traffic systems research. 2. Literature review
Researchers attempting to optimize traffic signal control have investigated a wide range of approaches. This section reviews a number of the broad approaches which have been use to create intelligent traffic signal controllers in previous research works; advantages and disadvantages are highlighted. 2.1. Fuzzy logic Fuzzy logic signal controllers (see Pappis and Mamdani, 1977 ;
Chiu and Chand, 1993 ; Niittymaki and Pursula, 2000 ; Wei, 2001 ) use a set of rules to determine the preferred action of a traffic signal based on a number of inputs. While research has shown these methods to be capable of effective control within small networks, the use of a static rule-base implies that further updates to the system may be required over time (similar to the changes required when using fixed signal plans). Also, as noted by
Niittymaki and Pursula (2000) , it can be difficult to generate an effective rule-base, especially for complex intersections with a high number of possible phases. 2.2. Decision support systems
Decision support systems, as developed by De Schutter et al. (2003) and Almejalli et al. (2007 , 2008 , 2009) aim to assist a human operator in selecting effective traffic control measures to address the current traffic state. While it has been demonstrated that these systems are capable of suggesting effective actions, they rely on large databases of historical traffic data and expert knowledge, which may be hard to acquire and maintain. The intelligence then, as with fuzzy logic, resides inside these data-bases which must be constantly updated with new traffic scenar-ios and control actions. 2.3. Reservation and market-based systems vehicles through intersections with a network are those of reservation-based and market-based signal controllers. Using a reservation-based approach (see Dresner and Stone, 2004 , 2005 , 2006 , 2008 ), vehicles communicate with upcoming intersections to reserve specific space X  X ime to cross the intersection. Initial experimentation with this type of system was very promising, with average vehicle delay at intersections being nearly non-existent. Upon further investigation, however, the system demon-strated some serious safety flaws, as well as a reliance on an extremely advanced and precise automated driving system. Market-based controllers ( Balan and Luke, 2006 ; Vasirani and
Ossowski, 2009 ) are another emerging research area, in which signal controllers determine signal behavior based on some form of currency held by vehicles within the network which is used by the vehicles to bid and pay for intersection access. 2.4. Swarm intelligence artificial intelligence which has been applied to many optimiza-tion problems, including traffic signal control. de Oliveira and Bazzan (2006) applied the swarm principle of task allocation (see
Theraulaz et al., 1998 , for details) to select signal plans based on a theoretical pheromone stimulus emitted by waiting vehicles.
Swarm particle optimization was used by Garc X   X  a-Nieto et al. (2011) to search for optimal signal plans within a traffic network.
As with evolutionary computing, however, this optimization approach requires a large amount of simulation to determine the performance of the proposed signal plans and may require re-optimization with changing traffic conditions. 2.5. Evolutionary computation evolutionary computing ( Eiben and Smith, 2003 ) to optimize signal plans within a network, including Montana and
Czerwinski (1996) , Vogel et al. (2000) and Sa  X  nchez et al. (2004 , 2008 , 2010) . These approaches typically aim to represent the signal plans for the entire network as a set of chromosomes (see Fig. 1 for an example in which each intersection has five phases).
An evolutionary algorithm is then applied to each individual within the population, with the individuals X  fitnesses being determined through traffic simulation. This type of solution, however, requires an extremely high amount of computing power (as many simulations must be performed). As the network size increases, the cost of simulation increases, as does the population/ generation size. With sufficiently large networks, then, real-time control may be impossible as the computation may not complete in a suitable amount of time. 2.6. Reinforcement learning reward model for various state/action pairs by allowing interaction between the controlling agents and traffic environment. While these approaches are effective when considering static traffic distribu-tions, they suffer a performance pe nalty when parameters describ-ing traffic state fluctuate over time (as they do in the real world). de
Oliveira et al. (2006) attempted to address this problem using context detection ( da Silva et al., 2006 ) to assign the current traffic state to a state which has been previously observed. Each traffic state (context), then, is assigned to a single learning system which attempts to optimize decisions for that particular state. Another problem apparent within reinfor cement learning-based controllers is the extremely high number of state/action pairs possible for a large network. Bazzan et al. (2010) decreased this number of states by assigning a single agent to each intersection and allowing agents to  X  X utor X  each other (akin to ag ent coordination) to decide on optimal plans for small areas. 2.7. Neural networks
Neural networks are another learning tool which has been used to develop traffic signal controllers. Spall and Chin (1994) and Wei and Zhang (2002) both successfully used neural net-works to train a traffic signal controller. The networks these controllers were used to control, however, used static volumes and had a very simple structure. As with reinforcement learning, neural networks suffer degraded performance when traffic volumes change, as they must relearn an effective method of control. 2.8. Self-organizing systems
Self-organizing systems, which are distributed in nature, are a particularly suitable approach to apply within traffic control. Not only do large traffic networks strain centralized systems, but they are geographically distributed as well. This can increase the frequency of faults within the system due to the long commu-nication lines that may be required to control intersection signals far away. Self-organizing systems, on the other hand, often rely on local agent interaction to communicate information and make decisions. Gershenson (2005) presented one of the initial applica-tions of self-organizing systems to traffic signal control, showing that an agent-based solution was capable of controlling traffic signals effectively. This work was extended by Cools et al. (2008) , in which the self-organizing controller was tested on a modeled 12 intersection area of the City of Brussels. L  X  ammer and Helbing (2008) presented another self-organizing control system which was shown to effectively handle several traffic scenarios within hypothetical grid-like networks. The work reported in this paper has been strongly influenced by the principles observed in self-organizing systems. 3. Traffic model
As mentioned in Section 1 , to demonstrate the effectiveness of an intelligent traffic control system that system should be tested on realistic traffic scenarios. For this reason, a realistic traffic model based on a section of the downtown area of the City of Ottawa was developed for use within the SUMO microscopic traffic simulation environment. The open source SUMO simula-tion environment was chosen for a number of reasons including portability, presence of an active development community and availability of a graphical user interface. Furthermore, SUMO ( SUMO Traffic Simulator, 2011 ) has been used by other intelligent systems researchers, such as Garc X   X  a-Nieto et al. (2011) and Passos and Rossetti (2010) . The remainder of this section details the key steps in the model creation process, which is outlined in Fig. 2 .
The area modeled consisted of a 9 7 block section of down-town Ottawa, with over 50 signalized intersections requiring control. While this is not an extremely large network, it is much larger than most of the simple networks used in previous intelligent traffic signal research. This area also contains a wide range of street types ranging from small one-way residential streets with low traffic volumes, to high volume main streets with multiple lanes (including turning lanes) and many signal phases.
After selecting an area to model, the road network for that area had to be captured and converted for use within the SUMO traffic simulator. Initially, OpenStreetMap ( OpenStreetMap, 2011 ) was used to export an area of the city which could then be imported directly into SUMO (which offers a tool for importing OpenStreetMap net-works). While this process allowed for a quick generation of a network, it also included unnecessary parts (such as roads extending far beyond the considered area) which had to be removed. Also, a number of lanes had to be manually added to the network, as the OpenStreetMap import failed to capture them accurately.
To create a traffic demand model which resembled a possible realistic scenario, vehicle count data for each intersection was obtained from the City of Ottawa. An example of the supplied data is included in Table 1 , showing the number of vehicles proceeding left (LT), right (RT) and straight (ST) for each incoming edge over a number of time intervals throughout the day.
It can be seen that the data within Table 1 has gaps from 10:00 to 11:30a.m. and 1:30 to 3:00p.m. To fill in the data gaps, a simple linear interpolation process was used which added a number of 30 min intervals allowing for a smooth transition from one volume measurement to the next. This was achieved using Eq. (1), where Last _ Volume represents the vehicle volume at the end of the last known interval and Delta _ Volume is the required linear change in volume to match the next known volume, after the addition of the specific number of 30 min intervals Volume _ Interval i  X  round  X  Last _ Volume  X  i Delta _ Volume  X  X  1  X 
The SUMO route generator used here relies on vehicle flows, which determine the number of cars to introduce/remove from a road segment over each interval, and tur ning ratios, which determine what percentage of vehicles proceed in each possible direction at the exit point of a road, to determine vehicle routes to be used within the simulation. Using the data provided for each intersection (see Table 1 for an example), it is easy to calculate the turning ratios for the exit point of any road i using Eq. (2). Overall traffic flows for a road segment are also easily calculated by subtracting the total vehicles entering the road from the total vehicles exiting the same road over a flow values are used to account for differences in the number of vehicles entering and exiting each road over a specific interval, which may exist for several reasons (e.g., vehicles entering the road from a parking garage along the road). Wit h this information calculated, the
SUMO routing program was used to generate 15 sets of vehicle routes to be used within simulation. This routing program generates sets of vehicle routes by using the specified traffic flows to determine where/ when vehicles should be inserted into the network (which begins a route) and using the turning ratios at the end of each road segment to probabilistically determine which way the vehicle should proceed. When a vehicle X  X  route enters a  X  X ink X  road, the route is terminated
Ratio i  X  Count i Total  X  2  X  4. Control system 4.1. Assumptions and limitations
A small number of requirements are assumed to be met within this system. First, it is assumed that each controlling agent has some means of communicating with neighboring intersections (by what means this is achieved is considered beyond the scope of this work). Second, it is assumed that traffic sensors which are capable of measuring the number of passing vehicles are located at the beginning and end of each lane within the network, allowing for an accurate calculation of vehicle numbers. While this is generally not the case in the real-world, sensors for this purpose do exist and could be used in a real-world application.
Further work in the area of vehicle-to-vehicle and vehicle-to-infrastructure communication could, however, present a more accurate and cost-effective method of generating these traffic measurements. These, too, are considered beyond the scope of the research reported here. 4.2. Agent information and system parameters system relies on a single agent to control each intersection within the network. It is assumed that these agents have access to several pieces of information, outlined below:
Neighbors (N): The set of all intersections connected to the current intersection by a single edge.

Groups (G): For this work, a group is defined as a set of compatible (non-opposing) traffic flows. As with turning lanes, each group here was determined from signal plans provided by the City of Ottawa. Fig. 4 shows an example intersection with four groups (and thus four signal sets) within a SUMO simulation.

Cycle Length (CL): The total time dedicated to all phases of the intersection. This information was taken from the signal plans provided, but could be intelligently optimized in the future.
Offset (OFF): The current offset time of the intersection. As with cycle length, this information was taken from the provided signal plans but could also be optimized in future work.

Traffic Observations: Measurements of traffic volume made over time by the controlling agent. Within this work, it is assumed that these measurements are made using sensor data (from sensors at the beginning and end of each edge) and local communication between neighboring intersections. Fig. 5 shows how local sensor information is passed between inter-sections to calculate the number of vehicles currently on a section of road. These types of observations, in future work, could also be generated using vehicle-to-controller com-munication.

Green Times: This information is calculated by the agent itself and determines the length of time which should be dedicated to each phase. Combined with the signal offset (described above), these times create a signal plan for the intersection.
Along with the information each agent uses to create signal plans, there are also a number of system parameters which determine the behavior of all agents within the network, explained below: 1. Update Interval (UI): Determines how often an intersection updates its own signal plan. 2. Window Length (WL): Determines how long observations are stored. After the window length has expired, an observation is permanently removed from memory. 3. Observed Data (OD): Determines what is measured when making a volume observation. This can be the number of vehicles on an edge, the number of vehicles per meter on an edge, or the number of vehicles stopped on an edge.
 635 -500 = Add 135 4. Observation Interval (OI): Specifies how often an intersection should make a volume observation. 5. Edge Balance (EB): Determines if a group X  X  volume should be calculated as an average over all edges within the group, or as the maximum of all edges within the group. This may be useful in situations where volumes of edges within a group are significantly different. As an example, a group with two edges may have traffic volume measurements of 0 and 10, resulting in an average group volume of 5. Using this measurement to calculate a signal plan may fail to serve the edge with a volume of 10 efficiently. It may be more efficient to consider only the maximum edge (with volume of 10) in this case. 6. Minimum Time (MT): The minimum amount of time to dedicate to a phase during each cycle. This value was static at 8 s (5 s green with a 3 s safety interval in which all lights are red) for the entirety of this work. 4.3. Agent update loop
Algorithm 1 presents the agent update loop, which each agent executes after every timestep (real-world second) within the simulation. The first step the agent takes is to check whether it should make a traffic observation or not (line 1). If an observation is required, the agent removes any expired observations and adds a new observation to the list for each incoming edge (lines 2 X 7).
After updating the observations, the agent will also update the signal plan if necessary (lines 9 X 11) using Algorithms 2 and 4 . Algorithm 1. Main update loop for an intersection control agent. 1 if OI steps have passed since last observation then 2 foreach Incoming edge e in IE i do 3 foreach Lane l of e do 4 Remove observation with age older than WL from observation list 5 Measure OD on l and add to observation list 6 end 7 end 8 end 9 if UI steps have passed since last intersection update then 10 Update signal plan for i using Algorithms 2 and 4 11 end 4.4. Signal plan calculation
The agent process of signal plan calculation can be divided into two steps: volume calculation and signal plan generation. The volume calculation step (see Algorithm 2 ) is responsible for calculating traffic volume measurements for each signal group, as well as the total volume measurement for the intersection.
Within Algorithm 2 , it should be noted that volume calculations are done on a lane-by-lane basis (line 10) and averaged over all lanes of an edge; this is done to avoid biases toward edges with a higher number of lanes than others.
 measurement for a single lane based on the traffic observations that are stored in the agent X  X  memory. These observations are stored in an array structure, with the initial elements in the array being the oldest observations. The calculation method in Algorithm 3 weights observations such that more recent observations (those with higher array index i , as in line 3 of the algorithm) contribute more value to the overall result than older observations. This is done to skew volume calculations to more closely match the most recent observa-tions, while still considering older observations to decrease the effect of variance on the measurements.
 Algorithm 2. Green length calculation for a single intersection. Algorithm 3. Volume calculation for a single lane.
 With a measurement of volume calculated for each group,
Algorithm 4 assigns proportions of the cycle length to each group (lines 3 and 4) based on the proportion of total volume attributed to that group (e.g., a group with 30% of the total volume at the intersection receives 30% of the entire cycle length). Algorithm 4 is also responsible for ensuring the total length of all phases sums to the cycle length (a difference can arise due to rounding) and that each phase has at least MT time within each cycle (see lines 8 X 15 and 5 X 6 respectively). Once these steps are complete, the algorithm selects an offset for the intersection (for this work, these values are taken from the City of Ottawa signal plans) and assigns starting times to each phase within the cycle (lines 17 X 19) to complete the signal plan. Algorithm 4. Signal plan calculation for a single intersection. Input :i  X  The intersection to generate a plan for,
Avg_Cars  X  a list of the volume calculations for each group from Algorithm 4 1 Total _ Len  X  0 2 foreach Group g in G i do 3 Proportion g  X  Avg _ Cars g Total _ Cars 4 Time g  X  round  X  Proportion g CL  X  5 if Time g o MT then 6 Time g  X  MT 7 Total _ Len  X  Total _ Len  X  Time g 8 while Total _ Len !  X  CL do 9 if Total _ Len o CL do 10 Chose random group g and add 1 to Time g 11 Total _ Len  X  Total _ Len  X  1 12 else 13 Chose random group g with Time g 4 MT 14 Subtract 1 from Time g 15 Total _ Len  X  Total _ Len 1 16 Cur _ Time  X  SelectOffset  X  i  X  17 foreach Group g of i do 18 Green _ Switch i , g  X  Cur _ Time 19 Cur _ Time  X  Cur _ Time  X  Time g 5. Experimental results
To test the ability of the proposed algorithms to effectively control realistic traffic, the performance of the system using the algorithms was compared to the performance of a set of fixed signal plans based on those provided by the City of Ottawa. Using the route generation program included in the SUMO software package, 15 scenarios were generated from the available data, each of which represents realistic vehicle volumes for an 11 h period (7a.m. X 6p.m.). Each of these scenarios were simulated once with automated control (using the proposed algorithms) and once with fixed signal control. Results presented in this section are averaged over these 15 simulations. 5.1. Parameter values
To determine an acceptable set of system parameters, several values for each important system parameter were tested within the simulation environment. Using these results, it was determined that the parameter values included in Table 2 should be used to test the overall performance of the p roposed control system. 5.2. Performance comparison
Fig. 6 presents the average simulation speed, aggregated over 15 min intervals throughout the 11 h simulation period. Considering this figure, it is easy to see that the adaptive control system has largely succeeded in maintaining a higher overall simulation speed throughout the day. Fig. 7 presents a quantitative analysis of the overall simulation speed, showing the percentage increase in speed for several time intervals throughout the day. Considering the entire 11 h simulation period, the use of adaptive control resulted in a 6.59% increase in overall simulation speed. It should be noted, however, that using the specified parameters, an entire hour is required before the agents within the system have fully initialized (the window length is 3600 timesteps/s). When removing the first hour of simulation from consideration, the overall improvement in simulation speed increases to 7.36% (an 11.68% increase over the initial improvement).
Another way the two approaches were compared was to investigate the percentage increase in speed over each of the 44 15 min intervals. Fig. 8 presents this comparison, which shows the adaptive signal controller resulted in a lower overall simula-tion speed in only 2 of 44 intervals. It should also be noted that one of these two intervals was the initial 15 min period, in which the agents within the system would not be initialized and, therefore, would not be able to infer an accurate traffic model. 5.3. Fixed plan failure
This section includes two examples which demonstrate situa-tions in which the fixed controller fails to control the traffic signals effectively. Fig. 9 (a) shows the average number of vehicles aggregated over 15 min intervals for a specific road segment. Between 8a.m. and 10a.m., the intersection experiences traffic volumes which are not handled effectively by the current signal plan. Due to the fixed nature of the controller, however, the system fails to adapt to these volumes and the average number of vehicles present rises dramatically to nearly 60. The adaptive controller, on the other hand, experiences a very small increase in average number of vehicles (maintaining an average number below 10), as the signals will be changed to suit the current traffic situation. Fig. 9 (b) shows the average speed for the same intersection and it can be seen that the increased number of vehicles causes a dramatic decrease in the average speed on the road segment. As with vehicles, the vehicle speed observed when using adaptive control changes only slightly from the rest of the simulation during this time interval.

In an example similar to the one above, Fig. 10 shows the average vehicle count and speed for an entire street (16 road segments in total). During the afternoon rush hour period between 4:00p.m. and 6:00p.m., the fixed controllers ope rating signals on the street fail to effectively service the traffic volumes present. This again results in a large spike in the number of vehicles present, as well as a significant decrease in the average speed on the street. The adaptive signal controller also experiences an increase in the number of vehicles during the same interval. However, the increase is much less dramatic and also returns to normal levels more quickly than the fixed controller. This is because the adaptive signal controller will continue to serve edges with higher demand more than edges with low demand, resulting in more efficient queue clearing. 6. Conclusions
This work presented an adaptive algorithm which is capable of calculating effective signal plans within a realistic traffic network.
The control system presented also operated in a distributed manner, allowing it to scale effectively to handle large problem instances. To investigate the performance of the proposed algo-rithm, a realistic traffic simulation was developed using real-world Average Speed Increase traffic measurements for an area of the City of Ottawa, Ontario.
After determining suitable algorithm parameters, it was shown that the proposed control system was capable of increasing average vehicle speed within the simulation by 6.58% when compared to control based on fixed signal plans. This improvement increased to 7.36% when the first hour, in which the agents within the system are still in an initialization stage, was not considered in the performance evaluation. The main benefit of using an adaptive approach to signal plan generation is that the plans implemented at an intersection are modified to serve the current traffic flows more effectively. It was shown (see Figs. 9 and 10 ) that the use of fixed plans can result in scenarios in which traffic flows are not controlled effectively as green time is allocated inappropriately, causing accumulation of vehicles and decreased traveling speed.
While this work has demonstrated that efficient signal plans can be generated using a simple distrib uted system with assumed offsets and cycle lengths, there are a few limitations to the current work.
First, as has been mentioned previously, the algorithm operates using the offsets and cycle lengths specified by the supplied traffic plans.
The algorithm, then, cannot adaptively generate  X  X reen waves X , which have been shown to decrease travel times in a road network. Also, due to the limitations of the real-world traffic volume information available, the model of traffic used here is composed of a number of single intersection snapshots. While efforts were made to ensure that the overall model was still relative ly accurate, a more accurate model may be generated using a complete origin X  X estination (OD) matrix. An accurate OD matrix for a subsection of the city X  X  area, however, may be difficult to generate due to privacy issues and the large number of people involved. 7. Future work
There are a number of different directions in which future intelligent traffic systems research could proceed. First, the work presented here should be evaluated further on other scenarios available (such as MATSIM  X  Toronto, 2011 ), which will demon-strate that the system is capable of operating in a wider variety of environments. Second, further work could be dedicated to opti-mizing the parameters within the system, the values of which largely determine the overall performance of the controlling agents. Also, the method used to calculate a traffic volume measurement within this paper is purely reactive. The system could be augmented such that traffic volume calculations are predictive in nature through the use of alpha X  X eta ( Wikipedia, 2011 ) or Kalman ( Okutani and Stephanedes, 1984 ) filters. Beyond the work presented here, the parallelization of traffic simulation will allow researchers to harness the computing power of multi-core processors and graphics processing units (GPUs). This will greatly increase the speed at which researchers can investigate traffic controllers and generate results. Intelligent traffic control-lers may also move away from a cycle-centric approach to signal control, and instead operate in a truly real-time fashion in which each agent chooses the optimum phase every second. Finally, instead of attempting to optimize traffic signals within a network, future work may aim to optimize the behavior of the vehicles within the network instead. Intelligent vehicles could chose routes through the network which balance demand and auto-matically avoid problem areas within the network, resulting in shorter overall trip times (even if the distance traveled is greater). Some work in this area is already being undertaken by influential vehicle manufactures, such as Audi AG ( AudiWorld, 2011 ). Acknowledgments
Thank you to the people from the Road and Traffic Maintenance branch of the City of Ottawa for dedicating their time and resources to the development of this project. Without the help and information received from them, this work would not have been possible. The authors look forward to continued interaction in the future.
 References
