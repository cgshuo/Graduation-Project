 1. Introduction The amount of information available to the public has been growing exponentially in recent decades. In the past few years, the World Wide Web has facilitated an explosion of informal information as well. Information are available everywhere, the potential for the retrieval of information is vast, and at times daunting.

Numerous studies suggest that graphical representation and display of searched results can improve information retrieval performance (Lin 1997, Bruza and Dennis 1997, Bruza and McArthur 2000, McArthur and Bruza 2000). In contrast to the conventional search methods such as keyword search and textual display of relevant documents, a graphical information display can provide a broad and concise representation of the searched results from which the searchers can quickly comprehend their relevance and importance. The graphical information display not only can relieve the cognitive overload of the searchers, a user-friendly graphical display enables those users who are lacking of precise information requirement to browse and navigate easily during the search process. Further similar findings have been found in a recent study (Lin 1997), in which a detailed survey is presented on how visualizations can enhance information retrieval by allowing searchers to browse through a graphical representation of the requested documents. It is therefore of utmost importance for an information retrieval system to equip with a good graphical user interface that organizes the information into an effective visual structure for the searchers to browse through during the information retrieval process.

A number of researchers have proposed the use of lattice for graphical organization and visualization structuring in the construction of information retrieval systems (Carpineto and Romano 1995, 1996, Cole and Eklund 1996, 1999, Missaoui, Godin and April 1993, 286 CHEUNG AND VOGEL Priss 1997, 2000a, 2000b, 2000c). Lattice is a network-like classification structure that can be generated automatically from a term-document indexing relationship. Such a network structure outperforms hierarchical classification structure since the former enables many paths to a particular node while the latter restricts each node to possess only one parent. Hence lattice navigation provides an alternate browsing-based approach which can over-come the weakness of hierarchical classification browsing. However, the lattice navigation approach has its inherent problem X  X he curse of dimension, namely, the lattice represen-tation of a document collection is too large to fit in a screen even for small databases. To visualize large structures, researchers have developed interfaces that allow multiple local and global views (Crouch 1990, Wille 1989). However, the method has the disadvantage that the searchers need to map different graphical representation. Carpineto and Romano (1996a, 1996b, 2000) extended the work to adopt a variant of the fisheye view technique (Furnas 1986) to show individual nodes of the lattice on a standalone symbolic lisp machine. Despite these many research efforts, the display and comprehension of the lattice associated with a large database remains an open problem.
 We propose in this paper a novel approach which incorporates the advantages of both the V ector Space Model and Concept Lattice to resolve the dimension problem of information retrieval using lattice. We introduce a formal model (the Term-Document Lattice Model) to represent a database as a lattice making use of the notion of formal concept. Then, we apply the idea of quotient lattice to reduce the complexity of a Term-Document Lattice. In the reduction process we use the method of Singular Value Decomposition (SVD) to define the equivalence relation required for the construction of quotient lattices.

The remaining sections are organized as follows. In Section 2 we review the underlying principle of Vector Space Model, SVD, and Concept Lattice. The mathematical model of lattice reduction will be discussed in Section 3. We use an example in Section 4 to show how Singular Value Decomposition can be applied to obtain a reduced Term-Document the application of lattice reduction to the computation of concept lattices is discussed. In directions. 2. Vector space model, SVD and concept lattice The Vector Space Model (Salton et al. 1975) is well known in information retrieval. Its main idea is to represent the database as an m  X  n term-document matrix A (Table 1) and the query an m  X  1v ector q . Then matrix analysis can be performed on A and q to explore the relationships between the query and the documents. In particular the angle between the query and a document (both are m  X  1v ectors) is computed as a measure of how close is the two objects. Another important extension is the use of Singular Value Decomposition to obtain a low-rank approximation of A before the angle computations. This method is known as Latent Semantic Indexing (LSI) (Deerwester et al. 1990) for tackling the synonymy and polysemy problems.

The elements a ij of the term-document matrix A and the elements of the query vector q may assume only one of the two values 1 and 0, with 1 (respectively 0) indicating the COMPLEXITY REDUCTION IN LATTICE-BASED IR 287 A is an incidence matrix. In other cases positive real numbers may be assigned to these elements to reflect the relative importance of a term in a document (or the query).
Singular Value Decomposition is one of the various matrix decomposition techniques arising from numerical linear algebra. SVD reduces both the column space and the row space of the term-document matrix to lower dimensional spaces to address the errors or and polysemy). The main idea of SVD is to project the very high dimensional documents the underlying structure of the document collection is revealed thus enhancing retrieval performance.

Concept Lattices stem from Formal Concept Analysis (FCA) X  X n area of applied math-ematics that brings mathematical methods into the field of data analysis and knowledge processing. Formal Concept Analysis was first introduced by Rudolf Wille in 1980 (Davey and Priestley 1990, Ganter and Wille 1996, Gr  X  atzer 1998 are our general references). FCA is based on the philosophical understanding of the world in terms of objects and attributes. mal context and formal concept are the fundamental notions of Formal Concept Analysis (Ganter and Wille 1996).
 Definition 1 .A formal context is defined as a triple ( G , M , I ) consisting of two sets, G and M , and a binary relation I  X  G  X  M . The elements of G and M are called objects and attributes respectively. I is a relation defined between G and M .T o represent an object g is in a relation I with an attribute m ,w e write gIm or ( g , m )  X  I .
 Example 1 . The information presented in Table 2 gives a (limited) formal context for a are female, juvenile, adult, and male.
 Definition 2 . Let ( G , M , I )b ea formal context. A formal concept of ( G , M , I ) can be defined as an ordered pair ( A , B ) where A  X  G , B  X  M , A = B , B = A .W e call A the e xtent and B the intent of the concept ( A , B ).
 Definition 3 .For A  X  G , and B  X  M ,w e define 288 CHEUNG AND VOGEL denotes the set of attributes common to all the objects in A . Similarly, denotes the set of objects possessing the attributes in B .
 in this way is denoted by L ( G , M , I ) and is defined as the concept lattice of the formal context ( G , M , I ).

Graphically, a concept lattice is visualized by a Hasse diagram (or line diagram) with nodes representing formal concepts and edges representing the subconcept-superconcept relations between formal concepts. Concept lattice allows the investigation and interpre-tation of relationships between concepts, objects, and attributes. Figure 1 is the concept lattice generated from the formal context in Table 2.
 COMPLEXITY REDUCTION IN LATTICE-BASED IR 289
Putting Tables 1 and 2 side-by-side we observe immediately that mathematically a term-document matrix is structurally identical to a formal context if the ones (respectively the zeros) in the former are identified with the crosses (respectively the empty boxes) of the latter. In this case the documents in the term-document matrix become objects and the terms are regarded as attributes. Furthermore, a lattice structure is induced by the term-document matrix when the latter is considered as a formal context. We call such a lattice T erm-Document Lattice (TDL) .W e can draw Hasse diagrams for Term-Document Lattices section. 3. Mathematical model of lattice reduction We first introduce in this section some mathematical concepts and its application to our problem of information retrieval from term-document matrices. Of particular emphasis are the notions of congruence and quotient of lattices that will play crucial roles in complexity reduction of our information retrieval process. More specifically, the number of nodes and edges of a lattice could be significantly reduced by introducing an equivalence relationship between certain nodes of the lattice. The resulting lattice would be much easy to display and comprehend compared with the original lattice. We then give in Section 3.1 two examples of transforming a lattice to another lattice of reduced complexity to illustrate this basic idea.
 on S if for all a , b , c ,in S 1. a  X  a (reflexive); 2. a  X  b implies b  X  a (symmetric); 3. a  X  b and b  X  c imply a  X  c (transitive).
 Definition 6 .Give na set S , and  X  is an equivalence relation on S , the set of all elements denoted [ x ]. Then [ x ] ={ s  X  S | s  X  x } .
 Definition 7 .A n equivalence relations  X  on a lattice L which is compatible with both join and meet is said to be a congruence on L . Since a lattice L is a partial order set of which a a  X  b : = inf { a , b } .

As shown in figure 2, we note that a congruence on a lattice L can be indicated on a diagram by placing a loop around the elements in each block of the corresponding partition.
We require that a lattice after reduction is again a lattice. In other words, the reduction lattice K by defining an equivalence relation, the natural map f from L to K must therefore satisfy certain properties. 290 CHEUNG AND VOGEL Definition 8 . Let L and K be lattices. A map f : L  X  K is said to be a homomorphism (or, for emphasis, lattice homomorphism )if f is join-preserving and meet-preserving , that is, for all a , b  X  L , L and K are homomorphic if there exists an homomorphism between L and K .
 Definition 9 .If L and K are lattices and f : L  X  K is a lattice homomorphism, then the associated congruence  X  on L is known as the k ernel of f and is denoted by ker f . The set of all congruences on L is denoted by Con L .

We say that an equivalence relation  X  on a lattice L is compatible with join and meet if for all a , b , c , d  X  L , imply Figure 3 is an example of homomorphism and its kernels.
 Definition 10 .G iv en an equivalence relation  X  on a lattice L ,w e define operations  X  and  X  on the set COMPLEXITY REDUCTION IN LATTICE-BASED IR 291 of blocks. Namely, for all a , b  X  L ,w e define The above operations are well defined, namely, if then for all a 1 , a 2 , b 1 , b 2  X  L . Since, for all a 1 , a 2  X  L , it follows that  X  and  X  are well defined on L / X  if and only if  X  is a congruence. When  X  is a congruence on L ,w e call L / X  ;  X  ,  X  the quotient lattice of L modulo  X  . 3.1. Illustrative example Given a small-size 4  X  4 term-document matrix A and its associated lattice L shown in figure 4.
 Example 2 .W e first note that the 4  X  4 term-document matrix A can be regarded as a formal context. Suppose that the terms a and b are considered as equivalent, we may define an ew term a and a map f such that f ( a ) = f ( b ) = a . Furthermore, we obtain a new 292 CHEUNG AND VOGEL formal context from the old one, in which the terms a and b are replaced by a (Table 3). We see that although Document 2 contains a but not b ,i t does contain the new term a because a and b are equivalent. Similarly, Document 3 contains b but not a .H ow ev er, it contains a because a and b are equivalent. Note that the number of rows are reduced from four to three. Associated with the new table is a new lattice K 1 as shown in figure 5. We see that the nodes a and b collapse into a single node a and the complexity of the lattice is reduced since the number of nodes and edges decrease. We also observe that K 1 retains the structure of a lattice. Mathematically, we say that K 1 is  X  X omomorphic X  to the original lattice L . Example 3 .I n this example we will see a more significant reduction of the complexity of the lattice L . Suppose the terms b and c are now considered as equivalent, then we assign an ew term, b and a map f for this assignment such that f ( b ) = f ( c ) = b .Table4 shows COMPLEXITY REDUCTION IN LATTICE-BASED IR 293 the new formal context. Though Document 2 does not contain b ,as b and c are equivalent, Document 2 does contain the new term b . Similarly, Document 3 contains b but not c . However, it contains b because b and c are equivalent. Again, the number of rows are reduced from four to three. Figure 6 shows the corresponding new lattice K 2 from which a significant reduction of complexity is observed.
 Definition 11 . Let C be a formal context representing a term-document matrix and L its obtained from C by taking unions of rows of C .
 294 CHEUNG AND VOGEL Proposition 1. Let  X  be a congruence on the lattice L . Then L / X  ;  X  ,  X  is a lattice and the natural quotient map f :  X  L / X , defined by f ( a ): = [ a ]  X  , is a homomorphism. Proof: (See Davey and Priestley 1990).
 Proposition 2. Let C be a formal context , and L its associated lattice. If C 1 is a collapse of C , then there is a lattice K associated with C 1 , where K is homomorphic to L . Proof: The process of collapsing C to C 1 clearly induces an equivalence relation  X  on L and is the quotient lattice of L modulo  X  .B y Proposition 1, K is homomorhpic to L . 4. Singular value decomposition and quotient lattice We e xamine in this section the use of Singular Value Decomposition to define the equiva-significant reduction of the complexity of the Term-Document Lattice that can be achieved using this construction.

Our central idea is to equate clustering (using SVD) with collapse of rows of a formal con-text, thus introducing equivalence relations between certain nodes of the Term-Document produces a congruence lattice with lower complexity and hence a reduced Term-Document Lattice. We use in the following a concrete information retrieval example, extracted from Berry and Brown, 1999, to illustrate the idea.
 Example 4 .I n Berry and Brown (1999) the use of SVD to reveal the latent relationship between documents is demonstrated. The original term-document matrix and its associated T erm-Document Lattice (figure 7) are shown as follows.
 COMPLEXITY REDUCTION IN LATTICE-BASED IR 295
After applying SVD to the 9  X  7 term-document matrix, we obtain a simplified formal context (Table 5), and the associated Term-Document Lattice ( K )a s shown in figure 8.
We see that the nodes with Document 1, 2, 3, and 4 of lattice L collapse into a single node with Document 1 . The complexity of the lattice is reduced, and we obtain a transformed are depicted as shown by placing loops around the respective blocks of elements. We see that L and K are homomorphic with arrows indicating the homomorphisms f . Hence we may write K = L / X  using the notation of quotient lattice. Note that  X  is induced by collapsing columns of the 9  X  7 term-document matrix. We proved in the previous section that collapsing rows of an arbitrary term-document matrix indeed results in an equivalence 296 CHEUNG AND VOGEL relation that induces homomorphism, thus providing a concrete basis for our proposed use of low-rank approximation for lattice reduction. 5. Application to the computation of concept lattices step of concept analysis. Development of efficient algorithms for this computation is thus vital for successful analysis, and CONCEPTS, LATTICE, and NEXTCONCEPT are some well-known examples. Recently Lindig has studied in detail the effect of context parameters on the computational efficiency of concept lattices (Lindig 2000). It is shown that although the overall lattice structure has some effect on the running time of these algorithms, the dominant factor is the lattice size | L | , i.e., the total number of concepts. The following figure 10, extracted from (Lindig 2000), illustrates this important observation. It is also found that the context size | I | (the number of crosses in a context table) is the primary COMPLEXITY REDUCTION IN LATTICE-BASED IR 297 298 CHEUNG AND VOGEL sparsely filled is the context table.

We show by using our previous Examples 2 to 4 that our proposed lattice reduction is relevant to the above consideration of lattice computation. In Table 6, we calculate the context size and the lattice size for each example and observe the noticeable reduction of the following estimate of the lattice size proposed by Sch  X  utt (1987): 6. Conclusion We have addressed in the present paper the complexity problem in lattice-based information retrieval. After the introduction of the Term-Document Lattice as the retrieval model we applied the notion of quotient lattice to reduce the complexity of a Term-Document Lattice. The construction of a quotient lattice requires the setting up of an equivalence relation. To obtain this relation we have proposed the application of Singular Value Decomposition to the original term-document matrix. We also discussed the application of lattice reduction to the computation of concept lattices. For future research, a substantial amount of work can be included to extend and make this research more comprehensive. For example, we are now in the process of developing a prototype system to implement our idea of concept lattice dimension reduction. Moreover, a usability study can be conducted to examine and retrieval performance as well.
 References COMPLEXITY REDUCTION IN LATTICE-BASED IR 299
