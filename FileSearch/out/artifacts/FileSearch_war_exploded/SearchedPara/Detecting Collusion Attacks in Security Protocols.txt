 With its rapid growth, electronic commerce (e -commerce) has played a central role in global economy. However, the vast growth potential of electronic commerce is weakened due to security concerns. For exam ple, a customer X  X  transaction record can be maliciously intercepted and revealed by computer or network hackers. external . The internal threat is clearly a danger, but most companies are more concerned about the external threat. Many companies feel reasonably safe that the the corporation's sensitive assets. Although it is usually very hard for a single principal to break through the protective barriers surrounding secure messages, several principals may put their respective secrets together to launch a collusion attack. have been commonly treated as a requisite of e-commerce systems. However, their designs create a difficult and error-prone task, and some subtle flaws have been found in a number of security protocols that were previously believed to be secure [1]. Subsequently, there have been many remarkable efforts made to the analysis of security protocols by developing methodologies, theories, logics, and other supporting tools [1, 3]. These efforts are effective in overcoming weaknesses and reducing the [1] and model checking [5] have been regarded as two of the most efficient approaches obtain unauthorised data by colluding with other principals might discover more secrets which would otherwise remain protected. For example, principals A , B and C in Figure1 them previously knew this message individually. Therefore, detecting collusion attacks is critical so that reliable analysis of security protocols can be achieved. context of collusion. A general fingerprinting solution used to detect any unauthorised copy is presented in [6]. A novel collusion-resilience mechanism using pre-warping was proposed to trace an illegal un-watermarked copy [7]. However, no work has been conducted to detect collusion attacks in security protocols. identifying frequent itemsets from transaction databases using data mining algorithms [2]. The obtained frequent itemsets can be used to search for collusion attacks according to a user X  X  request. identify them within security protocols. Frequent itemsets that may launch attacks are extracted from transaction databases. This reduces the search space. In particular, they knowledge base. The case study demonstrates that our approach can complement the traditional analysis of security protocols. concepts and notations. Section 3 presents a detection model which includes the concludes this paper. Suppose A denotes atom symbols. Let L be proposition formulae formed in the usual way from a collection of atom symbols and using logical connectives such as  X  ,  X  and  X  K message m by k . generation, sending, receiving and authentication in e-commerce systems. They are BAN logic [1] and present the fundamental operation for secure messages. (1) Generation Rule . If message m is generated by X , X must know (4) Encryption Rule . If Y knows message m and a key k , Y can encrypt this message replay. The timestamp is usually used to ensure the freshness of secure messages [3]. operation of messages. The remainder validates the belief surrounding the message [4] but are not included here due to time constraints. ... given below: principals who may jointly recover secret s by putting their individual secrets principals. where  X  i represents a subset of messages from { biology , textbook } be secure messages. Nobody can obtain a complete understanding of this order alone but  X  Jim orders one biology textbook  X  can be derived by together. Hence, we have  X  = { Tom , Bob , Alice } and k = 3. prerequisites. disclosure of secrets. This may endanger transaction security, as attacker Z is able to generate secret s without passing the usual authentication process. itemsets (2  X  k  X  n ). Three steps are used to detect collusion attacks: 1. identify frequent k -itemsets from the transaction database of principals; 2. construct knowledge based inference rules, and; 3. detect collusion attacks by matching frequent itemsets with the knowledge base. 3.1 Identifying Frequent Itemsets transaction database. Each transaction T  X  D consists of a collection of items. Let A  X  I be an itemset. We can say that a transaction T contains A in the case of A  X  T . An have: where T A represents transactions in D , which contain itemset A . than, the minimum support minsupp that is designated by a user or experts. The details can be found in the support-confidence framework [2]. In this paper, Frequent traditional data mining. 
From the observation, minsupp needs to be specified so that frequent itemsets can each message subset  X  i must belong to at least two principals. Suppose there are n ( n  X  3) principals in a transaction. Then, attack be handled in a transaction which includes only two principals. In other words, be tuned by users in terms of different security demands. The bigger its value is, the more the identified frequent itemsets will be. minsupp . Thus, frequent 1-itemsets include {  X  }, {  X  }, {  X  } and {  X  }. In the same way, we can identify frequent 2-itemsets, such as supp (  X   X   X  ) = 2/4 = 0.5  X  minsupp . 3.2 Dealing with Knowledge and Facts This section suggests how to construct a knowledge base and manipulate derived facts from transaction databases. For brevity, it assumes that communication channels and keys is not discussed below. 
A knowledge base comprises the knowledge that is specific to the domain of relations or phenomena in the domain. The inference rules of knowledge base consist of the basic manipulation of secure messages in security protocols. Facts are defined as general knowledge that is commonly accepted by people. For example,  X  Alice knowledge base. Then, where the rule in knowledge base are of the form: The assertions in rules can be terms that contain variables. know ( Y , m )) respectively. 
Each transaction database comprises a collection of secure messages from a corresponding principal. As mentioned above, we aim to identify frequent itemsets from transaction databases. The detection of collusion attacks is implemented by matching derived frequent itemsets with knowledge bases. Suppose the transaction database T contains m principals. Then, where each order }, { order , one , textbook }, { biology , textbook }}. 3.3 Detecting Collusion Attacks The established knowledge base and derived frequent itemsets are the foundation for inference mechanisms of Prolog are used to manipulate the knowledge base and attacks.  X  be principals who participate this transaction. Then, known by more than one principal.  X   X   X  is frequent 2-itemsets. Hence, we have know ( P conversion. 
The converted frequent itemsets can be collected via interaction using a user the knowledge base and derived frequent itemsets. As for if-then rules, there are two basic ways of reasoning [8]: 
Backward chaining starts with a hypothe sis and works backwards, according to the rules in the knowledge base, toward easily confirmed findings. However, the forward method in our detection model, which searches for the goal we want to verify to data. occurred in the current transactions. transaction extracted from SET protocol [9] is presented below. It is flexible for us to analyse other security protocols due to the extensibility of knowledge base. certificate request to gain valid certificates issued by CA . 
As described in [9], the transited secure messages comprise primary account number ( PAN ), registration form request ( RegFormReq ), symmetric key k 1 and public key-exchange key of CA ( Kpb ( CA )). Only CA , C and the Issuer know PAN, which is effectively obfuscated using a blinding technique. Suppose there are four principals in transaction database, such as databases. The primary work is to identify frequent itemsets from Table 1. Let m = 2. According to formula (2), minsupp = 2/4 =0.5. As a result, the frequent itemsets can be derived using Frequent Patterns (FP) algorithm [2]. 
After obtaining these frequent itemsets, it is necessary to convert them to the forms know ( P 2 , PAN ), know ( P 3 , PAN ) and know ( P 4 , PAN ). 
The knowledge base that consists of inference rules and facts can be constructed user can submit a detection request: ?-Detection ( E ( RegFormReq, k 1 )) Backward chaining search is applied here . The detection model attempts to find matched rules to the verified goal from the knowledge base. The detection system finally returns a  X  true  X  value for Detection ( E ( RegFormReq, k 1 )) since { RegFormReq , k } is a frequent itemset and satisfies the encryption rule of knowledge base. Finally, an early warning of collusion attacks is sent to the user. In the same way, the user can send another request: ?-Detection ( S ( &lt;k 1 , PAN&gt;, Kpb ( CA ))) transaction contains potential collusion attacks for both { k 1 , PAN } and { Kpb ( CA )} are readers X  imagination. Accordingly, many approaches were developed to validate them by detecting potential flaws. Regardless of the widespread analysis with formal methods, collusion attacks, a hidden and hazardous security issue, have been greatly neglected. This paper presents a novel data mining-based model to detect collusion attacks in security frequent itemsets in transaction databases. The case study demonstrates that our approaches are useful in the analysis of security protocols. This work is partially supported by ARC discovery grants (DP0559251, DP0449535, DP0559536 and DP0667060) from Australia Research Council and China NSF research grants (60496327, 60463003). 4. Qingfeng Chen, Chengqi Zhang and Shichao Zhang,  X  X NDL: A Logical 
