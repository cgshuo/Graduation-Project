 Privacy preservation has recently received considerable attention for location-based mobile services. In this paper, we present location-dependent attack resulting from continuous and dependent location updates and propose an incremental clique-based cloaking algorithm, called ICliqueCloak, to defend against location-dependent attack. The main idea is to incrementally maintain maximal cliques for location cloaking in an un-directed graph that takes into consideration the effect of continuous location updates. H.2.m [DATABASE MANAGEMENT]: Miscellaneous Algorithms, Performance, Information Privacy. Location Privacy, Location-dependent Attack, LBS With advances in wireless co mmunication and mobile positioning technologies, location-based mobile services have been gaining increasingly popular in recent years. A lot of research has been carried out on about how to enjoy location-based services while protecting location privacy of mobile users [1, 2, 3]. An important technique for location privacy prot ection is location cloaking. It blurs user locations into cloaked regions by reducing their spatial and temporal resolutions. However, most of the existing location cloaking algorithms work with snapshot locations only and do not consider the effect of conti nuous location updates, which may introduce serious privacy compromise. If an attacker (e.g., the service provider) can collect the us er X  X  historical cloaked regions as well as the user X  X  mobility pattern (e.g., speed limit), the location privacy might be disclose d. For example, as shown in Figure 1, users A, B, and C are cloaked together at time t i , and their cloaked region is R A,ti . If the attacker knows the maximum speed v A , the m aximum m ovement b oundary (MMB) of A is a cloaked with E and F, with cloaked region R A,ti+1 . We can see that there is an overlap (i.e., the shaded area) between MMB A,ti,ti+1 and R
A,ti+1 . As a consequence, the attacker can infer that A must reside spatial locations can be used as the cloaked region. Note that Condition 4) above is a necessary condition to guarantee that the cloaked region is smaller than the user-tolerable maximum area A max . Yet it is not a sufficient condition. When a k-node clique is found, we should still check if the area of the MBR is smaller than A We define maximal clique as a clique that is not contained in any other clique. The main idea of our proposed ICliqueCloak approach is as follows. We start with a graph without any edges. All nodes themselves constitute a set of 1-node cliques. Then we add the edges to the graph one by one and incrementally update the set of maximal cliques . In the following, we shall discuss how to incrementally maintain the maximal cliques and find cloaking sets based on the maximal cliques. DEFINITION 2 (t-Parameterized Graph ). Consider an undirected graph G=(V, E), where V is the set of nodes and E is the set of edges. Define G 0 =(V,  X  ). Adding each edge e vw  X  E to G 0 , G can be parameterized as where E t is the set of edges added so far, E t -E t-1 =e vw , and E =  X  . For a t-parameterized graph G t , let C t be the set of maximal cliques and C v_t be the set of maximal cliques which contain node v. Before a new edge e vw is added, the cliques in C t can be partitioned into three classes: 1) the cliques containing node v (C v_t ); 2) the cliques containing node w (C w_t ); 3) the cliques containing neither v nor w. It ha s been proved in [4] that adding the edge e vw to the graph can only alter the maximal cliques in C v_t or C w_t . Thus, for incremental updating of maximal cliques, we only need to consider the cliques in C v_t and C w_t . First, for any clique in C v_t  X  C w_t , all its nodes are connected to v and w. Therefore, it will upgrade to a new larger clique after the edge e is added. Next, we need to check whether the cliques in C v_t and C w_t are still maximal. Specifically, for any clique c i  X  C v_t clique in C t+1 for G t+1 , because c k  X  {v, w} will take place to be a new maximal clique. Similarly, for any clique c j  X  C w_t and c clique in C t+1 for G t+1 . The time complexity of this algorithm is O(nE 2 ), where n is the number of us ers/nodes, and E is the number of maximal cliques that a graph can have.
 After updating the maximal-clique se t, the cliques where the user of the new request is involved mi ght be candidate cloaking sets. They can be classified to three classes: positive candidates, negative candidates, and not candidates . For a positive candidate, all users in it can be cloaked together since they satisfy both k-anonymity and maximum area requi rements. Therefore, the MBR of all users in the positive candi date can be returned as the cloaking region. For a negative candi date, to find the cloaking set, the algorithm first sorts the users in the clique by their privacy level k. Then, it repeatedly removes the user with the highest privacy level until the number of remaining users is larger than or equal to the maximum privacy level k and the area of their MBR is smaller than the user-tolerable maximum area A max . Then this 
