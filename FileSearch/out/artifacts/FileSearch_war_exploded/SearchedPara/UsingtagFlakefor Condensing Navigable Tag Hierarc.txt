 We present the tagFlake system, which supports seman-tically informed navigation within a tag cloud. tagFlake relies on TMine for organizing tags extracted from textual content in hierarchical organizations, suitable for navigation, visualization, classification, and tracking. TMine extracts the most significant tag/terms from text documents and maps them onto a hierarchy in such a way that descendant terms are contextually dependent on their ancestors within the given corpus of documents. This provides tagFlake with a mechanism for enabling navigation within the tag space and for classification of the text documents based on the contex-tual structure captured b y the created hierarchy. tagFlake is language neutral, since it does not rely on any natural language processing technique and is unsupervised. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing; H.5 [ Information Interfaces and Presentation ]; I.7 [ Document and Text Processing ] Algorithms, Human Factors
With the quick growth of content over the web (e.g., the blogosphere), tag-based searches and tag cloud (sets of tags) based visualizations have become popular. Tags, whether provided by the user or extracted from the textual content, annotate online documents (such as blogs and news articles) with popular terms, thus providing an easy way to search and index them.

Most visualizations of tag clouds vary the sizes of the fonts to differentiate most important tags from those that are less important (Figure 1). [2] aims creating visually pleasant tag clouds, by presenting tags in the form of seemingly random collections of circles with varying sizes: the size of the cir-cle denotes its frequency. While quickly highlighting the most dominant terms in the corpus, these representations fall short in describing the context in which these terms oc-cur in the collection.
This work is partially supported by NSF Award #0735014, X  X AISON: Middleware for Accessible Informa-tion Spaces on NSDL X .
 Figure 2: Unlike traditional tag clouds, tagFlake an-alyzes the given document collection for contextual relationships between the tags and creates tag hier-archies that can be used to navigate within the tag space and classify and organize documents clusters all its descendant nodes and essentially acts as a context for the descendant nodes; similarly, descendants of a given node also act as a context for the node, differentiat-ing the ancestor from others that are similarly labeled. [8] describes a system to visualize the semantic informa-tion contained in a set of textual documents, relying on La-tent Semantic Analysis. The proposed system is purely a visualization system. [9, 10] present a supervised method to mine ontological relations on concepts extracted from text corpora, by furthering their use of Latent Semantic Analy-sis techniques. [4] proposes a Natural Language Process-ing based method applying Formal Concept Analysis (FCA) to automatically acquire taxonomies. [18] presents a com-pletely unsupervised, language neutral, method uncovering latent topics in text documents. To identify the concepts, it relies on the Markov Chain Monte Carlo process of Gibbs sampling, following the Latent Dirichelet Allocation model, while we use SVD transform.

Taxaminer [13] automatically constructs a taxonomy from a large corpus of documents, by means of a suite of clustering and NLP techniques. OntoMiner [5, 6] is an unsupervised system which leverages the HTML regularities in the Web documents to detect key-concepts and bootstrapping and populating specialized domain ontologies by organizing and mining taxonomy-directed Web sites. tagFlake analyzes tag clouds and places tags extracted from a collection of documents (e.g. blogs and news arti-cles) into a hierarchy which relates the tags in terms of the contexts in which they appear in the documents. As our running example, we use a corpus of 750 short news arti-cles about  X  X atrina X  published between August 25 2005 and March 4 2006 [1].

The reason why we chose this data set is that the event has a multitude of, now well understood, facets, including geographic, humanitarian, economic (e.g., employment and energy related), politic (local, regional, and federal), that spanned and evolved over the chosen period of time.
Unlike the prior works, tagFlake aims to visualize the tags in a latent semantic space without having to rely on high-Figure 5: The extended Boolean interpretation of the tag space: according to this interpretation, in this example, the tag  X  oil  X  is more general than the tags  X  refinery  X  X nd X  price  X  the Mississippi and Louisiana and the impact of the disaster on the oil supply are the major topics. One month later, on the other hand, the cost of contracts and FEMA  X  X  plans for reconstructing the Gulf and the impact of the damage on the job and employment numbers over the past month are the main topics of discussion. Each of the tag hierarchies presented here are extracted using only 15 articles randomly picked among those published on the stated dates.
In this section, we provide a brief overview of TMine . Given a collection of text documents, the first step of TMine involves the use of Latent Semantic Analysis [7] based process to create the corresponding tag space. Each article is represented as a term frequency vector (normalized with respect to the article X  X  length) , after stop word elimination and lemmatization pre-processing. LSA is based on the SVD matrix factorization technique [11]: the input data to the SVD module is the article-term occurrence matrix, A ( m, n ), which is decomposed in three matrices, A = U  X  V T , where The r column vectors of V form an r dimensional basis. These r dimensions are referred to as the latent semantics of the given corpus of documents.
The position of a tag in a hierarchy needs to reflect two important aspects of the underlying semantics: the degree of generalization/specialization of tag-nodes, captured by their levels in the tree, and the degree of contextual-similarity between tags. Each branch of a taxonomy contains tags which are more similar to the other tags in the same branch than to the tags in the other branches.

TMine uses both generality and contextual relationship be-tween the tags to construct a tag hierarchy. For this purpose, it applies the Extended boolean model, which associates r predicates to the r extracted concepts, A 1 ,...,A r ,andin-terprets the origin of the r -dimensional space (0 ,..., 0) as a (hypothetical) tag entry, c (0 ,..., 0) , which does not satisfy Figure 7: Interface of the classification module. All articles classified under  X  X il X  (based on this tag X  X  use context in the corresponding hierarchy) are listed. chy the set of documents that the tags (when considered in the corresponding hierarchical context) best represent. The degree of matching between a tag and a document is cap-tured by means of structur al similarity, for which tagFlake relies on the Concept Vectors in Concept Space (CP/CV) approach [12]. This method associates to each tag a unique tag-vector which captures its structural relationships with other tags.

By measuring the similarity between the tag-vector (cor-responding to the given tag) and the documents in the cor-pus, tagFlake computes the degree of match between the tag and the articles. Figure 7 shows an example.
The usage of the tag may evolve over time. For example, the term  X  X il X  may initially be used within the context of damages to the refineries during a disaster, while its uses may later switch to discussion about the impact of resulting rises in the oil price and its impact on businesses. Thus, tag hierarchies also enable tagFlake to help users track the topic development patterns in the temporally evolving documents, such as news articles. tagFlake provides a topic development tracking module , which can visualize the topical differences between two sets of documents in terms of the evolution of their tag hier-archies. Figure 8 shows the evolution tracking interface. tagFlake also provides interfaces which can track and visu-alize how the usage of a single tag evolves over time. The interface visualizes not only the changes in the popularity of a tag, but also the contexts in which the tag has been used over a given period of time.
In the demo we will use various news article and blog collections. We will demonstrate how the text documents of interest (chosen at demonstration time by user) are loaded into tagFlake , how the entries on which the user might want to concentrate her analysis are interactively picked, and how the relevant tags are extracted and organized in a navigation hierarchy by TMine . We then demonstrate the navigation, classification, and tracking features of tagFlake .
