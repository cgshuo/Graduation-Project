 In location-based social networks (LBSN), people share location-related information with each other, and also leverage collaborative knowledge learned from user-generated and location-related content. Among various LBSN services, the location recommendation service suggests unvisited sites to the users based on the information collected on LBSNs, such as checkins, social ties, user profiles and location profiles. 
The location recommendation has been an active research area. The existing me-thods focus on the  X  X eographical influence X  and the  X  X ocial influence X  on users checkin behavior [1, 2, 4]. Modeling the geographical influence, the recommender finds the probability of a user visiting locations based on the distance of the locations to the user X  X  home [2] or to the previously visited locations by that user [1]. The chal-lenge of the existing geographical influence-based methods is that they do not consid-er temporal effect on human checkin behaviors. Given a user X  X  checkin history, the methods would recommend the same set of locations regardless of noon or midnight. assumption is that people have the similar checkin patterns with their friends. Howev-er, only 10~30% of the checkins are influenced by social links [2]. 
In this paper, we approach the problem fr om an activity-based perspective. We be-likely to conduct the same activity around the similar time of the day. Such temporal location reflects the activities happening in that location, we believe a similar tempor-further a location is away from the home location of the user, the lower chance he or increases. But the degree of the decrease varies for different reaching distances. Thus, we could make better location recommendation if we divide the reaching distance of the user into home and away zones and find the spatial probability distribution func-tions for each zone separately. 
In this paper, we combine the periodicity of user X  X  behavior and the geographical influence into location recomm endations. Specifically, our contributions in this study include:  X 
We present how to build the temporal and spatial probability distribution functions (PDF) to model the temporal and spatial checkin behavior of the users. The tem-poral PDF models the periodic pattern of user checkins. It is discovered in tempor-al analysis of the checkins. The spatial PDF is discovered in the spatial analysis of of the distance of that location to user X  X  home.  X 
We propose a category recommender algorithm called Probabilistic Category Re-commender (PCR). It recommends category of locations to the users at a given time using the temporal PDF and the checkin history of those users.  X  Based on PCR, we propose a location r ecommender algorithm called Probabilistic 
Category-based Location Recommender (PCLR) which uses the PCR X  X  category model along with a spatial model. The spatial model is built upon the spatial PDF and measures the probability of checking in to a location based on the distance of that location to user X  X  home. PCLR combines the probabilities of PCR X  X  category model and the spatial model to find the probability of checking in to a location.  X 
We conduct the experiments on a real LBSN checkin dataset to evaluate the per-formance of the PCR and PCLR algorithms. We discover that the category recom-mendation (PCR) is more effective comp ared to the exact location recommenda-tion (PCLR). In addition, PCLR outperforms two existing well-known location re-commenders, PMM and USG. tion recommendation algorithms for LBSNs. Section 3 introduces the dataset used in this paper and confirms the assumptions used in the algorithms through the data anal-ysis. In Sections 4 and 5, we propose PCR and PCLR algorithms, respectively. The experimental results are presented in Section 6. Finally, we conclude the study in Section 7. The location recommendation is an active re search area. Zheng et al. [5] recommend locations to the users based on the real-world location history of the users collected in GPS trajectories. Park et al. [6] proposed a method of providing personalized location [7] and Beeharee et al. [8] used the mobile tour guide systems which collect real-time location of the users for location recommendations. Zhou et al. [4] proposed a method given location. However, none of these methods consider the fact that human checkin they do not use the temporal patterns of human checkin behavior for location recom-mendation. 
Ye et al. [1] proposed a fusion framework USG consisting of three different mod-els 1) a user-based collaborative filtering (CF) model, 2) a social influence model and 3) a geographical influence model. The user-based CF model estimates the implicit preference of a user for a location combining the behavior of similar users. The social influence model, which also is a CF model, estimates the implicit preference of a user tances from the users previously visited locations. The method builds different models for different aspects of location recommendation and provides a fusion framework for combining these models. However, applying the CF method for location recommen-dation may not be suitable since the similar users in a location recommendation ap-proach might be in different locations. Therefore, recommending one X  X  behavior to the other is not appropriate. Another trend in the recent research is making prefe-rence-aware recommendations using the location categories. Bao et al. [10] make recommendations using the checkin history of the local experts. Local experts are users with high expertise in user X  X  preferred categories and the venues in the geospa-tial range of the user. However, their method lacks the temporal feature for recom-mendation which can be modeled using a periodic movement model for the users. 
In the more recent researches the periodicity of the human behavior has gained the attention of researchers [2, 9, 11, 12, 13]. Eagle et al, [13] model the behavior of an repeating activities at certain locations with regular time intervals. X  and then mine the periodic movements of moving objects. Cho et al. [2] propose a location recommen-dation method based on the periodicity of the human movement. They propose two methods PMM (Periodic Mobility Model) and PSMM (Periodic Social Mobility Model). In PMM the user can be in home or work states and being in different states is defined using a temporal probability distribution function. The PSMM is based on belonging to the other group. will confirm two assumptions used by our location recommendation algorithms with the Gowalla data and illustrate how to build the probability distribution functions based on the data analysis. 
The dataset used in this paper is collected from Gowalla, which was one of the popular online LBSN services until it was closed in 2012 (for details of the data craw-104851 checkins. A checkin indicates a user has visited a location at certain time. In our dataset, a checkin includes user-id, spot-id, spot-latitude, spot-longitude, spot-category and timestamp. Spot-latitude and spot-longitude are the latitude and longi-tude of the checked-in location. Spot-category is the category of the checkin location, for example,  X  X offee shop X  or  X  X ffice X . Finally, the timestamp of the checkin shows the date and time the user visited the spot. 
Before introducing our algorithms, we will confirm two underlying assumptions of our algorithms on Gowalla dataset. These two assumptions are: 1) People have tem-poral patterns for their daily activities and checkins (confirmed in temporal analysis); the further locations (confirmed in spatial analysis). 3.1 Temporal Analysis We believe that people have a periodic behavior for visiting similar type of locations. For example, a person might go to coffee shops everyday at 8am but she might go to different coffee shops on different days. To test this, we first find the pairs of checkins to the same category of location from the same user, and then we plot the frequency of checkin pairs based on the time interval of those checkins. Fig. 1 shows the plot of frequency of checkin to the same category at given time differences using 1 hour time window. 
As shown in Fig. 1, using the one-hour time window the probability of checkin is the highest (about 15%) for 0 hour time difference and it declines as the absolute val-ue of the time difference increases. Adding up the frequency of checkins from -2 to 2 from the same category is about 45% for the mentioned 5-hour time window. As an example, if a user checks in to a coffee shop at 8 am, the chance that she will checkin to a coffee shop (the same coffee shop or a different one) between 7:30am to 8:30am in the coming days is 15%, and the probability that she will checkin to a coffee shop between 5:30am and 10:30am in the coming days is about 45%. 
After plotting the frequency of checkin to the same category given the time differ-ence, we can make a temporal Probability Density Function (PDF) based on the plot. This PDF helps us quantify the probability of checkin to different categories at differ-ent times of the day. To do so, we first define the function F , consisting of 24 differ-ent constant outputs and the values of the outputs based on the checkin plot. For ex-ample the F(  X  t) for Fig. 1 is defined as: define the temporal probability distribution function TP for a given set of checkins as: checkins in the subset. 3.2 Spatial Analysis We believe the probability of a user visiting a location closer to their home location is the home locations of the users are usually not given in the dataset. To find the home location, we assume that user checkins are centered at his home location. We are find-ing the home location of a user by averaging the locations visited by the user. But this estimation could be affected by some checkin locations when the user was on a trip, especially for the users with small number of checkins. To solve this problem, we first locations in that region as the candidate home location of the user. However, because checkins by the user in 100km radius of the candidate home location. 100 km is used as the human reach distance based on [1]. Finally, we average all the locations in this selected set of checkins to find the home location of the user. 
Algorithm 1 shows the steps of finding the home location of the user using the us-er X  X  checkin history. It first groups the checkins based on their regions (lines 1 to 3). In line 4 we select the region with maximum number of checkins, and find the aver-Then we find all of the checkins in the reaching distance of the candidate home loca-the user (line 11). 
After having the home location of users, we will test whether the frequency of checking in to locations decreases as the di stance to a user X  X  home location increases. To do so, we first calculate the distance between locations checked in by the users and their home location and then compute the frequency of checking in at any distance of checkin over the distance to the home location of the user. 
Fig. 2 shows that: first, the checkin frequency values for distances greater than 50km vary randomly (shown as triangular points), which means that 50km is the range of human checkin behavior for our dataset and checkins happen on distances greater than we can separate the less than 50km part into two different parts, less than 16km (shown as diamond shaped points) and greater than 16km (shown as rectangular points). We can and the outside area is the away zone. Based on these findings we should use different PDFs for each of these zones in order to have a better fitting model. frequency and distance in each of the mentioned zones. Based on Fig. 2 we define the spatial probability distribution ( SP ) for Gowalla dataset as: the home location of the user. same category around the same time of the day. Based on this, the user X  X  checkin behavior and their checkin location categories can be used to predict the category of the location the user is going to visit. Additionally, this can be used to assign catego-those locations. 
In this section, we describe how we build a temporal model based on the user be-havior and how it is used for recommending the categories of locations. The temporal model is a user-specific model. Each user has a different model that is trained based on their checkins. For a given user and a given time of the day, this model will return a list of categories and the probability values that user will visit a location belonging to each of those categories. 
To make this model, we start with the checkin history of the users. Then in order to find the similar checkins we separate the checkins into subsets based on their category and time. Doing this, we find checkin subsets where each subset contains checkins which have happened to locations of the same category and the timestamps showing the same time window. For example, all checkins to the coffee shops that happened between 4:00pm-4:59pm are put in one subset and checkins to coffee shops happened between 8:00am-8:59am are put in another subset. In order to build the temporal PDF introduced in the previous section, we need to find the average time of the checkins in each subset of checkins. Because we have one temporal PDF for each of the checkin subsets, we need a weighting value to normalize these temporal PDFs so that the whole model satisfies the second axiom of probability. 
The average time of each subset helps us find the central point of the checkins of that specific type. The average time of the subset  X   X  is calculated as  X   X   X   X  each subset is the number of checkins in that subset divided by the whole number of checkins are assigned to that subset and hence that subset is of more importance. on the temporal PDF. 
The probability of user u checking in a location of category c at time t is: This equation shows how to compute the temporal probability of a given category. The probability of checking in to a category is the summation of the weight of all subsets by introduced in Eq. 2. Finally,  X   X   X  is the average time of the checkins in subset  X   X  . 
The algorithms for building the model and finding the probability of checkins are given in Algorithm 2, 3 and 4. The buildCategoryModel algorithm (Algorithm 2) is responsible for making the temporal probability model and it is the starting point of the PCR method. As stated earlier, the first step in building the PCR model is to group the checkins into subsets of checkins with the same category and the same time win-category and the time. The next step is to find the weight of the subsets and average time of the checkins in each subset. The second loop (lines 6 to 9) is responsible for this task. 
In order to find the probability of each category at given times, we need to calcu-late the temporal probability introduced in Eq. 4. The Algorithm 3 calculateCate-goryProbability finds the probability of checkins to a specific category at a given time for an individual user. The algorithm needs to first find the subsets belonging to the given category for the user. The loop starting on line 2 loops over all subsets, and puted using the Eq. 4. 
Now we have the methods for building the model and calculating the probability of each category we can make the recommender algorithm (Algorithm 4). To make the category recommendation, we loop over all categories and calculate the probability of checkin to that category at the given time (lines 1 to 3). Then we sort the categories based on the probability (line 4) and return the top-k categories to the users (line 5). around 8:15, 2 of them to coffee shops around 17:20 and the remaining three to fast food restaurants around 17:20. This user requests for recommendation at 18:01 on Sept 21st 2012. To recommend a category based on his checkin history, the first step history into three different subsets (s1: X  X offee shop, around 8:15 X ,s2:Fast food around 12:30. and s3:Coffee shop, around 17:20). Then we find the weight and aver-17:20. Now we have the PCR temporal model. The next step is finding the probability probability of checkin to a coffee shop and a fast food can be calculated as follows: In this section, we propose a new location recommendation algorithm called Probabil-istic Category-based Location Recommender (PCLR). PCLR extends from PCR and it combines the geographical influence and the recurring pattern of the user activities order include the effect of time, weight those locations using the probability values of the category of those locations which is done using the PCR algorithm. 
The spatial component of the PCLR algorithm which is responsible for the geo-graphical influence is based on the probability distribution suggested in Eq. 3; it also uses the PCR algorithm to weight the recommended locations found using their geo-location ( l ) at the given time ( t ) is defined as: the spatial probability of visiting location l given the home location of the user (Eq. 3) time t (Eq. 4). The temporal probability of checkin to a coffee shop as we computed in the previous section is 0.0425. Then the probability of the sample user checking into that specific coffee shop is: 0.0425 X 0.00102 X  X 0.024 X  X  X  X  X 
The PCLR algorithms are shown in Algorithms 5, 6 and 7. The buildPCLRModel algorithm (Algorithm 5) is responsible for making the PCLR model. It first makes the PCR model in line 1, and then finds the home location of the user using Algorithm 1 (line 2). 
Algorithm 6 calculateLocationProbability computes the probability of a first line of this algorithm finds the spatial probability of location using the Eq. 3. The second line calls the calculateCategoryProbability to find the probability the probability of checkin to the location by multiplying these two probabilities as is sug-gested earlier in Eq. 5. 
The PCLR location recommender (Algorithm 7). first finds the probability of the user checking in to candidate locations (lines 1 to 3) and recommends the top-k loca-tions to the user (lines 4 and 5). We implement the algorithms in Java and use a Mac with 8GB of ram and a 2.3GHz, Intel Core i5 CPU for the experiments. We divide the Gowalla data described in Sec-checkins of every user to the testing dataset and leave the rest in the training dataset. contains 5462 checkins. We randomly generated 5 groups of different training and testing datasets and report the average performance from five runs. 
To evaluate the performance of the algorithm, we use Precision and Recall. Preci-number of relevant instances. They are defined as: We compare the performance of our proposed algorithms with two existing methods, Periodic Mobility Model (PMM ) proposed by Cho et al. [2] and the USG model pro-posed by Ye et al [1]. However, because these two methods do not provide a category recommender, we modify them in order to have a fair comparison with the PCR algo-rithm. We change the two methods to return the categories of the top locations instead of the exact location itself. We call the new PMM and USG methods PMM+c and USG+c, respectively. Fig. 3 shows the precision and recall values of different recom-mender algorithms. 
From Fig. 3, we can tell that both PCR and PCLR perform better than competing methods. Considering the exact location reco mmender algorithms, we find out that PCLR outperforms both PMM and USG regardless precision and recall (Fig.3. (a) and improve the location recommendation. We also discover that PMM outperforms USG. This could be the result of PMM benefited from a periodic model of human movements which USG did not. 
As for the category recommender algorithms, PCR performs better than PMM+c (d)). The reason is that PCR is specifically built for category recommendation. It uses the temporal PDFs derived from the dataset for the categories. We also observe that PMM+c performs better than USG+c. Again we think this is because PMM+c uses a periodic model. likely to visit locations near their home. Based on these findings, two recommenders, a category recommender (PCR) and a location recommender (PCLR), are proposed. provides recommended locations to the users at a given time of the day. Experimental results show that the recommending location category to the user is more effective than the exact location. Our proposed algorithms perform much better than the exist-ing well-known methods. 
In the future, we will build more complicated models for both spatial and temporal components. We will evaluate our algorithms on larger datasets and compare it with other existing models as well. To add on, we are also planning to study the relation-ship of the social ties and the user checkin behaviors in order to improve our current models. Acknowledgement. The research is supported by Canada NSERC Discovery Grant. 
