 Metaphor is not merely a rhetorical device, characteristic of language alone, but rather a fundamental feature of the human conceptual system. A metaphor is understood by finding an analogy mapping between two domai ns. This paper argues that analogy mappings facilitate conceptual modeling by allowing the designer to reinterpret fragments of familiar conceptual models in other contexts. The contributions of the paper are expressed within the tradition of the Entity-Relation model. H.2.1 [ Database Management ]: Logical Design  X  Data models, Schema and subschema .
 Design, Standardi zation, Languages. Metaphor, analogy, entity-relationship model Metaphor is not merely a rhetorical device, characteristic of language alone. Lakoff and Johnson [11] argue that  X  X he human conceptual system is fundamentally metaphorical in nature. The essence of metaphor is understa nding and experiencing one kind of thing in terms of another. X  Holyoak and Thagard [10] (p. 220) argue that  X  X etaphor uses th e same mental processes as analogical thinking ... a metaphor is understood by finding an analogy mapping between the target domain (the topic of the metaphor) and the source domain. The degree to which an analogy is viewed as metaphorical will tend to increase the more remote the target and source domains are from each other. X  conceptual modeling by allowing the designer to reinterpret fragments of familiar conceptual models in other contexts. Specifically, we propose a discipline for database conceptual schema design, a nd Semantic Web ontologies as well, that we call conceptual modeling by analogy and metaphor. expert conceptual designers woul d build a standard repository of source conceptual models that c over commonly found conceptual design patterns and that are expr essed in familiar terms. The source conceptual models will natu rally contain fully formalized integrity constraints, as defined by the conceptual design experts. Second, na X ve designers would then create new target conceptual models in other domains by de fining analogy mappings with the source conceptual models in the repository. The target models will then borrow the structure and the integrity constraints from the source models by analogy  X  essentially a combination of a straightforward renaming proce ss with consistency checking. in the context of the familiar Entity-Relationship (ER) model [4]. mappings. We adopt the weak entity construct as a running example since it is well-known, it has a concise description, and yet it looks sophisticated to most na X ve designers. analogy with applications to AI systems. Metaphors have been used to improve human-computer interface design [1,2,3], in describes a formalization of user interface design based on semiotic morphisms. The an alogy mappings we describe throughout the paper are, in some sense, morphisms that preserve the structure and the integrity constraints of the source schemas. Holyoak and Thagard [6] introduce analogies as mappings between target domain and source domain. They argue that  X  X he mapping can be used to enrich understanding of the target by generating new inferences, and it can lead to formation of a schema based on the relational stru cture common to the target and the source. ... In addition, analogy goes hand in hand with the formation of schemas  X  new categories that embrace both the source and the target, thus changing our understanding of both. X  Along these lines, but with a di fferent purpose, we introduce analogy mappings as a way to generate new entity-relationship schemas from previously defined ones, considered to be design archetypes. an entity, relationship or attribute name and an alphabet is a finite set of concept names. Two concept names are compatible iff they are both entity names, or attribute names, or relationship names of alphabet of U , denoted A ( U ), is the set of concept names of U . into T is a one-to-one function  X  : S  X  T such that, for any s  X  S , if  X  are finite, we may conveniently indicate that  X  (s)=t by a triple of the form  X  X  isLike s X .
 we assume that  X  is surjective, then we might drop the interpreted as an entity, relationship or attribute name depending respectively. analogy mapping  X  : A ( S )  X  T , we say that an entity-relationship schema T is created by analogy with S using T and  X  1) A ( T )= T , i.e., the alphabet of T is T . 2) (structural analogy) 3) (integrity constraint analogy) For each integrity constraint I schemes of T and  X  . We stress that T is created from S by using the concepts names in T and by borrowing the structure and the constraints from S via the analogy mapping  X  . Therefore, should not be viewed as a stru cture preserving morphism (Goguen 1999) between S and T , but rather as a morphism between the alphabets A ( S ) and T that helps construct the target entity-relationship schema T from the source schema S . defined as follows. Let E and W be two entity schemes, and R be with W on the n side, and total on W . Furthermore, assume that E has a key K and that W has a discriminating attribute A such that:  X  (Discriminating Attribute Propert y) Given any consistent state to an archetypal schema, E MPLOYEE , defined as follows. E
MPLOYEE models employees and their dependents, with the help of two entity schemes, Emp and Dep , and a binary relationship isDepOf . Assume that isDepOf relates a dependent to the employee he or she is a dependent of. Also, assume that Emp key, EmpNo , and that Dep has an attribute DepNo that satisfies the following property:  X  (Discriminating Attribute Property for E MPLOYEE discriminating attribute DepNo and relationship isDepOf that the Discriminating Attribute Property for E Discriminating Attribute Property, but it is much simpler to understand. schema B OOKS (see Fig. 1a  X  top part) by analogy with E  X  the alphabet B = { Book , Edition , isEdOf , ISBN , EdNo  X  the analogy mapping  X  defined as: those of E MPLOYEE :  X  Book is an entity scheme with key ISBN  X  Edition is an entity schema with an attribute  X  isEdOf is an n-1 binary relationship, associating B
OOKS needs to be explicitly defined, being a consequence of defining that B OOKS is created by analogy with E MPLOYEE B and  X  . Furthermore, we claim that the conceptual burden of understanding what the Discrimina ting Attribute Property means in B OOKS is alleviated since it follows by analogy with the Discriminating Attribute Property for E MPLOYEE . entities. We postulate that, in the E MPLOYEE schema, deleting an employee propagates to the deleti on of his or her dependents and that the insertion of a new dependent is blocked if the corresponding properly defined (for the new depe ndent). Therefore, any schema declared to be like E MPLOYEE will inherit such behavior. Recall from Section 1 that Holyoak and Thagard [6] (p. 220) argue that  X  X etaphor uses th e same mental processes as analogical thinking... a metaphor is understood by finding a mapping between the target domain (the topic of the metaphor) and the source domain. The degree to which an analogy is viewed as metaphorical will tend to increas e the more remote the target and source domains are from each other. X  mapping. However, we reinterp ret how target schemas are induced from source schemas. and  X  : A ( S )  X  T be a metaphor mapping. Assume that A ( S )  X  T analogy with S using U and  X  , where 1) U = T  X  { s  X  A ( S ) /  X  (s) is undefined} 2)  X  : A ( S )  X  U is the analogy mapping defined as schema T by metaphorical analogy with S using T and process that:  X  borrows part of the original alphabet of S  X  those concept  X  expands the metaphor mapping  X  to a total analogy mapping  X  copies the structure and the integrity constraints from S using  X  an alphabet C with just two entity names, Book and  X  an analogy mapping  X  defined as follows: E MPLOYEE . Then, we may create the entity-relationship schema B
OOKS 2 by metaphorical analogy with E MPLOYEE using C and as follows. First, we add to C the attribute DepNo relationship name isDepOf , for which  X  is undefined, and expand  X  to these new concept names: the identity for the concept names DepNo and isDepOf C. Then, we define that B OOKS 2 is the entity-relationship schema created by analogy with E MPLOYEE using (the expanded alphabet) C and (the expanded analogy mapping)  X  sense, we completed the alphabet C until it has concepts like those in the alphabet of E MPLOYEE , and extended the analogy mapping  X  until it is defined for all concepts of E MPLOYEE . alphabet D containing just Book and ISBN , and the analogy mapping  X  defined as follows: analogy with E MPLOYEE using D and  X  , which implies that B
OOKS 3 has:  X  a new entity scheme Dep , which implicitly is like  X  a new attribute DepNo of Dep , which implicitly is like the  X  a new relationship scheme isDepOf between Book  X  integrity constraints analogous to those of E MPLOYEE specified analogy mapping, and introduce the construction of a new target entity-relationship sche ma by metaphor as a process that borrows the structure and the integrity constraints from the source schema, as well as part of the original alphabet  X  a feature not present in pure analogy. We may promote a database con ceptual design strategy that favors the definition of concep tual schemas by gradually incorporating predefined conceptual schema fragments through the use of analogy or metaphor mappings. alphabet and  X  : A ( S )  X  T be an analogy mapping. Assume that any concept name s  X  A ( B )  X  T is consistently understood in both name in T , and similarly for attri bute names and relationship names. Then, we say that an entity-relationship schema T expands B by (metaphorical) analogy with S using T and is the union of B and the entity-relationship schema created by (metaphorical) analogy with S using T and  X  . We call B , S and T the base , the source and the target entity-relationship schemes of the analogy mapping  X  . new entity-relationship schemas by repeatedly using analogy mappings. For example, consider again an entity-relationship schema B OOKS created by analogy with E MPLOYEE using the alphabet Book , Edition , isEdOf , ISBN , EdNo and the analogy mapping  X  defined as follows: that captures that book volumes are weak entities with respect to book editions (see Fig. 1b  X  bottom part). B OOKS expanding B OOKS again by analogy with E MPLOYEE , but using the alphabet E consisting of Edition , Volume , isVolOf and VolNo, and the analogy mapping  X  defined as follows: B
OOKS . However, this overlappi ng does not create problems because Edition and EdNo are interpreted as an entity name and an attribute name, respectively, in both alphabets (although not explicitly indicated in the above example). The examples we described in Section 4 transfer the integrity constraints of E MPLOYEE to B OOKS and B OOKS 4 simply by renaming the concept names used in such constraints, as dictated by the analogy mappings. We may fruitfully extend this simple renaming principle to higher orde r constraints thereby covering more interesting examples. E
MPLOYEE 2 , with three entity schemes, Emp , FullTime PartTime . Assume that FullTime and PartTime are mutually formalized as follows: E2. FullTime  X  PartTime =  X  specialization hierarchies where an entity set is specialized into two mutually exclusive sets. schema E MPLOYEE 3 , with three entity schemes, Emp , FullTime and PartTime , and a set E3. E = { FullTime , PartTime } and define second order constraints as follows: E5. (  X  R  X  E )(  X  S  X  E )( R  X  S  X  R  X  S =  X  ) indeed be remapped to other cont exts, if we generalize alphabet and analogy mappings to consider sets of concepts, such as E . For example, we may define an alphabet F , with five entity names, Cat , Eletronics , Computers , Cameras , Phones , and a set E6. C = { Eletronics , Computers , Cameras , Phones } and define an analogy mapping  X  as follows: sections, we may create an entity-relationship schema C
ATALOGUE by analogy with E MPLOYEE 3 using F and C
ATALOGUE will have the following two constraints, generated from E4 and E5 by replacing Emp by Cat and E by C : E8. (  X  R  X  C )(  X  S  X  C )( R  X  S  X  R  X  S =  X  ) indicating that Cat is specialized into mutually exclusive classes Eletronics , Computers , Cameras , and Phones , in view of the definition of C in E6. We argued in favor of a database conceptual schema discipline that explores analogy mappings to reuse the structure and integrity constraints of conceptual models, stored in a repository. As a proof-of-concept, we implem ented a knowledge base in SWI Prolog that captures the design stra tegy described in this paper. This work is partially supported by CNPq under grants 550250/2005-0, 551241/2005-5 and 311794/2006-8. [1] Barbosa, S.D.J.; Souza, C. S. (2001)  X  X xtending software [2] Blackwell, A.F. (2006)  X  X he reification of metaphor as a [3] Catarci, T.; Costabile, M. F.; Matera, M. (1996) "Which [4] Chen, P. P-S. (1976)  X  X he entity-relationship model X  X oward [5] Goguen, J. (1999)  X  X n introduc tion to algebraic semiotics, [6] Holyoak, K.J.; Thagard, P. (1995) Mental Leaps  X  Analogy in [7] Lakoff, G.; Johnson, M. (1980) Metaphors We Live By . The [8] Lippert, M.; Schmolitzky, A.; Z X llighoven, H. (2003) [9] Winston, P.H. (1980)  X  X ear ning and reasoning by analogy X . 
