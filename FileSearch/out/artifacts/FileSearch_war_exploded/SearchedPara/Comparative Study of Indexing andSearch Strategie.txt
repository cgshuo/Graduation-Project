 LJILJANA DOLAMIC and JACQUES SAVOY University of Neuchatel 1. INTRODUCTION Over the last few years there has been increasing interest in Asian languages, especially those spoken in the Far East (e.g., the Chinese, Japanese, and Korean languages) and on the Indian subcontinent. Given the increasing vol-ume of sites, and the number of Internet pages generally available in these languages, not to mention the online users working with them, we clearly need a better understanding of the automated procedures applied when processing them.

As in Europe, the Indian subcontinent can be characterized by the use of many languages. With 23 official languages 1 being spoken in the European Union the situation there would seem to be more complex than in the Republic of India, which has only two official languages (Hindi and English). This gen-eral view however hides the fact that approximately 29 languages are spoken by more than one million native speakers there, most of which have official status in the various Indian states. 2 Thus from a linguistic perspective, the situation in India is slightly more complex than in Europe, as evidenced by the four main families to which the various languages belong: the Indo-European (more precisely the Indo-Aryan branch [Masica 1991] including Bengali, Hindi, Marathi, and Pandjabi among others) located mainly in the northern part, the Dravidian family (e.g., Kannada, Malayalam, Tamil, and Telugu) in the south-ern part, the Sino-Tibetan (e.g., Bodo and Manipur) in the northeastern part, and the Austra-Asiatic group (Santali) in the eastern part of this subcontinent. While Europe is also made up of various language families (e.g., Finnish and Hungarian belong to the Finno-Ugric branch), India X  X  proportion of non-Indo-European languages is much greater than that of Europe. Moreover, compared to the three alphabets used in Europe (Latin, Greek, and Cyrillic), the various Indian languages use at least seven different writing systems.
 In this article we focus on three of the most popular Indian languages: Hindi (the native language of  X  180 million speakers), Marathi (  X  68 million) and Bengali (  X  190 million), 3 as well as the test collections made available through the first Forum for Information Retrieval Evaluation (FIRE 4 ) cam-paign. This article also describes the main morphological variations and con-structions found in these languages, particularly those found most useful from an IR perspective. We thus propose and evaluate various stopword lists and stemmers for these three Indian languages, and then compare them by apply-ing various indexing and search strategies.

The rest of this article is organized as follows. Section 2 presents some related work on stemming. Section 3 describes the main morphological as-pects of the three selected languages. Section 4 reveals various stemming ap-proaches while Section 5 depicts the main characteristics of our test-collections. Section 6 briefly describes the different IR models applied during our experi-ments. Section 7 evaluates and analyzes the performance of the various in-dexing and search strategies, and to conclude the last section outlines our key findings. 2. RELATED WORK In the IR domain it is usually assumed that stemming serves as an effective means of enhancing retrieval efficiency through conflating several different word variants into a common form or stem [Manning et al. 2008], and that this efficiency can be achieved through applying morphological rules specific to each language involved. Typical examples for the English language are those described in Lovins [1968] and Porter [1980]. This suffix removal process can also be controlled through the adjunct of quantitative restrictions (e.g.,  X  X ng X  is removed if the resulting stem has more than three letters, as in  X  X opping X  but not in  X  X ing X ) or qualitative restrictions (e.g.,  X -ize X  is removed if the result-ing stem does not end with  X  X  X  as in  X  X eize X ). Moreover to improve conflation accuracy, certain ad hoc spelling correction rules can also be employed (e.g.,  X  X opping X  gives  X  X op X  and not  X  X opp X ), through applying irregular grammar rules usually designed to facilitate pronunciation.

Simple algorithmic stemming approaches ignore word meanings and tend to make errors, often caused by over-stemming (e.g.,  X  X eneral X  becomes  X  X ener X , and  X  X rganization X  is reduced to  X  X rgan X ) or to under-stemming (e.g., with Porter X  X  stemmer, the words  X  X reate X  and  X  X reation X  do not conflate to the same root. This is also the case with the words  X  X uropean X  and  X  X urope X ). For this reason the use of an online dictionary means obtaining better conflation has been suggested as in Krovetz [1993].

Compared to other languages (such as French) with their more complex mor-phologies [Sproat 1992], English might be considered quite simple and thus using a dictionary to correct stemming procedures would be more helpful for those other languages [Savoy 1993]. For those languages whose morphologies are even more complex, deeper analyses would be required (e.g., for Finnish [Alkula 2001], [Korenius et al. 2004]) and the lexical stemmers [Tomlinson 2004] are not always freely available (e.g., Xelda system at Xerox), thus mean-ing that their design and elaboration is more complex and labor intensive. Moreover, their use involves a large lexicon along with a complete grammar, and thus their application is problematic and requires more processing time, especially with the very large and dynamic document collections (e.g., within the context of a commercial search engine on the Web). Additionally, lexical stemmers must be capable of handling unknown words such as geographical, product, and proper names, as well as acronyms (out-of-vocabulary problem). Lexical stemmers could not therefore be considered as error-free approaches. Moreover, for the English language at least, applying a morphological analysis to obtain the correct lemma (dictionary entry) does not provide better results than a simple algorithmic stemmer [Fautsch and Savoy 2009]. Finally, based on language usage and real corpora, it must be recognized that morphological variations observed are less extreme than those imaginable when the gram-mar is inspected. For example, in theory, Finnish nouns have approximately 2,000 different forms, yet in actual collections most of these forms occur very rarely [Kettunen and Airo 2006]. As a matter of fact, in Finnish 84% to 88% of inflected noun occurrences are generated by only six of a possible 14 grammat-ical cases.

While as a rule stemming schemes are designed to work with general texts, some are specifically designed for a given domain (e.g., medicine) or document collection (such as that developed by Xu and Croft [1998] for use in a corpus-based approach). This, in fact, more closely reflects general language usage (including word frequencies and other co-occurrence statistics), rather than a set of morphological rules in which the frequency of each rule (and thus its underlying importance) is not precisely known.

Studies of the English language have been more inventive, and various algo-rithmic stemmers have indeed been suggested for the most popular European languages, especially in conjunction with the CLEF 5 evaluation campaigns [Peters et al. 2008]. The Far East languages such as Chinese, Japanese, or Korean were previously evaluated within NTCIR 6 evaluation campaigns.
Although stemming procedures have been proposed for Hindi [Ramanathan and Rao 2003] and Bengali [Sakar and Bandyopadhyay 2008] as well as mor-phological analyzers 7 for Hindi and Marathi, there have been no reports of comparative evaluations of these propositions, based on test collections. Dur-ing the FIRE 2008 evaluation campaign however, Gungaly and Mitra [2008] did propose a rule-based stemmer for the Bengali language (denoted  X  X M X  in our experiments). In this same vein, we should mention the statistical stem-mer suggested by Majumder et al. [2007]. Its cluster-based suffix stripping algorithm called  X  X ASS X  8 does rely on a training set (list of words extracted from a document collection), allowing the system to ascertain which pertinent suffixes should be removed. The effectiveness of this statistical stemming could also be studied for other languages, as has been done previously for the Bengali and other European languages.
To date, most evaluation studies have involved IR stemmer performance evaluations for the English language, while those for other languages have been much less frequent. In their retrieval performance evaluations apply-ing two statistical stemmers to five languages, Di Nunzio et al. [2004] demon-strated that across these languages wide variations could be found. Compared to statistical stemmers, Porter X  X  stemmers seem to work slightly better, while for the German language Braschler and Ripplinger [2004] showed that for short queries stemming may enhance mean average precision by 23%, compared to 11% for longer queries. Tomlinson [2004] evaluated the differences between Porter X  X  stemmer and the lexical stemmer, finding that the lexical stemmer tended to produce statistically better results for Finnish and German while for Dutch, Russian, Spanish, French, and English, performance differences were small and insignificant. For Swedish, when compared to a lexical stemming approach, the algorithmic stemmer resulted in statistically superior mean av-erage precision (MAP). Finally, based on a study of eight European languages, Hollink et al. [2004] confirmed some of the above findings. Depending on the language, search systems obtained the best retrieval performances when ei-ther ignoring the stemming stage (English, French, and Italian), applying a stemmer (Finnish) or applying a decompounding procedure and then a stem-mer (Dutch, Swedish). For the German language, the best performing scheme was based on a morphological analysis. 3. MORPHOLOGY Given that Sanskrit is their root form, Hindi, Marathi, and Bengali are closely related, and as such their sentence structure follows the same Subject -Object -Verb (or SOV) pattern. Although from an IR perspective this aspect is not of primary importance, the IR models used in this article are based on the bag-of-words assumption wherein the absolute and relative positions of words within a sentence are ignored.

Indeed a closer inspection of the lexicons in these languages reveals that words with similar meanings may have similar spellings. An examples include the word  X  X ing X , which can be spelled as  X   X   X  X   X   X  in Hindi and Marathi as  X   X   X  in Bengali, while for other terms, spellings may be similar for only two of these languages, and the spelling of other words is completely different in all three  X   X  Bengali). As with other languages, lexicons in these languages are never free from the influence of others and vise versa. English borrows some words from the Indian languages, such as  X  X ungle X  (from a Sanskrit stem),  X  X unch X  (drink, from Hindi or Marathi),  X  X ute X  (vegetable fiber, from Bengali) or  X  X urry X  (from the Tamil). Similarly and to a larger extent, many word forms in Indian languages are borrowed from English, especially given its dominant presence in commerce (e.g., taxi, company, bank, budget, ice cream, and gasoline) and in technology (e.g., computer and Internet).

In their written forms, Hindi and Marathi employ the Devanagari script while the Bengali alphabet belongs to the Brahma family. The two scripts are however clearly related and share certain characteristics. All vowels except Bengali). Consonants appearing together in special clusters form conjunct
In the rest of this section we describe the key morphological characteristics of these three languages and analyze their impact on IR design and performance. 3.1 Key Features of Hindi Morphology Hindi is spoken by approximately 500 million people (non-native included) and ranks second among the world X  X  most spoken languages (Chinese is the first while English and Hindi have the same ranking). The term  X  X indi language X  however does not refer to a well-defined and clearly standardized language but rather to a relatively large group of dialects wherein interlingual understand-ing is always possible (just as English is in the UK and the U.S.).

Hindi is written using the Devanagari script, comprising 11 vowels and 33 simple consonants, and also nasal symbols such as anusvar ( X   X   X   X ) and anurasik ( X  in this language). Generally no distinction is made between uppercase and lowercase letters.

In Hindi grammar [Kellogg 1938] there are only two genders, masculine and feminine, while the neuter found in Sanskrit has disappeared. Feminine nouns are usually formed from the masculine, either by replacing the final  X  - X   X  9 ( X   X  X  X   X ) with a consonant  X   X   X   X  X  X   X  (monkey),  X   X   X   X  X  X   X  (female monkey). Number is expressed through distinctive singular and plural forms.

This language does not have a definite article (the), and instead of placing prepositions before the noun, it positions them after in the form of postpositions (e.g.,  X  X n the table X   X   X  X able on X ). These are used in certain Western European languages such as German, as in the expression  X  X en Fluss entlang  X ( along the river), while the use of this linguistic construction in other Indo-European languages is clearly the exception.

Nouns and adjectives also have two distinct grammatical cases, direct and oblique. The direct case normally indicates the subject of a verb, while the oblique case might be combined with postpositions to form other object or ad-verbials complements (e.g.,  X  X ohn gives a bone to Fido in the garden  X ).
Number and case are expressed through adding inflectional suffixes and oc-casionally certain particles to the stem or base form. To obtain the oblique singular form, most masculine nouns ending in  X  - X   X  (written as  X   X  X  X   X  in medial into  X  - X   X . All such nouns inflected in the oblique singular retain the same form in the nominative plural, while for all other masculine nouns the nominative singular and plural have the same form.
As an example, the masculine noun  X  X orse X  is written as  X   X  X  X  X  X   X  in the direct singular while its oblique singular is  X   X  X  X   X   X  and as a rule it is used in conjunc-tion with post-positions to designate other complements, as in  X   X   X  X  X   X   X   X   X (dative singular). As for plural forms, the direct case is written as  X   X  X   X   X   X  or the oblique case as  X   X  X   X   X .

Hindi adjectives may be either inflected or uninflected. Uninflected adjec-tives remain unchanged before all nouns and under all circumstances, the same as with English adjectives (e.g.,  X   X   X   X   X   X   X  (beautiful)). All inflected adjec-tives usually end in  X  - X   X (e.g., X   X   X  X  X  X   X  (black)) and their inflection depends on the gender and case of the noun they alter (e.g., as for the masculine noun  X  X  X  X  X  X   X  X  X  X  X   X  (black horse),  X   X  X  X  X   X   X  X   X   X   X  (black horses) or with the feminine noun in  X   X  X  X  X  X   X  X  X   X  (black cat),  X   X   X  X  X  X  X   X  !  X  X  X  X   X   X   X  (black cats)) [Kellogg 1938].
Derivational morphology takes place in Hindi through adding a suffix to the stem, and typically the stem X  X  part-of-speech (POS) changes once the suffix is added (e.g.,  X -ial X  in  X  X ommerce X  and  X  X ommercial  X ). In most cases the deriva-tion is performed without modifying the stem itself, as in  X   X  X  X  X  X  X   X   X  (lightness) such as  X   X  X  X   X   X  X  X % X  X   X   X  (worldly) derived from  X   X   X   X  X  X   X   X  (world).
The Hindi vocabulary is borrowed from both the Sanskrit and the Persian languages (with many terms also borrowed from Arabic via Persian), and as such Hindi may thus have two distinct words denoting the same item or a similar object (e.g.,  X   X   X   X  X  X  X   X  from Sanskrit or  X  ) X  X  X  X  X  X   X   X  from Persian). In these cases one is usually reserved as a technical term and the other for ordinary language. While this phenomenon is not unknown in English (e.g.,  X  X ar X  and  X  X utomobile X  or  X  X ilm X  and  X  X ovie X ), it occurs more frequently in Hindi and thus may impact retrieval effectiveness. 3.2 Key Features of Marathi Morphology Marathi is spoken in western India by about 70 million people, and thus ranks fourth among the languages spoken there. As in other languages it may include various dialects, along with certain spelling and phonological variations.
 Marathi is written in the Devanagari script as well as another variant, the Balbodh script. Marathi contains 52 letters, of which only 50 represent dis-tinct sounds. These sounds are expressed by 14 vowels having different initial-leading forms and also different shapes when following consonants. There are 36 consonants in all, including two compound consonants as well as some nasal symbols.

As in Sanskrit, Marathi nouns may have three possible genders (masculine, feminine, and neutral) and be either singular or plural in number [Navalkar 2001]. Masculine, feminine, or neutral noun forms are derived through apply-ing regular and simple rules (for example, a child  X   X   X   X  X  X  X   X  (masculine),  X   X   X   X  X  X   X   X   X   X  ,  X  (neutral)). As in other languages there are certain exceptions, such as the
The plural form of nouns depends on their gender. Masculine nouns ending in  X  - X   X  become plural by changing the final vowel into  X  - X   X , while others nor-mally remain unchanged. The plural form of feminine nouns is usually derived by replacing the tailing  X  - X   X  X y X  - X   X  or by adding  X  - X   X . Neuter nouns ending in a few examples).

Marathi is an inflected language with eight grammatical cases (nominative, accusative, instrumental, dative, ablative, genitive, locative, and vocative). A noun X  X  inflectional termination depends on its case, number, and gender, thus resulting in the complex morpho-syntaxical construction often found in other Indo-European languages, such as Czech [Dolamic and Savoy 2010].

The examples shown in Table I demonstrate how a noun may change its stem to form what is known as a crude (unfinished or imperfect) form and thus accommodate the various case terminations (e.g., the word  X   X   X   X   X  (house, nominative singular) becomes  X   X   X  X  X  X  X  X   X   X  (dative and genitive singular). The basic form is usually formed by combining demonstrative pronouns  X   X  X   X (e.g., X   X   X   X  X   X   X  certain declinations, these pronouns may also take on their impure forms  X   X   X  Proper names for persons and certain terms used to express respect may reject the  X   X  X   X  in the basic form, and thus for example the name Ravji  X   X  X  X  X  X  X   X  becomes  X   X  X  X  X  X   X   X  X  X   X  (to Ravji) and not  X   X  X  X  X &gt; X  X  X  X  X   X  [Navalkar 2001].

In Marathi an adjective may be inflected according to the noun to which it is attached. When an adjective ends in  X  - X   X  for example, it is generally in-flected, otherwise it remains unaltered before the noun it qualifies. Finally, when an adjective is used as a substantive it is declined as such (see examples in Table II).

In Marathi there are four distinct ways of constructing the derivational mor-phology. First are the primary derivatives where only the radical vowel and/or given stem (e.g.,  X   X  X  X   X   X   X (mischief)  X   X   X  X  X   X   X  X   X   X  (mischievous)). This method is generally applied in the derivation of new words adapted from the English lan-guage (e.g., from  X  X istory X  we get the adjective  X  X istoric X  or the related noun  X  X rehistory X ). A third method of forming new words involves reduplicates (e.g.,  X   X  X  X  X  X  X  X  X  X   X , literally  X  X ed red X , meaning  X  X ery red X ), and finally when two (or more) words are concatenated to form a new compound construction (such as  X   X  X  X   X  (battle) +  X   X   X   X  X  X   X (field)= X   X  X  X  X   X   X  X  X   X  (battlefield)). 3.3 Key Features of Bengali Morphology Approximately 250 million people (including non-native speakers) speak Bengali (or Bangla) in the eastern part of India and in Bangladesh, and thus it ranks second among the languages spoken in India. Although closely related to that used in Hindi, Bengali has its own script and an alphabet consisting of 35 consonants: 11 vowels plus five modifying symbols.

While the adjectival and nominal morphology in Bengali is very light, its verbs are highly inflected. Nouns are inflected according to seven grammatical cases (nominative, accusative, instrumental, ablative, genitive locative, and vocative), number (singular or plural) and determiners. The vocative is in-cluded in this list, yet strictly speaking it is not a case because it is identical in form to the nominative and can be distinguished by various prefixes. Note that adjectives are invariable, and this simplifies the automatic processing of Bengali texts.

Bengali makes no use of gender distinction and thus all nouns are declined using the same terminations. Stems are usually not affected by the applica-tion of inflections and case-marking patterns may depend on a noun X  X  degree of animacy (e.g., human beings, living beings other than human or inanimate objects). The noun  X  n  X   X , for example, appears as such in the singular nomi-native, instrumental and ablative cases, but varies in other cases  X  n  X   X  (ac-cusative, dative),  X  n  X   X  (genitive) and  X  n  X   X  X r X  n  X  (locative), while the plural forms of this noun are  X  n  X   X ,  X  n  X   X , and  X  n  X   X  [Beames 1891]. To express correct meaning more precisely, Bengali makes use of post-positions rather than the prepositions found in English.

The determiner in Bengali is attached to the noun in the form of a suffix. The plural adds the suffix  X  - X  (animate) or the suffixes  X  - X  X r X  - X  (inanimate). Particles representing determiners must be placed before the case ending (e.g.,  X  t  X   X  (student) gives  X  t  X  (the student X  X ) and  X  t  X   X  for the plural (the students X )).

Note that additional suffixes may be found, such as those added to indicate measure, words added after the numeral and those that normally precede the noun. This suffix then becomes  X  - X  (the same as the definite article) or  X  - X  (reserved for persons) ( X  a  X   X   X  X any people X ).
 4. SUGGESTED STEMMING STRATEGIES For the three Indian languages we created light stemmers, the same strategy we have suggested for other European languages over the past few years [Savoy 2006; Dolamic and Savoy 2010]. In our opinion effective stemming should fo-cus mainly on inflectional suffixes attached to nouns and adjectives (used to sustain most of a document X  X  meaning) and ignore numerous verb forms. Also, attempting to conflate all verb forms under a common stem tends to generate more stemming errors than benefits. Moreover, the stemmed forms obtained removing suffixes related to number, gender, and case variations tend to con-tain fewer erroneous forms and more often preserve the correct meaning of the word involved. Additionally, most users are more capable of understanding the results of a light stemming procedure returning the dictionary entries ( X  X ni-tiatives X   X   X  X nitiative X ) than a more aggressive procedure returning obscure terms ( X  X nitiatives X   X   X  X niti X ).

In our experiments  X  X ight X  stemmers removed only the inflectional suffixes from nouns and adjectives, and did not account for exceptions present in all natural languages (e.g.,  X  X ice X  and  X  X ouse X ). For the Hindi language we sug-gested a light stemmer based on 20 rules, while for Marathi we created 51 rules and for Bengali 70 rules.

Suffixes may also be used to derive new words from a stem, usually by chang-ing its part-of-speech (POS) (e.g.,  X  X are X  and  X  X areful X  or  X  X arefulness X ). Thus for each language studied we also proposed and evaluated a more aggressive stemmer that not only removed inflectional suffixes from nouns and adjectives, but also removed a limited number of derivational suffixes. To develop this more elaborate stemmer (denoted  X  X ggressive X  in our experiments), we desig-nated 49 rules for the Hindi language, 31 rules for Marathi, and 85 for Bengali.
Finally, to identify pertinent matches between search keywords and docu-ments we removed very frequently occurring and insignificant terms such as  X  X he, X   X  X ut, X   X  X ome, X   X  X e, X   X  X hat, X  and  X  X ave X . Based on the guidelines provided by Fox [1990], we proposed a stopword list containing 165 Hindi, 114 Bengali, and 99 Marathi terms. These lists were rather conservative and mainly in-cluded only determinants (e.g.,  X  X he, X   X  X his X ), postpositions ( X  X n, X   X  X ear X ), vari-ous pronouns ( X  X e, X   X  X y X ) and conjunctions ( X  X nd, X   X  X hile, X   X  X ecause X ). They were also rather short compared to those of other Indo-European languages (e.g., for the English language the SMART system [Salton 1971] suggests 571 words). 5. TEST COLLECTIONS The evaluations reported in this article were based on the test collections built for the Hindi, Marathi, and Bengali languages during the first FIRE 2008 eval-uation campaign. These corpora consist of newspaper articles extracted from the Jagran newspaper for the Hindi language, from the Maharashtra Times and Sakal for Marathi (articles spanning the period April 2004 through Sep-tember 2007), and from the CRI and Anandabazar Patrika (a newspaper edited by ABP Ltd.) for Bengali. The encoding system used for both documents and topic formulation is UTF-8.
 Table III lists statistics on the three corpora, showing that the Hindi and Bengali collections are similar in size (in MB) while the Marathi is smaller. The Bengali corpus contains the largest number of documents, while the Hindi or Marathi collections contain a relatively similar numbers. The Hindi corpus has a greater mean document length (based on the mean number of indexing terms per article, following stopword removal), while the Bengali and Marathi cor-pora have similar mean document lengths (about 275 indexing terms/article), based on the same measuring technique.

The Hindi, Marathi, and Bengali language test collections used in this study contain 45, 73, and 75 topics respectively. The available topics cover various subjects (e.g., Topic #028:  X  X ran X  X  Nuclear Programme, X  Topic #034:  X  X essica Lall Murder X ) including cultural issues (Topic #041:  X  X olkata Book Fair 2007 X  or Topic #070:  X  X emake in Bollywood X ), scientific problems (Topic #045:  X  X lobal Warming X ), or sports (Topic #073:  X  X inedine Zidane X  X  headbutting incident at the World Cup X ). Certain topics seem to be more national in coverage (Topic #041:  X  X ew Labour Laws in France, X  Topic #058:  X  X hailand Coup X ), while in others the real subject being covered is sometimes difficult to de-termine, at least based on the title section (Topic #049:  X  X orldwide natural calamities, X  Topic #052:  X  X udget 2006-2007 X ). Topic descriptions tend to con-tain many proper names (e.g., geographical with  X  X ingur, X   X  X hina, X   X  X olkata, X  personal names such as  X  X ush, X   X  X ania Mirza, X  or products such as  X  X rince X  and  X  X ofors X ), as well as acronyms ( X  X LFA, X   X  X BI, X   X  X IV, X   X  X OC X ).

Based on the TREC model, each topic formulation was divided into three log-ical sections, beginning with a brief title (under the tag &lt; TITLE &gt; , see Figure 1) containing between two and four words, followed by a one-sentence description (tag &lt; DESC &gt; ) the user X  X  information need, and finally, a narrative part spec-ifying relevance assessment criteria (tag &lt; NARR &gt; ). Full examples written in the Hindi, Marathi, Bengali, and English languages are depicted in Figure 1. In our experiments we used only the title part of topic description, thus more closely reflecting requests sent to commercial search engines. This resulted in a mean query size of 3.8 search terms for Hindi, 3.79 for Marathi, and 3.65 for Bengali (following the removal of stoplist words).

The bottom rows of Table III also compare the number of relevant documents per request, showing that the mean was always greater than the median (e.g., for Marathi, the average number of relevant documents per query was 21.0, and its corresponding median was 16). These findings indicate that for each topic only a comparatively small number of relevant items were found. No rel-evant records were found in the collection for five Hindi topics (#40, #43, #47, #48, and #50) while for Marathi Topic #70 ( X  X emake in Bollywood X ) did not have any relevant items.

Topic #32 ( X  X elations between Congress and its allies X ) returned the largest number of relevant articles in the Bengali collection (149), while Topic #59 ( X  X rotests by American citizens against Iraq War X ) and Topic #66 ( X  X hadim owner abduction case X ) returned the smallest number of relevant documents (one in this case and only for the Hindi corpus).
 6. INFORMATION RETRIEVAL MODELS In order to ensure useful conclusions would be obtained when analyzing new test collections, we considered it important to evaluate retrieval performance under varying conditions to develop a broad perspective. We thus evaluated a variety of indexing and search models, ranging from classical tf idf indexing schemes to more complex probabilistic models.

To evaluate and analyze different stemming approaches with respect to var-ious IR models, we first used the classical tf idf vector-space model wherein the weight attached to each indexing term was the product of its term occur-rence frequency ( tf ij for indexing term t j in document d i ) and the logarithm of its inverse document frequency ( idf j ). To measure similarities between docu-ments and requests, we computed the inner product after normalizing (cosine) the indexing weights [Manning et al. 2008].

Better weighting schemes have been suggested for the vector-space model, especially in cases where a term X  X  occurrence in a document might be viewed as a rare event. A good practice may thus be to assign more importance to the first occurrence of a term compared to its successive and repeating occurrences, where the tf component is computed as ln( tf )+1orasln(ln( tf )+1)+1. A term X  X  presence in a shorter document might also provide stronger evidence than in a longer document, and thus to account for document length we could make use of more complex IR models, including the Lnu-ltc forms suggested [Buckley et al. 1996]. In this case Equation 1 calculates the indexing weight assigned to a document term ( Lnu ) while Equation 2 provides the indexing weight assigned to query term ( ltc ). where nt i is the number of distinct indexing terms in document d i and pivot and slope are two constants used to adjust term weight normalization values, according to document length. The value of the constant slope was fixed at 0.2 for all languages while pivot represents mean number of distinct index-ing terms per document. This formulation prevents the retrieval system from overly favoring short documents compared to those articles longer than the mean, according to the pivot value.

To complement this vector-space model, we implemented three probabilis-tic models representing three different paradigms. First, we implemented the well-known Okapi (or BM25) approach [Robertson et al. 2000], regularly pro-ducing high retrieval effectiveness for various test-collections. Second, we in-cluded a model derived from the Divergence from Randomness (DFR) paradigm [Amati and van Rijsbergen 2002], combining two information measures formu-lated as: probability of finding tf ij occurrences of the term t j in a document. If this prob-ability is high, term t j would correspond to a non-content bearing word within the context of the entire collection [Harter 1975] while otherwise if Prob 1 ij ( tf ) information regarding the content of the document d i . The second information measure depends on Prob 2 ij ( tf ), the probability of having tf +1 occurrences of the term t j , knowing that tf occurrences of this term have already been found in document d i . To implement these two underlying probabilities, we selected the I(n e )C2 model based on the following formulae: where tc j indicates the number of occurrences of term t j in the collection, n the number of documents in the corpus, mean dl the mean length of a document, and l i the length of document d i .

Finally we also used an approach based on a language model (LM) [Hiemstra 2000], known as the non-parametric probabilistic model. Within this language model paradigm various implementations and smoothing methods [Zhai and Lafferty 2004] might also be considered, and in this article we adopted the model proposed by Hiemstra [2000] as described in Equation 6, using Jelinek-Mercer smoothing and combining an estimate based on document (P[t j | d i ]) and another based on the entire corpus (P[t j | C]).
 where  X  j is a smoothing factor (fixed at 0.35 for all indexing terms t j ), df j the number of documents indexed with the term t j ,and lc a constant related to the underlying corpus C. 7. EVALUATION To evaluate the various indexing and search strategies, we adopted the mean average precision (MAP) method of measuring retrieval performance (com-puted by the TREC EVAL software, based on a maximum of 1,000 retrieved records). Used by all evaluation campaigns for around 20 years, this perfor-mance measure is able to objectively compare various IR models, especially their ability to retrieve relevant items (ad hoc tasks) [Buckley and Voorhees 2005].

Using MAP to measure a system X  X  performance signifies that we attached equal importance to all queries. Comparisons between two IR strategies would therefore not be based on a single query relative to those available in the un-derlying test collection or specifically created to demonstrate that a given IR approach must be rejected. Thus we believe that it is important to conduct ex-periments involving the largest possible number of observations (between 45 and 75 queries in our evaluations, depending on the language).

To statistically determine whether or not a given search strategy would be better than another, we applied the bootstrap methodology [Savoy 1997]. This led to a conclusion very similar to that of the t -test method but did not require parametric assumptions [Abdou and Savoy 2006]. In our statistical tests, the null hypothesis H 0 stated that both retrieval schemes produced similar MAP performance. This null hypothesis would be accepted if two retrieval schemes returned statistically similar MAP, otherwise it would be rejected. Thus, in the experiments presented in this article, statistically significant differences were detected by a two-sided test (significance level  X  =5%). 7.1 IR Model Evaluation We evaluated the various IR models described in the previous section, applying them to the Hindi (see Table IV), Marathi (Table V) and Bengali test collections (Table VI). These tables report the MAP achieved by the IR models when apply-ing the four different stemming strategies for Hindi and Marathi (e.g.,  X  X one, X   X  X ight, X   X  X ggress, X  and  X  X ASS X ), and five for Bengali (e.g.,  X  X M X  was added to the other four stemming schemes). The last two columns in each table list the retrieval performances produced by two language independent indexing strategies, where the  X  X runc-4 X  column lists results when simply truncating the term into its first four letters (e.g.,  X  X oodness X  generates  X  X ood X ), while the last column lists evaluation results obtained by applying the 4-gram indexing approach (e.g.,  X  X inister X  gives  X  X ini X ,  X  X nis X , ...,  X  X ter X ) [McNamee and May-field 2004; McNamee et al. 2009]. The fixed length of 4 was selected for both the truncating and n -gram methods because it produced the best IR performance for all three languages.

Table IV lists the best performance results for the Hindi language, obtained with either the I(n e )C2 model derived from the Divergence from Randomness paradigm or the vector-space Lnu-ltc . As shown by the results listed in bold this latter scheme performed best when we applied an aggressive stemming, YASS stemmer, or when we ignored this word normalization procedure. Tables V and VI show that for both Bengali and Marathi the best performing model was always the I(n e )C2 approach.

A difference in mean performance, particularly when small, did not always indicate differences that might be clearly perceived by the final user. A cross ( X   X   X ) in these tables indicates which retrieval models resulted in statistically significant performance differences, compared to the best performing models. In this case, the classical tf idf vector-space model and the language model (LM) typically resulted in significantly lower performance levels. For the other models, the outcome varied according to the language and the indexing scheme involved. It is however evident that performance differences between the Lnu-ltc and I(n e )C2 for the Hindi language were never significant, while for the Bengali corpus performance differences between the I(n e )C2 and the other ap-proaches always tended to be significant (exceptions can be found only in the  X  X one X  column, see Table VI). 7.2 Stemming Evaluation The Hindi, Marathi, and Bengali morphologies are more complex than that of the English language and thus their MAP values could be improved by applying a stemming procedure that would conflate different surface words with similar meanings under the same stem or indexing unit. If this assumption is true, we could then consider a variety of stemming strategies, be they light or more aggressive. The question then arises as to whether stemming would affect IR performances for these various languages and to what extent?
Tables IV (Hindi), V (Marathi), and VI (Bengali) list the results of our first retrieval performance evaluations in which stemming was omitted, and lists the MAP values in the  X  X one X  column. The  X  X ight X  column lists retrieval per-formances obtained by applying a light stemmer and the  X  X ggress X  column a more aggressive stemmer . In the  X  X ASS X  column we reported the MAP values obtained using the statistical stemmer (with a threshold value set at 1.5). As a training set, we generated one word list per language using the respective document collection. Although using the same data for both the training and the test is usually not considered fair [Sebastiani 2002], in our case, we view this as the upper limit of the retrieval performance that might be achieved by this approach. We also evaluated the performance of the GM light, rule-based stemmer for the Bengali language only.

To provide an overview of MAP values for each of these stemming strategies, in each table we listed the average retrieval performance for all five IR models in line just before the last. Finally, the last row (labeled  X % change X ) lists the results obtained by comparing percentage improvement to mean performance obtained when we ignored the stemming stage (listed in the  X  X one X  column).
The last two rows in these same tables show that in all approaches that applied stemming, performances were much more effective than those that omitted stemming, a finding that holds for all three languages studied. More precisely for the Hindi language, relative increases ranged from 19.3% with a light stemmer to 27.6% with the more aggressive approach. For Marathi this increase was from 11.4% with the YASS stemmer to 41.6% with the aggres-sive stemmer. Finally, for Bengali the range of improvement was relatively similar across all four stemmers, ranging from 11.9% with the GM stemmer to 20.1% with the YASS stemmer. Based on this data, we found that a more aggressive stemmer tended to result in better MAP while for some languages (e.g., Bengali) the performance difference between a light and an aggressive stemmer was not significant. Moreover, when compared to MAP found for certain European languages, these relative improvements after stemming for these three Indian languages were quite large (e.g., 4% for English, 4.1% for Dutch, 7% for Spanish, 9% for French, 15% for Italian, 19% for German, 29% for Swedish, 40% for Finnish [Tomlinson 2004], and 45% for Czech [Dolamic and Savoy 2010]).

With the no stemming approach as a baseline and after applying statistical tests, the differences between this approach and the two algorithmic stemmers were very often statistically significant (marked with  X * X  in the tables) for all three languages tested. For Marathi only two exceptions were found (see Table V), where performance differences resulting from the classical tf idf or the LM models cannot be viewed as significant ( tf idf : 0.1844 vs. 0.1920, LM: 0.2232 vs. 0.2480).

An analysis of the YASS statistical stemmer shows that the performance differences with a no stemming approach are always statistically significant for the Bengali language (Table VI). For Hindi (Table IV), these differences are never significant, while for Marathi (Table V), the differences fall some-where between these two extreme cases, with some being significant ( Lnu-ltc or I(n e )C2 models) while others are not. 7.3 Query-by-Query Analysis To determine the outcome of applying stemming, we performed a query-by-query analysis, concentrating on DFR-I(n e )C2, the best performing retrieval model, and for each query comparing average precision (AP) before and after applying a stemmer.

For Hindi, we found that the primary reason for this improved performance was the application of the stemming approach. The topics and their correspond-ing relevant documents contained the same words but they were expressed in different grammatical cases, and even though the two strings were not identical before stemming, they were indeed conflated to the same stem, thus resulting in the best performance. As an example, the title of Topic #33 ( X  X resident Bush visits India X ) contained  X   X   X   X   X  X nd X   X  X  X  X   X   X  ( X  X ush X  and  X  X ndia X  respectively, in the direct case), while a large number of relevant documents contained  X   X   X   X  X  X   X  ( X  X ush X ) or  X   X  X   X  X  X  X   X   X  ( X  X ndia X ) in the oblique case.

In the Marathi case Topic #41 ( X  X ew labor laws in France X ) is an example that might demonstrate the second advantage of applying a stemming proce-dure. This topic title contains the term  X   X  X  X B  X   X  ( X  X rance X ) while the relevant documents contain the terms  X   X  X  X B X   X   X   X ,  X   X  X  X B X  X  X  X   X ,  X   X   X  X  X  X  X  X  X   X   X , all of which are conflated to the same stem by the aggressive stemmer and thus result in av-erage precision changes from 0.0111 ( X  X one X ) to 0.6389 ( X  X ggress X ). The topic title also contains the noun  X   X   X  X  X  X   X   X  (law) while some relevant documents con-tain only the derivational term  X   X  X  X  X  X  X  X  X  X  X   X   X  (legal). With the light stemmer, the various surface forms were not conflated under the same stem.

For Bengali the largest AP differences between the various indexing strate-gies were observed with Topic #58 ( X  X hailand Cup X ). The term  X  i  X  ( X  X hai-land X  in the genitive case) was only found in the topic formulation, while the terms  X  i  X  X nd X  i  X  found in relevant documents had been conflated to the same stem for all stemming strategies applied, thus resulting in much bet-ter AP for that particular stemming method. Certain relevant documents did however contain the form  X  i  X , a spelling variation of the country name.
Based on the query-by-query analysis described above we could see that for these languages stemming did have some benefits, while over-stemming or under-stemming could result in decreasing performance. Thus, for the Hindi language when comparing light stemming to no stemming, higher MAP values were obtained for 19 topics, while 18 topics show decreased performance. For the Marathi and Bengali languages these differences are somewhat greater (e.g., 46 vs. 23 topics and 48 vs. 27 topics language respectively).
With the statistical stemmer YASS, the results showed that stemming strat-egy seemed to result in retrieval performances comparable to those of the light stemming, for both the Hindi (Table IV) and Marathi (Table V) languages. On the other hand for Bengali (Table VI), the YASS stemmer resulted in better performance than for both the light and aggressive stemming approaches, but these differences were not statistically significant. The restrained set of fre-quent suffixes used for the Bengali language and the fact that the YASS para-meters were better adapted to the Bengali corpus than were the Hindi or the Marathi could possibly explain these results. 7.4 Word-Based vs. n-gram Indexing Strategies The last two columns of the previous tables report our test results for the In-dian languages: Hindi, Marathi, and Bengali, showing the retrieval perfor-mances obtained by  X  X runc-4 X  and  X 4-gram X , the two language independent approaches we applied. For these indexing strategies we ignored each lan-guage X  X  underlying morphology and syntax, assuming that the first part of the word (trunc-n ) or character sequence ( n -gram) would provide the information needed to obtain a pertinent match between search keywords and document surrogates.
 Based on the retrieval performances obtained for the Hindi (Table IV), Marathi (Table V) or Bengali (Table VI) languages, the simple trunc-n (or trunc-4 in our evaluation) resulted in higher performance levels. On average for both Hindi and Bengali, this indexing approach led to the best retrieval effective-ness. Moreover with the n -gram approach the mean performance differences were relatively large (Hindi: 0.2680 vs. 0.2318, -13.6%; Bengali: 0.2998 vs. 0.2497, -16.7%) while for Marathi the average retrieval performances were sim-ilar (0.3043 vs. 0.2988, -1.8%).

To verify whether these differences could be considered significant we per-formed a statistical test using the  X  X runc-4 X  indexing approach as a baseline with both the Hindi and Bengali languages. For Hindi (see Table IV), perfor-mance differences were always statistically significant, compared to the  X  X one X  and  X 4-gram X  approaches (except for tf idf model). When compared to the light, aggressive or YASS stemming approaches, the trunc-4 differences were never statistically significant. For Bengali (see Table VI) the performance differences were never statistically significant when compared to both the aggressive or YASS stemming approaches, yet for other approaches they were mostly signif-icant (except for tf idf model).

For Marathi (Table V) the best overall performance was achieved using the aggressive stemming approach, and with this best performance as baseline, the performance differences were always statistically significant when compared to the  X  X one X , light or YASS stemming approaches, but they were not significant when compared to  X  X runc-4 X  or  X 4-gram X  strategies.
 To provide a more complete picture we should mention that for Bengali and Hindi, the MAP differences between  X  X one X  and 4-gram indexing strategies were never statistically significant.

To obtain a better understanding of when word-based or language indepen-dent indexing strategies could lead to the best performances, we analyzed a few specific queries. As a first explanation for performance differences, we noted certain spelling variations in topic formulations and in relevant docu-ments. With the Hindi corpus for example in Topic #44 ( X  X errorist attacks in Britain X ), the term terrorist was spelled  X   X  X  X  X  X  X  X  X  X  X   X  while it was spelled  X   X   X  X  X  X  X  X  X   X  in the relevant documents. In the Marathi corpus, we found a sim-ilar situation with Topic #39 ( X  X ttacks on American soldiers in Iraq X ) where the corresponding script was  X   X  X   X   X   X  X  X   X   X   X  while in the relevant documents it was  X   X   X   X   X  X  X   X  X   X  X r X   X  X   X  X   X  X  X   X   X   X . In these cases the 4-gram was the best performing strategy, producing at least one match for both terms. In Marathi with Topic #9 we also encountered a spelling problem, where  X  X srael X  was spelled  X   X   X  X  X  X   X   X  X n the topic formulation and  X   X   X  X  X   X   X   X  in the relevant documents. In this case also the 4-gram approach performed better than a word-based indexing scheme.
For the Marathi case, Topic #41 ( X  X ew labor laws in France X ) can be cited as an example of improved retrieval effectiveness after applying the word-based indexing approach. The topic title contains the term  X   X  X  X B X   X  ( X  X rance X ) while the relevant documents contain the following terms  X   X  X  X B X   X   X   X ,  X   X  X  X B X  X  X  X   X ,  X   X  X  X B X  X  X  X  X   X , all of which were conflated to the same stem by the aggressive stem-mer, and thus causing the average precision to change from 0.1946 with trunc-4 to 0.6389 with the aggressive stemmer due to over-stemming by trunc-4 strat-egy. For this query the fixed limit of 4 was clearly too small. 7.5 Stopword List Evaluation During the indexing of documents or queries, it is assumed that very frequent word forms having no precise meaning (e.g.,  X  X he, X   X  X ou, X   X  X f, X   X  X s X ) may be re-moved. In fact, each match between a query and a document should be based on pertinent terms, rather than retrieving documents simply because they con-tain words such as  X  X n, X   X  X urs, X  or  X  X ut X .
 In our final experiments we compared the retrieval effectiveness of various IR models, with and without the suggested stopword list, for each of the three languages studied. For Marathi (the stopword list contained 99 words) the mean difference across the five retrieval models tested was around 1%, while for Bengali (114 stopwords) this difference was around 2%. For both these languages the differences were never statistically significant.

For Hindi (165 forms in the stopword list) however the mean differences between various search models with or without applying a stopword list were larger. Table VII shows the results obtained when ignoring the stemming stage (columns labeled  X  X o stemmer X ) and after applying a light stemmer ( X  X ight stemmer X ). As shown in the last two rows, the average performance differences were around 20% for both stemming strategies. Using the retrieval perfor-mance with stopword removal as a baseline, any significant MAP differences detected were also listed in Table VII and marked with the symbol  X * X . This shows that the differences were always statistically significant, except for those obtained using the Lnu-ltc model with no stemmer applied (0.2368 vs. 0.2182).

Based on our analysis of mean query length across the three languages, we found that removing the stopwords only slightly changed the averages for the Marathi (from 4.04 to 3.78 search terms) or Bengali languages (from 3.80 to 3.64 terms). For Hindi, however, this difference was somewhat greater, de-creasing from 4.80 indexing terms without stopword removal to 3.8 terms if this step was performed.

For Hindi this important improvement resulting from stopword removal can be partially explained by an analysis of Topic #27 ( X  X elations between India and China X ), showing an AP of 0.2690 after removal vs. 0.0532 before stopword removal. The situation was similar with Topic #38 ( X  X neasy truce between Greg Chappell and Sourav Ganguly X ), with an AP of 0.6055 (after) vs. 0.2221 (before) or Topic #54 ( X  X IV and AIDS epidemic X ), providing an AP of 0.7271 (after) vs. 0.2929 (before). In these three topics, it was the term  X   X  X  X   X  meaning  X  X nd X  that made the difference. This word did not have high document fre-quency because in Hindi other words can be used to express  X  X nd X  (in fact its frequency in the underlying document is similar to a word like  X  X hina X ). This resulted in the term being incorrectly viewed as pertinent for the given queries and this decreased the resulting retrieval effectiveness. 8. CONCLUSION This article presents the main morphological characteristics of the Hindi, Marathi, and Bengali languages. To facilitate IR operations in each of these Indo-Aryan languages we suggest two algorithmic stemmers, one to remove only inflectional suffixes (denoted  X  X ight X ) and a second to remove certain fre-quently occurring derivational suffixes (listed in our tables under the heading  X  X ggress X ). As an alternative stemming approach, we apply and evaluate the YASS statistical stemmer. To compare these word-based indexing models with the language independent approaches, we then include the n -gram and trunc-n indexing schemes. We also propose a stoplist for each of these languages which for contains the Hindi language 165 words, 99 for Marathi, and 114 for Bengali.
To evaluate and compare these various indexing approaches, we use five different IR models corresponding to different probabilistic approaches (Okapi, one model derived from the Divergence from Randomness (DFR) paradigm, and another from a language model) as well at two vector-space approaches, namely the classical tf idf and the Lnu-ltc weighting schemes.

For all three languages and independently of the indexing approaches, we find that the I(n e )C2 approach derived from the Divergence from Randomness (DFR) paradigm tends to produce the best retrieval performance. Only for the Hindi corpus (see Table IV) does the Lnu-ltc vector-space model result in better performances for two indexing strategies (applying an aggressive stemmer or ignoring this word normalization procedure). Based on the application of a statistical test for each of these three languages, we conclude that performance differences are statistically significant when comparing the best performing model with both the classical tf idf approach and the language model (LM). For the Bengali corpus when comparing the best IR model (I(n e )C2) and the others (see Table VI) however the differences are always significant (denoted by a  X   X   X ).
Upon an analysis of performance differences resulting from the application of the various stemming strategies, for all three languages we find that a stem-ming approach tends to perform significantly better than an indexing scheme without a stemmer. Moreover, an aggressive stemmer usually results in better MAP than a light stemmer, and these performance differences are even sta-tistically significant, although this holds for the Marathi language only (see Table V).

When applying the YASS statistical stemmer, the performance differences obtained when a no stemming approach was applied are always significant with the Bengali language (see Table VI), but never with Hindi (Table IV), while for we obtained mixed results with Marathi language (Table V).

Language independent indexing strategies such as n -gram and trunc-n are valid alternatives, especially for unfamiliar languages. For the three languages studied, truncation after the first n characters tends to produce better MAP than the n -gram scheme. When comparing word-based indexing strategies us-ing an aggressive stemmer, the mean differences tend to be relatively small, +2.2% for the Hindi test-collection (0.2680  X  X runc-4 X  vs. 0.2623  X  X ggress X ) or -2.4% for Marathi (0.3043  X  X runc-4 X  vs. 0.3117  X  X ggress X ), yet for Bengali mean performance differences are larger (0.2998  X  X runc-4 X  vs. 0.2820  X  X ggress X , -5.9%).

When comparing all indexing schemes, we find that for the Hindi language the best approach is either trunc-4 or word-based when applying either a light or an aggressive stemmer, even though performance differences between these three schemes are usually not statistically significant. For Marathi our statis-tical tests detect no significant differences between an aggressive stemmer, the trunc-4 or the 4-gram schemes. According to the statistical tests we applied for Bengali, the trunc-4, aggressive stemmer and YASS approaches all resulted in similar performance levels.

When comparing retrieval performances with or without the removal of stop-words, it appears there are no real and significant differences for the Marathi and Bengali languages. For Hindi, however, the use of a stopword list signifi-cantly improves retrieval performances, with average differences being around 20% (see Table VII).

