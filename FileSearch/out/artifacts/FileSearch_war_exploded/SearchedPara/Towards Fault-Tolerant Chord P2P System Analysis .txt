 In recent years, Peer-to-Peer (P2P) networks (see e.g. [21], [17], [7] [15]) have been powerful environments for successful sharin g of certain resources. Despite the advan-tages of the P2P systems, there exists a significant problem with fault tolerance. When some nodes depart from the system without uploading gathered information, some data which are stored on the departured nodes may be lost.

Among the structured P2P systems, Chord protocol introduced in [21] and developed in [14] is one of the most popular and we focus on it in this paper. In the Chord P2P system each of such unexpected node failures effects in loosing some data stored in the node (see [2], [11]).

The replication techniques are used for storing documents at many nodes in the system. The benefits of replication are that it can improve availability of documents in case of failure [22]. Different strategies for replication in Chord P2P system such many publications (see [5], [18], [10], [16], [3], [20], [19]). In the replication schemes successor-list replication is very popular and often applied in ring-based networks.
Our main contribution include:  X  We propose a novel analytical model describing the process of unexpected nodes  X  We also investigate the fault tolerance of overlay system called k multiple chord  X  As a practical application of our theoretical estimation we discuss the recovery successor-list replication scheme in Chord P2P system and present analytical formulas describing the resistance to loss of document. Section 3 presents the overlay k  X  Chord . Then, in Section 4 we discuss the recovery mechanism of partially lost information. Finally, Section 5 summaries and concludes our work. In this section, we briefly describe the successor-list replication scheme in Chord P2P system [5]. For a more detailed description of Chord P2P system the reader is referred to [21]. Then, we analyze the process of unexpected departure.

In Chord P2P system nodes are arranged i n a logical ring. Th e positions of nodes and documents are created by a hash operation, which results in random placement into the Chord ring. Let n denotes the number of nodes in Chord. Then, the identifier space of the nodes is defined as a set of integers { 0 , 1 ,...,n  X  1 } .

Let (0 , 1 ,...,n  X  1) denotes Chord ring. The first successor of a node with identi-fier p is the first node found going in clockwise direction on the ring starting at p. The predecessor of a node with identifier p is the first node found going anti-clokwise direc-tion on the ring starting at p. Each node p is responsible for storing documents between p s predecessor and p. To ensure the connectivity of the chord ring, each node knows the first s nodes which identifier is greater than the node X  X . These nodes are the node X  X  suc-cessors. Additionally, each node maintains a table of fingers of size O (log( n )) , which point to other nodes in the ring. Hence the size of routing table is O (log( n )+ s ) .
Let d&lt;s. For a replication degree of d in successor-list replication a document is stored on the node p which is responsible for storing document and d  X  1 immediate successor of p. Let the node p leaves the system in an unexpected way, i.e without replicas of documents of the node p .
 For p =0 , 1 ,...,n  X  1 and d&gt; 1 we define family of sets by the formula Definition 1. Let n denotes the number of nodes in Chord. Let A = { n 1 ,...,n l } X  { 0 ,...,n  X  1 } be a random subset of nodes from Chord with successor-list replication of degree d. We say that, the set A is safe ,if We say that, the set A is unsafe ,if A is not safe.
 Remark 1. Notice that, if the set A is safe, then no information disappears from Chord with successor-list replication of degree d after simultaneous unexpected departure of all nodes from A .
 Theorem 2. Let d  X  2 . Let n be the number of nodes in Chord with successor-list replication of degree d and let A be the set of nodes. If | A | X  n 1  X  1 Proof. Firstly observe that for | A | &lt;d we have Pr[ A is safe] = 1 . Therefore, we may assume that | A | X  d. Then Theorem 3. Let &gt; 0 . Let d  X  2 . Let n be the number of nodes in Chord with successor-list replication of degree d and let A be the set of nodes. If | A | X  n 1  X  1 d  X  then Proof. As in the proof of Theorem 2, observe that for | A | &lt;d we have Pr[ A is safe] = 1 . Therefore, we may assume that | A | X  d. Then Hence the proof is finished. The overlay system k  X  Chord was introduced and developed in [8], [9]. It the system of multiple chord rings. From the formal point of view k  X  Chord is the structure where R i,n is the i  X  th Chord ring. The nodes of the first Chord ring are expressed in Each document has a unique position and is mapped into the same location on different Chord rings.

In k  X  Chord hybrid system each node maintains a k dimensional finger table and a table is O (log( n )+ s ) which is the same like in Chord. Let us consider the event, when the node p leaves the system in an unexpected way without uploading storing documents into the system. In the classical Chord such event effects in loosing information stored on the node p . The situation changes in hybrid k  X  Chord . There are ( k  X  1) replicas of of loosing information stored on the node p equals 1 ( n  X  1) k  X  1 . Definition 4. Let A = { n 1 ,...,n l } X  X  0 ,...,n  X  1 } be a random subset of nodes from the structure k  X  Chord with n nodes. We denote by K A, 1 the unions of intervals controlled by nodes from A in the first circle and we denote by K A,i the unions of intervals controlled by nodes from A in the i  X  th circle ( i =2 ,...,k ) . We say that the set A is safe ,if k i =1 K A,i =  X  . We say that the set A is unsafe if A is not safe. Let us remark that, if the set A is safe then no information disappears from the hybrid system after simultaneous unexpected departure of all nodes from A .
 Theorem 2. Let k  X  2 . Let n be the number of nodes in the structure k  X  Chord . let A be a random subset of nodes from the structure k  X  Chord . If | A | X  n 1  X  Pr[ A is safe]  X  1  X  1  X  n .
 Notice that, the bounds in Theorem 2 do not depend on the number of documents put into the system.
 Proof. Let A = { n 1 ,...,n l } X  X  0 ,...,n  X  1 } be a random subset of nodes from the structure k  X  Chord with n nodes. Hence | A | = l. Let us recall that K A, 1 = l s =1 A s are the unions of intervals controlled by nodes from A in the first circle, and K A,i are the unions of intervals controlled by nodes from A in the i  X  th circle ( i =2 ,...,k ) .
Notice that, the positions of nodes in the i  X  th copy of Chord are chosen indepen-dently from the position of nodes from the first copy. Let  X  i (0) , X  i (1) ... X  i ( n  X  1) denotes the positions of nodes in the i  X  th copy of Chord, where  X  i  X  S n are random and independent ( i =2 ,...,k ) . Let us consider an interval A s controlled by a node n s ( s =1 ,...,l ) .

The reason why an interval controlled by a node  X  i ( n p ) (p=1,...,l) may have a Therefore, Hence Finally notice that, for l  X  n 1  X  In this section we discuss the recovery mechanism of partially lost information in the replication schemes: successor list and k  X  Chord . We show how fault tolerance of Chord system changes depending of different replica degree. Notice that the recovery mechanism based on Queueing Theory was i ntroduced in [2] and applied for another modification of Chord. The notations defined in this chapter are listed in Table 2. From the Little X  X  Law from Queueing Theory (see e.g. [4]) we get two equations so For two replication schemes discussed in this paper we have obtained the following safety bound D = k for k  X  Chord ) . If we want to keep our system in a safe configuration with high probability greater than 1  X  1  X  Therefore, time for recovery of partially lost information for different replica degrees is: Let T =30 minutes (see [6], [23]). Suppose that u =5% nodes leave the system in unexpected way without uploading gathered information. In Table 1 we put four figures describing the function T recovery of the number of nodes N  X  [10 4 , 10 6 ] for different replica degrees D =2 , 3 , 4 , 5 with fixed T = 1800 sec. and u =5% . The system gains more time for recovery of partially lost information when replica degree increases.
The following table contains the time for recovery of partially lost information with fixed parameters N =10 5 ,T = 1800 sec, u =5% , for different replica degree: Algorithm 1. Recovery process in Chord with successor-list replication of degree d 4.1 Successor-List Replication Let us consider the network with N =10 5 average number of nodes in the system ( T = 30 minutes, u =5% ). From equation (1) we get m = N T u  X  2 . 77 , so approximately 2.77 nodes unexpectedly leave the network in one second.

Assume that nodes: p +1 ,...p + d  X  1 in the network check the node p + d periodically with the period of T c,d seconds (see Algorithm 1). Assume that T c,d &lt; 2 sec.
During this time nodes: p +1 ,...p + d  X  1 , do not know that the node p + d left the network. Then, there are T r  X  T c,d seconds for information recovery (see inequality (3)). During this time nodes: p + 1 ,... p + d  X  1 , ask their successors for a portion of documents in 0 . 2 sec. Then, nodes: p + 1 ,... p + d  X  1 , wait for receiving necessary information. Nodes p + 1 ,... p + d  X  1 , send some portion of documents to some of their successors. Therefore, the following inequality guarantees the system is in a safe configuration with high probability The inequality (5) can be used in a practical way. It shows how to choose the proper number of replication degree d to optimize the recovery process. For estimated param-eters  X , d s ,t s ,T,u,N of the network and fixed T c,d the optimal replica degree is the minimal natural d ( d&gt; 1 ) for which the inequality (5) holds.

Let us assume, that the transmition speed t s = 100 kB/s. As in [23] we consider two scenarios with size of documents, d s of 1 . 57 kB and 1 MB, respectively.
The Table 3 contains the upper bounds for the average number of documents per one node for different replica degree, when the system stays in a safe configuration. Algorithm 2. Recovery process in k  X  Chord 4.2 k  X  Chord In k  X  Chord network the recovery process of partialy lost information is more com-plicated than in successor-list replication.

Let us consider the network with N =10 5 average number of nodes in the system ( T =30 minutes, u =5% ). From equation (1) we get m = N T u  X  2 . 77 , so approxi-mately 2.77 nodes unexpectedly leave the network in one second.

Assume that nodes: p +1 ,...p + k  X  1 , in each chord ring check the node p + k periodically with the period of T c,k seconds (see Algorithm 2). Assume that T c,k &lt; 2 sec.

During this time nodes: p +1 ,...p + k  X  1 , do not know that the node p + k left the network. Then, there are T r  X  T c,k seconds for information recovery (see inequal-ity (3)). During this time nodes: p + 1 ,... p + k  X  1 , localise in the remind ( k  X  1) Chord rings nodes responsible for storing lo st documents. The time for fulfilling this operation equals approximately 1 2 lg 2 N  X  0 . 2 sec. Then, nodes: p + 1 ,... p + k  X  1 , wait for receiving necessary inform ation and the time is approximately  X  d s t p + 1 ,... p + k  X  1 , send received documents to some of their successors. Therefore, the following inequality guarantees the system is in a safe configuration with high prob-ability Similary, to successor-list replication inequality (6) can be used in a practical way. It shows how to choose the proper number of k Chord rings to optimize the recovery process. For estimated parameters  X , d s ,t s ,T,u,N of the network and fixed T c,k , the optimal replica degree is the minimal natural k ( k&gt; 1 ) for which the inequality (6) holds.

Let us assume that the transmition speed t s = 100 kB/s. As in [23] we consider two scenarios with size of documents, d s of 1 . 57 kB and 1 MB, respectively.
The Table 4 contains the upper bounds for the average number of documents per one node for different k  X  Chord , when the system stays in a safe configuration. In this paper, we study two replication strategies for Chord P2P system: successor-list tance to loss of documents. As a practical illustration of our estimated safety bounds we discuss the recovery mechanism of partially lost information. We show how fault toler-ance of Chord system changes depending of different replica degree and explain how to choose the proper number of replication to optimize these two replication strategies. In future research we plan to experimentaly evaluate efficiency of proposed recovery algorithms. We also plan to extend our work to symmetric replication scheme.
