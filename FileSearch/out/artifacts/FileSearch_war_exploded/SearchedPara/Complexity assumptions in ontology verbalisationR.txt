 Since OWL (Web Ontology Language) was adopted as a standard in 2004, researchers have sought ways of mediating between the (decidedly cumbersome) raw code and the human users who aspire to view or edit it. Among the solutions that have been proposed are more readable coding formats such as Manchester OWL Syntax (Hor-ridge et al., 2006), and graphical interfaces such as Prot  X  eg  X  e (Knublauch et al., 2004); more specula-tively, several research groups have explored ways of mapping between OWL and controlled English, with the aim of presenting ontologies (both for viewing and editing) in natural language (Schwit-ter and Tilbrook, 2004; Sun and Mellish, 2006; Kaljurand and Fuchs, 2007; Hart et al., 2008). In this paper we uncover and test some assumptions on which this latter approach is based.

Historically, ontology verbalisation evolved from a more general tradition (predating OWL and the Semantic Web) that aimed to support knowledge formation by automatic interpretation of texts authored in Controlled Natural Languages (Fuchs and Schwitter, 1995). The idea is to es-tablish a mapping from a formal language to a natural subset of English, so that any sentence conforming to the Controlled Natural Language (CNL) can be assigned a single interpretation in the formal language  X  and conversely, any well-formed statement in the formal language can be realised in the CNL. With the advent of OWL, some of these CNLs were rapidly adapted to the new opportunity: part of Attempto Controlled En-glish (ACE) was mapped to OWL (Kaljurand and Fuchs, 2007), and Processable English (PENG) evolved to Sydney OWL Syntax (SOS) (Cregan et al., 2007). In addition, new CNLs were developed specifically for editing OWL ontologies, such as Rabbit (Hart et al., 2008) and Controlled Lan-guage for Ontology Editing (CLOnE) (Funk et al., 2007).

In detail, these CNLs display some variations: thus an inclusion relationship between the classes Admiral and Sailor would be expressed by the pattern  X  X dmirals are a type of sailor X  in CLOnE,  X  X very admiral is a kind of sailor X  in Rabbit, and  X  X very admiral is a sailor X  in ACE and SOS. How-ever, at the level of general strategy, all the CNLs rely on the same set of assumptions concerning the mapping from natural to formal language; for con-venience we will refer to these assumptions as the consensus model . In brief, the consensus model assumes that when an ontology is verbalised in natural language, axioms are expressed by sen-tences, and atomic terms are expressed by en-tries from the lexicon. Such a model may fail in two ways: (1) an ontology might contain axioms that cannot be described transparently by a sen-tence (for instance, because they contain complex Boolean expressions that lead to structural ambi-guity); (2) it might contain atomic terms for which no suitable lexical entry can be found. In the re-mainder of this paper we first describe the consen-sus model in more detail, then show that although in principle it is vulnerable to both the problems just mentioned, in practice these problems almost never arise. Atomic terms in OWL (or any other language im-plementing description logic) are principally of three kinds, denoting either individuals, classes or properties 1 . Individuals denote entities in the domain, such as Horatio Nelson or the Battle of Trafalgar; classes denote sets of entities, such as people or battles; and properties denote relations between individuals, such as the relation victor of between a person and a battle.

From these basic terms, a wide range of com-plex expressions may be constructed for classes, properties and axioms, of which some common examples are shown in table 1. The upper part of the table presents two class constructors ( C and D denote any classes; P denotes any property); by combining them we could build the following expression denoting the class of persons that com-mand fleets 2 : The lower half of the table presents three axiom patterns for making statements about classes and individuals ( a , b denote individuals); examples of their usage are as follows: Note that since class expressions contain classes as constituents, they can become indefinitely com-plex. For instance, given the intersection A u B we could replace atomic class A by a constructed class, thus obtaining perhaps ( A 1 u A 2 ) u B , and so on ad infinitum . Moreover, since most axiom patterns contain classes as constituents, they too can become indefinitely complex.
 This sketch of knowledge representation in OWL illustrates the central distinction be-tween logical functors (e.g., IntersectionOf , SubClassOf ), which belong to the W3C standard (Motik et al., 2010), and atomic terms for in-dividuals, classes and properties (e.g., Nelson , Admiral , VictorOf ). Perhaps the fundamental de-sign decision of the Semantic Web is that all do-main terms remain unstandardised , leaving ontol-ogy developers free to conceptualise the domain in any way they see fit. In the consensus verbali-sation model, this distinction is reflected by divid-ing linguistic resources into a generic grammar for realising logical patterns, and an ontology-specific lexicon for realising atomic terms.

Consider for instance C v D , the axiom pat-tern for class inclusion. This purely logical pattern can often be mapped (following ACE and SOS) to the sentence pattern  X  X very [C] is a [D] X , where C and D will be realised by count nouns from the lexicon if they are atomic, or further grammatical rules if they are complex. The more specific pat-tern C v  X  P.D can be expressed better by a sen-tence pattern based on a verb frame ( X  X very [C] [P]s a [D] X ). All these mappings depend entirely on the OWL logical functors, and will work with any lexicalisation of atomic terms that respects the syntactic constraints of the grammar, to yield ver-balisations such as the following (for axioms 1-3 above): The CNLs we have cited are more sophisticated than this, allowing a wider range of linguistic pat-terns (e.g., adjectives for classes), but the basic assumptions are the same. The model provides satisfactory verbalisations for the simple examples considered so far, but what happens when the ax-ioms and atomic terms become more complex? The distribution of content among axioms depends to some extent on stylistic decisions by ontol-ogy developers, in particular with regard to ax-iom size. This freedom is possible because de-scription logics (including OWL) allow equiva-lent formulations using a large number of short axioms at one extreme, and a small number of long ones at the other. For many logical patterns, rules can be stated for amalgamating or splitting axioms while leaving overall content unchanged (thus ensuring that exactly the same inferences are drawn by a reasoning engine); such rules are often used in reasoning algorithms. For instance, any set of SubClassOf axioms can be amalgamated into a single  X  X etaconstraint X  (Horrocks, 1997) of the form &gt; v M , where &gt; is the class containing all individuals in the domain, and M is a class to which any individual respecting the axiom set must belong 3 . Applying this transformation even to only two axioms (verbalised by 1 and 2 below) will yield an outcome (verbalised by 3) that strains human comprehension: An example of axiom-splitting rules is found in a computational complexity proof for the descrip-tion logic EL + (Baader et al., 2005), which re-quires class inclusion axioms to be rewritten to a maximally simple  X  X ormal form X  permitting only four patterns: A 1 v A 2 , A 1 u A 2 v A 3 , A 1 v  X  P.A 2 , and  X  P.A 1 v A 2 , where P and all A N are atomic terms. However, this simplification of axiom structure can be achieved only by introduc-ing new atomic terms. For example, to simplify an axiom of the form A 1 v  X  P. ( A 2 u A 3 ) , the rewriting rules must introduce a new term A 23  X  A 2 u A 3 , through which the axiom may be rewrit-ten as A 1 v  X  P.A 23 (along with some further ax-ioms expressing the definition of A 23 ); depending on the expressions that they replace, the content of such terms may become indefinitely complex.
A trade-off therefore results. We can often find rules for refactoring an overcomplex axiom by a number of simpler ones, but only at the cost of in-troducing atomic terms for which no satisfactory lexical realisation may exist. In principle, there-fore, there is no guarantee that OWL ontologies can be verbalised transparently within the assump-tions of the consensus model. We have shown that OWL syntax will permit atomic terms that cannot be lexicalised, and ax-ioms that cannot be expressed clearly in a sen-tence. However, it remains possible that in prac-tice, ontology developers use OWL in a con-strained manner that favours verbalisation by the consensus model. This could happen either be-cause the relevant constraints are psychologically intuitive to developers, or because they are some-how built into the editing tools that they use (e.g., Prot  X  eg  X  e). To investigate this possibility, we have carried out an exploratory study using a corpus of 48 ontologies mostly downloaded from the University of Manchester TONES repository (TONES, 2010). The corpus covers ontologies of varying expressivity and subject-matter, including some well-known tutorial examples (pets, pizzas) and topics of general interest (photography, travel, heraldry, wine), as well as some highly technical scientific material (mosquito anatomy, worm on-togeny, periodic table). Overall, our sample con-tains around 45,000 axioms and 25,000 atomic terms.

Our first analysis concerns identifier length, which we measure simply by counting the num-ber of words in the identifying phrase. The pro-gram recovers the phrase by the following steps: (1) read an identifier (or label if one is provided 4 ); (2) strip off the namespace prefix; (3) segment the resulting string into words. For the third step we assume that word boundaries are marked either by underline characters or by capital letters (e.g., rule that holds (in our corpus) almost without ex-ception. The analysis (figure 1) reveals that phrase lengths are typically between one and four words (this was true of over 95% of individuals, over 90% of classes, and over 98% of properties), as in the following random selections:
Our second analysis concerns axiom patterns, which we obtain by replacing all atomic terms with a symbol meaning either individual, class, property, datatype or literal. Thus for example the axioms Admiral v Sailor and Dog v Animal are both reduced to the form C A v C A , where the symbol C A means  X  X ny atomic class term X . In this way we can count the frequencies of all the logical patterns in the corpus, abstracting from the domain-specific identifier names. The results (ta-ble 2) show an overwhelming focus on a small number of simple logical patterns 5 . Concern-ing class constructors, the most common by far were intersection ( C u C ) and existential restric-tion (  X  P.C ); universal restriction (  X  P.C ) was rel-atively rare, so that for example the pattern C A v  X  P A .C A occurred only 54 times (0.1%) 6 .
The preference for simple patterns was con-firmed by an analysis of argument struc-ture for the OWL functors (e.g., SubClassOf , IntersectionOf ) that take classes as arguments. Overall, 85% of arguments were atomic terms rather than complex class expressions. Interest-ingly, there was also a clear effect of argument po-sition , with the first argument of a functor being atomic rather than complex in as many as 99.4% of cases 7 . Our results indicate that although in principle the consensus model cannot guarantee transparent re-alisations, in practice these are almost always at-tainable, since ontology developers overwhelm-ingly favour terms and axioms with relatively sim-ple content. In an analysis of around 50 ontologies we have found that over 90% of axioms fit a mere seven patterns (table 2); the following examples show that each of these patterns can be verbalised by a clear unambiguous sentence  X  provided, of course, that no problems arise in lexicalising the atomic terms:
However, since identifiers containing 3-4 words are fairly common (figure 1), we need to consider whether these formulations will remain transpar-ent when combined with more complex lexical en-tries. For instance, a travel ontology in our cor-pus contains an axiom (fitting pattern 4) which our prototype verbalises as follows: The lexical entries here are far from ideal:  X  X as as boundary X  is clumsy, and  X  X he West Yorkshire Greater Manchester Boundary Fragment X  has as many as six content words (and would benefit from hyphens). We assess the sentence as ugly but understandable, but to draw more definite conclu-sions one would need to perform a different kind of empirical study using human readers. We conclude (a) that existing ontologies can be mostly verbalised using the consensus model, and (b) that an editing tool based on relatively simple linguistic patterns would not inconvenience on-tology developers, but merely enforce constraints that they almost always respect anyway. These conclusions are based on analysis of identifier and axiom patterns in a corpus of ontologies; they need to be complemented by studies showing that the resulting verbalisations are understood by ontol-ogy developers and other users.
 The research described in this paper was un-dertaken as part of the SWAT project (Seman-tic Web Authoring Tool), which is supported by the UK Engineering and Physical Sciences Re-search Council (EPSRC) grants G033579/1 (Open University) and G032459/1 (University of Manch-ester). Thanks are due to the anonymous ACL re-viewers and to colleagues on the SWAT project for their comments and suggestions.

