 Traffic flow forecasting is a vital component of transportation planning, traffic control, intelligent transportation systems, and forecasting accurate traffic flow conditions has long been considered as an active approach to regional traffic con-trol [ 16 ]. The approach can be broadly classified under: i) short-term and ii) long-term traffic flow forecasting [ 1 ]. Long-term forecasting provides monthly or yearly traffic flow forecasting conditions and is commonly used for long-term planning of transportation or construction. Short-term forecasting focuses on making pre-dictions about traffic flow changes in the short-term, typically within one hour. In particular, short-term traffic volume forecasts support proactive dynamic traffic control. As a result, prediction technologies have gotten the attention of traffic engineers and researchers. A wide variety of techniques have been applied in the context of short-term traffic flow forecasting, depending upon the type of data that are available and the potential end use of the forecast. These techniques include moving average methods [ 17 ], k-nearest-neighbor methods [ 8 ], autore-gressive MA (ARIMA) model or seasonal ARIMA (SARIMA) [ 19 , 20 ], neural networks (NNs) [ 9 ], and combining technologies such as DA approach [ 18 ]. Development of traffic flow forecasting models relies mainly on historical and current traffic flow data. The problem of traffic flow forecasting is a standard time series prediction task and the goal is to approximate the function that relates future values of traffic flow to previous and current observations of traffic flow, and the short-term traffic flow predictor represents a multi-input-single-output system, which relates the past traffic flow conditions to the future traffic flow conditions. Recent literatures have been concentrating on three aspects: i). pre-senting new or enhanced approaches [ 2 , 11 , 15 ], ii). merging efficient forecasting However, it becomes clear that there are a few major problems with the existing methods. Firstly, those methods use data collected from motorways and freeways, where the change of traffic flow seems quite stable. Secondly, they use data collected from single point sources, which are limited in a more complicated situation. Thirdly, existing forecasting methods do not consider the temporal data as complex interactions in densely populated urban road networks and fresh comprehensive enough as well. Precisely, short-term traffic forecasting at urban arterials forms a more complex problem than freeway predictions due to constraints such as signalization, and urban flow collections contain lots of data points that previous models cannot handle their relations. The irrelevant traffic junctions may get the similar change rule and present the same flow pattern. The traditional methods do not consider the similar flow patterns and mine these similarities as well, they are often narrow in the angle of the data source and some of them are modeled so complicated, these reasons make them not appear to get practical application.
 To solve those problems, we propose a Plane Moving Average (PMA) algo-rithm. The main idea of PMA is that it uses the closest flow data to make predictions through a new perspective. The PMA model is simple but effective and builds upon two models: the Individual Model and the Similarity Model. The first one, focuses on individual traffic junction using its own past vehicle volumes, the second one utilizes all traffic junctions X  vehicle flow data based on the customized WWL (Where We Like) method which is a kind of Top-K tech-nology and both of two sub-models use PMA algorithm to make predictions. Finally, We combine these two forecasting results by neural network to produce a more accurate predictor.
 The contributions of this paper can be summarized as follows.  X  We propose a Plane Moving Average to predict the short-term traffic flow. It is much simple but effective and uses a new angle of flow patterns in making prediction.  X  To the best of our knowledge, PMA is the first model that takes similar-ity flow patterns into account and integrates both individual and similarity outcomes.  X  We perform extensive experiments using a real data set and the results demonstrate the effectiveness of PMA.
 The rest of this paper is organized as follows. Section 2 reviews related work. Section 3 provides a brief description of preliminary preparation. Section 4 designs and describes the PMA Modeling of the short-term traffic flow pre-dictor. In Section 5, the performance is discussed. Finally, the discussion of the conclusions and the future visions, regarding short-term traffic flow predictor design using the PMA with WWL algorithm, is presented in Section 6. For the past two decades, a considerable effort has made to develop efficient traffic prediction methods, which is backed by a huge number of literatures in this field. In what follows, we will describe three categories of studies that are most closely related to us.
 vides monthly or yearly flow forecasting conditions that is commonly used for long-term planning. Papagiannaki explores the properties of the network traf-fic, and propose a methodology that can be applied to forecast network traffic volume months in the future.
 period of time. Some of these methods make prediction with only the individual the well-known time series model ARIMA and SARIMA to make vehicular traf-fic flow prediction [ 19 , 20 ]. Tan et al. proposes an aggregation model (DA) that is elaborated using different fitting functions: the moving average (MA), exponential smoothing (ES), ARIMA and simple neural network for evaluation of prediction values [ 18 ]. Chan et al. provides a neural-network-based models for short-term traffic flow forecasting using a hybrid exponential smoothing and levenberg? Cmarquardt algorithm [ 3 ]. Davarynejad describes a multi-phase time series archi-multiple factors more or less, such as travel speed, weather conditions and geo-graphical features of a road. Given the travel speed and traffic volume of a road segment, more accurate predicting model can be built.
 to improve the final forecasting results [ 4 , 5 , 10 ]. Chan et al. proposes a simple but effective training method to pre-process traffic flow data before training purposes and the pre-processing approach intends to aid the back-propagation algorithm to develop more accurate neural networks [ 4 , 5 ]. Gao et al. decomposes the original data into burst data traffic and non-burst data and be predicted, respectively [ 10 ]. These techniques indicate that the flow predictor based on these pre-processed data outperform those that are developed based on original data. In this section, we will define a few terms that are required for the subsequent dis-cussion and describe our modeling strategy for the vehicle traffic flow forecasting. Definition 1 (Sampling Flow). The traffic flow data are collected all the time, each sampling flow refers to a total number of passed vehicles during a certain period of time. Unaffectedly, we choose  X t minutes per period that the traffic flow is collected within the time interval ( t  X   X t, t ] , an integer and stands for the traffic volume in the No.t periods.
 Definition 2 (Flow Pattern). For each sampling flow, q ( t series. By analyzing the observed traffic flow data, it can be found that the traffic flow pattern is almost cyclical every day. Thus, two relevant time series are con-structed as the period series s a ( t ) and the daily series I. s ( t ) is a set that includes the previous k a periods traffic flow data before
II. s b ( t ) is a set that includes the previous traffic flow record within the same time interval on k b days before q ( t ). We use a new PMA model to solve the short-term traffic flow prediction problem. PMA is an improvement algorithm of moving average(MA). Specifically, PMA runs on the plane flow pattern (a 2-dimensional data structure).
 In order to take into account both individual and similar flow patterns to make the prediction, we propose two models, an Individual Model to model the individual flow patterns by using its own past traffic flow data and a Similarity Model to model the similar flow patterns by using alike historical traffic flow data. They are combined by using neural network to generate a predictor. What calls for special attention is that these two models share the PMA algorithm. Next we will present data construction methods about similarity model, individ-ual model, the PMA training approach and the model integration.
 4.1 Individual Model We call s a ( t ) the horizontal flow pattern and call s b propose a new perspective to build a plane flow pattern (PFP) (see Figure 1). There are s a ( t ), s b ( t ), k a periods before s b ( s ( t  X  1440 k b ) combined together to build plane flow pattern (PFP) and each two adjacent value q  X  X  timestamp differs either of  X t minutes and a day. We may find out it is possible that k a  X t probably equals to 1440 which means that a typical sampling flow will appear more than once in PFP and get reutilization. we will use y ( i, j ) to refer the i th line of the j th pattern. In order to describe PMA algorithm, we must define two factors in the first place.
 Pattern Weight. Each one of flow pattern could be benefited to the forecasting accuracy, so we define a kind of pattern weight  X  to describe different pattern X  X  contribution to the target predictions. where L is the length of the PFP (see Figure 2) and  X  refers to  X  is the target day number of the data set.
 PMA Forecasting Value. The computing method is similar to MA, a kind of simple smoothing technique.
 where W is the width of the PFP (see Figure 2). Each PMA forecasting value corresponds to a specific PMA size L i  X  W i .
 For example, consider this PFP patterns and four kinds of s b patterns, updown adjacent patterns are one day apart, the target value is 4. If we simply use flow pattern make the average forecasting value, we receive value 2 and 9 but none of them is closed to 4. Using pattern weight we will get two weight 0.478 and 0.639, and the final forecasting value would change to (10  X  0 . 478 + 8 Obviously, 4.946 is the nearest value.
 Algorithm 1. PMA Algorithm In designing PMA training approach, the PMA size in the training set is an important feature that needs to be carefully chosen. The PMA algorithm is detailed in Algorithm 1. To obtain a PMA size that is capable of generalizing and performing well with new cases, data samples are usually subdivided into two sets: 1) a training set, 2) a testing set. 4.2 Similarity Model In most cases, time series in the same category show the similar change rule, espe-cially in a certain field (e.g., same area). For example, a flow that over 1000 vehi-cles /h must not happen in a small town X  X  main road. Therefore, we put forward a hybrid distance calculation criterion which combined Euclidean Distance and Pearson Correlation Coefficient to evaluate time series similarity, and select top-N similar time series to make predictions. Notice that the comparable time series should be at least one day before and if not, no known value could be available. WWL (Where We Like) Algorithm. Between each two time series(equilong), we come up with a hybrid distance calculation which combined Euclidean Dis-tance and Pearson Correlation Coefficient as the distance metric to define their similarities. Minimizing these two metrics can both ensure a highly similar level about traffic volume and landmark as well. Firstly, filter time series by calculat-ing Pearson Correlation Coefficient pcc ( s i ,s j )= that pcc value is over 0.8 to obtain the highly closed shape. Secondly, calculate Euclidean Distance by equation ed ( s i ,s j )= || s i  X  s j || fic volume is as much as close and order them in the following way. where s ( t ) is the target flow pattern, s i ( t ) stands for the to s ( t ) and the number d is the parameter of WWL algorithm. Remember that each s i ( t ) should be at least one day before.
 the flow pattern. Hence, for ease of running PMA, we put them bottom-top in a straight line according to the order of similarity by WWL algorithm just the same as PFP individual ( t ) does in individual model and PMA algorithm is used to produce its forecasting results. 4.3 Integration Choosing a proper model to merge these two forecasting results is the primary task. There are many popular ways can be applied to do combination, such as Linear Regression, Logistic Regression, Neural Network, etc. For the effectiveness and simplicity, we choose neural network to integrate these two models that we have proposed.
 predicting values, P w =( p w 1 ,p w 2 , ..., p w m )( w = 1 for similarity model and for individual model), where m is the number of the time-ordered sampling results, and p w i is the forecasting value of time m . Certainly, we have a series of a data set like ( P 1 , P 2 , R ).
 the output layer are tansig and purelin , respectively. We use the Levenberg-Marquardt BP algorithm as the learning algorithm because LM algorithm has the quickest convergence and it is the best learning rule in this case. where n is the number of neurons in hidden layer and h i is the hidden layer output and net is the final output. Although there is no precise rule on the optimum size of the training set and testing set, it is recommended that the training set should be larger. We have made extensive experiments to evaluate the performance of the pro-posed PMA model by using a real traffic flow data set. In this section, we will first explain the dataset and experimental settings, followed by the evaluation metrics to measure the performance and then, show the experimental results. 5.1 Study Area The dataset used in the experiments consists of real vehicle passage records from April 1, 2013 to May 5, 2013 that collected from the traffic surveillance system of a major metropolitan area [ 6 ]. The dataset contains 140,440,933 real vehicle passage records, involves totally 308 camera locations on the main roads and we divide it into two parts, training set and testing set. The training set for the above models covers the data from April 1, 2013 to May 2, 2013 and the testing set is the traffic records from May 3 to May 5, 2013. We average the experi-mental results of all camera locations. The traffic flow data were aggregated and averaged into  X t minutes per period. 5.2 Pre-processing We pre-process the dataset to form the flow patterns, counting the number of vehicles in each peroid of time, [ 18 ] suggests setting time interval a sampling flow is missing (always be 0 in this case) due to the camera X  X  break or any other reason, we fix it by averaging the adjacent values. After the pre-processing, we get a total of 10780 horizontal flow patterns and 7392 vertical flow patterns and we predict traffic flow of future one period in the experiments. 5.3 Goodness-of-Fit Statistics We use two widely employed evaluation statistics to assess the forecast accuracy of the results. 1) The Root Mean Squared Error (RMSE) is a way to measure the average error about the forecasting results and is calculated as 2) The Mean Absolute Percentage Error (MPAE) is a way to measure the proportional error about forecasting results and is calculated as Here, y n and  X  y n are the observed and the forecast values of observation tively, and N is the total number of observations.
 5.4 Evaluation of PMA We evaluate performance of PMA algorithm in these two sub-models, individual model and similarity model, and their integrations. For each experiment, we make predictions for all camera locations and report the average of the evaluation statistics.
 plane series) in (1) and (2) of individual model and similarity model. By reason of the RMSE could reflect the absolute error in traffic volume, we choose it to help training our models. Figure 3(a) and (b) show the RMSEs of the individual models and similarity models with different values of L, W is calculated based on 24 observations (60 mins, one day). Based on the results showed in the picture, we choose L =6 ,W = 2 for individual model and 7 ,W = 2 for similarity model as the optimal PMA size, when the RMSE is the smallest, respectively.
 bers of neurons in the hidden layer are trained. The number of neurons varies from 4 to 12, and the RMSEs are calculated for both the training set and the testing set. According to its generalization ability on the testing set, the lower the value of the RMSE is, the better the network model is. Figure 4(a) shows the curve of the RMSE versus the number of hidden-layer neurons. In Figure 4(a), we find that the best number of hidden-layer neurons is 8. Therefore, a 2-8-1 NN model is selected for the further predictions. Figure 4(b) shows performance comparison among two sub-models and their integration. We can see that the RMSEs are significantly reduced and MPAEs are modestly improved. 5.5 Comparison of Results Several single-source models including the na  X   X ve, MA, ARIMA, and NN model, and an aggregation model are applied to time series s a ( their predictions on the testing sets with the PMA model. 1) Na  X   X ve (or no-change) model for traffic flow forecasting has the simplest form where  X  q Na ( t ) is the forecast value at time interval 2) MA Model : An MA of order is computed by where k is the number of terms in the MA [ 12 ]. The MA technique deals only with the latest k periods of known data; the number of data points in each average dose not change as time continues. 3) ARIMA Model : A general ARIMA model of order ( r, d, s order of differencing. and orders r and s are the AR and MA operators. 4) Artificial NN : It is a single-source model that used for comparison with the PMA. The NN model is used to fit the nonlinear relationship The inputs of NN model are the traffic flow records at previous intervals, and its output is the prediction of traffic flow at time interval number of inputs l and the number of hidden neurons in the NN model are also optimized by experimentation. 5) Aggregation Model (DA) : It integrates three submodels (MA, ES and ARIMA) using simple neural network to combine the forecasting results. Note that different models (na  X   X ve, MA, ARIMA, NN, DA) may need a differ-ent length of historical data. Hence, the sample size should be properly chosen for each model. For example, the length of time of the training data for the na  X   X ve model is no more than one hour before the forecasting time, while that for the training data for the ARIMA model at least covers two days before. For each model, we choose the parameters by observing the best fitting or forecasting and compare their forecasts on the same test sets.
 and MAPEs of testing set with the different forecasting models. For the Na  X   X ve, we simply use the last value as the forecasting value. As to the MA model, we set k = 3 which is the most optimal parameter. For the ARIMA model, we set parameter as (1 , 1 , 0) where RMSE is the smallest. We set in the ES model to build DA approach. For the last one, we select a 3-12-1 NN model for comparison. Figure 5 (a) and (b) show the predictions that resulted from the PMA model are better than the predictions that resulted from the other five models. In this paper, aiming at the repeatable pattern of the similar traffic flow time series that previously methods did not consider, PFP has been constructed, a PMA algorithm and an aggregation strategy have been proposed to build a short-term traffic flow predictor. The PFP can be easily constructed from the source time series and the forecasting value of the PMA model can be automatically obtained by a computer program once the parameters are specified. Therefore, this new proposed approach is not a time-consuming but, rather a feasible job. collected on individual model as well as similarity model. By analyzing the fore-casting performance of the na  X   X ve, MA, ARIMA, NN, DA and PMA, we have shown that the PMA can provide more accurate results than those of the other models. machine learning, not limited to digital correlation, it is possible that we can consider the geographic correlation and even each flow movements to describe more potential characteristics and relationships of traffic flow. This problem deserves further study.

