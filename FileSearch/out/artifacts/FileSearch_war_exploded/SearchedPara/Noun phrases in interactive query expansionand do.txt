 Olga Vechtomova
Abstract The paper presents several techniques for selecting noun phrases for interactive query expansion following pseudo-relevance feedback and a new phrase-based document ranking method. A combined syntactico-statistical method was used for the selection of phrases for query expansion. Several statistical measures of phrase selection were evaluated.
Experiments were also conducted studying the effectiveness of noun phrases in document ranking. One of the major problems in phrase-based document retrieval is weighting of overlapping and non-contiguous word sequences in documents. The paper presents a new method of phrase weighting, which addressed this problem, and its evaluation on the TREC dataset.

Keywords Interactive query expansion . Noun phrases . Document ranking 1. Introduction
Phrases received much attention in information retrieval research throughout its history. This interest can be partially attributed to the fact that phrases typically have a higher information content and specificity than single words, and therefore represent the concepts expressed in text more accurately than single terms. Ideally document and query representations should be mapped directly and unambiguously to the underlying concepts conveyed in text. However, models, such as probabilistic (Robertson and Sp  X  arck Jones, 1976) and vector-space (Salton et al., 1975) rely on the use of single terms and are based on strong term independence assumptions to make them computationally tractable. Experimentally these models have consistently demonstrated high performance results with a variety of large test collections in the evaluation exercises such as TREC (Voorhees and Buckland, 2004). Nevertheless, many attempts have been made to introduce phrases into the retrieval process, but so far with mixed and inconclusive results. Our motivation for investigating further the use of phrases in IR was driven by several gaps in the previous research: first, no systematic comparison of various statistical methods of phrase selection for query expansion was conducted; secondly, little was done to explore the usefulness of phrases vs. single terms in the process of interactive query expansion; and finally, weighting of overlapping and non-contiguous phrases is one of the major and yet unsolved problems of phrase-based IR. The work reported in this paper is aimed at filling these gaps through a systematic evaluation of phrase-based methods on the TREC dataset.

Phrases, also referred to as Multiword units (MWUs), 1 comprise a wide variety of lexical associations with various degrees of idiomaticity or compositionality, such as named entities ( X  X ony Blair X ,  X  X nited Nations X ), nominal compounds ( X  X musement park X ,  X  X ree kick X ) and phrasal verbs ( X  X each out X ,  X  X ick the bucket X ). Although MWUs can belong to different lexical categories, our focus is on nominal MWUs, primarily because nouns and noun phrases are considered to be more content-bearing than other syntactic categories. Also, there is some evidence from previous research that noun phrases hold more promise for query expansion in IR (Xu and Croft, 1996).

Query expansion is a widely used technique in IR. In automatic query expansion (AQE) additional terms or phrases are added to the original query by the system, whereas in inter-active query expansion (IQE) users select terms or phrases manually. Terms and phrases for query expansion can be extracted using statistical or linguistic methods from a variety of sources, the most common being top-ranked documents in the retrieved set (blind or pseudo-relevance feedback) and documents judged relevant by the user in the retrieved set (relevance feedback). Single-term interactive query expansion techniques were extensively evaluated in the past (Beaulieu and Jones, 1998; Ruthven, 2003). Some researchers investigated the use of phrases in IQE (see Section 2.3), however no systematic comparison of different types of phrases in IQE has been conducted so far. In this work we are interested in studying how different types of phrases can help users to interactively enhance their initial search formulation.

This paper has two foci: 1. To investigate the utility of multiword units (MWUs) and noun phrases in interactive query expansion; 2. To study the effectiveness of noun phrases in the document ranking.
 The main goal of the first focus of this study was to investigate the following hypotheses:
Hypothesis 1: Nominal MWUs are better candidates for interactive query expansion than single terms.

Hypothesis 2: Nominal MWUs which exhibit strong degree of stability in the corpus are better candidates for interactive query expansion than noun phrases selected by the statistical characteristics of the individual terms they contain.

We used a combined syntactico-statistical approach for selecting nominal MWUs for interactive query expansion. In the first selection pass, noun phrases were obtained using a part-of-speech (POS) tagger and a noun phrase chunker. In the second pass, statistical measures were applied to select strongly bound MWUs. In particular, we have experimented with two statistical measures to select MWUs from text: the C -value (Frantzi and Ananiadou, 1996) and the Log-Likelihood (Dunning, 1993). Selected MWUs were then suggested to the user for interactive query expansion. Techniques developed for the selection of MWUs are presented in Section 3. Experiments investigating the above hypotheses and evaluation results are described in Sections 5 X 7.

The goal of the second focus of this work is to study the effectiveness of noun phrases in document ranking. We contribute to the previous findings in the field by further analysing the problems of phrase weighting and suggesting new ways of addressing them. The following hypothesis was investigated:
Hypothesis 3: Ranking documents using noun phrases leads to better performance than ranking documents by single terms.

We have developed a new method of phrase-based document ranking, which specifically addresses the problem of weighting overlapping phrases in documents, which in statistical
IR models like probabilistic ones (Sp  X  arck Jones et al., 2000) leads to the problem of the over-inflation of the document score. The method is described in detail in Section 4. 2. Previous research 2.1. Statistical vs. syntactical phrases
Hypotheses that phrases are better contents discriminators than single terms have been studied since the beginning of research on automated IR in the 60s. Simple statistical co-occurrence based techniques for identification of phrases have always been rivaled by NLP-based tech-niques. The main considerations in favour of NLP were: (1) it may have better techniques to uncover meaningful linguistic phrases and (2) it can capture the syntactical relationships between words.

Statistical phrases are typically short-span collocations extracted from text using differ-ent statistical measures. Syntactical phrases are identified using a variety of NLP methods ranging from simpler techniques such as part-of-speech tagging, aimed at identifying word-sequences of a certain syntactic pattern like adjective + extended N -grams and shallow syntactic parsing, attempting to discover uniform semantic units underlying various forms of expression.

At the early stages the motivation for research on automatic phrase identification came from the determination to emulate human indexing. The belief was that multiword descriptors of the kind assigned to documents by human indexers are more useful than single terms. One used very elaborate NLP techniques to identify instantiations of thesaurus concepts and their semantic relationships in documents. Despite the fact that no retrieval evaluation was conducted, the research suggested that the structure of the descriptors used for indexing was not flexible enough for effective query-document matching. Another historically important piece of research was undertaken by Salton and Lesk (1968), whose technique consisted in identification of thesaurus terms in text supported by syntactic analysis. The comparison of performance results for syntactical phrases and for statistical phrases, showed that there was no performance improvement in using syntactical phrases over simple statistical phrases.
Statistical phrases were defined in their experiments as co-occurrences of constituents of thesaurus descriptors in the same sentence.

One of the most comprehensive early evaluations of phrases in IR was undertaken by Fagan (1987, 1989). The main focus of his experiments was systematic evaluation of statistical phrases under different parameter settings, such as distance between their constituents and their frequency values. The evaluation results showed that performance for statistical phrases was in general better than for single terms. He then compared performance for statisti-cal phrases with performance for syntactical phrases, which he obtained using syntactic parsing, stemming and normalisation to head-modifier pairs. The evaluation showed that phrases. When he analysed earlier work taking into account his findings, he concluded that the same pattern, statistical phrases  X  syntactical phrases the experiments. The performance gains from the use of statistical phrases obtained in his experiment were in the range of 17%  X  39%. He concluded that syntactical phrases gave poor performance because queries and documents did not share exactly the same phrases.
Among the reasons for the systems X  inability to match documents and queries by syntactic phrases, Fagan pointed at the low collection frequency of the best phrases and the fact that the documents involved were abstracts. Stzalkowski and Perez-Carballo (1999) pointed to another main reason for this, namely, the limited amount of information about the user X  X  information need conveyed by the queries.

It is worthwhile to note that the above earlier studies of phrases in IR were undertaken on rather small collections. The last decade in IR research saw two major changes: (1) statistical models using single term weighting have been refined to achieve very high and robust perfor-mances; (2) the size of test collections has grown dramatically. Some of the phrase indexing and search techniques which used to work well with the old retrieval techniques on small collections, no longer give positive results. Fagan X  X  experiments were later replicated by Hull et al. (1997), leading to only marginal performance gains from using syntactical phrases.
Mitra et al. (1997) conducted a large-scale evaluation of both syntactical and statistical phrases. By statistical phrases they understood contiguous bigrams of non-stopwords which occur in at least 25 documents. Syntactical phrases were defined in their experiments as specific POS-tag sequences (e.g. Noun-Noun, Adjective-Noun). Their studies demonstrate that overall both statistical and syntactical phrases have very little effect on performance.
Syntactical phrases showed marginally better performance than statistical phrases when used on their own (i.e. without single terms) in retrieval. An interesting finding, which emerged from this study, is that phrases tend to improve precision at lower document cut-off points of the ranked document sets, and have little or no effect on precision at higher cut-off points.
They suggested that phrase search may not be a  X  X recision-enhancing technique X , but rather a  X  X ecall-enhancing technique. X 
Evans and Zhai (1996) developed an indexing technique using syntactical phrases. They used a hybrid syntactico-statistical method to identify four types of phrases as indexing units: (1) lexical atoms, e.g.  X  X ot dog X ; (2) head-modifier pairs; (3) subcompounds and (4) cross-preposition modification pairs. Their method was evaluated against CLARIT as the baseline, and showed moderate improvements in precision at top ranks. Their method primarily focused on identifying linguistically correct and stable phrases for document indexing, and less so on the problems of weighting phrasal indexing units. 2.2. Phrase weighting
We believe that one of the major and yet unsolved problems of phrase-based techniques is weighting. Phrases like single terms vary in their content-discriminating ability, so it may be possible to treat a phrase in the same way as a single term, and calculate, for example, its inverse document frequency ( idf ) in the same manner. However phrases also have other characteristics, which single terms do not have, and which may need to be reflected in their weighting. One of the most prominent characteristics of phrases is the degree of the stability in the corpus. We distinguish the following types of phrases by their stability in the corpus: 1. Combinations of terms which occur only with each other in many document collections, for example  X  X urkina Faso. X  2. Combinations of terms which frequently occur together as a phrase and whose syntactic structure does not permit any changes (i.e. intervening words, change of word order), for example  X  X musement park, X   X  X tainless steel, X   X  X crylic paint. X  Typically, one or all terms in such phrases may form lexical-syntactic constructions with other terms as well. If the expression has some degree of idiomaticity (i.e. the phrase as a whole has a different meaning than the combination of individual meanings of its parts), for example  X  X ad
Cow Disease, X  we may not be able to substitute all or some of the words with related or synonymous words without the radical change of meaning. For example we cannot substitute  X  X ad X  with  X  X razy X  in the above example. 3. And finally combinations of terms which have strong degree of flexibility, namely allow intervening words, change of word order, substitution of phrase components with syn-onyms, hypernyms or hyponyms. For example the exact meaning underlying the phrase  X  X nimal protection X  can be also represented in text as  X  X rotection of animals. X  The word  X  X nimal X  can be substituted with hyponyms, such as  X  X eptile X  or  X  X ammal. X 
The above categorisation of phrases has the following implications for IR:  X  If the search by one term is highly likely to match the entire phrase (which is typically the case with the phrases of the first category and some phrases of the second category above), then applying phrase search techniques will not be useful.  X  If we search by a phrase belonging to the third category, it may be beneficial to relax search constraints to accommodate possible lexical-syntactic variations of the phrase. With this category of phrases, it may even be useful to relax search constraints to allow match on terms separated by longer distances, in order to capture topical relations between terms, rather than only phrasal relations.

Can the phrase-search be successfully integrated into the IR models, which were designed for single-term indexing and searching? Strzalkowski (1995) argued that there are three main problems in applying measures designed for single terms, such as tf.idf , for term sets con-taining both single terms and phrases: (1) single terms normally have high within-document frequency, therefore they tend to get higher weight; (2) whereas phrases, which typically have lower within-document frequency, may receive lower weights; (3) when a document contains both a phrase and a single term which is also part of the phrase, inter-term depen-dencies emerge. It should be noted that the first two problems apply not only to phrases but to rare single terms as well. Strzalkowski developed techniques for handling the first two problems. Some other IR models also handle the first two problems successfully, for exam-ple, a probabilistic model of IR (Sp  X  arck Jones et al., 2000) avoids problems like these by progressively reducing the contribution made by the repeating occurrences of a query term to the document score, on the assumption of verbosity. 2
Another question is whether idf can be applied to phrases in the same way as to single terms. Pickens and Croft (2000) conducted an extensive analysis of the use of idf for weighting phrases, and concluded that phrases behave simply as medium to rare words, with idf having the same discriminatory value for them as for the single terms of this category. Therefore, it can be argued that traditional measures like idf can be applied to phrases in the same way as to single terms.

However, the third problem pointed at by Strzalkowski remains unsolved. Robertson et al. (2004) also pointed at the same problem: considering that a query may contain both single terms and phrases, and that some of the single terms may also be part of phrases, then the document matching on the phrase will also match on the single term. As a result both the weight of the phrase occurrence and the weight of the term occurrence will contribute to the document score, artificially inflating it. The solution suggested in Robertson et al. (2004) was to subtract the weight of the single term occurring in the query from the weight of the phrase, containing that term, but the solution did not seem to be effective.

In this paper we examine the phrase-weighting problem further and point at yet another problem that needs to be addressed, namely when the query contains two or more phrases which share one/more terms. In particular this situation can happen following query expan-sion, where the user or the system selects a number of phrases to be added to the original query. Examples of such phrases are:  X  X tainless steel X  and  X  X teel manufacturing. X  If these phrases match the contiguous string  X  X tainless steel manufacturing X  in text, then we face a similar problem of over-inflating the document score as pointed at in Robertson et al. (2004).
This problem, however, cannot be solved using their technique. We propose a new method of phrase matching and weighting in the document, which attempts to address this problem.
The technique is presented in Section 4. 2.3. Use of phrases in interactive query expansion
Phrases can play a useful role in interactive query expansion by helping users to formulate their information need, in particular when the information need is vague, and users do not know what exactly they are trying to find. Marchionini (1992) and Smeaton and Kelledy (1998) have argued that the process of formulating the query is more cognitively demanding on the part of the user than the process of selecting terms and phrases from the list, as the former involves recall, while the latter X  X ecognition. According to cognitive psychology findings, recall is more demanding than recognition. Therefore in real-world search applications users prefer to formulate terse search statements, which tend to produce poor results, and then browse through the retrieved documents, finding more words and phrases and manually reformulating their queries. Automatically extracting related terms/phrases from the documents retrieved by the original query and showing them to the user facilitates this process as the user does not have to go through large amounts of text.

Smeaton and Kelledy (1998) have experimentally studied the usefulness of statistically-selected phrases in interactive query expansion. In particular they compared the effectiveness of user-selected phrases in search with the user-selected single terms and their combinations.
They also looked at the differences between these techniques when used by novice and expert searchers. The best results are obtained when phrases are used in combination with single terms. Also phrase-based query expansion tends to be less effective with the novice searcher than the expert searcher.

Anick and Tipirneni (1999) proposed an interactive query refinement technique using phrases called Paraphrase Search Assistant. Their approach consists in identifying terms in the document set retrieved in response to the user X  X  query, which have a high level of lexical disper-sion, i.e. occur in a large number of lexical compounds. For each such term they show in a drop-down textbox noun phrases containing it in the retrieved set. The authors analysed the logs of system use by users in real-life search scenarios, which show a high uptake of the system.
Bruza et al. (2000) conducted a user-based evaluation study of three search methods: unassisted query-based search, directory-based search and phrase-based query reformulation assisted search. Their results demonstrate that an interactive system for phrase-based query reformulation leads to higher number of relevant documents found by users than the unassisted query-based search system.

The contribution of our study to the field of interactive query expansion is that we sys-tematically evaluated the effect of different types of phrases and single terms on retrieval performance in the large-scale TREC experimentation settings. 3. Query expansion methods
In this section we describe techniques developed for interactive query expansion using MWUs following blind feedback. The idea of blind (pseudo-relevance) feedback is to take top-ranked documents, retrieved using the original user X  X  query, and extract query expansion terms/phrases from them. Our approach is to extract query expansion phrases from query-biased summaries of the n top-ranked documents. We used a method proposed in Vechtomova et al. (2004) of building query-biased summaries which are composed of m sentences selected using two main factors: (1) the idf weights of the original query terms present in the sentence, and (2) information value of the sentence, i.e. the combined tf.idf value of its words.
In our experiments we used 2-sentence summaries of the 25 top-retrieved documents. then apply Brill X  X  rule-based tagger (Brill, 1995) and the BaseNP noun phrase (NP) chunker (Ramshaw and Marcus, 1995) to extract noun phrases from the document summaries. Multi-word units are then selected from the list of obtained noun phrases using the C -value and the
Log-Likelihood. The two subsections below describe these techniques. 3.1. Selection of query expansion phrases using the C -value
MWUs are characterised foremost by relative stability in the corpus. Some of the noun phrases output by the NP chunker are chance word groupings, and not stable MWUs. We were interested in exploring the value of MWUs compared to all noun-phrases in representing useful query expansion concepts to the user. The method of selecting stable MWUs from noun phrases using C -value is outlined below.

Noun phrases output by the NP chunker are ranked by the average idf of their constituent terms. For each phrase we generate the list of all phrases that it subsumes, i.e. contiguous or non-contiguous combinations of words in forward order, including the original complete phrase. For each subphrase, the C -value is calculated. The C -value is a measure of stability of an n -gram in the corpus (Frantzi and Ananiadou, 1996). The C -value formula we used is as follows (Vintar, 2004): where, t ( a ) X  X requency of the phrase a in longer phrases in the corpus; c ( a ) X  X umber of longer phrases in the corpus including a ; freq ( a ) X  X requency of the phrase a in the corpus; length ( a ) X  X umber of words in the phrase a.
All subphrases for a given phrase are ranked by the C -value. The top-ranked subphrase is then used to replace the original phrase in the list of candidate query expansion terms. The original complete phrase may get a higher C -value than any of its subphrases, in which case it is kept without changes.

For example, in our experiment, the bigram  X  X orld Cup X  received the highest C -value out of all its subphrases generated from the phrase  X  X rueling IAU 100-kilometer World Cup X  and as a consequence was selected for the phrase list.

Some of the original noun phrases may contain intervening modifiers which are too specific. The reason why we considered non-contiguous word combinations is to eliminate such modifiers and to obtain the most stable and recurrent word combinations. The problem, however, is that some of the resulting phrases are too general (e.g. original phrase: freak training accident , selected sub-phrase: freak accident ), or may have weak or no semantic relatedness to the original phrase (e.g., original phrase: Moroccan born American runner
Khalid Khannouchi ; selected sub-phrase: born American ). As a result we may have strong topic drift and precision loss at the expense of having linguistically correct MWUs. We did not experiment with using only contiguous word combinations, which might help avoid some of the above problems. However, this remains for future work.

The obtained phrases are then ranked by their C -value, top n of which are shown to the user for interactive query expansion. Table 1 shows the 15 top-ranked phrases selected for the TREC topic  X  X arathon Training. X  3.2. Selection of query expansion phrases using the Log-Likelihood ratio
The Log-Likelihood (Dunning, 1993) has been extensively used for the identification of statistically significant word collocations in text and has shown good results for English.
Where:
N  X  X umber of words in the corpus; f ( a, b ) X  X requency of words a and b appearing together in text; f ( a ) X  X requency of a ; f ( b ) X  X requency of b.

The phrase weighting is done as follows: first, from each phrase output by the NP chunker all contiguous bigrams are derived. For each bigram, its Log-Likelihood score is calculated us-ing the Ngram Statistics Package (Banerjee and Pedersen, 2003). The highest Log-Likelihood score of any bigram derived from the phrase is taken as the phrase weight. Top n phrases ranked using this weighting scheme are shown to the user for interactive query expansion.
This is a rather crude phrase weighting method, but it does reward phrases which contain a strongly bound collocation. 4. Phrase-based document retrieval
Intuitively, searching by phrases, rather than by their constituent terms should lead to better precision. One problem associated with the use of phrases in a statistical IR model, such as probabilistic [2] is that some terms may occur in multiple phrases. For example, assume that there are two phrases in the expanded query:  X  air traffic  X  and  X  traffic control , X  and two documents: the first containing one phrase  X  air traffic control , X  and the second  X  two phrases  X  air traffic  X  and  X  traffic control . X  How should they be weighted? If we calculate weights of each phrase in the document separately and then add them up to get the document score, as is currently done in the probabilistic model for single terms, then both documents would get equal scores. Intuitively, this should not be the case. But then how should the phrase weight be calculated for the first document? The situation gets more complex if we allow for non-contiguous word combinations, i.e. matching the following:  X 1 air 2 traffic 10 control  X  (where numbers denote positions of the words in text). Allowing match on non-contiguous word combinations is good for recall as it relaxes search constraints, but the distance between the phrase elements needs to be reflected in the phrase weight. Therefore, the two main issues to be addressed by the phrase search algorithm are:  X  remove the problem of overlapping phrases;  X  reflect the distance between the phrase elements in the phrase weight.

We have developed a phrase-based document ranking algorithm, which attempts to address the above problems. The algorithm takes a query containing phrases, a set of documents, retrieved by single terms from these phrases, and re-ranks it by using phrase information.
We evaluated this algorithm by using queries, consisting of phrases selected by users in the process of interactive query expansion. The remaining part of this section provides a description of the algorithm, and Sections 5 and 7 give the details of its evaluation.
The first step is to retrieve a set of documents using a best-match document retrieval function 4 and a query consisting of single terms extracted from the query phrases. The next step is to re-rank these documents by using phrases. We take the top 1000 documents per topic in the retrieved set, stem the terms in each document and create a document representation, consisting only of the stemmed occurrences of terms from the query in their original order and their sequential position number in text.

For each query phrase, all possible contiguous and non-contiguous subphrases, including the original phrase, are recorded in a list ranked in descending order of their length. For example, for the query phrase  X  X tainless steel manufacturing, X  the subphrases are shown in Fig. 1.

For each subphrase in the list we use a pattern matching program cgrep (Clarke and Cor-mack, 1995) to extract the minimal spans of text in the document containing all the words of the subphrase in any order. Such minimal matching strings may only contain one oc-currence of each word of the query phrase, for example, cgrep would return  X  # 106 im-plementation # 120 practical , X  but not  X  # 59 implementation # 106 implementation # 120 practical . X  Each time cgrep returns a matching string, it is recorded and removed from the document representation, and the procedure is repeated with the same phrase until no matching string is found, in which case the program attempts to match the next phrase in the list, and so on. We refer to the matching strings containing query phrases as windows . An example of extracted windows for the phrase  X  X ractical im-plementation X  is given in Fig. 2 (the number following the  X # X  sign is the sequential position of the following word in the original document text).

As it can be seen, windows extracted using the above method might overlap. Our approach to eliminating overlaps in windows is a two-step process: (1) rank the windows by their weight (Section 4.1) and (2) remove overlapping words from the lower ranked windows (Section 4.2). 4.1. Window weighting
For each query phrase, the sets of windows in the document containing exactly the same phrase elements, but possibly within different spans and in different order, are grouped into bins . For example, the windows extracted for the query phrase  X  X ractical implementation X  (Fig. 2) are grouped into two bins, as shown in Fig. 3.
All windows in each bin receive the same weight BinWindowWeight , which is calculated using one of the following two methods: Method 1: the actual idf of the query phrase contained in the window.

The idf phrase score is calculated using the following method: first, Okapi  X  X ames X  operator is used to find the number of documents containing all words from the query phrase in any order within the same sentence; if no such documents exist,  X  X nd X  operator is used to find the number of documents containing all words from the query phrase in any order and proximity.
The  X  X nd X  operator represents a more relaxed matching criterion, which is needed because there may exist windows with terms, separated by large spans, and never occurring in the same sentence.

Method 2: the sum of idf values of all words constituting the query phrase instance in the
Where, n X  number of words in the query phrase in the window. 4.2. Removing duplicate windows
After the windows are ranked using one of the window weighting methods described above, we remove overlapping words by doing pairwise comparison of all windows. If two win-dows have overlapping word(s), these words are removed from the lower ranked window. The windows shown in Fig. 2 after the removal of overlapping words are illustrated in Fig. 4.

All windows extracted from the document for every query phrase are then added to the same list, weighted using Eq. (3) or (4), and the overlapping words are removed as described above. For each window we also keep the index of the phrase which was used to extract it. 4.3. Calculating document scores
The document score is based on the weight of the query phrases it contains. Our approach to query phrase weight calculation is inspired by the term weighting approach in Sp  X  arck Jones et al. (2000). The weight of each phrase is calculated using Eq. (5).
 where, wf n is the window frequency in the bin n , which is expressed in Eq. (6) and explained in more detail further in this section; BinWindowWeight n bin n , calculated using one of the methods described in Section 4.1 above; k is the window frequency normalisation factor, which moderates the contribution of the weight of frequent windows. If k = 0 PhraseWeight becomes the sum of BinWindowWeights, if k is large, then the weight is nearly linear to wf ; NF is the document length normalisation factor that is calculated in the same way as in the BM25 document ranking function (Sp  X  arck Jones et al., 2000) and is expressed in Eq. (7). where, span = pos ( l ) X  pos ( f ), where: pos ( l )  X  position number of the last query term in the window w and pos ( f )  X  position number of the first query term in the window w ; p is a tuning parameter to adjust the effect of span on wf . In our experiments 0 results (see Section 7).
 If the query phrase matches only one term in the document, the span is set to 1.
Where, b is a tuning constant, 5 DocLen is the document length in word counts; AveDocLen is the average document length in the document collection.

Instead of counting the actual frequency of windows in the bin to get window frequency ( wf ), we adjust the window count by the window span, thus getting a pseudo-frequency value.
The idea is that the further the words in the window are from each other, the less important this window is considered to be. So, a window containing 2 adjacent words will contribute 1 to the window frequency count, whereas a window containing 2 words within the span of 2, will contribute 0.5 (with p = 1). The idea of using pseudo-frequency weights in the
Eq. (4) above was inspired by a recent work on weighting terms occurring in documents with multiple fields (Robertson et al., 2004), which proposes a method for weighting term frequencies based on the importance of the document field in which they occur.
Document matching score (MS) is calculated as the sum of PhraseWeights of all query phrases in the document, and is expressed in Eq. (8), where occurring in the document.

The MS is applied to re-ranking of the top 1000 documents retrieved using single terms from the query phrases.
 The proposed method was evaluated on the dataset of the High Accuracy Retrieval from
Documents (HARD) track of TREC 2004. The evaluation results are presented in the next section. 5. Evaluation
The testbed for our experiments is the Okapi IR system, which is based on the Robert-son/Sp  X  arck Jones probabilistic model of retrieval (Sp  X  arck Jones et al., 2000). The evaluations of the developed techniques were conducted within the framework of the HARD (High
Accuracy Retrieval from Documents) track of TREC 2004 (Allan, 2005). The HARD track evaluation framework includes an interactive component, which allowed us to test interactive query expansion techniques. The interactive evaluation experiment consists of the following steps: 1. TREC organisers release the search statements (topics) formulated by the annotators (users) in the traditional TREC format (Title, Description and Narrative) to the partic-ipating sites. 2. Participating sites use any information from the topics to produce the initial (baseline) document sets and compose clarification forms for the user to fill in. The purpose of clarification forms is to clarify or refine the annotator X  X  search statement. 3. The annotator (user) fills out clarification forms (with a 3-minute time limit per form). 4. Participating sites use the annotator X  X  feedback to the clarification forms to improve the search (for example by query expansion). The end result is a new document set. 5. The annotator performs relevance judgements of the retrieved sets.
The HARD track test collection includes the document corpus (635,650 documents from eight newswire collections) and 50 topics. In addition to the traditional TREC topic fields of
Title, Description and Narrative, the topics also contained several Metadata fields, describing various additional search criteria, such as  X  X enre, X   X  X etrieval element X  and  X  X amiliarity. X  We did not use any of the metadata in the runs reported here except  X  X etrieval element, X  which takes two values  X  X ocument X  or  X  X assage. X  In all expansion runs for topics with the retrieval element  X  X ocument X  we used the Okapi document retrieval function BM25, and for topics with the retrieval element  X  X assage X  we used the Okapi passage retrieval function BM250.
We conducted two baseline runs using only the information available in the TREC topics: in the run baseTD , we used all non-stopword terms extracted from the Title and Description fields of the topic and in baseT , we used all terms from the Title field only. For both runs we applied Okapi BM25 search function.

Four clarification forms were generated for each topic. Phrases for each clarification form were extracted from 2-sentence query-biased summaries (Vechtomova et al., 2004) of the top 25 documents retrieved in the run baseTD , as Title + Description gave higher performance than Title on HARD 2003 data. 1st clarification form: top n phrases selected using the C -value method (Section 3.1 above); 2nd clarification form: single terms from the phrases displayed in the 1st clarification form; 3rd clarification form: top n phrases output by the NP chunker and ranked by the average idf of their constituent terms; 4th clarification form: top n phrases selected using the Log-Likelihood ratio (Section 3.2 above).

We used the 2nd clarification form to investigate whether users select better terms when they are shown in the context of phrases (in the 1st clarification form), than separately. By comparing the phrases selected from the 3rd clarification form with the 1st and 4th we aim to answer the question whether the application of the measures of phrase stability in the corpus leads to better phrases for query expansion.

Four query expansion runs were conducted. Runs ExpSingle { provided by the users to the 1st, 2nd, 3rd and 4th sets of clarification forms respectively. In each run the query was constructed by splitting the phrases selected by the user from the corresponding clarification form into single terms and adding them to the original query terms. Each term in the expanded query was weighted in Okapi using pseudo-relevance data. 7 The BM25/BM250 search function was then used to search the database. The results of the evaluation of the single-term search using feedback from the four clarification forms are presented in the next section. Following the TREC experiments we have developed the phrase-search method, presented earlier in this paper, which is an improvement of a technique used in TREC (Vechtomova and Karamuftuoglu, 2005). Here for each topic we take the top 1000 documents retrieved in the run ExpSingle1 (i.e. using single terms from the user-selected phrases from the 1st clarification form) and re-rank them using the method presented in Section 4. The evaluation results of the phrase-based search algorithm are discussed in
Section 7. 6. Evaluation of the single-term search using clarification form feedback
The results of the evaluation of the query expansion methods using clarification forms are presented in Table 2. All expanded runs significantly improve the performance over the baseline run BaseTD ( t -test at .05 significance level).

Average Precision of the expanded queries containing phrases selected from clarification form 1 is 5% higher than that of the queries containing single terms selected from clarification it suggests that showing terms in the context of phrases somewhat helps users to select better terms, compared to showing single terms to them. This provides support for Hypothesis 1.
On average users selected 21 phrases from the 1st clarification form and 27 single terms from the 2nd form. There were 675 phrase-terms selected only from the 1st form, 384 terms selected only from the 2nd form and 921 terms selected from both forms.
There is negligible difference between the performance of the queries formed from the phrases selected using the average idf of their terms (ExpSingle3) and queries from the phrases selected using the measures of phrase stability in the corpus: the C -value (ExpSingle1) and the Log-Likelihood ratio (ExpSingle4). This suggests that the statistical component of phrase selection does not play an important role when it is combined with syntactical phrase selection techniques, such as POS-tagging and NP-chunking. Hypothesis 2 is, therefore, not supported.
In the next section we discuss the evaluation of the phrase search algorithm. 7. Evaluation of the phrase search algorithm
The set of documents retrieved by single phrase-terms extracted from the user-selected phrases (ExpSingle1) was re-ranked using the proposed phrase-search method. The run Exp-Phrase1 uses the idf of the phrase in the window to calculate BinWindowWeight (Eq. (3)), and
ExpPhrase2 uses the sum of idf of phrase-terms (Eq. (4)). The average number of words in the user-selected phrases is 2, and out of all query phrase occurrences in the documents, 46% occur in adjacent positions (span 1), 59.52% occur within the span of 5 words, and 67.51%  X  within the span of 10 words. We evaluated our algorithm without imposing a span limit (no-span-limit runs) and with setting a span limit on matching phrases to 1 (adjacency), 5 and 10 words. Table 3 shows the results for the best runs (the k and p values shown are those that yielded the best Mean Average Precision).
 The best results were obtained by using the sum of idf of phrase-terms in calculating
BinWindowWeight , with no span limit (ExpPhrase2 no-span-limit run with p 0 . 75). Average Precision improved by 5.6%, and Precision at 5 documents improved by 2.7%, however Precision at 10 documents dropped by 3.2%. The results of runs setting a span limit on matching phrases were overall not as good as without a span limit on all measures, except Precision at 5 in the ExpPhrase2 span-10 run. The fact that the best results were obtained with no span limit suggests that our phrase matching model offers some benefits over phrase-matching models based on strict adjacency. Limiting the span to 5 or 10 words also leads to smaller improvements. It is noteworthy to mention that the best results were obtained with 0 . 1  X  p  X  0 . 5, which suggests that some reduction of the phrase weight with the increase of the span between its elements offers additional relevance-discriminating power.

Figure 5 shows the comparison of the best phrase run ExpPhrase2 no-span-limit with the single-term run ExpSingle1. Out of 45 topics, 26 had higher AveP with the phrase-search algorithm, and 19  X  lower; 13 had higher P@10, and 12 lower; and 12 had higher
P@5, whereas 8 X  X ower. As can be seen from Fig. 3, topic 444 ( X  X uropean Elections X ) has unusually lower performance with phrases than with single terms. If we exclude this topic from comparison, then the mean P@10 remains almost unchanged when we use phrases ( + 0.9%), and the mean P@5 improvement reaches 6.5%.

A more detailed look at some topics, the performances of which were improved or deteri-orated, revealed that the use of phrases altered rankings of some documents substantially, for example two relevant documents in topic 420 ( X  X nternet security from quantum computing X ) were promoted from ranks 48 and 50 to 1 and 2; however in topic 444 ( X  X uropean Elections X ) four relevant documents were demoted from top 10 to rank 200 and lower.

Figure 6 shows recall-precision graph of the best baseline, single-term and phrase-based runs. It is evident that while single-term query expansion run mainly improves precision at higher recall levels, the phrase-based run improves precision at lower recall levels. Previous work, e.g. (Mitra et al., 1997), suggested that phrases predominantly lead to improvements improvement obtained here is a moderate one, it indicates that the use of phrases in search may potentially lead to greater improvements in high precision tasks.
 8. The effect of user familiarity with the topic on phrase selection and retrieval performance
The familiarity metadata was used in the HARD track to indicate the extent to which the searchers formulating the topic were familiar with it. Out of 45 topics used in the evaluation there were 25 topics with user familiarity  X  X ittle X  and 20 topics with familiarity  X  X uch. X 
We have analysed the effect of the searcher familiarity with the topic on two variables:  X  the number of phrases selected for query expansion;  X  the performance of different search methods.

We hypothesise that the more familiar the searchers are with the subject of the query, the more phrases they are able to choose for query expansion. Our experimental results support this hypothesis. In all four clarification forms users familiar with the topic selected substantially more QE terms and phrases than the less familiar users (Table 4). The difference observed in all clarification forms but one, CF1 ( C -value selected phrases), was statistically significant (using t -test at .05 significance level).

Next, we hypothesise that the more familiar the searchers are with the topic , the better the performance of their unexpanded and expanded queries should be. The results of all baseline and experimental runs support this hypothesis: in all runs topics with  X  X uch X  familiarity show higher Mean Average Precision, as evident from Table 5. The table also includes the best phrase-based document re-ranking run (ExpPhrase2 no-span-limit).

The analysis of search results by familiarity reveals interesting patterns in the perfor-mance of the phrase-based document re-ranking method. By analysing topics with different familiarity levels, we can see that phrase-based document re-ranking (run ExpPhrase2 no-span-limit in Table 5) improves the Average Precision of topics with  X  X ittle X  familiarity by 7.5%, and the AveP of topics with  X  X uch X  familiarity by 3.9% compared to the single-term document ranking ExpSingle1 (Table 5). It is hard to say what exactly contributes to a bet-ter performance of the phrase-search algorithm with  X  X ittle X  familiarity topics, but it could be simply because there is more scope for improvement compared to  X  X uch X  familiarity topics.

As can be seen from Fig . 7 , topics with  X  X ittle X  familiarity, and to a lesser extent topics with  X  X uch X  familiarity, have somewhat higher precision at lower recall levels than the baseline
ExpSingle1. This suggests that phrase-based search techniques might be appropriate for high-precision tasks. 9. Conclusions and future work
In this paper we presented a comparative evaluation of different phrase selection techniques in interactive query expansion and a novel phrase search method. A combined syntactico-statistical method was used for the selection of phrases. First, noun phrases were selected using a part-of-speech tagger and a noun-phrase chunker, and secondly, different statistical measures were applied to select phrases for query expansion.
 The following three hypotheses were investigated in this study:
Hypothesis 1: Nominal MWUs are better candidates for interactive query expansion than
We studied whether users select better terms when they are shown to them in the context of phrases, than separately. The users were asked to select query expansion items from two clarification forms: one with the complete phrases selected by the C -value, and the other with the single terms from these phrases. The results suggest that showing phrases to the users helps them to select somewhat better query expansion terms, than showing single terms.
Hypothesis 2: Nominal MWUs which exhibit strong degree of stability in the corpus are
We evaluated three statistical phrase selection methods: the C -value, Log-Likelihood ratio and average idf of phrase terms. Phrases selected using these methods were shown to the user in clarification forms for interactive query expansion. Evaluation experiments did not demonstrate substantial difference between these statistical methods in their effect on retrieval performance.

Hypothesis 3: Ranking documents using noun phrases leads to better performance than
We have developed a method for phrase-based document ranking, which addresses the problems of weighting of overlapping and non-contiguous word sequences in documents.
Some improvements in average precision and precision at 5 documents were obtained through the use of phrases over the use of single terms. Weighting phrases by using the sum of idf of phrase components and by using the actual idf of the phrase as a string of words occurring in the same sentence lead to comparable results, although the sum of idf of phrase components was slightly better. The best values of p (the constant adjusting the effect of span) range between 0.1 and 0.5, which suggests that the phrase weight should not decrease linearly with the span, and also that the use of span in phrase weighting leads to some, albeit moderate, improvements. Our results demonstrate that although, overall improvements from using phrases are moderate, which is consistent with past work, some improvements in average important for high accuracy retrieval tasks. Previous work has demonstrated comparable improvements in average precision, but gains were predominantly due to improved precision at lower ranks (Mitra et al., 1997).

We also investigated the performance of the phrase search method on topics, formulated by users with  X  X ittle X  and  X  X uch X  familiarity. The results indicate that topics with  X  X ittle X  familiarity benefit more from the phrase search, especially at low-recall levels. It was also found that users with  X  X uch X  familiarity select substantially more query expansion phrases from clarification forms than users with  X  X ittle X  familiarity.

One of the issues with any phrase-search algorithms is the increased computational time needed to calculate phrase weights, compared to single-term weighting schemes, so any benefit obtained through the use of phrases should be weighed against the extra computational cost required. We have adopted a late-binding strategy, whereby terms are combined to form phrases at search time when the query is known, as opposed to pre-computing the phrases at indexing time. This has an advantage of tuning the document representation to the particular query, albeit at the cost of possibly longer query processing time.

One of the possible future extensions of this work will be to use measures of phrase stability to estimate phrase weight in the documents. Phrases differ by their stability in the corpus, as discussed earlier in the paper, therefore it may be advantageous to weight them on the basis of their stability. For example, a document which has a partial match on a non-compositional or idiomatic phrase (e.g.  X  X alt Lake City X ) is more likely to be non-relevant, than a document that has a partial match on a non-idiomatic expression (e.g.  X  X rganic product X ). Therefore the weight of the partially matching phrase should be reduced more in the first case than in the second.
 References
