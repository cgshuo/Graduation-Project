 1. Introduction
Visual tracking is an important topic in computer vision which has many applications, such as surveillance ( Benfold and Reid, 2011; Huang and Fu, 2011; Huang and Cheng, 2012; Rho et al., 2012 )activity recognition ( Choi and Savarese, 2012; Huang et al., 2014 ), robotics ( Mekonnen et al., 2013; Richa et al., 2010 ) video summarization ( Tavassolipour et al., 2013 ), and human  X  computer interaction (HCI) topic in computer vision, many approaches have been proposed in the literature, and it has been extensively studied in the recent decades. Among these methods, the particle fi lter (PF) is the most popular one.
PF is fi rst introduced in Isard and Blake (1998a, 1998b) ,whichisalso known as sequential importance resampling particle fi lter (SIR PF). PF offers a fl exible framework which is able to handle non-linear and non-normal systems, and also it is able to deal with multimodal distribution and recover from tracking failure. In addition, there are many applica-tions which use the SIR PF framework to track targets. Bruno (2004) discussed various Bayesian-based target tracking methods in the SIR PF framework for image sequences with cluttered background and random target aspect. Moreover, Danaee and Behnia (2013) ,inordertocope with time-varying target presence problem, extended the SIR PF through split measurements. Con sequently, PF becomes the most widely used framework in visual tracking systems.
 motion ,inwhichthetarget  X  smotionmodelchangessuddenly,which happens in situations such as unexpected target dynamic, target fast motion, camera switching, and low-frame-rate videos. In real world applications, many trackers are ba sed on a smooth motion assumption or an accurate motion model to facilitate ef fi cient tracking. In most cases, the motion of objects is governed by a fi rst-order auto-regressive (AR1) or second-order auto-regressive (AR2) process. As a result, scenarios that contain rapid motion changes present conven-tional trackers with serious dif fi culties. This is because these trackers fail to optimally predict the new position of the target; therefore, updating the motion model potentially increases the robustness of the trackerinsuchsituations.
 most cases, sampling-based strategi es formulate the tracking problem using probability distributions of random variables to model uncertainty in the models and measurements. Deterministic methods offer an alternative means to search the solution space using non-statistical approaches. Deterministic and samp ling-based methods face challenges when dealing with the large motion uncertainty induced by abrupt motions. Enlarging the sampling variance to cover the motion uncer-tainty is a direct solution for the sampling-based tracking methods.
However, the sampling inef fi ciency is a problem, which is raised here because the increase in the sampling volume may require a more expensive computational cost, particularly for the systems with the high-dimensional state-space. It is worth noting that the sampling inef fi ciency problem is of particular concern for the case of multi-object tracking, where the dimension of the state-space grows proportionally to the number of objects represented.

In this paper, a new adaptive motion model is described which is able to update motion model of the tracker online ( i.e. , on-the-using local search algorithm. This model is integrated into PF frame-work because of its success which highly relies on its ability to maintain a good approximation to the posterior distribution. The proposed tracker does not change the number of particles.
Just for sequences with abrupt and fast camera motion, it updates the motion model if necessary. Consequently, the proposed method is effective and computationally ef fi cient to track targets at real-time.
Moreover, the experimental results demonstrate that the proposed tracker is robust to abrupt signi fi cant motion changes.
The remainder of this paper is organized as follows: In Section 2 , some related tracking algorithms are reviewed brie fl y. In Section 3 , the proposed method is described. The experimental results are reported in Section 4 . The last section concludes the paper. 2. Related work
Visual tracking has been a popular topic for several years. In this section, only the most related tracking methods, focusing on algorithms that directly deal with the abrupt motion problem are reviewed. Please for more complete reviews on recent visual tracking methods.
The fi rst popular solution to the abrupt motion problem is hierarchical (or layered) and multiscale sampling strategy which focuses on improving the sampling ef fi ciency in the solution space.
Sullivan et al. (1999) , in a Bayesian context, to facilitate ef searching in the fi ne scale, combined observations from multiple scales. Inaccurate inference in the large scale which may cause the failure of searching in a fi ne scale is a potential problem of this method. Hua and Wu (2004) designed a collaborative searching and matching scheme based on the dynamic Markov network to overcome the potential error propagation problem. In order to achieve a more accurate Bayesian inference, they also developed a bi-directional-based belief-propagation algorithm. In contrast to multiscale-based trackers, Li et al. (2008) applied a pipeline of complementary observation models (also known as cascade PF) on the same image space to deal with the large motion uncertainty of the target object.
They believed that an LFR (low frame rate) condition is equivalent to abrupt motion for a tracking system. Their approach has proved to be highly ef fi cient in LFR conditions, but it requires an additive of learning process and several reliable observation models. Other approaches based on iterative optimization such as the
Kanade  X  Lucas  X  Tomasi (KLT) ( Tomasi and Kanade, 1991 )andmean shift ( Comaniciu et al., 2000 ) feature trackers generally require some assumptions which are often not satis fi ed under conditions of LFR or abrupt motion. They require feature patches or the kernels in cons-ecutive frames to be close to or overlap with each other.
To guide the proposal distribution of particle fi lter, Okuma et al. (2004) proposed an of fl ine-boosted detector which they called
Boosted particle fi lter (BPF). Moreover, Porikli and Tuzel (2005) developed the conventional mean shift algorithm through optimizing multiple kernels at motion areas . These areas were obtained by background modeling to track a pedestrian. Their ideas required using an independent detector to amend the search of an existing tracker in case the target motion is unpredictable and fast. The common limitation of these methods is that they require a fast detector to be applied to large search areas (in most cases, the whole frame). Detecting and connecting ( Han et al., 2004; Kaucic et al., 2005; Wu and Nevatia, 2006 ) is another method which has the potential of dealing with abrupt motion problem. This is because it detects the targets of interest and then constructs and connects trajectories via analyzing motion continuity, appearance similarity, etc. The drawback of this category is that when background is not fi xed, a fast detector is required.

In another point of view, the target tracking problem can be viewed as a two-part problem: motion detection and target match-ing ( Ke et al., 2011 ). The motion detection part generally entails modeling the background, and then subtracts it from a frame in a video sequence to fi nd the moving target ( Ke et al., 2011 ). Maddalena and Petrosino (2008) proposed a background subtraction method based on the self-organizing map (SOM) via arti fi cial neural networks (ANNs), which can adopt arti fi cial neural network in scenes which contain moving background and illumination changes. Huang (2011) proposed an accurate motion detection approach via a rapid match-ing procedure. His approach yiel ds the optimum distinguishes between background and foreground pixels. More recently, Guo et al. (2013) proposed the concept of multilayer block-based code-book to construct the background model. With that model, the reliability and processing speed of theapproachareimprovedagainst dynamic background subtraction problem. Chen and Huang (2014) presented an applicable approach in various bit-rate video streams for motion detection, which uses lower-dimensional eigen-patterns. In their work, in order to construct an accurate background model, they used the principal component analysis-based radial basis function network (PCA-based RBF network).

McKenna and Nait-Charif (2007) proposed an algorithm which could detect sequences with abrupt, fast camera motion automati-cally. Although they applied the same motion model for the entire sequence, they also employed the Iterative Likelihood Weighting procedure. To this end, the particles are divided into two sets. The fi rst set is normally propagated, and the second one is iteratively propagated. After that, the particles are weighted several times in order to let extreme movements happen within one time step.
There has recently been a tendency to introduce some learning methods into tracking, in which the aim is distinguishing the tracking target from the background. Therefore, tracking can be viewed as a classi fi cation problem. Klein et al. (2010) for real-time visual tracking of arbitrary objects applied a particle fi approach. Their tracker uses an adaptive observation model. To this end, a robust classi fi er consisting of an ensemble of Haar-like center-surround features was proposed. Their proposed classi was learned from a single positive training example with Gentle AdaBoost and is adaptive in facing new target and background appearance changes in each time step.

Frintrop (2010)  X  s approach to target tracking automatically detects the most discriminative parts of a target in addition to learning its appearance from a single frame. Stalder et al. (2009) by using object speci fi c and adaptive priors presented a semi-supervised tracking approach.

Searching the whole state space in order to cover the motion uncertainty completely is another simple solution to the abrupt motion problem. However, practically, the large search space of the target state makes this infeasible, and it results in an expensive computational cost. To estimate the search space based on the target state prediction, an accurate dynamic model is required. Nevertheless, such models are often learned from the speci training data ( Isard and Blake, 1998a, 1998b; North and Blake, 1998 ), which removes fl exibility from tracking algorithms.
In comparison to other mentioned approaches, the proposed tracker offers a criterion to detect when the motion vector of the target changes. Therefore, if the tracker detects abrupt motion of the target, in order to avoid local optima and reach the global optimum, the proposed motion model update algorithm is performed. Conse-quently, the proposed tracker automatically adapts its motion model online to track the target which undergoes drastic motion changes over time. The details of the proposed algorithm are as follows. 3. Proposed method
The tracker introduced in this paper is a new adaptive motion model-based algorithm for 2D visual tracking in the particle framework, the details of which are discussed in this section. The main idea behind the proposed model is hybridization of the particle fi lter with local search algorithm to overcome motion uncertainty. From the algorithmic point of view, this tracker performs a local search re fi nement just in the region of interest, if necessary, to fi nd the best solution and update motion model during the PF stages in each time step. In contrast to other works (discussed in Section 2 ), in our model training data is not required, so it can track targets across a video sequence in a fl exible manner.
In addition, when the motion of the target changes from frame-to-frame by a computational ef fi cient algorithm, it can adapt online.
The input to the tracker is simply the fi rst frame and an initial bounding box, de fi ning the fi rst con fi guration of the target to be tracked. On each subsequent frame, an updated bounding box is returned with the new location of the target. The main contribu-tion of this paper is introducing the application of a local search driven by an online adaptive motion model-based strategy to improve the performance of the conventional PF tracker so that it is able to cope with abrupt motion tracking. The target tracking problem is formulated below.

The main objective in a target tracking problem is to fi nd the most likely target states given the set of all observations, for the sequence of video images. To formulize this goal, let X t and Z t be target state and tions from the fi rst frame up to the t th frame ( i.e. , Z the recursive Bayesian estimation approach, we attempt to model abeliefaboutthecurrentstateofthetarget, X t .Thisbeliefisexpressed as a probability distribution called the posterior distribution, p  X  X
As a result, the goal is to fi nd arg max
The posterior distribution, also known as recursive Bayesian fi ltering distribution, can be expressed recursively via the Chap-man  X  Kolmogorov equation as pX t Z 1 : t j  X  X  p pZ t X t j  X  X  where pX t 1 Z 1 : t 1 j  X  X  is the posterior distribution from the previous frame, pX t X t 1 j  X  X  is the motion model, also known as the prediction step or dynamic model, and pZ t X t j  X  X  is observation likelihood.
In order to approximate the recursive Bayesian fi ltering distribu-tion of (2) , the sequential Monte Carlo (SMC) technique is used. This technique, to approximate (2) , uses a set of discrete weighted particles  X  X  X  n  X  t ; w  X  n  X  t  X  ; n  X  1 ; ... ; N ,where X n th particle and its associated weight at time t .Notethat w t A 0 ; 1  X  , and sum of the weights over all the particles sums to
X approximation of (2) after some simpli fi cation is written as follows pX t Z 1 : t j  X  X  C pZ t X t j  X  X   X  N where C is a normalization constant.
 the proposed tracker is described in the following sections. It is worth noting that the proposed motion model is the main contribution of our approach. Before presenting it in detail in Section 3.5 , remaining parts of the algorithm will be brie fl y described. 3.1. State-space de fi nition and initialization words, state is a mathematical description (parameterization) of the target. In the proposed method, the state vector X t is de by four parameters, X t  X  X  X x t ; X y t ; X h t ; X a t  X  . The point  X  X continuous 2D location of the upper left corner of the bounding box; X h t is the height of the bounding box, and X a t is the aspect ratio de fi ned by the ratio of the width of the bounding box to its height, as seen in Fig. 2 .
 fi rst frame. On each subsequent frame, an updated bounding box is returned with the new location of the target. Note that the particle weights are initialized to 1/ N . 3.2. Importance resampling from the previous time step which represent the previous poster-ior distribution. The SIR particle fi lter provides a mechanism for building approximation of the posterior distribution at time t from the posterior distribution at time t 1, based on importance sampling. Importance sampling provides an ef fi cient means for approximating distributions from which it is dif fi cult to draw samples ( i.e. , particles), but possible to evaluate ( Efron and
Tibshirani, 1994 ). In this step, N new particles are drawn from location as before. After that, new particles are assigned uniform weights to prevent degeneracy problem, in which after a few iterations, one of the particles will dominate the rest. In other words, degeneracy happens when a single particle has an extre-mely dominant weight. Over time, if we keep weighting the particles according to how good they are, weights will accumulate.
As a result, good particles ( i.e. , particles with high weight) will get more and more weight, and bad particles ( i.e. , particles with less weight) will get less and less weight. So, the posterior distribution is no longer well represented. Since this procedure is done at each time step, it is called importance resampling.

In this paper, stochastic universal sampling (SUS) method, which is suggested by Baker ( Yu and Gen, 2010 ), to select particles based on their previous weights, is used. It has some bene comparison to another popular sampling strategy, which is called roulette wheel sampling (RWS). SUS guarantees that the best particle ( i.e. , particle with the highest weight) is selected. More-over, in SUS, to select particles it is required to run the algorithm only once. This makes the tracker more computationally ef 3.3. Motion model
The motion model governs the evolution of the state between consecutive frames. In other words, motion model predicts values for the next state given the hypothesis of the current state. It also acts as a prediction step, in the SIR particle fi lter framework, and amends the particle propagation within a limited subspace of the target state. In this step the motion model pX t X t 1 j  X  X  is applied to every particle selected in the previous step as follows
X where V t denotes velocity vector and is de fi ned as V t drawn from zero-mean Gaussian distributions. By substituting V
X into (4) ,wearriveatthefollowingmotionmodel
X ;
X
It is worth noting that the velocity vector V t is modi fi within the proposed motion model update algorithm which is discussed in detail in Section 3.5 . 3.4. Observation model
For visual tracking, the observations consist of information extracted from the video sequence. The observation likelihood pZ t X how well the current observations support the predicted target state. In this step, each particle X  X  n  X  t is assigned a weight according to the evaluation of the observation likelihood at its con fi guration, i.e. , w tribution. Features such as shape, color, texture are observations commonly used. In order to investigate the robustness of the proposed adaptive motion model, here, a simple color observation is used.
The proposed observation model of the i th particle is encoded by a 8 8 8 RGB histogram H Ref which is extracted from the target state in the fi rst frame. This happens when the tracker is initialized and remains unchanged during tracking. Let H  X  X histogram extracted at the current location of the particle X observation likelihood of the n th particle is de fi ned as w where d  X  H Ref ; H  X  X  X  n  X  t  X  X  is the histogram intersection de d
H ; H 0  X  X  X   X  B b  X  1 min  X  H b ; H 0 b  X  , and  X  is a constant factor which en-sures that the particles  X  weight adds up to one.

An updated distribution is achieved after applying the observa-tion model to the set of particles. The newly weighted particle set represents the new posterior distribution, which in turn repre-sents our belief about the state of the target. In order to infer a solution to the target tracking problem, the particle with the maximum likelihood is selected. 3.5. Motion model update algorithm In this step, the tracker  X  s motion model, if necessary, is updated. First, the following fundamental question is considered:  X  situations, must the tracker  X  s motion model be updated? clear that in sequences with ab rupt motion, the motion model changes, and therefore the velocity vector must be updated. In this paper, a new criterion is proposed by which the tracker is able to detect these situations. This criterion is de fi ned by an indicator function, mmu , that returns 1 if the tracker  X  smotionmodelmustbe updated and 0 otherwise. Let mmu  X  X  X  n  X  t N n  X  1 ; d n posed motion model update function, and d  X  H Ref ; H mmu  X  X  X  n  X  t N n  X  1 ; d n  X  function is de fi ned as where T is a threshold. The main idea behind mmu function is that if the average of the particles  X  histogram intersection at time step t toward d is less than T , it indicates that the particles  X  con fi this situation happens, it can be discovered that the target model is changed; as a result, particles are about to miss the target.
Now, if mmu  X  X  X  n  X  t N n  X  1 ; d n  X  X  1, then the proposed algorithm is called in order to update the motion model and particles  X  to change the motion model. The proposed motion model update algorithm consists of four steps. In the fi rst step, the upper left corner of the bounding box of the best particle at the current time step is updated via local search algorithm.

Local search algorithms are examples of classical optimization methods which start with an initial solution and then gradually improve it. In each step, the local search procedure performs an offset movement from the initial solution to obtain another one. If the obtained solution shows improvement in the value of the objective function ( i.e. , likelihood in our case), the movement is accepted, and the procedure is repeated. The algorithm ends when there are no better accessible solutions ( Voudouris et al., 2010 ).
In general, two main strategies to perform local search algorithms are referred to as  X  fi rst improvement  X  and  X  best improvement and Lenstra, 2003 ). First improvement is a sequential strategy becausethealgorithmevaluatestheaccessiblesolutionsoneby one, and searches the current neighborhood until it fi nds the solution which is better than the current solution. In contrast to improvement strategy, best improvement searches the whole set of accessible solutions and selects t he best one found in each improve-ment iteration. In this paper, we focus on the latter one in that by using such strategy, particles  X  con fi gurations can be updated. The proposed local search algorithm works as follows:
Let X 0 be the initial solution for the local search algorithm. For the remainder of this section, the time index t is omitted to simplify the notation. A local search using some neighborhood structures is applied to X 0 to fi nd a better solution ^ ^ X replaces X 0 only if it is veri fi ed that ^ X is better than X local search algorithm continues until when there are no acces-sible solutions better than the initial one. Let c be the upper left corner of the bounding box of the best particle in the current time step. Three neighborhood structures, used here, N 1 , N 2 are described in the following.

Neighborhood structure N 1 crops out a set of particles from the established region that is within the distance of  X  W from c and computes likelihood for all of them, as seen in Fig. 3 (a).
Neighborhood structure N 2 crops out a set of particles from the established region that is within the height of  X  h from c and computes likelihood for all of them, as seen in Fig. 3 (b).
Neighborhood structure N 3 crops out a set of particles from the established region that is within the aspect ratio of  X  a from c and computes likelihood for all of them, as seen in Fig. 3 (c).
Now the best tracker  X  s bounding box is obtained, and by using the best current and previous time step con fi gurations, the velocity vector is updated as follows v and t 1, respectively. Taking into account that the quality of particles  X  con fi gurations is not appropriate at the current time step ( i.e. , the average of the particles  X  histogram intersection toward d is less than T ), the set of particles is updated. In the update process, all of the particles created and investigated in the local search algorithm, and the set of particles that already existed are sorted according to their likelihood. Then, the best N particles are selected as a new set of particles for the current time step.
The proposed tracker can ef fi ciently handle the abrupt motion of targets by using the presented motion model update algorithm. The proposed mmu function detects when the target  X  smotionmodel changes. Subsequently, local search algorithm via three neighborhood structures updates the particles  X  con fi gurations in the current time current and previous time steps, the velocity vector is modi usage of motion model update algorithm has two advantages. The advantage is that it updates the particles  X  con fi gurations in a way that the maximum coverage between the particles and the moving target is achieved. Another advantage is that the velocity vector of the motion model is adjusted automatically by taking into consideration the motion and velocity of the target. These two advantages cause the proposed tracker to be able to easily track the target in successive frames, even in presence of abrupt motion.
 model-based tracking are summarized in Algorithm 1 .

Algorithm 1. Proposed online adaptive motion model-based tracker.
 4. Experimental results dataset available for target tracking. Therefore, most papers have carried out experiments on their own dataset. As a result, we came to the conclusion that it is better to use BoBoT dataset 1 consists of several challenging video sequences. The used experi-mental sequences consist of nine challenging sequences for a total of 5485 frames (320 240 resolution and 25 fps). The ground truth is achieved by manually labeling all frames from the video sequences. The basic properties of the experimental sequences are summarized in Table 1 . The proposed tracker was implemented in C  X  X  and runs at approximately 36 frames per second on an Intel
Core2Duo 2.53 GHz and 3 GB of memory. Thus, the proposed tracker is capable of processing each sequence at real-time.
For the remainder of this section, the proposed tracker is referred to as ATLS (as in Adaptive Tracker via Local Search), for brevity. The ATLS is compared with fi ve related state-of-the-art trackers, which are based on particle fi lter framework or online tracking methods. The compared trackers are listed as follows: (1) A color-based particle fi lter (PF) ( P X rez et al., 2002 ). (2) The component-based tracker (CBT) ( Frintrop, 2010 ). (3) The Adaptive Haar-like feature-based tracker (AHFBT) ( Klein et al., 2010 ). (4) The beyond semi-supervised tracker (BSST) ( Stalder et al., 2009 ). (5) Our implementation of SIR particle fi lter (SIRPF) ( Isard and Blake, 1998a, 1998b ).

The obtained results were compared with the ground truth over 180 experiments on the nine sequences (as the proposed tracker involves randomness, we ran 20 runs/sequence). It is worth noting that the obtained results are the average of these experiments. 4.1. Evaluation methodology
Visual tracking involves a number of inter-related phenomena, each of which affects the overall performance in a particular way.
However, award-winning papers in tracking rarely report results on the same performance measures, making comparisons between different methods dif fi cult and sti fl ing progress.

Nevertheless, quantitative comparison is a common approach and typically involves a set of measures to objectively evaluate tracking characteristics ( Smith et al., 2005 ). In this paper, preci-sion, recall, fi t measure (F-measure), and PASCAL ( Everingham et al., 2010 ) overlap criterion are used to quantify the performance of the proposed tracker.

Tracking target is referred to as ground truth object ( GT tracker output is referred to as estimate ( E ). Two fundamental measures which compute overlap between ground truth and estimate are recall and precision . Given a ground truth ( a tracking estimate ( E ), the recall,  X  , is expressed as  X 
E ; GT  X  X  E \ GT jj GT where U jj indicates the set cardinality. Recall measures how much of
GT is covered by E and can take values between 0 (no overlap) and 1 (fully overlapped). Similarly, the precision, V ,isde
VE ; GT  X  X  X 
Precision measures how much of E covers GT and can take values between 0 (no overlap) and 1 (fully overlapped).
A good tracker requires both high  X  and V values. The spatial fi tting measure uses both  X  and V to determine how well the area of the trackers fi ts the area of the targets appearing in the scene. Spatial fi tting refers to the tightness of the fi t of the measure the spatial fi tting, the F-measure or harmonic mean of and V can be used. Thus, the fi tting measure, or fi t for brevity, is de fi ned as fit
E ; GT  X  X  X  2
Aperfect fi tisindicatedby fit  X  1, no overlap by fit  X  0. The measure, mentioned above, measures the spatial fi tting for a single time step. To evaluate spatial fi tting for a tracker on a video sequence of duration T ,thespatial fi tting results can be reported in the form of aplotof fit over the length of the sequence, as seen in Fig. 4 .
The last measure is PASCAL overlap criterion, which in some literatures is called similarity metric ( Huang, 2011 ). PASCAL measure is determined by measuring the overlap between the GT and PASCAL measure, pascal ,isde fi ned as pascal  X  E ; GT  X  X  The higher the pascal score, the better the match between and E . The quantitative results are summarized in Tables 2 and 3 ; Figs. 5 and 6 show screen captures for the video sequences. In the next section, more detailed discussion of the video sequences is presented. 4.2. Evaluation
In this section, for each sequence, the results of the ATLS tracker and the ones of other reference trackers are discussed; moreover, the problematic aspect of each sequence is introduced. 4.2.1. Ball
The Ball sequence contains a red ball, which is quickly kicked left and right. This sequence includes abrupt, signi fi cant motion changes; moreover, the camera moves and follows the ball. The fast motion changes of the ball make this sequence a challenging task for trackers. While the visual properties of the ball, such as color, make tracking easier, most of the reference trackers fail to track the ball in some frames because these trackers suffer from abrupt motions. As seen in Table 2 , the ATLS tracker with respect to its online adaptive motion model achieves the highest PASCAL score in comparison to other reference trackers. In addition, in comparison to the conventional SIR particle fi lter ( i.e. , SIRPF), the ATLS improves the tracking performance in terms of the fi measure approximately 20% (c.f., Table 3 ). With respect to the plots of Fig. 4 (c.f., Sequence A ( Ball ) plot), when the target experiences abrupt motion changes, around frames 190 up to 260, the ATLS follows the target without drifting away, while the SIRPF loses the target and snaps to some part of the background. This shows that the proposed tracker is robust to abrupt motions. Moreover, this sequence highlights the advantages of using an adaptive motion model.
 4.2.2. Coffee mug
In this sequence, a person moves a coffee mug along a cluttered background. The problem of color ambiguity and background clutter ( e.g. , when the target and the background are similar), appears in the Coffee mug sequence. Furthermore, the camera motion, target  X  s translational motion, and scale changes add some dif fi culty. Nevertheless, the ATLS by using local search algorithm follows the target well. Other reference trackers (except PF tracker) perform poorly in this case because they cannot handle background clutter problem well. 4.2.3. Juice box because the camera pans very fast th roughout the seq uence. Another challenge is the size of the target changes in that the camera moves closer to it and then back away from it. The AHFBT performs best in this case; the ATLS comes second (c.f., Table 2 ). Having in mind that the target  X  s appearance does not change signi AHFBT, which uses a strong classi fi er composed of an ensemble of
Haar-like center-surround features, can successfully track the target throughout the sequence. In additi on, since the background is similar to the target in this sequence, SIRPF loses the target on several frames and has a poor performance (c.f., Fig. 4 ). It can be seen from the estimated bounding boxes that the size of the target is often poorly estimatedbytheSIRPFtracker(c.f., Fig. 5 ). On the other hand, the
ATLS successfully tracks the target through the scale change. 4.2.4. Person1, 2, 3, and 4 It can be seen that the main challenges of the sequences Person1 ,
Person2 , Person3 ,and Person4 are partial and complete occlusion, non-rigid target, and background clutter. Looking at the PASCAL score per sequence ( Table 2 ), it can be seen that the sequence
Person3 was the most dif fi cult to track, not only for the proposed tracker but also for the other reference trackers. Nevertheless, the
ATLS has the highest PASCAL score and outperformed other trackers in this sequence. Moreover, the lowest fi t of the ATLS tracker is relevant to this sequence in comparison to other sequences (c.f.,
Table 3 ). In the Person2 and Person4 sequences, the AHFBT performs the best because it is speci fi cally designed to handle occlusions via a
Haar-like feature-based model. The complete occlusion of the target that occurs in the second half of the Person4 sequence and par-tial occlusion of the Person2 sequence makes them challenging sequences. Likewise, the Person3 sequence contains several occlu-sions. We would like to point out that occlusion handing was not the focus of this work; however, it can be seen that the ATLS succe-ssfully tracks the targets in these sequences despite the numerous complete or partial occlusions. This shows that the ATLS tracker is robust to occlusion. Nevertheless, it seems that occlusion handling still requires additional work in the proposed method. This could be a part of our ongoing research.

In case of the Person1 sequence, the main challenges are rotation of the target and tracking a non-rigid target in an outdoor environ-ment. Change of the appearance of the target overtime presents problems to the ATLS tracker in that it does not have any integrated mechanism for learning and updating the appearance of the target. In other words, the ATLS tracker that relies only on a high-level appearance abstraction, like color, cannot handle this speci scenario easily because the observation model of the target will be changed by rotation. In this case, the CBT has the best performance in comparison to other trackers because the CBT is able to auto-matically detect the most discriminative parts of the target and quickly learn its appearance. In this regard, the ATLS tracker comes third and successfully accomplishes the tracking. 4.2.5. Rubik  X  s cube
Rubik  X  s cube sequence illustrates a problem that arises when the tracker relies too heavily on the fi rst frame. The viewpoint of the Rubik  X  s cube is changed because after about 300 frames, the camera starts to pan around it; then an imposter Rubik  X  s cube is introduced to distract the tracker. ATLS and AHFBT successfully track the correct Rubik  X  s cube , while other trackers are confused by the impostor target. The SIRPF has also a good performance; however, its recall is approximately 8% less than ATLS. The ATLS outperformed other trackers in this case. 4.2.6. Panda
The main challenge of the Panda sequence is the illumination changes that occur as the light is switched on and off, or the shelter against the sun is opened or closed. Illumination changes in the appearance of the target in a way that the target  X  s histogram is changed. The ATLS can handle this change as it uses local search algorithm. While the other trackers also track the target quite well, it can be seen from Table 2 that the ATLS tracker has the best
PASCAL score. 4.3. Tracker analysis
We have analyzed how the key parameters affect the tracker s performance on three sequences: Ball , Juice box , and Person3 . For this analysis, four parameters that control the behavior of the proposed motion model have been selected. Parameter T ,de in (7) , controls the motion model updating rule. Parameters h , and  X  a control the search region, described in Section 3.5 . The average results of the experiments are summarized in Fig. 7 .
The parameter T was tested on its entire valid range. As mentioned before, parameter T is a threshold that indicates whether the motion model is updated or not. From the graph, it can be observed that the performance of the tracker improves up to T 0 : 45 and after that if the value of T is higher than 0.45, the tracker  X  sPASCALscore decreases. This occurs because the frequent updating of the motion an unstable behavior. In addition, when T is set to small values, the
ATLS tracker tends to be SIRPF; hence, the performance will drop and become weak.
 of the value fi rst improves the performance (the fi rst 40% of the interval), and after that, the performance is stable in the remaining part of the interval. The parameters  X  h and  X  a were tested in the intervals 0 to 5, and 0 to 2.5 respectively. When the value of these two parameters increases, the performance gradually improves. In general, increasing the values of search region parameters ( i.e. ,
 X  W ,  X  h , and  X  a ) will improve the performance of the proposed tracker because in the update motion model stage, the particles and motion model can update with more accuracy with respect to the bigger search region. However, increasing the values of these parameters causes more computational cost. Therefore, choosing appropriate values for these parameters is a scenario which contains a tradeoff between computational cost and accuracy of the tracker.
 proposed tracker is the number of particles N .Tostudyourmethod dependency on the number of par ticles, experiments were con-ducted on sequence Person3 (the most complex one), varying the number of particles N  X f 10 ; 50 ; 100 ; 150 ; 200 ; 250 ; are shown in Fig. 8 .Inplotof Fig. 8 ,accuracyintermsofPASCAL score (vertical axis) is plotted against the time for processing each frame (horizontal axis) to provide a comparison of which tracking scenario achieves the highest a ccuracy for a given computational cost. The fewer the particles, the less the PASCAL score. The model is stabilized around approximately N  X  100. The computational com-plexity was roughly linear to N , with a cost ranging from 0 ( N  X  10) to 0 : 07 s per frame ( N  X  300).

Based on the aforementioned parameter analyses, the key parameters of the ATLS tracker were set as shown in Table 4 . 4.4. Discussion
All the above-mentioned experiments have evaluated the pro-posed tracker. When the target experiences abrupt motion changes, the reason why other reference trackers face challenges and per-form poorly in the experiments can be explained. This can be attributed to the fact that there is no mechanism in these trackers to effectively handle the abrupt motion of the target, so they get stuck in local optima. In other words, under abrupt motion changes, they face problems in the prediction step to adapt their motion model quickly to prevent error propagation. Therefore, they tend to lose the target even by using a large number of particles when abrupt motion occurs ( e.g. , the AHFBT tracker uses 2000 particles ( Klein et al., 2010 )). On the other hand, although the proposed ATLS tra-cker is able to handle the abrupt motion of targets and alleviates the local-trap problem, a certain and few numbers of particles are required to guarantee appropriate tracking due to the fact that it uses local search algorithm to adapt its motion model online. This causes the proposed tracker to grasp the target even in situations in which the motion vector of the target changes drastically. Moreover, the proposed mmu function utilizes the information of particles ( i.e. , observation likelihood) in each time step to detect the abrupt motion of the target. In fact, unlike other state-of-the-art trackers, the incorporation of stochastic universal sampling strategy in the proposed tracker improved the sampling ef fi ciency, prevented degeneracy problem, and also caused the tracker to avoid local optima and consequently the posterior distribution became well represented. As a result, the proposed ATLS tracker is ef effective to deal with the abrupt motion problem. Furthermore, the experimental results con fi rmed the computational ef fi ciency and robustness of the proposed ATLS approach in tracking the target with drastic abrupt motions.
 5. Conclusion
Ahybridtrackerthatcombin esaSIRPFwithalocalsearch algorithm to cope with abrupt motion problem was introduced. In the proposed tracker, a new adaptive motion model was introduced for ef fi cient tracking of targets that undergo signi fi changes. In order to update the motion model of the tracker, a local search algorithm with three neighb orhood structures was used. The local search algorithm uses its exploitive search ability to improve the search ef fi ciency of the proposed tracker and the quality of particles. The neighborhood structures were carefully designed to solve the local-trap problem. In addition, the proposed model can update online and does not require any training data.

From comparison of the PASCAL scores of other state-of-the-art trackers and the proposed tracker, it can be concluded that the proposed tracker, ATLS, in most cases outperforms the reference trackers in accuracy. The ATLS outperforms all the reference trackers for fi ve sequences and produces comparable accuracy to the best tracker for other sequences. Moreover, the proposed tracker is so computationally ef fi cientthatitisabletoprocesseachvideo sequence at real-time. Although the proposed tracker yielded con-vincing results on the preceding experiments, there exist few limitations to the method. The tracker has mainly focused on dealing with the abrupt motion problem, but many scenarios contain rapid structural and appearance changes. Such scenarios present the tracker with serious dif fi culties. We believe that integration of appearance adaptive methods in the proposed tracker can enhance robustness to the appearance changes problem. Another decent approach to solve this problem can be using local binary pattern or histogram-of-gradient descriptors in our observation model. Propos-ingamethodbyusingthesedescri ptors would be an interesting venue of research to further strengthen the tracker.
 References
