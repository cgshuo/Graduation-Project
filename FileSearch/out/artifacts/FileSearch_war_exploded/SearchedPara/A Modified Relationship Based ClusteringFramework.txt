 One of the important problems of Data mining (DM) community is mining high dimensional datasets. As dimensionality increases, the performance of the clustering algorithms sharply decreases.

In this paper we introduce a new high dimensional density based clustering and visualization framework based on Strehl &amp; Ghosh X  X  relationship based clus-tering framework [1]. Their framework has two fundamental parts named CLU-SION (CLUSter visualizatION toolkit) and OPOSSUM (Optimal Partitioning of Sparse Similarities Using METIS). CLUSION is a similarity matrix based visu-alization technique and OPOSSUM is a balanced partitioning system which uses a graph based partitioning tool called METIS [2]. OPOSSUM produces either sample or value balanced clusters. Since METIS is a partitioning system, there is no outlier detection or filtering on OPOSSUM/CLUSION framework. We have modified Strehl &amp; Ghosh X  X  framework to deal with density based clustering and outlier filtering. Our framework uses DBSCAN to filter outliers and an inter-mediate space called micro-partition space as an input space for the DBSCAN. Micro-partition space is created by using METIS.
 Graph based partitioning methods perform best on very high dimensional datasets. Currently, the most popular programs for graph partitioning are CHACO and METIS [2,3].

Density-based clustering algorithms group neighboring data objects into clus-ters based density. DBSCAN (Density-Based Spatial Clustering of Applications with Noise)[4] is a typical representative of this group of algorithms.
There are many visualization techniques for high dimensional datasets. Keim and Kriegel [5] grouped visual data expl oration techniques for multivariate, multidimensional data into six classes. These techniques become useless on the datasets that have dimensions above some hundreds.

To overcome the drawbacks of dimensionality, matrix based visualization tech-niques [6] can be used on very high dimensional datasets. In matrix based vi-sualization techniques, similarity in each cell is represented using a shade to indicate the similarity value: greater similarity is represented by dark shading, while lesser similarity by light shading. CLUSION, a matrix based visualization technique, is used in both Strehl and Ghosh X  X  and our framework as explained in the following sections. Strehl A. and Ghosh J. proposed a different approach in [1] very high dimensional data mining. In their framework the focus was on the similarity space rather than the feature space. Most standart algorithms spend little attention on the similarity space. The key difference betw een relationship-based clustering and regular clustering is the focus on the similarity space S instead of working directly in the feature domain F . Once similarity space is computed, a modified clustering algorithm which can operate on the similarity space, is used to partition the similarity space. The resulting space is r eordered, so that the points within the same cluster put on adjacent positions. The final step is the visualization of the similarity matrix and visually inspecting the clusters. 3.1 Relationship-Based Clustering Framework A brief overview of the gener al relationship-based framework is shown in figure 1.  X  is a collection of n data source. Extracting features from pure data source yields X feature space. In most cases, some data preprocessing is applied to the data source to obtain feature space. Similari ties are computed, using e.g. euclidean, cosine, jaccard based similarity  X  yielding the n  X  n similarity matrix S .Once the similarity matrix is computed, further clustering algorithms run on similarity space. Clustering algorithm  X  yields cluster labels  X  . 3.2 OPOSSUM/CLUSION System and Problems Relationship-based clustering framework employs METIS for clustering. It can operate on similarity space. Strehl and Ghosh call METI S based balanced partitioning visualization system as OPOSSUM [1]. OPOSSUM differs from other graph-based clustering techniques by sample or value balanced clusters and visualization driven heuristics find an appropriate k .

CLUSION is a matrix based visualization tool which is used for visualizing the results. It looks at the output of the clustering routine (  X  index), reorders the data points so that points with the same cluster label are contiguous, and then visualizes the resulting permuted similarity matrix, S . Mathematical back-ground of the system can be found on [1].
 The computing performance and the quality of the clusters produced by OPOSSUM/CLUSION framework is quiet i mpressive. However it is not perfect. It has two major drawbacks: a) Determining the number of clusters : Since partitioning based METIS is b) No outlier filtering : Partitioning based clustering algorithms generally suf-The architecture of our framework is shown in Figure 2. It consists of the fol-lowing three major improvements: a) An intermediate space is introduced. W e call it  X  X icro-partition space X  and it b) Using DBSCAN for density based clustering of micro-partition space. This c) Easier determination of input parameters. METIS is dependent on k ,onthe DBSCAN produces  X  index from micro-partition space. We use CLUSION for visualizing the micro-partition space which is reordered by  X  index. 4.1 Micropartition Space When DBSCAN is directly applied to the similarity space, it can not properly order it. In other words, although it can deal with the outliers, DBSCAN can not put the neighboring points in adjacent positions on the similarity graph. This causes poorly distinguishable CLUSION graphs. For human eye it is not easy to find out the clusters from the graphs. Hence, we used METIS for properly ordering the similarity space. METIS needs the number of partitions k as an input parameter. Since we do not know how many partitions exists, we have used METIS with a predetermined value of k . Micro-partition space contains the partitions produced by METIS. DBSCAN algorithm treats micro-partitions as input data, in other words DBSCAN works on micro-partition space.
Let p be the number of samples within a micro-partition, then the relation between k and p should be: where n is the number of samples. In figure 3, schematic representation of creat-ing micro-partition space for p =3isshown.Let x j be a sample in dataset with j  X  X  1 , ..., n } and six samples be placed as shown in figure 3.a. If similarities into the same partition. x 4 ,x 5 ,x 6 will be another partition accordingly (figure 3.b). From now on, micro-partitions in S are treated as samples of M in such way that  X  function takes METIS partitions as input, produces a single representative point no matter how many samples exist in micro-partition.  X  function chooses the representative point within micro-partition randomly. If similarities s (1 , 2), s (1 , 3), s (2 , 3) are sufficiently small, any of these points can be chosen as repsen-tative with a very small amount of error.
 As can be seen from figure 4, the error is Where i, j  X  X  1 , ..., k } and x act are actual point, x rep is the representative point. As the micro-partition size increased, the error will also increase. This is why we choose p as small as possible. We experienced that p =3or p =4values generally yield good results. 4.2 Density Based Clustering of Micropartition Space Using DBSCAN operates on micro-partition space which is k  X  k dimensional according to equation 2. Due to the decrease in dimensionality, DBSCAN performs better on M space than original on S space. We use DBSCAN for outlier filtering and density based clustering of M space. Since M space is ordered by METIS, this reduces the neighborhood search time in DBSCAN.  X  indexes are used to reorder S and M spaces.  X  M denotes index produced by METIS where  X  M  X  X  1 , ..., k } ,and  X  D denote index produced by DBSCAN where  X  D  X  X  X  1 , 1 , ..., k } . METIS is a partitioning system, therefore there is no outlier remarking capability of  X  M index. However, DBSCAN is a density based clustering algorithm and it has the capability of remarking outliers.  X  D index remarks outliers with the value of -1. When samples from M space are reordered according to the  X  D index, outliers will appear in front of the array. As a result, outliers will be placed on the upper left corner of the CLUSION graph (cross patterned areas in figure 5.b and 5.c).
Figure 5.a shows the schematic results of reordering by  X  M index. There are a few outliers in figure 5.b which show results of reordering by  X  D index. Figure 5.c has more outliers. Note that, gray areas on the graph are placed for illustrative purposes, therefore the real life graphs may differ from the ones in figure 5. We evaluated our proposed framework on two different real world datasets. The first dataset consists of 9636 terms from 2225 complete news articles from the BBC News web site, corresponding to stories in five topical areas (business, entertainment, politics, sport, tech) from 2004-2005 [8]. The second one (COIL 2000) consists of 86 attributes (dimensions) of the 5822 customers and includes product usage data and socio-demographic data derived from zip area codes [7].
In the first experiment we initially used OPOSSUM to cluster BBC news arti-cles dataset. Figure 6 shows the result of OPOSSUM. The optimal k for sample based clustering is found at k = 3 after numerous trial and error. There is no way to find out and filter outliers on the graph. Figure 7 shows CLUSION graph of our framework for p=5. Increasing p dramatically reduces the computing time. p =3 ,p =4and p = 5 values are optimal for most cases. Consequently, complex determination routines for p values are not necessary.

DBSCAN is used to cluster M space with  X  =0 . 066 and MinPts=5 parame-ters. MinPts value is chosen to be equal to p and then the simple heuristics men-tioned in [4] is used to determine  X  approximately. The heuristics yield  X  =0 . 066. As it can be seen from the figure 7, the graph is windowed by one horizontal and one vertical line. The outliers are placed on upper left window and the lower right window shows filtered clusters. It is clearly seen that, the filtered area con-tains almost equal three clusters. One should perform numerous trials to find out correct number of clusters using OPOSSUM, indeed the resulting clusters will contain outliers. On the other hand, our framework filtered the outliers and found three clusters just running it only once or a few times.
 The second experiment carried out on COIL 2000 dataset. The results of OPOSSUM for k=5 is shown in figure 8. Due to the fuzziness on the CLUSION graphs, none of them produced well distingu ishable cluster stru cture. Therefore we could not discover the exact value of k. We applied our framework for p =5.If we look at the lower right window of the figure 9, we can see two distinct clusters. One bigger cluster is placed on the upper left and one smaller cluster placed on the lower right across the main diagonal. When we carefully examine the intersection of two clusters, we can see a sm all cluster with very close relationship with the both clusters. To see clearly, the borders of the clusters are marked as dotted lines in figure 9. Therefore we ca n say that, our framework has succesfully found three clusters on COIL 2000 dataset. This paper proposes a new framework for density based clustering of high dimensional datasets and getting better interpretations for clustering results by filtering the outliers from the main perspective of the CLUSION graph. This is achieved by using a new space called micro-partition space and mod-ifying DBSCAN algorithm to operate on micro-partition space. Our proposed framework is based on the relationship based clustering approach of Strehl and Ghosh. Our experiment shows that our improvements and modifications help us better clustering and visualization of the high dimensional data. In future work, we will replace METIS with another faster partitioning tool for performance improvements and better integration with DBSCAN.
 Acknowledgement. The research for this article was supported by grant num-ber FEN DKR-270306-0055 from Marmara University Scientific Research Projects Committee (BAPKO).

