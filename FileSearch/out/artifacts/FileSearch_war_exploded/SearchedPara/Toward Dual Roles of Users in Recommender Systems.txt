 Users usually play dual roles in real-world recommender sys-tems. One is as a reviewer who writes reviews for items with rating scores, and the other is as a rater who rates the help-fulness scores of reviews. Traditional recommender systems mainly consider the reviewer role while not taking into ac-count the rater role. However, the rater role allows users to express their opinions toward reviews about items; hence it may indirectly indicate their opinions about items, which could be complementary to the reviewer role. Since most real-world recommender systems provide convenient mech-anisms for the rater role, recent studies show that typically there are much more helpfulness ratings from the rater role than item ratings from the reviewer role. Therefore, incor-porating the rater role of users may have the potentials to mitigate the data sparsity and cold-start problems in tradi-tional recommender systems. In this paper, we investigate how to exploit dual roles of users in recommender systems. In particular, we provide a principled way to exploit the rater role mathematically and propose a novel recommender system DualRec, which captures both the reviewer role and the rater role of users simultaneously for recommendation. Experimental results on two real world datasets demonstrate the effectiveness of the proposed framework, and further ex-periments are conducted to understand the importance of the rater role of users in recommendation.
 H.2.8 [ Database applications Subjects ]: Data mining; H.3.3 [ Information Search and Retrieval Subjects ]: Information filtering Algorithms Collaborative filtering; Helpfulness rating; Cold-start c
Recommender systems[22] intend to provide users with in-formation of potential interest based on their demographic profiles and historical data. Collaborative Filtering (CF), which only requires past user ratings to predict unknown rat-ings, has attracted more and more attention[6, 33, 9]. Col-laborative Filtering can be roughly categorized into memory-based[5, 23, 29] and model-based methods[6, 16, 10]. Memory-based methods mainly use the neighborhood information of users or items in the user-item rating matrix while model-based methods usually assume that an underlying model governs the way users rate items, and in general, it has bet-ter performance than memory-based methods. Despite the success of various model-based methods [24, 6], matrix fac-torization (MF) based model has became one of the most popular methods due to its good performance and efficiency in handling large datasets[25, 16, 10, 4, 27, 2].
Users in real-world recommender systems can play as re-viewers that write reviews and give ratings for items, and they also can play as raters that rate the helpfulness of re-views. Figure 1 contains two snapshots from a real-world site Ciao 1 . In Figure 1(a) 2 ,auser tara1tomoj , as a re-viewer, writes a review for Apple iPhone 6 16GB, which gives a rating score 4 to iPhone 6. Figure 1(b) 3 shows that other users, as raters, rate the helpfulness of the review in Figure 1(a) -three raters give helpfulness ratings to this review, among which two give somewhat helpful (or score 2) and one gives not helpful (or score 1). However, the vast majority of traditional recommender systems only ex-ploit the reviewer role while overlook the rater role of users. The rater role enables users to conveniently express their personal opinions on reviews about items, which indicates their indirect opinions on items. For example, though we don X  X  know the exact rating scores these three users may give to Apple iPhone 6 16GB, low helpfulness ratings given by these users imply that they don X  X  agree with the review; hence, they are likely to give some ratings different from 4 to Apple iPhone 6. Therefore, the rater role could be com-plementary to the reviewer role for recommendation. Since real-world recommender systems often provide convenient mechanisms for the rater role, such as clicking helpfulness buttons in Amazon and specifying helpfulness scores in Ciao, recent studies suggest that users usually have more helpful-ness ratings produced by their rater role than item ratings www.ciao.com http://www.ciao.co.uk/Recent Reviews/Top100/Smartph -ones Mobile Phones 5302356 2/All http://www.ciao.co.uk/Apple iPhone 6 Review 6146860 produced by their reviewer role [26]. For example, for those users with few item ratings, they could have many helpful-ness ratings. This property of the rater role of users could be useful to mitigate the data sparsity and cold-start problems, which are two major challenges of traditional recommender systems[18]. Therefore, incorporating the rater role of users has potentials to improve the performance of recommender systems.

In this paper, we investigate the dual roles of users, i.e. the reviewer role and the rater role, in recommender systems. In essence, we study two challenges -(1) how to capture the rater role of users mathematically; and (2) how to exploit the dual roles of users simultaneously for recommendation. In an attempt to solve these two challenges, we propose a novel recommendation framework DualRec. The major con-tributions of this paper are summarized next:
The rest of the paper is organized as follows. In Section 2, we introduce the proposed framework DualRec with the details of how to capture the rater role of users and how to incorporate it with the reviewer role for recommendation. In Section 3, we present a method to solve the optimization problem of DualRec along with the time complexity analysis. In Section 4, we show empirical evaluation with discussion. In Section 5, we present the related work. In Section 6, we give conclusion with future work.
Before introducing details about the proposed framework, we first introduce notations used in this paper. Throughout this paper, matrices are written as boldface capital letters and vectors are denoted as boldface lowercase letters. For an arbitrary matrix M  X  R m  X  n , M ij denotes the ( i, j )-th entry of M while m i and m j mean the i -th row and j -th column of M ,respectively. || M || F is the Frobenius norm of M . Capital letters in calligraphic math font such as P are used to denote sets. We use | X | to denote the cardinality of a set, for example, |P| indicates the number of elements in the set P .

Typically there are three types of objects, namely, users, reviews and items. Let U = { u 1 ,u 2 ,...,u n } be the set of users, P = { p 1 ,p 2 ,...,p m } be the set of items and R { r 1 ,r 2 ,...,r N } be the set of reviews where n, m and N are the numbers of users, items and reviews, respectively. As reviewers, users can write reviews and rate items. For ex-ample, ( u i ,r j ,p k ) means user u i writes a review r gives a rating to item p k . Weusethematrix R  X  R n  X  m to denote the user-item rating matrix produced by the re-viewer role of users, where R ik is the rating score if u p k otherwise R ik =  X ? X  for an unknown rating from u i to p k . A  X  X  0 , 1 } N  X  m is the review item matrix where A jk =1ifreview r j is associated with item p k and A jk =0 otherwise. As raters, users can rate the helpfulness of re-views and H  X  R n  X  N is employed to represent user review helpfulness rating matrix where H ij is the helpfulness score if user u i gives a review r j aratingand H ij =  X ? X  de-notes an unknown helpfulness score from u i to r j .Weuse O ( R )= { R ij | R ij =? } to denote the set of unknown item ratings. Next we begin the introduction of the proposed framework with the basic model to exploit the reviewer role of users.
We choose matrix factorization based collaborative filter-ing as the basic model to exploit the reviewer role of users since it is a very practical and popular method to build rec-ommender systems [6, 25, 16, 7, 10, 27]. It tries to map both users and items to a joint latent factor space with di-mensionality K such that user-item interactions are modeled as inner products in that space[10]. The premise behind a low-dimensional factor model is that there is only a small number of factors that influence the user preferences and a user X  X  preference vector is determined by how each factor applies to the user[25]. Specifically, given the rating ma-trix R  X  R n  X  m , matrix factorization methods try to find two matrices U  X  R K  X  n and V  X  R K  X  m by solving the following optimization problem where I  X  X  0 , 1 } n  X  m is the indicator matrix defined as Figure 2: The figure gives an example of user X  X  dual roles in recommender systems. The yellow arrow means that a user, as a reviewer, writes a review and the review assigns a rating score to a product con-nected by a purple arrow. A green (dashed) arrow denotes that a user, as a rater, gives a helpfulness rating score to a review.
 U is the user latent factor matrix with each column u i be-ing u i  X  X  latent factor and V is the item latent factor matrix with each column v j being the latent property of the item p . The term  X  ( U 2 F + V 2 F ) is introduced to avoid over-fitting. The rating of u i to p j is predicted as u T i v the basic model for the reviewer role, next we will intro-duce our solution to capture the rater role and the proposed framework DualRec.
Helpfulness ratings produced by the rater role of users indicate users X  opinions toward reviews about items and it could reflect their opinions on items indirectly. Therefore, the key problem to capture the rater role of users for recom-mendation is how to learn implicit item ratings from help-fulness ratings produced by the rater role. Next we first introduce some definitions and then detail the mathemati-cal model to capture the rater role of users.

Assume that a review r k is about the item p j ,i.e, A kj Arater u i who rates r k about p j may or may not be a reviewer of p j . For example, as shown in Figure 2, user u rates the helpfulness of a review r 1 about item p 1 , and he/she also directly writes a review r 2 and gives an item rating to p ;while u 3 only rates the helpfulness of a review r 2 about p . Therefore, for a helpfulness rating from u i to r k about p ,i.e. H ik , according to whether u i writes reviews about p or not, we can assign it as either Type-I helpfulness rating or Type-II helpfulness rating . The definitions of these two types of helpfulness ratings are given as follows:
Definition 1. A helpfulness rating H ik isaType-Ihelp-fulness rating if the item p j associated with the review r H ik is also rated by user u i . In other words, u i not only ratesthehelpfulnessofthereview r k about p j but also di-rectly gives a rating score to p j . Formally, a Type-I help-fulness rating H ik satisfies: In Figure 2, H 21 is a Type-I helpfulness rating since u 2 r which assigns a rating to p 1 .

Definition 2. A helpfulness rating H ik is a Type-II help-fulness rating if the item p j associated with the review r H ik is not rated by user u i . In other words, u i only rates the helpfulness of the review r k about p j but not the item p Formally, a Type-II helpfulness rating H ik satisfies: In Figure 2, H 32 and H 33 are Type-II helpfulness ratings because u 3 doesn X  X  rate any items.

We further use P ij to represent the set of reviews about p that received Type-I helpfulness ratings from u i .Thatis,  X  r k  X  X  ij ,wehavethat r k is about p j ,and u i rates both r and also p j .Formally, P ij is defined as: Forexample,inFigure2, P 21 = { r 1 } because u 2 rated both p 1 and r 1 of p 1 ,while P 31 =  X  because u 3 doesn X  X  give a rating to p 1 .

Similarly, we use Q ij to represent a set of reviews about p which received Type-II helpfulness ratings from u i . That is,  X  r k  X  X  ij ,wehavethat r k is about p j ,and u i rates r but not p j .Formally, Q ij is defined as: For example, in Figure 2, Q 21 =  X  because while Q 31 = {
For a review r k that is written by u s and is associated with the item p j , R sj is the item rating from u s to p helpfulness rating H ik indicates the opinion of user u i the review r k and the corresponding item rating R sj from u s to p j . Therefore, both the helpfulness rating H ik and the item rating from the author of r k to p j ,i.e., R sj be useful to learn the implicit item rating from u i to p ness rating from u i to r k 4 . We further assume a linear map matrix w which predicts the implicit item rating  X  R ij from pose the following minimization terms to capture the rater role of users for recommendation as: min w +  X 
Next we give details about the inner working of Eq.(7) as:
The d -dimensional feature vector could encode features from users, reviews and pairs of item and helpfulness rat-ings. In this paper, we empirically find that some simple features from a pair of item and helpfulness ratings, i.e., like to investigate other features in the future.
With model components to capture the reviewer role and the rater role, the proposed recommender system DualRec that exploits the dual roles of users simultaneously is to solve the following optimization problem as: min where the first term models the reviewer role of users based on matrix factorization; and the second and third terms in-corporate the rater role of users.  X  and  X  are introduced to leverage the contribution of reviewer role and rater role. Similar to  X  ( U 2 F + V 2 F ), the term  X  w 2 2 is introduced to avoid overfitting.

If we only consider the reviewer role of users, we cannot learn the user latent factor u i for a user u i without any item rating scores. However, as shown in Eq.(10), we still canlearntheuserlatentfactorfor u i if u i has helpfulness ratings by incorporating the rater role of users. Also both user latent factor matrix U and the item latent factor matrix V are learned from the dual roles of users. Therefore, the proposed framework DualRec has potentials to mitigate the cold-start and data sparsity problems in recommendation.
The objective function in Eq.(10) is not convex if we up-date all the variables jointly. To optimize the objective func-tion, we use alternating least squares, which is a popular method for MF based collaborative filtering. Specifically, we optimize one variable by fixing other variables. Next, we give the details to optimize the objective function followed by the complexity analysis of the proposed algorithm.
To get the gradients of Eq.(10) w.r.t to U and V , we first remove terms that are irrelevant to U and V and rewrite the objective function as L ( U , V )= I ( U T V  X  R ) 2 where denotes Hadmard product and M is defined as Then the gradient of L ( U , V )withrespectto U is given as Therefore, U is updated as where is the learning rate. Similarly, the gradient of L ( U , V ) with respect to V is given as and V is updated as
Similarly, to get the gradient of Eq.(10) w.r.t to w , we first remove terms that are irrelevant to w and the objective is simplified as
L ( w )=  X  The derivative of Eq.(18) with respect to w is given as By setting the derivative to zero, we have the update rule for w as Algorithm 1 DualRec Input: R  X  R n  X  m , H  X  R n  X  N , A  X  X  0 , 1 } N  X  m ,K, X , X , X  Output:  X  R 1: for i=1 to n do 2: for j=1tom do 3: Construct P ij according to Eq.(5) 4: Construct Q ij according to Eq.(6) 5: end for 6: end for 7: Construct indicator matrix I , F , G 8: Initialize U  X  R K  X  n , V  X  R K  X  m 9: Initialize w by solving Eq.(7) with  X  set to 0 10: repeat 11: Calculate M using Eq.(12) 16: Update w using Eq.(20) 17: until Convergence 18: Calculate  X  R = U T V 19: return  X  R
With the update rules of U , V and w given above, the optimization algorithm for DualRec is shown in Algorithm 1. Next we briefly review Algorithm 1. For each user-item pair, we first find P ij and Q ij from line 1 to line 6. Based on R , P ij and Q ij , we can construct the indicator matrix I , F and G in line 7. We randomly initialize U and V in line 8. In order to speed up the learning process, w is initialized by solving Eq.(7) with  X  = 0 since it can give a better ap-proximation to w than randomly guessing in line 9. After initialization, U , V and w are updated sequentially until it converges from line 10 to line 17. Finally, the rating ma-trix is reconstructed as  X  R = U T V . With the reconstructed matrix  X  R , an unknown rating from u i to p j is predicted as  X  R
The algorithm is composed of two parts, i.e., initialization and updating. The most time consuming part is the updat-ing part. The computational cost of U T V in Eq.(13) is O ( nkm ). Considering the fact that I is very sparse, we have that I ( U T V  X  R ) is also very sparse. Thus, the com-putational cost of V [ I ( U T V  X  R )] T is about O ( nkm ). Then the computational cost of  X  L ( U , V )  X  U using Eq.(15) is O ( nkm ). Similarly, the computational cost of  X  L ( U , V ) Eq.(15) is also O ( nmk ). To update w using Eq.(20), we can each iteration. Also, considering the fact that G is very sparse, the computational cost of  X  i j G ij u T i v j z ij O ( ks ), where s is the number of nonzero elements in G . Thus, the computational cost of w is O ( ks ). Thus the total cost of the algorithm is O ( t ( nkm + ks )), where t is the num-ber of iterations. From the analysis, we can see that the computational cost of Algorithm 1 in each iteration is ac-tually comparable to that of the matrix factorization based collaborative filtering.
In this section, we conduct experiments to evaluate the effectiveness of the proposed framework DualRec. Specifi-cally, we aim to answer the following two questions:
We begin by introducing datasets and experimental set-tings, then we compare DualRec with the state-of-the-art recommendation systems to answer the first question and we investigate the capability of the proposed framework in han-dling the cold-start problem to answer the second question. Finally further experiments are conducted to investigate the sensitivity of DualRec to the parameters.
We collect two datasets from real-world social media web-sites, i.e., Epinions 5 and Ciao. From the originally collected datasets, we filter out users who rated few items and also items that received less than 10 ratings. For both datasets, users can rate products and reviews with scores from 1 to 5. The statistics of the resulting datasets are shown in Ta-ble 1. In the table, H.R. denotes helpfulness rating, Type-I H.R. denotes Type-I helpfulness ratings and Type-II H.R indicates Type-II helpfulness ratings. It is evident from the statistics in the table that, on average, users have more help-fulness ratings from the rater role than item ratings from the reviewer role of users.

Two widely used evaluation metrics, i.e., mean absolute error (MAE) and root mean square error (RMSE), are adopted to evaluate the rating prediction performance. Specifically, MAE is defined as http://www.epinions.com/ and RMSE is defined as whereinbothmetrics, T denotes the set of ratings we want to predict, R ij denotes the rating user u i gives to item p and  X  R ij denotes the predicted rating from u i and v j
For each dataset, we random select x % as the training set and the remaining 1  X  x %asthetestingset.Toinvestigate the capability of the proposed framework in handling the data sparsity problem, we vary x as { 10 , 20 , 40 } in this work. The random selection process is carried out 10 times inde-pendently, and the average MAE and RMSE are reported. Note that previous work demonstrated that small improve-ment in RMSE or MAE terms can have a significant impact on the quality of the top-few recommendation [8].
To answer the first question, we compare the proposed system with several representative systems. The comparison results are summarized in Tables 2 and 3 for RMSE and MAE, respectively. The representative systems in the table are defined as:
Note that parameters of all baseline methods are deter-mined via cross validation. For DualRec, we set  X  =1,  X  =0 . 1,  X  =0 . 1and  X  = 1 throughout the experiments. More details about parameter selection for the proposed framework will be discussed in the following subsections. From results in the Table 2 and 3, we make the following observations:
Via aforementioned analysis, we can draw an answer to the first question -incorporating the rater role of users not Training Set. only can significantly improve the recommendation perfor-mance but also can mitigate the data sparsity problem in recommender systems.
To answer the second question, we investigate the capa-bility of the proposed framework DualRec in handling cold-start users. In detail, we first randomly select x % as training set and the remaining 1  X  x % as testing set where x is also varied as { 10 , 20 , 40 } . Then, we randomly select 5% users from the training set and remove their item ratings from the training set to the test set. While the helpfulness ratings for these 5% users are kept. In this way, these 5% of users do not have any item ratings but may have helpfulness ratings and we consider these 5% of users as cold-start users. For those baseline methods that cannot handle cold-start users, we randomly guess their item ratings for cold-start users. The results on those training sets with cold-start users are summarized in Table 4 and Table 5 for RMSE and MAE, respectively. Note that numbers inside parentheses in Table 4 and Table 5 denote the performance reductions compared to the performance without cold-start users in Table 2 and Table 3, respectively.

From the tables, we make the following observations
In summary, the introduction of cold-start users could de-grade the recommendation performance and the proposed framework is relatively more robust to cold-start users by incorporating the rater role of users.
The proposed framework has two importance parameters  X  and  X  , which together control the contributions of incor-porating the rater role of users for recommendation. In this section, we investigate the impact of the parameters  X  and  X  on the performance of the proposed framework DualRec. We only show results on Epinions and Ciao with 20% and 40% without cold-start users since we have similar obser-vations with other experimental settings. We empirically set the latent dimension K = 10, the regularization pa-rameter  X  =0 . 1and  X  =1. Wevarythevaluesof  X  as { The results are shown in Figure4.

It can be observed from the figure: without cold-start users in Table 2.
 without cold-start users in Table 3.

In this paper, we investigate the duel roles of users for recommendation; hence our work is related to traditional recommender systems that exploit the reviewer role of users from recommendation, as well as helpfulness rating predic-tion, which investigates the rater role of users.
Recommender systems can be roughly categorized as con-tent based recommender systems[1, 28, 17, 20] and collabo-rative filtering[5, 23, 29]. Content based recommender sys-tems recommend items based on user X  X  profile information or similar to the ones the user preferred in the past, while CF only requires past user ratings to predict unknown ratings and has attracted more and more attention. Despite the success of CF based recommender systems, most of them only consider user X  X  role as reviewers but ignore their role as raters[25, 16, 10, 4, 27, 2]. One challenge of traditional recommender system is that the rating matrix is usually very sparse, which degenerates the performance of many recommender systems. To deal with the data sparsity prob-lem, there are some recommender systems relying on ex-tra sources to find similar users or similar items. For ex-ample, [15, 14] utilize trust networks by assuming that a user X  X  taste is similar to that of his/her trusted users; [4] incorporates user and item graphs to a matrix factorization framework, which captures user and item similarity; and [13] explores heterogeneous relations for collaborative filtering. Some algorithms also rely on building users profile[34, 19, 32]. For example, [34] uses initial interview process for cold-start users. [19] constructs tensor profiles for user/item pairs from their individual features. The proposed framework dif-fers from aforementioned methods where we consider users X  dual roles in real-world recommender systems. Helpfulness ratings encode users X  opinions on reviews of items; hence they could be useful to infer users X  opinions on items. There-fore, we propose to explicitly learn implicit item ratings from helpfulness ratings, which not only captures the rater role of users in recommendation but also has potentials to mitigate the data sparsity and cold-start problems in recommenda-tion.
The rater role of users allows them to express their opin-ions on reviews about items via helpfulness ratings, and helpfulness rating prediction has attracted increasing atten-(c) Epinions 40% RMSE (g) Ciao 40% RMSE tion recently to understand the rater role of users. [3, 31, 11, 26, 12]. [3] estimates the helpfulness of product reviews by mining text and reviewer characteristics. [26] predicts helpfulness ratings by incorporating the context of reviews and social networks. [12] uses multilayer perceptron neural networks to predict online reviews. Despite various mod-els proposed to predict helpfulness ratings, there X  X  few work about using helpfulness ratings for recommendation. [21] uses helpfulness rating to measure the quality of the review and then uses the quality score as a weight to control the ma-trix factorization model. In other words, it uses helpfulness ratings of reviews to indicate the reliability about their asso-ciated item ratings; while the proposed framework explicitly models how to learn implicit item ratings from helpfulness ratings. Therefore, the proposed framework is substantially different from [21] -(1) the investigation perspectives are different; (2) the proposed formulations are different; and (3) the proposed framework has potentials to mitigate the data sparsity and cold-start problems by incorporating the rater role of users.
In this paper, we investigate users X  dual roles, i.e., review-ers that give item ratings and raters that give helpfulness ratings, to advance traditional recommender systems since the vast majority of existing recommender systems only con-sider the reviewer role of users. To incorporate the rater role of users, we study how to learn implicit item ratings from helpfulness ratings and how to exploit the dual roles simul-taneously for recommendation, which lead to a novel recom-mender system DualRec. Experimental results show that the proposed framework outperforms several state-of-the-art recommender systems. Further experiments are conducted to demonstrate the capability of the proposed framework in mitigating the data sparsity and cold-start problems for recommendation by incorporating the rater role of users.
There are several interesting directions that need further investigation. First, in this work, we choose matrix factor-ization as our basic model to incorporate the rater role of users, and we would like to investigate other basic models. For example, one new direction in recommender system is to explore implicit hierarchical structures of users and items by using deep non-negative matrix factorization[30]. We would investigate if user duel roles can be incorporated into that model. Second, for effectiveness, we choose linear regres-sion to infer implicit item ratings from helpfulness ratings; we will investigate if other models can improve the perfor-mance. Since social networks are pervasively available in social media and provide independent sources for recom-mendation, we would like to investigate if social networks can be utilized to advance the implicit item rating learning process.
This material is based upon the work supported by, or in part by, Office of Naval Research (ONR) under grant number N000141410095 and Army Research Office (ARO) under grant number 025071. [1] M. Balabanovi  X  c and Y. Shoham. Fab: content-based, [2] H.Gao,J.Tang,X.Hu,andH.Liu.Exploring [3] A.GhoseandP.G.Ipeirotis.Estimatingthe [4] Q. Gu, J. Zhou, and C. H. Ding. Collaborative [5] J.L.Herlocker,J.A.Konstan,A.Borchers,and [6] T. Hofmann. Latent semantic models for collaborative [7] Y. Hu, Y. Koren, and C. Volinsky. Collaborative [8] Y. Koren. Factorization meets the neighborhood: a [9] Y. Koren. Collaborative filtering with temporal [10] Y. Koren, R. Bell, and C. Volinsky. Matrix [11] N. Korfiatis, E. Garc  X   X a-Bariocanal, and [12] S. Lee and J. Y. Choeh. Predicting the helpfulness of [13] C. Luo, W. Pang, Z. Wang, and C. Lin. Hete-cf: [14] H. Ma, I. King, and M. R. Lyu. Learning to [15] P. Massa and P. Avesani. Trust-aware recommender [16] A. Mnih and R. Salakhutdinov. Probabilistic matrix [17] R. J. Mooney and L. Roy. Content-based book [18] M. Papagelis, D. Plexousakis, and T. Kutsuras. [19] S.-T. Park and W. Chu. Pairwise preference regression [20] M. J. Pazzani and D. Billsus. Content-based [21] S. Raghavan, S. Gunasekar, and J. Ghosh. Review [22] P. Resnick and H. R. Varian. Recommender systems. [23] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl. [24] L. Si and R. Jin. Flexible mixture model for [25] N. Srebro, J. Rennie, and T. S. Jaakkola.
 [26] J. Tang, H. Gao, X. Hu, and H. Liu. Context-aware [27] J. Tang, X. Hu, H. Gao, and H. Liu. Exploiting local [28] R. Van Meteren and M. Van Someren. Using [29] J. Wang, A. P. De Vries, and M. J. Reinders. Unifying [30] S. Wang, J. Tang, and H. Liu. Exploring implicit [31] W. Xiong and D. Litman. Automatically predicting [32] M. Zhang, J. Tang, X. Zhang, and X. Xue. Addressing [33] S. Zhang, W. Wang, J. Ford, and F. Makedon.
 [34] K. Zhou, S.-H. Yang, and H. Zha. Functional matrix
