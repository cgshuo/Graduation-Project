 1. Introduction
In the recent years, secure private communication methods have aroused the interest of many researchers all over the world.
The most general architecture for image encryption is the permutation X  X iffusion architecture. There are two iterative stages in this kind of image cryptosystems ( Chen et al., 2004 ). The permutation stage changes the position of image pixels but does not alter their values. In the diffusion stage, the pixel values are modified sequentially so that a tiny change in one pixel is spread out to almost all pixels in the whole image. The whole permutation X  X iffusion round repeats for a number of times so generation of secret keys and control parameter are essential issues in increasing security and complexity of the algorithm.
A good encryption algorithm should be sensitive to the cipher keys, and the key space should be large enough to make brute-force attacks infeasible. In order to achieve such type of security, employing chaotic systems in generating the secret keys and parameters has become one of the most important topics in secure communications ( Lian, 2009 ). In the literature, lots of encryption methods are proposed which are based on using chaotic systems in this era ( Wei et al., 2006 ; Joshi et al., 2009 ; Tong and Cui, 2008 ; Tong and Cui, 2009 ; Wong et al., 2008 ). For the special properties such as parameters and initial-value sensi-tivity, ergodicity and quasi-randomness, chaos is used in data protection, widely ( Lian, 2009 ).

Due to their good properties such as high nonlinearity, para-meter sensitivity and learning ability, neural networks have been widely used as the other choice for information protection, such as data encryption, data authentication and intrusion detection ( Lian, 2009 ; Chan and Cheng, 2001 ; Xiao et al., 2005 ). Neural networks X  confusion and diffusion properties have been used to design encryption algorithms, such as the stream ciphers ( Chan and Cheng, 2001 ; Karras and Zorkadis, 2003 ) or the block ciphers ( Lain et al., 2004 ; Lian, 2009 ).

As a combination of neural networks and chaos, a chaotic neural network (CNN), has both the characteristic of neural network and chaos. Especially it has more complex dynamic behavior and so, it is expected to have better performance as an image encryption tool. Therefore, such combinations have been employed in some researches as more efficient methods for information protection and information encryption ( Lian, 2009 ). As an instance, in ( Lian et al., 2006 ) a three-layer neural network has been used to construct a hash function. The three neuron-layers are used to realize data confusion, diffusion and compression. And the multi-block hash mode is presented to support the plaintext with variable length. Socek and Culibrk ( Socek and Culibrk, 2005 ) analyzed a clipped Hopfield neural network-based encryption system for digital images and videos, and pointed how to ensure the security of stream through improving some scheme, such as randomness properties of the generated key-stream. In ( Lian, 2009 ), a CNN structure is pro-posed for block cipher in which the employed chaotic activation function in the so-called chaotic neuron layer realizes data diffusion and a linear neuron layer realizes data confusion. This structure implies good computing security, but due to constant weight and bias matrices, it seems vulnerable to attacks.
In this paper, the idea in ( Lian, 2009 ) has been generalized to achieve a novel block cipher based on CNN. These cryptosystem is based on a 3-input 3-output neural network structure that comprised of two 3-neuron layers called chaotic neuron layer (CNL) and permutation neuron layer (PNL). The values of three
RGB (Red, Green and Blue) color components of image constitute inputs of the CNN and three encoded streams are the network outputs. The weights and biases matrices of CNL are generated by three well-known chaotic systems i.e. Chua, Lorenz and L  X  u systems. Besides, a chaotic tent map is employed as the activation function of this layer. The output of CNL, i.e. the diffused information, is the input of PNL. In PNL a linear permutation in conjunction with a 2-dimentional nonlinear shuffling are applied to the data to obtain three-dimensional permutation. The overall process is repeated several times to make the encryption process more robust and complex. Simulations show that the suggested image encryption scheme has the advantage of large key space and high security.

The rest of this paper is organized as follows. In Section 2 ,a short background about the employed chaotic systems and chaotic function and their behavior is presented. The proposed encryption and decryption methods are described in Section 3 and the performance security analysis results of the proposed algorithm is brought in Section 4 .In Section 5 the paper is concluded. 2. Preliminary Materials
As stated earlier, in order to implement the chaotic neural network for image encryption, some chaotic systems are used for generating secret keys as well as neural network parameters. The details of implementing this network will be described in Section 3 . Beforehand, a short introduction to the employed chaotic systems, the tent map and the Cat map permutation algorithm will be presented in this section. 2.1. The employed chaotic systems
A. Chua system: The chaotic Chua system is modeled by the following equations ( Botmart and Niamsup, 2007 ): _ x 1  X  a 1  X  y 1 f  X  x 1  X  X  _ y 1  X  x 1 y 1  X  z 1 _ z  X  b 1 y 1  X  1  X  where a 1 , b 1 are constant parameters and f  X  x 1  X  X  2 x
With a 1  X  10, and b 1  X  100/7 system has chaotic behavior ( Botmart and Niamsup, 2007 ). The projection of chaotic attractors for a Chua system with a 1  X  10, b 1  X  100/7 are shown in Fig. 1 (a) X (c).

B. Lorenz system : The dynamics of chaotic Lorenz system may be represented by the following equations ( Li and Yin, 2009 ): _ x 2  X  a 2  X  y 2 x 2  X  _ y _ z  X  x 2 y 2 b 2 z 2  X  2  X  where a 2 , b 2 , and c 2 are its constant parameters. With a b  X  8/3, c 2  X  28, system has chaotic behavior ( Li and Yin, 2009 ) which has been illustrated in Fig. 1 (d) X (f) via the projection of system attractors of its state space trajectories.

C. L  X  u system: The chaotic L  X  u system model can be described as ( L  X  u et al., 2002 ): _ x 3  X  a 3  X  y 3 x 3  X  _ y 3  X  x 3 z 3  X  c 3 x 3 _ z  X  x 3 y 3 b 3 z 3  X  3  X  where a 3 , b 3 , c 3 are parameters. With a 3  X  36, b 3  X  3, c system has chaotic behavior ( L  X  u et al., 2002 ). Trajectories of the state variables of this chaotic system are also shown in
Fig. 1 (g) X (i). 2.2. The tent map and its properties
The discrete chaotic tent map is a 1-D piecewise-linear map defined by the following equation ( Masuda and Aihara, 2002 ): f  X  a , x  X  X  x de denotes floor and ceiling of x , respectively. Generally, S is selected according to the plaintext. For an 8-bit image, S  X  256 is intuitive. The discrete tent map is a one-to-one mapping. In order to illustrate the impact of tent map on a time series, a 16 16 block of Lena image is selected and arranged in the form of time series and then applied as the input to the tent map system. The resulting time series is shown in Fig. 2 . As seen, the output of the tent map system has chaotic behavior, while the input of this system has a quasi-periodic behavior.

The inverse of above-mentioned tent map is also defined as ( Masuda and Aihara, 2002 ): 2.3. CAT map permutation algorithm
In the permutation stage of image cryptosystems, three types of two-dimensional chaotic maps are usually employed: the
Standard map, Cat map and generalized Baker map. Cat map is the commonest map used in the literature. Suppose the size of the original grayscale image D is N N and the coordinates of the as ( Xiao et al., 2009 ): ^ x ^ y !  X  Q where, p and q are positive integers which are called Cat map new positions, respectively. Since det  X  Q  X  X  1, the map is area-preserving. f
Tent  X  a , y  X  X 
S a or ay = S ay = S  X  0 3. The proposed image encryption and decryption scheme
In this section, the step by step procedures and the properties of the proposed image encryption scheme as well as its decryp-tion process will be described. 3.1. Encryption algorithm The flowchart of the proposed encryption process is shown in the encryption system: a chaotic key generator block, chaotic neuron layer (CNL) and permutation neuron layer (PNL). Each of the last two layers is 3-input 3-output and includes three neurons. The chaotic key generator block supports these layers by their corresponding weights and biases. The details of layer inputs of CNL are the RGB components of the input image. A linear combination of the inputs are passed through two non-linear stages i.e. nonlinear normalization and bitxor operations and then enter to the activation function block which is a chaotic tent map. The output of this layer is the diffused information which is the input of the PNL. In this layer, the permutation is done in two steps. In the first step, a linear permutation is applied to the secret data. The permutation matrix is generated by the chaotic key generator block. The permuted strings are then nonlinearly shuffled via 2-dimensional Cat map permutation algorithm ( Section 2.3 ). This procedure is repeated several times ( R times) to achieve higher security and more complexity. In more details, the encryption process may be summarized in the following steps:
Step 1: In the proposed algorithm, 160 bits authentication code is used as secret keys. Therefore, the key space size is 2 160 . Select a sequence of 160 bits as the authentication code K , and then split them into five groups, that are further mapped into nine initial parameters x 1 (0), y 1 (0), z 1 (0), x keys are generated from the authentication code. Next, set R as the number of iterations, and N 0 as the complementary secret keys.
 Step 2: Iterate three chaotic Chua, Lorenz and L  X  u systems using
Runge X  X utta algorithm for N 0 times to avoid the harmful effect of transitional procedure, thus x 1 ( N 0 ), y 1 ( N x ( N 0 ), y 2 ( N 0 ), z 2 ( N 0 ), x 3 ( N 0 ), y 3 ( N 0 r the iteration number. Set r  X  1.
 Step 3: Since the image D is a N N pixels image, for
N 0  X  i , i  X  ( r 1) ( N N )  X  1, y , r ( N N ) iterate the three chaotic systems, where i  X  1, 2, y represents the ith iteration of chaotic systems. For each iteration compute W dl , B dl matrices in the following way:
W a  X  j , i  X  X  mod  X  9 x j  X  N 0  X  i  X  9 f loor  X  x j  X  N 0
A l , i  X  X  a  X  1 , i  X  , a  X  2 , i  X  , a  X  3 , i  X  T b  X  j , i  X  X  dec 2 bi  X  mod  X  9 y j  X  N 0  X  i  X  9  X  f loor  X  y
B dl , i  X  X  b  X  1 , i  X  , b  X  2 , i  X  , b  X  3 , i  X  T  X  7  X  where, W dl , i is the weight matrix and B dl , i and A l , i matrices of CNL, mod( x , y ) returns the remainder after division, floor ( x ) rounds the elements of x to the nearest integers less than or equal to x and dec2bi ( x ) converts decimal number x to a binary value. Besides, I is a 3 3 identity matrix, and the parameter a prevent from occurrence the singularity problem in W 1 dl , i matrix. The next matrix to be determined is W matrix is the weight matrix of PNL and is employed for the linear shuffling of the three color components of the output of
CNN, i.e. in order to change the positions of the (R, G, B) components of the image. Therefore, it consists of 3 3 matrix with just one  X 1 X  in each of its rows/columns. In order to determine W cl , let us define:
D i  X  X  x 1  X  N 0  X  i  X  , y 2  X  N 0  X  i  X  , z 3  X  N 0  X  i  X  w 1 , i  X  arg  X  max  X  D i  X  X  w 2 , i  X  arg  X  min  X  D i  X  X  X  8a  X  where, by arg  X  max  X  D i  X  X  , we mean the index of the maximum value in the vector D i . Then the non X  X ero term of first and second rows of matrix W cl , k is determined as and, the non-zero term of the third row is determined such that it exists just one  X 1 X  in each row/column of the matrix W ( for example: [010;001;100] [R, G, B]  X  [G, B, R]). Then, the control parameters of Eq. (5) are derived as ( Wang et al., 2009 ) p i  X  f loor  X  mod  X  z 1  X  N 0  X  i  X  2 24 , N  X  q i  X  f loor  X  mod  X  mod  X  z 1  X  N 0  X  i  X  2 48 , 2 24  X  , N  X  X  9  X 
Step 4: Suppose that the input image P is N N pixels. Then, corresponding to each pixel k , there is a vector X k of order three with the RGB components of the pixel as its entries of the image will be a 3 ( N N ) matrix X with columns X k , k  X  1, y ,( N N ). Compute the matrix X as the input of CNL.
Step 5: Considering Fig. 3 , in order to generate the secret information, several operations are applied to each column of matrix X , i.e. X k , k  X  1, y ,( N N ) and i  X  ( r 1) ( N N )  X  1, r ( N N )as  X  Normalization (mapping the values of Y 1, k into interval [1,255]): where, N  X  x  X  X  q 1 tanh  X  q 2 x  X  X  q 3 , and q 1 , q 2 , q parameters.  X  Manipulation: Y 3 , k  X  f loor  X  Y 2 , k  X  X  mod  X  Y 2 , k , f loor  X  Y 2 , k  X  XOR operation  X  Applying chaotic activation function where, the symbol in Eq. (13) represents the exclusive OR introduced in Eq. (4a).

Step 6: The output of the CNL is the 3 ( N N ) matrix Y 5 which is then permuted in two stages by PNL. At first, each column of Y 5 i.e. Y 5, k , k  X  1, y ,( N N ) is linearly permuted as
Usually, the structure of the neural network layers (activation functions of neurons, weight matrix and bias vector) are regulated regarding the design purposes. Here, our purpose is to change the positions of the red, blue and green compo-nents of the image using the neural structure, i.e. linear neuron with proper weights, but and without biases. Therefore, it is weight matrix W cl , i is as clarified in step 3.

Step 7: In this stage, the output of the linear permutation stage are shuffled. For this purpose, each row of matrix Y 6 is arranged in a N N matrix and thus three output N N matrixes are provided. Then, each matrix is permuted in two-dimensional by Cat map permutation algorithm of
Section 2.3 . Considering the three nonlinearly permuted matrices as three planes of encrypted image (red, green, blue), the output encrypted image is derived, which is called Y 7
Step 8: If the current round is not the final round of encryption ( r o R ), then set P  X  Y 7 . Set r  X  r  X  1 and return to step 3.
Otherwise, set P final  X  Y 7 is the final cipher-image and encryp-tion process is completed. 3.2. Decryption algorithm
In the decryption stage, the reverse of encryption process should be performed. Therefore, the inverse of PNL and CNL operations should be synthesized and applied to the encrypted image, iteratively. The decryption process flow chart has been shown in Fig. 5 . From this figure, the decryption process can be summarized as
Step 1: Considering the authentication code K, generate secret keys of x 1 (0), y 1 (0), z 1 (0), x 2 (0), y 2 (0), z 2 (0), x z 3 (0). Having known R and N 0 , iterate the three chaotic Chua,
Lorenz and L  X  u systems (Eqs. (1) to (3)) for i  X  1, y , N ( N N ). Set r  X  R . Set the input image H  X  P final .
Step 2: For N 0  X  i , i  X  ( r 1) ( N N )  X  1, y , r ( N N ), compute
Step 3: For each plane of encrypted image, H , execute the reverse action of nonlinear permutation employing Eq. (5). Call it H 1 . Represent H 1 in a 3 ( N N ) matrix form.

Step 4: Considering H 1, k , k  X  1, y ,( N N ) as the k th column of matrix H 1 , and i  X  ( r 1) ( N N )  X  1, y , r ( N N ), the inverse of linear permutation is done as
H
Step 5: The secret information is decodes as  X  Manipulation:
H 3 , k  X  f loor  X  H 2 , k  X  X  mod  X  H 2 , k , f loor  X  H 2 , k
H
H
H  X  De-normalization (inverse mapping of Eq. (11)):
H
H where, in Eq. (18), f 1 Tent is the inverse of chaotic tent map as it is defined in Eq. (4b) , and N 1 ( ) in Eq. (21) is the inverse of normalization function in Eq. (11).

Step 6: Convert the 3 ( N N ) matrix of H 8 to the N N pixel image with three color component. If r 4 1, set r  X  r 1, H  X  H and go to step 2. Otherwise, decryption process has been completed and H 8 is the decrypted image.

Remark 1. In the proposed block-cipher, three components of color image, i.e., R, G, B, comprises the input of the CNN. Thus, with arranging the pixels of gray-level image in certain order as R  X  P i , G  X  P i 1 ,
B  X  P i 2 , 8 &gt; &lt; &gt; :
The process of encrypting color image can be applied to the gray-level image similarly until the cipher image satisfies the desired performance requirement. 4. Performance and security analysis
A good encryption procedure should be robust against all kinds of cryptanalytic, statistical and brute-force attacks. Some security analysis has been performed on the proposed image encryption scheme. 4.1. Key space security
The security of key includes two aspects. One is the size of the key space, which characterizes the capability of resisting brute-force attack. A short key means that the best encryption algorithm can be broken by exhaustive search (also known as brute-force attacks) in a reasonable amount of time, while the reverse is not true. The other is the key non-recovery property. It must be computationally infeasible to recover the key. In our algorithm, a 160 bits authentication code is used as secret keys. Moreover, the parameters R , N 0 , p , q could also be used as the secret keys.
Therefore, an authentication code of at least 224 is feasible for the proposed algorithm. In order to examine if the selected key size is enough, the suggestions in ( Lian, 2009 ; Lenstra and Verheul, 2001 ; NIST Special Publication 800-133 , 2011 ; Bennett et al., 1997 ; Ferguson and Schneier, 2003) has been considered, here. In ( Lian, 2009 ), Lian suggested that the key space should be at least 2 for a sufficient security level against brute-force search attacks. The proposed cryptosystem has fulfilled this requirement.
In ( Lenstra and Verheul, 2001 ), Lenstra and Verheul took the data points from attacks on keys of various lengths and extrapolated them via Moore X  X  Law. They concluded that in 2030, it seems that a 93-bit key size is sufficient for security against the brute-force attacks, and that in 2050 this will be true for a 109-bit key. From this, one might conclude that, a 128-bit key is sufficient to keep data confidential for the next few decades. In ( NIST Special
Publication 800-133, 2011 ), NIST, presumably based on similar types of calculation, recommend a minimum of 128 bits of strength to keep data confidential  X  X  X eyond 2030 X  X . Thus, in order to insure the required level of security, an authentication code of 160 bit which has been considered in the proposed method seems been proved that a brute-force key search on a quantum compu-ter cannot be faster than roughly 2 n /2 invocations of the under-lying cryptographic algorithm, compared with roughly 2 n in the classical case. Thus, in the presence of large quantum computers the reasons why AES supports a 256-bit key length ( Ferguson and
Schneier, 2003 ). Quantum brute force is easily defeated by doubling the key length, which has little extra computational cost in ordinary use. This implies that at least a 218-bit key is required to achieve 109-bit security rating against a quantum computer up to about 2050. A conclusion can be drawn that the key space of the proposed algorithm is large enough to resist the brute-force attack, for the next few decades, even if quantum computing is employed.

Additionally, compared with the proposed methods in ( Yen and Guo, 1999 ; Lian, 2009 ), this algorithm is of higher security against known-plaintext or selected-plain text attacks. In the algorithm proposed in ( Yen and Guo, 1999 ), only weight matrices are used as keys, which can be recovered by known-plain text or select-plain text attackers. In the proposed method, in addition to the weight matrices, the chaotic function f ( ) and the parameters to recover these keys. Furthermore, the weight and bias matrices are constructed from three different chaotic maps and are different for each pixel in different iterations. Chaotic activation functions and chaos-based 3-dimentional shuffling makes this method more robust against variable attacks. Therefore, for successful decryption of the encrypted data, in addition the secret keys, the above-mentioned parameters and functions as well as the decryption process must be known. 4.2. Histogram analysis
An image histogram illustrates the distribution of pixels X  density versus their color intensity level. To show the feasibility of the proposed scheme, we employed the 256 256  X  X  X ena X  X ,  X  X  X aboon X  X  and  X  X  X eppers X  X  color images as our plain color images.
Taking R  X  2, the plain-images, cipher-images and the decrypted images mid the underlying histograms of these images versus their three main components (red, green and blue colors) have been shown in Figs. 6 X 8 . As it is illustrated, the histograms of the cipher-image are fairly uniform, and have good statistical proper-ties resembling white noise. In this manner, no information could be achieved from the encrypted image about the order of pixels in the original image and hence does not provide any clue to employ any statistical attack on the proposed image encryption procedure.
Similar situation has been observed for other images (not shown here).

Additionally, the Lena ciphered image in the gray-level form with the proposed algorithm is compared with the traditional cipher AES ( Mollin, 2006 ) and the algorithm only based on tent map ( Masuda and Aihara, 2002 ) as well as chaotic neural network of ( Lian, 2009 ). In the experiments, the image is encrypted by AES ( Mollin, 2006 ), the algorithm ( Masuda and Aihara, 2002 ), chaotic neural network of ( Lian, 2009 ) and the proposed algorithm, respectively. Seen from the results shown in Fig. 9 , the images encrypted by AES ( Mollin, 2006 ), and the algorithm ( Masuda and Aihara, 2002 ) are still intelligible, some patterns in the encrypted image by the chaotic neural network in ( Lian, 2009 ) are also intelligible in Fig. 9 (c), while the proposed algorithm encrypts the image into an unintelligible one ( Fig. 9 (d)). 4.3. Key sensitivity
In order to demonstrate the key sensitivity of our algorithm, several experiments have been done under the same condition but with a small mismatch in secret keys. That is, in each case, a relative mismatch of order 10 14 exists in just one of the secret keys. Here, we only represent the variation of four parameters from total keys. The secret keys of the different scenarios are chosen as i. x 1  X  0  X  X  0 : 3  X  1 e 14  X  0 : 30000000000001 , ii. x 1  X  0  X  X  0 : 3 , x 2  X  0  X  X  1  X  1 e 14  X  1 : 0000000000001 , iii. x 1  X  0  X  X  0 : 3 , x 2  X  0  X  X  1 , iv. x 1  X  0  X  X  0 : 3 , x 2  X  0  X  X  1 , x 3  X  0  X  X  1 : 75 , Fig. 10 shows the decryption result for Lena image for these four scenarios with r  X  1. For each case, the decrypted image as well as the corresponding histogram of H 8 in Eq. (22) has been shown. As it is seen, even with such a small mismatches in the secret keys, the decrypted image is absolutely different from the real plain-image. Besides, the histograms have negative values. This obser-vation shows that just such a small mismatch in the secret keys results in incorrect decrypted pixels both in value and sign. Especially, this behavior makes decryption impossible when r is greater than one. This is that to this fact that the input of inverse of tent map ( f 1 in Eq. (4b)) must be positive, and XOR operation with negative number is impossible. Therefore, negative values in the first round of decryption makes would block the decryption procedure. This is, however, due to the high complexity and the chaotic properties of the proposed algorithm. From this property, it is seen that the proposed algorithm show very high robustness against just a small mismatch which implies a very high security in data encryption.
 4.4. Correlation coefficient analysis
As it is known, the correlation of between adjacent pixels in the original image is very high. An effective encryption algorithm should reduce the correlation between adjacent pixels. The following formula are used for calculation of the correlation coefficient ( r xy )as e  X  x  X  X  1 N d  X  x  X  X  1 N cov  X  x , y  X  X  1 N r  X  p ffiffiffiffiffiffiffiffiffi where x and y are the gray values of two adjacent pixels in the the mean. For example, in Fig. 11 , the correlations of both vertically and horizontally adjacent pixels in Lena plain-image and ciphered image have been compared. From the graphs in this figure, it is observed that while two adjacent pixels in the original are highly correlated, there is negligible correlation between the two adjacent pixels in the encrypted image. In the next stage, the correlation between two vertically adjacent pixels, two horizon-tally adjacent pixels, two diagonally adjacent pixels, are also computed for a batch of 5000 adjacent pairs of the original and ciphered images. The correlation coefficients of proposed cipher of Figs. 6 (e), 7 (e) and 8 (e) are compared with the traditional cipher AES ( Zeghid et al., 2007 ), the algorithm ( Rhouma et al. ), and the algorithm in ( Hongjun and Xingyuan, 2010 ), respectively, in Table 1 . From Table 1 , it is observed that the proposed image encryption have better performance in comparison with other algorithms. Therefore, it can clearly be seen that our algorithm can destroy the relativity effectively; the proposed image encryption algorithm has a strong ability to resist statistical attack. 4.5. Information entropy analysis
The information entropy is defined to express the degree of uncertainties in a system. For a message source m, the information entropy H ( m ) can be calculated as H  X  m  X  X  where p ( m i ) represents the probability of occurrence of m denotes the base 2 logarithm. For a random process, every symbol has equal probability. Therefore, for example, for N m  X  8, every symbol in m  X f m 1 , m 2 , ... , m 2 8 g has equal probability of
Here, the performance of the proposed encryption/decryption method has been examined via analyzing the information entropy of the ciphered image of Fig. 6 (e). For the ciphered image, the information entropy has been calculated for gray level value of the pixels which is H ( m )  X  7.9951, while this value for the ciphered image with AES algorithm ( Zeghid et al., 2007 )is H ( m )  X  7.91.
Additionally, the information entropies of the three color compo-nents (R, G, B) of Figs. 6 (e), 7 (e) and 8 (e) are compared with the algorithms ( Rhouma et al. ; Hongjun and Xingyuan, 2010 )in
Table 2 . Our scheme leads to the highest entropy compared with the other algorithms. They are very close to the ideal value 8. The results show that the cipher-image is close to a random source and the proposed algorithm is secure against the entropy attack. 4.6. Speed analysis
Apart from the security considerations, some other issues on image encryption are also important, such as the running speed for real-time image encryption/decryption. Here, the simulator for the proposed cryptosystem is implemented using Matlab 7.7.0. Performance was measured on a 1.60 GHz Pentium IV with 512 Mbytes of RAM running Windows XP. To evaluate the run-ning speed, the different images have been encrypted/decrypted by the proposed cryptosystem ten times and the average time and speed have been evaluated. Simulation results show that the average encryption/decryption time is 54.1 ms for encryption and 55.95 ms for decryption and the average encryption/decryption speed is 12.06 MB/s for encryption and 11.85 MB/s for decryption.
In order to show the strength of the proposed method, the encryption/decryption speed of the proposed method has been compared with that of the AES algorithm ( Zeghid et al., 2007 ) and the algorithms of ( Rhouma et al. ; Hongjun and Xingyuan, 2010 )in
Table 3 . As seen in this table, compared to the other algorithms, the proposed method is fast. However, although the AES algo-rithm seems faster than the proposed algorithm, but it suffers from lack of sufficient security as mentioned in last sections. 5. Summary and conclusions
In this paper, a novel image encryption scheme based on chaotic neural networks (CNN) is proposed. The employed CNN is a 3-input 3-output network comprised of two 3-neuron layers called chaotic neuron layer (CNL) and permutation neuron layer (PNL). The values of three RGB (Red, Green and Blue) color components of image constitute inputs of the CNN and three encoded streams are the network outputs. CNL is a chaotic layer where, three well-known chaotic systems i.e. Chua, Lorenz and L  X  u systems participate in generating weights and biases matrices of this layer corresponding to each pixel RGB features. Besides, a chaotic tent map is employed as the activation function of this layer. The output of CNL, i.e. the diffused information, is the input of PNL. In PNL a linear permutation in conjunction with a 2-dimensional nonlinear shuffling obtains three-dimensional per-mutation. The overall process is repeated several times to make it more robust and complex. The proposed method has 160-bits authentication code with two additional secret keys where a slight mismatch in one of them results in severely decrypted image. The main features of the proposed algorithm may be summarized as
Key space: The proposed algorithm has large key space including a 160-bits authentication code which could be extended up to 224 bits. It has been shown that the key space of the proposed algorithm is large enough to resist the brute-force attack, for the next few decades, even if quantum computing is employed.

Key Sensitivity: The analyses show that just such a small mismatch of order 10  X 14 in the secret keys results in incorrect decrypted pixels both in value and sign. Especially, this behavior makes decryption impossible when the number of encryption iterations is greater than one.

Complexity: The proposed algorithm has remarkable com-plexity and mixture characteristics. In the proposed algorithm, the weight and bias matrices are constructed from three different chaotic maps and are different for each pixel in different iterations. Chaotic activation function and chaos-based 3-dimensional shuffling makes this method more robust against variable attacks. Therefore, for successful decryption of the encrypted data, in addition the secret keys, these functions and their parameters as well as the decryption process must be known.

Performance analysis: Simulation results for both gray-level and color images have been demonstrated to evaluate and compare its performance with that of other block ciphers. The results show that the proposed scheme leads to the highest security level in terms of the key space, key sensitivity, correlation coefficients, entropy and computational complex-ity of the cipher-images.

Computational speed analysis: The computational speed analysis of the proposed method is representative of high speed of encryption/decryption as well as reasonably low time of computation.
 References
