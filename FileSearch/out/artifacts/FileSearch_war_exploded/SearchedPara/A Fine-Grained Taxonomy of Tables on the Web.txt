 We propose a classification ta xonomy over a large crawl of HTML tables on the Web, focusi ng primarily on those tables that express structured knowledge. The taxonomy separates tables into two top-level classes: a) those us ed for layout purposes, including navigational and format ting; and b) those containing relational knowledge, including listings, a ttribute/value, matrix, enumeration, and form. We then propose a classification algorithm for automatically detecting a subset of the classes in our taxonomy, namely layout tables and attribut e/value tables. We report on the performance of our system over a large sample of manually annotated HTML tables on the Web. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval.
 Measurement, Standardization. Structured data, web tables , taxonomy, classification. A wealth of knowledge is encoded in the form of tables on the World Wide Web. Extraction of this structured data has the potential to power many applicati ons such as query expansion [5] and textual advertising [8]. Recent efforts have focused on teasing apart tables consisting of relatio nal information from those used strictly for multi-column layouts and formatting [7][8], and other efforts on extracting schemas a nd knowledge in the form of relational tuples [1][3][6][9]. Although some table types have need for characterizing all the types on the Web, for estimating their relative importance, and for ultimately extracting the knowledge contained in these tables. In this paper, we propose a ta ble type taxonomy, discovered empirically through inspection of a large crawl of the Web collected at Yahoo!. Non-relational tables, such as those used for formatting or general layout, repres ent the vast majority of tables. Of the relational tables, we show that attribute/value tables are the most frequent. We then propos e a classification model for automatically detecting a subset of the classes in our taxonomy, namely attribute/value tables, layout tables, and other tables. The main contributions of this paper are summarized as follows:  X  We propose a fine-grained table type taxonomy over a  X  We propose a supervised cl assification system for The remainder of this paper is organized as follows. In the next section, we present related work in table type identification. Then, in Section 3, we present our table type taxonomy and in Section 4 we present our classification m odel. We finally conclude in Section 5. Web table understanding and extraction has received a lot of interest of late, with most work since the turn of the century, coinciding with the advent of more and more data available on the Internet. There have been very few attempts to characterize the different types of tables on th e web. Some researchers have focused on discovering specific types of tables such as listings [1][2], while others have considered coarse-grained classes such as genuine (i.e., rela tional tables) vs. non-genui ne (i.e., formatting tables) [8]. An exception could be found in the work of [9] where they proposed nine types of tables, all of which focus on tables containing attributes and values. We argue in this paper that these types can be collapsed into two classes (vertical listings and horizontal listings), where the other types only capture structural differences between these two classes. More recently, Cafarella et al. [2] extracted relational tables (i.e., tables containing semantic triples) from a very large Web corpus. While filtering out non-relational tables, they listed other frequent types of tables such as form and calendar . In addition, they also discarded the tables that  X  are really simple lists presented in two dimensions  X , what we call in this paper attribute/value tables, which we show to be the most frequent relational table type on the Web. Several methods have been pr oposed in the past for table classification, but most researchers consider it as a binary problem (genuine vs. non-genuine, relatio nal vs. non-relational). Wang and Hu [8] experimented with deci sion trees and SVMs for separating genuine tables from the non-genuin e tables and reported a similar F-measure for the two approaches of 95.9%. An extensive list of features was used tackling both table layout and content consistency. The classification quality is not comparable to what could be achieved on a Web-scale because of the way they carried out their data collection. A set of 2851 pages were harvested from Google directory and News using predefined keywords known to have a higher chance to recall genuine tables (e.g. table , stocks , bonds ...). In the same spirit, Cafarella et al. [2] used a similar machine learning approach in order to filter out the non-relational tables as well as for detecting table headers. They used a similar set of features as Wang and Hu [8]. For the task of filtering out non-relational tables, they report an F-measure of 61% which highlights the difficulty introduced by a web-scale application to table classification when compared with [9] . Tables on the Web are mostly used to visually organize elements on a user X  X  screen, however some also consist of relational knowledge (see Figure 1 for severa l types of tables on a single page). In this section, we propose a table type taxonomy developed by studying a large crawl of the Web, focusing primarily on those types that contain relational knowledge. In order to develop the table type taxonomy, we investigate a sample of the HTML tables over a large crawl of 1.2 billion high quality English pages on the Web collected at Yahoo! applied a simple parser in order to extract all the inner tables , which are the HTML tables that do not contain another table among its cells. Our assumption is th at other tables are only used for layout purposes. This filter rejects 30% of the original 12 billion tables, leaving 8.2 billion inner tables for our study. Below are some statistics describing our extraction: From the initial crawl, 75% of the pages contain at least one table with an average of 9.1 tables per document. This shows how extensively tables are used on the web. However, a large percentage of them is used for layout and formatting purposes and is of little interest to us for extracting semantic triples. Quality is ensured thanks to a spam page classifier discarding any spam content and a page quali ty score, similar to PageRank, computed over a much larger set of pages. The genuineness 2 of tables depends largel y on its structure and the semantics it carries. In order to better understand table structure and content, we manually inspecte d a large sample of our tables and propose a table type taxonom y separating them by whether they contain relational knowledge or whether they are used for layout purposes. Below, we describe our proposed taxonomy, illustrated in Figure 2. In this section we describe type s of tables encoding facts, or relation, s is the subject of the predicate and o is its object. VERTICAL LISTINGS are tables that list one or more predicates for a series of similar entities. For example, such a table could encode the capital and population for several countries (one per line). subjects in one row and their predic ates in a series of subsequent rows. These tables are often used in order to compare items (e.g., comparisons of product features) or to list elements with additional information (e.g., a list of conference participants with affiliations). An example could be a table comparing the predicates  X  X esolution X ,  X  X ensor X , etc. , for two subjects, digital cameras  X  X ikon D90 X  and  X  X a non Digital Rebel XTi/400D X . and HORIZONTAL LISTINGS . The distinguishing property is that they do not contain the subjects in the table proper. tables are often used as factual sheets about en entity. For example, consider a table cont aining specifications of a Nikon D90 digital camera, where the table does not contain the actual camera name. In this case, the whole webpage is about the digital camera so it is not necessary to repeat it in the table. In our inspection of the Web crawl, ATTRIBUTE / VALUE tables represented the largest set of any relational table type. MATRIX tables have the same value type for each cell at the junction of a row and a column. The row and column headers are normally the subject , but the object is only obtained by combining the 2 subjects together. The predication is often not contained explicitly in the table. An example MATRIX is a table giving the number of traffic accidents pe r month (rows) and per state (columns). This table type is a specific case of the MATRIX only in its semantics. In CALENDAR tables, the subject of the relation such as  X  X ccurs-on  X  or relations such as  X  performance-date  X  or  X  lunch-special  X . For example: a calendar listing the performances at Los Angeles con cert venues. In this case the predicate would be  X  performance-date  X  and the objects are the values of the cells. The hardest extraction challenge from Genuineness was a term introduced in [7] to denote tables containing relational knowledge. 
Figure 1. Example webpage containing multiple table types. CALENDARS lies in the discovery of the predicates , which oftentimes are not explicitly stated in the table. ENUMERATION tables list a series of objects that have the same ontological relation (e.g., hyponomys , meronymys , and siblings ). A table enumerating a list of alphab etic letters or a list of camera models would be considered as ENUMERATION . An example ENUMERATION table is one that contains a list of U.S. States and Territories. Similar to ATTRIBUTE / VALUE tables, FORM tables are composed of input fields for the user to fill or select. A typical example of this type is a user/password input form. The input fields are the missing attributes of an ATTRIBUTE / VALUE table meant to be filled by the user. For example: a FORM table requesting contact information. In some cases, there is an underlying relation between the elements in a table, but it do esn X  X  fit within the previously described types. Since those cases ar e very rare (a total of 2% of tables for all of them), we do no t present them in this paper. An example is a table presenting the score for each period of two basketball teams for a given game, which cannot be classified as VERTICAL LISTING since a game is a pair-wise relationship and another team cannot be adde d to the same table. We now present two table types that do not encode any knowledge (i.e., non-relational tabl es) and are used strictly for layout purposes. These tables are composed of cells organized for navigational purposes (e.g., the pr oduct categories on an online shopping site such as Amazon.com). There are no clear relations between the cells, except that for navigating within or outside of the site. While ENUMERATION could also be considered NAVIGATIONAL distinguish it since semantic triples (knowledge) may be extracted. This table type accounts for a large portion of the tables on the web where the only purpose is to organize visually some elements. It could be used for la ying out pictures with text or formatting a webpage. F ORMATTING could also be seen as the default type of tables where nothi ng is of interest for a knowledge extraction task. We randomly sampled 5000 tables from our 8.2 billion tables described in Section 3.1. For each table, we asked a paid human editor to classify it according to the taxonomy presented in Figure 2. The resulting table type distribution is illustrated in Figure 3. Not surprisingly, the vast majority of tables are used for layout purposes (i.e., non -relational tables). In this section, we consider only the A TTRIBUTE /V L AYOUT table types, and we group all other types into the label O
THER . We adopt a Gradient Boosted Decision Tree classification model  X  GBDT [4], which consists of an ensemble of decision trees for the classes A TTRIBUTE /V ALUE , L AYOUT , and O model is trained on our 5000 manua lly annotated random sample of tables, using the features described below. Global Layout Features : Accounting for the structure of the table as a whole, they include the maximum number of rows for each column, the maximum number of columns for each row and the maximum cell content length in characters. Layout Features : Layout features are applied per column and per row. They are solely based on the size of the cells and their variance. They include features such as the average cell length, the variance in cell length, and the ratio of cells in a column or a row generated by a colspan attribute. Content Features : The following set of features focus on cell content. Two subdivisions can be distinguished based on whether the feature involves html tags or textual content. Html features include the ratio of distinct tags in the row/column, the ratio of containing an anchor text, and the ratio of cells containing a font change. Lexical features include the ratio of distinct strings in the row/column, the ratio of cells ending with the colon character, the ratio of cells where the content is a number, and the ratio of cells containing a digit. 20-fold cross-validation over our 5000 randomly sampled tables is used in order to compare the performance of our classifier with several baseline versions of it us ing the different feature families described above. For each system, we report 3 measures: precision (P), recall (R) and F-measure (F). The results reported in Table 1 are an average over the 20 runs for each table type. The overall T AB E X accuracy was 75.2%. From the results obtained using only the Global Features , the lack of modeling power is clear ly exposed. Using only the Layout Features improves greatly over the simpler Global Features . ATTRIBUTE / VALUE tables benefit the most from Lexical Features . This observation follows the intu ition that those tables contain knowledge offering in most of the cases certain regularity in its content. Finally, T AB E X , our system using all the features performs the best overa ll in F-measure. Penn et al. [7] presented a rule-based system for classifying Web tables as genuine (i.e ., relational tables) vs. non-genuine (i.e., formatting tables). A tabl e is classified as genuine if its number of rows and columns exceeds a threshold (in our experiments, we set it to 2 rows and 2 columns) and if it contains no cell encoding more than a fixed number of ch aracters (set to 100 in our experiments). Table 2 compares the performance of our system on the slightly simpler binary classification task (genuine vs. non-genuine tables). Since Web tables are hi ghly skewed towards non-genuine tables, we implemented a simple baseline, Baseline NG , where the class non-genuine is always predic ted. For this analysis, TabEx was used after applying th e Penn et al. system. Penn et al. has good precision and re call on the non-genuine class, however it fails at identifying genuine classes. The system is a very good initial filter for tri mming out many non-genuine tables. A more specialized system is needed however for teasing out the genuine tables from the remaining tables. In this paper, we presented fi ne-grained taxonomy of the HTML tables on the Web. The taxonomy separates tables into two top-level classes: a) those used for layout purposes, including navigational and format ting; and b) those containing relational knowledge, including listings, a ttribute/value, matrix, enumeration, and form. We showed that 88% of the tables on the Web are used for strictly layout purposes. We then proposed a supervis ed classification model for automatically detecting layout tables, attribute/value tables, and all other tables as a catch all. The goal of this research is to ultimately extract high coverage and high quality structured knowledge from web tables. A next st ep is to extend our classifier for web tables into all classe s of our proposed taxonomy. Also important is a study of the extraction challenges for gleaning semantic triples from the identified tables, and ultimately building the extractors themselves. [1] Cafarella, M.J.; Halevy, A.; Wang, D. Z.; Wu, E.; and [2] Cafarella, M. J.; Halevy, A.; Zhang, Y.; Wang, D. Z.; and [3] Chen, H.; Tsai, S.; and Tsai, J. 2000. Mining Tables from [4] Friedman, J.H. 2001. Greedy function approximation: A [5] Huanhuan, J. H.; Jiang, D.; Pei, J. ; He, Q.; Liao, Z.; Chen, [6] Gatterbauer, W.; Bohunsky, P.; Herzog, M.; Krupl, B.; and [7] Penn, G.; Hu, J.; Luo, H.; and McDonald, R. 2001. Flexible [8] Wang, Y. and Hu, J. 2002. A Machine Learning Based [9] Yoshida, M.; Torisawa, K.; a nd Tsujii, J. 2001. A Method to Figure 3. Table type distribution on a large crawl of the Web. Table 1. Classification performance of TabEx compared wit h various baselines. P = Precision; R = Recall; F = F-score. Table 2. Comparative analysis against Penn et al. [7] fo r discriminating between genuine and non-genuine tables. 
