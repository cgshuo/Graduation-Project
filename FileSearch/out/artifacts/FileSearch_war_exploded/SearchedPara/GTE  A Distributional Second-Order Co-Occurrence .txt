 In this paper, we present an approach to identify top relevant dates in Web snippets with respect to a given implicit temporal query. Our approach is two-fold. First, we propose a generic temporal similarity measure called GTE , which evaluates the temporal similarity between a query and a date. Second, we propose a classification model to accurately relate relevant dates to their corresponding query terms and withdraw irrelevant ones. We suggest two different solutions: a threshold-based classification strategy and a supervised classifier based on a combination of multiple similarity measures. We evaluate both strategies over a set of real -world text queries and compare the performance of our Web snippet approach with a query log approach over the same set of queries . Experiments show that determ ining the most relevant dates of any given implicit temporal query can be improved with GTE combined with the second order similarity measure Info Simba , the Dice coefficient and the threshold -based strategy compared to ( 1) first -order similarity measures and ( 2) the query log based approach . H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  Query Formulation ; H.3.4 [ Information Storage and Retrieval ]: Systems and Software  X  Performance evaluation Keywords: Temporal Information Retrieval, Implicit Temporal Queries, Temporal Query Understanding, Query Log Analysis. Recent years have seen significant progress in Temporal Information Retrieval (T-IR), which aims to exploit temporal information in order to improve the Web search process. Despite the fact that great improvements have been achieved, existing solutions still face challenges that are not easy to deal with such as a deep understanding of the temporal intents of user text queries. While in the case of explicit temporal queries (e.g.  X  Fukushima 2011  X ) the retrieval task can be relatively straightforward as the temporal purpose is explicitly defined by the user, in the case of implicit temporal ones (e.g.  X  Iraq War  X ) it is much more complex as it involves estimating the temporal part of the query. Given that most of the temporal queries issued by users are implicit by nature [5] , detecting its underlying temporal intent turns out to be a very interesting problem and a real need to improve the performance of search systems. In this context, most state-of-the-art methodologies consider any occurrence of temporal expressions in Web snippets and other Web data as equally relevant to an implicit temporal query. This is obviously not true for most query results. In this work, we aim to define the temporal intents of implicit temporal queries in order to further improve the Web search process . As referred by Berberich et. al. [3] this is a challenging problem for which there is no clear solution yet. For that, we propose a language-independent strategy to associate top relevant years to any text query by analyzi ng its corresponding Web snippets. As shown by Alonso et. al. [1] [2] , snippets are an interesting alternative for the representation of W eb documents, where dates, especially in the form of years, often appear. However, this diversity of temporal expressions poses some challenges since only a few of them are actually relevant to the query. Hence, our goal is twofold: (1) select the most relevant dates for a given query and (2) discard all irrelevant or incorrect ones . The contributions of this work can be summarized as follows: (1) we propose a novel approach to properly tag text queries with relevant temporal expressions by relying on a content-based approach and a language-independent methodology; (2) our measure, outperforms well-known first order similarity measures improving precision in correctly tagging dates against a query log based approach and (4) we publicly provide a set of queries and ground-truth results to the research community. The remainder of this paper is organized as follows. In Section 2, we describe related work. In Section 3, we propose the GTE ( Generic Temp Eval ) similarity measure and present the two strategies for date classification. Experiment al setups and results are discussed in Section 4 and Section 5, respectively. Finally, we conclude this paper in Section 6 with some final remarks . To the best of our knowledge only three works [9] [11] [13] have been proposed with regard to the identification of top relevant expressions given a user implicit temporal query. Metzler et. al. [11] mine query logs to identify implicit temporal information needs. Th ey propose a weighted measure that considers the number of times a query q is pre-and post-qualified with a given year y. A query is then implicitly year qualified if it is qualified by at least two unique years. A relevance value is then given for each year found in the document. This work proposes an interesting solution as it introduces the notion of correlation between a query and a year but lacks in query coverage as it depends on query log analysis. Kawai et. al [9] , on the other hand, developed a chronological events search engine for the Japanese language based on Web snippets analysis. In order to collect a large number of temporal expressions, the authors expand the query with language dependent expressions related to event information such as year expressions, temporal modifiers and context terms. Then, noisy temporal patterns are removed using machine learning techniques trained over a set of text features. Finally, Str X tgen et. al. [13] extend this idea by proposing an enriched temporal document profile for each document, where each temporal expression found is represented by a larger number of different features. Temporal expressions are extracted by applying the HeidelTime tagger a nd all the features are combined into a single relevance function based on a set of pre-defined heuristics. Although being an interesting approach, this research lacks a further evaluation in terms of IR metrics. Moreover both proposals reveal a dependency in terms of language. In this section, we describe our method to identify top relevant dates related to text queries with temporal dimensions. We divide this method into the following three main subtasks: (1) Web snippet processing , (2) Date-Query relevance identification and (3 ) Relevant date classifications. In particular, step (1) has been well studied as there are many successful methods for the extraction of text and temporal information. However, to the best of our knowledge there are only three works [9] [11] [13] with regard to step (2) and only one [9] related to step (3). Although this process is easier in the case of explicit temporal queries (e.g.,  X  War 1945  X ), it turns out to be very difficult in the case of implicit temporal ones (e.g.  X  Avatar Movie  X ). For that purpose, we first describe the Web search and Web snippet module. Then, we propose GTE , a generic temporal similarity measure to assess the similarity between text queries and temporal expressions . And finally, we propose two different classification models in order to retrieve the top relevant temporal expressions and filter out irrelevant ones: (1) a threshold-based classification strategy that defines the boundary between relevant and irrelevant temporal associations and (2) a SVM classifier based on a combination of multiple similarity measures , which act as different features for classification. A query can either be explicit, that is, a combination of both text and time, denoted , or implicit, i.e., just text, denoted . In this paper, we deal with the latter ones since explicit queries are easier to deal with . For better readability, we denote a query simply as . Although we have focused on Web snippets in our experiments, our temporal similarity measure is also applicable to any document collection embodying temporal information, such as Wikipedia pages or Twitter posts. Similarly to Kawai et. al [9] , we use a Web search API to access an up-to-date index search engine. Given a text query , we obtain a collection of W eb snippets its text , i.e. and is represented by a bag-of-words and a set of candidate temporal expressions. Specifically, words/multi-words associated with a W eb snippet and Web snippet . Moreover defines the set of distinct relevant words extracted for a query , within the set of Web snippets, i.e. the relevant vocabulary. Similarly, is defined as the set of distinct candidate years extracted from the set of all Web snippets . In this work, relevant words are identified using the methodology proposed by Machado et. al. [10], who define a numeric heuristic based on word left and right contexts distribution analysis. This metric is specifically tuned towards the tokenization process of Web snippets in order to overcome the problems faced by usual tokenizers, sentence splitters or part-of-speech taggers. Indeed, due to the specific structure of Web snippets, these tools usually fail to correctly process this type of collection. Due to space limitations, we do not detail this pre-processing step as it can easily be reproduced from [10] , and it is commonly used in Web snippet processing. Furthermore , a simple rule-based model supported on regular expressions is used to extract explicit temporal dates satisfying certain specific explicit patterns (e.g., yyyy , yyyy-yyyy , yyyy/yyyy , mm/dd/yyyy , mm.dd.yyyy , dd/mm/yyyy and dd.mm/yyyy ). Although it is possible to extract temporal expressions with finer granularities, such as month and day, we are particularly interested in working at the year granularity level in order to keep language-independence and allow longer timelines for visualization . As such, all the temporal expressions detected according to the aforementioned patterns end up normalized to the year granularity . Finally, is defined as the set of distinct words that results from the intersection between the set of words and the set which contains the words that appear together with date , in any W eb snippet , from . We formally define the problem of query temporal tagging as follows. Problem Definition : given a query and a date assign a degree of relevance to each pair. To model this relevance, a temporal similarity value is defined by a similarity measure The proposed formulation attempts to identify relevant dates for and minimize any errors that might arise from considering irrelevant or wrong dates. As we will demonstrate in this paper, the relevance between a pair is better defined if, instead of just focusing on the self-similarity between the query and the date , all the information existing between and is considered. As such, we will not only define the similarity between the query word and the candidate date, but also between each of the most important topics extracted from the W eb snippets and their respective candidate dates. Based on this principle, the GTE measure is formalized in Equation 1, where is a similarity measure and F an aggregation function of the several that combines the different similarity values produced for the date in a single value representing its relevance: We consider three different F functions, specifically (1) the Max/Min, (2) the Arithmetic Mean and (3) the Median. Extensive experiments have been performed to assess the different aggregation functions [4] . Overall, the median gave more satisfactory results. As such, we will only focus on this approach in the remainder of this paper. The overall strategy of our query time tagging relevance model is shown in Algorithm 1 . The algorithm receives a query from the user, fetches related W eb snippets from a given search engine and applies text processing to all W eb snippets. This processing task involves selecting the most relevant words/multi-words and collecting the candidate years. Words and dates are then associated to a list of distinct terms . Finally, each date is given a temporal similarity value measure. While can be any similarity measure, either o f first or second order, we believe it can be modeled more effectively if it is based on a second order similarity measure. Our hypothesis , which will be supported in the experiments section, is that second order similarity measures carry valuable additional relations in both the word and the date context vectors, which cannot be induced if a direct co-occurrence approach is used. The use of a second-order co-occurrence measure requires however the definition of a context vector for each of the two items, such that the word and the date are similar if their context vectors are also similar . In this context, most of the works apply the cosine similarity measure, in order to assess the similarity between the two context vectors. However, as most of them rely on exact matches of context words, their accuracy is low since language is creative and ambiguous [8]. This is particularly evident in the case of relations between words and dates, where the cosine similarity measure may not even be applied. In order to overcome these drawbacks we apply the InfoSimba ( IS ) similarity measure [7] (see Equation (2)), which can be seen as a semantic vector space model supported by corpus-based word correlations. In detail, IS calculates the correlation between all pairs of two context vectors and . Without loss of generality, and can be seen as the context vector representations of each of the two items of a pair, respectively. For this purpose, five possible representations such as ( W ; W ) ( D ; D ), ( W ; D ), ( D ; W ) and ( WD ; WD ), have been defined where W stands for a word-only context vector, D for a date-only one and WD for a word and date context vector . Overall, the ( WD ; WD ) representation gave more satisfactory results, meaning that each of the two context vectors can be better defined if represented by a set of words and a set of temporal patterns. The similarity between each pair of the two context vectors is determined by any first order similarity measure (e.g., PMI , EI or DICE ) relating items i and j . For this purpose, we build a global conceptual temporal correlation matrix , which will serve to store the similarity value obtained between the most important words and the candidate dates. In detail, where is the matrix which represents the similarity between words , is the matrix which represents the similarity between candidate dates , is the matrix which represents the similarity between words and candidate dates, and Based on the similarity value obtained from the GTE measure, we need an appropriate classification strategy to determine whether the candidate temporal expressions are actually relevant or not. For that, we propose two approaches. The first one is to use a classical threshold-based strategy. Given a pair, the system automatically classifies a date based on the following expression: (1) relevant, if and (2) irrelevant or wrong date, if The second strategy uses a SVM learning model . For this purpose, a set of different first order and second order similarity measures are defined for each pair, in line with what has been proposed by Pecina et. al. [12]. As such, each pair can be seen as a learning instance associated to the set of different characteristics, thus defining a classical learning problem. In the following section, we define the experimental set-up s. Since no benchmark for ( ) pairs exists, we built two new data sets, consisting of 42 text queries, one based on Web snippets and another one based on query logs, both publicly available for research purposes [6] . For the WC_DS, we queried Bing search engine for each of the 42 queries, collecting the top best 50 relevant Web results, which resulted in a set of 582 relevant Web snippets with years and 235 distinct pairs. The ground truth was then obtained by manually labeling each one of the 235 distinct pairs. Each pair was assigned a relevance label by a human judge on a 2-level scale: not a date or irrelevant (score 0) and relevant date (score 1). An overall example of this task is given in Table 2 . The second data set QL OG _DS, which will be used to compare with the Web snippet approach, was constructed based on Google and Yahoo! auto-completion engines, which suggest a set of ten expanded queries for any given query. So, as to enable a fair comparison, we retrieved the highest number of possible date results for each of the 42 text queries, by using three different query combinations: (a)  X  query X  , (b)  X  query + 1 X  and (c)  X  query + 2 X  , which enable to capture the query together with dates starting at 1 and 2 respectively. Like for the previous approach, candidate dates were extracted based on the set of regular expressions introduced in section 3 .1. Each pair was then manually labeled in the same way as for the first data set. In order to better understand the different experiments , we propose the following notations. The different versions of the GTE combined with IS are represented as IS_ ( X;Y ) _SM_F ( q,d ( X ; Y ) means the type of the context vectors, SM is any similarity measure used in IS and F is the aggregator function. More, the first order measures applied to the GTE are noted SM_F ( q,d is any measure (i.e. PMI , DICE, Jaccard , EI , NGD , WebJaccard , WebOverlap , WebDICE , WebPMI ). Outside GTE (i.e. without aggregation function) , we propose a set of different second order similarity measure s based on IS and noted IS_ ( X;Y ) _SM ( q,d which evaluate the temporal similarity by exclusively taking into account query and date and not the ir correlated words . Similarly, we directly apply first order similarity measures without the aggregator function, denoted SM. In order to evaluate all strategies, we propose classical evaluation metrics in IR based on a confusion matrix with True Positives (TP) being the number of years correctly identified as relevant, True Negatives (TN) being the number of years correctly identified as irrelevant or incorrect, False Positive (FP) being the number of years wrongly identified as irrelevant and False Negative (FN) being the number of years wrongly identified as relevant. As such, we calculate Precision (P), Recall (R), F 1 -Measure ( F1 ) and Balanced Accuracy ( BA ). In this section, we describe the set of experiments for both the data sets WC_DS and QLOG_DS. We performed a set of experiments with different sizes of for the context vector and different threshold values in order to decide whether we should consider as input for the context vector, all the terms or just those having a similarity value higher than . For this purpose, we limited the parameters within the ranges of T0.0N20, T0 .0N+ X ,. .., T0.9N5 , T0.9N10, T0.9N20, T0.9N+ X  }. Results show ed that the best combination was obtained for T0.05N+ X  (i.e. the selection of all ( N=+ X  ) terms related to the biserial correlation value (i.e. 0.80  X  see Table 2) is given for the Median aggregator function for IS_(WD;WD)_DICE_M , denoted BGTE (i.e. Best GTE ) in the remainder of this paper. Table 2 lists the similarity scores between a sub-set of pairs to compare the BGTE with baseline methods. The highest biserial correlation coefficient is reported by the proposed BGTE with a notable improvement compared to all measures, in particular to W eb-based ones. The next step of our approach is to define an appropriate classification strategy to determine whether a date is or is not relevant to a query. Our first approach is to use a classical threshold-based strategy as described in section 3 .3 where  X  has to be tuned to at least a local optimum. To avoid over-fitting and understand the generalization of the results, we followed a 5-fold cross validation approach for all the proposed measures with 80% of learning instances for training and 20% for testing. A summary of the experimental results can be found in Table 3 and Table 4 , for the non-aggregated approach and for GTE with the Median function whi ch obtained the best results. We can observe that BGTE can achieve 94.3% F1 performance, 92.6% (BA), 94.5% (P) and 94.2% (R) matching a cutoff of  X  = 0.35. These results were complemented with a ROC curve, which indicates an almost perfect classifier with an Area Under Curve (AUC) of 0.953. When compared to non-GTE and non -IS similarity me asures (see Table 3 ), the BGTE can produce 19 .9 % F 1 improvements over the best performing measure i.e. WebPMI with 74.4% F 1. Further experiments show that by simply adding the Median aggregator function to the simple IS_(WD;WD)_DICE results in an improvement of 11 .3% in terms of F 1. Indeed, all similarity measures with GTE outperform their baselines in terms of F 1, indicating that using the Median as part of the model improves the performance of the system. In our next experiment, we compare the results of BGTE with the baseline rule-based model, which selects all of the temporal patterns found as correct dates within a given data set. As a consequence, for a fair comparison, we fixed a Recall of 1 for the BGTE . Results are presented in Table 1 (in the last two columns) . Wh ile the BGTE threshold strategy is forced to have a recall equal to one, it still significantly outperforms the baseline model. To assess if the difference between using the BGTE or the baseline rule-based model for the correct classification of a parametric method particularly suitable for non-independent dichotomous variables. The test resulted in a Chi-squared statistic value equal to 126.130 with a p-value &lt; 2.2e-16. This indicates that the difference of the correct date classifications is significantly different. Based on this result, we also built a confidence interval for the difference of means for paired samples between the number of misclassified dates given by the rule-based method and by the BGTE . The interval obtained [1.42; 2.30] clearly shows that the rule-based model retrieves, on average, more irrelevant or incorrect dates than the BGTE measure, with a 95% confidence level . In alternative to the threshold-based strategy, which uses a single similarity measure to classify any query date pair, we propose to train a SVM model based on a combination of similarity measures. For this purpose, we defined a set of different first order and second order similarity measures for each pair, in line with Pecina et. al. [12] . As such, each pair can be seen as a learning instance described by 24 different similarity measures and its manually defined class label (relevant or not relevant). Experiments were run over the implementation of the sequential minimal optimization algorithm to train a support vector classifier using a polynomial kernel with the default parameters of Weka software . A 5-fold cross validation was performed before and after a feature selection process based on principal component analysis. After feature selection, only 14 similarity measures remained for the learning process. Results are illustrated in Table 5 for both situations, with and without feature selection with (1) respective accuracies of 88.6% and 90.3%, (2) respective F 1-measures of 88.5% and 90.2% and (3) respective AUC s of 87.6% and 89.4%. The first conclusion of these results confirms the experiments of Pecina et al. [12] , although in a different domain, that most similarity measures, when combined, can lead to improved results as they behave differently. As a consequence, feature selection may not lead to improved results . The second conclusion is that a unique adapted similarity measure in a threshold-based classification strategy can improve results over a classical learning process. Indeed, compared to the threshold-based classification strategy, the results obtained by the SVM classification are worse than only using BGTE . In the same experimental conditions, the threshold-based strategy shows performances of 92.6% accuracy (improvement of 2.3%), 94.3% F 1-measure (improvement of 4.1%) and 95.3% AUC (improvement of 5.3%). In this section, we compare the BGTE measure with the threshold strategy over the WC_DS against QLOG_DS and the baseline , which corresponds to take into account all the retrieved dates. Table 1 presents the overall results for both approaches . Once again, it is important to note that for a fair evaluation, we base the comparison on a Recall equal to 1 . The results are shown individually for each auto-completion tool of Google (Google_QLogs) and Yahoo! (Yahoo_QLogs). The results show that BGTE achieves 85.6% of F 1 performance and 74.8% of Precision, which is significantly higher than those achieved by each of the two completion engines. As in the previous experiment, we built a confidence interval for the difference of means, for paired samples, between the number of misclassified dates given by each of the two query log approaches and BGTE . The interval obtained for Google_QLogs is given by [1.32, 3.20] and for Yahoo_QLogs it is [1.44, 3.47]. These intervals show that both approaches retrieve on average a significant number of irrelevant or incorrect dates when compared to BGTE , with 95% of confidence. Not surprisingly, results show that query logs are able to return a great number of pot ential query related year dates, when compared to Web snippets. But, interestingly, we found that a large number of these temporally explicit queries consist of misleading temporal relations i.e. users may execute incorrect temporal queries as they may not know the exact date related to their query. In this work, we proposed a new temporal similarity measure, GTE , which allows different combinations of first order and second order similarity measures to compute the temporal intents of query dates second order similarity measure IS combined with the DICE coefficient shows improved results over all other combinations based on the threshold classification strategy. Comparative experiments have also been performed on two different data sets ( WC_DS and QLOG_DS ). Results showed that the Web snippets approach is more effective than the query log based one. The results indicate that the introduction of an additional layer of knowledge, with a second order similarity measure may affect the efficiency of a broad set of T-IR systems, by retrieving a high number of precise relevant dates. As a consequence, we plan to use this new classifier in the field of Temporal Clustering. Indeed, as the methodology is language-independent and does not depend on lists of stop-words, it can be applied to real-world search scenarios. This work is funded by the ERDF through the Program COMPETE and by the Portuguese Government through FCT -Foundation for Science and Technology within the project FCOMP-01 -0124-FEDER-022701 and the PhD grant with reference SFRH/BD/63646/2009. It is also supported by the Center of Mathematics of the University of Beira Interior, with the project PEST-OE/MAT/UI0212/2011. 
