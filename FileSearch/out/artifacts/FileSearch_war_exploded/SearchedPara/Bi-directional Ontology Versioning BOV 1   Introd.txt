 Ontologies are increasing in popularity and show their importance in many fields such as knowledge engineering [1], knowledge representation [2], information integration tology changes and evolutions. Domain changes, adaptations of different tasks, or changes in the conceptualizations might cau se modifications of the ontologies. Each change may create a new ontology version, which will cause many versions existing in the web. This may cause incompatibility between the data sources that use different ontology versions and give incorrect interpretations of data or make data inaccessible. 
Therefore, ontology versioning is needed to handle the changes and the evolutions ontology versioning to describe the mappings between ontology versions. 
Many data sharing and data reuse processes among distributed resources are bi-directional processes, which require bi-directional correspondences between ontology versions which describe the data of them. The existing ontology versioning ap-proaches can only provide single-directional mappings between ontology versions, such as Ontoview [5] and PROMPTDiff [6]. When single-directional versioning ap-single-directional mappings. This is time and effort consuming, because in these two separated inverse single-directional mapping processes, a lot of work is repeated, such as identifying mapping elements in different ontology versions. So a bi-directional ontology versioning is required for bi-directional data sharing and reuse. 
Bi-directional Ontology Versioning (BOV) can relate the elements in different on-formation between them [7]. The major advantage of the bi-directional mapping is that less time and effort are required fo r mapping identification and transformation in bi-directions. The data sharing and data reuse processe s are bi-directional processes. The single-directional ontology versioning and mapping are time-consumed and effort-consumed has defined a new type of ontology versioning: Bi-directional Ontology Versioning BOV. BOV can improve the ability of data sharing and data reuse between different data resources that use different versions of the same ontology. 
BOV contains four components: mapping elements, bi-directional mapping rela-tion, bi-directional transformation and metadata. Figure 1 shows the structure of BOV. Definition 1. Bi-directional Ontology Versioning (BOV) T, M&gt;  X  E  X  R: the bi-directional mapping relation between the mapping elements, whose  X  T: the bi-directional transformation, which transforms the mapping elements  X  M: the metadata about mappings. 2.1 Mapping Elements The mapping elements indicate what elements from two ontology versions can be related and transformed. Figure 1 shows that the mapping element in BOV includes two elements from different ontology versions. These two elements have the same structure. The mapping element in BOV has three parts:  X  Ontology version title: it describes the version title of the ontology version that the  X  Hierarchy: it includes all the ancestors of the mapping elements. Hierarchy is used  X  Label: label of the mapping element is used to describe the name of the mapping 2.2 Bi-directional Mapping Relation Four bi-directional mapping relations are defined to describe the relationship between mapping elements: Equivalence, Isomorphic, Isomerous and Multiple_Change. Definition 2. Bi-directional mapping relations Suppose that there exist two ontology versions V1 and V2. Suppose also that E1 is an element in V and E2 is an element V2. L(el ement) expresses the label of an element. S(element, version) is the set that includes all the directly related elements and all the ancestors of the mapping element in ontology version.  X  Equivalence: When L(E1)=L(E2) and S(E1, V1)=S(E2, V2), the relationship 
The set of bi-directional mapping relations is complete and non-overlapped. Com-plete here means they can describe all the relationship between the mapping elements. Non-overlapped here means the mapping cases they describe won X  X  be overlapped, that is, one mapping case has and only has one bi-directional mapping relation for it. 2.3 Bi-directional Transformation Transformation between elements is very important for the data sharing and reusing. It is only by transformation that ontology versions can understand and efficiently sources that use different ontology versions understand each other and freely share and exchange data. 
The bi-directional transformation expressi on contains a bi-directional transforma-tion expression. The transformation expression describes the transformation between the mapping elements. Usually the bi-directional transformation only supports 1:1 transformation if there is no transformation metadata supplied, because the system can not automatically extract two variants from one without any addition information. 2.4 Metadata Metadata shows some additional information about the elements and change of on-tologies such as data, author, and purpose of the change of versions. It is important for some data-sharing situations. For example, if there are two telephone companies want the call time is very important, because different time has different price of calls. The metadata would be supplied by the domain expert and the user, such as time and date, background and the task-dependent transformation metadata. Two levels mappings are used to identify BOV: linguistic mapping and structural mapping. Linguistic mapping is used to compare the labels of elements and compute linguistic similarity matrix. The algorithm is based on the edit distance , which is de-namic programming algorithm. The Linguistic Similarity LS is computed as: 
Suppose there are two sets of the names L 1 and L 2 of the elements in two different L similarity between 0 and 1, where 1 means perfect map and 0 means worst map. 
The structural mapping compares the structures of the elements in the taxonomies of different ontology versions and computes the structural similarities between them. elements of E i in H. the ancestor elements of E i in H. 
The Structure Similarity (SS) between H 1 and H 2 as seen from the nodes may then be computed by following. SS E H E H
These mapping algorithms are based on Maedche X  X  algorithm [9] and do some modifications to fit for ontology versioning. 
From LS matrix and SS matrix , the weighted similarity WS is computed. The weighted similarity ( WS ) is a mean of LS and SS : WS = w X  SS + (1-w)  X  LS , where w turned. The values of the weighted value w and the threshold th accept can be decided by the user or suggested by the system. Ontoview is a web-based system that provides support for the versioning of online ontologies [5]. Ontoview classifies differen t types of differences by highlighting them in different colours. PROMPTDiff compares different ontology versions and relate which can deal with a specific mapping occas ion and a fixed-point algorithm to com-bine the results of the matchers to produce a structural mapping between two ver-sions. MRAFA is an Ontology MApping FRAmework (MAFRA) for distributed ontologies in the semantic web [9]. MAFRA uses semantic bridges to generate map-pings between ontologies elements. ONION (ONtology compositION) system is an architecture based on a sound formalism to support a scalable framework for ontology integration [10]. ONION uses articulations of ontologies to interoperate among on-tologies and uses articulation ontology to describe the mappings between two ontolo-gies. GLUE is an ontology mapping system that uses machine-learning techniques to semi-automatically create semantic mappings between ontologies [11]. It computes the similarities between concepts in different ontologies based on a multi-strategy learning approach. KRAFT is an agent architecture for the integration of heterogene-ous information systems [12]. KRAFT uses  X  X ntology clustering X  to integrate the heterogeneous ontologies. Table 1 describes the comparison of the features of these mapping approaches. 
Ontology mapping maps different ontologies and ontology versioning maps differ-ent ontology versions. In these appro aches, only MAFRA, ONION and KRAFT can generate m: n mappings. The linguistic mapping identifies similarities between labels of the elements of the different ontologies or ontology versions. The structure map-ping identifies the similarity between the taxonomies of elements in different ontolo-gies or ontology versions. Similarity-based technique uses some matching algorithms to compute the similarity between elements from ontological resources and identify the mappings based on the similarities. The rule-based technique uses some rules and constraints to identify the mappings. Most of these approaches require some metadata all semi-automatic. There is only one approach PromptDiff that is fully automatic. This paper introduced a new type of ontology versioning: bi-directional ontology version (BOV), which can map two ontology versions bi-directionally at the same time. This paper gave the formal definition of BOV and described the components of transform similar elements of different ontology versions in both directions. This will improve the ability of data sharing and reuse among distributed data resources. 
There are still some limitations of BOV. When there are many synonyms and homonyms, the accuracy of the mapping will be affected. The mapping algorithms can not identify the synonyms and homonyms by themselves alone. Some other tech-nologies such as WordNet can help to solve this problem. BOV only supports 1:1 mapping if there is no transformation metadata provided by the user. So some single-directional only multiple candidates mapping will be lost in the bi-directional map-ping. And that would induce losing some related knowledge between the elements in different ontology versions. 
