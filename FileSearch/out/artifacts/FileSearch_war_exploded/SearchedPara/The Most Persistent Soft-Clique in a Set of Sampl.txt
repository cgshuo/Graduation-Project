 Novi Quadrianto novi.quadrianto@gmail.com University of Cambridge, Cambridge, UK Chao Chen chao.chen@ist.ac.at Christoph H. Lampert chl@ist.ac.at Graphs are used ubiquitously in computer science in order to represent data objects and their interrelations. Consequently, machine learning and data mining re-search has developed a large number of methods to an-alyze given graph structures and to identify substruc-tures of predefined properties, in particular cliques , i.e. subsets of vertices that are fully connected with respect to the graph X  X  edge set.
 In this work, we extend this reasoning to the case where multiple, potentially noisy or incomplete, in-stances of a graph are available for analysis. The hard criterion of a set of vertices being fully connected be-comes too limiting in this case, so instead we look for persistent soft-cliques , i.e. subgraphs that are almost fully or at least densely connected, and that persists through all or most instances of the graph. For given several instances of a weighted graph, we are interested to find a persistent soft-clique with the highest weight. We call this a most persistent soft-clique problem. By solving the most persistent clique problem we can extend a wide range of applications that relied on find-ing cliques in graphs to situations where a collection of graphs is available, e.g. measurements at different points of times, but where each graph instance might have a different edge set, e.g. due to noisy or incom-plete observations. These noisy snapshots of the same graph pose challenging tasks related to inconsistent patterns, but could give us more confidence in charac-terizing the inherent pattern or phenomenon. Take as an illustrative example, the usage of dense subgraphs in mobile phone or location-based social networks to identify groups of friends or families. A temporal di-mension arises naturally for such a graph where, for example, different hours in a day lead to several sam-ples of the graphs. It is reasonable to assume that dense subgraphs that appear in all of the samples of the graphs are the groups of friends or families that we would like to identify. However, it can also be expected that in each individual observation of the graphs not every person will be observed within the subgraph: he or she could have left the group temporarily due to other commitments, or the measurement itself could be faulty, e.g. due to a network outage.
 Contribution In this work, we make the following contributions: 1) We introduce a simple clique-ness measure that is suitable for finding a persistent soft-clique across multiple noisy instances of a graph. Intu-itively, the measure counts and penalizes the number of edges missing to make the selected subset of ver-tices into a clique. 2) We show how this measure can be used in an optimization framework either as a two person game or as a relaxation of the hard-clique prob-lem with slack variables, to find a maximum weighted persistent soft-clique. 3) We show that both formula-tions lead to the same solution when using a partial La-grangian method to solve the optimization problems: the upper bound obtained for the max-min two player game formulation coincides with the lower bound of the min-min slack formulation. 4) We perform an ex-periment on synthetic data and provide an application in social network data where the graphs are sampled across time.
 First, however, we give a short overview of related work to provide some context for our contributions. 1.1. Related Work The first work on the use of cliques in social net-work graphs by far predates recent efforts in machine learning, data mining or network science. Luce &amp; Perry (1949) studied adjacency matrices of friendship graphs in order to identify cliques of friends. They already observed that the criterion of all vertices be-ing connected to each other can be overly strict, and they introduced the softer n -clique criterion. Later, Alba (1973) showed, however, some non-intuitive facts about n -cliques, e.g. that their elements might be com-pletely disconnected with respect to the original graph structure. Afterwards, many alternative constructions were introduced, see, e.g., (Scott, 1988) for a textbook overview, and (Brunato et al., 2008; Robardet, 2009) for some recent developments. Besides the social sci-ences, other areas of research that deal with network structured data have adopted the search for cliques as part of their research methodology, in particular bioinformatics , chemistry and (electrical) engineering . Mathematics , on the other hand, studied properties of graphs and subgraphs more formally, through the anal-ysis of function optima defined on the graph (Motzkin &amp; Straus, 1965), or statistical properties of graphs with random edge sets (Bollob  X as, 2001). In theoretical com-puter science and operations research graph-based al-gorithms are today objects of core interest, e.g. in the analysis of their computational complexity, or as tools to abstractly model the process of computation in a computer itself.
 With the rise of machine learning and data mining , a lot of more applied work on identifying structure within graphs of empirical data has emerged, see, e.g., (Schaeffer, 2007) for a survey. For example, Gupta &amp; Ghosh (2005) and Crammer et al. (2008) looked at a one-class clustering or classification problem which, given a dataset, aims at identifying a coherent yet small subset of data points. This one-class cluster-ing problem finds itself applications in bioinformatics to find gene modules and natural language to extract documents X  topics. Pavan &amp; Pelillo (2007) use the weighted version of maximal (non-extendable) clique to perform a pairwise clustering. In a recent time, the maximum weighted clique concept has also found in-creased use in computer vision problems for perform-ing image segmentation tasks, for example (Brendel &amp; Todorovic, 2010; Ion et al., 2011).
 While all the above learning methods rely on only a single (noisy) graph to be analyzed, it is intuitive that having access to multiple observations should make the result of the analysis more robust against random ef-fects, missing observations, and outliers. Achieving this intuition is our goal for the rest of the paper. In this section we formulate our main contributions: a measure how close a set of vertices is to being a clique, and its generalization to multiple graph in-stances. First, we introduce the necessary notation for this. In Section 2.1, we cast the problem of find-ing a maximal clique in a single graph as an integer optimization problem, and in Section 2.2 we extend this notion to the case of soft-cliques persisting across multiple instances of a graph.
 Notation For a set of vertices V = { v 1 ,...,v n } , let E  X  X  X V , for t = 1 ,...,T , be multiple observed sets of edges, and let k t : V X V  X  R + denote non-negative weight functions between the vertices of V . We form weighted graphs G t = ( V , E t ,k t ), for t = 1 ,...,T . In the following, we will refer to t as a  X  X ime X  variable, but note that this is meant in a broad sense: while t = 1 ,...,T can correspond to an actual temporal se-quence, it can also just denote different instances of a graphs in arbitrary order. Furthermore, we will inter-pret the values of k t ( v i ,v j ) as measures of similarity between vertices, e.g. given by a positive definite kernel function (Sch  X olkopf &amp; Smola, 2001), but the method we describe does not depend on k t having any specific structure. 2.1. Soft Clique-ness In the following, we will define a measure of clique-ness . Let S  X  X  be a vertex subset. For this, we iden-tify S with its binary indicator vector x i  X  { 0 , 1 } |V| where x i = 1 if v i  X  S , and x i = 0 otherwise. The problem of finding a maximum weighted clique in a weighted graph ( V , E ,k ) can then be cast as the fol-lowing integer optimization problem (Pardalos &amp; Xue, 1994): In the above, we make use of Iverson X  X  bracket nota-tion: I [ P ] = 1 for the condition P is true and it is 0 otherwise. The constraint enforces that any two vari-ables in the selected subset are connected by an edge, i.e. the subgraph given by x is a clique. For a non-negative weight function k (  X  ,  X  ), the above optimization also ensures that the inferred clique is maximal, i.e. no extension of the clique by adding one or more vertices is possible.
 For graphs based on noisy observations it is clear that the constraint (1b) is too strict: a single missing edge will exclude a subset of vertices from further consider-ation. Instead it makes sense to look for soft-cliques , i.e. subgraphs that are almost fully or at least densely connected. To formalize this, we observe that the left hand side of the clique-constraint (1b) has a simple interpretation: for any fixed x  X  X  0 , 1 } |V| , counts how many edges are missing in E for the se-lected vertices to be a clique. Consequently, we will use Equation (2) as a measure of how far a set of ver-tices is from being a clique: for a set with k elements,  X  can take values between 0 ( x is a clique), and k ( x is a completely disconnected), see Figure 1 for an illustration. 2.2. Persistency of a Clique over Time Given multiple instances of a graph, G t = ( V , E t ,k t for t = 1 ,...,T , finding a clique x  X  { 0 , 1 } |V| persists through time is a straight-forward extension of the above single-graph case. We enforce the clique constraint (1b) simultaneously in all time slices, yield-ing the optimization problem max subject to X where k ( v i ,v j ) = P t k t ( v i ,v j ) encodes the total sim-ilarity of vertices during the time of consideration. Deriving an analogue soft-clique formulation is less straight-forward, since at different time steps, a dif-ferent subset of edges might be missing to make a set of vertices a clique. In the next sections we present two ways to formalize the concept of a finding a soft-clique that persists over time. Subsequently, we will show that both formulation lead to identical solutions if solved in a Lagrangian relaxation framework. Slack Perspective We start by making each of the hard-cliques constraints Equation(3b) into a soft-clique constraints by introducing slack variables ,  X  for t = 1 ,...,T , on the right hand side. To avoid degenerate solutions, we penalize the resulting slack vector  X  = (  X  1 ,..., X  T ) in the objective function by a multiple of its L p -norm for some p  X  1. For reasons that will become clear later we furthermore replace the maximization by a minimization of the negative objec-tive. This leads to the following optimization problem subject to X Note that the form of (4) also allows interpretation as a regularized risk functional : k  X  t k p L p is a loss term that measures how bad the choice of x is as can-didate for a most persistent soft-clique. The term courages the opposite direction: minimizing it requires as many vertices as possible to be selected, in particu-lar those that have high similarity values. The variable  X  is a trade-off parameter that controls the relative influence of loss and regularization terms. Intuitively, by solving (4) we look for the optimal balance between the goal of collecting as many similar vertices, and the goal to not include vertices that are frequently discon-nected.
  X  =0  X  =3  X  =2 Two-Person Game Perspective Alternatively, we can view the spatio-temporal cliques identification as a game of two competing players: inlier and out-lier . The inlier player controls x  X  { 0 , 1 } |V| and aims at finding a group of variables with as large weight as possible. The outlier aims at reducing the objec-tive value by controlling variables  X  1 ,..., X  T , which he or she can increase up a limit given by the number of edges missing to make x a clique. Mathematically, this game is expressed by the following optimization problem: subject to, for all t = 1 ,...,T , for some p  X  1. The intuition behind this resembles the one above: one player aims at forming sets with many similar vertices, the other player aims at exclud-ing vertices if they are disconnected in many of the graph instances. The key idea to solve the optimization problems in (4) and (5) is to relax the soft clique-ness constraint further. We replace the clique-ness constraint by a Lagrangian. This does not ensure that we will be able to meet the clique-ness constraints exactly anymore. We will instead only be able to state ex-post that the relaxed solution is optimal for the observed clique-ness distribution. 3.1. Lagrange Relaxations In the following, we will show that slack and two-person game formulations lead to the same solution when using a partial Lagrangian method to solve the optimization problems: the lower bound of the min-min slack formulation coincides with the upper bound obtained for the two player game formulation.
 Lower Bound of Slack Perspective By weak du-ality theorem (Boyd &amp; Vandenberghe, 2004), we arrive at the following lower bound of (4): max +  X  k  X  k p L Upper Bound of Game Perspective Similarly with the bound on slack perspective, by weak dual-ity, we have the following upper bound of (5): min  X  X A standard approach to dualize the problem of (6) and (7) is to eliminate the primal variables x and  X  . We take the approach to partially dualize the problem by only finding the stationary point with respect to the primal variables  X  . In this paper, we give explicit formulation for the case of p = 1 and p = 2 1 . The p = 1 case leads to a maximum weighted clique in a single graph with modified weight functions, and the p = 2 case leads to a series of maximum weighted clique problems. ` 1 Soft Clique-ness Measure For simplicity of presentation, in what follows, we show the case for the trade-off parameter  X  = 1. In (6), taking the point where the gradient with respect to  X  t vanishes leads to the dual variables take the form of  X  t = +1 for t = 1 ,...,T . Similarly, for (7), the vanishing gradient point leads to  X  t =  X  1 for t = 1 ,...,T . Plugging this constraint on the dual variables back to the (6) and (7) leads us to the following problem: max Algorithm 1 ` 1 Soft Clique-ness Measure Input A spatio-temporal graph G t ( V , E t ,k t ) Compute the total similarity, k ( i,j ) = P t k t ( i,j ) Compute the measure, c ( i,j ) = P t I [( i,j ) /  X  X  t ]
Solve argmax and C i,j = c ( i,j ) Return x  X  X  0 , 1 } |V| The above problem takes the appealing form of a maximum weighted clique optimization with the re-adjusted weight functions taking into account the number of missing edges to make group of vertices into a clique. Finding the maximum weighted clique is NP-complete and hard to approximate to a given bound (Pardalos &amp; Xue, 1994). Numerous heuristics have been proposed to obtain local solutions, and eventu-ally the best performing strategy often depends on the application. For a very small graph, any integer pro-gramming solvers, such as CPLEX, can in principle be used to solve (8). In our case, we deal with graphs of moderate to large size. For this reason, we use the Quadratic Pseudo-Boolean Optimization with Probing ` 2 Soft Clique-ness Measure Similarly to the ` 1 case, we find the point where the gradient with re-spect to  X  t vanishes leads to the dual variables take the form of  X  t = 2  X  X  t for (6) and  X  t =  X  2  X  t for (7). We again use this to eliminate the primal variables  X  t . The optimization problem of (6) is now in the form max The problem (9) is concave quadratic with respect to the dual variables given all the binary indicator vari-ables x , and is in the form of standard maximum weighted clique problem with respect to the indica-tor variables given the dual variables  X  . With these observations, to solve (9), we pursue an alternating approach:  X  Step 1: given all the dual variables, solve the fol-Algorithm 2 ` 2 Soft Clique-ness Measure
Input A spatio-temporal graph G t ( V , E t ,k t ), num-ber of iterations N , regularization constant  X 
Compute the total similarity, k ( i,j ) = P t k t ( i,j ) for i = 1 to N do end for
Return x  X  X  0 , 1 } |V| min  X  Step 2: subsequently, given the indicator vari-The above two steps are repeated until certain number of alternating steps is reached. The initialization plays a crucial role for this alternating approach. We set all the dual variables to zeros at the start. Those dual variables that are associated with the time slices where the clique-ness constraints are not violated (there are no missing edges) will stay at zeros (this is a comple-mentary slackness of necessary KKT condition for the optimal points (Boyd &amp; Vandenberghe, 2004)). We perform two experiments to assess the efficacy of our soft clique-ness measure: first on synthetic data where a collection of noisy snapshots of the same graph is observed, and second on real location-based social network graph where we would like to identify a clique 4.1. Synthetic Data We generate the data in the following ways: a) At time 1, we draw 18 2D data points from a mixture of 3 Gaussian distributions where 7 samples drawn from and 5 points sampled from N ([8 ,  X  3] , 2 . 0 I ), b) For time t = 2 ,...,T , we add to each point of the initial graph, at each time slice, an independent Gaussian noise. This procedure simulates the situation where inconsistent patterns are observed in the several shots of the initial graph depending on the amount of noise. We produce 4 sets of synthetic data with the above procedure. Syn.Data A and Syn.Data B have 3 time troduced for A and N ([0 , 0] , 10 . 0 I ) is introduced for B. We repeat the data generation process 10 times. Figure 2 shows examples of draws from this process. Syn.Data C has 5 time slices and is corrupted by the same noise as A and B at time 2. Subsequently, the noises at time 3, 4, and 5 are N ([0 , 0] , 2 . 0 I ), there are 7 time slices at Syn.Data D , with the same type of corrupted noises as C for the first four time slices, and the last two time slices have N ([0 , 0] , 2 . 5 I ) and N ([0 , 0] , 0 . 5 I ) random noises.
 We run our ` 1 (refer to Algorithm 1) and ` 2 (refer to Algorithm 2) soft clique-ness measure methods on the generated synthetic data. We use a Gaussian RBF kernel k ( v i ,v j ) = exp(  X  1 width  X  2 set to the median distance (Sch  X olkopf, 1997), as the similarity function. Some visualizations of the results of our algorithms are depicted in Figure 2. As a baseline, we use the graph shift algorithm proposed in a dense subgraph, on a single graph (Pavan &amp; Pelillo, 2007). We can extend this algorithm to work on sam-ples of graphs by simply finding the mode defined by the temporal average of similarity or affinity matrices. The graph shift returns different local modes depend-ing on different initializations. We use the default set-ting, which use each vertex as one initialization, and choose the output with the best score. We use the Jaccard Index (Jaccard, 1901), J ( X,  X  X ) = | X  X   X  X | a predicted set of fully connected vertices  X  X while a true clique is X , as an evaluation metric. The em-pirical results are summarized in Table 1. The soft clique-ness measure is clearly important for handling inconsistent patterns inherent in the data. Evidently, our ` 1 and ` 2 soft clique-ness measure methods also produce lower variances in the Jaccard Index metric in Data GS Soft ` 1 Soft ` 2 Syn.Data A 0.82  X  0.28 0.92  X  0.12 0.89  X  0.14 Syn.Data B 0.58  X  0.31 0.62  X  0.16 0.64  X  0.17 Syn.Data C 0.79  X  0.28 0.88  X  0.18 0.87  X  0.16
Syn.Data D 0.85  X  0.26 0.93  X  0.12 0.89  X  0.15 comparison to the graph shift algorithm. As expected, our two algorithms will (mostly) recover the same solu-tions. It is also observed that a collection of snapshots of the same graph could give us more confidence of the clique pattern, for example the mean Jaccard Index in Syn.Data D is higher than in Syn.Data B . 4.2. Real Social Network Data In this experiment, we are interested to apply our clique-ness measure to the samples of real network graphs for identifying a soft-clique of friends. Data We use a Brightkite location-based social net- X  X heck-ins X  where users shared their locations by us-ing text messaging or other mobile applications. The numbers of check-ins varies widely among users, thus we filter the data and only use data from persons with above average number of check-ins. This leaves us with 4 , 429 persons or nodes and 9 , 805 , 806 connections. Set Kernels Exploiting studies in Cho et al. (2011) that mobility patterns of humans are mostly periodic (moving back and forth between homes and work-places) and the remaining patterns could be explained by social relationships, we define different after -hours in a day as samples of the graphs. Specifically, we uniformly divide the hours between 17 : 00 and mid-night into 7 time slices. Each person or node now is represented as a vector of location and date of check-in. To define kernels between persons in this (location-date)-based representation, we are faced with the chal-lenge that persons are represented by different num-bers of locations at different dates depending on how (ir)-regular their check-ins behaviors. We pursue a so-lution of representing a person with a set or a bag of vectors. In this paper, we use the following set ker-nel between x = { x 1 ,...,x n } and y = { y 1 ,...,y m } : k the persons (location-date) descriptors. A Gaussian RBF is used as the base kernel.
 Diagonal Dominance We observe that our set ker-nel matrices at each time slice are diagonally domi-nant, i.e. a person tends to be much more similar to himself or herself than to others. Sub-polynomial kernels (Sch  X olkopf et al., 2003) are designed to specifi-cally address such diagonal dominance issue. This sub-polynomial kernel is generated as follows: first each element of the original kernel matrix is raised to the power of p where 0 &lt; p &lt; 1. This procedure reduces the dynamic range of the original kernel as elements that are less than one will be increased, whereas el-ements that are greater than one will be decreased. Then, the rows of the modified kernel is normalized to a unit length (let  X  K denote this transformed kernel matrix), and lastly, our sub-polynomial kernel matrix is  X 
K  X  K &gt; . The last step is needed to make the modified kernel matrix to be a positive definite matrix. Results Our ` 1 method run for about an hour and produce a soft-clique of friend of the size 1754. We observe that our identified clique explains 23% of the friendship network that was collected based on the on-line public API. The graph shift algorithm did not finish in a week time. We thus randomly select 1754 nodes to form a clique and find that the random clique explains only 14% of the online friendship network. We have introduced the concept of persistent soft-cliques , i.e., subgraphs that are almost fully or at least densely connected, and that persists through all or most instances of the graph. This concept is partic-ularly useful to characterize key patterns more confi-dently when multiple instances of a graph are available for analysis. We presented a soft clique-ness measure, that counts and penalizes the number of edges miss-ing to make the selected subgraphs into a clique, to handle inconsistent patterns inherent in noisy graph instances. When this measure is used in an optimiza-tion framework to find a maximum weighted clique, we end up at a two-person game or a slack formulation. We showed using a Lagrangian method that the two formulations lead to the same solution.
 Our experiments on randomly generated inconsistent patterns in several shots of the initial graph confirmed that a collection of, though noisy, snapshots of the same graph can give us more confidence of the clique pattern, and our clique-ness measure is important for such situation. We also provided experiments on a prototypical application of our method: identifying groups of friends or families from a location-based so-cial network graph where the sampling of graphs cor-respond to an after -hour temporal dimension. Our clique-ness measure helped to recover more than 20% of the online friendship network.
 Despite encouraging results in our experiments, we have clearly only touched the surface of possibilities to be explored. Particularly, we are interested to ex-plore the case where vertex correspondences between time slices are a priori unknown. In such situation, we need to jointly infer the key patterns and the corre-spondences, specifically a mutual information like de-pendency measure can be used for the latter. Further-more, we intend to introduce a pairwise coupling over time slices via a Markov model . This model will allow us to distinguish the case where edges disappear for a while and then come back to the case where edges randomly flip on and off.
 Acknowledgments The authors would like to thank Ahmed Jawad, Mar-cello Pelillo, Zoubin Ghahramani, Adrian Ion, Tiberio Caetano, and Viktoriia Sharmanska for discussions. The first author is supported by a Newton Interna-tional Fellowship.
 Alba, Richard D. A graph-theoretic definition of a so-ciometric clique. Journal of Mathematical Sociology , 3(1):113 X 126, 1973.
 Bollob  X as, B  X ela. Random graphs . Cambridge University Press, 2001.
 Boyd, Stephen and Vandenberghe, Lieven. Convex Op-timization . Cambridge University Press, New York, NY, USA, 2004.
 Brendel, William and Todorovic, Sinisa. Segmentation as maximum-weight independent set. In NIPS , pp. 307 X 315, 2010.
 Brunato, M., Hoos, H., and Battiti, R. On effectively finding maximal quasi-cliques in graphs. Learning and Intelligent Optimization , pp. 41 X 55, 2008. Cho, Eunjoon, Myers, Seth A., and Leskovec, Jure. Friendship and mobility: Friendship and mobility: User movement in location-based social networks. In KDD , 2011.
 Crammer, Koby, Talukdar, Partha Pratim, and
Pereira, Fernando. A rate-distortion one-class model and its applications to clustering. In ICML , pp. 184 X  191, 2008.
 Gupta, Gunjan and Ghosh, Joydeep. Robust one-class clustering using hybrid global and local search. In ICML , pp. 273 X 280, 2005.
 Ion, Adrian, Carreira, Joao, and Sminchisescu, Cris-tian. Image segmentation by figure-ground compo-sition into maximal cliques. In ICCV , 2011.
 Jaccard, Paul.  X  Etude comparative de la distribution florale dans une portion des alpes et des jura. Bul-letin del la Soci  X et  X e Vaudoise des Sciences Naturelles , 37:547 X 579, 1901.
 Liu, Hairong and Yan, Shuicheng. Robust graph mode seeking by graph shift. In ICML , pp. 671 X 678, 2010. Luce, R. Duncan and Perry, Albert D. A method of matrix analysis of group structure. Psychometrika , 14(2):95 X 116, 1949.
 Motzkin, Theodore S. and Straus, Ernst G. Maxima for graphs and a new proof of a theorem of turan. Canad. J. of Math. , 17:533 X 540, 1965.
 Pardalos, Panos M. and Xue, Jue. The maximum clique problem. Journal of Global Optimization , 4: 301 X 328, 1994.
 Pavan, Massimiliano and Pelillo, Marcello. Dominant sets and pairwise clustering. IEEE Transactions on
Pattern Analysis and Machine Intelligence , 29:167 X  172, 2007.
 Robardet, C  X eline. Constraint-based pattern mining in dynamic graphs. In ICDM , pp. 950 X 955, 2009.
 Rother, Carsten, Kolmogorov, Vladimir, Lempitsky,
Victor S., and Szummer, Martin. Optimizing binary mrfs via extended roof duality. In CVPR , 2007. Schaeffer, Satu E. Graph clustering. Computer Science Review , 1(1):27 X 64, 2007.
 Sch  X olkopf, Bernhard. Support Vector Learning . R. Oldenbourg Verlag, 1997.
 Sch  X olkopf, Bernhard and Smola, Alexander J. Learn-ing with Kernels . MIT Press, Cambridge, MA, USA, 2001.
 Sch  X olkopf, Bernhard, Weston, Jason, Eskin, Eleazar,
Leslie, Christina, and Noble, William S. Dealing with large diagonals in kernel matrices. Annals of the Institute of Statistical Mathematics , 55:391 X 408, 2003.
 Scott, John. Social network analysis. Sociology , 22(1):
