 Processing large volumes of information generally requires massive amounts of computational power, which consumes a significant amount of energy. An emerging challenge is the development of  X  X nvironmentally friendly X  systems that are not only efficient in terms of time, but also energy efficient. In this poster, we outline our initial efforts at developing greener filtering systems by employing Field Programmable Gate Arrays (FPGA) to perform the core information pro-cessing task. FPGAs enable code to be executed in parallel at a chip level, while consuming only a fraction of the power of a standard (von Neuman style) processor. On a number of test collections, we demonstrate that the FPGA filtering system performs 10-20 times faster than the Itanium based implementation, resulting in considerable energy savings. H.3.4 [ Information Storage and Retrieval ]: Systems and Software: Performance evaluation General Terms: Performance Keywords: Efficiency, Filtering, FPGA
Servicing millions of user search requests and processing volumes of information requires massive amounts of compu-tational power that consumes energy and produces heat [1]. Energy costs for computing and cooling represent a signifi-cant expense to the operation of data centers [1]. This mo-tivates the development of energy efficient solutions for pro-cessing large amounts of data and information. Reducing the amount of energy consumed provides a win-win situa-tion: service providers can significantly reduce their costs by consuming less energy, and the impact upon the environ-ment is greatly reduced.

In this poster paper, we report on our initial steps to-wards developing environmentally friendly Information Re-trieval systems. We focus on the task of information filter-ing, where given a set of information needs (profiles), incom-ing documents are matched against these profiles [2]. When faced with large volumes of incoming documents, processing needs to be performed in real time, and therefore time based efficiency is paramount. Our aim is to filter documents effi-ciently by processing the requests on low power FPGAs as opposed to power hungry microprocessors.
 Collection #Docs Doc. Len. Uniq. Terms Aquaint 1,033,461 437 169 USPTO 1,406,200 1718 353 of power [4] whereas the Virtex-4 FPGAs consumes approx-imately 1.25 watts of power [5], which clearly illustrates the potential for power saving offered by FPGA technology 1 .
To compare and contrast the performance of the FPGA based filtering implementation against a standard imple-mentation, we used three test collections where the aver-age length and average number of unique terms in a docu-ments varies. Table 1 shows the collections used: TREC Aquaint, and two collection of patents from the US Patent Office (USPTO) and the European Patent Office (EPO), respectively.

To simulate a number of different filters, for each collec-tion, profiles were constructed by selecting a random doc-ument, using the title as the query, then selecting the top n documents as pseudo-relevant documents. These n docu-ments given the query, were then used to construct a rele-vance model [3]. The relevance model defined the profiles which each document in the collection was matched against (as if it were being streamed from the network). n was var-ied from 1 to 50, to determine the impact on performance as the size of the profiles increased (both number of terms, and number of documents). This was repeated 30 times. The results are summarized in Table 2 and Figure 2. From the table, it is clear that the FPGA implementation is typically an order of magnitude faster than the standard implemen-tation. From the figure, it can be seen that as the profile increases (i.e. the number of terms that require matching increases) the standard implementation becomes slower and slower, while the FPGA implementation remains relatively constant. This is because of the wide and pipelined paral-lelism that can be utilized within the FPGA.
It should be noted that due to the system architecture, the FPGA implementation requires a Itanium processor to control the processing, resulting in limited power savings. However, a purpose-built FPGA based system could be sub-stantially more power efficient.
