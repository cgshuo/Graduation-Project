 With the high mobility of talent, it becomes critical for the recruitment team to find the right talent from the right source in an efficient manner. The prevalence of Online Pro-fessional Networks (OPNs), such as LinkedIn, enables the new paradigm for talent recruitment and job search. How-ever, the dynamic and complex nature of such talent infor-mation imposes significant challenges to identify prospective talent sources from large-scale professional networks. There-fore, in this paper, we propose to create a job transition net-work where vertices stand for organizations and a directed edge represents the talent flow between two organizations for a time period. By analyzing this job transition network, it is able to extract talent circles in a way such that every cir-cle includes the organizations with similar talent exchange patterns. Then, the characteristics of these talent circles can be used for talent recruitment and job search. To this end, we develop a talent circle detection model and design the corresponding learning method by maximizing the Nor-malized Discounted Cumulative Gain (NDCG) of inferred probability for the edge existence based on edge weights. Then, the identified circles will be labeled by the represen-tative organizations as well as keywords in job descriptions. Moreover, based on these identified circles, we develop a tal-ent exchange prediction method for talent recommendation. Finally, we have performed extensive experiments on real-world data. The results show that, our method can achieve much higher modularity when comparing to the benchmark approaches, as well as high precision and recall for talent exchange prediction.
  X  Information systems  X  Clustering; People Analytics; Talent Circle Detection. Corresponding authors.

When there is a scarcity of skilled talents, an emerging challenge for human resource management (HRM) is how to identify the right talent from the right source in an ef-ficient manner. Professional recruiters usually invest a lot of resources in talent source acquisition, which is focused on identifying, assessing, and engaging the sources of skilled talent candidates through proactive recruiting techniques.
As a proactive recruiting strategy, the use of Online Pro-fessional Networks (OPNs), such as LinkedIn 1 , for talent re-cruitment becomes popular in many firms. Indeed, there is rich information about talent career trajectories and the tal-ent skills in OPNs data [17], which enables the new paradigm for talent recruitment and job search.

However, the dynamic and complex nature of this tal-ent information imposes significant challenges to identify prospective talent sources from large-scale OPNs. More specifically, there are three unique challenges. First, there are too many people available in the network. For exam-ple, LinkedIn has reached over 400 million members around the world in October 2015. Thus, it is essential to pro-vide a method for finding the candidate scope from many possible talent pools. Second, for different types of posi-tions, hiring specialists usually need to consider different talent sources. Third, since people X  X  job transition trajecto-ries vary a lot [16] and lack of regularity, it is necessary to investigate people X  X  job transition trajectories at the orga-nizational level. Then, it is possible to capture the hidden recruitment patterns and identify the right talent sources.
To address these challenges, in this paper, we propose to use an organization-level job transition network [3], which is generated from people X  X  job transition trajectories. In the network, vertices stand for organizations and edges represent https://www.linkedin.com the job transition amount among organizations for a time period. Also, the direction of edge indicates the job transi-tion orientation and the weight of edge shows the quantity and the category of employees transferring between orga-nizations. Moreover, if a given organization is used as a center node, an ego network can be formed by selecting all the neighbors and edges between them from job transition networks, as shown in Figure 1.

By analyzing this job transition network, we define a tal-ent circle on the ego network to help identify prospective talent sources. A talent circle consists of organizations that have similar talent exchange patterns. With talent circles, the source of different types of talents are gathered together and can then be used for recruitment and job search. Specif-ically, recruiters can find candidates from organizations in most relevant circles. On the other hand, job seekers can locate the position targets in their related circles. For exam-ple, in Figure 1, the neighbor organizations of the ego have been separated into several circles with overlapping nodes or even in hierarchy. These different circles show different talent exchange patterns for talents on specific types of po-sitions, such as financial risk analysts or software engineers.
Although the problem of ego network detection has been studied in social media [9] or co-authorship network fields [2], job transition network differs from the aforementioned scenarios in several aspects. First, the ego job transition net-work is much more densely connected and weighted. Since most of the organizations in an ego network have strong connections, the weight is important to distinguish the sig-nificance of edges. Second, the job transition network is di-rection sensitive, because the direction of edges has different meanings in different recruitment scenarios.

In light of the above, we propose a talent circle detec-tion method for finding talent circles in the job transition networks. Specifically, we define node similarity based on talent exchange patterns and infer edge existence probabil-ity with hypothetical circles. Then, we compare the inferred probability with edge weight and refine the circle segmen-tation by maximizing Normalized Discounted Cumulative Gain (NDCG). Next, we label detected circles with repre-sentative words from job description to provide the semantic meaning for identified circles. Moreover, based on detected circles, we develop a talent exchange prediction method to show the effectiveness of the proposed model. Finally, we have performed extensive experiments on a large amount of real-world data. The results show that, our method can achieve much higher modularity when comparing to the bench-mark approaches, as well as high precision and recall for talent exchange prediction.
To address the circle detection problem in job transition network, we design a framework that consists of data crawl-ing, data transforming, modeling, learning and circle label-ing. As shown in Figure 2, the framework consists of three main stages, namely network formation, feature extraction and circle detection.

Network Formation. In this stage, we obtain the raw data and transfer them into a formalized job transition net-work. The raw data are job experience records, in which each item contains a job title, a corresponding organiza-tion, a brief text description of work contents, and the be-ginning/end date of the job position. Specifically, we first crawl professional profiles from OPNs and transfer the inner resume into job transition trajectories by joining successive working experience items. Then, we aggregate all the tra-jectories into a weighted and directed network [21] at the organizational level. Finally, the ego network is defined as a subnetwork that consists of the neighbors of a specific node. Figure 2: The framework of talent circle detection.
Feature Extraction. In this stage, we define similarity features according to the job transitions of nodes and the similarities between nodes. Specifically, we classify job ti-tles into categories based on the job description posted by corresponding employees. Intuitively, organizations that ex-change more employees and have more common preferences in job type distribution should be more similar to each other. Furthermore, organizations have homogeneous interactions with the ego node should be more similar than heterogeneous ones. Thus, the features used in similarity measurement can be derived from two aspects: aggregated and ego-centric personnel exchange. Specifically, aggregated personnel ex-change features consist of job transition patterns centered by the node from all its neighbors; and ego-centric features consist of job transition patterns between nodes and the ego node. These features can capture the hiring characteristics of the organization. Here, the similarity is defined as the multiplicative inverse of Euclidean distance between nodes.
Circle Detection. In this stage, we conduct model learn-ing process to determine node segmentation. In the model, we first put each node into one hypothetical circle and calcu-late the node-circle belonging coefficient based on the node similarity. Then, we remove a node from circles which it belongs to and then add it into other circles according to the level of belongingness and circle size. After that, we in-fer the possibility of edge existence based on the assumption that, if two nodes with high similarity and appear in tightly connected circles, an edge will be more possibly generated between them. Finally, we compare the inferred probabil-ity with edge weight by a customized version of NDCG and determine whether to accept the segmentation or not. The learning process is initiated as a single node circle sets and iterates until there is no update of objective function. After circle detection, we label the circles with top related orga-nizations and keywords from job description. In particular, the learned circles can be further used for recruitment re-lated applications, such as talent exchange prediction.
In this section, we describe how to build the weighted job transition network, and how to extract features for measur-ing the similarity between nodes.
We use a weighted and directed graph G = &lt; V,E,W &gt; to model job transitions between organizations for a time period (e.g., in 12 months). Specifically, each node v V ( i = 1 , 2 ,...,N ) represents an organization, which could be a company, a university or a government department, etc. A directed edge e i,j  X  E from v i to v j stands for the aggregated job transition from organization v i to v j . Moreover, the indegree (or outdegree) deg  X  ( v i ) (or deg + ( v i )) of node v the number of edges ended at (or started from) v i .
Application-Oriented Node Degree . In recruitment, different application scenarios concern different edge direc-tions. For example, if the task is to discover where to find out candidates for a specific position in a company, the his-torical incoming transitions of that company are appropriate references. However, when job-seekers urge to know where to find the next job, they usually need to check the out-going transitions from the current company they are working for, and find out some companies which are ready for recruitment of qualified positions. Therefore, we use different degree def-initions in these two scenarios. Specifically, we use deg ( v represent appropriate node degree while developing model. In the application of recruiting candidates, it is more mean-ingful to locate the source where employees come from, such that we set deg ( v i ) = deg  X  ( v i ), where the edge weight and transfer amount are calculated based on the selected direc-tion of transitions. Accordingly, we set deg ( v i ) = deg in the application of job position locating. As a result, the model is general for satisfying both application scenarios when using corresponding degree definition.

Edge Weight Definition . For a node v i and its neigh-bors { v j ,j = 1 , 2 ,...,deg ( v i ) } , weight w i,j  X  W of edge e is defined as the job transition percentage between v i and v within a given time period. More precisely, we use n i to denote the total number of transitions from (or to, depends on the application scenario) a node. The edge weight is then calculated as where  X  i,j is the amount of transitions between v i and v Note that, since we are only interested in one of the direc-tions in our model for each scenario, edges will not be dupli-cated used in weight calculation. Furthermore, because the nodes in job transition network are densely connected, the weight is a critical indicator to distinguish the significance of edges. Thus we take the edge weight as an important determinant in both node similarity measurement and circle detection process.

Ego Network . The ego network in talent circle detection is a subset of the job transition network. Specifically, given a node u as the center node, the ego network is constituted of all the neighbors of u . For example, as shown in Figure 3, the neighbor node set (i.e., black nodes) in ellipses forms the ego network. In particular, different application scenarios require different edge sets. The left side of Figure 3 shows a network that is suitable for identifying talent source of the ego node, and the right side network is appropriate for job-seekers to reduce job search scope when chasing a new job. Note that, because the transition patterns should not be limited in the ego network, edge weights and transitions in the ego network are measured based on the whole network G , but not measured by the traffic of subset nodes. Moreover, u is not included in its ego network. We use notation G  X  X  to denote the ego network in our model.
Intuitively, the similarity of two organizations could be derived from profile information, such as whether they are belonging to the same sector, located in the same city, or whether they have common business scope.

However, static profile based similarity is not suitable in talent circle detection from the perspective of recruitment. Ideally, the similarity should reflect employees X  transition characteristics between organizations. In other words, or-ganizations that share more job transitions and have more common preferences in job category distribution should be more similar to each other. Furthermore, since the pri-mary goal is to find out the circles of the ego, organiza-tions which have homogeneous interaction with ego should be more similar than heterogeneous ones. Thus, in this pa-per, the similarity is defined based on the historical job tran-sitions. Specifically, the features used for similarity measure-ment can be derived from two aspects, namely aggregated and ego-centric personnel exchange.

Aggregated Personnel Exchange. This is defined as the categorical distribution of transitions to a node. In this paper, job positions in transitions are divided into 10 cate-gories according to job title and the corresponding job de-scription (the details are discussed in Section 6.1). The to-tal amount of job transition n i is separated into { n i,c 1 , 2 ,.., 10 } , where n i,c is the amount of transitions in job category c . Then, the transition proportion of each job title category with respect to the total transitions to organization v forms a categorical distribution vector The vector captures the constitution of employees attracted (or offered in the application of recruitment) by the organi-zation. In Figure 4, the solid lines illustrate the source of aggregated features of in-coming traffics. From the perspec-tive of recruitment, two organizations with similar  X  may have analogous staffing strategies. Since the edge and the corresponding weight stand for the fraction of transitions between nodes, aggregated exchange could be treated as the extension of all the edges. Moreover, because the weight of edge is used as the objective in our model, it will be ignored in similarity measurement.

Ego-centric Personnel Exchange. This is the cate-gorical distribution of transitions interfered by the ego node. From the viewpoint of the ego node, organizations may act as similar roles in talent exchange flows, even though they are different in staffing strategies. Specifically, two organiza-tions are similar when they offering (or attracting) the same type of talents (e.g. hardware engineer) to (or from) the ego. Although the center node is excluded in its ego network, the relationship between nodes and the ego is a determinative factor in circle detection. Particularly, two nodes are more likely to co-appear in a circle when they have common inter-action patterns with the ego node. In fact, two organizations may be grouped into the same circle because they feed the ego with the same category of employees, even though they do not have the same organization scale or in the same sec-tor. Ego-centric features are defined based on  X  i , while the transitions between node u and v i are considered. We use  X  to denote the categorical distribution vector of transitions between u and v i , and then define the feature vector as where  X  u is the aggregated feature and w u,i is the weight of edge between u and v i . Each dotted line in Figure 4 illus-trates a dimension of ego-centric features of node v i and v between the ego.  X  i is the fine-grained transition categorical distribution normalized by aggregated transition categorical distribution. Indeed, two similar vectors indicate they inter-act with the ego in similar way, since the vector encodes the interaction pattern between the ego and organization. Based on the feature vectors  X  i and  X  i , similarity Sim ( v i fined on the merged vector F i = [  X  i , X  i ] and F j = [  X  as shown in Equation 4.

In this section, we introduce the details of our model for talent circle detection in the ego job transition network.
In this paper, we design a generative model to detect over-lapping and hierarchical talent circles. As in the ego job transition network, two organizations should be assigned to a circle if they are closely connected and also similar to each other. The basic assumptions of our model have three as-pects. First, two nodes have a possibility to form an edge when they are co-appearing in a circle. Second, circles that contain stronger connected nodes lead to a higher possibility to form edges among contained nodes. Third, two nodes in a circle with higher belongingness also have a higher edge existence possibility.

The probability of edges is generated based on the above assumptions. We then compare the inferred probability with the edge weight in an ordered manner. The objective of the model is to maximize the weighted similarity between the weight order of neighbors and the inferred probability of edges around an organization.

To build up the metrics of our model, we first define the concepts of natural ordered neighbor sequence , circle and be-longing coefficient as follows.

Natural Ordered Neighbor Sequence. Given a node v , the natural ordered neighbor sequence A i is the descend-ing ordered list of neighbors according to the edge weight { w i,k | e i,k  X  E } . Formally, we have where w i,j  X  w i,j +1 . We use A i,k to refer to the k -th node in A . For example, if v i connects to { v 1 ,v 2 ,v 3 } and weights among them satisfy ( w i, 2 &gt; w i, 1 ,w i, 1 &gt; w ( v 2 ,v 1 ,v 3 ). The neighbors with the same edge weight are arranged by the indexing (e.g., alphabetic) order. When constructing the model for a specific organization, the ego node is excluded from the neighbor list.

Talent Circle. A circle is a subset of neighbors of an ego node, where nodes within a circle are closely connected and similar to each other. We use { C m  X  C } to denote circles, where m = 1 , 2 ,...,M and C m  X  V . Intuitively, on the one hand, if the circles are appropriately detected, nodes with strong connections should more likely be settled in the same circle than the nodes with weak connections. On the other hand, from the perspective of the node similarity, similar nodes are more likely to appear in the same circle. Meanwhile, circles could be hierarchical, which means circles with strongly connected nodes could be contained in circles with weakly connected nodes. Moreover, circles could also be overlapping. In other words, a node can belong to more than one circle.

Belonging Coefficient. Since circles may be overlap-ping, a node could more tightly belong to a circle than an-other circle. The belonging coefficient is defined as the tight-ness strength of a node to a circle. Specifically, we use a belonging matrix U i,m  X  R (0  X  U i,m  X  1 ,i  X  1 , 2 ,...,N,m  X  1 , 2 ,...,M ) to denote the belonging strength of node v circle C m , and a larger value of U i,m to indicate a tighter belongingness. In our model, U i,m is defined as the average mutual similarity between node v i and the rest of the nodes in circle C m , as shown in Equation 5. When there is only one node in a circle, the belonging coefficient is assigned to 1. In particular, the belonging coefficient affects the infer-ring of the edge existence probability in the model as well as the node-circle belonging dynamics in the learning process.
According to our assumptions, a pair of nodes within a circle has a possibility to generate an edge, and the gener-ated edge weight is determined by two factors: the number of common circles they belong to, and the belonging coef-ficient of the node pair to the common circles. In reality, if two companies exchange employees more frequently, they should be more likely to be placed in the common circles. We use an iterative method to approximate the real segmenta-tion and start from a simple temporary status where circles are hypothetically existing. Accordingly, the probability of two nodes forming an edge is defined based on node-circle belonging relation in the temporary status.

In a temporary status, all nodes are assigned into cir-cles. We define an indicator  X  ( i,j ) to capture the edge existence possibility (or weight strength) between node v and v j . Specifically, the value of  X  ( i,j ) is high if v v j are put into a common circle and have high belonging coefficients to the circle. For each node v j which satisfies |{ C m |{ v i ,v j } X  C m }| &gt; 0,  X  ( i,j ) is defined as follows:  X  ( i,j ) = exp { X where T m is the minimal U j,m for all the v j  X  C m , and  X  is the maximal T m for all circles C m . In other words, T is a similarity threshold of circle C m , which indicates the tightness of nodes within a circle.  X  is used to guarantee that the value of (  X  X  m +  X  ) is positive and has a higher value when T m gets smaller. A smaller value of T m reduces the value of  X  ( i,j ), such that a pair of nodes in lower similarity threshold circles generates lower  X  ( i,j ) value. On the contrary, U and U j,m guarantee that  X  ( i,j ) has a high value if both of the belonging coefficients are high.

Similar to the natural ordered neighbor sequence A i , we arrange all the neighbors of node v i according to  X  ( i,j ) in de-scending order as B i = ( ...,v j ,v j +1 ,... ) , where  X 
Let we use B i,k to refer to k -th node in B i . Ideally, given a pair of nodes ( v j ,v l ), if w i,j &gt; w i,l and the edge weight is well inferred, it should have  X  i,j &gt;  X  i,l . The opposite re-lation indicates wrongly assigned circles. Thus we treat the sequence difference between A i and B i as the goodness of circle division. If w i,j &gt; w i,l and  X  i,j &lt;  X  i,l of nodes ( v j ,v l ) is an inversion of A i and B i . The inver-sion number is the total inversions between two sequences as inv ( v i ) = |{ ( v j ,v l ) | w i,j &gt; w i,l  X   X  i,j to the definition, there is no inversion when edge weights are perfectly inferred. In addition, the more error exists, the larger inversion number will be conducted.

However, the calculation of inversion number is computa-tional complex, because the length and elements of A i and B i are not always match. Fortunately, since what we need is a metric that can measure the difference of two weighted sequences, we propose to use Normalized Discounted Cumu-lative Gain (NDCG)[7] for measuring the differences instead. Specifically, NDCG is a measure of ranking quality in infor-mation retrieval by calculating the weighted ranking results according to ideal ranking lists. When replacing document with neighbors , and relevance with edge weight in the defini-tion, NDCG is suitable for measuring the difference between B i and A i . The basic assumptions of NDCG can be grafted on to measure sequence difference smoothly: By the migration of conceptions, Discounted Cumulative Gain (DCG) of node v i is defined as follows.
 where k is the sequence order index in B i,k . According to the definition, DCG i increases when a node with higher weighted edge be moved before a lower one in B i . In other words, DCG i is high if B i is close to A i , especially when the prefix of B i is close to the prefix of A i . Ideal DCG ( IDCG i ) is calculated based on the neighbor sequence of A i,k , and it is the upper bound of DCG i .
 NDCG i is then defined as normalizing DCG i by IDCG i . Note that B i is the list of neighbors that co-appear with v in circles, so the length of B i is usually not equal to | A reality. Typically, B i may contain many elements as suffix that not belongs to A i . For example, if nodes in A ( v 1 ,v 2 ), then B 0 i = ( v 1 ,v 2 ,v 3 ,v 4 ) and B 00 have the same NDCG i . Thus we use set difference A i 4 B to penalize it, and define objective function of our model in Equation 8: where U is the belonging coefficient matrix and acts as a dynamic parameter in the learning process. Meanwhile, F U is related to the proportion of transitions such that a larger node has a higher priority.
In this paper, we propose to use a bottom up learning al-gorithm starting from a simple node-circle belonging status to maximize objective Equation 8, as shown in Algorithm 1.
In the initial step, each node v i is assigned to a corre-sponding circle C i , such that C i = { v i } ,i = 1 , 2 ,...,N . U is assigned as an identity matrix, since the node-circle be-longing coefficient is 1 if there is only one node in the circle. For each node, we first compute the natural ordered neighbor sequence { A i } according to { w i,k | e i,k  X  E } . As illustrated in the left side of Figure 5, at step 0, U 0 is an identity matrix that encodes initial node-circle belonging relationships.
In the learning process, the algorithm iteratively remove a node from circles it belongs to and add the node into other circles to maximize the objective function in Equation 8. In each step, the leaving and joining circles are determined by both the belonging coefficient and the circle size. Let we use notation NC t i = { C t m | v i  X  C t m } to denote node-circle membership in iteration t , which is a binary version of non-zero elements in the corresponding row of U i,m . The learning process then changes NC t i by adding and removing nodes in circles, and evaluates the value of F U of the temporal status to decide whether accept or reject the change.

Specifically, in iteration t , for each node v i , we first calcu-late the edge existence possibility according to Equation 6, and get ordered neighbor sequence B i . Then, we adjust the node-circle membership as follows: 1. Remove v i from d rm circles. d rm is determined by 2. Add v i to d add circles. To increase the value of F U 3. Calculate temporary  X  t i,j . We calculate  X  t i,j (Equa-
After the node-circle removing and adding step, we up-date U i,m for all the node-circle pairs and then calculate F based on U i,m , A i and B t i . If F t U &gt; F , we accept the new circles, and set NC i = NC t i and F = F t U . The iteration re-peats until F becoming stable after sufficient steps. When the iteration stops, U i,m contains the detected node-circle belonging relationship.
In this section, we evaluate our talent circle detection model with extensive experiments on real-world data.
In this paper, we use a representative real-world data set from one of the largest commercial OPNs, to study the circle detection problem. Specifically, the data set contains 1.98 million professional profile pages from Sept. 2014 to Dec. 2015. Each page contains a job experience list in which each item shows the job title, the organization, the time period in a monthly granularity and a brief text about the job description [17]. According to the URL of organizations in resume records, there are 649,076 organizations in total. Since we are focusing on job-hopping behaviors among or-ganizations, work experience records with keywords indicat-ing freelancers like  X  X reelance X ,  X  X elf employed X  and  X  X ork at Algorithm 1 Talent circle detection by maximizing NDCG Require: Similarity matrix SIM , IDCG , A i , Maximal it-eration steps  X  Ensure: Node-circle belonging coefficient matrix U
Initial: U i,k  X  I , NC 0 i  X  X  v i } , F  X  0 while F changed in last  X  steps do end while home X  are neglected. Table 1 shows the detailed statistics of our data set.

There are three steps of data pre-processing, including job transitions transformation , job title categorization and transition network initialization .

Job Transition Transformation . Items in job resume are transformed into job transitions by joining successive job record pairs. Specifically, we sort the resume items by starting time in ascending order, and then compare the end date to identify job-hooping activities, as shown in Figure 6. If the end date of record j satisfies et j &lt; et j +1 , then we treat Figure 6: Transforming resume into job transition. record pair j and j + 1 as a transition, as case c of j + 1 in the figure. If the end date of j is later than the start date of j + 1, then we ignore the record pair j and j + 1 because the j + 1 time period is included by the period j (overlapping), as case b in Figure 6. Otherwise, as in case a in the figure, we check record j + 2 (if it exists), and repeat the process until there is no more j + 1 item. The job transition date is set as the start date of successor and the job title is determined by the title of predecessor when it changed during a transition.
Common transition date lasts from 1970s to the date when we collect data, and most of the transitions happening after 2000s. As shown in Figure 7, job transition frequency has a clear cycle of 12 months, so we use 12-month as a time window in our experiments.
 Figure 7: Aggregated job transition frequency.

Job Title Categorization . On professional profiles, users are free to specify their job titles, and usually write a short text description of their work [1]. In total, there are 284,245 different titles in our data set. In our exper-iments, we categorized the job titles into a few dozens of classes according to job functions by using online API from a third-party tool called Autocoder 2 , which can classify job related content such as resumes and job description to a standardized hierarchy of occupation categories known as the Occupational Information Network. After that, we man-ually classified titles into 142 classes and further integrated into 10 major categories, as shown in Table 2.
 Professional and Business Services 21 75,565
Transition network initialization . We aggregated all the transitions at the organizational level and formed a job transition network. All the transitions from organization i to organization j form a direct edge starting from i and ending at j with the transition volume n i,j . In average, there are 30 transitions between two organizations, and 84% of the flows happen among 20% of the nodes. Among all the transitions, approximately a quarter of the transitions took place within the same organization, and we ignored these loops because the ego is excluded in talent source identification.
To evaluate the performance of our model in terms of cir-cle detection, we compare our model with two state-of-the-art algorithms on modularity [10], which is a widely used http://www.onetsocautocoder.com/plus/onetmatch metric in community detection [15]. Since the original defi-nition of modularity is defined on non-overlapping commu-nities, in our experiments we use an extension introduced in [12]. Specifically, we first choose two latest algorithms as baselines, namely Coordinate Ascent ( CA ) from social network analysis [9] and Simulated Annealing ( SA ) from co-authorship network analysis [2]. Meanwhile, we choose two classic algorithms as baselines, namely Random Walks ( RW ) based community detection [13] and Edge Between-ness ( EB ) based method [11]. Since there are some differ-ences between network definitions, we follow the implication of RW and EB in [5], and from original websites 34 of four methods, respectively.
 Figure 8: The comparison results of modularity.

Because the belongingness is usually normalized to have a summation of 1, we normalize the belonging coefficient U i,m by its row sum, i.e., U i,m = longing coefficient of nodes as the multiplicative inverse of belonged circles in CA and SA . The coefficient is set to 1 in RW and EB since there is no corresponding definitions in these two methods. Since there is a modularity in each ego network, we pay more attention to the performance on majority egos and comparing the corresponding results of ego in other algorithms, as shown in Figure 8.

The result is based on the experiments on 7,000 egos which are the top 10 percent nodes in degree. There is an average of 5.6 circles and 3.1 organizations in each circle. As shown in Figure 8, the average modularity are 0.6376 ( Our Model ), 0.5536 ( CA ), 0.5652 ( SA ), 0.5464 ( RW ), and 0.5420 ( EB ), respectively. As a result, our method outperforms all other methods at least 7.2% in average. The majority of results of our method are also higher comparing to other methods in despite of few outliers with low modularity. The results clearly indicate that our method is more accurate for circle detection in terms of modularity in the weighted and densely connected job transition networks.
According to the model assumptions, organizations within a circle should have common interactions with the center or-ganization and also exchange similar employees among each other. Thus different circles have different job transition characteristics. To this end, we select the results of several organizations for analysis.

To interpret the results, we rank the organizations in the circle according to the belonging coefficient and select top http://cse.iitkgp.ac.in/resgrp/cnerg/circle/ http://cseweb.ucsd.edu/ jmcauley/ ones as representative organizations. Besides, we extract related keywords from job description to facilitate the inter-pretation. We trace job transitions between ego and the set of companies in the circle, and extract job descriptions of these transitions. All the descriptions related to a circle are joined into a document, and thus a set of documents form as a corpus. After a removal of stop words, we arranged the words in a document according term frequency inverse document frequency (TF-IDF), and manually select several representative keywords in top 10% TF-IDF words.
 Figure 9: Circles of AOL . Organizations in circle (A) provide quantitative analysts. (B) provides digital marketing specialists. (C) provides customer opera-tion support. (D) provides sales marketing analysts.
As shown in Table 3, we display the representative orga-nizations and descriptive keywords for three ego examples, namely Citi Bank , AOL , and Accenture respectively. Four circles of each ego have been listed with corresponding key-words for job title description. For instance, since Citi is a corporate financial organization, most of the organizations in the Citi circles are focus on financial services. Although circle 1, 2, 3 of Citi are banking or related financial consult-ing services, the characteristics of talent sources from each circle are very different. For example, according the descrip-tion of keywords, circle 1 mainly involves the talents for tasks such as corporate finance or project management, change management. While circle 2 focuses on job applicants spe-cialized in corporate and financial risk management tasks, and circle 3 deals with talents for trading services, capital markets, or investment banking. The companies in circle 4 are mainly in IT services industry and the talent source from this circle are focusing on quantitative research, desk strategist, and quantitative analytics for Citi bank.
In summary, most of the companies in the circles for the ego are in the similar industry of the ego company, but dif-ferent circle shows different needs of talent specialties. Sim-ilar observations can be found on the media and advertising company AOL (as illustrated in Figure 9) and the very suc-cessful consulting company Accenture . Keywords of job title summary based on the the top keywords of description is also listed in the last column of the result table.
One of the major application of talent circle detection in job transition network is to identify the source organization for selecting candidates in hiring. In fact, the detected cir-cles are appropriate references for hiring different types of employees. For example, when the goal is to hire software engineer, recruiters can refer to the organizations appearing in circles which have labels in  X  X omputer software X ,  X  X oftware engineer X  or  X  X rogrammer X , etc. It is possible to precisely lo-cate target organization by using the circles.
 Figure 10: The feature distribution of typical circles of Citi bank.

However, enumerating related labels is inefficient when selecting circles for a job title category. As users are free to describe their works, there are too many alternative words for a title. There is a high possibility of mismatching by simply indexing keywords to solve the problem. Therefore, we design a quantitative method to identify related circles by ranking the average feature vectors. Specifically, the average feature of a circle C m is defined as a vector FC m where each dimension is defined as For a given ego, FC m can be normalized by subtracting the average circle feature 1 M P m FC m , where M represents the number of circles. The normalized FC m is treated as the  X  X eature of a circle X . Figure 10 shows the typical normalized circle feature distribution of ego  X  X iti X , in which each area is the value of a circle feature in 10 dimensions. It indicates that different circles have different feature peak dimension combination [20]. This phenomenon also appears in circles of other egos. It suggests that average feature value is a reasonable way to identify different circle properties. We can then rank the circle features by different dimensions and select top ranked circles as related candidates.

Talent Exchange Prediction Problem . This prob-lem refers to predict where employees will leave for from an ego, based on the detected circles. In real job market, majority of employees will go to the same set of companies where the forerunner in the same job type went, because the sector usually keeps stable and forms some specific job hooping trajectories. Although other employees may go to other companies, it is highly possible that they still stay in organizations which have similar labor demand. Therefore, we predict that the employees in a given category will go to the circles that labeled in the same category. By tak-ing advantage of circle features, we design a simple talent exchange prediction mechanism.

For each given job title, we predict where employees with the title will leave for. Specifically, we first rank the circle feature [22, 19] according to the corresponding dimension in a descending order, and then select companies in top cir-cles as the predicted destination. We use the job transition destination from the ego in the next year as ground truth. The prediction and evaluation procedures have three stages. First, for a given ego and title, we rank circle features by corresponding dimension in descending manner. Then we select organizations in top ranked circles as candidates. Fi-nally, we compare predicted organization candidates with the companies which employees in the same title category leave for in the next 12 months.
 Figure 11: The precision and recall performance of talent exchange prediction.

We measure the precision and recall to evaluate the per-formance of talent exchange prediction. The circles are de-tected based on the data that have transitions during Jan-uary 2013 and December 2013, and test data are the tran-sitions during January 2014 and December 2014. Figure 11 shows the average, upper and lower bound of precision and recall for 10 job categories of Citi . As shown in the result, the precision and recall depend on the number of circles we used in prediction. We find that, the precision firstly in-creases with the increase of circles, and then reaches a peak of 73% in 4-5 circles, while it finally decreases when the num-ber of circles larger than 6. The recall increases consistently with the number of circles, and stays stable after 6 circles in 65%. The results indicate that a majority of employees in a given job category will leave for companies that appears in the circles with corresponding characteristics. It suggests that the detected circles are appropriate node separation from the perspective of talent exchange flow.
In this section, we review two categories of literatures that are related to this paper, namely research on data mining for recruitment analysis, and research on circle detection in social networks.

Data mining for recruitment analysis . Recent years have witnessed the increasing popularity of using data min-ing techniques for addressing human resource management (HRM) problems [14]. The recruitment process is one of the important sub-domains of the HRM. Although many classic data mining tasks, such as classification, association rules and clustering [4, 6], have been performed to recruitment for personnel selection and talent prediction, only few exist-ing work is focus on the analysis of job transition network for recruitment. For example, [3] proposed a real-time sys-tem for mining job-related patterns from social media by analyzing the job transition network. [17] showed a novel approach for modeling the professional similarity by mining professional career trajectories.
Circle detection in social networks . Social circle de-tection in ego networks is first proposed by McAuley and Leskovec [8, 9]. They proposed the node clustering problem and developed a model for identifying the circles including both network structure and user profile information from several popular social networks. Recently, [2] applied the techniques of automatic circle detection in an ego network on the field of co-authorship network by proposing an unsu-pervised method that combines both various node features and node similarity measures. Also, [18] used a multi-view clustering method for automatically detecting the social cir-cles. Due to the different background in the job transition networks, although we have similar problem of discovering circles in the ego networks, the node features and node struc-tures are very different. Therefore, different objective func-tion and learning process have to be designed specifically for the job network scenario. To the best of our knowledge, this is the first attempt to detect circles for each company in a job transition network. We believe the findings from our model can further help to enhance the effectiveness of human resource tasks, such as staffing.
In this paper, we investigated how to identify the right talent sources for recruitment from Online Professional Net-works (OPNs). Along this line, we first created a job transi-tion network based on job transition trajectories at the orga-nization level. Then, we proposed a talent circle detection model for extracting talent circles from the job transition network in a way that every circle includes the organiza-tions with similar talent exchange patterns. With the help of these talent circles, the organizations can find the right talent for recruitment and the job seekers can locate suitable jobs for themselves. Moreover, based on these identified cycles, we developed a talent exchange prediction method to predict the possible destination companies for the job hopping employees. As shown in the experimental results on real-world OPNs data, our approach outperformed the benchmark methods in terms of modularity. This research was supported in part by the National Basic Research Program of China (No. 2015CB352400), the Na-tional Natural Science Foundation of China (No. 71329201, 61373119, 61332005, 61402369), Microsoft, and the Rutgers 2015 Chancellor X  X  Seed Grant Program. [1] R. Bekkerman and M. Gavish. High-precision [2] T. Chakraborty, S. Patranabis, P. Goyal, and [3] Y. Cheng, Y. Xie, Z. Chen, A. Agrawal, [4] C.-F. Chien and L.-F. Chen. Data mining to improve [5] G. Csardi and T. Nepusz. The igraph software package [6] H. Jantan, A. R. Hamdan, and Z. A. Othman.
 [7] K. J  X  arvelin and J. Kek  X  al  X  ainen. Cumulated gain-based [8] J. Leskovec and J. J. Mcauley. Learning to discover [9] J. Mcauley and J. Leskovec. Discovering social circles [10] M. E. Newman. Modularity and community structure [11] M. E. Newman and M. Girvan. Finding and [12] V. Nicosia, G. Mangioni, V. Carchiolo, and [13] P. Pons and M. Latapy. Computing communities in [14] S. Strohmeier and F. Piazza. Domain driven data [15] Z. Wang, D. Zhang, X. Zhou, D. Yang, Z. Yu, and [16] H. Xu, Z. Yu, H. Xiong, B. Guo, and H. Zhu. Learning [17] Y. Xu, Z. Li, A. Gupta, A. Bugdayci, and A. Bhasin. [18] Y. Yang, C. Lan, X. Li, B. Luo, and J. Huan.
 [19] Z. Yu, Z. Wang, H. He, J. Tian, X. Lu, and B. Guo. [20] Z. Yu, H. Xu, Z. Yang, and B. Guo. Personalized [21] J. Zhao, J. Wu, X. Feng, H. Xiong, and K. Xu.
 [22] H. Zhu, E. Chen, H. Xiong, H. Cao, and J. Tian.
