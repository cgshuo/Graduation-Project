 Our research involves developing technology and techniques that apply the vast sea of real-time web data to interesting problems and topics. In this demo, we will present the on-going development of a novel real-time search and discovery service named Yokie 1 ( http://yok.ie , early technology de-sc ription originally published in [1]). Yokie uses the large volume of hyperlink-laden messages on social networks like Twitter as the basis of its content and ranking systems. Cu-rated sets of users (or  X  X earch Parties X ) form the basis of sourcing the content from the networks, and the metadata of the containing messages form the basis of ranking and contextual retrieval of the hyperlinks. Each hyperlink is in-dexed with a compound set of terms from multiple tweets (should the given hyperlink be shared more than once). This indexing step is a novel example of collaborative tagging of resources. The application is live with more than 100 users, who have performed approximately 1000 queries. We will demonstrate the main techniques and novel ranking and re-trieval techniques and user features.
 H.4 [ Information Systems Applications ]: Miscellaneous Applications, Algorithms, Experimentation, Theory Search, Discovery, Information Retrieval, Relevance, Repu-tation, Twitter Yokie -http://yok.ie A key aspect of the system is the curated list of con-tent sources, what we X  X e termed a Search Party . Users can curate dedicated search engines for personal and community use. These parties can be simple user lists, keywords, geographical metadata, or based on algo-rithmically generated lists. In the current prototype we have curated several seed Search Parties: Technol-ogy , I rish Interest and Wo rld News Twitter users (each containing 1000 users).
 The system uses Twitter X  X  API to acquire content as defined by the search parties. These messages are then stored and indexed using the service described in the following subsection. This component also carries out real-time language classification and finds other mes-sages that contain the same URL so the system can calculate item popularity, and extracts tags so as to allow collaborative tagging.
 Once content is acquired, it is pushed to the Storage and Indexing subsystem. This is responsible for ex-tracting metadata regarding the tweets, for instance timestamp data, hashtags (#linsanity, etc.), user pro-file information, location, etc. as well as the message content itself. The main content, the urlID of the URL mentioned in the message, and the timestamp is pushed to an indexer for storage and querying. In our current implementation we use Apache Solr 2 for this. We also store the remaining extracted metadata in a MongoDB 3 NoSQL database for easy retrieval and fast MapReduce functionality. UI &amp; Querying User &amp; Item-based Result Ranking The premise of this strategy is high-volume in-links for users can be a sign of high user reputation. It is eas-ily possible to derive a range of Reputation scores as we are specifically  X  X istening X  to people for content, as opposed to relying on a document graph that ignores content publishers. The novel Interestingness ranking algorithm is a function of popularity, level of user in-teractions of the items, and binary ratings.
Yokie -a curated, real-time search and discovery system using twitter. In 2nd Workshop of Real-time and Social Web. At Recommender Systems 2011 ,
RSWEB X 11, 2011. text categorization. ACM Comput. Surv. , 34:1 X 47,
March 2002.
