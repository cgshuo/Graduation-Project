 Many applications generate uncertain streams inherently [1]. In those applications, and/or imperfect computing algorithms. Fo r example, object identification in video exists widely and can not be eliminated in the near future. Example 1. Fig. 1 (a) shows a video surveillance system, which gets video from cam-programs are probabilistic data streams, and query processing should take the uncer-tainty into consideration. For example,  X  Person A is moving  X  implies: (1) A appears at position and pro is the confidence. The SQL is: SQL1 : 
SELECT s1.t, s1.pro*s2.pro as pro, sqrt((s1.posx-s2.posx)^2+(s1.posy-s2.posy)^2) as dis FROM str0 s1, str0 s2 WHERE s1.t+1=s2.t and dis&gt;0 ORDER BY pro DESC 
Results are shown in Fig. 1 (c). Accordi ng to the context of supermarket environ-ment and human beings X  physical function, some results are more unreasonable, such as Tuple 4, 9, 15 and 17 indicating that A moves over one meter in a second. We de-solution to clean uncertain data according to appli cation context. 
In this paper, we propose a framework for cleaning uncertain streams by Parallel-ized Probabilistic Graphical Models ( P 2 GM ). Our contributions include:  X 
We propose a parallelized probabilistic graphical model for high-volume stream environment by two kinds of parallelization: a single model can be executed over multiple streams in parallel; and independent models are executed simultaneously.  X 
We provide a general framework for users to define cleaning rules according to the applications and generate parallelized systems, and also implement an example video surveillance system with special cleaning rules based on it.  X  Experiments demonstrate remarkable quality and performance of our approach. In the rest of the paper, we overview related works in Section 2, present more details of P 2 GM architecture in Section 3 as well as our prototype implementation in Section 4. Section 5 demonstrates the effectiveness and efficiency of our approach. Section 6 concludes the paper. Probabilistic Databases. Many recent papers relative to probabilistic databases are concerned about data structure and query processing. There are two basic types of semantics, the most difficult point is the exponential increase of the number of possi-ble worlds during processing. alternatives with probabilities that represent a discrete probability distribution of these  X  with the probability p(t) , or does not exist at all with probability 1- X  t  X  p(t) . Probabilistic Data Management with Probabilistic Graphical Model ( PGM ). PGM has been used widely in modeling and reasoning about probabilistic data [3], and are mostly implemented as user views for hiding data details from users. 
Query processing over uncertain streams gains much attention recently, with the processing part of them. We aim at cleani ng uncertain streams by application context to improve data quality. [1] has made similar effort, and supports SQL queries on one virtual view generated by one HMM over uncertain data. We propose a framework for cleaning multiple parallelized streams with several PGMs , and the proposed method is considerably efficient in multi-core environment. P
GM consists of five components shown in Fig. 2 (a). Data Synchronization buffers new-arriving data with different timestamps produced by the application, and outputs synchronized streams. Each process pair of Stream Split &amp; Merge and Cleaning Rule the same person may appear across streams. We choose PersonID as divided attribute for stream reorganization and generate new streams for individual persons respec-tively, which can be processed by different threads simultaneously. If there are some or we execute them simultaneously. After all rules have been handled, Output Process generates output streams as user defined. We built the prototype of P 2 GM architecture in Java over the underlying database inside database. Each user cleaning algorithm is proposed as a java file implementing specific APIs, and can import both system-provided algorithms and algorithms pro-rules may be handled serially for the cases that dependencies exist, or be parallelized if no dependency. Parallelization inside each cleaning rule implementation requires independent partitions of original input streams. On the basis of P 2 GM, we implement a prototype of video surveillance, and draw example cleaning rules represented as PGM s from application context. Fig. 2 (b) shows system architecture. While Application-Context Data Cleaning ( ACDC ) is implemented within P 2 GM , it has the same structure of Fig. 2 (a). 
After processes of face identification and position computation, each person-like x-tuple s in video surveillance, composed of tuples with same t(t) and pos(t) , or tuples with same t(t) and pid(t) . A stream example is shown in Fig. 3 (b). 4.1 Probabilistic Graphical Model in Video Surveillance Probabilistic Graphical Model consists of two components:  X 
Node-edge graph. Nodes represent random variables to be modeled in application, while edges represent the relationships between them. Specially, parent-child di-rected edge in graph represents the dependency of corresponding variables.  X 
Conditional prob ability distribution function ( CPD ). CPD is the quantized descrip-tion of dependent variables X  relationship. Each CPD defines a disjoint probability distribution of a node x by the form  X  p(x|parent(x)) . Example 2. Human beings X  physical function restricts people X  X  moving speed. If ally, if the maximum speed of people X  X  motion is z metre per second,  X  can be set z/3 same way. Fig. 3 (b) demonstrates the corresponding PGM , where each node corre-of Pos T and Pos T+1 as well as Dist X  t+1 . Continuous with Example 1 , results of SLQ1 after cleaning is shown in Fig. 4 (a). The exception results with large distance disappear in the top confidence group. dataset from CAVIAR [5], which records are annotated manually and can be regarded as fact. While CAVIAR datasets are used for effectiveness experiments, we make a simulated dataset with similar schema for efficiency experiments as well. 
We initialize effectiveness experiment dataset by mixing CAVIAR datasets with noisy data, and assign artificial probabilities to the fact data. CAVIAR data occupies improves over 95% after cleaning. In Fig. 4 (b), when the variance of Normal Distri-approach, but also shows that when the parameter of probability distribution function (i.e. cleaning rule) varies within a finite range, cleaning process can be still reliable. 
We use three artificial uncertain streams to simulate high-volume streaming envi-ronment. Our approach is to divide streams into multiple independent sub-streams, and to process them by different threads respectively. While [1] holds similar purpose creases with Tuple Number of stream window for both execution models, while paral-lelized model takes about 1/3 time of serial execution (person number 3 ). Uncertain streams are generated widely in real-world applications, while most prob-abilities can be revised with application contex t restrictions. In this paper, we propose video surveillance application over P 2 GM , and demonstrate the quality and perform-ance of our approach by experimental results. 
