 We propose a root stemmer for the Modern Standard Arabic (MSA) language in an attempt to enhance the performance of Arabic Information Retrieval (AIR). The new Simple Ara-bic Stemmer (SAS) is based on the Quran morphology, since the Quran was a key source for the derivation of Arabic mor-phological rules. The stemmer is developed by decomposing all of the Quran words and studying their internal morpho-logical structure including the roots, the patterns, and the affixes employed in the generation process. We were able to construct a relatively small lexicon capable of finding the root for most of the MSA vocabulary. Using the TREC corpus and queries, we test our approach against two well-known root stemmers, Khoja and Sebawai. The results show that SAS gives an improvement in terms of precision. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing X  X ndexing methods, Linguistic pro-cessing; H.3.3 [ Information Storage and Retrieval ]: In-formation Search and Retrieval X  X lustering, Information fil-tering Quran, Arabic, Root, Stemmer, Information Retrieval
The Arabic language presents one of the most challenging morphologies in NLP. It descends from the Semitic family with many inflectional and derivational operations. What distinguishes the Semitic from the other languages is the mechanism by which surface words are generated. They follow a systematic derivational process that consists of the root (the smallest unit that can bear a meaning), vowels, and derivational affixes arranged in a precise sequence known as  X  Corresponding Author: mafgarni@gmail.com
During the past two decades, the Arabic language has re-ceived more attention from the scientific community, and two root stemmers have emerged as a result: Khoja and Se-bawai [9, 6]. Although there are several recorded attempts to find the root of an Arabic word in the past, Khoja and Sebawai are popular because they have been made avail-able and deployed in Arabic Information Retrieval (AIR) research [1, 2, 10]. Table 1 gives a numerical comparison of the lexical contents for the two stemmers, along with the new SAS method proposed here.

The Khoja stemmer is a rule-based morphological anal-yser that attempts to find the root by matching the word against a list of 46 patterns. The stemmer keeps stripping off prefixes and suffixes until the remaining part matches either a pattern or a root from the lexicon. If a pattern is found, the root is produced by extracting the letters in the stem corresponding to the root X  X  radicals in the pattern template. As a final step, the root is checked to ensure its correctness. Khoja X  X  lexicon is composed of 4,748 roots, 46 patterns, 16 prefixes and 28 suffixes. The number of patterns is consid-ered small compared to the actual number of patterns in the Arabic language [15]. Sebawai on the other hand is a statis-tical morphological analyser which was trained on a list of 279,606 Arabic words in order to learn the prefix-stem-suffix combinations. The training list contained 270,000 words from the TREC Arabic corpus and 9,606 words from a classi-cal Arabic collection called ZAD [6, 8]. The words were then segmented using the Xerox Morphological Analyser into the prefix-stem-suffix templates [4]. Another module was then developed which takes in an Arabic word and returns its root and stem based on the probability that the morpho-logical units (prefix-stemTemplate-suffix) of this word have occurred in the training data.
The morphological content of the Quran is our focus since we are mainly concerned with the impact of morphology on AIR. The Quran is considered the first Arabic book ever written, and it has also provided linguists with the Arabic morphological rules, which were documented and taught as part of the Arabic Language Studies since then [3]. There-fore the decision was made to study this corpus more thor-oughly and try to develop an Arabic morphological anal-yser to enhance AIR performance. The resulting stemmer uses a relatively concise lexicon; that is, because it has more general rules, the lexicon can be smaller than those used by other systems, and yet covers the language well. Fig. 2 shows the methodology we employed in developing SAS. We had to decompose all of the Quran words into their morpho-logical units: the roots, the patterns, the prefixes and the suffixes.

For the prefixes and the suffixes, we utilised the SEQUITUR algorithm, which recognises repeated symbols in strings and substitute them to form what is called a rule [12]. We prerequisite step to finding the root, a pattern has to have an entry in the prefix-pattern-suffix table. In Arabic Bro-ken Plurals (BPs) Morphology, it is a rule that case-marking suffixes (An, At, wn, yn) cannot be attached to them, and only possessive pronouns (k, y, hm, etc.) are allowed to be appended to them on the surface. Furthermore, when the definiteness marker  X  X l X  ( X  X he X ) appears with a stem of this type, there should be no suffix of any type attached. Fig. 3 depicts how this can be enforced using the compatibility ta-ble. The words  X  X wAfl X  ( X  X aravans X ) and  X  X wAkh X  ( X  X ruits X )
Figure 3: Prefix-Pattern-Suffix Table Example. share the same pattern CwACiC, but with different roots,  X  X fl X  and  X  X kh X  respectively. The allowed surface forms are those that either have possessive pronouns with no definite-ness marker, or words with the definiteness marker, and its derivatives (bAl, fAl, kAl, wAl, ll, fbAl, fkAl, fll, wbAl, wkAl, wll), but with no suffixes.

SAS undertakes three main steps before producing the root of the word, as illustrated in Fig. 4. Consider the word llmuslimyn (plural.masculine.genitive) meaning ( X  X or the Muslims X ). SAS first attempts to decompose the word into all possible prefix-stem-suffix combinations and ll X  X uslim X  yn is one of them. It then analyses those templates to val-Table 3 shows that over-stemming appears to have the high-est percentage of errors for Khoja and Sebawai. This is ex-pected since prefixes and suffixes are stripped off blindly. SAS checks first for the legality of the prefixes and suffixes for a particular pattern before stemming them, which is why it has fewer over-stemming errors. SAS obviously needs a lexicon expansion to include more legal prefix-pattern-suffix combinations in order to overcome the under-stemming prob-lem. Out-of-lexicon errors for SAS indicate that the lexicon does not contain the roots because there was no case found where the pattern was not recognised. For Khoja, out-of-lexicon errors point to the fact there are patterns that are missing and need to be added to the lexicon. Because the nominal pattern CACwC does not exist in the lexicon, the word  X  X Anwn X  ( X  X aw X ) is not stemmed correctly to produce the root  X  X nn X . Sebawai also needs the addition of more patterns and prefix-suffix combinations to its lexicon.
Fig. 6 shows the 11-point average precision for the four indices: no stemming, and the roots generated using SAS, Khoja, and Sebawai respectively. SAS performs better than the other two stemmers, giving higher precision at all recall points except for the 0% recall. Also, above 20% recall, Sebawai is essentially the same as Khoja while SAS produces better precisions for the remaining recall points. Table 4 shows the mean average precisions for the three stemmers compared to no stemming.
