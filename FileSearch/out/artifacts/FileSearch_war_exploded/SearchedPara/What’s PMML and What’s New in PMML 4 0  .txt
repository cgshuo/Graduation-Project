 The Predictive Model Markup Language (PMML) data mining standard has arguably become one of the most widely adopted data mining standards in use today. Two years in the making, the latest release of PMML contains several new features and many enhancements to existing ones. This paper provides a primer on the PMML standard and its applications along with a description of the new features in PMML 4.0 which was released in May 2009. H.4 [ Database Management ]: Database Applications  X  Data Mining Data Mining, Business Intelligence, Predictive Analysis, Knowledge Discovery Data Mining, PMML, Database, Business Intelligence The Predictive Model Markup Language (PMML) is one of the industry X  X  most widely supported standards for the representation and exchange of data mining models. While other standards exist, such as the Java Data Mining API [1] or Microsoft X  X  OLEDB for Data Mining [2], PMML has features that make it a compelling solution for many organizations: As the lingua franca of the data mining world, PMML has become an enabler of predictive applications that span across different systems and technologies, even different constituencies. With PMML, it X  X  possible to take, say, a credit risk predictive model created using a data mining workbench and reliably deploy that model to a business intelligence application from a different vendor. That same model could be deployed to other systems, perhaps used to ge nerate scores in real-time within a database application or within a software-as-a-service cloud computing application. PMML can even be used to document the internal workings of the model so that government regulators can be assured that its credit risk predictions don X  X  discriminate inappropriately (e.g., on the basis of ethnicity or religious affiliation). PMML can meet these needs because of its breadth in model support, its depth in useful features and universality across vendors and applications. Complete details about the standard can be found on the website of the consortium that controls the PMML standard, the Data Mining Group [3]. This paper discusses that newest changes available in the latest version of the standard, PMML 4.0, released in MAY 2009. But before discussing what X  X  new in PMML 4.0, it X  X  useful to describe the workings of the standard and its application. PMML is an XML-based standard and therefore its structure is described by its XML Schema Definition (XSD) [3]. Put simply, PMML has this general structure: These elements are common to all types of models. The first four elements apply to all models described by the PMML document: Next is the Model itself. Currently, the standard supports just one model element per PMML. This model element describes a specific data mining algorithm. These are the currently supported types of model types, including their model specific features: Beyond these model-specific features, each model can contain these common elements: These elements are common to all model types, provide the same functionality independent of the type of model and describe the details about a particular model: The structure of a PMML document is a close parallel to the structure one would expect from a predictive model. But there are other data mining features that are supported within this structure. While some of these capabilities can be considered advanced or atypical, they become essential if the standard is to have the depth of features necessary to be applicable to the widest variety of predictive applications. Transformations allow data to be converted from one meaning to another. Operations like this are common in predictive models since the underlying algorithms often depend on data having meeting certain characteristics. As described above, global transformations which apply to the entire PMML definition are contained in the Transformation Dictionary element. And transformations that are applicable only with the scope of a particular model or sub-model are contained in the Local Transformations element. But transforms have also been included in certain model specific elements which, by their nature, involve manipulation of data values. A good example is the ClusteringField elements. In clustering, items grouped together in the same cluster are supposed to have maximal similarity to each other over those items in other clusters. Imagine push-pins on a wall map; pins that are close to each other form a cluster. Hence, there X  X  usually concept of  X  X istance X  in such models. While our wall map example was two dimensional, clustering models usually have many more dimensions. For the clustering algorithm to work properly, these dimensions have to be on similar scales. Consider using these four variables in a clustering model: One would want to normalize all of these to the same scale; otherwise income (with values ranging orders of magnitude larger than the other variables) will tend to dominate the result of the clustering algorithm. Usually, a scale of 0 to 1 is used and these four data fields would be transformed in this way: The transformation of Age and Income are normalizations of continuous values and PMML contains a NormContinuous element for this type of transformation. The tran sform of categorical variables like gender and marital status is simple and PMML contains a NormDiscrete element to do this. Note it would take three NormDiscrete operations to properly represent our Marital Status variable and the end result is a clustering model that uses six dimensions, not four, to group items into clusters. All six dimensions are on the same 0 to 1 scale so no variable will dominate the analysis. In addition to NormContinuous and NormDiscrete, PMML contains several other transformations: Another common type of data manipulation is handling special cases that can occur in real world data. Predictive models depend on variables that are well-behaved and consistent. A model is only as good as the data used to build it. To avoid Garbage-in/Garbage-out, models not only need to distinguish valid values, they need to gracefully process values that are invalid. In fact , sometimes these exceptional values have significant predictive power. Recent PMML releases have included many data preparation features and enhancements. The can generally be grouped into three areas: All three areas require that such values be identified and handled accordingly. Missing values are a common occurrence in data. Survey responders may decline to answer a question, some products may not get sold in a given place at a given time and data isn X  X  always collected properly. While it may seem counter-intuitive, data is often missing for a reason and that reason can have predictive power. For example, declining to provide one X  X  age on a questionnaire may say a lot about a person X  X  tendency to use certain products or services. PMML allows models to specify what precisely is a missing value. Beyond the trivial null value, PMML allows particular values to be treated as missing. For instance, a numeric field may encode -999 to indicate that a missing record. Once a missing value is identified, the model needs to know what to do with it. PMML provide missing value handling within many key elements, including data fields, logical expressions and transformations. Missing values can be ignored, imputed with a constant or a data dependent value (mean, mode, median, etc.) or have another variable act as a surrogate. Values that aren X  X  missing aren X  X  always valid. A person can X  X  have a negative age, US standard Zip Codes are five digits, someone entered a bogus product code. PMML allows data to be specified as valid or invalid. Invalid values can cause results to be properly flagged as invalid . Or, invalid values can be treated as missing values which are subject to the missing value handling protocols. Finally, values can have validity but lie beyond the range tolerated by the model. Good models can make predictions based on data that it has seen in the past. But models can be su spect when the applied to data that wasn X  X  available when the model was developed. For example, while cutting a product X  X  cost in half may double the demand, one can X  X  assume that a ten-fold decrease will increase sales ten times if there aren X  X  that many buyers in the market. So, models can specify when values exceed key ranges. And when these outliers are detected, they can be forced to the near est valid extreme, or be subject to missing value handling protocols. Data values often live within larger structures. A location can be in a city or a country, a product can be part of a category within a product line and a transaction takes place on a certain day in a certain month in a certain year. PMML allows these structures to be defined within its models. While PMML is about predictive modeling, data mining algorithms often generate useful descriptive statistics as by-products. This information is very useful to analysts and model developers since understanding the behavior of variables is often the key to building good predictive models. PMML supports a wide range of univariate statistics, including: Data mining models differ from basic functions or formulae since a model usually doesn X  X  provide just one output. We most often thing of models as generating scores, such as if a customer is a good credit risk or if a prospect will respond to an offer. But often, it X  X  more importa nt to know the probability or confidence in that prediction so one can say how likely is a customer to default or respond. In order to give model producers the flexibility to define the form and format of results and model consumers a reliable and consistent way to produce those results, PMML contains output and target elements. Outputs define the different types of results that can be generated by the model. This includes things like names and data types, as well as rules for selecting specific result features. While not all types of models support all outputs, PMML provides for a wide variety of them, including: PMML also supports mechanisms for defining the targets of a predictive mode l. Since these can come from various elements in different types of models, the Target elements provide a consistent way of referencing target across all model types. One of the main objectives for PMML is to facilitate the exchange of models from one environment to another. Exchanging predictive models between different products or environments requires a common understanding of the PMML specification. This understanding can be less than perfect, especially since PMML contains over 800 language elements. By leverages the mutual reliance producers and consumers have on the PMML: Producers need to generate PMML that is valid and consumers need to deploy models accurately [4]. The DMG has provided several resources to assist in this area via its web site [3]: PMML also includes the ability for model producer to extend their PMML models with additional information not defined in the standard. This powerful mechanism allows application specific information to be included in the model, such as formatting specification and references to keys or object IDs. Ideally, extensions should not be required for another application to score the model. But if proprietary algorithms require non-standard features, extensions allow PMML to be used within these vendor-specific environments. As evidenced by a recen t survey which shows a three-fold increase in the use of PMML to deploy models [5], more models than ever before are being deployed using PMML. This is due in large part to the increasing number of applications that support PMML. These include IBM  X  , KNIME  X  , KXEN  X  , MicroStrategy  X  , R / Rattle  X  , Salford Systems  X  , SAS  X  , SPSS  X  and Zementis  X  . For a complete list, please see the DMG web site [3]. Since PMML 1.0 was released in August 1999, the DMG has released seven major updates [3]: The latest release is PMML 4.0 which includes these enhancements: Over the past decade, PMML has evolved to become the industry X  X  leading standard for predictive model interoperability. Its rich set of features and robust implementation allow for an increasingly wider specification. As a result, more vendors are support PMML and, more importantly, more customers are using PMML to deploy predictive analytics beyond the silo of analysts and statisticians that build them. PMML 4.0 adds many new features that will increase its utility and applicability. With the continued support of the leading business intelligence and analytical providers, it X  X  eas y to predict that adoption and use of PMML will grow more in the future. The author would like to thank all the colleagues in the industry who commit their valuable time and energy crafting and promoting standards for data mining. Though too numerous to name here, it has been a privilege working with and learning from the brilliant people who, in addition to their  X  X ay jobs, X  are able to lend their expertise to these collaborations. [1] JSR 73: Data Mining API. See [2] OLE DB for Data Mining. See [3] Data Mining Group Website. [4] R. Pechter. Conformance Standard for the [5] KDNuggets 2009 n9, item 1, Poll: Data mining 
