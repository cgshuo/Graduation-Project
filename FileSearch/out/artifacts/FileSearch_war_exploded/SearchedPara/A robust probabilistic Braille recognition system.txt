 ORIGINAL PAPER M. Yousefi  X  M. Famouri  X  B. Nasihatkon  X  Z. Azimifar  X  P. Fieguth Abstract As a structured document, Braille is the most common means of reading and study for visually handi-capped people. The need for converting Braille documents into a computer-readable format has motivated research into the implementation of Braille recognition systems. The main theme of this research is to propose robust probabilistic approaches to different steps of Braille Recognition. The method is meant to be very general in terms of being inde-pendent of those parameters of the Braille document such as skewness, scale, and spacing of the page, lines, and char-acters. For a given Braille document, a statistical method is proposed for estimating the scaling, spacing, and skewness parameters, whereby the detected dots of the Braille docu-ment are modeled using a parameterized probability density function. Skewness, scaling, and line spacing are estimated as a solution of a maximum-likelihood (ML) problem, which is solved using expectation maximization. Based on those parameters, each line of the Braille document is extracted, and each of three rows of individual lines is separated based independent automatic document gridding procedure is pro-posed for dot localization and character detection based on a hidden Markov model.
 Keywords Structured document  X  Braille  X  Line spacing  X  Scale independence  X  Hidden Markov Model  X  Expectation maximization 1 Introduction Braille is the most popular convention of reading and writ-ing among visually impaired people. Like other documents, Braille documents need to be converted to a computer-readable form so that they can take advantage of the ben-efits of digital documents simple maintenance, duplication, translation, text-to-speech conversion, etc.

A large body of research has been devoted to Braille pro-cessing, loosely categorized into five domains:  X  Paper type and the Braille sheet quality, such as an inte- X  Electrical displays, such as methods designed for read- X  Mechanical devices or sensors to read Braille pages [ 7 ];  X  Document-to-Braille conversion, both for word- X  Braille recognition, extracting Braille dots and convert-
The last group, with Braille-to-text recognition, is the topic of this paper. Some research [ 11  X  13 ] is based on the use of specific, specialized equipment in which the image is illuminated from a special direction and then captured by a camera.
 More recent approaches are based on scanned images. Ritchings et al. [ 14 ] proposed a method addressing both sin-gle and two-sided Braille documents. However, besides some assumptions regarding document scaling, no treatment for skewness was mentioned. Antonacopoulos et al. [ 15 ] carried out a more sophisticated work, solving the scaling problem using a set of heuristic approaches (like histograms) and solv-ing the skewness problem using the Hough transform .Tai et al. [ 16 ] proposed to take advantages of the Radon Trans-form to solve the skewness problem. They also used a set of histogram-based heuristics to detect each row and column of the documents.

Since the histogram of a Braille image is expected to have three modes (recto, verso and background) , Al-Saleh an appropriate threshold to segment the document and then used a grid-based algorithm for detecting recto and verso dots. They did not, however, consider any document skew-ness.

It is worth noting that Braille documents differ from other regularly structured documents. In particular, Braille belongs to the class of simple and well-structured documents, mak-ing it possible to apply more general and high-performance methodsspecializedtotheBrailleenvironment.Basedonthis fact, this paper presents an efficient and general method for the entire Braille recognition process. The method is general in the sense that it does not make prior assumptions about such Braille document parameters as skewness, scale and spacing of the page, lines and characters. Such parameters are estimated by means of fitting some parametric statisti-cal models. The models also consider the effect of noise and outliers on the document.

This article is comprised of two major parts. The first part, described in Sect. 2 , is line detection, building upon the authors X  previous work [ 18 ], but generalizing that work by adding a noise model in the estimation of line spacing and skewness parameters. The second part, described in Sect. 3 , develops a hidden Markov model (HMM) for the detection of line and character tests are undertaken in the respective sec-tions; however, in Sect. 4 a comprehensive test is undertaken on longer documents, with the paper concluded in Sect. 5 . 2 Line detection Braille documents include a number of lines, each compris-ing of a series of characters. As Fig. 1 shows, each character consists of 6 points arranged in a 3  X  2 mask. Each point can be either on (raised) or off (flat). Some examples of a Braille character are illustrated in Fig. 2 . 2.1 Preprocessing Here, without lose of generality, we study one-sided Braille documents. First, a thresholding algorithm is applied to the image. The black pixels appearing after thresholding are either shadows of the Braille dots or undesired artifacts. Afterward, a connected component algorithm is run on the thresholded image, such that each connected component rep-resents a potential Braille dot. Let us denote these compo-connected component (averaged location of pixels in the con-nected component) by x i =[ x i y i ] T and the collection of all centers by X ={ x i | 1  X  i  X  N } , where N shows the total number of connected components. Note that each component C i represents either a dot or noise. 2.2 Modeling without noise and skewness assumption Let us assume that the document is artifact free and ignore document skewness at this point to focus on modeling and estimating document scale and line-spacing parameters. The scaling properties of the document are modeled using two parameters b and  X  . As shown in Fig. 3 , parameter b is the the page and  X  shows the distance between two consecutive lines.
In this research, training data are assumed to be samples drawn from a probability density function (PDF). Since no skewness is assumed, projections of the data belonging to a single Braille line to the vertical axis can be modeled by a trimodal distribution, e.g. , a mixture of three Gaussians each accounting for a single row of the Braille line (see Fig. 4 a). However, to avoid some implementation issues, including model complexityandslow convergence, all threerows of the course, it seems to work unexpectedly well since the Braille alphabets have considerable bias toward using the upper two rows for must letter except for punctuation marks; therefore, the Gaussian would have a tail on the third row. However, the experiments show that sufficient accuracy is obtained using a Gaussian, Thus, the vertical coordinates of all connected ples drawn from a one-dimensional Gaussian mixture model (GMM): p ( y ) = 1 where line count l is as depicted in Fig. 3 , and L counts the total number of lines in the document. Note that all Gaussian functions of this mixture share a common standard deviation  X  and magnitude 1 L . 2.3 Modeling without noise but with skewness assumption Adding the skewness in the above formulation is straightfor-ward. Suppose the document is rotated by an angle  X  . Then, the points x i can be considered as unskewed image points z rotated by  X  . Therefore, we have z = cos Thus, the vertical (second) element of the unskewed point z can be obtained by ( z ) where w 1 and w 2 are elements of w . Now, vertical elements of unskewed points can be considered as samples from p y ( dimensional distribution g ( x , y ) = which, accounting for page dimensions, becomes p ( x ) = p where B l and B r show page X  X  left and right borders, respec-tively. Thus, p x ( x ) is a Gaussian mixture (across rows) if projected on axis [ w 1 ,w 2 ] T , and uniform (along rows) if lines ( L = 5) is depicted in Fig. 5 . 2.4 Modeling with noise and skewness assumption Some of the connected components in the document will clearly not belong to the Braille dots, stemming from any number of noise or other undesired artifacts. Because of the many factors that can result in an artifact, no exact struc-ture or model can be presumed. On the contrary, Braille dots have a well-defined structure, allowing a good discrimination between Braille dots and other artifacts. Here, three features are extracted from each connected component:  X  The sample covariance matrix and eigendecomposition  X  The second feature is max ( X   X  The third feature is extracted from the original grayscale
Notethatthefeaturesusedherearenotnecessarilytheonly features or the best features for this purpose and other fea-tures should be used, e.g., for generalization of the method to deal with the two-sided Braille documents. We employ these features to train a classifier. It should be noted that nected component which is an estimation of the probability of that connected component to be a Braille dot and not a noise. To this end, we need a document or a set of docu-ments whose connected components are labeled as Braille dot or noise to serve as our training data. One of the docu-ments was selected randomly and software found all of its connected components. Then, a person labeled all of con-nected components that belong to the Braille document. In the provision of the training data, some considerations should be taken into account according to the nature of the features we are using. For example, in our implementation, since the features, specifically the third feature, depend on the direc-tionofthelightandthereforethescanningdevice,thetraining documents should be captured from the same type of scanner.
A Bayesian classifier is implemented to accomplish this goal. Let C be a typical connected component and F be the feature vector extracted from it. Here, both the class con-ditional distributions p ( F | C  X  dot ) and p ( F | C  X  noise are assumed to be Gaussian. This can be problematic for the later (noise) distribution since they do not possess a determined structure. Therefore, in our training docu-ment, different kinds of artifacts should be examined. If needed, some of these artifacts can be added manually. Since we have no idea about the amount of noise in the document, the prior probability of each component is cho-sen to be P ( C  X  dot ) = P ( C  X  noise ) = 1 2 .For a new Braille document and for each connected compo-nent (Say C i ), the trained Bayesian classifier considers a probability  X  p (
F i | C i  X  dot ) P ( C i  X  dot ) + p ( F i | C i  X  noise As noted before, no discrimination between noise and Braille dots is made at this stage. Instead, line detec-tion is applied using all the connected components and only the probability  X  i is incorporated in our formula-tions.

To estimate the document parameters introduced in ( 4 ), we consider the locations of the centers of connected com-ponent to be samples drawn from an special distribution. If the connected component belongs to Braille dots, then its center is assumed a sample drawn from the distribution of dots which was introduced in ( 5 ): p ( x ter. If the connected component is a noise, since the noise can occur everywhere in the document, and our only knowledge that the noise is uniformly distributed among the page: p ( x where S is the area of the page. Here, for each connected component C i , in addition to the location of its center x we have another quantity  X  i that shows the probability of the connected component to be a Braille dot. Therefore, the overall distribution for a connected component is obtained as: p x , X  ( x i , X  i ) =  X  i p x ( x i | C i  X  dot ) 2.5 Model parameter estimation To simplify the parameter estimation, at this point, it is assumed that the number of lines L is given. Therefore, the problem reduces to estimation of the parameters ( b , X , w using the probabilistic model ( 9 ). A method to estimate the number of lines is given in Sect. 2.6 . Here, sample data are assumed to be independent and the problem is solved by maximizing the log-likelihood function. But before the cal-culating the log-likelihood, we need to perform some sim-plifications. First of all, notice that if the density function , since the sample never lies outside the page. Here, we make a further assumption that no sample x i is evaluated width of the page. Notice that these are only approxima-tions made to simplify our formulations. It is possible that sample belonging to noise be evaluated to 0 in ( 7 ). Even our selection of the value of B r  X  B l does not guarantee that no sample evaluates to zero in ( 7 ). However, we empiri-cally observed that these approximations do not have a major impact on the results of our line detection algorithm. Accord-ing to these assumptions, the log-likelihood function can be written as: log p ( x 1 , X  1 , x 2 , X  2 ,..., x N , X  N ) Differentiating from the above likelihood function with respect to its parameters and making them equal to zero leads to a set of complex nonlinear equations, which are hard to solve. Thus, here, the iterative method EM is applied to maximize the likelihood [ 19 , 20 ]. In this case, latent (hidden) variables are = ( X  1 , X  2 ,..., X  N ) , where  X  number of Braille lines (0 , 1 ,..., L  X  1) to which sample x i belongs. If sample x i belongs to noise, then Following, we describe the steps of the EM algorithm: 2.5.1 Expectation step In the expectation step, we should find the probability dis-tribution of each  X  i given our observations and the current (at time t ) estimations of the parameters:  X  ( t ) ={ b ( w P where P ( X  and
P ( x i |  X  i = l ,  X  ) Note that in the formulation of ( 11 ), we have made use of the conditional independence of x i and  X  i given  X  i (if we know  X  if  X  2.5.2 Maximization step mation of the parameters  X  ( t + 1 ) ={ b ( t + 1 ) , X  ( t  X   X  where Q is obtained by:
Q ( X ,  X  ( t ) ) eters  X  ={ b , X , w , X  } and thus, have no effect to the opti-mization problem.
 with respect to each of the parameters  X  ={ b , X , w , X  } should be calculated and made equal to zero:  X   X  b =  X   X  X  Q =
To find the optimal value for parameter w =[ w 1 ,w 2 ] T we should consider the constraint: w 2 + w 2 2 = w T w = 1 . (18) Therefore, the Lagrange multiplier  X  should be applied in differentiation:  X   X   X  and the sixth equation is obtained by differentiating with respect to  X  :  X   X  X  Q  X  2 = Equations ( 16 ) and ( 17 ) can be combined as: A where matrices A and B are defined as: A = B Similarly, ( 19 ) can be written in matrix form: Cw  X  B where B is as defined above and C = N i = 1 x i x i T . Consid-ering ( 21 ) and ( 22 ) together, we have: C  X  BA  X  1 B T w =  X  w (23) Interestingly, ( 23 ) is simply an eigenvalue problem and w can be obtained by solving it. Although solving the eigenvalue problem results in two answers for w , these two eigenvectors are perpendicular to each other. Hence, we can choose one of them assuming skewness of the document does not exceed and  X  are calculated by solving ( 21 ), and then, parameter can be found using ( 20 ). 2.6 Line detection results Once the parameters  X  ={ b , X , w , X  } are estimated, skew-ness of the document is corrected and individual lines can be separated. Figures 6 represents some results of the proposed algorithm. Figure 6 a shows fragments of the input image. This image was created by synthetically rotating a regular Braille document. Although the rotation of the documents with software does not seem standard for evaluation and it is really not standard, the results show the robustness of our system against slight changes in the scanner X  X  angle of illu-mination.

In Fig. 6 c for the input image, skewness is corrected and lines are separated using the parameters estimated by the proposed algorithm (horizontal lines are in the form the parameters are naively selected as: b = 0,  X  = ( Image Height )/ L ,  X  =  X  4 , w 1 = 0, and w 2 = 1.
Intheproposedapproach, number of lines of thedocument ( L ) is assumed to be known. The problem can be solved by executing the parameter estimation algorithm with different possible values of L and selecting that L , which maximizes the log-likelihood. In Fig. 7 the log-likelihood value is plot-ted for L = 1 , 2 ,..., 40 after applying the algorithm to a Braille document with 22 lines. Obviously, an outstanding peak is evident at the true value of L . Therefore, the actual number of lines can be estimated efficiently using a good initial estimation of L and testing a range of values around it. An important observation here is that we can have a fairly exact estimation of the skewness even by presuming a non-exact value for the number of lines. Note that knowing the skewness parameters can considerably improve our initial estimation of the number of lines. 2.7 Noise removal In Sect. 2.4 , we derived a Bayesian classifier to give us the posterior probability of each connected component as being a Braille dot or noise given its extracted features. At this point, however, we have extra information that is the loca-tion of each connected component along with the distribu-tion of the connected components. Therefore, its is better to separate noise component from the Braille dots using P (
C i  X  dot | F i , x i , X  i ,  X  ) rather than P ( C i  X  dot probability can be calculated Eq. (24).
We simply remove each connected component C i whose way the location of each connected component is also taken into account for noise detection.
 3 Character detection 3.1 Row separation In this part, it is assumed that the skewness and the true num-ber of lines are estimated; this estimation can be done by any other algorithms like Radon transform and Hough transform; of course, the results of Radon transform and Hough trans-form are not accurate enough. These methods have about 2  X 3  X  error in skewness estimation which is not satisfying for the task of finding the true number of lines. Since each Braille character is arranged as a 3  X  2 matrix (see Fig. 1 )of dots, we can say that each Braille line is comprised of three rows. Assume that the skewness is corrected and lines are separated in a typical Braille document. Now, if the Braille projected dots of each single line of the Braille document is in fact something like a mixture of three Gaussians, each rep-resenting one row of that Braille line. In the previous stage, however, these projections is modeled as a single Gaussian for each line to avoid model complexity and consecutively a slower convergence and trapping in local minima.

To separate the three rows of each line, we need to estimate the vertical distance between the rows. To do this, first, the line. Let us denote the average value of the standard devia-tion of Braille lines by  X   X  and the vertical distance between two rows of a single Braille line by  X  . As mentioned before, the vertical projection of each Braille line can be represented by a mixture of three Gaussians each with a relatively small variance. The distance between the center of two consecutive Gaussians is  X  . Here, to simplify the process, an approxima-tion is used and it is assumed that the vertical projection of each line is represented by a mixture of three Dirac delta l , where  X  l = b + l  X  is the center of the line number l .The standard deviation of the above mixture is this quantity to  X   X  yields  X  = centers of the lines  X  l , the rows of each Braille line can be easily separated. 3.2 Estimating character parameters using HMM By now, the vertical parameters of the Braille document are calculated. These parameters are the bias of the center of the first line from the top of the page ( b ), the distance between lines of the document (  X  ), and the distance between the rows of each line (  X  ). To recognize Braille characters, we need to have the horizontal Braille parameters, as well. These parameters are the horizontal offset where the first character in a line stands (denoted by d 0 here), the distance between two consecutive characters ( ), and the distance between the two columns of a single character (  X  ). These parameters are shown in Fig. 8 . Here, a first-order Hidden Markov Model (HMM) is used to estimate these parameters.

We use the term potential dot to refer to possible dots in simply referred as dots . After separating rows of every line of the document, for each row, we have a list of the horizontal locations of its dots. Let us denote the horizontal location of an arbitrary row by x t . These are our observations . Although our observation sequences have a spatial nature, here, they are indexed by t to make our formulations consistent with those commonly used in HMMs. Further, we say the obser-vation at time t to refer to the t th observation for each row. Our train data, therefore, are comprised of 3 L sequences of observations, where L is the number of Braille lines.
At each time, in addition to an observation, we have a hid-den state s r t that shows the number of potential dot to which x t belongs (for an arbitrary row it is shown by s t ). There-column of the i th character of the line, then s r t is 2 i (2 i ). Our task is to estimate the aforementioned horizontal Braille parameters and the hidden states from the sequences of observations.

To build the model, here, an approximation is made which is to assume that the existence of a real dot in each potential dot position of the document is independent of the existence of other dots in other positions. It is also assumed that the probability of each potential dot being at state on is 1 2 stems from the fact that we make no assumption about the type of the Braille document and have to choose the dis-tribution with maximum entropy. Of course, more accurate probabilities can be obtained for certain classes of Braille documents ( e.g. , document of a certain language) by apply-ing different kinds of statistical analyses.

With aforementioned assumptions, we show that our model represents a time-invariant first-order Hidden Mar-In a certain row, given the fact that the dot at time t  X  to belong to i th potential dot is: P (
S t = i | S t  X  1 = j ) = Notethatfor i &lt; j ,itisequaltotheprobabilityofallpotential is on . With this argument, it is obvious that the value of s is conditionally independent of states { s t | t &lt; t  X  homogeneous (time-invariant). Furthermore, the initial state probability is: P ( s 1 = i ) = Ideally, each observation is the horizontal location of the potential dot to which the Braille dot belongs. However, in practice, each observation is supposed to have a small devi-ation from its true position. Here, this deviation is shown by a random Gaussian error with a variance of  X  . Note that, is also an unknown parameter of our model, which is deter-mined in the training process. Hence, the observation distri-bution is: p ( x t | s t = i ) = N ( x t ; d ( i ),  X  ) (27) where d ( i ) is the horizontal location of the i th potential dot and is easily obtained as d ( i ) = d 0 + a i + b i  X  a our assumptions, each observation is conditionally indepen-dent of other states and observations given their correspond-ing state values. All these facts show that our model rep-resents a time-invariant first-order Hidden Markov process. By training this model with our sequences of observations as train data, we can obtain our desired parameters. Here, again, the expectation-maximization algorithm is used to train the model. 3.2.1 Making the Q function Let us denote X r and S r the observation sequence and the state sequence of the row r and by X t and S t the total set of observations and the total set of states, respectively. The model parameters are shown by  X  ={ d 0 , X ,, X  } , and the parameters at the previous stage of the algorithm are denoted by  X  .The Q function can then be obtained as: Q (  X  |  X  ) = E Representing the sequence of observations and the sequence of states of a typical row by X and S , the term inside the summation above is written in Eq. ( 29 ).
 E = E = E = E = = = = = = where c 1 and c 2 are constants with respect to our parameters. Substituting ( 29 )into( 28 )givesEq.( 30 ): Q (  X  |  X  ) = respect to the parameters. 3.2.2 Expectation step (This section can be eliminated since the derivations are common in all types of HMMs) In the expectation step, P can be obtained independently for each row, here, for sim-plicity, it is obtained for a typical row and the super index r is dropped from the next formulations: P ( s t = i | X ,  X  ) = Now, P ( s t = i , X |  X  ) can be obtained Eq. ( 32 ): where P ( x 1 ,..., x t , s t = k |  X  ) and p ( x t + 1 ,..., x T | calculated in Eqs. ( 33 ) and ( 34 ). 3.2.3 Maximization step respect to each of the parameters and set it equal P ( s t = i , X |  X  ) = P ( s t = i , x 1 ,..., x T |  X  ) P ( x 1 ,..., x t , s t = i |  X  ) = P ( x 1 ,..., x t  X  1 , s p ( x t + 1 ,..., x T | s t = i ,  X  ) to zero to obtain its maximum value. Differentiating with respect to d 0 , and  X  , respectively, yield: that form a set of linear equations solution of which gives d  X  and . Also, by differentiating w.r.t  X  , we get:
And then, we can calculate  X  by: 3.2.4 Initial parameters Choosing a good value for the parameters is crucial for the convergence of the algorithm. To obtain d 0 , first, we choose values over r is chosen as the initial value of  X  . Similarly, the initial value of is chosen as the median of the values d 2 over r where d 4 Experimental results Our algorithm consists of two main parts; thus, we present the results in two separate steps. At first step, we run first part of our algorithms on two types of documents contain-ing Braille documents and normal documents. We applied first part of our algorithms to detect skewness of each doc-ument. Although we proposed this algorithm for Braille (as a well-structured document), it is observed that it performs very accurately on normal text documents (see Fig. 9 ). In our experiments, we used 10 normal documents and 62 Braille documents with  X  25  X   X 25  X  of rotation (  X  25  X  ,  X  15  X  and 25  X  ) with different page scales. These Braille documents are scanned by the HP G4010 scanner with resolution 72 dpi and rotated by image rotation algorithm. For all of these doc-uments, our algorithm found exact number of lines and the correct skewness. Of course, we know the true degree of rota-tion as the rotation is performed by software. We assume that less than one degree errors are acceptable since, in this case, the dots of each line are assigned to correct row. Next, we applied second part of our algorithm to the results of Braille documents achieved in the previous step to detect their line that, in 95% of documents, the parameters are calculated correctly, and we can convert any Braille character to its cor-responding character in a regular text. These experiments indicate superiority of the proposed in comparison with the existing Braille character detectors, among which the best result was reported to be 87% accuracy [ 10 ]. Also, a noisy document is used to show how the proposed method works on noisy documents. Because the scanned documents did not contain any clear noise, a document corrupted by the ink spots and salt and pepper noises was added to artificially cre-ate a noisy document. Also, we added some dirty spots to the document. Figure 10 shows this noisy document and the obtained estimations. The artificial noise here is only used to show the robustness of the method against certain types of noise and artifacts. However, it is not necessarily repre-sentative of the typical noise on Braille documents which is usually concentrated on the Braille lines due to finger smudg-ing during reading and also big blobs (comparable in size to the braille dots) in the cases that recycled paper is used. 5 Conclusion and further work A set of probabilistic approaches to robust recognition of the Braille documents are proposed. The detection process can parameters of the Braille document (namely bias of the first line from the top of the page, the vertical distance between the Braille lines and the vertical distance between the rows document. The detection algorithm was to fit a special prob-ability density function to the Braille data by maximizing the likelihood using the EM algorithm. To make the algorithm robust against undesired artifacts, a noise model was added to the formulations of the above density functions. The second stage was devoted to estimate the horizontal Braille parameters such as the horizontal bias of the begin-ning of each line from the left edge of the document, the distance between two consecutive Braille characters, and the distance between the two columns of each Braille charac-each of the three rows of all the Braille lines is extracted as sequences of data. These sequences were modeled as sam-ples drown from a first-order Hidden Markov process. The parameters were determined by training the HMM model using these sequences of data. These horizontal and vertical Braille parameters are adequate to detect all Braille charac-ters in a typical document.

It is worthwhile to notice that the well-structured nature of the Braille documents distinguishes it from many other cat-egories of documents. By considering this fact, here, it was sought to find a methods that is very general in making very few presumptions about the Braille document. For example, the method is designed to be scale free and robust against heuristic and ad hoc treatments as much as possible to obtain a general, purely probabilistic approach to Braille detection.
The algorithm is successfully executed on an ordinary per-sonal computer in a small amount of time. It is about six sec-onds to find all the connected components, after finding the connected components it takes about seven seconds to find the skewness and the number of lines and finally about 1 sec-ond to find the line parameters. These results are obtained by a two-processor system with 2.5-GHz frequency and 4-GB RAM. Also the algorithm is implemented by MATLAB. The approach may be generalized to treat two-sided Braille document. This is possible by modifying the classification phase of the current algorithm by classifying dots as side1, side2, and noise rather than dot and noise . References
