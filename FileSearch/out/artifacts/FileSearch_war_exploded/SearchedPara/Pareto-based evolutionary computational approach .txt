 1. Introduction equipped with sensors that can communicate and interconnect wirelessly with each other. These devices are characterized by a constrained battery, memory and processing power. Recently,
WSNs have found important application in industrial, military, medical, home, office, and pervasive computing domains ( Akyildiz et al., 2002; Romer and Mattern, 2004; Culler et al., 2004 ). Sensors are used for security and surveillance ( He et al., 2004 ), environ-ment and habitat monitoring ( Mainwaring et al., 2002 ), intrusion detection ( Zhang and Lee, 2000 ), etc. Smart sensors can be deployed on land, immersed underwater, mounted on vehicles or attached to bodies for data observation and statistics collection. such a distribution is not always optimal because it may lead to high node concentration in some areas. That is undesirable because it causes unnecessary energy loss in the network and may not even achieve full node connectivity ( Liu et al., 2006 ). If the terrain is known and the capability to control the initial positioning of sensor nodes exists, it is desirable to determinis-tically deploy sensor nodes and thus provide quality of service guarantees in terms of network coverage and connectivity. The placement problem is further complicated by obstacles because they obstruct sensors X  ability to sense and communicate. It then becomes necessary to place sensors to get around obstacles and still provide a connected coverage with low energy cost. This problem gives rise to many questions: How many sensors should be used? What should be the communication and sensing radii of the networked sensor nodes? Where should the sensors be positioned? Increasing coverage or connectivity may increase energy cost while reducing cost may break connectivity and/or reduce coverage. Thus, the WSN placement problem is inherently multiobjective. In literature, many multiobjective evolutionary algorithms have been used to successfully solve real-world multiobjective problems ( Knowles and Corne, 1999; Zitzler et al., 2002; Deb et al., 2002 ). This is due to the ability of an evolutionary algorithm to find multiple optimal solutions in a single simulation run ( Deb, 2001; Coello Coello et al., 2002; Jong, 2002 ).

Most evolutionary approaches presented for WSN placement use a single objective function with or without constraints ( Guo et al., 2004; Habib, 2007; Xu and Yao, 2006 ). Multiobjective algorithms for sensor placement have also been proposed: Jourdan and de Weck (2004) present a multiobjective approach for sensor placement to monitor a facility given a fixed maximum number of sensors; Al-Hmouz and Challa (2005) give a multi-objective algorithm for placing two cameras on a bridge to achieve two types of coverage: traffic monitoring and structural health monitoring; Jia et al. (2007) use an improved version of NSGA-II ( Deb et al., 2002 ) to activate minimum number of sensors in a densely deployed environment but does not consider k -connectivity or energy cost model. Furthermore, these algorithms employ fixed-length genome encoding and assume homogeneous nodes.

We want to solve the general WSN placement problem : given a target region or points of interest to be monitored, with or without obstacles, find WSN topologies that (1) maximize cover-age, (2) maximize the desired k -connectivity, and (3) minimize energy cost, such that the number of sensor nodes is not fixed and the maximum number of sensor nodes is not known a priori.
Since the number of nodes is not fixed and the maximum number of nodes is not known, we devise a flexible encoding scheme that allows networks to expand or contract when new nodes are added or old nodes are deleted. With this flexible-encoding scheme, a suggested approach to solve the general WSN placement problem would be to start with a population of random sized networks and introduce gene mutations that add and delete nodes and connections in a bid to find optimal networks. This is not feasible because first, the population may have networks with excess nodes and connections and many generations will be wasted in removing the extra structure. Second, this approach results in the problem of matching different topologies ( Radcliffe, 1993 ). For example, how to crossover a 5-node, 10-connection network with a 30-node, 100-connection network? We need a method to crossover different network topologies in the population in a meaningful way.

The idea of complexification and historical markings in NEAT ( Stanley and Miikkulainen, 2002, 2004 ) fits naturally into this situation. NEAT is a well-established neuroevolution method that evolves both the structure and weights of artificial neural networks (ANNs). NEAT begins with a population of small, simple ANNs and complexifies the topologies over generations, leading to increasingly sophisticated structures. It keeps track of gene innovations via historical markings. These markings are used in later generations to find which ANN is compatible with another ANN and also to line up genes during crossover.
 We integrated the complexification technique of NEAT with Pareto-dominance ( Fonseca and Fleming, 1995a ) and developed a multiobjective evolutionary algorithm to evolve WSN topologies that maximize coverage, maximize connectivity, and minimize energy cost. In the proposed algorithm, the population is initialized with minimal WSNs. Over generations, structural mutations result in the addition of new nodes, and hence new connections, and are recorded by marking new genes with a unique number. These historical markings are thus used to keep track of structure innovations, as per NEAT. As structure is added, the complexity level of search increases. The search is systematic: as generations move forward, the search starts from a lower dimension, and optimizes node characteristics before moving on to the next dimension and hence, complexity level. During reproduction, historical markings solve the problem of matching different topologies ( Radcliffe, 1993 ) by lining up genes of two networks to see how much genetic material they share, and by performing a crossover accordingly. Thus, historical markings help to measure two networks X  compatibility to mate. Similar networks are grouped into species using a compatibility metric . This grouping or speciation aids to protect structural innovation in the population and facilitates networks to compete within their own niches. Within species, Pareto-dominance helps rank the networks according to the different objectives and thus, approach optimal sets of solutions with good tradeoffs with respect to the objectives.

Thus, we present a flexible algorithm for sensor placement (FLEX) that considers coverage, connectivity and energy cost of variable (sensing and communication) radii sensors, and its flexible-length genomes make it easily adaptable to different
WSN placement scenarios. Case studies in this paper show FLEX X  X  versatility as a network placement solution for a large array of application-specific problems, e.g. point monitoring, area mon-itoring with and without obstacles, preferential surveillance, facility monitoring, clustered networks, etc.

The contributions of this paper are: (1) a flexible framework to address the layout/placement/positioning problem of wireless sensor nodes for small-to-medium-sized networks, for which sensing devices are assumed relatively costly and hence must be dispensed carefully; (2) a complexification-based evolutionary strategy that uses Pareto-dominance to optimize connectivity and energy cost of WSNs in addition to coverage; (3) a flexible-length genome encoding scheme for WSNs that eliminates the need to have prior knowledge of maximum network size.

The article is organized as follows: Section 2 reviews previous work in sensor networks, focusing on a variety of techniques and applications involving network coverage and connectivity. Section 3 delineates the system requirements and constraints in FLEX X  X  design. A detailed description of FLEX appears in Section 4.
Sections 5 and 6 test and evaluate FLEX X  X  effectiveness in solving the sensor placement problem. Finally, Section 7 summarizes the findings from developing and applying FLEX. 2. Related work
Connectivity and coverage problems in sensor networks are active research topics, usually studied with graph theoretic properties or integral geometry. Simplifying assumptions often include homogeneity of nodes, unit disk sensing models, equivalent sensing and communication radii, random deploy-ment, etc. ( Cardei and Wu, 2006; Meguerdichian et al., 2001;
Marengoni et al., 2000; Wan et al., 2001; Wu and Li, 2001; Alzoubi et al., 2002; Chen and Liestman, 2002; Cardei et al., 2005; Yan et al., 2003; Carle and Simplot-Ryl, 2004; Kar and Banerjee, 2003 ). Coverage in heterogeneous sensor networks has been studied in
Lazos and Poovendran (2006) and Zhou et al. (2005) with the latter focusing on connected coverage. Furthermore, simulated annealing approaches have been proposed to deploy nodes for coverage and connectivity ( Chang et al., 2007 ), for coverage only ( Lin and Chiu, 2005 ), and for choosing cluster-heads in WSNs ( Heinzelman et al., 2002; Turgut et al., 2003 ).

Recent work applies genetic algorithms (GAs) to determine optimal sensor placement for coverage ( Habib, 2007; Ning and
Deyun, 2007; Xu and Yao, 2006 ). Guo et al. present a GA to place sensors for structural health monitoring ( Guo et al., 2004 ). GA-based techniques have also evolved WSN clusters ( Hussain et al., 2007; Ferentinos and Tsiligiridis, 2007 ).

The aforementioned GA techniques combine multiple objec-tives into one weighted-sum fitness function, reducing it to a single objective. However, the objectives in the sensor placement problem conflict, e.g. increasing coverage adds to the cost, reducing the number of nodes affects coverage and connectivity, etc. Multiple competing objectives call for a multiobjective GA (MOGA) because an absolute fitness function cannot be defined ( Fonseca and Fleming, 1993 ). In MOGAs, an individual X  X  rank in the population depends on the number of individuals that dominate it. There is no optimum but rather a set of non-dominated solutions. Jourdan and de Weck (2004) describe a
MOGA that generates sensor layouts for a surveillance task; their algorithm provides Pareto-optimal topologies for a fixed max-imum number of homogeneous sensors. Al-Hmouz and Challa (2005) deploy a MOGA to develop a two-camera network with conflicting objectives to collect video data from a highway.
However, this camera network does not directly apply to wireless sensor networks with its constraints of energy and connectivity.
Jia et al. (2007) use an improved version of NSGA-II ( Deb et al., 2002 ) to select a minimum number of sensors from a given maximum to optimize coverage in a WSN. They do not consider k -connectivity or energy cost as an objective.
 ving Pareto-optimal sensor network topologies. Moreover, a fixed or maximum number of sensors is not required in FLEX  X  instead it evolves the optimum number of sensor nodes needed to achieve the desired coverage and connectivity while minimizing energy cost. This flexibility lends to the non-problem-specific nature of
FLEX to solve different types of sensor layout problems as demonstrated in Section 5.
 which presented an algorithm for sensor placement that mini-mizes energy and maximizes point-coverage and connectivity.
Here, (1) in addition to point coverage, we consider region coverage and grids with obstacles; (2) the algorithm has been applied to varying applications like differentiated coverage, facility surveillance, and clustered networks to establish the flexibility of the framework; (3) computational analysis has been included; (4) the radio and sensing model in the energy cost metric calculation has been detailed and (5) a procedure to modify the framework to work with more objectives has been outlined. 3. WSN placement objectives environment either for detection of unusual events or simply for periodic data gathering. 3.1. Problem formulation heterogeneous wireless sensor nodes X  placement problem is to find a network that forms the desired differentiated or non-differentiated cover and possesses the desired k -connectivity while minimizing energy cost. This problem is NP-hard as it can be generalized from the variable radii, 1-connected, non-differ-entiated cover problem, which is NP-hard ( Zhou et al., 2004 ). objectives: maximize coverage, maximize k -connectivity, and minimize energy cost. This section describes the WSN specifica-tion in FLEX and defines the three metrics that evaluate candidate solutions. 3.2. WSN domain specification their position in the X  X  Y plane, sensing radius s , and commu-nication/transmission radius t . For each node, circular coverage and omnidirectional antennas are assumed. Network coverage is defined by the sensing radii of the wireless sensor nodes and network connectivity is governed by the communication radii of the nodes. Sensor nodes are assumed to be heterogeneous, that is, each of the sensing and communication radii can take on values from a finite set.

Two types of obstacles in the target region have been modeled that can block a sensor X  X  sensing and/or transmitting ability: point obstacles , which resemble a point and have been modeled for simple case studies; and line obstacles , which serve as a contiguous set of point obstacles. These line obstacles model geometric obstacles, e.g. buildings. A continuous monitoring application is assumed such that wireless sensor nodes spend energy in sensing as well as communicating with their neighbors.
Sections 3.3 X 3.5 delineate the three primary metrics necessary to evaluate possible network solutions in FLEX: coverage, connectivity, and energy cost. 3.3. Multiobjective metric 1: coverage
Two types of coverage are considered. In point coverage , points of interests called query-points are dispersed in a target area. The goal of the network is to monitor these points through sensor nodes. In contrast, region coverage refers to coverage of an entire region, wherein the region is modeled as a mesh of query-points ( Fig. 1 ).

Definition 1. A point p in the grid terrain is covered if there exists a sensor node in the network with a sensing radius s such that p lies within s .

Definition 2. A differentiated cover exists when different points must be covered by different numbers of sensors for preferential monitoring.

Definition 3. A point p is differentiated k  X  2 covered if there are at least two sensor nodes that can monitor that point ( Fig. 2 ).
Obstacles in the field interfere with sensor nodes, making network coverage and connectivity harder to achieve. If an obstacle hinders the line-of-sight of a sensor such that it lies between the sensor X  X  origin and a query-point, the sensor cannot cover that point ( Fig. 3 ). In this case, either the sensor needs to be repositioned or if that is not possible, additional sensors need to be inserted into the network to gain coverage of the point.
Similarly, an interposing obstacle blocks communication between two sensor nodes that are within each others X  transmission range. 3.4. Multiobjective metric 2: connectivity Definition 4. The network is said to be connected if any node can communicate with any other node.

Since the connections in the problem domain are bidirectional, any single node should have at least one incoming and one outgoing link for the network to be connected. This condition is necessary to prevent incommunicado nodes, i.e. those with only incoming links, from occurring in the network.
 Definition 5. The network graph is k-connected if the removal of any k 1 nodes does not render the graph disconnected. Definition 6. A pair of nodes in a graph is k -connected if after the removal of any k 1 nodes, the node pair can still communicate with each other.

Connectivity of the network can be hampered by obstacles. As mentioned earlier, if a point obstacle or a line obstacle hinders two sensors X  line of transmission, then their communication link (if any) becomes ineffectual ( Fig. 4 ). This situation is solved by adjusting the position, sensing, and communication radii of current nodes or by injecting new sensor nodes into the network to re-establish network connectivity. The k -connectivity objective works towards creating robust networks such that in case any critical event is detected by a node, it has at least k paths in the network to route the data to other nodes. To model k -connectivity as an objective that can be maximized rather than as a binary constraint, we define the notion of percentage of k -connectivity:
Definition 7. Percentage of k-connectivity is the percentage of node pairs in the graph that are k -connected.

In addition to the k -connectivity objective, we added a separate objective in our experiments to measure the percentage of disconnected nodes, i.e. the nodes in the network with no incoming and no outgoing links. The aim is to minimize the occurrence of such nodes because they do not add to the network X  X  coverage. This objective is not primary to the problem and was introduced to discourage the appearance of lone nodes in the network. Note that the lone nodes add nothing to coverage but increase cost, so solutions with lone nodes will eventually be eliminated in favor of solutions where all nodes either provide coverage or connectivity or both. Adding the number of disconnected nodes as a fourth objective helps to reach Pareto-optimal solutions faster. 3.5. Multiobjective metric 3: energy cost
A sensor node has two major functions: it senses the environment and it communicates with other nodes. Commu-nication entails transmitting and receiving packets. Thus, an active sensor node dissipates energy while sensing, transmitting, receiving and being idle. Optionally, a node may perform simple data processing before transmitting packets. We assume cost of such processing to be negligible as compared to data commu-nication, which applies to most periodic data-gathering WSN applications.
 due to sensing, transmitting, receiving and being idle, respec-tively. Then, energy expended by a sensor node i in one second is
E  X  s , t i , d i  X  X  f  X  s i  X  X  g  X  t i  X  X  h  X  d i  X  X  C ,  X  1  X  where s i is the sensing radius, t i is the transmission radius and d the in-degree of the node. This model has been motivated from the Energy Cost model defined in Zhou et al. (2005) .
Expenditure per sensing operation can be considered as a power law function of the sensing radius s i : f  X  e s s a i ,  X  2  X  where the decay component a depends upon sensor hardware and the terrain characteristics ( Pattem et al., 2003 ) and e energy = distance a consumed for a sensing operation. In FLEX, we assume e s  X  10nJ/m for a  X  1.
 and Balakrishnan (2000) where expenditure per packet trans-mitted is given by g 0  X  X  e t  X  e d t b i  X  L  X  3  X  and expenditure per packet received is given by h 0  X  e r L :  X  4  X 
Here, e t is the energy/bit consumed by the transmitter circuitry, e is the energy/bit consumed by the receiver circuitry, e d energy dissipated in the operational amplifier transmit circuits, t is the transmission range, and L is the packet size. The factor b depends on the channel fading characteristics of the wireless environment and lies between 2 and 4 ( Gao et al., 2006 ). In FLEX, we set e t  X  50nJ/b, e r  X  50nJ/b, and e d  X  0.1nJ/b/m 2 for b  X  2 ( Heinzelman and Balakrishnan, 2000 ).
 aggregated data transmission rate of 2 packets/s, and a fixed packet size of L  X  10Kb, energy expended due to sensing in one second is f  X  s i  X  X  100 f 0
Energy expended due to transmission in one second is g  X  t i  X  X  2pkts g 0
And energy expended due to receiving packets in one second is h  X  d i  X  X  2pkts d i h 0
L  X  10Kb, then time to send one packet is 100ms. According to our assumptions, packet send rate is 2packets/s, so a node spends 2 100  X  200ms on average while transmitting. Assuming an average degree of 2, a node receives four packets from its neighbors in 1s and spends 400ms on average. Thus, the node is idle for 1000 200 400  X  400ms on average.

B  X  100Kb/s is  X  e t  X  e d t b i  X  B  X  9mJ = s for t i  X  20m; so we assume that the idle power is 3.6mJ/s. This is a reasonable assumption because studies show the ratio of idle:transmit power as 1 : 2.5 ( Kasten, 2001 ). Therefore, idle energy of a node per second is C  X  400ms 3 : 6mJ = s  X  1440 m J : second:
E i  X  s i , t i , d i  X  X  f  X  s i  X  X  g  X  t i  X  X  h  X  d i  X  X  C defined as E  X  transmitting to neighbors, receiving from neighbors and being idle. The equation considers that a node senses and communicates with its neighbors; the communicated data might have originated due to sensing event at the node itself or it might be data received from its neighbors to be routed. In the worst case, all nodes will be sensing and communicating data to neighbors; the aggregate energy (Eq. (6)) of all nodes then becomes a metric for evaluating energy cost of the network in FLEX. The energy cost metric was developed to incorporate both the number of nodes and the number of connections such that this equation can be used as a minimizing function for both. Using the total energy cost as a minimizing objective will help FLEX to favor networks with fewer nodes or connections. Two networks that are, for example, 2-connected and offer the same coverage, may have different energy costs. One network may have 10 nodes, while the other may have 12 nodes. Even if both networks have the same number of nodes, one may have fewer connections than the other. Both of these cases may result in different total energy costs. Thus, the total energy cost function in such cases will help rank one network over the other.

We have assumed an always-on MAC. In essence, different energy functions can be plugged into Eq. (1) to incorporate the desired power attenuation model because the energy cost is specific to device type, RF environment, communication/routing/
MAC protocols and applications. However, for our experiments, we will use the energy as defined in Eq. (5).

Section 4 describes how the three metrics, i.e. coverage, connectivity and energy cost, can be combined with an evolu-tionary algorithm to solve the sensor layout problem. 4. Evolutionary approach
A challenge in the WSN placement problem X  X  domain is that a significant number of nodes must be placed and calibrated correctly, creating a high-dimensional optimization problem.
Because the right number of nodes is not known and because searching in a space of too many nodes would be prohibitive, a principled method is needed to access the space of the right number of dimensions and optimize it effectively. Another challenge is that the objectives of the WSN layout problem are competing, thus, the absolute optimal solution does not exist and tradeoffs must be found with respect to the objectives described in Section 3. This section presents a detailed description of the proposed evolutionary algorithm FLEX: how it leverages NEAT X  X  ability to evolve networks of increasing complexity ( Stanley and
Miikkulainen, 2002, 2004 ) to explore the multidimensional wireless sensor placement search space; and how it uses Pareto-dominance ( Fonseca and Fleming, 1995a ) to find tradeoffs while evolving WSNs.

Evolutionary algorithms (EAs) are powerful optimization techniques that emulate principles of natural selection and survival of the fittest to find near optimal solutions in an unknown search space while consuming only reasonable compu-tation resources ( Holland, 1975; Goldberg, 1989; Jong, 2002 ). An individual solution is called a genome and is encoded with genes .
Genes specify the attributes of the solution and thereby determine the feasibility or fitness of the solution. A typical EA search begins with an initial population of random solutions (genomes). At each generation, each individual X  X  fitness is evaluated and the best individuals are selected for reproduction. Offspring are spawned through mutation and crossover operations.
Mutation causes slight changes in the genes, while crossover combines two parent genomes and results in an offspring with genes from both parents. In this way, the population evolves . Over the course of evolution, unfit individuals bear fewer offspring and the average fitness of the population increases.

An EA can be readily extended to optimize multiple objectives by incorporating the concept of Pareto-domination, which helps to optimize several, usually orthogonal, objectives/criteria/attri-butes simultaneously to find possible tradeoffs among them ( Coello Coello et al., 2002; Fonseca and Fleming, 1995b; Deb, 2001 ). A solution (tradeoff) is non-dominated if there is no other solution that is superior in all objectives. In the attribute space, a set of non-dominated solutions is said to lie on a Pareto-front . The goal of the Pareto-EA is to find and maintain a representative sampling of solutions on the Pareto-front.

Previous multiobjective approaches for the WSN placement problem ( Jourdan and de Weck, 2004; Al-Hmouz and Challa, 2005 ) are specific to a particular flavor of the problem and expect the genome length as an input. In the general WSN placement problem, however, we do not have a priori knowledge of the upper bound of sensors because sensors contribute to both coverage and connectivity. Moreover, the placement problem varies with the scenario: one scenario may require less than 10 nodes while another may need more than 50 nodes. Suggesting a maximum length for the genome is not feasible because it may cause unnecessary evaluations. Thus, we present a flexible algorithm for sensor placement (FLEX) in which there is no need to specify the length of the genome, and it can evolve connected networks of heterogeneous wireless sensor nodes for different scenarios under the WSN objectives of maximizing coverage and connectivity while minimizing energy cost. 4.1. Flexible algorithm for sensor placement (FLEX)
FLEX is proposed as an evolutionary method for placement of heterogeneous sensor nodes to gain optimized coverage, con-nectivity and energy cost in WSNs.

An initial population of WSNs is spawned from a canonical genome consisting of three sensor nodes forming a clique. The population is then speciated by grouping similar individuals together using a compatibility metric. At each evolution epoch, individuals in each species are assigned fitness scores based on Pareto-ranks. Then, each species is allotted an offspring number based on fitness score sharing. Truncation selection within each species prunes off individuals that are unfit for reproduction. Parents chosen from amongst the remaining individuals produce offspring by the quota allotted. Elitism among species ensures that the best solutions are carried over to the next generation. Stagnation detection assigns the lowest rank to a moribund species in order to give a higher chance to peer species to produce new (and perhaps) better offspring. The new population is re-speciated and replaces the old generation and the process continues until a user-defined number of generations have evolved.

Sections 4.1.1 X 4.1.7 present FLEX in detail, the operations it uses, and the factors that make it flexible, and hence applicable to different types of WSN placement problems. 4.1.1. WSN X  X  genetic representation
The WSN is represented as a genotype (genome) that describes a set of wireless sensor nodes. Each wireless sensor node is a gene directly encoded as a three-tuple of: 2-D position, sensing radius, and communication radius. An example genome and its resulting phenotype , i.e. the sensor network to which it translates, is shown in Fig. 5 . There is no need to maintain the communication links in the genome because they can be derived from the position and transmission radius properties of the gene. This genetic encoding has potential advantages over fixed-length chromosome structures used in Xu and Yao (2006) , Jourdan and de Weck (2004) , and Al-Hmouz and Challa (2005) . First, maximum number of nodes need not be known a priori as it allows the genome to expand unbounded through the addition of new genes via structural mutations. Second, the algorithm becomes flexible and can solve different types of sensor placement problems, such as small problems that require 10 nodes like Experiment 1 and complex problems like Experiment 5. 4.1.2. Population initialization
Instead of starting with a collection of random layouts, FLEX X  X  initial population consists of genomes spawned off a three-node network, which is the minimum number of nodes required to generate a 2-connected topology. All individuals are derived by perturbing this canonical genome using parametric mutations.
Starting this way produces a population of consistently simple sensor networks distinguished by slight differences in position, sensing, or communication radii. Beginning evolution with minimal topologies is motivated by the NEAT method, which has demonstrated the advantage of starting small when the optimal complexity of the solution is unknown ( Stanley and Miikkulainen, 2002, 2004 ).

In particular, a random population has the problem that it may contain networks with nodes and connections that may not necessarily contribute to coverage and connectivity but add to the network cost. Thus, the search risks starting unnecessarily in a higher dimension. The cost is that a significant number of evaluations are then required to remove such extraneous nodes and connections. By starting with minimal networks in FLEX, search starts in a lower-dimensional space; as generations proceed, the search space is gradually expanded. As with NEAT, this systematic approach is inspired by evolution in biological systems, wherein life started from single-celled organisms and gradually progressed to more complex forms. Thus, FLEX avoids unnecessary computations that may arise by initializing the population in a higher dimensional space than necessary. 4.1.3. Reproduction operations  X  mutation and crossover while crossover, or mating, produces an offspring that inherits gene structure from its parents.

These mutations occur during the reproduction phase, and the frequency of each type is guided by probability parameters of the algorithm. Parametric mutations can occur in any of the three or the communication radius t . Position mutation results in a unit increase or decrease in either or both the x and y coordinates of a gene. Communication/sensing radius mutation causes the radius to take any value between the minimum and maximum values defined as part of the evolution parameters. Structural mutations cause additions and deletions of genes, thereby modifying the structure of the network.
 varying length, making it difficult to meaningfully crossover two structurally different networks ( Radcliffe, 1993 ). FLEX follows the convention of NEAT, which solves this problem with historical markings ( Stanley and Miikkulainen, 2002 ).

Definition 8. A historical marking is a unique (increasing) counter that records a structural innovation, i.e. when a new gene appears as a result of structural mutation.
 transmitted unchanged to the offspring and thus help identify the historical lineage of an individual X  X  genetic structure. networks with different numbers of sensor nodes that share similar overall structures, genes are aligned in increasing order of historical markings. Following NEAT, two genes are said to match when they share the same historical marking. Moreover, a gene is disjoint if its historical marking does not appear in another individual X  X  gene set.
Disjoint genes trailing at the end of the gene structure are also referred to as excess genes. Matching, disjoint and excess genes are inherited by the progeny based on the type of crossover performed. multipoint mating and multipoint average mating . Multipoint mating randomly selects from among the matching genes of two parent genomes to produce offspring genes, inheriting disjoint genes only from the fitter parent (which prevents bloat).
Multipoint average mating is similar to multipoint mating except it computes the average position and radii information of matching genes in each genome. Fig. 6 shows an example of a crossover resulting from a multipoint mate operation. 4.1.4. The role of complexification and hence new wireless connections to a network, thereby increasing the complexity of the network. This idea of gradual complexification is adapted from NEAT, which begins with a uniform population of simple ANNs with no hidden nodes and evolves increasingly complex network topologies through muta-tions that add new nodes and connections ( Stanley and
Miikkulainen, 2002, 2004 ). An important implication of this approach is that networks can first be explored in lower-dimensional space. Eventually, some structural innovations arise that are beneficial to fitness, thereby focusing part of the search (i.e. in the species containing the new innovations) on a new, higher dimensional space. The idea is that this principled approach to searching in increasingly high dimensional spaces is more likely to succeed than searching among random initial topologies that have not been validated through any fitness evaluations. Whether larger topologies survive the test of evolution depends on how well the network performs on the different objectives as compared to other networks.

The efficacy of increasing complexity in this way is validated empirically in Stanley and Miikkulainen (2002, 2004) . In these studies, versions of NEAT that start with random or complex topologies are compared to canonical NEAT, which begins with small topologies. The consistent result is that the penalty for starting in a space of unjustified high dimensionality is signifi-cantly lower performance in terms of both number of evaluations and ultimate solution quality. Because problem dimensionality is such a significant factor in search, when the correct dimension-ality is not known, a major advantage is gained by searching for the lower-dimensional solutions first.

In this way, complexification adds to FLEX X  X  flexibility in two ways. First, the maximum number of sensor nodes that can solve the problem need not be known in FLEX; it will evolve solutions that minimize energy cost and hence nodes. Second, the same algorithm can solve problems with different levels of complexity.
This capability will be demonstrated in Section 5. 4.1.5. The role of speciation in FLEX
To aid the survival of newly complexified networks, similar networks are grouped within species to allow them to compete within their own niches. Speciation refers to the process by which new species evolve. It has been shown that speciation aids the discovery of multiple peaks in the search space ( Deb and
Goldberg, 1989 ). Consider a small 2-connected network of three nodes, each covering a query-point. This network may be Pareto-ranked 1 because it maximized on the 2-connectivity objective and probably has a nearly minimum energy cost associated with it due to the small number of communication links. Now, consider a 1-connected network of five nodes that also covers three query-points. The energy cost associated with the bigger network will likely be greater. If the two networks were to compete with each other, the bigger network may lose, despite the fact that it may have a better chance to discover more query-points in the long run. Also, the bigger network may need more time to maximize on 2-connectivity. Through speciation, both of these networks will compete with similar individuals, and each will get a chance to prove their worth in the long run. 4.1.6. Genome compatibility
In order to group similar individuals into the same species, a compatibility function is used. Such a grouping, i.e. speciation, is essential to protect innovation in the population because it permits individuals to compete against others that they resemble, as previously mentioned. Compatibility measures how well-matched the two candidate genomes are based upon the amount of genetic material they share. The number of non-matching genes and the differences between matching genes is an intuitive measure of how compatible two genomes are. The larger these differences, the less compatible they are. Based on these differences, we define a compatibility function in Eq. (7) which assesses to what extent two genomes are related: where d nonmatch weighs the differences of non-matching, i.e. excess and disjoint genes and d match gives a measure of differences between matching genes.

In particular, d nonmatch is defined as d where D denotes the number of disjoint genes, E is the excess gene count, and N represents the number of genes in the larger genome.

Similarly, d match is defined as d where P is the aggregate of the Cartesian distances between matching genes, R t and R s accumulate, respectively, the absolute communication and sensing radii differences between matching genes, and M is the number of matching genes between the two genomes.

The constants C d , C e , C p , C t and C s control the relative importance of each component in Eq. (7) in determining compatibility. They were determined through experimentation.
Two genomes are in the same species if d is below a pre-defined threshold value, t d , indicating a strong correlation between matching genes. This threshold helps to maintain a target number of species in the population, e.g. 10 percent of the population size, and it is dynamically adjusted to achieve the targeted number of species S . Lowering t d , means that two genomes must differ only slightly for them to be in a species. However, if the current number of species in the population is more than the desired target, t d is set to a higher value to relax the compatibility metric. 4.1.7. Pareto-rank evaluation
Because the objectives in the sensor placement problem are not independent, an absolute fitness function is difficult to formulate. Increasing coverage, for example, may require more sensors, which also increases the energy cost of the network, an undesirable outcome. Another layout may minimize the cost in terms of the number of nodes and the number of connections, but it may reduce coverage. Favoring higher connectivity increases communication links and thus, also increases energy cost. On the other hand, reducing energy may affect communication. Thus, there is no single optimum set of values for all the objectives and it is desirable to discover a set of alternative WSN layouts.
Therefore, FLEX uses Pareto-dominance ( Fonseca and Fleming, 1995a; Deb, 2001 ) to compare candidate solutions within each species. The quantitative phenotype characteristics, i.e. coverage, connectivity, disconnected node percentage, and energy cost, are the Pareto-objectives. A Pareto-dominance ranking is assigned to each individual based on these objectives.

Definition 9. For some attribute x of individuals A and B , attr is better than attr x ( B )if attr x ( A )is greater than attr objective x is a maximizing objective; or attr x ( A )is less than attr ( B ) when x is a minimizing objective.

Definition 10. Pareto-dominance of individual A over individual B signifies that A is better than or equal to B in all attributes (objectives), and A is better than B in at least one attribute.
To implement ranking based on Pareto-dominance, each individual is placed in an assignment pool and initialized with the highest Pareto-rank. At each Pareto-rank assignment iteration, an individual is removed from the assignment pool if no other individual in the pool can dominate it, in which case that individual is assigned the current Pareto-rank. Conversely, if an individual can be dominated, it remains in the assignment pool for the next round, where the Pareto-rank is lowered. This ranking system continues until the assignment pool empties and all individuals within the species have been assigned ranks.
Determining whether one network configuration is superior over another depends on how well each solution optimizes the three objectives, i.e. coverage, connectivity, and energy cost. The challenge is that optimization of some objectives requires maximization (coverage and connectivity), while optimizing energy cost calls for minimization; furthermore these objectives are conflicting. Hence, an important element of FLEX is the reconciliation of conflicting objectives through Pareto-ranking to reach the Pareto-optimal set, i.e. the set of non-dominated solutions. Pareto-optimal solutions at a generation g refer to the set of non-dominated solutions at that generation. The Pareto-assignment procedure is detailed in Algorithm 1 and is run for each species.

Algorithm 1 ( Pareto-rank assignment ). Pareto-ranking finds non-dominated solutions under competing objectives when an absolute measure of fitness cannot be determined. compared to every other network for each objective. Thus, for N solutions and K objectives, there are O ( KN 2 ) comparisons to get non-dominated networks at the Pareto-front. In the second iteration of the repeat loop, the same process is executed on the remaining unranked individuals. If there was just one network ranked first in the previous iteration, then the number of comparisons to find networks of the second Pareto-rank is also
O ( KN 2 ). In the worst case, each rank has one individual, and the total number of comparisons to rank all N networks in that case is
But as the population evolves, complexification and speciation step in and FLEX maintains an average of S species in the population. Using the fitness sharing dynamics, average size of the species is maintained at N / S . Let M denote the average size of species. Then, for any generation beyond the initial instability phase, the number of comparisons for each species is O ( KM M o N .
 number of species S  X  10. After the initial generations, when the dynamic compatibility threshold becomes stable, the population maintains an average of 10 species with 100/10  X  10 individuals in each species on average. At this point, the worst case would have
K 10 3 comparisons for each species with a total of 10 1000 K comparisons. This is a marked improvement over using an algorithm without speciation, in which case there would be K the order is S 2 times less.
 assigned to each individual based on this ranking outcome.
Higher rank numbers are assigned lower fitness values. The lowest rank individuals, i.e. ranked 1, correspond to all non-dominated solutions, and thus, are assigned the highest fitness values. Assuming that a total of Y Pareto-ranks are assigned in a species, all organisms at rank X (where 1 is the most dominating rank, and Y is the least dominating) will have the fitness value 2
Y X 1 . Fitness scores based on Pareto-ranks enable NEAT X  X  fitness sharing dynamics ( Stanley and Miikkulainen, 2002 ) to calculate the number of offspring to be assigned to each species in the current reproduction cycle. The number of offspring, n i , for species i depends on the average fitness F the species in proportion to the average fitness values of the rest of the species in the population of size j P j , and is calculated using the equation: n  X   X  F i  X j P j P F
When evolution ceases, after some x number of generations (as specified by the user), the FLEX framework presents to the user a list of current non-dominated solutions showing possible trade-offs among the multiple conflicting objectives. In particular, the solutions ranked 1 in each species are the Pareto-optimal solutions of that species.

In summary, at any time t ,thecurrentpopulation P ( t ), i.e. the set of networks, is p artitioned into j S  X  t  X j different subpopulations (or species) according to similarity of individuals which is measured through the compatibility function (Eq. (7)), such that P
P i  X  t  X  X  P  X  t  X  , i  X  1 , 2 , ... , j S  X  t  X j . Then, for every P based fitness assignment (Fig. 1) helps to identify the set of non-dominated solutions, PF i ( t ), where PF i  X  t  X  P i protects innovation and helps similar individuals compete with each other. Complexification ensures that evolution searches and optimizes in lowe r dimensional space before moving on to higher dimensions. FLEX is summarized in Algorithm 2.
Algorithm 2 ( FLEX population loop ). Important concepts in FLEX are Pareto-dominance which evaluates individuals on the basis of multiple objectives; speciation which helps maintain diversity in the population by protecting new individuals; and complex-ification which systematically moves search from lower to higher dimensional space.
 Create spawner genome; Generate j P j organisms from spawner genome; Speciate: Assign organisms to species using Eq. (7); repeat
Assign Pareto ranks ; forall Species i do j Calculate average fitness of i ; end Allot offspring number to species using Eq :  X  10  X  ; Perform truncation ; Perform reproduction ; Re speciate : Assign organisms to species using Eq :  X  7  X  ;
Delete old organisms ; until Until stopping condition is met;
Section 5 confirms that this approach finds Pareto-optimal solutions for a set of maximizing and minimizing conflicting objectives. 5. Experiments and results
To exemplify the applicability of the FLEX framework, experi-ments were conducted in five different case scenarios. These experiments model real-world situations wherein FLEX success-fully generates several Pareto-optimal sensor node placements that cover target locations/regions under the constraints of connectivity and minimum energy. 5.1. Experimental setup
The experiments were carried out on a Pentium M processor running at 1.8GHz. All simulation runs begin with a population of initial genomes consisting of three genes, i.e. networks consisting of three sensor nodes, the minimum number of nodes required to generate a 2-connected topology. The mutation rates are selected such that between structural additions and deletions, the network alters sensor node positions to decrease energy cost while maintaining k -connectivity. If a species shows no improvement in its coverage, connectivity, and energy within some tolerance (e.g. 0.01 in the experiments) for 1000 generations, it is deemed stagnant and is penalized by being assigned the lowest rank in the population. This allows for a new, better species to rise from the remainder of the population. If the fittest species is stagnant, however, no action is taken. To aid the visualization of evolution, we also define the notion of a population champion as an individual from the highest rank in the population, with the lowest energy among the highest connectivity individuals with the highest coverage.

Elitism is employed to duplicate the population-level champ and to replicate each species-level champ if the assigned size of the species is greater than five. The target number of species is maintained at 10 percent of the population size through a dynamic compatibility threshold ( Stanley and Miikkulainen, 2004 ). Table 1 lists the evolutionary parameters in FLEX that have been used for all experiments. The most important ones in this list are the compatibility parameters. The coefficients C C in Eq. (8) are set so that if two networks are compared to have many excess and/or disjoint genes, the two networks probably belong to different species. If two networks differ in their sensing and/or transmission radius, they may be members of two different species if the differences are large, and the coefficients C and C s in Eq. (9) are set accordingly. If two networks differ slightly in their node positions, they most likely belong to the same species. For this reason, C p in Eq. (8) is set to a small value.
The compatibility threshold t d which is initialized to 3 is dynamic, and therefore, after some generations, it is automatically set to a value that keeps the total number of species in the population close to the target number of species S . Also, it is dynamically adjusted when needed throughout the execution of FLEX to maintain S . The probabilities of mutation have been set to gradually introduce increasing levels of complexity in the search space and thus, allow the solutions time to optimize in the current space before moving to a finer level. The detailed study of the effects of changing these parameters has been left for future work. 5.2. Experiment 1: coverage of target points in a circle with k  X  2 and 3 connectivity
To verify FLEX X  X  ability to evolve an optimal network structure, it was tested on 10 query-points deployed in a circle. The goal of the evolved network is to cover these points with minimum cost and a connectivity of two. To keep the experiment simple, all nodes are assumed homogeneous with a sensing radius of 5 units and a communication radius of 15 units. Query-point locations and the nodes X  sensing radii are selected such that no sensor can cover more than a single point. Additionally, sensors covering adjacent points can communicate with each other and possibly their neighbor X  X  neighbor. A minimum-cost network for this setup would have to have at least 10 sensor nodes with each node covering a query-point. Also, k  X  2 connectivity requires that all sensors have a degree of at least two. Hence, the ideal network must include at least a ring structure along the query-points. To fulfill the minimum-cost objective, the network must also minimize energy cost. Hence, redundant communication links in the communication graph must be minimized. Thus, the optimal solution requires that each query-point be covered by exactly one sensor, and each sensor have exactly a degree of two in the sensor network.

The results shown in Fig. 7 verify that FLEX evolves a network that provides k  X  2 connectivity, represented by communication lines/links, and covers all query-points. This topology is optimal because it minimizes energy and maintains 2-connectivity while covering query-points deployed in a circle. The run took 14min.
The coverage, connectivity and energy graph ( Fig. 7 b) shows how objectives evaluated for the population champion vary with the number of generations. Energy increases with higher coverage due to the addition of new nodes. Since the problem is simple, 2-connectivity is reached quickly. Once the network reaches the maximum coverage and connectivity, the algorithm optimizes energy by removing any extra communication links in the graph.
Owing to complexifying in FLEX, the network was able to converge to the optimum ring for this circular arrangement of query-points.

The experiment was repeated with a slight variation in which the desired connectivity was set at k  X  3, sensing radius at five and communication radius at 20. An optimum network for this new requirement was expected to consist of 10 sensor nodes covering the 10 query-points with each node having a degree of at least three and at most four. By running the experiment for k  X  3, Fig. 8 shows that FLEX evolves a network with a ring topology, where each node has a degree of three or four. The optimization took 600 generations (70min). This network took more time to evolve as compared to the previous experiment because the connectivity requirement was set to three.

Although this experiment of covering target points in a circle does not have practical significance, its simplicity demonstrates
FLEX X  X  ability to evolve an optimum network with minimum sensor nodes and minimum connections.
 5.3. Experiment 2: differentiated coverage of randomly generated target points with k  X  2 connectivity query-points deployed in a 50 50 square units region. Four points are designated to have a differentiated cover of two while the remaining points only require a single sensor cover. The sensing radius is fixed at 5 units and the communication radius varies between 10 and 12 units. Position mutations alter the previous position by one unit in the x and/or y -direction.
Probability of structural mutation was set to 0.1. The goal is to evolve a network that achieves this differentiated cover with k  X  2 connectivity and minimal energy cost.
 age network ( Fig. 9 ). All query-points are covered by some sensor node. The black-colored differentiated query-points are covered by exactly two sensors each. Interestingly, the evolving solution keeps some nodes that are needed to maintain 2-connectivity, but do not cover any query-points, e.g. nodes a and b in Fig. 9 a. The plots in Fig. 9 b show that as evolution progresses, new nodes added in the network increase network coverage, but often result in decreased connectivity. The network then evolves and works towards attaining its connectivity objective. However, as connectivity increases, so does energy. Once maximum coverage and connectivity are reached, the effect of optimizing energy by removing spurious communication links is clear in the energy plot in Fig. 9 b. The graph verifies that all objectives are optimized in parallel whilst exploring the search space. This experiment took about 5h.

Another, slightly more difficult, set up was presented to FLEX as shown in Fig. 10 , with 13 normal and seven differentiated query-points, each requiring a cover of two sensors. After 2500 generations, FLEX successfully evolved a network that provides the differentiated cover and also completes 2-connectivity in the graph. As shown in the figure, nodes a and b do not cover any query-point but exist to connect the upper-half of the graph with the lower half. Thus, FLEX places nodes to fulfill the coverage as well as the connectivity requirement. 5.4. Experiment 3: region coverage with k  X  2 connectivity in the presence of point and line obstacles
This set of experiments evolved a sensor network that could cover a target region/area. Without loss of generality, the region is represented by a query-points X  grid spanning 30 30 square units.
A sensor can lie at any point on the grid. All sensors are assumed homogeneous and thus, only position mutations are performed such that a resulting shift in position is either in the x or y direction on the query-point grid. The objective is to see how well the evolved 2-connected minimal cost network solution can cover the target area in the presence of obstacles. Two sets of experiments were conducted, one with point obstacles and another with line obstacles.

In the first set of experiments (Figs. 11a and 12), a few point obstacles are placed at randomly selected grid intersection points.
As mentioned previously, point obstacles obstruct sensors X  line-of-sight, disrupting their ability to communicate with another sensor or cover a query-point behind the obstacle. Thus, query-points that fall within the sensing circle of a sensor may be undetected by that sensor because of an obstacle. In the evolved network of Fig. 11 a, sensor node 1 cannot sense query-point a because of the obstruction. Consequently, FLEX places other sensors to cover such query-points. Thus, sensor node 2 senses the query-point a . Apart from hindrances in coverage, obstacles also impede communication. In Fig. 11 a, sensor node 3 does not have a direct communication link with node 4 as the obstacle at grid point b blocks the straight line of communication between nodes 3 and 4 even though they lie within each others X  communication range. Thus, other nodes have been placed to connect node 3 with node 4. Sensor coverage with point obstacles is also studied in Xu and Yao (2006) ; however, FLEX X  X  evolved network uniquely preserves 2-connectivity which is a basic requirement for WSNs. Furthermore, unlike Xu and Yao (2006) ,
FLEX is multiobjective and has a flexible encoding scheme that allows it to work with problems of different complexity.
Pareto-optimal layouts after 200 generations for the experi-ment with point obstacles are shown in Fig. 12 . This run took 2min.

In the second set of experiments ( Figs. 11b and 13 ), some line obstacles are introduced within the query-points grid. Because line obstacles hinder transmission signal, no two sensors can communicate through an obstacle, so there is no communication link crossing any line obstacle in Fig. 11 b. Thus, node 1 has no direct communication with node 2; node 3 is not linked with node 4; and node 5 is not directly communicating with nodes 6 X 8, even though they lie within transmission range. FLEX successfully evolves nodes in the network that route communication links around the obstacles. Second, it places sensors to cover query-points that lie on the other side of a line obstacle, e.g. nodes 6 X 8 have been placed to cover the query-points beyond the obstacle AB because node 5 is unable to sense those points. Fig. 13 shows Pareto-optimal layouts for the experiment at generation 200. None of the layouts are superior to the others. This run took 2min.
Thus, FLEX successfully evolves networks that provide region coverage, distributes nodes to get around obstacles for attaining both coverage and connectivity, and presents the user with alternate layouts for the objectives of maximizing coverage and connectivity and minimizing energy cost. 5.5. Experiment 4: road/facility surveillance
FLEX was applied to a similar scenario as described in Jourdan and de Weck (2004) . The experiment involves a facility with two roads leading into it, from the north and from the east, respectively. The objective is to monitor the road traffic with minimum number of nodes and to provide 360 1 surveillance around the facility. Furthermore, it is desirable to place sensors as far away as possible from the facility to minimize probability of detection and thus increase survivability of nodes. As a final objective, the network must maintain communication with a High Energy Communication Node (HECN) for reporting purposes. The HECN is located at the top right corner of the target region, as in Jourdan and de Weck (2004) .

Fig. 14 presents the results from the facility and road surveillance experiment at generation 400 giving tradeoffs with respect to coverage, node survivability and network cost.
As detection distance increases, the minimum number of required sensors also increases. The resulting 2-connected, full coverage networks all maintain regular polygon shapes centered around the facility, which shows that FLEX can balance the fundamental network objectives of maximized desired k -connectivity and minimized energy cost, while maintaining the mission-specific objectives of full surveillance coverage and minimized detectability. This simulation took under 3min.
 same experiment found in Jourdan and de Weck (2004) ,i.e.a solution with more sensors has lower probability of sensor detection than a solution with less sensor nodes. Their experiment took 14min on a 1.8GHz processor, demonstrating that FLEX is faster. Furthermore, FLEX is more flexible because it can evolve networks of heterogeneous nodes with desired connectivity.
Moreover, there is no need to explicitly specify the maximum number of nodes. FLEX evolves the minimum node topology because it minimizes energy cost, which is directly related to the number of nodes and the number of communication links in the network. 5.6. Experiment 5: evolving a hierarchical network
This experiment demonstrates that FLEX can evolve complex tiered networks. In a tiered network, nodes are arranged in clusters, such that each node either acts as a cluster head (CH) or is attached to some cluster. The non-CH nodes communicate with the CHs and CHs can communicate with the base station (BS), and with each other. It is assumed that the sensor nodes are equipped with dual transmitters, such that a node that is a CH can use the high power transmitter to communicate with the BS. The BS is situated far enough from the region being monitored that any CH can safely be assumed to expend the same amount of energy while transmitting to the BS. The sensing radii for CH and non-CH nodes are set at three units, while the communication radii are set at 10 and 20 units for non-CH nodes and CH nodes, respectively. The probability of structural mutations is set to 0.1, and the probability that a new node added to the network is a CH is 0.01. The goal is to evolve a network architecture that maximizes the coverage of the query-points with minimal clusters. It should be noted that this experiment is not set up to present comparison with standard clustering approaches. Instead, it is intended to prove the power and flexibility of FLEX X  X  evolutionary framework by showing that it can evolve a tiered network architecture.
 This specific scenario requires evolving an overlay network of CHs atop simple sensor nodes. The objective is to cover all the points of interest by either CHs or non-CH nodes, such that each CH communicates with several non-CH nodes and acts as relay for the rest of the network. Because the communication range of a non-CH is half of a CH X  X  communication range, it must connect to a CH to be connected to the network. The CHs, on the other hand, communicate with other CHs and form a 2-connected commu-nication graph. A fourth objective was added to minimize the number of non-CH nodes that are not part of any cluster. FLEX was able to overcome the complexity of this problem and successfully evolve a tiered network ( Fig. 15 ). There are no redundant non-CH nodes; every such node adds to coverage.
The CH nodes, on the other hand, can cover query-points, apart from their basic functionality of linking up with non-CH nodes to form clusters for data aggregation. In fact, all the CHs in Fig. 15 a cover query-points except CHs a and b which solely serve as the heads of non-CH nodes and complete 2-connectivity of the CHs overlay. As a result of the minimizing objective, FLEX was able to develop a solution that minimizes the energy cost of the network. Consequently, the number of CHs in the solution was also minimized, because CHs are high-energy nodes. This result is significant because it shows that FLEX can integrate different capability nodes into a single network, both contributing towards a common global objective (coverage in this case), while also having their own local objectives (sensing for the non-CHs, and sensing and relaying for the CHs). This result demonstrates FLEX X  X  ability to evolve complex networks.
 Initially, energy cost increased as coverage increased ( Fig. 15 b). Around generation 1300, coverage became 98 percent accom-panied by an increase in energy. Coverage remained at that level until around generation 1600. During this time, however, the network optimized energy, and an energy cost decrease is observed. After reaching 100 percent coverage at generation 1600, cost increases. Then, a decreasing energy cost trend continued until generation 2000. This run took 90min. 6. Discussion
The experiments show that FLEX covers a wide spectrum of applications in the WSN X  X  initial layout and placement problem. In each experiment, the basic network objectives (coverage, connectivity and energy cost) were adapted to specialized objectives e.g. minimizing detectability in road/facility surveil-lance, differentiated cover in query-point coverage, obstacle avoidance in region coverage experiments, and minimized number of clusters in hierarchical network evolution. The results not only exhibit FLEX X  X  competence as a sensor placement solution, but also exemplify its flexibility to solve different types of placement tasks. The algorithm is suggested for moderately sized networks where numbers and costs matter, as opposed to remote habitat-monitoring applications where thousands of nodes are dropped from an airplane and a random deployment suffices. 6.1. Speciation at work
Speciation allows concurrent evolution of individuals within different species. The speciation graph in Fig. 16 depicts the species distribution for 40 generations with a population size of 100 in Experiment 1 (Section 5.2). In the beginning, each individual shares the same species. During evolution, successful mutations result in additional structures to some individuals, causing them to be placed in new species. Structural mutations on smaller networks are more heavily weighted in the calculation of the compatibility metric (Eq. (7)), as exhibited by the protection of new species during the initial phase of evolution. After this initial instability, the dynamic compatibility threshold adjusts itself and plateaus, and the population maintains an average of 10 species. At later stages, some species die out because of consistent poor fitness performance. At any time, no one species dominates the whole population because of fitness sharing (Eq. (10)); thus, diversity is maintained at all times and the likelihood of getting stuck in a local optimum is minimal.
 the population at generation 314 for a run of Experiment 1 (Section 5.2). It is clear that species are different from each other, and individuals within species resemble each other; thus, there is a healthy diversity in the population and individuals compete within their own niches. 6.2. Extending the current objectives objectives very easily. 6.2.1. Case 1: objectives that do not need additional genes
This case is simple. A new function can be defined that calculates the newly defined objective. A call to this function is included with calls to other objective functions when a phenotype is evaluated. 6.2.2. Case 2: objectives that depend on new gene types
New gene types can be added in the genotype definition. Gene mutation and mating operations must then be defined.

Future practical applications include using FLEX to find placement of pressure or seismic sensors for monitoring the structural health of a bridge ( Guo et al., 2004 ); and placing sensors in a building to help fire fighters locate trapped victims. Another application would be the placement of road sensors for detecting congestion, thus replacing loop inductors and saving the associated installation, hardware and maintenance costs. Further-more, FLEX may also be used to determine the number of BSs for a cellular network by fixing the connectivity objective to 100 percent ( Mathar and Niessen, 2000 ).

Once the initial network has been placed and the WSN is in use, an important aspect to consider is the lifetime of the network. Lifetime is restricted by the application-specific MAC and routing schemes as some nodes may drain energy more than others with the passage of time. It, then, becomes necessary to re-distribute the burden of active nodes by changing the topology to give the heavy work to the nodes with the most remaining battery capacity. Thus, an adaptive algorithm is required that dynamically adapts the WSN design based on battery usages of nodes ( Ferentinos and Tsiligiridis, 2007 ). An important direction for future work is to extend FLEX to optimize a WSN application X  X  design after initial placement, when lifetime becomes a key factor. 7. Conclusion
FLEX is a method for evolving sensors X  positions, transmission and sensing radii such that the resultant network both forms a sensor cover and provides full node-connectivity while minimiz-ing superfluous communication links to conserve energy. The same algorithm can be employed for point or region targets, differentiated coverage, clustered networks, and connected cover-age in a terrain with obstacles. Specifically, this paper: (1) presents a multiobjective evolutionary algorithm for solving the general multiobjective sensor placement problem, in which number of nodes is not known a priori; (2) integrates NEAT X  X  complexification technique ( Stanley and Miikkulainen, 2002 ) with Pareto-dominance ( Fonseca and Fleming, 1995a ) to evolve Pareto-optimal WSNs with the objectives of maximizing coverage, maximizing desired k -connectivity and minimizing energy cost; and (3) uses a flexible-length genome encoding scheme for WSNs that eliminates the need to have prior knowledge of maximum network size. The approach can be followed prior to actual deployment, giving valuable insight into the number of sensors and the types of sensors necessary for a network of a desired connectivity and coverage. FLEX X  X  strength is its flexibility in adapting its objectives to different WSN placement problem domains.
 References
