 Control is becoming an increasingly import function for computer networks. The patterns, and throughput performance is due to a rising number of diverse and hetero-geneous end-systems and network equipment. The network control can be split to three steps, information gathering, information analysis, and command deployment. 
First of all, information including network topology, network events must be gath-ered by the routers. Then, all information mu st be analyzed in a central or distributed and achieving the control task. 
To response to the network events, the control commands must be deployed to command should be executed on which router, and also the proper parameters are attached to the command. The simplest way to deploy the commands is to deploy the command one by one. To optimize the deployment, we can use group deployment or other optimization method. 
These three steps may be used interoperable. For example, the Information Ana-detail network information, so the Analyzer deploy new packet gathering modules to being recovered again. 
The distributed aspect of observe, analyze and control the networks aims at correlat-beyond a single node or link, helps the network operator to analyze the network events architecture by define DCE (Distributed Controllable Environment) architecture. 
The design and implementation of such a control system poses a number of chal-work, we build our information gathering module on a network-processor based pro-totype implementation, and the information analysis and command deployment mod-ules on a high performance computer. In particular, our contributions are: A controllable node architecture for observing and collecting network information. 
A control framework for bring inter-operation to information gatherer and informa-tion analyzer. 
A deployment interface for deploy packet capture program, parameters and control command to routers. A prototype implementation based on Intel IXP2400 network processor. Network processors are being used as the basic building blocks of network devices. the network operator desires. That is to say, if the network operator wants to capture new type of packets, he can reconfigure th e information collection module or write a new plug-ins which can be added into the module. The network processors are ideal new program injection and reconfiguration. and concludes the paper. Network monitor can be performed using passive measurement techniques [1]. Pas-NLANR PMA [2], Sprint IPMON [3], and AT&amp;T GigaScope [4]. These projects utilize custom hardware to obtain the performance required for monitoring high speed architecture needs to capture and analyze the packet simultaneity, and we have to take responses for specified network events. 
A distributed passive measurement infrastructure is presented in [5], which has query capability. Our architecture supports cap turing only specified packets and does some quick pre-analyzing to get some basic network status. 
ATMEN [6] is an distributed measurement infrastructure uses Gigascopes[4] as its packet capture device. It has a real-time query capability, and the ability to reuse meas-urement data. However, ATMEN is distributed in nature with its components commu-modules and the routers as controllable network elements. Figure 1 shows the overall system architecture, the primary components of the system are Information Gatherer, Information Anal yzer. The Information Gatherer is a DCE processing result to a center database. 
The Information Analyzer can read and analyze the pre-processing results from the ployed to the controllable ro uters to fix the network. 3.1 DCE Architecture architecture of Information Gatherer which can be divided into two parts, 1, fast-path, ing, 2, low-path, which do some pre-processing. The capture rules will install filters to node also has a Command Processor in order to install new Capture Agents and man-age other software and hardware modules. 3.2 Information Gatherer The Information Gatherer is designed based on DCE. The Information Gatherer in-cludes three modules: packet capture, pre-processing, and capture agent. agents X  need will be captured and processed. When capture agent is installed into the only a subset of observed traffic will be captured and directed to proper pre-processing and capture agent. 
In general, the pre-processing did some statistics and/or very small computation to example counter, sliding window, and histogram. The capture agent defines which statistic method will be injected to pre-processing module and configures the statistics ceived a drop command from the operator, for examples drop the P2P traffic of some patterns, the raw packets will be dropped. 
The capture agents will collect the pre-processed network events from the pre-processing module. After pre-analysis, the capture agent will get a number of network capture agent, this event will transferred to the center database immediately. Multiple operator and Information Analyzer. 3.3 Information Analyzer integrated analyzer. A single analyzer conn ects only one capture agent. The integrated view of network status. 3.4 Command Deployment After analysis, the Information Analyzer creates a set of commands and parameters to try to fix and adjust the network. The commands should be deployed .There are three types of deployment. The first is to deploy one command to a specified network node. Command Processor and sends the command. The second is to deploy one command to a number of network nodes. It is very suitable to use a virtual multicast protocol to send a single command to multiple nodes. The third type of deployment is to deploy multiple commands to multiple network nodes, which can be optimized by a group communication protocol. How to optimize the deployment is one of our future works. 3.5 Capture Agent X  X  Installation The capture agent should be dynamically installed on the Information Gatherer or un-installed. This is a radical approach to allow high-level applications to download and deploy new code to a network node. This approach raises a different flexibility versus pre-defined hardware approach, but we can use network processors to partially solve this problem. We have implemented a prototype with basic filter and gatherer to illustrate the feasi-bility of the proposed architecture. The Information Gatherer implementation is based on an Intel IXP2400 [7] development board. In our implementation we just add small additional overhead to the router. 
We evaluate the time consuming on the IXP2400 X  X  development environment software from Intel. The average time consuming of 5 main modules are illustrated as (src addr, src port, dest addr, dest port, protocol). The simple pre-processing we used here for test do packet statistics for specified P2P UDP packets. 
In the table, we can see that add a simple pre-processing into the fast path just need lesser impact of the performance of a normal router. In summary, we have presented our architect ure for controllable networks especially the hardware design of the distributed Information Gatherer. The distributed Informa-tion Gatherer is the key entity of the control architecture. The ability to dynamically database and provides an extensible way to get variable network status data. The pre-sign and did not harm the router X  X  performance. be adopted to support dynamically installed capture agents. 
