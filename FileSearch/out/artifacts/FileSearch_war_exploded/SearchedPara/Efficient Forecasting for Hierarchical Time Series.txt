 Forecasting is used as the basis for business planning in many ap-plication areas such as energy, sales and traffic management. Time series data used in these areas is often hierarchically organized and thus, aggregated along the hierarchy levels based on their dimen-sional features. Calculating forecasts in these environments is very time consuming, due to ensuring forecasting consistency between hierarchy levels. To increase the forecasting efficiency for hierar-chically organized time series, we introduce a novel forecasting ap-proach that takes advantage of the hierarchical organization. There, we reuse the forecast models maintained on the lowest level of the hierarchy to almost instantly create already estimated forecast models on higher hierarchical levels. In addition, we define a hier-archical communication framework, increasing the communication flexibility and efficiency. Our experiments show significant runtime improvements for creating a forecast model at higher hierarchical levels, while still providing a very high accuracy.
 G.3 [ Mathematics of Computing ]: Probability and Statistics X  Time series analysis ; G.1.6 [ Numerical Analysis ]: Optimization X  Nonlinear programming Forecasting; Hierarchies; Time Series; Optimization
Time series forecasting is an important statistical analysis tech-nique used as a basis for manual and automatic planning in many application domains [12]. Forecasts are calculated using mathe-matical models that capture a parameterized relationship between past and future values to express behavior and characteristics of a historic time series. The parameters of these forecast models are estimated on a training data set to fit the specifics of the time series by minimizing the forecast error (i.e., difference between predicted and actual values). This estimation is typically conducted using lo-cal (e.g., LBFGS [16]) or global (e.g., Simulated Annealing [15]) optimization algorithms and is typically very time consuming, due to a parameter search space that increases exponentially with the number of model parameters. Additionally, many application do-mains exhibit a hierarchical data organization, with time series and forecast models on multiple levels. Here, the time series are aggre-gated along the hierarchy based on dimensional attributes such as location [14, 7, 8]. Forecasting in these environments is especially complex since it is necessary to involve data and entities across hi-erarchical levels and to ensure forecasting consistency among them.
In the energy domain accurate forecasts are of special impor-tance, because they are a fundamental pre-requisite for balancing energy consumption and production. Previously, with a predomi-nant usage of conventional energy sources, the energy supply could be almost perfectly matched to the energy demand. However, with an increasing share of renewable energy sources new requirements are posed on the balancing and forecasting process [24, 5, 3]. In-termittent renewable energy sources such as wind and solar power are subject to frequent and strong fluctuations and thus, their pro-duction is hard to predict [24, 3]. In addition, the amount of en-ergy storage is rather limited, which means that the energy from intermittent renewable energy sources must be directly used when it is available [3]. As a consequence, a continuous and more fine-grained balancing in real-time is required. Research projects such as MIRABEL [19] and MeRegio [18] develop advanced technolo-gies such as demand response systems and flexible energy requests [1, 2] to further address the challenges of real-time energy balanc-ing. A fundamental pre-requisite for these approaches is the avail-ability of current and accurate forecasts at any point in time.
We tackle the issue of constantly available accurate forecasts by introducing a novel hierarchical forecasting system that exploits the hierarchical organization of the energy market. The approach builds upon and enhances some early ideas [17]. We propose to de-centralize the forecasting calculation by deploying forecast models directly to the smart meters of customers. These individual cus-tomer forecast models reflect the energy consumption or production of its respective entity. Companies on higher hierarchical levels can utilize the individual customer models to form a global fore-cast model representing the measurements of all connected lower level entities. This merging process is several magnitudes less ex-pensive than the (re-)estimation of the forecast model parameters. Thus, with the help of our hierarchical forecasting system balanc-ing companies are able to rapidly calculate very accurate forecasts and with that we enable them to balance energy in real-time. Over-all, this paper makes the following contributions that also reflect the organization of the paper. First, we discuss the organization of the European energy market exploited in our hierarchical forecasting system in Section 2. Second, we introduce an efficient forecasting approach for hierarchical time series in Section 3. Third, we pro-Figure 1: Hierarchical EDMS from the MIRABEL project [2] pose a communication protocol enabling hierarchical forecasting in Section 4. Fourth, we present our experimental evaluation that sub-stantiates the benefits of our approach in Section 5. We also discuss related work in Section 6 and conclude the paper in Section 7.
In this paper we focus on the European energy market, which is currently changing very drastically with the goal of creating a com-petitive, sustainable and integrated single European energy market by 2014 [10, 21]. Since the energy market is hierarchically or-ganized, energy data management systems (EDMS) are typically organized accordingly. Figure 1 illustrates the hierarchical EDMS of the research project MIRABEL[19], which reflects a simplified version of the target role model for the European energy market [2, 6]. The lowest level nodes are made up by industrial energy pro-ducers as well as private and industrial consumers. Furthermore, customers consuming and producing energy (e.g., solar panels) at the same time are called prosumer. At this level, smart meters con-tinuously monitor the consumed or produced energy. Producers, consumers and prosumers are pooled into balance groups, with the goal of balancing the energy consumption and production within these groups. Companies taking the role of a balance responsible party (BRP) are managing the balance groups. The third level com-prises the transmission system operators (TSOs), which account for a stable operation of the grid and the transportation of electricity.
To allow efficient forecasting in hierarchical environments, we propose to exploit the hierarchical organization of time series and to decentralize the forecasting process. More specifically, the re-sponsibility to build and maintain a forecast model is pushed to the base level of the hierarchy. In the energy domain this is moti-vated by the fact that smart meters are expected to be widely de-ployed and thus, we can exploit their available computing capacity. Hence, next to their task of recording current measurements, smart meters gain the capability to predict the future consumption or pro-duction of a customer. The employed forecast models can be seen as a compact representation of the customer data and in an ideal case the forecast model describes values that are identical to the actual time series. While, in the real-world forecast models always exhibit a certain error, this error is typically reduced with an in-creasing aggregation level, since in the entirety single fluctuations are neutralized to a large extend. Accordingly, the idea is to trans-mit the forecast models of the single customers and aggregate them to directly determine a global forecast model describing the energy consumption and production of the entire group. Forecast model aggregation in this sense means, that each of the global forecast model components (i.e., the combination of a forecast model coef-ficient x and its parameter p ) is calculated using a weighted linear combination of the respective single customer components. Figure 2 compares our forecast model aggregation on the right-hand side, with the conventional model construction using time series aggre-gation on the left-hand side. Despite using the energy domain as an example, our approach can also be adapted to other application domains exhibiting hierarchical time series such as sales or retail.
The proposed forecast model aggregation is far less time con-suming compared to the conventional forecast model estimation. As a result, our hierarchical forecasting approach provides a very efficient way for higher-level entities to create accurate global fore-cast models in several orders of magnitudes less time (experiments in Section 5). In addition, our hierarchical forecasting approach enables a more dynamical communication between the entities on both layers. Instead of transmitting values in a fixed interval as typically done in the conventional approach, a lower level entity initiates an information exchange depending on the accuracy of its forecast model; as long as the base model is up-to-date there is no need to exchange information between the hierarchy levels.
Forecast model coefficients can be divided into endogenous and exogenous coefficients depending on their characteristics and their handling in forecast models. Endogenous coefficients describe the main time series that is aggregated through the hierarchical levels: x = P K k =1 x k . Typical endogenous coefficients in the energy do-main are energy consumption, seasonal information and past fore-cast errors. In contrast, exogenous coefficients describe an exter-nal factor influencing the main time series. Exogenous coefficients occur as additional time series or dummy variables (existence/non-existence using 0 or 1 ), where the external influence is determined by the combination of time series value and parameter value when using an additional time series and by the parameter value only when using a dummy variable. Typical examples for exogenous coefficients are the current day of the week (dummy variable, e.g., Monday= 0 or 1 ) or the temperature (time series, e.g., temperature at customer k is 15  X  C ). External influences are typically aggre-gated by using the average of all entities: x = 1 k P K k =1
Creating aggregated global time series x ( t i ) on a higher level means to sum the time series of all lower level entities x k referring to the k-th customer and t to the current point in time. Accordingly, following our assumption that a forecast model ap-proximately describes its underlying time series, we create the next level global forecast model M ( t i ) by aggregating the forecast mod-els of all lower level entities M k ( t i ) as illustrated in Equation 1. In the following, we omit the notation ( t i ) for readability reasons. A forecast model M can be divided into separate components M ( C 1 ,...,C n ) , where we define a model component C as a fore-cast model coefficient x combined with its parameter p so that C = p  X  x . A linear model a  X  x + b for example consist of two model components a  X  x and b (where the coefficient is 1 ). To create the global forecast model M , we separately aggregate the components C k of all corresponding lower level forecast models ( M k , k  X  K ), including their coefficients x k and parameters p k . Accordingly, the calculation of the global forecast model component C , which likewise consists of a global parameter p and a global aggregated coefficient x = P K k =1 x k , is defined as shown in Equation 2. Since the aggregated time series of the coefficient x is available to the upper level entity, the only missing factor for calculating a global forecast model component is the global parameter p . We adapt Equation 2, to define a general aggregation rule for determin-ing the parameter of a global forecast model component and arrive at Equation 3. Dividing the single entity time series value x the global aggregated time series coefficient x , as done in Equation 3, is equivalent to determining the current share of a single entity value on the global value. Thus, the global forecast model parame-ter p is derived by creating a linear combination of the single entity parameters multiplied by their share on the global time series. Equation 3 has the disadvantage of considering the coefficient val-ues of the individual entities x k and the values of the respective global coefficient x . Thus, we would have to request and process the current measurements of all lower level entities each time the global forecast model is adapted, which clearly contradicts to our target of a more efficient communication. To solve this issue, we approximate the current share ( x k /x ) of an individual entity by its average historic share (  X  ). Since the average share of an entity is typically relatively stable over time, it is not necessary to re-calculate it for every adaptation of the global forecast model. We define the historic share of an individual entity as: Thus, the average historic share of an entity is the ratio between the arithmetic mean over a time series sample ( 1 ...N ) of the single entity to the summed arithmetic mean of all entities. The sam-ple size is configuration-specific, where we found a sample size of one day as most beneficial. The necessary historic values for creating the average historic share  X  k are transmitted in conjunc-tion to the forecast models of individual entities. Accordingly, the initial share is determined during the system initialization, where the higher-level entities receive the forecast models and average historic values from all lower level entities. During runtime, we adapt the share of an individual entity, whenever it transmits an adapted forecast model. In the energy domain the determination of the shares is even simpler, because for billing purposes all lower level entities transmit their actual measurements once per account-ing period anyway. Since this transmission is done asynchronous to the forecasting process, it still increases the communication effi-ciency compared to transmitting values for every model adaptation. Using  X  k in Equation 3, we calculate the model parameters on the next level as a weighted linear combination as shown in Equation 5. The global forecast model is now created by applying the aggre-gation rule to all components of the model M ( C 1 ,...,C for aggregating an individual global forecast model component we plug in equation 5 into C = p  X  x and finally arrive at Equation 6. For exogenous coefficients we adapt Equation 3 to the fact that for this coefficient type customer values are aggregated instead of summed. Thus, x =  X  x = 1 K P K k =1 x k and the aggregation rule is: This means that we scale the parameters of exogenous coefficients by the ratio of the single entity value to the global average value  X  = x k /  X  x . Like for endogenous parameters we approximate the current ratio by the historic ratio based on entity values communi-cated during the last forecast model transmission. For exogenous coefficients exhibiting the same value for all entities (in most cases dummy variables), we can further simplify the aggregation rule. In this case the global parameters p can be calculated by simply sum-ming the parameters of the individual lower level entities.
With both aggregation rules, our hierarchical forecasting works for models involving either endogenous or exogenous coefficients. However, when combining both coefficient groups we found a lack in accuracy. The reason is a varying influence of each coefficient group that is usually automatically addressed during the conven-tional parameter estimation. Since we do not estimate the parame-ters in our hierarchical forecasting approach, we address this issue by introducing an influence weight for each coefficient group. Ac-cordingly, we adapt Equations 5 and 7 for endogenous coefficients p ( end ) and exogenous coefficients p ( exo ) respectively leading to: The weights  X  1 and  X  2 have to be estimated using optimization algorithms, but the estimation of two parameters is computation-ally very cheap, especially when compared to the large number of parameters typically estimated during conventional forecasting.
With our hierarchical forecasting approach it is possible to cre-ate higher-level forecast models without a time-intensive param-eter estimation. Our approach does not only work between con-secutive hierarchical levels, but across all hierarchy levels. Thus, in the energy domain balance responsible parties (BRP) as well as transmission system operators (TSO) are likewise enabled to rapidly provide accurate forecasts as needed for real-time balanc-ing. Also customers might benefit from the availability of forecast models in their smart meters, since smart home and smart building systems might use the forecasting capabilities to provide improved and enhanced functionalities. Even the usage of concepts such as the MIRABEL flex-offers or other demand-response systems [11] can be better implemented with the availability of local forecasts.
In this Section we specify the communication protocol for trans-mitting information between hierarchy levels. Previously the lower level entities provided measurements in fixed intervals (e.g., every 5 minutes). With our protocol we establish a more flexible com-munication, where information are only transmitted when they are needed. The protocol is illustrated in Figure 3. First, an initializa-tion is conducted when using our hierarchical forecasting for the first time or when a re-initialization is necessary (e.g., large organi-zational changes). (1) During the initialization the upper level en-tity requests the individual forecast models M k of all correspond-ing lower level entities. (2) The lower level entities estimate their forecast models and afterwards transmit the model parameters to the next level entity. (3) The higher-level entity creates its global forecast model M by aggregating all transmitted forecast models. Figure 3: Communication protocol for hierarchical forecasting (4a) During runtime the higher-level entities calculate forecasts based on the global forecast model M , (4b) while the lower level entities append new measurements to their time series. (5) The new values are used to evaluate the accuracy of the individual forecast models M k . (6) Whenever the forecast error k exceeds a spec-ified error threshold T , the respective entity adapts its forecast model M 0 k and transmits the adapted model to the next level en-tity. (7) The next level entity uses the received forecast model to adapt the global forecast model M . Our communication protocol also works between multiple hierarchy levels in a cascading way. The lowest level entities provide information to their second level entity, which adapts its global forecast model accordingly. After-wards the entity on the third level of the hierarchy is informed by the respective second level entity and so on.

For our approach to work we assume that higher-level entities still have access to the most recent aggregated time series (e.g., bal-ance group consumption, company revenue, global sales figures). This is the case in many application domains, since the time series at higher aggregation levels are recorded separately. In the energy domain for example, BRPs have metering devices at the level of their balance group. Recordings at this level are necessary to guar-antee the balancing of energy demand and supply for the entire group. In addition, with an increasing employment of smart grids, TSOs have much finer monitoring capabilities and could also pro-vide the necessary information to entities on other levels.
To sum up, our hierarchical communication protocol provides an efficient way for exchanging information within a hierarchy. In most cases it is sufficient to just transmit data when forecast models are adapted at lower level entities. While there might still be the need to transmit the actual measurements for accounting purposes, this transmission can be handled asynchronously and independent of the forecasting calculation. Data can for example be transmitted and processed in a bulk mode when free resources are available.
In our experimental evaluation we show that our hierarchical forecasting approach can rapidly calculate forecasting results, while still providing a high accuracy. In this evaluation we use two fore-cast models the Double Seasonal HWT (DSHWT) and the multi-equation EGRV forecast model [22]. The single-equation DSHWT model as introduced by Taylor et al. is a domain-specific adap-tation of the general Holt-Winters exponential smoothing model [23]. It exhibits four parameters and includes the daily and the weekly season. The EGRV model uses a separate sub-model per hour and different models for working days and weekends. This results in a total number of 48 sub-models. For our evaluation we did not consider temperature data. Altogether, our implementation of the EGRV model exhibits 28 parameters in total. The parameter estimation was conducted using the local Nelder Mead Downhill Simplex algorithm [20] and the global simulated annealing [15] algorithm. For the global simulated annealing algorithm we em-pirically determined a time budget, where we found a steady state of the forecast after around 90 seconds for the EGRV model and 17 seconds for the DSHWT model. Accordingly, we set the time budget to 100 seconds and 20 seconds respectively.
 The basis for our evaluation is the real-world data set from the MeRegio project [18]. The data set contains the hourly energy de-mand of 86 private customers from the 1 st Novermber 2009 to the 22 nd March 2010. For the lowest level in the hierarchy we directly used the 86 customers from the MeRegio data set. To form the sec-ond level entity, we aggregated the time series of all 86 customers. While this data set is rather small, it still shows the applicability and advantages of our approach on a real-world data set. Larger datasets will lead to an even larger benefit.

The results are presented with respect to forecast error and ef-ficiency. We measured the forecast error using the SMAPE error metric [13]. The efficiency is represented by the execution time as well as the number of iterations the respective optimization algo-rithms needed. The results are the average of multiple runs from different starting points and 30 repetitions. For the experiments we used an Intel Core 2 Duo P8400 (2.26 GHz), 8 GB RAM, Mac OSX 10.7. The prototype was implemented in C++ using gcc 4.2.1.
In this experiment we compare our hierarchical forecasting to conventional forecasting using the DSHWT model. For the hi-erarchical forecasting, we first estimated the parameters of all 86 customer forecast models and aggregated them to form the second level model. The DSHWT model contains endogenous parameters only, which means that solely Equation 5 applies. For the conven-tional forecasting we estimated the second level model using the local Nelder Mead and the global Simulated Annealing algorithm.
The results are illustrated in Figure 4, where Figure 4(a) com-pares the runtime for the Nelder Mead algorithm and Figures 4(b) and 4(c) compare the final accuracy. We can see that our hierar-chical forecasting is multiple orders of magnitudes faster than the conventional parameter estimation. The model aggregation takes only 0.16 ms compared to 3,400 ms when using the Nelder Mead algorithm. For a larger number of values the runtime difference is expected to even increase, since the conventional parameter estima-tion iterates over the dataset multiple times. In contrast, the model aggregation does not iterate over the time series and thus, remains stable with an increasing number of values. However, an increasing number of entities slightly increases the time for solving a weighted linear combination, but this remains computationally inexpensive, compared to a parameter estimation using optimization algorithms.
With respect to the accuracy, our hierarchical forecasting pro-vides almost as accurate results as the conventional forecasting. The forecast error increases only slightly by 0.04% compared to the regular estimation using the Nelder Mead algorithm. For Sim-ulated Annealing, the accuracy also differs only marginally. Our hierarchical forecasting exhibits an error of 3.73% and the conven-tional estimation provides an error of 3.62%. We also evaluated the accuracy, when significantly reducing the time budget for the Simu-lated Annealing algorithm to only 4 s (hierarchical forecasting took 0.16 ms). In this case, the forecast error increases to 4.20%. Thus, it is not possible to conform the runtime of Simulated Annealing to our hierarchical forecasting without sacrificing accuracy. As a result, for the single-equation DSHWT model we can significantly reduce the runtime, while still providing a high accuracy.
In this experiment we compare our hierarchical forecasting to the conventional parameter estimation using the EGRV model. The general settings for this experiment are the same as for the DSHWT model. However, since the EGRV model contains both exogenous and endogenous coefficients, we also compared the accuracy when using our weighted aggregation described in Equation 8.

The results are illustrated in Figure 5, where Figure 5(a) com-pares the runtime when using the Nelder Mead algorithm and Fig-ures 5(b) and 5(c) present the accuracy results. The hierarchical forecasting (Aggregation) exhibits the best runtime with only re-quiring 0.86 ms, while the conventional estimation using Nelder Mead required 11,900 ms. However, the sole aggregation caused a substantial increase of the forecast error to 8.10% compared to 3.39% when estimating the parameters. The results are similar when using Simulated Annealing (hierarchical forecasting: 8.42%, estimation: 3.57%). The weighted aggregation significantly re-duces the forecast error to 3.72% and 3.73% respectively, which brings it very close to the conventional estimation again. Hence, the experiment clearly shows the need for the weighted aggrega-tion when dealing with forecast models comprising both coeffi-cient types. At the same time the weighted aggregation requires to estimate two weights for the two parameter groups, which in-creases the runtime to 300 ms. However, the weighted aggregation is still several magnitudes cheaper in both the runtime (300 ms vs 11,900 ms) and the number of iterations (61 iterations vs. 2,144 iterations). We also again evaluated the accuracy when reducing the time budget for the Simulated Annealing algorithm from 100 s (326,983 iterations) to 20 s (63,475 iterations). This reduction sig-nificantly increased the forecast error to 17.10%, which means a drastic drop in accuracy.

As a result, for the EGRV model our hierarchical forecasting again provides a significant runtime improvement, allowing an al-most instant calculation of accurate forecasts. However, to still allow for a high accuracy, the separate weighting of both param-eter groups is very important. Overall, the accuracy difference is slightly higher than for the DSHWT forecast model, but still well in range given the significant runtime benefits.
Forecasting of hierarchical time series is an emerging issue that gains more and more attention in research and industry. Multi-ple studies [4, 9, 25] analyzed this topic and especially examined the most beneficial aggregation. In general, they distinguish be-tween bottom-up and top-down approaches. Using the bottom-up approach forecasts are calculated at the lowest level and aggregated through the hierarchy. In contrast, using the top-down approach forecasts are calculated at the top level and disaggregated to lower levels. The studies do not arrive at a common solution since it is not ultimately decidable which approach is more beneficial.
Hyndman et al. [14] propose a hierarchical forecasting that aims at providing a better accuracy than either a complete top-down or bottom-up approach. They calculate independent forecasts on all hierarchical level and combine them in accordance to the hierarchi-cal structure using a regression model. In contrast to our approach, Hyndman et al. aim at increasing the forecasting accuracy instead of optimizing the efficiency. In particular, their approach is more expensive, since they estimate models on all hierarchical levels.
Recently, Fischer et al [7] published a hierarchical forecasting approach that uses only a sample of base models. Forecasts on a specific hierarchy level may be based on a subset of optimized models on other levels. Despite limiting the number of base mod-els they achieved a reliable accuracy comparable to aggregating all base models. In contrast to our approach, the concept of Fischer et al. is based on aggregating time series, instead of aggregating fore-cast models. Thus, all forecast models involved are estimated us-ing numerical optimization algorithms. In addition, we only trans-mit information through the hierarchy, when forecast models were changed, while Fischer et al. transmit data for any forecasting cal-culation. In general, they aim at increasing the forecasting accuracy rather than the forecasting efficiency.
In this paper, we presented a novel hierarchical forecasting ap-proach that substantially increases the forecast calculation efficiency for higher-level entities. The core idea of our approach is to decen-tralize the forecast process and to distribute the responsibility for building and maintaining forecast models to the lowest level of the hierarchy. Our approach is motivated by the energy domain, where smart meters are more and more deployed to private and industrial customers. Smart meters provide some data processing capabil-ities that we exploit for maintaining individual customer forecast models. These individual forecast models are utilized on higher hierarchy levels to rapidly create global forecast models without conducting a time-consuming parameter estimation. Thus, with the help of our approach we significantly reduce the time for calculat-ing forecasts. In addition, we defined a communication protocol, increasing the flexibility of the forecasting related communication within the hierarchy. In our experiments we demonstrated that our hierarchical forecasting approach significantly reduces the time for calculating forecasting results, while still providing a very high ac-curacy. Despite describing our approach exemplarily by means of the energy domain, it can be easily adapted to other application domains such as the retail domain.

In the future we want to enhance our approach by allowing the use of heterogeneous forecast models on the different hierarchical levels. There, we want to capture the gradient of forecast model adaptations and exploit this information to ease the estimation of different forecast models on higher hierarchical levels. Addition-ally, we plan to examine if we can determine the global forecast model when only using a subset of the base models. The work presented in this paper has been carried out in the MIRABEL project funded by the EU under the grant agreement number 248195. [1] H. Berthold, M. Boehm, L. Dannecker, F.-J. Rumph, T. B. [2] M. Boehm, L. Dannecker, A. Doms, E. Dovgan, B. Filipic, [3] M. Cailliau, J. A. Ogando, H. Egeland, R. Ferreira, H. Feuk, [4] D. M. Dunn, W. H. Williams, and T. L. DeChaine. Aggregate [5] ENTSO-E. Scenario Outlook and System Adequacy Forecast [6] ENTSO-E -European Network of Transmission System [7] U. Fischer, F. Rosenthal, and W. Lehner. Sample-based [8] U. Fischer, C. Schildt, C. Hartmann, and W. Lehner. [9] G. Fliedner. Hierarchical forecasting issues and use [10] General Secretariat of the Council. European council 4 [11] B. Gnauk, L. Dannecker, and M. Hahmann. Leveraging [12] J. G. D. Gooijer and R. J. Hyndman. 25 years of time series [13] R. J. Hyndman. Another look at forecast-accuracy metrics [14] R. J. Hyndman, R. A. Ahmed, G. Athanasopoulos, and H. L. [15] S. Kirkpatrick, C. D. Gelatt, and M. P. Vecchi. Optimization [16] D. Liu and J. Nocedal. On the limited memory bfgs method [17] R. Lorenz, L. Dannecker, P. Roesch, W. Lehner, and [18] MeRegio Project. http://www.meregio.de/en/, 2012. [19] MIRABEL Project. http://www.mirabel-project.eu, 2013. [20] J. A. Nelder and R. Mead. A simplex method for function [21] I. Pineda and P. Wilczek. Creating the interal energy market: [22] R. Ramanathan, R. Engle, C. W. Granger, F. Vahid-Araghi, [23] J. W. Taylor. Triple seasonal methods for short-term [24] J. Wilkes, J. Moccia, and M. Dragan. Wind in power: 2011 [25] A. Zellner and J. Tobias. A note on aggregation,
