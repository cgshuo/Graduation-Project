 ORIGINAL PAPER Haikal El Abed  X  Monji Kherallah  X  Volker M X rgner  X  Adel M. Alimi Abstract This paper describes the on-line Arabic handwriting recognition competition held at tenth Interna-tional Conference on Document Analysis and Recognition (ICDAR in Proceedings of the 10th international conference on document analysis and recognition, vol 3, pp 1388 X 1392, 2009). This first competition uses the so-called ADAB data-basewithArabicon-linehandwrittenwords.Atthisfirstcom-petition, 3 groups with 7 different systems have participated. The systems were tested on known data (training datasets made available for the participants, sets 1 to 3) and on one test dataset that is unknown to all participants (set 4). The systems are compared on the most important characteristic of classification systems, the recognition rate. Additionally, the relative speed of the different systems was compared. A short description of the participating groups, their sys-tems, the experimental setup, and the performed results is presented.
 Keywords On-line Arabic handwriting recognition  X  Competition  X  System evaluation 1 Introduction Automatic recognition of handwritten words can be classi-fied into two different approaches. The first approach, off-line, uses the images as input for the recognition steps. The second approach, on-line, uses the trace of a pen for the classification and recognition of the input information. This field remains a challenging task even though the latest improvements of recognition methods and systems are very promising. Some of the pioneers in this field have started with standard methods adapted from the field of off-line handwritten text/character recognition. In the early 90 years, El-Wakil and Shoukry [ 16 ] report on-line Arabic charac-ter recognition rates of about 84% with a classifier using a matching table which has a tree-like structure. The first level of this tree contains ten different feature vectors of the characters, which group the characters into ten different clas-ses, the second level include a prototype character for each group of similar characters, and the third level represents the elements of each class. In the same research direction, El-Sheikh and El-Taweel [ 15 ] have presented an hierarchi-cal classifier for real-time recognition of Arabic handwrit-ten characters based on simple aspects of the Arabic text. They divide each character set (they defined 4 sets depend-ing of the position of the character in the word) into four subsets depending on the number of strokes, and they use several simple global features, such the ratio between width and height or its inverse, the number and sequence of min-ima and/or maxima in the x and/or y directions of the main stroke, for the classification. Based on the same idea of a tree structure, Al-Emami and Usher [ 1 ] used a decision tree to store the information (features) of a character in the train-ing phase. The feature vector for each character includes a number of direction codes and separation codes. Alimi et al. [ 2 , 3 ] have used new innovative method based on Neuro-Fuzzy approach. They report the first experiments and results on word recognition using an implicit segmentation phase in their system. Using as features for each character, the neuro-physiological parameters represented in the descrip-tion of the curvilinear velocity of the script and for the classification a Beta fuzzy neural network, the authors reported very promising results.

In the last years, the major part of published work have reported systems based on statistical approaches using stan-dard used methods, like hidden Markov models (HMM) or neural networks for the recognition of on-line cursive scripts. Halavati et al. [ 23 ] present an approach for the recognition of on-line Persian handwritten text based on the representa-tion of input tokens with simple features and comparison of these representations with patterns of the same form. For the Persian handwritten text, a second approach is presented by Baghshah et al. [ 5 ]. This approach is based on fuzzy linguistic modeling and was tested on a database of isolated characters written by 128 persons [ 32 ]. Biadsy et al. [ 6 ] present a system for the recognition of Arabic words based on HMMs using a feature vector which contains three features from the point sequence (for each point, the local-angle, super-segment, and loop-presence are calculated). For the training and test phases, a collection of 800 and 2,358 words, respectively, are used. Based on the HMMs system, Al-Habian and Assaleh [ 17 ] discuss the use of feature vector extracted from a sliding window on the reconstituted image of the on-line text. Daifal-lah et al. [ 9 ] adopt the same approach based on HMMs to clas-sify on-line Arabic characters without dots. The evaluation of the presented system was limited to 150 words. The same problem of the availability of benchmarking data was men-tioned by Alsallakh and Safadi [ 4 ]. They presented a multi-level classifier for on-line handwritten text based on Dynamic Time Warping (DTW), and they collect a small corpus for the evaluation of their system. Sternby et al. [ 33 ] present a new template matching scheme and applied to the recogni-tion of cursive Arabic script. The new systems is tested on a dataset consisting of 40 persons entering words from a list of 66 Arabic words (totally 1,578 samples) and a collection of the isolated forms of single characters. The authors report character recognition rates of 94.8% and word recognition rates of about 92%.

Especially for the automatic recognition of on-line Arabic handwritten words, a lot of work has still to be done. Com-pared to English text where handwritten databases for words and numbers have been publicly available for a long time (UNIPEN [ 22 ] and IRONOFF [ 34 ]), the situation for Arabic today is quite different. In the case of Arabic handwritten text, the mentioned works use a specific, more or less small and private datasets. This fact have motivate us to collect a database for on-line Arabic handwritten text and to make it freely available for the research community. The series of competition for Arabic handwriting recognition systems has shown a positive effect for the improvement of recognition systems. At the first Competition organized on the ICDAR 2005 [ 31 ], only 5 systems have participated; in the second competition, 2007 [ 30 ], more than 14 systems have partici-pated and the performances are better. This improvement of theperformanceofrecognitionsystems[ 11 , 12 , 14 ]motivates us to organize the first on-line Arabic handwriting recogni-tion competition [ 10 ].

This paper is organized as follows. In Sect. 2 , details of the new ADAB database and the competition test sets are presented. Section 3 presents the participating groups and a short description of their systems. Section 4 describes the different tests and discusses the results performed with the different systems. Finally, the paper ends with some conclud-ing remarks. 2 The ADAB database The database ADAB (Arabic DAtaBase) [ 10 ] was developed to advance the research and development of Arabic on-line handwritten text recognition systems. This database is devel-oped in a cooperation between the Institut f X r Nachrichten-technik (IfN) and the Ecole Nationale d X  X ng X nieurs de Sfax (ENIS), Research Group on Intelligent Machines (REGIM), Sfax, Tunisia.

The database in version 1.0 consists of 15,158 Arabic words handwritten by more than 130 different writers, most of them selected from the narrower range of the l X  X cole Nationale d X  X ng X nieurs de Sfax (ENIS). The text written is from 937 Tunisian town/village names. We have started the collection of data with Tunisian writer due to the fact that the Tunisian writing style is easy and comparable to the printed one. We plan to extend this database with other Ara-bic writing style. For this reason, we have developed spe-cial tools for the collection of the data and verification of the ground truth, which will be available for other groups for the collection of their own data in the same form of the ADAB database. These tools give the possibilities to record the on-line written data, to save some writer information, to select the lexicon for the collection, and to re-write and correct wrong written text. Ground truth was added to the text information automatically from the selected lexicon and verified manually.

The ADAB database is freely available for non-commercial research ( http://adab.regim.org ). The test dataset will be available at the end of 2010. 2.1 Data collection and verification 2.1.1 Collection tool Our aim was to collect database of handwritten town names written in a similar quality as town names of an PDA or Mobile Phone with an digital input device. The collection tool was designed to:  X  encourage writing without strong constraints  X  collect writing similar to writing on a PDA  X  be easy to process automatically  X  provide additional information about the writer. 2.1.2 Pre-Label With the knowledge of the displayed word in the collec-tion tool, each file is automatically assigned a pre-label. The pre-label of the file consists of the postcode, the word in a sequence of Numeric Character References (NCR). The label information are stored in the UPX file format, for each writ-ten word an InkML file including trajectory information, an UPX file including information about data, writer and label details, and a plot image of the word trajectory. Table 1 shows an example word from the ADAB database including the tra-jectory code, the NCR code, and the corresponding image. 2.1.3 Verification Due to the variability of handwriting or simply due to writing errors, the pre-labels do not always match the handwritten word. Therefore, manual verification is needed to obtain a label that matches the handwritten word character sequence. For this step, we have implemented a verification interface including the pre-labeled text and the corresponding plotted image from the written word. 2.2 Training data The ADAB database in version 1.0 is spilted in 3 sets. Details about the number of files, words, characters, and writers for each set 1 to 3 are shown in Table 2 . 2.3 New datasets New data that are unknown to all participants were collected for the processing of the ICDAR 2009 competition. Again, the words are selected from the same lexicon, however, writ-ten by new writers. These data are included into set 4. Sets t and t 1 are generated from all sets 1 to 3 to measure the processing time of the participant systems. Table 3 shows the size and the numbers of characters. Set 4 is collected in Braunschweig, with writers coming from Tunisia. 3 Participating systems The following section gives a brief description of the sys-tems submitted to the competition. Some groups (2 industrial groups and 2 research groups) have decided after the first tests not to participate at this competition. It is the first time to compare on-line Arabic handwriting recognition systems, and we hope that next time all participants will give detailed information about their systems, when it is clear that the competition is objective and useful for participants and for the research community. Table 4 summarizes the description of the methods used by the participating systems. 3.1 VisionObjects The developers of the system  X  X isionObjects X  have built a cursive Arabic handwriting recognition system for this com-petition based on MyScript handwriting recognition tech-nology (Fig. 1 ). The overall system follows the following concepts:  X  use of a modular and hierarchical recognition system,  X  use of soft decisions (often probabilistic) and deferred  X  use of complementary information at all stages of the  X  use of global optimization criteria, making sure that the
The processing chain of the recognizer starts out with some of the usual preprocessing operations, such as ink smoothing and reference line detection. Then, the on-line handwriting is pre-segmented into strokes and sub-strokes. The general idea is to over-segment the signal and let the recognizer decide later on where the boundaries between characters and words are. Here, specific techniques for processing diacritical marks have been employed to assure the proper association between letters and their diacritical marks. This segmentation stage is followed by the feature extraction stage. Feature sets use a combination of on-line and off-line information at various resolutions, including some higher level structural features. The feature sets are processed by a set of character classifiers, which use Neu-ral Networks and other pattern recognition paradigms. The total number of characters classes is 150, which corresponds to the number of Arabic letters multiplied by the number of different shapes for each letter (initial, medial, final, and isolated), plus some other symbols encountered in Tunisian cities like digits or the Latin letter  X  X  X . All the information accumulated in the various processing steps is then processed by dynamic programming on the word and sentence level in order to generate character, word, and sentence-level candi-dates with corresponding confidence scores. A global dis-criminant training scheme on the word level with automatic learning of all classifier parameters and meta-parameters of the recognizer is employed for the overall training of the recognizer. For the recognition process, a lexicon containing around 1,000 Tunisian city names is employed.

The authors have designed the recognizer according to two different criteria. The first system (VisionObjects-1) provides the best accuracy, whereas the second system (VisionObjects-2) is faster in exchange for a somewhat lower accuracy. The recognition results and the speed of the sys-tems of this group are summarized in Table 5 . 3.2 MDLSTM The MDLSTM system is submitted by Alex Graves (TU Munich, Germany). It is a multilingual handwriting rec-ognition system based on a hierarchy of multidimensional recurrent neural networks [ 18 , 20 ]. It can accept either on-line or off-line handwriting data and in both cases works directly on the raw input (i.e. the pixel values or the sequence of pen positions) with no preprocessing or feature extraction. It uses the multidimensional Long Short-Term Memory net-work architecture [ 18 , 20 ], an extension of Long Short-Term Memory [ 25 ] to data with more than one spatio-temporal dimension. In the case of handwriting recognition the net-works are either one dimensional (for on-line data) or two dimensional (for off-line images). The basic structure of the system, including the hidden layer architecture and the hier-archical subsampling method is described in [ 21 ]. However, the exact parameters (e.g. size of hidden layers, size of sub-sampling blocks) varied from experiment to experiment. In addition, the choice of output layer and objective function used for training depend on the network task.

Connectionist Temporal Classification [ 18 , 19 ] is an recur-rent neural network output layer designed for labeling sequences of data whose segmentation is ambiguous or diffi-cult to determine, e.g. speech signals or cursive handwriting. It trains the network to map directly from the input sequence to a probability distribution over output label sequences and therefore does not require either pre-segmentation or post-processing. Figure 2 gives a graphical representation of the MDLSTM recognition system:  X  X irst the input image is col-lected into boxes 3 pixels wide and 4 pixels high which are then scanned by four MDLSTM layers. The activations of the cells in each layer are displayed separately, and the arrows in the corners indicate the scanning direction. Next the MDLSTM activations are gathered into 4  X  3 boxes and fed to a feed forward layer of tanh summation units. This process is repeated two more times, until the final MDLSTM activations are collapsed to a 1D sequence and transcribed by the CTC layer (Connectionist Temporal Classification). In this case all characters are correctly labelled except the second last one, and the correct town name is chosen from the dictionary X  [ 21 ].

Fortheon-lineArabicrecognitioncompetition,twodiffer-ent recognizers were created. The first one ( X  X DLSTM-1 X ) uses the on-line data to create off-line images and then transcribes these using the standard hierarchy of 2D RNNs described earlier. The second ( X  X DLSTM-2 X ) transcribes the on-line data directly, using a hierarchy of 1D RNNs. 1D RNNs have previously proved effective for on-line handwrit-ing [ 18 , 21 ], but this is the first time a hierarchical structure has been used. The recognition results and the speed of the systems of this group are summarized in Table 6 . 3.3 REGIM 3.3.1 REGIM-HTK The REGIM-HTK is submitted by Abdelkarim ElBaati, Monji Kherlallah, Houcine Boubaker, Mahdi Hamdani, and Adel M. Alimi. This system is based on the features extracted from the temporal order of the trajectory of a word [ 13 ].
A study made on the neuronal and muscular effect shows that the pen velocity decreases at the begin and end strokes and in significant angular variations of the curve. To benefit from dynamic information, the authors make a sampling operation by the consideration of trajectory curvatures. Stud-ies established initially by Lacquaniti et al. [ 29 ], then by Viviani et al. [ 36 ], showed the existence of a correlation between the angular velocity V  X  ( t ) and the curve C ( t correlation is named the law of two thirds power. The authors propose, in this process, to sample with fixed time interval (sampling step), the rebuilt trajectory, by traversing it with a curvilinear velocity that checks the law of two thirds (corre-spondence between velocity and curvature radius) [ 13 ].
After that, the curvilinear velocity signals and uses the beta-elliptical modeling [ 27 ] to calculate the features for each word. This approach is validated by HTK-based recognition system [ 24 ]. Figure 3 shows a block diagram of the recogni-tion process. 3.3.2 REGIM-CV The REGIM-CV system is submitted by Monji Kherlal-lah, Fatma Bouri, Houcien Boubaker, and Adel M. Alimi (REGIM, University of Sfax, Tunisia). This system is based on the idea to observe visually the writing process on an ordinary paper and to automatically recover the pen tra-jectory from numerical tablet sequences. On the basis of this work, the authors developed a handwriting recogni-tion system based on visual coding and fitness evaluation function. The system is applied on Arabic script. The first step of the encoding system is consisting of the smoothing, normalization, base line detection, beta-elliptical modeling, and visual indices attribution [ 7 , 8 , 28 ]. The second step is based on visual indices similarity in order to calculate the evaluation function [ 26 ]. A hierarchical architecture of the ADAB database is designed as a learning phase. This repar-tition is depending on stroke number inspection. The authors optimize the times cooling of their system to give the final output (Proposed words). 3.3.3 REGIM-CV-HTK The REGIM-HTK-CV system is submitted by Mahdi Hamdani, Lobna Haddad, Houcine Boubaker, Monji Khe-rlallah and Adel M. Alimi (REGIM, University of Sfax). This recognition system has -as propose-to observe visually the writing process on an ordinary paper and to automatically recover the pen trajectory from numerical tablet sequences. On the basis of this work, the authors developed a hand-writing recognition system based on visual coding and HTK system. The system is applied on Arabic script. The first step of the encoding system consists of the smoothing, normaliza-tion, base line detection, beta-elliptical modeling, and visual indices attribution [ 7 , 8 , 26 , 28 ]. The second step is based on HMM classifier [ 24 ].

The recognition results and the speed of the systems of this group (systems REGIM-HTK, REGIM-CV and REGIM-CV-HTK) are summarized in Table 7 . 4 Tests and results We evaluated the performance of the 7 different Arabic hand-writing recognition systems in three steps. In a first step, we used a subset and then the training data sets 1 to 3 of the ADAB database for a function check of the systems on our competition environment. After the confirmation from the participants that this first tests are conform to the results per-formed on participant local environment, we have started the competition tests. In this second step, we used the new test dataset set 4, unknown to all participants to test the recogni-tion rates of participant systems. In a third step, the process-ing performance of the systems was compared on two data subsets t and t 1 . 4.1 General remarks To reach an optimal result and due to different processing time, the competition was organized in a closed mode. All participants sent us running versions of their recognition sys-tems trained on all data (sets 1 to 3) of the ADAB database. The systems can be classified in two classes depending on the operating system: 3 systems are developed under Linux, 3 under Microsoft Windows environment. A first set with 100 input files selected from the training sets was used to test the basic functionality of the systems on our competition envi-ronment. All systems passed this test. The second Function test was performed on the training sets 1 to 3 of the ADAB database with all systems. 4.2 Recognition results The most important results of our tests are shown in Tables 8 , 9 , 10 . For each test, the best result is marked in bold font. The results present the word recognition rates in %. 4.3 Tests with known data (sets 1 to 3) The comparison of the systems based on the results of sets 1 to 3, which are part of the training set, shows 3 systems with a recognition rate better than 99% on sets 1 to 3. Two sys-tems have a recognition rate less than 60% on sets 1 to 3. It is interesting to see that the results of the system REGIM-CV on the sets 1 to 3 on top 1.
 4.4 Main test (set 4) The most important test to compare the different systems is of course the test using the new set 4. The features of this set should be similar to sets 1 to 3, as it was collected with writer from the same country. Table 9 shows some interesting results:  X  Four systems have more than 95% recognition rate on  X  the variation of best system between top 1, top 5, and  X  one system lost about 75% compared to sets 1 to 3 and one
The best system has a recognition rate of almost 4% higher than the second-best system. 4.5 Speed tests (sets t and t 1 ) The average processing time per name on the two test sets t (450 files) and t 1 (45 files), respectively, is shown in Table 10 . A substantial difference in speed can be observed. The slow-est system is about 100 times slower than the fastest one. An average processing time of 69 ms per name image is a very good result. 5 Conclusions The competition results show that on-line Arabic handwrit-ing recognition systems made a remarkable further progress. Most of the participating systems show a very high accuracy and some also a very high speed. Testing recognition sys-tems with large identical datasets is crucial for performance evaluation. Another challenge comes from their complexity, because they consist of many specialized parts solving very diverse tasks. The recognition rate is a convenient measure for comparing different systems, but it is a global parame-ter hardly significant for system component development. To improve the overall system quality, it is essential to know the effectiveness of its modules.
 References
