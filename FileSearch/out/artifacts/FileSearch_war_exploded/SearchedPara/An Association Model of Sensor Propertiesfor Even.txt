 A sensor network, from the perspectiv e of pervasive computing, provides an effective tool for interacting with the phys ical world [1]. Several wide-area phe-nomena, such as forest fires, typhoons, floods and fumes, cause widespread de-struction and distress. These phenomena are usually quite difficult to predict or detect in time. However, the self-organizing and auto-coordinating capabilities of sensor networks make these networks suitable for offering timely informa-tion about such phenomena and thus reducing economic losses due to natural calamities.

Inviewoftheterribleconse quence of environmental disasters, the sensitiv-ity of energy-constrained sensor networks is highly required in such disaster-monitoring applications, largely depending on distinct sensor data streams [2], application-specific event models and available data processing models [3]. As disasters are differentiated by frequency , intensity, duration, spreading speed, and so on, any of these distinctions would directly affect sensing strategy and routing protocol of the sensor network. In our work, we monitor a class of dif-fusing events and make emergency alert via an event diffusion spotting sensor network. Here, the term of  X  X iffusing event X  is defined by the influential range of the event, i.e., the range of the event expands as time goes by. Liquid/gas diffusion and sound/noise propagation a re representative diffusing events.
In such kind of urgency-triggered sensor networks, the data-centric nature is most essential, since the emergency notification is much more important than energy conservation. In our work, therefo re, we aim at capturing urgent diffusing events and sending out timely report. Our approach is based on an association model of sensor properties to detect and notify diffusing events with high effi-ciency, i.e., trying to fully exploit the relationships of sensor data streams and corresponding environmental events. The main objectives and contributions of this paper are as follows:  X  We target at a group of disaster monitoring applications and adopt an event  X  We exploit sensor properties and integrate information into an association  X  Based upon the association framework, we devise window-based in-network
The rest of this paper is organized as follows: In Section 2 we illustrate a  X  X ume diffusion detection X  scenario, followed b y the event model and network structure. In Section 3, an association model of sensor data and network behaviors is designed and window-based algorithms are presented for sensitive event diffusion spotting. The performance is evaluated in Section 4 . Related work is reviewed in Section 5, and finally, conclusions and future work are given in Section 6. Based on the idea of utilizing diffusion information as warning signals for the scale and trend of the upcoming or ongoing event, in this section, we first specify a fume diffusion detection scenario in Section 2.1, and then briefly discuss the event model and the network structure applied to our work in Section 2.2. 2.1 Fume Diffusion Detection Scenario Fume diffusion is a serious environmental problem, especially in dense populated places. As shown in Fig. 1, the black hole in the center denotes the source of the fume. The fume spreads in all directions, shown as the dotted circles around the hole. The region covered by these circles grows larger and larger, implying more and more sufferers involved in the danger of poisonous fume.
Apparently, the diffusion hints may contain potentially interdependent as-pects, e.g., wind force, temperature and gas concentration. Correspondingly, different function-based sensor nodes (ref. oval nodes with different-colored dia-monds in Fig. 1) conduct in-network information sharing and cooperation, even-tually producing a complete view of the diffusing event. In view of such heteroge-neous functions, parallel logical tiers are divided accordingly, shown as the solid and dashed lines in Fig. 1. Each tier re flects a certain para meter of the event. Information integration on all of the logical function tiers results in an extensive knowledge of the physical phenomenon, i.e., fume diffusion in this scenario.
Motivated by the sensitivity requireme nt, i.e., quick response of diffusing events, in such a network, in our work we attempt to exploit the association of the raw data collected by sensor nodes and the required behaviors for in-network cooperation, so that emergen cy events can be detected and notified before widespread fume diffusion. 2.2 Event Model and Network Structure A large number of environmental factors affects fume diffusion, including tem-perature, humidity, gas concentration, etc. In our current work, two major in-terrelated factors, temperature and gas concentration, are considered for sim-ple access to network sensitivity. Temper ature is measured by a threshold list, marked with ranks of possible danger. Gas concentration, on the other hand, is expressed by gas diffusion rate, defined by Formula (1).
 Suppose the fume is comprised of m ( m  X  1) kinds of gases { g i } m i =1 .InFor-mula(1), F i is the diffusion rate of g i , dc i /dx is the gradient of g i concentration, and D i is its diffusion coefficient, available in statistical environmental data. The minus sign in Formula (1) means that the gas spreads from dense place towards sparse place. In our work, for the sake of simplicity, F i is assumed to increase approximately with a constant r i = kr ,where k is a positive integer and r is the sensing radius of each sensor node, i.e., the event area grows (2 n  X  1)  X  ( kr ) 2 larger during the n th time unit.

In view of the diffusing effect and the predictable flexibility of network oper-ation, Fig. 2 gives the basic network structure. Sensor nodes are spontaneously organized as grid-based clusters (cf. clouds in Fig. 2). Every cluster is guaranteed to involve several function tiers and share local information among heterogeneous members. The cluster-leader is in charge of internal information aggregation and external communication. Clu ster-leaders may be elected according to various cri-teria, e.g., residual energy, possessive function points, and so on. Following our previous work [4], in this section, we extract the most significant sensor properties for association modelin g. Specifically, the properties are clas-sified in Section 3.1. An association model is established in Section 3.2, bridg-ing various properties and integrating comprehensive in-network information. Window-based cooperation strategies ar e devised accordingly in Section 3.3. 3.1 Property Sorting A sensor data item is essentially a repre sentation of some physical meaning, measured by elements such as the ones listed in Table 1.
 Here the inherent property concerns the physical meaning of a data item, e.g., temperature or concentration, corresponding to a function tier mentioned in Section 2.1. Meanwhile, as listed in Table 1, measurements of a certain physical meaning are grouped into data properties .
In the current paper we expand our approach to encompass the entire net-work. We introduce the notion of network property to represent node behaviors when an event is captured within the coverage of the network. The behaviors are highly related to the granularity of observed events. Here the granularity could be explained by a traffic-monitoring example [5]: suppose a node reports a  X  X ibration sensed X  event and then one of its neighbor nodes announces a  X  X ar detected X  event. As the former event is likely to be a signal of the latter one, the former would have a lower granularity than the latter. Such granularity re-lationship gives clues to infer the over all event from local information pieces. 3.2 Model Establishment To cover the three types of properties me ntioned in Section 3.1, our association model embodies two parts, a 3-D correlation model for inherent and data prop-erties and a hierarchical multi-path model for network property. The two parts are connected with bridging properties, chosen as  X  X ensor function X  in inherent property and  X  X ata value X  in data properties in our work.

The correlation model is sketched on the left hand of Fig. 3. It is displayed in a 3-D Cartesian coordinate system, with three axes denoting data properties. Here  X  X ime X  records when the data item is collected,  X  X istance X  describes how far the sensor is from its neighbors, and  X  X alue X  is the numerical quantity of the data item. In addition, the sensor function, representation of the inherent property, is a hidden parameter differentiated by line style of data streams.
Since nodes X  behaviors are highly related to the available event granularity, events are graded into different levels a ccordingly, as shown on the right hand of Fig. 3. Note that bridging properties constitute the foundation of event levels. Specifically, varied combination of sensor functions and relevant data values pro-duce different cases as triggers for different events. All of them form a hierarchical multi-path structure, functioning as guidance of nodes X  behaviors. 3.3 Window-Based In-Network Cooperation Strategies Employing the proposed association model, we introduce some window-based in-network cooperation str ategies for efficient event de tection and notification. The basic event format is as defined in T able 2, where  X  X ase X  involves thresh-olds of correlation values of sensor functions.  X  X evel.No. X  is set by a case or case combination and matched with association template in Fig. 3. During the matching process, we attempt to find out the highest available level (HAL) of events within sliding window. Such an HAL is utilized for timely event notifica-tion. Basically, sensor data streams wo uld be first processed on each sensor node, and then aggregated by cluster-leaders based on the association model. For the sake of energy efficiency, only the cluster-leaders on internal boundary of the event area are responsible for HAL notification. Details are listed in Algorithms 1  X  3.
 Algorithm 1. Adaptive linear regression on a single node Pre-configuration: window size m , basic threshold T , offset bound  X  . Input: sensing data sample sequence ( q 1 ,q 2 ,q 3 ... ).
 Output: event data points(marked by window(ID)).
 Procedure: between window ( i ) and window ( i +1). (1) Read m samples q i +1  X  q i + m . (2) Forecast the following m data items q  X  i + m +1  X  q  X  i +2 m by linear regression and then cache them. (5) If | T  X   X  T | &gt; X  Then output p i +1 = q ( i +1) m +1 as a representative event point of window ( i + 1) and mark window ( i +1); Else T  X  = T .
 Algorithm 2. Internal integration on cluster leader Pre-configuration: a constant-set for value adjustment {  X  f ( i ) } f f ( i )=1 ,where f is the total number of sensor functions.
 Input: all of the event points reported by cluster members ( p 1 ,p 2 ,p 3 ... ), where p = &lt;f i ,t i ,d i ,v i &gt; (ref. Table 1); association template (ref. Fig. 3). Output: HAL of the cluster at window (ID). Procedure: at the end of window i . (1) Function check: calculate distance-based average of data values of each (2) Case check: refer to the associatio n template to see whether the value combination of functions, {  X  v f ( j ) } , satisfy certain cases. (3) Find HAL : record Level.N o. list when satisfying certain cases, and match the association model level by level in a bottom-up way until reach HAL (cf. Fig. 3 and Fig. 4).
 Algorithm 3. Internal-boundary-cluster determination Pre-configuration: according to the network structure, a cluster is supposed to have at most four one-hop neighbor-clusters. Each cluster is identified by a number c k .
 Input: the HAL generated by the cluster itself self.HAL and HAL s produced by neighbor clusters { c k .HAL } .
 Output: internal boundary clusters at window (ID).
 Procedure: all of the inter-cluster operation is conducted by cluster-leader. (1) On receiving no message:
Send self.HAL to a one-hop neighbor c k at a fixed direction. (ref. Fig. 5) (2) On receiving c k .HAL : (2.1) If self.HAL &gt; c k .HAL Then self is on the internal boundary. (2.2) Else if self.HAL &lt; c k .HAL Then reply to c k to notify that c k is on the internal boundary.

Once validated as an internal boundary cluster, the cluster-leader should send out event notification to external clust ers. However, for the sake of energy effi-ciency, not all of the cluster-leaders on the internal boundary have to do so, as it is assumed that an event diffusion region naturally expands in all directions and thus no concave boundary exists. Therefore, it can be proved that there are higher probabilities of internal boundary leaders to have one or two external boundary neighbors as the event region extends. In densely populated sensor networks, the internal boundary nodes tend to have the highest chance to pos-sess two external boundary neighbors. To this end, we exploit two methods for event notification.
  X  X ethod1. Each internal boundary leader randomly selects one of its ex- X  X ethod2. Only the convex points, i.e., internal boundary leaders that have The performance is mainly evaluated d epending on the sensitivity of such an association model. Section 4.1 gives detailed sensitivity analysis on notification cooperation strategies. In Section 4.2, we consider the scalability of the available notification region for our proposed methods. 4.1 Sensitivity on Notification Cooperation Strategies Recall the fume diffusion detection scenario in Section 2.1. In our experiment, we configure three types of sen sors (temperature sensor t , concentration sensor of Gas g 1 and Gas g 2 ) in a grid network. Each sensor has two possible states, Events are consequently classified into three levels, with level 0 representing states of a single type, level 1 combining states of the three types, and level 2 distinguishing danger from safety. Table 3 gives the basic configuration of our experiment, where states at level 1 are combinations of ( t, g 1 ,g 2 ), and level 2 classifies events by the number of abnormal states. In addition, the two gases are supposed to diffuse at different speed, i.e., following Formula(1) with different c and D i . The experiment is conducted to verify the sensitivity at each level. We simulate a 17  X  17 grid network to carry on the experiment. In Table 3, the state information at level 0 is produced according to Algorithm 1. The results of levels 1 and 2 are obtained following Algorithm 2. Algorithm 3 and Method 1 or 2 are in charge of event notification.

Algorithm 1 is essentially implemented on each sensor node to measure a certain type of data. We adopt real-life sen sor data [9] to evaluate its performance in Fig. 6. From Fig. 6 we can see that the result accurately fits the source data. Moreover, the comm unication cost can be sharply reduced with an appropriate  X  and window-size. For example, when  X  = 2 and window-size=16, only 21 event data points are picked up for HAL analysis, with the capability of reflecting the diffusion trend of the entire 400 source data items.
In order to verify the performance of Algorithms 2 and 3 and Methods 1 and 2, as shown in Fig. 7, the total number of witnesses (nodes that detect events) and announcers (nodes that make event notification) reflects the cover-age of the detection and notification range in the sensor network. In comparison with the source HAL and the HALs produced by our cooperation strategies, it is notable that both methods exhibit a larger coverage than that of the event source, demonstrating the sensitivity of our window-based in-network coopera-tion strategies.
 4.2 Scalability of the Available Notification Region As it is very important to guarantee the energy efficiency when the sensor net-work grows large, we consider the scalability of our model mainly from the en-ergy perspective. Fig. 8 shows that the communication amount in both methods would not increase too much compared with the spreading of event source.
In addition, Method 2 increases much slower than Method 1 with respect to communication cost. Here, the communi cation cost is measured by the amount of message exchange. Therefore, Method 2 tends to have better scalability and energy-efficiency in emergency notification. Such an evaluation also sheds light on and confirms the scalability of our window-based in-network cooperation strategies with respect to our association model. A number of approaches have been proposed for event/outlier detection such as spurious measurement isolation [6], R-tree-based event region detection [7] and distributed deviation detection [8]. Such approaches address various ways of event detection. In our work, howeve r, a distinct perspective is adopted to focus on a suite of diffusing events, i.e., considering the characteristics of dif-fusing effects and thereby devising an a ssociation model for sensitive detec-tion/notification via sensor data mining techniques. There are traditionally five categories of major techniques for sensor data mining [10], from which linear forecasting is employed in our approach, as well as three kinds of popular data processing models [3], where sliding-window is utilized as basis of our strategies.
In addition, as it is anticipated that diverse information could be integrated to detect the diffusing event, stream analysis of heterogeneous data correlation is crucial for such information integration. Some methods for correlation processing have been proposed, including pipe-lined framework of spatial-temporal correla-tion processing [11], structure-based spatial sampling [12], cost-aware gathering strategies for correlated data [13], and etc. These approaches provide some hints on our design of window-based in-network cooperation strategies. Furthermore, the strategies proposed in this paper ar e, in principle, in accordance with the general association model of sensor properties for event diffusion spotting task. By leveraging traditional techniques for sensor data mining, in this paper we have focused on sensitive detection/notification of diffusing events through the alliance of heterogeneous information streams. Following our previous work on node architecture design for correlation exploitation [4], the concept of a function-based multi-tier sensor network has been proposed for event diffusion spotting ap-plications. Based on this concept, we ha ve devised an association model to bridge sensor readings and sensors X  correlated behaviors, and accordingly presented window-based in-network cooperation strategies for sensitive event diffusion spot-ting among different function-based sensor nodes.

We have shown the scalability of our strategies through experiments, while the robustness of the approaches is yet to be demonstrated by further experiments as well as theoretical study. Meanwhile, we also plan to elaborate the association model on its consistency for context-se nsitive sensor data in our subsequent research.
 Acknowledgments. The authors would like to thanks Prof.s Elisa Bertino and Yanchun Zhang for their useful and constructive comments on an earlier version of this paper. The work of this paper has been supported, in part, by the National Basic Research Fund of China ( X 973 X  Program) under Gra nt No.2003CB317006.
