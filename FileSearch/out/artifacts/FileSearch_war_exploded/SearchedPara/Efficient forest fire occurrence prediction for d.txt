 1. Introduction
Artificial neural networks (ANN) and support vector machines (SVM) have been showing impressive diversity in their applica-tions. In traffic engineering, Mazloumi et al. (2011) showed that
ANN have high ability to predict bus travel time. While in biomedical engineering,  X  Ubeyli (2008) used SVM to classify ECG signal between normal and epileptic. His reported accuracy of prediction was as high as 99.5%. SVM has also shown high accuracy in agitation detection for people with dementia ( Sakr et al., 2010 ). In this paper we show that ANN and SVM can be used for ecological purposes to predict forest fires occurrence, based on weather data.

Forest fires are an integral part of many terrestrial ecosystems such as boreal forests, temperate forests, Mediterranean ecosys-tems, savannas and grasslands, among others. Fires in the Med-iterranean basin account for a significant percentage of total fires occurring worldwide ( Mitri and Gitas, 2004 ). Forest fire occur-rence prediction, prevention and management measures have become increasingly important. Systems for forest fire danger prediction represent an essential tool to predict forest fire dangers, back up the forest fire monitoring and extinction phase, and it assists in the fire control planning and resource allocation ( Alonso-Betanzos et al., 2003 ). Most industrial countries have in place prediction systems of forest fire occurrence involving a large number of monitored features and comprising weather prediction mechanisms. However, the majority of developing countries and countries in transition cannot afford the use of such systems due to lack in technical resources. This leads to a new trend in supporting new approaches in forest fire occurrence prediction and considering a reduced number of monitored features. The discussion about forest fire occurrence prediction can be divided into forest fire occurrence prediction systems and indices and artificial intelligence for forest fire occurrence prediction. 1.1. Forest fire occurrence prediction systems and indices The first fire danger system was installed in Australia and North America. Its aim was to protect citizens and forest owners from the danger of a forest fire spreading into their properties. The system has the ability to inform local authorities and thus reducing the damage of a fire, or even preventing it ( Fiorucci et al., 2008 ). The most famous system is used by the Canadian forest services and was first implemented in 1968. It is the Canadian Forest Fires Danger Rating System (CFFSDRS) ( Stocks et al., 1989 ; Van Nest and Alexander, 1999 ). In order to reduce the complexity of the system it has been divided into two sub systems: the fire weather index (FWI) ( Van Wagner and Pickett, 1985 ; Van
Wagner, 1987 ) and fire behavior prediction (FBP) ( Canada, 1992 ). The main weather features that are monitored and recorded daily at noon are: wind speed, temperature, relative humidity, and precipitation. The FWI will generate a danger index related to the rate of fire spread, and most importantly it only relies on meteorological data recorded during the day. It is also noticeable that the FWI is totally independent of any topographic information. The index corresponds to three main fuel types: litter and other fine fuel, loosely compacted organic layers of moderate depth, and deep compact organic layer. So for the same weather parameters the index changes as the nature of fuel changes. The computation of the FWI index is split into two parts: first from an estimation of moisture in the three types of fuels the initial spread index (ISI) is computed. Then based on the fuel available, the build up index (BUI) is computed. These two indices are merged together to give the FWI. Topography infor-mation is used in the second subsystem (FBP) as well as the type of vegetation that covers the studied area. Once a fire is ignited, the FBP has the ability to predict the behavior of the fire using a semiphysical model. The American model NFDRS (National Fire
Danger Rating System) ( Deeming et al., 1977 ) is a similar approach to the CFFSDRS. This system has the ability to predict the risk of fire occurrence for the next 24 h. It outputs a series of indices that takes into account fuel moisture, weather data, and the slope of the forward rate of spread. A main difference between
NFDRS and CFFSDRS is that NFDRS can also estimate the available energy per area unit and hence generate the probability that a fire will start if a heat source is placed near the fuel. It also tries to incorporate human causes or natural causes by generating an index associated with the connection of a fire to human or natural cause (lightning). The Australian fire danger index is a statistical based system ( McArthur, 1966 ). The main relationships are between fire occurrence and temperature, wind speed, relative humidity soil moisture and the amount of fuel of the studied area.
The models were generated and tested on the data provided from the dry land of Australia during dry winter and a specific equation was estimated for each type of vegetation. The system also estimates a spread index that corresponds to the danger of a fire spreading in a specific type of vegetation. Empirical systems also exist and are found mainly in the Mediterranean countries ( Viegas et al., 2000 ). Weather data play a key role in these systems, as well as the fuel moisture. A spread index that depends on the specified location is then generated. By assuming uniform vegetation it can provide an overall index. A recent model has emerged in Italy named RISICO (RISchio Incendi e COordina-mento) ( Fiorucci et al., 2008 ). It presents a prediction over a 72 h period on the basis of available information including meteorological forecast data provided by a limited area model (LAM). This system provides a dynamic assessment of fire danger over all the Italian territory. It is based on statical information concerning the vegetation cover as well as the topography, and on dynamic data like the meteorological weather forecast over three days. The risk is obtained by combining two models; the fuel moisture model and the potential fire spread model. The Italian territory is split into cells and these two models are applied on each cell to get their risk index. The system is relatively sensitive to its numerous parameters and a careful calibration is carried out to minimize errors. 1.2. Artificial intelligence for forest fire occurrence prediction
Forest fire databases started being developed about 10 years ago, and their main target was to record forest fires, burnt area and associated weather parameters. At present many fire models make use of these databases to construct and assess probabilistic models. Brillinger et al. (2003) proposed a model for each specific location based on its fire history, its elevation above sea level and the corresponding dates of fire days and non-fire days. The system tries to fit different probabilistic models to data from different locations. When the fitting is accomplished the system is used to estimate the probability of a forest fire taking place at a particular location and time. No weather parameters are used and the main output is the probability of the number of fires being greater than a certain threshold. This probability estimation is helpful for fire fighters X  resource allocation. It is also notable the importance of the elevation feature of the considered terrain. Experiments show that the assessed risk is accurate for a specific area. A shortcoming of this model is its close dependency over the trained area and its inability to generalize the model to nearby areas. Jaiswal et al. (2002) implemented a GIS-based forest fire danger model, to study the relationship between vegetation, climate, topography and their associated factor to cause forest fires. A forest fire danger zone map was constructed using a four-category risk scale. The resulting map was found to have a strong correlation with the highly fire affected sites. This method is also dependent on the studied area and the model cannot be generalized to other lands. It is also notable that the use of GIS is imperative in the construction of the models. Estimation of forest fire danger on a global scale was introduced by Iliadis (2005) who developed a decision support system (FFIR-EDESSYS) that implements fuzzy logic and fuzzy algebra concepts. The system was implemented in
Greece, and it showed a good estimation of the forest fire danger areas but it has no indication on the estimated area of the fire which might compromise the resource allocation problem. Some important clustering techniques using partitioning methods like k-means or density based clustering like (DBSCAN) that are normally used on spatial data, can be extended to spatio-temporal data. Many models implement spatio-temporal data mining (STDM) techniques, and demonstrate that these techniques have great potential in forest fire occurrence prediction. Their applica-tion to forest fire is described by Cheng and Wang (2006) as follows: 1. Forecasting and trend analysis: basically one can make use of 2. Association rule mining for prediction of ongoing forest fire 3. Pattern detection for sequence of fire events: using spatio-4. Cluster analysis and identification of fire spots: spatio-tem-
Li et al. (2001) developed a system for automatic identification of fire smoke using artificial neural networks applied to advanced very high resolution radiometer imagery, while Wiering and
Dorigo (1998) were interested in knowing where to cut fire-lines to minimize the damage done by the forest fire. The idea was to build a fire spread simulator and to search for good decision policies. The parameters used to build the spread index are the fuel-type and the wind speed. The system was achieved using evolving neural networks. Naturally this system has to be cali-brated on every type of terrain and helps in making policies for fire fighters. Han et al. (2003) used predictive geospatial data mining methods and constructed mathematical models to predict the forest fire hazardous areas, based on the FHR (forest fire hazard rate) and a PRC (prediction rate curve). Furthermore, new techniques have emerged like cellular automata or agent-based modeling. In the cellular automata models, a forest is considered to be a cellular space that evolves with time. Each cell has an independent and a dependent state. The independent state is its own evolution with time, while the dependent one is the influence of neighboring cells. A burning cell is considered to be able to conduct fire to neighboring unburned cells, which will be useful to model the fire propagation process between cells ( Ntaimo and Khargharia, 2006 ). Cellular automata were applied by Clarke et al. (1994) who made use of fractal geometry to predict wildfire propagation and extinction. While Muzy et al. (2001) implemented fire spread prediction using a cellular auto-mation model (Cell-DEVS) and they combined it with a physical model of fire spread proposed by Rothermel (1972) . A new technique was introduced by Dunn and Milne (2004) to overcome the problem of terrains of heterogeneous structure. In old tech-niques such terrains must be split into sub-terrains and each one has to be modeled by itself. This method encodes the spread of wild land fire in a set of interacting automata. The system was able to simulate the fire spread on an irregular field. Cheng and
Wang (2008) made use of spatio-temporal data mining techniques and the model was focused on predicting the burnt area. His model uses a recurrent neural network to combinehistoricalfiredataof the studied landscape as well as weather data. The model was validated on Canadian soil and it achieved errors as low as 0.5 ha for an area of 200 ha. Another relatively recent approach used data mining and meteorological data to predict forest fires and to estimate the burnt area corresponding to that fire ( Cortez and
Morais, 2007 ). They tried out several inputs in the aim to find the best parameters that can be used for prediction. As a result of this they found out that the useful parameters were: wind speed, temperature, humidity and precipi tation. They used five different data mining algorithms: the multiple regression (MR), decision tree, random forest, neural networks and support vector machines. The best results were achieved using support vector machines and a
Gaussian kernel function. The overall performance was measured using two techniques: the mean absolute deviation and the root mean square error. The SVM implementation gave a MAD of 12.71 ha and a root mean square error of 64.7 ha.

The challenge for prediction systems is how to combine the different indicators in order to make a decision and how to predict a large number of unseen patterns from a few known ones. The prediction has to be accurate, consistent and computa-tionally effective. This paper deals with the prediction problem, it presents two algorithms for fire danger classification over four classes based on the historical number of fires under certain weather conditions. The first algorithm is based on artificial neural networks and the second is based on support vector machines. 2. Proposed detection algorithms and architectures
The proposed method introduces a fire danger index on a scale of 1 X 4, where 1 corresponds to the lowest fire danger and 4 to the highest fire danger. This index corresponds to the potential number of fires that could occur on a specific day and hence can be used to estimate the range of number of fires potentially occurring on that day. In order to perform prediction, it is required to specify the parameters or features monitored during the day that are used in the prediction algorithm. 2.1. Feature selection
Any prediction mechanism bases its prediction on a contin-uous observation of a number of specific features. In this paper the aim is to reduce the cost of such a system for developing countries and to reduce the number of monitored features, and to eliminate the need for weather prediction mechanisms. The reason is to reduce errors due to inaccuracies in weather predic-tion. The challenge is to choose a limited number of easily measurable features in the aim of reducing the cost of the system and deployment and maintenance. At the same time, the chosen features must have a high correlation with the risk of fire occurrence. Typical weather parameters used as features are: the minimal temperature of the day, T min ; the maximal temperature of the day, T max ; the average humidity of the day; the solar radiation over the day; the average wind speed over the day; the cumulative precipitation level starting in October 1 up to the specific day.
 The relative humidity is a function of the temperature and atmospheric moisture. While fuel moisture is driven by the vapor pressure deficit (vdp), relative humidity can be used as a proxy to (vdp). Although the relative humidity is sometimes a poor proxy of (vdp) it is an easier feature to measure and of less cost, thus it is possible to eliminate the two temperature features and use only the relative humidity. Since no weather prediction mechanism is used then the wind speed of the previous days is not useful in the prediction of risk of the next day and hence it is eliminated. To confirm the previous arguments, a statistical study conducted on the data has shown that by computing the variance of the different features, only two features dominated the total variance. Those features are the cumulative precipitation and the relative humidity which accounted for more than 96% of the total variance of the system. This number seems high because the data are limited to nine years which is a short period of time, but even if this number drops with new data acquisition in the coming years, these two features will continue to dominate the variance of the data. It is known that a feature with high variance contains high information thus the above two parameters contain more than 96% of the total information of the system. Hence the solar radiation is also discarded. In conclusion the reduced feature algorithms are based on the cumulative precipitation and the relative humidity. Section 3 presents a comparative study between the full features results and the reduced features results. The strategy used to eliminate weather prediction is discussed in Section 3.

In order to fuse the above features and to make fire predic-tions, SVM and ANN are used. These learning mechanisms are introduced in the next section. 2.2. Support vector machines
In the simplest form, SVM uses a linear hyperplane to create a classifier with a maximal margin ( Kecman, 2001 ). In other cases, where the data are not linearly separable, the SVM maps the data into a higher dimensional space called the feature space. This task could be achieved using various nonlinear mappings: polynomial, sigmoid, RBF such as Gaussian RBF. After the nonlinear transfor-mation SVM finds a linear separating hyperplane in this new feature space. Not like other techniques, probability model and probability density functions need not be known before building the machine. This is very important for generalization purposes, as in practical situations, there is not enough information about the underlying probability laws and distributions. Since SVM has been recording high accuracies in many fields, and since it has an excellent generalization ability, it is used in this paper.
What follows is an introduction to the theory of SVM and the general equation of the hyperplane that will separate the two classes. In the case of linearly separable data the approach is to find among all the separating hyperplanes the one that max-imizes the margin. Clearly, any other hyperplane will have a greater expected risk than this hyperplane.

During the learning stage the machine uses the training data to find the parameters w  X  X  w 1 w 2 ... w n T and b of a decision func-tion d  X  x , w , b  X  given by d  X  x , w , b  X  X  w T x  X  b  X 
The separating hyperplane follows the equation d  X  x , w , b  X  X  0. In the testing phase, an unseen vector x , will produce an output y according to the following indicator function: y  X  sign  X  d  X  x , w , b  X  X  X  2  X  to class 1 and if d  X  x , w , b  X  o 0 then x belongs to class 2.
The weight vector and the bias are obtained by minimizing the following equation:
L  X  a  X  X  0 : 5 a T H a f T a  X  3  X  subject to the following constraints: y
T a  X  0
Z 0 where H denotes the Hessian matrix given by: H  X  y i y j  X  x is the unit vector f  X  X  1 , 1 ... 1 T . Having the solutions a dual optimization problem will be sufficient to determine the weight vector and the bias using the following equations: w  X  b  X  1 N where N represents the number of support vectors.

The linear classifier presented above has limited capabilities since it is only used with linearly separable data while in most practical applications the data are random and is not linearly separable. The nonlinear data have to be mapped to a new feature space of higher dimension using a suitable mapping function U  X  x  X  which is of very high dimension, potentially infinite. Fortunately, in all the equations, this function appears only in the form of a dot product.

From the theory of reproducing kernel Hilbert spaces ( Aronszajn, 1950 ), which is beyond the scope of this paper, a kernel function is defined as K  X  x i , x j  X  X  F  X  x i  X  T F  X  x j  X  X  6  X  Eq. (3) has this form in the feature space: L d  X  a  X  X  1 2 subject to space by the following equation: d  X  x  X  X  general it is useful to use a soft margin classifier to preserve the smoothness of the hyperplane and prevent a i from tending to infinity. This classifier is obtained using the same minimization process by just adding one more constraint to Eq. (7). The constraint is: 0 r a i r C , where C is defined by the user. If C tends to infinity, the soft margin classifier tends towards the hard margin. 2.3. SVM prediction architecture hence it is necessary to introduce an architecture that allows the classification of more than two classes. The proposed architecture shown in Fig. 1 is well known for four classes classification ( Kecman, 2001 ; Vapnik, 1998 ). The training and optimization of this architecture is described below.
 form class ( 1) while points of scales 3 and 4 are put together to form class (+1). SVM 2 is trained by scale 1 as class ( 1) and scale 2 as class (+1). SVM 3 is trained by scale 3 as class ( 1) and scale 4 as class (+1). Hence a point that gets classified by SVM 1as( 1) is passed to SVM 2, which will output its corresponding scale. While a point classified as (+1) by SVM 1 is passed to SVM 3, which will output its final scale. Table 1 shows the output scale based on the decision of each SVM. As it is described in Section 3 that each month has its own risk scales. For example a day in
September where 15 fires have occurred is considered to be a day of scale 3 while 15 fires for June or July is considered a day of scale 4. As a result of this discrepancy, each month has its own architecture trained by training points taken only from that month.
 2.4. Neural networks
Artificial neural network is a simple imitation of the human brain but has only a fraction of its power. The power of the human brain is found in the neurons and their connection to other neurons. The artificial neural network optimizes the connections between artificial neurons using different algorithms. The input parameter p is multiplied by the weight w to form wp . Then the bias b is multiplied by 1 and both are sent to the summation neuron to give the net output n  X  wp + b . The net output is forwarded to the transfer function that outputs the neuron output a  X  f  X  wp  X  b  X  ( Hagan et al., 1996 ), where the transfer function f depends on the complexity of the problem. The weights w and the bias term b are estimated using predefined algorithms. As the complexity of the problem increases, the need to use more neurons increases as well as the use of multiple layers. From a design perspective, the designer chooses the number of layers, the number of neurons and the transfer function. Then the weights and biases are adjusted using algorithms like the Hebb rule, the back-propagation algorithm or one of its variants. 2.5. ANN prediction algorithm
The relationship between fire danger and the used weather parameters is a nonlinear relationship. Indeed, doubling the relative humidity will not necessarily double the fire danger nor it will reduce to half. This is also confirmed by noting that the linear correlation coefficient between the fire danger and the cumulative precipitation is 0.21 and with the relative humidity is 0.17 which shows clearly that the relationship is definitely nonlinear. Thus there is a need to use multiple layers and multiple neurons in each layer. In this study, three layers are used. The first two layers are each composed of four neurons while the output layer contains one neuron because only one output is needed. The hyperbolic tangent sigmoid transfer function is used for all the neuron and is defined by tansig  X  n  X  X  e n e n e n  X  e n
In order to compute the weights, the Levenberg X  X arquardt back-propagation algorithm is used. This algorithm finds the weights that minimize the error using a varia tion of Newton X  X  method for minimizing functions ( Scales, 1985 ). This algorithm was chosen because it is the fastest neural networks training algorithm for moderate size networks ( Hagan and Menhaj, 1994 )asitisthecase in this study. 3. Experiments and results The weather data, provided by the Lebanese Agricultural
Research Institute (LARI), cover the Lebanese territory and spans the nine years between 2000 and 2008. The data are collected using fixed weather stations across the country. The weather parameters provided are the average humidity and the cumula-tive annual precipitation. In addition to the weather parameters, the daily number of forest fire was provided by the Lebanese Ministry of Environment. For each day of weather data from LARI corresponds a specific number of fires that is extracted from the fire list. The daily number of fires over the nine years is used to create the four scales of danger according to which the prediction takes place. The proposed method introduces a fire danger index on a scale of 1 X 4, where 1 corresponds to the lowest fire danger and 4 to the highest fire danger. This index is based on the number of fires that occurred on a specific day and hence can be used to estimate the range of number of fires that could happen on that day. Class 1 always corresponds to a no fire day. As for class 2, it corresponds to any number of fires that falls between the first quartile and the third quartile of the number of fire distribution that is given by the historical data. Class 3 corre-sponds to an increase of risk by 10% from the third quartile and class 4 corresponds to any risk greater than 10%. Table 2 shows the corresponding number of fires per month and per scale that corresponds to the boundaries between different classes.
A challenge is to have this index independent of weather prediction mechanisms, and thus avoid the problem created by potential erroneous weather forecasting and the cost of forecast-ing. To avoid weather prediction mechanisms, the training points are created as the weather parameters of a given day associated with the scale of the next day. Hence the relationship that is being learned is the relationship between the weather parameters of today and the number of fires of the following day. This archi-tecture is used for daily prediction. The above architecture could be used for monthly prediction, by associating the average weather parameters of a month with a scale for the following month. Or it could be used for annual prediction by associating the average weather of the year with the scale of the next year. However, due to the limited amount of data which corresponds only to eight years, it is not possible to create an annual classifier or a monthly classifier. The architecture is tested only for daily prediction. To further optimize the cost of obtaining the features, it was observed that for countries such as Lebanon with no significant rain fall during the fire season, the cumulative pre-cipitation can be taken as constant for all days during the season corresponding to accumulation at the start of the season. This eliminates the need for accumulator measuring instruments for daily use. This approach was used in all reported results.
The performance of the architecture is evaluated by computing the average error of the number of fires predicted. Denote by N the number of days of true class i and by d ij the total number of days of true class i predicted to be of class j . Denote also by q the lower boundary of class c and by q max,c the upper boundary for that same class. Using the class boundaries defined in Table 2 it is possible to state that if a true class of a day is 1 and the decision made by the algorithm is also 1 then there is no fire error. If the decision was j then there is an error equal to q min,j . It is now possible to define the error E i over every class i as E  X  E  X 
E  X 
E  X 
Another error parameter is the scale error. If C i is the true class of day i and dec i is the predicted class for that same day then the scale error Es i is given by
Es  X j C i dec i j X  9  X 
The full feature results and the reduced feature results are presented in Table 3 as follows: the second row corresponds to the errors over the four classes using the SVM prediction algo-rithm and the third row presents the fire errors over the four classes using the ANN algorithm. The forth row corresponds to the average class error taken over all the days of class i for SVM and the fifth row is that same average class error for ANN. For example, in the reduced feature results for June, the average error on the number of fires over all days of class 1 is 0.38 fires, while the same average error for ANN is 0.86. The corresponding scale error is 0.3 for SVM and 0.7 for ANN. It is worth noting that the highlighted cells in the reduced features tables show the months and classes where ANN outperforms SVM. It is shown that the average error for ANN is in 12 cases out of 20 better than the average error of SVM. The comparison of the performance of the two algorithms over all months and over all classes for the reduced features shows that ANN is better than SVM on average by 0.17 fires and 0.04 classes. Note that bold face is used to compare between reduced features and full features cases indi-cating which is better. It is visible that the reduced features algorithm for SVM and for ANN outperforms the corresponding algorithm trained with the full features in most of the cases.
Finally note that the system is only tested for the Lebanese fire season months of June, July, August, September and October. scenario is a binary classification between days where no fires has occurred, and days where any number of fires has occurred. SVM and ANN were both used in this scenario. For each month a different classifier was built. The testing was done using the
K-fold cross-validation technique. The data were split into 10 groups. In each iteration five of the 10 groups was used for training and the other five for testing. In total, 252 iterations were made. The Gaussian kernel function was used for SVM and a 4 X 4 X  1 architecture was used for ANN with the tangent sigmoid transfer function. The accuracy reported in Table 4 is the average accuracy over all iterations. The accuracy shows the ability of
SVM and ANN to correctly predict the possibility of fire or no fire with very high accuracy. What is not shown in Table 4 is that, for
SVM, for every month there exists at least one iteration where the accuracy of testing was above 97%. This is important for practical cases where no K-Fold is performed and the system is trained by one optimal set of training points to predict the nature of the following day. 4. Conclusion prediction methods divided into systems/indices, and artificial intelligence. Most of the reviewed prediction methods involved weather prediction mechanisms and/or the use of a large number of monitored features. These systems are often very difficult to implement in developing countries. In this work, two forest fire occurrence prediction algorithms, based only on cumulative precipitation and relative humidity, and independent of any weather prediction mechanism were developed and tested. The results demonstrated the ability to predict forest fire danger with a limited number of inputs. The support vector machines and artificial neural networks proved to achieve very low error on the number of fires predicted. It also showed that ANN outperforms
SVM on average by 0.17 fires, while SVM outperforms ANN in the binary classification of fire/no fire scenario. The operational use of the developed algorithms for the prediction of forest fire occur-rence in more fire seasons and in different study areas might be worth investigating in the future.
 Acknowledgments University Research Board, Dar Al-Handassah (Shair &amp; Partners)
Research Fund, the Rathman (Kadifa) Fund, and the Association for Forests, Development and Conservation. We would like to acknowledge the Lebanese Agricultural Research Institute (LARI) and the Ministry of Environment for providing the data used in this work. We would like to thank Mr. Alaa Salman for his technical support.
 References
