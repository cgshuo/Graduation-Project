 Abstract The language modeling approach to information retrieval has recently attracted much attention. In the language modeling retrieval models, we can score and rank docu-ments based on the query likelihood method. From the theoretical perspective, however, the justification of the existing (standard) query likelihood method based on the probability ranking principle requires an unrealistic assumption about the generation of a  X  X  X egative query X  X  from a document, which states that the probability that a user who dislikes a document would use a query does not depend on the particular document. This assumption enables ignoring the negative query generation so as to justify using the basic query likelihood method as a retrieval function. In reality, however, this assumption does not hold because a user who dislikes a document would more likely avoid using words in the document when posing a query. This suggests that the standard query likelihood function is a potentially non-optimal retrieval function. In this paper, we attempt to improve the standard language modeling retrieval models by bringing back the component of negative query generation. Specifically, we propose a general and efficient approach to estimate document-dependent probabilities of negative query generation based on the principle of maximum entropy, and derive a more complete query likelihood retrieval function that also contains the negative query generation component. In addition, we further develop a more general probabilistic distance retrieval method to naturally incorporate query language models, which covers the proposed query likelihood with negative query generation as its special case. The proposed approaches not only bridge the theoretic gap between the standard language modeling retrieval models and the notion of relevance, but also improves the retrieval effectiveness with (almost) no additional computational cost. Keywords Negative query generation Query likelihood Language model Relevance Probability ranking principle Principle of maximum entropy The language modeling approach to information retrieval (Ponte and Croft 1998 ) has recently enjoyed much success for many different retrieval tasks (Ponte and Croft 1998 ; Xu and Croft 1999 ; Zhai and Lafferty 2001b ; Lafferty and Zhai 2001 ; Xu et al. 2001 ; Lavrenko et al. 2002 ; Si et al. 2002 ; Zhang et al. 2002 ; Cronen-Townsend et al. 2002 ; Liu and Croft 2002 ; Zhai et al. 2003 ; Ogilvie and Callan 2003 ; Shen et al. 2005 ; Tan et al. 2006 ; Balog et al. 2006 ; Fang and Zhai 2007 ; Zhai 2008 ; Lv and Zhai 2009 ; Tsagkias et al. 2011 ). In the language modeling approach, we assume that a query is a sample drawn from a language model: given a query Q and a document D , we compute the likelihood of  X  X  X enerating X  X  query Q with a document language model estimated based on document D . We can then rank documents based on the likelihood of generating the query, i.e., query likelihood.

Although the query likelihood retrieval function has performed well empirically, there was criticism about its theoretical foundation (Robertson and Hiemstra 2001 ; Sparck-Jones and Robertson 2001 ; Sparck-Jones et al. 2003 ). In particular, Sparck Jones questioned  X  X  X here is relevance? X  X  (Sparck-Jones and Robertson 2001 ). Responding to this criticism, Lafferty and Zhai ( 2002 ) showed that the basic query likelihood retrieval method can be justified based on the probability ranking principle (Robertson 1977 ) which is regarded as the theoretical foundation of retrieval models.

However, from the theoretical perspective, the justification of using the basic query likelihood as a retrieval function based on the probability ranking principle by Lafferty and Zhai ( 2002 ) requires an unrealistic assumption about the generation of a  X  X  X egative query X  X  from a document, which states that the probability that a user who dislikes a document would use a query does not depend on the particular document. This assumption enables ignoring the negative query generation in justifying using the standard query likelihood method as a retrieval function. With this assumption, the query likelihood can intuitively be explained as the probability that a user who likes a document would pose the query. In reality, however, this assumption does not hold because a user who dislikes a document would more likely avoid using words in the document when posing a query. This suggests that the basic query likelihood function is a potentially non-optimal retrieval function.
In order to bridge this theoretical gap between the basic query likelihood retrieval function and the notion of relevance, in this paper, we attempt to bring back the component of negative query generation.

A main challenge in estimating the negative query generation component is to develop a general method for any document with respect to any query. Our solution to this problem is to estimate the probability of negative query generation purely based on document D so as to make it possible to incorporate the negative query generation component when retrieving any document. Specifically, we exploit document D to infer the queries that a user would use to avoid retrieving D based on the intuition that such queries would not likely have any information overlap with D . We then propose an effective approach to estimate probabilities of negative query generation based on the principle of maximum entropy (Jaynes 1957 ), which leads to a document-dependent negative query generation component that can be computed efficiently. Finally, we derive a more complete query likelihood retrieval function that also contains the negative query generation component, which essentially scores a document with respect to a query according to the ratio of the probability that a user who likes the document would pose the query to the probability that a user who dislikes the document would pose the query.

Similar to the standard query likelihood, a major deficiency of the proposed query likelihood with negative query generation is that it cannot easily incorporate query lan-guage models. To solve this problem, we further develop a more general probabilistic distance retrieval method, inspired by the development of the KL-divergence retrieval method (Lafferty and Zhai 2001 ). With this method, we first estimate a regular document language model, a regular query language model, and a  X  X  X egative document language model X  X  based on the probabilities of negative query generation, and we then score a document with respect to a query based on the relative KL-divergence between the query language model and the corresponding document language model and between the query language model and the corresponding negative document language model. With this probabilistic distance retrieval method, feedback can also be naturally cast as to improve the estimate of the query language model based on the feedback information. Interestingly, this probabilistic distance retrieval method covers the proposed query likelihood model with negative query generation as its special case.

Experiment results on several standard test collections show that the proposed query likelihood retrieval function with negative query generation improves the retrieval effec-tiveness significantly, especially in cases when queries are verbose, with (almost) no additional computational cost. And the proposed KL-divergence retrieval method with negative document language model also works more effectively than the standard KL-divergence retrieval method to handle query language models. Overall, the proposed approaches not only bridge the theoretic gap between the standard language modeling retrieval models and the probability ranking principle, but also improve retrieval effec-tiveness significantly.

Due to their effectiveness, efficiency, generality, and theoretical soundness, the pro-posed query likelihood method with negative query generation and KL-divergence retrieval method with negative document language model can potentially replace the standard query likelihood method and the standard KL-divergence method respectively in all retrieval applications. We first briefly review previous work related to the development and extensions of the language modeling retrieval models.

The query likelihood retrieval method was first introduced by Ponte and Croft ( 1998 ) and also independently explored by Miller et al. ( 1999 ) and Hiemstra ( 2001 ). In this method, given a query Q and a document D , we compute the likelihood of  X  X  X enerating X  X  query Q with a model h D estimated based on document D , and then score and rank the document based on the likelihood of generating the query: The query generation can be based on any language model. Different models make dif-ferent assumptions about term occurrences. So far, using a multinomial distribution (Miller et al. 1999 ; Hiemstra 2001 ; Zhai and Lafferty 2001b ) for h D has been most popular and most successful, which is also adopted in our paper. However, several other choices have also been explored, including the multiple Bernoulli distribution (Ponte and Croft 1998 ; Metzler et al. 2004 ), the multiple Poisson distribution (Mei et al. 2007 ), and the Hyper-geometric distribution (Tsagkias et al. 2011 ). With the multinomial distribution, the query likelihood is where c ( w , Q ) is the count of term w in query Q .

According to the maximum likelihood estimator, we have the following estimation of the document language model h D for the multinomial model: where c ( w , D ) represents the count of term w in document D , and | D | is the document length. The document language model h D needs to be smoothed to overcome the zero-probability problem, and an effective method is the Dirichlet prior smoothing (Zhai and Lafferty 2001b ): here p ( w | C ) is the collection language model and is estimated as p  X  w j C  X  X  c  X  w ; C  X  P where c ( w , C ) indicates the count of term w in the whole collection C , and l is a smoothing parameter (Dirichlet prior) which is usually set empirically. Smoothing plays two different roles in the query likelihood retrieval method (Zhai and Lafferty 2001b ): one role is to assign non-zero probabilities to terms that are not observed in the document, and the other role is to weaken the effect of non-discriminative terms in the query to achieve an  X  X  X DF X  X  effect.

Assuming the Dirichlet prior smoothing method, we can rewrite the query likelihood scoring function as follows (Hiemstra 2000 ; Zhai and Lafferty 2001b ): where | Q | represents query length. It shows that, although the query likelihood method is motivated in a different way than a traditional model such as the vector-space model, it tends to boil down to retrieval functions that implement retrieval heuristics (such as TF-IDF weighting and document length normalization) similar to those implemented in a traditional model (Hiemstra 2000 ; Zhai and Lafferty 2001b ).

In the past decade, many more complex variants of the query likelihood method have been proposed for ad hoc retrieval. For example, n-gram (Song and Croft 1999 ), dependence language model (Gao et al. 2004 ), and positional language model (Lv and Zhai 2009 ) have been explored to go beyond the bag-of-word assumption; the query likelihood was also extended as a translation model to allow inexact matching of semantically related words (Berger and Lafferty 1999 ); a full Bayesian query likelihood was studied to consider uncertainty of an estimation of h D (Zaragoza et al. 2003 ); parsimonious language models was proposed to improve the discrimination of language models (Hiemstra et al. 2004 ); cluster-based smoothing methods were evaluated for document-specific smoothing (Liu and Croft 2004 ; Wei and Croft 2006 ; Tao et al. 2006 ), etc. Although these extensions often outperform the basic query likelihood, they tend to incur significantly more computational cost.
A major deficiency of the query likelihood method is that it cannot easily incorporate query language models, making it hard to exploit relevance or pseudo-relevance feedback (PRF) in the language modeling approach (Zhai and Lafferty 2001a ). To address this problem, a probabilistic distance model called Kullback X  X eibler (KL) divergence retrieval method was proposed by Lafferty and Zhai ( 2001 ) to score a document based on the negative KL-divergence between the document language model and the query language model. The KL-divergence method can actually cover the query likelihood retrieval model as a special case when the query language model is estimated based on only the query. Moreover, the development of the KL-divergence retrieval model (Lafferty and Zhai 2001 ), which explicitly models both document and query language models, has attracted many efforts to propose effective PRF methods for improving the estimate of query language models, (e.g., Lafferty and Zhai 2001 ; Lavrenko and Croft 2001 ; Zhai and Lafferty 2001a ; Kurland et al. 2005 ; Diaz and Metzler 2006 ; Collins-Thompson and Callan 2007 ; Lv and Zhai 2010 ).
The query likelihood method and the KL-divergence method have been shown to perform well for a variety of retrieval tasks, including ad-hoc retrieval (Ponte and Croft 1998 ; Zhai and Lafferty 2001b ; Lafferty and Zhai 2001 ), cross-lingual information retrieval (Xu et al. 2001 ; Lavrenko et al. 2002 ), distributed information retrieval (Xu and Croft 1999 ; Si et al. 2002 ), structured document retrieval (Ogilvie and Callan 2003 ), personalized and context-sensitive search (Shen et al. 2005 ; Tan et al. 2006 ), modeling redundancy (Zhang et al. 2002 ), predicting query difficulty (Cronen-Townsend et al. 2002 ), expert finding (Balog et al. 2006 ; Fang and Zhai 2007 ), passage retrieval (Liu and Croft 2002 ; Lv and Zhai 2009 ), subtopic retrieval (Zhai et al. 2003 ), etc.
However, to the best of our knowledge, there has been no related work on the estimation of negative query generation, except one of our short conference papers (Lv and Zhai 2012 ). That paper has studied a query likelihood retrieval model with negative query generation. This paper is a more complete report of the work, and has also significantly extended the previous short paper with an additional contribution to enable query language models and relevance feedback with the negative query generation component. To better understand the retrieval foundation of the query likelihood method, Lafferty and Zhai ( 2002 ) provided a general relevance-based derivation of the query likelihood method. Formally, let random variables D and Q denote a document and a query, respectively. Let R be a binary random variable that indicates whether D is relevant to Q or not. Following Sparck-Jones et al. ( 2000 ), we will denote by  X  ( X  X  X ike X  X ) and  X  ( X  X  X ot like X  X ) the value of the relevance variable. The probability ranking principle (Robertson 1977 ) provides a justi-fication for ranking documents for a query based on the conditional probability of rele-vance, i.e., p  X  R  X   X  j D ; Q  X  . This is equivalent to ranking documents based on the odds ratio, which can be further transformed using Bayes X  Rule: There are two different ways to decompose the joint probability p ( Q , D | R ), corresponding to  X  X  X ocument generation X  X  and  X  X  X uery generation X  X  respectively. With document genera-tion p  X  Q ; D j R  X  X  p  X  D j Q ; R  X  p  X  Q j R  X  , we have Most probabilistic retrieval models (Robertson and Sparck-Jones 1976 ; Sparck-Jones et al. 2000 ; Fuhr 1992 ) are based on document generation. 1 Fuhr ( 1992 ) has provided in-depth discussions in this direction.
 generation, we end up with the following ranking formula: in which, the term p ( R | D ) can be interpreted as a prior of relevance on a document, which can be used to encode any bias on documents. Without such extra knowledge, we may assume that this term is the same across all the documents and obtain the following simplified ranking formula: There are two components in this model:  X  Positive query generation p  X  Q j D ; R  X   X   X  is the probability that a user who likes  X   X  X  X egative X  X  query generation p  X  Q j D ; R  X   X   X  is the probability that a user who dislikes a When we rank documents based on the query likelihood retrieval function proposed in (Ponte and Croft 1998 ), we essentially only use the first component, i.e., p  X  Q j D ; R  X   X   X  with the second component, i.e., negative query generation p  X  Q j D ; R  X   X   X  ignored. Thus, in order to justify using the basic query likelihood (i.e., the positive query generation component) alone as the ranking formula, an implicit assumption has to be made to exclude this negative query generation component, which states that the probability that a user who dislikes a document would use a query does not depend on the particular doc-ument (Lafferty and Zhai 2002 ), formally This assumption enables ignoring the negative query generation in the derivation of the basic query likelihood retrieval function, leading to the following scoring formula: Under this assumption, Lafferty and Zhai ( 2003 ) shown that ranking based on the query likelihood retrieval model is equivalent to ranking based on the probability of relevance. That is, the classical probabilistic retrieval model (Robertson and Sparck-Jones 1976 ) and the basic language modeling approach (Ponte and Croft 1998 ) are theoretically equivalent for ranking documents. 2
In reality, however, the assumption of the negative query generation, as shown formally in Formula 10 , does not hold because a user who dislikes a document would more likely avoid using words in the document when posing a query , suggesting that there is a theo-retical gap between the standard query likelihood and the notion of relevance, and the standard query likelihood function is a potentially non-optimal retrieval function.
In the following section, we attempt to improve the basic query likelihood function by estimating, rather than ignoring the component of negative query generation p  X  Q j D ; R  X   X   X  . 4.1 Negative document language models Given any document D in the collection, what would a user like if he/she does not like D ? We assume that there exists a  X  X  X omplement X  X  document D , and that if a user does not like D , the user would like D . 3 That is, when generating query Q , if a user does not like D , the user would randomly pick words from D . Formally, It is usually the case that such a document D does not really exist in the document collection. One can regard it as a virtual document that needs to be constructed. The challenge now lies in how to estimate a language model h D , which we refer to as the  X  X  X egative document language model X  X  of D . Note that the negative document language model in our paper is still a document language model, which is completely different from the relevance model p  X  w j R  X   X   X  (Lavrenko and Croft 2001 ) and the irrelevance model p  X  w j R  X   X   X  (Wang et al. 2008 ) which are query language models that capture the probability of observing a word w relevant and non-relevant to a particular information need respectively.

Ideally we should use many actual queries by users who do not want to retrieve doc-ument D to estimate the probability p  X  w j h D  X  . For example, if a user sees a document in search results but does not click on it, we may assume that he/she would dislike the document. Under this assumption, we can use all the queries from the users who  X  X  X islike X  X  the document to approximate D . However, in practice, only very few search results will be shown to users, and certainly there are always queries that we would not even have seen. That is, this estimation strategy will suffer from a serious data sparseness problem. Yet, as a general retrieval model, we argue that the proposed method must have some way to estimate h D for any document with respect to any query.

To this end, one straightforward way is using the background language model p ( w | C )to approximate p  X  w j h D  X  , based on the intuition that almost all other documents in the col-lection are complementary to D : With this estimate of p  X  w j h D  X  , the negative query generation component does not affect the ranking of documents, because the probability of negative query generation will be con-stant for all documents: in some sense, this provides a justification for making the docu-ment independency assumption about the negative query generation component in the standard query likelihood method. However, the content of document D is ignored in this estimation. The question is whether we can leverage the content of document D to estimate a document-dependent negative query generation model p  X  Q j h D  X  .

We are interested in estimating p  X  w j h D  X  in a general way based on the content of docu-ment D so as to make it possible to incorporate a document dependent negative query generation component when retrieving any document. Our idea is based on the intuition that if a user wants to avoid retrieving document D , he/she would more likely avoid using words in the document when posing a query. That is, the user would like a document D with little information overlap with D . Given only document D available, the sole constraint of D is that, if a word w occurs in D , i.e., c  X  w ; D  X  [ 0, this word should not occur in D : This leads to a D that contains a set of words that do not exist in D , but the frequency values of these words are unknown.

How to determine the frequency of a word in D if it does not occur in D ? As the probability distribution of such a word is unknown, according to the principle of maximum entropy (Jaynes 1957 ), each word occurring in D should have the same frequency d [ 0, which maximizes the information entropy under the only prior data D . That is, D contains a set of words that are complementary to D in the universe word space (i.e., the whole word vocabulary V ) with the same frequency d . Formally, According to the maximum likelihood estimator, we have the following estimation of the document language model h D for the multinomial model: where j D j is the  X  X  X ocument X  X  length of D , which can be computed by aggregating frequencies of all words occurring in D . Because the number of unique words not in D (i.e., appearing in D ) is usually much smaller than the number of unique words in the whole document collection C (i.e., | V |), the number of unique words in D is thus approximately the same as | V |. That is Due to the existence of zero probabilities, p ml  X  w j h D  X  needs smoothing. Following the esti-mation of regular document language models, we also choose the Dirichlet prior smoothing method due to its effectiveness in information retrieval (Zhai and Lafferty 2001b ). Formally, where l is the Dirichlet prior. Since the influence of l can be absorbed into variable d ,we thus set it simply to the same Dirichlet prior value as used for smoothing the regular document language model (see Eq. 4 ). 4.2 Query likelihood with negative query generation Now we can bring back the negative query generation component to the query generation process based on the probability ranking principle: where the negative query loglikelihood log p  X  Q j h D  X  can be further written as Plugging Eqs. 5 and 20 into Eq. 19 , we finally obtain a more complete query likelihood retrieval function that also contains the negative query generation component:
O  X  R  X   X  j Q ; D  X  Comparing Formula 21 with the standard query likelihood in Formula 5 , we can see that our new retrieval function essentially introduces a novel component log 1  X  d l p  X  w j C  X  reward the matching of a query term, and it rewards more the matching of a more dis-criminative query term, which not only intuitively makes sense, but also provides a natural way to incorporate IDF weighting to query likelihood, which has so far only been possible through a second-stage smoothing step (Hiemstra 2000 ; Zhai and Lafferty 2002 ). Note that when we set d  X  0, the proposed retrieval function degenerates to the standard query likelihood function.

Moreover, this new component will not change the relative score of two documents if they match the same number of unique query terms, but it will change the relative score of two documents if one matches a query term while the other does not. In this sense, we would hypothesize that (1) the proposed new retrieval function may not affect the standard query likelihood ranking of top result documents too much, as the top result documents tend more likely to match all the query terms, and (2) the proposed retrieval function would influence the standard query likelihood ranking more significantly for verbose queries, because the result documents tend to easily miss some query terms when a query is verbose. Both hypotheses are confirmed in our experiments.

Furthermore, since this new component we introduced is a term-dependent constant , the proposed new retrieval function only incurs O X j Q j X  additional computation cost as com-pared to the standard query likelihood function, where | Q | is the number of query terms. This can be certainly ignored.

Interestingly, the developed retrieval function based on query likelihood with negative query generation (Formula 21 ) leads to the same ranking formula as derived by lower-boundingterm frequency normalization in thestandard query likelihood method(Lv and Zhai 2011 ). However, the derivation of the ranking formula there is based on a heuristic approach; in this work, we show that the heuristic derivation is actually consistent with the probabilistic framework of the query likelihood method. In other words, query likelihood with negative query generation essentially provides a probabilistic interpretation for the heuristic method of lower-bounding term frequency normalization in the standard query likelihood method; meanwhile, this connection can also justify why the component of negative query generation is necessary to improve the standard query likelihood retrieval function. 4.3 KL-divergence retrieval method with negative query generation Estimating query language models using relevance or PRF is an important technique to improve retrieval accuracy. However, similar to the standard query likelihood, a major deficiency of the proposed query likelihood with negative query generation is that it cannot easily incorporate query language models (Zhai and Lafferty 2001a ). To address this problem, we further develop a more general probabilistic distance retrieval method to explicitly incorporate the query language model, inspired by the development of the KL-divergence retrieval method (Lafferty and Zhai 2001 ).
The key idea is that, the closer the document language model is to the query language model and the farther away the corresponding negative document language model is from the query language model, the higher the document would be ranked. Specifically, we choose the KL-divergence to measure the distance between two language models; given the regular document language model h D , the regular query language model h Q , and the proposed negative document language model h D (Eq. 18 ), we score a document D with respect to a query Q based on the difference of two KL-divergence values: one is the KL-divergence between the query language model h Q and the regular document language model h D , and the other KL-divergence between h Q and the negative document language model h D . Formally, Moreover, it is easy to show that this probabilistic distance retrieval method covers the query likelihood with negative query generation as its special case when we use the actual/ raw query word distribution to estimate h Q , i.e., Indeed, with such an estimate, we have: In this regard, the proposed probabilistic distance retrieval method is not only an extended KL-divergence model with a negative document language model but also a generalization of the proposed query likelihood with a negative query generation component. Although the proposed probabilistic distance retrieval method (Formula 22 ) and the basic query likelihood with a negative query generation (Formula 21 ) rank documents equally for the actual/initial query, as shown above, we would like, however, to emphasize that the major advantage of the former over the latter is that the former is also able to deal with a query language model p  X  w j h Q  X  that may be estimated using advanced query modeling tech-niques, such as PRF (Zhai and Lafferty 2001a ; Lv and Zhai 2010 ). 5.1 Testing collections and evaluation We use four TREC collections: WT2G, WT10G, Terabyte, and Robust04, which represent different sizes and genre of text collections. WT2G, WT10G, and Terabyte are small, medium, and large Web collections respectively. Robust04 is a representative news dataset. We use the Lemur toolkit and the Indri search engine 4 to carry out our experi-ments. For all the datasets, the preprocessing of documents and queries is minimum, involving only Porter X  X  stemming. An overview of the involved query topics, the average length of short/verbose queries, the total number of relevance judgments, the total number of documents, the average document length, and the standard deviation of document length in each collection are shown in Table 1 . We test three types of queries:  X  Short queries, which are taken from the title field of the TREC topics.  X  Verbose queries, which are taken from the description field of the TREC topics.  X  Automatically expanded queries, which are generated using PRF techniques.
 We employ a twofold cross-validation for parameter tuning, where the query topics are split into even and odd numbered topics as the two folds. Specifically, the parameters of each method are trained on even (odd) numbered topics and tested on the odd (even) numbered topics. The performance is then measured by combining both test sets. The top-ranked 1000 documents for each run are compared in terms of their mean average pre-cisions (MAP), which also serves as the objective function for parameter training. In addition, the precision at top-10 documents (P@10) and the recall are also considered. The major goals of the experiments are to answer the following questions: 1. If the proposed negative query generation component can work well for improving the 2. How do the proposed techniques perform on different types of queries, such as short 5.2 Performance comparison We first compare the effectiveness of the standard language modeling approach (labeled as LM) (Ponte and Croft 1998 ; Zhai and Lafferty 2001b ) and the proposed language modeling approach with negative query generation (labeled as XLM) for both short and verbose queries without using feedback. Note that without using feedback, the query likelihood method with negative query generation (Sect. 4.2 ) and the KL-divergence method with negative query generation (Sect. 4.3 ) are rank equivalent. LM has one free parameter l (for smoothing the standard document language model in Eq. 4 ) and XLM has two free parameters l (for smoothing both the standard document language model in Eq. 4 and the negative document language model in Eq. 18 ) and d . We use cross validation to train both l and d for XLM, and l for LM.

We report the comparison results in Table 2 . The results demonstrate that XLM out-performs LM consistently in terms of MAP and recall (#Rel) and also achieves better P@10 scores than LM in most cases. The MAP improvements of XLM over LM are significant in most cases. These results show that bringing back the negative query gen-eration component is able to improve retrieval performance, and that the proposed approach to the estimation of negative query generation probabilities works effectively. Although XLM achieves better or comparable p@10 scores as compared to LM, their score differences are often minor; this verifies our first hypothesis in Sect. 4 that the negative query generation component may not influence too much the top-ranked result documents.
So far we have shown that the proposed language modeling approach with negative query generation outperforms the standard language modeling approach when basic queries are used without exploiting any feedback information. Next, we turn to examine if negative query generation can also benefit the automatically expanded queries using PRF. Specifically, we use the standard language modeling method to do an initial retrieval for each short query, and then apply the positional-relevance model (PRM1) (Lv and Zhai 2010 ), which is a state-of-the-art PRF algorithm, to estimate an improved query language model. After that we use the obtained query language model to rank documents using the proposed KL-divergence retrieval method with a negative document language model (Eq. 22 ); in addition, we also use the same query language model in the standard KL-divergence retrieval method (Lafferty and Zhai 2001 ) as our baseline. 5 The parameters l and d in the scoring functions are trained using cross validation.

We present the results in Table 2 . It shows that XLM consistently outperforms LM, suggesting that the negative query generation component also works well for PRF. This demonstrates that, through bringing back the negative query generation, we have devel-oped a general retrieval method that works well for different types of queries.
Comparing short with verbose queries, we observe that XLM generally improves more on verbose queries than on short queries. In particular, the MAP improvements on WT2G, WT10G, and Robust04 collections are as high as 5 % for verbose queries. However, this is likely and also verifies the second hypothesis in Sect. 4 that XLM would affect the retrieval effectiveness more for verbose queries, because result documents tend to miss more query terms when a query is verbose.

Comparing PRF with short queries, the relative improvements of XML over LM on the former are often larger than those on the latter, which is likely because automatic query expansion using PRF generally improves the verbosity of queries.

Comparing PRF with verbose queries, the relative improvements on the former are often less than those on the latter, although the former often contains more distinct terms (and is thus more verbose) than the latter. One possible reason is that redundant expansion terms may be introduced by PRF. Intuitively, matching a redundant expansion term should not be rewarded as much as matching a basic query term from the original query, sug-gesting that we may use different d values for the expansion terms and the basic query terms for PRF, which would be an interesting direction for future work.

We introduce a parameter d to control the negative query generation component. We plot MAP improvements of XLM over LM against different d values in Fig. 1 .It demonstrates that, for verbose queries, when d is set to a value around 0.05, XLM works very well across different collections. Therefore, d can be safely  X  X  X liminated X  X  from XLM for verbose queries by setting it to a default value 0.05. Although d tends to be collection-dependent for short queries and for PRF, setting it conservatively, e.g., 0.02 for short queries and 0.1 for PRF, can often lead to consistent improvement on all collections.
As XLM and LM share one parameter l , the Dirichlet prior, we are also interested in understanding how this parameter affects the retrieval performance of XLM and LM. So we draw the sensitivity curves of XLM and LM w.r.t. l in Fig. 2 . It shows that XLM is consistently more effective than LM when we vary the value of l . Moreover, the curve trends of XLM and LM are very similar to each other. In particular, XLM and LM even often share the same optimal setting for l . These are interesting observations, which suggest that l and d do not interact with each other seriously; as a result, we could tune two parameters one by one independently.

We also observe that the optimal l value for short queries tends to be smaller than that for verbose queries for both LM and XLM, which is consistent to our previous observation (Lv and Zhai 2011 ). Interestingly, we find that the optimal l for PRF is often smaller than that for short queries, which needs more experiments to understand the reason. 5.3 Summary Our experiments demonstrate empirically that bringing back the negative query generation component can improve the standard language modeling retrieval models for various types of queries across different collections.

We have derived two effective retrieval functions, a query likelihood model with negative query generation (Formula 21 ) and a KL-divergence model with negative doc-ument language models (Formula 22 ). Both of them work as efficiently as but more effectively than their corresponding standard retrieval functions, i.e., the standard query likelihood method (Ponte and Croft 1998 ) and the standard KL-divergence method (Laf-ferty and Zhai 2001 ), respectively. There is an extra parameter d in the derived formulas. However, we observe that d and the Dirichlet prior l generally do not interact with each other. Therefore we can tune two parameters independently. The suggested default d values are 0.05, 0.02 and 0.1 for verbose queries, short queries and PRF, respectively. In this paper, we show that we can improve the standard language modeling retrieval models by bringing back the component of negative query generation (i.e., the probability that a user who dislikes a document would use a query). We argue that ignoring the component of negative query generation in the standard query likelihood retrieval function is questionable, because in reality, a user who dislikes a document would more likely avoid using words in the document when posing a query. We propose an effective approach to estimate document-dependent probabilities of negative query generation based on the principle of maximum entropy, and derive a more complete query likelihood retrieval function that contains the negative query generation component, which essentially scores a document with respect to a query according to the ratio of the probability that a user who likes the document would pose the query to the probability that a user who dislikes the document would pose the query. In addition, we further develop a more general proba-bilistic distance retrieval method to naturally incorporate query language models, which covers the proposed query likelihood with negative query generation as its special case.
Our work not only bridges the theoretic gap between the standard language modeling retrieval models and the probability ranking principle, but also improves the retrieval effectiveness for various types of queries across different collections, with (almost) no additional computational cost. The proposed retrieval functions can potentially replace the standard query likelihood retrieval method and the standard KL-divergence retrieval method in all retrieval applications.

As a first attempt at bringing back negative query generation, our work opens up an interesting novel research direction in optimizing language models for information retrieval through improving the estimation of negative query generation (or negative document language model). One of the most interesting directions is to study whether setting a term-specific d can further improve performance. For example, term necessity prediction (Zhao and Callan 2010 ) and the discovery of key concepts (Bendersky and Croft 2008 ) could be two possible ways for setting adaptive d . Another interesting direction is to go beyond document D and seek other resources for estimating a more accurate negative query generation probability.

