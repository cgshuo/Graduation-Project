 The Probabilistic Synchronous Context Free Gram-mar (PSCFG) formalism suggests an intuitive ap-proach to model the long-distance and lexically sen-sitive reordering phenomena that often occur across language pairs considered for statistical machine translation. As in monolingual parsing, nonterminal symbols in translation rules are used to generalize beyond purely lexical operations. Labels on these nonterminal symbols are often used to enforce syn-tactic constraints in the generation of bilingual sen-tences and imply conditional independence assump-tions in the translation model. Several techniques have been recently proposed to automatically iden-tify and estimate parameters for PSCFGs (or related synchronous grammars) from parallel corpora (Gal-ley et al., 2004; Chiang, 2005; Zollmann and Venu-gopal, 2006; Liu et al., 2006; Marcu et al., 2006).
While all of these techniques rely on word-alignments to suggest lexical relationships, they dif-fer in the way in which they assign labels to non-terminal symbols of PSCFG rules. Chiang (2005) describes a procedure to extract PSCFG rules from word-aligned (Brown et al., 1993) corpora, where all nonterminals share the same generic label X . In Galley et al. (2004) and Marcu et al. (2006), tar-get language parse trees are used to identify rules and label their nonterminal symbols, while Liu et al. (2006) use source language parse trees instead. Zoll-mann and Venugopal (2006) directly extend the rule extraction procedure from Chiang (2005) to heuristi-cally label any phrase pair based on target language parse trees. Label-based approaches have resulted in improvements in translation quality over the sin-gle X label approach (Zollmann et al., 2008; Mi and Huang, 2008); however, all the works cited here rely on stochastic parsers that have been trained on man-ually created syntactic treebanks. These treebanks are difficult and expensive to produce and exist for a limited set of languages only.

In this work, we propose a labeling approach that is based merely on part-of-speech analysis of the source or target language (or even both). To-wards the ultimate goal of building end-to-end ma-chine translation systems without any human anno-tations, we also experiment with automatically in-ferred word classes using distributional clustering (Kneser and Ney, 1993). Since the number of classes is a parameter of the clustering method and the re-sulting nonterminal size of our grammar is a func-tion of the number of word classes, the PSCFG grammar complexity can be adjusted to the specific translation task at hand.

Finally, we introduce a more flexible labeling ap-proach based on K-means clustering, which allows the incorporation of an arbitrary number of word-class based features, including phrasal contexts, can make use of multiple tagging schemes, and also al-lows non-class features such as phrase sizes. In this work we experiment with PSCFGs that have been automatically learned from word-aligned par-allel corpora. PSCFGs are defined by a source ter-minal set (source vocabulary) T S , a target terminal set (target vocabulary) T T , a shared nonterminal set N and rules of the form: A  X  X   X , X ,w  X  where  X  A  X  X  is a labeled nonterminal referred to as the left-hand-side of the rule,  X   X   X  ( N  X  X  S )  X  is the source side of the rule,  X   X   X  ( N  X  X  T )  X  is the target side of the rule,  X  w  X  [0 ,  X  ) is a non-negative real-valued weight assigned to the rule; in our model, w is the product of features  X  i raised to the power of weight  X  i . Chiang (2005) learns a single-nonterminal PSCFG from a bilingual corpus by first identifying initial phrase pairs using the technique from Koehn et al. (2003), and then performing a generalization opera-tion to generate phrase pairs with gaps, which can be viewed as PSCFG rules with generic  X  X  X  nontermi-nal left-hand-sides and substitution sites. Bilingual features  X  i that judge the quality of each rule are es-timated based on rule extraction frequency counts. We now describe a simple method of inducing a multi-nonterminal PSCFG from a parallel corpus with word-tagged target side sentences. The same procedure can straightforwardly be applied to a cor-pus with tagged source side sentences. We use the simple term  X  X ag X  to stand for any kind of word-level analysis X  X  syntactic, statistical, or other means of grouping word types or tokens into classes, possibly based on their position and context in the sentence, POS tagging being the most obvious example.

As in Chiang X  X  hierarchical system, we rely on an external phrase-extraction procedure such as the one of Koehn et al. (2003) to provide us with a set of phrase pairs for each sentence pair in the train-ing corpus, annotated with their respective start and end positions in the source and target sentences. Let f = f 1  X  X  X  f m be the current source sentence, e = e 1  X  X  X  e n the current target sentence, and t = t  X  X  X  t n its corresponding target tag sequence. We convert each extracted phrase pair, represented by its source span  X  i,j  X  and target span  X  k,`  X  , into an initial rule by assigning it a nonterminal  X  t k -t `  X  constructed by combining the tag of the target phrase X  X  left-most word with the tag of its right-most word.

The creation of complex rules based on all initial rules obtained from the current sentence now pro-ceeds just as in Chiang X  X  model.
 Consider the target-tagged example sentence pair: Then (depending on the extracted phrase pairs), the resulting initial rules could be: Now, by abstracting-out initial rule 2 from initial rule 4, we obtain the complex rule: Intuitively, the labeling of initial rules with tags marking the boundary of their target sides results in complex rules whose nonterminal occurrences im-pose weak syntactic constraints on the rules eligi-ble for substitution in a PSCFG derivation: The left and right boundary word tags of the inserted rule X  X  target side have to match the respective boundary word tags of the phrase pair that was replaced by a nonterminal when the complex rule was created from a training sentence pair. Since consecutive words within a rule stem from consecutive words in the training corpus and thus are already consistent, the boundary word tags are more informative than tags of words between the boundaries for the task of combining different rules in a derivation, and are therefore a more appropriate choice for the creation of grammar labels than tags of inside words. Accounting for phrase size A drawback of the current approach is that a single-word rule such as can have the same left-hand-side nonterminal as a long rule with identical left and right boundary tags, such as (when using target-side tags): PRP-PRP  X  Ich habe ihn gesehen | I saw him We therefore introduce a means of distinguishing between one-word, two-word, and multiple-word phrases as follows: Each one-word phrase with tag T simply receives the label T , instead of T -T . Two-word phrases with tag sequence T 1 T 2 are labeled T -T 2 as before. Phrases of length greater two with tag sequence T 1  X  X  X  T n are labeled T 1 ..T n to denote that tags were omitted from the phrase X  X  tag se-quence. The resulting number of grammar nonter-minals based on a tag vocabulary of size t is thus given by 2 t 2 + t .

An alternative way of accounting for phrase size is presented by Chiang et al. (2008), who intro-duce structural distortion features into a hierarchi-cal phrase-based model, aimed at modeling nonter-minal reordering given source span length. Our approach instead uses distinct grammar rules and labels to discriminate phrase size, with the advan-tage of enabling all translation models to estimate distinct weights for distinct size classes and avoid-ing the need of additional models in the log-linear framework; however, the increase in the number of labels and thus grammar rules decreases the relia-bility of estimated models for rare events due to in-creased data sparseness.
 Extension to a bilingually tagged corpus While the availability of syntactic annotations for both source and target language is unlikely in most trans-lation scenarios, some form of word tags, be it part-of-speech tags or learned word clusters (cf. Sec-tion 3) might be available on both sides. In this case, our grammar extraction procedure can be easily ex-tended to impose both source and target constraints on the eligible substitutions simultaneously.
Let N f be the nonterminal label that would be assigned to a given initial rule when utilizing the source-side tag sequence, and N e the assigned la-bel according to the target-side tag sequence. Then our bilingual tag-based model assigns  X  N f + N e  X  to the initial rule. The extraction of complex rules proceeds as before. The number of nonterminals in this model, based on a source tag vocabulary of size s and a target tag vocabulary of size t , is thus given by s 2 t 2 for the regular labeling method and (2 s 2 + s )(2 t 2 + t ) when accounting for phrase size.
Consider again our example sentence pair (now also annotated with source-side part-of-speech tags): Given the same phrase extraction method as before, the resulting initial rules for our bilingual model, when also accounting for phrase size, are as follows: Abstracting-out rule 2 from rule 4, for instance, leads to the complex rule: Unsupervised word class assignment by cluster-ing As an alternative to POS tags, we experiment with unsupervised word clustering methods based on the exchange algorithm (Kneser and Ney, 1993). Its objective function is maximizing the likelihood of the training data w = w 1 ,...,w n given a par-tially class-based bigram model of the form P ( w i | w 1 ,...,w i  X  1 )  X  p ( c ( w i ) | w i  X  1 )  X  p ( w where c : V  X  { 1 ,...,N } maps a word (type, not token) w to its class c ( w ) , V is the vocabulary, and N the fixed number of classes, which has to be cho-sen a priori . We use the publicly available imple-mentation MKCLS (Och, 1999) to train this model. As training data we use the respective side of the parallel training data for the translation system.
We also experiment with the extension of this model by Clark (2003), who incorporated morpho-logical information by imposing a Bayesian prior on the class mapping c , based on N individual dis-tributions over strings, one for each word class. Each such distribution is a character-based hidden Markov model, thus encouraging the grouping of morphologically similar words into the same class. Even though we have only made use of the first and last words X  classes in the labeling methods described so far, the number of resulting grammar nontermi-nals quickly explodes. Using a scheme based on source and target phrases with accounting for phrase size, with 36 word classes (the size of the Penn En-glish POS tag set) for both languages, yields a gram-mar with (36+2  X  36 2 ) 2 = 6 . 9 m nonterminal labels.
Quite plausibly, phrase labeling should be in-formed by more than just the classes of the first and last words of the phrase. Taking phrase context into account, for example, can aid the learning of syn-tactic properties: a phrase beginning with a deter-miner and ending with a noun, with a verb as right context, is more likely to be a noun phrase than the same phrase with another noun as right context. In the current scheme, there is no way of distinguish-ing between these two cases. Similarly, it is con-ceivable that using non-boundary words inside the phrase might aid the labeling process.

When relying on unsupervised learning of the word classes, we are forced to chose a fixed num-ber of classes. A smaller number of word clusters will result in smaller number of grammar nonter-minals, and thus more reliable feature estimation, while a larger number has the potential to discover more subtle syntactic properties. Using multiple word clusterings simultaneously, each based on a different number of classes, could turn this global, hard trade-off into a local, soft one, informed by the number of phrase pair instances available for a given granularity.

Lastly, our method of accounting for phrase size is somewhat displeasing: While there is a hard par-titioning of one-word and two-word phrases, no dis-tinction is made between phrases of length greater than two. Marking phrase sizes greater than two explicitly by length, however, would create many sparse, low-frequency rules, and one of the strengths of PSCFG-based translation is the ability to sub-stitute flexible-length spans into nonterminals of a derivation. A partitioning where phrase size is in-stead merely a feature informing the labeling pro-cess seems more desirable.

We thus propose to represent each phrase pair in-stance (including its bilingual one-word contexts) as feature vectors, i.e., points of a vector space. We then use these data points to partition the space into clusters, and subsequently assign each phrase pair instance the cluster of its corresponding feature vec-tor as label.
 The feature mapping Consider the phrase pair in-stance (where f 0 ,f m +1 ,e 0 ,e n +1 are the left and right, source and target side contexts, respectively). We begin with the case of only a single, target-side word class scheme (either a tagger or an unsuper-vised word clustering/POS induction method). Let C = { c 1 ,...,c N } be its set of word classes. Fur-ther, let c 0 be a short-hand for the result of looking up the class of a word that is out of bounds (e.g., the left context of the first word of a sentence, or the sec-ond word of a one-word phrase). We now map our phrase pair instance to the real-valued vector (where 1 [ P ] is the indicator function defined as 1 if property P is true, and 0 otherwise):
D 1 The  X  parameters determine the influence of the dif-ferent types of information. The elements in the first line represent the phrase boundary word classes, the next two lines the classes of the second and penul-timate word, followed by a line representing the ac-cumulated contents of the whole phrase, followed by two lines pertaining to the context word classes. The final element of the vector is proportional to the log-arithm of the phrase length. 1 We chose the logarithm assuming that length deviation of syntactic phrasal units is not constant, but proportional to the average length. Thus, all other features being equal, the dis-tance between a two-word and a four-word phrase is the same as the distance between a four-word and an eight-word phrase.

We will mainly use the Euclidean ( L 2 ) distance to compare points for clustering purposes. Our feature space is thus the Euclidean vector space R 7 N +8 .
To additionally make use of source-side word classes, we append elements analogous to the ones above to the vector, all further multiplied by a pa-rameter  X  src that allows trading off the relevance of source-side and target-side information. In the same fashion, we can incorporate multiple tagging schemes (e.g., word clusterings of different gran-ularities) into the same feature vector. As finer-grained schemes have more elements in the fea-ture vector than coarser-grained ones, and thus ex-ert more influence, we set the  X  parameter for each scheme to 1 /N (where N is the number of word classes of the scheme).
 The K-means algorithm To create the clusters, we chose the K-means algorithm (Steinhaus, 1956; MacQueen, 1967) for both its computational effi-ciency and ease of implementation and paralleliza-tion. Given an initial mapping from the data points to K clusters, the procedure alternates between (i) computing the centroid of each cluster and (ii) re-allocating each data point to the closest cluster cen-troid, until convergence.

We implemented two commonly used initializa-tion methods: Forgy and Random Partition. The Forgy method randomly chooses K observations from the data set and uses these as the initial means. The Random Partition method first randomly as-signs a cluster to each observation and then proceeds straight to step (ii). Forgy tends to spread the ini-tial means out, while Random Partition places all of them close to the center of the data set. As the resulting clusters looked similar, and Random Parti-tion sometimes led to a high rate of empty clusters, we settled for Forgy. We evaluate our approach by comparing translation quality, as evaluated by the IBM-BLEU (Papineni et al., 2002) metric on the NIST Chinese-to-English translation task using MT04 as development set to train the model parameters  X  , and MT05, MT06 and MT08 as test sets. Even though a key advantage of our method is its applicability to resource-poor languages, we used a language pair for which lin-guistic resources are available in order to determine how close translation performance can get to a fully syntax-based system. Accordingly, we use Chiang X  X  hierarchical phrase based translation model (Chiang, 2007) as a base line, and the syntax-augmented MT model (Zollmann and Venugopal, 2006) as a  X  X arget line X , a model that would not be applicable for lan-guage pairs without linguistic resources.

We perform PSCFG rule extraction and decoding using the open-source  X  X AMT X  system (Venugopal and Zollmann, 2009), using the provided implemen-tations for the hierarchical and syntax-augmented grammars. Apart from the language model, the lex-ical, phrasal, and (for the syntax grammar) label-conditioned features, and the rule, target word, and glue operation counters, Venugopal and Zoll-mann (2009) also provide both the hierarchical and syntax-augmented grammars with a rareness penalty 1 / cnt( r ) , where cnt( r ) is the occurrence count of rule r in the training corpus, allowing the system to learn penalization of low-frequency rules, as well as three indicator features firing if the rule has one, two unswapped, and two swapped nonterminal pairs, re-spectively. 2 Further, to mitigate badly estimated PSCFG derivations based on low-frequency rules of the much sparser syntax model, the syntax grammar also contains the hierarchical grammar as a back-bone (cf. Zollmann and Vogel (2010) for details and empirical analysis).

We implemented our rule labeling approach within the SAMT rule extraction pipeline, resulting in comparable features across all systems. For all systems, we use the bottom-up chart parsing decoder implemented in the SAMT toolkit with a reorder-ing limit of 15 source words, and correspondingly extract rules from initial phrase pairs of maximum source length 15. All rules have at most two non-terminal symbols, which must be non-consecutive on the source side, and rules must contain at least one source-side terminal symbol. The beam set-tings for the hierarchical system are 600 items per  X  X  X  (generic rule) cell, and 600 per  X  X  X  (glue) cell. 3 Due to memory limitations, the multi-nonterminal grammars have to be pruned more harshly: We al-low 100  X  X  X  items, and a total of 500 non- X  X  X  items, but maximally 40 items per nonterminal. For all sys-tems, we further discard non-initial rules occurring only once. 4 For the multi-nonterminal systems, we generally further discard all non-generic non-initial rules occurring less than 6 times, but we additionally give results for a  X  X low X  version of the Syntax target-line system and our best word class based systems, where only single-occurrences were removed.

For parameter tuning, we use the L 0 -regularized minimum-error-rate training tool provided by the SAMT toolkit. Each system is trained separately to adapt the parameters to its specific properties (size of nonterminal set, grammar complexity, features sparseness, reliance on the language model, etc.).
The parallel training data comprises of 9.6M sentence pairs (206M Chinese and 228M English words). The source and target language parses for the syntax-augmented grammar, as well as the POS tags for our POS-based grammars were generated by the Stanford parser (Klein and Manning, 2003). The results are given in Table 1. Results for the Syntax system are consistent with previous results (Zollmann et al., 2008), indicating improvements over the hierarchical system. Our approach, using target POS tags ( X  X OS-tgt (no phr. s.) X ), outper-forms the hierarchical system on all three tests sets, and gains further improvements when accounting for phrase size ( X  X OS-tgt X ). The latter approach is roughly on par with the corresponding Syntax sys-tem, slightly outperforming it on average, but not consistently across all test sets. The same is true for the  X  X low X  version ( X  X OS-tgt-slow X ).

The model based on bilingually tagged training instances ( X  X OS-src&amp;tgt X ) does not gain further im-provements over the merely target-based one, but actually performs worse. We assume this is due to the huge number of nonterminals of  X  X OS-src&amp;tgt X  ( (2  X  33 2 + 33)(2  X  36 2 + 36) = 5 . 8 M in princi-ple) compared to  X  X OS-tgt X  ( 2  X  36 2 + 36 = 2628 ), increasing the sparseness of the grammar and thus leading to less reliable statistical estimates.
We also experimented with a source-tag based model ( X  X OS-src X ). In line with previous findings for syntax-augmented grammars (Zollmann and Vo-gel, 2010), the source-side-based grammar does not reach the translation quality of its target-based coun-terpart; however, the model still outperforms the hi-erarchical system on all test sets. Further, decod-ing is much faster than for  X  X OS-ext-tgt X  and even slightly faster than  X  X ierarchical X . This is due to the fact that for the source-tag based approach, a given chart cell in the CYK decoder, represented by a start and end position in the source sentence, al-most uniquely determines the nonterminal any hy-pothesis in this cell can have: Disregarding part-of-speech tag ambiguity and phrase size accounting, that nonterminal will be the composition of the tags of the start and end source words spanned by that cell. At the same time, this demonstrates that there is hence less of a role for the nonterminal labels to resolve translational ambiguity in the source based model than in the target based model.
 Performance of the word-clustering based mod-els To empirically validate the unsupervised clus-tering approaches, we first need to decide how to de-termine the number of word classes, N . A straight-forward approach is to run experiments and report test set results for many different N . While this would allow us to reliably conclude the optimal number N , a comparison of that best-performing clustering method to the hierarchical, syntax, and POS systems would be tainted by the fact that N was effectively tuned on the test sets. We there-fore choose N merely based on development set per-formance. Unfortunately, variance in development set BLEU scores tends to be higher than test set scores, despite of SAMT MERT X  X  inbuilt algorithms to overcome local optima, such as random restarts and zeroing-out. We have noticed that using an L 0 -penalized BLEU score 5 as MERT X  X  objective on the merged n -best lists over all iterations is more stable and will therefore use this score to determine N .
Figure 1 (left) shows the performance of the distributional clustering model ( X  X lust X ) and its morphology-sensitive extension ( X  X lust-morph X ) ac-cording to this score for varying values of N = 1 ,..., 36 (the number Penn treebank POS tags, used for the  X  X OS X  models, is 36). 6 For  X  X lust X , we see a comfortably wide plateau of nearly-identical scores from N = 7 ,..., 15 . Scores for  X  X lust-morph X  are lower throughout, and peak at N = 7 .

Looking back at Table 1, we now compare the clustering models chosen by the procedure above X  resulting in N = 7 for the morphology-unaware model ( X  X lust-7-tgt X ) as well as the morphology-aware model ( X  X lust-7-morph-tgt X ) X  X o the other systems.  X  X lust-7-tgt X  improves over the hierarchi-cal base line on all three test sets and is on par with the corresponding Syntax and POS target lines. The same holds for the  X  X lust-7-tgt-slow X  version. We also experimented with a model variant based on seven source and seven target language clusters ( X  X lust-7-src&amp;tgt X ) and a source-only labeled model ( X  X lust-7-src X ) X  X oth performing worse.

Surprisingly, the morphology-sensitive cluster-ing model ( X  X lust-7-morph-tgt X ), while still improv-ing over the hierarchical system, performs worse than the morphology-unaware model. An in-spection of the trained word clusters showed that the model, while far superior to the morphology-unaware model in e.g. mapping all numbers to the same class, is overzealous in discovering mor-phological regularities (such as the  X -ed X  suffix) to partition functionally only slightly dissimilar words (such present-tense and past-tense verbs) into dif-ferent classes. While these subtle distinctions make for good partitionings when the number of clusters is large, they appear to lead to inferior results for our task that relies on coarse-grained partitionings of the vocabulary. Note that there are no  X  X rc X  or  X  X rc&amp;tgt X  systems for  X  X lust-morph X , as Chinese, be-ing a monosyllabic writing system, does not lend it-self to morphology-sensitive clustering.
 K-means clustering based models To establish suitable values for the  X  parameters and investigate the impact of the number of clusters, we looked at the development performance over various param-eter combinations for a K-means model based on source and/or target part-of-speech tags. 7 As can be seen from Figure 1 (right), our method reaches its peak performance at around 50 clusters and then levels off slightly. Encouragingly, in contrast to the hard labeling procedure, K-means actually im-proves when adding source-side information. The optimal ratio of weighting source and target classes is 0.5:1, corresponding to  X  src = . 5 . Incorporat-ing context information also helps, and does best for  X  cntxt = 0 . 25 , i.e. when giving contexts 1/4 the in-fluence of the phrase boundary words.
Entry  X  X means-POS-src&amp;tgt X  in Table 1 shows the test set results for the development-set best K-means configuration (i.e.,  X  src = . 5 ,  X  cntxt = 0 . 25 , and using 500 clusters). While beating the hier-archical baseline, it is only minimally better than the much simpler target-based hard labeling method  X  X OS-tgt X . We also tried K-means variants in which the Euclidean distance metric is replaced by the city block distance L 1 and the cosine dissimilarity, respectively, with slightly worse outcomes. Con-figuration  X  X means-POS-src&amp;tgt (  X  ins = . 5 ) X  in-vestigates the incorporation of non-boundary word tags inside the phrase. Unfortunately, these features appear to deteriorate performance, presumably be-cause given a fixed number of clusters, accounting for contents inside the phrase comes at the cost of neglect of boundary words, which are more relevant to producing correctly reordered translations.
The two completely unsupervised systems  X  X means-Clust-7-src&amp;tgt X  (based on 7-class MKCLS distributional word clustering) and  X  X means-Clust-7..36-src&amp;tgt X  (using six different word clustering models simultaneously: all the MKCLS models from Figure 1 (left) except for the two-, three-and five-class models) have the best results, outperforming the other K-means models as well as  X  X yntax X  and  X  X OS-tgt X  on average, but not on all test sets.

Lastly, we give results for  X  X low X  K-means config-urations ( X  X means-POS-src&amp;tgt-slow X  and  X  X means-Clust-7..36-s&amp;t-slow X ). Unfortunately (or fortu-nately, from a pragmatic viewpoint), the models are outperformed by the much simpler  X  X OS-tgt-slow X  and  X  X lust-7-tgt-slow X  models. Hassan et al. (2007) improve the statistical phrase-based MT model by injecting supertags , lexical in-formation such as the POS tag of the word and its subcategorization information, into the phrase table, resulting in generalized phrases with placeholders in them. The supertags are also injected into the lan-guage model. Our approach also generates phrase labels and placeholders based on word tags (albeit in a different manner and without the use of subcat-egorization information), but produces PSCFG rules for use in a parsing-based decoding system.

Unsupervised synchronous grammar induction, apart from the contribution of Chiang (2005) dis-cussed earlier, has been proposed by Wu (1997) for inversion transduction grammars, but as Chiang X  X  model only uses a single generic nonterminal la-bel. Blunsom et al. (2009) present a nonparamet-ric PSCFG translation model that directly induces a grammar from parallel sentences without the use of or constraints from a word-alignment model, and Cohn and Blunsom (2009) achieve the same for tree-to-string grammars, with encouraging results on small data. Our more humble approach treats the training sentences X  word alignments and phrase pairs, obtained from external modules, as ground truth and employs a straight-forward generalization of Chiang X  X  popular rule extraction approach to la-beled phrase pairs, resulting in a PSCFG with mul-tiple nonterminal labels.

Our phrase pair clustering approach is similar in spirit to the work of Lin and Wu (2009), who use K-means to cluster (monolingual) phrases and use the resulting clusters as features in discriminative clas-sifiers for a named-entity-recognition and a query classification task. Phrases are represented in terms of their contexts, which can be more than one word long; words within the phrase are not considered. Further, each context contributes one dimension per vocabulary word (not per word class as in our ap-proach) to the feature space, allowing for the dis-covery of subtle semantic similarities in the phrases, but at much greater computational expense. Another distinction is that Lin and Wu (2009) work with phrase types instead of phrase instances, obtaining a phrase type X  X  contexts by averaging the contexts of all its phrase instances.

Nagata et al. (2006) present a reordering model for machine translation, and make use of clustered phrase pairs to cope with data sparseness in the model. They achieve the clustering by reducing phrases to their head words and then applying the MKCLS tool to these pseudo-words.

Kuhn et al. (2010) cluster the phrase pairs of an SMT phrase table based on their co-occurrence counts and edit distances in order to arrive at seman-tically similar phrases for the purpose of phrase table smoothing. The clustering proceeds in a bottom-up fashion, gradually merging similar phrases while al-ternating back and forth between the two languages. In this work we proposed methods of labeling phrase pairs to create automatically learned PSCFG rules for machine translation. Crucially, our methods only rely on  X  X hallow X  lexical tags, either generated by POS taggers or by automatic clustering of words into classes. Evaluated on a Chinese-to-English transla-tion task, our approach improves translation qual-ity over a popular PSCFG baseline X  X he hierarchi-cal model of Chiang (2005)  X  X nd performs on par with the model of Zollmann and Venugopal (2006), using heuristically generated labels from parse trees. Using automatically obtained word clusters instead of POS tags yields essentially the same results, thus making our methods applicable to all languages pairs with parallel corpora, whether syntactic re-sources are available for them or not.

We also propose a more flexible way of obtaining the phrase labels from word classes using K-means clustering. While currently the simple hard-labeling methods perform just as well, we hope that the ease of incorporating new features into the K-means la-beling method will spur interesting future research.
When considering the constraints and indepen-dence relationships implied by each labeling ap-proach, we can distinguish between approaches that label rules differently within the context of the sen-tence that they were extracted from, and those that do not. The Syntax system from Zollmann and Venugopal (2006) is at one end of this extreme. A given target span might be labeled differently de-pending on the syntactic analysis of the sentence that it is a part of. On the other extreme, the clus-tering based approach labels phrases based on the contained words alone. 8 The POS grammar repre-sents an intermediate point on this spectrum, since POS tags can change based on surrounding words in the sentence; and the position of the K-means model depends on the influence of the phrase contexts on the clustering process. Context insensitive labeling has the advantage that there are less alternative left-hand-side labels for initial rules, producing gram-mars with less rules, whose weights can be more accurately estimated. This could explain the strong performance of the word-clustering based labeling approach.

All source code underlying this work is available under the GNU Lesser General Public License as part of the Hadoop-based  X  X AMT X  system at: www.cs.cmu.edu/  X zollmann/samt We thank Jakob Uszkoreit and Ashish Venugopal for helpful comments and suggestions and Yahoo! for the access to the M45 supercomputing cluster.
