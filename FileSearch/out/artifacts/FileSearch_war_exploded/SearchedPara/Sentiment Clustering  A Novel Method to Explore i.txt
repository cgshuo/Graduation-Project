 of media on the Web. Blogs are often online diaries published and maintained by The contents of the blogs include commentaries or discussions on a particular subject, ranging from mainstream topics (e.g., food, music, products, politics, etc.), to highly express their opinions and sentiments in the Web age. 
Currently, there is a great number of blogs on the Internet. By February 2008, the famous blog search engine Technorati [16] had tracked more than 112.8 million blogs. As the number of blogs and bloggers increases dramatically, how to provide an effective way to access the blogs and make full use of the blog contents have become the major concern for both research and industrial communities. There are some pre-Several commercial blog search engines and blog tagging systems [6, 16] have been published on the Web. Most of the blog contents are about bloggers X  opinions, feelings and emotions [12]. Some commercial web search engines have launched blog retrieval services. But information in the blogs. However, the opinions and sentiments, which are very im-portant feature of the blog documents, are not searched by these tools [22]. For exam-ple, if a person wants to know other bloggers X  opinions and reviews about certain movie, he or she may type the movie X  X  name, such as  X  Hancock  X , in Google blog several top blogs in the results, so he or she only gets the opinions about the movie in other people X  X  opinions. Moreover, the affective blogs are mixed with the informative discussions above, we can see that the traditional blog search engines do not provide a some obstacles and limitations for people to make better understanding of bloggers' opinions and sentiments when exploring in the blogosphere. 
In this paper, we propose a novel method to group blog search results by sentiment clustering. Usually, bloggers express their feelings and emotions in a much complex way, but most previous work on sentiment analysis simply classify blogs as positive and negative, and do not provide a comprehensive understanding of the sentiments reflected in the blogs. Different from bina ry classification problem, we present a sen-timent clustering algorithm to group blog search results. The sentiment similarity blogs into clusters to allow better organization and easy navigation. For business companies and governments, they can quickly collect people X  X  attitudes about their products and services. For individual users, our methods can provide them a brand new way to explore in the blogosphere. 
The rest of the paper is organized as follows. Section 2 introduces the related work on blog mining and sentiment analysis. Section 3 analyzes the sentiment characteristics of blog search result items. Section 4 describes sentiment clustering and navigation words extraction algorithms for blog search results. Section 5 provides experimental results on real world blog search engine. Finally we present concluding remarks and future work in Section 6. 2.1 Blog Mining Blogs have recently attracted a lot of interest from both computer researchers and sociologists. According to Mei X  X  study, blogs mainly have two unique characteristics [10]: (1) blogs are mainly maintained by individual persons and the contents are gen-form localized communities. 
One direction of blog mining focuses on analyzing the contents of blogs. Gruhl et [5] gave a temporal analysis on blog contents and proposed a method to discover shared the similar topic distribution in their blogs. The other direction of blog mining focuses on studying the link structure of blogosphere. Tseng et al. [17] combined blog rankings with their social connections to provide a framework to understand multiple blog communities and a mountain view visualization was provided to explore differ-blog space, and developed views of the graph as a function of time. 
Blog search is also a hot topic in this area. Mishne et al. [11] studied blog search-ers' behavior and the result showed that the users are usually interested in the first few results only. Google recently has launched a new homepage for blog search so that the groups the blogs into several predefined categories, such as politics, business and technology, and the users can find a collection of the most interesting and recent posts on the topic. In [20] and [4], the Web search result snippets were clustered into groups according to sub-topics of the given query and highly readable names were extracted from each cluster to facilitate users' quick browsing through search results. 
Our work is quite different from the existing studies on blogs. Most of existing work focuses on providing topic-based search interface or trend analysis for blogs. We proposes a novel method to group the blog search results into sentiment clusters, which provides a brand new way for uses to explore in the blogosphere and facilitate public opinion monitoring for governments and business organizations. 2.2 Sentiment Analysis Sentiment analysis is the main task of opinion mining, and most of existing work focuses on determining the sentiment orientations of documents, sentences and words. In document level sentiment analysis, documents are classified into positive and nega-tive according to the over all sentiment expressed in them. Turney et al. [18] measured the strength of sentiment by the difference of the Pointwise Mutual Information (PMI) between the given phrase and the seed words. In [13], Pang et al. treated the problem namely positive and negative. The authors employed three machine learning ap-proaches (Naive Bayes, Maximum Entropy, and Support Vector Machine) to label the polarity of IMDB movie reviews. overall sentiment the author expressed. However, the emotions that bloggers want to express are much more complex. Therefore, it would be too simplistic to classify blogs into just positive and negative categories. Different from the traditional classifi-sentiment clustering method for blog search result items. An interactive clustering method for grouping documents by sentiment has been proposed in [2]. However, the experiments in that paper are based on long text dataset, and the clustering results are restricted to four categories: strongly di sliked, somewhat disliked, somewhat liked and strongly liked. Our method can cluster blog search result snippets which are usually very short, and extract navigational sentiment words in each cluster. Given a query key word, our goal is to find the topic relevant blogs and cluster them whole blog articles as input, since the downloading of original blogs is time-consuming and the clustering algorithm should be fast enough for online calculation. 3.1 Blog Search Results Analysis The commercial blog search engines usually use traditional Web search techniques and rank the results by their topic relevance, which does not consider the latent senti-ments and opinions expressed in the blogs. Each search result item is composed of titles and snippets. We issue the movie name  X  Hancock  X  in Google Blog Search, and then several results are collected and shown in Table 1. 
Hancock 2008 DVDRip Hancock.DVDRip.XviD-following characteristics: (1) The titles and snippets are highly relevant to the given query key word. That X  X  because the blog search engine employs sophisticated and mature techniques to get the most topic relevant articles and snippets; (2) Some of the titles and snippets contain the bloggers X  sentiments and opinions. As the search results are highly topic-coherent, the sentiment words in search results mainly reflect the bloggers X  opinions about the given query key word; (3) Since not all the blogs contain authors X  emotions, there are some informative results mixed up with affective ones. For example, the last two result items in Table 1 tell us the downloading information of Hancock DVDRip. good topic relevant retrieval interface, however, they do not provide a convenient way for users to get bloggers X  opinions and sentiments. In Section 3.2, we employ a lexi-words in search result items. 3.2 Lexicon Based Sentiment Word Mining The emotion orientation of words is the foundational and indispensable resource for sentiment analysis. The statistics based and learning based sentiment word acquisition methods are not suitable for our clustering algorithm, because they always need train-based sentiment word acquisition method to find the emotion words in blog search result items. 
WordNet [19] is a large lexical database of English. Nouns, verbs, adjectives and adverbs are grouped into sets of cognitive synonyms (synsets), each expressing a distinct concept. Synsets are interlinked by means of conceptual-semantic and lexical relations. The resulting network of meaningfully related words and concepts can be accessed by programming interface. WordNet's structure makes it a useful tool for computational linguistics and natural language processing. 
SentiWordNet [3] is a lexical resource for opinion mining. SentiWordNet assigns The basic assumption of SentiWordNet is that terms with similar polarity tend to have both contain derogative expressions. Therefore SentiWordNet is developed based on resulting vector term representations for semi-supervised synset classification. The ternary classifiers, all characterized by similar accuracy levels but different classifica-tion behavior. SentiWordNet has been widely used in the previous literatures. Words with positive or negative score above a threshold in SentiWordNet are used by some participants of the TREC opinion retrieval task [21]. Extensive experiments show that SentiWordNet is a very effective and efficient lexicon tool for sentiment analysis. 
Using SentiWordNet, we propose a lexicon based method to mine the sentiment words in blog search results. The method includes the following steps: (1) Label the words in the titles and the snippets with Part-of-Speech (POS) tags. (2) Remove the stop words. (3) Stemming. Notice that we only convert the plural nouns into singular form and transform the verbs into the present tense. We do not conduct other stemming algorithm to the words because we must keep their original sentiment meanings. (4) Word sense disambiguation. To get the correct score of a given word in Senti-WordNet, we must know its POS tag and the sense in the given context. WordNet based sense disambiguation algorithm is employed to find the appropriate meaning of the word in result items. (5) Words with positive or negative score above a threshold in SentiWordNet are picked out as sentiment words in blog search results. Different threshold settings may experiment section. After these 5 steps, we can extract the sentiment words from the search result items. If where we conduct our further sentiment clustering algorithm; otherwise, the result item is regarded as having no sentiment indication, and classified into informative category. 3.3 Sentiment Word Similarity Computing In Section 3.2 we introduce the lexicon based method to extract sentiment words and classify blog search result items into affective and informative categories. For further clustering steps, we must calculate the similarity between words in the affective cate-gory. Several methods have been proposed to compute word similarity based on WordNet. Extended Gloss Overlaps: Each concept (or word sense) in WordNet is defined by a that gloss as a unique representation for the underlying concept [14]. The lesk meas-ure assigns similarity by finding and scoring overlaps between the glosses of the two concepts, as well as concepts that are dir ectly linked to them according to WordNet. The bigger number of overlap gloss words is, the bigger similarity value between two concepts is. matrix from a corpus made up of the Word Net glosses [14]. Each content word used of gloss vectors. Gloss Vector (pairwise): The Gloss Vector (pairwise) measure ( Vector_Pairs for glosses of concepts with adjacent glosses [ 14]. The regular Gloss Vector measure first combines the adjacent glosses to form one large "super-gloss" and creates a single vector corresponding to each of the two concepts from the two "super-glosses". The pairwise Gloss Vector measure, on the other hand, forms separate vectors correspond-ing to each of the adjacent glosses (does not form a single super gloss). 
These three WordNet based algorithms make use of the glosses to find the similar-ity between words. As terms with similar emotion meanings tend to have similar glosses, these algorithms also reflect the sentiment similarity between words. We will test the effectiveness of these three algorithms in the experiment section. 4.1 Sentiment Clustering for Blog Search Results emotions, and group the documents by their sentiment similarity. That is to say, if two documents express similar emotions, they should be clustered into the same group. People X  X  feelings and emotions are complex, so there should be more than just posi-tive and negative groups in the clustering results. 
We define the affective blog search result items as the items that contains senti-categories. So we get: equal to 1. We define two kinds of measurement MaxSim ij and AvgSim ij for sentiment similarity between r i and r j : where the function WordSim calculates the sentiment word similarity based on the algorithms introduced in Section 3. Therefore, the max value and average value of the word sentiment relatedness are used to represent the similarity between blog measurements in the experiment section. 
Based on the defined similarity measurements, we can employ the existing cluster-result items based on K-Medoids algorithm, which has already been proved to be an effective Web search snippets clustering method. 4.2 Key Sentiment Words Extraction for Exploring Navigation also convey the emotion contents of the clus ters to the users concisely and accurately. The navigation sentiment words are most useful when the user can decide at a glance whether the contents of a cluster are of interest. Here we define three properties for the given cluster SC k as follows: with the coherent emotions, the sentiment words which appear most frequently can represent the emotions expressed in SC k . The property is defined as: where f ( sw ) calculates the appearance frequency of sentiment word sw in SC k . Sentiment Word Count per Result: The blog search result item which contains the most number of sentiment words can provide a wealth of information about bloggers X  defined as: where Count ( SW i ) calculates the number of sentiment word in SW i of the given result item r i . Sentiment Word Strength: The word with higher sentiment strength can be a better SentiWordNet to represent sw  X  X  emotion strength. The Sentiment Word Strength property is defined as: rules: (1) Find the word with the top 3 biggest SWF in SC k ; (2) If more than 3 words are found, choose the top 3 words according to SWS . which can help users to make decisions when exploring in the blogosphere. Another ment cluster. We employ Sentiment Rank function to sort the result items by their average emotion strength. The formula is defined as: Given a cluster SC k , we calculate SentiRank of each result item r , and rerank the items according to SentiRank value in descent order. Together with key sentiment words extraction, we can provide users more readable and useful blog search results. Our experiment is conducted on a commodity PC with Windows XP, Pentium D CPU and 1GB RAM. Given a query word, we use Google SOAP Search API to find the  X  inurl : X  is used to restrict the search results in the blogosphere. We restrict the search results in the world X  X  three major blog web sites: MSN Live Spaces, Google Blogspot and WordPress.com, which provide us a wealth of information about the bloggers X  opinions all around the blogosphere. 
The algorithms of word sentiment similarity computing and word sense disam-biguation are all implemented based on WordNet. WordNet::Similarity [14] is a freely available software package that makes it possible to measure the semantic simi-WordNet::SenseRelate is used to perform word sense disambiguation. It measures the sense that is most related to its neighbors. 
First we evaluate our algorithm for identifying the affective blogs in the search re-sult items. We collect 1258 result items from Google with the query key word  X  X an-not pay attention to the sentiment polarity of the words. Three human annotators label the items with Y/N tag, i.e. sentiment result/non-sentiment result. We use the algo-rithm proposed in Section 3 to mine the sentiment words. Different thresholds of the and the results are compared to the human an notators. The result is shown in Figure 1. 
Figure 1 describes the F-score of recognizing blog search result sentiment items by using the algorithm in Section 3. The X-axis is the threshold of sentiment score. From threshold of SentiWordNet when we classify the result items. Since our goal is to search sentiment results coverage and an acceptable precision. 
We have ranked the result item in each cluster by their average sentiment strength, and we use precision ( P ) at top N results to measure the performance: coherent to the extracted key sentiment wo rds. The result is shown in Figure 2: 
In Figure 2, LM represents Lesk word similarity computing algorithm and MaxSim result items sentiment similarity computing algorithm. So LA, VM, VA, VPM, VPA P @ N performance. We employ Vector -AvgSim algorithm to cluster 200 blog search result items with the query key word  X  Hancock  X  and extract the key sentiment words in each cluster, as shown in Figure 3. 
We can see from Figure 3 that, our method have clustered the dataset into 6 groups about 2% of all items. According to Figure 2, the key sentiment words in Figure 3 can provide a very brief but effective summarization of the sentiments in each cluster. To record the time cost of our Vector-AvgSim sentiment clustering algorithm as shown in search engine, and the Y-axis is the time spent in second. 
Google uses traditional Web search engine techniques to retrieval the blogs and ranks the results by topic relevance and authority scores. Previous sentiment analysis systems simply classify the blogs into positive and negative categories. The experi-ments prove that compared to the other approaches, our method has the following advantage. Firstly, our method can reflect the complexity of emotions and it employs clusters to group bloggers X  sentiments. Secondly, our method provides a novel and effective sentiment-oriented blog search a pproach. Thirdly, the blog search result items can be reorganized by embedded emotions and ranked by sentiment strength. Key sentiment words extracted in each cluster are good navigation guidelines for users to explore in the blogosphere. The traditional blog search engines only provide topic-oriented retrieval interface and it is not convenient for users to make better understanding of bloggers' opinions and emotions. In this paper, we propose a lexicon-based sentiment clustering algorithm to group blog search result items according to their emotions. Experimental results demonstrate that we can classify the blog search result items into affective and informative categories and generate correct sentiment clusters by their embedded emotions, thus could improve users' browsing efficiency through blog search results. 
The product reviews are useful data source for both individual customers and busi-method to analyze people X  X  opinions about certain product and help latent customers and company leaders to make decisions. 
