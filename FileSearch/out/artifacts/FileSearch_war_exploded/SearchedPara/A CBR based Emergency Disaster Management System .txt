 Disaster is a sudden unexpected accident resulting from natural or man-made factors or a combination of both that takes a heavy toll on the community and the eco system conditions of humans and flora/fauna. In recent times disaster management received acknowledgement that good governance, in a caring and civilized society, needs to deal effectively with the devastating impact of disasters. Needs are strongly being felt Support System (DSS) capable of giving guidance as to how to govern and tame the disastrous forces to mitigate the damage. Emergency Disaster Management systems (EDMS) may be used by organizations to assist in responding to an emergency situation. This system suitably analyses data, and makes decision in an emergency response. This system used rarely, but when needed, must function well. Due to the effective emergency response systems has been recognized globally as discussed in information systems to support knowledge management, where metadata descriptions for characterizing knowledge items are used. These characterizations are called cases and are stored in a case base (CB) as in [4]. CBR is an important reasoning method similar problems (source cases) in the case base as referred in [5]. It is an important research direction of artificial intelligence in recent years. It has been widely applied into the problem solutions, such as law case, medication, diagnoses, Computer-aided design and so on. According to Recio-Gar X a and D X az-Agudo [6], ontology would support CBR approach. Ontology is defined as a vocabulary to describe cases and/or queries, as a knowledge structure where the cases are located, and as the knowledge source to achieve semantic reasoning methods for similarity assessment and case adaptation that are reusable across different domains. Our proposed work is that of a model of emergency disaster management system (EDMS). It is a simple application of CBR on Query-Retrieval of a disaster case in event of a disaster where, the case emergency condition as a problem submitted as a Query to the EDMS, compares the query with the previous cases in case base using a similarity function, and returns the according with the restrictions of the query. The EDMS assists the disaster management team to take decisions based on the solutions offered by the EDMS. In this section, we briefly describe previous emergency decision support system on Case based reasoning. In paper [7], research on method of CBR and its Application in Emergency Commanding and Decision-making has been done. The features of emergency commanding and decision-making is elaborated. Paper [8] discusses case-Based reasoning Intelligent Decision Approach for Firefighting Tactics. To improve based reasoning (CBR) and rule-based reasoning (RBR), are combined and applied to reasoning practices may offset their weaknesses. Emergency disposal of the Traffic Accidents in Regional Highway Network is described in paper [9] where efficient emergency disposal can rapidly restore communications, thus reducing property loss and casualties. In paper [10] is described an approach of information processing for CBR in Emergency Management Engineering, where author proposes an approach of generating imperfect cases from raw information with information evaluation and ranking. First, the derivation of information was assessed. Moreover, to implement gathered information was labeled with keywords, and the key words gained weight according to the word frequency and the ontology. Finally, the case was represented by a set of keywords with their weights. For many emergency domains, this strategy making to some extent. Paper [11] proposed a mobile-based emergency response system (MERS) to help reduce risks in emergency situations. Here MERS uses ontology-supported case-based reasoning (OS-CBR) technique to support emergency decision makers to effectively respond to emergencies. The paper [12]employs Case-based reasoning for automated safety risk analysis on subway operation. Risk analysis is a core process of safety management. By analysis of the precursors appeared on the sub-way system, the safety risk could be identified and effective measures could be taken to avoid accident. This paper proposes the use of Case-Based Reasoning (CBR), which combines case representation and retrieval to analyze safety risk. The physical system and environment. The flexibility of the method allows multiple forms of qualitative precursors to be used when only qualitative aspects are known. Details have been provided on the case representation scheme and automated retrieval mechanism. A real-world example demonstrates the feasibility of the proposed method. The results of the case study show that the similarity between the stored case (HET3) and the input case is only 0.22. Given a similarity baseline, the safety risk and retrieved case. The proposed method increases the applicability of conventional CBR analysis to many real-world settings, where the safety risk analysis depends on more qualitative precursors. This paper proposes a model of an emergency disaster management system (EDMS) which is ontology supported based on jCOLIBRI version 2 that assists decision making in an Emergency situation. Section 3 gives the disaster case representation, Section 4 gives a sort account on Case Based Reasoning concept, Section 5 discusses on CBR working principle of EDMS, Section 6 represents system implementation &amp; Section 7 winds up with Conclusions and future works. description and its related solution. Problem case is described by a set of attributes. Since CBR (Case Based Reasoning) is based on knowledge, case itself is knowledge. For a given case base CB, withC  X  ,C  X  denoting the problem description and solution The Case Representation in EDMS is as per Table-I. 
Case based reasoning (CBR) was first proposed by Schank and Abelson in 1970. It is a paradigm for combining problem-solving and learning that has become one of the most successfully applied subfields in Artificial Intelligence. CBR is based on similar to previously encountered problems and, therefore, that past solutions may be of use in the current situation .CBR is rooted in the works of Roger Schank on dynamic memory and the central role that a reminding of earlier episodes (cases) and scripts (situation patterns) has in problem solving and learning. CBR is particularly applicable to problems where earlier cases are available, even when the domain is not understood well enough for a profound domain model. The tasks of 
CBR system are often divided into classification and problem solving. Over the decade CBR was widely applied to various field such as medical application, 
Industrial application, management, Business, Tourism and personalization and outer fields. 
In general CBR cycle is commonly described by four activities (Aamodt and Plaza, 1994) (2) as 4 R X  X ; Retrieve, Reuse, Revise and Retain. 1. Retrieve the most similar cases to the problem description. 2. Reused the solution suggest by the similar case. 3. Revise or adapt that solution to better fit the new problem. 4. Retain the new solution once it has been confirmed or validate. Fig. 1 Shows the CBR working process. The component mainly consists of case retrieval, case adaptation, and case preservation (retain). According to fig 1, the case re-use will be substituted by case adaptation, if the similarity between the retrieved case and the target case is less than a predefined threshold. Subsequently, the case revision will be affected. However, we consider the substituting phases (case re-use and case adaptation), along with the revise phase, in one single stage in Fig 1, namely the Adaptation Stage, because of their close relations in the implementation process. This stage consists of a cycle of revise and re-uses stages that repeat until a suitable solution is generated by the system. 5.1 Case Retrieval Cases retrieved in the database are ranked based on their similarity, called suitability, compared to the new disaster case. The value of suitability is between 0 (not at all average of suitability of each selected retrieval parameter,  X   X  X  X  .  X   X  : Similarity of parameter i when a (new) disaster case value and a value in (old) case number j are compared to each other, N: number of all parameters. For the numerical parameters, the suitability values were calculated by this Equation (2) Where Si,j: suitability of parameter i when a (new) disaster value and avalue in (old) case number j are compared to each other, Ci,j: value of the parameter i of the case j, Xi: input value of the parameter i, Wi: user-given weight factor of the parameter i. The interval value [a,b] is calculatedby the following rules: if data _ type is 0 INTERVAL0 and a  X  Cij  X  b then  X  The maximum and minimum numeric value is calculated by the following rules: If data-type is  X  X IN X  and  X   X   X   X   X  X  X  then  X  If data-type is  X  X AX X  and  X   X   X   X   X  X  X  then  X  If data-type is  X  X TRING X  and  X   X  (  X   X  )=C(  X  ) then  X  The linguistic value similarity (high, medium and low ) is calculated in the following way If  X   X  =  X   X  X  X  then  X   X  X  X  =  X   X  X  X  =  X   X  If  X   X   X   X   X  X  X  and  X   X  X  X  =midium then  X  The Case Retrieval algorithm (Algorithm1) works as follows: We assume that the case base stores hierarchical data related to a given disaster situation. When a new problem similar profile. The similarity of the new problem to the store cases is determined by calculating the distance between case features. Then, once the more similar cases has generate an accurate solution. 5.2 Algorithm 1: Case Retrieval Algorithm Input: A new case C is described by n features,  X = { X 1,  X 2... X n}, Output : Similarity degree of a new case within the case base. Local variables: Old case C X  is described by a set of features as Follows:  X ={ X 1,  X 2,..., X n}, where n is number of case features, Data-type= {numeric, string, interval, linguistic}, Weight (W) is the weight factor of the feature  X  so that W= {w1, w2,...,wn}, Feature-function (F) is the function Factor of feature  X , Such that F= {Equal, Threshold, Interval},  X  is a specified Threshold value Begin Starting from i=1, select one case Ci (0 X i X m) Begin For each  X j of C X  do (0 X j X n). Begin Compare feature value of  X  and  X : if fi (data-type)= X  X umeric X  Case of (Feature-function= X  X qual X ) then do Eq. (2) Case of (Feature-function= X  X nterval X )then do Eq. (3) if fi (data-type)= X  X tring X  then do Eq. (6) Case of (Feature-function= X  X hreshold X ) then do Eq. (7) Case of (Feature-function= X  X nterval X ) then do Eq. (3) Case of (Feature-function= X  X inguistic X ) then do Eq. (7) and (8) Case of (Feature-function= X  X ax and mini X ) then do Eq. (4)and (5) End Calculate the average of each retrieved case by Eq. (1) 5.3 Case Adaptation Case adaptation is the process of transforming the most similar cases retrieved from the case base into a solution appropriate for the current problem. There are three types of adaptation substitution adaptation, transformational adaptation and generative adaptation. Our system uses the substitution adaptation strategy. Substitution is used requirements. For example, part of an emergency rescue plan in a past disaster may knowledge that is described in ontology. The steps of the case adaptation algorithm (Algorithm 2) are described as follows: for every selected case in the retrieval phase, the distance between the case and its solution is calculated. If the difference of the proposed solution and those of the selected cases is acceptable, then the solution is considered as a valid one. If necessary, substitute unacceptable components violated using the predefined semantic knowledge and make other adjustments. The user is then informed and the process continues to select new cases from the case base. 5.4 Algorithm 2: Case Adaptation Algorithm Input: A new case C={f, X , X } is described by the following attributes: 1) Set of features f={f1,f2,...,fn}, where n is number of case features 2) Set of solution  X ={ X 1, X 2,..., X k}, where k is number of case solutions A retrieved case C X ={f X , X  X , X  X  X  is described by the following attributes: Set of features f X ={f1  X ,f2  X ,...,fn  X  X , where n is number of case features Set of solution  X  X ={ X 1  X , X 2  X ,..., X k ; }, where k is number of case solutions Output: Case adaptation Local variables: PK represents a set of constraints; D represents a set of differences attributes Begin Step 1. Retrieve the most similar case from the case base Step 2. Determine the differences between cases, so that di=fi X  X  X fi Where di  X  D for i=1,2,3...,n, n is the number of features, Step 3.  X  di  X  D Search for suitable substitution using Predefined semantic knowledge and constraint (PK) Step 4.Perform the substitution and make appropriate changes. End To verify the usefulness of our proposed CBR approach, we have proposed implementation of our proposed approach in jCOLIBRI v2.jCOLIBRI V2is used to develop knowledge intensive CBR applications. It is a white box framework open to java developers to include all the features of jCOLIBRI in their CBR applications. Here, the cases are stored in a pre-defined ontology in jCOLIBRI.v2 framework. It helps in integration of ontology in them. Integration of ontology in the CBR applications facilitates case representations. For determining similarity between the cases for similarity based retrieval of a query case, content-based reasoning methods are used. The ontology support of jCOLIBRI is built around Onto Bridge library as in [13] developed by GAIA research group [14] to easily manage ontologies with Description Logic Reasoners for use in Semantic Webs. This new design is a jCOLIBRI in their CBR applications. In Configure Query stage user can choose the preferred attributers as shown in Fig. 2.Here the user sets value of different attributes of the current Disaster emergency situation. thesimilarity used to retrieve the Case most similar tothe given Query. jCOLIBRI2 theattribute (integers, strings, etc.).Weights can be assigned to each attribute of the query that will be taken into account when computing theaverage of all attributes. Also, some similarity functions canhave parameters used to configure the similarity measure.Finally, the k value indicates how many cases mustbe retrieved. Next stage is Case Retrieved stage shown in fig.4.This step retrieved K-most similar cases by the above algorithm. The next step is that the system adapts the retrieved Cases to the requirements of the user depending on the values defined in the Query. In EDMS, we adapt the number of Fire Tankers required depending on the Number of dead, Number of Fire workers, Number of Evacuation Vehicles, Guarding Staffs, defined in the query. We also adapt the Ambulances required depending on the no of wounded in the region. In our system, we use simple direct proportions to perform the adaptation. After adapting the solution of the Cases, their description can be substituted by the description of the Query. At this point, the system will manage a list of working Cases that are different from the Cases in the Case Base. These working Cases represent possible solutions to the problem described in the Query. The next step Shown in fig 5.Once cases have been adapted, the user (or a domain expert, in this case the disaster handling agent) would adjust the values of the working cases in a manual way in that Revise case. In the final Retain stage, the case base is used for future queries using the rest of the CBR cycle. Finally, the Disaster handling agent would save the new emergency case into the case base for being used in future queries. If it is done, a new Id must be assigned to the Disaster Case. emergency situation. HereFeatures of emergency cases are summarized and the populate the Case base and system has been run applying the algorithms. The future work lies in implementing the theory with real cases of disaster. 
