 Using a novel evaluation toolkit that simulates a human re-viewer in the loop, we compare the effectiveness of three machine-learning protocols for technology-assisted review as used in document review for discovery in legal proceedings. Our comparison addresses a central question in the deploy-ment of technology-assisted review: Should training docu-ments be selected at random, or should they be selected using one or more non-random methods, such as keyword search or active learning? On eight review tasks  X  four de-rived from the TREC 2009 Legal Track and four derived from actual legal matters  X  recall was measured as a func-tion of human review effort. The results show that entirely non-random training methods, in which the initial train-ing documents are selected using a simple keyword search, and subsequent training documents are selected by active learning, require substantially and significantly less human review effort ( P&lt; 0 . 01) to achieve any given level of recall, than passive learning, in which the machine-learning algo-rithm plays no role in the selection of training documents. Among passive-learning methods, significantly less human review effort ( P&lt; 0 . 01) is required when keywords are used instead of random sampling to select the initial training doc-uments. Among active-learning methods, continuous active learning with relevance feedback yields generally superior results to simple active learning with uncertainty sampling, while avoiding the vexing issue of  X  X tabilization X   X  determin-ing when training is adequate, and therefore may stop. Categories and Subject Descriptors: H.3.3 Information Search and Retrieval: Search process, relevance feedback. Keywords: Technology-assisted review; predictive coding; electronic discovery; e-discovery.  X 
The views expressed herein are solely those of the author and should not be attributed to her firm or its clients.
The objective of technology-assisted review ( X  X AR X ) in electronic discovery ( X  X -discovery X ) 1 is to find as nearly all of the relevant documents in a collection as possible, with reasonable effort. While this study does not presume to interpret the common-law notion of what is reasonable, it serves to quantify the tradeoff between how nearly all of the relevant documents can be found (as measured by recall), and the human effort needed to find them (as measured by the number of documents that must be manually reviewed, which translates into time and cost).

In a typical review task, a  X  X equesting party X  prescribes relevance 2 by way of a  X  X equest for production, X  while the  X  X esponding party, X  X ts adversary, is required to conduct a re-view and produce the responsive, non-privileged documents identified as a result of a reasonable search. A study by Grossman and Cormack [8] shows that two TAR methods can be both more effective and more efficient than tradi-tional e-discovery practice, which typically consists of key-word or Boolean search, followed by manual review of the search results. One of these methods, due to Cormack and Mojdeh [7], employs machine learning in a protocol we re-fer to as Continuous Active Learning ( X  X AL X ). The other method, due to H5 [13], does not employ machine learning, and therefore is not considered in this study.

Often relying on Grossman and Cormack for support, many legal service providers have advanced TAR tools and methods that employ machine learning, but not the CAL protocol. These tools and methods, often referred to in the legal marketplace as  X  X redictive coding, X  follow one of two protocols which we denote Simple Active Learning ( X  X AL X ) and Simple Passive Learning ( X  X PL X ). Some tools that em-ploy SAL have achieved superior results at TREC, but have never, in a controlled study, been compared to CAL. Tools that use SPL, while widely deployed, have not achieved su-perior results at TREC, and have not, in a controlled study, been compared to traditional methods, to SAL, or to CAL.
See Grossman and Cormack [10] for a glossary of terms per-taining to TAR. See Oard and Webber [16] for an overview of information retrieval for e-discovery.
The IR term  X  X elevant X  generally describes a document sought by an information-retrieval effort, while the legal term  X  X esponsive X  describes a document that satisfies the criteria set forth in a request for production. In this study, the terms are used interchangeably; however, in the context of litigation, relevance may take on a broader meaning than responsiveness.
This study compares CAL, SAL, and SPL, and makes available a TAR evaluation toolkit 3 to facilitate further com-parisons. The results show SPL to be the least effective TAR method, calling into question not only its utility, but also commonly held beliefs about TAR. The results also show that SAL, while substantially more effective than SPL, is generally less effective than CAL, and as effective as CAL only in a best-case scenario that is unlikely to be achieved in practice. The TAR process, in the abstract, proceeds as follows. Given a document collection and a request for production, a human operator uses one or more tools to identify docu-ments to be shown to one or more human reviewers, who may or may not be the same individual as the operator. The reviewers examine these documents and label ( X  X ode X ) them each as responsive or not. More documents are iden-tified using the tools, reviewed and coded by reviewers, and the process continues until  X  X nough X  of the responsive docu-ments have been reviewed and coded. How many constitute  X  X nough X  is a legal question, which is informed by how much additional effort would likely be required to find more re-sponsive documents, and how important those documents would likely be in resolving the legal dispute ( i.e. ,  X  X ropor-tionality considerations X ). For our purposes, we consider the process to continue indefinitely, and track the number of responsive documents found ( i.e. , recall) as a function of effort ( i.e. , the number of documents reviewed and coded by reviewers). Using this information, the reader can de-termine retrospectively, for any definition of  X  X nough, X  how much effort would have sufficed to find enough documents.
For this study, the operator is assumed to follow a strict protocol. All choices, including what tools are used, and when and how they are used, are prescribed by the protocol. In addition to satisfying the requirements for a controlled comparison, the use of a strict protocol may be appealing in the e-discovery context because the requesting party may distrust, and therefore wish to prohibit discretionary choices made by the operator on behalf of the responding party. The reviewers are assumed to code the documents they review in good faith, to the best of their abilities. In light of Grossman and Cormack [8, 9], and others [4, 18, 25, 26], it is unrealistic to assume the reviewers to be infallible  X  they will necessar-ily, but inadvertently, code some responsive documents as non-responsive, and vice versa.

The CAL protocol involves two interactive tools: a key-word search system and a learning algorithm. At the outset of the TAR process, the operator typically uses a keyword search to identify an initial set of documents to be reviewed and coded. These coded documents (often referred to as the  X  X eed set X ) are used to train a learning algorithm, which scores each document in the collection by the likelihood that it is responsive. The top-scoring documents that have not yet been coded are then reviewed and coded by reviewers. The set of all documents coded thus far (the  X  X raining set X ) is used to train the learning algorithm, and the process of se-lecting the highest-scoring documents, reviewing and coding them, and adding them to the training set continues until  X  X nough X  of the responsive documents have been found.
Available at http://cormack.uwaterloo.ca/cormack/tar-toolkit .

The SAL protocol, like CAL, begins with the creation of a seed set that is used to train a learning algorithm. The seed set may be selected using keywords, random section, or both, but, unlike CAL, the subsequent training documents to be reviewed and coded are selected using uncertainty sam-pling [15], a method that selects the documents about which the learning algorithm is least certain. These documents are added to the training set, and the process continues until the benefit of adding more training documents to the training set would be outweighed by the cost of reviewing and cod-ing them (a point often referred to as  X  X tabilization X ). At this point, the learning algorithm is used for the last time to create either a set or a ranked list of likely relevant doc-uments (the  X  X eview set X ), which is subsequently reviewed and coded by reviewers.

The SPL protocol, unlike CAL or SAL, generally relies on the operator or random selection, and not the learning algorithm, to identify the training set. The process is typ-ically iterative. Once a candidate training set is identified, the learning algorithm is then trained on these documents and used to create a candidate review set. If the review set is  X  X nadequate, X  the operator creates a new candidate train-ing set, generally by adding new documents that are found by the operator, or through random selection. The process continues until the review set is deemed  X  X dequate, X  and is subsequently reviewed and coded by reviewers.

The TAR process addresses a novel problem in informa-tion retrieval, which we denote here as the  X  X AR Problem. X  The TAR Problem differs from well-studied problems in ma-chine learning for text categorization [21] in that the TAR process typically begins with no knowledge of the dataset and continues until most of the relevant documents have been identified and reviewed. A classifier is used only inci-dentally for the purpose of identifying documents for review. Gain is the number of relevant documents presented to the human during training and review, while cost is the total number of relevant and non-relevant documents presented to the human during training and review.
To simulate the application of a TAR protocol to a review task, we require a realistic document collection and request for production, a keyword query ( X  X eed query X ) to be used (if required by the protocol), and a simulated reviewer. To evaluate the result, we require a  X  X old standard X  indicating the true responsiveness of all, or a statistical sample, of the documents in the collection.

Four review tasks, denoted Matters 201, 202, 203, and 207, were derived from Topics 201, 202, 203, and 207 of the TREC 2009 Legal Track Interactive Task  X  the same Top-ics that were used to evaluate Cormack and Mojdeh X  X  CAL efforts at TREC [7, 12]. Four other review tasks, denoted Matters A, B, C, and D, were derived from actual reviews conducted in the course of legal proceedings. Statistics for the collections are provided in Table 1, and the requests for production are shown in Table 2.

The seed queries for the tasks derived from TREC, shown in Table 3, were composed by Open Text in the course of its participation in the TREC 2010 Legal Track Learning Task (which used the same topics as the TREC 2009 Legal Track Interactive Task), using a strategy that  X  X ttempted to quickly create [a] Boolean query for each topic X  [24, page 5]. The seed queries for the tasks derived from legal proceedings,
Matter Collection Size # Rel. Docs. Prevalence (%)
Matter Request for Production described in Table 3, were composed by or negotiated with the requesting party prior to the review process. The recall and precision of each of the seed queries (as measured with respect to the gold standard, discussed below) are shown in Table 3.

To simulate a reviewer, we use a  X  X raining standard X  that consists of a relevance assessment for each document in the collection. If, during the course of simulating a particu-lar review protocol, the reviewer is called upon to code a document, the assessment from the training standard  X  re-sponsive or not responsive  X  is used for this purpose. The training standard does not represent ground truth; instead, it represents the coding decision that a fallible reviewer might render when presented with the document for review. For all of the simulated tasks, all of the positive training-standard assessments, and some of the negative assessments, were rendered by a reviewer during the course of a prior re-view. For the TREC-derived tasks, we used Cormack and
Matter Seed Query Recall Prec. Table 3: Keyword seed queries and their associated recall and precision.
 Table 4: Recall and precision for the training stan-dard used to simulate human review.
 Mojdeh X  X  TREC submissions; 4 for the legal-matter-derived tasks, we used the coding rendered by the first-pass reviewer in the course of the review. Documents that were never seen by the first-pass reviewer (because they were never identi-fied as potentially responsive) were deemed to be coded as non-responsive. Overall, as measured with respect to the gold standard, the recall and precision of the training stan-dard (shown in Table 4) indicate that the simulated reviewer achieves a high-quality  X  but far from perfect  X  result, by human review standards.

In contrast to the training standard, the gold standard represents ground truth. For the TREC-derived tasks, the gold standard consists of a stratified random sample, as-sessed by TREC using a two-stage adjudication process [12]. For the legal-matter-derived tasks, the gold standard con-sists of the documents produced to the requesting party, af-ter a second-pass review and quality-assurance efforts. Each document in the gold standard is associated with an inclu-sion probability  X  the prior probability that it would have been included in the gold standard. Following TREC prac-tice, the recall of any simulated review is estimated using the Horvitz-Thompson estimator [14], which weights each gold-standard document by the reciprocal of its inclusion probability.

Evaluation results are presented in two ways: as gain curves and as 75% recall-effort ( X 75% RE X ) values. A gain curve plots recall as a function of the number of documents reviewed. For any level of effort (as measured by the number
Available at http://trec.nist.gov/results.html , sub-ject to a usage agreement. of documents reviewed), one can determine at a glance the recall that would be achieved, using a particular protocol, for that level of effort (see Figures 1 and 2 below). Conversely, for any recall level it is possible to determine what level of effort would be required to achieve that recall level. For the purpose of quantitative comparison, we tabulate 75% RE for all protocols (see Tables 5 and 6 below).
In this study, we used the same feature engineering and learning algorithm for every protocol, without any collection-or task-specific tuning. Following Cormack and Mojdeh [7], the first 30,000 bytes of the ASCII text represen-tation of each document (including a text representation of the sender, recipient, cc or bcc recipients, subject, and date and time sent) was shingled as overlapping 4-byte segments. The number of distinct possible segments was reduced, by hashing, from 2 32 =4 , 294 , 967 , 296 to 1 , 000 , 081 (an arbi-trarily chosen prime number near one million). Each feature consisted of a binary value:  X 1 X  if the feature was present in the first 30,000 bytes of the document;  X 0 X  if it was absent. For the learning algorithm, we used the Sofia-ML imple-mentation of Pegasos SVM, 5 with the following parameters:  X  --iterations 2000000 --dimensionality 1100000 . X  For all protocols, we used a batch size of 1,000 documents. That is, the initial training set (the seed set) was 1,000 doc-uments, and each iteration, whether CAL, SAL, or SPL, involved reviewing 1,000 documents and, if indicated by the protocol, adding them to the training set. Our primary ex-periments evaluated the specific formulations of CAL, SAL, and SPL described in Section 2; secondary experiments ex-plored the effect of using keyword-selected versus randomly selected documents for the seed and training sets.
Our primary CAL implementation used, as the initial training set, 1,000 documents, randomly selected from the results of a search using the seed query. In each iteration, the training-set documents were coded according to the training standard, then used to train Sofia-ML, and hence to score the remaining documents in the collection. The 1,000 top-scoring documents were added to the training set, and the process was repeated 100 times.

Our primary SAL implementation used exactly the same 1,000-document keyword-selected seed set as CAL. Like CAL, in each iteration, the training-set documents were coded according to the training standard, then used to train Sofia-ML, and hence to score the remaining documents in the collection. These documents, ranked by score, constitute a candidate review set. Rather than implementing the deci-sion as to whether stabilization had occurred, we recorded the candidate review set for future retrospective evaluation, and continued the training process. Unlike CAL, the 1,000 documents with the least magnitude scores were coded and added to the training set, and the process was repeated 100 times. In the end, the simulation yielded 100 different can-didate review sets, corresponding to stabilization having oc-curred with a training-set size of 1,000, 2,000, ... , 100,000 documents. Each training-set size, when evaluated, yields a different gain curve, and a different 75% RE. Due to space considerations, we show gain curves only for the representa-tive training-set sizes of 2,000, 5,000, and 8,000 documents. We report 75% RE for these three training-set sizes, as well
Available at http://code.google.com/p/sofia-ml. as for the ideal training-set size, which in reality would not be known, since it requires the benefit of hindsight. The ideal training-set size is derived using the gold standard; 75% RE is calculated for every training-set size, and the lowest value is chosen.

Our primary SPL implementation used random selection throughout, as advocated by some SPL proponents. The initial training set (which we denote the  X  X eed set, X  notwith-standing the fact that many SPL proponents use the same term to refer to the final training set) consisted of 1,000 randomly selected documents, and each iteration added 1,000 more randomly selected documents. As for SAL, we recorded the candidate review set after each iteration, and report gain curves for the representative training-set sizes of 2,000, 5,000, and 8,000 documents, as well as 75% RE for these training-set sizes, and for the ideal training-set size, as defined above.

Variants of these protocols, for which we report 75% RE, include using randomly selected documents as a seed set for CAL and SAL, using a keyword-selected seed set for SPL, and using an entirely keyword-selected training set for SPL.
As illustrated in Figure 1, the CAL protocol achieves higher recall than SPL, for less effort, for all of the repre-sentative training-set sizes. All eight graphs show the same basic result: After the first 1,000 documents ( i.e. ,theseed set), the CAL curve shows a high slope that is sustained un-til the majority of relevant documents have been identified. At about 70% recall, the slope begins to fall off noticeably, and effectively plateaus between 80% and 100% recall. The SPL curve exhibits a low slope for the training phase, fol-lowed by a high slope, falloff, and then a plateau for the review phase. In general, the slope immediately following training is comparable to that of CAL, but the falloff and plateau occur at substantially lower recall levels. While the initial slope of the curve for the SPL review phase is simi-lar for all training-set sizes, the falloff and plateau occur at higher recall levels for larger training sets. This advantage of larger training sets is offset by the greater effort required to review the training set: In general, the curves for differ-ent training sets cross, indicating that a larger training set is advantageous when high recall is desired. 75% recall effort, shown in Table 5, illustrates the superi-ority of CAL over SPL, even when SPL is afforded the bene-fit of hindsight to choose the ideal training-set size. A simple sign test shows with statistical significance ( P&lt; 0 . CAL is superior to SPL according to 75% RE, and also ac-cording to recall effort for any other level of recall.
Figure 2 shows that the CAL protocol generally achieves higher recall than SAL. However, the SAL gain curves, un-like the SPL gain curves, often touch the CAL curves at one specific inflection point. The strong inflection of the SAL curve at this point is explained by the nature of un-certainty sampling: Once stabilization occurs, the review set will include few documents with intermediate scores, be-cause they will have previously been selected for training. Instead, the review set will include primarily high-scoring and low-scoring documents. The high-scoring documents account for the high slope before the inflection point; the low-scoring documents account for the low slope after the inflection point; the absence of documents with intermedi-ate scores accounts for the sharp transition. The net effect of randomly selected documents. of uncertainty-sampled documents. is that SAL achieves effort as low as CAL only for a specific recall value, which is easy to see in hindsight, but difficult to predict at the time of stabilization.

Table 5 illustrates the sensitivity of the SAL and SPL results to training-set size, and hence the difficulty of choos-ing the precise training-set size to achieve 75% recall with minimal effort.
To assess the role of keyword versus random selection at various stages of the training process, we evaluated the fol-lowing variants of the primary protocols: (i) CAL-seedran, in which the seed set was selected at random from the en-tire collection; (ii) SAL-seedran, in which the seed set was selected at random from the entire collection; (iii) SPL-seedkey, in which the initial 1,000 training documents were the same keyword-selected seed set used for CAL and SAL in the primary protocols; and (iv) SPL-allkey, in which all training examples were selected at random from the results of the keyword seed query. 75% recall effort (with ideal training-set sizes, where applicable) for these variants, as well as the primary protocols, is shown in Table 6.
A comparison of the results for CAL and CAL-seedran shows that a random seed set generally yields the same or slightly inferior results to a keyword-selected seed set. In one case  X  Matter 203  X  the random seed set fails spectac-ularly. The collection for this task has very low prevalence (0.25%), and the seed set of 1,000 random documents con-tained only two responsive documents, which were insuffi-cient to  X  X ick-start X  the active-learning process. A compari-son of the results for SAL and SAL-seedran shows the same general effect, including the degraded performance caused by random seeding for Matter 203.

A comparison of the results for SPL and SPL-seedkey shows that, as for CAL and SAL, the use of keyword se-lection for the initial training set generally yields superior results to random selection. A comparison of the results for SPL and SPL-allkey shows that, with two exceptions, keyword selection for the entire training set is superior to random selection. However, a comparison of the results for SPL-seedkey and SPL-allkey shows neither to be con-sistently superior; in four cases, using keywords for only the initial training set was superior, and in four cases, using keywords for the entire training set was superior.
In summary, the use of a seed set selected using a simple keyword search, composed prior to the review, contributes to the effectiveness of all of the TAR protocols investigated in this study.
The results presented here do not support the commonly advanced position that seed sets, or entire training sets, must be randomly selected [19, 28] [ contra 11]. Our pri-mary implementation of SPL, in which all training docu-ments were randomly selected, yielded dramatically inferior results to our primary implementations of CAL and SAL, in which none of the training documents were randomly se-lected. While it is perhaps no surprise to the information retrieval community that active learning generally outper-forms random training [22], this result has not previously been demonstrated for the TAR Problem, and is neither well known nor well accepted within the legal community.
Perhaps more surprising is the fact that a simple keyword search, composed without prior knowledge of the collection, almost always yields a more effective seed set than random selection, whether for CAL, SAL, or SPL. Even when key-word search is used to select all training documents, the result is generally superior to that achieved when random selection is used. That said, even if passive learning is en-hanced using a keyword-selected seed or training set, it is still dramatically inferior to active learning. It is possible, in theory, that a party could devise keywords that would ren-der passive learning competitive with active learning, but until a formal protocol for constructing such a search can be established, it is impossible to subject the approach to a controlled scientific evaluation. Pending the establishment and scientific validation of such a protocol, reliance on key-words and passive learning remains a questionable practice. On the other hand, the results reported here indicate that it is quite easy for either party (or for the parties together) to construct a keyword search that yields an effective seed set for active learning.

The principal argument in favor of random selection ap-pears to be the concern that non-randomly selected training examples are  X  X ess than representative of the entire popula-tion of relevant documents X  [19, pages 260-261], and there-fore might  X  X ias X  the learning method, resulting in the ex-clusionofcertainclassesofrelevantdocuments. Itiseasyto imagine that such an effect might occur with SPL; however, it is more difficult to imagine how such a bias could persist through the CAL process.

There are situations in which a finite random sample used as a training set could exclude an identifiable population of relevant documents. By way of example, consider a collec-tion consisting of 1,000,000 emails and 100,000 spreadsheets, of which 10,000 emails and 1,000 spreadsheets were relevant. A random training set consisting of 1,100 documents would contain about 1,000 emails, of which about 10 were relevant, and about 100 spreadsheets, of which, as likely as not, none would be relevant. A machine-learning method might well infer that spreadsheets generally were not relevant, thereby exhibiting a blind spot. Random training tends to be bi-ased in favor of commonly occurring types of relevant doc-uments, at the expense of rare types. Non-random training can counter this bias by uncovering relevant examples of rare types of documents that would be unlikely to appear in a random sample.
The differences between the CAL and SAL results arise, we believe, from differences in the design objectives underly-ing their training methods. The underlying objective of CAL is to find and review as many of the responsive documents as possible, as quickly as possible. The underlying objective of SAL, on the other hand, is to induce the best classifier possible, considering the level of training effort. Generally, the classifier is applied to the collection to produce a re-view set, which is then subject to manual review. 6 The use of SAL raises the critical issues of (i) what is meant by the  X  X est X  X lassifier, and (ii) how to determine the point at which
In some circumstances  X  which have not been considered in this study  X  the review set may be produced to the re-questing party without any subsequent review. the best classifier has been achieved (commonly referred to as  X  X tabilization X  in the context of TAR). In this study, we arbitrarily define  X  X est X  to minimize the total training and review effort necessary to achieve 75% recall, and sidestep the stabilization issue by affording SAL the luxury of an oracle that determines immediately, perfectly, and without cost, when stabilization occurs. In practice, defining and de-tecting stabilization for SAL (and also for SPL) is X  X p]erhaps the most critical question attendant to the use of technology-assisted review for the production of documents X  [19, page 263]. In practice, recall and precision of candidate review sets are typically estimated using sampling, and stabiliza-tion is deemed to occur when an aggregate measure, such as F , appears to be maximized [17]. The choice of a suitable criterion for stabilization, and the cost and uncertainty of sampling to determine when that criterion has been met [3], are fundamental challenges inherent in the use of SAL and SPL that are not addressed in this study; instead, SAL and SPL have been given the benefit of the doubt.

With CAL, each successive classifier is used only to iden-tify  X  from among those documents not yet reviewed  X  the next batch of documents for review. How well it would have classified documents that have already been reviewed, how well it would have classified documents beyond the batch selected for review, or how well it would have classified an independent, identically distributed sample of documents, is irrelevant to this purpose. Once it has served this narrow purpose, the classifier is discarded and a new one is cre-ated. Because the TAR process continues until as many as possible of the relevant documents are found, the nature of the of documents to which successive classifiers are applied drifts dramatically, as the easy-to-find relevant documents are exhausted and the harder-to-find ones are sought.
For SAL, where training is stopped well before the review is complete, we observed informally that uncertainty sam-pling was superior to relevance feedback, consistent with previously reported results in machine learning for text cat-egorization [15]. For CAL, our results indicate relevance feedback to be superior.
Regardless of the TAR protocol used, the question re-mains: When to terminate the review? The answer hinges on the proportionality considerations outlined in (U.S.) Federal Rules of Civil Procedure 26(b)(2)(C) and 26(g)(1)(B)(iii), which, respectively, limit discovery if  X  X he burden or expense of the proposed discovery outweighs its likely benefit, considering the needs of the case, the amount in controversy, the parties X  resources, the importance of the issues at stake in the action, and the importance of the dis-covery in resolving the issues, X  and require that discovery be  X  X either unreasonable nor unduly burdensome or expensive, considering the needs of the case, prior discovery in the case, the amount in controversy, and the importance of the issues at stake in the action. X 
Whether the termination point is determined at stabi-lization (as for SAL and SPL), or deferred (as for CAL), eventually a legal decision must be made that a reasonable review has been conducted, and that the burden or expense of continuing the review would outweigh the benefit of any additional documents that might be found. The density of responsive documents discovered by CAL appears to fall off monotonically, thus informing the legal decision maker how much effort would be necessary to find more documents; moreover, Cormack and Mojdeh [7] note that the scores of the responsive documents tend to a normal distribution, and that by fitting such a distribution to the scores, it is possi-ble to estimate recall without resorting to sampling. That said, we leave to future research the issue of how best to determine when to stop.
It has been argued that the accuracy of the human review of the training set is critical, and that a  X  X enior partner X  [1, page 184], or even a bi-party committee, should review the training documents [2, page 7]. While the existing sci-entific literature indicates this concern to be overstated [6, 20, 27], our results further confirm that superior results can be achieved using a single, fallible reviewer. That said, a limitation of our evaluation toolkit is that our simulated re-viewer always codes a given document the same way; a real reviewer would be influenced by factors such as the preva-lence of responsive documents among those reviewed [23], the order in which the documents were reviewed, and any number of other human factors. We conjecture that these factors would tend to benefit CAL over the other protocols because: (i) the prevalence of responsive documents among those reviewed would be higher, especially at the outset of the review; (ii) similar documents would tend to be reviewed together by virtue of having similar scores; and (iii) the re-viewer would gain early insight into the nature of respon-sive documents without having to wade through a haystack of random or marginal documents looking for an unfamiliar needle. Knowledge of the legally significant documents early in the review process is valuable in its own right. We leave it to future research to confirm or refute our conjecture.
The prevalence of responsive documents in the eight re-view tasks varies from 0.25% to 3.92%, which is typical for the legal matters with which we have been involved. Others assert that these are examples of  X  X ow-prevalence X  or  X  X ow-richness X  collections, for which TAR is unsuitable [19]. We suggest that such assertions may presuppose an SPL proto-col [11], which is not as effective on low-prevalence datasets. It may be that SPL methods can achieve better results on higher-prevalence collections ( i.e. , 10% or more responsive documents). However, no such collections were included in this study because, for the few matters with which we have been involved where the prevalence exceeded 10%, the necessary training and gold-standard assessments were not available. We conjecture that the comparative advantage of CAL over SPL would be decreased, but not eliminated, for high-prevalence collections.

Ourevaluationtoolkitembodiesanumberofdesign choices, the effects of which remain to be explored. Our choices for feature engineering and learning algorithm are state of the art for text classification [5, chapter 11], and we have no indication that another choice would yield ma-terially different results. We reprised most of the experi-ments in this study using logistic regression, instead of SVM, achieving similar results. A na  X   X ve Bayes classifier, on the other hand, achieved generally inferior results overall, but the same relative effectiveness among the protocols. A full exploration of feature engineering and classifier choices re-mains the subject of future research.

Finally, our use of a batch size of 1,000 was occasioned by efficiency considerations. In each of 100 iterations, we augmented the training set by 1,000 documents, trained the classifier, and scored every document in the collection. Each simulation required several hours of computation; the study required several weeks. For the CAL protocol only, we re-ran the simulations using a batch size of 100  X  entailing ten times as much computation ( i.e. , several days per simula-tion)  X  and achieved slightly better results. The effect of even smaller batch sizes on the effectiveness of TAR proto-cols remains an open question.
While the mechanisms and efficacy of active machine learning are well known to the information retrieval com-munity, the legal community has been slow to adopt such technologies, which could help address the growing volume of electronically stored information in (U.S.) legal proceed-ings. Much of the resistance, we submit, is due to lack of awareness of differences among TAR methods and protocols, and over generalization from one TAR method (typically, a variant of SPL) to all TAR.

Because SPL can be ineffective and inefficient, particularly with the low-prevalence collections that are common in e-discovery, disappointment with such tools may lead lawyers to be reluctant to embrace the use of all TAR. Moreover, a number of myths and misconceptions about TAR appear to be closely associated with SPL; notably, that seed and training sets must be randomly selected to avoid  X  X iasing X  the learning algorithm.

This study lends no support to the proposition that seed or training sets must be random; to the contrary, keyword seeding, uncertainty sampling, and, in particular, relevance feedback  X  all non-random methods  X  improve significantly ( P&lt; 0 . 01) upon random sampling.

While active-learning protocols employing uncertainty sampling are clearly more effective than passive-learning protocols, they tend to focus the reviewer X  X  attention on marginal rather than legally significant documents. In ad-dition, uncertainty sampling shares a fundamental weakness with passive learning: the need to define and detect when stabilization has occurred, so as to know when to stop train-ing. In the legal context, this decision is fraught with risk, as premature stabilization could result in insufficient recall and undermine an attorney X  X  certification of having conducted a reasonable search under (U.S.) Federal Rule of Civil Proce-dure 26(g)(1)(B).

This study highlights an alternative approach  X  continu-ous active learning with relevance feedback  X  that demon-strates superior performance, while avoiding certain prob-lems associated with uncertainty sampling and passive learn-ing. CAL also offers the reviewer the opportunity to quickly identify legally significant documents that can guide litiga-tion strategy, and can readily adapt when new documents are added to the collection, or new issues or interpretations of relevance arise.

There is no reason to presume that the CAL results de-scribed here represent the best that can be achieved. Any number of feature engineering methods, learning algorithms, training protocols, and search strategies might yield sub-stantive improvements in the future. The effect of review order and other human factors on training accuracy, and thus overall review effectiveness, may also be substantial. Nevertheless, the experimental protocol, evaluation toolkit, and results presented here provide a foundation for further studies to investigate these and other possible approaches to improve the state of the art in TAR for e-discovery.
Cormack X  X  research is supported by a Discovery grant and a Research Tools and Instruments grant from the Natural Sciences and Engineering Research Council of Canada. [1] Da Silva Moore v. Publicis Groupe , 287 F.R.D. 182, [2] Case Management Order: Protocol Relating to the [3] M. Bagdouri, W. Webber, D. D. Lewis, and D. W. [4] P. Bailey, N. Craswell, I. Soboroff, P. Thomas, [5] S. B  X  uttcher, C. L. A. Clarke, and G. V. Cormack. [6] J. Cheng, A. Jones, C. Privault, and J.-M. Renders. [7] G. V. Cormack and M. Mojdeh. Machine learning for [8] M. R. Grossman and G. V. Cormack.
 [9] M. R. Grossman and G. V. Cormack. Inconsistent [10] M. R. Grossman and G. V. Cormack. The [11] M. R. Grossman and G. V. Cormack. Comments on [12] B. Hedin, S. Tomlinson, J. R. Baron, and D. W. Oard. [13] C. Hogan, J. Reinhart, D. Brassil, M. Gerber, [14] D. G. Horvitz and D. J. Thompson. A generalization [15] D. D. Lewis and W. A. Gale. A sequential algorithm [16] D. W. Oard and W. Webber. Information retrieval for [17] Y. Ravid. System for Enhancing Expert-Based [18] H.L.Roitblat,A.Kershaw,andP.Oot.Document [19] K. Schieneman and T. Gricks. The implications of [20] J. C. Scholtes, T. van Cann, and M. Mack. The [21] F. Sebastiani. Machine learning in automated text [22] B. Settles. Active learning literature survey . University [23] M. D. Smucker and C. P. Jethani. Human [24] S. Tomlinson. Learning Task experiments in the [25] E. M. Voorhees. Variations in relevance judgments and [26] W. Webber, D. W. Oard, F. Scholer, and B. Hedin. [27] W. Webber and J. Pickens. Assessor disagreement and [28] C. Yablon and N. Landsman-Roos. Predictive coding:
