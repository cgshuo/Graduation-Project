 Tapping into the wisdom of the crowd, social tagging can be considered an alternative mechanism  X  X s opposed to Web search  X  for organiz ing and discover ing information on the Web . Effective tag -bas ed recommendation of information items , such as Web resources , is a critical aspect of this social information discovery mechanism. A precise understanding of the information structure of social tagging systems lies at the core of an effective tag -based recommendation method. While most of the existing research either implicitly or explicitly assumes a simple tripartite graph structure for this purpose, we propose a comprehensive information structure to capture all types of co -occurrence infor mation in the tagging data. Based on the proposed information structure, we further propose a unified user profiling scheme to make full use of all available information . Finally , supported by our proposed user profile , we propose a novel framework for col laborative filtering in social tagging systems. In our proposed framework, we first generate joint item -tag recommendations , with tag s indicating topical interest s of users in target item s. These joint recommendations are then refined by the wisdom from the crowd and projected to the item space for final item recommendation s. Evaluation using three real -world datasets show s that our proposed recommendation approach significantly outperform ed state -of -the -art approaches . H.3.3 [ Information Storage a nd Retrieval ]: Information Search and Retrieval  X  Information filtering Algorithms , Experimentation , Performance Collaborative filtering , social tagging , tagging structure, joint recommendation , explanation
In recent years , social tagging has been gaining wide -spread popularity in a variety of applications, from social bookmarking sites ( e.g., Delicious 1 and CiteULike 2 ), movie rating sites ( e.g., MovieLens 3 ), to E -commerce sites ( e.g., Amazon
Social tagging can be considered a crowd -wisdom -based approach to information organiz ation and discover y, an alternative to the traditional Web search engine approach. Enabling automated recommendation of various kinds in social tagging systems can further enhance this important social information discovery mechanism . In E -commerce applications, such recommendations can be a direct marketing tool. From the point of view of colla borati ve filtering research, tagging data generated by social tagging systems offer the potential to deliver substantially improved recommendation result s as tags constitute a novel source of data complementing standard user -item interaction /rating informa tion . tagging systems encourage users to save and annotate Web resources of interest with tags. These tags not only allow users to conveniently revisit and retrieve previously -visited Web resources , but also enable them to search and explore what other users are interested in. 
However, research on how to improve item recommendation leveraging tagging information is just emerging. Several methods that have been proposed, includ ing the topic -based method [1] , which views each tag as a distinct topic and computes the probability of a user saving an item through all tags, and the diffusion-based method [2] , which generates recommendations by inspecting integrated information propagation on user -item -tag tripartite graphs . Most of the existing research either implicitly [1, 3-4] or explicitly [2] assumes a simple tripartite graph structure for social tagging system s. As we will point out in this paper, tripartite graph is not a faithful representation of the informatio n structure of social tagging system s. Recently, a tensor -based approac h [5] has been proposed to deal with the three dimensional structure of tagging data. Nevertheless, this approach is extremely expensive , computational ly and spatial ly, in that the smoothed http://delicious.com/ http://www.citeulike.org/ http://movielens.umn.edu/ http://www.amazon.com/ user -item -tag tensor of prediction utility, obtained by High Order SVD (HOSVD) [6] , is usually not sparse . 
Furthermore , all of the previous research focus es on recommendations of either item s or tag s, whereas items and tags co-exist in real tagging activities , with tag s indicating the specific topic s covered by a target item that attract a user. As such, the correctness of the resulting recommendations from the traditional tag -based methods , which do not pinpoint why a user may save an item, cannot be well -justified as they are not guaranteed to fall into a user  X  X  interested topics ( tags) . Realizing that it is of great value to explore the topics (tags) of a target item a user is interested in and how much she likes these topics, we propose a new tag -based recommendat ion framework by attempting joint item -tag recommendation s before projecting them to the item space for final item recommendation s. Beyond guaranteeing the justifiability of the item recommendations, joint item -tag recommendation has practical significance in its own right by explain ing items with tags . According to a study conducted by Herlocker et al. [7] , providing proper explanation is very helpful to promote the acceptance of recommendation s. 
The rest of this paper is organized as follows. In the next section, we briefly review the literature o n tag -based recommend ation . We then propose a comprehensiv e social tagging information structure and a unified user profiling scheme in section 3. Next, we propose a joint item -tag recommendation framework and discuss how to synthesize joint recommendation result s for final item recommendation s in section 4 . In section 5, we report on empirical evaluation using three real -world datasets. Section 6 gives a brief discussion on the computational complexity as well as potential applications of our approach. Finally, we conclude the paper by summari zing our contributions and discussing prominent future research directions in section 7. 
Collaborative filtering (CF) is the most widely -used and commercially successful approach to recommendation. A few methods have been proposed for tag -based collaborative filtering . A straightforward method is to use tags for computing user or item similarity. The user (item) similarities in standard user -based (item -based) CF methods are derived from the similarity of items (user) the users (items) interacted with. Zeng and Li [8] introduced two variants of the standard user -and item -based method s by calculating us er and item similarities based on TF -IDF weighted tag vectors. Further, Zhao et al. [9] proposed t o compute the similarity of two users based on the semantic distance of their tag sets on common items they have bookmarked. Tso -Sutter et al. [10] exte nded the item vectors for user profiles and user vectors for item profiles with tags and then constructed the user/item neighborhoods based on the extended user/item profiles. In addition , several other alternatives have been proposed to facilitate similarity computation using tags [11 -13] . 
There are also a number of recent studies aim ing at further use of tagging information for tag -based recommendation. The topic -based method [1] exploits tag information in a probabilistic frame work, viewing each tag as an indicator of a topic and then estimating the probability of a user bookmarking an item by summing the transition probabilities through all tags. Zhen et al. [4] used users X  tag vectors to regularize the user -item matrix factorization results by making sure that the similarity between two user  X  X  latent feature vectors are correlated with the tag sets of the two users. The subject -based method [14] tries to extract informative tagging patterns (subjects) from the user -tag and item -tag co -occurrence matrices us ing Consistent Nonnegative Matrix Factorization to explain why a user saved (or might save) an item. Recently, a diffusion method [2] was proposed to generate recommendations based on fusion of information diffusion on user -item and item -tag bipartite graphs.

A common feature of most of the above -mentioned methods is that the relationship s among the three entities, i.e., user, item, and tag, are represented (sometimes implicitly) with a tripartite graph, such as the one shown in Figure 1 [15] . The methods of Zeng and Li [8] and Tso -Sutter et al. [10] assume a user -item -tag representation for their item -based method and tag -user -item representation for their user -based method. The method of Zhen et al. [4] implicitly take s a tag -user -item representation, where tag histories of users are used to regularize user latent feature vectors derived from user -item matrix factorization. The topic -based method [1] takes a user -tag -item representation, as user interest i n items is essentially a result of user -tag and tag -item relationships. On the other hand, the diffusion me thod [2] rests on an explicitly stated user -item -tag representation, and the information is limited to propagate within user -item and item -tag bipartite graphs. Nevertheless, s uch tripartite graph s capture only two of three binary associations among the three entities , and the ternary association among the entities, which does exist in reality and cannot be decomposed into multiple binary associations, is lost.
There are two recent studies [5, 16] that investigate the ternary associ ation among users, items, and tags for more effective tag recommendation using tensor decomposition techniques. However, they cannot be readily adapted to item recommendation due to the different nature of tag recommendation and item recommendation. Tag recommendation aims at predicting the use of tags of a given user on a given item, with two entities predefined, whereas item recommendation aims at predicting the saving /purchasing of items, with only the user specified . Generally, item recommendation is more difficult than tag recommendation in that less information is known about the subject to receive the recommendation s. Although Symeonidis et al. [5] argued that their approach was also applicable to item recommendati on, they were actually recommend ing item s to a given user with a given tag.

Moreover , since existing tensor factorization approaches , including PARAFAC Decomposition [17] , H OSVD [6] , and Tucker Decomposition [17] , actually unfold a high order tensor into a series of two -dimensional matrices for processing, the relatively lower dimensi onal co-occurrence information embedded in the original high order tensor is completely ignored. More specifically, in the tagging domain , a user -item -tag tensor is flatten ed into user  X (item,tag), item  X (user,tag) , and tag  X (user,item) matrices . In this case, two users will not be considered correlated at all unless they have bookmarked some common items with the same tags , i.e., the two dimensional user -item interactio n information is discarded. A lso discarded is the user -tag and item -tag interaction inf ormation . As the value of the two dimensional information, which underlies most previous tag -based recommendation methods, has been well -justified in the literature , the user -item -tag tensor adopted in recent studies [5, 16] is not an ideal representation of the tagging dat a either . Another problem with th is tensor representation is that it is unable to capture transactions without tag assignments.
It is essential for one to gain some deep insight into the underlying structure of social tagging systems before devising an effective user profiling method catering to item recommendation in the tagging domain. Towards that end, we first present our interpretation of the structure of social tagging in s ubsection 3.1. We then propose a novel user profi ling scheme in subsection 3.2 based on our integrated social tagging structure. Subsection 3.3 presents an exemplary weigh ting strategy for our unified user profile. Finally, we present a tensor decomposition approach to extract ing low er dimensional representation of users to ease the computation of user similarities in subsection 3.4.

Notation : In this paper, matrices are denoted by boldface capital letters, e.g., P . Tensors are denoted by boldface Calligraphy letters, e.g. X . Scalars ar e denoted by italic lowercase capital version, e.g.,  X  = 1, ... ,  X  . Let  X  = {  X  1 ,  X  of users,  X  = {  X  1 ,  X  2 , ... ,  X   X  } be a set of items, and  X  = {  X  be a set of tags. The probabilit ies of observing an arbitrary user, item, and tag are represented by  X  (  X  ) ,  X  (  X  ) , and  X  (  X  ) , respectively. The joint probability of observing an arbitrary item and tag combination is denoted  X  (  X  ,  X  ) . 
As discussed in s ection 2, most of the existing research on tag -based recommendation either explicitly or implicitly assumes a tripartite graph structure for social tagging system s. While some recent studies are trying to represent the ternary &lt;user, item, tag&gt; relationship as tensors, the bipartite interaction between any two of these three entities , which underlies most existing research , is actually ignored in the tensor operations . To gain a more comprehensiv e interpretation of social tagging systems, we propose the following structure of social tagging behaviors, as shown in Fig ure 2. 
The fundamental difference of the proposed structure with the commonly adopted tripartite graph structures is that user, item , and tag are treated equally as peer entities and have direct associations with each other. In addition to the binary relationships , a ternary association named  X  X nnotate  X  is added to capture the simultaneous interactions among the three entities. Although the binary  X  X se  X  (B-Use ) and  X  X ssociated with  X  X  (B-Associated ) relationship s can be completely derived from the ternary  X  X nnotate  X  (T-Annotate ) relationship, the y are not redundant in our structure because the binary information are often discarded when the ternary relationship is represented and operated as a tensor. The binary  X  X elect  X  (B-Select ) relationship cannot be completely derived from the T-Annotate relat ionship because users often save items without assigning any tag. Hence, our proposed structure has integrated all possible co-occurrence information among the three entities into one framework . 
So far, there are three methods to profile users on the tagging data: i) profile a user with the item vector of the user  X  X  historical records [4, 9] ; ii) profile a user with a tag vector of use frequenc ies [8] ; and iii) profile a user with a n extended 0 -1 valued item -plus -tag vector [10] . In sum, t he similarity between users is usually judged based on some of the follo wing criteria : 1) Users that have saved common items are considered to be 2) Users that have used common tags are considered to be 3) Users that have used common tags on the same item are 
All existing profiling schem es are only able to capture user similarity on either one or two criteria , and none of them could take advantage of all these three types of si milarities in a unified manner. T-Annotate similarity is the most reliable one in that it requires users to agree on both item s and tag s. Considering that the historical tagging records of a user naturally form a  X   X   X  item -tag matrix (named tagging matrix), it is straightforward to capture T-Annotate similarit y with the tagging matrix. However, this matrix is typically very spars e and does not capture any similarity between two users when they have no T-Annotate simila rity but some B -Select and/or B -Use similarities . To ensure that the denser B-Select and B-Use similarities are also functional in the user profile, we extend the tagging matrix as shown in Figure 3. 
For each item, we assume that there exists one highly -correlated Hidden Tag, and whenever the item is being saved, this Hidden Tag will be used automatically. Another way to interpret the meaning of this Hidden Tag is to vie w an item itself as a super tag. As such, users will be considered to be similar to a certain extent through the Hidden Tag once they have saved the same item, even if they have assigned completely different set s of tag s to th e item. Likewise, we can assum e a Hidden Item for each tag and use it to capture user similarities on merely tags. The underlying reason supporting our introduc tion of the Hidden Tag is that in most case s, individual users are unable to assign complete and accurate tags when saving an item due to a variety of reasons (e.g., laziness, use of non -descriptive tags for persona l uses only, and spelling error), and the Hidden Tag can help to alleviate this problem to some extent. On the other hand, if two users have used the same tag, there should be some common interests between the m, and such common interests are substantia ted as a Hidden Item in our profiling scheme.

The Hidden Item Row (without the corner entry  X  corresponds to the traditional tag profile, while the Hidden Tag Column corresponds to the traditional item profile. In particular, it is worth noting that the B -Associated relationship, reflected through the overall item -tag co -occurrence matrix, is not used in our profiling scheme as it is independent of individual users. Th e utility of this type of information will be discussed in section 4.2 . 
There could be many possible methods for weighting the elements in our user profile matrix . One example is as follows.
For the bottom -right T-Annotate submatrix, it is straightforward to weigh t each entry in a 0 -1 scheme as in most existing approaches , with 1 indicating a tag assignment on an item . However, as argued in [18] , it is unfair to treat all tags equally without considering the ranking order of each tag in the set of tags co-assigned to a bookmark as well as the size of this tag set. After moderate adaption to the weigh ting formula proposed in [18] , equation (1a) is used to weigh t the T-Annotate entries, where k is the ranking index of the tag in the bookmark and K is the total number of tags assigned to this bookmark.  X  is an empirical parameter used to rescale the weight of tags. I n formula (1a), the larger the number of tags co -assigned and the larger the ranking index, the smaller the weigh ting value a tag has . When  X  is sufficient ly large, our weigh ting scheme will degenerate to the traditional meth od that treat s all tag s equally.

In (1b), we can see that the weigh t of Hidden Tag is uniformly set to 1. T he underlying reason is that we believe that the assumed Hidden Tag is more important than the real tags and presume its according to (1a). In addition, we set the weight of each Hidden Item to be the average weigh t of its corresponding tag over all bookmarking activities. For the corner entry  X  00 weigh t it with 0 . In practice, it can also be assigned a nonzero weight for smoothing.
Whi le our profiling scheme has integrated all available information for profiling, it is attained at the price of extending the traditional item or tag vector profile to an item -tag matrix. Although this profile matrix can be efficiently stored in a sparse form, calculating similarities between very large sparse matri ces could still be time -consuming . Recently, matrix factorization has proved to be an effective dimensionality reduction method in the field of recommender systems [14, 19] . Nevert heless , matrix techniques do not apply to our approach in that the profile matri ces of all user s actually constitute a three order profile tensor , which can be interpreted as an enhanced version of the traditional user -item -tag tensor in that it is able to capture binary B-Select and B -Use similarities by the introduction of Hidden Tag and Hidden Item . Hence, we employ the Tucker Decomposition [17, 20] , which deals with tensor data , to extract informative low er dim ensional representation of user s. Below , we introduce some basic definitions of tensors . F or more details , please refer to [17] . 
Mode -n matrix pr oduct The n -mode matrix product of a  X   X   X   X  and is of size  X  1  X   X   X   X   X  X  X 1  X   X   X   X   X +1 Element -wise, we have
Multiple mode -n matrix products can be performed in any order : 
If the modes are the same , then
Tucker Decomposition Let  X  be a tensor of size  X  1  X   X   X   X  . A Tucker decomposition of  X  yields a core tensor  X  of specified size  X  1  X   X  2  X   X   X   X   X  and factor matrices A  X   X   X   X  for n = 1, ... , N such that where the factor matrices A ( n ) are assumed to be column -wise 
Tucker decomposition aims at minimiz ing the Frobenius error and can be solved efficiently using the Alternative Least Squares algorithm [20] . As an alternative generali zation of the two-dimensional Singular Value Decomposition, Tucker decomposition gives a more strict approximation [17] of the original tensor as compared to HOSVD [5-6]. In our application, we decompose the three order user -item -tag profile tensor  X  as: user, item, and tag subspaces of size  X   X   X  , (  X  + 1)  X   X  , (  X  + 1)  X   X  , respectively , supposing that the dimensions of all the subspaces are uniformly d . Kolda and Sun proposed to use  X  ( user ) directly as a user representation for clustering [20] . However,  X  rather than a feature matrix that holds the coordinates of users on the item  X tag subspace . Hence, we prop ose to represent user s with slice matrix of each user can be interpreted as her coordinate values in the item  X tag subspace. This strategy is analogous to its two order counterpart in Latent Semantic Analysis [21] , which factor s a document -term matrix X as  X  =  X  X  X  X  T and then use US to represent documents.

Another problem that needs to be address ed is how to project new user s into the item  X tag subspace. To avoid updating the Tucker model at the arrival of each new user , we fold -in new users as follows: where  X  new represent s the profile tensor of new users. Note that the above approximation holds only when the addition of new fold -in approach would not work as it is hard to cancel the core tensor  X  in the above induction.

When the lower dimensional representation of users is obtained , we compute the cosine similarity between user s a and b as follows: where  X  represents a user  X  s feature matrix in the item  X tag that other similarity metrics, such as Correlation, Euclidean distance, and KL -divergence, are also applicable here.
It is straightforward to make item recommendations directly following the traditional user -based method after the user similarity is computed . However, as we argued before, pure item recommendation faces some essential difficulties in provid ing quality recommendation due to its inability to capture users  X  explicit interest in the target items. In subsection 4.1, we present how to make joint item -tag recommendation based on our unified user profile. Then we show how to synthesize the joint item -tag recommendation result before projecting it to the item space for final item recommendation in subsection 4.2.
To gain more insight into the real reason of why a user might save an item, we propose to recommend a joint item -tag m atrix to each user, with the tags representing the topics of the target item that might attract the user. Given that we have profiled each user with a n item X tag matrix , it is straightforward to recommend a profile matrix to the active user. This joint reco mmendation process is basically the same as the traditional user -based method except that the input and output for each user are matri ces rather than vector s. Let  X  a be the recommended profile matrix for user a , where  X   X  X  X  represents the similarity between user s a and b , and  X  b represents the profile matrix (not feature matrix) of user b . 
As shown in Figure 4, the recommended profile matrix for each user consists of four blocks. It is easy to understand that the bottom -right submatrix represents the joint recommendation result for real items and tags. Recall ing that the Hidden Item Row and the Hidden Tag Column correspond to the traditional tag and item vector profile s for the user, we can see that the Hidden Tag Column actually holds the pure item recommendation result while the Hidden Item Row the pure tag recommendation result . The corner entry is zero here and still does not need to be considered yet . 
Before generat ing final item recommendations based on the joint item -tag recommendations, we adjust the joint recommendation results as follows . For the pure item and joint real item -tag recommendation s, we reset entries corresponding to items that have already appeared in the training set to 0. This is sensible in that we may not want to recommend resources that have already been saved by the user. For the pure tag recommendation result, we adjust it as follows:  X  (  X  )  X  X  X  X  X  X   X  =  X  X  X  X  (  X  )  X  X  X  X  X  X  + ( 1  X  X  X  )  X  X  X  (  X  )  X  X  X  X  X  X  (0  X  X  X  X  1) ( 4) where  X  (  X  )  X  X  X  X  X  X  and  X  (  X  )  X  X  X  X  X  X  indicate the value s of tag t in the Hidden Item Row of the recommended and initial profile matri ces , respectively. This can be interpreted as a tradeoff between a user  X  X  potential (recommended) and current (initial) interest in tags . Note that to facilitate reading, we have normalized all the involved tag vectors to unit sum and denote them as probabilit ies. 
As discussed before, item -only recommendations do not consider whether users are actually interested in the covered topics of the recommended items , hence might be erroneous as they might not fall into a user  X  X  interested topics (tags) at all . On the other hand, joint real item -tag recommendation s explicitly consider a user  X  X  possible interest in each item with respect to each tag (topic) . In addition, tag -only recommendation s also provide valuable clues of the user  X  X  interest in each tag. Thus, an ideal item recommendation approach should make effective use of all these three types of recommendations in the recommended profile matrix in a principled manner.

We believe that joint recommendation holds the potential to deliver higher quality recommendation s than any pure recommendation. However, the only joint form recommendation among these three types of recommendations, i.e., the joint real item -tag recommendation, is very spars e and may subject to noise . An intuitive solution would be generating a denser type of joint recommendations based on the two denser pure recommendations and then fuse it with the joint real item -tag recommendation. Thus, the critical problem lying ahead is how to make reliable joint recommendation based on the pure item and tag recommendations.
 Without loss of generality, we use the following equation to produce joint recommendation based on pure recommendations : where  X  X  X  X  X  X  X  (  X  ,  X  ) denotes the association between item i and tag t . Note that a normalization is performe d afterward to ensure that 
There are many ways [22] to calculate the association between two variables . In this paper, we use the Lift or Mutual Affinity [22 -23] metric and pre -compute it based on the item -tag co-occurrence matrix in the training data:
Using equation ( 6) to compute the item -tag association enables us to take advantage of the B-Associated information, t he only relationship that remains unused in our profiling scheme. The use of B-Associated information can be interpreted as correlating items and tags based on the wisdom from the crowd , as the item -tag co -occurrence matrix is aggregated over all users . 
The final joint item -tag recommendation result can then be computed as a weighted average of the two joint recommendations, i.e.,  X  (  X  ,  X  )  X  X  X  X  X  X  X  =  X  X  X  (  X  ,  X  )  X  X  X  X  X  X  + ( 1  X  X  X  )  X  (  X  ,  X  ) where  X  (  X  ,  X  )  X  X  X  X  X  X  represent s the joint real item -tag recommendation result normalized to unit matrix sum.

Finally, a refined item recommendation can be obtained by marginalizing the final joint recommendation result , i.e.,
Th ereafter, we can recommend the top -N items with the highest probabilities to the active user , and several relevant tags can be selected, based on the joint item -tag recommendation results , to explain each item recommendation if necessary.
We have test ed our approach on three datasets. The first dataset was crawled from Delicious, the largest social bookmarking site. The collected dataset consists of bookmarking data of 5000 users dated from 12/1/2008 to 12/31/2008. T hese 5000 users were identified by taking a breath -first traverse of the Delicious user network, start ing from a small set of randomly selected seed user s. The second dataset is a snapshot of the CiteULike database downloaded on 1/21/2010. We collected transactions that took place in year 2009. The last dataset is the Bibsonomy dataset http://www.citeulike.org/faq/data.adp http://www.kde.cs.uni -kassel.de/bibsonomy/dumps widely used in the tagging domain , and what we used is the 2009-07-01 snapshot . The Bibsonomy dataset contains bookmarks for both bibliographies and general Web resources , of w hich only the part for general Web resources wa s used in our experiment.

During data preprocessing, we iteratively removed users that had saved less than 10 items and items that had been saved by less than 10 users (8 for the bibsonomy dataset) until unqualified items are less than 20 for each dataset . In addition, we stemmed each tag using the Snowball stemmer 7 variations. For computational efficiency and recommendation quality , we only consider ed tags that had occurred more than 20 occurrence does not involve any frequent tags, we set the tag entry as null but did not remove it. This is the key difference of our cleaning method with the k -core [24] pruning strategy, which enables us to deal with transactions with no tag assignment. Table 1 shows the key statistics of the clean ed datasets.

We perform ed a 5 -fold cross validation to test all the implemented algorithms . In each fold, we chose 80% of the saved items of each user for training and withh eld the rest for test . In the predic tion phase, we recommended the top 5, 10, ... , 25 items for each user and then compare d them with the items in the test set. The evaluation metrics adopted in our experiment were the commonly used ones for ranked list prediction , namely, precision, recall, F -measure, and rankscore [14] , as summarized in Table 2 . http://snowball.tartarus.org/ We use N rec to denote the total number of recommendations, N hit the number of correct recommendations, and N test the number of items in the test set. We use j to indicate the index of an item in the predicted ranked list, h the viewing half -life of users (usually set to 10). Parameter  X   X  assumes value 1 if the j -th item is actually saved by the active user , and 0 otherwise . Note that all the metrics are calculated for individual users and then averaged over all users over all runs.
We compared our joint item -tag recommendation approach with a variety of existing tag -based recommendation algorithms. One of the benchmarks is the state -of -art memory -based method, the fusion (FUS ) method [10] , which profiles users/items with extended item -tag/user -tag vector. Since this metho d is actually a fusion of a user -based (FUS -UB) and an item -based (FUS -IB) method, for fairness, we only compared our approach with the user -based part of it in that our approach can also be generally viewed as a user -based method. In the next subsection, we  X  X l show the fusion result of our approach, as opposite to FUS -UB , with the FUS -IB method. We also compared our approach with state -of -art model -based methods, including the subject -based (SB) [14] and the probabilistic Latent Semantic Analysis (PLSA) algorithms [3] . 
As to our joint item -tag approach, we implemented several variants of it to show the effectiveness of our unified user profiling scheme and joint item -tag recommendation framework . The first one is complete joint item -tag recommendation (JIT) , which follows strictly the steps we have discussed before. The second one JIT -TRAD is the same with the first one except that the lower dimensional user represent ation is extracted from the traditional user -item -tag tensor. The third one is the same as the first one except that it uses the pure item recommendation result in the recommended profile matrix directly for item recommendation. The third approach is actually not a joint approach, but we still abbreviate it as  X  JIT -PURE  X  for clarity.
We tuned the parameters of all the control algorithms to their optimum before reporting the final result. The parameters involved in our joint recommendation approach are: d  X  the dimensionality of the three subspaces,  X   X  the rescaling parameter of tag weights, s  X  the size of user neighborhood,  X   X  a parameter reflect ing the tradeoff between a user  X  X  potential and current interest s in tags,  X   X  a parameter adjust ing the relative importance uniformly set  X  to 5 and d to 50 in our experiments . In fact, according to our experiments, the performance of our approach is very stable with the variation of these two parameters in a large range . For the re maining parameters, we set them as follows : for dataset, s = 30,  X  = 0.7,  X  = 0.8; for the Bibsonomy dataset, s = 70,  X  = 0.6,  X  = 1.0 . 
The results with respect to four different evaluation metrics on the three datasets are shown in Figure 5 . As can be seen clearly, the proposed joint item -tag recommendation approach achieved the best results consistently on all evaluation metrics across all datasets. In particular, we found that the superiority of our approach is more prominent on the Bibsonomy and CiteULike datasets, of which the tag quality i s much poorer than that of Delicious. This observation indicates that our approach is more robust than existing methods due to its capability to make use of complete information embedded in tagging data.

The complete joint recommendation approach outperfor med both the JIT -TRAD and JIT -PURE variants significantly, demonstrating the importance of both the unified user profiling scheme and joint item -tag recommendation framework in delivering quality recommendation. In addition , the superior performance of JIT -PURE over FUS -UB across all datasets also proves the advantage of our unified user profiling scheme over traditional user profiling methods.
 The subject -based method, which uses the B-Use and B-Assoicated relationships for matrix factorization , performed consistently better than the JIT -TRAD variant, which utilizes the T-Annotate association for tensor factorization , indic ating that binary information is more important than ternary information in our specific application . A critical problem that limits the practical utility of the fine -grained ternary information is sparsity.
In addition, one may easily not ice that the relative strength of some methods, especially PLSA and JIT -TRAD , varied largely across datasets. This fin ding demonstrates the different nature s of the three datasets and in turn proves the general applicability of our approach.
We also perform ed a sensitivity analysis of the major parameters that govern our approach . Apart from the common parameter that controls the neighborhood size of user -based methods, the major parameters of our approach that need to be considered are two fusion parameters  X  and  X  . The impact s of both parameters are shown in Figure 6 . Since th e figures for all four evaluation metrics are basically the same, we only report the precision curve s for top-10 item recommendation here.

As can be seen, the performance of our algorithm drops significantly as  X  approaches either 0 or 1. This demonstrate s that to gain a truthful representation of a user  X  X  interest in tags, it is of great importance to consider both her current and potential interest s. Meanwhile, we can see that the recommended tag profile generally outweigh the initial tag profile in an optimized setting. This can explain the relatively poor performance of the traditional tag -based method, as compared to our approach, to some extent in that they only consider a user  X  X  initial tag profile.
It is interesting to see that the performance of our approach was very stable with the variation of  X  on all datasets as  X  approach ed 1. This observation demonstrate s that the role of the joint real item -tag recommendation result is very minor in our overall joint recommendation framework , which verifie s our assumption in subsection 4.2 that the joint real item -tag recommendation result is easily disturbed by noise. Moreover , this important fact enables us to derive a much more efficient simplified version of our joint recommendation approach without los ing much of precision. More specifically, the most time -consuming step of our approach, i.e., generating joint real item -tag recommendations, can be saved by setting  X  to 1 in equation ( 7). The computational complexity of our approach will be discussed in detail in section 6. 
To show the superiority of our approach over the FUS method [10] , we also compared the performance of our approach , after being fus ed with a n item -based approach, with the complete fusion method. Note that our unified user profiling scheme can be easily adapted to profile items to underli e an item -based approach. For simplicity , however, we mix our approach directly with the item -based part of the FUS method (FUS -IB). Supposing that we weigh t the user -based method with  X  and the item -based method with 1  X  X  X  , the fused result s are shown in Figure 7. It can be seen clearly that our approach is still superior to the FUS method after fus ion with the FUS -IB approach . While the best result of FUS method is comparable to the performance of standalone JIT approach, the tuning of the F US method will be other hand, our approach benefits from the item -based method in a much smoother manner, mak ing the tuning of the fusion parameter much easier.
A critical issue that concerns most recommender systems is the cold start problem. Due to our splitting protocol, we do not encounter any new user or item in our experiments. However, it does not imply that our approach is not able to deal with new users o r items. As discussed in s ubsection 3.4, we have provided a principled method to fold-in new users upon request, provided that the structure of the profile tensor does not change significantly . Thus, we can update the profile tensor and re -compute the Tuck er model only when a certain amount of new transactions, which might involve some new users and new items, have arrived at the system. After the batched update, the newly appeared items will also become recommendable in our approach.
Since our approach involve s some tensor operations, another issue that needs to be addressed is how to efficiently store and decompose the profile tensor . In fact, given that the user profile tensor is very sparse, we can store and factorize it efficiently using the Matlab Tensor Toolbox 8 http://csmr.ca.sandia.gov/~ tgkolda/TensorToolbox/ to deal with very large sparse tens ors, e.g. , a 1K X 1K X 1.1K X 200 tensor with 5.39 million nonzero entries, in [20] . 
As the Tucker model can be updated offline, t he computational cost of our approach to generate item recommendations for a user mainly comes from three steps: user similarity computation  X  equation ( 2), joint item -tag recommendation  X  equation ( 3),(4), (5), ( 7), and marginalizing for item recommendation  X  equation (8). The time complexity of the similarity computation step is  X  (  X  X  X  2 ) , and the time complexity of the joint item -tag recommendation step is  X  X  X  X  (  X  + 1 )(  X  + 1 )  X  +  X  (  X  + 1) +  X  (  X  X  X  ) +  X  (  X  X  X  ) =  X  (  X  X  X  X  ) . Las tly, the time complexity of marginalizing is  X  (  X  X  X  ) . Considering that d is usually much small that either n or l , the overall computational complexity of our approach is  X  (  X  X  X  X  ) . This is of an order higher than  X  (  X  X  X  ) of the user -based and  X  (  X  2 ) of the item -based methods. However, as we discussed in s ubsection 5.5, the joint real item -tag recommendation s can be saved in that it is of very minor use in our approach . The time complexity of equation ( 3) will then drop to  X  (  X  (  X  +  X  )) , and the overa ll computational complexity of our approach will be  X  (  X  X  X  2 +  X  X  X  +  X  X  X  +  X  X  X  ) . Given that both l and d can be selected to be very small as compared to m and n , the time complexity of our approach will approximately be  X  (  X  X  X  ) , the same as that of a general user -based method, as the number of users and items becom e very large.

While we have focused on investigating the problem of item recommendation under our joint recommendation framework in this paper, our framework is also capable of making other types of recommendations , such as tag recommendation for a given item , and paired &lt;item,tag&gt; recommendation for a given user. In fact, given that our unified profiling scheme can be easily extended to profile items and tags to sustain other types of j oint recommendations, our joint recommendation framework is suitable to almost any type of recommendation tasks that might arise in the social tagging context . The key advantage of our joint item -tag recommendation framework is that it is able to make full use of tag recommendation, item recommendation , and joint real item -tag recommendation results in a systematic manner. Fu rthermore , presenting the recommendation results in a joint form also enables us to make effective use of the crowd wisdom reflected through the overall item -tag co -occurrence matrix.
Tag -based recommendation holds the potential to deliver substantial quality improvement by exploiting additional information generated by users. In this paper, we have present ed a joint item -tag recommendation framework, which is able to utilize complete information in the tagging data, to produce high -quality item recommendations . Specifically, we have made t he following main contributions . 1) We have proposed an integrated structure of social tagging 2) Based on the proposed social tagging structure, we have 3) To obtain informative low dimensional representation of 4) Supported by the matrix -based user profiling scheme, we 
Our work opens up several avenues for future research. One direction is to find some theoretical foundations for the unified user profiling scheme and to develop more systematic weighting methods for it . Another direction is to explore effective alternativ e approaches to measuring the association between items and tags . Finally, our framework can be extended to other recommendation tasks, e.g., tag recommendation for a given item. The authors wish to acknowledge research support from the CAS (2F07C01 ), NNSFC ( 70890084, 60875049, and 60621001 ), and MOST ( 2006AA010106). [1] J. Peng and D. Zeng. Topic -based web page [2] Z.-K. Zhang, T. Zhou, and Y. -C. Zhang. Personalized [3] R. Wetzker, W. Umbrath, and A. Said. A hybrid approach to [4] Y. Zhen, W. Li, and D. Yeung. TagiCoFi: tag informed [5] P. Symeonidis, A. Nanopoulos, and Y. Manolopoulos. A [6] L.D. Lathauwer, B.D. Moor, and J. Vandewalle. A [7] J.L. Herlocker, J.A. Konstan, and J. Riedl. Explaining [8] D. Zeng and H. Li. How Useful Are Tags? --An Empirical [9] S. Zhao, N. Du, A. Nauerz, X. Zhang, Q. Yuan, and R. Fu. [10] K.H.L. Tso -Sutter, L.B. Marinho, and L. Schmidt -Thieme. [11] S. Givon and V. Lavrenko. Predicting social -tags for cold [12] D. Parra and P. Brusilovsky. Collaborative filtering for [13] S. Sen, J. Vig, and J. Riedl. Tagommenders: connecting [14] J. Peng and D. Zeng. Exploring Information Hidden in Tags: [15] H. Halpin, V. Robu, and H. Shepherd. The complex [16] S. Rendle, L.B. Marinho, A. Nanopoulos, and L. Schmidt -[17] T.G. Kolda and B.W. Bader. Tensor Decompositions and [18] J. Peng and D. Zeng. Tag -based Smoothing for Item [19] Y. Koren. The BellKor Solution to the Netflix Grand Prize . [20] T.G. Kolda and J. Sun. Scalable Tensor Decompositions for [21] S. Deerwester, S.T. Dumais, G.W. Furnas, T.K. Landauer, [22] P.-N. Tan, V. Kumar, and J. Srivastava. Selecting the right [23] B. Kitts, D. Freed, and M. Vrieze. Cross-sell: a fast [24] R. J X schke, L. Marinho, A. Hotho, L. Schmidt -Thieme, and 
