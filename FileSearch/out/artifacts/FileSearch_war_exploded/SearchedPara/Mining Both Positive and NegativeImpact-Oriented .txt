 Association rule mining [1] and sequential pattern mining [2] were proposed over a decade ago, and have been well developed and studied by many re-searchers. Traditional association rules and sequential patterns study only the co-occurrence of itemsets/events, that is, the positive relationship between item-sets/events. However, it is sometimes interesting to find negative correlation, such as two items are seldom bought together in a same basket, or one item is seldom bought after another item. Recently, a couple of techniques have been designed to find negative association rules [3,10,12]. However, negative sequential patterns are still seldom studied.

Previously we have introduced event-oriented negative sequential rules in the form of P  X  X  e ,  X  P  X  e or  X  P  X  X  e ,where P is a positive sequential pattern and e denotes a single event [14]. However, in many real-world applications, users are not interested in negative seque ntial rules associated with all possible events, but only those rules associated wi th a special target outcome, e.g., fraud or no fraud, debt or no debt, buy or not buy, etc. That is, the target event is the occurrence or non-occurrence of a speci fic outcome, instead of an arbitrary event. For example, for web click-stream analysis in online retail, an analyst may want to find the relationship between we bpage visiting sequences and whether a user buys something. For a credit card company, it is interesting to discover the positive and negative relationship b etween transaction sequences and an un-recovered debt. In homeland security, the correlation between a series of activities and a terrorism attack is an important target of analysis.

To tackle the above problem, we develop in this paper an idea of impact-oriented negative sequential rules , where the left side is a traditional positive sequential pattern or its negation and the right side is a target outcome or its negation. A new efficient algorithm is designed for mining such rules and two novel metrics are defined to measure the impact on outcome. The technique of negative association rul es has been well studied [3,10,12]. Neg-ative association rules are defined in the form of A  X  X  B ,  X  A  X  B and  X  A  X  X  B [12]. Savasere et al. designed negative association rules as A  X  B [10]. Antonie and Za  X   X ane defined generalized negative association rule as a rule con-taining a negation of an item, such as A  X  X  B  X  X  C  X  D  X  E  X  X  F , and defined confined negative association rules as A  X  X  B ,  X  A  X  B and  X  A  X  X  B [3].
The idea of sequential patterns was proposed in 1995 to find frequent sequen-tial patterns in sequence data [2]. Some well-known algorithms for sequential pattern mining are AprioriALL [2], FreeSpan [6], PrefixSpan [9], SPADE [13] and SPAM (Sequential PAttern Mining) [4].

For sequential patterns, the non-occurrence of an element may also be inter-esting. For example, in social welfare, the lack of follow-up examination after the address change of a customer may result in overpayment to the customer. Such kind of sequences with the non-occurrence of elements are negative sequen-tial patterns. However, most research on sequential patterns focus on positive patterns, and negative sequential patterns are underdeveloped. Some reported researches on negative sequential patterns are as follows. Sun et al. proposed negative event-oriented patterns [11] in the form of  X  P T  X  e ,where e is a target event, P is a negative event-oriented pattern, and the occurrence of P is unex-pectedly rare in T -sized intervals before target events. Bannai et al. proposed a method for finding optimal pairs of string patterns to discriminate between two sets of strings [5]. The pairs are in the forms of p  X  q and p  X  q ,where p is either p or  X  p , q is either q or  X  q ,and p and q are two substrings. Ouyang and Huang proposed negative sequences as ( A,  X  B ), (  X  A, B )and(  X  A,  X  B )[8].Lin et al. designed an algorithm NSPM (Negative Sequential Patterns Mining) for mining negative sequential patterns [7]. 3.1 Negative Sequential Rules The negative relationships in transactional data are defined as follows. Definition 1 (Negative Sequential Rules (NSR)). A negative sequential rule is in the form of A  X  X  B ,  X  A  X  B or  X  A  X  X  B ,where A and B are positive sequential patterns composed of items in time order.
 Definition 2 (Event-oriented Negative Sequential Rules (ENSR)). An event-oriented negative sequential rule is a special NSR, where the right side B is a single event, that is, the length of B is one.
 Definition 3 (Impact-oriented Negative Sequential Rules (INSR)). An impact-oriented negative sequential rule is a special ENSR, where the right side event.
 Definition 4 (Negative Sequential Patterns (NSP)). A negative sequen-tial pattern is a sequence of the occurrence or non-occurrence of items in time order, with at least one negation in it.
 Definition 5 (Generalized Negative Sequential Rules (GNSR)). A gen-eralized negative sequential rule is in the form of A  X  B , where one or both of A and B are negative sequential patterns.
 Basedontheabovedefinitions,wecanget: I GNSR  X  I NSR  X  I ENSR  X  I INSR , where I GNSR , I NSR , I ENSR and I INSR denotes respectively the sets of the above four kinds of rules. Although an INSR looks similar to an ENSR, the former is specially focused on a specific subset of ENSRs, so it demands more efficient techniques tailored for its special needs.

Traditional sequential rules are positive sequential rules, which are in the form of
A  X  B ,whereboth A and B are positive sequential patterns. It means that pattern A is followed by pattern B . We refer to such positive rules as Type I sequential rules. By changing A or/and B to its/their negations, we can get the following three types of negative sequential rules:  X  Type II: A  X  X  B , which means that pattern A is not followed by pattern  X  Type III:  X  A  X  B , which means that if pattern A does not appear, then  X  Type IV:  X  A  X  X  B , which means that if pattern A doesn X  X  appear, then For types III and IV whose left sides are the negations of sequences, the meaning of the rules is: if A doesn X  X  occur in a sequence, then B will (type III) or will not (type IV) occur in the sequence. That is to say, there is no time order between theleftsideandtherightside.Notethat A and B themselves are sequential patterns, which makes them different from negative association rules. However, if time constraint is consid ered in sequential rules, the last two types of rules may have new meanings, which is out of the scope of this paper. The supports, confidences and lifts of the above four types of sequential rules are shown in Table 1. In the table, P ( A &amp; B ) denotes the probability of the concurrence of A and B in a sequence, no matter which one occurs first, or whether they are interwoven. 3.2 Algorithm for Mining Impact-Oriented Sequential Rules To discover impact-oriented negative seq uential rules, we use SPAM (Sequential PAttern Mining) [4] as a start point, because it was demonstrated by Ayres et al. to be more efficient than SPADE and Prefixpan [4], another two well-known algorithms for sequential pattern mining. SPAM is very efficient in that it uses bitmap to count the frequency of sequences. It searches the sequence lattice in a depth-first way, and candidates of longer sequences S g are generated by append frequent items { i } to existing frequent sequences S a . The candidate generation of SPAM is composed of two steps: S-step and I-step. The S-step appends i to S a , which builds a longer sequence S g = S a i . The I-step adds i to the last itemset of
S a , which builds a new sequence of the same length as S a .Inthispaper,we consider transaction with one item only and an element in the sequence is a single item, instead of an itemset. Ther efore, only S-step from SPAM is used in our technique.

Figure 1 gives the pseudocode for finding impact-oriented negative sequential rules, which is based on the function  X  X indSequentialPatterns X  from SPAM [4]. Lines 2-17 show the code for appending the target outcome to a sequential pattern and computing the chi-square and direction for the derived sequential rule. Lines 2-6 use bitmaps to compute the counts, support, confidence and lift for the sequential rule. Lines 7-17 compute the observed frequencies and expected frequencies, and then calculate chi-square and direction. Lines 19-23 generate positive sequential patterns. Lines 25-32 are the S-step of SPAM, which tries to extend the sequential pattern at current node by appending an additional item to it. Lines 34-43 generate three type s of negative sequential patterns. 3.3 New Metrics for Impact-Oriented Sequential Rules Two new metrics, contribution and impact , are designed as follows to select interesting impact-oriented sequential rules. Definition 6 (Contribution). For a sequential rule P  X  T ,where P is a sequential pattern, assume i to be the last item in P . The contribution of i to the occurrence of outcome T in rule P  X  T is where P \ i denotes the sequential pattern derived by removing i from P . Definition 7 (Impact). For the above rule and i , the impact of i on the out-come in the rule is Contribution shows how much the last item i in the rule contributes to the occurrence of the outcome T , and impact measures how much it can change the outcome. Both of them fall in [0 , +  X  ).
 4.1 Performance and Scalability Our designed algorithm (referred to as INSR) was implemented with C++ based on SPAM [4], and its performance and scalability was tested on synthetic datasets generated with IBM data generator [2]. All the tests were conducted on a PC with Intel Core 2 CPU of 1.86GHz, 2GB memory and Windows XP Pro. SP2. The number of items per transaction was set to one when generating data.
Our algorithm was first tested on a dataset with 50,000 customers, 40 items per sequence and the length of maximal patterns as 13. The minimum supports range from 0.2 to 0.7, and the results are shown in Figure 2a. From the figure, both INSR and Spam [4] run faster with larger minimum support, because the search space becomes smaller. Moreover, INSR runs faster than Spam, and the reason is that, when a pattern A is frequent and AT is infrequent, INSR doesn X  X  search A  X  X  children nodes, but Spam continues checking all its descen-dants until it becomes infrequent.

The scalability with the number of sequences was tested on datasets with average sequence length as 30, length of maximal patterns as 11. The number of customers ranges from 10,000 to 100,000, and the support threshold is set to 0.3. Figure 2b shows the result of the above test. It X  X  clear from the figure that INSR is linear with the number of sequences.

The running time with varying sequence lengths is shown Figure 2c, where the datasets used have 50,000 customers, with length of maximal patterns as 10, and the average sequence length ranging from 10 to 45. The support threshold is set to 0.3. The figure shows that the running time becomes longer with the increase of the average number of item s per sequence and that INSR is almost linear with the length of sequences. 4.2 Selected Results in a Case Study The proposed technique was applied to the real data from Centrelink, Australia. Centrelink is a Commonwealth Government agency distributing social welfare payments to entitled customers. For var ious reasons, custom ers on benefit pay-ments or allowances sometimes get over paid and these overpayments lead to debts owed to Centrelink. We used impact -oriented negative sequential rules to find the relationship between transactio nal activity sequences and debt occur-rences, and also find the impact of additional activities on debt occurrence.
A sample of historical transactional data from July 2007 to February 2008 were used for the analysis. After data pr eprocessing, 15,931 sequences were con-structed. Minimum support was set to 0.05, that is, 797 out of 15,931 sequences. There are 2,173,691 patterns generated and the longest pattern has 16 activi-ties. Some selected sequential rules are given in Table 2, where  X  X EB X  stands for debt and the other codes are activities.  X  X irection X  shows whether the pattern is positively (+1) or negatively (-1 ) associated with debt occurrence.
Figure 3 shows an example of discovered growing sequential pattern,  X  Each point in every chart gives the value for the sequential pattern from the first activity to the corresponding activity. All four charts in Figure 3 show the growth from  X  X DV X  to  X  X DV ADV X  and  X  X DV ADV CCO X . ADV increases the prob-ability of debt occurrence, because its co nfidence in debt occurrence is 0.395, 1.5 times the likelihood of debt occurrence in the whole population (see the first chart). There are 18% of all sequences supporting that ADV is followed by debt (see the second chart). As shown in the third chart, the two ADVs contributes to debt oc-currence, but CCO contributes negatively, as its contribution is less than one. The impacts of two ADVs on outcome are different, with the first one having larger impact (see the fourth chart).
 We have defined impact-oriented negative sequential rules and have designed an efficient algorithm for mining such sequential rules. We have also designed two metrics, contribution and impact, to mea sure the effect of an item on the outcome, which help to select interesting growing sequential patterns. A case study has been presented to show the effectiveness of the proposed technique.

