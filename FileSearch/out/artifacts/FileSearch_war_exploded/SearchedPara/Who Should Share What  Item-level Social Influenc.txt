 People and information are two core dimensions in a social network. People sharing information (such as blogs, news, albums, etc.) is the basic behavior. In this paper, we fo-cus on predicting item-level social influence to answer the question Who should share What , which can be extended into two information retrieval scenarios: (1) Users ranking: given an item, who should share it so that its diffusion range can be maximized in a social network; (2) Web posts rank-ing: given a user, what should she share to maximize her influence among her friends. We formulate the social in-fluence prediction problem as the estimation of a user-post matrix, in which each entry represents the strength of influ-ence of a user given a web post. We propose a Hybrid Factor Non-Negative Matrix Factorization (HF-NMF) approach for item-level social influence modeling, and devise an efficient projected gradient method to solve the HF-NMF problem. Intensive experiments are conducted and demonstrate the advantages and characteristics of the proposed method. J.4 [ Social and Behavioral Sciences ]: Sociology; H.1.2 [ Information Systems ]: Models and Principles X  Human factors Algorithms social influence; matrix factorization; user ranking; web post ranking
With the rapid proliferation of social applications, such as Flickr, Facebook, Twitter, etc., more and more user pro-files, interactions, and collective intelligence (such as social tags, comments, etc.) are available online, which opens a new perspective for information retrieval applications where more focus should be put on user collaborative information. At the same time, new search scenarios, such as web people search [12] and relationship search [10], also emerged. These scenarios propose a new challenge to traditional information retrieval: how to effectively handle the social information ?
One key concept related to this challenge is Social influ-ence , which has been becoming a prevalent and complex force governing the dynamics of people relationships or so-cial network [20]. It is also a key dimension for modern information retrieval in multiple aspects. To mention a few, (1)each user act as an information source in social network, and the influence of a user is meaningful for the authority of the generated information; (2)in web people search, the social influence is the key indicator for influencer search; (3)as different information varied with the power to affect people to change their actions, they can be recommended by influence ranking for social purpose. Therefore, there is a clear need for techniques to analyze social influence, and more importantly, in information retrieval field. However, to the best of our knowledge, this issue has still not been well studied.

The existing social influence analysis research can be sum-marized into a diagram: Who(A) influences Whom(B) given What(C) . A is often regarded as a single user (or node). For B, previous works can be categorized as macroscale ,where B is the whole network [2, 20]; microscale , where B is a sin-gle user [7, 18]; and mesoscale , where B is the community or A X  X  friends (neighborhoods) [13, 1]. From the side of C, there are also three lines of research: Structure-level, when C is empty [14, 17]; Topic-level when C is a topic [18, 8]; and Item-level when C is an item (such as a web page, product, etc.), which is rare in previous research.

In this paper, we focus on measuring item-level social influence in mesoscale to answer the question Who should share What , which can be extended into two information re-trieval scenarios: (1) Users Ranking: given an item (C), who (A) should share it so that its diffusion range can be maxi-mized in a social network; (2) Web Posts Ranking: given a user (A), what (C) should she share to maximize her influ-ence among her neighbors.
In social computing, people and information are two core dimensions and people sharing information (such as blog, news, album, etc.) is the basic behavior. Actually, the spreading out of information is because of the user shar-ing in social network. The owner of the information, e.g. the advertisers, hope to maximize the diffusion range of the information [4]. This goal makes them desire to target the influencers, who are able to let many friends to click the information they share or even share further to extend the sharing cascades. Psychologically, people share information with their friends mainly because they want to build their reputations and help others, in which to influence others is the important motivation for sharing [19].

According to the definition of social influence on Wiki, social influence occurs when  X  X n individual X  X  thoughts, feel-ings or actions are affected by other people X . In the context of online social networks like Facebook and Twitter, when a user share a web post, a portion of her friends (or neigh-bors) will click, comment, or even forward the post, which are three levels of influence [21]. In this paper, we only con-sider the first level, click action. That is, the social influence of a user on her friends given a web post is defined as the number of her friends who click the shared web post.
Therefore, the aim of this paper is to predict the number of clicks by friends if a user share a web post. The resulted predictive model can be used in two angles. On one side, given a web post, we can find out the influencers for the diffusion. On the other, given an user, we can recommend a list of web posts to share, which can improve the interactions between the user and her friends.
In predicting the item-level social influence, we mainly face the following challenges: In this paper, we formulate the social influence prediction problem as the estimation of a user-post matrix, in which each element ( i, j ) represents the number of clicks by friends of user i on her j -thsharedwebpost. Weproposeda Hy-brid Factor Non-negative Matrix Factorization (HF-NMF) algorithm for item-level social influence modeling. In this model, we try to find out the common hidden vector space for both the users and the posts, where their multiplication can well approximate the observed training interaction ma-trix. Meanwhile, in order to deal with the sparsity problem, we construct the priors on users and posts by incorporating the user-user similarity matrix and post topic distribution matrix. Also, in order to alleviate the over-fitting prob-lem, we introduce the L2-norm as regulations for the hidden vector space to improve the generalization ability. We apply Projected Gradient to solve the HF-NMF problem, and carry out intensive experiments to demonstrate the effectiveness of the proposed method.

It is worthwhile to highlight the key contributions of this paper. The rest of the paper is organized as follows. Section 2 in-troduces the necessity of item-level social influence and ra-tionality of factor selection. The HF-NMF model and its so-lution will be proposed in Section 3. The experiment results to validate the proposed method are presented in Section 4, followed by the conclusion in Section 5.
In this section, we will demonstrate the necessity of the item-level social influence, and validate the rationality of predictive factors by preliminary statistical analysis.
The dataset is acquired from the real social network http: //renren.com/ , which is a Facebook style online social com-munity in China. Till now, the web site already owns more than 150 million active users. In this web site, a user can generate a post or share a web page as a post, and the user X  X  friends will be informed through the news feed mechanism. Then some of the friends will click, comment or share the post. In this paper, we only consider the click action as the manifestation of influence, and the number of clicks corre-sponds to the strength of influence. As the number of friends is different for each user, the upper bound of users X  social influence strengths are also different. In order to make the strength of influence be measured in a unified scale for differ-ent users for the sake of observational and modeling study, we use the proportion of friends (of the user who publish a post) who click the shared post as the measure.

Concerning about the influence prediction, we first assume that the influence should be specific on each user-post pairs. In order to validate the hypothesis, we randomly select three active users. Given an user, we calculate the proportion of her influenced friends (who clicked the shared post) for each of the shared posts, and plot them as in the first row of Fig-ure 1. Then, we randomly select three popular posts. Given a post, we calculate the proportion of influenced friends when the post is shared by different users, and plot them as in the second row of Figure 1.

As can be observed, the social influence notably varies with different users and posts, which implies that (1) dif-ferent users have different influence power to their friends; (2) different posts have different influence power (more in-tuitively, attraction) to users who are interested in; and (3) users X  influences manifest differently for different posts. Therefore, only item-level social influence can reveal the users X  real influence on friends, and the strength of influ-ence should definitely be user-post specific.
According to Figure 1, the factors that affect the strength of social influence include the following three aspects. One issue that is worthy of emphasizing here is that the user factors and post factors are essential for the predictive modeling. On one hand, the user-post interactions are very sparse. We need to find effective factors to  X  X roup X  those users and posts to alleviate the sparsity problem. On the other hand, the user and post-specific factors also provide some effective prior knowledge to complement the inference from pure user-post interactions.

In order to find out the effective predictive factors, we first prepared a factor pool, which includes the available po-tential predictive factors including user profiles, number of users X  friends, visiting frequency between users, posts X  topic distributions, etc. Given each factor, we measured the cor-relation between the strength of social influence and the fac-tor value. Finally, we select two user-oriented factors: the percentage of active friends, the average social tie strength (the interaction frequency) between a user and her friends, and one post-specific factor: the topic distribution of a web post X  X  content.

Now we show some statistics to demonstrate the valid-ity of those selected factors. We randomly select 10 users from the dataset. Given each user, we define her social in-fluence as the average percentage of her friends who click the shared post over all shared posts, and calculate the cor-relation between the selected user factors and this social influence measure. Figure 2 (a)(b ) illustrate the correlation between the user factors and the social influence measure on these 10 users, from which we can clearly observe the positive results.

For post topic distribution, our hypothesis is that the posts with similar contents (i.e. similar topic distributions) often induce similar social influences. To validate this as-sumption, we randomly select ten groups of web posts, where the posts in the same group have similar topic distributions. Given each web post, we define its social influence as the av-erage percentage of users X  friends who clicked it over all the users who shared the post. Then we calculate the variances of posts X  social influence inside each topic group, and also over all the web posts (i.e. across topic groups). As we can see from Figure 2(c), most variances inside topic groups are smaller than that across the groups, which implies that the introduction of topical grouping is able to reduce down the uncertainty of social influence.

Based on the above analysis, we validate the effective pre-dictive factors and apply them into the predictive modeling in Section 4.
First, we formally define the problem of item-level social influence prediction. Suppose we have M users with the i -th user denoted as u i and N postings with the j -th post denoted as p j .Weuse N ( u i ) to denote the collection of u  X  X  first-order friends (i.e. the nodes that directly link to u ). As mentioned in the previous section, two key factors involved in our model are (a) Social influence vs. Active user percentage
With the above terminologies, we can formally define the task of item-level social influence prediction. We denote the user-post influence matrix as  X  X  X  R M  X  N ,withits( i, j )-th entry If we use g i to denote the number of u i  X  X  friends (i.e. g |N ( u i ) | ,where | . | is the cardinality of a collection), then f ij  X  g i . Also, It should be noted that in the matrix  X  there are two cases where an entry  X  X ij is 0. First is that u did not share the p j , and the second is that u i shared p but no friends of u i clicked it.

As we mentioned above, different users have different num-bers of friends, which makes the strength of social influence (if measured by f ij ) for each user-post pair be measured in different scales. To alleviate its effect on the final perfor-mance, we propose the following percentile influence matrix so that X ij  X  X  are normalized into the range of [0 , 1].
The user-post influence matrix  X  X can be reconstructed by where g =[ g 1 ,g 2 ,  X  X  X  ,g N ]  X  R N ,and Diag ( g ) is the diag-onal matrix with g on the diagonal line.

In this way, the item-level social influence prediction prob-lem is converted to the problem of predicting the unobserved entries in X .

Our formulation of the item-level social influence predic-tion problem is quite different from existing works on social network analysis. First, we measure the social influence in item-level, compared with the structure-level analysis [14, 17] and topic-level analysis works [18, 8]. Second, the goal of the problem is to predict the users X  social influence for unobserved data, which is in contrast with the majority of existing works to analyze the influence patterns from ob-served data [2, 3].

In the following section, we will formally present the Hy-brid Factor Nonnegative Matrix Factorization (HF-NMF) approach to model the problem.
We suppose that there exists a joint latent space for both users and posts with dimensionality k , such that the user-post specific social influences are modeled as the inner prod-uct between user-post vector pairs in that space. Accord-ingly, the user u i is associated with an user vector u i and the post p j is associated with a post vector v j  X  R k Intuitively, the elements in v j measures the extent to which the post p j possess those k factors, and the elements of u measure the extent of social influence the user i has in posts that are high on the corresponding factors.

Now we will formulate the social influence prediction prob-lem mathematically. Suppose that we have M users and N web posts. Let U  X  R M  X  k be the latent user feature matrix, and V  X  R N  X  k be the latent poster feature matrix, where k is the number of latent features. Then given the observed user-post specific social influence matrix X ,theobjectiveof this paper is to find the optimal latent user matrix U and latent post matrix V by minimizing the following objective. where || . || F denotes the matrix Frobenius Norm.
The objective function J 1 can be regarded as the qual-ity of approximating X by the inner product of U and V . However, in real cases, most of the elements in X are zero because of the sparse interactions between users and posts. Thus, in order to focus more on the valid elements, we pro-pose to only measure the approximation loss on observed elements on X . To formulate this, we introduce the sharing matrix Y  X  R M  X  N with its ( i, j )-th entry defined as The objective function is converted to where is the Hadamard product.

As mentioned above, the severe sparsity of X makes it very challenging to directly learn the latent spaces for users and posts from only observed user-post interaction entries. That X  X  the reason why we need to make full use of the user-specific and post-specific factors to compress the degrees of freedom, so that the correlation within users and web posts can be exploited to alleviate the sparsity problem.
As introduced in Section 2, we explored two effective user-oriented predictive factors: the percentage of active friends , and the average friend tie strength .

In order to calculate the percentage of active friends, we define the activeness of a friend u r , denoted by act ( u the number of posts she visits during a given time period, so that the percentage of active friends for u i is calculated by where  X  is the time threshold for active user, and  X  ( . )isthe Delta function.

Also, we define the tie strength between a user u i and one of her friends u r as the number of shared posts (by user u friend u r visits, which is denoted as tie ( u i ,u r ). Then, the average friend tie strength is calculated by
Then we use these two factors to measure the similarity between u i and u j as
W ij =  X  1 | uf 1 ( u i )  X  uf 1 ( u j ) | +  X  2 | uf 2 ( u In our case, we set  X  1 =  X  2 =0 . 5.

In this way, we can construct the user-user similarity ma-trix W  X  R M  X  M . We further assume that W can be ap-proximated by the inner product of the latent user matrix, thus we need to minimize the following objective .
As demonstrated in Section 2, the social influence is strongly correlated with the content of the web posts. We denote the post content matrix as C  X  R N  X  d ,where d is the dimen-sionality of the posts, which is constructed by implementing Latent Dirichlet Allocation (LDA) [6] on the post corpus to discover 100 topics. Then the content of each post is repre-sented as the topic distributions over the 100 topics. Similar to latent semantic analysis [9], we assume C can be factor-ized by minimizing where the matrix G  X  R k  X  M indicates post group identity.
Finally, by combining J 2 , J 3 , J 4 together, we can get the latent user matrix U and latent post matrix V by solving the following optimization problem min s.t. U  X  0 , V  X  0 , G  X  0 (12) The last two terms of the objective are penalized for gener-alization purpose, which is similar to the Maximum Margin Matrix Factorization approach in [15] and the Joint Matrix Factorization approach in [ ? ].
In this section, we will introduce a Projected Gradient (PG) method [11] to solve problem (12).
 Before going into the details, we first introduce the basic PG algorithm [11]. For notational convenience, we introduce a nonnegativity projection operator P [  X  ]formatrix A as Then the PG method for solving the problem can be presented in Algorithm 1.
 Algorithm 1 Projected Gradient Require: 0 &lt; X &lt; 1, 0 &lt; X &lt; 1. Initialization A (0) Ensure: A (0)  X  0 for k =1 , 2 ,  X  X  X  do end for
In Algorithm 1,  X  f ( A ) is the gradient of the objective function with respect to the variable A , ., . is the sum of the component-wise product of two matrices.

Here condition (15) ensures the sufficient decrease of the function value per iteration, and this rule of determining the stepsize is usually referred to as the Amijo rule [5]. However, the Amijo rule is usually time consuming, thus we use the following improved PG method in Algorithm 2 [11]. Algorithm 2 Improved Projected Gratient Require: 0 &lt; X &lt; 1, 0 &lt; X &lt; 1. Initialization A (0) 1.
 Ensure: A (0)  X  0 for k =1 , 2 ,  X  X  X  do end for
Now let X  X  return to problem (12). Although it is not jointly convex with respect to U , V and G ,itisconvex with each of them with the other two fixed. Therefore we can adopt a block coordinate descent scheme to solve the problem [5]. That is, starting from some random initializa-tion on U , V , G , we solve each of them alternatively with the other two fixed, and proceed step by step until conver-gence 1 . Specifically, the gradients of the objective (denoted as
J ) with respect to the variables are
In this section, we will introduce the experimental results on a real world dataset to demonstrate the effectiveness of the proposed method. First we will introduce the dataset information.
We perform our experiments on a real online social net-work dataset, which is crawled from http://renren.com ,a Facebook style social network web site in China. We have 34k users, and 43k web posts in the dataset, and the ba-sic information we used for each user and post are listed in Table 4.1.

We filter the raw dataset in two aspects: (1) we only use the posts generated at least 6 days before the crawling date,
Here the objective is obviously lower bounded by 0, and the alternating PG procedure will decrease it monotonically. Thus the algorithm is guaranteed to be convergent. so that the click number of the post is stable; (2) the  X  X ead users X  (i.e. users who never shared posts) and  X  X ead posts X  (i.e. posts that were never visited) are discarded. After the filtering, we remain 10k users and 10k web posts with 104k user-post sharing interactions for experiments. The spar-sity of the dataset (denoted as 10000user dataset) is around 0 . 1%, which is rather challenging for predictive modeling.
In Figure 3, we show the characteristics of 10000user dataset by plotting (a) histogram of users with respect to the number of shared posts (calculated by j Y ij for u i ), (b) histogram of posts with respect to the times of being shared (calculated by i Y ij for p j ), and (c) histogram of percentile item-level social influence (calculated by f ij g i ).

In our experiments, we randomly sample different num-ber of users and select the web posts shared by these sam-pled users to form datasets with different sizes, including 500users dataset, 2000users dataset, 5000users dataset, and the 10000users dataset. They are used to evaluate the detail performance of the proposed method.
Besides the proposed HF-NMF method, we also imple-ment the following methods for comparison.
The main goal of the paper is to learn the joint latent space for users and posts so that their inner-products can approximate the observed entries in X ,andmeanwhile,have good prediction performance for unobserved entries. In our experiments, we will hide some observed entries X by con-trolling the user sharing matrix Y in training, and using the learned U and V to approximate X . Then the qual-ity of the prediction will be evaluated using the Root Mean Square Error (RMSE).

After predicting the hidden entries, we further rank them along two dimensions (i.e. user dimension and post di-mension) according to two application scenarios: influencer ranking and influential post ranking. Here we use two ranking-based evaluation criterions proposed in [16] to measure the ranking performance: (1) T-measure, which simply counts how many of the pairs in the test data are ordered incor-rectly, and it is calculated by where i, j are the orders in groundtruth, and s i ,s j are the predicted orders. (2) R-measure, which weights the incorrect Table 2: HF-NMF tradeoff parameters setting and evaluation. ordered pairs by the difference in the testing ranks, and it is calculated by These two measures are normalized into [0,1] by with 1 corresponding to perfect ranking and 0 representing the reverse ranking.
In this section, we will investigate the effect of different parameter settings when implementing HF-NMF, include tradeoff parameters, dimension of hidden space, and number of projected gradient iterations, on the performance.
The tradeoff parameters  X ,  X ,  X ,  X  in HF-NMF play the role of adjusting the strength of different terms in the ob-jective function. As the value range of the 4 components in equation (12) are different, the parameter setting should be consistent with the corresponding component X  X  value range. The component W  X  UU 2 F is the sum of 100 million entries with each entry ranging from 0 to 1. The compo-nent C  X  VG 2 F is the sum of 1 million entries with each entry ranging from 0 to 1. Both U 2 F and V 2 F are the sum of 10k entries with most entries ranging from 0 to 1. Considering the roles of different components, we test the three sets of tradeoff parameters as shown in Table 2, and use the 2000users dataset for validation.

The results in Table 2 show that the parameter set  X  = 0 . 0001 , X  =  X  =  X  =0 . 01 produce the best performance. In our following experiments, we just use this parameter setting.
The goal of HF-NMF is to find a k-dimensional joint latent space for users and web posts. How to set k is important for prediction performance. If k is too small, the users and web posts cannot be well represented and discriminated in the latent space. If k is too large, the computational com-plexity will be greatly increased. Thus, we conduct 5 experi-ments with k ranging from 5 to 40 on the 2000users dataset. The results are shown in Figure. 4, from which we can see that with the increase on the dimension k , RMSE will re-duce gradually. When k&gt; 30, the RMSE reduces rather slow. For the concern of the tradeoff between efficiency and prediction precision, we choose k =20asthelatentspace dimension in our experiments. Figure 4: Prediction performance v.s. hidden space dimension.
When using PG method to solve problem (12), we need to predefine a proper number of updating iterations to get a good performance while avoid overfitting. Here we use 2000users dataset to validat this parameter. We hide 10% entries from matrix X and run 50 NMF iterations (each NMF iteration corresponds to update the three matrices U , V , G alternatively with). In each iteration, we record the objective function value and RMSE for hidden entries, and simultaneously plot the convergence curve of PG method and the RMSE curve, as shown in Figure 5. Figure 5: The synchrony between PG convergence curve and prediction performance.

From Figure 5 we can see that the RMSE reduces with the iteration process, as well as the objective function value. Near the 15th PG iteration, the RMSE curve reaches the minimum value. After that, there is a little overfitting ef-fect in RMSE. When the objective function values become stable, the RMSE does not go far away from the minimum value. This demonstrates that the proposed HF-NMF has good generalization ability. Considering the trade-off be-tween the efficiency and prediction precision, we conduct 45 iterations in PG for the solution in the following experi-ments.
In this section, we will demonstrate the prediction perfor-mance of the proposed method, and compare it with other methods.

We randomly select 50%, 70% and 90% of the observed entries in matrix X of difference sizes of datasets (includ-ing 500users dataset, 2000users dataset, 5000users dataset and 10000users dataset) as the training data, and the rest as the testing data. The random selection was carried out 10 times, and the average RMSE is reported. The same ex-periments are conducted on the proposed method and the 7 comparative methods listed in subsection 4.2. The results are shown in the Table 3.

From the Table 3, we can observe that:
After predicting the social influence, we make use of the results in ranking scenarios. One is to rank the influential users given a web post, the other is to rank the web posts given a user.
We randomly select 30 web posts. For each post, at least 13 users should have shared it, i.e. at least 13 observed entries correspond to the post in X .Wehide10ofthe observed entries, and predict the entry values by HF-NMF, and then rank them in a descend order. The top-ranked users are regarded to be more influential with respect to the given post.

An example of user ranking is shown in Table 5. After converting the percentile social influence X ij into  X  X equation 3, the predicted social influence can be well inter-preted. For example, given the post4405, we predict that if user1287 share the post, then 27 of her friends will visit it. In groundtruth, 26 of user1287 X  X  friends visited the post after she shared the post. Also, given the post, the ranking of the users according to their social influence are mostly consistent with the groundtruth.

We conduct the similar process for post ranking. An ex-ample is shown in Table 4.
In order to compare the proposed method with other com-parative methods in ranking performance, we calculate the average  X  and over selected users and posts as the com-parative measure. The results are shown in Table 6.
We can observe that HF-NMF achieves the best perfor-mance in both user ranking and post ranking tasks. bNMF+UF is better than bNMF+PF in user ranking, and bNMF+PF is better than bNMF+UF in post ranking, which demonstrate the effectiveness of the priors on users and posts. Also, by comparing the Table 3 and Table 6, we can see that the ad-vantages of HF-NMF over other comparative methods are more obvious in ranking tasks. In this paper, we study a novel problem of item-level social bNMF+UF 0.8739 0.9088 0.7423 0.8334 bNMF+PF 0.8236 0.8412 0.7654 0.8548 influence prediction. We discover the effective user-specific and post-specific predictive factors, and propose a Hybrid Factor Non-Negative Matrix Factorization (HF-NMF) method to incorporate these predictive factors for user-post specific social influence prediction. To solve the problem, we de-vise an efficient Projected Gradient (PG) method for HF-NMF solution. Experimental results on a real social network dataset demonstrate that the proposed method can achieve better performance in social influence prediction compared with baseline methods. Meanwhile, we introduce the item-level social influence into users ranking and web posts rank-ing, and the experiment results show that the proposed method can effectively recommend the influential users given a web post, and the influential web posts given a user.
This work is supported by National Natural Science Foun-dation of China, No. 60933013 and No. 61003097; National Basic Research Program of China, No. 2011CB302206; China Postdoctoral Science F oundation, N o. 20100470285, and National Key Project Series, No. 2011ZX01042-001-002. [1] N. Agarwal, H. Liu, L. Tang, and P. S. Yu. Identifying [2] A. Anagnostopoulos, R. Kumar, and M. Mahdian. [3] E. Bakshy, B. Karrer, and L. A. Adamic. Social [4] H. Bao and E. Y. Chang. Adheat: an influence-based [5] D. P. Bertsekas. Nonlinear Programming . MIT Press, [6] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent [7] D. Crandall, D. Cosley, D. Huttenlocher, J. Kleinberg, [8] A. Goyal, F. Bonchi, and L. V. S. Lakshmanan. [9] T. Hofmann. Probabilistic latent semantic indexing. In [10] D. V. Kalashnikov, Z. Q. Chen, S. Mehrotra, and [11] C. J. Lin. Projected gradient methods for nonnegative [12] C. Macdonald and I. Ounis. Voting for candidates: [13] D. W. McMillan and D. M. Chavis. Sense of [14] M. E. J. Newman. The structure and function of [15] J. D. M. Rennie and N. Srebro. Fast maximum margin [16] S. Rosset, C. Perlich, and B. Zadrozny. Ranking-based [17] S. H. Strogatz. Exploring complex networks. Nature , [18] J. Tang, J. Sun, C. Wang, and Z. Yang. Social [19] M. M. Wasko and S. Faraj. Why should i share? [20] S. Wasserman and K. Faust. Social Network Analysis: [21] J.S.Weng,E.P.Lim,J.Jiang,andQ.He.
 [22] J. Yang and S. Counts. Predicting the speed, scale,
