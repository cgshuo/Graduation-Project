 The concept of shared spaces is well known [1 ][2] and has become widely used in the Internet era in connection with advances of social software. A blog, personal journal, information. digital natives [3] fully integrated into a multitude of social networks and continuously using shared spaces. The trend of using shared spaces for communication concerns the area of business processes in the highest degree [4]. 
We believe that proper employment of sh ared spaces in BPS systems requires good advantages and limitations they have. Therefore, we undertake an attempt to identify important styles of communication via shared spaces. 
The goal of this paper is twofold. The first sub-goal is to present our experience of building, introducing in the operational practice, and using BPS systems based on the shared spaces architecture. The second sub-go al is to analyze this experience in order shared spaces architecture. reviewing the role of shared spaces in BPS systems (Section 2). We also explain how support system based on workflow. 
The first sub-goal of the paper is achieved by discussing three examples of business process instances (Sections 3-5). All three systems have been built based on the state-oriented view on business processes [5], and all of them use shared spaces to facilitate communication between process participants. The systems employ three different ways of using shared spaces for communication. The first system uses collaborative planning. In the second one, communication is based on the specialized structure of shared spaces. In the third one, the communication is based on changes in the status of processes. 
The way of using shared spaces in each of the systems is not arbitrary but reflects structured processes. In the third case, the system supports simple real-time processes with high requirements on the speed of communication. 
The second sub-goal of the paper is achieved by analyzing the differences between the systems in respect of how the invitation s to visit shared spaces are issued (Section communication styles in systems with shared spaces architecture. 
In the last part of the paper, we give a short overview of related works (Section 7), and discuss our experience and draw plans for the future research based on it (Section special consideration to list our own works that explain the theoretical background of our experience as well as give the possibility for the reader to learn about some parts of our experience in more details. There exist numerous definitions of what a business process is, each of them focusing on a particular property of business processes. For the sake of this paper, we take the following view on business processes:  X  X  business process is a way of combining efforts of several people for reaching a (well or not so well defined) goal X . 
Accepting this view, we consider only those business processes in which people processes, and processes where people are used just for well-defined operations aside. Such processes require extensive communication between the participants of each process instance in order to reach the operational goal of the instance. 
By a BPS system, we understand a system that helps process participants to run their point of view, a BPS system with shared spaces differs from a pure workflow system by sent to the  X  X ext in-line X . shared information space is created for each process instance to ho ld all information that is relevant to the process instance, e.g., documents received and sent, information invited to visit this space and complete some task related to it. Thus, a shared space is similar to a construction site where different kinds of workers are invited to complete their own tasks and leave the rest to the others. following way:  X 
When a new process instance starts, a new sh ared space is created. It gets a unique name, an owner (responsible for the instance), and possibly, an instance team.  X 
When the process instance reaches its opera tional goal, the shared space is closed (sealed), but remains accessible for reading (an instance goes to the archive).  X 
A person who is assigned a task in the frame of the process instance  X  X oes X  to this instance's shared space to ge t information he/she needs for completing the task and reports the results achieved in the same space. The  X  X onstruction site X  information logistic s via shared spaces has certain advantages completing a certain task. When a person is invited to visit a certain part of a shared space, he/she oversees not only this local part, but also everything adjacent to it, and can use this additional information when completing his/her task without being you send one document to a person, and this is all he/she gets. If you send a person to BPS systems from the business point of view can be found in [7]. 
For the shared spaces technique to wo rk efficiently in a BPS system, two conditions should be fulfilled:  X 
Shared spaces are properly structured. In a normal business environment, a person participates in many process instances, and, often, in parallel. For the shared space technique to work efficiently, he/she needs to understand the situation in a shared space he/she is visiting at a glance, and quickly find all information related to the task at hand.  X 
Invitations should give process participants a clear understanding on why they have been invited and what they are expect ed to do in each particular shared space. Note that invitations to visit shared spaces in BPS systems have a different meaning invitation is mandatory or at least strongly recommended; otherwise the whole communication /collaboration scheme will break down. would like to visit a shared space. He/she ca n do it in an arbitrary manner, or because registered in its shared space. use the principles outlined in this section. 3.1 Description A system called ProBis was developed based on ideas from [5] for a Swedish interest organization (The Swedish Union of Tenants ) in 2003-2006 as described in [8][9]. A areas by using the tab dialogues technique, see Fig. 1. 
Some areas of the window are standard, i.e. independent from the type of the Standard areas comprise such attributes and links as:  X 
Name and informal description of a process instance  X 
Links to the owner, and, possibly, the process team  X 
Links to the relevant documents, created inside the organization, and received from the outside The standard part of ProBis shared space includes also the task area (tab) that contains completed in the frame of it. A planned task defines what and when something should personal calendar. From the calendar, the user can go to any shared space for which a task is assigned to him/her in order to inspect, change, or execute this task. communication partner. This is done by filling a form as in Fig. 2. One chooses the task process type. To further facilitate communication, several more advanced features were added to Additional users can be added from the list with the  X + X  button (See Fig. 2), or can be fetched from a predefined group. Each user gets its own task in the calendar and will need to go and complete it independently of other users. Multi-user planning gives a possibility to easily raise attention of several people to some event that has happened in the process instance. Another advanced feature is the  X  X eturned receipt X  check-box which ensures that the planner gets a special  X  X ttention X  task planned as soon as the task he/she has assigned to somebody else has been completed. 3.2 Experience of Use Based on our experience with ProBis, collaborative planning provides a very efficient way of communication/collaboration in the frame of business process instances. It is especially useful for:  X  loosely structured processes, i.e. processe s for which there are no predefined ways for handling each instance.  X  well. There are, however, two drawbacks with the approach when using it for more structured processes that involve occasional users:  X  given process instance is developing in time.  X 
Using the system puts some requirements on the user, as he/she needs to understand the general ideas built in the system and get some training. This means that the system is not very friendly for newcomers and casual users. Planning as a counter-intuitive. Detailed planning is not as widespread in business life as one can imagine. 4.1 Description In a system with a specialized structure, shared spaces are structured according to the designed with a tool called iPB [10]. Several systems have been built with the help of on suspected child abuse. A process map in iPB is a drawing that consists of boxes placed in some order, see attached to each step that explains the work to be done. Each process instance gets its own copy of the map that serves as a table of contents for its shared space, see Fig. 3. navigates through the shared space by clicking on the boxes of the steps with which grayed require that one or several previous st eps are dealt with first, see Fig. 3. These constraints are defined with the help of so-called business rules. completing the step. The form contains text fields, option menus and radio-buttons to make choices, checkboxes, as well as more complex fields. The form may also include  X  X tatic X  texts that explain what should be done before one can fill some fields. 
From the shared spaces architecture point of view, the iPB solution can be number of subspaces called process steps. Th e steps are graphically represented to the means that forms attached to different steps may contain the same field(s). Usually, in this case, the intersecting fields can be changed only in one form; they are made read-only in the second one. 
The progress in filling the step forms is reflected in the map attached to the shared space via steps coloring. A gray box means that the step form has not been filled and cannot be filled for the moment. A white box means that the step form is empty but can be filled. A step with a half-filled form gets the green color, and additional information filled form gets the blue color, and additional information about the finish date. 
The primary way of  X  X orcing X  a person to visit a particular shared space in iPB is by assigning him/her to become an owner/co-owner of some step. Such an assignment in his/her list of  X  X y processes X . When visiting a process shared space, a person can see directly on the map what step(s) are assigned to him, see a green box in Fig. 3. 4.2 Experience of Use The communication possibilities in an iPB-based system may seem to be too limited. The only way of attracting a given person's a ttention to visit a particular shared space should be figured out by the person him/herself from the state of the process, i.e. from the partly filled step form. this kind is quite easy to introduce in operational practice, which cannot be said about systems with a collaborative planning style. The communication works well even when participants do not know each other personally. 
To extend communication possibilities, we added a rudimentary planning scheme mechanism is not being widely used. 5.1 Description The system called eForm was developed for a large Swedish call center (Eniro 118118) to solve the daily staffing problems that can be defined as follows [11]. The cope with fluctuations in volumes of calls and the number of agents not appearing for work. More agents need to be called in to deal with an increase in the volume of calls or increase in the number of absentees. Alternatively, fewer agents are required when the call volume decreases, or the sick rate due to a seasonable epidemics diminishes. 
Effective dealing with fluctuations in the staffing level at a call center requires fast communication channels between agents and managers responsible for operative staffing of the call center. eForm is a web 2.0 system providing efficient channels of communication between three different categories of workers at a call center:  X 
Central staffing center, aka Control Tower, or just Tower  X 
Agents  X  Coaches (managers) The system works according to a simple scheme: a communication process starts when process. This form gets the status New and immediately appears in the list watched by example, Question. In the former case, the form disappears from the actual list; but it list of some other communication partner, e.g. the one who originally filled the form. 
Let us demonstrate how this scheme works on a particular example. Unscheduled previous unscheduled absences of the same agent. Thus, he/she has a possibility to see example, in case of an unscheduled training session. 
As soon as the coach saves the form, it appears in the absentees list at the Tower. A disappears from the actual list (but remains accessible via the archive search). In case of any uncertainty, the Tower quickly returns the form to the coach with a comment by changing its status to Questioned. The coach corrects the form, after which it again appears in the Tower X  X  absentees list. 5.2 Experience of Use In eForm, there are no explicit  X  X alls X  to vi sit a shared space. The form appears in the mechanism creates a very efficient communication channel, and the system is easy to business case, because the turnover of agents in a typical call center is, usually, quite high. The communication mechanism works very well for simple real-time processes with strong requirements on the speed of communication. ProBis  X  a shared space has a generalized, logical structure. Similar types of objects separate tab for planned and completed tasks, etc. (see Fig. 1). This reflects the area of  X  X ynamics X  of a particular business process type (see Fig. 4). In eForm, shared spaces are quite simple and do not require complex structuring. 
Secondly, these three systems implement, on the surface, completely different mechanisms of using shared spaces to facilitate communication/collaboration. ProBis attention of the end-users. 
To compare the above mechanisms, we need to abstract from the technical details and consider each mechanism as a way of is suing invitations to visit a shared space. follows. he/she is supposed to do there (whom to call, what document to read, etc.). In an iPB-shared space without any instructions on what he/she is supposed to do there. 
Generalizing the above, we suggest the following three parameters with binary values for identifying communication styles:  X 
Issuing technique ( Manual/Automatic )  X  an invitation is issued manually by one of shared space.  X  space or a particular part of it.  X  on what a person is supposed to do there. The above parameters formally give eight classes that we call communication styles. more advanced feature than Global , and Instructive as a more advanced feature than Non-instructive . Then we can present the classification as a cube in a three-dimensional space where a  X  X asic X  style Manual/Global/Non-instructive constitutes a zero point, see Fig. 4. As we can see, each system employs a style that includes only one advanced feature, Fig. 4. We call such styles  X  X ure X  communication styles, as an opposite to other non-basic styles, which we call  X  X ixed X  styles. 
Collaborative planning (ProBis) 
Specialized structure (iPB) 
Status change (eForm) 
In Section 2, we stressed that an invitation to visit a particular shared space should give the process participant a clear understan ding on why he/she has been invited and person to understand what he/she is supposed to do. 
Both ProBis and iPB allow quite complicated structures of shared spaces, thus absence of instructiveness. 
As we already mentioned, the systems discussed in this paper implement  X  X ure X  communication styles (only one advanced feat ure is present in each of them). It does not mean that a mixture is not possible or useful, but only that one advanced feature is sufficient for certain practical purposes as outlined in Sections 3.2, 4.2 and 5.2. (shared spaces along with collaborative and automated planning) was made in 1989-detailed introduction into the state-oriented view on business processes that has been building the first version of ProBis see [8]. The high-level theory underlying the state-ProBis belong to the category of case-handling systems later identified in [17]. 
Other research works that directly or indirectly belong to the topic of this paper are as research literature for some time, see, for example, [1]. The simultaneous integration of face to face communication and the exchange of graphical information has been introduced by [2]. The integration of video and audio is proposed by [18]. Embodiments from collaborative virtual environments and spatial video conferences. 
Using shared spaces for business collabor ation was discussed in many research works. A task-oriented collaboration comparable to our collaborative planning can be shared spaces. Media are spaces where agents can collect and represent information. spaces. Gaia  X  a middleware infrastructure to enable spaces for cooperatively solving tasks -is presented in [24]. An introduction on how to manage multiple and collaborative tasks is give in [25]. An early system that incorporates some features of common goal. As was stated in the introduction, the goal of this paper was twofold. The first sub-goal communication/collaboration in the frame of business process instances. This sub-goal outline types of business contexts for which each of the systems is best suited. 
As any experience, ours is unique, though some features found in our systems can be found in others, as well. The main characteristic of our approach to building BPS system that differentiate us from others is that all our systems are systematically being the state-oriented view on business processes from [7]. We are not aware of any other architectural and theoretical principles. In addition, our second example represents not systems with the shared spaces architectur e. The approach accepted for building BPS system implemented in iPB, as far as we know, is unique. 
The second sub-goal was to introduce a taxonomy of communication styles for binary values: issuing technique, scope, and instructiveness. 
The parameters proposed for the style identification can be applied for the analysis of publicly and commercially available systems that employ shared spaces for communication/collaboration. As an example, let us consider Google Sites [27], without an external tool using a browser-based interface. Other users may be invited site with everyone on the web. In the enterprise edition of Google Sites, it is possible to give read or write access to all users of the enterprise X  X  domain. Google Calendar is his/her calendar with the delegating person. The delegating person can create tasks in the calendar of the addressees and thus to delegate tasks to him/her. According to the communication styles scheme suggested in section 6, Google Sites uses the manual issuing technique (through the calendars). An invitation always possible to specify what has to be done in the delegated task. experience represent  X  X ure X  communication styles, which, of course, does not exclude issuing technique to both ProBis (based on [16]), and iPB. 
The three parameters for style identification proposed in this paper give only basic example, the automatic issuing technique can be divided into two subcategories: general rules, and instance rules. General rules ensure automatic issuing of invitation that covers all instances of the given process type. Instance rules mean a capability to ensure automatic invitations for a particular process instance/case. The latter are often example, proposals for adding instance rules to ProBis in [16]). 
As follows from the experience presented in the paper, different communication speed of communication, as in eForm, warrant automatic issuing technique. A complex localization (or both). 
To find a proper mixture of communication styles for a practical business case, the are mixed based on the requirements of a particular business environment. Our communication/collaboration mechanisms. Here, we differentiate several groups of requirements: functional requirements (e.g., possibility of inviting an arbitrary person at any moment of time), security requirements (e.g., restricting a person's capability of process type). Acknowledgments. This paper would have never been written without considerable and eForm. We are especially thankful to Tomas Andersson, Alexander Durnovo, Alexey Striy and Rogier Svensson. 
