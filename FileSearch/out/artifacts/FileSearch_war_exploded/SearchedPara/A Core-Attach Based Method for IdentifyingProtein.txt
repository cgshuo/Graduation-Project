 Up to now, many computational methods have been proposed to detect com-neighborhood graphs, this method added attachments into the cores to form protein complexes.
 the dynamic topology structure of DPN.
 attachment into cores. We compare our DCA with six competing complex dis-(DFM CIN) and core-attachment method (COACH). Experiment results based dynamic features of complexes. represents an interaction between two proteins.
 which containing n time-sequenced subnetworks denoted as { D interactions activate at the same time, eg., subnetwork D i th subnetwork.
 simultaneously occur at multiple subnetworks. Figure1 shows an example to and often short-lived. We first introduce some related definitions below. For a protein v, its active sub-network set can be abstracted into Protein actives ( v )= { i,j,..., k,... } , where i,j,...,k denote the corresponding subnetworks that v appeared in. For a core S, Core actives ( S )= { i,j,..., h,... } represents the subnetwork set that S active in. Where i,j,...,h denote the correspond-ing subnetworks that the whole vertices of S are completely appeared in, it can be acquired by computing the intersection of all the proteins X  Protein actives (), that is, 2.1 Complex Cores Mining least k proteins; (4) every two cores have no common proteins. Algorithm 1 illustrates the detailed procedure on detecting cores in DPN. tein might potentially include in v X  X  neighbors [ 11 ]: considered as a seed.
 to expand a new probable complex core S in line 5-15. When we expand the seed v, we should first collect the New N v of v in line 7, Then we will calculate the closeness( cl ) between S and each vertex in line 9, the closeness function [ 3 ] is given as follows: the number of vertices in core S ; d S is the density of core the equation (4): Algorithm 1. Cores Mining Input: G =( V, E ): static PPI network DP N = { D  X  : closeness threshold for expanding cores m : the threshold of subnetworks number that a core active in k : the threshold of vertices number in each core Output: CS : the set of cores in DPN Protein actives ( v set of each protein active in 1. for i =1: n do 2. for each vertex v in V i , Protein actives ( v )= Protein actives 3. for each protein v  X  V , compute CC ( v ) 4. sort proteins into queue Q in descending order by CC 6. S = { v } // initialize v as a singleton core S 7. New N v = { u | u  X  N v  X  u  X  Q } 8. while New N v =  X  9. for all the u i  X  New N v , compute cl ( u i ,S ) 11. if comN etwork ( u i ,S )  X  m , then add u i into S 12. remove u i from New N v 13. else break // stop expanding core S 14. if number of proteins in S  X  k 15. remove all proteins of S from Q , and put S into CS u with maximum cl ,if cl ( u i ,S ) is smaller than a prefixed threshold stop expanding S . Otherwise, we should determine whether m common subnetworks with proteins in S ,as comN etwork ( u comN etwork ( u i ,S )=  X  w  X  S Protein actives ( w )  X  Protein actives
If u i shares m common subnetworks with core S ,add u i into core Once the preliminary core S is formed, we need to judge whether at least k proteins, if it is, put S into final core set CS output CS . 2.2 Protein Complexes Formation of forming protein-complexes is shown in Algorithm 2.
 Algorithm 2. Complexes Formation Input: DP N = { D CS : the set of cores in DPN Protein actives ( v set of each protein active in Output: DC : the set of complexes in DPN 1. for each S  X  CS 2. computer Core active ( S ) 3. for each i  X  Core active ( S ) // form a complex C i of S in 4. C i  X  S// initialize core S as a complex C i in the i th 5. compute neighborhood proteins N S i of S in D i 6. for each u  X  N S i 7. if E uS  X  0 . 5  X | V S | then 8. put u into C i // select u as an attachment of core S 10. filtering DC
For each core S  X  CS . First, we need to calculate Core actives detected by DCA may be overlapped as they could have common attachments. or several subnetworks and usually short-lived.

The time complexity is O ( cV 3 ) of algorithm 1 and O ( ncV of vertices in a core and n is the number of subnetworks. As complexity of our DCA is approximating O ( V 3 ). 3.1 Datasets and DPN Construction (I)MIPS, (II)Aloy et al. and (III)SGD database based on GeneOntology(GO) annotations.
 ommended by the authors. 3.2 Core Analysis and COACH algorithms respectively, as COACH is developed based on core-
Table 1(a) shows the interactions within cores in DCA achieve the high-est similarity on DIP dataset, no mat-ter which GO domain (BP,CC,MF) they are. The GO similarity scores are declined orderly in these four components, which suggests the cores have higher degree of functional similarities, and can be seen the biological hearts of protein complexes.
 From Table 1(b) we can see that, although cores identified by COACH is of highly biological similarities, their GO similarity score is much less than that of our DCA, which also indicates our DCA is better than COACH for producing high biologi-cal significance cores.
 is defined as:
Where K is the known benchmark complexes set [ 16 ]. | C  X  K number of proteins of core C included in one known complex; When a core C which indicates that our DCA can produce more accurate cores than COACH method. 3.3 Functional Enrichment Analysis Krogan datasets respectively.
 enrichments. 3.4 F-measure and Coverage Rate the prediction has good efficiency.
 second one COACH. For the number of proteins in DPN is less than that in a rather high value, but its better than ClusterOne and MCODE. All above plexes detected by DCA match quite well with benchmark complexes. 3.5 An Example of Protein-Complex To further reveal the results obtained by our algo-rithm, we display one of our protein complex that generated by DCA on DIP dataset. Figure 4 shows an example of complex #238. The biological pro-cess of complex #238 is  X  X uclear pore organization and biogenesis X (annotated in GO:0006999) with the lowest P-value=8.23E-26 which is carried out at the cellular level that results in the assembly, arrangement of constituent parts, or disassembly of the nuclear pore [ 18 ]. It contains 10 proteins and all of them are participating in the mechanism of nuclear pore organization.

As shown in Figure 4, the core of complex #238 contains 5 proteins that simultaneously active in networks. It is a complete graph in which every pair of distinct proteins is connected by a unique edge. The core is perfectly recalled by the bench-mark complex #50. However, three groups of attachments active in different subnetworks, eg., attachment YKL068W actives in the 8 th , 9 th , 11 th and 12 th subnetworks, while YJR042W is expressed in the 2 th , 3 th , 8 th , 9 th , 10 th , 11 12 th subnetworks. It illustrates the dynamic prop-erties of our complexes detected in DPN. 3.6 Effects of Parameters We now discuss the effects of parameters of DCA in F-measure and CR, on of each core.

As we can see from Figure 5(a), when  X  is small enough, the nodes with a much bigger than the real one, so the F-measure increases while achieves highest when  X  =0.8. As CR is not very sensitive to  X  in our experiments.
 lived attachment to form complexes.
 We tested our DCA on two yeast PPI data. First, we use GO similarity and CMR to analyze our core by comparing with another core-attachment method DCA can not only provide a new way of detecting complexes in DPN but also identify more accurate protein complexes.

