 Re gistration of point sets is an important issue for man y computer vision applications such as ro-bot navigation, image guided sur gery , motion tracking, and face recognition. In fact, it is the key component in tasks such as object alignment, stereo matching, point set correspondence, image segmentation and shape/pattern matching. The registration problem is to nd meaningful corre-spondence between two point sets and to reco ver the underlying transformation that maps one point extracted from an image. Other common geometrical features include line segments, implicit and parametric curv es and surf aces. An y geometrical feature can be represented as a point set; in this sense, the point locations is the most general of all features.
 Re gistration techniques can be rigid or non-rigid depending on the underlying transformation model. The key characteristic of a rigid transformation is that all distances are preserv ed. The simplest non-rigid transformation is afne, which also allo ws anisotropic scaling and skews. Effecti ve algorithms exist for rigid and afne registration. Ho we ver, the need for more general non-rigid registration occurs in man y tasks, where comple x non-linear transformation models are required. Non-linear non-rigid registration remains a challenge in computer vision.
 Man y algorithms exist for point sets registration. A direct way of associating points of two arbitrary patterns is proposed in [1]. The algorithm exploits properties of singular value decomposition and works well with translation, shearing and scaling deformations. Ho we ver, for a non-rigid trans-formation, the method performs poorly . Another popular method for point sets registration is the Iterati ve Closest Point (ICP) algorithm [2], which iterati vely assigns correspondence and nds the least squares transformation (usually rigid) relating these point sets. The algorithm then redeter -mines the closest point set and continues until it reaches the local minimum. Man y variants of ICP have been proposed that affect all phases of the algorithm from the selection and matching of points to the minimization strate gy [3]. Nonetheless ICP requires that the initial pose of the two point sets be adequately close, which is not always possible, especially when transformation is non-rigid [3]. Several non-rigid registration methods are introduced [4, 5]. The Rob ust Point Matching (RPM) method [4] allo ws global to local search and soft assignment of correspondences between two point sets. In [5] it is further sho wn that the RPM algorithm is similar to Expectation Maximization (EM) algorithms for the mixture models, where one point set represents data points and the other represents centroids of mixture models. In both papers, the non-rigid transform is parameterized by Thin Plate Spline (TPS) [6], leading to the TPS-RPM algorithm [4]. According to regularization theory , the TPS parametrization is a solution of the interpolation problem in 2D that penalizes the second order deri vatives of the transformation. In 3D the solution is not dif ferentiable at point locations. In four or higher dimensions the generalization collapses completely [7]. The M-step in the EM algorithm in [5] is approximated for simplication. As a result, the approach is not truly probabilistic and does not lead, in general, to the true Maximum Lik elihood solution. A correlation-based approach to point set registration is proposed in [8]. Two data sets are repre-sented as probability densities, estimated using kernel density estimation. The registration is consid-ered as the alignment between the two distrib utions that minimizes a similarity function dened by L Mixture Models (GMM). Once again thin-plate spline is used to parameterize the smooth non-linear underlying transformation.
 In this paper we introduce a probabilistic method for point set registration that we call the Coherent Point Drift (CPD) method. Similar to [5], given two point sets, we t a GMM to the rst point set, whose Gaussian centroids are initialized from the points in the second set. Ho we ver, unlik e [4, 5, 9] which assumes a thin-plate spline transformation, we do not mak e any explicit assumption of the transformation model. Instead, we consider the process of adapting the Gaussian centroids from their initial positions to their nal positions as a temporal motion process, and impose a motion coherence constraint over the velocity eld. Velocity coherence is a particular way of imposing smoothness on the underlying transformation. The concept of motion coherence was proposed in the Motion Coherence Theory [10 ]. The intuition is that points close to one another tend to mo ve coherently . This motion coherence constraint penalizes deri vatives of all orders of the underlying velocity eld (thin-plate spline only penalizes the second order deri vative). Examples of velocity elds with dif ferent levels of motion coherence for dif ferent point correspondence are illustrated in Fig. 1. Figure 1: (a) Two given point sets. (b) A coherent velocity eld. (c, d) Velocity elds that are less coherent for the given correspondences.
 We deri ve a solution for the velocity eld through a variational approach by maximizing the lik eli-hood of GMM penalized by motion coherence. We sho w that the nal transformation has an ele gant kernel form. We also deri ve an EM algorithm for the penalized ML optimization with deterministic annealing. Once we have the nal positions of the GMM centroids, the correspondence between the two point sets can be easily inferred through the posterior probability of the Gaussian mixture components given the rst point set. Our method is a true probabilistic approach and is sho wn to be accurate and rob ust in the presence of outliers and missing points, and is effecti ve for estimation of comple x non-linear non-rigid transformations. The rest of the paper is organized as follo ws. In Section 2 we formulate the problem and deri ve the CPD algorithm. In Section 3 we present the results of CPD algorithm and compare its performance with that of RPM [4] and ICP [2]. In Section 4 we summarize the properties of CPD and discuss the results. Assume two point sets are given, where the template point set Y = ( y M D matrix) should be aligned with the reference point set X = ( x 1 ; : : : ; x N ) T (expressed as a N D matrix) and D is the dimension of the points. We consider the points in Y as the centroids of a Gaussian Mixture Model, and t it to the data points X by maximizing the lik elihood function. We denote Y template point set such that the current position of centroids is dened as Y = v ( Y Consider a Gaussian-mixture density p ( x ) = P M Y represents D -dimensional centroids of equally-weighted Gaussians with equal isotropic covari-ance matrices, and X set represents data points. In order to enforce a smooth motion constraint, we dene the prior p ( Y j ) / exp ( that regularizes the motion to be smooth. Using Bayes theorem, we want to nd the parameters Y by maximizing the posteriori probability , or equi valently by minimizing the follo wing ener gy function: We mak e the i.i.d. data assumption and ignore terms independent of Y . Equation 1 has a similar form to that of Generalized Elastic Net (GEN) [11 ], which has sho wn good performance in non-rigid image registration [12 ]; note that there we directly penalized Y , while here we penalize the transformation v . The function represents our prior kno wledge about the motion, which should be smooth. Specically , we want the velocity eld v generated by template point set displacement to be smooth. According to [13 ], smoothness is a measure of the  X oscillatory X  beha vior of a function. Within the class of dif ferentiable functions, one function is said to be smoother than another if it a function can be measured by rst high-pass ltering the function, and then measuring the resulting power . This can be represented as ( v ) = R transform of the velocity and ~ G is some positi ve function that approaches zero as k s k ! 1 . Here ~ G represents a symmetric low-pass lter , so that its Fourier transform G is real and symmetric. Follo wing this formulation, we rewrite the ener gy function as: It can be sho wn using a variational approach (see Appendix A for a sketch of the proof) that the function which minimizes the ener gy function in Eq. 2 has the form of the radial basis function: We choose a Gaussian kernel form for G (note it is not related to the Gaussian form of the distri-bution chosen for the mixture model). There are several moti vations for such a Gaussian choice: First, it satises the required properties (symmetric, positi ve denite, and ~ G approaches zero as k s k ! 1 ). Second, a Gaussian low pass lter has the property of having the Gaussian form in both frequenc y and time domain without oscillations. By choosing an appropriately sized Gauss-ian lter we have the exibility to control the range of ltered frequencies and thus the amount of spatial smoothness. Third, the choice of the Gaussian mak es our regularization term equi valent to the one in Motion Coherence Theory (MCT) [10 ]. The regularization term R with a Gaussian function for G , is equi valent to the sum of weighted squares of all order deri vatives of the velocity eld R D 2 m v = r 2 m v and D 2 m +1 v = r ( r 2 m v ) . The equi valence of the regularization term with that of the Motion Coherence Theory implies that we are imposing motion coherence among the points and thus we call our method the Coherent Point Drift (CPD) method. Detailed discussion of MCT can be found in [10 ]. Substituting the solution obtained in Eq. 3 back into Eq. 2, we obtain where G W
M D = ( w 1 ; : : : ; w M ) T Optimization. Follo wing the EM algorithm deri vation for clustering using Gaussian Mixture Model [14 ], we can nd the upper bound of the function in Eq. 4 as (E-step): where P old denotes the posterior probabilities calculated using pre vious parameter values, and G ( m; ) denotes the m th row of G . Minimizing the upper bound Q will lead to a decrease in the value of the ener gy function E in Eq. 4, unless it is already at local minimum. Taking the deri vative of Eq. 5 with respect to W , and rewriting the equation in matrix form, we obtain (M-step) where P is a matrix of posterior probabilities with p The diag ( ) notation indicates diagonal matrix and 1 is a column vector of all ones. Multiplying Eq. 6 by 2 G 1 (which exists for a Gaussian kernel) we obtain a linear system of equations: Solving the system for W is the M-step of EM algorithm. The E step requires computation of the posterior probability matrix P . The EM algorithm is guaranteed to con verge to a local optimum from almost any starting point. Eq. 7 can also be obtained directly by nding the deri vative of Eq. 4 with respect to W and equating it to zero. This results in a system of nonlinear equations that can be iterati vely solv ed using x ed point update, which is exactly the EM algorithm sho wn abo ve. The computational comple xity of each EM iteration is dominated by the linear system of Eq. 7, which tak es O ( M 3 ) . If using a truncated Gaussian kernel and/or linear conjugate gradients, this can be reduced to O ( M 2 ) .
 Rob ustness to Noise. The use of a probabilistic assignment of correspondences between point sets is innately more rob ust than the binary assignment used in ICP . Ho we ver, the GMM requires that each data point be explained by the model. In order to account for outliers, we add an additional uniform pdf component to the mixture model. This new component changes posterior probability matrix P in Eq. 7, which now is dened as p a denes the support for the uniform pdf. The use of the uniform distrib ution greatly impro ves the noise.
 Fr ee Parameters. There are three free parameters in the method: ; and . Parameter represents the trade off between data tting and smoothness regularization. Parameter reects the strength of interaction between points. Small values of produce locally smooth transformation, while lar ge values of correspond to nearly pure translation transformation. The value of serv es as a capture range for each Gaussian mixture component. Smaller indicates smaller and more localized capture range for each Gaussian component in the mixture model. We use deterministic annealing for , starting with a lar ge value and gradually reducing it according to = , where is annealing rate (normally between [0.92 0.98]), so that the annealing process is slo w enough for the algorithm to be rob ust. The gradual reducing of leads to a coarse-to-ne match strate gy. We summarize the CPD algorithm in Fig. 2. We sho w the performance of CPD on articial data with non-rigid deformations. The algorithm is implemented in Matlab, and tested on a Pentium4 CPU 3GHz with 4GB RAM. The code is available at www.csee.ogi.edu/  X  myron/matlab/cpd . The initial value of and are set to 1.0 in all experiments. The starting value of is 3.0 and gradually annealed with = 0 : 97 . The stopping condition for the iterati ve process is either when the current change in parameters drops belo w a threshold of 10 6 or the number of iterations reaches the maximum of 150.
 Figure 3: Re gistration results for the CPD, RPM and ICP algorithms from top to bottom. The rst column sho ws template ( ) and reference ( + ) point sets. The second column sho ws the registered position of the template set superimposed over the reference set. The third column represents the reco vered underlying deformation . The last column sho ws the link between initial and nal template point positions (only every second point' s displacement is sho wn).
 On average the algorithm con verges in few seconds and requires around 80 iterations. All point sets are preprocessed to have zero mean and unit variance (which normalizes translation and scaling). We compare our method on non-rigid point registration with RPM and ICP . The RPM and ICP implementations and the 2D point sets used for comparison are tak en from the TPS-RPM Matlab package [4].
 For the rst experiment (Fig. 3) we use two clean point sets. Both CPD and RPM algorithms produce accurate results for non-rigid registration. The ICP algorithm is unable to escape a local minimum. We sho w the velocity eld through the deformation of a regular grid. The deformation eld for RPM corresponds to parameterized TPS transformation, while that for CPD represents a motion coherent non-linear deformation. For the second experiment (Fig. 4) we mak e the registration problem more challenging. The sh head in the reference point set is remo ved, and random noise is added. In the template point set the tail is remo ved. The CPD algorithm sho ws rob ustness even in the area of missing points and corrupted data. RPM incorrectly wraps points to the middle of the gure. We have also tried dif ferent values of smoothness parameters for RPM without much success, and we only sho w the best result. ICP also sho ws poor performance and is stuck in a local minimum. For the 3D experiment (Fig. 5) we sho w the performance of CPD on 3D faces. The face surf ace is dened by the set of control points. We articially deform the control point positions non-rigidly and use it as a template point set. The original control point positions are used as a reference point set. CPD is effecti ve and accurate for this 3D non-rigid registration problem.
 Figure 4: The reference point set is corrupted to mak e the registration task more challenging. Noise is added and the sh head is remo ved in the reference point set. The tail is also remo ved in the template point set. The rst column sho ws template ( ) and reference ( + ) point sets. The second column sho ws the registered position of the template set superimposed over the reference set. The third column represents the reco vered underlying deformation. The last column sho ws the link between the initial and nal template point positions. We intoduce Coherent Point Drift, a new probabilistic method for non-rigid registration of two point sets. The registration is considered as a Maximum Lik elihood estimation problem, where one point set represents centroids of a GMM and the other represents the data. We regularize the velocity eld over the points domain to enforce coherent motion and dene the mathematical formulation of this constraint. We deri ve the solution for the penalized ML estimation through the variational approach, and sho w that the nal transformation has an ele gant kernel form. We also deri ve the EM optimization algorithm with deterministic annealing. The estimated velocity eld represents the underlying non-rigid transformation. Once we have the nal positions of the GMM centroids, the correspondence between the two point sets can be easily inferred through the posterior probability of Figure 5: The results of CPD non-rigid registration on 3D point sets. (a, d) The reference face and its control point set. (b, e) The template face and its control point set. (c, f) Result obtained by registering the template point set onto the reference point set using CPD. the GMM components given the data. The computational comple xity of CPD is O ( M 3 ) , where M is the number of points in template point set. It is worth mentioning that the components in the point vector are not limited to spatial coordinates. The y can also represent the geometrical characteristic of an object (e.g., curv ature, moments), or the features extracted from the intensity image (e.g., color , gradient). We compare the performance of the CPD algorithm on 2D and 3D data against ICP and RPM algorithms, and sho w how CPD outperforms both methods in the presence of noise and outliers. It should be noted that CPD does not work well for lar ge in-plane rotation. Typically such transformation can be rst compensated by other well kno wn global registration techniques before CPD algorithm is carried out. The CPD method is most effecti ve when estimating smooth non-rigid transformations.
 Consider the function in Eq. 8, where y point. v is a continuous velocity function and v ( y obtain: In order to nd the minimum of this functional we tak e its functional deri vatives with respect to ~ v ,
E (~ v ) 2 Z We now dene the coef cients a tive as: Denoting the new coef cients w both sides of this equation, which results in: Assuming that ~ G is symmetric (so that its Fourier transform is real), and taking the inverse Fourier transform of the last equation, we obtain: Since w equation equi valent to Eq. 7. A specic form of regularizer ~ G results in a specic basis function G . This work is partially supported by NIH grant NEI R01 EY013093, NSF grant IIS X 0313350 (awarded to X. Song) and NSF CAREER award IIS X 0546857 (awarded to Miguel  X  A.
 Carreira-Perpi  X  n X  an).

