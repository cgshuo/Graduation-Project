 Real enterprise databases are usually large and complicated, which makes query-ing unfamiliar databases a really hard task for users. Moreover, the prevalent lack of documentation incurs significant cost in both understanding and inte-grating the databases. Schema summarization is a promising method to address this challenge by providing users an overview of the database relationships and schema constitution. It summarizes the s chema to several clustered categories, each of which is represented to users by a topic table, making it possible to explore in depth only the relevant schema components.

Since Yu and Jagadish [13] proposed the first algorithm for automatically summarizing database schema, researches on schema summarization are con-ducted mainly on XML database [13] and relational database [11] [12]. This paper focuses on the later one. Summarizing a relational database consists of two main steps. In the first step, similar tables are grouped into a category. In the second step, each category will pick up a topic table to represent it. [12] applies a weighted k-center cluster algorithm to partition the schema into specified k categories and picks up representatives by a model based on table content and random walk. [11] notices th at community detection is very similar to schema summarization, so it adopts a modularity-based community detection algorithm to detect subject groups in a database and selects a representative for each category with the same method of [12].

Existing schema summarization methods just cluster a database element to one category. However, in reality, an element of a database may belong to multi-ple topics. Take TPC-E [7] as an example. As shown in figure 1, TPC-E models the activity of brokerage firm that executes customer trade orders and is respon-sible for the interactions of customers with financial markets. The database tables are pre-grouped into four categories: Customer, Broker, Market and Dimension. Table EXCHANGE records the financial exchange information of brokers, which bridges Market and Broker. However, previous work only assigns it into Market and thus results in category Broker lacking of important exchange information. Moreover, the result will confuse users by losing the connection between Mar-ket and Broker. In an enterprise-scale database, scenarios like this will be very common. A non-overlapping schema summary is not enough for users to under-stand a database structure. Detecting overlapping schema summarization will be necessary and helpful.

As far as we know, this paper presents the notion of overlapping schema sum-marization for the first time. An overlapping schema summary allows database elements belonging to multiple categories. This paper proposes an algorithm OS-SMP(Overlapping Schema Summarization based on Multi-label Propagation) to generate overlapping schema summaries. OSSMP first constructs an overlapping schema graph for a given database. And then it adopts a multi-label propagation algorithm [3] to detect overlapping groups in the graph. In addition, it utilizes hierarchical clustering to refine the groups. Similar to previous work, we choose representatives by computing importance of each table [12]. Our extensive ex-periments demonstrate the effectiveness of our algorithm and show that this method is really helpful for users to understand complex databases.
The intellectual contributions of this paper are as follows:  X  To our best knowledge, we present the notion of multi-label schema graph  X  This paper proposes OSSMP algorithm to generate an overlapping schema  X  We have extensively evaluated OSSMP by multiple criterions. The results
The remainder of this paper is organized as follow. We briefly review related work in section 2. Section 3 is dedicated t o basic concepts and general definitions of overlapping schema summarization. Then we describe our proposed OSSMP approach for overlapping schema summarization in section 4 and evaluate it in Section 5. Finally, we present concluding remarks in Section 6. There are mainly two types of schema su mmarization researches according to different applicable database types. The first one focused on XML database like [13]. It proposed the notion of schema summary for the first time and developed an algorithm for generating the summary by balancing two properties, impor-tance and coverage. Other researches all focused on the relational databases. [9] described a system iDisc to generate topical structures of databases. It par-titioned the schema graph into different topic clusters via meta-clustering and took the most important tables as the representatives of topic clusters. [12] re-garded the relational database schema as an undirected graph. It picked up the most important tables as the center of e ach cluster, and then utilized Weighted k-center algorithm to generate schema summarization. Weighted k-center is an approximation algorithm for the K-means problem which is NP-hard. When it comes to large database, the high complexity is unbearable. [8] and [10] applied community detection methods to cluster a schema into subject groups and used hierarchical clustering algorithm additionally to merge the groups. The algo-rithms depicted in [8] and [10] were also time-consuming as the rapid increase of database scale.

However, none of the algorithms above took overlapping schema summariza-tion into account. To the best of our kn owledge, there were no researches on overlapping schema summarization so far. Fortunately, this problem is similar to overlapping communities in graph which has much talented work these years. One kind of overlapping community detection algorithms were based on local ex-pansion and optimization, such as [4] [5]. They expanded the community on the foundation of a local community and had a local optimization function to assess the current corporatist degree of the local community. Another kind of algorithm was to cluster links, such as [1]. It used non-overlapping community detection algorithm to detect link communities over a line graph. Since vertices can belong to multiple links, it could generate overlapping communities. The disadvantage of the above two kinds of algorithm were their high time complexity. Multi-label propagation algorithm [3] [10] was one of the fastest algorithms to detect over-lapping communities. It allowed each vertex to belong to  X  communities at most and can process very large networks in a short time. In this section, we first define of multi-labeled schema graph. Then we formulate the problem of overlapping schema summarization. 3.1 Multi-labeled Schema Graph Given a relational database, a labeled schema graph G L is usually defined as a triple ( V,E,L ), where each vertex v  X  V corresponds to a table and each edge e  X  E to a foreign key in the database, L is a labeling function that assigns a label to each table. L ( v )= l denotes that the label of table v is l . A multi-labeled graph G ML extends the function L to multiple labels, as definition 1 interprets. Definition 1 (Multi-labeled Schema Graph). A schema graph in this paper is defined to be a multi-labeled weighted graph, G ML =( V,E,L M ) ,where:  X  Each node v  X  V corresponds to a table in the given database.  X  Each edge e  X  E is a foreign key that connects two tables. The weight of e  X  L M is a labeling function that assigns a single label or multiple labels to each The weight function for edges is very important to generate a good schema graph, which will be discussed below. 3.2 Weight Function A weight to each edge in the schema graph is proportional to the similarity between its two tables. Three features ha ve been proposed to measure the simi-larity.
 Name-Based Feature , Sim n ( v i ,v j ). If two tables are similar, their table names and attribute names may be similar. We convert the similarity between two tables to the similarity between their n ame texts, which can be calculated by Vector Space Model.
 Value-Based Feature , Sim v ( v i ,v j ). If two tables are similar, their attributes ally taken to calculate value similarity between two attributes A, B . The value similarity of two tables can be computed as the average of their attribute simi-larities.
 Mapping-Based Feature , Sim m ( v i ,v j ). If two tables are similar, there may be many mapping tuples between them. T his feature reflects the connection strength of two tables X  tuples and is calculated as where  X  are the tuples of table v , fan (  X  i ) is the number of edges incident to tuple  X  , q counts the number of tuples satisfying fan (  X  j ) &gt; 0.
In this paper, we adopt a similarity kernel function introduced in [14]. It combines all of the three features to measure the similarity. The similarity of table v i and table v j is defined as  X  is a parameter which can be studied by average label entropy method and dist ( v i ,v j ) denotes the distance between v i and v j , which is defined as where the four parameters are estimated by machine learning method. 3.3 Problem Definition To initialize, each table in the multi-labeled schema graph has a unique category identifier. Overlapping schema summarization is to reduce the category identi-fiers to user-specified k and to obtain a mapping that assigns each table to its categories. Each category is r epresented by a topic table t . Based on the this intuition, we formulate overlapping schema summarization as below.
 Definition 2 (Overlapping Schema Summarization). Given a multi-labeled schema graph G ML =( V,E,L M ) and a parameter k , an overlapping schema summarization of G ML with size k is a k-partition C = { C 1 ,C 2 , ..., C k } over the database schema, where:  X  Each category C i  X  C has a topical table, defined as t ( C i ) .  X  Each table v in category C i has a label with category identifer c i :  X  v  X  C i , Figure 2 shows the work flow of our OSSMP approach. It takes a multi-labeled schema graph as input and returns an overlapping schema summary. It is made up of three major steps: In the first step, we cluster the database tables into several groups by multi-labeled propagation algorithm. Secondly, if the groups size is larger than the specified summary size k , we use hierarchical clustering algorithm to generate a more reasonable summarization. Finally we pick up the most important table for each category as the topic tables. The details of each step will be discussed next.
 4.1 Overlapping Groups Detection This step aims at clustering the multi-labeled schema graph with n tables into m groups by a multi-label propagation algorithm.
 Initialization. Multi-label propagation algorithm starts with a weighted multi-labeled schema graph G ML ( V,E,L M )definedinsection3andaparameter  X  .  X  is the maximum number of categories to which any table can belong. To initialize the multi-labeled schema graph, every table in V is given a unique label pair( c, b ), where the category identifier c is its table name, and the belonging coefficient b is set to 1. Therefore, there are n category identifers when initialization, where n is the number of tables in the schema graph.

Since  X  influences the result of multi-label propagation directly, it also influ-ences the final summary greatly. To set a reasonable  X  , we range  X  from k  X  1to k + 3 and choose the  X  which generates the best cluster.

It assumes that a good cluster should achieve the goal of attaining high intra-category similarity. We utilize the intra-similarity of a cluster to evaluate its property.
 Definition 3 (Cluster Intra-Similarity). Let C = { C 1 ,C 2 , ..., C m } be the cluster generated by multi-labeled propagation. The intra-similarity of C is de-noted as Sim ( C ) : where Sim ( v i ,v j ) is the similarity between v i and v j introduced in section 3.2, |
C tables, their similarity is 0.

The experiment result shows that, for k =2 , 3 , 4 , 5, the clusters have the highest intra-similarities when  X  = 5. In the following experiments, we set  X  =5 in the multi-label propagation.
 Propagation. The procedure of Multi-label propagation can be divided into four phases. 1) Each propagation step would set table v  X  X  labels to the union of its neigh-bours X  labels, then sum the belonging coefficients of the communities over all neighbours, and normalize. More precisely, assuming a function b x ( c, v )that maps a table v and category identifier c to its belonging coefficient in iteration x , where N ( v i ) denotes the neighbors of v i ,and w v i v j is the weight of the edge between v i and v j . 2) To avoid every table owning all labels at the end, in each step, we delete the labels whose belonging coefficient is less than 1 / X  . Category identifiers are reducing at the same time. If the belonging coefficients of all labels are less than 1 / X  , we only retain the label with the greatest belonging coefficient. 3) After several iterations, the propagation will stop when the minimum num-ber of tables labeled by one identifier is not changing. The concrete proof can be found in [3]. 4) Let m be the number of category identifiers remaining after iterations. Tables whose labels contain identifier c m is allocated to group C m .Nowthe schema is partitioned into m groups, C = { C 1 ,C 2 , ..., C m } . 4.2 Group Refinement Enterprise databases always have hundreds of tables. There may still be many groups after clustering by multi-labeled propagation. In order to generate more concise summary, we utilize an agglomerat ive hierarchical clustering algorithm to cluster the groups again when the group size is larger than user-specified k . Group Similarity. Intuitively, two table groups are similar if their tables are similar. We formally define the similarity of every two groups as follow. Definition 4 (Group Similarity). Let C i and C j be two groups generated by multi-labeled propagation. The similarity of C i and C j is: Hierarchical Clustering Algorithm. With similarities between any two groups, we adopt hierarchical clustering algorithm to generate abstract cate-gories. Hierarchical clustering is one of the most common clustering algorithms. It starts with m groups generated by the multi-label propagation and puts out k categories. The algorithm first treats each group as a single category. In each iteration step, it incorporates the two categories with highest similarity. The it-eration continues until the summary size k is reached. The detailed pseudo-code is shown in Algorithm 1.
 Algorithm 1. Hierarchical Clustering Algorithm 4.3 Topic Table Selection After getting categories of the summary, we choose the most important table in each category to be the topic table. Topic tables help users understand the sub-ject of each category easily. We implement the importance function introduced in [12] to calculate the importance of each table. The importance of a table v is written as I v . Each table is first given an information content to be the initial importance as where IC ( v ) is the initial information content of table v , | v | is the number of tuples in v , v.A ranges over all attributes in table v . H ( v.A )presentstheentropy of the attribute A , which is defined as where m is the number of different values of attribute v.A .Let v.A = { a 1 ,  X  X  X  ,a m } and p i be the fraction of tuples in v that have value a i on attribute A .
Let n be the table number on the schema graph G .An n  X  n probability matrix reflects the information transfer between tables. Let v i , v j present two tables, v i .A  X  v j .B be the join edge between A and B . q A denotes the total number of join edges involving attribute v i .A .
Theimportancevector I denotes the stationary distribution of the random walk defined by the probability matrix . It can be computed by the iterative approach until the stationary distribution is reached. In this section, we firstly introduce the data sets and the evaluation indica-tors. Then we conduct experiments to evaluate the effectiveness of our proposed method. All the programs are implemented in C# using Microsoft Visual Stu-dio.net 2010. And all experiments are carried out on a PC with Intel core i5 CPU 3.10GHz, 4GB memory and Microsoft Windows 7. 5.1 Data Sets We evaluate our method on two databases: a benchmark single-label database (TPC-E) and a real-world multi-label database(CCEMIS [6]). TPC-E is a bench-mark synthetic database which is adopted to simulate the On-Line Transaction Processing workload of a brokerage firm. And CCEMIS is a database of infor-mation management system in Nankai University. The characteristics of them are shown in table 1, where T is the number of non-empty tables, Avg(C) and Max(C) are the average and maximum number of columns per table, Avg(R) and Max(R) are the average and maximum number of rows per table, C is the number of foreign keys.

Tables of TPC-E are pre-grouped into four categories: Customer, Broker, Mar-ket and Dimension. CCEMIS is also pre-grouped into four categories: Student, Teacher, Course and Lesson. The pre-defined categories are the ground truth and facilitate our experimental evaluation.
 5.2 Evaluation Indicators The accuracy model introduced in [12] is usually used to evaluate the non-overlapping schema summarization approaches.
 Accuracy. The accuracy model measures how ma ny tables are categorized cor-rectly in the summary C by the following formula: where acc ( C ) denotes the accuracy of summary C = { C 1 ,C 2 , ..., C k } , k is the summary size which is specified by the users, n is the total number of database tables, t ( C i ) is the topic table of C i , m ( C i ) denotes the number of tables in the category C i that belongs to the same category as t ( C i ), in the pre-defined labeling.
 Accuracy-M and F-Measure. Inspired by multi-label classification indica-tors in [2], we exploit Accuracy and F-mea sure for multi-label classification to evaluate the overlapping summaries. In order to distinguish the two accuracy, we denote the multi-label accura cy as Accuracy-M. For each table v ,let T be the true categories it belongs to, S be its predicted categories in the summary. n is the total number of database tables . Then Accuracy-M and F-measure for an overlapping summary C = { C 1 ,C 2 , ..., C k } are defined as follow. 5.3 Evaluation of Effectiveness The baselines in this work are VHCA [11] and CWKC [12]. Both of them are non-overlapping summarization methods. To compare with them, we compute accuracy on TPC-E first. Our method ach ieves an overlapping summary where tables may have multiple labels. We perform additional evaluations with multi-labeled accuracy and multi-labeled F-measure on the both data sets. All of the experiments show that our method achieve better effectiveness and the generated summaries are more helpful. We will analysis the experimental results in depth. Effectiveness over TPC-E. Fig. 3 shows the accuracy values of the three summarization approaches over T PC-E according to different k . We notice that the effectiveness of the three approaches is increasing along with the growth of k .When k = 4, the accuracy reaches the maximum. For k  X  5, the accuracy gradually decreases. It gives a clear signal that there are only 4 categories in this database schema and it is meaningless to compute categories for k&gt; 5. For each k , our OSSMP approach obtains the most accurate summary.
 Fig.4 and Fig.5 show the accuracy-M and F -measure values respectively. Since TPC-E is a single-label data set, the det ected overlaps will lead to the decrease of Accuracy-M and F-measu re. However, OSSMP still performs better than the other two approaches.
 The result shows that we find meaningful overlaps including EXCHANGE, SECURITY, ADDRESS, ZIP CODE and STATUS TYPE when k =4.EX-CHANGE bridges Marker and Broker as we mentioned above. Like EXCHANGE, SECURITY brings important information of both Marker and Customer. The other three tables belong to Dimension in original. However, it is more appro-priate to divide them into other categories because they are referenced by other categories. According to our result, ADDRESS and ZIP CODE are assigned into Costumer and Market while STATUS TYPE is assigned into Market and Broker. Effectiveness over CCEMIS. In Fig.6 and Fig.7, we plot the Accuracy-M and F-measure values for the three approaches over CCEMIS. They follow a similar trend as TPC-E with the growth of k . And the trend shows that there are also only 4 categories in CCEMIS. The graphs show that our approach performs the best. Moreover, when k = 4, we detect all of the four overlaps in CCEMIS. MajorClass and StudentCourse belong to both Student and Course. LessonTeacher and TeacherArrange b elong to both Teacher and Lesson. In this paper, we present the notion of overlapping schema summarization for the first time. We also proposed an approach for generating overlapping schema summarization automatically. The OSSMP approach first exploits multi-label propagation algorithm to generate over lapping groups. Then it utilizes a hier-archical clustering algorithm to cluster the groups into the final categories. We have conducted an extensive study on one benchmark database and a real-world database, showing that our approach is accurate and can detect meaningful overlaps.
 Acknowledgements. This work is partially supported by National Natural Sci-ence Foundation of China unde r Grant No. 61170184, 61402242, and 61402243, National 863 Program of China under G rant No. 2015AA015401, as well as Na-tional Key Technology R&amp;D Progr am under Grant No.2013BAH01B05. This work is also partially supported by Tianjin Municipal Science and Technol-ogy Commission under Grant No. 13ZCZDGX02200, 13ZCZDGX01098, 14JC-QNJC00200, and 14JCTPJC00543.

