 Recently a variety of  X  X eep architecture X  ap-proaches, including autoencoders, have been suc-cessfully used in statistical machine translation (SMT) (Yang et al., 2013; Liu et al., 2013; Zou et al., 2013; Devlin et al., 2014; Tamura et al., 2014; Sundermeyer et al., 2014; Wang et al., 2014; Ko  X  cisk  X  y et al., 2014). Typically, these approaches represent words as dense, low-dimensional and real-valued vectors, i.e., word embeddings. How-ever, translation units in machine translation have long since shifted from words to phrases (se-quence of words), of which syntactic and se-mantic information cannot be adequately captured and represented by word embeddings. There-fore, learning compact vector representations for phrases or even longer expressions is more crucial for successful  X  X eep X  SMT.

To address this issue, many efforts have been initiated on learning representations for bilingual phrases in the context of SMT, inspired by the suc-cess of work on monolingual phrase embeddings (Socher et al., 2010; Socher et al., 2011a; Socher et al., 2013b; Chen and Manning, 2014; Kalch-brenner et al., 2014; Kim, 2014). The learning process of bilingual phrase embeddings in these efforts is normally interacted and mingled with single or multiple essential components of SMT, e.g., with reordering models (Li et al., 2013), translation models (Cui et al., 2014; Zhang et al., 2014; Gao et al., 2014), or both language and translation models (Liu et al., 2014). In spite of their success, these approaches center around cap-turing relations between entire source and target phrases. They do not take into account internal phrase structures and bilingual correspondences of sub-phrases within source and target phrases. The neglect of these important clues may be due to the big challenge imposed by the integration of them into the learning process of bilingual phrase rep-resentations. However, we believe such internal structures and correspondences can help us learn better phrase representations since they provide multi-level syntactic and semantic constraints.
In this paper, we propose a Bilingual Corre-spondence Recursive Autoencoder (BCorrRAE) to learn bilingual phrase embeddings. BCorrRAE substantially extends the Bilingually-constrained Recursive Auto-encoder (BRAE) (Zhang et al., 2014) to exploit both inner structures and corre-spondences within bilingual phrases. The intu-itions behind BCorrRAE are twofold: 1) bilingual phrase structure generation should satisfy word alignment constraints as much as possible; and 2) corresponding sub-phrases on the source and target side of bilingual phrases should be able to reconstruct each other as they are semantic equivalents. In order to model the first intuition, BCorrRAE punishes bilingual structures that vio-late word alignment constraints and rewards those in consistent with word alignments. This en-ables BCorrRAE to produce desirable bilingual phrase structures from the perspective of word alignments. With regard to the second intuition, BCorrRAE reconstructs structures of sub-phrases of one language according to aligned nodes in the other language and minimizes the gap between original and reconstructed structures. In doing so, BCorrRAE is capable of capturing semantic rela-tions at different levels.

To better illustrate our model, let us consider the example in Figure 1. Similar to the conven-tional recursive antoencoder (RAE), BRAE ne-glects bilingual correspondences of sub-phrases. Thus, it may combine  X  adopted  X  and  X  today  X  to-gether to generate an undesirable target tree struc-ture which violates word alignments. In contrast, BCorrRAE aligns source-side nodes (e.g. ( X   X   X   X ,  X   X   X   X )) to their corresponding target-side nodes (accordingly ( X  resolution  X ,  X  adopted  X )) ac-cording to word alignments. Furthermore, in BCorrRAE, each subtree on the target side can be reconstructed from the corresponding source node that aligns to the target-side node dominating the subtree and vice versa. These advantages allow us to obtain improved bilingual phrase embeddings with better inner correspondences of sub-phrases and word alignment consistency.
 We conduct experiments with a state-of-the-art SMT system on large-scale data to evaluate the ef-fectiveness of BCorrRAE model. Results on the NIST 2006 and 2008 datasets show that our sys-tem achieves significant improvements over base-line methods. The main contributions of our work lie in the following three aspects:  X  We learn both embeddings and tree struc- X  We incorporate word alignment information  X  We integrate two similarity features based on In this section, we briefly introduce the RAE and its bilingual variation BRAE. This will provide background knowledge on our proposed BCor-rRAE. 2.1 RAE The component in the dash box of Figure 2 illus-trates an instance of an RAE applied to a three-word phrase. The input to the RAE is x = ( x 1 ,x 2 ,x 3 ) , which are the d -dimensional vector representations of the ordered words in a phrase. For two children c 1 = x 1 and c 2 = x 2 , the parent vector y 1 can be computed in the following way: c wise activation function such as tanh (  X  ) , which is used for all activation functions in BRAE and our model. The learned parent vector p is also a d -dimensional vector. In order to measure how well p represents its children, we reconstruct the origi-nal children nodes in a reconstruction layer: where c 0 1 and c 0 2 are reconstructed children vectors,
We can set y 1 = p and then further use Eq. (1) again to compute y 2 by setting [ c 1 ; c 2 ] = [ y 1 ; x This combination and reconstruction process of auto-encoder repeats at each node until the vec-tor of the entire phrase is generated. To obtain the optimal binary tree and phrase representation for x , we employ a greedy algorithm (Socher et al., 2011c) to minimize the sum of reconstruction er-ror at each node in the binary tree T ( x ) :
E rec ( x ;  X  ) = where  X  denotes model parameters and n repre-sents a node in T ( x ) . 2.2 BRAE BRAE jointly learns two RAEs for source and tar-get phrase embeddings as shown in Figure 1(a). The core idea behind BRAE is that a source phrase and its target correct translation should share the same semantic representations, while non-equivalent pairs should have different seman-tic representations. Zhang et al. (2014) use this intuition to constrain semantic pharse embedding learning.

As shown in Figure 2, in addition to the above-mentioned reconstruction error, BRAE introduces a max-semantic-margin error to minimize the se-mantic distance between translation equivalents and maximize the semantic distance between non-equivalent pairs simultaneously. Formally, the max-semantic-margin error of a bilingual phrase ( f,e ) is defined as E sem ( f,e ;  X  ) = E where E  X  sem ( f | e, X  ) is used to ensure that the se-mantic error for an equivalent pair is much smaller than that for a non-equivalent pair (the source phrase f and a bad translation e 0 ): where E sem ( f | e, X  ) is defined as the semantic dis-tance between the learned vector representations of f and e , denoted by p f and p e , respectively. Since phrase embeddings for the source and target language are learned separately in different vec-tor spaces, a transformation matrix W (3) is introduced to capture this semantic transfor-mation in the source-to-target direction. Thus, E sem ( f | e, X  ) is calculated as
E sem ( f | e, X  ) = where b (3) E sem ( e | f, X  ) can be computed in a similar way. The joint error of ( f,e ) is therefore defined as fol-lows: The final BRAE objective function over the train-ing instance set D becomes: Model parameters can be optimized over the total errors on training bilingual phrases in a co-training style algorithm (Zhang et al., 2014). As depicted above, the learned embeddings us-ing BRAE may be unreasonable due to the ne-glect of bilingual constraints at different levels. To address this drawback, we propose the BCor-rRAE for bilingual phrase embeddings, which in-corporates bilingual correspondence information into the learning process of structures and embed-dings via word alignments. In our model, we ex-plore word alignments in two ways: (1) ensuring that a learned bilingual phrase structure is con-sistent with word alignments as much as possi-ble; (2) identifying corresponding sub-phrases in the source language for reconstructing sub-phrases in the target language, and vice versa. More specifically, the former is to encourage alignment-consistent generation of sub-structures, while the latter is to minimize semantic distances between bilingual sub-phrases.

In this section, we first formally introduce a concept of structural alignment consistency en-coded in bilingual phrase structure learning, which is the basis of our model. Then, we describe the objective function which is composed of three types of errors. Finally, we provide details on the training of our model. 3.1 Structural Alignment Consistency We adapt word alignment to structural alignment and introduce some related concepts. Given a bilingual phrase ( f,e ) with its binary tree struc-tures ( T f ,T e ) , if the source node n  X  f  X  T f cov-ers a source-side sub-phrase  X  f , and there exists a target-side sub-phrase  X  e such that (  X  f,  X  e ) are consistent with word alignments (Och and Ney, 2003), we say n  X  f satisfies the structural alignment consistency , and it is referred to as a structural-alignment-consistent (SAC) node . Further, if  X  e is covered by a target node n  X  e  X  T e , we say n  X  e is the aligned node of n  X  f . In this way, several dif-ferent target nodes may be all aligned to the same source node because of null alignments. For this, we choose the target node with the smallest span as the aligned one for the considered source node. This is because a smaller span reflects a stronger semantic relevance in most situations.

Likewise, we have similar definitions for tar-get nodes. Note that alignment relations between source-and target-side nodes may not be symmet-ric. For example, in Figure 1(b), node n  X  e is the aligned node of node n  X  f 3.2 The Objective Function We elaborate the three types of errors defined for a bilingual phrase ( f,e ) with its binary tree struc-tures ( T f ,T e ) on both sides below. 3.2.1 Reconstruction Error Similar to RAE, the first error function is used to estimate how well learned phrase embeddings rep-resent corresponding phrases. The reconstruction error E rec ( f,e ;  X  ) of ( f,e ) is defined as follows: where both E rec ( f ;  X  ) and E rec ( e ;  X  ) can be calcu-lated according to Eq. (3). 3.2.2 Consistency Error This metric corresponds to the first way in which we exploit word alignments mentioned before, which enables our model to generate as many SAC nodes as possible to respect word alignments.
Formally, the consistency error E con ( f,e ;  X  ) of ( f,e ) is defined in the following way:
E con ( f,e ;  X  ) = E con ( T f ;  X  ) + E con ( T e ;  X  ) (10) where E con ( T f ;  X  ) and E con ( T e ;  X  ) denote the con-sistency error score for T f and T e , given word alignments. Here we only describe the calculation of the former while the latter can be calculated in exactly the same way.

To calculate E con ( T f ;  X  ) , we first judge whether a source node n  X  f is an SAC node according to word alignments. Let p n sentation of n  X  f . Following Socher et al. (2010), who use a simple inner product to measure how well the two words are combined into a phrase, we use inner product to calculate the consis-tency/inconsistency score for n  X  f : calculate W score by distinguishing SAC from non-SAC nodes defined as follows: where the subscript cns and inc represent consis-tency and inconsistency, respectively. For exam-ple, in Figure 3, as n  X  f it.

We expect T f to satisfy structural alignment consistency as much as possible. Therefore we en-courage the consistency score for T f to be larger than its inconsistency score using a max-margin consistency error function: where s ( T f ) cns denotes the sum of consistency scores over all SAC nodes and s ( T f ) ins the sum of inconsistency scores over all non-SAC nodes in T . Minimizing this error function will maximize the sum of consistency scores of SAC nodes and minimize (up to a margin) the sum of inconsis-tency scores of non-SAC nodes. 3.2.3 Cross-Lingual Reconstruction Error This metric corresponds to the second way in which we exploit word alignments. The assump-tion behind this is that a source/target node should be able to reconstruct the entire subtree rooted at its target/source aligned node as they are seman-tically equivalent. Based on this, for the consid-ered node, we calculate the cross-lingual recon-struction error along the entire subtree rooted at its aligned node in the other language and use the error to measure how well the learned vector rep-resents this node.
 Similarly, the cross-lingual reconstruction error E clrec ( f,e ;  X  ) of ( f,e ) can be decomposed into two parts as follows: where E f 2 e  X  rec ( T f ,T e ;  X  ) denotes the error score using T f to reconstruct T e . Note that in this pro-cess, the structure and the original node vector rep-resentations of T e have been already generated. E e 2 f  X  rec ( T f ,T e ;  X  ) denotes the reconstruction er-ror score using T e to reconstruct T f . Here we still only describe the method of computing the former, which also applies to the latter.

To calculate E f 2 e  X  rec ( T f ,T e ;  X  ) , we first collect all source nodes ( n  X  f ) in T f and their aligned nodes ( n  X  e ) in T e to form a set of aligned node pairs S = { X  n  X  f ,n  X  e  X  X  according to word alignments. We then calculate E f 2 e  X  rec ( T f ,T e ;  X  ) as the sum of error scores over all node pairs in S . Given a source node n  X  f with its aligned node n  X  e on the target side, we use n  X  f to reconstruct the sub-tree structure T  X  e rooted at n  X  e and compute the error score based on the semantic distance between the original and reconstructed vector representations of nodes in T  X  e . As source and target phrase em-beddings are separately learned, we first introduce a transformation matrix W (3) to transform source phrase embeddings into the target-side semantic space, following Zhang et al. (2014) and Hermann and Blunsom (2014): tation of n  X  e , which is transformed from the vec-tor representation p n reconstruction procedure in a top-down manner along the corresponding target tree structure un-til leaf nodes are reached, following Socher et al. (2011a). Specifically, given the vector representa-its two children nodes: where c u e 1 and c u e 2 are the reconstructed vector rep-and reconstructed target phrase representations, we calculate E f 2 e  X  rec ( T f ,T e ;  X  ) as follows: E where p n and p 0 n are the original and reconstructed vector representations of node n in the sub-tree structure T  X  e rooted at n  X  e . This error function will be minimized so that semantic differences between original and reconstructed structures are minimal.

Figure 3 demonstrates the structure reconstruc-tion from a generated source sub-tree to its target counterpart. In this way, BCorrRAE propagates semantic information along dash lines sequentially until leaf nodes in the generated structure of the target phrase. 3.2.4 The Final Objective Similar to Eq. (8), we define the final objective function of our model based on the three types of errors described above J +  X  ( E con ( T f ;  X  ) + E con ( T e ;  X  )) + R (  X  ) (17) where weights  X  ,  X  ,  X  (s.t.  X  +  X  +  X  = 1 ) are used to balance the preference among the three errors, and R (  X  ) is the regularization term. Parameters  X  1.  X  L : the word embedding matrix; 2.  X  rec : the RAE parameter matrices W (1) , 3.  X  con : the consistency/inconsistency score pa-4.  X  clrec : the cross-lingual RAE semantic trans-For regularization, we assign each parameter set a unique weight: Additionally, in order to prevent the hidden layer from being very small, we normalize all output vectors of the hidden layer to have length 1, p = 3.3 Model Training Similar to Zhang et al. (2014), we adopt a co-training style algorithm to train model parameters in the following two steps:
First, we use a normal distribution (  X  = 0 , X  = 0 . 01) to randomly initialize all model parameters, and adopt the standard RAE to pre-train source-and target-side phrase embeddings and tree struc-tures (Section 2.1).

Second, for each bilingual phrase, we update its source-side parameters to obtain the fine-tuned vector representation and binary tree of the source phrase, given the target-side phrase structure and node representations, and vice versa. In this pro-cess, we apply L-BFGS to tune parameters based on gradients over the joint error, as implemented in (Socher et al., 2011c).

We repeat the procedure of the second step until either the joint error (shown in Eq. (17)) reaches a local minima or the number of iterations is larger than a pre-defined number (25 is used in experi-ments). Once the model training is completed, we in-corporate two different phrasal similarity features built on the trained BCorrRAE into the standard log-linear framework of SMT. Given a bilingual phrase ( f,e ) , we first obtain their semantic phrase representations ( p f ,p e ) . Then we transform p f into p 0 e in the target semantic space and p e into tion matrixes. Finally, we reconstruct sub-trees of rRAE, sub-trees of p 0 e along the target structure T e .
We exploit two kinds of phrasal similarity fea-tures based on the learned phrase representations and their tree structures as follows:  X  Semantic Similarity measures the similarity  X  Structural Similarity calculates the similarity where p n and p 0 n represent vector representations of original and reconstructed node n , and C f and C e count the number of nodes in the source and target tree structure respectively. Note that if we only compute the similarity for root nodes in the bilingual tree of ( f,e ) , the structural similarity equals to the semantic similarity in Eq. (19). We conducted experiments on NIST Chinese-English translation task to validate the effective-ness of BCorrRAE. 5.1 System Overview Our baseline decoder is a state-of-the-art phrase-based translation system equipped with a maxi-mum entropy based reordering model (MEBTG).
 It adopts three bracketing transduction grammar rules (Wu, 1997; Xiong et al., 2006): merging rules A  X  [ A 1 ,A 2 ] | X  A 1 ,A 2  X  which are used to merge two neighboring blocks 2 A 1 and A 2 in a straight | inverted order, and lexical rule A  X  f/e used to translate a source phrase f into a target phrase e .

The MEBTG system features a maximal en-tropy classifier based reordering model that pre-dicts orientations of neighboring blocks. During training, we extract bilingual phrases containing up to 7 words on the source side from the training corpus. With the collected reordering examples, by Zhang to train the reordering model with the following parameters: iteration number iter =200 and gaussian prior g =1.0. Following Xiong et al. (2006), we use only boundary words of blocks to trigger the reordering model.

The whole translation model is organized in a log-linear framework (Och and Ney, 2002). The adopted sub-models mainly include: (1) rule trans-lation probabilities in two directions, (2) lexical weights in two directions, (3) targets-side word number, (4) phrase number, (5) language model score, and (6) the score of maximal entropy based reordering model. We perform minimum error rate training (Och, 2003) to tune various fea-ture weights. During decoding, we set ttable -limit =20 for translation candidates kept for each source phrase, stack -size =100 for hypotheses in each span, and swap -span =15 for the length of the maximal reordering span. 5.2 Setup Our bilingual data is the combination of the FBIS corpus and Hansards part of LDC2004T07 corpus, which contains 1 . 0 M parallel sentences ( 25 . 2 M Chinese words and 29M English words). Follow-ing Zhang et al. (2014), we collected 1 . 44 M bilin-gual phrases using forced decoding (Wuebker et al., 2010) to train BCorrRAE from the training data. We used a 5 -gram language model trained on the Xinhua portion of Gigaword corpus using SRILM Toolkits 4 . Translation quality is evaluated by case-insensitive BLEU-4 metric (Papineni et al., 2002). We performed paired bootstrap sam-pling (Koehn, 2004) to test the significance in BLEU score differences. In our experiments, we used NIST MT05 and MT06/MT08 data set as the development and test set, respectively.

In addition to the baseline described below, we also compare our method against the BRAE model, which focuses on modeling relations of source and target phrases as a whole unit. Word embeddings in BRAE are pre-trained with toolkit monolingual data that contains 0 . 83 B words for Chinese and 0.11B words for English.

Hyper-parameters in all neural models are op-timized by random search (Bergstra and Bengio, 2012) based on related joint errors. We ran-domly extracted 250 , 000 bilingual phrases from the above-mentioned training data as training set, 5 , 000 as development set and another 5 , 000 as test set. We drew  X , X , X  uniformly from 0 . 10 to 0 . 50 , and  X  L , X  rec , X  con and  X  lcrec exponentially Table 1 for both BRAE and BCorrRAE. 5.3 Dimensionality of Embeddings To investigate the impact of embedding dimen-sionality on our BCorrRAE, we tried four differ-ent dimensions from 25 to 100 with an increment of 25 each time. The results are displayed in Ta-ble 2. We can observe that the performance of our model is not consistently improved with the incre-ment of dimensionality. This may be because a larger dimension brings in much more parameters, and therefore makes parameter tuning more diffi-cult. In practice, setting the dimension d to 50, we can get satisfactory results without much compu-tation effort, which has also been found by Zhang et al. (2014). 5.4 Structural Similarity vs. Semantic Table 2 also shows that the performance of BCorrRAE ST , the system with the structural sim-ilarity feature in Eq. (20), is always superior to that of BCorrRAE SM with the semantic similar-ity feature in Eq. (19). BCorrRAE ST is bet-ter than BCorrRAE SM by 0 . 483 BLEU points on average. In most cases, differences between BCorrRAE ST and BCorrRAE SM with the same dimensionality are statistically significant. This suggests that digging into structures of bilingual phrases (BCorrRAE ST ) can obtain further im-provements over only modeling bilingual phrases as whole units (BCorrRAE SM ). 5.5 Overall Performance Table 3 summarizes the comparison results of dif-ferent models on the test sets. The BCorrRAE SM outperforms the baseline and BRAE by 1.06 and 0.25 BLEU points on average respectively, while BCorrRAE ST gains 1.55 and 0.74 BLEU points on average over the baseline and BRAE. The im-provements of BCorrRAE ST over the baseline, BRAE and BCorrRAE SM are statistically signif-icant at different levels. This demonstrates the advantage of our BCorrRAE over BRAE in that BCorrRAE is able to explore sub-structures of bilingual phrases. 5.6 Analysis We compute a ratio of aligned nodes (Section 3.1) over all nodes to estimate how well tree struc-tures of bilingual phrases generated by BRAE and BCorrRAE are consistent with word alignments. We consider two factors when computing the ra-tio: the length of the source side of a bilingual phrase l s and the length of a span covered by an aligned node l a . The result is illustrated in Table forms BRAE model by 7.22% on average in terms of the aligned node ratio. This strongly demon-strates that the proposed BCorrRAE is able to gen-erate tree structures that are more consistent with word alignments than those generated by BRAE.
We further show example source phrases in Ta-ble 5 with their most semantically similar trans-lations learned by BRAE and BCorrRAE in the training corpus. Both models can select correct translations for content words. However, they are different in dealing with function words. Com-pared to our model, the BRAE model prefers longer target phrases surrounded with function words. Take the source phrase  X   X   X   X   X   X  as an example, the BRAE model learns both  X  a serious challenge to  X  and  X  a serious challenge from  X  as its semantically similar target phrases. Although the content words  X   X   X   X  and  X   X   X   X  are trans-lated correctly into  X  serious  X  and  X  challenge  X , the function words  X  to  X  and  X  from  X  express exactly the opposite meanings. In contrast, our model, es-pecially the BCorrRAE ST model, tends to choose shorter translations that are consistent with word alignments. A variety of efforts have been devoted to learn-ing vector representations for words/phrases with deep neural networks. According to the differ-ence of learning contexts, previous work mainly include the following two strands. (1) Monolingual Word/Phrase Embeddings .
 The straightforward approach to represent word/phrases is to learn their hidden represen-tations with traditional feature vectors, which requires manual and task-dependent feature engineering (Cui et al., 2014; Wu et al., 2014; Chen and Manning, 2014). To avoid exploiting manually input features, Bengio et al. (2003) convert words to dense, real-valued vectors by learning probability distributions of n-grams. Mikolov et al. (2013) generate word vectors by predicting their limited context words. Instead of exploiting outside context information, recursive auto-encoder is usually adopted to learn the com-position of internal words (Socher et al., 2010; Socher et al., 2011b; Socher et al., 2013b; Socher et al., 2013a). Recently, convolution architecture has drawn more and more attention due to its ability to explicitly capture short and long-range relations (Collobert et al., 2011; Kalchbrenner and Blunsom, 2013; Kalchbrenner et al., 2014; Kim, 2014). (2) Bilingual Word/Phrase Embeddings . In the field of machine translation and cross-lingual in-formation processing, bilingual embedding learn-ing has become an increasingly important study. The bilingual embedding research origins in the word embedding learning, upon which Zou et al. (2013) utilize word alignments to constrain translational equivalence. Ko  X  cisk  X  y et al. (2014) propose a probability model to capture more se-mantic information by marginalizing over word alignments. More specifically to SMT, its main components have been exploited to learn better bilingual phrase embeddings in different aspects: language models (Wang et al., 2014; Garmash and Monz, 2014), reordering models (Li et al., 2013) and translation models (Tran et al., 2014; Zhang et al., 2014). Instead of exploiting a single model, Liu et al. (2014) combine the recursive and recur-rent neural network to incorporate the language and translation model.

Different from the methods mentioned above, our model considers both the cross-language con-sistency of phrase structures and internal corre-spondence relations inside bilingual phrases. The most related works include Zhang et al. (2014) and Socher et al. (2011a). Compared with these works, our model exploits different levels of cor-respondence relations inside bilingual phrases in-stead of only the top level of entire phrases, and reconstructs tree structures of sub-phrases in one language according to aligned nodes in the other language, which, to the best of our knowledge, has never been investigated before. In this paper, we have presented the BCorrRAE to learn phrase embeddings and tree structures of bilingual phrases for SMT. Punishing structural-alignment-inconsistent sub-structures and mini-mizing the gap between original and reconstructed structures, our approach is able to not only gen-erate alignment-consistent phrase structures, but also capture different levels of semantic rela-tions within bilingual phrases. Experiment results demonstrate the effectiveness of our model.

In the future, we would like to derive more features from BCorrRAE, e.g., consis-tency/inconsistency scores of bilingual phrases, to further enhance SMT. Additionally, we also want to apply our model to other bilingual tasks, e.g., learning bilingual terminology or paraphrases. The authors were supported by National Nat-ural Science Foundation of China (Grant Nos 61303082 and 61403269), Natural Science Foundation of Jiangsu Province (Grant No. BK20140355), National 863 program of China (No. 2015AA011808), the Special and Major Subject Project of the Industrial Science and Technology in Fujian Province 2013 (Grant No. 2013HZ0004-1), and 2014 Key Project of Anhui Science and Technology Bureau (Grant No. 1301021018). We also thank the anonymous reviewers for their insightful comments.
