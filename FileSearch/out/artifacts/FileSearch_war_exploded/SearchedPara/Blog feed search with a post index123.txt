 Abstract User generated content forms an important domain for mining knowledge. in passing. The large number of blogs makes the blogosphere a challenging domain, both in terms of effectiveness and of storage and retrieval efficiency. We examine the effectiveness of an approach to blog feed search that is based on individual posts as indexing units (instead of full blogs). Working in the setting of a probabilistic language modeling approach to information retrieval, we model the blog feed search task by aggregating over a blogger X  X  posts to collect evidence of relevance to the topic and persistence of interest in the topic. This approach achieves state-of-the-art performance in terms of effectiveness. We then introduce a two-stage model where a pre-selection of candidate blogs is followed by a ranking step. The model integrates aggressive pruning techniques as well as very lean representations of the contents of blog posts, resulting in substantial gains in efficiency while maintaining effectiveness at a very competitive level.
 Keywords Blog feed search Post-level indexing Efficiency Generative language models Associations 1 Introduction We increasingly live our lives online: we keep in touch with friends on Facebook, 1 expand our network using LinkedIn, 2 quickly post messages on Twitter, 3 comment on news events on online news paper sites, help others on forums, mailing lists, or community question-answer sites, and report on experiences or give our opinions in blogs. All of these activities involve the creation of content by the end users of these platforms, as opposed to editors or webmasters. This content, i.e., user generated content, is particularly valuable as it offers an insight in what people do, think, need to know, or care about. Organizations look for ways of mining the information that is available in these user generated sources, and to do content.

In this paper we focus on blogs . A blog is the unedited, unregulated voice of an individual (Mishne 2007 ), as published on a web page containing time-stamped entries ( blog posts ) in reverse chronological order (i.e., last entry displayed first). In most cases, bloggers (the authors of blog entries) offer readers the possibility to reply to entries in the blog ( commenting ), bloggers link to other blogs ( blogroll ), thereby creating a network of blogs, and many blogs are updated regularly. Blogs offer a unique insight in people X  X  minds: whether the blog is about their personal life (which products do people use? what are their needs or wishes?), personal interests (what are their opinions on X?), or a more professional view on topics (can they explain X to me?), getting access to this information is valuable for many others.

Accessing the blogosphere (the collection of all blogs) can be done in various ways, but usually revolves around one of two main tasks: (1) identifying relevant blog posts ( blog single blog posts ( X  X  X tterances X  X ) that talk about a given topic; having constructed this list, analysis, opinion extraction, mood detection). In (2) the goal is not to return single posts, but to identify blogs that show a recurring interest in a given topic. Blogs that only mention the topic sporadically or in passing are considered non-relevant, but a blog (or: the person behind the blog) that talks about this topic regularly would be relevant. Again, one can simply return these blogs to an end user as is, but could also decide to use the results in further processing (e.g., recommending blogs to be followed, identifying networks of second task, identifying relevant blogs given a topic, also known as blog feed search.
The total number of blogs in the world is not known exactly. Technorati, 4 the largest blog directory, was tracking 112 million blogs in 2008, and counted 175,000 new blogs every day . These bloggers created about 1.6 million entries per day. Most of these blogs are written in English, but the largest part of the internet users is not English-speaking. The China Internet Network Information Center (CNNIC) 5 released a news report in December 2007 stating that about 73 million blogs are being maintained in China, which means that, by now, the number of Chinese blogs is probably close to the number of blogs tracked by Technorati. Although we lack exact numbers on the size of the blogosphere, we can be sure that its size is significant X  X n terms of blogs, bloggers, and blog posts.

Given the size of the blogosphere and the growing interest in the information available in it, we need effective and efficient ways of accessing it. An important first step concerns indexing. When looking for relevant blog posts, it makes sense to do so on top of an index consisting of individual blog posts: the unit of retrieval is the same as the indexing unit, blog posts. When looking for blogs, however, two options present themselves. We could, would probably entail concatenating a blog X  X  posts into a single pseudo-document and indexing these pseudo-documents. In this paper, we want to pursue an alternative strategy, coincide for blog feed search. Instead, we want to use a post-based index (i.e., the indexing unit is a blog post) to support a blog feed search engine (i.e., the unit of retrieval is a blog). This approach has a number of advantages. First, it allows us to support a blog post search engine and a blog feed search engine with a single index. Second, result presentation is Third, a post index allows for simple incremental indexing and does not require frequent re-computations of pseudo-documents that are meant to represent an entire blog.
We introduce two models, the Blogger model and the Posting model, that are able to rank blogs for a given query based on a post index. Both models use associations between models achieve highly competitive retrieval performance (on community-based bench-marks), although the Blogger model consistently outperforms the Posting model in terms of retrieval effectiveness while the Posting model needs to compute substantially fewer associations between posts and blogs and, hence, is more efficient. To improve the effi-ciency of the Blogger model we integrate our Blogger and Posting models in a single two-stage model which we subject to additional pruning techniques while we maintain (and even increase) effectiveness at a competitive level. 1.1 Research questions and contributions Our main research question is whether we can effectively and efficiently use a blog post index for the task of blog feed search. The Blogger and Posting models that we introduce are tested on effectiveness using standard IR methodologies. To examine their efficiency, either of those two models.

A second set of research questions is centered around a two-stage model that we introduce to combine the strengths of the Blogger and Posting models. Specifically, we introduce a number of pruning techniques aimed at improving efficiency while maintaining (or even improving) effectiveness. We study the impact of these techniques on retrieval effectiveness as well as the impact of integrating alternative blog post representations (title-only vs. full content) into our two-stage model.

Our main contribution is twofold. First, we show that blog feed search can be supported using a post-based index. Second, we propose an effective two-stage blog feed search model together with several techniques aimed at improving its efficiency.

The remainder of this paper is organized as follows. In Sect. 2 we discuss related work on blog feed search and language modeling. The retrieval models that we use in the paper results are established in Sect. 5 . Results on our two-stage model and its refinements are presented in Sect. 6 . A discussion (Sect. 7 ) and conclusion (Sect. 8 ) complete the paper. 2 Related work In this paper related work comes in three flavors. We introduce previous research in information access in the blogosphere, we take a look at what has been done more spe-cifically on blog feed search, and we briefly introduce language modeling for information retrieval, as this is the approach underlying our models. 2.1 Information access in the blogosphere With the growth of the blogosphere comes the need to provide effective access to the knowledge and experience contained in the many tens of millions of blogs out there. Information needs in the blogosphere come in many flavors, addressing many aspects of blogs and thereby extending the notion of relevance, from  X  X  X eing about the same topic X  X  to, for instance,  X  X  X xpressesing opinions about the topic X  X  or  X  X  X haring an experience around the topic. X  X  In (Mishne and de Rijke 2006 ), both ad hoc and filtering queries are considered in intents than typical web searches, suggesting that the primary targets of blog searchers are concept and searching blogs that show evidence of a long-term interest in a concept. In 2006, a blog track (Ounis et al. 2007 ) was launched by TREC, the Text REtrieval Conference, aimed at evaluating information access tasks in the context of the blogosphere. The first edition of the track focused mainly on finding relevant blog posts , i.e., on blog post retrieval, with a special interest in their opinionatedness. The 2007 and 2008 editions scenario where the user aims to find a blog to follow or read in their RSS reader. This blog should be principally devoted to a given topic over a significant part of the timespan of the aggregates of blog posts by the same blogger) instead of permalink documents. 2.2 Blog feed search Some commercial blog search facilities provide an integrated blog search tool to allow users to easily find new blogs of interest. In (Fujimura et al. 2006 ), a multi-faceted blog options was to use a blogger filter: the search results (blog posts) are clustered by blog and the user is presented with a list of blogs that contain one or more relevant posts. Ranking of the blogs is done based on the EigenRumor algorithm (Fujimura et al. 2005 ); in contrast to the methods that we consider below, this algorithm is query-independent.

An important theme to emerge from the work on systems participating in the TREC 2007 blog feed search tasks is the indexing unit used (Macdonald et al. 2008 ). While the unit of retrieval is fixed for blog feed search X  X ystems have to return blogs in response to a query X  X t is up to the individual systems to decide whether to produce a ranking based on a blog index or on a post index. The former views blogs as a single document, disregarding the fact that a blog is constructed from multiple posts. The latter takes samples of posts from blogs and combines the relevance scores of these posts into a single blog score. The most effective approaches to feed distillation at TREC 2007 were based on using the (aggregated) text of entire blogs as indexing units. E.g., Elsas et al. ( 2008a , b ) experiment with a  X  X  X arge document model X  X  in which entire blogs are the indexing units and a X  X  X mall document model X  X  in which evidence of relevance of a blog is harvested from individual blog posts. They also experiment with combining the two models, obtaining best perfor-mance in terms of MAP (Arguello et al. 2008 ).

Participants in TREC 2007 and 2008 (Macdonald et al. 2009 ) explored various tech-niques for improving effectiveness on the blog feed search task: Query expansion using Wikipedia (Elsas et al. 2008 ), topic maps (Lee et al. 2008 ), and a particularly interesting approach X  X ne that tries to capture the recurrence patterns of a blog X  X sing the notion of time and relevance (Seki et al. 2007 ). Although some of the techniques used proved to be useful in both years (e.g., query expansion), most approaches did not lead to significant improvements over a baseline, or even led to a decrease in performance.

In the setting of blog feed search, authors have considered various ways of improving effectiveness: (1) index pruning techniques, (2) modeling topical noise in blogs to measure recurring interest, (3) using blog characteristics such as the number of comments, post length, or the posting time, and (4) mixing different document representations. We briefly sample from publications on each of these four themes.

Starting with index pruning, a pre-processing step in (Seo and Croft 2008b ) consists of removing all blogs that consist of only one post, since retrieving these blogs would come down to retrieving posts and would ignore the requirement of retrieving blogs with a recurring interest. We use various types of index pruning in Sects. 5 and 6 , including removing non-English blogs and blogs that consist of a single post.
 central interest of a blogger by exploiting information about topical patterns in blogs. The voting-model-based approach of Macdonald and Ounis ( 2008 ) is competitive with the TREC 2007 blog feed search results reported in (Macdonald et al. 2008 ) and formulates three possible topical patterns along with models that encode each into the blog retrieval model. In (He et al. 2009 ) the need to target individual topical patterns and to tune multiple topical-pattern-based scores is eliminated; their proposed use of a coherence score to encode the topical structure of blogs allows them to simultaneously capture the topical focus at the blog level and the tightness of the relatedness of sub-topics within the blog. A different approach is proposed in (Seo and Croft 2008a ), where the authors use diversity penalties: blogs with a diverse set of posts receive a penalty. This penalty is integrated in various resource selection models, where a blog is seen as a resource (collection of posts), and given a query, the goal is to determine the best resource. Below, we capture the central belongs.

The usage of blog-specific features like comments and recency has been shown to be beneficial in blog post retrieval (Mishne 2007 , Weerkamp and de Rijke 2008 ). In blog feed search these features can be applied in the post retrieval stage of the Posting model, but they can also be used to estimate the importance of a post for its parent blog (Weerkamp et al. 2008 ); we use some of these features in Sects. 5 and 6 below.

Finally, blog posts can be represented in different ways. On several occasions people have experimented with using syndicated content (i.e., RSS or ATOM feeds) instead of permalinks (HTML content) (Elsas et al. 2008a , b , Mishne 2007 ); results of which rep-resentation works better are mixed. Other ways of representing documents are, for example, a title-only representation, or an (incoming) anchor text representation; combi-nations of various representations show increased effectiveness in other web retrieval tasks (e.g., ad hoc retrieval (Eiron and McCurley 2003 , Jin et al. 2002 )). We increase the efficiency of our most effective model by considering multiple content representations in Sect. 6 . 2.3 Language modeling for information retrieval At the TREC 2007 and 2008 blog tracks, participants used various retrieval plaforms, with a range of underlying document ranking models (Macdonald et al. 2008 , 2009 ). We base our ranking methods on probabilistic, generative language models. Here, documents are ranked by the probability of the query being observed during randomly sampling words from the document. Since their introduction to the area of information retrieval, language modeling techniques have attracted a lot of attention (Hiemstra 2001 , Miller et al. 1999 , Ponte and Croft 1998 ). They are attractive because of their foundations in statistical theory, the great deal of complementary work on language modeling in speech recognition and natural language processing, and the fact that very simple language modeling retrieval methods have performed quite well empirically.

Work on blog feed search shows great resemblance to expert finding: given a topic, identify people that are experts on the topic. Our approach to the blog feed search task is modeled after two well-known language modeling-based models from the expert finding literature. In particular, our Blogger model corresponds to Model 1 in (Balog et al. 2006 , 2009 ), while our Posting model corresponds to their Model 2. These connections were first detailed in (Balog et al. 2008 , Weerkamp et al. 2008 ) and are examined and compared in great detail in this paper. 3 Probabilistic models for blog feed search In this section we introduce two models for blog feed search, i.e., for the following task: given a topic, identify blogs (that is, feeds) about the topic. The blogs that we are aiming to identify should not just mention the topic in passing but display a recurring central interest in the topic so that readers interested in the topic would add the feed to their feed reader.
To tackle the task of identifying such key blogs given a query, we take a probabilistic approach and formulate the task as follows: what is the probability of a blog (feed) being a key source given the query topic q? That is, we determine P ( blog | q ) and rank blogs describe the underlying information need, a more accurate estimate can be obtained by applying Bayes X  Theorem, and estimating: P ( q ) is constant (for a given query), it can be ignored for the purpose of ranking. Thus, the probability of a blog being a key source given the query q is proportional to the probability of a query given the blog P ( q | blog ), weighted by the a priori belief that a blog is a key source, P ( blog ): Since we focus on a post-based approach to blog distillation, we assume the prior prob-ability of a blog P ( blog ) to be uniform. The distillation task then boils down to estimating P ( q | blog ), the likelihood of a blog generating query q .
 guage models used in Information Retrieval in two different ways. In our first model, the Blogger model (Sect. 3.1 ), we build a textual representation of a blog, based on posts that belong to the blog. From this representation we estimate the probability of the query topic given the blog X  X  model. Our second model, the Posting model (Sect. 3.2 ), first retrieves which these posts originate.

The Blogger model and Posting model originate from the field of expert finding and correspond to Model 1 and Model 2 (Balog et al. 2006 , 2009 ). We opt for translating these models to the new setting of blog feed search, and focus on using blog specific associa-tions, combining the models, and improving efficiency. In the remainder of this paper we use the open source implementation of both the Blogger and Posting model, called EARS: 6 Entity and Association Retrieval System. 3.1 Blogger model The Blogger model estimates the probability of a query given a blog by representing the blog as a multinomial probability distribution over the vocabulary of terms. Therefore, a blog model h blogger ( blog ) is inferred for each blog, such that the probability of a term given the blog model is P ( t | h blogger ( blog )). The model is then used to predict how likely a blog would produce a query q . Each query term is assumed to be sampled identically and independently. Thus, the query likelihood is obtained by taking the product across all terms in the query: where n ( t , q ) denotes the number of times term t is present in query q .

To ensure that there are no zero probabilities due to data sparseness, it is standard to employ smoothing. That is, we first obtain an empirical estimate of the probability of a term given a blog P ( t | blog ), which is then smoothed with the background collection probabilities P ( t ): generated (i.e., published) by any blog.

To approximate P ( t | blog ) we use the blog X  X  posts as a proxy to connect the term t and the blog in the following way: We assume that terms are conditionally independent from the blog (given a post), thus likelihood estimate, i.e., the relative frequency of the term in the post. Our first approach to setting the conditional probability P ( post | blog ) is to allocate the probability mass uniformly across posts, i.e., assuming that all posts of the blog are equally important. In Sect. 6 we explore other ways of estimating this probability.

We set the smoothing parameter as follows: k blog = b /(| blog | ? b ) and (1 -k blog ) = | blog |/(| blog | ? b ), where | blog | is the size of the blog model, i.e.: portional to the information contained in the blog; blogs with fewer posts will rely more on the background probabilities. This method resembles Bayes smoothing with a Dirichlet prior (Mackay and Peto 1994 ). We set b to be the average blog length in the collection; see Table 4 for the actual values used in our experiments. 3.2 Posting model Our second model assumes a different perspective on the process of finding blog feeds. Instead of directly modeling the blog, individual posts are modeled and queried (hence the can be expressed as: Assuming that query terms are sampled independently and identically, the probability of a query given an individual post is: The probability of a term t given the post is estimated by inferring a post model P ( t | h posting ( post )) for each post following a standard language modeling approach: where k post is set proportional to the length of the post, | post |, such that k post = smoothing than long ones. We set the value of b to be equal to the average post length in the collection; again, see Table 4 for the actual numbers used in our experiments. 3.3 A two-stage model We also consider a two-stage model, that integrates the Posting model, which is the more efficient of the two, as we will see, and the Blogger model, which has a better represen-separate stages: Stage 1: Use Eq. 8 to retrieve blog posts that match a given query and construct a Stage 2: Given the list of blogs B , we use Eq. 3 to rank just the blogs that are present in
By limiting the list of blogs B , in stage 1, that need to be ranked in stage 2, this two-stage approach aims at improving efficiency, while it maintains the ability to construct a ranking based on the complete profile of a blogger.

More precisely, let N , M be two natural numbers. Let f be a ranking function on blog posts: given a set of posts it returns a ranking of those posts; f could be recency, length, or it could be a topic dependent function, in which case the query q needs to be specified. We write  X  f N  X  X  blog  X  for the list consisting of the first N posts ranked using f ;if q is a query, we write f q for the post ranking function defined by Eq. 8 . Then, defined as a mixture, just like Eq. 4 : top M posts of the blog: Before examining the impact of the parameters N and M in Eqs. 10 and 12 , and more generally, before comparing the models just introduced in terms of their effectiveness and efficiency on the blog feed search task, we detail the experimental setup used to answer our research questions. 4 Experimental setup We use the test sets made available by the TREC 2007 and 2008 blog tracks for the blog lection, (3) a set of test topics, (4) relevance judgments ( X  X  X round truth X  X ), and (5) evalu-ation metrics. Below, we detail those as well as statistics on our indexes and smoothing parameter b . 4.1 Document collection The experiments presented in this paper use the TREC Blog06 collection (Macdonald and Ounis 2006 ). Table 1 lists the original collection statistics. The collection comes with three document types: (1) feeds, (2) permalinks, and (3) homepages. For our experiments, we only use the permalinks, that is, the HTML version of a blog post. During preprocessing, we removed the HTML code, and kept only the page title, and block level elements longer than 15 words, as detailed in (Hofmann and Weerkamp 2008 ).
 4.2 Topic sets We use two predefined sets of test topics, which have been created during TREC 2007 and TREC 2008. The test topics follow the standard TREC format, consisting of a title (a few keywords), a description (a few sentences on what the topic is), and a narrative (a short story on which documents should be considered relevant and which ones should not). For our experiments, we are only interested in the title of a topic, which is comparable to a query submitted to a search engine by an end user. For each topic, relevance assessments are available: we know which blogs are relevant to the topic and which are not. If a blog has not been assessed for a given topic, the blog is considered to be non-relevant.
Looking at the relevance assessments for the 2007 and 2008 topics, we notice a few blogs. To construct this plot, we made bins of 10 relevant blogs, i.e., the first point is a count of topics that have 10 or less relevant blogs in the assessments.
 We see that the 2008 topics have fewer relevant blogs per topic than the 2007 topics. Besides, looking at Fig. 1 a and the last four lines in Table 2 , we notice that the 2008 topics are concentrated at the beginning (with a small number of relevant blogs per topic), while the 2007 topics have a later peak, and again a peak at the end of the plot ( [ 130 relevant blogs). These differences seem to be an artifact of the topic development guidelines 7 , 8 used topic area should be specific enough that there are not likely to be hundreds or thousands of relevant feeds (so  X  X ars X  is probably too vague a topic). X  X  This, it seems, resulted in fewer relevant blogs per topic.
 We also look at the size of relevant blogs, in terms of the number of posts in a blog. In Fig. 1 b we plot how many of the relevant blogs have a certain size; unlike the number of relevant blogs, we do not observe notable differences between the two topic sets. For 2007 the average relevant blog size is 58 posts, and this is 59 posts for the 2008 topics. 4.3 Inverted indexes We index the collection using the open source software package Lemur 9 (version 4.10), no stemming is applied, but we do remove stopwords. Indexing is not just done for the full (permalink) content, as described above, but we also create an index containing title-only representations of the blog posts. Here, documents are constructed using just the blog post title, creating a very lean index of the collection. Index statistics are listed in Table 3 . 4.4 Smoothing As explained in Sect. 3 , our Blogger and Posting models use smoothing, whose influence is determined using a parameter b . Since smoothing is applied at the post level for both models, we take this parameter to be the average post length (for the Blogger model, see sensitivity of our models to the smoothing parameter b in Sect. 7.3 . 4.5 Evaluation metrics and significance testing To measure effectiveness, we report on three common IR metrics (Manning et al. 2008 ): a measure to capture precision and recall X  X ean average precision (MAP) X  X s well as two precision-oriented measures X  X recision at rank 5 (P@5), and mean reciprocal rank (MRR).
To test for significant differences between runs, we use a two-tailed paired t-test; m and reflect significant changes for a = .01 and 4 and  X  do the same for a = .05. (a) 5 Baseline results Posting models. We also examine the impact of two index pruning techniques. Specifically, we look at language detection on blog posts, excluding non-English blogs, and the removal further experiments in the paper. 5.1 Language detection The blog collection we use is a sample from the web (see Sect. 4.1 ) and contains not only English blogs, but also blogs written in other languages (e.g., Japanese, Chinese, and Spanish). For the task at hand we are only interested in English blogs and we would therefore like to discard all non-English blogs. To this end we apply language detection using TextCat: 10 from 3,215,171 posts we remove 640,815 posts that are labeled as non-English, leaving us with 2,574,356 posts. 5.2 Short blogs The blog feed search task on which we focus requires the retrieval of blogs that have a recurring interest in the topic, so ignoring them is a reasonable option and should prevent short blogs from an index, but merely exclude blogs with fewer than K posts from our computations until they receive more posts. Potentially, this is a considerable efficiency-enhancing measure, since we do not have to care about blogs that have just started or blogs that were just  X  X  X ry-outs. X  X 
In Fig. 2 we examine the distribution of the number of posts per blog in our collection, after removing non-English posts. We see that many blogs contain only a limited number of posts, with the exception for the 10, 20, 30, ... , 100 posts. Why these peaks occur is not clear, but it is probably an artefact of the collection construction (see Sect. 4.1 ). A con-exclude too many blogs, and therefore set K = 1, only dropping these 4,595 blogs from the index. 5.3 Baseline results In Table 5 we list our baseline results on the blog feed search task, using the Blogger and Postings models, on the 2007 and 2008 test topics. We also consider runs that implement the additional index pruning options listed above.
 Posting models (without index pruning) perform similarly; the difference between the two runs is not significant. When we add the index pruning techniques ( X  X  X nglish only X  X  and  X  X  X o short blogs X  X ), we see slight improvements for the Blogger and Posting models. However, the differences are not significant compared to the Blogger model using all posts. The best performance is achieved by the Blogger model with both index pruning techniques implemented (on MAP as well as P@5).

Turning to the 2008 test topics (Table 5 , right half), we see that the Blogger model significantly outperforms the Posting model. Overall best performance (on all metrics) is achieved by the Blogger model with both index pruning options added. 5.4 Analysis When averaged over the 2007 and 2008 topic sets, the Blogger model has just been found to be more effective than the Posting model. But averages may hide a lot of detail. Our next step, therefore, is to take a look at individual topics and compare the effectiveness of the ference in average precision between the two models, and use the scores of the Posting model as baseline. We look at both models using the pruned index (after removal of non-English posts and short blogs). Figure 3 shows this plot, for the 2007 and 2008 topics. For both years, most topics favor the Blogger model (more topics show an increase in AP over the Posting model when using the Blogger model). Table 6 summarizes the number of topics that prefer the Blogger model and the number of topics that prefer the Posting model.

Looking at which topics show very different performance in AP on both models, we find the topics displayed in Table 7 . The results in Table 7 suggest that on longer queries the Blogger model may be more effective than the Posting model. To explore this hypothesis average, the Blogger model outperforms the Posting model when the query consists of at least two words. We also see that on single term queries, the Posting model slightly outperforms the Blogger model on average AP.

In order to quantify to which extent the two models X  X logger and Posting X  X dentify different relevant posts, we count the number of unique retrieved, relevant blogs for each model over the whole set of topics. Table 8 lists the number of relevant blogs retrieved by one model, that are not returned by the other model (in the top 100 results).

The results indicate that the Blogger model is better at retrieving  X  X  X ew X  X  relevant blogs, but that the Posting model is also capable of retrieving unique relevant blogs. This suggests that a combination of the two models may well outperform both models individually. We explore these uniquely retrieved blogs in more detail and look at the size of the blogs (viz. Sect. 4.2 ), and list results in Table 9 .

The blogs retrieved only by the Blogger model are comparable in size to the average size of relevant blogs (58 posts); the average size of blogs retrieved only by the Posting model, however, is much smaller. It seems the Blogger model becomes more useful with growing blog sizes, while the Posting model is stronger for smaller blogs. 5.5 Intermediate conclusions We can achieve good performance on the blog feed search task, using a post index and models based on association finding models originally developed for expert finding. To substantiate this claim we compare the effectiveness of our models to that achieved by TREC participants (Macdonald et al. 2008 , 2009 ). For 2007, both our models would have been ranked second on MAP and around the median for MRR. On the 2008 topics, our models are ranked in the top 5 for both MAP and MRR. Since we are still only looking at baselines of our models, and comparing these to considerably more advanced approaches (that use, e.g., query expansion or link structure), we conclude that our models show good effectiveness on the task of blog feed search.

Comparing the Blogger and Posting model, we see that the Blogger model performs better, with significant differences for the 2008 topics. Finally, combining the two index pruning techniques X  X emoving non-English blogs and blogs consisting of a single post X  helps to improve not just the efficiency of our models but also their effectiveness.
Based on these findings, we continue our experiments in the following sections using an index created from English-only posts and without short blogs. The statistics of this index are given in Table 10 .
 6 A two-stage model for blog feed search Given the size of the blogosphere, efficiency is an important concern when addressing tasks such as blog feed search and blog post retrieval. Having introduced models that can use a single index for both tasks is a first step in achieving efficient, yet effective solutions. In Sect. 5 we took a second step and explored ways of index pruning to improve efficiency, while keeping effectiveness at a competitive level.

In this section we continue looking for ways of enhancing efficiency in our models while determining the impact of these enhancements on retrieval effectiveness. We do so by combining the strengths of the Blogger and Posting models into a two-stage model where the Posting model is used to identify a limited set of potentially valuable blog feeds for a given topic and then the Blogger model is used to construct a final ranking of this selection, as specified in Sect. 3.3 . In each of the two stages we work with cut-offs on the number of posts or blogs considered.

We start by motivating the two-stage model in more detail. We then consider notions of post importance that can be used for cut-offs. Next, we consider the impact of cut-offs on the effectiveness of the single stage Blogger and Posting models before combining them. We conclude the section with a further enhancement of the two-stage model using a very lean representation of the contents of blogs and their posts. 6.1 Motivation We have seen that the Blogger model is more effective at the task of blog feed search than computed by considering a large numbers of associations P ( post | blog ) (cf. Eq. 5 ). What if impacting the Blogger model X  X  effectiveness? Our two-stage model uses the Posting model for pre-selecting blogs that are then fed to the Blogger model to produce the final ranking. ranking step by the Blogger model, we restrict the number of posts to consider per blog (see Eq. 12 ).

To get an idea of the efficiency enhancement that may be obtained by using this two-stage approach, we look at the number of associations that need to be considered. Using the settings employed in our experiments below, after the Posting model stage, we are left with an average of 1,923 blogs per topic. In the second stage, the Blogger model uses at most 50 posts per blog. In our experiments below, this leads to a maximum of 96,150 associations that have to be considered for each test topic. Table 11 shows the numbers of associations that need to be looked at by the Blogger model, when it takes all posts into account, only 50 per blog, only 10 per blog, or when it functions as the second stage in the two-stage model with the settings just given. Clearly, then, substantial efficiency improvements can be gained by the two-stage model over the original Blogger model. 6.2 Estimating post importance Now that we have seen that cut-offs can substantially reduce the number of associations that need to be considered when computing the models, we investigate a number of ways of ranking posts (from a single blog) w.r.t. their importance to their parent blog; cut-offs as implemented in using the restricted summation in Eq. 12 will be based on these importance rankings. Estimating post importance in blogs should ideally make use of blog specific features. In the following paragraphs we introduce three blog-specific features. 6.2.1 Post length Blog posts are characterized by their relatively small size in terms of number of words. Short blurbs on what a blogger did today, or what she is currently doing make up for many information than just these blurbs. We translate this into a preference for longer blog posts and assign higher association strengths to longer posts, viz. Eq. 13 : where | post | is the length of the post in words. 6.2.2 Centrality central to a blog. That is, we want to emphasize posts that differ least from the blog as a whole, and thereby represent the  X  X  X ore X  X  of a blog. We estimate the centrality using the KL-divergence between each post and the blog as a whole (Eq. 14 ).
 Since a lower KL-divergence indicates a more central blog post, we take the inverse of the KL divergence as the centrality score for a post, and normalize over all posts for a given blog to arrive at the association strength of a post: 6.2.3 Comments Explicitly marked up social interactions are very characteristic for the blogosphere: bloggers allow readers to comment on what they have written and sometimes get involved more likely to be of interest to readers, since many readers before them took the effort of leaving behind a comment. We turn the number of comments received by a post into a reflection of its importance; see Eq. 16 : where | comm ( post )| is the number of comments received by post . To make sure the log is defined, we add one comment before taking the log; we add one comment again after this, to prevent zero probabilities. To estimate the number of comments per post, we build on the observation that comments on blog posts follow a similar pattern across different posts: All comments consist of an author, actual comment content, and a timestamp. We use a part of this pattern, the timestamps, and count the number of occurrences of these in a blog post. Manual assessment of several samples revealed that this is a good indicator of the actual number of comments.

Other social aspects of the blogosphere, the blogroll and permalinks, are not considered here, but could also be of interest: blogs that are mentioned a lot in blogrolls could be of more interest, while a larger number of permalinks to a post could also reflect post importance. 6.3 Pruning the single stage models With multiple notions of post importance in place, we examine the impact on retrieval effectiveness of pruning the computations to the top N posts ordered by importance (according to one of the notions of importance). In this section we do not aim at obtaining the highest scores, but focus on the influence of pruning on retrieval performance for both models.
Both baseline models X  X logger and Posting X  X ffer a natural way of improving effi-ciency: the Blogger model allows one to limit the number of posts to be taken into account for estimating the model; that is, instead of Eq. 5 , we compute where  X  f N  X  X  blog  X  is a restricted set of posts. In the Posting model we can similarly limit ourselves to a small number of posts when aggregating scores, using instead of Eq. 7 . Below, we explore the impact of these efficiency improvements on the retrieval effectiveness; we take the top N posts, ranked using the importance factors provided above. 6.3.1 Blogger model Here, we can vary the number of posts to include when constructing the model of a blog. Besides looking at the obvious recency ordering of posts before pruning (newest to oldest post), we also look at the blog importance features considered above: comments, centrality, and post length. We order the list of posts for each blog based on each of these features and prune the list to at most N posts. Figure 5 shows the performance in terms of MAP for the various ways of ordering and for multiple values of N .

The plots show that we can improve effectiveness on MAP by limiting the number of posts we take into account when constructing the Blogger model, an insight that we will  X  X  X riginal X  X  ordering (by recency) is outperformed by other ways of ordering posts, espe-cially ordering by post length. Table 12 displays the number of associations (i.e., P ( post | blog ) values) that need to be considered for different values of N and shows that by pruning the post list, we substantially reduce this number.
 Table 13 shows the effectiveness of limiting the number of posts used to construct the Blogger model to 50, for various ways of ordering the posts. We observe that all orderings improve effectiveness for at least some of the metrics, but length shows best overall improvements. 6.3.2 Posting model Next we explore the impact of pruning on the effectiveness of the Posting model. In Fig. 6 we plot the number of posts that are taken into account when aggregating post scores into blog scores against the various metrics for both topic sets. From the plots we observe that we do not need to take all posts into account when scoring blogs. Rather, we can do with only a relative small number of posts X  X gain, an insight that we will use in setting up the two-stage model below.
 Table 14 lists the effectiveness of pruning the post list for the Posting model. Even though the best performance is achieved using all posts, scores after pruning the list to 5,000 posts are promising. Given the efficiency improvement we achieve by going back from over 2.5M posts to only 5,000, we feel that this drop in effectiveness is defendable. As an aside, we explored using the three blog characteristics (comments, centrality, and post length) as estimates of the association strength in the Posting model, and its influence on pruning. Results, however, did not show an improvement over a uniform probability.

The values of 50 (for the Blogger model) and 5,000 (for the posting model) were obtained by using 1 year as the training set and the other as the test set and averaging the optimal outcomes. 6.4 Evaluating the two-stage model Table 15 lists the results of four settings, three of which we have already discussed: (1) the Blogger model (all posts), (2) the Blogger model with 50 posts (length ordered), (3) the Posting model with 5,000 posts, and (4) the two-stage model using items (2), and (3) as components (that is, with N = 5,000 and M = 50 in Eqs. 10 and 12 , respectively). The results show that our two-stage model not only improves efficiency over the Blogger model, but it also leads to an increase in effectiveness. For the both topic sets we achieve the best performance in terms of all metrics using the two-stage model. 6.5 A further reduction In Sect. 4.3 we introduced two document representations of the blog posts in our collec-tion: A full content representation, full , and a title-only representation, title . The title-only representation is much smaller in terms of disk space and average document length, and is therefore more efficient to search in than the full content representation. In this section we explore the effects of using various (combinations of) document representations in our two-stage model.

We compare four combinations of the two representations: (1) full content for both stages, (2) title-only for the Posting model (stage 1), full content for the Blogger model (stage 2), (3) full content for the Posting model (stage 1), title-only for the Blogger model (stage 2), and (4) title-only in both stages. The results of these combinations are displayed in Table 16 . For the 2007 topics the run using a title-only representation in stage 1, and the full content in stage 2 performs best on MAP, P@5, and MRR; the 2008 topics show a slightly mixed result, with full content representations in both stages performing best on MAP and P@5. What do these results mean? Using a lean title-only document represen-however, we need a full content representation to construct blog models and use these to rank the blogs. 6.6 Per-topic analysis of the two-stage model To better understand the performance of the two-stage model, we compare the runs using different document representations to a baseline, the Blogger model. We plot the baseline as the  X  X  X ero X  X  line, and plot for each topic the difference in average precision for two ways of combining the models, full ? full and title ? full (see Table 16 for the average results). The plots are given in Fig. 7 .
We can see that for the full ? full document representation, improvements are modest, with slightly more topics improving over the baseline than not. The results for the title ? full run are more outspoken: we see a lot of 2007 topics with a steady improvement over the baseline, whereas for the 2008 topics there appears to be a tendency towards a decrease in performance compared to the Blogger model. We provide a different per-decrease in performance over the Blogger model baseline; see Table 17 . We see that the combined title ? full model increases performance in terms of AP for most 2007 topics, while hurting only a few of them. In terms of reciprocal rank, the title ? full run has equal performance to the Blogger baseline for most topics, but also achieves an increase for 15 topics. As to 2008, more topics are hurt than helped according to AP, while the balance is positive for P@5 and RR.

Next, we take a closer look at which topics improve most on any of the metrics with respect to the baseline, when we use the two-stage model with the title-only representation in the first stage. Table 18 shows these topics. It is interesting to examine the number of relevant retrieved blogs per topic for the Blogger model and for the two-stage model. From the top improving topics, displayed in Table 18 , only topics 968 and 988 have more relevant results retrieved by the two-stage model. The other topics get their improvements from an improved ranking. Topic 993 ( buffy the vampire slayer ) loses 11 relevant blogs in metrics. Over all topics, the Blogger model finds 179 more relevant blogs than the two-blogs higher. This is reflected in Fig. 8 , where we see that (especially for 2008) the Blogger model retrieves more relevant blogs for most topics than the two-stage model.

The differences in the number of retrieved relevant blogs are also reflected in the number of unique relevant blogs for the Blogger model and the two-stage model. Table 19 other model. Interestingly, the unique blogs retrieved by the two-stage model are much larger (in terms of number of posts) than the unique results of the Blogger model.
Finally, we look at the influence of the two-stage model on queries of different length, as we did in Fig. 4 . In this case, we compare results between the baseline Blogger model, and the two-stage model, and group the difference in AP by query length. The results in Fig. 9 show that the two-stage model outperforms the Blogger model on one and two term queries, but shows a (very) slight decrease for longer queries. 6.7 Intermediate conclusions The aim in this section was to examine our two-stage model, whose motivation lies in combining the Blogger model X  X  effectiveness with the Posting model X  X  potential for effi-ciency. We improved the efficiency of our models by limiting the number of posts we take into account when ranking blogs. Here, we saw that pruning post lists in the Blogger and Posting models improves efficiency, while increasing effectiveness for the Blogger model, and showing only a slight drop in effectiveness for the Posting model.

Results on our two-stage model showed that effectiveness increases when using a two-stage approach while the number of associations that need to be considered drops to just 4% of the original number of associations.

The use of a lean title-only document representation of a blog post leads to a signifi-cant drop in average post length and thus to an improvement in efficiency. Results show that using a title-only representation in stage 1 of our two-stage model (i.e., for the Posting model) is sufficient for collecting the blogs for which we need to construct a blog model in stage 2 (i.e., run the Blogger model). Both efficiency and effectiveness show improvements using the two document representations in different stages of the two-stage model.

Our detailed analysis shows that by using the two-stage model we can correct for the decrease in performance of the Blogger model in comparison with the Posting model on short queries (Fig. 4 ); the two-stage model improves over the Blogger model for short queries, and only loses marginally on longer queries, suggesting that the two-stage model  X  X  X akes the best of both worlds. X  X  7 Discussion We reflect on the issue of efficiency vs. effectiveness of the models that we have examined and briefly touch on very high early precision functionality. 7.1 Efficiency vs. effectiveness In this section we take a closer look at efficiency in comparison to effectiveness on the blog feed search task. Measures for effectiveness were introduced in Sect. 4 . For measuring efficiency of our models, we look at the number of blog posts a model needs to take into account when constructing the final ranking of blogs for a given topic. In Table 20 we report on efficiency and effectiveness of our models.

From the results we see that pruning for the Posting model does not influence the efficiency in terms of the number of posts that are scored, since we apply pruning only after scoring posts. The efficiency increase here is obtained when aggregating scores over posts: before pruning we aggregate over all 90,037 posts, after pruning we aggregate over 5,000 posts. Pruning the Blogger model shows a definite increase in efficiency, scoring 38% fewer posts after pruning. The efficiency-enhancing effects of pruning on both models directly influences efficiency of the two-stage model.
Looking at the two-stage model, we observe that the number of posts scored is 73% lower than for the Blogger model. This increase in efficiency is by no means accompanied by a decrease in effectiveness: the two-stage model maintains the Blogger model X  X  effectiveness, and even improves it. 7.2 Very high early precision The well-known  X  X  X  X  X  feeling lucky ...  X  X  search variant boils down to returning a relevant result at the top of the ranking. Our runs in Sect. 6 show (very) high early precision scores, as witnessed by the mean reciprocal rank scores. How often do they actually return a relevant result at rank 1, and if the first relevant result does not occur at rank 1, where does it occur? We look at the position of the first relevant result per topic for the 2007 and 2008 topic sets; the results are listed in Table 21 . For most topics (80% for 2007, 67% for 2008), we do find a relevant result at rank 1. Overall, for only a small number of topics (10), we are not able to return a first relevant result in the top 4.

Topics that prove to be particularly hard are topic 969 ( planet ), topic 991 ( U.S. Election 2008 ), topic 1068 ( theater ), topic 1077 ( road cycling ), and topic 1092 ( mac os leopard ). We identify three main reasons why these topics fail to produce a relevant result in the top 4, and propose possible solutions that can be used on top of our models. In some cases the keyword descriptions of the topic are simply not specific enough for our models to be able U.S. Elections 2008 (which boils down to  X  X  X lections X  X  after query preprocessing). A possible solution to this problem is to use authoritative external sources for query expansion (Weerkamp et al. 2009 ) (adding related terms to the original query, to create a better representation of the user information need).

A second source of errors appears to be a slight mismatch between the query and the narrative that comes with it. The narrative sometimes imposes a very specific reading of the query that is not apparent from the (keyword) query itself. This is the case for road cycling , where many returned results talk about road cycling, but are non-relevant according to the narrative: female road cycling, personal cycling diaries, etc. One solution here would be to add terms from the description that comes with the topic to specify the topic better.

A final source of error are assessment inconsistencies. For some topics (e.g., mac os leopard ) assessments are inconsistent: certain blogs that discuss mainly Mac OS-related topics are considered relevant (without a specific focus on the  X  X  X eopard X  X  version of the operating system), while other blogs that do talk about the Mac OS are judged non-human judgments. 7.3 Smoothing parameter In Sect. 4.4 we briefly discussed the setting of smoothing parameter b for both models. It is well known that this parameter can have a significant impact on the effectiveness of language modeling-based retrieval methods (Zhai and Lafferty 2004 ). To give an impression of this impact we run a baseline experiment for our two models (comparable to the  X  X  X ll X  X  runs in Sect. 5.3 ). We compare the automatic setting of b (as detailed in Table 4 ) to a range of different b values (1, 10, 100, 1,000, 2,000, and 5,000) and list the results in Table 22 .

We observe that in some cases the Blogger model favors b values slightly smaller than ours. As to the Posting model, we find that our automatic setting delivers the highest scores on the 2007 topic set for all retrieval metrics. On the 2008 set, a mixed picture emerges: best MAP and P@5 scores are achieved with slightly larger b values, while MRR tops when b = 1 is used. In sum, we conclude that our method of estimating the value of b based on average representation length delivers good performance across the board. 8 Conclusions In the paper we addressed the problem of supporting blog feed search and blog post retrieval from a single post-based index. In particular, we examined the balance between effectiveness and efficiency when using a post-based index for blog feed search. A Blogger and Posting model were adapted from the area of expert finding and complemented with a third, two-stage model that integrates the two.

A large part of the paper was devoted to pruning and representation techniques aimed at improving the efficiency of our models, especially that of the two-stage model, while maintaining (or even improving) effectiveness. Evaluations of the effectiveness of our models were performed using community-based benchmarking and complemented with topic-level analyses, as well as an analysis of the efficiency of our models as measured in terms of the number of core operations to be executed.

Our two-stage blog feed search model, complemented with aggressive pruning tech-niques and lean document representations, was found to be very competitive both in terms of standard retrieval metrics and in terms of the number of core operations required.
As to future work, we are interested in complementing our two-stage model with query modeling techniques as in (Elsas et al. 2008 , Weerkamp et al. 2009 ), in going beyond the default implementations of the models to improve efficiency, in exploiting the ability of the two-stage model in ranking a relevant blog at position one (e.g., in extracting  X  X  X elevant X  X  characteristics), and in using different blog-specific features for ordering blog posts prior to pruning.
 References
