 Chang Wang chwang@cs.umass.edu Sridhar Mahadevan mahadeva@cs.umass.edu Manifold alignment is very useful in a variety of appli-cations since it provides knowledge transfer between two seemingly disparate data sets. Sample applica-tions include automatic machine translation, represen-tation and control transfer between different Markov decision processes (MDPs), image comparison, and bioinformatics. More precisely, suppose we have two data sets S 1 = { x 1 ,  X  X  X  , x m } and S 2 = { y 1 ,  X  X  X  , y which we want to find a correspondence. Working with the data in its original form can be very difficult as the data might be in high dimensional spaces and the two sets might be represented by different features. For ex-ample, S 1 could be a collection of English documents, whereas S 2 is a collection of Arabic documents. Thus, it may be difficult to directly compare documents from the two collections.
 Even though the processing of high-dimensional data sets is challenging, for many cases, the data source may only have a limited number of degrees of freedom, im-plying the data set has a low intrinsic dimensionality. Similar to current work in the field, we assume kernels for computing the similarity between data points in the original space are already given. In the first step, we map the data sets to low dimensional spaces reflect-ing their intrinsic geometries using a standard (nonlin-ear or linear) dimensionality reduction approach. For example, using a graph-based nonlinear dimensional-ity reduction method provides a discretized approxi-mation to the manifolds, so the new representations characterize the relationships between points but not the original features. By doing this, we can compare the embeddings of the two sets instead of their original representations. Generally speaking, if two data sets S 1 and S 2 have similar intrinsic geometry structures, they have similar embeddings. In our second step, we apply Procrustes analysis to align the two low dimen-sional embeddings of the data sets based on a number of landmark points. Procrustes analysis, which has been used for statistical shape analysis and image reg-istration of 2D/3D data (Luo et al., 1999), removes the translational, rotational and scaling components from one set so that the optimal alignment between the two sets can be achieved.
 There is a growing body of work on manifold align-ment. Ham et al. (Ham et al., 2005) align the mani-folds leveraging a set of correspondences. In their ap-proach, they map the points of the two data sets to the same space by solving a constrained embedding prob-lem, where the embeddings of the corresponding points from different sets are constrained to be identical. The work of Lafon et al. (Lafon et al., 2006) is based on a similar framework as ours. They use Diffusion Maps to embed the nodes of the graphs corresponding to the aligned sets, and then apply affine matching to align the resulting clouds of points.
 Our approach differs from semi-supervised align-ment (Ham et al., 2005) in that it results in a map-ping that is defined everywhere rather than just on the known data points (provided a suitable dimensionality reduction method like LPP (He et al., 2003) or PCA is used). Recall that semi-supervised alignment is de-fined only on the known data points and it is hard to handle the new test points (Bengio et al., 2004). Our method is also faster, since it requires computing eigendecompositions of much smaller matrices. Com-pared to affine matching, which changes the shape of one given manifold to achieve alignment, our approach keeps the manifold shape untouched. This property preserves the relationship between any two data points in each individual manifold in the process of alignment. The computation times for affine matching and Pro-crustes analysis are similar, both run in O ( N 3 ) (where N is the number of instances).
 Given the fact that dimensionality reduction ap-proaches play a key role in our approach, we provide a theoretical bound for the difference between subspaces spanned by low dimensional embeddings of the two data sets. This bound analytically characterizes when the two data sets can be aligned well. In addition to the theoretical analysis of our algorithm, we also report on several novel applications of our alignment approach.
 The rest of this paper is as follows. In Section 2 we de-scribe the main algorithm. In Section 3 we explain the rationale underlying our approach, and prove a bound on the difference between the subspaces spanned by low dimensional embeddings of the two data sets be-ing aligned. We describe some novel applications and summarize our experimental results in Section 4. Sec-tion 5 provides some concluding remarks. 2.1. The Problem Given two data sets along with additional pairwise correspondences between a subset of the training in-stances, we want to determine a correspondence be-tween the remaining instances in the two data sets. Formally speaking, we have two sets: S 1 = S l 1 { x 1 ,  X  X  X  , x m } , S 2 = S l 2 subsets S l 1 and S l 2 are in pairwise alignment. We want to find a mapping f , which is more precisely defined in Section 3.1, to optimally match the points between 2.2. The Algorithm Assume the kernel K i for computing the similarity be-tween data points in each of the two data sets is al-ready given. The algorithmic procedure is stated be-low. For the sake of concreteness, in the procedure, Laplacian eigenmap (Belkin et al., 2003) is used for dimensionality reduction. 1. Constructing the relationship matrices: 2. Learning low dimensional embeddings of 3. Finding the optimal alignment of X and Y : 4. Apply Q and k to find correspondences be-Depending on the approach that we want to use, there are several variations of Step 1. For example, if we are using PCA, then we use the covariance matrices instead of Laplacian matrices; similarly, if we are using LPP (He et al., 2003), then we construct the weight the projections. Note that when PCA or LPP is used, then the low dimensional embedding will be defined everywhere rather than just on the training points. In this section, we prove two theorems. Theorem 1 shows why the algorithm is valid. Given the fact that dimensionality reduction approaches play a key role in our approach, Theorem 2 provides a theoretical bound for the difference between subspaces spanned by low dimensional embeddings of the two data sets. This bound analytically characterizes when the two data sets can be aligned well. 3.1. Optimal Manifold Alignment Procrustes analysis seeks the isotropic dilation and the rigid translation, reflection and rotation needed to best match one data configuration to another (Cox et al., 2001). Given low dimensional embeddings X and Y (defined in Section 2), the most convenient way to do translation is to translate the configurations in X and Y so that their centroids are at the origin. Then the problem is simplified as: finding Q and k so that k X  X  kY Q k F is minimized, where k X k F is Frobenius norm. The matrix Q is orthonormal, giving a rotation and possibly a reflection, k is a re-scale factor to either stretch or shrink Y . Below, we show that the optimal solution is given by the SVD of Y T X . A detailed re-view of Procrustes analysis can be found in (Cox et al., 2001).
 Theorem 1: Let X and Y be low dimensional embeddings of the points with known corre-spondences in data set S 1 , S 2 , and X i matches Y i for each i . If Singular Value Decomposition ( SVD ) of Y T X is U  X  V T , then Q = UV T and k = trace ( X ) /trace ( Y T Y ) minimize k X  X  kY Q k F . Proof: The problem is formalized as: { k opt , Q opt } = arg min k,Q k X  X  kY Q k F . (1.1) It is easy to verify that trace ( Q T Y T X ). (1.2) Since trace ( X T X ) is a constant, the minimiza-tion problem is equivalent to { k opt , Q opt } = arg min k,Q ( k 2  X  trace ( Y T Y )  X  2 k  X  trace ( Q T Y T X )). (1.3) Differentiating with respect to k , we have 2 k  X  trace ( Y T Y ) = 2  X  trace ( Q T Y T X ), i.e. k = trace ( Q T Y T X ) /trace ( Y T Y ). (1.4) (1.3) and (1.4) show that the minimization problem reduces to Q opt = arg max Q ( trace ( Q T Y T X )) 2 . (1.5) Case 1 : If trace ( Q T Y T X )  X  0, then the problem becomes Q opt = arg max Q trace ( Q T Y T X ). (1.6) Using Singular Value Decomposition, we have Y T X = U  X  V T , where U and V are orthonormal, and  X  is a diagonal matrix having as its main diagonal all the positive singular values of Y T X . So max Q trace ( Q T Y T X ) = max Q trace ( Q T U  X  V T ). (1.7) It is well known that for two matrices A and B , trace ( AB ) = trace ( BA ), so max Q trace ( Q T U  X  V T ) = max Q trace ( V T Q T U  X ). (1.8) For simplicity, we use Z to represent V T Q T U . We know Q , U and V are all orthonormal matrices, so Z is also orthonormal. It is well known that any element in an orthonormal matrix, say B , is in [-1,1] (other-wise B T B is not an identity matrix). So we know (1.9) , which implies Z = I maximizes trace ( Z  X ), where I is an identity matrix. (1.10) Obviously, the solution to Z = I is Q = UV T . (1.11) Case 2 : If trace ( Q T Y T X ) &lt; 0, then the problem becomes Q opt = arg min Q trace ( Q T Y T X ). (1.12) Following the similar procedure shown above, we  X   X  1 , 1  X  X  X  X  X  X   X  c,c (1.13) , which implies that Z =  X  I minimizes trace ( Z  X ). (1.14) Obviously, the solution to Z =  X  I is Q =  X  UV T . (1.15) Considering (1.5), it is easy to verify that Q = UV T and Q =  X  UV T return the same results, so Q = UV T is always the optimal solution to (1.5), no matter whether trace ( Q T Y T X ) is positive or not. Further, we can simplify (1.4), and have k = trace ( X ) /trace ( Y T Y ). (1.16) 3.2. Theoretical Analysis Many dimensionality reduction approaches first com-pute a relationship matrix, and then project the data onto a subspace spanned by the  X  X op X  eigenvectors of the matrix. The  X  X op X  eigenvectors mean some sub-set of eigenvectors that are of interest. They might be eigenvectors corresponding to largest, smallest, or even arbitrary eigenvalues. One example is Laplacian eigenmap, where we project the data onto the subspace spanned by the  X  X moothest X  eigenvectors of the graph Laplacian. Another example is PCA, where we project the data onto the subspace spanned by the  X  X argest X  eigenvectors of the covariance matrix. In this section, we study the general approach, which provides a gen-eral framework for each individual algorithm such as Laplacian eigenmap. We assume the two given data sets S 1 and S 2 do not differ significantly, so the related relationship matrices A and B are  X  X ery similar X . We study the difference between the embedding subspaces corresponding to the two relationship matrices. Nota-tion used in the proof is in Figure 1. The difference be-tween orthogonal projections k Q  X  P k characterizes the distance between the two subspaces. The proof of the theorem below is based on the perturbation theory of spectral subspaces, where E = B  X  A can be thought as the perturbation to A . The only assumption we need to make is for any i and j , | E i,j | = | B i,j  X  A i,j | X   X  . Theorem 2: If the absolute value of each element in E is bounded by  X  , and  X   X  2  X d 1 / ( N (  X  + 2  X  )) , then the difference be-tween the two embedding subspaces k Q  X  P k is at most  X  .
 Proof: From the definition of operator norm, we know k E k = max k P i k 2 i = 1. (2.1) We can verify the following inequality always holds: From (2.1) and (2.2), we have Combining (2.1) and (2.3), we have: k E k X  N X  . (2.4) It can be shown that if A and E are bounded self-adjoint operators on a separable Hilbert space, then the spectrum of A + E is in the closed k E k -neighborhood of the spectrum of A (Kostrykin et al., 2003). From (Kostrykin et al., 2003), we also have the following inequality: k Q  X  P k X   X  k E k / 2 d . (2.5) We know A has an isolated part  X  1 A of the spec-trum separated from its remainder  X  2 A by gap d 1 . To guarantee A + E also has separated components, we need to assume k E k &lt; d 1 / 2. Thus (2.5) becomes k Q  X  P k X   X  k E k / 2( d 1  X  X  E k ). (2.6) Interchanging the roles of  X  1 A and  X  2 A , we have the analogous inequality: k QP  X  k  X   X  k E k / 2( d 1  X  X  E k ). (2.7) Since k Q  X  P k = max {k Q  X  P k , k QP  X  k} (2.8), we have k Q  X  P k X   X  k E k / 2( d 1  X  X  E k ). (2.9) We define R = Q  X  P , and from (2.9), we get k R k X   X  k E k / 2( d 1  X  X  E k ). (2.10) (2.10) implies that if k E k  X  2 d 1  X / (2  X  +  X  ), then k R k X   X  . (2.11) So we have the following conclusion: if the ab-solute value of each element in E is bounded by  X  , and  X   X  2  X d 1 / ( N (  X  + 2  X  )), then the difference of the subspaces spanned by top M eigenvectors of A and B is at most  X  .
 and  X  2 A ) is large, then the subspace corresponding to the top M eigenvectors of A is insensitive to perturba-tions. In other words, the algorithm can tolerate larger differences between A and B . So when we are selecting eigenvectors to form a subspace, the eigengap is an im-portant factor to be considered. The reasoning behind this is that if the magnitudes of the relevant eigenval-ues do not change too much, the top M eigenvectors will not be overtaken by other eigenvectors, thus the related space is more stable. Our result in essence con-nects the difference between the two relationship ma-trices to the difference between the subspaces spanned by their low dimensional embeddings. In this section, we first use a toy example to illus-trate how our algorithm works, then we apply our approach to transfer knowledge from one domain to another. We present results applying our approach to two real world problems: cross-lingual information retrieval and transfer learning in Markov decision pro-cesses (MDPs). 4.1. A Toy Example In this example, we directly align two manifolds and use some pictures to illustrate how our algorithm works. The two manifolds come from real protein ter-tiary structure data.
 Protein 3D structure reconstruction is an important step in Nuclear Magnetic Resonance (NMR) protein structure determination. Basically, it finds a map from distances to coordinates. A protein 3D struc-ture is a chain of amino acids. Let n be the num-ber of amino acids in a given protein and C 1 ,  X  X  X  , C n be the coordinate vectors for the amino acids, where C x , y , z coordinates of amino acid i (in biology, one usu-ally uses atom but not amino acid as the basic element in determining protein structure. Since the number of atoms is huge, for simplicity, we use amino acid as the basic element). Then the distance d i,j between amino acids i and j can be defined as d i,j = k C i  X  C j k . Define It is easy to see that if C is given, then we can im-mediately compute A . However, if A is given, it is non-trivial to compute C . The latter problem is called Protein 3D structure reconstruction. In fact, the prob-lem is even more tricky, since only the distances be-tween neighbors are reliable, and this makes A an incomplete distance matrix. The problem has been proved to be NP-complete for general sparse distance matrices (Hogben, 2006). In real life, people use other techniques, such as angle constraints and human ex-perience, together with the partial distance matrix to determine protein structures.
 With the information available to us, NMR techniques might find multiple estimations (models), since more than one configuration can be consistent with the dis-tance matrix and the constraints. Thus, the result is an ensemble of models, rather than a single structure. Most usually, the ensemble of structures, with perhaps 10 -50 members, all of which fit the NMR data and retain good stereochemistry is deposited with the Pro-tein Data Bank (PDB) (Berman et al., 2000). Models related to the same protein should be similar and com-parisons between the models in this ensemble provides some information on how well the protein conforma-tion was determined by NMR.
 In this test, we study a Glutaredoxin protein PDB-1G7O (this protein has 215 amino acids in total), whose 3D structure has 21 models. Since such models are already low dimensional (3D) embeddings of the distance matrices, we skip Step 1 and 2 in our algo-rithm. We pick up Model 1 and Model 21 for test. These two models are related to the same protein, so it makes sense to treat them as manifolds to test our techniques. We denote Model 1 by Manifold A , which is represented by matrix S 1 . We denote Model 21 by Manifold B , which is represented by matrix S 2 . Obvi-ously, both S 1 and S 2 are 215  X  3 matrices. To eval-uate our re-scale factor, we manually stretch manifold A by letting S 1 =4  X  S 1 . Manifold A and B (row vec-tors of S 1 and S 2 represent points in the 3D space) are shown in Figure 2(A) and Figure 2(B). In biology, such chains are called protein backbones. For the pur-pose of comparison, we also plot both manifolds on the same graph (Figure 2(C)). It is clear that manifold A is much larger than B , and the orientations of A and B are quite different.
 To align the two manifolds, we uniformly selected 1/4 amino acids as correspondence resulting in matrix X and Y , where row i of X (from S 1 ) matches row i of Y (from S 2 ) and both X and Y are 54  X  3 matrices. We run our algorithm from Step 3. Our algorithm iden-tifies the re-scale factor k as 4.2971, and the rotation matrix Q as , the new representation of S 2 , is computed as 2 = kS 2 Q . We plot S  X  2 and S 1 in the same graph (Figure 2(D)). The result shows that Manifold B is rotated and enlarged to the similar size as A , and now the two manifolds are aligned very well. 4.2. Cross-lingual Information Retrieval In information retrieval, manifold alignment can be used to find correspondences between documents. One example is finding the exact correspondences between documents in different languages. Such systems are quite useful, since they allow users to query a docu-ment in their native language and retrieve documents in a foreign language. Assume that we are given two document collections. For example, one in English and one in Arabic. We are also given some training corre-spondences between documents that are exact trans-lations of each other. The task is: for each English or Arabian document in the untranslated set, to find the most similar document in the other corpus.
 We apply our manifold alignment approach to this problem. The topical structure of each collection can be thought as a manifold over documents. Each docu-ment is a sample from the manifold. We are interested in the case where the underlying topical manifolds of two languages are similar. Our procedure for aligning collections consists of two steps: learning low dimen-sional embeddings of the two manifolds and aligning the low dimensional embeddings. To compute similar-ity of two documents in the same collection, we assume that document vectors are language models (multino-mial term distributions) estimated using the document text. By treating documents as probability distribu-tions, we can use distributional affinity to detect topi-cal relatedness between documents. More precisely, a multinomial diffusion kernel is used for this particular application. The kernel used here is the same as the one used in (Diaz et al., 2007), where more detailed description is provided. Dimensionality reduction ap-proaches are then used to learn the low dimensional embeddings. After shifting the centroids of the docu-ments in each collection to the origin point, we apply our approach to learn the re-scale factor k and rotation Q from the training correspondences and then apply them to the untranslated set.
 In our experiments, we used two document collections (one in English, one in Arabic, manually translated), each of which has 2119 documents. Correspondences between 25% of them were given and used to learn the mapping between them. The remaining 75% were used for testing. We used Laplacian eigenmap and LPP (the projection was learned from the data points in the correspondence) to learn the low dimensional embeddings, where top 100 eigenvectors were used to construct the embeddings. Our testing scheme is as follows: for each given Arabic document, we retrieve its top j most similar English documents. The prob-ability that the true match is among this top j docu-ments is used to show the goodness of the method. We also used the same data set to test the semi-supervised manifold alignment method proposed in (Ham et al., 2005), where top 100 eigenvectors were used for low di-mensional embeddings. A fourth method (called base-line method) was also tested. The baseline method is as follows: assume that we have m correspondences in the training set, then document x is represented by a vector V with length m , where V ( i ) is the similarity of x and the i th document in the training correspon-dences. The baseline method maps the documents from different collections to the same embedding space -R m . Experiment results are shown in Figure 3. Compared to semi-supervised manifold alignment method, the performance of Prucrustes (with Lapla-cian eigenmap) is significantly better. For each given Arabic document, if we retrieve 3 most relevant En-glish documents, then the true match has a 60% prob-ability of being among the 3. If we retrieve 10 most relevant English documents, then we have about 80% probability of getting the true match. Further, our method is much faster. Semi-supervised manifold alignment method requires solving an eigenvalue prob-lem over a ( n 1 + n 2  X  m )  X  ( n 1 + n 2  X  m ) matrix, where n i is the total number of the documents in col-lection i , and m is the number of training correspon-dences. Using our approach, the most time consuming step is finding the low dimensional embeddings with Laplacian eigenmap, which requires solving eigenvalue problems over a n 1  X  n 1 matrix and a n 2  X  n 2 ma-trix. We also compute the SVD over a d  X  d matrix, where d is the dimension of the low dimensional em-beddings and is usually much smaller than n . In the experiments, Procrustes (with Laplacian eigenmap) is roughly 2 times faster than semi-supervised manifold alignment. Procrustes (with LPP) also returns rea-sonably good results: if we retrieve 10 most relevant English documents, then we have a 60% probability of getting the true match. Procrustes (with LPP) re-sults in a mapping that is defined everywhere rather than just on the training data points and it also re-quires less time. Another interesting result is that the baseline algorithm also performs quite well, and bet-ter than semi-supervised alignment method. One rea-son that semi-supervised manifold alignment method is not working well is that mappings of the correspond-ing points are constrained to be identical. This might lead to  X  X ver fitting X  problems for some applications. 4.3. Transfer Learning in Markov Decision Transfer learning studies how to re-use knowledge learned from one domain or task to a related domain or task. In this section, we investigate transfer learning in Markov decision processes (MDPs) following the ap-proach of  X  X roto-value functions X  (PVFs), where the Laplacian eigenmap method is used to construct basis functions (Mahadevan, 2005). In a MDP, a value func-tion is a mapping from states to real numbers, where the value of a state represents the long-term reward achieved starting from that state, and executing a par-ticular policy. PVFs are an orthonormal basis span-ning all value functions of an MDP on a state space manifold. They are computed as follows: First, create a weight matrix that reflects the topology of the state space using a series of random walks; Second, compute the graph Laplacian of the weight matrix; Third, select the smoothest k eigenvectors of this graph Laplacian as PVFs. If the state space is the same and only the reward function is changed, then the PVFs can be di-rectly transferred to the new domain. One interesting question related to PVFs is how to transfer the old PVFs to a new domain when the new state space is only slightly different from the old one. In this section, we answer this question with our techniques. Let columns of Y denote PVFs of the current MDP. Given the procedure on how to generate PVFs, we know the rows of Y are also the low dimensional rep-resentations of the data points on the current state space manifold. Let rows of X represent the low di-mensional embedding of the new manifold. Assume centroids of both X and Y are at the origin. By using isotropic dilation, reflection and rotation to align the two state space manifolds, we may find the optimal k and Q such that the two manifolds are aligned well. Our argument is that the new PVFs are Y Q . The rea-son is as follows: suppose we have already found the optimal k and Q that minimize k X  X  kY Q k F , then Y will be changed to kY Q in the process of alignment. k can be skipped, since it is well known that kY Q and Y Q span the same space. The only thing that we need to show is the columns of Y Q are orthonormal to each other (a requirement of PVFs). The proof is quite sim-ple: ( Y Q ) T Y Q = Q T Y T Y Q = Q T IQ = I , where I is an identity matrix. This means different columns of Y Q are orthogonal to each other and norm of each column is 1, so Y Q is orthonormal.
 The conclusion shown above works when two state space manifolds are similar. Here, we still need to answer one more question:  X  X nder what conditions are the two manifolds similar? X . Theorem 2 provides an answer to this question. Theorem 2 numerically bounds the difference between two spaces given the difference between the relevant relationship matrices. For this case, the relationship matrices are the Lapla-cian matrices used to model the state spaces. In this test, we run experiments to verify the bound. We in-vestigate two reinforcement learning tasks. The in-verted pendulum task requires balancing a pendulum of unknown mass and length by applying force to a cart attached to the pendulum. The state space is defined by two variables: the vertical angle of the pen-dulum, and the angular velocity of the pendulum. The mountain car task is to get a simulated car to the top of a hill as quickly as possible. The car does not have enough power to get there immediately, and so must oscillate on the hill to build up the necessary momen-tum. The state space is the position and velocity of the car.
 We first generate two different sets of sampled states for the pendulum task and compute their related nor-malized graph Laplacian matrices A and B . We com-pute the top i non-trivial eigenvectors of A and B , and directly compute the difference between the spaces spanned by them. Theorem 2 says if the absolute value of each element in A  X  B is bounded by  X  , and  X   X  2  X d 1 / ( N (  X  +2  X  )), then the difference of the spaces spanned by top i eigenvectors of A and B is at most (B) Mountain Car Task  X  . We set  X  be 0.5, and let  X  be  X d 1 / ( N (  X  +2  X  )). Here d 1 is the eigengap between top i eigenvectors and the other eigenvetors, N is 500. Based on our theorem, the difference between spaces should not be larger than  X  . In our experiments, we tried 20 different values for i =1, 6, 11,  X  X  X  , 96. For each i , we ran 5 tests. We carried out the same experiment on the Mountain Car task. Figure 4(A) and 4(B) respectively show the re-sults from Pendulum task and Mountain car task. For each figure, we plot  X  and the maximum and minimum difference values of the 5 tests for various values of i . For this application, the bound is loose, but the bound given in Theorem 2 is a general theoretical bound and for other applications, it might be tight. We also em-pirically evaluate the PVFs transfer performance. The results (not included) show that we can learn a good policy by using PVFs from a similar domain. In this paper we introduce a novel approach to man-ifold alignment based on Procrustes Analysis. When used with a suitable dimensionality reduction method, our approach results in a mapping defined everywhere rather than just on the training data points. We also study the conditions under which low dimensional em-beddings of two data sets can be aligned well. We pre-sented novel applications of our approach, including cross-lingual information retrieval and transfer learn-ing in Markov decision processes.
 Acknowledgments We thank the reviewers for their helpful comments. This project was supported in part by the National Science Foundation under grant IIS-0534999.
 Belkin, M., Niyogi, P. (2003) Laplacian eigenmaps for dimensionality reduction and data representation. Neural Computation 15.
 Bengio, Y. et al. (2004) Out-of-Sample Extensions for LLE, Isomap, MDS, Eigenmaps, and Spectral Clustering. NIPS 16.
 Berman, H. M., Westbrook, J., Feng, Z., Gillilan-dand, G., Bhat, T. N. Weissig, H., Shindyalov, I. N., Bourne, P. E. (2000) The protein data bank. Nucleic Acids Research , 28:235 X 242.
 Cox, M. F., Cox, M. A. A. (2001) Multidimensional scaling. Chapman and Hall.
 Diaz, F., Metzler, D. (2007) Pseudo-aligned multilin-gual corpora. The International Joint Conference on Artificial Intelligence(IJCAI) 2007. 2727-2732. Ham, J., Lee, D., Saul, L. (2005) Semisupervised align-Artificial Intelligence and Statistics. 120-127. He, X., Niyogi, P. (2003) Locality preserving projec-tions. The Annual Conference on Neural Informa-tion Processing Systems (NIPS) 16.
 Hogben, L. (2006) Handbook of linear algebra. Chap-man/Hall CRC Press.
 Kostrykin, V., Makarov, K. A., Motovilov, A. K. (2003) On a subspace perturbation problem. Proc. of the American Mathematical Society. 131:3469-3476.
 Lafon, S., Keller, Y., Coifman, R. R. (2006) Data fu-sion and multi-cue data matching by diffusion maps.
IEEE transactions on Pattern Analysis and Ma-chine Intelligence. 28(11):1784-1797.
 Luo, B., Hancock, W.R. (1999) Feature matching with
Procrustes alignment and graph editing. 7th In-ternational Conference on Image Processing and its Applications.
 Mahadevan, S. (2005) Proto-value functions: develop-mental reinforcement learning. The 22nd Interna-
