 1. Introduction Peer-to-peer systems (P2P Systems) ( Milojicic et al., 2002 ) supply good platforms for resource sharing.
The shared resources include the computing power (e.g. the cycles of CPU and the storage of disks), the data resource and the human knowledge ( Tiwana, 2003 ). Among the data resource, the shared text docu-ments, including scientific papers, legal documents, inventory patents and etc., are important sources of knowledge. With more and more documents being shared, we have to solve the problem: how to locate the documents related to a query in P2P systems.
Vector Space Model (VSM) ( Salton, Wang, &amp; Yang, 1975 ) is a state-of-the-art document retrieval tech-nology. In VSM, document collection is represented by term-by-document matrix. Each element of the ma-trix is the weight of corresponding term in the specific document. Usually, the weight is calculated according to the TF  X  IDF mechanism. TF is term frequency, which presents the local importance of the term in a document. IDF is inverted document frequency, which is global statistic information and re-flects the term  X  s differentiating ability in the whole collection.

The main factor that deteriorates the recall X  X recision in VSM is the synonymy X  X olysemy problem. For tual interest is about fruit. The essence of the synonymy X  X olysemy problem is that users want to find the documents related to some concepts, but they have to use natural language ( keywords ) to express those con-cepts. For ordinary users, it is not easy to manifest their concerned concepts by keywords ( Mitra, Singhal, &amp; Buckley, 1998 ).

Besides the synonymy X  X olysemy problem, it is difficult to get the global statistic information of terms (e.g. IDF) when we implement VSM in P2P systems. The reason is that P2P systems are large-scale, dy-namic complex systems. There might be thousands of peers in a P2P system, so it is almost impossible to collect the intact information about all the document collections on all peers. If we could get the global statistic parameters by gathering information from all the peers involved, we still faced a problem X  X he peer would join or leave the system at will. Hence, the collected global statistic information would be out of date for new peers coming and old peers quitting. The dynamic property of P2P systems also make it impossible to infer the global information by using some document collections on a part of peers as sam-ples, because documents on the sample peers keep changing, and even worse, the sample peers may quit the system.
 Query Expansion and Latent Semantic Indexing (LSI) ( Deerwester, Dumais, Furnas, Landauer, &amp;
Harshman, 1990 ) are suggested to solve the synonym X  X olysemy problem. The basic idea behind query expansion is trying to refine the user  X  s query by adding some other terms related to the keywords in the original query. Mitra et al. (1998) and Salton and Buckley (1990) have proved that query expansion is an effective technology in VSM. LSI tries to compare the user  X  s query and documents at the concept level, not just matching the keywords. The effectiveness of LSI comes from an observed fact that the related terms will be clustered if we project the original term-by-document matrix into a lower dimensional space ( Berry, Dumais, &amp; O  X  Brien, 1995 ). In our scheme, we use LSI to implement the automatic query expansion.

The lack of global statistic information severely affects the retrieval performance in distributed infor-mation retrieval (DIR) systems ( Xu &amp; Callen, 1998 ), and things get worse in the complicated P2P sys-tems. The research work of Gauch and Wang (1999) , Xu and Callen (1998) and Ogilvie and Callan (2001) has demonstrated that query expansion is useful to improve the retrieval performance in DIR systems. Information retrieval in P2P systems can be considered as a special kind of DIR.
The results of the above researches illuminate us that proper query optimization scheme could be used as a kind of compensation for the absence of the global information. Our solution is to optimize the user  X  s query with the context information supplied by the local document collections on different peers.
The comparison among the different context information can help user to retrieve documents from the peers that mostly meet the user  X  s potential preference. The solution is based on an assumption that will be discussed later. We name our query optimization scheme Semantic Dual Query Expansion (SDQE) because LSI brings us the latent semantic information. The main innovation of SDQE is to improve the retrieval performance in P2P systems by making full use of the local information.
Our experimental data not only have preliminarily validated our idea, but show that SDQE can effec-tively avoid the  X  X  X uery drift X  X  ( Mitra et al., 1998 ) problem which could be caused by automatic query expansion.
 This paper is organized as follows. In order to solve the main problem, we make some assumptions in
Section 2. SDQE is discussed in detail in Section 3. Section 4 contains the experimental data and our ana-lysis. In Section 5, we discuss some related work. We conclude our work in Section 6. 2. Some assumptions
Information retrieval is a difficult task, especially in P2P systems. In order to simplify our work and focus on the main problem, we make the following assumptions: 1. There exists an efficient message-sending mechanism in P2P systems. 2. The document collection on a peer is topic-related and reflects the owner  X  s preferences. There are many ongoing researches about the effective message-sending techniques, including Yang and
Garcia-Molina (2002) , Balakrishnan, Kaashoek, Karger, Morris, and Stoica (2003) and so on. These re-searches give us an optimistic anticipation that the sending of message will not be a problem in the fore-seeable future. In P2P systems, a query is transferred as a kind of special message, so we just suppose any more in the rest of this paper.

We suppose that users in P2P systems are rational and try to gather the information that is interesting to them ( Barbosa, Costa, Almeida, &amp; Almeida, 2004; Khambatti, Ryu, &amp; Dasgupta, 2004 ). According to our observation, users tend to collect the documents about a certain topic in a period of time. For example, a researcher whose researching interests are focused on P2P system and information retrieval will gather pa-and will give us the context information about a specific query. Based on this intuitive assumption, we form our query optimization scheme with LSI. 3. Semantic dual query expansion 3.1. Query expansion with LSI
LSI is an effective empirical technology to calculate the similarity between the query and documents based on  X  X  X oncept X  X  ( Berry et al., 1995 ). In LSI, the original term-by-document matrix A is factorized by single value decomposition (SVD) ( Golub &amp; Loan, 1996 ):
In Formula (1) , t is the number of terms and d is the number of documents in a document collection. U is a t  X  t orthogonal matrix having the left singular vectors of A as its columns, V matrix having the right singular vectors of A as its columns, and R the singular values of A in the descending order along its diagonal and the number of the non-zero 1996 ): to find them out ( Berry, Drmac, &amp; Jessup, 1999 ). Suppose that there are two terms X  Term whose corresponding term vectors in U 0 t k are T i ,and T There are two thresholds h 1 and h 2 , and if and be found out. That is, we borrow LSI to implement the basic automatic query expansion.

The enormous cost associated with SVD becomes the main barrier to implement LSI on the huge doc-ument collection, such as the webpage set of web searching engine ( Zhang, Berry, &amp; Raghavan, 2001 ).
However, things are different in P2P systems. At present, most P2P systems are composed of personal com-puters (PC) owned by ordinary users. According to common sense, the ordinary user is almost impossible to collect and maintain thousands of documents, so the size of the document collection on a single peer is far current PC. We think that we have found a proper scenario to implement LSI. 3.2. Query optimization scheme
As we can see in Fig. 1 , the original query is expanded with LSI according to the document collection on the peer which sends out the query (i.e. PEER-0). We call this expansion Local expansion . Then the original query accompanied with the locally expanded query is packed into a package and sent out. After other peers (i.e. PEER-1 etc.) receive the query package, they fetch out the original query and do the expansion according to their own document collections with LSI. We call this expansion Remote expansion . Finally, a new query is formed by combining the locally expanded query and remotely expanded query. The new query is used as the target query to search documents on the remote peers. The formal description of SDQE is shown in Table 1 .

The terms in the term-by-document matrix construct the term base of the corresponding document col-lection. We call the term base on the peer which sends out the query Local Term Base (LTB), while the term base on the peer which receives the query Remote Term Base (RTB). In Table 1 , w is a keyword in the ori-ginal query ( O q ), which is expanded according to h 1 in Formula (4) and h be 4 kinds of situations determined by whether w is expansible or not: 1. w is expansible in the peer which sends out query, and the expanded result set is: S 2. w cannot be expanded for no terms in LTB satisfy the two thresholds X  h
LTB. 3. Similar to situation 1, w is expansible in the remote peer and the expanded result set is S 4. Similar to situation 2, w is un-expansible in the remote peer.

There are four combinations derived from the above four situations. Different combinations determine the different strategies to form the new query. [1&amp;3] means that the term w is expansible both in query-sending peer and the query-receiving peer. The [2&amp;3] is similar to things in [1&amp;4]. w is substituted by [{ w } [ ( S [2&amp;4] is the worst situation that both the query-sending peer and the remote query-receiving peer 3.3. Algorithm The whole algorithm is described in Algorithm 1. The last step of our algorithm merges the results
Algorithm 1. The algorithm to implement SDQE 1. Preprocess all the term-by-document matrixes with LSI. 2. Expand the query according to local document collection and send the query package out. 3. Expand the original query on the remote peer. 4. Form the new query according to the two expansions as the scheme mentioned in Table 1 . 5. Retrieve documents according to the newly formed query on the remote peers. 6. Merge the results from remote peers to form a final uniform ranking list. from the different remote peers into a uniform ranking-list. We now use the CombMNZ ( Lee, 1997 ) as our merging scheme:
In Formula (6) , the, L Score( D j ) is the local score of document D according to the local statistic information of a remote peer. To the target query, a remote peer will return all the documents whose score is great than 0 to the query-sending peer. For D (
Score( D j )) from corresponding n remote peers. With these local scores from remote peers, the global score of D j in the final ranking list ( G Score( D j )) is calculated.

Steps 2 X 4 are the core steps in our algorithm. These three steps help to solve the synonymy X  X olysemy prob-lem. The synonymy problem is solved in steps 2 and 3 by LSI. For example, if the original query contains
LSI helps to improve the recall . The polysemy problem is solved by the set operation between the two ex-panded term sets in step 4. Different peers have different document collections, and these document collec-tions make available the different context information to a specific query. The topic-related documents in a collection provide a kind of relevance feedback , just as the top-ranked documents in Mitra et al. (1998) .We use the context information to expand the query with LSI, and then form an optimized query by comparing
Here is an example, if the original query is  X  X  X pple X  X , while S 1992 ) scheme in essence, for we can take the document collection in a peer as the user  X  s hidden profile. 4. Experiments and evaluation 4.1. Test environment
There are three test sets X  X EDLINE, CISI and FBIS in our experiments. MEDLINE is a collection of medical abstracts; CISI is a collection of library science abstracts; FBIS (Foreign Bureau Information Serv-ice) is a sub-collection from TREC 5 ( Voorhees &amp; Harman, 1996 ) FBIS test set. We select 10 queries of 7 domains from the routing tasks of TREC 5 as the target queries. The documents related to these 10 queries form our FBIS test set. In the experiments of FBIS set, we use the topics of the original TREC 5 queries as the actual queries. The detailed information about the queries in FBIS test set is showed in Table 2 .
Characteristics of the collections are presented in Table 3 . The queries in MEDLINE and CISI are all long queries, while most queries (9 out of 10) in FBIS are short ones. That is, the length of most of these no longer than 4 (87%), so we think that the experimental results got from FBIS is more convincible for it long queries of larger corpus that consists of long documents.
 We also simulate 3 typical P2P systems for document sharing. Each system is corresponding to a test set.
In Table 4 , the properties of these systems are described. S the number of documents in one peer and the total peer number in the system are both small. S medium-size P2P system, in which the number of peers is beyond 1000 while the number of documents in a peer is small. S 3 is a simulation of P2P system in a Local Area Network (LAN). In LAN, the number of involved peers is not large while the shared documents are fairly abundant. 4.2. Experimental data and evaluation
Two groups of experiments have been done for each simulated P2P system in two models: random model and topic model .In random model , the documents are randomly distributed to peers. On the contrary, the documents in a peer are all related to a certain topic 2 in topic model. Topic model is constructed based on our Assumption 2 and we think that this model might reflect the situation in real P2P systems.
The recall X  X recision performance curves of MEDLINE, CISI and FBIS are shown in Figs. 2 X 4 . In these figures, Centralized Method means that the retrieval work is performed in a centralized manner: the whole test set is put on one node, and we use LSI to find the documents related to a query without adopting any query optimization schemes. 0-Expansion scheme is that we directly implement LSI in P2P systems: every peer constructs its own term-by-document matrix and uses LSI to find local related documents to a query.
It is the same with Centralized Method that no query optimization schemes are executed. 1-Expansion scheme is that the query-sending peer use LSI to implement local query expansion and send the expanded query out; the remote query-receiving peers use the expanded query to search the related documents with LSI.

All the three figures show that SDQE is effective in topic model. Table 5 shows the comparison among the average precision of the 3 expansion schemes in topic model. The bold numbers in brackets are the im-proved percentages with SDQE compared to other two schemes.

The data in Table 6 prove that improvements are statistically significant according to Paired t-test ( a = 0.05) ( Hull, 1993 ).

In random model, the effectiveness of SDQE scheme is not so obvious. In MEDLINE and CISI, the performance of SDQE is almost the same as the that of 0-Expansion scheme. In FBIS, its performance is even inferior to that of 0-Expansion scheme. We think the reason is that the document collection in a peer contains all kinds of documents for the random distribution. This kind of document collection cannot the document collection, so the comparison between local expansion and remote expansion becomes mean-ingless. In topic model, the documents in a peer are all about a same topic. According to the work of Pap-adimitriou, Raghavan, Tamaki, and Vempala (2000) , if the corpus is a reasonably focused collection of meaningfully correlated documents, LSI performs well in finding out the related terms in latent semantic space, and the related terms reflect the context information of the corresponding collection. This makes it possible for SDQE to find out the differences among the collections and retrieve documents that satisfy user  X  s hidden preference.

Our experiments prove that direct implementing automatic query expansion scheme (1-Expansion scheme) seems to be unfeasible in P2P systems. Experimental data show that the performance of this scheme is almost always worse than the performance of 0-Expansions scheme and SDQE scheme no matter in topic model or in random model. We suppose the reason is the  X  X  Query Drift  X  X  problem ( Mitra et al., 1998 ), i.e., the local expansion introduces some noise to the original query and the remote peers treat the expanded query as the original query, so the kept noise affects the retrieval performance.
We notice that the retrieval performance of SDQE is comparable to that of the centralized method in topic model. Especially in CISI set, it performs slightly better than the centralized method. We believe that
SDQE provides a kind of compensation for the lack of global statistic information by making full use of local information. This demonstrates that it is hopeful to achieve the retrieval performance in P2P systems near to that of centralized systems under some conditions.
 In order to make fine granularity analysis of SDQE, we use harmonic mean F (10) ( Baeza-Yates &amp;
Ribeiro-Neto, 1999 ) to compare the retrieval performance of SDQE with that of 0-Expansion scheme and 1-Expansion scheme on each query in MEDLINE collection. Formula (7) is used to calculate F (10).

In Formula (7) , r i (10) is the recall of the top-10 retrieved documents and P retrieved documents of query i .

Fig. 5 demonstrates the differences between SDQE scheme and 0-Expansion scheme, 1-Expansion scheme on. F (10) in topic model and in random model. As we can see, the retrieval performance of most queries is improved with SDQE in topic model. Just as mentioned above, the reason is that LSI can effec-tively find out the hidden context information in this model.

In general, the experiments have proved that SDQE is feasible and effective if the distribution of the doc-uments obeys our Assumption 2. Although without global statistical information, SDQE can improve the retrieval performance by exploring the local context information in this situation. Besides that, we also no-tice that the simple automatic query expansion scheme (1-Expansion scheme) will deteriorate the retrieval performance owing to the  X  X  Query Drift  X  X  problem. By comparing the different context information, SDQE scheme effectively avoids this problem. 5. Related work
Query expansion is an important technology in information retrieval. Salton and Buckley (1990) shows the expansion method based on user  X  s feedback and Mitra et al. (1998) tells us that query can be expanded in a totally automatic way. Both of them prove that query expansion can improve the searching perform-ance in traditional centralized information retrieval. The research work in DIR, including Gauch and Wang improving the retrieval performance. Their experimental data show that with the help of query expansion, ens our research.
 Distributed hash table (DHT) algorithm is an effective and scalable way to distribute data in P2P systems. The representative systems based on DHT are Stoica, Morris, Karger, Kaashoek, and Balakrishnan (2001) ,
Ratnasamy, Francis, Handley, Karp, and Schenker (2001) and so on. Li et al. (2003) discusses the feasibil-ity of implementing DHT based searching method in Web searching. According to Cohen, Fiat, and
Kaplan (2003) , the main problems of DHT based systems are:  X  They cannot effectively deal with the partial-match queries.  X  They are more sensitive to peer failures and frequent joins and disconnects of peers.
Tang, Xu, and Dwarkadas (2003) and Tang, Xu, and Mahalingam (2003) suggest a LSI and DHT based framework to implement text retrieval in P2P systems. In the framework, the ID of a document is derived from LSI. The main problem of that framework is that the SVD should be performed in an  X  X  X ntry node X  X .
This will severely affect the scalability of the framework.
Waterhouse, Doolin, Kan, and Faybishenko (2002) gives a kind of searching method in hybrid P2P sys-sources to hubs and the searching work is done on these hubs. Similar work is done in Lu and Callan (2003) . The main advantage of information retrieval systems based on hybrid P2P systems is that they are easier to be implemented for they could directly borrow the related technologies from DIR. At the same time, the search work depends on hubs, so these systems face the single-point-failure problem in some degree.
 Cueca-Acuna and Nguyen (2002) makes good attempts to solve the document retrieval problem in pure
P2P systems. The main contributions of their work are:  X  They try to find out the approximate global weighting of the terms by bloom filter .  X  They use gossip scheme to gather and distribute the approximate information.

Our SDQE scheme tries to solve the problem from another aspect: finding the context information sup-plied by the local document collection. By comparing the different context information, we also get good retrieval performance. We think that our work is complement to theirs. 6. Conclusions and future work
The main contribution of our work is that we suggest an innovative and effective query optimization schem X  X DQE with LSI in P2P systems. Our experiments prove that this novel scheme is effective in improving the whole retrieval performance on condition that the distributed document collections have dis-tinguishable topics. We have observed that the rational user will focus on the topics that are interesting to them and will not collect documents randomly, so our scheme will be useful in real P2P systems.
We all know the dynamic property of P2P systems. In P2P systems, the document collections and the user  X  s queries all keep changing. We have to consider building a unified model that can solve the problem about information retrieval and information filter at the same time. SDQE supplies the basic idea to build such unified model.

Our present work deals with the keywords in the user  X  s query and the terms added by the expansion equally. The fact is that the original keywords in the user  X  s query is more important than the added terms, so we are going to adopt proper method to treat the original keywords and the added terms discriminato-rily. We now use a simple result-merging scheme and we plan to design more suitable mechanism to im-prove the retrieval performance.
 Acknowledgements Our work has been supported in part by China National High Technology Research and Development Project under grant no. 2002AA4Z3430.

The authors would like to thank the anonymous reviewers for their constructive comments and suggestions.
 References
