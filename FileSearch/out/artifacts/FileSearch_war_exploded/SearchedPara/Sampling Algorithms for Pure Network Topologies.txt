 In a time of information glut, observations about complex systems and phenomena of interest are available in several applications areas, such as biology and text. As a conse-quence, scientists have started searching for patterns tha t involve interactions among the objects of analysis, to the effect that research on models and algorithms for network analysis has become a central theme for knowledge discovery and data mining (KDD). The intuitions behind the plethora of approaches rely upon few basic types of networks, identi-fied by specific local and global topological properties, whi ch we term  X  X ure X  topology types.
 In this paper, (1) we survey pure topology types along with existing sampling algorithms that generate them, (2) we in-troduce novel algorithms that enhance the diversity of sam-ples, and address the case of cellular topologies, (3) we per -form statistical studies of the stability of the properties of pure types to alternative generative algorithms, and a join t study of the separability of pure types, in terms of their em-bedding in a space of metrics for network analysis, widely adopted in the social and physical sciences.
 We conclude with a word of caution to the practitioners, who sample pure topology types to assess the  X  X tatistical signi fi-cance X  of their findings, e.g., the p-value of the clustering co-efficient is sensitive to the sampling algorithm used. We find that different pure types share similar topological propert ies. Further, real world networks hardly present the variabilit y profile of a single pure type. We suggest the assumption of  X  X ixtures of types X  as an alternative starting point for developing models and algorithms for network analysis. In recent years, researchers in application areas such as bioinformatics, computational biology, and those that rot ate around the processing of electronic texts have made availab le huge amount of  X  X etworked data, X  to the data mining com-munity at large, to the effect that models and algorithms for network analysis have become a central theme for KDD [30; 16; 19; 25; 29]. On the other hand, in the social and math-ematical sciences, (social and complex) networks have been an object of research for a few decades now [20; 38; 11; 22; 7; 8; 13; 12]. Over the years, the communication across com-munities has increased, the major results of each disciplin e have been shared and assimilated by the others, and, occa-sionally, old ideas have resurfaced under a different guise. In particular, the notion of  X  X etwork topology X  has recentl y gained attractiveness, as several complex phenomena of sci -entific interest tend to manifest in those networks that are characterized by specific  X  X opological properties X  [20; 48 ; 6; 21; 10]. Thus, it is not surprising to find that a fundamen-tal characteristic shared by recent approaches to network analysis is the central role played by a set of basic types of networks, identified by specific local and global topologica l properties of interest, which we term  X  X ure X  topology types . In data mining and machine learning, the study of real world networks is essential for the development of sound theoretical models. In a typical application, for example, exploratory data analysis (EDA) techniques suggest reason -able probabilistic assumptions for the quantities of inter est. Then, being able to posit a model for the data that takes advantage of EDA findings, as it is the case for  X  X enerative X  models, ultimately leads to unbiased inferences and robust predictions [36; 41; 45; 26; 27; 31; 37; 3; 46; 32; 4]. In general, different analyses of real networks rely upon two basic tasks: (1) that of  X  X enerating, X  or  X  X ampling, X  net-works that display realistic properties of interest, and (2 ) that of  X  X etermining X  which pure topology type(s) a given network is close to. The concept of  X  X enerative model X  for networks plays a fundamental role in both tasks. For ex-ample, models that generate networks with realistic prop-erties given few parameters can be used for compression, simulations and testing, models of pure types can be used to compare ideal properties to those of observed networks, and so on. More in detail, fitting a model to an observed network means to project its adjacency matrix onto the low-dimensional parameter space that is defined by the model. For compression, the representation of networks as points i n this low-dimensional space is itself of interest. For simul at-ing networks, we sample adjacency matrices starting from a point in the parameter space, according to the model spec-ifications; the closer the starting point is to the projectio n of an observed network, and the more the probabilistic as-sumptions underlying the model hold, the better the ran-domly simulated networks will mimic the properties (e.g., functions of the adjacency matrix) of the observed network. For testing, we compare the parametric representation of an observed network to that of a pure topology type or to that of another observed network. Alternatively, given an observed network, the ability to discriminate between pure topology types can be used to predict which phenomena the system under scrutiny is expected to display, e.g., in a dy-namic setting. Further, in order to apply the large body of type-specific results present in the literature to real worl d problems, it is crucial to map an observed network to the corresponding pure type(s). In this paper, 1. we survey the pure topology types, along with the ex-2. we introduce novel algorithms aimed at enhancing the 3. we perform statistical studies of the stability of the The utility and appeal of sampling algorithms stems from the following implication. If we can generate a network at random that displays the properties of interest, it is  X  X os-sible X  that the imaginary generative process we posited ac-tually outlines a latent phenomenon that is truly happening in the data. This implication can be very convincing, de-pending on the soundness of the semantics that inform the imaginary process, in a specific application, to the effect that the latent phenomenon is perceived as  X  X lausible. X  For example, the  X  X ix degrees of separation X  among individu-als observed by Milgram (1967) is captured by the  X  X mall world X  topology of Watts and Strogatz (1998) where the semantic that informs the sampling algorithm is that  X  X ndi-viduals form local acquaintances, few of which relocate to places far away. X  This stylized model of behavior is enough to replicate the phenomenon observed by Milgram, and it  X  X ounds X  like a plausible explanation [39; 48]. In section 3 .1 we address the following problem.

Problem 1. (Sampling) How can we generate topologies that have a set of desired properties with high probability? Sampling algorithms can be both deterministic and proba-bilistic, and typically depend on a small set of parameters. To fully exploit their power, it is important to provide ways to estimate such parameters from observed quantities. As we discussed above, a related practical problem is that of determining which properties we should expect to observe in a network under analysis. The pure topology types are used by practitioners to this extent, e.g., homeland securi ty officers are interested in determining whether an observed social network is cellular, given partial measurements abo ut it. If so the conclusion will be drawn that destabilization strategies that are successful on pure cellular topologies will be successful in destabilizing the given network. In sectio n 3.2 we address the following problem.

Problem 2. (Typing) How can we determine which pure topology type a given network is closest to? In order for the  X  X omeland security argument X  above to be reasonable, it is important for alternative algorithms for the same pure type to be  X  X table, X  i.e., to produce networks that are close, in some reference space 1 , and for algorithms for different pure types to be  X  X eparable, X  i.e., to produce net-works that are far apart, in some reference space, see Figure 1. The stability of topological properties, to alternative sam-pling algorithms for the same topology type, suggests that choosing one specific algorithm over another 2 does not harm the validity of the conclusions. The separability of topolo gi-cal properties, entailed by sampling algorithms for differe nt topology types, implies that any set of observed topologi-cal properties uniquely indicates a pure topology type. In other words, separability suggests that it is logically pos si-ble to answer questions like  X  X s the given network of type X? X  Most of the experiments in section 4 are devoted to assess stability and separability of the sampling algorith ms surveyed or introduced in section 3.1. Figure 1: Sampling algorithms for pure topology types 1, 2, and 3 are mapped to the corresponding sets of all possible network samples, in the metric space X 1  X X 2 . If these sets overlap the pure types are not separable and the logic impli-cation between properties and topologies is broken. That is , topology types still imply observed properties, but observ ed properties do not imply a specific topology type, rather the lack of properties implies the absence of topology types. The pure topology types we consider in the next section have been introduced separately over the years [20; 39; 48; 6; 21; 10; 5; 40; 23]. To the best of our knowledge neither exploratory nor comprehensive studies exist, which attemp t to compare the stability of alternative sampling algorithm s, or to assess the separability of the sampled networks, in terms of the collection of metrics commonly used for network analysis.
 Typing network topologies from data is a fairly novel area of research. Initial explorations are present in specific ap pli-cation domains such as covert network analysis [18]. Related research efforts aim at providing intuitions and mat h-ematical theory that describe what happens to topological properties when only partial information is available, e.g ., sub-samples of scale free networks are not scale free [44], a t exploring the effectiveness of search strategies, e.g., gre edy
The reference space used in this paper is defined by 47 metrics widely adopted in the social and physical sciences. We embed all sampled networks in this space.
Note that there are possibly infinitely many sampling al-gorithms that, although different, produce networks with topological properties typical of the same pure type. them, along the circle outlined by the ring. search finds short chains of acquaintances in small world net -works [34; 35; 33; 1], at developing models of information flow [42; 43] and information exchange [17], or at exploring the robustness of metrics for network analysis to variation s in the topological properties [24; 9]. In this section, we give heuristic descriptions of the pure topology types. We then survey existing sampling algo-rithms and introduce our own, in order to provide each of these types with a precise meaning. We conclude with a discussion of strategies the can be used to determine the topology type of a sample network. Without loss of gener-ality we specify the sampling algorithms for the pure topol-ogy types on a ring lattice. Note that a ring lattice entails a natural notion of distance, which is distinct from that of shortest path. A pair of nodes are close according to the ring-induced distance if the (shortest) arc that connec ts them, along the circle outlined by the ring, is small, i.e., i t crosses few other nodes. Having two notions of distance is necessary, as a topology type may need both to be defined, e.g., small world. Figure 2 shows some examples.

Topology 1. (Ring Lattice) Each node is connected to its neighbors, according to the ring-induced distance.
Topology 2. (Small World) Each node is connected to several of its neighbors and few distant nodes, according to the ring-induced distance [48].

Topology 3. (Erd  X os Random) Each node is connected to a random set of the remaining nodes [20].

Topology 4. (Core-Periphery) Nodes belong exclusively to either the core or the periphery. Core and periphery nodes are connected to core nodes, while there are no edges among periphery nodes [10].

Topology 5. (Scale Free) Most of the nodes are con-nected to few other nodes, while few nodes are connected to many other nodes. This relation is formally described with a power law, between the number of edges and the number of connections [5].
 Topology 6. (Cellular) Nodes are divided into cells. Connections are frequent between nodes within each cell, an d rare between nodes in different cells [2; 23].
 In the rest of this paper we represent a network in terms of a graph G = ( V, E ) , where V is a set of vertices and E is a set of edges, undirected and of unit weight. We now survey the existing sampling algorithms for each of the pure topology types above. To complement the survey, we introduce novel algorithms aimed at enhancing the di-versity of sampled networks, and at addressing the case of cellular topology type. The following algorithms are avail -able in C++ as part of ORA [14]. A ring lattice with parameters ( n, k ) is sampled as follows.
Ring Lattice 1. Define n as the number of nodes in the graph, and k as the number of neighbors for each node. Given ( n, k ) do as follows. for: each node v=1,...,n 1.1. do: add an edge from v to its k closest neighbors. Note, this is a deterministic algorithm, and there is no vari -ability in the sampled networks.
 A streamlined definition of a small world topology is one that negatively correlates the probability of two nodes bei ng connected to their distance, for some notion of distance. Watts and Strogatz (1998) propose a way to generate a small world topology on a ring lattice with undirected edges. In a ring lattice with parameters ( n, k ) the nodes are placed in a circular fashion, and each node is connected with its k/ 2 closest neighbor clockwise and counter-clockwise by means of undirected edges. In order to generate a small-world topology with parameters ( n, k, p ) the following algorithm is used.

Small World 1. Define n as the number of nodes in the graph, k as the number of neighbors for each node, and p as the probability of rewiring. Given ( n, k, p ) do as follows. for: k=1,..., k/2 1.1. for: each node v=1,...,n 1.1.1. do: with probability p, substitute the edge from v to This algorithm is useful for generating topologies and to study their properties for p  X  [0 , 1]; specifically, for p = 0 we retain the original ring lattice topology and for p = 1 we generate a random graph, see below. Watts and Strogatz (1998) also define intuitive measures of connectivity. The number of edges in the shortest path between two nodes, averaged over all pairs nodes, is L ( p ). The fraction of edges that exist among neighbors of v , that is, the number of edges among the kv neighbors of v over kv ( kv  X  1) / 2, the maximum number of edges, averaged over all nodes, is C ( p ). They use these two quantities to profile small world topologies by computing the observed values of L and C and comparing them to those of a random graph X  X ee discussion point no.1. would constitute evidence to support a small world topology . Kleinberg (2001) proposes a model to generate small world topologies on a two-dimensional grid with directed edges. In the two-dimensional grid lattice with parameters ( n, k ) each one of the n 2 nodes is connected with k of its close neighbors, where the lattice distance between two nodes is defined as the number of lattice steps that separate them, small world topology with parameters ( n, k, l, r ) the follow-ing algorithm is used.

Small World 2. Define n as the number of nodes in the graph, k as the number of neighbors for each node, l as the number of long-range contacts, and r as the exponent of the power law. Given ( n, k, l, r ) do as follows. do: build a grid lattice (n,k) for: each node v=1,...,n 2.1. repeat: l times 2.1.1. do: add a directed edge from v to u, where u is se-This algorithm is easier to deal with than the previous one, analytically, in that the parameters ( k, l ) determine the num-ber of close neighbors and long-range contacts, and in that we do not break the symmetry of the problem by substitut-ing neighbors for long-range contacts but we add the latter on top of the former instead.
 We propose a different model to generate small world topolo-gies from a ring-lattice with directed edges. In the ring lattice with parameters ( n, k ) each one of the n nodes is connected with each of its close neighbors with probability p and to all of its long-range contacts with probability pro-portional to p 2 . In our formulation the control is not on the number of neighbors and long-range contacts, but rather on the probability of having a neighbor and a long-range con-tact as in a proper Erd  X os random graph. In order to build a small world topology with parameters ( n, k, p 1 , p 2 , r ) the following algorithm is used.

Small World 3. Define n as the number of nodes in the graph, k as the number of neighbors for each node, p 1 as the probability of neighbor, p 2 as the probability of a long-range contact, and r as the exponent of the power law. Given ( n, k, p 1 , p 2 , r ) do as follows. do: build a grid lattice (n,k) for: each node v=1,...,n 2.1. repeat: k times 2.1.1. do: remove a directed edge from v to u, where u is 2.1.2. do: with probability p 2 add a directed edge from v to Remark 1. It is important to note that in the small-world networks the interactions directed out of each node are gen-erated according to the same probability distribution, and independently of other nodes. We generate Erd  X os random graph (Bollob  X as 2001) using two algorithms. The first algorithm depends on the number of nodes ( n ) and the probability of a connection ( p ): it simply scans through the n 2 ordered pairs of nodes and connects each of them with probability p .

Random 1. Define n as the number of nodes in the graph, and p as the probability of an edge. Given ( k, p ) do as fol-lows. for: each node pair ( u, v )  X  [1 , n ] 2 1.1. do: with probability p, add an edge from u to v. The second algorithm depends on the number of nodes ( n ) and the number of edges ( m ): it simply samples m ordered pairs of nodes, among the n 2 possibilities, with equal prob-ability and without repetition, and connects them.
Random 2. Define n as the number of nodes in the graph, and m as the number of edges. Given ( k, m ) do as follows. do: order all node pairs ( u, v )  X  [1 , n ] 2 in a vector do: set equal to 1 m components of e , uniformly at ran-do: add an edge from u to v if I ( u,v ) ( e ) = 1 . Type Proposed by Parameters Ring Lattice n (number of nodes), k (number of neighbors)
Scale Free 1. (pref.) Albert &amp; Barabasi n (number of nodes), n
Core-Periphery 1. (uniform) Borgatti &amp; Everett n (number of nodes), p
Core-Periphery 2. (pref.) Airoldi n (number of nodes), p 0 For an undirected network, a scale free topology is one where the degree distribution for all edges is identical and follo ws a log-normal profile. For a directed network, a scale-free top ol-ogy entails that the in and out degree distributions of all edges is identical and follows a log-normal profile. In order to build a scale-free topology with parameters ( n, n 0 , p, p we can use the algorithm by Albert &amp; Barabasi (2001):
Scale Free 1. Define n as the number of nodes in the graph, n 0 as the number of nodes in the initial graph, p as the probability of an edge, and p as the probability of an edge between initial nodes. Given ( n, n 0 , p, p 0 ) do as follows. do: build a random graph ( n 0 , p 0 ) for: each of the remaining nodes v = n 0 + 1 , ..., n 2.1. do: add node v 2.2. repeat: v-1 times 2.2.1. do: add a directed edge from v to u with probability Remark 2. This is our version of the algorithm in Albert &amp; Barabasi (2001), which leaves out exact details about how many edges each new node should have.
 Alternatively we propose a different algorithm, that con-trols the variability of the final degree distribution direc tly, rather than adding nodes aiming at obtaining a degree dis-tribution with the desired parameters in the infinite limit. Our approach is more effective for modest network sizes, and allows for control on the parameter values  X  X xactly X  rather than depending on an infinite limit that is never reached. The algorithm depends on parameters ( n, m, r ) and works as follows.

Scale Free 2. Define n as the number of nodes in the graph, m as the number of edges, and r as the exponent of the power law. Given ( n, m, r ) do as follows. for: each pair of nodes ( u, v )  X  [ i, n ] 2 repeat: m times 2.1. do: sample (u,v) with probability p ( u,v ) 2.2. do: add an edge from u to v Remark 3. An analytic result that describes sets of param-eter values for these two algorithms that lead to the same degree distribution is not presented here. We give two algorithms to generate networks with this topol-ogy type. The two algorithms differ in the way periphery nodes are connected to core nodes. Both algorithms depend on the number of nodes ( n ), the proportion of core nodes ( p ) and the connectivity among core nodes ( p in ): we scan through each node and assign it to the core with probabil-ity p or to the periphery with probability 1  X  p , and we connect the core nodes with a random topology. At this point the random attachment algorithm connects each of the periphery nodes to a core node chosen at random with equal probability X  X his is the algorithm implicit in Borgat ti and Everett (1999) X  X hereas the preferential attachment algorithm connects each of the periphery nodes to a core node chosen according to a probability proportional its tot al degree X  X n the same fashion of our version of the scale-free topology. We give two algorithms to generate cellular networks [23] that differ in the way the nodes are distributed among cells. Both algorithms depend on the number of nodes ( n ), the number of cells ( k ), the average connectivity among nodes within the same cell ( p in ) and the average connectivity among cells ( p out ): briefly the algorithms create a random graph ( k, p out ) that represents the interconnections among cells and then for each cell they create a random graph ( n k , p Any connection between two cells in the random graph ( k, p is specified to the node level by choosing to random pair ( i, j ) of nodes, where node i and node j belong to the inter-connected cells. In the first algorithm the size of the cell is uniform, that is, each node is assigned to one of k cells with probability 1 /k . In the second algorithm an extra parameter Algorithm Samples Parameters Ring Lattice 25 n = 250, k = 2 , 4 , .., 50 Random 1. (prob.) 17 n = 250, p = 0 . 10 , 0 . 15 , .. 0 . 90 Random 2. (number) 17 n = 250, m = 311 , 622 , .., 28012 controls the distribution of the size of the cells ( r ), nodes are assigned to cell i with probability p i = 1 /i r , which entails a power-law distribution for the cell size.
 In Table 1 we summarize the 13 algorithms, their inputs and their author. In order to determine the type of topology of a network or a sub-network there are two main approaches: generative and discriminative.
 According to the generative approach, given an observed network we use its adjacency matrix to estimate the param-eters underlying the sampling algorithms associated with t he pure types. We then compare the estimates; the pure type associated with the  X  X est X  estimates is chosen as the pure topology type for the given network. The notion of  X  X ood X  estimate can be made precise in both a probabilistic and a deterministic fashion, in terms of likelihood or distance, re-spectively. According to the discriminative approach, giv en an observed network we disregard the possible ways it may be sampled and we focus on the topological properties in-stead, as captured by a set of metrics for network analysis, widely adopted in the social and physical sciences. In parti c-ular, we sample a large quantity of networks, with different parameter values, for each pure type. We then compute the corresponding metrics for each of them, and we train Bayesian classifiers that are good at discriminating betwee n the types. Given an observed network we classify it into a type according to the posterior probability of types given i ts adjacency matrix. In this paper we follow the discriminativ e approach.
 The generative approach is more desirable, in principle, be -cause it allows for a clean interpretation of the type assign -ments in terms of the parameters underlying sampling al-gorithms. Unfortunately, it is hard to establish a compre-hensive framework for all pure types. For example, multi-ple algorithms exist that generate the same topology type. These algorithms involve different parameters that can be difficult to estimate from the adjacency matrix in a con-sistent fashion, without bias. Different algorithms differ i n crucial dimensions, e.g., the a small-world topology requi res the existence of two metrics, as we noted above. It is not possible to posit a simple generative model that is able to generate all topologies as a smooth function of its underlyi ng parameters. Further obstacles exist.
 The discriminative approach leads to less interpretable re -sult, as it disregards the way a given network topology arise s and focuses on its measurable properties instead. This ap-proach is very useful in practice, though. We can sample a large quantity of networks, as we explore the full parameter space for each one of the sampling algorithms, in order to obtain a representative sample of instances of pure topolog y types. We then compute the metrics on the networks in the sample to obtain profiles for each topology type in terms of the metrics of interest. At this point, we can learn the mapping from metrics of interest to pure topology types us-ing our favorite classification method. Classification erro rs indicate the degree to which pairs of pure topology types overlap in the reference space of metrics, see Figure 1. Here we present the experiments to assess stability and sep-arability of pure topology types. The classification meth-ods we used are off-the-shelf classifiers, such as na  X  X ve Baye s (based on Multinomial and Poisson distributions), logisti c regression, maximum entropy, SVM (with a linear kernel), voted perceptron, decision trees and k-nearest neighbor [1 5]. The results below correspond to the Poisosn flavor of na  X  X ve Bayes classifier that turned out to be more accurate in pre-dicting the topology type of a given network [4]. In order to estimate the prediction errors we used a stratified five-fold cross validation scheme. The stratification controls that i n every one of the five folds the proportions of networks by type are the same as the proportions of networks by type in the overall sample. The stratification aims at balancing the bias in those experiments where the simpler topologies are under-represented [28]. We focused our analysis on a set of metrics widely adopted in the social and physical sciences. The metrics we com-puted for each of the instances of the pure network topology types were the following 3 : degree centrality (no.1-4, central-ity of a node in terms of its degree distribution), betweenne ss centrality (no.5-9, centrality of a node in terms of the shor t-est paths it is involved in), closeness centrality (no.9-12 ), inverse closeness centrality (no.13-16), eigenvector cen tral-
Whenever a metric is associated with four indices, it means that we derived several quantities related to it. These were the minimum, the maximum, the average, and the standard deviation.
 topology type. Metrics are numbered left to right, top to bot tom. ity (no.17-20), clustering coefficient (no.21-24, density o f the connectivity around a node), effective network size (no.25-28), network constraint (no.29-32), node levels (no.33-36 ), triad count (no.37-40), global efficiency (no.41), local ef-ficiency (no.42), efficiency (no.43), connectedness (no.44) , hierarchy (no.45), upper boundedness (no.46), average dis -tance (no.47), all pairs shortest path (no.48-51). Formal d ef-initions are available in Wasserman and Faust (1994) [47]. The metrics we used are available in ORA [14]. Overall, the hypotheses we wish to test are: (1) stability, i .e., to what extent different sampling algorithms for the same pure topology type lead to consistent topological properti es, as captured by the set of metrics of interest, and (2) separa-bility, i.e., to what extent the embedding of ideal networks into the reference space of metrics of interest can uniquely determine the pure topology types.
 In order to control for possible sources of variations we wer e not interested in, such as size of the network and density, we devised a design of experiments structured as follows. Ther e are six topology types. For each topology we explore the pa-rameter space using an evenly spaced grid; we sampled at least ten topologies for each parameter configuration, whic h resulted in more example networks the more complex gener-ating algorithms. We attempted to control density and size of networks, across topologies, to make the discrimination as hard as possible, and ultimately get estimates of separabil -ity as low as possible. Further, we attempted to control for other relevant parameters when generating the same topol-ogy type using different algorithms, with the goal of making sampled topologies of a same type very consistent across the various generating algorithms, and ultimately get estimat es of stability as high as possible. We start by reporting the stability of topological properti es corresponding to single pure topology types generated with different algorithms. The figures quoted are five-fold cross-validated errors in a classification task, the lower the erro r is, the less stable topological properties are, since a slig ht variation in the sampling algorithm leads to distinguishab le sets of measurements.
 Random Graphs. Using the set of metrics we can dis-tinguish almost exactly which topology was generated by which algorithm. The extremal statistics (min, max) are very powerful discriminators in this case. The area under the Receiver Operating Characteristic (ROC) curve is about 1 and the classification error about is 0.00%.
 Core-Periphery. Using the set of metrics we cannot dis-criminate which topology was generated from which algo-rithm. The classification error is about 50% and the area under the ROC curve is 0.501.
 Cellular. Using the set of metrics we can discriminate fairly well which topology was generated from which algorithm. The area under the ROC curve is 0.928 and the classification error is 17.64%.
 Scale-Free. Using the set of metrics we can discriminate almost exactly which topology was generated from which algorithm. The area under the ROC curve is about 1 and the classification error is 0.07%.
 Small-World. Using the set of measures we can poorly discriminate which topology was generated from which al-gorithm. The area under the ROC curve is not available (this is a three-way classification problem) and the classifi -cation error is 24.78% (base error is at 33.33%). Pairwise comparisons suggest that our classifiers may be too simple, in fact, they can not distinguish the three algorithms at the same time, even as pairs of them are fairly distinguishable. We now report the overall stability and separability of sam-pling algorithms for different pure topology types. Table 4 below summarizes the five-fold cross-validated errors in the corresponding classification tasks. Diagonal cells rep li-cate the stability results discussed above. Off-diagonal ce lls quote separability results. The lower the error is, the more each topology type. Metrics are numbered left to right, top t o bottom. separable topological properties are, since the instances of different pure types entail distinguishable sets of metrics . Table 4: Joint study of stability and separability of pure topology types. The column labels are: RL for ring lattice, Rnd for Erd  X os random, SW for small world, SF for scale free, Cel for cellular and CP for core-periphery.
 Our experiments point out few limitations of the sampling algorithms we used that are worth discussing. 1. Unrealistic variability profiles.
 Both the generative algorithms we surveyed and those we introduced are very simple. Algorithms may entail  X  X o vari-ability X  for a specific metric over a fairly large range of pa-rameter values, or by construction, e.g., all instances of a n Erd  X os random ( n, m ) have the same number of edges, i.e., m . While these algorithms are of theoretical value and help us grasp insights about phenomena of interest, it is very dangerous to employ them for statistical testing purposes, e.g., to compute p-values, as it is often done in practice. This is because rich variability profiles are crucial in de-termining the stability of topological properties of a pure type to alternative sampling algorithms that generate it. I n other words, low variability profiles lead to high sensitivi ty of topological properties, as captured by the metrics of int er-est, and ultimately to high sensitivity of relevant statist ics to the specific version of the algorithms adopted. For ex-ample, the variability profile of the clustering coefficient i s extremely sensitive to the specific algorithm used to sample both random and scale free types. As a consequence the p-value, e.g., of small-world-ness, will vary.
 A simple suggestion to overcome this problem is to sample topology types according to different algorithms, and then t o mix the networks, somehow. This directly aims at increasing the variability profiles of the metrics of interest, and poss ibly leads to more robust, e.g., p-values. 2. Two main flavors of topological properties.
 Table 4 suggests that cellular, core-periphery and scale fr ee types are weakly separable, and share common topological properties with random types. These types are separable from small world topologies that, in turn, shares a set of different topological properties with random types. Note that, key differences between cellular, core-periphery, sc ale free and random are that (a) more apparent at moderate density ( apx .25 range) and (b) certain metrics can be used to separate these four types of networks. 3. Low stability and low separability.
 Overall, alternative sampling algorithms we considered fo r the same type appear very similar. Yet topological prop-erties are neither stable to alternative algorithms that ar e meant to generate the same topology type, nor separable across different topology types.
 The low stability (not desirable) is likely to be a consequen ce of the fact that the algorithms are too simple and do not lead to rich enough variability profiles for the metrics of intere st. Figure 5: Profiles of 47 metrics of interest for small world topology, excluding shortest path 48-51, as measured over the sampled networks. Each small plot shows three his-tograms in different colors, which summarize the metric val-ues of the three different sampling algorithms. Metrics are numbered left to right, top to bottom.
 In fact, we find that the extremal statistics (min and max) have high information gain with respect to the topology type categories, and drive the classification in several cases. The low separability (not desirable) means that pure types are stylized models of behavior at the sampling level, which lead to networks that share topological properties, as cap-tured by the network metrics of interest. Aside from the simplicity of the algorithms, this is consistent with what w e would expect to see in the real world, i.e., observed network s display multiple stylized behaviors to different degrees. T his translates into the more realistic hypothesis of  X  X ixtures of types, X  at the sampling level, as a better starting point for developing models and algorithms for network analysis. We surveyed pure topology types along with existing sam-pling algorithms that generate them. We introduced novel algorithms that enhance the diversity of samples, and ad-dress the case of cellular topologies. We performed statist i-cal studies of the stability and separability of the topolog i-cal properties of pure types, as captured by a set of network metrics of interest, widely adopted in the social and physic al sciences.
 We find that the sampling algorithms considered are neither stable to alternative specifications, nor separable in term s of the topological properties they entail. The lack of stabili ty is a cause of concern. We encourage the practitioners who em-ploy the simple sampling algorithms discussed in this paper to consider more variable schemes, for example, mixtures, i n order to obtain more robust p-values and statistics in gen-eral. The lack of separability was somewhat anticipated, as real world networks hardly present the variability profile o f a single pure type. We conclude by suggesting the assump-tion of  X  X ixtures of types X  as an alternative starting point for developing models and algorithms for network analysis. This paper includes and extends previous unpublished work in Airoldi (2005). The first author X  X  thinking about issues discussed in this paper has benefited greatly from discus-sions and collaborations with Stephen Fienberg, Jon Klein-berg, David Blei, Eric Xing, Bradley Malin, and Jeff Reminga. The authors also thank the anonymous reviewers for valu-able comments and suggestions.
 This work was partially supported by National Institutes of Health (NIH) under Grant 1 R01 AG023141-01, by the Office of Naval Research (ONR) under Dynamic Network Analysis (N00014-02-1-0973), the National Science Founda -tion (NSF) and the Department of Defense (DOD) under MKIDS (IIS0218466). The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either ex-pressed or implied, of the NIH, the ONR, the NSF, the DOD, or the U.S. government.
