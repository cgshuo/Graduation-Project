 University of Copenhagen whether a given grammar derives any terminal string with a given feature structure. It is known that the problem is decidable for LFG and PATR grammars if only acyclic feature structures are structures. This holds even for grammars that are off-line parsable.
 The universal generation problem for unifica tion grammars is the problem of determin-ing for an arbitrary grammar G and an arbitrary feature structure F whether there exists at least one sentence that G derives with F .If F is acyclic, Wedekind and Kaplan (2012) have shown that the problem is decidable for LFG (Kaplan and Bresnan 1982) and PATR (Shieber et al. 1983) grammars. They prove that the set of strings that a grammar relates to an acyclic feature structure can be described by a context-free grammar. Decidability of the problem then follows because the emptiness problem is decidable for context-free languages. For cyclic feature structures they demonstrated by example that the set of strings that a grammar relates to an input might not be context-free, but they did not further investigate the formal properties o f the languages that are in general related to cyclic structures.
 lem by reduction from the undecidable emptiness problem for the intersection of two context-free languages. We provide a proof for LFG-or PATR-style grammars that asso-ciate feature structures with trees derived in accordance with a context-free grammar. Our result also applies to other systems such as HPSG (Pollard and Sag 1994) whose formal devices are powerful enough to simulate , albeit indirectly, the effect of context-free derivation.
 grammar G defines a binary derivation relation  X  G between terminal strings and feature structures, as given in (1). (1)  X  G ( s , F ) iff G derives terminal string s with feature structure F The universal generation problem is then t he problem of deciding for an arbitrary unification grammar G and an arbitrary feature structure F whether { s |  X  G ( s , F ) } is empty or not. languages, we can, without loss of generality, assume that the context-free languages are -free. These languages can be described by grammars in Chomsky normal form, that is, by context-free grammars G =( N , T ,S, P ) with nonterminal vocabulary N ,terminal vocabulary T , and start symbol S where every rule in P is of the form A  X  BC with B , C  X  N ,or A  X  a with a  X  T .
 form two LFG grammars that both derive L ( G ) and that associate with each derivable terminal string feature structures (f-structu res) that provide slightly different encodings of the derivable string.
 1 string grammar String 1 ( G ) for G is an LFG grammar ( N , T ,S, P ) whoseruleset P includes for each rule A  X  BC in P a rule of the form (2a) and for each rule A  X  a in P a rule of the form (2b). (2) a. A  X  BC
A type 2 string grammar String 2 ( G ) for G is an LFG grammar ( N , T ,S, P ) whose rule set P includes a rule of the form (3a) for each A  X  BC in P and a rule of the form (3b) for each A  X  a in P . (3) a. A  X  BC and type 2 string grammar derivations. 1 The attributes L , R , B ,and E are mnemonic 534 for  X  X eft X ,  X  X ight X ,  X  X egin X , and  X  X nd X , respect ively. For later reference, we also depicted the constant root that we uniformly use to instantiate the  X  of a derivation that refers the minimal model of the f-description. (In Kaplan and Bresnan X  X  [1982] terminology, root corresponds to the f-structure variable associated with the c-structure root, usually notated by f 1 .) free skeleton and that for every string in L ( G ) , the f-structure for each string grammar encodes both the string itself and also the branching structure of a derivation in G that leads to that terminal string. The f-structures derived by the two types of grammars vary only slightly in the labels that they use to encode those properties. An f-structure of a type 2 grammar derivation for a giv en string shares the  X  X egin X  attribute ( B )with the f-structure of a corresponding type 1 grammar derivation, but it has distinct  X  X eft X ,  X  X ight X , and  X  X nd X  attributes ( L ', R ', E ').
 do not contain atomic values), the f-structure constraints of the string grammars do not actually filter the language of the context-free grammar. Thus G and its string grammars must have the same language L ( G )= L ( String 1 ( G ))= L ( String 2 ( G )) . By induction on the depth of the derivation trees it is also easy to see that the minimal solution of the That is, these grammars both encode thei r terminal strings in their respective ( root B ) to ( root E ) / ( root E ' ) paths.
 line of the proof idea. For the reduction, we have to construct for two arbitrary -free context-free languages L 1 and L 2 an LFG grammar G and an input structure F such that the set of terminal strings that G derives with F is empty if and only if the intersection of L 1 and L 2 is empty. Because every -free context-free language is derivable by a context-free grammar in Chomsky normal form, we can make the LFG grammar G by combining the productions of String 1 ( G 1 ) and String 2 ( G 2 ) , in Chomsky normal form. To avoid undesired interactions between the rules of the two string grammars, we assume that the sets of nonterminals of G 1 and G 2 are disjoint (this is without loss of generality because nonterminals can always be renamed).
 ciate with any c-structure derivation of a terminal string s 1 in G 1 and any c-structure derivation of a terminal string s 2 in G 2 f-structures that encode s 1 and s 2 as their respective ( root B ) values. By construction of the string grammars, the only paths that only if s 1 and s 2 are identical. G then assigns to a terminal string an f-structure with L ( G 1 )  X  L ( G 2 ) .
 would still record information on the structure of their derivation. Thus distinct strings proof requires that there be a single f-structure that is assigned to all strings s s with f-structures derived by the string grammars are folded up into one and the same cyclic
F thus has the following form. 2 (4)
F must contain cycles for all terminals in T 1  X  T 2 , so that it imposes no constraints on the strings that may appear in L ( G 1 )  X  L ( G 2 ) .
 tion to a derivation in G is depicted in Figure 2. As earlier, we include root for later use.
Obviously, if ( root E )=( root E ' ) holds in the unified f-structures of the string grammars, yields F . Otherwise, their unification results in a structure that only properly subsumes merged when the structures are unified. Thus G derives with F exactly the set of strings empty.
 Theorem { s |  X  536 Proof mars in Chomsky normal form. Without loss of generality, we can assume that N G =( N , T ,S, P ) with N = N consists of the rules of String 1 ( G 1 ) and String 2 ( G 2 ) and the following start rule. The functional contribution of this start rule to a derivation in G is depicted in Figure 2. derivation of a terminal string s with f-description FD in G .Byconstructionof G , s must F is the f-structure for FD .Notefirstthatalso G does not contain atomic values. Thus, FD cannot be unsatisfiable and must have an f-structure.
 follow from FD .From ( root E )=( root E ' ) and the instantiated annotations of the S rule, of FD .
 Now suppose s 1 = s 2 .Let FD 1 and FD 2 be the f-descriptions of the string grammars, annotations at S 1 and S 2 ,and FD = FD 1  X  FD 2 .Byconstructionof G ,theonlyterms shared by the deductive closures of FD 1 and FD 2 are the common subterms of ( root B s 1 ) and FD 2 ( root B s )=( root E ' ) would imply s = s 1 and s = s 2 , as we saw earlier. Because ( root E )=( root E ' ) cannot follow from FD either, and F cannot be the f-structure for FD .
 if L ( G 1 )  X  L ( G 2 )=  X  . Since the emptiness problem for the intersection of context-free languages is in general undecidable, the g eneration problem must be undecidable too.
 eration algorithm, at least if cyclic input structures are considered as legitimate inputs. e.g., Kaplan and Bresnan 1982; Johnson 1988; Jaeger, Francez, and Wintner 2005). Off-problem even for cyclic f-structures. But Wedekind and Kaplan (2012) have shown that off-line parsability is not necessary to guarantee that generation from acyclic structures is decidable, and the grammars in this proof demonstrate that it is not sufficient for cyclic structures.
 tion of the length of that string. This works for parsing because the size of the f-structure is bounded by the size of the c-structure, but it is insufficient for generation because it does not constrain the structural correspon dence between the c-and f-structure (see also
Dymetman 1991). A single constraint that guar antees decidability for both parsing and generation must not only bound the size of the f-structures for a terminal string by the length of the string, but it must also ensure, as we have learned from the proof herein, that the determination of the terminal strin gs for an f-structure can be achieved with finite control.
 Acknowledgments References
