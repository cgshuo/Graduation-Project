 An important subtask in sentiment analysis is sen-timent classification. Sentiment classification in-volves the identification of positive and negative opinions from a text segment at various levels of granularity including document-level , paragraph-level , sentence-level and phrase-level . This paper focuses on document-level sentiment classification.
There has been a substantial amount of work on document-level sentiment classification. In ear-ly pioneering work, Pang and Lee (2004) use a flat feature vector (e.g., a bag-of-words) to rep-resent the documents. A bag-of-words approach, however, cannot capture important information ob-tained from structural linguistic analysis of the doc-uments. More recently, there have been several ap-proaches which employ features based on deep lin-guistic analysis with encouraging results including Joshi and Penstein-Rose (2009) and Liu and Senef-f (2009). However, as they select features manually, these methods would require additional labor when ported to other languages and domains.

In this paper, we study and evaluate diverse lin-guistic structures encoded as convolution kernels for the document-level sentiment classification prob-lem, in order to utilize syntactic structures without defining explicit linguistic rules. While the applica-tion of kernel methods could seem intuitive for many tasks, it is non-trivial to apply convolution kernels to document-level sentiment classification: previous work has already shown that categorically using the entire syntactic structure of a single sentence would produce too many features for a convolution ker-nel (Zhang et al., 2006; Moschitti et al., 2008). We expect the situation to be worse for our task as we work with documents that tend to comprise dozens of sentences.

It is therefore necessary to choose appropriate substructures of a sentence as opposed to using the whole structure in order to effectively use convolu-tion kernels in our task. It has been observed that not every part of a document is equally informa-tive for identifying the polarity of the whole doc-ument (Yu and Hatzivassiloglou, 2003; Pang and Lee, 2004; Koppel and Schler, 2005; Ferguson et al., 2009): a film review often uses lengthy objective paragraphs to simply describe the plot. Such objec-tive portions do not contain the author X  X  opinion and are irrelevant with respect to the sentiment classifi-cation task. Indeed, separating objective sentences from subjective sentences in a document produces encouraging results (Yu and Hatzivassiloglou, 2003; Pang and Lee, 2004; Koppel and Schler, 2005; Fer-guson et al., 2009). Our research is inspired by these observations. Unlike in the previous work, however, we focus on syntactic substructures (rather than en-tire paragraphs or sentences) that contain subjective words.

More specifically, we use the terms in the lexi-con constructed from (Wilson et al., 2005) as the indicators to identify the substructures for the con-volution kernels, and extract different sub-structures according to these indicators for various types of parse trees (Section 3). An empirical evaluation on a widely used sentiment corpus shows an improve-ment of 1.45 point in accuracy over the baseline resulting from a combination of bag-of-words and high-impact parse features (Section 4). Our research builds on previous work in the field of sentiment classification and convolution kernel-s. For sentiment classification, the design of lexi-cal and syntactic features is an important first step. Several approaches propose feature-based learning algorithms for this problem. Pang and Lee (2004) and Dave et al. (2003) represent a document as a bag-of-words; Matsumoto et al., (2005) extract fre-quently occurring connected subtrees from depen-dency parsing; Joshi and Penstein-Rose (2009) use a transformation of dependency relation triples; Liu and Seneff (2009) extract adverb-adjective-noun re-lations from dependency parser output.

Previous research has convincingly demonstrat-ed a kernel X  X  ability to generate large feature set-s, which is useful to quickly model new and not well understood linguistic phenomena in machine learning, and has led to improvements in various NLP tasks, including relation extraction (Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2006; Nguyen et al., 2009), question answering (Moschitti and Quarteroni, 2008), seman-tic role labeling (Moschitti et al., 2008).
Convolution kernels have been used before in sen-timent analysis: Wiegand and Klakow (2010) use convolution kernels for opinion holder extraction, Johansson and Moschitti (2010) for opinion expres-sion detection and Agarwal et al. (2011) for sen-timent analysis of Twitter data. Wiegand and K-lakow (2010) use e.g. noun phrases as possible can-didate opinion holders, in our work we extract any minimal syntactic context containing a subjective word. Johansson and Moschitti (2010) and Agarwal et al. (2011) process sentences and tweets respec-tively. However, as these are considerably shorter than documents, their feature space is less complex, and pruning is not as pertinent. 3.1 Linguistic Representations We explore both sequence and convolution kernels to exploit information on surface and syntactic lev-els. For sequence kernels, we make use of lexical words with some syntactic information in the form of part-of-speech (POS) tags. More specifically, we define three types of sequences:  X  SW, a sequence of lexical words, e.g.: A tragic  X  SP, a sequence of POS tags, e.g.: DT JJ NN IN  X  SWP, a sequence of words and POS tags,
In addition, we experiment with constituency tree kernels (CON), and dependency tree kernels (D), which capture hierarchical constituency structure and labeled dependency relations between words, respectively. For dependency kernels, we test with word (DW), POS (DP), and combined word-and-POS settings (DWP), and similarly for simple se-quence kernels (SW, SP and SWP). We also use a vector kernel (VK) in a bag-of-words baseline. Fig-ure 1 shows the constituent and dependency struc-ture for the above sentence. 3.2 Settings As kernel-based algorithms inherently explore the whole feature space to weight the features, it is im-portant to choose appropriate substructures to re-move unnecessary features as much as possible.
Unfortunately, in our task there exist several cues indicating the polarity of the document, which are distributed in different sentences. To solve this prob-lem, we define the indicators in this task as subjec-tive words in a polarity lexicon (Wilson et al., 2005). For each polarity indicator, we define the  X  X cope X  (the minimal syntactic structure containing at least one subjective word) of each indicator for different representations as follows:
For a constituent tree, a node and its children correspond to a grammatical production. There-fore, considering the terminal node tragic in the con-stituent structure tree in Figure 1(a), we extract the subtree rooted at the grandparent of the terminal, see Figure 2(a). We also use the corresponding sequence of words in the subtree for the sequential kernel.
For a dependency tree, we only consider the sub-tree containing the lexical items that are directly connected to the subjective word. For instance, giv-en the node tragic in Figure 1(d), we will extract its direct parent waste integrated with dependency rela-tions and (possibly) POS, as in Figure 2(b).
We further add two background scopes , one be-ing subjective sentences (the sentences that contain subjective words), and the entire document. 4.1 Setup We carried out experiments on the movie review dataset (Pang and Lee, 2004), which consists of 1000 positive reviews and 1000 negative reviews. To obtain constituency trees, we parsed the docu-ment using the Stanford Parser (Klein and Man-ning, 2003). To obtain dependency trees, we passed the Stanford constituency trees through the Stanford constituency-to-dependency converter (de Marneffe and Manning, 2008).
 We exploited Subset Tree (SST) (Collins and Duffy, 2001) and Partial Tree (PT) kernels (Mos-chitti, 2006) for constituent and dependency parse trees 1 , respectively. A sequential kernel is applied for lexical sequences. Kernels were combined using plain (unweighted) summation. Corpus statistics are provided in Table 1.

We use a manually constructed polarity lexicon (Wilson et al., 2005), in which each entry is annotat-ed with its degree of subjectivity (strong, weak), as well as its sentiment polarity (positive, negative and neutral). We only take into account the subjective terms with the degree of strong subjectivity.
We consider two baselines:  X  VK : bag-of-words features using a vector ker- X  Rand : a number of randomly selected sub-All experiments were carried out using the SVM-Light-TK toolkit 2 with default parameter settings. All results reported are based on 10-fold cross vali-dation. 4.2 Results and Discussions Table 2 lists the results of the different kernel type combinations. The best performance is obtained by combining VK and DW kernels, gaining a signifi-cant improvement of 1.45 point in accuracy. As far as PT kernels are concerned, we find dependency trees with simple words (DW) outperform both de-pendency trees with POS (DP) and those with both words and POS (DWP). We conjecture that in this case, as syntactic information is already captured by Kernels Doc Sent Rand Sub VK 87.05 VK + SW 87.25 86.95 87.25 87.40 VK + SP 87.35 86.95 87.45 87.35 VK + SWP 87.30 87.45 87.30 88.15* VK + CON 87.45 87.65 87.45 88.30** VK + DW 87.35 87.50 87.30 88.50** VK + DP 87.75* 87.20 87.35 87.75 VK + DWP 87.70* 87.30 87.65 87.80* the dependency representation, POS tags can intro-duce little new information, and will add unneces-sary complexity. For example, given the substruc-ture (waste (amod (JJ (tragic)))) , the PT kernel will use both (waste (amod (JJ))) and (waste (amod (JJ (tragic)))) . We can see that the former is adding no value to the model, as the JJ tag could indicate ei-ther positive words (e.g. good ) or negative words (e.g. tragic ). In contrast, words are good indicators for sentiment polarity.

The results in Table 2 confirm two of our hy-potheses. Firstly, it clearly demonstrates the val-ue of incorporating syntactic information into the document-level sentiment classifier, as the tree k-ernels (CON and D*) generally outperforms vector and sequence kernels (VK and S*). More impor-tantly, it also shows the necessity of extracting ap-propriate substructures when using convolution ker-nels in our task: when using the dependency kernel (VK+DW), the result on lexicon guided substruc-tures (Sub) outperforms the results on document, sentence, or randomly selected substructures, with statistical significance (p &lt; 0.05). We studied the impact of syntactic information on document-level sentiment classification using con-volution kernels, and reduced the complexity of the kernels by extracting minimal high-impact substruc-tures, guided by a polarity lexicon. Experiments show that our method outperformed a bag-of-words baseline with a statistically significant gain of 1.45 absolute point in accuracy.

Our research focuses on identifying and using high-impact substructures for convolution kernels in document-level sentiment classification. We expect our method to be complementary with sophisticated methods used in state-of-the-art sentiment classifica-tion systems, which is to be explored in future work. The authors were supported by 863 State Key Project No. 2006AA010108, the EuroMatrixPlus F-P7 EU project (grant No 231720) and Science Foun-dation Ireland (Grant No. 07/CE/I1142). Part of the research was done while Zhaopeng Tu was visiting, and Yifan He was at the Centre for Next Generation Localisation (www.cngl.ie), School of Computing, Dublin City University. We thank the anonymous reviewers for their insightful comments. We are al-so grateful to Junhui Li for his helpful feedback.
