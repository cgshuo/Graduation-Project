 fi rst one is a population-based algorithm, the Differential Evolution (DE), 1. Introduction
Nowadays the optical networks are designed with the Wave-length Division Multiplexing (WDM) technology. This technique is able to exploit the huge bandwidth capability of optical networks. There are emerging communication applications that have high-bandwidth requirements. The aim of this technology is to divide the enormous transmission bandwidth of an optical fi ber (about 50 Tbps) into multiple communication channels (about 10 Gbps) compatible with the processing speed of the electronic devices. These channels are also known as lightpaths.

WDM uses wavelength routing to remedy the lack of wave-length reuse ( Mokhtar and Azizo  X  lu, 1998 ). A wavelength router ( Fig. 1 ) is an optical switch that is capable of routing a signal based on its input port and its wavelength. Furthermore, this kind of router may have the capability of changing the wavelength of the signal.

A problem comes up when it is necessary to interconnect a set of connection requests, this problem is called Routing and Wavelength Assignment problem (RWA problem). There are two different varieties of the RWA problem, depending on the demands: static-RWA and dynamic-RWA. With static connections, the entire set of requests is known in advance, so the problem is to set up all lightpaths trying to minimize the use of network resources. We will focus on static-RWA problem because at present time it is the most used one. As an example of static-RWA problem, in WANs (Wide Area Networks) this problem appears because they are oriented to precontracted services ( Hamad and Kamal, 2002 ). The static-RWA problem is an NP-complete problem, therefore it is very common to use heuristic techniques to solve it ( Saha and Sengupta, 2005 ; Mukherjee et al., 1996 ).

To tackle the static-RWA problem, we have decided to use two different Multiobjective Evolutionary Algorithms (MOEAs). In general, there are two types of evolutionary algorithms: population-based and trajectory-based. In this paper we have chosen one of the each type.

As population-based algorithm, we have developed the Differ-ential Evolution (DE) algorithm ( Storn and Price, 1997 ), that basically adds the weighted difference between two population vectors to a third vector. We have added the concept of Pareto Tournament (DEPT) to solve this multiobjective problem.
As trajectory-based algorithm, we have implemented the Vari-able Neighborhood Search (VNS) ( Hansen and Mladenovic, 2001 ).
This algorithm tries to escape from local optima trap by changing the neighborhood structure. We have modi fi ed this algorithm to adapt it to a multiobjective context too, we will refer to it as MO-VNS. rithms by using two real-world topologies: NSF network (USA) and NTT network (Japan); and six sets of source-destination pairs for each topology, a total of twelve instances.
 compared them with the standard Fast Non-Dominated Genetic
Algorithm (NSGA-II) ( Deb et al., 2000 ), one of the most known standard algorithms nowadays. We have also made a comparison with other approaches published in the literature. First of all, we have compared our MOEAs with typical heuristics in the Tele-communication fi eld. In the second comparison we have com-pared them with different varieties of Multiobjective Ant Colony Optimization algorithms.
 introduces the related work. Section 3 describes the RWA problem in a formal way. In Section 4 we explain in detail the DEPT and the
MO-VNS algorithms, and also the NSGA-II. The experiments to adjust the MOEAs are presented in Section 5 ,aswellasa comparison among them. The comparisons with other approaches published in the literature are left for Section 6 . Finally, in Section 7 we present conclusions and future work. 2. Related work nections in a recon fi gurable optical network using Wavelength Division Multiplexing were Ramaswami and Sivarajan (1995) .
They solved the static-RWA problem by using mixed-integer linear programming. In order to tackle the optimization problem, they suggest dividing it into two subproblems: Routing , and Wavelength
Assignment  X  solving each one separately. Both subproblems have been tackled in the literature, a comprehensive review of various proposed algorithms can be found in Zang and Jue (2000) . the routing subproblem in the literature. The Fixed Routing ( Li and
Somani, 1999 ) heuristics calculate a single permanent route for each demand and determine routes using a least cost algorithm. In Chan and Yum (1994) and Masayuki et al. (1997) a modi fi cation of
Fixed Routing heuristics is proposed, the main difference is that this new method ( Fixed-alternate Routing ) stores more than one fi xed route. In Ramamurthy and Mukherjee (2002) , the authors propose the Adaptive routing heuristics, which offer a trade-off between quality of network information and overhead. Finally,
Varela and Sinclair (1999) suggest the use of Ant Colony Optimiza-tion (ACO) for solving the routing subproblem.
 wavelength assignment subproblem. In Chlamtac et al. (1989) ,
Birman and Kershenbaum (1995) , and Jeong and Ayanoglu (1996) we fi nd classical heuristics for solving this subproblem: Random , First-Fit , Least-Used , Most-Used , Min-Product , and Least Loaded .A MAX-SUM heuristics is proposed in Barry and
Subramaniam (1997) for solving this telecommunication subpro-blem. Other algorithms, such as Relative Capacity Loss , Wavelength Reservation , and Protecting Threshold are proposed in Karasan and Ayanoglu (1998) , Subramaniam and Barry (1997) , and Zhang and Qiao (1998) .
 solving the static RWA problem: Maximum Empty Channel Routing (SRW3) and Combined Path Algorithm (SRW4).
 authors propose the use of metaheuristics instead of traditional methods for solving this problem. The Tabu Search algorithm is applied in Morley and Grover (2001) , Grosso et al. (2001) , Yan et al. (2001) , and Charbonneau and Vokkarane (2010) for tackling the
RWA problem. Other authors solve this optical optimization problem by using Simulated Annealing ( Mukherjee et al., 1996 ;
Rodriguez-Dagnino et al., 1999 ); as well as Genetic Algorithm ( Inkret et al., 1998 ; Ali et al., 1999 ; Shiann-Tsong et al., 2001 ;
Zong and Ramamurthy, 2001 ; Saha and Sengupta, 2005 ; Banerjee et al., 2004 ). A comparative study between Simulated Annealing and Genetic Algorithm is presented by Thompson and Bilbro (2000) .
 approach for solving the lightpath scheduling problem, which implies solving the RWA problem. For solving the RWA problem, the authors use Fixed-alternate routing and First-fi t wavelength assignment heuristics.
 consider the RWA problem as a monoobjective optimization problem, solving the routing subproblem and the wavelength assignment subproblem separately. However, the RWA problem has been tackled as a Multiobjective Optimization problem, solving both subproblems jointly. In this way, using Multiobjective Optimization, we are looking for a solution for which each objective has been optimized to the extent that if we try to optimize it any further, then the other objective will suffer as a result.

In Insfr X n et al. (2006) and Arteta et al. (2007) , several multi-objective varieties of Ant Colony Optimization algorithms are suggested for optimizing the number of hops and the number of wavelengths conversions simultaneously. Furthermore, Arteta et al. (2007) present a comparison among many varieties of MOACOs and typical heuristics in Telecommunication fi eld. A hybrid evolutionary computation approach is applied in Leesutthipornchai et al. (2010) for maximizing the number of traf fi c demands to be served and minimizing the number of wavelength channels to be assigned.

In this work, we propose two multiobjective approaches for solving the Static-RWA problem: the Differential Evolution with Pareto Tournaments (DEPT) and the Multiobjective Variable Neigh-borhood Search (MO-VNS). A very preliminary version of the DEPT algorithm was presented in the proceedings of the IEEE Congress on Evolutionary Computation (CEC 2010) ( Rubio-Largo et al., 2010 ). However, in this manuscript, the background  X  including key concepts and related work  X  has been extended. The descrip-tion of the algorithms has been signi fi cantly improved through a more detailed explanation. In the experimental study, a compar-ison with the standard Fast Non-Dominated Sorting Genetic Algorithm (NSGA-II) is presented, as well as a statistical analysis of the results. Finally, a more detailed comparison with other approaches published in the literature is also shown. 3. Static-RWA problem
In this section we present the problem formulation, as well as an illustrative example of the RWA problem. 3.1. Problem formulation In this paper, an optical network is modeled as a direct graph G  X  X  V , E , C  X  , where V is the set of nodes, E is the set of links between nodes and C is the set of available wavelengths for each optical link in E .Inthisway,theRWAproblemmaybestatedasa Multiobjective Optimization Problem (MOOP) ( Deb, 2001 ), search-ing the best solution L U that simultaneously minimizes the Number of Hops ( y 1 ) and the Number of Wavelength Conversions ( y Minimize y 1  X   X  subject to  X  where  X  1if i  X  i , j  X   X  E : Optical link from node i to node j ). c ij  X  C : Number of channels or different wavelengths at link ( i , j ). u  X  X  s u , d u  X  : Unicast request u with source node s u destination node d u , where s u , d u  X  V .

U : Set of unicast requests. Note that j U j is the cardinality of U . l u : Set of links between a source node ( s u ) and destination node ( d u ); with the corresponding wavelength assignment at each physical link ( i , j ).

L U : Set of lightpaths established considering the set of U requests.
 Note that we have to ful fi ll the wavelength con fl ict constraint . Two different unicast transmissions must be allocated with different wavelengths when they are transmitted through the same optical link ( i , j ). 3.2. Example of the static-RWA problem
An example helps to understand the formulation problem and the objective functions of the static-RWA problem.

Statement : Given the optical network topology of Fig. 2 , sup-pose the following set of demands and number of different wavelengths at link U  X f X  X  1 , 3  X  X  2 , 5  X  X  3 , 4  X  X  1 , 5  X g c ij  X  2
As we can see in Fig. 2 , the demands (1,3), (2,5), and (3,4) do not present any wavelength switching; however, the demand (1,5) pre-sents one wavelength conversion in node 3. Therefore, the solution has eight hops ( y 1  X  7), and one wavelength conversion ( y
In Fig. 2 , we present all necessary calculations to obtain the value of the two objective functions, number of hops ( y 1 number of wavelength conversions ( y 2 ). The solution presented ( Fig. 2 ) for this speci fi c topology could not be the best one; this example only tries to help to understand the problem formulation and the objective functions. 4. Description of the multiobjective evolutionary algorithms
Evolutionary Algorithms (MOEAs) used. First of all, we detail the structure of the individuals. Subsequently, we show a description of each algorithm (DEPT, MO-VNS and NSGA-II). 4.1. Individual encoding how the problem is structured in the algorithms, in Fig. 3 , the individual encoding is shown.
 ( Yen, 2003 ) with the aim of obtaining the k -shortest paths for each demand ( s u , d u ) of the set  X  in Fig. 3 we have supposed k  X  2. Then, for each shortest path, we generate all possible combinations with the available wavelengths of light ( c ij ). In this way, if the shortest path consists of n hops, and we consider c ij available wavelengths (  X  ) per link, we will generate c ij n possible lightpaths. supposing c ij  X  2, we generate 2 2 possible lightpaths: 2 2  X   X  1  X  4  X   X  2  X  5, 2  X   X  2  X  4  X   X  1  X  5, and 2  X   X  2 of size j U j , in which each position corresponds with a demand u  X  U . In order to generate a random individual, for each demand u , we will store a random pointer to one of the feasible lightpaths from the list of possible lightpaths between s u and d u in the chromosome. 4.2. Differential Evolution with pareto tournaments for global optimization created by Storn and Price (1997) . advantage of the differences among various randomly selected individuals of the population.
 classical DE, by introducing the Pareto Tournaments concept (DEPT).

Algorithm 1. DEPT (Randtobest/1/Bin, s  X  #Bin3). algorithm. First of all, we generate randomly PopSize individuals (population P ) by using the procedure explained in the previous subsection (Section 4.1 ). Once done, we have to evaluate P , that is to say, we calculate for every individual a scalar value (a MultiObjective Fitness, MOFitness), which is used in the Pareto Tournaments. To calculate this MOFitness, the concept of dominance is applied. So, given two individuals ind 1 and ind can say that ind 1 dominates ind 2 ( ind 1  X  ind 2 ) if and only if ind not worse for all objective functions ( y 1 and y 2 ) than ind wholly better for at least one of them. The MOFitness must be minimized, so, to calculate it we use Eq. (3) .
 MOFitness  X  ind  X  X j isDominated  X  ind  X j n PopSize  X j Dominates  X  ind  X j
In Eq. (3) , isDominated is the set of individuals that dominates the individual ind and Dominates is the set of individuals which is dominated by ind ; however, we use the cardinality of these sets. Therefore, the MOFitness of each individual is obtained consider-ing the quality of each individual with regard to the remaining individuals from the population. For further information about this equation, refer to Weicker et al. (2003) .
 While the established time has not expired, we generate PopSize trial individuals ( x trial ) by using a reference target indivi-
To generate these trial individuals, we have used the DE schemas proposed in Storn and Price (1997) and a crossover probability ( cr ) to determine the probability of crossover. In Table 1 , we present a classi fi cation using the notation DE where, x speci fi es the population individual to be mutated (best or random), y corresponds to the number of different vectors considered for perturbation of x (normally 1 or 2), and z represents the type of crossover being used (bin: binomial or exp: exponen-tial). In Table 1 , the individual x best is randomly chosen from the set of non-dominated individuals, and the individuals denoted as x are individuals selected randomly from the population P .
After generating a x trial , we calculate its multiobjective value according to Eq. (3) . To decide if this x trial will replace the target individual ( x target ), we have incorporated the Pareto Tourna-ments concept ( Weicker et al., 2003 ). The main idea is to use the value of multiobjective fi tness to decide which individual is better, in other words, we choose the individual with minimum value of multiobjective fi tness. In the event of tie, we create an auxiliary population P  X  , formed by the individual x target , the individual x and the rest of individuals of P that belong to the same Pareto front than the individual x trial , so the maximum size of P  X  will be PopSize individuals. Then, we calculate the crowding distance of x x trial to choose the best one (the individual with maximum crowding distance). This method for avoiding tie is not presented in Weicker et al. (2003) , we have incorporated it with the aim of spreading the fi nal Pareto front.
 On the whole, the DE algorithm has been widely applied to MOOPs. Madavan (2002) proposes the Pareto-Based Differential Evolution (PBDE) approach. The PBDE algorithm modi fi es the selection procedure in the basic DE algorithm by incorporating the key elements of the Fast Non-dominated Sorting Genetic Algorithm (NSGA-II, Deb et al., 2000 ): the non-dominated sorting and ranking selection procedure. In the Pareto Differential Evolu-tion (PDE) ( Abbass et al., 2001 ) and Differential Evolution for Multiobjective Optimization (DEMO) ( Robic and Filipic, 2005 ), only the concept of Pareto dominance is used to compare indivi-duals, keeping only the non-dominated solutions in the popula-tion. Like the PBDE, the Multiobjective Differential Evolution (MODE) ( Xue et al., 2003 ) uses the ranking assignment and the crowding distance from the well-known NSGA-II. Although similar to other multiobjective versions of DE, in the Differential Evolution with Pareto Tournaments (DEPT) each individual receives a scalar value (MOFitness) based on the number of individuals that dominates and the number of individuals by which it is domi-nated. By using this scalar value and the Pareto Tournament concept, we can decide between the candidate solution and the parent solution, keeping in the population the individual which improves the fi nal Pareto front. This Pareto dominance based tournament selection is similar to the selection used in the Niched-Pareto Genetic Algorithm (NPGA) ( Horn et al., 1994 ). To sum up, the DEPT algorithm requires minimal modi fi cations of the original DE to adapt it to the multiobjective domain. 4.3. Multiobjective Variable Neighborhood Search
The Variable Neighborhood Search (VNS) algorithm is a trajectory-based algorithm created by Hansen and Mladenovic (2001) .
 Algorithm 2. MO-VNS ( n max  X  6  X  . 1: ParetoFront  X   X  2: while not timeLimit do 3: S  X  GenerateIndividual() 4: if isNotDominatedByAnyParetoFrontSolution( S ) then 5: ParetoFront  X  AddIndividual( S ) 6: ParetoFront  X  RemoveIndividualsDominatedBy( S ) 7: end if 8: n  X  1 9: while n o n max do 10: f  X  n n 15 % 11: for d  X  0to Number _ of _ Demands do 12: S  X  d  X  f* S  X  d 13: end for 14: S  X   X  LocalSearch( n , S  X  ) 15: if isNotDominatedByAnyParetoFrontSolution( S  X  ) then 16: ParetoFront  X  AddIndividual( S  X  ) 17: ParetoFront  X  RemoveIndividualsDominatedBy( S  X  ) 18: end if 19: if S  X   X  S then 20: S  X  S  X  21: n  X  1 22: else 23: n  X  n  X  1 24: end if 25: end while 26: end while
It starts from an initial individual, and performs many changes of neighborhood within a local search. When the search does not move forward, the algorithm increases the size of the neighbor-hood ( n ).

In this work, we have adapted this evolutionary algorithm to a multiobjective context, it also has the peculiarity that, unlike the original VNS algorithm, it can fi nd more than one solution per run. In Algorithm 2 , we present a detailed pseudocode of the MO-VNS.
Due to the VNS is a trajectory-based algorithm, it is dif understand how it returns a Pareto front, in our multiobjective version we check if a generated individual will be included in the
ParetoFront ,so fi rst of all, we initialized it as empty. While the established time has not expired, we generate an initial individual
S by using the same procedure explained in Section 4.1 ; after that we check whether this new solution dominates all the non-dominated solutions of the ParetoFront , in that case, we add it and we remove the individuals which are dominated by S . lished the n max with 6 1 , that is to say, this parameter ranges between 1 and 6. So depending on the degree, the mutation probability varies from 15% ( n  X  1) to 90% ( n  X  6). After mutating, in order to improve the quality of the mutated individual ( S apply to it a LocalSearch . In the LocalSearch procedure we try to improve several positions of the chromosome by checking n random paths from the list of possible lightpaths (see Fig. 3 ). Once we have the new individual S  X  , we check whether it must belong to the ParetoFront or not.
 replace the individual S with the individual S  X  and we establish the size of neighborhood as minimum value ( n  X  1); otherwise, we increase the value of n . Finally, if n does not reach the maximum value ( n max ), we repeat the same procedure detailed before; otherwise we generate a new random individual S .

Algorithm 3. NSGA-II. 4.4. Fast Non-dominated Sorting Genetic Algorithm a population-based algorithm created by Deb et al. (2000) . sorting procedure, an elitist strategy, and the explicit goal of preserving spread on the non-dominated front. In Algorithm 3 , we present an outline of the NSGA-II.
 population Q ) from a parent population P by applying general genetic operators, such as crossover ( cr ) and mutation ( f ). In this algorithm, both populations ( P and Q ) are mixed into a new population R (line 4 in Algorithm 3). Then, the new population R is sorted into categories or ranks according to their relationship of dominance (line 5). Finally, the best individuals are preserved to create a new parent population ( P ) for the next generation. To do that, we start to fi ll the new population with the individuals that belong to the best Pareto front (rank 1), then with the individuals that belong to the second best Pareto front (rank 2), and so on (lines 8  X  11). In case the number of individuals in a front exceeds
PopSize , then, we sort this front by crowding distance, and new population with those individuals with better crowding distance value (lines 12  X  13).
 has been designed using the same methodology as we explained in Section 4.1 . For further information about this algorithm, please refer to Deb et al. (2000) . 5. Experimental results we start explaining the methodology to carry out these experi-ments and the data sets. Later, we show the parameters adjust-ment for the DEPT, MO-VNS, and NSGA-II algorithms. Finally, we present a direct comparison among the different MOEAs using the Hypervolume concept ( Zitzler and Thiele, 1998 ) and the Coverage
Relation ( A  X  B )( Zitzler et al., 2000 ). 5.1. Methodology two real-world network topologies. The fi rst one matches with the
NSF network (USA) and the second one with the NTT network (Japan). Furthermore, we have six different sets of demands for each topology, a total of 12 different data sets (see Fig. 4 ). Both topologies were obtained from Pinto and Bar X n (2005) and Schaerer and Bar X n (2003) respectively.
 independent runs. With the purpose of ensuring a statistical relevance, we have also performed a statistical analysis using
ANOVA test; in this way, we are allowed to say whether the parameter tuning of a MOEA was statistically relevant with a con fi dence level of 95% ( p -value  X  0.05) . To compare the different values of each parameter and also to compare among the different
MOEAs, we have used the Hypervolume concept ( Zitzler and Thiele, 1998 ). To calculate the Hypervolume the use of two reference points is required, r min  X  x min , y min  X  and r max  X  x number of hops ( y 1 ) and y is the number of wavelength switching ( y 2 ). In Table 2 , we show the different reference points for each test instance.
 performing several experiments, obtaining the worst value for both objective functions ( x worst and y worst ) as a result. In order to calculate x max and y max we have that an algorithm can obtain the point (0,0) in its Pareto front. The main aim is to ensure that these points ( r min and r max reached by any MOEA. To calculate the Hypervolume we normalize solutions of the Pareto front between [0,1].
 set (see Table 2 ). The runtime for each data set has been chosen taking into account the average time that the algorithms spend to perform 100 generations.
 (2.8 GHz) computer with 1 GB of RAM. The algorithms were compiled using the compiler gcc with no optimization options.
In Table 2 we also present a short-name that we use in the tables of the experiments.
 to be explained. In every cell of each table, we present the average value of Hypervolume (in percentage) obtained in 30 independent runs, as well as standard deviation (in the subindex). The notation is as follows: X % std .

We have a grey color to mark the selected parameter in each experiment. In order to make the decision of choosing the best value in each case, we have marked in bold the maximum value of Hypervolume in each row, in this way, the parameter that has major number of Hypervolumes marked in bold will be selected. 5.2. Adjusting DEPT algorithm
First of all, to adjust the DEPT algorithm we need to explain in detail the parameters. The k-shortest paths ( k ) indicate the number of shortest paths used for generating the list of possible lightpaths (see Fig. 3 ). The population size ( p ) is the number of individuals that is composed of the population ( P ) of the algorithm. The crossover probability ( cr ) allows for a new individual forma-tion. The mutation factor ( f ) indicates the amount of mutation. Finally, the DE schema ( s ) is in charge of generating the x individuals (see Table 1 ).
 The order of the experiments to adjust the parameters of the DEPT algorithm was selected taking into account the in fl each parameter in the algorithm. The default parameters are k  X  20, p  X  50, cr  X  90 % , f  X  80 % , and s  X  Rand = 1 =
In the fi rst experiment ( k-shortest path ) we have used the following values for k : 10, 15, 20, 25, and 30. But once done, we noticed that the best value was k  X  10; therefore, we decided to probe two lower values: 2 and 5.

Analyzing the results shown in Table 3 (a), we notice that k  X  5 and k  X  10 obtain equal number of maximum Hypervolumes; however, due to the fact that NTT topology is more complex, we decide to establish k  X  10 because the algorithm performs better using k  X  10 than using k  X  5.

The second parameter is the population size ( p ). To proceed with this experiment, we initialized and fi xed the value of k to 10 (obtained from the previous experiment), and the other para-meters as default.

We have carried out this experiment using the following values for p : 5, 10, 25, 50, 75, and 100.
 In Table 3 (b), we can see that p  X  25 obtains higher values of Hypervolume in all data sets. Thus, there is no doubt that 25 individuals is the most suitable population size.
 The crossover probability ( cr ) is the third parameter to adjust. The value of this parameter was established as 90%, according to the authors of the DE algorithm. In Storn and Price (1997) , they af fi rm that the use of this value is normally the best in different problems. However, for this speci fi c problem (static-RWA) this value is quite high. According to the previous experiments, the parameters k and p were established as 10 and 25, respectively; and the other ones as default.

To perform the experiment we use the next values of cr : 10%, 20%, 50%, 80%, and 90%. As we can see in Table 3 (c), the value which obtains higher number of maximum hypervolumes is 20%. In this way, we establish a crossover probability of 20%. According to Price and Storn , a low value of crossover fosters the search along the coordinate axes, which seems to be the best option for the RWA problem.

The next experiment tries to fi nd the most adequate value for the mutation factor ( f ). The experiment was carried out using the following values for f : 10%, 20%, 50%, 80%, and 90%. In this experiment the previously adjusted parameters were established with the best value found, and the rest of the parameters as default.
As it is shown in Table 3 (d), the best value for f must be set as 50%, because using this value of mutation factor, the DEPT algorithm obtains higher values of Hypervolumes in almost all data sets. In this case, the mutation factor is near to the value advised in the DE web page ( Price and Storn ).

Finally, the last parameter is the DE schema ( s ). In this particular experiment we have used the schemas proposed by the authors (see Table 1 ).

We can observe in Table 3 (e), that the Exponential crossover schema is absolutely not suitable for the static-RWA problem, because the DEPT algorithm obtains the lower values of Hypervo-lume by using them in all data sets.
 achieves the higher number of maximum hypervolumes. So, we can conclude that the best schema found is the Best/1/Bin schema. meters of the DEPT algorithm. To sum up, k  X  10, p  X  25, cr  X  20 , f  X  50 % , and the s  X  Best = 1 = Binomial .
 has been performed. We consider here a con fi dence level of 95% (i.e., signi fi cance level of 5% or p -value under 0.05), which means that the differences are unlikely to have occurred by chance with a probability of 95%. In Table 4 , we can observe that the differences of Hypervolume when we use distinct values for each DEPT parameter have been found signi fi cant in almost all the cases. 5.3. Adjusting MO-VNS algorithm
The MO-VNS algorithm has not any speci fi c parameter for adjusting, but we have to run the algorithm with the aim of comparing it with the DEPT and with the NSGA-II.

In this algorithm we have selected the same value of k as we used for the DEPT algorithm, k  X  10.

In Table 5 we can see the results achieved by the MO-VNS, which are obtained by using the methodology explained before. In this subsection, it is not necessary for an ANOVA analysis because the MO-VNS does not have a parameter tunning. 5.4. Adjusting NSGA-II algorithm
The parameters of the NSGA-II are k-shortest path ( k ), popula-tion size ( p ) of populations P and Q , the crossover schema and crossover probability (used to generate new individuals), the selection probability (probability of selecting between two parents in the crossover), and the mutation probability ( f ).
Like in the other MOEAs (DEPT and MO-VNS), in the NSGA-II algorithm we use k  X  10. Furthermore, we have used a single-point crossover schema (SPX), as it is used in Deb et al. (2000) . So, we the selection probability ( s ), and the mutation probability ( f ). The default values for cr , s , and f are 60%, 50%, and 10%, respectively.
The fi rst parameter to adjust is the population size ( p ). In this way, we have tested the same values of p as in the DEPT experiments: 5, 10, 25, 50, 75, and 100 individuals.
 As we may observe in Table 6 (a), like the DEPT algorithm, the NSGA-II obtains the highest values of hypervolume in almost all data sets with 25 individuals. Therefore, we establish p to 25. The second parameter to adjust is the crossover probability ( cr ). To carry out this experiment we have used the following values for cr : 50%, 60%, 70%, 80%, 90%, and 100%.

As is shown in Table 6 (b), the most promising crossover probability seems to be 70%. However, in almost all data sets, the algorithm obtains quite similar values of hypervolume with any of the values. We decide to establish a crossover probability of 70%, because it is the value that obtains higher hypervolumes in almost all cases.

In the third experiment, we have adjusted the selection prob-ability . This parameter is used in the binary tournaments to decide which individual is the winner of the tournament. The values tested for this parameter are 10%, 25%, 50%, 75%, and 90%. As we can see in Table 6 (c), the best value found is 75%.

Finally, the last parameter to adjust is the mutation probability ( f ). The experimental values for the parameter f are the next: 5%, 10%, 25%, 50%, 75%, and 90%.

If we observe Table 6 (d), we can see that the best value for the parameter f is 10%. Furthermore, we have also noticed that if the probability of mutation is high, then the NSGA-II algorithm obtains worse values of hypervolume.

After adjusting the NSGA-II parameters, the best con fi guration of the NSGA-II algorithm, for this particular problem, is the following: k  X  10, p  X  25, crossover schema  X  SPX , cr  X  70 s  X  75 % , and f  X  10 % .

For the NSGA-II experiments, we have also performed a statistical analysis using the ANOVA test. Similar to the DEPT experiments we consider a con fi dence level of 95%. In Table 7 ,we show the results obtained with this test, using the distinct values for each NSGA-II parameter. In this case, we can notice that the parameter with less signi fi cant differences is the crossover probability ( cr ). In the other parameters, the differences of hypervolume have been found signi fi cant in almost all the cases. 5.5. Comparison among MOEAs
In this subsection we present a comparison among the three proposed MOEAs, which are the Differential Evolution with Pareto Tournaments (DEPT) algorithm, the Multiobjective Variable Neigh-borhood Search (MO-VNS) algorithm, and the Fast Non-dominated Sorting Genetic Algorithm (NSGA-II).
 con fi guration obtained in the parameter tuning (see Sections 5.2 , 5.3 , and 5.4 ).
 indicator. As is shown in Table 8 , the DEPT algorithm achieves in general, better results than the other two MOEAs.

We have also performed a direct comparison among the different MOEAs. This comparison has been done by using the Coverage Relation ( Zitzler et al., 2000 ). In Table 9 , each cell gives the fraction of Non-Dominated solutions evolved by an algorithm B, which is covered by the Non-Dominated solutions achieved by an algorithm A (in average). The last column comprises the mean value for each row.
 As we can see in Table 9 , the DEPT solutions cover 95.83% of the MO-VNS solutions and 90.97% of the NSGA-II. The MO-VNS only covers 44.44% and 50.69% of the DEPT and NSGA-II, respectively. Finally, the NSGA-II solutions cover 63.89% of the DEPT solutions and 88.89% of the MO-VNS solutions. In Fig. 5 , we present the Pareto fronts obtained by the algorithms DEPT, MO-VNS, and NSGA-II in the more complex data sets (NSF3, NSF5, NSF6, NTT2, NTT3, and NTT5) with the aim of illustrating the coverage relation among the approaches.

We can conclude that the DEPT algorithm overcomes the results obtained by the NSGA-II on an average. However, it seems that the trajectory-based algorithm (MO-VNS) achieves worse results than the population-based algorithms (DEPT and NSGA-II). 6. Comparison with other works In this section we present a comparison with other authors. Arteta et al. (2007) make a comparison between typical heuristics in telecommunication fi eld and different varieties of Multiobjec-tive Ant Colony Optimization (MOACO) algorithms for solving the static-RWA problem.

On one hand, the typical heuristics proposed in Arteta et al. (2007) are 3SPFF (3-Shortest Path routing, First-Fit wavelength assignment), 3SPLU (3-Shortest Path routing, Least-Used wave-length assignment), 3SPMU (3-Shortest Path routing, Most-Used wavelength assignment), 3SPRR (3-Shortest Path routing, Random wavelength assignment), SPFF (Shortest Path Dijkstra routing, First-Fit wavelength assignment), SPLU (Shortest Path Dijkstra routing, Least-Used wavelength assignment), SPMU (Shortest Path Dijkstra routing, Most-Used wavelength assignment), and SPRR (Shortest Path Dijkstra routing, Random wavelength assignment).
On the other hand, the different varieties of MOACOs in Insfr X n et al. (2006) and Arteta et al. (2007) are BIANT (Bicriterion Ant), COMP (COMPETants), MOAQ (Multiple Objective Ant Q Algorithm), MOACS (Multi-Objective Ant Colony System), M3AS (Multiobjec-tive Max-Min Ant System), MAS (Multiobjective Ant System), PACO (Pareto Ant Colony Optimization), and MOA (Multiobjective Omicron ACO).

With the aim of demonstrating the goodness of our Multi-objective metaheuristics, we have made two isolated comparisons: The fi rst one between our MOEAs (DEPT and MO-VNS) and the typical heuristics ( Arteta et al., 2007 ). In the second one, we have made a comparison with the MOACOs proposed in Insfr X n et al. (2006) and Arteta et al. (2007) .

In Arteta et al. (2007) , the comparison is carried out using only the NTT topology and the following sets of demands: NTT2, NTT3, NTT4, and NTT5; so, in our comparison we have used the same topology and sets of demands. Unfortunately, the authors do not provide the necessary data to make a comparison with them using their proposed metrics. However, for each set of demands, they provide the best Pareto front obtained by the best MOACO and by the best typical heuristics. In this way, we can compare with them using the Hypervolume and the Coverage Relation . To calculate the hypervolume of the data sets, we have used the reference points shown in Table 2 . To be fair with the other authors, our stop criterion was established for 100 generations. 6.1. Comparison with typical heuristics
The typical heuristics tackle the static-RWA problem dividing it up into two subproblems: on one hand solving the wavelength assignation, and on the other hand minimizing the number of hops.

For solving the wavelength assignment subproblem, the authors propose the following heuristics:
Random . The random wavelength assignment algorithm chooses one of the free available wavelengths on all links randomly, with uniform distributions, to establish a connection.

First-Fit (FF) . This algorithm assumes that the wavelengths are arbitrarily ordered. The fi rst-fi t algorithm checks the status of the wavelengths sequentially and chooses the fi rst available wavelength to establish a connection.

Most-Used (MU) . The free wavelengths that are used on the greatest number of links in the network are chosen fi rst to establish a connection.

Least-Used (LU) . The free wavelength that is used on the least number of links in the network is chosen to establish a connection.

To minimize the number of hops, they make use of the following techniques:
Shortest Path (SP) Dijkstra . This algorithm fi nds the shortest route from a given source to a destination in a graph. The route is a path whose cost is the least from a given source to the destination.
 that obtains better results is the 3SPLU; thus, in the fi compare 3SPLU with our approaches. In Table 10 (a), we can see the values of Hypervolume obtained by 3SPLU, DEPT, and MO-VNS.
We may observe that the value of Hypervolume achieved by 3SPLU is 62.96% whereas our MOEAs obtain 70.74% and 70.70%.
In Fig. 6 (a), we can see that the Pareto front obtained by our approaches clearly dominates the Pareto front obtained by 3SPLU. In Table 11 (a), it is con fi rmed that our algorithms cover 100% of the
Pareto front obtained by 3SPLU, and the heuristic 3SPLU covers 0% of the surface of the best fronts obtained by DEPT and MO-VNS algorithms.
 that the values of Hypervolume obtained by 3SPLU, DEPT, and
MO-VNS are similar; however, our MOEAs obtain slightly higher values. We can check in Fig. 6 (b) that the best Pareto front obtained by 3SPLU is dominated by the fronts achieved by our approaches. The coverage relation shown in Table 11 (b), indicates that the front of the heuristics 3SPLU is absolutely covered by the fronts of our approaches.
 the typical heuristics (3SPLU, 3SPRR, SPLU, and SPRR) and our
MOEAs (DEPT and MO-VNS) obtain the same results with this set of demands. If we focus on Table 10 (c), we can see that all of them obtain 70.87% of Hypervolume. The Pareto front obtained by them is also the same. This front is formed with only one point: (67,0).
For this reason, it is not necessary for a graphical representation or a study of the Coverage Relation.

Table 10 (d), the 3SPLU obtains a Hypervolume value of 66.81%, while the algorithms DEPT and MO-VNS reach a value of 69.42% and 68.79%, respectively. However, we cannot ensure that the values of Hypervolume obtained by our algorithms are better than the Hypervolume obtained by the heuristic 3SPLU. Note that, if we focus on Fig. 6 (c) we can see that the Pareto front obtained by 3SPLU is neither covered by any front of DEPT nor MO-VNS.
In Table 11 (c) we can check that there is a tie between our metaheuristics and the heuristic 3SPLU for this particular set of demands.
 than or equal to the best typical heuristics proposed in Arteta et al. (2007) . In this way, we can conclude that our algorithms overcome all typical heuristics (3SPFF, 3SPLU, 3SPMU, 3SPRR, SPFF, SPLU, SPMU, and SPRR) proposed in Arteta et al. (2007) .
 6.2. Comparison with MOACOs
Ant Colony Optimization (ACO) is a metaheuristic inspired by the foraging behavior of ant colonies. The different MOACO algorithms implemented in Insfr X n et al. (2006) and Arteta et al. (2007) are summarized next:
Multiple Objective Ant Q Algorithm (MOAQ) . This algorithm maintains an ant colony for each objective. This way, in a problem with k objectives, it will use k colonies in charge of optimizing each speci fi c objective.

Bicriterion Ant (BIANT) . This algorithm uses two different pheromone matrices, one for each objective. This way, it is expected that the different ants carry out searches in different regions of the Pareto Front.

Pareto Ant Colony Optimization (PACO) . This algorithm is based on the use of several k pheromone matrices, one for each objective. The best two ants for each objective update the corresponding pheromone matrix, carrying out an elitist update.

Multi-Objective Ant Colony System (MOACS) . This algorithm was implemented considering two objectives; it uses a pheromone matrix and two different visibilities, one for each objective of the problem, together with a pseudo-random rule.

Multiobjective Max  X  Min Ant System (M3AS) . This algorithm extends the Max  X  Min Ant System to solve multiobjective problems. It uses a global pheromone matrix, which maintains pheromone information considering all objectives.

COMPETants (COMP) . This algorithm was used in bi-objectives problems, with two pheromone matrices and two visibilities.
Multiobjective Omicron ACO (MOA) . The algorithm was imple-mented considering two objectives; it uses one pheromone matrix and two visibilities, one for each objective. A Pareto set of non-dominated solutions updates the pheromone levels. Multiobjective Ant System (MAS) . It is a simple extension of the
Ant System (AS) to manage multiple objectives. It maintains one pheromone matrix with a visibility for each objective to be optimized; the ants are distributed in regions of the search space.
 For further information about the algorithms, please refer to Insfr X n et al. (2006) and Arteta et al. (2007) .

The fi rst set of demands in the comparison is NTT2. For this data set, we have used the best MOACO proposed by the authors (MOA) and our MOEAs. As we can see in Table 12 (a), the algorithms DEPT and MO-VNS obtain a Hypervolume of 70.74% and 70.70%, respectively, whereas the MOA only obtains 56.01%. If we focus on Fig. 7 (a) we can clearly notice that the Pareto front obtained by MOA is dominated by the fronts obtained by our approaches. We present a study of the coverage relation in Table 13 (a) too.
 The second data set is NTT3, in this case the best MOACO is BIANT, so we have made the comparison with it. In Table 12 (b), we can see that BIANT obtains a lower value of Hypervolume than the DEPT and MO-VNS algorithms. In Fig. 7 (b), we notice that the Pareto fronts obtained by DEPT and MO-VNS dominate the front achieved by BIANT. Furthermore, if we focus on the coverage relation which is shown in Table 13 (b), we can conclude that the DEPT and the MO-VNS cover the whole best front of the BIANT algorithm.

As we can see in Table 12 (c), our MOEAs and the MOACOs are proposed as the best MOACOs by the authors (M3AS and MOA) which obtain the same value of hypervolume in NTT4, as well as they obtain the same Pareto front with only one point (67,0). So it is not necessary for a graphical representation or a study of the Coverage Relation.
 demands, NTT5. For this set, the authors suggest that the best
MOACOs are MOA and MAS. In this way, we have compared our approaches with these MOACOs. In Table 12 (d), we can see that the algorithms DEPT and MO-VNS overcome the value of Hyper-volume obtained by the MOACOs. In Fig. 7 (c), we notice that MOA and MAS are partially dominated by our approaches. Furthermore, we present a study of the Coverage Relation (see Table 13 (c)), we conclude that our algorithms perform better than the MOACOs because DEPT and MO-VNS cover 62.50% and 50% of the Non-
Dominated solutions obtained by the MOA and MAS approaches, respectively.
 VNS) obtain better results than the Multiobjective Ant Colony Optimization Algorithms proposed in Insfr X n et al. (2006) and
Arteta et al. (2007) . The MOACOs only obtain the same Pareto front on the easiest set of demands (NTT4). 7. Conclusions and future work Differential Evolution with Pareto Tournaments (DEPT) and the
Multiobjective Variable Neighborhood Search (MO-VNS), for solving the static-Routing and Wavelength Assignment problem (static-RWA problem) in optical WDM networks.
 by our approaches are relevant, we have compared them with a well-known MOEA in the multiobjective fi eld, the Fast Non-dominated Sorting Genetic Algorithm (NSGA-II).

MOEAs for this speci fi c problem. After several experiments, we conclude that the best con fi guration for the DEPT algorithm is: k  X  10, p  X  25, cr  X  20 % , f  X  50 % , and s  X  Best = 1 =
VNS algorithm is: k  X  10, and for the NSGA-II is: k  X  10, p  X  25, crossover schema  X  SPX , cr  X  70 % , s  X  75 % , and f  X  10 multiobjective indicators: the Hypervolume and the Coverage
Relation . Considering the results of this comparison we conclude that the DEPT algorithm overcomes the results obtained by the other two MOEAs.
 published in the literature. The authors in Arteta et al. (2007) make a comparison between MOACOs and typical heuristics in the
Telecommunication fi eld. In this paper, we have made two compar-isons. In the fi rst one, we have compared the typical heuristics versus our approaches (DEPT and MO-VNS), concluding that our algorithms obtain better than or equal to those results obtained by these heuristics in all data sets. In the second one, we have made a comparison between MOACOs and our metaheuristics; in this case, we conclude saying that our approaches overcome the results obtained by the MOACOs proposed in Insfr X n et al. (2006) and Arteta et al. (2007) . In conclusion, it seems reasonable to think that the multiobjective proposals of this manuscript are very suitable for solving the Routing and Wavelength Assignment problem, and presumably they may obtain such quality results not only in diverse Telecommunication optimization problems but also in other Engi-neering optimization problems.

As future work, we intend to apply these metaheuristics to the dynamic-RWA problem. We have also planned to develop other MOEAs with the aim of comparing them with the DEPT and the MO-VNS algorithms.
 References
