 connect cyber and physical world. Semantic event modeling and processing helps CEP systems to establish a transparent, machine-understandable knowledge discovering process. Some typical semantic complex event processing (SCEP) systems such as SCEPter [2], OECEP [3] and DyKnow [4] are proposed. However, a fundamental prob-proposed. In this paper, we propose an ontology-based event description language, On-toEvent, for semantic event model in CEP systems. In OntoEvent semantic model, we which promises the OntoEvent can be dynamic extended for different application usage. Complex events are modeled and described in the form of event ontology based on na-that OntoEvent is of rich expressiveness and interoperability between different event the semantic models and elaborates the event description language. We demonstrate an event example and discuss the language expressiveness in Section 3. Section 4 concludes the paper and discusses our future works. The semantic model of OntoEvent language defines and describe the concepts and their inter-relationship in complex event processing. It is a two-level framework which includes a set of general upper ontology and interfaces for different application domain ontology extensions. All the concepts in OntoEvent semantic model are model of OntoEvent is established and implemented in OWL [5] ontology languages. Based on this semantic model, we present a novel ontology-based event description language, OntoEvent. Different from other event description language which we have surveyed in Section 2, OntoEvent language defines complex event as an ontology by its event component and their relationship. The component of a complex event in-cludes primitive event, event constructor, event pattern, attribute, sliding window size and response action. The OntoEvent language is defined as follow: OntoEvent Language Model. The OntoEvent language model is denoted as E = (e, c, p, a), in which e is the event set, o is the event constructor set, p = { hasComponent, hasAttribute, hasSource, hasData, hasWindow, hasAction } is the ontology property set and a stands for the attribute/data set. The pattern, primitive event source, attribute constraints, event window and response action of a certain complex event is defined by the following triples: Pattern.  X  X  X  X  X  X  X  X  X  hasComponent  X  X  X  X  X   X  X  X  , defines how the event is constructed by primitive events and event constructors. Source.  X  X  X  X  X  hasSource  X  X   X  , defines the primitive event source and indicates their corresponding attributes. Constraints.  X  X  X  X  X  X  X  X  X  hasData, hasAttribute  X  X   X  , defines the attribute con-straints of primitive of event constructor. Window.  X  X  X  X  X  hasWindow  X  X   X  , defines the overall processing time limitation on the input event stream. Action.  X  X  X  X  X  hasAction  X  X   X  , defines the response action for the complex event when it is detected. 
In OntoEvent language, we introduce the notion of nature language event constructor to express the logic and temporal relationship in event pattern. These constructors are the  X  X eywords X  for pattern description in natural English language. In order to support syn-onym keyword in event description, we introduce WordNet [6], which is a lexical seman-tic database groups English words into sets of synonyms. With the help of WordNet, we scription from end-users can be processed by natural language processing (NLP) and typical representative constructors and their equivalent WordNet synset. We illustrate our proposed event description language using event examples in smart home application scenario. Smart home re fers to a home environments that are enabled for co-operation of smart objects and systems for ubiquitous interactions [7]. In this environment, we leverage devices such as location sensor, body sensor and other sensing devices to generate primitive event streams. Natural Language Event Description. This pattern set the status of user as sleeping if user enters the bedroom first and then heartbeat rates keep lower than 70 within 30 seconds, while the temporal distance between these two events is [600, 1200]. 
The event ontology for this event example is depicted in Figure 1. This event describes a temporal-constrained event sequence and iteration consists of two primi-tive event UserLocation and HeartBeat. The source of primitive event are declared by complex event Sleeping , we leverages the constructor then , keep , within and distance temporal distance between two event components of constructor then . We use keep to describe the event repetition of HeartBeat when the reading is lower than 70 and de-clared the time scope of 30 seconds by within constructor. 
OntoEvent has rich expressiveness in logi cal and temporal aspects. Especially, it provides a set of synonym constructor to express the event iteration or status mainten-ance. The expressiveness of OntoEvent can be extended by defining more event con-structors. Because of the essence of ontol ogy, the event ontology can be defined and demonstrated in a user-friendly visualized paradigm. Therefore, as an ontology-based language, it is designed to be a middle-language to provide interoperability among different event processing systems by language rewriting techniques. Natural language event descriptions can be tranformed into event ontology by NLP. Besides, existing non-semantic event descriptions in existing CEP systems can be transformed into OntoEvent language by event rewriting. In our other works, an ontology-based event processing engine have been pre-liminarily implemented based on OntoEvent language. In this event processing mod-el, we transform event ontology into non-deterministic finite automata-based detec-relationship between events which is derived from defined event ontologies. In the future work, we plan to establish a natural event query processing approach with the help of NLP, to map natural language query into equivalent event ontology. By this means, ontology-based CEP system can provide a user-friendly interface in complex event querying. 
