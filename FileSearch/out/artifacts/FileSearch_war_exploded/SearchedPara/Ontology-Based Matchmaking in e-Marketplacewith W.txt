 With significant computational resources available online, organisations do not need to reinvent the wheel but instead to discover and composite those par-ticular standards-based services according to their requirements through new technologies. Owing to more and more businesses increasingly relying on collab-oration, huge profit and non-profit organisations are aware of the great potential to achieve greater productivity and efficiency of Web services. Web services, as defined by W3C, are  X  X  key component of the emerging, loosely coupled, Web-based computing architecture X . Through Web services, companies are enabled to find one another on the Internet by UDDI (Universal Description, Discovery, and Integration) standard which defines a protocol for directory services that contain Web service descriptions. UDDI, WSDL (Web Services description lan-guage), and SOAP (a lig htweight protocol for transport) are important steps into the direction of a Web populated by services. Of course, XML is the ba-sis of offering the  X  X hat X  description of the data. Likewise BPEL4WS, WSCI, BPML and more and more Web services related standards and specifications or recommendations are available or will be available to illustrate this new trend in both industry and academia.
 ing to work out a series of standards/specifications/protocols to provide mod-els/languages to deploy Web services. But if we look at the existing specifica-tions generally, it is not too hard to get the idea that for business areas which are dynamic and non-deterministic and most importantly which require human participation, a real solution is still far away. Just as BPEL4WS replaced WSFL and XLANG in late 2002, BPML later became a superset of BPEL4WS.
 e-marketplaces face is the lack of appropriate mechanisms to find the prospective services on behalf of participants by considering constraints. In an e-marketplace suchasa car service centre (a real scenario in the following sections), the agent may possess certain capability to make a decision by himself/herself upon a customer request (i.e. query). Currently, there are no specifications to address agent X  X  capability from an organisational aspect. Decision making in a partner-ship which is driven by a task in a business process would allow considering partners X  roles and their capabilities in decision making in the business. distributed environments. In particular, ontologies [5] providing participants with unambiguous domain knowledge and relationships pave the way to smooth communications between parties, especially in e-marketplace. And ontologies and ontology-based approaches [9] have been recognised having great benefits in many areas such as e-commerce, knowledge and content management and the newly emerging field like Semantic Web. Advantages of ontology-based ap-proaches include reusability, extensibility, evolution and justification, etc. [14]. Also multi-agent systems (MAS) which definitely increase the synergy by indi-vidual collaborations, is a sound way in modelling business processes. Of course solutions of constraint problems in AI are obviously one of the great benefits to matchmaking in e-marketplaces. That is why in this paper we investigate matchmaking in e-marketplaces from the AI perspective.
 an e-marketplace by studying agents X  decision making pre-, current-and post-actions within a decision making cycle. By doing so, an agent can take advantages of collaboration with others to accomplish a task without losing his/her own flexibility either in external or internal activities. Agents may interact with the Web service in a manner prescribed by its definition, using XML based messages conveyed by Internet protocols.
 lows: (1) to develop domain ontologies by using DAML, e.g. car ontology, car part ontology and others if required; and (2) to develop a decision making mechanism to assist locating the most suitable services of Web services. The work here is driven by two factors. One is the intrinsic business conducting phase, which indi-cates how a business is running, that is exemplified with internal relations which most of the time are isolated from external observers. Another is interactions between participants with exchanging messages to determine a subsequent pro-cess dedicated to the task. The former addresses the basic flow in doing business upon receiving XML-based messages from a sender, while the latter emphasises collaboration between two or more parties. Our contribution lies in the service search and decision making mechanisms embedded in the roles of the parties to help them make appropriate selections in e-marketplace formation.
 SOAP are the foundations of this paper. DAML-S is also available to enable de-scribing agents X  profile in services. Additionally, XQuery is available to make up a basic query. The baseline is XML. Every example in this paper is based on XML. knowledge. The basic business conducting phase and XQuery language will be introduced. Section 3 describes interactions between partners in e-marketplace. Section 4 proposes a five stage decision making cycle for agents to find the most suitable partners in forming an e-marketplace dedicated to a task and based on Web services. Section 5 illustrates the five-stage decision making mechanism with a case study -a car service centre . Section 6 is about related work. Finally, Section 7 concludes our work and identifies potential further work. As mentioned in the introduction, we assume the basic infrastructures are avail-able to enable businesses to list them on the Internet (UDDI), to exchange structured information in a decentralised, distributed environment (SOAP), to extend description messages regardless of what message formats or network pro-tocols are used to communicate (WSDL). All of them are based on the baseline XML. However, XML itself provides no semantics for its tags. Even if one cre-ates a program that assigns similar semantics to a particular tag, because the semantics is not part of the XML specification, an assertion still cannot be made for an application. Surprisingly, an ontology described in DAML-S enables rea-soning about implicit assertions [1]. That is the reason why we use DAML-S 1 to describe an ontology creation and its application in matchmaking. Additionally, in contrast to WSDL which provides a communication level description of the messages and protocols used by Web services, DAML-S [1] is interested in devel-oping semantic markup that will sit at the application level above WSDL, and describing what a service can do, not just how it does. That is, we assume that Web services are described, presented, and populated by appropriate languages and protocols in the Internet. Bearing these in mind, we are going to describe a general business conducting phase in the next subsection. In the following, we do not distinguish terms between agents, roles, parties, partners and participants but care about meanings in certain circumstance. We treat them the same in the context of agent technology and Web service technology. 2.1 Basic Business Conducting Phase Generally speaking, a business flows from one stage to another if requirements are met. Intuitively, four phases are encompassed in Figure 1 (on the far left). First is the order stage. A requester sends a provider a request with the de-scriptions of a specific task. Then several rounds of message exchange lead to the next stage, i.e. the fulfillment stage. In this stage, both the requester and the provider intend to fulfill their own subtasks in parallel. Before that, the prospective provider and the requester may negotiate mutual terms and con-ditions. As for the requester, he/she might need to check his/her credit limit, whereas for the provider, he/she must get everything in the order ready if these two parties can reach an agreement in terms of goals, deadlines, and exception scenario. payment comes next, after everything has been done. Finally it is the delivery stage. In this stage, delivery is arranged. There are other stages such as pre-purchase and post-purchase (CRM) which also need to be taken into account in businesses. What we mentioned here is the basic blueprint of doing business. Every stage actually consists of many sub-processes. If we look into the payment stage, it is clear that some kinds of payment such as Direct debit, Pay by Phone, Pay by Web, Pay in Person and Pay by Mail are available now and may request authorisation from a third party service (like IBM SET-compliant software) rather than direct payment between the requester and the provider. But our research concentrates on combining different Web service technologies for agents to make a decision in an e-marketplace. We focus on these four stages by viewing accomplishing a task as a flow of tasks to meet the requirements. 2.2 Query in Web Services In XQuery, a query shown below is expressed in a FLWOR expression to return re-quired services. Mostly, this simple query structure is adapted to query services on the Internet by extending its grammar and is eventually associated with temporal logic in some ways [13, 4]. We identify a set of relations which represent agents pos-sessing some properties for further inferencing. We do not distinguish terms such as role and service for the reason that every role X  X  function is to provide service(s). requirement and goal are as follows: tween two parties in more detail next. Business aims vary from domain to domain. Intuitively, the purpose of business is to get something (no matter whether the product is tangible or intangible) by collaboration to maintain the efficient low operation cost and minimise the total investment. More and more businesses which increasingly rely on collaboration now, are greatly supported by Web technologies. What we would like to convey in Figure 1 is how two parties achieve their goals by interacting with each other in e-marketplaces. On the far left of Figure 1 is the blueprint of conducting any business. The rest of the diagram shows interactions taking place not only between the requester and the provider, but between the provider and other roles as well.  X  Vertical dashed lines separate the roles of different parties, like swimming  X  Other dashed lines represent external relations between two parties, while  X  Small circles represent processes and the process flow (in solid lines) stands  X  Solid ellipses represent services (showing interactions between two parties)  X  Arrowed lines represent directions of message flow goal. We concentrate on the following messages between roles in which Request and Answer may iterate many times until they reach a failure or success state: (1) Request -to ask something such as query for flights, query for price, etc. as well as to address something bound with some constraints which may change from time to time; (2) Inform -to inform something; (3) Answer -to provide alternative solutions; (4) Accept/Reject -to show the results of communications. The basic form of an interaction in BNF is as follows: where the interExp expression consists of a series of rounds of request and answer with every agent making a proposal at every round, followed by a manda-tory accept or reject or inform which may iterate many times, where  X * X  specifies the cardinality of the actions repeated once or more. Other specifics without any qualifiers occur only once.
 decides which one(s) its partners will be for a specified task in an e-marketplace. Next we will discuss how to make a decision in this regard. One of the greatest challenging in e-marketplace today is how to find suitable partners to meet certain requirements, for example, quality, locality, time, and cost. through Web services. In doing so, firstly, they should know what they are going to achieve. The subsequent sections address this in detail. 4.1 Decision Making Cycle Figure 2 represents the life cycle of decision making in an e-marketplace. Partic-ipants involved in the task will take part in collaboration to obtain information for further actions to achieve the task with the following steps: Step 1: Problem Recognition. This step is to be aware of problems which come out of interactions (like a customer requires a certain price range). The problems change all the time, so the agent needs to consider each of them and generate a query according to relevant constraints. Step 2: Service Search. With each generated query, this step selects services meeting basic constraints. All selected services with names, phone numbers, fax numbers, postal addresses, emails, URLs, etc. go through the next step for evaluation.
 Step 3: Pre-evaluation. Selected services are options for the requester. What he/she is interested in is the most suitable one(s). Exact matching is desirable but is unusual in e-marketplaces, so filtering method is a necessity. Step 3 considers all selected services according to given criteria by using AI approaches. However, in most cases, the agent must estimate by his/her knowledge if there is no existing assertions or facts. Sometimes, the process will go back to step 2 to search again if the selected services did not well fit in the e-marketplace.
 Step 4: Decision Making. This step is about commitment of actions. Agents must make sure that the selected services meet all requirements before this step. This step leads to activities such as payment and delivery to be fulfilled subsequently.
 Step 5: Post-evaluation. Post-evaluation takes place by looking a step ahead in the business process to evaluate the total cost, total time consumption and response time, etc. in the direction of completing the task by deploying the service based on activities which have taken place so far. Intuitively, any feedback from this step will affect subsequent  X  problem recognition  X  step by adjusting matching conditions, if that is possible. Of course, unlike data manipulation in databases, some business transactions cannot be rolled back. In this case, feedback from this step is considered for further reference. 4.2 Functionality Because not all services are likely to be discovered just by matching between the requester X  X  query and the provider X  X  profile (from where extraction items are generated), some other mechanisms are needed to guide further filtering to locate prospective providers if needed. Decision making is such a kind of mechanism to assist in making a decision in partnership formation in e-marketplaces. With our understanding, this mechanism is embedded in each role (agent) although we did not show that in Figure 3 for simplicity. We use a real world scenario of a car service centre to illustrate how agents col-laborate with each other, and what the main issues are in decision making. The interaction process between all parties is illustrated in Figure 3. Actually, Figure 3 is a special case of Figure 1 with detailed names such as  X  customer  X  replac-ing  X  requester  X ,  X  car centre  X (simplicity for  X  X ar service centre X  in Figure 3) replacing  X  provider  X  and detailed part suppliers replacing  X  other roles  X  X n Figure 1. Basically, only two roles ( customer and car centre ) are involved if the work is a simple task. But mostly, car centre needs to look for other agents such as parts suppliers over the Internet. In this example, we assume the agents ( car centre ) are only required to consider decision making constraints like time and cost. But we omit their detailed calculations in this section due to the space limit. The process starts when the customer sends a request like  X  X ould like to have a service X . car centre replies (most time they give a quote about the service for a specified kind of car). customer takes available quotes with other information such as location, time, etc. into account to select the quote (i.e. a specific car centre) which satisfies him/her. He/she then sends car centre an accept message. All message exchanges are shown in Figure 3 with a dashed line circle in the second column. The arrowed lines represents message sending and receiving. After car centre gets the message, it starts the service. When the car service is completed successfully, car centre sends a message to inform customer and continues subsequent activities such as check credit and ar-ranges delivery ( deliver ) if they are applicable. If a replacement is needed, car centre sends another message and waits for customer reply. A series of sending and receiving messages (shown by the dashed line circle in the second column in Figure 3) are needed to reach another agreement until an accept message can be issued. Then car centre will start to search the Internet (unless car centre has relevant information in its local repository) to locate related parties ( engine suppliers , windscreen suppliers , tyre suppliers , etc.) through Web ser-vices. Request-Answer may be repeated many times until agreements have been reached by the two parties. The car centre will then contact the customer again to notify any adjustments. This communication about the service goes on and on until it is completed ( complete ). check credit and deliver can then continue. Figure 3 focuses on how an e-marketplace is formed to accomplish a task (providing parts for a car) based on interactions between car centre , and customer in a Web service environment. 5.1 Ontology As mentioned earlier in this paper, ontology plays an important role in e-marketplaces with Web services. The term is not only used for describing domain knowledge, but also for definitions of processes, and partner relationships. A sim-ple ontology (about a car) is presented below to illustrate this. The following simple XML description shows that car is a subclass of vehicle , whereas sedan is a subclass of car . 5.2 Decision Making Decision making is crucial in almost every phase of the decision making cycle. Sometimes people are unconscious of its presence due to the very small effort needed for making a decision. However in an e-marketplace, (let us take the above example for instance) every effort must be made to ensure prospective partners are selected carefully. customer at first even needs to make a decision on which car centre to choose by taking cost, time, location, trustworthiness, etc. into consideration.
 generated according to requirements. An example of a query is given below: the pre-evaluation phase begins, for example, for a windscreen replacement scenario. The agent ( car centre ) must make a decision on which services are the best ones to meet customer requirements. Suppose there are many services (all of them are windscreen supplier services) meeting the conditions after previous filtering but still with slight differences. At this stage, we may turn to defining a utility function like ( n j =1 w i  X  att j ), where w j ( w j  X  (0 , 1)) is the element of weight vector corresponding to attribute att j . Again, expectation functions combining with user X  X  expectation and car centre agent X  X  experiences (described in a curve in Figure 4) are used to assist filtering unexpected services. the customer requirements. After pre-evaluation , decision making occurs which deals with the commitment of the business actions including payment , delivery , etc. For the next step, post-evaluation , the mechanism looks a step ahead by putting the windscreen replacement service into the process to see if all the conditions have been met. This step calculates all measures, including the total cost, time consumption and response time. In short, matchmaking in the car centre case study proceeds 5 steps according to Figure 2 to select prospective services and briefly measure run-time characteristics such as total cost and time consumption. Matchmaking is a great help to select partners during Web-enabled e-marketplaces. As discussed in paper [8], one of the most challenging problems today is to locate suitable services from Web services. Much work has been done from the semantic perspective [2, 10, 11] but with different emphasises. In paper [1], DAML-S, as a service description language, provides a semantics based view of Web services, particular the DAML-S profile to advertise the functionalities that organisations offer to the community. Paolucci et al. [12] claim that the locations of Web services should be based on the semantic match between a declarative description of the service being sought, and a description of the service being offered. Paper [15] introduces a language for describing the matchmaking process by using five different filters based on a domain specific ontology. In their papers [3, 7], a process ontology is developed to improve precision of key word based querying. In paper [13], a Web service request language is developed on the basis of XML and AI planning technique. Its purpose is to allow users to associate goals with a service request. In contrast to the semantic approaches presented above, paper [16] bases matchmaking on finite state automata. The approach in the paper discusses service discovery by using business process descriptions rather than individual message passing. Unfortunately, its business process description is unable to catch dynamic features of a real business process. In addition, its computations are complex and need to be further addressed.
 of view where ontologies are the foundations of communications. We believe this approach is applicable in e-marketplaces whenever different parties communi-cate with one another. But our approach is different from semantically-oriented methods described above in that we believe decision making embedded in the roles of the different parties is desirable as they carry out a task to help filter unsuitable services in service discovery. In this paper, our general focus has been on developing a decision making mech-anism in e-marketplaces with Web services. In order to tackle partnership forma-tion in e-marketplaces, we have discussed ontologies which are the foundation of communication on the Internet. Furthermore, we have presented an interaction diagram to illustrate what basic elements should be encompassed. Additionally, we have addressed query generation based on problem recognition including interactions of parties. The query is later used in service search on the In-ternet. Consequently, the query plays an important role in decision making to provide assistance for the subsequent pre-evaluation , decision making , and post-evaluation phases. The novelty of this approach lies in the service search, based on the generated query and decision making mechanisms embedded in the roles of the parties to help them make appropriate selections in e-marketplace formation. Most work presented is about investigating e-marketplaces at the for-mation level. We have developed several ontologies for different domains. Exper-imental systems for generating queries and extracting query related items from the service profile are under construction. In this paper, we have only addressed interactions between two parties, presumably in a way that is compatible. In most cases in e-marketplaces, however, interactions are not totally direct but indirect. The mobility of interaction is open for future investigation. Also, at the e-marketplace implementation level, error handling is another big challenge which needs to be addressed.
 Work reported in this paper is partly supported by Swinburne Vice Chancel-lor X  X  Strategic Research Initiative Grant 2002-2004 for project  X  X nternet-based e-business ventures X . It is also partly supported by the National Natural Science Foundation of China under grant No. 60273026 and grant No. 60273043.
