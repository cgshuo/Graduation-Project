 Recommender system has been widely used in many real applications to find the most attractive items for the users. One of the most successful methods for rec-ommendation is collaborative filtering which is based on the existing historical feedback from users to items. In addition to the user-item feedback, the trust rela-tionships between users have been incorporated to improve the recommendation recommendation , mainly employ the user homophily effect which assumes that socially connected users may have similar preferences for the same item. To date, the existing trust-based recommendation methods mainly focus on how to make use of the observed trust relationships. However, the observed trust relationships are usually sparse in many real applications. Consider the running example in Fig. 1 . As we can see in the example, user A trusts user B ,and we can take the rating from user B to item X into consideration if we want to estimate the rating from user A to item X . How to make use of the rating from user B to item X and the connection from user A to user B is the main focus of the existing trust-based recommendation methods. However, these existing methods may become less accurate if we want to know the possible rating from user A to item Y in the example. Here, our key observation is that since user A trusts user B and user B trusts user C ,user A may also trust user C to some extent; consequently, we can estimate the rating from A to item Y based on the inferred trust from user A to user C . Compared to the existing methods that use observed trust relationships only, the inferred trust may also be helpful for recommendation.
 trust-based recommendation. By employing the transitivity property of trust, we first infer several types of unobserved trust based on the observed trust rela-tionships. Next, we propose a novel trust-based recommendation model by incor-porating both observed and inferred trust relationships, and we further propose a genetic algorithm to learn the relative weights of different trust relationships.  X  The proposed RIT model that infers unobserved trust and incorporates both  X  Extensive experiments on two real datasets showing the superior of the pro-The rest of the paper is organized as follows. Section 2 describes the proposed RIT model. Section 3 presents the experimental results. Section 4 covers related work. Section 5 concludes the paper. In this section, we present the proposed RIT model for recommendation. The main notations we use throughout the paper are listed in Table 1 . For example, we use capital bold letter R and T to represent the rating matrix from users to items and the observed trust matrix between users, respectively. Based on the notations, the trust-based recommendation methods take the rating matrix R and the observed trust matrix T as input, and aim to estimate the potential preference from a user to an item. 2.1 The Proposed Formulation Inferring Trust. As mentioned in introduction, our key observation is that the inferred trust can help to improve the recommendation performance. Here, we first describe how we obtain the inferred trust. We consider three types of inferred trust [ 3 , 22 ] as shown in Fig. 2 .
 The first type of inferred trust is from direct propagation . As shown in Fig. 2(a) , direct propagation means that if a certain user that is trusted by U (e.g., U 3 in Fig. 2(a) )trusts U j , we can infer that U i might also trust U j to some extent. We can obtain this type of trust with the matrix operation T 2 . The second type of inferred trust is called co-citation . The intuition behind co-citation is that if two users (e.g., U i and U j in Fig. 2(b) ) are both trusted by some other users (e.g., U 1 in Fig. 2(b) ), they may trust each other. Co-citation can be represented as T T in its matrix form.
 The third type of inferred trust is trust coupling which is shown in Fig. 2(c) . Similar to co-citation, trust coupling is based on the intuition that two users (e.g.,
U other users (e.g., U 2 in Fig. 2(c) ). We represent this kind of inferred trust as TT . Incorporating Observed and Inferred Trust. Next, we show how we incor-porate both the observed trust and the three types of inferred trust. To incorpo-rate them, the basic idea is to employ the homophily effect [ 10 ], which indicates that similar users tend to have similar preferences for items. In other words, if user u trusts another user v , they might have similar latent preferences for items. Taking observed trust as an example, we can add the following constraint where U (: ,u )and U (: ,v ) indicate the preferences of user u and user v , respec-tively. In Eq. ( 1 ), we actually encourage the corresponding user latent preferences U (: ,u )and U (: ,v ) to be closed to each other, and greater T ( u, v ) would encour-age them to be closer. For the three types of inferred trust, we can substitute the T matrix with the inferred trust matrices such as T 2 , T T ,and TT . monly used matrix factorization framework [ 5 ] due to its flexibility. By consid-ering all the four trust matrices (one for observed trust and three for inferred trust), we have our RIT model: min trust regularization terms, and  X  u and  X  v are used to avoid over fitting. Once the matrices U and V are learnt by the above formulation, we can estimate the rating from user u to item i as 2.2 The Proposed Algorithm Before we present the algorithms to solve the formulation proposed in Eq. ( 2 ), we need to introduce a few notations to simplify the descriptions. There are four types of trust regularization terms in Eq. ( 2 ), which can be re-written as: For simplicity, we define w i =  X  g i  X  g , and define matrix Q as where w 1 + w 2 + w 3 + w 4 = 1. This Q matrix actually contains all the four types of trust (one observed trust and three inferred trust) and their relative weights. With these new notations, the optimization problem in Eq. ( 2 )canbere-written as min Then, the task of the algorithm is to learn the weights ( W =[ w 1 ,w 2 ,w 3 ,w 4 ]) that are contained in the Q matrix and the two low-rank matrices ( U and V ). Learning Coefficients W . We adopt the so-called real-valued Genetic Algo-rithm [ 11 ] to learn the weights W . The basic idea is to treat the coefficients W =[ w 1 ,w 2 ,w 3 ,w 4 ] as a chromosome. After randomly generate a group of chromosomes, we can generate its offsprings by three basic operators, i.e., selec-tion, crossover, and mutation.
 For the selection operator, we can simply select several best chromosomes. Here, we need a fitness function to determine how good the chromosome is. In this work, we choose prediction accuracy and measure the fitness through cross validation. For the crossover operator, we select two parent chromosomes and generate the child chromosome as W new =  X W old 1 +(1  X   X  ) W old 2 , where  X  is a random number between 0 and 1 to control the proportion of each parent chromosome. For the mutation operator, we select two coefficients in Algorithm 1. The computeCoefficient Algorithm W (e.g., w both crossover and mutation will keep the sum of W as 1.
 of W  X  X  (step 1). For each iteration, we select several best W  X  X  (step 3), and generate their offsprings via crossover (step 4-8). Then, we adopt the mutation operator for each offspring (step 9-11). Finally, after several iterations, we return the best W .
 Updating Matrices U and V. Next, we show how we update matrices U and V . First of all, the fourth term of Eq. ( 6 ) can be written as Algorithm 2. The RIT Algorithm where D 1 and D 2 are two diagonal matrices with D 1 ( u, u )= n v =1 Q ( u, v )and D ( v, v )= n may not equal to each other.
 Eq. ( 6 ) can be re-written as Then, we have the following derivatives Finally, we summarize the overall algorithm to solve the problem defined in Eq. ( 2 ) as in Alg. 2 . As shown in the algorithm, we first compute the inferred trust from observed trust (step 1) and then initialize the U and V matrices (step 2). Next, we learn the coefficients to control the weights of each trust regularization terms (step 3), and define the Q matrix (step 4). After that, the algorithm begins the iteration procedure. In each iteration, we alternatively update the user latent matrix U and the item latent matrix V with gradient descent method (step 6 and 7). The iteration procedure will continue until at least one of the following conditions is satisfied: either the Frobenius norm between successive estimates of both matrices U and V is below a certain threshold or the maximum iteration step is reached.
 In this section, we present the experimental results. The experiments are designed to answer the following questions:  X  How accurate is the proposed method for recommendation?  X  How does the proposed method perform for cold-start users?  X  How robust is the proposed method? 3.1 Experimental Setup In our experiment, we use two datasets: Epinions and Ciao [ 18 ]. These two datasets contain not only the user-item ratings but also the trust relationships between users. For the trust relationships, we assign T ( u, v )=1ifuser u trusts user v and T ( u, v ) = 0 otherwise. Table 2 shows the statistics of the datasets. use the rest as test set. We conduct two groups of experiments with different percentage of training set (50% and 90%). We fix the rank r = 10, set  X  g = 0.1, and  X  u =  X  v = 0.1 unless otherwise stated. We use cross-validation to learn the coefficients W on the training set.
 and the Mean Absolute Error ( MAE ) to compare with the existing trust-based recommendation methods: where R T is the test set, R T ( u, i ) denotes the actual rating that user u gives is the total number of ratings in the test set. Lower values of RMSE and MAE mean better prediction performance.
 and SR [ 9 ]. Notice that all these compared methods use the observed trust only. 3.2 Experimental Results Effectiveness Comparisons. We first compare the effectiveness of different methods in Table 3 . In the table, we also report the results of the Basic case of our model where only the observed trust matrix is used. The Basic method is similar to the SR method except that it uses the trust as side information while SR uses the rating similarity. As we can see from the table, the proposed RIT method outperforms all the other trust-based recommendation methods wrt both RMSE and MAE on both datasets. For example, on the Epinions data with 50% training data, our method improves the best competitor (FIP) by 3.48% wrt RMSE and by 3.36% wrt MAE ; for the Ciao data with 50% training data, our method improves the best competitor (RSTE) by 4.60% wrt RMSE and by 5.27% wrt MAE . Overall, the results indicate that the inferred trust is indeed helpful to improve the performance of recommender systems.
 Effectiveness for Cold-Start Users. The cold-start problem, which aims to recommend items to cold-start users, is still a remaining challenge in rec-ommender systems. Intuitively, the proposed RIT model can better handle the cold-start problem as we infer many unobserved trust relationships. We conduct experiments to validate this intuition, and define users who have expressed less than 5 ratings as cold-start users. The results with 50% training data are shown in Table 4 . As we can see, our RIT method achieves larger improvement in the cold-start scenario. For example, on the Epinions data, our method improves the best competitor (FIP) by 8.21% wrt RMSE and by 10.66% wrt MAE ;on the Ciao data, our method improves the best competitor (SoRec) by 16.07% wrt RMSE and by 20.81% wrt MAE . This result indicates that our RIT model can better handle the cold-start problem by inferring unobserved trust.
 Influence of Parameters. Finally, we study the influence of the parameters in our RIT model:  X  g which controls the importance of trust relationships, and  X  u and  X  v which control regularization. The results are shown in Fig. 3 whereweuse 50% training data and only report RMSE on y-axis for simplicity. Similar results can be observed for 90% training data and the MAE metric. For convenience, we set  X  u =  X  v . As we can see from Fig. 3(a) , on both datasets, RMSE decreases quickly and then stays stable as  X  g increases. For  X  u and  X  v ,aswecanseefrom Fig. 3(b) , RMSE is stable when they are less than a certain threshold (e.g., 0.1) on both datasets. Overall, the proposed RIT model is robust wrt the parameters. In this section, we review some existing approaches for recommender systems, including traditional recommendation, trust-based recommendation, and the cold-start recommendation.
 tems. These traditional recommender systems mainly focus on the mining of user preferences via the user-item rating matrix. Collaborative filtering can be divided into two categories: memory-based approaches and model-based approaches. Memory-based approaches aim to find similar users or items for recommen-dation, known as user-based methods [ 1 ] and item-based methods [ 15 ]. Some researchers also propose to combine user-based methods and item-based meth-ods [ 19 ]. Model-based approaches focus on learning models from data with sta-tistical and machine learning techniques, in which matrix factorization has been widely adopted. These matrix factorization methods [ 6 , 12 , 14 ] make predictions by factorizing the user-item rating matrix into low-rank latent matrices. Later, researchers begin to take the trust relationships between users into consideration. The basic intuition is that users may prefer to accept the rec-ommendations by their trusted people. With this intuition, many trust-based recommender systems have been proposed [ 4 , 7  X  9 , 20 , 21 ]. For example. Ma et al. [ 7 ] develop a model which combines the tastes of users and their trusted peo-ple together for the rating prediction; Jamali and Ester [ 4 ] propose that users X  preferences are dependent on the preferences of their trusted people ; Ma et al. [ 8 ] propose a model in which the trust matrix and the user-item rating matrix are connected with shared user latent preferences; Yang et al. [ 20 ] aim to use the inner product between two users X  latent preferences to recover their social link; Ma et al. [ 9 ] introduce the social regularization term which serves as a constraint ships between users and the relationships from items. All the above trust-based methods employ the observed trust for better recommendation. Different from them, we also consider the inferred trust which might be useful for recommen-dation. In the recent work by Fazeli et al [ 2 ], they try to infer implicit trust into trust-based recommendation methods when explicit trust relationships are not available. In contrast, we infer the implicit trust from explicit trust and combine them together to improve the prediction accuracy of recommender systems. One of the remaining challenges of recommender systems is the cold-start problem, i.e., how to recommend items for users that have expressed few ratings. Existing solutions can be roughly classified into two classes: interview based and side-information based. The interview based methods add an interview process to collect the preferences of cold-start users in their sign-up phase [ 17 , 24 ]; the main problem of this type of methods is the additional burdens. The second type of methods incorporate the side information to enhance prediction accuracy for cold-start users, such as the content information of items [ 16 ], the attributes of users/items [ 13 , 23 ], or the social relationships between users (e.g., trust-based recommendation). In this work, we enhance the trust-based recommendation by inferring unobserved trust from observed trust. In this paper, we have proposed a trust-based recommendation model RIT based on matrix factorization and social regularization. In RIT, we first infer several types of unobserved trust based on the observed trust relationships by employing the transitivity property of trust. Next, we propose to incorporate both observed and inferred trust relationships for better recommendation. Experimental eval-uations on two real datasets show that our method outperforms the existing trust-based recommendation models in terms of prediction accuracy, and greater improvement is observed for the recommendation of cold-start users.

