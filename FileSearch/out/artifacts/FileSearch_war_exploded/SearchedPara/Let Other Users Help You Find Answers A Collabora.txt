 Question Answering (QA) systems try to understand the human-proposed ques-tions and come up with acceptable ans wers. A lot of interests are drawn to this topic and people expect to see further improvement. Approaches based on setting inference rules[1], applying on tologies[2,3] or introducing statistical models[4,5,6,7] were developed to address the problem. Nevertheless, most ap-proaches suffer certain limitation resulting from huge human workload for an-notating or expensive computational costs for supervised learning.

However, answering communities seem to be much better resources as com-pared with the pure text documents. People post and answer questions freely according to their interests and expertise. Yahoo! Answers, Baidu Zhidao (Chi-nese) and Naveer (Korean) are just some examples in this case. Most commu-nities have human-involved grading sys tems to rate answers. Judgements from users facility us to assess the quality of answers. People interact by asking, an-swering, grading, etc. Users participati on activities can be tracked through log records and users profiles delicately maintained by web service providers. In this paper, we utilize multiple collaborative information to identify QA pairs that are most useful to people.

Link-based analysis has been a popular approach to incorporate collabo-rative influence. Page rank [8] and Hits [9] are examples in case. To our best knowledge, the closest related link-based algorithm are LexRank [10] and Biased LexRank [11]. Most previous ranking models incorporate strength of relationships into evaluation, but fail to take the quality of nodes themselves into considera-tion. To meet this end, we propose the Collaborative Rank Algorithm (ColRank).
Within this context we make the following contributions:  X  Our adapted ColRank Algorithm promotes the perform ance, as compared to  X  We demonstrate that the collaborative information including user profile and  X  Our approach using Continuous Markov Chain (CMCM) Model successfully The rest of this paper is organized as follo ws: Section 2 intro duces some related work. The axiomatic formulation of Continuous Markov Chain Model we con-sider is detailed in Section 3. In section 4 , we list the features used for the model and gives a description about the graph construction, and parameters configura-tion. We report our experimental setup and results in Section 5. Finally, Section 6 concludes with outlook on future research. 2.1 Moving from Discreteness to Continuity In Biased LexRank [10,11], is the first variant that aim to address the problem of Question Answering. It has the mathematical motivation of computing the stationary distribution in DMCM. In Biased LexRank (B-LR), the graph is con-structed where each node r epresents a QA pair and edge is weighted by text similarity between two QA pairs. The order of stationary distribution for QA pairs is used as the rank to output. The basic formula is
BLR( u | q )= d  X  where d is the damper factor determining the probability of restarting the ran-dom walk. For the link weight, they use cosine similarity computed through tf and idf scores to represent the strength of support between two QA pairs.[12]. Without using any non-textual clues, we believe that more collaborative features that are helpful for the problem we face are left out in. This idea finally inspires us to move from DMCM to CMCM. 2.2 Continuous Markov Chain Model The CMCM cancels the limitation that jumping from one node to another can only occur at discrete time points. it enable the random walker to stay at a node for arbitrary time period. The transition probability matrix P ( t )=[ p ij ( t )] n  X  n describes the transition property of CMCM. We further denote by Q the deriva-tive of P ( t ) with respect to t when t approaches to 0, which we call the tran-sition rate matrix . It is proved to be a one-to-one correspondence between Q and P ( t ) under previous assumptions. We decompose the CMCM as a process of successive staying at different nodes. S ince the duration behavior are deter-mined by { q ii } , we still need to find ways to identify the transition behavior. We then introduce the Skeleton Process (a.k.a Embedded Markov Chain) to disclose the mechanism of transition in CMCM. Skeleton Process K corresponding to Q is defined as a Discrete Markov Chain Model (DMCM) where we assume any staying period is uniformly one time unit. Suppose we have already solved the stationary distribution Method[13]. we can prove that the stationary  X  distribution of the CMCM: Previous work[14] noticed that there are numerous features that could be used in question answering and tried to select the most effective ones to fit in the model. The various features available usually have a great deal of redundancy. Generally speaking, we can group them into three categories and select as least of them as possible. Although here we take Yahoo! Answers as an example, the features selected are common in oth er answering communities as well.  X  Answer Quality: Answering Community offers ways for users to vote for  X  User Prestige: To discriminate answers provided by an expert and an  X  Who-answered-who relationship: who-answered-who (WAW) relation-In CMCM, we consider the graph G =( V, E )where V represents the set of nodes and E denotes the edge set, as shown in Figure (1). It is a three layer graph. The first layer contains all the askers. The second layer denotes QA pairs and the third layer represents the answerers set.

For the parameters k ij , the transition attributes should incorporate the who-answered-who relationship and text similarity. The later part is added for purpose of smoothing because the who-answered-who relation score distributes sparsely. In our model, we have: The staying time assesses the quality of nodes. We proposed the estimation: We collected QA pairs from Yahoo! Answers from Jun. 2010 to Sep. 2010. The dataset included 287,079 QA pairs in domain of  X  X omputers &amp; Internet X , with 175,037 users considered. We perform our algorithm ColRank and the baselines. To measure the effectiveness, we compar e the performance over two prevalent information retrieval metrics[15,16], which are F 1 ( F 1 = 2 PR P + R )and MRR (Mean Reciprocal Rank)
A natural competitor of our model is Biased LexRank (B-LR)[11]. We also derived it with a variant Collaborative LexRank , or C-LR for short, which values the WAW relationship as well.

We carried out evaluation on the B-LR, C-LR and our ColRank together and make comparisons. The results are listed in Table (1).

The performance of C-LR is higher compared to the baseline B-LR, gaining an increase 3.3% in F 1 and 8.8% in MRR. This demonstrates that the feature of WAW relationship is useful when ranking the answer candidates. In addition, adopting Continuous Markov Chain Model in ColRank offers further outstanding improvement. Compared with C-LR, an increase of 6.1% in F 1 and7.4%inMMR is observed. The effectiveness of the ColRan k is reasonable. Firstly, it explicitly integrate the quality of QA pairs as well as other features that measure the strength of links. In addition, our model makes it possible to consider multiple non-textual features at the same time. Through experiments, we see the non-textual features bringing about considerable benefit to the performance. In this paper, we propose a novel model based on Continuous Markov Chain Model for ranking in question answering. Unlike other approaches such as Biased LexRank, it can naturally incorporate the weight of nodes and link together. When ranking answer candidates, we adopt multiple non-textual features that possess potential to capture the user quality and user feedback. We further demonstrate the effectiveness of these feat ures through experiments with various measurements. The experimental result s also reveal that our proposed method outperforms Bisaed LexRank and Collaborative LexRank by about 16% and 7% in terms of MRR.

Our approach integrate textual and non-textual information in a unified frame-work. They are not limited to dataset from any specific answering community. An interesting future direction is to establish the  X  X old metrics X  to address the problem of systematically feature selection. The goal is to extract features sufficiently generalized and effective that can be integrated to models like our ColRank.
 This study is partially supported by the National High Technology Research and Development Program of China (863 Program No. 2009AA01Z143), the Specialized Research Fund for the Doctoral Program of Higher Education of China and Special Fund for Fast Sharing of Science Paper in Net Era by CSTD ( X  X SSP X  Grant No. 20100001110203). We would also like to thank members of the Dlib group at Peking University and in particular Ziqi Wang and Yu He for their valuable suggestions and review of this paper.

