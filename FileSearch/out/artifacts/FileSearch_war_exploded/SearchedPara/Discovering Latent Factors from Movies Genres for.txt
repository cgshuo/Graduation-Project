 Current approaches on collaborative filtering factorize user-item matrices in order to infer latent factors from ratings previously assigned by users. However, they all have to deal with sparseness, whose workarounds are prone to bias and/or overfitting. This paper proposes a recommender al-gorithm that is based on a factorized matrix composed of user preferences associated to the movies X  genres/categories. The advantage of using such user-genre matrix factorization model is that it requires less computational resources, as the matrix will be less sparse and at lower dimension. We present the experimental results with a dataset composed of real users, comparing the performance of different modules of our algorithm.
 H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing X  Indexing methods ; H.3.3 [ Informa-tion Storage and Retrieval ]: Information Search and Re-trieval X  Information filtering Design, Algorithms Collaborative recommender systems, latent semantic analy-sis, user profiling, users similarity.
Recommender systems are an important mechanism for enabling users to deal with the increasing information over-load. In its basic form, a recommender system can be de-signed according to three different strategies: content-based filtering, collaborative and the combination of both. With respect to collaborative filtering, one of the greatest advan-tages is that it is not limited to the available metadata de-scribing the content, but, on the other hand, a challenge is how to calculate the similarity of users in order to cluster in-dividuals with similar preferences. In traditional algorithms, the user-item ratings domain is viewed as a vector space and similarity metrics (e.g. Pearson correlation, cosine similar-ity, etc.) are applied to infer neighbors of users. However, the vectors are of high dimension: for a single user, there will be a vector whose dimension size is the number of items in the system. In addition, the vectors will be redundant, because some users will have similar ratings for the same items [3].

Such limitations in vector space have encouraged resear-chers to use dimensionality reduction techniques from la-tent semantic analysis. One well-known technique is Singu-lar Value Decomposition (SVD), which extracts latent se-mantic relationships between items and users, transforming the vector space into a feature space composed of k topics of interest. Such methodology has been explored by many works [14, 7, 8, 11]; however, they all have to deal with sparseness, which occurs before factorization of the user-item matrix. As many items may not have been rated so far, the methods use an imputation procedure for unknown ratings which can be based on different strategies: user or item averages [14], gradient descent [11], regression based on least-squares [8], among others. Nevertheless, in spite of the recognized efforts, imputation can be very expensive as it significantly increases the amount of data, or it may distort the data considerably [7].

In this sense, this paper proposes a recommender algo-rithm that is based on a factorized matrix composed of user preferences associated to the movies X  genres. Such categories are the unique type of metadat a needed from each item, and thus, its extraction is simple and straightforward. The user-genre factorized matrix is used in two directions: i) to infer latent factors of genres, as a specific category may have dif-ferent concepts, each one with distinct interestingness levels to the user (for instance, two movies classified as science fiction, though the first is about the end of the world and the second is about undead people); and ii) to enrich new users X  profiles with predictions of weights for those categories which are still absent in their set of preferences.
This article is organized as follows. Section 2 depicts the related work about collaborative filtering approaches. Sec-tion 3 presents the profiling and enrichment mechanisms based on genres X  metadata proposed in this paper. Section 4 describes our strategy for predicting unknown ratings based on the model. Section 5 depicts the experimental results of our proposal. Finally, Section 6 presents the final remarks and future work.
Collaborative filtering algorithms predict unknown ratings based on an aggregate of the ratings of similar users. Com-puting user similarity in vector space brings some limita-tions. Because the rating vectors are of high dimension and redundant, the system will have an expensive task to calcu-late all pairwise similarities [3]. In addition, new users will not have enough ratings to support efficient clustering, and consequently, their chances to be considered at recommen-dation will be low [1].

Nevertheless, new efforts in collaborative filtering have opened opportunities to deal with the limitations depicted above. Indeed, maybe the most remarkable effort spent on collaborative recommenders was during the Netflix Prize 1 which contributed to the emergence of two new trends of research: the use of matrix factorization models to cluster similar users using a variety of latent semantic factors [7], and the combination of multiple recommender algorithms to improve performance [2, 11].

With respect to latent semantic analysis, some authors [6, 5] propose using matrix factorization techniques to reduce the expensiveness of similarity calculation. Such techniques are also exploited to address the cold start problem, in which the lack of ratings are overcome by a predictor that relies in feature space [12, 10].

The recommender algorithm proposed in this paper also adopts matrix factorization techniques, but is different be-cause our overfitting prevention is accomplished by the cre-ation of a user-genre matrix with lower dimension. In addi-tion, our model is used to enrich user profiles composed of genres and associated weights. With these enriched profiles, the system computes the similarity of users.

The alternative approach of factoring a matrix associated to metadata (e.g. movies X  genres) was also considered by Gantner et al. [4], who described a method that maps user or items attributes to the latent features of a matrix fac-torization model. Our approach differs from theirs because we deal only with genre metadata, while they also explore list of actors, directors and credits for each movie, requiring more efforts to extract such content descriptions.
This section presents the profiling mechanism based on genres X  metadata adopted in this paper. It consists of: i) a user profile composed of a weight associated to each avail-able genre; ii) a factorization model whose objective is to infer latent factors; iii) an enrichment procedure to support new users profiles; and iv) the users similarity calculation based on the enriched profiles. Next subsections depict such features in details.
A genre cloud corresponds to a set of preferred genres of movies watched so far by the user [9]. Let us denote a given user by u  X  U ,where U is the set of all users, a movie item by s  X  S ,where S is the set of all available items, and a rating value by r  X  X  0 . 5 , 1 , 1 . 5 , ..., 5 } X  R . A set of items rated by user u is represented by S u ; and based on this set, we define the rating function for user u as  X  u : s  X  S u  X   X  u ( s )
We denote by G the global set of genres, G s the set of genres associated to item s ,and N g the global frequency http://www.netflixprize.com/ of occurrence of genre g for all items. In this way, a genre cloudisdefinedas cloud g ( u, r ), which contains the set of pairs ( g,n g,u,r ), where g  X  G is a genre and n g,u,r = S | g  X  G s &amp;  X  u ( s )= r }| .Thus, n g,u,r represents the frequency of occurrence of genre g for all items that user u has associated with rating r .

Based on the user genre cloud, it is possible to build a user profile which is composed of weights associated to each available genre. The initial step consists of computing the tf-idf weight of each pair ( g,n g,u,r ). Considering that our corpus is the set of all possible ratings, the tf-idf value will reflect how important a genre is to a particular rating in the set of all ratings. Thus, if we denote by R g,u the set of different ratings assigned to genre g by user u , we define:
After computing the tf-idf values for each genre cloud entry, the following step is to calculate a weighted average w ( g,u ) that represents how much a user u likes genre g . Therefore, we define:
In this way, the user profile will contain a list of all avail-able genres and their associated weights. Considering all users registered in the system, it is possible to create a user-genre matrix, which can be factorized in order to infer latent semantic information. Such task is depicted in the following subsection.
The user-genre matrix factorization is accomplished in this paper with Singular Value Decomposition (SVD). For a user-genre matrix M composed of associated w ( g,u )values, its SVD is the factorization of M into three matrices such that M = V X T T . We truncate those matrices to yield V k ,  X  k and T k , in order to decrease the dimensionality of the vector space, and also, to leave only the strongest effects or trends in the model by dropping the smaller singular val-ues [3].

The resulting factorized user-genre matrix can be inter-preted as an expression of a topic preference-relevance mo-del [3]. The rows of the | U | X  k matrix V are users X  interest in each of the k inferred topics, and the rows of the | G matrix T are the genres X  relevance for each topic. The singu-lar values in  X  are weights for the preferences, representing the influence of a particular topic on user-genre preferences across the system.

In our approach, as we are factoring a user-genre matrix instead of user-item, the number of missing values will be lower because there are less genres/categories in a system than items. Therefore, before user-genre matrix factoriza-tion, our model considers a simple strategy of imputation that substitutes the weights w ( g,u ) which are zero with the user average rating offset. This is defined as [3]: where  X  is the overall average rating. It is worth mentioning that in such cases we also store those zero positions in order to provide an enrichment method to prevent cold start. This procedure is presented in next subsection.
In spite of the user-genre matrix advantage to provide fewer missing values, there are still cases where new users will not have rated items associated to all available genres. As a consequence, their profiles will lack information about their preferences to those genres, which constitutes the cold start problem. In addition, the weights associated to genres in new user profiles may not be fully reliable, as they depend on the number of past ratings associated by the user (see Equation 2).

In this sense, the profile enrichment procedure has two objectives: i) reducing the effects produced by the lack of information in new user profiles; and ii) adjusting the value of w ( g,u ) to consider the most relevant topics of interest associated to genre g .

By using the zero positions stored during factorization, we are able to predict new values to those users whose profiles do not have reliable weights associated to particular genres. Such predictions, in contrast to the user average rating off-set, reflect the combination of different topics to a genre, and the user X  X  preference to those topics. In this way, to in-corporate the topic preference-relevance model, we redefine w ( g,u )as: w ( g,u )= where vector V k ( u ) is the corresponding row of user u in matrix V ,vector T T k ( g ) is the corresponding column of genre g in matrix T T ,and  X  is a weighting parameter.

As a result, our enrichment algorithm outputs a user pro-file that contains weight preferences to all available genres in the system. Such values are a combination of user feedback, topic preference and relevance to associated genres. With the set of enriched profiles, our recommender computes the similarities of all users.
We compute the adjacency of users for individual u over all remaining enriched profiles using each genre weight w ( g,u ) which was defined in last subsection (Equation 4). After be-ing computed using the factorized user-genre matrix, these weights represent the user X  X  preference and relevance com-bination for different topics associated to the genres. Con-sidering two users u and v , their similarity sim ( u, v )iscal-culated using the Pearson correlation coefficient [1]: sim ( u, v )= g  X  G where  X  w ( u )and  X  w ( v ) are averages of users u and v for the weights associated to all available genres.
The recommender proposed in this paper is similar to tra-ditional collaborative filtering algorithms [1], but instead of using the similarity of users calculated from past ratings, it considers the adjacencies of users constructed from the en-riched profiles. Thus, considering f g as a normalizing factor selected as f g = v  X   X  U sim ( u, v ), where  X  U is the set of the most similar users to u , the prediction of unknown rating  X  ( s ) is defined as:  X  u ( s )=
Such normalizing factor is used to indicate whether a user does not have any other individual who is similar to her. In such cases, therefore, the prediction is based solely on the simple average of the enriched profile.
This section provides the experimental results of the rec-ommender system proposed in this paper. It consists of comparing the results of different modules that compose the algorithm. In particular, we evaluated the recommender re-sults using the Root Mean Squared Error metric (RMSE) [13], providing the performance for each user considered in the dataset.

The samples that were used as input data for evaluation were gathered from the MovieLens dataset 2 . We randomly selected 500 users, corresponding to 197 . 211 ratings. This set was split into training and test sets, being the first used to construct the users X  profiles, and the second to test our predictions against its actual ratings. This division was made in a way to have exactly 10 ratings for each user in the test set. Consequently, the training and test sets contain 192 . 211 and 5 . 000 ratings, respectively. The parameters of our recommender were defined experimentally as follows: in the genre-based collaborative filtering, we select |  X  U | most similar users; and  X  =0 . 5 for Equation 4.

Figure 1 illustrates the experimental results for each user and corresponding module. Figure 1(a) is presented for com-parison purposes only: the prediction for an unknown rating  X  ( s ) is computed as the simple average of w ( g,u )valuesin profiles without enrichment for all genres available in s .As equivalent, Figure 1(b) presents the results for the simple average with enriched profiles module (see second part of Equation 6), where the unknown rating  X  u ( s ) is computed based on the redefined w ( g,u ) values (Equation 4).
Comparing both strategies presented in Figure 1(a) and 1(b), we can observe a significant improvement of results when the enrichment based on the factorized user-genre ma-trix is adopted, whose overall RMSE decreased from 1 . 5350 to 0 . 9617. This is because the enrichment procedure is re-ducing the effects of cold start, as unknown preferences for particular genres are predicted from the model, and also, because those weights are adjusted in order to consider the most relevant topics of interest associated to that genres.
Figure 1(c) presents the results for the final recommen-dation strategy adopted in this paper. The set of enriched profiles are used to compute clusters of similar users, and af-ter that, a collaborative filtering technique is used to predict http://www.grouplens.org/node/12/ an unknown rating. The overall RMSE achieved a score of 0 . 8743, which is better than the simple average illustrated in Figure 1(b). This demonstrates the effectiveness of using the enrichment procedure in association with collaborative methods in order to improve the quality of recommendation.
This paper presented a recommender algorithm based on a factorized user-genre matrix model that is used to discover latent factors from genres in order to enrich users profiles. This enrichment has the main objective to adjust the user preference for a genre by considering the most relevant topics that compose the genre. For instance, an adjusted prefer-ence for science fiction will indicate the user X  X  interests for different topics, such as undead people, the end of the world and star wars.

The main advantage of using the proposed model instead of traditional user-item ratings factorization methods is that the matrix will be less sparse because individual weights will be associated to a general information about all the content. Then, by using factorization, it is possible to infer latent semantics without the need of further metadata.

As future work, we plan to investigate more efficient ways to exploit the model in order to address other known prob-lems, such as cold start, overspecialization and sparsity of users. The author would like to thank the financial support from FAPESP, process number 2011/17366-2. [1] G. Adomavicius and A. Tuzhilin. Toward the Next [2] R. Bell, Y. Koren, and C. Volinsky. Modeling [3] M. D. Ekstrand, J. Riedl, and J. A. Konstan.
 [4] Z. Gantner, L. Drumond, C. Freudenthaler, S. Rendle, [5] R. Gemulla, E. Nijkamp, P. J. Haas, and Y. Sismanis. [6] Y. Koren. Factor in the neighbors: Scalable and [7] Y. Koren, R. Bell, and C. Volinsky. Matrix [8] M. Kurucz, A. A. Bencz  X  ur, and B. Torma. Methods [9] M.G.ManzatoandR.Goularte.Peersommender:A [10] A. K. Menon and C. Elkan. Dyadic prediction using a [11] A. Paterek. Improving regularized singular value [12] S. Rendle and S.-T. Lars. Online-updating regularized [13] F. Ricci, L. Rokach, B. Shapira, and P. B. Kantor, [14] B. M. Sarwar, G. Karypis, J. A. Konstan, and J. T.
