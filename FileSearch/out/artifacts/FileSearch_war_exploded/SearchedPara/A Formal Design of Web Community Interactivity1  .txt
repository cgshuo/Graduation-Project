 A Web community (WC) is a Web-enabled co mmunication and social interaction be-tween a group of people that have common interests. Rheingold [1] envisions a WC mation and communication technologies, however, have given impetus to WCs as business enablers in the digita l marketplace. Many organiza tions leverage virtual com-liefs of their customer base, and hence, create value through intention-based customer relationships [2,3].

The main thrust of this paper is to provid e a formal framework to measure inter-activity of members in a WC, and also determine the community X  X  interactivity level. the usefulness of such contributions to the needs of the community. To achieve the en-visioned objectives, we leverage algebraic signatures to formally specify components of the interactivity model to provide a sound foundation. The use of formal and the-oretical foundations is particularly important for this new research area to guarantee correctness and completeness of the system . We design an interactivity model that uses a common term vocabulary ( CTV ) to automatically filter irrelivant messages from the community. Automatically filtering irrelivant messages eliminates the manual process that is time consuming, labour intensive, an d error prone. In addition, we provide an e ffi cient interactivity algorithm and implement a prototype of the system.
The remaining part of this paper is structured as follows. In Section 2, we provide background information on our specification, and also discuss related work. Section 3 examines the dynamics of interactivity, and hence, presents a formal framework for a WC interactivity. We design an interactivity algorithm in Section 4, while Section 5 concludes the paper and provides insight into future work. requirements. Pre-and post-conditions are stated as predicates. A simple predicate usu-common use. Every declaration must satisfy a given constraint. In general, a quantified statement can be written in one of two forms: 1. &lt; quantifier &gt;&lt; declaration(s) &gt;  X  &lt; predicate &gt; ; 2. &lt; quantifier &gt;&lt; declaration(s) &gt; | &lt; constraint &gt;  X  The symbols  X  |  X  X nd X   X   X , which are part of the syntax mean  X  X atisfying X  and  X  X uch that X , respectively. To create compound predicates, statements can be nested and com-in this paper follows the general format of a quantified statement.
 There are some previous research e ff orts that are tangentially related to our work. Lave and Wenger [4], and Menegon and D X  X ndrea [5] observe that members of a com-munity develop shared practice by interacting around problems, solutions, and insights, and building a common store of knowledge. Blanchard and Markus [6] argue that  X  X he success of community support platforms depe nds on the active participation of a sig-nificant percentage of the community members X . Community participation is necessary for sustained interactivity. Some research [7,6] have examined the e ff ect of size and under-contribution for online communities. These research work suggest ways of us-ing concepts in social psychology to motivate contributions. In this paper, we provide a formal framework to dynamically measure the interactivity of members, and indeed the interactivity level of the community. dynamics. We use the interactivity lifecycle in Figure 1 to discuss the dynamics of a WC interactivity. It is a multi-user, Web-based system designed to provide a WC where members can interact and exchange ideas. The system has several servers in a server Video frames need to be transmitted quickly and in synchrony but at relatively low res-olution to support video conferencing. Video contents may be compressed in a store, so the video server may handle video compression and decompression into di ff erent formats. There is also an audio server that facilitates teleconferencing. Both the audio The other activities (such as post messages, read messages, reply messages, etc.) in the WC fall under message activities. There are di ff erent data servers used to manage mes-sages and display member X  X  interactivity records. These data servers provide support for extensive queries and scripting facilities to enable members interact.
To address the issue of posting irrelivant messages that have nothing to do with the subject of discussion, some communities moderate messages posted. Manually mod-erating messages in large communities can be time consuming, labour intensive, and error prone. Therefore, there is a need to automate the process of filtering messages that are posted in a given community. We leverage a ( CTV ) to automatically filter mes-sages before they are posted. A CTV is an ontology that contains primitive terms in a given domain and does not prescribe any structure for its designers [8]. When a mem-ber writes a message, that message has to pass through a filter mechanism. The filter mechanism, which uses the CTV , is an accepting device that either accepts a message and it is posted, or rejects otherwise [9]. 3.1 Formal Foundation community. Adiele and Ehikioya [8] identified three categories of membership, namely executive, senior and ordinary members with corresponding degrees of participation. users. Accordingly, we classify members into three groups, namely: Leading Members (LM)-these are members that make substantial contributions to the community by post-ing, responding and reading messages on a regular basis; Active Members (AM)-these are members that make some contributions to the community that are far less than the contributions of LM; and Non-active Members (NM)-these are members that make minimal or no contributions at all to the community.
We model Members participation as a function of class of membership. Accordingly, the following inequalities hold: Let MEMBER be the basic type for members of a WC. Let Mem be a non-empty power set of members (i.e. Mem : 1 MEMBER). There are three classes of membership divided according to members X  p articipation levels over a specified time window [7].

Let LM , AM ,and NM represent the set of leading members, active members and non-active members respectively. LM , AM ,and NM are the three classes of member-ship and every member can only belong to one class at a given time.
Every member in the community is unique. We capture this uniqueness formally as follows: Activity: In a WC, a member performs certain actions, which we call activities to con-surements. For example, we count the num ber of messages that a member may have posted, read or replied to determine the member X  X  contributions. While we measure the time a member spends on video conferencing or teleconferencing to determine the member X  X  contributions. We refer to the former as message activities and the latter as conferencing activities. Let MA represent the set of message activities and CA represent the set of conferencing activities.Thus,
Let ACTIVITY be the basic type for activities that members can participate (a formal 1 ACTIVITY.
 Definition 1: An activity, a i , is an action that a member, m j , undertakes in a WC to contribute to the community.

In every WC, an activity, a i  X  A has a measure of importance. That importance is cap-of the activity in a given community. Let W be the set of weights for a corresponding set of activities A . Let VALUE be the basic type of values. The product of a i and w j represents the value of the activity in a given community. We define a function Value that returns the value of each activity.
 We define a function Participate that returns the activity a member participates in.
A member can only participate in one activity at a given time instance. Let t be a time instance of type TIME, we capture this constraint formally:
To participate in a WC, a member has to log in to the system. We define status of members to facilitate the Login operation. Status = { ON , OFF } . Formally, A member who logs into the system can also log out at will. The definition of Logout follows.

To simplify our exposition and facilitate understandability, we discuss a subset of the ( rP ) for a message that responds to another message, thus building the thread; Reads R for messages read by a member. Let MESSAGE be the basic type for messages and MA be a set of messages for messages posted / repliedtoinaWC. MA is a subset of activities, such that MA = { sP , rP } ,where MA  X  A .Let tM be the total number of messages, such that sP + rP  X  tM .

We specify a generic CTV that provides enterprise-wide definition of terms (called context labels) to automate the process of filtering messages. The CTV is organized hi-erarchically using linguistic relations to show how terms relate to one another. To cap-ture these linguistic relations, we let CONTEXT-LABEL be the basic type for context tifiers, where synon , hyper , hyponandmeron are synonym, hypernym, hyponym, and meronymy, respectively. To define the CTV , we first, define a context label, cl ,asa primitive term (word) that has a unique meaning in the real world. A formal definition of linguistic relation follows. Let be a linguistic relation, then: Definition 2: A CTV is a pair ( CL , ), where CL is a set of context labels and is a cl i and cl j is one of Definition 3: A filter mechanism , FM is an accepting device, which uses the CTV to parse words in a message, and if the message meets a given acceptance standard the message is accepted, otherwise it is rejected.

To represent this partial function formally, we let DATABASE be the basic type of database. Only messages parsed by the filter mechanism are posted.

We define a function Update that updates the database. To enable us define the func-tion Update , we give the signature of Write , a function that writes into the database. Interactivity: Let WC be a Web community, there exists a set of members Mem and a Definition 4: The interactivity of a member, m j of a WC for a given time window, W width of W . Formally,
Definition 4 represents the interactivity of a member in a WC. We extend this defini-In this section, we present an interactivity algorithm that describes how to capture the interactivity of members in a WC. We also describe a prototype of the system. Algorithm: Measure-Interactivity Input: (Unique member X  X  ID and members X  X  activities) Output: (Member X  X  interactivity level) 1. while login( Mid ) 2 Participate in activity 3. if a i  X  MA and a i = R then 4. search(messages); read(messages); 5. computeInteractivity( Mid ); 6. else if a i is any of ( sP , rP , Res )then 7. filter(messages); updateDb( ); 8. else if a i  X  CM then 9. T 1 = startTime(conferencing); 10. T 2 = stopTime(conferencing); 11. T = T 2 -T 1 ; 12. computeInteractivity( Mid ); 13. updateDB(messages); 14. end(while) 15. end.

We implemented a prototype of the WC on a client-server architecture using apache server 1.3.34 (Unix) as our Web server and Javascript as our main development lan-open source HTTP web server for Unix-like s ystems. JavaScript permits easy vertical migration in future, and allows platform independence. We used CSS to specify the presentation of elements on the Web page independent of the document structure. At the backend, we used MySQL version 4.1.0 as the database and the application uses SQL query language to manipulate the database. Our prototype uses PHP to connect the client to database server and to run queries in the database from the client side. bers posted. When a member posts a message, the filter mechanism uses the CTV to parse the message. Figure 2(b) shows how a member can search for posted messages. Messages are indexed in the database according to subjects and titles. The system has an e ffi cient search mechanism to enable members search for messages and respond to them. In this paper, we formally specified components of an interactivity model to measure the contributions of members of a WC. The use of formal and theoretical foundations characterized mostly by ad-hoc solutions. We also designed an interactivity algorithm and provided a prototype of the Web community.

The model we presented dynamically measures individual member X  X  interactivity, and indeed, the interactivity level of the co mmunity. These measur ements will enable tion provides a framework to address individual member X  X  needs and reward deserving members.

