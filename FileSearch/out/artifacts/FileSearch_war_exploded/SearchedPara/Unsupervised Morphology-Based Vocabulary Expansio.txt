 In many applications in human language technolo-gies (HLT), the goal is to generate text in a target language, using its standard orthography. Typical examples include automatic speech recognition (ASR, also known as STT or speech-to-text), opti-cal character recognition (OCR), or machine trans-lation (MT) into a target language. We will call such HLT applications  X  X arget-language genera-tion technologies X  (TLGT). The best-performing systems for these applications today rely on train-ing on large amounts of data: in the case of ASR, the data is aligned audio and transcription, plus large unannotated data for the language model-ing; in the case of OCR, it is transcribed optical data; in the case of MT, it is aligned bitexts. More data provides for better results. For languages with rich resources, such as English, more data is often the best solution, since the required data is readily available (including bitexts), and the cost of anno-tating (e.g., transcribing) data is outweighed by the potential significance of the systems that the data will enable. Thus, in HLT, improvements in qual-ity are often brought about by using larger data sets (Banko and Brill, 2001).

When we move to low-resource languages, the solution of simply using more data becomes less appealing. Unannotated data is less readily avail-able: for example, at the time of publishing this paper, 55% of all websites are in English, the top 10 languages collectively account for 90% of web presence, and the top 36 languages have a web All other languages (and all languages considered in this paper except Persian) have a web presence of less than 0.1%. Considering Wikipedia, another resource often used in HLT, English has 4.4 mil-lion articles, while only 48 other languages have veloping HLT for more languages, including low-resource languages, alternatives to  X  X ore-data X  approaches become important.

At the same time, it is often not possible to use knowledge-rich approaches. For low-resource lan-guages, resources such as morphological analyz-ers are not usually available, and even good schol-arly descriptions of the morphology (from which a tool could be built) are often not available. The challenge is therefore to use data, but to make do with a small amount of data, and thus to use data better. This paper is a contribution to this goal. Specifically, we address TLGTs, i.e., the types of HLT mentioned above that generate target lan-guage text. We propose a new approach to gener-ating unseen words of the target language which have not been seen in the training data. Our ap-proach is entirely unsupervised. It assumes that word-units are specified, typically by whitespace and punctuation.
Expanding the vocabulary of the target lan-guage can be useful for TLGTs in different ways. For ASR and OCR, which can compose words from smaller units (phones or graphically recog-nized letters), an expanded target language vocab-ulary can be directly exploited without the need for changing the technology at all: the new words need to be inserted into the relevant resources (lex-icon, language model) etc, with appropriately es-timated probabilities. In the case of MT into mor-phologically rich low-resource languages, mor-phological segmentation is typically used in devel-oping the translation models to reduce sparsity, but this does not guarantee against generating wrong word combinations. The expanded word combi-nations can be used to extend the language models used for MT to bias against incoherent hypothe-sized new sequences of segmented words.

Our approach relies on unsupervised morpho-logical segmentation. We do not in this paper con-tribute to research in unsupervised morphological segmentation; we only use it. The contribution of this paper lies in proposing how to use the re-sults of unsupervised morphological segmentation in order to generate unseen words of the language. We investigate several ways of doing so, and we test them on seven low-resource languages. These languages have very different morphological prop-erties, and we show how our results differ depend-ing on the morphological complexity of the lan-guage. In our best result (on Assamese), we show that our approach can predict 29% of the token-based out-of-vocabulary with a small amount of unlabeled training data.

The paper is structured as follows. We first dis-cuss related work in Section 2. We then present our method in Section 3, and present experimental results in Section 4. We conclude with a discus-sion of future work in Section 5. Approaches to Morphological Modeling Computational morphology is a very active area of research with a multitude of approaches that vary in the degree of manual annotation needed, and the amount of machine learning used. At one extreme, we find systems that are painstakingly and carefully designed by hand (Koskenniemi, 1983; Buckwalter, 2004; Habash and Rambow, 2006; D  X  etrez and Ranta, 2012). Next on the continuum, we find work that focuses on defining morphological models with limited lexica that are then extended using raw text (Cl  X  ement et al., 2004; Forsberg et al., 2006). In the middle of this continuum, we find efforts to learn complete paradigms using fully supervised methods relying on completely annotated data points with rich morphological information (Durrett and DeNero, 2013; Eskander et al., 2013). Next, there is work on minimally supervised methods that use available resources such as dictionaries, bitexts, and other additional morphological annotations (Yarowsky and Wicentowski, 2000; Cucerzan and Yarowsky, 2002; Neuvel and Fulop, 2002; Snyder and Barzilay, 2008). At the other extreme, we find unsupervised methods that learn morphology models from unannotated data (Creutz and Lagus, 2007; Monson et al., 2008; Dreyer and Eisner, 2011; Sirts and Goldwater, 2013).

The work we present in this paper makes no use of any morphological annotations whatsoever, yet we are quite distinct from the approaches cited above. We compare our work to two efforts specif-ically. First, consider work in automatic mor-phological segmentation learning from unanno-tated data (Creutz and Lagus, 2007; Monson et al., 2008). Unlike these approaches which provide segmentations for training data and produce mod-els that can be used to segment unseen words, our approach can generate words that have not been seen in the training data. The focus of efforts is rather complementary: we actually use an off-the-shelf unsupervised segmentation system (Creutz and Lagus, 2007) as part of our approach. Second, consider paradigm completion methods such as the work of Dreyer and Eisner (2011). This effort is closely related to our work although unlike it, we make no assumptions about the data and do not introduce any restrictions along the lines of deriva-tion/inflectional morphology: Dreyer and Eisner (2011) limited their work to verbal paradigms and used annotated training data in addition to basic assumptions about the problem such as the size of the paradigms. In our approach, we have zero annotated information and we do not distinguish between inflectional and derivational morphology, nor do we limit ourselves to a specific part-of-speech (POS).
 Vocabulary Expansion in HLT There have been diverse approaches towards dealing with out-of-vocabulary (OOV) words in ASR. In some models, the approach is to expand the lexicon by adding new words or pronunciations. Ohtsuki et al. (2005) propose a two-run model where in the first run, the input speech is recognized by the reference vocabulary and relevant words are ex-tracted from the vocabulary database and added thereafter to the reference vocabulary to build an expanded lexicon. Word recognition is done in the second run based on the lexicon. Lei et al. (2009) expanded the pronunciation lexicon via generat-ing all possible pronunciations for a word be-fore lattice generation and indexation. There are also other methods for generating abbreviations in voice search systems such as Yang et al. (2012). While all of these approaches involve lexicon ex-pansion, they do not employ any morphological information.

In the context of MT, several researchers have addressed the problem of OOV words by relating them to known in-vocabulary (INV) words. Yang and Kirchhoff (2006) anticipated OOV words that are potentially morphologically related using phrase-based backoff models. Habash (2008) con-sidered different techniques for vocabulary expan-sion online. One of their techniques learned mod-els of morphological mapping between morpho-logically rich source words in Arabic that pro-duce the same English translation. This was used to relate an OOV word to a morphologically re-lated INV word. Another technique expanded the MT phrase tables with possible transliterations and spelling alternatives. 3.1 Approach Our approach to morphology-based vocabulary expansion consists of three steps (Figure 1). We start with a  X  X raining X  corpus of (unannotated) words and generate a list of new (unseen) words that expands the vocabulary of the training corpus. 1. Unsupervised Morphology Segmentation 2. FST-based Morphology Expansion We 3. Reranking Models Given that the size of the Figure 1: The flowchart of the lexicon expansion system. 3.2 Morphology Expansion Techniques As stated above, the input to the morphology ex-pansion step is a list of words segmented into mor-phemes: zero or more prefixes, one stem, and zero or more suffixes. Figure 2a presents an example of such input using English words (for clarity).
We use two different models of morphology ex-pansion in this paper: Fixed Affix model and Bi-gram Affix model. 3.2.1 Fixed Affix Expansion Model In the Fixed Affix model, we construct a set of fused prefixes from all the unique prefix sequences in the training data; and we similarly construct a analyzing inputs as well as word generation. set of fused suffixes from all the unique suffix se-quences in the training data. In other words, we simply pick characters from beginning of the word up to the first stem as the prefix and characters from the first suffix to the end of the word as the suffix. Everything in the middle is the stem. In this model, each word has one single prefix and one single suffix (each of which can be empty in-dependently). The Fixed Affix model is simply the concatenation of the disjunction of all prefixes with the disjunction of all stems and the disjunc-tion of all suffixes into one FST: The morpheme paths in the FST are weighted to Figure 2b exemplifies a Fixed Affix model derived from the example training data in Figure 2a. 3.2.2 Bigram Affix Expansion Model In the Bigram Affix model, we do the same for the stem as in the Fixed Affix model, but for prefixes and suffixes, we create a bigram language model in the finite state machine. The advantage of this technique is that unseen compound affixes can be generated by our model. For example, the Fixed Affix model in Figure 2b cannot generate the word func+tion+al+ly since the suffix +tionally is not seen in the training data. However, this word can be generated in the Bigram Affix model as shown in Figure 2c: there is a path passing 0  X  4  X  1  X  2  X  5  X  6  X  3 in the FST that can produce this word. We expect this model to have better recall for generating new words in the language because of its affixation flexibility. 3.3 Reranking Techniques The expanded models allow for a large number of words to be generated. We limit the number of vo-cabulary expansion using different thresholds af-ter reranking or reweighing the WFSTs generated above. We consider four reranking conditions. 3.3.1 No Reranking (NRR) The baseline reranking option is no reranking (NRR). In this approach we use the weights in the WFST, which are based on the independent prefix/stem/suffix probabilities, to determine the ranking of the expanded vocabulary. 3.3.2 Trigraph-based Reweighting (W  X  Tr) We reweight the weights in the WFST model (Fixed or Bigram) by composing it with a letter trigraph language model ( W  X  Tr). A letter tri-graph LM is itself a WFST where each trigraph (a sequence of three consequent letters) has an asso-ciated weight equal to its negative log-likelihood in the training data. This reweighting allows us to model preferences of sequences of word letters seen more in the training data. For example, in a word like producttions , the trigraphs ctt and tti are very rare and thus decrease its probability. 3.3.3 Trigraph-based Reranking (TRR) When we compose our initial WFST with the tri-graph FST, the probability of each generated word from the new FST is equal to the product of the probability of its morphemes and the probabilities of each trigraph in that word. This basically makes the model prefer shorter words and may degrade the effect of morphology information. Instead of reweighting the WFST, we get the n-best list of generated words and rerank them using their tri-graph probabilities. We will refer to this technique as TRR. 3.3.4 Reranking Morpheme Boundaries The last reranking technique reranks the n-best generated word list with trigraphs that are incident on the morpheme boundaries (in case of Bigram Affix model, the last prefix and first suffix). The intuition is that we already know that any mor-pheme that is generated from the morphology FST is already seen in the training data but the bound-ary for different morphemes are not guaranteed to be seen in the training data. For example, for the word producttions , we only take into account the trigraphs rod , odu , ctt and tti instead of all possible trigraphs. We will refer to this technique as BRR. 4.1 Evaluation Data and Tools Evaluation Data The IARPA Babel program is a research program for developing rapid spoken detection systems for under-resourced languages (Harper, 2013). We use the IARPA Babel pro-gram limited language pack data which consists of 20 hours of telephone speech with transcrip-tion. We use six languages which are known to have rich morphology: Assamese (IARPA-babel102b-v0.5a), Bengali (IARPA-babel103b-v0.4b), Pashto (IARPA-babel104b-v0.4bY), Taga-log (IARPA-babel106-v0.2g), Turkish (IARPA-babel105b-v0.4) and Zulu (IARPA-babel206b-v0.1e). Speech annotation such as silences and hesitations are removed from transcription and all words are turned into lower-case (for languages using the Roman script  X  Tagalog, Turkish and Zulu). Moreover, in order to be able to perform a manual error analysis, we include a language that has rich morphology and of which the first author is a native speaker: Persian. We sampled data from the training and development set of the Persian de-pendency treebank (Rasooli et al., 2013) to create a comparable seventh dataset in Persian. Statis-tics about the datasets are shown in Table 1. We also conduct further experiments on just verbs and nouns in the data set for Persian (Persian-N and Persian V). As shown in Table 1, the training data is very small and the OOV rate is high especially in terms of types. For some languages that have richer morphology such as Turkish and Zulu, the OOV rate is much higher than other languages. Word Generation Tools and Settings For un-supervised learning of morphology, we use Mor-fessor CAT-MAP (v. 0.9.2) which was shown to be a very accurate morphological analyzer for mor-phologically rich languages (Creutz and Lagus, 2007). In order to be able to analyze Unicode-based data, we convert each character in our dataset to some conventional ASCII character and then train Morfessor on the mapped dataset; after finishing the training, we map the data back to the original character set. We use the default setting in Morfessor for unsupervised learning.

For preparing the WFST, we use OpenFST (Ri-ley et al., 2009). We get the top one million short-est paths (i.e., least costly paths of words) and ap-ply our reranking models on them. It is worth pointing out that our WFSTs are character-based experiments. and thus we also have a morphological analyzer that can give all possible segmentations for a given word. By running the morphological analyzer on the OOVs, we can have the potential upper bound of OOV reduction by the system (labeled  X   X   X  in Tables 2 and 3). 4.2 Lexicon Expansion Results The results for lexicon expansion are shown in Ta-ble 2 for types and Table 3 for tokens.

We use the trigraph WFST as our baseline model. This model does not use any morphologi-cal information. In this case, words are generated according to the likelihood of their trigraphs, with-out using any information from the morphologi-cal segmentation. We call this model the trigraph WFST (Tr. WFST). We consistently have better numbers than this baseline in all of our models except for Pashto when measured by tokens.  X  is the upper-bound OOV reduction for our expan-sion model: for each word in the development set, we ask if our model, without any vocabulary size restriction at all, could generate it.

The best results (again, except for Pashto) are achieved using one of the three reranking methods (reranking by trigraph probabilities or morpheme boundaries) as opposed to doing no reranking. To our surprise, the Fixed Affix model does a slightly better job in reducing out of vocabulary than the Bigram Affix model. We can also see from the results that reranking in general is very effective.
We also compare our models with the case that there is much more training data and we do not do vocabulary expansion at all. In Table 2 and Ta-ble 3,  X  X P X  indicates the full language pack for the Babel project data which is approximately six to eight times larger than the limited pack training data, and the full training data for Persian which is approximately five times larger. We see that the larger training data outperforms our methods in all languages. However, from the results of  X  , which is the upper-bound OOV reduction by our expansion model, for some languages such as As-samese, our numbers are close to the FP results and for Zulu it is even better than FP.

We also study how OOV reduction is affected by the size of the generated vocabulary. The trends for different sizes of the lexicon expansion by Fixed Affix model that is reranked by trigraph probabilities is shown in Figure 3. As seen in the results, for languages that have richer morphol-ogy, it is harder to achieve results near to the up-per bound. As an outlier, morphology does not help for Pashto. One possible reason might be that based on the results in Table 4, Morfessor does not explore morphology in Pashto as well as other lan-guages.
 Morphological Complexity As for further anal-ysis, we can study the correlation between mor-phological complexity and hardness of reducing OOVs. Much work has been done in linguis-tics to classify languages (Sapir, 1921; Greenberg, 1960). The common wisdom is that languages are not either agglutinative or fusional, but are on a spectrum; however, no work to our knowl-edge places all languages (or at least the ones we worked on) on such a spectrum. We propose sev-eral metrics. First, we can consider the number of unique affixival morphemes in each language, as determined by Morfessor. As shown in Table 4 ( | pr | + | sf | ), Zulu has the most morphemes and Pashto the fewest. A second possible metric of the Language Language same as Table 2. complexity of the morphology is by calculating the average number of unique prefix-suffix pairs in the training data after morpheme segmentation which is shown as | If | in Table 4. Finally, a third possible metric is the number of all possible words that can be generated ( | L | ). These three metrics correlate fairly well across the languages.
The metrics we propose also correlate with commonly accepted classifications: e.g., Zulu and Turkish (highly agglutinative) have higher scores in terms of our | pr | + | sf | , | If | and | L | metrics in Table 4 than other languages. The results from full language packs in Table 3 also show that there is a reverse interaction of morphological complexity and the effect of blindly adding more data. Thus for morphologically rich languages, adding more data is less effective than for languages with poor morphology.

The size of the languages ( | L | ) suggests that we are suffering from vast overgeneration; we over-generate because in our model any affix can at-tach to any stem, which is not in general true. Thus there is a lack of linguistic knowledge such as paradigm information (Stump, 2001) for each word category in our model. In other words, all morphemes are treated the same in our model which is not true in natural languages. One way to tackle this problem is through an unsupervised POS tagger. The challenge here is that fully unsu-pervised POS taggers (without any tag dictionary) are not very accurate (Christodoulopoulos et al., 2010). Another way is through using joint mor-trigraph reranking.
 Language | pr | | stm | | sf | | L | | If | Assamese 4 4791 564 10.8M 1.8 Bengali 3 6496 378 7.4M 1.5 Pashto 1 5395 271 1.5M 1.3 Persian 49 6998 538 184M 2.0 Tagalog 179 4259 299 228M 1.5 Turkish 45 5266 1801 427M 2.3 Zulu 2254 5680 427 5.5B 2.8 Persian-N 3 6121 268 4.9M 1.5 Persian-V 43 788 44 1.5M 3.4 Table 4: Information about the number of unique morphemes in the Fixed Affix model for each dataset including empty affixes. | L | shows the upper bound of the number of possible unique words that can be generated from the word gener-ation model. | If | is the average number of unique prefix-suffix pairs (including empty pairs) for each stem. phology and tagging models such as Frank et al. (2013).
 Error Analysis on Turkish Unfortunately for most languages we could not find an available rule-based or supervised morphological analyzer to verify the words generated by our model. The only available tool for us is a Turkish finite-state morphological analyzer (Oflazer, 1996) imple-mented with the Xerox FST toolkit (Beesley and Karttunen, 2003). As we can see in Table 5, the system with the largest proportion of correct gen-erated words reranks the expansion with trigraph probabilities using a Fixed Affix model. Results also show that we are overgenerating many non-sense words that we ought to be pruning from our results. Another observation is that the recognition percentage of the morphological analyzer on INV words is much higher than on OOVs, which shows that OOVs in Turkish dataset are much harder to analyze. Table 5: Results from running a hand-crafted Turkish morphological analyzer (Oflazer, 1996) on different expansions and on the development set. Precision refers to the percentage of the words are recognized by the analyzer. The results on de-velopment are also separated into INV and OOV. Error Analysis on Persian From the best 50k word result for Persian (Fixed Affix Model:BRR), we randomly picked 200 words and manually an-alyzed them. 89 words are correct (45.5%) where 55.0% of these words are from noun affixation, 23.6% from verb clitics, 9.0% from verb inflec-tions, 5.6% from incorrect affixations that acci-dentally resulted in possible words, 4.5% from un-inflected stems, and a few from adjective affixa-tion. Among incorrectly generated words, 65.8% are from combining a stem of one POS with af-fixes from another POS (e.g., attaching a noun af-fix to a verb stem), 14.4% from combining a stem with affixes which are compatible with POS but not allowed for that particular stem (e.g., there is a noun suffix that can only attach to a subset of noun stems), 9.0% are from wrong affixes pro-duced by Morfessor and others are from incorrect vowel harmony or double affixation.

In order to study the effect of vocabulary ex-pansion more deeply, we trained a subset of all nouns and verbs in the same dataset (also shown in Table 1). Verbs in Persian have rich but more or less regular morphology, while nouns, which have many irregular cases, have rich morphol-ogy but not as rich as verbs. The results in Ta-ble 4 show that Morfessor captures these phenom-ena. Furthermore, our results in Table 2 and Ta-ble 3 show that our performance on OOV reduc-tion with verbs is far superior to our performance with nouns. We also randomly picked 200 words from each of the experiments (noun and verbs) to study the degree of correctness of generated forms. For nouns, 94 words are correct and for verbs only 71 words are correct. Most verb errors are due to incorrect morpheme extraction by Mor-fessor. In contrast, most noun errors result from affixes that are only compatible with a subset of all possible noun stems. This suggests that if we conduct experiments using more accurate unsu-pervised morphology and also have a more fine-grained paradigm completion model, we might improve our performance. We have presented an approach to generating new words. This approach is useful for low-resource, morphologically rich languages. It provides words that can be used in HLT applications that require target-language generation in this language, such as ASR, OCR, and MT. An implementation of our approach, named BabelGUM (Babel General Un-supervised Morphology), will be publicly avail-able. Please contact the authors for more infor-mation.

In future work we will explore the possibil-ity of jointly performing unsupervised morpho-logical segmentation with clustering of words into classes with similar morphological behavior. These classes will extend POS classes. We will tune the system for our purposes, namely OOV re-duction.
 We thank Anahita Bhiwandiwalla, Brian Kings-bury, Lidia Mangu, Michael Picheny, Beno  X   X t Sagot, Murat Saraclar, and G  X  eraldine Walther for helpful discussions. The project is supported by the Intelligence Advanced Research Projects Ac-tivity (IARPA) via Department of Defense U.S. Army Research Laboratory (DoD/ARL) contract number W911NF-12-C-0012. The U.S. Govern-ment is authorized to reproduce and distribute reprints for Governmental purposes notwithstand-ing any copyright annotation thereon. Disclaimer: The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of IARPA, DoD/ARL, or the U.S. Government.
