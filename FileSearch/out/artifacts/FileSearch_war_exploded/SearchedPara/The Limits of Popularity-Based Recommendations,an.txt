 In this paper we introduce a mathematical model that cap-tures some of the salient features of recommender systems that are based on popularity and that try to exploit social ties among the users. We show that, under very general conditions, the market always converges to a steady state, for which we are able to give an explicit form. Thanks to this we can tell rather precisely how much a market is altered by a recommendation system, and determine the power of users to influence others. Our theoretical results are complemented by experiments with real world social networks showing that social graphs prevent large market distortions in spite of the presence of highly influential users.
Recommender systems (RS X  X ) are a paradigmatic example of the interaction between humans and algorithms in the cultural arena. From YouTube videos to books on Amazon and movies on iTunes or Netflix, online choices are increas-ingly mediated by such algorithms. RS X  X  are popular for their ability to conjure up non-trivial relationships between products or news stories, and as such they are becoming powerful economic actors. It is this economic dimension of RS X  X  that we intend to explore in this paper.

A fundamental question in this context, and the one we intend to tackle in this paper, is the following: to what extent can a market be altered by a RS? For instance, assume that an online bookstore starts adopting a RS. Will unknown books become hits and vice-versa? How and how much will the habit of the typical reader change? A large body of work has investigated questions of this kind at the individual, user level [8, 25, 26, 35]. For instance, a nice experiment described Corresponding author. Address: bressan@di.uniroma1.it in [25] suggests that even a simple type of feedback, such as providing the ranking based on the number of downloads, may significantly boost market shares. Studies such as these provide precious insights but it is di cult to derive from them quantitatively accurate predictions about markets in the long-run. Also, it is entirely conceivable that the amplification e  X  ects observed be temporary, or not transferable to markets whose sheer size and complexity dwarfs that of artificial settings. Other studies have tried to draw conclusions from behavioural data of real markets [11, ? , 10, 23], but the paucity of available data makes them tentative.

In this paper we try a di  X  erent approach by introducing a natural model for markets that are governed by a RS. Our model is simple enough to allow for a precise mathematical analysis of long-term behaviours, while at the same time it captures some of the relevant features of RS X  X . Specifically, there are two ingredients that are known to play an important role in RS X  X  and that we want our model to represent. The first is popularity, i.e. the degree of success of an item in its market. Several studies indicate that popularity feedback ( e.g. number of downloads, user ratings, number of views, etc) can be a powerful determinant of online behaviour [25, 5, 35]. The second ingredient is, for lack of a better terminology, the  X  X eb of kinship X  X mong users. Social ties are the paradigmatic example here. They are recognized to be an important factor that shape user choices, and recommenders try to leverage them in a variety of ways [22, 31, 33, 6]. More generally RS X  X  try to exploit di  X  erent types of similarities between users, such as explicit links in an online social network, similarity between patterns of consumer choice, or even the result of complex computations like matrix factorization. All these diverse situations can be simply and usefully represented, as we show in this paper, by assuming the existence of a (weighted) network connecting the users.

In simplified form, our mathematical model of market evolution is as follows. In the market we have users (or buyers), connected via a network, and products. When a user buys a product, it either follows its personal inclinations (mode led by a private probability distribution over the products) or it follows a recommendation with a certain probability. When it does, it consults a random neighbour in the network, the recommender node . The recommender node picks a random product from its own list of products purchased so far, with a probability that is proportional to the popularity of the product in that moment, and the item so selected is bought by the current buyer.
The main theoretical result in this paper is that this type of system, encompassing a large class of recommenders, always converges to a unique, stationary limit. The result holds under very general conditions. First, users can buy products at di  X  erent rates. User u , say, can be ten times faster than user v and one thousand times slower than user w etc. Second, the probability of following the recommendation may change from person to person  X  each buyer can have his/her own personal level of trust in recommendations, and also trust his/her friends to di  X  ering degrees. Third, the probability with which a product is recommended does not need to be uniform, but it can depend on time. For instance, we could recommend only the last ten items bought, or skew the probability with which an item is recommended in many other ways. Finally, the graph can be any directed graph (so u could follow v  X  X  recommendations but not vice versa) and users can have their own personal history of purchases before the recommendation mechanism starts operating. None of these a  X  ects the result X  the market always converges to a unique limit.

It is natural to think of the network connecting the users as a social network, but it can in fact be used to model many more scenarios. For instance, we can make the popularity of an item directly proportional to its number of sales in the whole market by assuming the network to be a clique, or we can represent a powerful super-user that influences the entire network without being a  X  ected by it by assuming the network to be an oriented star.

A nice feature of our result is that the limit is given ex-plicitly, in closed form. This makes it possible to explore important properties of the steady state both analytically and computationally. For instance, we can answer easily our motivating question X  can the recommendation mechanism alter the market in a significant way? We can easily tell the distance, in whatever norm, between the initial market shares of every product and those at steady state. We can gain insight into what type of topologies amplify or dampen distorting e  X  ects, and we can also carry out a fine grained analysis that tells, for each user, how much it a  X  ects the final outcome. A by-product of our analysis is a quantitative no-tion of user influence that pinpoints exactly how much each user a  X  ects the market at the limit. Interestingly, this notion turns out to be a generalization of Personalized PageRank (PPR) and it is related to the Shapley values of a coalition game that can be defined in our model.

Our limit theorems provide a rich landscape for compu-tational explorations with real-world social networks. We explore the distorting e  X  ects of various graph topologies and the extent to which a user can influence the market. What emerges is a rather nuanced landscape that is spelled out in full in the rest of the paper. Perhaps the most interesting outcome is that real social networks prove themselves to be a bulwark against market distortion, in spite of the presence of celebrities in their midst.

To summarize, this paper is a step in the direction of a systematic investigation of the long-term e  X  ects of recom-mender systems on the markets in which they are operating. This is an important and fascinating topic that deserves more attention that it has gotten so far. We hope that this paper provides some actionable insight into this important problem.

The paper is organized as follows. In  X  2 we discuss the relevant literature, in  X  3 we define our model and analyse its properties mathematically. We conclude with experiments in  X  4.
Product popularity is known to have powerful feedback e  X  ects on user behaviour and choices, and is leveraged by many existing RS X  X . In one of the most eloquent demon-strations, [25] shows that, in a digital cultural market, just reporting the ranking based on the number of downloads significantly a  X  ects user choices and increases the market X  X  inequality and unpredictability. Another telling illustra-tion, [35], proves that users are likely to change their mind and reverse their previous choices when given information about the popularity of items. A study of friend recom-mendation in Twitter, [28], shows that recommendations of popular users are much more likely to be accepted than recommendations of  X  X verage X  users. Several existing online marketplaces make use of popularity-based recommendations  X  for instance Amazon 1 ,Yelp 2 , TripAdvisor 3 , SoundCloud and Last.fm 5 all suggest items that are currently trending.
Social ties are also understood to play a key role in the recommendation and purchase processes, and are increas-ingly exploited by modern RS X  X . A study on the Epinions 6 network [7] finds that a large part of the items adopted by a user are also adopted by his/her friends. Similarly, a study on the Yahoo! Pulse network [30] shows that a user X  X  inter-ests are highly correlated with, and can be predicted by, the interests of his/her social ties  X  and vice versa. An emblem-atic example of RS based on social ties is [31], which uses a generative influence model where users probabilistically pick items according to both their and their friends X  preferences. Another study, [6], builds a recommendation algorithm as-suming that the two forces driving a user X  X  actions are latent preferences and the influence of friends. Several other works show or propose that recommendations take place over some social network structure [16, 17, 33, 15, 34].

On the other hand, investigations on the long-term market e  X  ects of RS X  X  are scarce; as long as mathematical models are concerned, existing work seems confined to the economic literature. To the best of our knowledge, the only theoret-ical investigation on the market e  X  ects of RS X  X  is [12]. In their work, a single user repeatedly buys one of two products according to either his/her personal taste or to a recom-mendation consisting in the most-bought product so far; depending on the choice of parameters, the process can lead to a concentration of sales. There are many di  X  erences be-tween their model and ours  X  in particular, our model allows users to influence each other. Two earlier studies, [9] on con-sensus reaching and [13] on opinion formation, investigated the convergence of personal beliefs of users interacting in a social group, similarly to how we investigate convergence in a market with social ties. Their models are however far from ours in many aspects; for instance, ours is stochastic and allows for complex dependences on past events. Another paper, [14], studies the e  X  ects of word-of-mouth on product sales, but focusing on equilibrium strategies for maximizing user satisfaction. Finally, a few other works have analysed the interactions between RS X  X  and markets, but either with di  X  erent aims [18, 24] or by simulation instead of analysis [32]. Let us begin with the formal definition of our model.
We have a set P of m products; each product can be bought multiple times during the purchasing process. Products are bought one at a time in an infinite sequence of time steps t =1 , 2 ,... . The purchasing process is specified below.
We have a set U := { 1 , ... ,n } of n users. To each user u is associated:  X  a fixed purchasing rate f u 2 (0 , 1) representing the rate  X  a probability distribution B u over the set of products  X  a fixed probability  X  u 2 [0 , 1); when u buys a product it  X  a list of products purchased in the past (before time
Users are connected via a directed, weighted graph G = ( U ,E ), possibly with self-loops. Intuitively, an edge vu de-notes the fact that v can influence u when u decides to follow a recommendation, or alternatively, that u  X  X rusts X  v . The arc has weight w vu which gives the strength of this trust relationship. The weights are normalised: the weights of the arcs entering each vertex u (if any) sum up to one.
It is natural to think of this graph as a social network among the users, but it is in fact a very versatile tool with which we can model several di  X  erent situations. For instance, when the graph is a clique and the weights are uniform we have the traditional popularity feedback  X  an item is recommended with a probability that is proportional to the number of sales in the whole market. Or, the graph could embed similarities between users, with the weights reflecting the degree of similarity, and so on so forth. The graph is a flexible tool thanks to which several situation can be cast in our framework and network e  X  ects be explored.

At each time step t =1 , 2 , ... , a user u is chosen with probability f u and buys a product in one of two ways:  X  With probability 1  X  u , it chooses a product at ran- X  Alternatively, with probability  X  u , it follows the recom-Note that even if we say for convenience that the i -th purchase takes place at  X  X ime X  i , we make no assumptions about time itself (i.e. the wall clock time between any one purchase and the next can be arbitrary). The process simply stipulates that items are bought one after the other, in an infinite sequence.

To conclude the description of the model we need to define the probability distribution, that we denoted as { x t v ( p ) } with which the products of the recommender node are picked. A reasonable choice to model popularity-based recommen-dations would be simply to select a product uniformly at random from v  X  X  multiset of past purchases. In this way pop-ular items have a higher probability of being recommended. But we want to take a more general approach by allowing time-dependent weights. For instance, we would like to be able to deal with a situation in which, say, only the ten most recent purchases matter, or where the influence of purchases fades away with time in a specific way, and so on so forth. To this end, focus on a vertex u and recall that we allow users to have made k u purchases before starting the system. Suppose now that we are at time t&gt; 0, and let I t u  X  [ t 1] denote the set of times when u previously made a purchase. We denote the weight of a purchase made by u at time i&lt;t as h t,i u . First, we assume these weights to be normalised, that is, for all t&gt; 0, For a given product p ,let J t u,p  X  { k u , ... , 1 } [ I set of times when u bought p . Then, given that u is the recommender node at time t , product p will be recommended by u and purchased by the buyer with probability This formalization captures a large spectrum of natural sce-narios. For example, if the recommendation consists in picking from u  X  X  past purchases uniformly at random, this one at random among the 10 most recent purchases cor-responds instead to setting h t,i u = 1 / 10 for all i such that | I | | I t u | 10 and h t,i u = 0 otherwise. Note that the values of the weights h t,i u depend on the outcome of the process, thus the h t,i u are random variables themselves.
While our theorems will be given for the full model, it may help the intuition to consider the following simplified version, to which we will sometime refer in the remainder of the paper.

Definition 1. [The Basic Scenario] The special case where users buy at the same rate (i.e. f u = 1 / n follow recommendations with the same probability (i.e.  X  u  X  , u 2 U ), pick the recommender with uniform probability (i.e. w vu = 1 / indeg( u ) ,u 2 U ), and recommend items by picking a random product from their list with uniform probability (i.e. h Remarks. Our model only considers products that can be bought multiple times. Food items are a natural example, but there are very many cultural products that fall into this category: going out to a specific club, attending sport events, or participating to concerts at specific venues are just a few examples. The case of items for which multiple purchases make little sense, such as books or movies, is also of great interest but is left for future work. It is worth noting that our model can capture to a certain extent repeat consumption , the empirical principle that people tend to re-purchase a product they recently bought [1, 2]. More precisely, our model can mimic the one in [1], where a user buys a product that is either new or drawn from a distribution over his/her purchasing history. We can mimic this model by allowing self-loops in the graph: a user can then pick itself as the recommender node and, with properly defined weights, re-purchase a product he bought in the near past.
To analyse the evolution of the process we focus, from now on, on a particular product p  X  2 P , and look at all the others as aggregated into a second product.

Let us begin with some necessary notation. Recall that x ( p ) is the probability with which p is recommended and bought given that u is the recommender node at time t . To simplify notation, let x t u ( p  X  ) be denoted simply as x Similarly, let b u be u  X  X  personal preference for p  X  , and let b =( b 1 , ... ,b n ). We want to study the evolution of x ( x 1 , ... ,x t n ) as t grows. We define A = diag (  X  1 , ... ,  X  and denote by M the weighted transposed adjacency matrix of G ,i.e. M uv = w vu (which is 0 if vu / 2 G ). For any random vector y =( y 1 ,y 2 , ... ) we denote by E [ y ] the vector ( E [ y 1 ] , E [ y 2 ] ,... ) of the expectations of its components.
With the notation pinned down, we can now address our main question: does the market share of p  X  converge? The theorem below states that this happens if the weights h t,i satisfy the following condition.
 This condition is very natural. It states that past purchases will eventually be forgotten. For instance it is satisfied when the recommended product is chosen uniformly at random or when only the last few purchases have non-zero weight. We can now give our main result, which is proven in the appendix.

Theorem 1. If the past fades away, then where x 1 =( I AM ) 1 ( I A ) b . Otherwise E [ x t ] might not converge, or converge but not to x 1 .
 Let us discuss a few interesting consequences of this result.
First, notice that since the network and the values  X  = (  X  1 , ... ,  X  n ) , f =( f 1 , ... ,f n ), and b , stay put and only x changes, the theorem gives a complete characterization of the market at the limit. The limit vector x 1 has a natural and quite useful interpretation, given in the next corollary.
Definition 2. The fraction of times that a user u has bought p  X  at time t 2 N + [ { 1 } is called the local market share (LMS) of p  X  w.r.t. u at time t .

Corollary 1. For every user u , x 1 u is the local market share of p  X  w.r.t. u at the limit.
 The proof of this corollary in the general case is slightly technical but in the basic scenario (see Definition 1) follows immediately from Theorem 1. In this scenario, by definition of the model, x t u is the fraction of times that u has bought p  X  up to time t , i.e. it is p  X   X  X  LMS w.r.t. u , and Theorem 1 states that this value converges to x 1 u .
 Consider now the matrix This matrix contains a lot of information about the steady state. Now, since x 1 = Lb we have that x 1 u = We can think of x 1 u as consisting of a set of  X  X lices X , each of size L uv b v , v 2 U . Each slice is the contribution of v to x which is, as we have seen, p  X   X  X  LMS w.r.t u at the limit. We thus have a measure of how much each user can influence every other user.
 If L vu is how much u influences v then u  X  X  influence on the entire market. We can collect these individual market influences in an influence vector : where f =[ f 1 , ... ,f n ]. The vector is stochastic (its entries sum up to one), and its element u is the relative weight of u  X  X  personal distribution in the overall sales distribution at equilibrium. The larger the value of u the greater the influence of u on the final market share of p  X  . We thus define the maximum influence of any user as, For instance, in the basic scenario, when G is a star u =  X  (1) if u is the centre and u =  X  ( 1 / n ) otherwise, so that ( G ) =  X  (1), while when G is a clique ( G )= u = 1 / n for every u .

Thanks to Theorem 1 we can now easily answer our mo-tivating question X  how much can the market be distorted? By combining and the vector b of personal preferences we can quantify how much the recommender system distorts (i.e. increases or decreases) the overall market share of p  X  .
We define the market distortion as: where  X  denotes the dot product. This is the ratio between the market share of p  X  at the limit and that without the recommender.

The influence vector has a natural interpretation in terms of personalized PageRank. Consider the graph G T obtained by transposing G , the graph among the users, and suppose it has no dangling nodes (i.e. no node with outdegree zero). Let W be the normalised adjacency matrix of G T , i.e. W uv = 1 / outdeg( u ) with the outdegree measured in G Finally, pick any  X  2 [0 , 1) and any n -entry stochastic vector r . The personalized PageRank vector p with respect to r with damping factor  X  on G T is defined as (see e.g. [19]): Compare the above expression with that of T given by Equation 3 and the definition of L : The vector T is the perfect analogue of p T . Indeed, the two coincide by choosing r = f if each node u in G has  X  u =  X  and has a nonempty set of incoming arcs all with the same weight. Our notion of influence is thus a generalization of the standard personalized PageRank, allowing for personalized values of  X  , graphs with dangling nodes, and arbitrary arc weights. In fact, our model o  X  ers an intuitive interpretation similar to that of PageRank: the influence of nodes can be seen as the stationary distribution of a X  X everse X  random walk on G which at each step, from the current node u , either moves to an incoming neighbour v with probability  X  u w vu with probability 1  X  u , moves to a random node in G chosen according to the distribution { f v } v 2 G . This walk can be seen as propagating the  X  X redit X  for the choice of a purchased product back to the incoming neighbours, the neighbours of the incoming neighbours and so on, recursively. The purchasing rates play the intuitive role of the personalization vector: the more a user buys, the more the users who influence him are influential overall (and they are indeed reached more often by the random walk).

The influence vector also has an interpretation in terms of the classical notion of Shapley value, which is a mechanism to determine payo  X  s in coalition games. Shapley values have been proposed as a mechanism to determine fair compen-sation for user X  X  participation to recommendation systems [18]. Let b u denote, as usual, u  X  X  personal preference for p . Consider now the following game: each user can either participate to the market with b u or set its preference to 0; the value assigned to the coalition is the total market share of p  X  . Then, the following holds.

Fa c t 1. The Shapley value of each user u in the above game is exactly u b u .
 It is worth pointing out that, uncharacteristically, this Shap-ley value can be computed in polynomial-time.

Theorem 1 does not tell how much time it takes for the market to reach the steady-state; in fact, this depends on how fast the weights decay with t . In the case of the simple uniform random recommendation, one can prove that the system converges to the steady state reasonably fast:
Theorem 2. If the recommender node recommends an item picked at random from its purchasing history, then where  X  is the maximum  X  u over all users.
 The proof is omitted from this extended abstract.

Clearly, computing e ciently is a crucial task to the aims of the present paper. Doing this directly through Equations 2 and 3 requires to explicitly invert the matrix ( I AM ), which can be prohibitively expensive is the inverse is dense (which is the case if G is well-connected). We instead follow a standard alternative approach. Rewrite ( I AM ) as plug it into Equation 3 and obtain: Now, if G is sparse, so is M and thus all the terms of the summation in Equation 9. We can then approximate e ciently by truncating the series, which only requires to keep trace of a sparse matrix and vectors. To be more precise, computing all entries of up to an additive error O (  X  ) requires time O ( | V | + | E | ) log ( 1  X  ) / log ( O ( | V | + | E | ), where  X  = max u 2 G  X  u . We use this technique throughout our experiments.
In this section we discuss a series of experiments where the underlying graph of our model is a real world social network. Theorem 1 says that x t converges to x 1 in expectation. A first set of experiments shows that the expectation does captures what happens at the limit, i.e. the variance is small. We then investigate the question of market distortion  X  for a given product p  X  , how much does its market share change at the limit? A related question concerns so-called influencers. What is their influence and how much can they change the market? We show that when the underlying network is a real world social network market distortion is negligible and even  X  X elebrities X  cannot have significant impact. Vice versa, there are other realistic situations, such as the presence of a super-node acting as a  X  X edia tycoon X , where certain nodes can conquer a significant share of the market thanks to the recommendation mechanism. We also give a rule of thumb to identify top influencers on the basis of their 2-hop neighbourhood. Finally, we explore recommenders not covered by our theoretical results, in which products are recommended with super-linear probabilities. We find that the results vary widely from graph to graph, and depend also heavily on the starting share of products.

Let us now describe the experimental setup. We run our experiments on six following real-world graphs. Google+ The ego-Gplus graph from SNAP Datasets [21]. Twitter SNAP The ego-Twitter graph from SNAP Datasets. Twitter LAW The twitter-2010 graph by the Laboratory Slashdot The soc-sign-Slashdot090221 graph from SNAP Yelp A social graph extracted from friendships in the Yelp Facebook The graph from the  X  X ist of links X  Facebook When the graphs are directed we reverse the edges (except for Twitter LAW that was already oriented correctly). This is because in social graphs an edge uv denotes the fact that u  X  X rusts X  or  X  X ollows X  v , while in our model the meaning is that u influences v .

Two kinds of experiments are carried out in the following: simulations and computations. In the first, we simulate the purchasing process for 10 , 000 n steps and in the basic scenario (see Definition 1), unless otherwise specified. The probability with which users follow a recommendation is set to  X  =0 . 2 for every user. Note that this is a conservative estimate, since the available evidence suggests both the relative influence of friends X  recommendations (see e.g. [20, 31]) and the fraction of sales causally imputable to recommender systems (see [27]) to be significantly smaller. We are thus intentionally putting the RS in favourable conditions to distort the market.
In computations, we use the adjacency matrix of the un-derlying graph and the other parameters of the model to compute explicitly the influence vector (and related quanti-ties), using the techniques described at the end of Section 3.
Our code was partly written in C++ using Eigen 10 and the GNU Scientific Library 11 , and partly in Java using the WebGraph framework 12 . We ran it on a distributed-memory 50-node cluster provided by CINECA 13 , where each node is equipped with two ten-core Intel Xeon CPUs and 128GiB of main memory. The source code can be downloaded from https://github.com/Steven--/recommender .
The first experiment checks that the purchasing process unrolls as predicted by our theoretical results. As in  X  3.1, we focus on a single product p  X  , with the remaining products coalesced into one. Figure 1 shows that x t quickly converges to x 1 as t grows (the plot follows a power-law).
 Figure 2 shows what happens in the short-term setting. Initially, k x t x k 1 decreases rapidly, as expected, but then it starts oscillating around the value 0 . 22. This behaviour might seem counter-intuitive at first, but it is a natural con-sequence of the short-memory of the users. As the users only consider the last 100 purchases when making a recommenda-tion, small di  X  erences in the number of times p  X  is purchased may considerably change the probability with which p  X  is recommended. This is a setting where E [ x t ] converges to x but x t does not. Note however the following. If we consider the vector z t containing the local market shares of p  X  w.r.t.
Actually, the original Yelp dataset contains 117 spurious directed edges that are not reciprocated. Figure 1: k x t x 1 k 1 goes to 0 as t grows (long-memory scenario). Figure 2: Plot of k x t x 1 k 1 in the short-memory scenario. every user u (Definition 2) then, as predicted by Corollary 1, k z t x 1 k 1 goes to 0 as t increases (see Figure 3). In con-clusion, these experiments suggest that the LMS converges not only in expectation but in high probability. We leave this as an open problem.
In this section we try to understand how much the market can be distorted by the recommendation system. To this end we consider the quantity defined by Equation 5 In the experiments b was instantiated with di  X  erent types of distributions: uniform in [0 , 1], exponential of mean 1 / 2, a power-law of exponent 0 . 01 (i.e., p ( x ) / x 0 . 01 ), and normal of mean 1 / 2 and standard deviation 1 / 6 (for distribu-tions having support wider than [0 , 1], the truncated version was used).

In all cases the value of was always in the range 1  X  0 . 002, which means that market distortion was negligible for all networks considered. This is an indication that social graphs prevent the recommender from distorting the market. Figure 3: Log-log plot of k z t x 1 k 1 in the short-memory scenario. The vector z t keeps track, for each user, of the fraction of products p  X  bought since the beginning of the process.

The next experiment determines how much (of the overall market share of p  X  ) can be ascribed to the most influential users. Recall from  X  3.1 that ( G )= max u u is the max-imum influence of any user. While ( G ) can be seen as a relative measure of the importance of the most influential user, i.e., as the fraction of the network that a single user can influence, n  X  ( G ) is an absolute measure: the most influential user u can be seen as controlling a group of n  X  ( G ) users that buy p  X  with probability b u at rate 1 /n . Figure 4 shows the values of n  X  ( G ) and of ( G ) for the networks we tested. Even if there are users whose purchasing power corresponds to that of more than 80  X  X verage users X , none of them can influence a significant portion of the network.

In order to understand if the fairness of these social graphs is an artefact of our model or one of their intrinsic properties, we investigated a modified version of our model not covered by Theorem 1. In the modified model, the probability with which u recommends p  X  becomes super-linear and is proportional to x . Intuitively, this should boost the final market share of p as soon as p  X  has a small advantage in the user X  X  preference distributions. Therefore, we draw the personal preferences of the users so that the mean of p  X  is k times larger than the Figure 4: Fairness of social ties: values of ( G ) (light grey) and n  X  ( G ) (dark grey) on di  X  erent social graphs.
 Figure 5: The e  X  ect of media tycoons: variation of the market share of p  X  (i.e., ) for di  X  erent graphs and starting distributions when a super-node is in-serted. mean of any other product, where the imbalance k ranges from 1 to 5. We considered markets having both two and ten di  X  erent products: the corresponding results can be seen in Figures 6 and 7. The purchasing process was simulated until the change in the market share of the products dropped below 0 . 001, and the experiment was repeated 10 times in order to compute the standard deviation of , which was always smaller than 0 . 007. Even with this favourable setting we saw a market distortion e  X  ect on social networks that was always less than the one observed on a Clique. We conclude that, although the market share of the leading product p  X  can increase significantly when there are many competing products, social graphs do not promote, and often damps, this growth phenomena.

In the last experiment of this section we modify the topol-ogy of the networks by inserting a super-node that points to every user and always recommends p  X  . This models the e  X  ects of mass media such as television, radio, mass adver-tising, etc. Perhaps unsurprisingly, we observe that such  X  X edia tycoons X  can influence a relevant portion of the mar-ket. Depending on the graph, ( G ) ranges from 3 . 4% to 13 . 4%. Market distortion can be significant, with values of ranging from 105 . 3% to 149 . 7%, as Figure 5 shows. Figure 6: for a market with 2 products as a func-tion of the initial imbalance for product p  X  . Figure 7: for a market with 10 products as a func-tion of the initial imbalance for product p  X  . Figure 8: Lorenz curve of the vector for the dif-ferent graphs. The corresponding Gini indices are 0 . 128 , 0 . 109 , 0 . 076 , 0 . 125 , 0 . 180 , 0 . 101 , in order.
In this section we look at the distribution of influence in social networks and give a rule of thumb to identify the most influential users.

In a clique every vertex has the same influence ( u = 1 / each user u ). We want to know how far real social networks are from this perfectly  X  X galitarian X  situation. Figure 8 shows that real social networks are quite fair in the sense that most while only a small elite of users has a very large influence. The graph where this  X  X ligarchy X  is most prominent is Twitter LAW , where 10% of the overall influence on the market is due to 0 . 6% of the users. In all the other networks, at least 4% of all the users are needed to reach the same combined influence.

Next, we try to give a simple rule of thumb to identify the most influential users in a network. The bottom of Figure 9 shows the first one hundred nodes ranked by out-degree from left to right on the x -axis. The y -axis reports their -rank (the shorter the bar the higher the rank). The figure shows that if a node has high out-degree than it will be influential. The top of Figure 9 shows that the converse is not true. Among the one hundred most influential users there are nodes with moderate to low out-degree. Who are these nodes? To illustrate, consider the case of the user whose Figure 9: Top: Outdegree rank for the top-100 ranked users w.r.t. .Bottom: rank for the top-100 ranked users w.r.t. their outdegree. The data refer to Google+ . -rank in Google+ is 88. This user lies within the top 1% of the influential users, but his/her 243 followers place him/her in position 11 , 155 of the out-degree ranking, outside of the top 10%. This user however has 48 followers each of which follows 3 users or less and, among these, 34 happen to follow only him. In other words, this user is highly  X  X rusted X  in a small community. When this happens, the node will have a high -rank.

Finally, consider a user u who is trusted by a user v having high degree. We know already that v will be influential. Suppose now that v follows a small number of people that is, u is among the few  X  X onfidants X  of an influential user. Then, u too will be influential.

To summarize, we can characterize influential users as users who have at least one of the following properties: This rule of thumb gives a heuristic characterization of all influential users.
 Acknowledgments. The authors are grateful to Tiziana Castrignan`o at CINECA for her precious help with the tech-nical setup of the experiments, and to Flavio Chierichetti for the stimulating and insightful discussions throughout the development of this work. We make use of the following lemma:
Lemma 1. The matrix ( I AM ) is nonsingular, and the matrix ( I AM ) 1 ( I A ) is row stochastic (i.e. is real, non-negative, and each row sums to 1 ).

Proof. Since  X  u &lt; 1 for all u and M is row-stochastic, then ( I AM ) is strictly diagonally dominant; hence it is invertible by the Levy-Desplanques theorem. Now ( I AM ) 1 = ( I A ), hence so is their product ( I AM ) 1 ( I A ). Finally, since M  X  1 = 1 , then also ( I A )  X  1 =( I AM )  X  1 , and thus ( I AM ) 1 ( I A )  X  1 =( I AM ) 1 ( I AM )  X  1 = 1 . Lemma 1 implies that the vector x 1 exists and has compo-nents in [0 , 1]. Let us now turn to prove the main statement.  X  X f X  side. This part is divided in three steps: writing a recurrence equation for E [ x t u ], converting it into a matricial recurrence equation for E [ x t ] x 1 , and showing that | E [ x x 1 | tends to the null vector 0 .

A recurrence equation for E [ x t u ] . The proof makes use of two additional random variables: t u , which indicates the event that u buys at step t , and t u , which indicates the event that u buys p  X  at step t . Then x t u can be written as: where the i u are actually constants since the initial history is fixed. Gather the first summation in a single random variable h t, 0 u , and take the expectation of both sides: Note that E [  X  z ]= E [  X | z =1] E [ z ] if z is a binary random vari-able. Also, the weights do not depend on the specific products one can easily rewrite E [ h t,i u i u ] as E [ h t,i u i We can then restate Equation 11 in the following way:
Let us now focus on E [ i u | i u = 1], the probability that u buys p  X  at step i given that he buys. By definition of the purchasing process, we have: E [ i u | i u =1] = (1  X  u ) b u +  X  u However, we can replace E [ x i v | i u =1] by E [ x i v ] as x depends on v  X  X  past purchases. Plugging the resulting ex-pression for E [ i u | i u =1] into Equation 12, we obtain the following recurrence relation: A recurrence equation for E [ x t ] x 1 . We next turn Equation 14 into an expression for E [ x t ].Forall t&gt; 0 let h let H t,i be the matrix diag ( E [ h t,i 1 i 1 ] , ... , E [ h recall the definitions of A , M , b , x i . The following matricial counterpart to Equation 14 holds: We now subtract x 1 from both sides  X  but putting the right-hand side in a convenient form. Indeed, by definition of h and H t,i and by the fact that if we define h 0 t, 0 as the vector whose u -th component is But by definition of x 1 we have ( I A ) b =( I AM ) x 1 ; thus ( I A ) b x 1 = AMx 1 and Equation 16 becomes: | E [ x t ] x 1 | goes to zero. We finally show that | E [ x x 1 | , the vector of the absolute values of E [ x t ] x 1 , vanishes with t . The intuition is that h 0 t, 0 and some of the first terms of the summation in Equation 17 go to zero with t by hypothesis, and the rest is damped by the norm of A which is strictly smaller than 1; this gives a bound on | E [ x t ] x 1 | which can be plugged in again, proving the thesis by induction.
Hereafter, inequalities are meant component-wise. First, since H t,i , A , M are non-negative, Equation 17 implies: Suppose now | E [ x t ] x 1 |  X  c 1 for all t&gt;  X  , for some constants  X  , c 0; this trivially holds for  X  =0and c =1. One can check that, by hypothesis of forgetfulness, each element of h 0 t, 0 goes to zero with t , and the same does each element of H t,i for any fixed i . Thus for any given  X  &gt; 0 there exists a t 0  X  such that for all t&gt;t 0 : and then Equation 18 gives, for all t&gt;t 0 : Each row of AM sums to at most  X  where  X  = max v 2 G  X  v ; while, since sums to at most 1. Each row of to at most  X  . And then for all t&gt;t 0 : which for e.g.  X  = 1  X  2 c gives | E [ x t ] x 1 |  X  1+  X  we can then repeat the whole argument multiple times, each time replacing  X  by t 0 and c by 1+  X  2 c and tightening the bound on | E [ x t ] x 1 | by a factor 1+  X  2 for all su ciently large t . Since  X  &lt; 1 and thus 1+  X  2 &lt; 1, this implies which concludes this part of the proof.  X  X nly if X  side . We show a simple counterexample. Pick a G where all u have incoming arcs and let all  X  u &gt; 0. Also, let all u buy the same product a at time 1 and set h u =1for every t . All nodes thus always recommend a , so if lim t !1 E [ x t ] exists it must depend on whether or not p = a ; thus it cannot be x 1 . Moreover, one can make the system never converge by putting two di  X  erent products a and b in the initial purchasing history of all users and making them periodically recommend only a or only b .
