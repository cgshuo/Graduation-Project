 Recent advances in wireless communicati ons and microelectro-mechanical systems have motivated the development of extremely small, low-cost sensors that possess sensing, signal processing and wireless communication capabilities. Hundreds and thousands of these inexpensive sensors work together to build a wireless sensor network (WSN), which can be used to collect useful information (i.e. temperature, humidity) from a variety of environment. The collected data must be transmitted to remote the base station (BS) for further processing. WSNs have been envisioned to have a wide range of applications in both military as well as civilian domains [1]-[3] such as battlefield surveillance, machine failure diagnosis, and chemical detection. 
The main constraint of sensor nodes is their low finite battery energy, which limits the lifetime and the quality of the network. Since sensor nodes are often left unattended, e.g., their batteries, the protocols running on sensor networks must consume the resources of energy efficient protocols proposed for wireless sensor networks [4]-[9], aiming to maximize the lifetime of the system under different circumstances. 
In this work, we present CoDEED, a dist ributed energy efficient data gathering protocol. CoDEED clusters sensor nodes into groups and builds routing tree am ong cluster heads in which only root node communicates the base station directly. In addition, CoDEED introduces the idea of area coverage to reduce the number of working nodes within cluster in order to prolong network lifetime. Section 3 formulates the system model and problem. Section 4 describes CoDEED protocol in detail. Section 5 discusses th e simulation results. Section 6 concludes the paper and presents future research directions. base station so that the lifetime of the network is maximized. Direct transmission is a simple approach for data gathering in which each node transmits its own data directly to the base station. However, if the base station is far away, the cost of sending data to several approaches have been proposed [4]-[9]. 
LEACH [4]-[5] is one of the most popular data gathering protocol for sensor networks. The idea is to form clusters of the sensor nodes based on the received signal strength and use local cluster heads as routers to the base station. This will save energy since only cluster heads will communicate with the base station rather than all sensor nodes. The algorithm is run periodically, and the probability of becoming a cluster head for each period is chosen to ensure that every node the data from sensor nodes to the base station. This ensures the energy dissipation of nodes is balanced among all nodes. LEACH also employs data fusion technology, defined as combination of several unreliable data measurements to produce a more accurate signal by enhancing the common signal and reducing the uncorrelated noise to save energy by reducing the amount of data transmitted in the system. LEACH achieves up to 8x improvement compared to the direct transmission approach. However, LEACH uses single X  X op routing where each node can transmit directly to the cluster head and the base station. Therefore, it is not applicable to networks deployed in large regions. 
PEGASIS [6] takes it further and reduces the number of nodes communicating directly with the base station to only one by forming a chain passing through all nodes where each node receives from and transmits to the closest possible neighbor. The node is reached. The data is fused each time it moves from node to node. The designated head node is responsible for transmitting the final data to the base station. PEGASIS achieves a better performance than LEACH by between 100% and 300% in terms of network lifetime. However, PEGASIS introduces excessive delay for distant node on the chain and every nodes needs to know the location of their one-hop neighbor so that the cost to build chain is huge in large networks. 
Like LEACH, HEED [10] is another cluster based energy efficient data gathering protocol present by O. Younis, et al. HEED (Hybrid Energy-Efficient Distributed clustering) periodically selects cluster h eads according to a hybrid of the node residual energy and a secondary parameter, such as node proximity to its neighbors or node degree. HEED achieves fairly uniform cluster head distribution across the network. Authors prove that HEED can asymptotically almost surely guarantee connectivity of clustered networks. Simulation results demonstrate that it is effective in prolonging the network lifetime and supporting scalable data aggregation. Unlike the above protocols, PEDAP is a centralized protocol presented in [7]. PEDAP assumes the base station knows the locations of all nodes in network. According to the information the base sta tion builds a minimum spanning tree that can achieve a minimum energy consuming system. The base station sends each node periodically establishing the scheme is very small compared to distributed protocols. However, PEDAP is not fault tolerant and as a centralized algorithm, PEDAP has poor scalability definitely. 3.1 Wireless Channel Model In a wireless channel, the electromagnetic wave propagation can be modeled as falling off as a power law function of the distance between the transmitter and receiver. Two wireless channel models are proposed in [11], the free space model and attenuation), and if the distance is greater than d 0 , the multi-path fading model is used ( d attenuation). 3.2 Wireless Radio Model We use the same radio model in [5] for the radio hardware energy dissipation where the transmitter dissipates energy to run the radio electronics and the power amplifier, message a distance d , the radio expends energy as (1). 
And to receive this message, the radio expends energy as (2) 
E elec , the electronics energy, depends on factors such as the digital coding, modulation, and filtering of the signal before it is sent to the transmit amplifier. And the amplifier energy, e fs d 2 or e amp d 4 , depends on the distance to the receiver. 
In addition, like LEACH and PEGASIS, CoDEED also employs data fusion and aggregation to reduce the amount of data to deliver. E DA denotes the energy consumed k -bit signal consumes energy M* E DA *k. 3.3 Problem Statement The key idea to design energy efficient protocol in sensor network is to minimize the total energy consumed by the system in a round while balancing the energy protocol must meet some requirement as follows: 1) The wireless communication in sensor network, including intra-cluster and inter-cluster communication, ought to use the free space channel model to avoid the distant power attenuation. In LEACH, the cluster heads broadcast their message in the whole network, which consumes energy drastically. Meanwhile, the cluster heads are node A~D are the cluster heads. Node A and C are on the edge of the network, their distant cluster member must dissipate more energy to communicate with them. 2) The protocol should be completely distributed, self-organizing and scalable. The sensor nodes make their decision based on the local information independently. PEGASIS must maintain the global information to build an optimal chain that is not scalable in large sensor networks. The same PEDAP is. 3) The cluster heads are well distributed over the sensor field like HEED. In node B and C in Fig. 1a, which may increase the probability of inter-cluster interference. 4) Cluster members should not be working simultaneously altogether. Sensors are usually deployed densely (high up to 20nodes /m 3 [18]). In such a high-density network with energy-constrained sensors, it is neither necessary nor desirable to have function as long as there are enough working nodes to assure it. If all the sensor nodes work together, an excessive amount of energy would be wasted and data that collected would be highly correlated an d redundant. Moreover, excessive packet collision would occur. 
CoDEED is a distributed, clustering-based data gathering protocol with intra-cluster coverage. The area covered by cluster is bounded with the cluster radius r . The nodes located within r of cluster head can be the members of this cluster. r is less than d /2, which ensures the communication between the adjacent cluster heads satisfies the free space model(for requirement 1). The selected cluster heads in CoDEED are 3). After the selection of cluster heads, CoDEED builds a routing tree among the cluster heads based on the local information, which only the root node communicates with the base station directly (Requirement 2). Finally, CoDEED selects enough active nodes that ensure the coverage of the cluster according to some coverage algorithms within the cluster, called intra-cluster coverage. Fig. 1b shows CoDEED clustering. 
Assume that N nodes are dispersed in a field randomly, and the follow assumptions are hold: z Nodes are location-unaware. z All nodes have same capabilities and data fusion is capable. z Power control is available. Intra-cluster and inter-cluster communication use z Nodes are left unattended after deployment. z Nodes periodically sense the environment and have always data to send in The operation of CoDEED is divided into rounds as LEACH. Each round includes a set-up phase and a working phase. In set-up phase, clusters are organized with the In working phase, data are gathered from the nodes to the base station. For convenience, some symbols are defined as follows: final number of cluster heads. Authors define the minimum optimal number of nodes and r is the radius of cluster. current energy of node, and E max is the initial energy. capable of being cluster head. 
S C : The set of candidate head. When receiving CANDIDATES message, S C adds the node send the message. When receiving CANCEL message, S C deletes the node send the message. The S C of candidate head includes itself. 
S H : The set of final cluster head. When receiving HEAD message, S H adds the node send the message. free space channel model, the distance to th e transmitter could be estimated according to the receiver signal strength. 
Bids : the cost for competing for cluster head. 4.1 Cluster Formation The pseudo-code for clustering is given in Fig. 3. Each node runs the algorithm independently to make the decision to be a cluster head or cluster member. Only the rivaling for cluster head. Node becomes a candidate head with probability P C and broadcasts CANDIDATES message within cluster radius r , in which the message includes itself, meaning that no other nodes within its cluster radius r rival for cluster head, it will broadcast HEAD message to claim be final cluster head. Otherwise meaning that it wins competition, it broadcasts HEAD message (line 13~16). If not, it message, they should broadcast CANCEL message. The nodes located within range r of them will delete their node ID from S C (line 18~24). To non-candidate node, it will lost the right for competing when receiving CANDIDATES message and waiting for the follow HEAD message. If it receives message within time T , it doesn X  X  compete any more. If it receives message, it deletes competing and doubles its P C (line 4~5). After iterations, if S H is empty, which means any cluster head does not cover the node, it will broadcast HEAD message to be cluster head itself. Otherwise it sends JOIN message to the node that has the maximum Bids in its S H (line 28~32). other, as shown in Fig. 2. They broadcast HEAD message within radius r at the same the next step of iteration. In addition, the nodes that lie in the shadowed area delete n2 from their S C , and they will rival for cluster head again in the next step for their S C is now empty. 
Bids may be the node X  X  current energy or other parameter such as the degree of the node, the communication overhead of node. In simplicity, we choose the residual energy of node as the bids contending for cluster head. 4.2 Selection of Active Nodes means area coverage, that every point in the monitored field be sensed by at least one sensor. When the ratio of coverage falls below some predefined value, WSN can no for a given randomly deployment area even if all sensors are on-duty and small sensing holes are not likely to influence th e effectiveness of sensor networks and are acceptable for most application scenarios. Accordin g to their demonstration, a node can be sleep randomly when a node has 4 or more neighbors while maintaining more than 90% coverage of the monitored field. We introduce this idea into clusters that is called  X  X ntra-cluster coverage X , which selects some active node within clusters while maintaining enough coverage of the cluster. 
As in Fig. 3, cluster members can get their 1-hop neighbors within the sensing number a member X  X  1-hop neighbors is greater than a threshold N cov , then it goes to be head. N cov is related to the quality of coverage determined by specific application. As in [17], if application requires 95% area coverage, is set to 6. If requiring 90% coverage, is set to 4. 
Using intra-cluster coverage has two advant ages. The first is to preserve energy consumption in each round by turning redundant nodes X  radio off so that network lifetime is prolonged. The second is to reduce TDMA schedule overhead. Once clusters grouped, all cluster head broadcast a TDMA schedule packet in which contains the ID of members and time slot allocated to the member. When node density is high, the number of cluster members turns higher so that the length of TDMA schedule packet turns longer that consumes more energy to transmit and receive. However, the length of TDMA schedule packet would not too long with intra-cluster coverage because the number of active node varies slightly when node density goes higher. 4.3 Construction of Routing Tree After clustering, cluster heads broadcast WEIGHT message within radius 2 r , which contains node ID and weight W. Cluster head compares its own weight and the weight contained in WEIGHT message received from its neighbor cluster heads. If it has the CHILD message to notify the parent node (Fig. 3. line 39~43). Finally, a routing tree will be constructed, which root node has the largest weight among all cluster heads. Noticeably, a cluster head may not receive any WEIGHT or CHILD messages when nodes are distributed sparsely, which occurs when most nodes died in the latter phase of network lifetime. If it doesn X  X  receive any message within a specified time, it will communicate with the base station directly. After routing tree construction, cluster heads broadcast a TDMA schedule to their active member nodes to be ready for data gathering. 
For example, as shown in Fig. 2, node A~E are cluster heads with their weight in parenthesis. B will receive WEIGHT message from A, C, D, E and select node A to be its parent. Similarly, node D and E choose B as their parent, while C chooses A as its parent. Node A receives WEIGHT message from node B and C, but their weight is less than node A. Then A will be the root node that communicates with the base station and routing tree is build. sensors, the base station broadcasts probing message to all sensors and sensors during the network lifetime unless base station varies its location or sensor nodes are mobile. Apparently, node that is closer to the station and has the more residual energy would be the root node of routing tree for its higher weight. 4.4 Working Phase Data gathering begins after cluster heads broadcast their TDMA schedules to their active member nodes. The active member nodes in cluster send their aggregated data the data, it performs data fusion to enhance the common signal and reduce the uncorrelated noise among the signals. The resultant data are sent to its parent if it has parent receives their child X  X  data, performing data fusion once more, and sends the base station and the network goes into the next round and repeats the operation described above. To reduce clustering overheads, each round may include more data once. Clustering is triggered every L data cycles, which L is a predefined parameter. In order to evaluate the performance of CoDEED, we simulated LEACH, and HEED protocols as the baseline. The simulation parameters are listed in Table 1. N cov is set to 6 to ensure 95% coverage that meets requirement of most WSN applications [17]. The area of sensing field is 200m X 200m and sink is fixed at (100, 300). Node numbers vary from 200 to 1200 representing for different node density deployment. We observe the performance of the three cluster-based protocols from network lifetime and protocol overhead under different node density deployment. Network lifetime has two definitions: First Node Dies (FND), the time when the first node dies in network and Last Node Dies (LND), the time when the last node dies. 5.1 Simulation Results Table 2 describes the average number of ac tive nodes per cluster under different node density deployment. LEACH behaves different from the other two because the number of clusters in LEACH is optimally calculated with different node number. Both HEED and CoDEED are cluster-based protocol in which the size of cluster is bounded by cluster radius r . So the number of clusters in HEED and CoDEED vary with sensing field rather than node number s in network. When node density is low, the average number of active nodes per clus ter of HEED is the same as that of CoDEED because all nodes must be active to ensure the coverage of cluster. When nodes density turns from low to high, the number of active nodes per cluster of HEED increases linearly. However, the number of active nodes per cluster of CoDEED decreases and remains a constant value when node density is high enough. As seen from Table 2, when there are 600 nodes in the field, the number of active nodes per cluster in of HEED is 20.3 compared with 13.4 of CoDEED. With the less active nodes per cluster, CoDEED achieves the less protocol overhead and the more network lifetime. 
Fig. 4 shows the protocol over head of three protocols. Protocol overhead includes energy consumed by clustering and broadcasting TDMA schedule for all three protocols. To the latter two protocols, the overhead includes energy dissipated for construction of routing tree in addition. HEED consumes more energy for protocol overhead than CoDEED with increasing of n ode density. The reason is that the length of TDMA schedule packet of HEED turns longer and longer when node density turns higher, which consumes more energy to transmit and receive TDMA schedule packet. The energy consumption for TDMA scheduling of CoDEED remains the same when node density is high and its overhead only increases due to cluster formation and routing tree construction. So the overall ov erhead of CoDEED increases slower than that of HEED. 
Fig. 5 and Fig. 6 show FND and LND of network lifetime under different node density. LEACH performs the poorest among three protocols due to its unbalanced energy consumption. While node density increases, the FND of LEACH and HEED decreases and the LND of them increases . CoDEED behaves like HEED when node density is lower than 0.01nodes/m 2 . But when node density goes higher than 0.01nodes/m 2 , the FND and the LND of CoDEED increases drastically compared with LEACH and HEED. When there are 1200 nodes deployed in a field of 200m X 200m (corresponding to node density 0.03nodes/m 2 ), the LND of CoDEED is about 400 times than LEACH and 4 times than HEED. This is because intra-cluster coverage reduces the number of working nodes in each round and more nodes are asleep so that more energy is pr eserved to prolong network lifetime. In this paper, we present CoDEED, a distributed energy efficient data gathering protocol with intra-cluster coverage. CoDEED clusters sensor nodes into groups and builds routing tree among cluster heads in which only root node communicates with the base station directly. In addition, CoDEED introduces the idea of area coverage to reduce the number of working nodes within cluster in order to prolong network lifetime. Simulation results show CoDEED outperforms far better than LEACH. Compared to HEED, though CoDEED performs almost the same as HEED when node density is low, it has far better performance than HEED when node density goes higher than 0.01nodes/m 2 . 
