 1. Introduction
This paper considers the problem of mode ling sociotechnical systems involvin g multiple autonomous actors such as organizations and humans. Autonomy means not only that none of the actors has control over other actors, but also that in general each actor would be independently motivated and would have independently-designed information systems that reflect its own motivations. This means that control-based abstractions for modeling information systems such as Web services, workflows, UML, and so on, are inadequate for modeling sociotechnical systems. We would instead need to model the interactions and the social relationships among the actors. Consider a modern health care system for example. It would involve hospitals, doctors, patients, laboratories, funding agencies, regulatory authorities , insurance companies, and so on, each of which is an autonomous actor. Consider, for instance, that no doctor controls any patient. However, they enter system.

The importance of modeling the relationships among the actors is increasingly recognized by the software engineering and modeling community. Various kinds of relationships have been proposed in the literature. These include i*'s intentional intentional dependencies has proved particularly influential. We take the notion of dependency among actors as our point of departure.

We acknowledge the importance of the notion of dependency among actors: any sociotechnical system exists in the first place because actors depend on each other to get things done. Differently, however, from the approaches in the is essentially trust that makes dependence on others reasonable: when an actor trusts another for something, it expects the latter to do that thing. Lacking such a trust relationship, an actor can hardly depend on another for anything. Let's return to the health care setting. Let Alice and ModernLabs be a patient and a laboratory, respectively. Alice would be unlikely to make a payment to ModernLabs if she did not trust ModernLabs to deliver test results upon payment. every patient  X  laboratory pair participating in the health care system.

Further, we want to be able to compare two sociotechnical systems in a particular domain, and be able to objectively say systems being compared, would come to the same conclusion. We make such comparisons all the time in our day to day lives.
For example, we intuitively know that from a customer's point of view, an online marketplace that mandates that merchants refund customers for returned products within a month of purchase is better than one that does not allow such returns; the customers trust the merchants more in the former. It is the same reason why we deem credit card holders to be better off in the credit card system resulting from the passage of the Credit Card Act of 2009 [6] intuitions. 1.1. Contributions
Our notion of sociotechnical trust derives from Singh's notion of architectural trust [7]. Whereas Singh elaborates on the term sociotechnical trust . Our contributions are the following.  X 
We give an interpretation of the important notion of dependency among actors in terms of trust among actors. We show how this notion of dependency is different from those in the literature. We also show how the notion of sociotechnical trust is attention in software engineering and computing.  X 
We characterize the notion of what it means for a sociotechnical system to engender more trust than another. We do this via the notion of one trust relationship supporting another trust relationship. We then apply this notion toward formulating a criterion by which one can claim if a system is more trustworthy than another from a particular role's perspective.  X 
We present a methodology for modeling sociotechnical systems based on the supports relationships. We evaluate our methodology against the European Food Safety Legislation (understood as a sociotechnical system for ensuring food safety).

As a matter of convention, the terms  X  system  X  and  X  trust unless explicitly qualified otherwise. 1.2. Organization sociotechnical systems. It also discusses the supports relation and defines what it means for one system to be more trustworthy than another. It also presents a number of trust-supporting patterns. Section 4 presents a methodology for specifying sociotechnical systems. Section 5 evaluates our methodology against a case study from the European Food Safety work. 2. Sociotechnical trust
Our motivation behind proposing sociotechnical trust is to capture the essence of dependencies among actors. Currently, inferring this dependence.
The problem, however, with goal-oriented formulations of dependencies is that they refer to the internal goals and capabilities of actors. This means that the internal constru ctions (including the goals) of the actors involved would themselves be public. In sociotechnical systems involv ing autonomous actors, however, the actors would normally keep their internal constructions private. Further, actors can potentially join and leave the system at will. So it is not even clear whose goals the dependencies refer to. Consequently, any formulation of dependency based on actors' goals amounts to a brittle unwarranted assumption. What we need is a formulation of dependencies in terms of public abstractions.

With sociotechnical trust, we wish to capture the notion of dependence without referring to actors' internals. We use the are the antecedent and the consequent, respectively. The antecedent and consequent are propositions specified in some formal language (in this paper, propositional logic). For example, T Alice trusts ModernLabs to deliver the results if she has paid for the tests; T Alice actors exchange.
 that the role Patient depends on the role Lab for delivery of results upon payment, that is, T pointing from the truster toward the trustee labeled with the relation. The only difference from Fig. 1 is that actors are represented by dotted ovals.

The distinction between roles and actors and the relationship among them is crucial. Actors are not instances of roles; actors.
 for delivery, but that they do not trust so; however, it is not clear what dependence means in this case.
The notion of trust is a complex one and there are many different readings of what it means. Next, we distinguish system. 2.1. Technical trust
By actors, we refer only to social entities. In practice, this means only humans and organizations (or their software surrogates). A hospital (an organization) may provide the service of appointment scheduling via a Web application; devices in providing testing services to patients, for example, a CT scanner; clearly, the CT scanner too is not an actor.
Thus, in this paper, we do not talk about technical trust  X  dependability [11].Many trustworthy computing initiatives including Microsoft's famed one [12] fall under the category of technical trust.
 where an information system can be deployed and evaluated for desirable properties. However, sociotechnical systems are not
For example, a hospital would implement its information sy stems independently from a laboratory. Further, they may have no visibility into each other's internal information systems. Therefore, whereas it may be prudent to dwell upon whether a hospital or a patient considers a laboratory's information systems and devices dependable, in practice it may turn out to be impractical to make any claims about them. However, it is critically important that the patient trusts the laboratory for providing accurate test results. Fig. 3 illustrates in an architectural sense the difference between sociotechnical and technical trust. As Fig. 1 shows, sociotechnical trust holds between social entities, such as Patient, Lab, Hospital, and Doctor .As Fig. 1 shows, technical trust involves technical non-social components, such as the Web Application. Incidentally, the traditional model of sociotechnical systems from requirements engineering is similar to
Fig. 1 . 2.2. Cognitive trust a cognitive way  X  as an input to the agents' mental models.

As representative of the literature of cognitive trust, we consider Castelfranchi and Falcone's highly influential work on cognitive trust [13]. Castelfranchi and Falcone ask  X  what kind of beliefs and goals are necessary for trust? In this manner, Castelfranchi and Falcone construct a rich picture of the mental state of actors. Let relation. For example, T C Alice ; ModernLabs ; paid ; delivered payment.
 particular actors. Hence, it does not help us in the specification of sociotechnical systems involving autonomous actors. system (we shall return to this point in more detail in Section 3 when we discuss how one system can be considered more us suppose that there is a system where T 1 holds. Also suppose Alice adopts Patient ,while ModernLabs and JohnsonLabs both adopt Lab in this system. Therefore, T 1 wouldbeinstantiatedintobothT( Alice, ModernLabs, paid, delivered )andT( Alice, JohnsonLabs, paid, delivered ). However, cognitively, Alice trusts only ModernLabs, not JohnsonLabs. In other words, T
C Alice ; ModernLabs ; paid ; delivered  X  X  holds, but T C Alice ; JohnsonLabs ; paid ; delivered  X  X  prudent for Alice to choose to interact with ModernLabs rather than JohnsonLabs. In general, sociotechnical and cognitive that has the appropriate sociotechnical trust relationships. 3. A conceptual model of sociotechnical systems particular actors. Let  X  be a set of symbols. Let P be the set of all propositions over connectives of propositional logic. Let p , q , ... range over (whether they are over role or agents will be clear from the context of usage). We use T relationships.

De fi nition 1. A sociotechnical system S is a set such that S p RRPP
Lab that it will provide accurate test results ( T 2 ). HS1 is characterized as { T
Consider another health care system HS2 that in addition includes the role SpecializedLab, referring to a laboratory specialized for particular kinds of tests. In addition to T parties ( T 4 ). HS2 is characterized as { T 2 , T 3 , T 4 3.1. Comparing sociotechnical systems an excessive delay, patients trust laboratories to notify them about it ( T regular audits on the performance of laboratories to guarantee receiving accurate results ( T of view, both T 5 and T 6 support T 1 .
 the latter.
 supported.

One can imagine other kinds of relationships that potentially support T person named by the patient.
 We provide now a definition of what it means for a system to be more trustworthy from a role's perspective.
De fi nition 2. Let S 1 and S 2 be two systems. We say that S 2 if: 1. ( x, y, p, q )  X  S 1 implies ( x, y, p, q )  X  S 2 , and 2.  X  ( x, z, r, s )  X  S 2 such that T( x, z, r, s )  X  T( x, y, p, q )
Thus, for example, { T 1 , T 6 , T 5 }  X  Patient { T 1 }. systems that are more trustworthy in the above sense  X  they may have other requirements because of which they may favor evaluating systems. 3.2. Patterns of trust speaking, domain-dependent. For any particular application, they are elaborated as a result of going through the domain trust , and are induced from the set of patterns presented in [15,16] .
 examples how these patterns of trust help enhance trust in a system.
 the results to the SpecialCourier makes the relationship between Patient and Lab more robust. Recall T any situation in which one party relies on another to achieve a desired objective.
 system in which the designated courier (in our example SpecialCourier ) acknowledges and accepts the delegation from the of potential participants depending on the entities operating in the sociotechnical system.
Compensate and revert can be used to capture return  X  refund scenarios. Let T system to be a better choice for him (more trustworthy).

Renegotiate , on the other hand, offers more alternatives for the role to choose. For example, in case of T have the laboratory deliver the results ahead o f time, by perhaps making a special request. Let T
T  X 
SeparationOfDuty ensures more reliable interactions. For instance, if T performing the test to the patient, then he or she cannot also approve the results, Doctor deciding whether a trust relationship supports another is not a trivial task. For example, one could argue that T supports relationships for the application under consideration. 4. System speci fi cation methodology domain-specific supporting relationships and the pattern s of trust, and then accounts for changes in requirements. I. Initial Specification III. Revise: Check for new requirements process in a real case study regarding European Food Safety Regulation in Section 5 . 5. Case study: the food safety regulation
The European Parliament and the Council have adopted Regulation (EC)178/2002 [17] to harmonize all Member States food to be faulty. It works on the basis of  X  one step back  X  one step forward Competent authorities perform controls to ensure compliance with the regulation.
 specifies other requests, in which case these take precedence.

In the Food Safety Regulation case study, the core requirement is that consumers are provided with safe food, which means build the trust specification in order to enhance consumers' trust about the overall food chain. 5.1. Trust speci fi cation satisfy this requirement.
 I. Initial specification II. Enhancing consumers' trust III. Revise 5.2. Comparison
We presented a graphical representation of a sociotechnical sys temfromthefoodsafetyregula tion case study showing trust the applied trust patterns , serve the purpose of ensuring consumers' safety and inspiring their trust in the system. 6. Discussion
In this paper, we proposed sociotechnical trust as the essential meaning of the notion of dependency among actors in certain trust relationships supporting certain others, and used this notion to help compare sociotechnical systems from a directed relationship.

It is worth emphasizing that our notion of a system being more trustworthy than another relies upon domain experts and particular actor, a system that is more trustworthy by Definition 2 may be less suitable. For example, even though { T
T } definition; it highlights the fact that our notion of trust does not rely upon actor internals (here, Alice's intentions). 6.1. Sociotechnical systems
The field of sociotechnical systems emerged in the 1960s. Its principal concern was the design of work in organizations, also the social and humanistic concerns of users and employees [18]. Fields such as human example, see [19] and [20] ). Baxter and Sommerville [21] recommend a range of other fields and methods, (for instance, and our conception. The traditional conception emphasizes an organizational setting (with increasingly decentralized decision-making, as Mumford [18] suggests) whereas our conception emphasizes autonomy and logically-decentralized settings. 6.2. Software engineering
Baxter and Sommerville [21] conceptualize a sociotechnical system as a conceptually centralized system (potentially with actors, each of whose goals are potentially unknown.

Requirements engineering modeling languages and methodologies such as i* and Tropos, although multiactor, also assume a understanding the structure of sociotechnical systems at a high-level.
 further engineering. As a normative relation, trust is somewhat weak with the specification of the commitments [25] (understood as elements of contracts) among actors. The advantage with enough for her to act; she may also need the corresponding commitment from the laboratory. Trust and commitment seem to be interplay between trust and commitment. Singh [26] echoes similar intuitions.

Checkland [27] contrasts the narrow idea of engineering as building systems given some objectives with the broader idea of human affairs that would bear upon the modeling. 6.3. Trust conflict. In our approach, such a situation is not a conflict e-business. Haley et al. [32] introduce the notion of trust assumptions to hel p discharge concerns about system security. 6.3.1. Future directions exception handling. Acknowledgments
The research was partially funded by the European Union Seventh Framework Programme (FP7/2007 257930 (Aniketos) and 256980 (NESSoS). Amit Chopra was supported by a Marie Curie TrentinoCofund grant and the ERC Advanced of the anonymous reviewers also helped improve this paper substantially.

References
