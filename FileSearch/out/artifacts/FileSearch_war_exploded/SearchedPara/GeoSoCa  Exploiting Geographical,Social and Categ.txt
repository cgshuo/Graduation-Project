 Recommending users with their preferred points-of-interest (POIs), e.g., museums and restaurants, has become an im-portant feature for location-based social networks (LBSNs), which benefits people to explore new places and business-es to discover potential customers. However, because users only check in a few POIs in an LBSN, the user-POI check-in interaction is highly sparse, which renders a big chal-lenge for POI recommendations. To tackle this challenge, in this study we propose a new POI recommendation approach called GeoSoCa through exploiting geographical correlations , social correlations and categorical correlations among users and POIs. The geographical, social and categorical corre-lations can be learned from the historical check-in data of users on POIs and utilized to predict the relevance score of a user to an unvisited POI so as to make recommendations for users. First, in GeoSoCa we propose a kernel estimation method with an adaptive bandwidth to determine a person-alized check-in distribution of POIs for each user that nat-urally models the geographical correlations between POIs. Then, GeoSoCa aggregates the check-in frequency or rating of a user X  X  friends on a POI and models the social check-in frequency or rating as a power-law distribution to employ the social correlations between users. Further, GeoSoCa ap-plies the bias of a user on a POI category to weigh the pop-ularity of a POI in the corresponding category and mod-els the weighed popularity as a power-law distribution to leverage the categorical correlations between POIs. Final-ly, we conduct a comprehensive performance evaluation for GeoSoCa using two large-scale real-world check-in data sets collected from Foursquare and Yelp. Experimental results show that GeoSoCa achieves significantly superior recom-mendation quality compared to other state-of-the-art POI recommendation techniques.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  Information Filtering c  X  Location-based social networks; point-of-interest recommen-dations; geographical correlations; social correlations; cate-gorical correlations; popularity
As an increasingly popular application of location-based services, location-based social networks (LBSNs), such as Foursquare and Yelp, have attracted millions of users to check in their preferred points-of-interest (POIs), e.g., mu-seums, restaurants and stores, and share their experiences of visiting these POIs with friends. For example, as of De-cember 2014, Foursquare had over 6 billion check-ins with millions more every day contributed by more than 55 million users worldwide. These historical check-in data incorporate rich information about users and POIs, and thus bring new opportunities to mine the user visiting preferences for per-sonalized POI recommendations that not only help users explore new POIs but also benefit for businesses to discover potential customers.

In the problem of personalized POI recommendations, the key tasks are to estimate the preference or relevance scores of a user to her unvisited POIs and return the POIs with the top-k highest preference scores for the user. Most existing POI recommendation methods (e.g., [3, 5, 6, 10, 11, 14, 25, 26, 37]) apply the traditional memory-based or model-based collaborative filtering techniques with the user-POI check-in matrix to compute the preference score between a user and an unvisited POI. However, the user-POI check-in matrix is highly sparse because users have only visited a very small proportion of POIs in an LBSN. As a result, these methods usually suffer from low recommendation quality.

In this paper, we predict the preference scores of any tar-get user to her unvisited POIs based on three important types of correlations among the user and unvisited POIs that can be derived from the historical check-in data of users on POIs, as depicted in Figure 1. (1) Geographical correlations. The first law of geography [17] states that:  X  X verything is related to everything else, but near things are more related than distant things. X  For example, in reality a person usually visits a POI, e.g., museums, and then travel to its nearby POIs, e.g., restaurants and stores. That is, the close POIs have the stronger geographical correlations than the POIs that are far from each other. Thus, we can estimate a user X  X  relevance score for an unvisited POI based on the geographical correlations between the user's visited POIs and unvisited POI . (2) Social correlations. In the real world, a person may prefer POIs highly recommended
Figure 1: Three important types of correlations by her friends. For instance, they often visit POIs, e.g., mu-seums, restaurants or stores together. In other words, social friends are more likely to share common interests on POIs than strangers. Likewise, in LBSNs, users establish social links with each other to share their experiences of visiting POIs. Hence, we can compute the relevance score of a user for an unvisited POI in terms of the social correlations be-tween the user with her friends who have visited the POI. (3) Categorical correlations. LBSNs often predefine a universal set of categories and attach each POI to a cer-tain subset of categories. The category of a POI reflects its usual business activities and nature. In reality people have different biases on the categories of POIs: a foodie often visits restaurants to taste a variety of food, and a tourism enthusiast usually travels on tourism attractions all over the world. Accordingly, we can deduce the relevance score of a user to an unvisited POI based on the categorical corre-lations in the categories of the user's visited POIs and the unvisited POI .

Therefore, we are motivated to propose a new prob-abilistic approach for point-of-interest recommendations through exploiting and integrating Geo graphical, So cial and Ca tegorical correlations, called GeoSoCa . (1) Geo-graphical correlation modeling. With the visited POIs of a user, we estimate a personalized check-in distribution over the geographical latitude and longitude coordinates for the user; the personal check-in distribution naturally mod-els the geographical correlations between the user's visited POIs and her unvisited POIs and is able to compute the ge-ographical relevance score of the user to any unvisited POI. (2) Social correlation modeling. Given an unvisited POI of a user, we first aggregate the check-in frequency or rating on the POI from her social friends; then the social check-in frequency (or rating) is transformed into a social relevance score of the user to the unvisited POI, based on the social check-in frequency (or rating) distribution that is estimated from the historical check-in data of all users. (3) Categor-ical correlation modeling. At first, we derive the bias of a user to a certain category according to her visited POIs; then the bias is used to weigh the popularity of an unvisited POI in the corresponding category. Further, the weighed popularity for the user to the unvisited POI is also mapped into a categorical relevance score based on the popularity distribution estimated from the historical check-in data of all users. The categorical correlation also takes into account the POI popularity from all users which indicates the quality of the POI and benefits for POI recommendations.

The main contributions of this study can be summarized:
The rest of this paper is organized as follows. We review the related work on POI recommendations in Section 2. Our proposed methods to model geographical, social and cate-gorical correlations are presented in Section 3, followed by experimental evaluation in Section 4. Finally, Section 5 con-cludes this paper.
This section reviews existing POI recommendation tech-niques on how they employ the geographical, social, cate-gorical, and popularity information.

POI recommendations using geographical infor-mation. Based on the fact that the geographical proxim-ity significantly affects the check-in behaviors of users on the POIs, the geographical information has been intensively used in POI recommendations. One way is to simply consid-er the current locations of users to filter out the POIs that are far from the users [1, 4, 20, 14]. Another way is to ap-ply the geographical latent factor or topic models to derive latent features of regions or POIs [7, 8, 12, 16, 25, 26]. The more sophisticated way is to estimate the geographical cor-relations of check-in POIs as a common distance distribution for all users, e.g., a multi-center Gaussian distribution [2], a power-law distribution [9, 13, 15, 22, 23, 28, 29, 32], or a personalized nonparametric distribution for each user [30, 33, 34]. In particular, the recent works [31, 35] employed the kernel density estimation method with the fixed bandwidth to model the geographical check-in distribution of POIs for each user over the latitude and longitude coordinates. Fur-ther, in this paper we develop an adaptive kernel estimation method to enhance the ability of the obtained check-in dis-tributions to predict the relevance score between a user and an unvisited POI.
 POI recommendations using social information.
 Social links between users have also been widely utilized to improve the quality of location-based recommender system-s, since the social friends are more likely to share common interests on POIs than strangers. Most current works derive the similarities between users from social links and put them into the traditional memory-based or model-based collabo-rative filtering techniques. For example, some literatures [4, 20, 23, 27, 30, 31, 34, 35] seamlessly integrated the similari-ties of users into the user-based collaborative filtering tech-niques, while others [2, 21, 36] employed the user similarities as the regularization terms or weights of latent factor mod-els. In this paper, we contrive a new method to exploit the social correlations between users by aggregating the check-in frequency or rating of friends to POIs and transforming them into relevance scores, based on the estimated social check-in frequency or rating distribution from the historical check-in data of all users.

POI recommendations using categorical informa-tion. The categories of POIs visited by a user implicitly indicate the activities of the user in the POIs. For instance, a person checking in a cinema means that she is watching a movie there. Thus, the category information of POIs is use-ful for modeling the specific preference of a user. However, there are only a few studies that utilize the category infor-mation for POI recommendations. Rahimi and Wang [18] simply identified the preference of a user to a POI with the bias of the user to the category of the POI. Bao et al. [1] calculated the category biases of users to compute the sim-ilarity of the users for the user-based collaborative filtering method. Besides the category biases of users , Ying et al. [27] also derived the category weights of POIs from the tags an-notated on the POIs and then estimated the relevance scores between users and POIs based on the inner product of the category biases and weights. Liu et al. [15] clustered POIs into groups based on their categories, built a user-category transition matrix instead of user-POI check-in matrix from the historical check-in data of users, and applied the matrix factorization technique to discover the next top-k categories that a user would like to check in. Zhao et al. [36] clustered users into communities and represented each community as a weighted category vector, in which each dimension is the check-in counts of a particular POI category by users in the community; to apply the user-based collaborative filtering method, they further computed the similarity of users ac-cording to the category vectors of the communities of the users. Hu et al. [8] leveraged the matrix factorization tech-nique to associate each category with a latent vector and deuced the relevance score of a user to a POI based on the latent vectors of the categories of the POI.

POI recommendations using popularity informa-tion. The popularity of a POI reflects the quality of prod-Symb ol Meaning
U Set of all users in an LBSN u Some user: u  X  U
L Set of POIs in an LBSN l Some POI with a pair of geographical latitude
C Set of categories of POIs in an LBSN c Some category: c  X  C
R | U | X | L | Check-in matrix: R u;l is the check-in fre-
S | U | X | U | Social link matrix: if u; u  X   X  U have a social
B | U | X | C | Categorical bias matrix: B u;c is the frequen-P | C | X | L | Popularity matrix: P c;l is the popularity of ucts or services provided by the POI. For example, a restau-rant receiving a lot of visits from customers indicates that the restaurant provides high-quality foods for its customers. Thus, the popularity of POIs is also helpful for POI recom-mendations. Most existing works regard the popularity of a POI as the universal prior preference of users to the POI. Specifically, the study [27] employed the prior preference of users to unvisited POIs as the weight of the edges between the users and POIs in the complete bipartite graph, while other studies utilize the prior preference to adjust the poste-rior preference that are derived from the geographical infor-mation [8, 13, 14, 28]. However, in these studies the prior preference is not personalized for users and thus in practice the benefit from the popularity is considerably limited. On the other hand, the current works [1, 8, 15, 18, 27, 36] sep-arately modeled the effect of the category and popularity of POIs and may not take full advantage of them for POI recommendations. In this paper, we devise a new method to combine the category bias of a user and the popularity of a POI into a relevance score between the user and POI so as to personalize the effect of the popularity of the POI on the user.
In this section, we introduce the research problem with the required data structures (Section 3.1), model the geo-graphical, social, and categorical correlations (Sections 3.2, to 3.4), and integrate these three correlations to recommend POIs to users (Section 3.5).
Here we define the data structures and the research prob-lem in this paper. These data structures can be extracted from the rich information in an LBSN, incorporating the his-torical check-in data of users on POIs, social links between users, the categories of POIs, and the geographical latitude and longitude coordinates of POIs. Table 1 lists the key symbols used in this paper.

Definition 1 ( Check-in matrix) . Given the histori-cal check-in data of users on POIs from an LBSN, we can easily build a check-in matrix R | U | X | L | , in which each entry R u;l represen ts the check-in frequency (e.g., Foursquare) or rating (e.g., Yelp) of user u  X  U on location l  X  L , and U and L are the sets of users and POIs in the LBSN, respec-tively. Note that most entries in R are zero, since users have only visited a very small proportion of POIs in the LBSN.
Definition 2 ( Social link matrix) . Given the social links between users from an LBSN, it is easy to construct a social link matrix S | U | X | U | , in which if there exists a so-cial link between two different users u; u  X   X  U , S u;u  X  = 1;
Definition 3 ( Categorical bias matrix) . Given the historical check-in data of users on POIs and the cate-gories of POIs from an LBSN, we construct a categorical bias matrix B | U | X | C | , in which each entry B u;c represents the frequency of user u visiting the POIs that belong to category c  X  C , and C is the universal set of categories of POIs that is often predefined in the LBSN. Note that a POI could belong to multiple categories.

Definition 4 ( Popularity matrix) . We build a pop-ularity matrix P | C | X | L | , in which each entry P c;l represents the popularity of POI l in category c , i.e., the check-in fre-quency or overall rating of all users on l . Note that most entries of P are zero, because a POI only belongs to a certain subset of the universal category set C .

Definition 5 ( Geographical coordinates) . A POI l  X  L is associated with a pair of geographical latitude and longitude coordinates ( x; y ).

Problem definition on POI recommendations. Giv-en the geographical coordinates of POIs, check-in matrix R
U | X | L | , social link matrix S | U | X | U | , categorical bias ma-predict the preference score s ( u; l ) of a user u to an unvisited POI l (i.e., R u;l = 0), and then return the top-k POIs with the highest preference score s ( u; l ) for the user u .
Distinctly from non-spatial items, such as books and mu-sic in conventional recommendation systems, in LBSNs user-s are required to physically interact with POIs to consume their offered products or services, e.g., eating food at restau-rants or watching movies at cinemas. Thus, the geographi-cal proximity of POIs plays a significant role in the check-in behaviors of users. In other words, the close POIs have the stronger geographical correlations than the far POIs. There-fore, we can exploit the geographical correlations between a user's visited POIs and her unvisited POI to estimate the relevance score of the user on the unvisited POI. To mod-el the geographical correlations between POIs, we estimate a personalized check-in distribution over the geographical coordinates for each user based on her own visited POIs.
Due to the fact that the check-in distributions of users are different from one another, e.g., indoorsy persons like visit-ing venues around their living areas while outdoorsy persons prefer exploring new interesting places by traveling around the world. Accordingly, the current works [30, 31, 34, 35] learn the distribution form from the check-in POIs of a user based on a nonparametric estimation method, i.e., the kernel density estimation with a fixed bandwidth [19]. Nonethe-less, the fixed bandwidth does not reflect the facts in the (a) A user in Foursquare Figure 2: Geographical check-in distribution (con-tour line) of random users from the real-world data user check-in data: dense urban areas will have high check-in density and sparsely-populated rural areas will have low check-in density. To this end, in this paper we adapt the ker-nel bandwidth to each check-in data point and the adaptive bandwidth itself is also learned from the underlying check-in data. In general, the adaptive kernel estimation method includes three steps: pilot estimation , local bandwidth de-termination , and adaptive kernel estimation for geographical relevance score .

Step 1: Pilot estimation. First, we find a pilot esti-mation based on the kernel density estimation with a fixed in POIs of user u , in which each POI l i is associated with a pair of latitude and longitude ( x i ; y i ). Specifically, we use the frequency or rating of user u on POI l i , i.e., R (
Definition 1), as the weight of l i because a higher frequen-cy or rating at a POI indicates that it is more important to the user. The pilot estimation  X  f Geo ( l | u ) of the check-in dis-tribution of user u on an unvisited POI l is given by tog ether with and
K H ( l  X  l i ) = 1 where K H ( l  X  l i ) is the normal kernel function with the fixed bandwidth H consisting of two global bandwidths ( H 1 ; H for the latitude and longitude, given by and where ( H 1 ; H 2 ) are computed from the standard deviation of the latitude and longitude values in the check-in data of user u , respectively [19].

Step 2: Local bandwidth determination. Further, instead of directly using the pilot estimation  X  f Geo ( l quation (1) to predict the relevance score of user u to POI l , we uti lize the pilot estimation to determine the local band-width h i for each check-in POI l i , given by where is the sensitivity parameter with 0  X   X  1, i.e., the larger the parameter , the more sensitive the local band-width h i will be to the pilot estimation  X  f Geo ( l i | the geometric mean: whic h imposes the constraint that the geometric mean of the h ( i = 1 ; 2 ;  X  X  X  ; n ) is equal to one.

Step 3: Adaptive kernel estimation for geograph-ical relevance score. Finally, with the global bandwidth H = ( H 1 ; H 2 ) in Equations (4) and (5) and the adaptive local bandwidth h i in Equation (6), the adaptive kernel es-timation f Geo ( l | u ) of the check-in distribution of user u on an unvisited POI l is computed through where K
It is important to note that: When a check-in POI l i lies in the area with a higher check-in density, it has a larger bandwidth h i in Equation (6) that will produce a peak adap-tive kernel estimation f Geo ( l | u ) around l i in Equation (8). In contrast, when a check-in POI l i lies in the area with a lower check-in density, it has a smaller pilot estimation  X  f
Geo ( l i | u ) in Equation (1) or a larger local bandwidth h Equation (6) that will generate a smooth adaptive kernel estimation f Geo ( l | u ) around l i in Equation (8). Therefore, our adaptive kernel estimation method can improve the pre-dictive ability of the estimated check-in distribution for the geographical relevance score of user u on an unvisited POI l , i.e., f Geo ( l | u ).

Example. Figure 2 depicts the contour line of the ge-ographical check-in distribution estimated through Equa-tion (8) with = 0 : 5 for a user who is randomly s-elected from two publicly available real-world data sets: Foursquare [6] and Yelp [24], respectively. The estimated geographical distribution is able to capture the geographical preference of a specific user on POIs: the user in Foursquare visits POIs over the world, with concentration on two areas, while the user in Yelp checks in POIs only in Arizona of USA, with focus on three areas.
In reality, friends often go to some places like movie the-aters or restaurants together or a person may travel on spots highly recommended by her friends. In other words, the so-cial correlations between users greatly affect the check-in behaviors of users to POIs. Likewise, in LBSNs users create social links with each other to indicate the social friendships among them. Accordingly, we can deduce the relevance s-core of a user and an unvisited POI through leveraging the Figure 3: Social check-in frequency or rating distri-bution in the real-world data social correlations between the user with her friends who have visited the POI. The process consists of three steps: social aggregation , distribution estimation of social frequen-cy or rating , and social relevance score computation .
Step 1: Social aggregation. Formally, given a user u and an unvisited POI l , we aggregate the check-in frequency or rating x u;l of the user u  X  X  friends (i.e., u  X  with S on the POI l , given by where R u  X  ;l is the check-in frequency or rating of user u exists a social link between users u and u  X  ( Definition
One can naively regard the social check-in frequency or rating x u;l as the relevance score between user u and POI l or simply divide x u;l by the number of friends of u as in the traditional collaborative filtering techniques. More so-phisticatedly, in this study we transform the social check-in frequency (or rating) into a normalized relevance score based on the social check-in frequency (or rating) distribution that is learned from the historical check-in data of all users.
Step 2: Distribution estimation of social frequen-cy or rating. In real-world data sets, the social check-in frequency or rating random variable x follows a power-law distribution, the probability density function of which is de-fined by where is estimated by the check-in matrix R and social link matrix S : = 1 + | U || L | in which quency or rating of the friends u  X  X  of user u  X  on POI l
To observe the real distribution of the social check-in fre-quency or rating, we conducted analysis on the two publicly available real-world data sets: Foursquare [6] and Yelp [24]. Figure 3 shows that the social check-in frequency or rating (i.e., the dots) in the two real-world data sets fits a certain power-law distribution very well (i.e., the line), estimated through Equations (11) and (12). Thus, modeling the social check-in frequency or rating as a power-law distribution is reasonable and effective.

Step 3: Social relevance score computation. The es-timated probability density function f So in Equation (11) is monotonically decreasing with respect to the social check-in frequen cy (or rating) x , but the social relevance score should be monotonically increasing with regard to the social check-in frequency (or rating) because friends share more common interests on POIs. Thus, we define the social relevance score of x u;l in Equation (10) based on the cumulative distribution function of f So , given by where F So is an increasing function respecting the social check-in frequency or rating x u;l because of 1  X  &lt; 0. More-over, based on the cumulative distribution function F So in Equation (13), the social check-in frequency (or rating) x is transformed into a social relevance score that reflects the relative position of x u;l in all social check-in frequencies (or ratings) of users on POIs.
In LBSNs, each POI is attached to a few categories. The category of a POI has a strong indication about what ac-tivities happen in the POI and what products or services are provided by the POI. For instance, a person visiting a restaurant means that she may have a meal there and a Chi-nese restaurant indicates that Chinese food will be provided for customers. In practice, people have shown distinct bi-ases on the categories of POIs, e.g., a foodie likes visiting restaurants to taste various food and a tourism enthusiast prefers traveling all over the world to view tourism attrac-tions. Hence, we also can derive the relevance score of a user to an unvisited POI through exploiting the categorical correlations between the visited POIs and the unvisited POI of the user.

In addition, the popularity of a POI reflects the quality of products or services offered by the POI, e.g., a popu-lar restaurant usually indicates that it supplies high-quality foods. Therefore, it is helpful to utilize the popularity for POI recommendations. Specifically, we develop a new method to combine the category bias of a user and the pop-ularity of a POI into a relevance score between the user and POI through three steps: weighing popularity by categorical bias , distribution estimation of categorical popularity , and categorical relevance score computation .
 Step 1: Weighing popularity by categorical bias.
 At first, we take the bias of a user u to a certain category c as B u;c , i.e., the frequency of user u visiting the POIs that belong to category c ( Definition 3). Then, the bias B u;c is used to weigh the popularity of an unvisited POI l in category c , i.e., P c;l ( Definition 4). Correspondingly, we obtain the categorical popularity y u;l for user u on POI l : where C is the predefined universal set of categories in an LBSN. A larger value of y u;l indicates that the category of POI l is more satisfied with the bias of user u and the POI l is more popular to the general public.

One may naively consider the categorical popularity y u;l as the relevance score between user u and POI l or simply normalize the categorical bias B u;c in advance. Neverthe-less, in this research the categorical popularity of a user to an unvisited POI is sophisticatedly mapped into a relevance score based on the distribution of the categorical popularity that is learned from the historical check-in data of all users. Figure 4: Categorical popularity distribution in the real-world data
Step 2: Distribution estimation of categorical pop-ularity. As the distribution of the social check-in frequency or rating, we apply the similar process to build the distri-bution of the categorical popularity. Formally, we assume the probability density function of the categorical populari-ty random variable y , defined by in which can be learned from the categorical bias matrix B and popularity matrix P : where u on POI l  X  .

As depicted in Figure 4, we have also observed that the categorical popularity (i.e., the dots) in the two real-world data sets approaches to the power-law distribution (i.e., the line) that is estimated in terms of Equations (15) and (16). Thus, these results have validated that the assumption of the power-law distribution is in accordance with reality. Step 3: Categorical relevance score computation.
 Similarly, the estimated probability density function f Ca Equation (15) is monotonically decreasing regarding the cat-egorical popularity y ; however, the categorical relevance s-core is monotonically increasing respecting the categorical popularity, since people prefer the popular POIs that also meet their categorical biases. To this end, we employ the cumulative distribution function of f Ca to obtain the cate-gorical relevance score of y u;l in Equation (14), given by where due to 1  X  &lt; 0, F Ca is an increasing function with respect to the categorical popularity y u;l . Importantly, the categorical y u;l is also normalized into a categorical relevance score, i.e., the relative position of y u;l compared to other categorical popularities of users on POIs.
Finally, we integrate the geographical, social and categor-ical relevance scores, given by Equations (8), (13) and (17), into a unified preference score s ( u; l ) for user u to unvisited POI l based on the product rule: The top-k POIs l with the highest score s ( u; l ) are recom-mended to user u . It is worth mentioning that the product Num ber of users 4,163 70,817 Number of POIs 121,142 15,579 Number of categories 35 591 Number of check-ins or ratings 483,813 335,022 Number of social links 32,512 303,032 User-POI matrix density 2 : 83  X  10  X  4 1 : 46  X  10  X  4 Figure 5: Distribution of POIs in the two data sets rule has been widely used to fuse different factors for POI recommendations in the previous works [2, 13, 30, 34] and has shown high robustness.
In this section, we conduct intensive experiments to e-valuate the recommendation quality of GeoSoCa, compared to state-of-the-art POI recommendation techniques. We present experimental settings in Section 4.1 and analyze ex-perimental results in Section 4.2.
Two real data sets. We use the two publicly avail-able large-scale real check-in data sets that have been stud-ied in Section 3 and were crawled from Foursquare [6] and Yelp [24]. Note that the Foursquare data set provides the check-in frequencies of users to POIs and the Yelp data set offers the ratings of users on POIs. Table 2 shows the statis-tics of the data sets and Figure 5 depicts the distribution of POIs over the world from Foursquare while the greater Phoenix, Arizona, USA from Yelp. The half of check-in da-ta with earlier check-in times are used as the training set and the other half of check-in data are used as the testing set, because in practice we can only utilize the past check-in data to predict the future check-in events.
 Evaluated techniques. Our proposed method, i.e., GeoSoCa , is compared with the state-of-the-art POI recom-mendation techniques including:
Performance metrics. To evaluate the quality of POI recommendations, it is important to find out how many POIs actually visited by a user in the testing set are dis-covered by the recommendation techniques. For this pur-pose, we employ two standard metrics: Precision = No. of discovered POIs
Parameter settings. We examine the precision and re-call with respect to various numbers of POIs recommended for users (top-k from 2 to 50) and numbers of POIs visited by users in the training set ( n from 2 to 50). Further, we investigate the recommendation accuracy of the three com-ponents in GeoSoCa and the effect of sensitivity parameter , by default = 0 : 5, in Equation (6). Note that and are not free parameters and are learned from check-in data according to Equations (12) and (16), respectively.
We compare our GeoSoCa with the state-of-the-art POI recommendation techniques in Section 4.2.1, study the rec-ommendation quality of the three components in GeoSoCa in Section 4.2.2, and investigate the effect of sensitivity pa-rameter in Section 4.2.3.
Figures 6 and 7 depict the recommendation accuracy of our GeoSoCa compared to the state-of-the-art POI recom-mendation techniques with respect to the number k of POIs recommended for users and the number n of POIs visited by users in the training set. The trends in the precision and recall of all evaluated methods are intuitive. For example, as k increases, the precision gets lower and the recall becomes higher, because recommending more POIs for users can dis-cover more POIs that the users would like to check in, but some recommended POIs are less possible to be visited by the users. With the increase of n , the precision and recall gradually raise, since all methods can learn better recom-mendation models through using more check-in data.
The absolute accuracy of POI recommendation techniques is usually not high, because the density of user-POI check-in matrix is pretty low as shown in Table 2, but POI recom-mendation techniques will perform better as more check-in data are collected. This phenomenon has been repeated-ly observed in previous works (e.g., [23, 31]). Instead, we concentrate on contrasting the relative accuracy of the eval-uated POI recommendation techniques.

USG. This method [23] linearly integrates user preference from user-based collaborative filtering, social influence from social collaborative filtering, and geographical influence from a common distance distribution for all users, but it does not take into account the category and popularity information of POIs. Moreover, it is not advisable to apply the universal linear weights for user preference, social influence, and ge-ographical influence, since some users are affected by social friends more and other users may rely on the geographical influence more. According to Figures 6 and 7, USG subse-quently gives the third worst recommendation result on the Foursquare data set and the worst recommendation accura-cy on the Yelp data set that has two time lower density than the Foursquare data set, as depicted in Table 2.

CoRe. This method [31] employs the social influence in the same way as USG , but it models a personalized geograph-ical check-in distribution for each user and combines the so-cial and geographical influences by a more robust product rule rather than using the linear sum rule. CoRe according-ly outperforms USG to some extent as depicted in Figures 6 and 7. However, CoRe still misses the category and popu-larity information of POIs and estimates the geographical check-in distribution based on the kernel density estimation method with a fixed bandwidth. As a result, in general it only generates the third best recommendation precision and recall on the two data sets.

DRW. This method [27] adopts a dynamic random walk model to fuse the social links between users and the cate-gory and popularity information of POIs, but it does not consider the unique characteristic of POI recommendation-s for LBSNs, i.e., the influence of geographical information of POIs on the check-in behaviors of users. Consequently, DRW reports the lowest recommendation accuracy on the Foursquare data set, as shown in Figures 6(a), 6(b), 7(a), and 7(b). Interestingly, on the Yelp data set with lower density in Figures 6(c), 6(d), 7(c), and 7(d), DRW is supe-rior to USG through taking full advantage of the popularity of POIs to deal with the sparsity of data.

LCARS. This method [25, 26] exploits the well-known topic model, i.e., latent Dirichlet allocation, to infer the per-sonal interest of users and local preference (i.e., local special-ty) of regions (e.g., a city). The personal interest or local preference is represented as a mixture of topics, in which each topic is a distribution over POIs and is learned from the check-in data and categories of POIs. Nonetheless, L-CARS ignores the geographical and social characteristics in the check-in behaviors of users on POIs, so it also suffers from the low recommendation accuracy as in DRW .

NCPD. This method [8] utilizes matrix factorization to derive a latent factor vector for each user, POI and category, a geographical bias for each user, and a popularity bias for each POI. Then, NCPD computes the preference score of a user to a POI based on (1) the latent factor vectors of the user, the categories that the POI belongs to, and the neigh-borhoods of the POI, (2) the user X  X  geographical bias, and (3) the POI X  X  popularity bias. Accordingly, NCPD shows the second best recommendation result as depicted in Figures 6 and 7. However, its improvement is very limited in compari-son to CoRe , because NCPD simply regards the geographical and popularity influence as a bias, instead of modeling them as a geographical or popularity distribution.

GeoSoCa. Our proposed GeoSoCa always exhibits the best recommendation quality in terms of both precision and recall. In particular, it achieves the significant improvemen-t compared to the second best recommendation technique NCPD . The reason is threefold: (1) GeoSoCa models the geographical check-in distribution using the adaptive ker-nel estimation method, in which the bandwidth is adaptive to each check-in data point rather than using a fixed band-width. This adaptive method can capture the real geograph-ical check-in patterns of users on POIs, e.g., high check-in density in dense urban areas and low check-in density in sparsely-populated rural areas. (2) GeoSoCa exploits the social check-in frequency or rating of friends based on the power-law distribution which is learned from the historical check-in data of users. This method can effectively trans-form the social check-in frequency or rating into a reason-able relevance score and is superior to the traditional social collaborative filtering. (3) GeoSoCa takes full advantage of the category and popularity information through seamlessly combining the categorical bias of users and the popularity of POIs into a reasonable relevance score based on the esti-mated power-law distribution from check-in data of users.
Here we study the three components of GeoSoCa includ-ing geographical, social and categorical correlations, written as Geo , So and Ca , respectively. Figure 8 depicts the rec-ommendation accuracy of the three components based on Equations (8), (13) and (17), respectively. We have two ob-servations: (1) All the three components play a key role in GeoSoCa for POI recommendations and they are competi-tive to one another. For example, So outperforms Geo and Ca on the Foursquare data set, but reversely on the Yelp data set. And the performance of Geo and Ca is similar on the two data sets. (2) The integration of the three compo-nents is helpful for enhancing the recommendation quality, since GeoSoCa is significantly superior to each component, i.e., Geo , So and Ca . The behind reason is that in practice people are affected by the geographical, social and categori-cal correlations in varying degrees; it is unable to model the check-in behaviors of all users by considering only one type of correlations. Thus, POI recommendations should take full advantage of various types of useful information implied the check-in behaviors of users on POIs.
Figure 9 depicts the effect of the sensitivity parameter in Equation (6) on the precision and recall of GeoSoCa in the two real-world data sets; note that and are not free parameters and are learned from the check-in data. We have the following three observations: (1) The optimal value of usually lies between 0.4 and 0.6 that generates the highest recommendation accuracy. (2) As the value of varies from 0.4 to 0, the local bandwidth gets less sensitive to the pilot (a) GeoS oCa -Precision Figure 9: Effect of sensitive parameter on recom-mendation accuracy of GeoSoCa estimation in terms of Equation (6), i.e., the local band-width is less related to the check-in data. Especially, when = 0, the adaptive local bandwidth is degraded to the fixed bandwidth that has nothing to do with the check-in data. As a result, the precision and recall decrease. (3) In con-trast, when the value of becomes higher from 0.6 to 1, the local bandwidth gets more sensitive to the pilot estimation in Equation (6), i.e., the local bandwidth is prone to over-fitting the check-in data. Thus, the recommendation quality deteriorates as well. This paper proposes a new POI recommendation approach GeoSoCa by exploiting three types of correlations that are derived from the historical check-in data of users on POIs. (1) GeoSoCa uses the kernel estimation with an adaptive bandwidth to model the geographical correlations between POIs as a personalized geographical check-in distribution of POIs for each user. (2) GeoSoCa models the social check-in frequency or rating as a power-law distribution to utilize the social correlations between users. (3) GeoSoCa models the popularity of POI categories as a power-law distribution to employ the categorical correlations between POIs. The experimental results on the two large-scale real-world data sets collected from Foursquare and Yelp show that GeoSo-Ca significantly improves the recommendation accuracy of the current state-of-the-art POI recommendation approach-es. As a part of our future work, we plan to extend our GeoSoCa by integrating the sentiment or opinion extract-ed from the textual reviews of users commenting POIs to improve the recommendation quality of GeoSoCa.
The authors were supported by Guangdong Natural Sci-ence Foundation of China under Grant S2013010012363. [1] J. Bao, Y. Zheng, and M. F. Mokbel. Location-based [2] C. Cheng, H. Yang, I. King, and M. R. Lyu. Fused [3] C. Cheng, H. Yang, M. R. Lyu, and I. King. Where [4] G. Ference, M. Ye, and W.-C. Lee. Location [5] H. Gao, J. Tang, X. Hu, and H. Liu. Exploring [6] H. Gao, J. Tang, X. Hu, and H. Liu. Content-aware [7] B. Hu and M. Ester. Spatial topic modeling in online [8] L. Hu, A. Sun, and Y. Liu. Your neighbors affect your [9] T. Kurashima, T. Iwata, T. Hoshide, N. Takaya, and [10] K. W.-T. Leung, D. L. Lee, and W.-C. Lee. CLR: A [11] J. J. Levandoski, M. Sarwat, A. Eldawy, and M. F. [12] D. Lian, C. Zhao, X. Xie, G. Sun, E. Chen, and [13] B. Liu, Y. Fu, Z. Yao, and H. Xiong. Learning [14] B. Liu and H. Xiong. Point-of-interest [15] X. Liu, Y. Liu, K. Aberer, and C. Miao. Personalized [16] Y. Liu, W. Wei, A. Sun, and C. Miao. Exploiting [17] H. J. Miller. Tobler X  X  first law and spatial analysis. [18] S. Rahimi and X. Wang. Location recommendation [19] B. W. Silverman. Density estimation for statistics and [20] H. Wang, M. Terrovitis, and N. Mamoulis. Location [21] D. Yang, D. Zhang, Z. Yu, and Z. Wang. A [22] Z. Yao, B. Liu, Y. Fu, H. Xiong, and Y. Ge. User [23] M. Ye, P. Yin, W.-C. Lee, and D.-L. Lee. Exploiting [24] Yelp. Challenge Data Set [accessed 25-april-2014]. [25] H. Yin, B. Cui, Y. Sun, Z. Hu, and L. Chen. LCARS: [26] H. Yin, Y. Sun, B. Cui, Z. Hu, and L. Chen. LCARS: [27] J. J.-C. Ying, W.-N. Kuo, V. S. Tseng, and E. H.-C. [28] Q. Yuan, G. Cong, Z. Ma, A. Sun, and [29] Q. Yuan, G. Cong, and A. Sun. Graph-based [30] J.-D. Zhang and C.-Y. Chow. iGSLR: Personalized [31] J.-D. Zhang and C.-Y. Chow. CoRe: Exploiting the [32] J.-D. Zhang and C.-Y. Chow. Spatiotemporal [33] J.-D. Zhang and C.-Y. Chow. TICRec: A probabilistic [34] J.-D. Zhang, C.-Y. Chow, and Y. Li. iGeoRec: A [35] J.-D. Zhang, C.-Y. Chow, and Y. Li. LORE: [36] Y.-L. Zhao, L. Nie, X. Wang, and T.-S. Chua. [37] V. W. Zheng, Y. Zheng, X. Xie, and Q. Yang.

