 We study personalized item recomme ndation within an enterprise social media application suite that includes blogs, bookmarks, communities, wikis, and shared files. Recommendations are based on two of the core elements of social media X  X  X eople and tags. Relationship information among people, tags, and items, is collected and aggregated across different sources within the enterprise. Based on these aggregated relationships, the system recommends items related to people and tags that are related to the user. Each recommended item is accompanied by an explanation that includes the people and tags that led to its recommendation, as well as their re lationships with the user and the item. We evaluated our recommender system through an extensive user study. Results show a significantly better interest ratio for the tag-based recommender than for the people-based recommender, and an even better performance for a combined recommender. Tags applied on the user by other people are found to be highly effective in representi ng that user X  X  topics of interest. [Information Search and Retrieval]: information filtering General Terms : Algorithms, Experimentation Keywords: Personalization, Recommender Systems, Social Media, Social Networks, Social Software, Collaborative Tagging Social media has been enjoying a great deal of success in recent years, with millions of users vi siting sites like Facebook for social networking; Wordpress for bloggi ng; Twitter for micro-blogging; Flickr and YouTube for photo and video sharing, respectively; Digg for social news reading; and Delicious for social bookmarking. These social media sites rely principally on their users to create and contribute content; to annotate others X  content with tags, ratings, and comments; to form online relationships; and to join online communities. As social media sites continue to proliferate, and their volumes of content keep growing, users are having more difficulty choosing sites in which to become actively involved. Furthermore, users are  X  X looded X  with information from feed readers, news alert systems, and many other resources. Easy access to so much information along with difficulty in judging the validity of so much content can lead to information overload, i.e., having more information available than a user can readily assimilate. Social media sites are increasingly challenged to attract new users and retain existing ones, due to these same factors. One way site address these issues is by providing users with personalized recommendations. As in traditional taste-related domains or e-commerce (movies , books, hotels), the goal of a personalized recommender system is to adapt the content based on characteristics of the individual users. Social media and personalized recommender systems can mutually benefit from one another: on the one hand, social media introduces new types of public data and metadata, such as tags, ratings, comments, and explicit people relationships, which can be utilized to enhance recommendations; on the other ha nd, recommender technologies can play a key role in the success of social media applications and the social web as a whole, ensuring that each user is presented with the most attractive and relevant content, on a personal level. In recent years, quite a few personalized recommendation services for social media have emerged. For instance, StumbleUpon personalized recommender engine that suggests web pages based on a user X  X  past ratings, ratings by friends, ratings by users with similar interests, and topics of in terest selected by the user from a list of nearly 500 subjects. More recently, some of the leading social media sites have also added personalized recommendation features: video-sharing site Y ouTube has launched a personalized homepage that includes recomme ndations based on past views and favorites. This feature is reporte d to have led to an increase in the number of users visiting th e homepage, the frequency of visits, and the number of subscrip tions users make over time [25]. Social news aggregator servi ce Digg has added a personalized recommender engine for presenting stories presumed to be most interesting to a user, based on pr eferences of similar users [24]. Following the proliferation of social media sites on the web, analogous sites have emerged w ithin organizations, gaining popularity as well [8]. Similarly to their counterparts on the web, enterprise social media sites also face challenges stemming from a continuously growing number of applications and the expanding volumes of information within them [8,11]. In this work, we study personalized recommendation of social media items within an enterprise social software application suite, Lotus Connections (LC) [18]. LC consists of various types of social media applications, including social bookmarking, file www.stumbleupon.com sharing, blogging, communities, and wikis. Our recommender suggests items across the different applications based on two of the main characteristics of social media X  X eople and tags. In a previous work, we studied the recommendation of social media items based purely on relate d people [17]. We showed that items that are strongly related to people in a user X  X  social network are likely to interest that user. Ou r hypothesis in this work is that recommending items related to a user X  X  tags can also increase the quality of recommendation. Such a combination may be viewed as a social media variation of a traditional hybrid recommender that has been proven to be effectiv e in taste-related domains [4]. Previous work has suggested tag-based recommendations, highlighting the value of tags as concise and accurate content descriptors that take into account human perception of the content [22,29]. User-tag relationships ha ve been inferred through direct usage of tags or through indirect links, such as tags applied to resources rated positively by a user or those that were clicked-through by a user. In this work, we only use information that is already publicly available and that does not require any explicit input, such as rating. We do not use any private information, such as click-through rates or query logs . We evaluate three methods to extract user-tag relationships based on public information: (1) direct usage of tags across the di fferent LC applications ( X  X sed tags X ); (2) indirect link between a user and a tag through an item, e.g., tags related to documents that are related to the user ( X  X ndirect tags X ); and (3) tags app lied to the user by others, within a people-tagging feature that allows users to tag one another [9] ( X  X ncoming tags X ). To the best of our knowledge, our study is the first to suggest using incoming pe ople tags to recommend content. Our recommender engine is base d on the social aggregation system SaND [5,27], which aggregates relationships among people, items, and tags, across the different LC components. SaND is used to extract, for each user, weighted lists of related people and related tags that cons titute the user X  X  personal profile. In addition, SaND provides weight ed lists of items related to given people and/or tags. Ultimately, the system recommends to the user items that are related to people and tags within his personal profile. For each recommended item, two-level explanations illustrate why the item is recommended. On the first level, the related people and/or tags that yielded the recommended items are presented. On the second level, by hovering over the name of a specific person or a tag, the user may see its relationship to the recommended ite m and to himself as inferred by SaND. Our approach has several advantag es: (1) users are not required to provide explicit input to the system, e.g., by rating a set of items (we infer both their social relations hips and topics of interest from other online information); (2) copi ng with the cold start problem of new users [28], as SaND allows aggregation of data which is external to LC (see [11]); (3) transparency [31] X  X ntuitive explanations can be provided ba sed on public tags and social relations; (4) performance X  X ur recommendations are based on the rich aggregated index and do not require clustering or other computationally-intensive methods; and (5) generality X  X oth people and tags can be used to recommend virtually any type of item, including music, photos, and videos. While the SaND infrastructure has been used before for providing people-based recommendations, in th is work we describe how it can be exploited to provide e ffective tag-based recommendations as well. Furthermore, we present a novel approach for a hybrid recommender based on people and tags that leverages the unified modeling of relationships among people, tags, and resources. Another benefit of this approach is a uniform presentation of  X  X ybrid explanations X  based on both people and tags. Our evaluation aims at compari ng five types of recommenders: a people-based recommender (PBR) ; a tags-based recommender (TBR); two types of a hybrid recommender (PTBR): a combination of people or tags (or-PTBR), and a combination of people and tags (and-PTBR, suggesting only items related to both people and tags); and a popularity-based recommender (POPBR), as a benchmark. To the best of our knowledge, this is the first comprehensive study to compare people-based recommenders with tag-based recommenders and their hybridizations. Our evaluation involves the following elements: (1) an offline comparison of the recommended items yielded by the five recommenders over 1,410 LC users, to examine the diversity across the recommenders, and in particular to compare the items stemming from related people w ith the items stemming from related tags; (2) a user survey with 65 participants who were asked to evaluate tags as indicator s of topics of interest, based on four different methods: indirect tags, used tags, incoming tags, and a combination of both used and incoming tags; (3) the main element of our evaluation is a survey of over 400 LC users, who were randomly divided into five groups, receiving recommendations based on the five recommenders. All groups received recommendations in two phases X  X ithout explanations and with explanations. Particip ants were asked to provide feedback on their interest in the recommended items. Our primary results show that th e combination of incoming tags and used tags is the most effective in representing a user X  X  topics of interest, with users rating nearly 70% of the topics as very interesting. Recommendations base d on a TBR, with a tag profile that combines incoming and used tags, are rated significantly more interesting than the most effective PBR studied in our previous work. Recommended items are shown to be highly different between the PBR and the TBR, with less than 2% overlap. A hybrid PTBR recommender including explanations improves the results slightly furthe r, leading to an over 70:30 ratio between interesting and non-intere sting items. It also presents other potential benefits over a TBR, such as a lower percentage of already known items and higher diversity of item types. In the next section, we discuss how existing work relates to our research. We then present our recommender system, followed by a detailed description of our e xperiments and their results. We conclude by discussing our findi ngs and suggesting future work. There are two prevalent approaches for building recommender systems: content-based (CB) [26] and collaborative filtering (CF) [13]. The CB approach is based on recommending items that are similar to those in which the user has shown interest in the past. The CF approach, on the other hand, recommends items to the user based on other individuals who are found to have similar preferences or tastes. Traditionally, both CB and CF systems have been based on explicit input from the user, usually provided by rating a set of items. To avoid this extra burden on the user, leveraging implicit interest indicators [6], such as purchase history, views, clicks, or queries, has recently become more popular in recommender systems. With the current prosperity of social media in general, and of social network sites (SNSs) in particular, several studies have suggested incorporating direct soci al relationships in CF systems. ReferralWeb [19] was one of the first systems to suggest the combination of direct social relations and CF to enhance searching for documents and pe ople. Several studies suggest incorporating explicit social network information in CF systems to improve the quality of recommendation in domains such as movies and books (e.g., [3,12,30]), music [20], clubs [14], and news stories [21]. In this work, we infer social relationships from many different data sources, such as an enterprise SNS, a wiki system, and an organizational char t. Previous work has shown the value of aggregating social network information in yielding a richer and more accurate social graph [15]. On the other hand, as tagging has emerged as a popular way to let users annotate social media cont ent, several works propose using tags as content descriptors for CB systems. Li et al. [22] analyze data from the social bookmarking site Delicious and find a high similarity between the tag vect or of a URL and its keyword vector, as extracted from the corresponding web page. Firan et al. [10] study personalized recommendation of tracks within the popular music portal Last.Fm, and show that tag-based profiles can produce better recommendations than conventional ones based on track usage. Vatturi el al. [32] study personalized bookmark recommendation using a CB approach that leverages tags, assuming that users would be interested in pages annotated with tags similar to ones they ha ve already used. Sen et al. [29] introduce Tagommenders X  X ecommender algorithms that extend existing CB techniques by making use of tags. Their evaluation is based on the MovieLens system, and findings indicate that tag-based algorithms generate bette r recommendation rankings than state-of-the-art CF-based algor ithms. The value in generating intuitive explanations through tags is highlighted in another MovieLens study by the same authors [33]. Our own tag-based approach is based on aggregating tags across various social media systems and considering both tags us ed by the user as well as tags with which the user has been tagged. In this paper, we use the co mbination of related people and related tags to recommend social media items. Our system can be viewed as a variation of a hybrid CF-CB recommender system, in which related people and tags are used analogously to traditional CF and CB systems, respectivel y. Some research suggests combining traditional CF and CB syst ems, mostly in taste-related domains (see [4] for a summary). In particular, several studies point to the value of hybridizing CF and CB over each of the pure methods on its own. For example, Fab [2], a hybrid recommender system for web pages, is one of the first systems that combined CB and CF, suggesting that such a combination may eliminate many of the weaknesses found in each approach when individually applied. Claypool et al. [7] present a new filtering approach that combines the  X  X overage and speed X  of CB filters with the  X  X epth X  of CF, and provides personalized filtering of an online newspaper. Melville et al. [23] present a hybrid recommender approach X  Content-Boosted Collaborative Filtering (CBCF), which uses a CB predictor to enhance existing user data, and then provides pe rsonalized suggestions through CF. Evaluation is based on a movie ra ting dataset and indicates that CBCF performs better than pure CB or pure CF. The hybrid recommender presented in this work is based on implicit interest indicators and does not require exp licit ratings by users, as most of the previous work. The unique hybridization algorithm is based on a unified index [1], which allows integrated retrieval of recommended items based on both people and tags. Our research platform for personal recommendation is Lotus Connections (LC) [18] X  X  social software application suite for organizations. It includes seven so cial media applications: profiles (of all employees), activities, bookmarks, blogs, communities, files, and wikis. We focus on r ecommending items of the last five applications, disregarding the fi rst two, since profiles pose a different challenge regarding pe ople recommendation [16], and an activity is generally restricted to a limited number of users. In our work, recommended items may originate from one of the following five applications, which are part of LC X  X  deployment within our organization: (1) social bookmarking application, which allows users to store and tag their favorite web pages. It includes 900K bookmarks with 2M tags by 21K users; (2) blogging service that contains 7. 5K public blogs, 130K entries, 350K tags and 17K users; (3) online community system that contains 6K public communities, each with shared resources (such as feeds and discussion forums), with a total of 174K members and 19.5K tags; (4) system for file sharing with 15K public files (presentations, photos, articles, etc.), 24K tags, and 8K users; and (5) wiki system with 3K public wikis including 20K pages edited by 5K us ers, and with 10K tags. SaND [5,27] is an aggregation sy stem that models relationships among people, items, and tags, through data collected across the enterprise, and in particular across all LC applications. SaND aggregates any kind of relations hips between its three core entities X  X eople, items, and tags. The implementation of SaND is based on a unified approach [1], in which all entities are searchable and retrievable. As part of its analysis, SaND builds an entity-entity relationship matrix that maps a given entity to all related entities, weighted according to their respective relationship strengths. The entity-e ntity relationship strength is composed of two types of relations:  X  Direct Relations : Figure 1 shows all direct relations among  X  Indirect Relations : Two entities are indirectly related if both The user profile, P(u) , is given as an input to the recommender engine once the user u logs into the system. The profile is used to personalize the recommended items for u . It consists of 30 related people, N(u) , and 30 related tags, T(u) , retrieved through SaND, as explained in the paragraphs below. The set of people related to the us er is extracted by considering both direct and indirect people-pe ople relations, scoring them, and aggregating them into a single person-person relationship strength, in the same way as wa s performed in previous studies ([16,17]). In principle, each direct relation adds a score of 1 to the overall relationship score, while an indirect relation adds a score in the range of (0,1], determined by various parameters, such as the number of common files or num ber of other wiki co-authors. More details on person-person score calculation can be found in [15,16,17]. Our previous work on purely people-based recommendation [17] distinguished between familiarity relationships (people the user knows) and similarity relationships (people whose social activity overlaps with the user X  X  social ac tivity). Familiarity relationships include all direct people-people relations, as well as two types of indirect relations: co-authorship (e.g., of a file or a wiki), and having the same manager. Similarity relationships include indirect relations only, such as co-usage of the same tag, co-tagging of the same item, co-commenting on th e same blog entry, or co-membership in the same community. Findings of that work have indicated that familiarity relationships are more effective in yielding interesting recommended items, yet similarity relationships are also productive and may diversify the recommended items. Based on our pr evious work X  X  conclusions, all similarity relationships are multiplied by a factor of 1/3, so that familiarity relationships are favored, yet do not completely prevail. The user X  X  set of related people is ultimately determined by retrieving the 30 related people who are found to have the highest relationship strength with the user, as done in [17]. To extract the user X  X  related tags , we consider the following user-tag relations: (1) used tags X  X irect relation based on tags the user has used; (2) incoming tags X  X irect relation based on tags applied on the user by others; and (3) indirect tags X  X ndirect relation based on tags applied on items related to the user (note that this subsumes relation 1). We conducted a user survey to evaluate the quality of these tags as indicators fo r the user X  X  topics of interest. Results of this evaluation are used to configure SaND to return the 30 tags that are most strongly related to the user X  X  topics. The survey results are described in more detail in Section 4.1. Given the user profile, P(u) = (N(u),T(u)) , we suggest items to the user that are related to people and/or tags in his profile. The recommendation score of item i for user u is determined by: where d(i) is the number of days since the creation date of i ;  X  is a decay factor (set in our experiments to 0.025 , as in [17]);  X  is a parameter that controls the re lative weight between people and tags, and is used in our expe riments to evaluate different recommenders; w(u,v) and w(u,t) are the relationship strengths of u to user v and tag t , as given by the user profile; w(v,i) and w(t,i) are the relationship strengths between v and t , respectively, to item i , as determined by SaND, ba sed on direct relations as described in Figure 1. User-item di rect relation types are weighted as in previous studies [1,5,17]: authorship (0.6), membership (0.4), commenting (0.3), and taggi ng (0.3). Tag-item relations are weighted relative to the number of users who applied the tag on the item, normalized by the overall popularity of the tag, as in [1]. Ultimately, the recommendation score of an item, reflecting its likelihood to be recommended to the user, may increase due to the following factors: more people and/or tags within the user X  X  profile are related to the item; stronger relationships of these people and/or tags to the user; stronger relationships of these people and/or tags to the item; and freshness of the item. We exclude items that are found to be directly related to the user. For example, we will not recommend an item on which the user has already commented or has already tagged. Figure 2 depicts our UI widget for item recommendations based on the algorithm described in the previous section. The user is presented with a number of items (three, in this example) that may include a mix of the five LC item types. Each item has a title that links to the original documen t, and a short description when available. The icon to the left of each item represents its type X  the first item in Figure 2 is a blog entry, the second is a community, and the third is a wiki. Each item includes a list of up to five related person names and/or up to five related tags that yi elded this item X  X  recommendation. The related people and tags serve as a first level explanation of why the item is recommended. On the second level, when hovering over a person X  X  name or a tag, the user is presented with a popup detailing the relations of the person/tag to the user and to the item. In Figure 2, the popup indicates that Inbal is a member of the recommended community, and is also related to the user through several detailed direct and indirect relations. In the case of hovering over a tag, the popup indicates whether the user has used the tag, was tagged by the tag, or both. As a first step of our evaluation we set out to explore how to effectively build a user X  X  tag profile based on the information represented in SaND. As describe d in the previous section, we examine three types of user-tag re lations: used tags, indirect tags, and incoming tags. While the first two types have been used in previous studies around tag-based pe rsonalization, to the best of our knowledge, this is the first st udy that examines incoming tags for personalized content recommendation. Our evaluation is based on a user survey sent to 200 LC users with at least 30 used tags a nd 30 incoming tags. User-related topics were assumed to be represented by tags associated with the user through four types of user-tag relations: (1) used tags; (2) incoming tags; (3) indirect tags; and (4) direct tags. The last group considers both types of direct re lations (used tags and incoming tags) as retrieved through SaND. We extracted the user X  X  four top related tags based on each of th e relation types and randomized their order. Overall, we produced up to 16 tags for each of the participants, for which they were asked to indicate their level of interest, according to following three options:  X  X ot Interested X ,  X  X nterested X , and  X  X ighly Interested  X . We sent invitations to the survey by email, and received responses from 65 users, who rated a total of 1,037 tags. Table 1 shows the rating results of th e tags as topics of interest for each of the four relation types. Direct tags clearly yield the most interesting topics X  X early 70% are rated as highly interesting and only 7.5% are rated not interesting. Incoming tags are slightly more effective in representing topi cs of interest than used tags, while indirect tags are evidently the least effective, with only 19% rated as highly interesting. One-way ANOVA indicates that ratings across the four types are significantly different ( F(3,1068)=51.89, p&lt;.0001 ). Tukey post-hoc comparisons of the four types indicate that direct tags are rated significantly higher than the rest of the types, indirect tags are rated significantly lower than the rest, and that the difference in interest levels between incoming and used tags is not significant. Due to these results we opted to use the direct user-tag relation for retrieving the user X  X  tag profile . We did not further weight incoming vs. used tags, as the differences between them in the survey were not statistically si gnificant. Consequently, we used SaND X  X  indirect relations only fo r retrieving the list of people related to a user (as has been shown useful by a previous study [15]). The main part of our evaluation is based on an extensive user survey, designed to compare the people-based recommender (PBR), the tag-based recommender (TBR), and two combinations of these two recommenders (PTBRs). Participants of the survey were asked to evaluate 16 r ecommended items in two randomly ordered phases (each phase included eight items): with and without explanations. Each particip ant was assigned to one of five groups in a round-robin order, receiving recommendations based on one of the following five recommenders: (1) PBR (  X  =1 in the equation in Section 3.4); (2) TBR (  X  =0 ); (3) or-PTBR X  X ach item may be recommended due to related people, related tags, or both (  X  =0.5 ); (4) and-PTBR X  X ach item is recommended due to at least one person and at least one tag in the user X  X  profile (  X  =0. 5 with the constraint that both parts of the summation in brackets are nonzero); and (5) POPBR X  X opular item recommendation (as a benchmark). The popularity of items was determined based on the number of people they were di rectly related to in SaND, and on the items X  freshness. For expl anations, we pointed out the types and numbers of the different direct relations with people as well as the last-update date. For example, an explanation for a popular item would be:  X  X agged by 57, commented by 12, last updated Jan. 17 th , 2010 X . Recommended items in each of the two phases were presented using the widget described in Figure 2, allowing to rate them as  X  X ery Interesting X ,  X  X nteresting X ,  X  X  already know this X , or  X  X ot Interesting X . Our target population for the survey consisted of 1,410 LC users who were directly related to at least 30 other people, 30 tags, and 30 items. We note that this group does not represent the entire population of our organization, but rather active users of the LC system, who are the target population for our recommender system. A link to the survey with an invitation to participate was sent to each of these 1,410 individuals. In addition, we ran the five recommenders for each of these users to retrieve the top 16 items, and calculated average overlap between the items returned from the different recommenders. The average overlap across the 1,410 users between the items returned by the PBR and the TBR was 1.58%, indicating that these two recommenders return very dissimilar items. The POPBR had ve ry low overlap with all other recommenders, ranging from 0.87% to 1.83%. Overlap between the two PTBRs was 38.6%. The or-PTBR had higher overlap with the PBR (57.3%) and the TBR (32.6%) than the and-PTBR (24.1% and 9.7%, respectively). Th is indicates that the or-PTBR recommends mostly items that are either recommended by the PBR or the TBR, while the and-PTBR recommends more items that are further down the list of the PBR and the TBR. In total, 412 participants completed our survey, originating from 31 countries and spanning the diffe rent organizational units: 32% sales, 28% software, 18% serv ices, 11% headquarters, 4% research, 4% systems, and 3% others. Table 2 summarizes the rating results of the survey for each of the five recommenders, with and wit hout explanations. The rightmost column displays the interest ratio  X  X he ratio between interesting (including very interesting) a nd non-interesting items. The best ratio is achieved by the or-PT BR with explanations. One-way ANOVA indicates that ratings across the five recommenders are significantly different ( F(4,5496)=66.823, p&lt;.0001 ). Tukey post-hoc comparisons indicate that differences between the POPBR and the other four recommenders, as well as between the PBR and the other four recommenders, are significant, while differences among the TBR, and-PTBR, and or-PTBR are not significant. Table 2. Item rating results across the five recommenders We opted to use popular items as a benchmark, in order to examine whether personalized recommendations are  X  X orth the effort X , and add substantial va lue over a general non-personalized recommendation of the most popular items. Results show that all types of personalized recommende rs significantly outperform the popularity-based recommender. Interestingly, when accompanied by explanations, popular items are rated slightly lower, possibly as the numbers indicating an item X  X  popularity are not found to be a compelling justification by the participants. Results for the PBR are consiste nt with the results from our previous work about people-based recommendation [17]. In this case, the explanations slightly increase the interest rate in recommended items, reinforcing the instant value of people-based explanations. In this work, we suggest using tags to improve the quality of social media item recommendation and as described in Section 4.1, we leverage both used tags and incoming tags. Results for the TBR, as displayed in Table 2, reveal that tag-based recommendations significantly outperform people-based recommendations, both with and wit hout explanations. When tags come into play, interest ratio jumps from around 1.5 to over 2. As opposed to the PBR, tag-based explanations did not instantly lead to more interest in items. In fact , items without explanations even led to a slightly higher interest ra tio (2.26 vs. 2.09). This indicates that while a TBR outperforms a P BR, tag-based explanations are not as effective as people-base d explanations in increasing interest in items. This may be due to the fact that related tags are already reflected, to some extent, in an item X  X  title or description. Figure 3 depicts aggregated rating results across the five recommenders, regardless of whethe r explanations were provided or not. The  X  X ll Interesting X  bar includes items rated interesting and very interesting. It can be s een that the number of items rated non-interesting drops by almost 10% when moving from the PBR to the TBR. The percentage of already known items is also notable X  X t is the highest for the TBR (15.5%), the lowest for the POPBR (4.8%) and the next-to-lowest for the PBR (8.7%). Tukey post-hoc comparisons indicate that the percentage of already known items in the TBR is significantly higher than in any of the other recommenders (other differences among the recommenders are not significant). These results are understandable: tags yield items that are more similar to ones the user preferred in the past and are thus likely to be less di verse and surprising than people-based items. Diversity is a well known advantage of CF recommenders over CB ones [13]. Popular items are even less expected than people-based items, however, as mentioned before, their interest ratio is significantly lower. The high diversity of the PBR relative to the TBR is also reflected in the types of items each of them yielded: 80% of the items recommended by the TBR for the survey X  X  participants were bookmarked web pages, while for PBR 32.6% were files, 29.3% communities, 22.3% bookmarks, 12.3% blogs, and 3.4% wikis. 
Figure 3. Item rating results across the five recommenders, Figure 3 indicates that both the or-PTBR and the and-PTBR produce the highest percentage of items rated interesting or very interesting X  X ver 60%. Table 2 demonstrates that when explanations are included, both PTBRs also have the highest percentage of very interesting items, the lowest percentage of non-interesting items, and an overa ll interest ratio of over 70:30. However, the differences between the two PTBRs and the TBR are statistically insignificant. Moreover, when explanations are excluded, the TBR performs slightly better than both PTBRs. These differences between the two phases may be due to the effectiveness of the people-based explanations included in the PTBRs, but not in the TBR (as discussed before). Figure 3 also shows that both PTBRs have a significantly lower percentage of already known items than the TBR, indicating that they produce less expected items while maintaining high interest ratios. Diversity of item types is also higher for the PTBRs, as compared to the TBR: only 44% of the or-PTBR and 51% of the and-PTBR items are bookmarks (com pared to 80% for the TBR). 42.5% of the recommended items in our survey (over all 412 participants) were bookmarked we b pages, 26.9% were shared files, 15.6% were communities, 10.2% were blog entries, and 4.8% were wikis. These differences may be ascribed to the fact that applications are different in various parameters, such as the level of usage within the organization, the frequency of item creation in the system (e.g., a bookmark is more frequently created than a wiki), and so on. Our recommendation algorithm does not explicitly consider the item type, and does not impose predefined item type diversity. Figure 4 depicts the rating results across the five item types. Bookmarks have the highest interest ratio, followed by communities and files. Ratings of these three types are significantly higher than those of blogs and wikis (u sing ANOVA with Tukey post hoc analysis). Note that the order of items in terms of proportion in the overall recommendations, as detailed in the previous paragraph, is very similar to their order in terms of interest ratio. Our recommenders suggest more items of types that are likely to be interesting, but also maintain some level of item type diversity. The percentage of already known items per type increases in accordance with the interest ratio, indicati ng a trade-off between accuracy and expectedness. The results presented in the previous section indicate that using tags for social media recommendation can be highly beneficial. The combination of directly used tags and incoming tags produces an effective tag-based user profile. A TBR that makes use of this profile yields significantly more interesting recommendations than the most effective PBR presented in a previous work [17]. In addition, the items produced by the TBR are almost completely disjoint from the items produced by the PBR (less than 2% average overlap across the top 16 items), i ndicating that related tags produce very different recommendations as compared to related people. Combining both related tags and pe ople in the user profile does not significantly increase the interest in recommended items over a pure tag-based approach; however, it significantly lowers the percentage of already known items, increases th e diversity of item types, and makes explanations more effective. The higher effectiveness of the TBR over the PBR may be than are people. People related to the user may broaden the scope of recommended items (and increase diversity), yet they are also likely to add irrelevant items, as they may have interest areas that are different from those of the user. In our previous work on PBRs [17], some of the feedback we received highlighted the need for additional filtering based on topics (since related people often have many different topics of interest). Indeed, PTBRs are found to perform significantly better than the optimal PBR. However, this im provement does not occur over the TBR, a finding that surprised us to some extent. We expected that adding people to tags as filters would significantly improve the recommendations (similarly to traditional hybrid recommender systems), yet the improvement was small. Our findings suggest that a TBR without explanations perform s well, and can be used as a starting point, or in cases that require a simple social media recommender system. We examine two PTBRs that combine related people and related tags in different manners, and produce fairly dissimilar recommended items (less than 40% mutual overlap). Yet, the differences in their performance are very small. Future studies may examine whether other methods fo r combining related people and related tags in user profiles can further enhance the recommender X  X  performance. In addition to the people-and tag-based recommenders, we also experimented with a non-personalized, popularity-based recommender. While the interest ratio of this recommender is significantly lower than all personalized recommenders, it has the potential to provide more unexpected recommendations, as reflected in its very low percentage of already known items. In a future work, we plan to examine whether and how a popularity recommender can be combined with the personalized recommenders, so that more unexpected items are suggested to th e user, but not so often as to become an annoyance. Integration of traditional CB methods within the recommender should also be explored and can be helpful in addressing two key issues that are acute in both TBRs and PBRs: (1) the cold start problem for new items, as these are not yet related to people or tags, and (2) language issues X  X tems th at users cannot understand might be accidentally recommended (e.g., when the tag X  X  language is different than the language of the content). Our recommender engine is based on the rich relationship data aggregated and modeled by SaND. The fact that we do not apply computationally-intensive algorithms over this data allows us to compare recommenders in a more direct way, provide intuitive explanations, and maintain generality. Future research should examine whether applying such al gorithms can further improve the results presented in this work. A future study is also required to validate the results of our experiments in a non-enterprise e nvironment, where tags are used on a larger scale, related people ar e mostly personal friends rather than colleagues, and multiple identities must be managed. We also plan to examine how to maintain high interest in recommended items over time. While the evaluation in this study is mostly based on rating an initial set of recommended items, maintaining that same level of interest for users who regularly access the system is more challenging. One approach we intend to explore, which could help overcome this challenge, is based on user feedback. The approach would addr ess how to elicit such feedback, on what levels to allow it (an item, a person, a tag, etc.), and how to adapt the recommendations accordingly. In this work, we propose a novel method for recommending social media items based on both relate d people and related tags. An extensive experimentation is c onducted to compare people-based and tag-based recommenders as we ll as their hybridizations. We show that a combination of directly used tags and tags applied by others is most effective in represen ting the user X  X  topics of interest. A recommender based on this tag profile yields items that are significantly more interesting to the user than the most effective people-based recommender demonstrated in a previous work [17]. Combining related people and tags in the user profile improves the results slightly further, leading to a 70:30 ratio between interesting and non-interesting items when e xplanations are included. In addition, a hybrid people-ta g-based recommender has other advantages, such as low proportion of expected items, high diversity of item types, richer explanations, and the simple fact that for some users, recommendations based on people work better, while for others, recommendations based on tags are more effective. Future work should thoroughly examine whet her the results presented here can be further improved by means such as integration of other recommenders (e.g., content-based or popularity-based), execution of more sophisticated algorithms (e .g., clustering of people, tags, or items), or optimization of the pa rameters used by the recommender engine. We thank Sigalit Ur and Tal Dani el for designing and implementing the recommender widget. We are grateful to Shila Ofek-Koifman and Sivan Yogev for many useful discussions. [1] Amitay, E., Carmel, D., Har X  X l, N., Soffer, A., Golbandi, N., Ofek-[2] Balabanovic, M. &amp; Shoham, Y. 1997. Fab: Content-based, [3] Bonhard, P. &amp; Sasse, M. A. 2006. Knowing me, Knowing you -[4] Burke, R. 2002. Hybrid Recommender Systems: Survey and [5] Carmel, D., Zwerdling, N., Guy I., Ofek-Koifman, S., Har'el N., [6] Claypool, M., Le, P., Wased, M ., &amp; Brown, D. 2001. Implicit [7] Claypool, M., Gokhale, A ., Miranda, T., Murnikov, P., Netes, D., [8] DiMicco, J., Millen, D. R., Geyer, W., Dugan, C., Brownholtz, B., [9] Farrell, S., &amp; Lau T. 2006. Fringe Contacts: People Tagging for the [10] Firan, C. S., Nejdl, W., &amp; Paiu , R. 2007. The Benefit of Using [11] Freyne J., Jacovi, M., Guy I ., &amp; Geyer W. 2009. Increasing [12] Golbeck J. 2006. Generating Predictive Movie Recommendations [13] Goldberg, D., Nichols, D., Oki, B. M., and Terry, D. 1992. Using [14] Groh, G., &amp; Ehmig, C. 2007. Recommendations in Taste Related [15] Guy, I., Jacovi, M., Shahar, E., Meshulam, N., Soroka, V., &amp; [16] Guy I., Ronen I., &amp; Wilcox E. 2009. Do You Know? [17] Guy, I., Zwerdling, N., Carmel, D., Ronen, I., Uziel, E., Yogev, S., [18] IBM Social Software for Business  X  Lotus Connections: [19] Kautz, H., Selman, B., &amp; Shah, M. 1997. ReferralWeb: Combining [20] Konstas, I., Stathopoulos, V., &amp; Jose, J. M. 2009. On social [21] Lerman, K. 2007. Social Networ ks and Social Information [22] Li, X., Guo, L., &amp; Zhao, Y. E. 2008. Tag-based Social Interest [23] Melville, P., Mooney, R. J., &amp; Nagarajan, R. 2002. Content-[24] Official Digg Blog: http://blog.digg.com/?p=127. [25] Official YouTube Blog: [26] Pazzani, M.J., &amp; Billsus D. 2007. Content-based recommendation [27] Ronen, I., Shahar, E., Ur, S., Uziel, E., Yogev, S., Zwerdling, N., [28] Schein, A. I., Popescul, A., Unga r, L. H., &amp; Pennock, D. M. 2002. [29] Sen, S., Vig, J., &amp; Riedl, J. 2009. Tagommenders: Connecting [30] Sinha, R. &amp; Swearingen, K. 2001. Comparing Recommendations [31] Sinha, R. &amp; Swearingen, K. 2002. The Role of Transparency in [32] Vatturi, P. K., Geyer, W., Dugan, C., Muller, M., &amp; Brownholtz, [33] Vig, J., Sen, S., &amp; Riedl, J. 2009. Tagsplanations: Explaining 
