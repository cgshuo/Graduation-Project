 1 Xiao-Ping Cui 1 Jiao Qu 1 Semantically searching and navigating products (e.g., on Taobao.com or Amazon.com) with professional metadata and user-generated content from social media is a hot topic in information retrieval and recommendation systems, while most existing methods are specifically designed as a purely searching system. In this paper, taking Social Book Search as an example, we propose a general search-recommendation hybrid system for this topic. Firstly, we propose a General-ized Content-Based Filtering (GCF) model. In this model, a preference value, which flexibly ranges from 0 to 1, is de-fined to describe a user X  X  preference for each item to be rec-ommended, unlike conventionally using a set of preferable items. We also design a weighting formulation for the mea-sure of recommendation.Next, assuming that the query in a searching system acts as a user in a recommendation sys-tem, a general reranking model is constructed with GCF to rerank the initial resulting list by utilizing a variety of rich social information. Afterwards, we propose a general search-recommendation hybrid framework for Social Book Search, where learning-to-rank is used to adaptively combine all reranking results. Finally, our proposed system is exten-sively evaluated on the INEX 2012 and 2013 Social Book Search datasets, and has the best performance (NDCG@10) on both datasets compared to other state-of-the-art systems. Moreover, our system recently won the INEX 2014 Social Book Search Evaluation.
 H.3 [ INFORMATION STORAGE AND RETRIEVAL ]: Information Search and Retrieval X  Search process Algorithms; Design; Experimentation  X  Corresponding author: Xu-Cheng Yin.
 Social book search; search-recommendation hybrid system; generalized content-based filtering; learning to rank
With the development of e-commerce and social network-ing services, the information of online products and items is acquired, shared and published in fundamentally differ-ent ways [24, 13]. Apart from the professional metadata, i.e., information comes with products, there is also wealthy user-generated content (e.g., ratings, reviews and tags) that describes the properties, content and attributes of products. Therefore, how to utilize such information and support users in semantic searching and navigating these products from social media becomes a hot topic [11, 28, 27]. As the domi-nant source of information, the book is a classical type of the online products with rich professional metadata and user-generated content. As a result, in this paper, we take Social Book Search as an example for semantically searching and navigating products with rich social information (e.g., on Taobao.com or Amazon.com).
 Social Book Search is a typical track in INEX Evaluation since 2011 1 . It is a task to satisfy the users X  requests about book recommendation from the Amazon book collection with a variety of social information (see one example book doc-ument in XML 2). In this task, the input (i.e., the user X  X  semantic request) is a query in natural language (called as  X  X opic X , see examples in XML 1) which comes from Library-Thing.com. The output is a suggested book list. In the track, the output results are evaluated with the relevance from a ground truth set (composed by manually annotated recom-mendations) [14].

On one side, this suggestion task is mainly a searching problem with queries (topics), documents (book collection), and results (by ranking). However, there are a variety of rich social information (e.g., reviews, ratings, and tags) in the document collection, and how to fully use the social informa-tion in searching is challenging. Furthermore, conventional searching systems did not have an encouraged performance in Social Book Search Track [15, 16]. On the other side, the
The Social Book Search definition was proposed by INEX organizers, which can be referred to https://inex.mmci. uni-saarland.de/tracks/books . target of this task is book recommendation, i.e., suggesting ranked books following the user X  X  request. To some extent, it is likely a recommendation system. Some participating systems with recommendation tricks won the recent Evalu-ation [17]. However, conventional recommendation systems can X  X  deal with semantic queries in natural language.
In Social Book Search, semantic understanding of the query is highly complex because the abilities and habits of expres-sion vary from one to another. Moreover, there is great difficulty in dealing with a mixture of professional and so-cial metadata, which differ both in quality as well as in kind. Usually professional metadata is often based on controlled vocabularies, while social metadata come in the form of re-views that vary widely in length, opinion, clarity, seriousness and in the aspects of the book they discuss [15, 16, 17].
Existing methods for Social Book Search can roughly be categorized into three groups: Query and Documents Pro-cessing methods, Sequential Dependence Model (SDM) based methods and Social Feature Reranking methods [16]. Query and Documents Processing methods focus on the frequen-cies of relevant words. Some techniques are proposed to remove the noise of queries, and other methods are designed to duplicate relevant information or bring meaningful infor-mation in documents [4]. These methods improve the per-formance of searching engine but they are still influenced by the limitation of mathematical models in searching. Se-quential Dependence Model considers the linguistic model of queries [6]. According to the INEX Social Book Search Evaluation, the SDM based systems are not as stable as other participating methods. The first two categories ac-tually construct a searching system (usually with a search engine) for Social Book Search. As we know, it is difficult to use a variety of social information in the book collection in conventional searching systems. Recently, Social Feature Reranking methods have become the focus of several recent works. These methods make use of the structure of doc-uments collection with social information. The similarities of books are calculated on some particular fields extracted from documents XML [20]. Based on the similarities, the searching results are reranked with a mathematical model. Social Feature Reranking (the third category) can be seen as searching with recommendation tricks, but there is no uni-fied framework to perform reranking and combination with various social information for Social Book Search.

As described before, this suggestion task is mainly a search-ing problem with semantic queries (topics). At the same time, the task with the user X  X  request is likely a recommen-dation system for book recommendation. In this paper, we argue that the Social Book Search task can be seen as a search-recommendation hybrid system.

In order to exploit recommendation techniques for social information, we firstly propose a Generalized Content-Based Filtering (GCF) model. As we know, Content-Based Filter-ing model needs a set of preferable items to describe the preference of users [22]. On the contrary, in our proposed GCF model, a preference value is defined for each item which ranges from 0 to 1. Another difference is the measure of recommendation. The conventional model takes the sum of similarities with items in the preference set while GCF takes the weighted sum of the mentioned preference value and the influence value from the conventional model. This Generalized Content-Based Filtering model can adaptively use a soft preference (ranging from 0 to 1) of items, and intelligently merge different recommendation values with a weighted combination.
 Based on this new GCF model, we then construct a unified Reranking Model by utilizing various social information by reranking the initial resulting list. By assuming the queries for searching act as the users in recommender systems [9], we design Social Book Search Reranking as a special case of recommender system. This new unified Reranking Model can easily utilize a variety of rich social information (e.g. ratings and tags) for semantically searching and navigating web products (books).

Next, taking Social Book Search as an example, based on this unified Reranking Model, we build a general search-recommendation hybrid system for Social Book Search. In this system, several social features are extracted from social information of documents to construct feature vectors. For each feature vector, a reranking result is obtained with the Reranking Model. Moreover, in order to make full use of all reranking results, we use learning-to-rank [7] to combine the reranking results. We select Random-Forest, Rank-Net and Coordinate-Ascent learners in the learning-to-rank strategy. The proposed searching system provides a unified framework for perform searching, reranking, merging and recommend-ing for Social Book Search.
Finally, our proposed system is extensively evaluated on the INEX 2012 and 2013 Social Book Search datasets, and has the best performance (NDCG@10) on both datasets compared to all participating systems. Moreover, our system recently won the INEX 2014 Social Book Search Evaluation.
The rest of the paper is organized as follows. Related work is discussed in Section 2. Section 3 introduces the General-ized Content-Based Filtering (GCF) model. Our proposed Social Book Search system is presented in Section 4 in de-tail. Section 5 describes extensive experiments on INEX Social Book Search Track datasets. We draw a conclusion in the last section.
As described above, existing models for Social Book Search can be mainly categorized into three groups, namely, Query and Documents Processing methods, Sequential Dependence Model based methods and Social Feature Reranking meth-ods. Query and Documents Processing methods and Se-quential Dependence Model based methods actually con-struct a purely searching system for Social Book Search, while Social Feature Reranking methods combine several recommendation tricks. In this section, we will review sev-eral main competitive technologies. For other related meth-ods, interested readers can refer to the INEX Social Book Search Evaluation proceedings [15, 16, 17].

First, as referred to INEX Social Book Search Track, queries are collected from a forum LibraryThing.com and docu-ment collections are crawled from Amazon. As a result, queries always appear in the form of xml documents made ually by professional experts), &lt; group &gt; . Query processing methods focus on different roles of the four fields. So dif-ferent combinations are used as inputs of searching engine to search for books. As mentioned above, document pro-cessing methods manage to enrich the documents. Numeric information is replaced with textual information, e.g., &lt; xxx flag &lt; /xxx &gt; [4].

Second, Sequential Dependence Model based methods fo-cus on the sentence structure of queries. Single term fea-ture, exact phrase feature and unordered window feature of queries are retrieved separately and the searching results are combined with Equation (1) [23], where the feature weight is set according to the default setting and f T ,f O ,f U log maximum likelihood estimates of query terms in docu-ment D , computed over the target collection with a Dirichlet smoothing.

Third, in the Social Feature Reranking method, some user-generated content fields are defined as social features of books. Based on the fact that similar books of relevant books are useful, each social feature is extracted from the XML documents in the form of feature vectors. The fields as social features in this model. For each social feature, the feature vectors of all documents make up to a feature matrix, in which the line vectors are the feature vectors of books. Then the similarity of each two books is calculated based on the cosine similarity of corresponding line vectors. The products of the similarity between documents i,j and corresponding initial score S j is added to the initial score S to rerank the initial results [3]. As we know, based on three social features there are three reranking results available. At last, linear combination is applied to fuse the three results if needed. According to evulation experiments, this model has a fair good performance, but suffers from two limitations: (1) how to select optimized parameters in combination and (2) how to make use of other relative fields with rich useful information. These two limitations lead to the instability of the system. For example, sometimes the combination result performs worse than the result based on single feature in the previous INEX evaluation. Consequently, a general frame-work is needed to be investigated for combining different searching results with various social information.
Content-Based Filtering model is a classical and popular model in recommendation systems. The basic idea of this model is to recommend items which match the user X  X  pref-erences most [18]. Comparing with Collaborative Filtering, although extra information such as the description of items is needed, this model has a great advantage that large amount of users and their ratings of products are not necessary [1]. That is, even if there is only one user, the model can achieve the goal of recommendation.

Content-Based Filtering model focuses on descriptions of recommended items and user preferences. Usually the prod-ucts in a user X  X  purchasing record indicate the users used to like or need the products. If we assume that the prefer-ence of users is unchanged, we can define a preference set, which includes the products used to buy, as the description of the user X  X  preference [5]. As a result, the products which meet the users X  preference may be conceived as the products similar to the products in the set.

In Content-Based Filtering model, there is usually an ac-curate way to describe the products. Each product has a feature vector to describe the features. For textual descrip-tion, usually tf  X  idf or some numeric information in special cases is used to interpret the information. Then the similar-ity between two products are available based on the feature vectors. There are several methods but the cosine similar-ity between feature vectors are regarded as the similarities between the products in most cases [8]. In this way, the similarities between candidate products and each product in the preference set is calculated. So the products in the preference set vote for candidate products based on the sum of similarities. The more votes the candidate gets, the more possible it is recommended.

Despite the widespread application of this model, nev-ertheless, in this model there is a severe but not obvious pitfall that the difference of levels in preference is ignored. It is insufficient objective to mark the products in purchas-ing records with  X  X ike X  because people always add an adverb e.g. very, a little before the word  X  X ike/dislike X  in their ex-pression. Another disadvantage of the use of record is the cold-start system. In a cold-start-system without any pur-chasing records, it is a difficult issue to learn the preferences of users [29]. Moreover, Content-Based Filtering model is also described as recommending items similar to items users used to like. That means if the preferences change with time, the model may recommend products irrelevant [19].
As described above, there are some limitations in the con-ventional Content-Based Filtering model. In this paper, we extend the model and propose a Generalized Content-Based Filtering (GCF) model, which can adaptively and flexibly utilize the user X  X  different preferences with a soft weight, not only using a set of preferable items. The proposed model in-cludes the following stages: 1) Labeling Preference Value . We don X  X  describe the user X  X  preference by the purchasing record. On the contrary, we de-fine a preference value for each product. In a recommender system, the preference value can be usually labeled by users manually, which ranges from 0 to 1. 0 stands for the de-fault value and the larger the value, the more preferable the product is. If the users are described by user profiles or something else in the form of text, the same to the prod-ucts, there is also an automatic way to label the preference value by calculating relevance between the documents and the user X  X  feature with where pv ( d ) is the preference value of the document d , r is one of the word features of the user description,  X  is Di-rechlet smoothing parameter and as usual, | d | is the length of Document d . And f r i ,d represents the times that feature r appears in document d , while p ( r i | C ) shows the prob-ability of feature r i in the set of features. As a result, p ( r i | d, X  ) stands for the polynomial distribution estimated with Dirichlet smoothing, which is a classic strategy in con-vetional searching engines. 2) Extracting Features and Caculating Similarities . In this stage, a set of features F is firstly determined according to the structure of the description of products. For each feature in F , a feature vector is extracted from the descriptions. For example, tag t is a feature in F . The tag vector of product i and j are tag the document i with tag 1 while 5 users tag document j with tag 2. In this way, all features construct a feature ma-trix (Equation (3)). Each line vector in the matrix stands for the feature vector of the corresponding product.
With the matrix, we can calculate the similarity of two products i and j by calculating the similarity of the two feature vectors f i = [ f i 1 ,  X  X  X  ,f im ] and f j = [ f Similar to the conventional model, usually the cosine simi-larity is chosen, which is calculated by Equation (4) [26]. where and | 3) Computing Final Recommendation Value . We defined the score calculated from the conventional Content-Based Filtering model as the influence value by Equation (5). A weight is multiplied to the similarities before they are summed together in order to emphasize the different importance of products caused by preference values.
Considering the effect both from the preference value ( pv ) and from the influence value ( inv ), we design a general weighting formulation for the measure of recommendation inspired by Social Feature Reranking method. The weighted sum of the preference value and the influence value is de-fined as the final recommendation value ( rv ), which is cal-culated by Equation (6) to decide which products to be rec-ommended. In Equation (6), a normalization coefficient 1 N  X  1 plied in order to unify the dimension. Note that only prod-ucts in the top N list of the preference value are considered in Stage 2) and Stage 3).

Obviously, the proposed GCF model can be easily applied in most product recommendation systems, and the only dif-ference is the way of feature extraction for various structures of the product descriptions. Moreover, we design a recom-mendation algorithm with the Generalized Content-Based Filtering model, which is shown in Algorithm 1.

Remark 1. In stage 1) with GCF, we choose the manual labeling method and label the preference values of all items in purchasing records with the number 1 , otherwise with 0 . Then we follow the steps of the model, and set  X  = 0 , i.e., Figure 1: Flowchart of our search-recommendation hybrid system for Social Book Search. we ignore the influence of the preference value. It is found out that in this case the procedure and the result of GCF are the same to the conventional (kNN) Content-Based Fil-tering model. Consequently, the conventional Content-Based Filtering model is a special case of our proposed GCF model.
Based on the proposed GCF algorithm, by assuming each query act as a user of the recommender system, we construct a Reranking Model to solve the semantic searching and nav-igating problem of various online products by reranking the resulting list from the searching engine. According to the assumption, the content of a query can be regarded as the description of the user X  X  preferences. In most cases, the pref-erence values of queries cannot be easily labeled manually. Consequently, in our system, the scores given by the search-ing engine based on the query are regarded as the user X  X  preference values of books. Moreover, on the basis of the assumption, we design a general strategy to use rich social information for books by the Reranking Model with GCF, which reranks the initial resulting list. Then, we construct a general search-recommendation hybrid framework for So-cial Book Search. Here, learning-to-rank is used to combine all reranking results on different social features and results. The flowchart of our search-recommendation hybrid system is presented in Figure 1. 1) Pre-Processing . As described in Section 2, Query and Document Processing methods focus on the frequencies of relevant words. According to the experiments in [4], these methods do help to improve the performance. Processing on queries may influence the description of users, while process-ing on documents mentioned does not influence the features of documents but improves the accuracy of the scores from the searching engine. Here, these scores are used as the pref-erence values of documents. According to the structure of Amazon documents collection (see Section 5.1, the Exper-imental Data section), similar to [4], we enrich the XML documents with the professional metadata by utilizing the fields &lt; tags &gt; , &lt; count &gt; and &lt; deway &gt; . 2) Searching by Galago . In our system, we use the open-source Galago 2 as the search engine. The probability of the query content appearing in the documents is used to rank the documents with language models. The priori prob-abilities of documents are assumed the same so documents can be ranked by the conditional probability P ( Q | D ). With Dirichlet Smoothing, the estimated probability is calculated by Equation (7), where f q i ,D stands for the amount of times the word/phrase q i appears in document D . In this way, documents are scored and ranked by log P ( Q | D ) = log 3) Extracting Features . After Stage 2), each document has a preference value for the user-query. Considering both the complexity and the accuracy, we select top N (1000 in our experiments) books to be reranked. Several features (single-feature and pairwise-feature) are selected and ex-tracted from the particular fields in XML documents, i.e., various social information. For each feature, a feature ma-trix is constructed with the extracted feature vectors of all documents. The selection process and the extraction process are described in details in Section 4.2. 4) Calculating Similarities . As mentioned above, Equa-tion (4) is used to calculate similarities between two docu-ments, i.e., two corresponding line vectors in feature matrix from stage 3). In this way, the similarities between each two-books can be computed. The calculation of similarities for different (social information) features is shown in Section 4.2 in detail. 5) Reranking with GCF . According to the Reranking model with GCF, Equation (5) is used to calculate the content-based influence value of documents. With the preference value and the influence value, we can get the final recom-mendation score for each book by Equation (6). The se-lection of the optimized parameter  X  is usually decided by cross-validation on the training set. The reranking process is described in Section 4.2. 6) Combining reranking results with L2R . As different fea-tures are extracted from specific kinds of social informa-tion, we use the Reranking Model several times (11 times in our experiments) and get several corresponding reranking results. L2R is used as a learning tool to combine all the re-sults. Three typical learners, i.e., Random-Forest, Rank-Net and Coordinate-Ascent, are selected as the learning models. More details are introduced in Section 4.3.
As described before, in order to improve the results of se-mantic searching with a variety of rich social information, we proposed a Reranking Model (RM) based on GCF model. In this paper, we take Social Book Search as an typical ex-ample. We regard the scores given by searching engine as the preference values( pv ) of books, as Equation (2) men-tioned, while the scores based on reranking are the influence http://www.galagosearch.org values( inv ). According to the Amazon document collec-tions, we design 11 different reranking methods: Tag-Rerank ( T ), Item-Rerank ( I ), Deep-Rerank ( D ), Node-Rerank ( N ), RatingBayes-Rerank ( B ), RatingReview-Rerank ( R ), Tag-Node-Rerank ( TN ), Item-Tag-Rerank ( IT ), Deep-Tag-Rerank ( DT ), Item-Tag-Node-Rerank ( ITN ), and Deep-Tag-Node-Rerank ( DTN ).

We categorize these methods into three groups. The first group contains T , N and TN . These methods are involved in the feature extraction stage. T , N match the fields &lt; tag &gt; and &lt; browse-node &gt; , which can be used as the column name of the feature vectors and the amount of the correspond-ing field is counted as the number of columns. The values of elements in the vector are extracted from the attribute count . The example of the feature matrix extraction can be referred to the example in Section 3. Moreover, the fea-ture matrix of TN method is the connection matrix of T , N , like [ T N ]. With the feature matrices, Equation (4) can be used to calculate the similarities of two documents. Fur-thermore, the influence value can be calculated according to Equation (5) and the recommendation value can be finally calculated by (6).

The second group includes the I , D and the combined methods of I , D , T and N except TN . These methods match the field &lt; similar-product &gt; , which can provide a unique way to calculate similarities of two books. The field &lt; similar-product &gt; of a book contains a list of books marked with similar books by some particular algorithms of Ama-zon program, and there are at most 10 books in the list. Then for the method I , the similarity between two books is calculated by Considering the transitivity of similarities, the method D is related to similar products of similar products. As a result, the similarity for the method D is calculated by As we known, most of the similarities for the methods I and D are 0 because of the upper limit of similar prod-ucts. The sparsity may weaken the performance of Rerank-ing Model. So we propose the methods like IT , DT , ITN , DTN to solve this problem. We take the method IT as an example by Equation (11) and the other combination meth-ods are constructed in the same way. For all methods in this group, we calculate the influence value by Equation (5) and the recommendation value by
The third group includes R and B , which integrate two classical methods into the Reranking Model. These methods are separated from other methods because they have special ways to calculate the influence value. The method R is based on the idea that if a book has a lot of reviews and if its ratings are generally good, then it must be a very good book. The influence value of this method is calculated by inv ( d i ) = log ( | reviews ( d i ) | )  X  where R d i is the set of all ratings given by users for the book d , and | reviews ( d i ) | is the number of reviews.
At the same time, B focuses on the idea that as more users rate the same work, the average becomes more reliable and less sensitive to outliers [12, 21]. The Bayesian averaging of ratings takes how many users have rated a book into ac-count. The BA of a book is calculated by Equation (13) [8]. unweighed rating and  X  n is the average number of ratings over all the books in the top N list. With the Bayesian averaging, the influence value is computed with
The final recommendation values for these two methods are available through the Equation (6). In Equation (6), the parameter  X  is selected by cross-validation on the training set. At last, the top N candidates of the searching list is reranked by this recommendation value.
In the previous ranking strategies, usually several sub-strategies are investigated. Generally, these sub-strategies should be combined and merged. Howeve, in most con-ventional systems, the combination and the parameter ad-justment is usually based on manual or semi-manual rules, which is time-consuming and error-pruning. Learning-To-Rank (L2R) [25], a supervised learning method, is to solve such problems. In L2R, the first step is about Data La-beling, i.e., preparing the training data. Then the features, sometimes the outputs from the initial ranking strategies, are extracted to represent each document. Afterwards, a learning model is chosen to learn the training data. Finally, we score the documents with the learned model. In this way, different strategies are easily and adaptively combined.
Following the step of the Reranking Model, we have 11 different reranking results. To make full use of these results, Learning-to-rank is used to combine them through some typ-ical learning models [10]. In our system, Random-Forest, Rank-Net and Coordinate-Ascent learners are chosen as the training models. The recommendation score of each rerank-ing method is regarded as a feature of the documents. Then the previous queries are used to label the training set. Af-terwards, the learner parameters are optimized and selected with the K-fold cross-validation on the training set. In this section, we focus on the document collections from Amazon.com and the queries and  X  X rels X  (professional rec-ommendations) from LibraryThing.com, provided by INEX Social Book Search (SBS) Track organizers [14] 3 . The eval-https://inex.mmci.uni-saarland.de/tracks/books uation measure is NDCG@10 and the tool we use is trec eval 9.0 4 , the same with the INEX official evaluation.
The documents collection has a total of about 2 . 8 mil-lion book records. Each book record is represented in the format of a separate XML file with an ISBN number to be uniquely identified. According to the overview of the INEX 2011 Social Book Search track, the books in the collection contain large amount of professional metadata and wealthy user-generated data. We analyze all fields of the XML and the information is broadly divided into two categories: one is to describe the publication information of a book, such of all element names in the collections is shown in Table 1.
LibraryThing.com (LT) is a social book cataloguing web-site. LT is a platform where users can post a topic in the forum to seek for recommendations of books they desired. The descriptions of the requests are diverse because of the different habits and skills of the expression of topic creators. Some users give their suggestions of the posted topics. Since the year of 2011, INEX Social Book Search Track organiz-ers have been investigating the LT forum requests and rec-ommendations of books. They define the relevance values to distinguish between books that are mentioned in sug-gestions as positive recommendations, negative recommen-dations, neutral suggestions and books mentioned for some other reasons. Based on the behaviors of the topic creators on the suggestions, they build a decision tree 5 to help to la-bel the relevance values of the suggestions manually. There are respectively 211, 96, 386, 680 posted topics collected in INEX 2011, 2012, 2013 and 2014 Social Book Search Task respectively. The sample parts of a topic XML are shown in XML 1.

As shown in XML 1, each query topic mainly consists of four types of fields: (1) Title The &lt; title &gt; field contains http://trec.nist.gov/trec_eval/ https://inex.mmci.uni-saarland.de/tracks/books/ INEX14_SBS_results.jsp\#mapping the general description headings. The title is given by topic creators, sometimes useless for suggestion. (2) Narrative The first message of recommendation request posts, posted by the topic creators, described in field &lt; narrative &gt; . The narrative is a detailed description of user requests of the book, with varying lengths and characters. It reflects the user X  X  information needs in many ways, such as writing style, whether it is popular, etc, but may also draw some useless information. (3) Group The &lt; group &gt; field tells what kind of books needed. It X  X  in the format of a brief description, and usually reflects the user X  X  information needs. And (4) Query The &lt; query &gt; field is provided by an annotator to explain the exact topic in the format of a brief description, the length of more unified. But according to [21], this field is difficult to make a difference itself. The way we choose the training set and the test set is shown in Table 2. Table 2: Training and testing sets in experiments.
In our experiments, first we compare our system with several state-of-the-art models (the top systems won in the INEX Social Book Search Evaluation), e.g., Data Process-ing, Sequential Dependence Model , Bayes with Query Field Selection, and Social Feature Reranking Model based meth-ods. Then we present experimental results with different components and stages (Initial Ranking, Reranking Model and Learning-to-rank) of our system. For each method, all parameters are set according to the INEX workshop pa-pers. In our system, as mentioned in Section 4, all parame-ters  X  are selected by the cross-validation on the training set. Specifically, for the learning-to-rank 6 , 5-fold cross-validation is performed to select the optimized parameters on each experimental dataset.
In INEX 2012 Social Book Search (SBS) Track, it is the first time to define a relevant value for suggested books to distinguish the difference of recommendations. The training set is the official database of INEX 2011, which contains 211 topics, while the testing set contains 96 topics.

The performance of our model and the high-ranked runs in the year (2012) are presented in Table 3. In our experiments, the official evaluation tool Trec-eval and the official measure NDCG@10 are used for fair comparison.

In Table 3, runs of p 54 focused on the indexing strate-gies and used the Social Feature Reranking Model, which is introduced in Section 2. Team p 4 used a Bayesian rating
We use the learning-to-rank tool, RankLib, which is avail-able at people.cs.umass.edu/~vdang/ranklib.html . method based on Collaborative Filtering. Sequential Depen-dence Model was used by the team p 62. Other submitted runs have a low evaluation value. As can be seen from Ta-ble 3, the run of our search-recommendation hybrid system performs much better than the others.

Moreover, we also compare our method with competi-tive systems on the official INEX 2013 Social Book Search Dataset. In this database, the field &lt; query &gt; is firstly used in query, which added a query processing problem to the task and the relevance value calculated through the decision tree built with a complex step. Several strategies are pro-posed to improve the performances of the models in 2012. The training set contains more than 300 topics (211 + 96, including some duplicated topics) and the testing set con-tains 386 topics. The performance results of our run and the high-ranked runs of the 2013 evaluation are shown in Table 4.

In table 4, RSLIS improved the previous Social Fea-ture Reranking method by expanding the XML document. UAms tried to choose different fields of queries to improve the Bayesian Rating method. ISMD is not available in the workshop paper. The NDCG@10 value of all runs with SDM is lower than 0 . 10 [2]. From the table we can see al-though the evaluation value is lower, the runs of our search-recommendation hybrid system preform the best of all.
Overall, our proposed search-recommendation hybrid sys-tem for Social Book Search provides a unified framework for perform searching, reranking and merging, and has the best performance (NDCG@10) on both datasets compared to state-of-the-art systems.
In this section, we present the performance comparison of initial ranking result, all reranking results and the learning-to-rank results on the INEX Social Book Search Task 2013. We selected a total of 307 query topics provided by INEX Social Book Search 2011 and 2012 as the training set to train the proposed model. The best reranking parameters  X  of all methods are selected according to the best performances of training set. The reranking results are calculated based on the proposed model with the selected parameters. The initial and reranking results on training set and testing set are shown in Table 5 and Table 6.
 Table 5: Reranking results on the training set.

As can be seen from Table 5 and Table 6, all the rerank-ing methods are well-performed except RatingBayes-Rerank method. The best performance is obtained by Tag-Rerank method with a greatest improvement of 5 . 2% compared with initial ranking. The average improvement of all reranking methods is 2 . 5%, which proves the effectiveness of the meth-ods with recommendation techniques (GCF model). The unified Reranking Model with GCF can utilize various so-cial information.

The reranking results of all methods on the training set are labeled with Qrels of 2011 and 2012, to be used as the training set of learning-to-rank. On the other hand, the reranking results on the testing set are generated into the testing set of learning-to-rank. Random Forest, Coordinate Ascent and Rank Net are used as training models. Several groups of parameters are used to train the model and we se-lect the best parameters based on the stability performance of the validation set. The results of Random Forest, Coor-dinate Ascent and Rank Net learners are shown in Table 7, Table 8 and Table 9 respectively.

According to Table 7, Table 8 and Table 9, with appropri-ate parameters, the performances of these 3 learning models are better than all the reranking results. Random Forest has a highest improvement of 13% comparing with the best reranking result, while the improvement of Coordinate As-cent and Rank Net are 10 . 8% and 6% respectively. These experimental results verify that our merging strategy with learning-to-rank is effective.

By comparison, we can see that T is the most effective reranking method mainly because the users always tag the books with relevant words without affective factors. More-over, Random Forest gives out a best-performed model, which indicates that Random Forest is more stable and effective in this case.
We participated in INEX 2014 Social Book Search Sug-gestion Task and submitted 6 runs based on the proposed system (with the prefix  X  X STB- X ). According to the evalua-tion results of the updated version 7 , the NDCG@10 results of 18 runs among 40 submitted runs are over 0 . 10. Our system won the INEX 2014 Social Book Search Evaluation. Moreover, all our 6 submitted runs are in the top 7. The evaluation results are shown in Table 10 8 .
 https://inex.mmci.uni-saarland.de/tracks/books/ INEX14_SBS_resultsv2.jsp
In Table 10, we present results of 5 runs of our partici-pated system. Another one, the USTB-run6.simQuery , is our run based on the topic similarity model for estimating similar topics between different-years evaluations [30].
As we can see from Table 10, unsurprisingly the runs based on our search-recommendation hybrid system have a better performance compared to our runs only based the searching system and most of the runs of other participating systems. Moreover, our run with the merging strategy by Random Forest is best-performed in the evaluation.
This paper presents a general search-recommendation hy-brid system for semantically searching and navigating prod-ucts (books) with a variety of social information. First, we propose a Generalized Content-Based Filtering (GCF) model. Then a reranking model based on the model is pro-posed to solve the semantic searching problem with social in-formation. Afterwards, the model is applied in Social Book Search and uses learning-to-rank to combine the results of different reranking models. Moreover, our novel system is evaluated on INEX 2012 and 2013 Social Book Search Track and the runs perform much better than the other state-of-the-art systems. Finally, we participated in INEX 2014 So-cial Book Search Suggestion Task and won the first place. In our paper, the proposed Generalized Content-Based Filtering model can be easily applied in most product recom-mendation systems, and the only difference is the way of fea-ture extraction for various structures of the product descrip-tions. Consequently, in the near future, we will investigate this GCF model for applications in general recommenda-tion systems. Another future issue is to expand the general Reranking Model and the general search-recommendation hybrid framework not only for Social Book Search but also for searching and navigating other web products with rich social information (e.g., on Taobao.com or Amazon.com).
The research is partly supported by National Natural Sci-ence Foundation of China (61105018, 61175020).
