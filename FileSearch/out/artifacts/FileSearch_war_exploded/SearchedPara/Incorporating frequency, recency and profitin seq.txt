 Department of Information Management, National Kaohsiung First University of Science and Technology, Kaohsiung, Taiwan Institute of Traf fic and Transportation, National Chiao T ung University, Taipei, Taiwan 1. Introduction
Sequential pattern mining, which was introduced by Agrawal and Srikant [2], identifies frequently occurring ordered sequences in a sequence database [12]. A sequence database consists of a series of sequences that consist of several transactions sorted in a time ascending order. Sequential patterns sug-gest that a consumer who buys a new product in the current time period is likely to buy another product in the next time period. Sequential pattern mining has been applied to several fields, including sales promotions, targeted marketing, production processes, web access pattern analysis, network intrusion detection, and DNA sequence analysis. In e-commerce, sequential patterns are useful for personalizing product recommendations and product related advertisements to improve customer satisfaction [13]. Re-searchers have developed recommender systems to provide personalized recommendation for product, advertisement, or content [1,20]. These software systems have been applied to many areas, including e-commerce, news, advertisement, document management, and e-learning. In e-commerce applications, recommender systems can turn browsers into buyers by providing personalized shopping information that interests the customer. The recommender systems can also be connected to the customer X  X  activities using the push, pull, or passive e-commerce application technologies [21,22].

Sequential pattern mining identifies frequent sequential patterns whose support count exceeds a pre-defined minimal threshold. The frequent sequential patterns discovered by sequential pattern mining represent customers X  purchase interests. In traditional sequential pattern mining, which only considers the sequence frequency, a sequential pattern with high support is more useful than one with low sup-port. However, the design of a sequential pattern-based recommender system should account for two additional factors: Recency and profit. (1) Recency: In an environment in which the customer gradually changes purchase patterns, transac-(2) Profit: Traditional recommender systems make recommendations based mainly on purchase prob-
This study extends the traditional sequential patterns, which only consider frequency or support rate, by incorporating frequency, recency, and profit. The sequential patterns based on frequency, recency, and profit are called FRP-sequences in this study. These FRP-sequences are essential for designing a recommender system. Previous researchers have contributed to this area. For example, frequency and profit were combined with association rule mining in [6,16,23,28]; a recency model with time decay in sequential pattern was developed in [13]; and recency, frequency, and monetary (RFM) were considered in sequential pattern mining in [8]. Until now, no researches have discussed a collaborative system that combines sequential purchase patterns with frequency, recency, and profit. This study proposes a FRP-sequence based collaborative system to improve recommendation profit and accuracy of the e-commerce recommender system.

The rest of this paper is organized as follows. Section 2 introduces related research. Section 3 describes the proposed FRP pattern mining. Section 4 introduces the framework of the proposed FRP-sequence based collaborative recommender system. Section 5 examines the performance of the proposed system using a public retail dataset. Section 6 provides conclusions. 2. Related research 2.1. Sequential pattern mining
Agrawal and Srikant [2] were the first to introduce sequential pattern mining. A sequence consists of be an itemset. An event E is a subset of an itemset, i.e., E  X  I . A sequence is denoted as S = &lt;E 1 , E of itemsets in the sequence. A sequence of length k is called a k -sequence.

An itemset with minimum support is called a large itemset. The support for an itemset is defined as the fraction of customers who bought items in this itemset in a single transaction. Given a set of customer sequences for all customers, the support for a sequence S is the number of customers whose sequence a user-specified minimum support threshold. A large sequence contains a series of large itemsets, i.e., a large k -sequence has k large itemsets.

AprioriAll [2] generates sequences that may be frequent, called candidate sequences. AprioriAll then scans the sequential database to check the support of each candidate to determine frequent sequential pattern based on the minimal support. This process includes the following steps: (i) Convert the origi-nal transaction database into a customer sequence database. (ii) Find the set of all large itemsets with minimum support. Each itemset in a large sequence must have minimum support. The support is the fraction of customers who bought the itemset in any of their transactions. (iii) Replace each transaction by the set of all large itemsets contained in a customer sequence. (iv) Use the set of large itemsets to maximal sequences among the set of large sequences.

This study builds on AprioriAll by incorporating frequency, recency, and profit to give a higher im-portance to the profitable patterns generated in more recent periods. 2.2. Recency and monetary considerations in sequential pattern mining
Chen and Hu [7] proposed a constraint-based sequential pattern mining that considers the recency and compactness of a pattern. Because a past purchasing pattern may not recur or the product items included in the sequential pattern may have low monetary values, Chen et al. [8] incorporated the concepts of recency, frequency, and monetary (RFM) introduced by [5] into sequential pattern mining. They first investigated the recency, frequency and monetary in sequential patterns. They defined recency as the period since a customer X  X  last purchase; frequency as the number of purchases made within a certain period; and monetary as the amount of money that a customer spent during a certain period. They used upper and lower thresholds for recency, monetary, and frequency to constrain pattern generation. The frequency of a pattern represents the percentage of sequences that satisfy both recency and monetary constraints. A pattern is an RFM pattern if it satisfies the recency and monetary constraints and its frequency falls within the minimum and maximum support thresholds.

The proposed approach uses the profit of the product instead of the monetary, defining a profit thresh-old like the monetary threshold in Chen X  X  approach [8] to filter the sequence generation. In Chen X  X  ap-the predefined time threshold of earliest and latest times from a given starting time. For example, the last transaction of a selected pattern must occur between 200 and 270 days from a starting date. Unlike Chen X  X  approach, this study deals with recency by weighting the frequency according to the sequence X  X  transaction time. The underlying concept of this method is that since customers gradually change their important than those temporally far from the current period. 2.3. Profitable recommendation in recommender systems
Recommender systems often use a specific type of information filtering technique to recommend in-formation items that are likely to interest the user. Examples of these information items include blogs, commercial products, movies, music, news, and photographs. Recommender systems make recommen-dations using three basic steps: acquiring preferences from the customer X  X  input data, computing rec-ommendations using proper techniques, and presenting the recommendations to customers [27]. Rec-ommendation techniques include the content-based filtering approach [14], collaborative filtering ap-proach [19] and hybrid-based recommender systems [4].

Traditional recommender systems make recommendations based mainly on purchase probability, as-suming that items with high purchase probabilities are more likely to satisfy customer needs. To satisfy customer purchase preferences based on purchase frequency, a recommender system should also pro-vide recommendations with a higher profit margin [6]. The concept of profit mining attempts to find the high profitable patterns or rules [9,24 X 26]. Some researchers use the term  X  X tility mining X  by incor-porating the frequency and profit in association rule mining [16,23,28]. Though previous research [13] proposed a sequential pattern based recommender system, they did not consider profit mining. Unlike previous methods, this study designs a collaborative recommender system that simultaneously considers the frequency, recency, and profit in sequential pattern mining. 3. Proposed FRP-AprioriAll algorithm To design a sequential pattern based recommender system, this study presents an enhanced FRP-AprioriAll by incorporating  X  X ecency X  and  X  X rofit X  with traditional frequency based sequential pattern mining. The main differences between FRP-AprioriAll and the traditional AprioriAll are the calculation the frequency information, FRP-AprioriAll weights the frequency of a candidate sequence according to its transactional time, and then filters the candidate sequences by minimum support and minimum profit. The number of generated sequential patterns by FRP-AprioriAll may be less than that of the traditional sequential patterns generated by the AprioriAll because FRP-AprioriAll applies an additional profit filter. However, the sequences generated by FRP-AprioriAll are more recent and profitable than those generated by traditional sequential pattern mining.
 The main difference between FRP-ArioriAll from the traditional AprioriAll is as follows. Apriori-All defines the support of an itemset as the frequency (fraction of customers who bought items in the itemset), while FRP-AprioriAll defines the support of an itemset as a combination of the frequency and recency (abbreviated as FR -support) of this itemset. Additionally, a large sequence with frequency, re-cency, and profit (called a FRP-sequence) must satisfy both the minimum FR -support and the predefined minimum profit. The proposed model represents a large k -sequence with frequency, recency, and profit as a k -FRP-sequence.

Like AprioriAll, FRP-AprioriAll splits mining FRP -sequential patterns into two phases. (i) This phase and recent itemsets. Since each itemset in a k -FRP-sequence must have a minimum threshold of profit and FR -support count, all frequent, recent, and profitable itemsets (also known as 1-FRP-sequences) must be found in advance. (ii) This phase finds large k -FRP-sequences, and the maximal sequences among the set of large sequences. Based on the frequent, recent, and profitable itemsets obtained in the previous phase, this phase finds frequent and recent k -FRP-sequences with k 2 by calculating the FR -support. 3.1. Find all profitable itemsets
The original transaction database was converted into a database of customer sequences. To discover highly profitable sequences, profit filtering is then applied to the itemsets. Because an itemset may con-is represented as ProfitOfItemSet i which is calculated as follows: where #( ItemSet i ) : Number of items in ItemSet i .

An ItemSet i is profitable if ProfitOfItemSet i Min _ Profit . Because any profitable k -FRP-sequence The frequency and recency for itemsets are calculated after profit filtering. This stage only performs profit filtering. 3.2. Support count based on the frequency and recency for a sequence
Because the 1-FRP-sequences are all profitable itemsets, the k -FRP-sequences for k 2 are also profitable. The next step simply compares the FR support count with the minimum FR support threshold. The calculation of support count is essential in sequential pattern mining. In the proposed model with frequency and r ecency, the support count (freque ncy) for a transaction se quence is proportional to its transaction time, as Fig. 1 shows. That is, the support count of a transaction sequence degrades with its transactional time. However, if the transactional time is later than a predefined threshold of frequency decay, the support count does not degrade (and remains one). Thus, the support count with frequency and recency for a sequence (or itemset), represented as SupportCountFR , is calculated as follows: where ThresholdOfDegradation : Time threshold for frequency degradation; BucketOfDegradation : Time bucket for frequency degradation; WeightOfDegradation : Weight for frequency degradation; 0 &lt; WeightOfDegradation &lt; 1 ; t : Transactional time of the first itemset in the sequence; 3.3. Find large k-FRP-sequence
A frequent and recent sequence is called a FR -sequence. A frequent, recent and profitable sequence is called a FRP-sequence. A k -FRP-sequence is a FRP-sequence with length k . To find 1-FRP-sequences, the support counts for the profitable itemsets (obtained in previous section) are further calculated using Eq. (2) to find frequent and recent itemsets. To find k -FRP-sequences with k 2 , the support counts for sequences generated from previous ( k  X  1 )-FRP-sequences are also calculated by Eq. (2). The process of FRP-AprioriAll generates and filters the k -FRP-sequences for every possible k, as Fig. 2 shows.
Using a positive integer Min_SuportCountFR as the minimum support count threshold that com-bines the frequency and recency, a sequence S is frequent and recent in sequence database if S.

SupportCountFR Min_SupportCountFR . For a sequence S to be frequent and recent, it must occur frequently and recently with a value of at least Min_SuportCountFR . In Eq. (2), for the 1-FRP-sequence, t is defined as the transactional time of the only itemset in the 1-FRP-sequence. For the k -FRP-sequence in which k 2 , t is defined as the transactional time of the first itemset in the k -FRP-sequence.
Unlike sequential pattern mining with a time window [3], or the time recency in the RFM model [8], the concept behind the proposed model is that the patterns generated close to the current period are more important than those far from the current period. This study uses the concept of frequency degradation to give a higher importance to patterns generated in more recent periods. A recency-based pattern usually has a smaller support count than that of a traditional pattern because the proposed model degrades the frequency of a sequence that is temporally far from the current time. 3.4. Example of FRP-sequence generation
This section presents an example of the proposed FRP-AprioriALL algorithm. Table 1 shows a series of transactions for four customers. Customer C1 purchased items  X  X  X  and  X  X  X  at time period 1, and this all customers buy this item during these periods, its non-recency based frequency is 4 according to the traditional AprioriAll. For the recency based frequency, however, the purchase time is used to calculate the latest one to compute the support count for item &lt; (a) &gt; .

To calculate the FRP-sequences, the system parameters were set as follows: bucket of degradation = 3, weight of degradation = 0.9, and threshold of degradation = 7. Thus the recency-based frequency of &lt; (a) &gt; is calculated as follows:
Table 2 summarizes the corresponding new frequency for each FRP-sequence. Table 2 also illus-the average profit of item  X  X  X  and  X  X  X  using Eq. (1). Let Min_Profit = 3, Min_SupportCountFR 1 = 3.0, Min_SupportCountFR 2 = 2.0, and Min_SupportCountFR 3 = 1.5. Thus, the 1-FRP-sequences are &lt; both have the same frequency support count of four.
 &lt; &lt; tively. Thus the FR-support count of &lt; (a)(c) &gt; was calculated by C1(0.81) + C2(0.9) + C3(0.81) + C4(0) = 2.52, as Table 3 shows. The number of 2-sequences and 3-sequences generated by AprioriAll (see Table 4) using a minimum support of 3 exceeded that of the proposed FRP model because prod-uct  X  X  X  was removed due to unprofi tability and product  X  X  X  was not include due to its low FR support count. The predefined threshold of minimum profit and minimum FR support count can dominate the generating of sequential patterns. 4. Proposed collaborative recommender system
This study presents a collaborative recommender system based on the FRP-sequential patterns for e-commerce applications. To build the sequential pattern model, customers were clustered first. Then FRP-sequences were generated for each customer cluster. In the stages of customers clustering and FRP-sequential patterns generating, the product sub-classes, instead of end items, were used to reduce computation time. Because the product taxonomy is u sually available in e-commerce reflects domain knowledge, it has been emphasized by many studies [10,11,13,15].

In the recommendation process, the target customers were selected from the customers to receive rec-ommendations. Based on the target customer X  X  transactional profile, each target customer was assigned to a specific cluster. The recommendation process includes the stages of product category prediction and product item recommending. Possible purchase categories were predicted using the FRP-sequences gen-erated from the cluster the target customer belongs to. The product items among the possible purchase categories were then recommended to the target customer. The following sections describe these steps in more detail. 4.1. Collaborative customer clustering and FRP-sequential pattern mining (1) Collaborative customer clustering Customer buying behavior can be modeled by analyzing the customer X  X  periodic transaction data, as Fig. 3 shows. The profile of a customer is defined as follows: where T is the current period, R is the number of previous periods considered, and the number of products.
 product category (subclass) customer profile. Using the product category as the customer profile can decrease the data dimension and increase scalability. This study uses the k -means algorithm to cluster customers based on the customer profiles. (2) FRP-sequential pattern mining for each cluster
Customers in the same cluster have similar buying behaviors. The proposed recommender system pro-vides recommendations to target customers based on the product subclass purchased by other customers in the same group with similar buying preferences. In each cluster, the FRP-ArioriAll (see Section 3) is performed based on the customer X  X  purchase profile to obtain the FRP-sequences for each cluster. a certain product category is calculated by averaging profits of product item in that category as follows: where
M : Number of product items in a certain product category. 4.2. Recommending product items to the target customer (1) Product category prediction
This step determines the cluster that a target customer belongs to, and then finds the predicted cat-egories by matching the target customer X  X  purchase sequences in period T with the FRP-sequences generated from the target customer X  X  cluster. The matched sequential patterns are then used to predict the target customer X  X  most likely purchase items in the next time period T +1 (prediction period).
The matching process is performed by subsequence determination. A sequence SEQ A = &lt;A 1 ,A 2 , j because the latter is a subset of the former. From this matched sequential pattern, items 60 and 30 are candidate items to be recommended to the target customer.

A candidate item may be generated from several sequential patterns, because these sequential patterns match the target user X  X  purchase sequence. This candidate item X  X  support is calculated by summarizing the FR support of all matched sequential patterns. Then the prediction score for each candidate item is calculated by combining the support values and profit. The prediction score for the predicted category is calculated as follows:
Both category support value and profit are scaled in advance to avoid attributes with greater numerical range dominating those with smaller numerical range. The category profit and support was scaled using the following formula: where ScaledX: ScaledSupport or ScaledProfit ; Maximum Value of X : Largest category support value or the largest category profit. (2) Recommending items to target users
The previous step predicts the product categories that the target customer will probably purchase. The frequency of the item purchased by all customers in the same cluster and the item X  X  profit are both used to measure an item X  X  importance. The recommended item score for each item in the product category is calculated as follows: The item frequency and item profit were also scaled in advance using Eq. (8), in which the  X  Maximum Value of X  X  represents the largest frequency or the largest profit for an item in the target customer X  X  cluster. Based on the recommended score, the top-N product items that the target customer will likely purchase in the target period are recommended to the target customer. 5. Experiments 5.1. Experimental design
This study uses experimental data from the Microsoft SQL Server Foodmart database to evaluate the proposed model. Three file tables in Foodmart database were used, including the product taxonomy, customer information, and purchase transaction tables. This database consists of 1,560 product items, 164,558 purchase transactions, and 7,824 customers. The 1,560 product items include 102 product cat-egories, and the product items X  transaction times range from January to November 1998.
Three datasets, DS1, DS2, and DS3 were selected from the Foodmart database with different time period. Each dataset contained a three-month time horizon for training and a one-month time horizon for predicting, as Table 5 shows. For each dataset, customers were selected that made purchases at least once per month with each transaction containing at least four product categories. Because the customers who purchased frequently provided relatively sufficient information to their purchasing behavior, their sequential patterns can be identified in sequential pattern mining.

A 5-fold cross validation was conducted for each datasets to determine the performance of the pro-posed recommender system. All of the customers in each experimental dataset were randomly divided into five customer subgroups. Each subgroup took turns being the target customers for testing the model while the other four subgroups were used to train the model. For the customer for training model, this study clustered customers and generated sequential patterns based on the transactions of a three-month training period. The target customer X  X  purchase sequences in the previous month of the test period were generated for matching with the sequential patterns generated from the cluster that the target customer belonged to. The target customer X  X  purchase items in the test period were used to measure the perfor-mance of accuracy.
 Three measures in evaluating the performance of the proposed method include recall, precision, and F1-measure, as Eqs (10) X (12) show, respectively. The precision is the ratio of purchase items from the recommended items for a target customer. The recall is the ratio that the recommended items successfully hit (predict) the target customer X  X  purchased items in the test period. The F1 measure combines recall and precision with an equal weight.

The total profit of recommendation to the target customers is defined as Eq. (13). The average profit performances are defined as the average profit per hit item (Eq. (14)), per hit customers (Eq. (15)), and per target customers (Eq. (16)).

The target customer whose recommended items hit (or predict) any one of item in his/her purchase and Profit ij represents the profit for hit item j in hit customer i  X  X  purchase items in the test period. 5.2. Comparison with traditional approaches
The proposed frequency, recency, and profit sequential pattern based recommender system is abbre-viated as  X  X P-FRP X  recommendation. This study conducts a performance comparison between SP-FRP and the traditional collaborative top-N recommendation to determine the relative performance improve-ment of the proposed system. Additionally, to understand the base-line performance, we also conducted a performance comparison on the SP-FRP with the collaborative random recommendation. The collab-orative top-N recommendation (abbreviated as  X  TOP-N X ) recommends popular (frequent) items in the target customer X  X  cluster, which consists of the target customer X  X  nearest neighbors, to the target cus-tomer. The collaborative random recommendation (abbreviated as  X  X ND X ) recommends items that are randomly selected in the target customer X  X  cluster to the target customer. The performance of the collab-orative random recommendation was averaged from the five repetitive runs on product item for the three datasets. All the above three models are built for each customer cluster (the nearest neighbors based collaboration) with the same recommendation size N .

For the parameter setting of SP-FRP, the suppor t rate was set to 0.05. The minimum support count in the FRP-sequence mining was set to 9. The bucket of frequency degradation was set to 8 days; the weight of frequency degradation was set to 0.8; the threshold of recency was set to 75 days; the threshold of profit was set to 3.3. The FRP-sequences were based on product category, which has 102 categories of products in the Foodmart dataset. For the recommendation size, we selected the item score of the top-10 product items for each top-10 product categories, and among these 100 items, we recommended the 50 items with highest item score to the target customer. These system parameters may influence the exper-imental results. A thorough sensitivity analysis on the threshold of profit and frequency degradation X  X  weight, bucket, and threshold was performed in Section 5.5.

Table 6 shows the average precision, recall, F1-measure, and profit for the three datasets; and Fig. 4 shows the relative percentage improvements on precision, recall, F1-measure and profit of the SP-FRP against that of the traditional TOP-N and the RND recommendations. For the accuracies of recommen-dation, the SP-FRP model was slightly better than the TOP-N recommendation as the relative percentage improvements on recall, precision and F1-measure are 19.5%, 4.7% and 8.6% respectively; however, for the profits of recommendation, the SP-FRP model was much better than the TOP-N recommendation as the relative percentage improvements on profit per customer, per hit customer and per hit item were 39.7%, 39.4% and 33.8%, respectively. The SP-FRP model significantly ( p 0.05) outperforms the TOP-N with on F1-measure and profit per customer, based on the paired-samples T tests.
Compared with the RND, SP-FRP was much better than the RND in terms of either accuracies or profits. Our SP-FRP model significantly ( p 0.05) outperforms the RND on F1-measure and profit per customer, based on the paired-samples T tests. That is, for the Foodmart dataset, the proposed model was more appropriate than both TOP-N and RND models in terms of the recommendation accuracy and profit. This implies that the proposed collaborative filtering system with SP-FRP sequential pat-tern can improve the recommendation performance compared to both collaborative TOP-N and RND recommendations. 5.3. Comparison between recency and non-recency models
To demonstrate the impact of recency on our proposed model, this study compares recency and non-recency models. The SP-FRP model was compared with the non-recency model, called  X  X P-F*P.  X  With-out considering recency, SP-F*P only generated the sequential patterns by counting the frequency and using profit filtering in the sequential pattern mining. The only difference between SP-FRP and SP-F*P was the use of frequency degradation or not. Table 7 shows that SP-FRP improves performance against SP-F*P by 5.2%, 3.8% and 4.3% for recall, precision, and F1-measure, respectively. This result indicates that the consideration of recency was essential for this dataset. For the performance of profit, the two models had similar profit performance (with significance of p&gt; 0.05), because they both considered the profit factor. Without considering the effect of profit filtering, the recency and non-recency models, called  X  X P-FR* X  and  X  X P-F** X , were constructed without using the profit filtering in the sequential pattern mining. The only difference between the two models was the use of frequency degradation or not. Table 8 shows the relative percentage improvement on SP-FR* against SP-F** by 3.8%, 5% and 5% for recall, preci-sion, and F1-measure, respectively. These improvements showed that by weighting the recent sequential patterns can improve the accuracy for this dataset. For the profit performance, the two models have sim-both models. 5.4. Comparison between profit and non-profit based models
This section demonstrates the impact of profit on the proposed model, and compares the profit based model, SP-FRP, with the non-profit models, called SP-FR*. SP-FR* did not perform profit filtering in the sequential pattern mining. As shown in Table 9, the SP-FRP was significantly ( p 0.05) superior to the SP-FR* with relative percentage improvements by 13.6% for profit per customer, 27.7% for profit per hit customer, and 24.5% for profit per hit item, respectively. However, the accuracies for recall, precision, and F1-measure in SP-FRP were slightly inferior to those in SP-FR* by  X  1.5%,  X  8.8%, and  X  7.1%, respectively. Because some of the generated patterns were removed by the profit threshold in the sequential pattern mining, the accuracies of profit-based model may be slightly degraded. Nevertheless, the accuracy degradation was not significant in this experiment ( p&gt; 0.05).
 For the models without considering the recency, we made a comparison between SP-F*P and SP-F**. The results in Table 10 are similar to those discussed above: the profit-based model, SP-F*P, improved the profit performance but slightly decreased the accuracy performance. 5.5. Sensitivity analysis
To verify the impact of parameter setting on the SP-FRP model, this section performs a sensitivity analysis on the following four parameters: weight, bucket and threshold of frequency degradation, and profit threshold. This analysis was based on one hundred frequent customers in the Foodmart dataset. Table 11 shows the parameter settings for these four factors. The previous section defines the weight of frequency degradation and the bucket of frequency degradation. For the threshold of frequency degra-dation and the threshold of profit, this study defines the proportion of degradation threshold and the proportion of profit threshold as follows.

For the frequency degradation threshold, this study defines a proportion of the threshold of degradation to determine the frequency degradation threshold as follows.
 This study presents the minimum and maximum time horizons for a dataset as MaxTimeHorizon and MinTimeHorizon . For example, if the proportion of degradation was set to 0.75 and the minimum and maximum time horizon were day 120 and day 20, respectively, the threshold of degradation was set to day 75.
 The profit threshold was determined by the proportion of profit threshold as follows.

For example, when the maximum and minimum profits were 2 and 7 (dollars) and the proportion of
Thirteen runs were conducted for the sensitivity analysis for the four factors experiments. A factor level is changed for each experimental run while the other three factors are set to their base level. For example, when the weight of frequency degradation was set to 0.65, 0.8, and 0.95, respectively, the other parameters were set to their base level as follows: bucket of frequency degradation = 8; proportion of degradation threshold = 0.75; and proportion of profit threshold = 0.25. This study reports preliminary results with a satisfactory outcome after several experiments with some possible values of these param-eters. In practice, the setting of these parameters depends on the characteristic of application domain including the product kind, the product lifecycle, and the customer X  X  purchase behavior.
Table 12 analyzes the weight of frequency degradation. The weight of frequency degradation was set to 0.65, 0.80, and 0.95 respectively. A weight of 0.8 produced better accuracy and average profit. The weight of frequency degradation gives transactions far from current time less impact and transactions near current more impact. Setting a proper weight is essential to achieve an adequate effect on the frequency calculation for the sequential patterns. A weight of 0.8 was good for the dataset in this study.
Table 13 analyzes the bucket of frequency degradation. The length of bucket determines the degra-dation on frequency calculation. The bucket was set to 6, 8, and 10 (days) respectively. A bucket of 8 produced better accuracy and profit, based on the base parameter setting.
Table 14 analyzes the threshold of frequency degradation. The decay threshold effects the frequency calculation. This maintains the importance of each transaction item in the current period (within the decay threshold), and reduces those outside the current period. This study sets the recency threshold at 0.25, 0.5, 0.75 and 0.95. Experimental results show that the recency threshold of 0.75 was more accurate than others.
 Table 15 analyzes the profit threshold. This study sets the profit threshold at 0.25, 0.5, and 0.75. The threshold of profit determines the number of generated sequential patterns, and thus may affect recommendation accuracy. To improve profit, the profit threshold must be high; however, this may reduce the accuracy. Here, the profit threshold 0.25 was good for balancing the profit and accuracies. 6. Conclusion
Traditional sequential pattern mining only considers the frequency of transaction pattern. In designing a recommender system, however, the transaction patterns near the recent period should have a greater effect on customer preferences, especially in an envi ronment with short product lifetimes. Traditional recommender systems focus on recommendation accuracy for target customers. From a seller X  X  view-point, a recommender system should also focus on profitability. The objectives of improving prediction accuracies for the customer and increasing profits for the seller are conflicting from each other. This study incorporates user X  X  recent interest in the sequential patterns to improve the prediction accuracy for the user X  X  point of view. Besides, we may increase the profit and not to significantly decrease the accuracy via fine tuning the minimum profit threshold by experimentation. Also, thorough knowledge about the characteristics of the product, product lifecycle, and customer X  X  purchase behavior may also help to fine-tune these parameters to improve the performances on both profit and accuracy.
Experimental results show that the proposed SP-FRP model performed better than the traditional collaborative recommendation system in both profit and accuracy. When considering only recency, the recency based models (SP-FRF or SP-FR*) were better than the non-recency models (SP-F*P or SP-F**) in both accuracy and profit regardless of whether profit model was included. Similarly, the profit model (SP-FRP or SP-F*P) was significantly better than the non-profit models (SP-FR* or SP-F**) in profit regardless of whether recency was included. Incorporating recency and profit into the recommender system not only maintains the accuracy of the item prediction for the customers, but also increases the potential profit of recommended item for the seller.

The suggested SP-FRP recommender system can be applied to e-commerce, in which customers often change interests gradually. Future research will focus on the following. (1) The FRP-Apriori is not efficient currently when dealing with large number of transactional data. Combining the concept of recency and profit with other efficient sequential pattern mining methods (such as [17,18]), may address this deficiency. (2) Further, the accuracy of the proposed approach can be improved by improving the recommendation process, including customer clustering in the collaborative filtering and conducting a full factorial experimental design to get optimal system parameters.
 Acknowledgement
The authors would also like to thank the National Science Council of the Republic of China, Taiwan for financially supporting this research under Contract No. NSC 96-2221-E-327-008.
 References
