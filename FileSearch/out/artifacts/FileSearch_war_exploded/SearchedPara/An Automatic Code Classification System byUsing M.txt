 There have been several researches on automated coding systems since early 1980s in U.S., France, Canada, Japan[1], [3 ], [5], [10]. AIOCS(Automated Indus-try and Occupation Coding System) was developed and used for the 1990 U.S. Census [1], [5]. Since then, the AIOCS has been improved with new approaches: Eli Hellerman algorithm, a self-organizing neural network, the holograph model, nearest neighbor and fuzzy search techniques, etc. [1], [5]. Memory Based Rea-soning system was one of the successful system among the efforts to improve the AIOCS [4]. The ACTR(Automated Coding by Text Retrieval) system is the generalized automated coding system developed by Statistics Canada. It is based on the Eli Hellerman Algorithm[10], similar to AIOCS and is also designed for a wide range of coding application. ACTR is however unsuitable for Census Bu-reau industry and occupation coding since it is designed to assign a code to a single text string and weighting scheme cannot be altered. At this time, many of the systems are at preliminary stages and the Census Bureau is conducting research on a wide range of different automated coding and computer-assisted coding systems.
 scribed above, researches on automated coding system for Korean have been rarely studied. Since Korean is agglutinative language and very different from foreign languages like English, research on developing an automated coding sys-tem considering Korean characteristics is very important.
 Coding System(AKIOCS) using information retrieval and memory-based learn-ing(kNN) techniques. The proposed system consists of three main modules: In-dexing module, candidate codes generator module, and code generation module. The indexing module extracts index terms by using morphological analyzer and noun extractor[8], calculates weight o f each term using conventional TF/IDF weighting scheme and makes an index database of which structure is inverted file. The Candidate codes generator retrieves a set of candidate codes by select-ing several similar codes with input record. The code generator module selects more than one final codes from the candidate set by using a code generation function defined in this paper. The details of each module are explained in the following sections. The standard code book provided by the KNSO describes each classification code with four fields: code name, short description of the code, several examples and exceptional cases. Each code is treated as a document in conventional informa-tion retrieval system. Unfortunately, the description of code book is not enough to represent each code completely. The current code description for each code provides very limited information of only 40 to 50 word size. Another problem with the standard code book is that many individual responses usually contain ambiguous, incorrect and ill-formed data. Variability of the terms and expres-sions between many respondents is also very serious: a equivalent occupation can be described in so many different ways with so many different terms while the standard code description contains very small number of fixed terms. To al-leviate the problem of limited information available in the standard code book, it is desirable to use Korean thesaurus which is not available for the present. Instead, we propose to augment code description by adding nouns and phrases in the records of which classification code were manually assigned in the past census.
 and noun extractor[8] and calculating weight for each indexing term. Then, it makes an inverted file including code ID, starting position of the posting file, and the number of the posting files. Code ID is a classification code in a code book. The posting file includes the code ID in which a term is occurred, weight for the term. The starting position of the posting file is a starting address in the posting file for a term.
 by the following modified TF/IDF weighting scheme[2], [9].
 where w ij is the weight of the i th term in the j th code, N is the total number of codes in a code book, and n i is the number of code descriptions in which the term appeared. Modified frequency, f ij is equal to 5  X  f ij if term i occurred in past census data 1 , otherwise, equal to the conventional term frequency, f ij . Through indexing and weighting terms, each code is represented as vector in the n-dimensional term space. The dimension of the code vector is the total number of the valid terms. Value of each component of the vector is the weight of the corresponding term. Later in code generation step, input record is also repre-sented as a vector and distance between the vectors is calculated as a measure of similarity. The individual response is converted into query which is set of nouns of the company name, business type and job description. The candidate code generator retrieves a set of relevant codes with input query by using vector space model . The vector space model uses vector representation for each code description and user query, and retrieves codes by calculating cosine similarity between the code vectors and query vector. Cosine similarity between a j th code vector,  X   X  C j =( w 1 j ,w 2 j ,...,w tj ) and query vector, equation 2. sponding classification modes: fully automated mode and semi-automated mode. The proposed system assigns a classific ation code in fully automated mode. In semi-automated mode, it assigns p classi fication codes and human expert selects a final code among them. The human export can assign a correct code with less difficulty by only searching p classification codes than fully manual coding. We define two target functions, DVF(discrete-valued function) and SF(similarity-based function) as in equation 3 and 4. and l indicates classification level, 1-5. a l or b l represents a substring consisting of l digits from the first digit of string a or b . For example, 12345 3 means string 123. p indicates the number of codes made by code generator. If p is 1, the system operates as a fully automated system while it makes m final codes as a semi-automatic system when p is m . DVF of equation 3 assigns the most common c l code in the candidate set. Although the DVF is simple and easy to implement, it rarely uses similarity information between code vector and query vector and it is not robust to noisy data. The SF is an alternative way to consider the similarity information, it selects classification codes by sum of similarities between query vector and code vectors which have the sam c l . We used 46,762 records of which industry code were manually assigned and 36,286 records for occupation records to evaluate our proposed system. Perfor-mance of the system is evaluated by 10-fold cross-validation.
 a code is correctly assigned in p mode if the system makes p best candidate codes which include correct code for the input case.
 menting represent the efficacy of using past census data as to alleviate term inconsistency problem between code book and respondents.
 production rate. In fully automatic mode, production rate for classifying level 2 code was 87.08% and 66.08% for level 5 code. Though the performance of fully automatic mode is not very high, the syst em showed very promising performance in semi-automatic mode( p  X  2). It showed 99.10% and 92.88% production rate for level 2 and level 5 code classification in semi-automated mode.
 code is rather lower than that of industry code for most cases. This is because the average number of words included in input records for job code is more smaller than that for industry code. This means the input for industry code has many distinguishable index terms and information between different codes in industry code classification. It is very promising that the production rate after augmenting code set are also much improved. This means that our proposed method to alleviate inconsistency between sets of index terms from code book and respondents are very effective.
 input records and 1-syllable sized noun. There were much spacing errors in in-put records made in entering descriptions of respondents into computer. Most of errors resulted from spacing errors would be addressed, if there were Korean word-spacing system which could deal with spacing errors in short phases or short sentences. Most of current Korean word-spacing system works well on normal sized sentences which have enough context information. The another problem of 1-syllable sized noun resulted from noun extraction system of indexing module. Most of 1-syllable sized Korean syllables are nouns. So, usual Korean noun ex-tractor extracts nouns of which size are more than 2 syllables. It is one of future works to address the problem. This paper describes development of the automated industry and occupation coding system for Korean using information retrieval and automatic document classification technique. We used 46,762 manually assigned records of industry code and 36,286 records for occupation records to evaluate our system. The 10-fold cross-validation is used to evaluated the system. The experimental results shows that using the past census data is very successful in increasing production rate and target function, SF is more effective than DVF to increase performance. Although production rate of the proposed system as a semi-automatic system is pretty good, the performance as a fully automated coding system is not satis-factory yet. This unsatisfactory result resulted from variability of the terms and expressions used to describe same code and spacing errors in input data. The system has much room to be improved as a fully automated system such as in dealing with spacing errors in input records and 1-syllable sized noun problem. Nevertheless, we expect that the system is very successful and enough to be used as a semi-automate coding system which can minimize manual coding task or as a verification tool for manual coding results.

