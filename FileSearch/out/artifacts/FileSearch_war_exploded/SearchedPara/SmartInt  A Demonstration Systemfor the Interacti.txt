 Data Integration combines data from multiple sources to provide users a coherent data store [ 4 ]. With intensified diversity of data in various data sources, the integration of data is becoming increasingly difficult. In particular, the diversity of data across different relational databases are mainly in two dimensions: the inconsistency of the schemas and the inconsistency of the attribute values. Thus, in order to merge multiple data sources, one should deal with two problems: (1) Schema Mapping (SM for short): finding out the attributes referring to the same one across different data sources. (2) Record Matching (RM for short): matching the records referring to the same entity across different data sources. approaches include string similarity based matching [ 3 ] and attribute value set based mapping [ 6 ], while RM approaches are mainly based on string similar-ities [ 1 ]. However, we noticed that all existing efforts took the two tasks as independent steps in data integration, and no study has been conducted on the interaction between them in integrating data from multiple sources. and RM interactively in integrating multiple data sources, and we show that SM and RM can benefit each other in reaching a better integration performance, i.e., higher precision and recall for both SM and RM. We will demonstrate how the two tasks be performed interactively to improve the integration quality. The system overview of SmartInt is depicted in Fig. 1 . There are three modules in SmartInt: the SM module, the RM module, and the interaction module. (1) SM Module: Initially, we do Name Based SM (NBSM for short), which relies on Edit Distance to detect pairs of attributes in high similarities. In the interaction process, we propose a Link Based SM (LBSM for short) method: if an attribute value v a of an instance I a in one table equals to another attribute value v b of an instance I b in another table, and assume same entity, it is highly possible that v a and v b are under the same attributes. If this situation is observed with several pairs of linked entities between two tables, we can determine that the two attributes referring to the same one. (2) RM Module: Initially, we do Name Based RM (NBRM for short) with the key attribute values. In the interaction process, we propose a Link Based RM (LBRM for short) method: briefly, given two instances I a in the other, the more attribute values they share under linked attributes, the more likely they refer to the same entity. (3) Interaction Module: We do NBSM and NBRM as initial steps, and then perform LBSM and LBRM in turn iteratively until no more links can be detected. While RM gets more linked entities to help find attribute pairs, in return SM gets more linked attribute pairs which also benefits RM in finding entity pairs. Our demonstration shows not only the integration result at each step, but also the changes on the integration quality (precision and recall). The data sets used for the demonstration are cellphones collected from several e-commerce websites, such as Tmall, Yesky, PConline and Zol. After some initial cleaning, there are about 15-30 different attributes, and 2000-8000 instances in each database. 1) Interactive Integration Result. At each step, we show the linkages gen-erated for both schema level &amp; instance level and present the precision &amp; recall of both SM and RM at each step in Fig. 2 . 2) Performance Study. We also compare the precision and recall of our method with state-of-the-art SM and RM methods to show the advantage of SmartInt over the existing methods.

