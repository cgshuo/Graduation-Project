 The range search on trajectories is fundamental in a wide spectrum of applications such as environment monitoring and location based services. In practice, a large portion of spatio-temporal data in the above applications is generated with low sampling rate and the uncertainty arises between two subsequent observations of a moving object. To make sense of the uncertain trajectory data, it is critical to prop-erly model the uncertainty of the trajectories and develop efficient range search algorithms on the new model. As-suming uncertain trajectories are modeled by the popular Markov Chains, in this paper we investigate the problem of range search on uncertain trajectories. In particular, we propose a general framework for range search on uncertain trajectories following the filtering-and-refinement paradigm where summaries of uncertain trajectories are constructed to facilitate the filtering process. Moreover, statistics based and partition based filtering techniques are developed to en-hance the filtering capabilities. Comprehensive experiments demonstrate the effectiveness and efficiency of our new tech-niques.
 H.2.4 [ DATABASE MANAGEMENT ]: Systems X  Query processing Uncertain Trajectory; Range Search
With the rapid development of positioning technologies such as radio frequency identification (RFID), wireless sen-sor networks, smart-phone, radar, satellite and global po-sitioning system (GPS), massive spatio-temporal data has been mounting up. Due to physical and resource limita-tions of the data collection devices, it is infeasible to con-tinuously capture the location of a moving object (e.g., ve-hicle, people, animal and iceberg) for each point of time, and hence the uncertainty arises between two subsequent discrete observations. For instance, to save the energy and the communication cost, a taxi may report its location at a low frequency [23]. The time period between two check-in positions might be long in Geo-social applications such as bike routes 1 and tourist routes 2 [13]. Consequently, a large v olume of spatio-temporal data with low sampling rate is described by uncertain trajectories where the possible lo-cations of a moving object between two subsequent obser-vations are captured by a time-dependent random variable (i.e., a stochastic process).

In this paper, we investigate the problem of range search on uncertain trajectories, which is critical to make sense of uncertain trajectories in many key applications such as envi-ronment monitoring, location based service, traffic manage-ment, and national security. Informally, we aim to retrieve a set of moving objects (trajectories) which consistently ap-pear within a given area with high probabilities during a particular time period. Below are two motivation examples for range search on uncertain trajectories.
 Motivation Examples. In Figure 1, an iceberg is observed at times t 1 and t 10 by satellite or radar systems, while its p recise location is unknown at a time t  X  ( t 1 , t 10 ) due to the r esource limitation. Fortunately, according to the knowledge of nearby ocean currents as well as the historical iceberg tra-jectory data, an expert can derive possible locations of this iceberg based on Markov Chain model [5]. To choose a par-ticular region for setting up an oil platform or deploying a major military exercises, we may need to evaluate to what degree a region (e.g, R in Figure 1) is affected by icebergs during a certain period in history. Since the location of an iceberg might be uncertain, we can ignore an iceberg at time t if the likelihood of this iceberg falling in the region R is smaller than a given threshold  X  (0 &lt;  X   X  1). Moreover, we may only be interested in the icebergs which consistently (say, at least  X  times) appear within the region with prob-http://www.bikely.com/ http://www.everytrail.com/ ability at least  X  . This corresponds to the range search on uncertain trajectories investigated in this paper. Similarly, in the study of wild animal migration, the range search on uncertain trajectories can help scientists to evaluate the im-portance of a region during a period of time, where locations of a tagged animal can be observed by wireless RFID sensors from time to time.
 Challenges. Same as [5, 4, 13, 18], in this paper we as-sume the uncertain trajectories are described by Markov Chain model because it has solid theoretical foundation and rich applications. A straightforward approach for the prob-lem of range search on uncertain trajectories is to calculate the appearance probability of each moving object o at each time within the query time interval, and count the number of times in which o appears within the search region with probability at least  X  . Then an object is qualified if the number of accumulated times exceeds a duration threshold  X  . However, as reported in [4], the computation is still very expensive although efficient algorithm is developed in [5].
Consequently, it is desirable to follow the filtering-and-refinement paradigm to significantly reduce the number of candidate trajectories (i.e., moving objects) by exploiting effective filtering techniques. In particular, for any two sub-sequent observations of a moving object o at times t i and t , denoted by o ( t i ) and o ( t j ) respectively, we aim to build a s ummary of the uncertain location distribution of the object. Thus, lower and upper bounds of its appearance probability can be easily derived for any time t  X  ( t i , t j ) when a range q uery is issued. Novel sub-diamonds based filtering tech-nique is proposed in [4] to effectively support range search on uncertain trajectories. However, we observe that its per-formance is unsatisfactory in our empirical study, because each sub-diamond aims at bounding the appearance prob-ability of the moving object o regarding all times between two subsequent observation times t i and t j . This motivates u s to develop new filtering techniques so that the summary is constructed for a set of time intervals instead of the whole time interval ( t i , t j ) (i.e., partition along the temporal di-m ension). Specifically, we first introduce a simple filtering technique based on some pre-computed statistics informa-tion. Then we further enhance the filtering power by devel-oping partition based approach to approximate the location distribution of a moving object using a set of buckets, which are generated by spatial and temporal partitions. We dis-cuss how to effectively build the partition based summaries following some important observations.
 Contributions. Our main contributions can be summa-rized as follows.  X  We formally define the problem of range search on uncer-tain trajectories.  X  We present a general framework for the range search on uncertain trajectories following the filtering-and-refinement paradigm, where summaries of the objects are constructed to facilitate the filtering process.  X  A simple and effective filtering technique is proposed based on statistics information of the uncertain trajectories.  X  A partition based filtering technique is developed to fur-ther enhance the filtering capabilities. Effective summary construction algorithm is proposed based on some impor-tant observations.  X  Comprehensive experiments on real-life and synthetic datasets demonstrate the effectiveness and efficiency of our tech-niques.
 Roadmap. The rest of the paper is organized as follows. Section 2 presents the related work in the paper. Then we formally define the problem of range search on uncertain tra-jectories in Section 3. Section 4 introduces a general frame-work for range search following the filtering and refinement paradigm. Section 5 and Section 6 propose the statistics based and partition based filtering techniques respectively. Experimental results are reported in Section 7, and Section 8 concludes the paper.
Recent years have witnessed the increasing amount of re-search on uncertain data modeling and query processing due to their importance in many applications. In this section, we briefly introduce the existing work closely related to the problem studied in this paper.
 Uncertain Trajectories Modeling. A variety of models have been proposed to capture the uncertainty of the tra-jectory data. Early studies on uncertain trajectories employ simple geometric shapes (e.g., cylinders [16] and beads [14]) to approximate the possible locations of a moving object. Despite of its simplicity, this model suffers from an inherent drawback: the probability distribution of an object is not considered and hence cannot appropriately support proba-bilistic queries. In some recent work (e.g., [22]), the network-constraint model is used where the raw location of a moving object is mapped to a linear range on the road networks. In [2, 11, 17], the uncertain location of an object is captured by an independent probability density function (e.g., Gaus-sian distribution) at each point of time. As shown in [5, 13], the temporal dependence between two subsequent locations of an object is lost in this model. Recently, a novel evolving density model is proposed in [9] to capture the time-varying uncertainty of the moving objects where the probability den-sity function may change over time. Markov Chain model has been widely used in the literature to capture the tempo-ral dependency of a moving object, and hence is naturally adapted to describe the uncertainty of the trajectory data with low sampling rate in [5, 4, 13, 18]. Moreover, [5, 4] show that the Markov Chain model correctly complies with the classical possible world semantics [3]. In this paper, we employ Markov Chain model to describe the uncertain tra-jectories.
 Range Search on Uncertain Data. Range search on un-certain data has been intensively studied in recent years. A large body of work (e.g., [15, 21]) focus on the range search on a snapshot of uncertain trajectories; that is, each ob-ject is described by a probabilistic density function, and ob-jects with appearance probability exceeding a given thresh-old are retrieved. The problem of range search on uncertain trajectories has been investigated against differerent uncer-tain models such as cylinder model (e.g., [16]), beads model (e.g., [14]), network-constraint model (e.g., [22]), indepen-dent probabilistic density function model (e.g., [2]), evolving density model [9], segments based model [1], as well as the Markov Chain model [5, 4].

As to the best of our knowledge, [5, 4] are only two exist-ing work which study the problem of range search on uncer-tain trajectories modeled by Markov Chains. Particularly, Emrich et al. propose efficient computation algorithm for range search in [5] without the support of indexing tech-nique. In [4], they further improve the performance by uti-lizing pre-computed sub-diamonds based summaries which can significantly reduce the number of candidate objects for refinement.
 Sub-diamonds based Filtering. As shown in [4], all pos-sible valid trajectories within a segment g ( o, t i , t j bounded by a diamond for each individual dimension if the maximal speed is given. Figure 2 depicts the diamond 3 1 ( 3 the time and the vertical axis is the dimension D 1 . Given a range search query, we may easily prune the segment g based on 3 1 . For instance, we have P ( o ( t ) , Q 1 ) = 0 for t ime t  X  [ t i , t x ] since the query region Q 1 does not overlap 3 1 regarding the dimension D 1 . Thus, g c an be excluded from further computation. Similarly, we can claim o ( t ) is en-closed by Q 2 for any t  X  [ t i , t j ] if Q 2 contains the diamond r egarding both D 1 and D 2 .

I ntuitively, the filtering performance can be further en-hanced by maintaining a set of sub-diamonds. For instance, 3 2 in Figure 2 is a sub-diamond of g w here 3 2 = h o ( t i o ( t j ) , c i , and we know that its associated probability, de-noted by P ( 3 2 ), is 0 . 5 ; that is, with probability at least 0 . 5, o ( t ) is bounded by 3 2 for any t  X  [ t i , t j ]. Consequently, the s egment g can be pruned for search region Q 3 if probability t hreshold  X   X  0 . 5 because Q 3 does not overlap 3 2 . The val-i dation of the segment can be conducted in a similar way. Together with the diamonds and their minimal bounding rectangles, the sub-diamonds of the segments are organized by an R-tree in [4], namely UST-Tree.

The sub-diamonds based filtering technique developed in [4] can significantly reduce the computational cost compared with the diamond based technique. However, as we need to enforce that the object o appears within the sub-diamond 3 with probability at least P ( 3 ) w.r.t all t  X  ( t i , t l ead to poor filtering performance. In our empirical study, we observe that the corresponding probability (i.e., P ( 3 )) of the sub-diamonds { 3 } might be rather small, especially when the timespan between t i and t j is long. Moreover, s ub-diamonds are calculated based on the projected val-ues for each individual dimension separately. As reported in [20], this may lose the spatial correlation of the object lo-cation distribution, and hence deteriorates the filtering per-formance. These problems cannot be addressed by simply increasing the number of sub-diamonds.
In this section, we formally define the problem of range search on uncertain trajectories. Table 1 summarizes the notations frequently used throughout the paper.
In [5, 4], an uncertain trajectory is modeled as a realiza-tion of a stochastic process [10]. Markov Chains can model a discrete spatio-temporal (state-time) space with the as-sumption that o ( t + 1) only depends on o ( t ).

Definition 1 (Markov Chain model). Given a stochas-tic process o ( t ) with t  X  T and a state s  X  S , the stochastic process is called Markov Chain iff P ( o ( t + 1) = s j | o ( 0) = s , o ( 1) = s 1 , . . . , o ( t ) = s i ) = P ( o ( t + 1) = s g ( o, t i , t j ) , g a segment of an object o with two  X  t ( q ) ( X  t ( g ) ) duration of a query (segment) d ( o, q,  X  ) , d ( o ) duration (i.e., number of times) that d  X  ( o ) ( d + ( o ) ) lower (upper) bound of d ( o ) d  X  ( g ) ( d + ( g ) ) lower (upper) bound of d(g) For an object o moving on the space S , we set P i,j ( o ) = probability of object o moving from state s i to s j when the t ime changes from anytime time t  X  T to its successive time t + 1. We can store all P i,j ( o ) in a n  X  n matrix M ( o ) to represent the transition probability of object o from state s to s j at any time t , where n is the number of possible states (locations) and the matrix M ( o ) is called transition matrix. Then we have o ( t + 1) = o ( t )  X  M ( o ). Recall that o ( t ) is the distribution vector of an object o at time t where P s  X  S P ( o ( t ) , s ) = 1. Similarly, if M ( o ) t ransposed Markov Chain matrix, we have o ( t ) = o ( t + 1)  X  M ( o ) T .

G iven two subsequent observations o ( t i ) and o ( t j ), effi-c ient algorithm is proposed in [5] to derive the location dis-tribution o ( t ) for t  X  ( t i , t j ) based on M ( o ) and M ( o ) S ame as [5, 4], we assume objects share the same Markov Chain matrix which can be learned by domain experts in various applications.
Following the common assumptions of the existing works (e.g., [5, 4, 13, 18]) which capture the uncertainty of tra-jectories with Markov Chain model, we assume the space and time are in discrete domain. The space S consists of n possible states (locations) { s 1 , . . . , s n } i n 2-dimensional space. For a state s , s.D i denotes the coordinate value o f s on i -th dimension. We use T to denote time domain { t 1 , . . . , t m } . Consequently, in this paper, the trajectory of a moving object o is represented by a set of m  X  ( m  X   X  m ) tu-For a certain trajectory, o ( t ) is a unique state s  X  S . How-ever, it corresponds to a probability distribution when the location of the object is derived from probabilistic models. Following is a formal definition of the uncertain location for an object o at time t .

Definition 2 (Uncertain Location). Let P ( o ( t ) , s ) de-note the probability that an object o appears on state (loca-tion) s at time t . The uncertain location of an object o at time t , denoted by o ( t ) , consists of n  X  tuples { s i w ith P ( o ( t ) , s i ) &gt; 0 , where P n  X  i = 1 P ( o ( t ) , s
C onsequently, an uncertain trajectory is a trajectory whose location might be uncertain at each point of time. In particular, we assume the location (state) of an object is cer-tain when it is observed (reported), while locations (states) of an object between two subsequent observation times are derived based on the Markov Chain model [4] which is intro-duced in Section 3.1. Therefore, the uncertain trajectory of an object o consists of a set of segments { g ( o, t i , t t and t j corresponds to two subsequent observations. Each s egment g records the location distribution of the object o from time t i (inclusive) to t j (exclusive). We use  X  t ( g ) to denote the duration of the segment (a.k.a. observation in-terval size) where  X  t ( g ) = t j  X  t i .

G iven a region R , we use s  X  R to denote that the loca-tion (state) s is within the region R . Then we define the appearance probability of o regarding R at time t , de-noted by P ( o ( t ) , R ), to measure the likelihood of the object o falling in the region R at time t .

Note that we may also interpret the concept of appearance probability in terms of possible world semantics . In particu-lar, P ( o ( t ) , R ) denotes the probability mass of the possible worlds at time t in which the object o falls in the region R . This also results in Equation 1.
 Definition 3 (Spatio-temporal search region ( q )). A spatio-temporal search region q consists of three compo-nents h R, s, e i , where q.R represents the spatial search re-gion, and q.s ( q.e ) denotes the start (end) time of the query time interval. We use  X  t ( q ) d enote the duration of the search region (i.e.,  X  t ( q ) = q.e  X  q.s + 1 ).
We say an object satisfies the spatio search region q.R with probability at least  X  at time t if P ( o ( t ) , q.R )  X   X  for t  X  [ q.s, q.e ]. We use d ( o, q,  X  ) to denote the duration (i.e., the number of times) that a moving object o satisfies q.R with probability at least  X  . For presentation simplicity, we use d ( o ) to represent d ( o, q,  X  ) whenever there is no ambiguity.
Finally we have the formal definition of the spatio-temporal range search on uncertain trajectories.
 Problem Statement. In this paper, we investigate the problem of spatio-temporal range search over uncertain tra-jectories. Particularly, given a spatio-temporal search region q , a probabilistic threshold  X  (0 &lt;  X   X  1), a duration thresh-old  X  (1  X   X   X   X  t ( q ) ), and uncertain trajectories of a set O of moving objects, we aim to identify objects { o | d ( o, q,  X  )  X   X  } with o  X  O ; that is, find objects which consistently (at least  X  times) appear within the spatial search region with probability at least  X  .
 Range queries on uncertain trajectories with EXISTS and ALL semantics in [4, 5] are special cases of the problem studied in this paper, which correspond to the range search with  X  = 1 and  X  =  X  t ( q ) , respectively.

Example 1. In Fig 3(a), o ( t 10 ) a nd o ( t 14 ) a re two sub-sequent observations of object o ; a spatio-temporal search region q is given as h R, t 11 , t 13 i w ith probabilistic threshold  X  and duration threshold  X  . The snap shots of o are de-picted in Fig 3(b) for t 11 , t 12 and t 13 , where the appearance
Figure 3: Range Search over Uncertain Trajectories probability for each state is marked. Note that shaded states are contained by q.R . Then we have P ( o ( t 11 ) , q.R ) = 0 . 4 , if  X   X  0 . 4 , o meets the query constraints, otherwise o is not an answer.

Thereafter of this paper, the X  X patio-temporal range search X  is abbreviated to X  X ange search X , and X  X patio-temporal search region X  are abbreviated to  X  X earch region X  for presentation simplicity. We might use  X  X ocation X  and  X  X tate X  interchange-ably for better understanding of the paper.
A straightforward implementation of range search on un-certain trajectories is to calculate d ( o, q,  X  ) for each individ-ual object o  X  O through Markov Chains based computa-tion technique [5]. However, as shown in [4], this is cost-prohibitive since the refinement cost is rather expensive. Therefore, it is desirable to develop effective and efficient filtering techniques to prune or validate objects such that the number of objects involving refinement can be signifi-cantly reduced. In particular, suppose we can derive the up-per and lower bounds for the duration of an object o regard-ing the range search, denoted by d + ( o ) and d  X  ( o ) respec-tively. Then an object can be safely pruned if d + ( o ) &lt;  X  or validated if d  X  ( o )  X   X  . Moreover, for each individual time t , we can also derive lower and upper bounds of the appearance we can avoid the computation of P ( o ( t ) , q.R ) if P  X   X   X  ( validate ) or P + ( o ( t ) , q.R ) &lt;  X  ( prune ).
In this paper, we develop efficient algorithms to support range search on uncertain trajectories following filtering and refinement paradigm. In the sequel, we first introduce a simple minimal bounding box based filtering technique, then present a general framework for range search on uncertain trajectories.
Given two subsequent observations o ( t i ) and o ( t j ), we may e asily come up with a minimal bounding rectangle (MBR) for each segment g , denoted by g.mbr , which encloses all possible locations of o during time t i and t j if the maxi-m al speed is pre-given. Together with the time dimension, each segment g can be enclosed by a 3-dimensional minimal bounding box (MBB), denoted by g.mbb . Clearly, a spatio-temporal search region q is a cube in 3-dimensional space. In this paper, we define three relations between q and g.mbb . We say a query q does not overlap a segment g if q and g.mbb does not overlap w.r.t spatial or temporal aspects; that is, q.R  X  g.mbr =  X  , q.s  X  t j or q .e &lt; t i . Otherwise, w e say q overlaps g . Particularly, we say q contains g if g is contained by q on both spatial and temporal aspects, i.e., g.mbr  X  q.R , q.s  X  t i , and q .e  X  t j . Let d ( g ) denote the con-tribution of the segment g to d ( o ) where 0  X  d ( g )  X   X  It is immediate that we have d ( g ) =  X  t ( g ) if q contains g , and d ( g ) = 0 if q does not overlap g .

MBB based filtering technique is simple and intuitive, and its filtering capability is rather limited. In Section 5 and Section 6, we introdue advanced filtering techniques based on statistics information and spatio-temporal partitions of the segment respectively where summaries of the segments are pre-computed to facilitate the filtering process.
In this paper, we assume a summary of the segment is constructed for each individual segment w.r.t the filtering technique used (e.g., sub-diamonds based filtering, statistics based filtering and partition based filtering). As shown in Figure 4, MBBs of the segments are organized by a hier-archical spatial index structure (e.g., R-tree [6]). For each segment entry, its corresponding summary is maintained to enhance the filtering performance.

With the same rationale to MBB based filtering in Sec-tion 4.1, we can easily come up with three relations between q and an intermediate entry E (i.e., segments enclosed by E ). Then an intermediate entry E can be pruned or vali-dated without further exploring its child entries.
Assuming the summaries of the segments are organized by an STA-tree, we present a general framework for the range search on uncertain trajectories following the filter-ing and refinement paradigm, and details are illustrated in Algorithm 1.

In particular, we traverse the entries in a branch and bound fashion. A FIFO queue, denoted by Q , is used to maintain the entries to be visited. In Line 5-13, entries are processed according to their relationships with search region q . Clearly, we do not need to further explore an entry E if it does not overlap q (Line 5), because none of the segments enclosed by E contribute to the final results. On the other hand, if E is contained by q , we can immediately validate the segments { g } enclosed by E ; that is, we increase d b y  X  t ( g ) (Line 8) where g is a segment of the object o . Line 9 validates o if we have d  X  ( o )  X   X  w here R is used to keep query results. Otherwise, i.e., E overlaps q but is not contained by q , Line 10-13 further explore an entry by expanding its child entries or put its corresponding segment into the set F which will be further processed by advanced filtering technique at Line 20.

We update d + ( o ) by accumulating the durations of its validated segments (Line 14) and unexplored segments, i.e., segments in F (Line 16). Line 17 retrieves candidate objects which are not validated but have a promising upper bound (i.e., d  X  ( o ) &lt;  X  and d + ( o )  X   X  ) . Then Line 18-27 further refine the candidate set by exploiting the advanced filtering techniques, in which the summary of segment may derive tighter lower and upper bounds for d ( g ). Note that Line 21 Algorithm 1 : Range Search ( O T , q ,  X  ,  X  )
Input : O T : Uncertain trajectories of a set O o f Output : objects { o } with d ( o, q,  X  )  X   X 
C :=  X  ; F :=  X  ; R :=  X  ;
Q  X  push root of O T ; w hile Q 6 =  X  do d + ( o ) = d  X  ( o ) for all objects with segments in F ; for each segment g of object o in F do
C  X  objects { o } if d + ( o )  X   X  a nd o 6 X  R ; // prune for each candidate object o  X  C do for each object o in C do // refinement return R removes a segment g from candidate segments F if we have d ( g ) =  X  t ( g ) (i.e., o is qualified at all times t  X  [ t d ( g ) = 0 (i.e., o is not qualified at any time t  X  [ t
F inally, Line 28-29 refine the remaining candidate objects by exactly computing d ( o, q,  X  ) for each candidate object o . Note that we only need to compute d ( g ) for candidate seg-ments { g } in F .

As shown in our empirical study, the dominant cost of Al-gorithm 1 is the refinement cost at Line 29, since it is time consuming to calculate appearance probabilities of objects at different times. This motivates us to develop effective and efficient filtering techniques to significantly reduce the number of survived candidates with reasonable space over-head. In Section 5 and Section 6, we present advanced fil-tering techniques based on statistics information and spatio-temporal partitions respectively.
In this section, we present the statistics based filtering technique. Section 5.1 introduces the motivation of the tech-nique. Section 5.2 proposes the detailed pruning and valida-tion rules. Performance analysis is conducted in Section 5.3.
In this section, we develop the statistics information based filtering technique. In a nutshell, for each segment g ( o, t w e use some simple statistics to capture the uncertain lo-cation distribution of the object for each time t  X  ( t i T hen we can derive lower and upper bounds of the appear-ance probability of o at time t , denoted by P  X  ( o ( t ) , q.R ) and P + ( o ( t ) , q.R ) respectively, to prune or validate the time t . We say a time t is pruned (validated) if P + ( o ( t ) , q.R ) &lt;  X  ( P  X  ( o ( t ) , q.R )  X   X  ). Furthermore, we can merge the statis-tics of a set of consecutive times to reduce the summary size.
As shown in Figure 5, suppose o ( t ) is bounded by a mini-mal bounding rectangle, denoted by o ( t ) .mbr . We use P ( A ( i = 1 , 2) to denote the probability mass of the states (loca-tions) which are contained by q.R along the i -th dimension D , and P ( B i ) records the probability mass of the states w hich are not contained by q.R along the i -th dimension. In consequence, we have P ( o ( t ) , q.R ) = P ( A 1 ) in Figure 5(a), s ince q.R contains o ( t ) along the dimension D 2 . Suppose we c an derive an upper bound of P ( A 1 ), denoted by P + ( A T hen we can safely prune the time t , if P + ( A 1 ) &lt;  X  . Simi-larly, t is validated in Figure 5(b) if 1  X  P + ( B 1 )  X   X  , where P + ( B 1 ) is the upper bound of P ( B 1 ). This observation c an be easily extended to the case where the search re-gion overlaps o ( t ) .mbr on both dimensions, e.g., Figure 5(c) and Figure 5(d). In Figure 5(c), we have P ( o ( t ) , q.R )  X  min ( P ( A 1 ) , P ( A 2 ))  X  m in ( P + ( A 1 ) , P tionale, t is validated if 1  X  ( P + ( B 1 ) + P + ( B 2 ))  X   X  .
E xample 2. Suppose we have P + ( A 1 ) = 0 . 1 , P + ( B Figure 5(c), and P ( o ( t ) , q.R )  X  1  X  (0 . 1 + 0 . 2) = 0 . 7 in Figure 5(d).

In the next subsection, we exploit Cantelli X  X  inequality [12] to derive P + ( A 1 ), P + ( A 2 ), P + ( B 1 ), and P + ( B t he statistics information of o ( t ).
For presentation simplicity, we use a random variable X to denote the location distribution o ( t ). Following are formal definitions of the expectation and the variance of X .
Definition 4. Expectation , E ( X ) . We use E ( X ) to denote the expectation of X , where E ( X ) .D i = P s  X  S P ( X = s ) .
 N ote that P ( X = s ) denotes the probability that X resides on the state s , and s.D i is the i -th coordinate value of the state (location) s .

Definition 5. Variance ,  X  2 ( X ) . We use  X  2 i ( X ) t o de-note the variance of X on each dimensions; that is,  X  2 i P
G iven two values x and y where x &gt; 0 and y &gt; 0, we use  X  ( x, y ) to denote a function where  X  ( x, y ) = 1 lowing is Cantelli X  X  inequality introduced in [12], which is demonstrated in Figure 6(a).
 Lemma 1 (Cantelli X  X  Inequality [12]). Suppose that Y is a random variable in one dimensional space with ex-pectation E ( Y ) and variance  X  2 ( Y ) , P ( Y  X  a )  X   X  ( a  X  E ( Y ) ,  X  ( Y )) for any a &gt; E ( Y ) , where P ( Y  X  a ) denotes the probability of Y  X  a .
 By replacing Y with 2 E ( Y )  X  Y , we have a variant of Lemma 1 which is illustrated in Figure 6(b).

Lemma 2. Suppose that Y is a random variable in one di-mensional space with expectation E ( Y ) and variance  X  2 P ( Y  X  b )  X   X  ( E ( Y )  X  b ,  X  ( Y )) for any b &lt; E ( Y ) , where P ( Y  X  b ) denotes the probability of Y  X  b .
 We can come up with P + ( B 1 ) in Figure 5(b) based on L emma 1. And Lemma 2 can be used to derive P + ( A 1 ) i n Figure 5(a).

Suppose the expectation and the variance of X (i.e., lo-cation distribution o ( t )) are readily available, we can derive the upper bound of P ( X, q.R ) for pruning .
 Theorem 1. Suppose that the search region q.R overlaps X.mbr but does not contain E ( X ) . We have P + ( A i ) = 1 i f X.mbr is contained by q.R on i -th dimension, otherwise P t ween q.R and E ( X ) on the i -th dimension (e.g., d 1 in Fig-u re 5(a)). Then we have P + ( X , q.R ) = min ( P + ( A P roof. It is immediate that P + ( A i ) = P ( A i ) = 1 if X .mbr is contained by q.R on i -th dimension according to the definition of P ( A i ). Otherwise, suppose q .R is on the left side or bottom of E ( X ) on i -th dimension (e.g., A F igure 5(a) and Figure 5(c), and A 2 in Figure 5(c)), then we h ave P + ( A i ) =  X  ( d i ,  X  i ( X ) ) according to Lemma 2. Simi-when q.R is on the right side or top of E ( X ) on i -th di-mension. Then we have P ( X, q.R ))  X  min ( P ( A 1 ) , P ( A  X  m in ( P + ( A 1 ) , P + ( A 2 )). Thus, the theorem holds.
With similar rationale, we have the following theorem which can obtain the lower bound of P ( X, q.R ) for the val-idation of time t .

Theorem 2. Suppose that the search region q.R over-laps X.mbr and contains E ( X ) . We have P + ( B i ) = 0 i f X.mbr is contained by q.R on i -th dimension, otherwise P E ( X ) a nd the uncovered area on i -th dimension (e.g., d F igure 5(b)). Then we have P  X  ( X , q.R ) = 1  X  ( P P + ( B 2 )) .
 S tatistics Based Filtering. For a given segment g ( o, t t he expectation and variance information are maintained for each time t  X  ( t i , t j ). For a given query q , we can obtain P  X  ( o ( t ) , q.R ) and P + ( o ( t ) , q.R ) according to Theorem 1 and Theorem 2. Let T ( g ) denote the timestamps within g which satisfy query time constraints, i.e., T ( g ) = [ t i , t For each timestamp t  X  T ( g ), we increase d  X  ( g ) and d b y one if P  X  ( o ( t ) , q.R )  X   X  . Otherwise, we increase d b y one if P + ( o ( t ) , q.R )  X   X  .
 Reduce Summary Size. To reduce the space consump-tion, we may keep the statistics information for a set of instead of keeping the expectation and the variance infor-mation for each individual time, we maintain the minimal bounding rectangle of their expectations as well as the max-imal variance value on each dimension. Then Theorem 1 and Theorem 2 can be adopted in a conservative way such idated at the same time. We omit the details due to the space limitation.
Given a segment g ( o, t i , t j ), we assume the location distri-b utions of the objects for time t  X  [ t i , t j ) are readily available b y applying Markov Chains based techniques in Section 3.1. The construction of the statistics based summary can be fin-ished in O ( n s  X   X  t ( g ) ) time where n s is the average number o f tuples in o ( t ). Regarding the filtering cost, it takes O (1) time for each time and hence the total cost is O ( X  t ( g ) ).
In this section, we introduce a new filtering approach to build summary for a segment based on both spatial and temporal partitions. Specifically, Section 6.1 introduces the motivation of the partition based filtering approach. De-tails of the technique are presented in Section 6.2. We dis-cuss how to effectively construct partition based summary in Section 6.3.
Although statistics based filtering technique is simple and effective, a considerable number of segments will still sur-vive from the filtering phase in our empirical study because it is difficult to precisely capture a distribution with a few statistics. This motivates us to develop more sophisticated summary technique by partitioning along both spatial and temporal dimensions, so that the filtering performance can be significantly enhanced with a reasonable space overhead.
As shown in Figure 7(a), we first partition the minimal bounding rectangle of the segment ( g.mbr ) into a set S ( g ) of cells. Then for each cell c , Figure 7(b) shows that there is a function P ( o ( t ) , c ) which presents the appearance prob-ability of the object o within the cell c for times t  X  ( t as follows.

It is infeasible to explicitly keep P ( o ( t ) , c ) values for all t  X  ( t , t j ). Consequently, we employ a set of buckets to approx-i mate the appearance probability distribution for each cell c . For instance, in Figure 7(b) we use two buckets { b 1 t o represent P ( o ( t ) , c ) where the time interval size, maximal and minimal appearance probabilities of a bucket b are de-noted by  X  t ( b ) , b.p + and b .p  X  respectively. In particular, where b ( t , c ) is the corresponding bucket of c at time t . Then, we have
Given a partition based summary of a segment g ( o, t i , t d enoted by S ( g ), we can come up with an effective compu-tation algorithm to derive lower and upper bounds for d ( g ) according to Equations 4 and 5. Algorithm 2 illustrates the details. Specifically, we first retrieve cells in S ( g ) which are contained by q.R or overlap q.R , denoted by C  X  and C , respectively. Then we attempt to v alidate (Line 6-9) or prune (Line 11-14) a time t  X  T ( g ). Line 7 calculates the lower bound of P ( o ( t ) , q.R ) based on Equation 4, while Line 12 derives the upper bound according to Equation 5. For the given probability threshold  X  , we can validate a time t if P  X  ( o ( t ) , q.R )  X   X  (Line 8). Similarly, t is pruned if P + ( o ( t ) , q.R ) &lt;  X  (Line 13).
 Algorithm 2 : Partition based Filter( S ( g ) , q ,  X  )
Input : S ( g ) : partition based summary of g ,
Output : d  X  ( g ) and d + ( g ) d  X  ( g ) := 0; d + ( g ) := 0;
C  X   X  c ells in S ( g ) which are contained by q.R ;
C  X   X  c ells in S ( g ) which overlap q.R ; for each time t  X  T ( g ) do return d  X  ( g ) a nd d + ( g ) Time Complexity . Let C r denote the cost to retrieve t he cells which are contained by q.R or overlaps q.R , and there are n c cells in C  X  . Then the total filtering cost is O ( C r + n c  X   X  t ( g ) ).
To effective construct S ( g ), we aim to address following three issues in this subsection: i ) how to generate buckets for a given cell; ii ) the number of cells assigned for each segment; iii ) how to generate the cells. ( i ) Bucket generation . As discussed in Section 6.1, we cannot afford to keep P ( o ( t ) , c ) values for all times in [ t T hus, we use B buckets to approximate the probability dis-tribution. Suppose each time t have the same chance to be involved in the filtering phase, the uncertainty introduced by a bucket partition B , denoted by C ( B ), is as follows. R ecall that b ( t, c ) is the bucket used for the time t . Similar to V -optimal histogram [8], we come up with the optimal bucket partition B  X  with cost O (  X  t ( g ) 2  X  B ) by applying dynamic programming technique.
In our implementation, the number of buckets for each cell is linear to the duration of the segment; that is, B =  X  t where l is a pre-given constant. ( ii ) Number of cells assigned for each segment . Given two segments g 1 and g 2 , we use A rea ( g 1 ) ( A rea ( g n ote the area of g 1 .mbr ( g 2 .mbr ) , and n 1 ( n 2 ) denote the n umber of cells assigned to g 1 ( g 2 ). At the first glance, we m ay assign a fixed number of cells to each segment (i.e., n 1 = n 2 ) or fix the area of each cell (i.e., n 1 n 2 = Area ( g H owever, both strategies are not cost-effective according to our observation below.

With similar spirit to [21], we use P ( c )  X  W ( c ) to measure the contribution of uncertainty for a cell c , where P ( c ) is the probability that c overlaps q.R but q.R doesn X  X  contain c , while W ( c ) denotes the probability mass within the cell (i.e., can reduce the uncertainty by evenly partitioning a cell c into two parts c 1 and c 2 . Assume the probability mass in c i s also evenly distributed, now the overall uncertainty cost w e assume W ( g 1 ) = W ( g 2 ) (i.e., two segments have the s ame duration length), and two cells from the same segment have the same area and probability mass. Intuitive, for a cost-effective resource allocation strategy, each cell should contribute the same amount of uncertainty; that is, P ( g = 10 and Area ( g 2 ) = 40 in Figure 8(b), if 4 cells are assigned t o g 1 , then 8 cells should goes to g 2 because ( 4 8 ) ( i ii ) Cell generation . Now we investigate how to parti-tion the minimal bounding rectangle of a segment g into m 1  X  m 2 cells. Following the above argument, the uncer-P gardless how the cells are generated. This implies that we should have the same Area ( c )  X  W ( c ) value for each cell in S ( g ) to minimize the uncertainty cost according to Cheby-shev Sum Inequality [7]. Nevertheless, it is infeasible to achieve this with a regular grid partition, and hence we re-sort to a simple heuristic. In particular, for a segment with m 1  X  m 2 cells we partition g .mbr into m i parts with the s ame probability mass along each dimension i , which can be finished in time O ( n s  X   X  t ( g ) + n s log( n s )) where n a verage number of tuples in o ( t ) for t  X  ( t i , t j ).
In this section, we present results of a comprehensive per-formance study to evaluate the efficiency and scalability of the proposed techniques in the paper. Following algorithms are evaluated.  X  UST: The range search techniques proposed in [4] where sub-diamonds based filtering technique is employed 3 .  X  S TA: Algorithm 1 in Section 4 where statistics based fil-tering technique (Section 5) is employed.  X  GRID: Algorithm 1 in Section 4 where partition based filtering technique (Section 6) is employed.
 In this work, we use techniques proposed in [5] to perform candidate refinement for the above three algorithms. Datasets. We evaluate our techniques on both synthetic and real datasets using data generator from [4, 13] with fol-lowing steps. We construct a two dimensions state space, consisting of n states, which are uniformly distributed in the domain [0 , 1] 2 . For each state, we randomly choose s everal neighbors, and then assign random probability to each connection such that the total probability equals to 1. This builds a directed graph where the vertices represent the states and the edges represent the transition probabil-ities from one state to another. The graph is stored in a matrix as the transition matrix. To create an uncertain tra-jectory, we randomly choose one state as the start point, and then apply a directed random walk through the non-zero edges of the graph to get a moving sequence with 100 time steps. The size of time domain is set to 1 , 000, and the start time of an uncertain trajectory is randomly chosen be-tween [1 , 900]. The observations of an object are randomly chosen from the moving sequence. In the experiment, we generate 10 , 000 states with a transition matrix. The num-ber of trajectories N varies from 2 , 500 to 10 , 000 with de-fault value 5 , 000. Two subsequent observations X  interval size (i.e., segment duration ) is randomly chosen from 10 to 15 by default. The probabilistic threshold  X  varies from 0 . 1 to 1 . 0 with default value 0 . 5, and the duration threshold  X  varies from 1 to 10 with default value 6. The real datasets are generated from a set of trajectories of taxis in the city of Beijing [19]. We apply techniques in [13] to get the state set, transition matrix, and trajectories set, and then randomly choose 10 , 000 state with 583 corresponding trajectories to perform the experiment.
 Workload. A workload for the range query consists of 1000 queries in our experiments. The center of a query is uni-formly chosen from the domain [0 , 1] 2 , its start time is ran-d omly generated from [1 , 990]. The query extent, i.e, search
The range search with e xists semantics (i.e.,  X  = 1) is in-vestigated in [4]. Nevertheless, their technique can be easily extended to support range search with  X  &gt; 1. region of a query in each dimension varies from 0 . 05 to 0 . 25 with default value 0 . 1, and the duration of a query ( X  t varies from 10 to 25 with default value 10.

Same as [4], the catalog size of the UST-Tree is set to 10 in the experiments. In STA Algorithm, we compress the statistics information for every 3 consecutive times. Re-garding GRID Algorithm, suppose one cell is assigned to a unit area with size 0 . 03  X  0 . 03. Then for each segment g with area Area ( g.mbr ), c n cells are assigned where c  X  b uckets are generated for each cell where  X  t ( g ) is the dura-tion of the segment (i.e., observation interval size).
All algorithms proposed in this paper are implemented in standard C++ with STL library and compiled with GNU GCC. Experiments are run on a PC with Intel Xeon 2 . 40GHz dual CPU and 4G memory running Debian Linux. The disk page size is fixed to 4 , 096 bytes. As the refinement phase contributes the dominant cost in three algorithms, we eval-uate their performance by measuring the average number of candidate segments refined. The average query response time is also recorded to evaluate the efficiency of the algo-rithms.

Table 2 lists all parameters which may have impacts on our performance study, where default values are in bold font. In our experiments, all parameters use default values unless otherwise specified.
 number of trajectories ( N ) 2500, 5000 , 7500, 10000 probabilistic threshold (  X  ) 0 . 1, 0 . 3, 0 . 5 , 0 . 7, 0 . 9, 1 . 0 query extent (area of q.R ) 0 . 05, 0 . 1 , 0 . 15, 0 . 20, 0 . 25
To evaluate effectiveness of the adaptive resource allo-cation strategy in Section 6.3, we also construct partition based summaries following other two alternative strategies, namely GRID C and GRID L respectively. Particularly, GRID always allocates 3  X  3 cells for each segment (i.e., fix the num-ber of cells for each segment), while each cell in GRID L t he area 0 . 03  X  0 . 03 (i.e., fixed the area of each cell).
Note that summaries constructed in three algorithms have similar summary size under default settings. Nevertheless, Figure 9 shows that GRID always outperforms the other two competitors by varying the number of trajectories and query extent. This confirms the effectiveness of our adaptive resource allocation strategy. Impact of the number of trajectories. Figure 10 evalu-ates the performance of three algorithms on synthetic dataset where the number of trajectories N grows from 2 , 500 to 10 , 000. With a larger number of trajectories, more trajec-tories are involved in the computation, thus incurring higher computation cost and more candidate segments. The re-sponse time and the number of candidate segments of STA and GRID grow slowly, yet the performance of UST drops more quickly with the growth of the number of trajectories. It is shown that GRID has the best scalability among three algorithms. Impact of segment duration. Figure 11 evaluates the impact of the segment duration  X  t ( g ) on three algorithms where  X  t ( g ) is randomly chosen from each bounded interval. The response time and the number of candidate segments are reported for three algorithms. As expected, the perfor-mance of UST degrades quickly because it is difficult to find a proper sub-diamond when the segment duration grows. Recall that a sub-diamond 3 on a segment g ( o, t i , t j t o enforce that the appearance probability of o ( t ) is bounded by P ( 3 ) regarding all times t  X  [ t i , t j ). On the contrary, S TA and GRID are much less sensitive to the growth of the segment duration because of the temporal partition; that is, we build summaries for a set of time intervals in g , instead of the whole time interval. Figure 12: Impact of Query Extent and Duration Impact of query extent and duration. We evaluate the impact of the query extent of q.R as well as the query dura-tion  X  t ( q ) against three algorithms, where the query extent grows from 0 . 05 to 0 . 25, and the query duration varies from 10 to 25. With the grow of query extent and query duration, more trajectories are involved in the range search, thus the number of candidate segments increases as expected. Fig-ure 12 shows that GRID has the best filtering capability among three algorithms.
 Impact of probabilistic threshold. Figure 13 investi-gates the performance of three algorithms as a function of the probabilistic threshold  X  which varies from 0 . 1 to 1. The performance of three algorithms is not sensitive to  X  . It is shown that GRID always has the best performance among three algorithms.
 Impact of duration threshold. Figure 14 reports the number of candidate segments of the algorithms as a func-tion of the duration threshold  X  which varies from 1 to 10. It is shown that the growth of  X  does not noticeablely af-fect performance of three algorithms, while GRID always achieves the best performance under all settings. Recall that, when  X  equal 1, the range search exactly corresponds to the range search with exists semantics studied in [4]. Real data. We also perform experiments on the real-life dataset. Figure 15 reports the number of candidate seg-ments against the growth of the query extent and proba-bilistic threshold  X  . Similar trends are observed in Figure 15 compared with the experiments on the synthetic data. Index construction. Figure 16 reports the index construc-tion time and the index size of three algorithms on synthetic data and real-life data. It is interesting that STA outper-forms UST in term of query response time, while STA also consumes less index size and index construction time. On the other hand, although GRID has the largest index size and construction time, it is cost effective considering its su-perior performance compared with other two algorithms.
To tame the uncertainty of trajectory data collected in a wide spectrum of applications, we have developed effec-tive filtering and query processing techniques to support range search on uncertain trajectories which are modeled by Markov Chains. Particularly, we formally define the prob-lem of range search on uncertain trajectories. Then we in-troduce an indexing structure where the summaries of the segments are organized by an STA-tree, as well as a general framework to support range search on uncertain trajectories following the filtering and refinement paradigm. To enhance the filtering capabilities, we develop effective statistics based and partition based filtering techniques. Our comprehensive experiments demonstrate the superior performance of our new techniques compared with existing work.
 Acknowledgments. Ying Zhang is supported by ARC DE140100679 and DP130103245. Wenjie Zhang is supported by ARC DE120102144 and DP120104168. Xuemin Lin is supported by NSFC61232006, NSFC61021004, ARC DP1201-04168 and DP110102937.
