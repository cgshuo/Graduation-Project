 Given fixed budgets, companies attempt to obtain maximum coverage on a social network by targeting at influential in-dividuals. This viral marketing is often modeled by the in-dependent cascade model. However, identifying the most in-fluential people by computing influence spread is NP-hard, and various approximate algorithms are developed. In this paper, we emphasize the probabilistic nature of influence propagation. We propose to use exact probabilistic solutions and prove an inclusion-exclusion principle for computing in-fluence spread. Our probabilistic solutions can significantly speed up the computation of influence spread. We also give a probabilistic-additive incremental search strategy to solve the influence maximization problem, i.e., to find a subset of individuals that has the largest influence spread in the end. Experiments on real data sets demonstrated the effective-ness and efficiency of our methods.
 F.2.2 [ Analysis and Algorithms and Problem Com-plexity ]: Non-numerical Algorithms and Problems social influence, viral marketing, inclusion-exclusion theo-rem, probabilistic additive
Different from other marketin g strategies, viral marketing targets at a certain number of consumers at the beginning, and relies on communications and trust between individuals within close social networks [10] [11] to enlarge the social in-fluence. Nowadays, web 2.0 enables convenient communica-tions among people within or between different social circles through online social networks, such as Twitter, Facebook, Linkedin, and so on. They provide a large and facilitating platform for viral marketing strategies. Information or in-novations can propagate from a small number of individuals to a huge number of users of social networks in a short time.
Before companies can apply real viral marketing strategies on those online social networks, some challenges need to be addressed: (1) how to determine the edge weights between different users; (2) how to calculate the social influence given a set of activated nodes (seed set); (3) how to select the op-timal seed set, which has the maximum social influence, i.e., the number of activated nodes in the end is the largest. This problem is defined as influence maximization problem in [7]. In this paper, we concentrate to solve the second and third challenges. To address the problem of how to calculate the social influence given each seed set, we first need to present a social influence model defini ng how the propagation pro-ceeds under some circumstances. There are several influence models which have been proposed and studied, and the most popular ones are linear threshold model (LT) and indepen-dent cascade model (IC), which were presented by Kempe et al. in [7]. We study the influence propagation process under IC model in this paper. IC Model can be described as a stochastic process based on some probabilistic settings. For details, social network can be modeled as one graph G (
V,E ) with edge weights P . IC model starts with an ini-tial active seed node set; in the first step, those active nodes try to influence their inactivated out-bound neighbors with probability of the corresponding edge weights; each active node only has one chance to influence its each inactivated out-bound neighbor; in next step, the newly activated nodes continue to influence their own inactivated out-bound neigh-bors with one single chance to each neighbor; this process proceeds until no more inactivated nodes become activated.
Kempe et al[7] prov ed the influence max imization prob-lem under IC model is NP-hard. and Wei Chen et al [2] proved that calculating the influence spread of a seed set un-der IC model is NP-hard too. Kempe et al. applied Monte Carlo simulation to approximate the influence spread, which is time-consuming, because Monte Carlo simulation needs to be run at least thousands of times to reach a good approx-imation of the true influence spread. Therefore, as the first challenge, proposing an efficient approximation method to calculate the influence spread of a seed set is urgent. To that end, we present probabilistic solutions to calculate the influence spread under IC model and propose a probabilistic additive strategy to reuse the influence spread obtained in previous steps when calculating the optimal seed set using greedy methods. Our main contributions are: (1) We analyze exact solutions of small networks; one key finding from these analysis is the inclusion-exclusion prin-ciple which we prove vigorously. We further propose ex-act probabilistic solutio ns to influence spread for Directed Acyclic Graph (DAG) under IC model, which can be gener-alized to approximate the generic case of IC model. (2) We propose a probabilistic additive strategy to reuse the influence spread calculated in the previous steps when de-termining the optimal seed set using greedy methods, which speedup influence spread computation. (3) We also propose an incremental search strategy to con-tinue refining the seed set, which is first obtained by two greedy methods. After incremental search, the influence spread of the selected seed set is improved.
In the past decades, there has been a lot of research work studying and analyzing the different aspects of social influ-ence, we group these related work into three categories. The first category includes research work on influence models. The second category includes the related work on how to compute social influence spread. The third category focuses on solving the ultimate viral marketing goal -find a set of seed nodes those have the maximal social influence. Usually, the second and the third categories are solved together, but with different emphases.

For the first category, Domingos et al. [4] [12] first pro-posed to mine the customers X  network value, and then based on customers X  network value to solve the social influence maximization problem. Kempe et al. [7] first presented the two basic influence models -LT and IC model [6] [9]. Ag-garwal et al. proposed a stochastic information flow model to determine the authoritative individuals in [1], which is closely related to IC model. Other aspects of influence mod-els, such as the edge weights between individuals were also studied in [5]. Tang et al. [13] [14] proposed a Topical Factor Graph model to analyze social influence.

For the second and third categories, Kempe et al. [7] presented to use Monte Carlo Simulation to estimate the in-fluence spread for a given seed set, and proposed a greedy method to find a good seed set, which is not scalable to large scale networks, because Monte Carlo Simulation needs to be run at least tens of thousand times to get a good es-timation. Then many heuristic algorithms were introduced for the IC model. Kimura et al. proposed two influence cascade models based on shortest-path to approximate the influence spread of a seed set, and present algorithms to give good approximations to IC model for finding good seed sets [8]. Chen et al. proposed a heuristic algorithm using de-gree discount for a limited version of IC model, in which the edge wieghts/probabilities between any two connected individuals are the same in [3]. Chen et al. also proposed a maximum influence arborescence (MIA) heuristic model for the generic IC model in [2]. In MIA model, maximum influ-ence paths (MIP) between every pair of two nodes need to be pre-computed, and then based on these MIPs, local MIA structures can be formed. The algorithms introduced above are mostly heuristic methods. We are trying to present an exact solution on how to compute the influence spread given a seed set under IC model, which is very challenging. In this paper we first analyze the exact probabilistic solution to small networks and then we propose an probabilistic so-lution for DAG under IC model, which can be applied on directed graph to approximate the influence spread. We also present a probabilistic additive strategy to speed up the influence spread calculation when using greedy method to select the most influential seed set. In this section, we introduce the IC model.
 A social network can be represented by a directed graph G ( V,E ) with edge weight/probability P , i.e., P ( u, v )or in short denotes the propagation probability through edge ( u, v )  X  E from node u to node v . The total number of nodes in G is n = | V | .

Given an activated seed set S , the independent cascade model works as follows, S 0 = S is the activated node set at step 0, and S t denotes the activated node set at step t .Atstep t + 1, every newly activated node u in S t , i.e., activated neighbors v , which don X  X  belong to S t , i.e. { v | v )  X  ( v  X  V \ S t ) } with an independent probability P ( u, v The process stops when an equilibrium state is reached, i.e. there are no more nodes being activated in next prop-agation step. In independent cascade model, each node { u | u  X  S t ( t  X  0) } can only influence its out-bound neighbors once right after it is activated, and the activated nodes will stay activated ever after. Now, we are ready to define the influence spread of activated seed set S , denoted by  X  ( which is the number of activated nodes in the final step (in the stationary/equilibrium state).
As explained above, most current research on IC Model focused on developing efficient approximate algorithms to compute the influence propagation. Our focus here is to provide exact solutions. Due to the NP-hard complexity, we obtain exact solution on small networks. In this section, we give three small network examples to illustrate the exact influence propagation process. The three small networks are shown in Figure 1, where node 1 is the seed (shaded in green) in each case. We present the exact propagation solution for each network. These exact solutions can be extended to larger networks.

From these exact results we obtain two important benefits: (1) We learn the rules of adding contributions from dif-ferent path of influence propagation. At first glance, these contributions seems to be statistically independent .Butthe exact results show they may not be independent and why. This introduces the inclusion-exclusion principle we found useful in correctly enumerating contributions from different paths. (2) The rules we learned in this process are helpful to formulate an exact co mputat ional algorithm in  X  4. (3) Exact solutions obtained can be used to evaluate ap-proximate algorithms in previous studies [3, 8, 1, 15]. This may lead to refined methods to further improve these exist-ing approximate algorithms. Figure 2: Different stages of i nfluence propagation for a 3-node network in (a). Graphs (b),(c),(d),(e) are first stage results of seed node 1 attempting to influence nodes { 2 , with corresponding probabilities given. Thick red edges in-dicate the influence action. Thick circle means the node is successfully i nfluenced, also indicated by a number 1 or 0 underneath. From graph (c), node 2 tries to influence node 3; results are given in (f),(g).

For those networks, we assume that transition probabili-ties on the edges already exist and remain fixed during the influence propagation.
The IC influence propagation process for the 3-node net-work in Figure 1(a) can be illustrated in Figure 2.
We start with Figure 2(a), where node 1 is a seed node and thus always activated. The four networks of Figure 2(b, c, d, e) are the four possibilities of node 1 attempts to activate nodes 2 and 3. The 4 probabilities are indicated next to the arrow. For example the case where nodes 2 and 3 are both been successfully activated is shown in Figure 2(b), with probability P 12 P 13 .

The cases in Figure 2(b) and 2(e) are terminal, i.e., there are no further possibilities. In 2(c), node 2 (been success-fully activated by node 1) will attempt to activate node 3. The results are shown in Figure 2(f) and Figure 2(g) with the appropriate probabilities indicated next to the arrows. Similarly, in Figure 2(d), node 3 (been successfully activated by node 1 will attempt to activate node 2. The results are shown in Figure 2(h) and Figure 2(i) with the appropriate probabilities indicated next to the arrows
Now, we can compute the activation probabilities. Let X  X  consider node 2. There are 3 cases where node 2 becomes activated: (i) Figure 2(b) with probability P 12 P 13 . (ii) Figure 2(c) with probability P 12 (1  X  P 13 ). Note that this is equal to the sum of probabilities of Figure 2(f) and Figure 2(g). ability for the influence flow path to Figure 2(h) equals to the probability to reach Figure 2(d) multiplied by the prob-ability to further reach Figure 2(h).
 Therefore, by adding these 3 probabilities, the activation probability for node 2 is, Another way to compute  X  2 is by directly counting influence flow paths. First, node 2 can be influenced by node 1 di-rectly, with probability P 12 (this is the sum of probabilities of Fig.2(b),(c )). Second, If node 1 f ails to influence node 2, there is another path node 2 can be activated, which is illustrated by Figure 2(a)  X  2(d)  X  2(h). For this influence path the probability is (1  X  P 12 ) P 13 P 32 . Adding these two we get the same result in Eq.(1).
 Inclusion-exclusion . The above two counting methods rely on the detailed influence pr opagation stages shown in Figure 2. The result of Eq.(1) can be obtained without rely-ing on Figure 2. We com pute probabilities of different paths together with an inclusion-exclusion principle. For node 2, there are two paths: (i) 1  X  2, with probability P 1  X  2 = P 12 . (ii)1  X  3  X  2, with probability P 1  X  3  X  2 = P 13 P 32 . These two events are not independent because in (ii) we did not include the factor (1  X  P 12 ).

We use inclusion-exclusion principle to correct for over-counting, i.e., we set This gives the same result of Eq.(1).

For node 3, the probability can be calculated similarly,
Let us look at a more complicated case  X  the 4-node net-work of Figure 1(b). The IC influence propagation process is illustrated in Figure 3. The settings in Figure 3 are the same as those of Figure 2.
 We start with Figure 3(a), where node 1 is a seed node. The four networks of Figure 3(b, c, d, e) are the four possi-bilities of node 1 attempts to activate nodes 2 and 3. The 4 probabilities are indicated next to the arrow.

The cases in Figure 3(e, f, i, j) are terminal, i.e., there are no further possibilities. In Figure 3(b), node 2 and 3 (been successfully activated by node 1) will attempt to ac-tivate node 4. The successful result is shown in Figure 3(f) with the appropriate probabilities indicated next to the ar-rows, figures for failure results are not shown here. We will compute the activation probabilities by directly counting in-fluence flow paths, so the failure results will reach irrelevant terminal cases. In Figure 3(c), node 2 (been successfully Figure 3: Different stages of influence pro pagation from a 4-node network of (a). Node 1 is the seed. Symbols are same as Figure 2. From graph (c), node 2 attempts to influence node 4. Only successful result graph (g) is shown. Results of all unsuccessful attempts are skipped. activated by node 1) will attempt to activate node 4. The successful result is shown in Figure 3(g) with the appropriate probabilities indicated next to the arrows, and the failure re-sult will reach an irrelevant terminal case, so we didn X  X  show the figure here. In Figure 3(g), node 4 will attempt to acti-vate node 3. The successful result is shown in Figure 3(i). Similarly, in Figure 3(d), node 3 (been successfully activated by node 1 will attempt to activate node 4. The successful result is shown in Figure 2(h) with the appropriate proba-bilities indicated next to the arrows, while the failure result is not shown here. In Figure 3(h), node 4 will attempt to activate node 2. The successful result is shown in Figure 3(j).

Now, we compute the activation probabilities. We com-pute  X  2 by counting influence flow paths. For node 2, first, it can be influenced by node 1, with results given in Fig. 3(b, c). The corresponding probability is  X  (1) 2 = P 12 .
If node 1 fails to influence node 2, there is another path node 2 can be activated, which is illustrated by Figure 3(a)  X  3(d)  X  3(h)  X  3(j). For this influence path, the prob-ability is  X  (2) 2 =(1  X  P 12 ) P 13 P 34 P 42 . Adding these two we get the following result, We note again that we may directly compute the proba-P 13 P 34 P 42 and use inclusion-exclusion to correct for the non-independence to obtain Figure 4: First stages of influence propagation of the 5-node network. Node 1 is the seed. Symbols are same as in Figure 2. which gives the same result.

For node 3, the probability can be calculated symmetri-cally,
For node 4, it can be activated by (i) node 2 only, shown in Figure 3(g); (ii) node 3 only, shown in Figure 3(h); (iii) nodes 2 and 3 simultaneously, shown in Figure 3(f). The total activation probability for node 4 is Once again, this results can be derived using the inclusion-exclusion principle mentioned above, without counting de-tailed influence propagation stages in Figure 3.
As the last example, we compute activation probabilities for the 5-node network in Figure 1(c). The first stages of node 1 attempts to influence nodes 2,3 are shown in Figure 4(b,c,d).

Let us compute the activation probability for node 2. The contributions are shown in graphs Fig.4(b,c,d). The contri-butions of Fig.4(b,c) is P 12 .
 The contribution of Fig.4(d) is computed as the following. The probability to reach Fig.4(d) is (1  X  P 12 ) P 13 .Starting from Fig.4(d), we may ignore node 1 and consider the re-maining network with nodes { 2 , 3 , 4 , 5 } , and node 3 is acti-vated. This situation is identical to Figure 3, and we need to compute  X  2 . Following the results of Eq.(5), we obtain The contribution to node 2 of Fig.4(d) is a result of com-bining two paths 3  X  2and3  X  5  X  4  X  2withthe inclusion-exclusion principle. Therefore the final score for node 2 is  X 
Now we compute activation probability for node 4. It can be activated by the following 3 paths: (1) Starting from the situation in Figure 4(b) and activate node 4; (2) Starting from the situation in Figure 4(c) and activate node 4; This is the same as the 4-node graph in Figure 3 and the node of interest is node 2. (3) Starting from the situation in Figure 4(d) and activate node 4; This is the same as the 4-node graph in Figure 3 and the node of interest is node 4.
 The total probability for node 4 being activated is
We note that the 5-node network in Figure 1(c) includes both the 3-node network and the 4-node network cases, for example, 5-node network results become the results of the 3-node network, when P 24 = P 35 = P 54 = P 42 = P 53 = P 45 =0;when P 54 = P 45 = 1, the results become those of the 4-node network.

When it comes to much more complicated large-scale net-work, the exact propagation solution is hard to derive. It X  X  an exponential growth case along the number of nodes in V Therefore, in this paper, we propose an approximation solu-tion to IC model, which is exact solution for directed acyclic graph (DAG) and approximation solution for generic graphs. The exact solution for generic case is under development.
The lessons we learned in previous section on exact so-lution are useful. One of the most important lessons is the inclusion-exclusion principle that we briefly mentioned in Here we formalize the concept and prove it vigorously.
Let  X  v (0  X   X  v  X  1) denote the activation probability for each node { v | v  X  V \ S 0 } , which means to what extent activated.

We have the following Theorem, which is called inclusion-exclusion theorem,
Theorem 1. Given fixed seed set S and edge weights P , for every non-seed node v and its in-bound neighbors N v = ( u 1 ,  X  X  X  ,u k ) , i.e., N v = { u i | u i v } ,  X  v , the stationary probability of v being activated, is related to {  X  u i } ary probabilities of its in-bound neighbors, with the following relationship,
To better understand this result, we compare it to a sim-pler model of random walk. In this random-walk model, all neighbors of v can activate v any time it walks towards v In this model, the activated probability would be
In contrast to the random walk model, in the IC model, any actor can only attempt to affect v once .Thustheacti-vation probability in IC model is lower than that in random walk model. Comparing Eq.(9) and Eq.(10), we see that the reduction from random walk model to IC model are the second term and later terms in Eq.(9). They are exactly the inclusion-exclusion principle.
 Figure 5 illustrates the propagation process of IC model. In this figure, node v is the target node. Its in-bound neigh-bors N v = { u 1 ,  X  X  X  ,u k } attempts to influence it. Suppose there is only one activated neighbor u 1 in step 1, then u tries to influence v .If u 1 fails to influence v in step 1, then newly activated u 2 tries to activate v in step 2. If u 2 to influence v in step 2, then newly activated u 3 tries to activate v in step 3, and so on so forth.
 Proof of Theorem 1
To simplify the notations, we define  X  u i =  X  u i P u i v Step 1 : The probability that v is activated by u 1 is Step 2 :If u 1 failed to activate v in step 1, the failure prob-ability is 1  X   X  (1) v .Now u 2 attempts to influence v ; the prob-ability that u 2 succeed in this is  X  u 2 P u 2 v =  X  u 2 the conditional probability that u 1 failed but u 2 succeed in activating v is (1  X   X  (1) v )  X  u 2 . This should be added to the total probability that v becomes activated. Thus Step 3 :Now u 3 attempts to activate v under the condition that neither u 1 nor u 2 activated v . The probability that u 3 succeed in this is  X  u 3 P u 3 v =  X  u 3 ; The probability that neither u 1 nor u 2 activated v is 1  X   X  (2) v . Therefore, the conditional probability that u 1 ,u 2 failed but u 3 succeed in activating v is (1  X   X  (2) v )  X  u 3 . This should be added to the total probability that v becomes activated. Thus Using induction, we can include the value of  X  v in step k. Step k :Now u k attempts to activate v under the condition that none of v  X  X  previous in-neighbors activated v . The total probability that v becomes activated is,  X  This completes the proof.
Based on the inclusion-exclusion theorem, we can get the following Lemma, w Figure 5: Illustration of the propagation process of IC model: v is the target node
Lemma 2. Given a single node v  X  X  in-bound neighbors { u i | u i v } and edge weights P , to calculate the proba-bility that node v becomes activated, we have the following iterative update equation,
Thus, now we can present the algorithm to compute the activation probability of single node v in the following,
Now we are ready to describe the algorithm to compute activation probability on entire network. Given fixed seed set S and edge weights P , the activation probability to IC model for each node v can be represented in the following, which can be obtained by the following updating strategy, where  X  N v denotes a vector whose elements are the activa-tion probabilities of v  X  X  in-bound neighbors. where, F (  X  ) denotes a function, which is represented in Eq.(15).
The detailed algorithm for computing activation probabil-ities for all nodes V is given in Algorithm 2, where  X  denotes the activation probability vector whose elements are activa-tion probabilities for all nodes.
Let X  X  consider the 3-node undirected network in Figure 1(a) and the IC propagation process given seed set { 1 } for this network in Figure 2, suppose  X   X  2 and  X   X  3 are the prob-abilities that node 2 and node 3 are activated, respectively, they have exact solution in the following, However, if we solve this propagation problem using Inclusion-Exclusion Theorem,  X   X  2 and  X   X  3 have the following relation-ship, By solving the above binary linear equation group, we get the following solution, We note that the numerator in Eq.(21) is the same with that of Eq.(18) and the numerator in Eq.(22) is the same with that of Eq.(19). The denominators are apparently both less than 1; this indicates the Inclusion-Exclusion Theorem over-counts the influence for non-DAG network. However, experiments show that the results using Inclusion-Exclusion Theorem is very close to those using Monte Carlo simulation on real world networks.
To this end, we can define the objective function of max-imizing the social influence as follows, where, m is the size of seed set. We will present an proba-bilistic additive strategy to solve the above social influence maximization problem using greedy methods.
As discussed above, influence maximization is to deter-mine m activated seeds at the beginning of the information propagation, in order to maxim ize the social influence in Algorithm 2: Activation probability on entire network the end. We first propose an probabilistic additive strategy and two greedy methods, then based on these two greedy methods, another efficient incremental search strategy will be introduced.
The basic idea is to select each node v i as a single seed, i.e., S = { v i } , and then compute the stationary activation probability using Algorithm 2 for all the other nodes { u | u/  X  S } .Welet  X  { i } denote the stationary activation probability for every node when v i is selected as the seed node. Let B = (  X  matrix B are all 1. After getting every stationary activation probability vector in B , we calculate the influence spread of each node, denoted by  X  ( v i ), which is the sum of  X  { i following Algorithm 3 describes the detailed process on how to calculate B .

Algorithm 3: Computing stationary activation proba-bility vector when each node is selected as the seed node
After we get the social influence spread for each node be-ing seed node, we sort the influence spread scores in de-scending order, i.e.,  X  ( v 1 ) &gt; X  ( v 2 ) &gt;  X  X  X  &gt; X  select the top m nodes with largest influence scores as the initialization seed set S .

Greedy method 1 is based on our inclusion-exclusion the-orem, and it X  X  much faster than greedy method using Monte Carlo Simulation, which needs at least thousands of simula-tions even for calculating the influence score of each v i mention the entire stationary activation probability matrix B . We will present the time needed for both methods in the experiment section.
Before presenting Greedy Method 2, we first introduce a probabilistic additive strategy when adding more nodes to a current seed set.
Suppose we have a current seed set S c and its activation probability vector  X  S c , calculated by Algorithm 2, and now we are going to add v i to the current seed set, note, v  X  X  activation probability vector  X  { i } can be get from matrix B . We have the following definition,
Definition 1. Probabilistic Additive of vector  X  S c and  X  is defined as follows,  X  where .  X  means element wise multiplication. Similarly, Prob-abilistic Additi ve of m vectorsisdefinedasfollows,  X  where  X  also means element wise multiplication.

We can use the Probabilistic Additive of each node in S  X   X  X  i | i  X  S } as the initialization when calculating the activation probability for entire network using Algorithm 2 with seed set S , which is much faster than 0 or 1 initialization used in Algorithm 2.

As Greedy Method 1 did, Greedy Method 2 first uses algo-rithm 3 to calculate the stationary probability distribution matrix B , and then calculate influence score for each node  X  ( v i ). Different with Greedy Method 1, Greedy Method 2 adds only one node to seed set at a time, which is described in the following, (1) Add node i 1 with the largest influence score to seed set S 1 , S 1 = { i 1 } , and the activation probability vector is  X  (2) Add node i 2 , which can lead to the largest influence score of seed set S 2 , S 2 = S 1  X  X  i 2 } = { i 1 ,i 2 } probabilistic additive of  X  S 1 and  X  { i 2 } to initialize calculating the activation probability vector for S 2 using Al-(3) Repeat the above process until we need to add node i , and node i m should lead to the largest influence score of seed set S m , S m = S m  X  1  X  X  i m } = { i 1 ,  X  X  X  ,i  X  0 when calculating the activation probability vector for
In this way, we get another seed set S . Togetabetter seed set, we do Incremental Search starting from the seed sets calculated from both greedy methods.
After we get an initialization seed set by those two greedy methods introduced in last section, we want to keep digging more efficient seed set by replacing the nodes those have least contribution in the current seed set to the final influence score.

First, we give two important procedures, add k node to current seed set S c and drop k node from S c ,whichare listed in Algorithm 4 and Algorithm 5, respectively. For k we normally choose k =1 , 2 , 3.

Now, we are ready to present the incremental search strat-egy in Algorithm 6,
After using incremental search on seed set obtained from greedy methods, we get a seed set with larger influence sore. To validate the performance of our Inclusion-Exclusion Theorem, we conduct experiments on real data sets to com-pare the results using Inclusion-Exclusion Theorem (Algo-rithm 2) and that of using Monte Carlo Simulation. We also conduct experiments on real world data sets to compare the influence spread of seed set get from our incremental search strategy with those of seed sets get from various algorithms. We use two real world data sets -p2p-Gnutella08 and wiki-Vote, which are two directed networks, and downloaded from SNAP 1 . Table 1 lists the detailed information of these two data sets. p2p-Gnutella08 is a snapshot of Gnutella peer-to-peer file sharing network from August 2002. Nodes represent hosts in the Gnutella network topology and edges represent con-nections between the Gnutella hosts. We call this network p2p in this paper.

Wiki-Vote contains the Wikipedia voting data from the inception of Wikipedia till January 2008. Nodes in the net-work represent wikipedia users and a directed edge from node i to node j represents that user i votedonuser j .
We also generate one subgraph from p2p-Gnutella08, which has 223 nodes and 954 edges. We call this subgraph p2p-223.
There are three parts for our experiments. One is to ver-ify that given a seed set S , the influence spread score  X  using our Inclusion-Exclusion Theorem is almost the same with the average score of running Monte Carlo Simulation for thousands of times. The second part is to present the time needed to compute the influence spread given a set of seed nodes using Algorithm 2 based on Inclusion-Exclusion http://snap.stanford.edu Theorem, comparing with that of Monte-Carlo Simulations [7]. The last part is to compare the social influence of seed sets selected by our incremental strategies with those of seed sets selected by other methods. We compare the following set of algorithms. (1) Random selection: select m nodes randomly from V as the seed nodes. (2) Degree selection: select m nodes with the largest out-degree as the seed nodes. (3) Distance selection: select m nodes with smallest average shortest-path distances to all other nodes as the seed nodes. (4) Incremental search 1: it X  X  a combination of greedy method 1 and incremental search. (5) Incremental search 2: it X  X  a combination of greedy method 2 and incremental search. Note, for all the above 5 methods, we apply our Algorithm 2 to compute the influence spread for the entire network for a given seed set. And edge weight P remains fixed for the same data set. The experiments are run on a PC with a 3.0GHz Intel Core 2 Duo Processor and 12GB memory.
As discussed in last section, first, we present the influence spread (activation probability for each node) comparison be-tween IC Monte Carlo Simulation and Inclusion-Exclusion Theorem (Algorithm 2), to verify the effectiveness of Inclusion-Exclusion Theorem in approximating the influence spread for entire network. For demonstration purpose, we first present the results for each node on p2p-223 subgraph. We randomly selected 10 nodes as seed nodes. The results from Monte-Carlo Simulations are the average of 20000 simula-tions/realizations. Edge weight P is fixed for both meth-ods. The activation probabilities for each node from two methods are shown in Figure 6. There are 223 nodes and 954 edges on p2p-223 network, and we omit the nodes with activation probability 0, which left us less than 90 nodes presented in the figure. For convenient comparison, we sort the activation probabilities of Monte Carlo Simulations, and present their corresponding activation probabilities calcu-lated by Inclusion-Exclusion Theorem. Apparently, the two Figure 6: Activation probability comparison between IC Monte Carlo Simulation and Inclusion-Exclusion Theorem Table 2: Mean squared errors (MSE) and mean absolute errors (MAE) between the two activation probability vec-tors achieved Inclusion-Exclusion Theorem and Monte Carlo simulation on p2p-223 network curves from these two methods almost coincide with each other.

We then present more comparisons between activation probabilities achieved by applying Monte Carlo simulation and those achieved by Inclusion-Exclusion Theorem. Figure 7 shows the influence spreads by those two methods at dif-ferent sizes of the same seed set -m = { 10 , 20 , 30 , 40 on the three data sets -p2p-223, p2p and wiki-Vote. The influence spreads are almost the same on p2p-223 subgraph, and are very close on p2p and wiki-Vote data sets. As shown on the figures, the altitudes of the histogram at the same are almost the same for those two methods. We also show the mean squared errors (MSE) and mean absolute errors (MAE) between two activation probability vectors achieved by those two methods. Table 2, 3 and 4 show the MSE and MAE results at m = { 20 , 30 , 40 , 50 } (results at m =10are omitted due space limit) on the three data sets mentioned above, which demonstrate that the two vectors are almost the same when given the same seed set, i.e., the approxi-mate results achieved by Inclusion-Exclusion Theorem are effective for generic graphs.

Second, we compare the time needed to compute the in-fluence spread given different sizes of seed sets. Table 5 and Table 6 list the time needed for both Inclusion-Exclusion Theorem and Monte Carlo Simulation on two data sets -Table 3: Mean squared errors (MSE) and mean absolute errors (MAE) between the two activation probability vec-tors achieved Inclusion-Exclusion Theorem and Monte Carlo simulation on p2p network Table 4: Mean squared errors (MSE) and mean absolute errors (MAE) between the two activation probability vec-tors achieved Inclusion-Exclusion Theorem and Monte Carlo simulation on wiki-Vote network Table 5: Time (sec) needed to compute the influence spread given different sizes of seed sets m on p2p-223 network
Monte Carlo Simulation p2p-223 and p2p, at different m ,where m denotes the num-ber of seed nodes selected. And at the same m ,thesame seed set is selected for both methods. Let X  X  look at Table 6, when m = 50, the time for Inclusion-Exclusion Theo-rem is just 2.8450 seconds, while Monte Carlo Simulation needs 36945.6 seconds for 20000 realizations. So the time for Inclusion-Exclusion Theorem is competitive with that of just one time Monte Carlo Simulation, however, Monte Carlo Simulations need thousands of times simulations to reach a steady solution. Therefore, our probabilistic solu-tions speed up the computation of influence spread, espe-cially on large data sets, which make greedy methods to viral marketing scalable to large data sets.

Last but not least, we apply our incremental search method 1 and incremental search method 2 to select the largest in-fluential nodes (seed set), and compare the influence spread for the seed set selected by our methods with three simple heuristic methods. The results on 3 data sets are shown in Figure 8. Our methods outperform the other methods significantly. The point is that once we get the activation probability matrix B , a lot of recalculation can be omitted by combining our proposed probabilistic additive strategy.
In this paper, we propose probabilistic solutions to the computation of influence spread under IC model. We show that our probabilistic solutions can significantly speed up the computation of influence spread. We also give a probabilis-tic additive based incremental search strategy to solve the influence maximization problem. Experiments on real data sets demonstrate the effectiveness of our probabilistic solu-tions and incremental search strategy. There are limitations for our probabilistic solutions, which are targeting at DAG network. But experiments on real data sets with non-DAG structures show that our method can provide good approx-Table 6: Time (sec) needed to compute the influence spread given different sizes of seed sets m on p2p network
Monte Carlo Simulation seed sets imation to directed graph. We will develop more accurate probabilistic solutions for IC model in the future work. Acknowledgements . This work is partially supported by U.S. NSF-CCF-0917274, NSF-DMS-0915228, and Research Innovation Project of Shanghai Municipal Educational Com-mission (NO. 12YZ190).
