 1. Introduction mation systems has demanded the development of more intelligent vehicles. One such intelligence is the possibility to evaluate the driving danger-level to prevent potential driving risks. Although protocols to measure the driver X  X  workload have been developed by both the government and industry ( D.o.T
National Heigway Traffic Safety Administration, 2000 ), such as eye-glance and on-road metrics, they have been criticized as too costly and difficult to obtain. In addition, existing uniform heuristics such as the 15-second for total risk time, do not account for the changes in individual driver X  X  and vehicle X  X  environment ( D.o.T National Heigway Traffic Safety Administra-tion, 2000 ). Hence understanding the driver X  X  and the vehicle X  X  current state to prevent potential driving risks has been listed as one of the key areas by many international companies. 1.1. Related work effective physiological and bio-b ehavioral measures to detect the diminished driver vigilance level due to stress, fatigue or drowsiness to prevent potential risks. The most accurate techniques for monitoring human vigilance level is based on physiological features ( Bergasa et al., 2006 ) like brain waves, heart rate, blood volume pulse and respiration. Examples based on physiological measure include the ASV (advanced safety vehicle) system ( Kircher et al., 2002 )andtheSmartCarproject( Healey and Picard, 2000, 2005 ).
However, acquiring physiological data is intrusive because some electrodes or sensors must be attached to the drivers. Good results have also been reported with techniques that monitor pupil response, eye blinking/closure/gaze and eyelid/face/head movement using head-mounted devices ( Anon, 1999 ). These techniques, though less intrusive, are still not practically acceptable. Besides, the different characteristics between different subjects X  physiological signal make it very difficult to obtain a generic recognition model ( Wang and Gong, 2008, 2009 ).
 system, two sets of features are available. The first is to monitor the drivers X  visual behavior using remote camera(s) and apply computer vision techniques to extract features that are correlated to their fatigue state ( Matsumoto and Zelinsky, 2000; Victor and
Zelinsky, 2001; Boverie et al., 1998; Shih et al., 2000; Ji and Yang, 2002 ). For example, the driver X  X  head pose and face direction were recognized from multiple camera using 3D stereo matching ( Matsumoto and Zelinsky, 2000; Victor and Zelinsky, 2001 )or from single camera using template matching ( Boverie et al., 1998 ). A robust head/eye tracking system using single camera is presented in Boverie et al. (1998) to monitor driver X  X  drowsiness level. To cope with different lighting condition, infrared LED was used for illumination ( Shih et al., 2000; Ji and Yang, 2002 ). To reduce uncertainty or ambiguity from single visual cue, multiple visual features could be utilized to improve accuracy and reliability ( Ji and Yang, 2002; Awake consortium, 2004 ).
However, the systems relying on visual cues may exhibit difficulty when the required visual features cannot be acquired accurately and reliably. For instance, drivers with sun glasses could pose serious problem to those techniques based on detecting eye characteristics. Hence another set of non-intrusive features based on the vehicle X  X  dynamic state have been examined ( Kircher et al., 2002; Ueno et al., 1994 ). The vehicle X  X  dynamic parameters include lateral position, steering wheel movement, throttle acceleration/break deceleration, etc., and are a more direct reflection of the driving state, while researches focusing on modeling driver X  X  vigilance have assumed the close correlation between fatigue/stress and driving danger. Some important examples include the Spanish TCD (Tech. Co. Driver) project ( Soria, 2002 ) and the ASV system ( Kircher et al., 2002 ). In this paper, we will demonstrate that when the vehicle dynamic parameter feature is available, it can serve as a very informative feature for driving danger-level prediction in a real-time system.
On the other hand, from a pattern recognition point of view, the task of predicting driving danger-level can be regarded as an anomaly detection problem. In simple scenario, the rule-based methods can be used where any violation of the rule(s) is regarded as an anomaly. For example, Wong et al. (2002) used a complicated rule-based approach to characterize the anomalous pattern for disease outbreak detection. For more complex anomaly detection task such as driver danger-level prediction, defining rules becomes extreme difficult. Hence many other re-searches applied statistical modeling methods for anomaly detec-tion ( Healey and Picard, 2000, 2005; Singliar and Hauskrecht, 2006; Ji et al., 2004 ). For example, in Healey and Picard (2000, 2005) , Fisher projection and linear classifier was used to model the low/medium/high stress level using physiological features. In Singliar and Hauskrecht (2006) , a binary SVM was trained to classify the incoming data as normal or anomalous. To further model the spatial correlation between different features, in Ji et al. (2004) , a Bayesian Network was used to fuse different features for inference. However, these methods did not consider the temporal correlations between features, and hence they could not be used for prediction purpose. Zhou et al. (2007) applied the Gaussian field to propagate information between neighboring states for driving anomalous prediction. However, the method requires lengthy training process. In this paper, we systematically formu-late the problem as a sequential supervised learning problem, and modified/evaluated several algorithms for driving risk prediction. Our result shows that the reinforcement learning (RL) algorithm achieves best prediction accuracy. 1.2. Contributions of the paper
Compared with existing work on driver danger monitoring, the main contributions presented in this paper include: 1. We examined three sets of features for the driver danger-level prediction task, specifically the driver X  X  physiological data (DPD), the driver X  X  visual behavior (DVB), and the vehicle X  X  dynamic parameter (VDP) feature. Cross-validation results showed that using the VDP alone achieved satisfactory prediction accuracy.
Due to the non-intrusive nature of VDP, such result is very desirable for a real-world system. In addition, combining the other two features furthe r improved performance. 2. We evaluated three types of sequential supervised learning algorithms for driver risk prediction, specifically the hidden
Markov model (HMM), the conditional random field (CRF), and the RL. The RL algorithm gave the highest prediction accuracy amongst all the three methods in cross-validation. In addition, the RL algorithm models the temporal interactions between both nearby and faraway samples in a trained function, such that during prediction, any coming data can be converted into a numerical danger-level score without looking at previous data, while HMM and CRF both need at least one minute of history for prediction. This is very preferable for a live, lightweight in-vehicle prediction system. 3. We have built a prototype system that uses only the vehicle X  X  dynamic parameters to perform real-time driving danger-level prediction. Subjective on-line test were conducted, and very positive feedback were obtained.

The rest of the paper is organized as follows: Section 2 explains the data acquisition protocol for the research; Section 3 compares three sequential supervised learning algorithms for danger-level prediction. The effectiveness of each algorithm is examined in Section 4, and Section 6 concludes the research and also discusses some future work. 2. Data acquisition
As introduced in Section 1, three types of features are commonly used for the driving safety monitoring, including the DPD, the DVB and the VDP. All the three types of features are collected in our research. The following subsections explain our data acquisition methods for each feature. 2.1. Driver X  X  physiological data (DPD) We used a physiological sensing system called  X  X  X lexComp Infiniti X  X  to connect five sensors to the driver ( Fig. 1 a) and recorded the sensor readings at the terminal in a continuous way. The DPD data are collected at 32 samples per second, each sample is in R Table 1 lists the physical meanings of each dimension of DPD. 2.2. Driver X  X  visual behavior (DVB) Out study used a hardware device called  X  X  X ye Alert Fatigue Warning System X  X  to collect the eye closure information ( Fig. 1 b) as the DVB feature. Our obtained DVB feature is an R 6 stream with five samples per second. Table 2 gives the meaning of each dimension of DVB. 2.3. Vehicle X  X  dynamic parameters (VDP)
In our study, the VDP is collected from a driving simulator called  X  X  X TISIM X  X . STISIM is a PC based interactive driving simulator that allows the user to control almost all aspects of driving such as throttling, breaking and steering ( Fig. 1 c). The driving scenario, including weather, road condition, traffic light/sign, pedestrian, buildings and so on, was carefully designed by professionals to make the simulation as close to reality as possible. During simulation,  X  X  X TISIM X  X  outputs several parameters simultaneously at 30fps. These parameters are captured as the VDP feature in R Table 3 lists the seven selected parameters. 2.4. Deriving statistical features
The raw DPD, DVB and VDP data stream are of different sample rate. To convert them into a synchronized sequence of feature vectors for modeling, three sliding windows are applied on each raw feature stream, respectively. The three sliding windows all have length T w and step size T s ( Fig. 2 a). The raw data samples covered by the sliding window is converted into one single feature vector x , and therefore three synchronized sequences of feature vectors can be generated.

X 1  X  X  x 1 ; x 2 ; ... ; x t ; ... ; x T 1 , X 2 for DVB, and X
These feature sequences are of the same length, hence their elements can be concatenated to form a super-vector as used in the later discussion. The process to convert the raw data in each sliding window into a feature vector x t , t =1, y , T is as follows: denoting each R n raw data sample as f , we first calculate its first-order forward difference D f  X  f t  X  1 f t , square f 2 , and first-order forward difference of square D f 2 . Then we concatenate them R 4 n . Next, denoting those f  X  X  covered by sliding window t as average and standard deviation of each row of F t . Finally, these statistics are concatenated together to form the feature vector by x t  X  X  max  X  F t  X  ; min  X  F t  X  ; mean  X  F t  X  ; std  X  F uses sequential supervised learning algorithms to mine the specific patterns for the driving risk prediction task. 3. Sequential supervised learning dangerous landing from continuous sensor readings can be regarded as a supervised learning problem. In addition, it is believed that any dangerous situation, e.g., crash, is caused by a sequence of actions rather than a single one. Hence there exists both short-term and long-term interactions between features, and thus the danger-level prediction problem can be better modeled as a sequential supervised learning problem. There are many algorithms that are suitable for the problem, such as recurrent sliding windows, maximum entropy Markov models, etc. In this paper, we evaluated three algorithms: HMM, CRF, and RL, as described in the following subsections. 3.1. Hidden Markov model generative patterns of any single hidden state as well as the temporal transition patterns across different states, and has been proved robust and accurate for many tasks ( Petrushin, 2000 ). The HMM classifier works in the following manner ( Petrushin, sequence X  X  X  x 1 ; x 2 ; ... ; x T , and an HMM with parameter Y , the likelihood of X with respect to the HMM expands as p  X  X j Y  X  and p  X  X j Y  X  X  where p  X  X ; Q j Y  X  X  p  X  X j Q ; Y  X  p  X  Q j Y  X  X  Bayes  X  :  X  2  X 
We have p  X  X j Q ; Y  X  X  and p  X  Q j Y  X  X  p  X  q 1  X  s i  X  where Q  X  X  q 1 ; q 2 ; ... ; q T is a (hidden) state sequence with each q i A S , and p i  X  p  X  q 1  X  s i  X  is the prior probabilities of s first state of a state sequence. a q t q t 1  X  p  X  q t j q transition probabilities to go from state q t 1 to state q the emission probabilities. b q t x t is modeled by Gaussian mixture model.

To apply HMM for our problem, we trained two HMMs, Y safe for the safe class and Y dangerous for the dangerous class, respec-tively. To obtain training samples, we decompose the feature sequences X into multiple non-overlapping segments. Each segment is one minute long. These segments are extracted in such a way that they end with either an accident or a non-accident state, and no accidents occur at the start or middle of any segments. Those segments ended with an accident state are used to train Y dangerous , and the rest to train Y safe . There are many efficiently training algorithms such as the forward X  X ackward algorithm and the Baldi X  X hauvin algorithm. In our implementa-tion, the forward X  X ackward algorithm was applied for training ( Murphy ). An obtained HMM Y includes the learned emission probability b q t x t , the state transition probability a prior of each state p i .

During the danger-level prediction phase, the HMM method takes one minute long history of feature sequence segment to compute a numerical danger-level score DL . Denoting the feature segment as X t , the danger-level score is computed as the logarithm likelihood of X t being generated by the dangerous HMM over that by the safe HMM: DL  X  X t  X  X  log  X  p  X  X t j Y dangerous  X  X  log  X  p  X  X t j Y
Ideally, the danger-level DL during driving should remain constant for most of the time, and drop before instances of danger. Fig. 3 shows a computed danger-level curve for a 21 minutes long sequence. There are seven computed dangerous points as indicated by red circles. Playing back the original driving session, it was found that 4 out of the 7 points were crashes, and the rests were also dangerous situations such as sudden break, close to pedestrian, etc.

However, as a generative model, each observed x n in HMM only conditions on the state q n , while the transition probability of states p  X  Q j Y  X  is independent of the observation X . Hence HMM imposes strong assumptions on the independence amongst the observed features x , which our collected features for danger-level prediction may not follow. To overcome this limitation, several improved models such as maximum entropy Markov model (MEMM), input/output HMM (IOHMM) and CRF were introduced. MEMM and IOHMM have the so-called label bias problem , hence f f f
 X  f
 X  f
Danger Level the next subsection evaluates the CRF algorithm for our danger-level prediction task. 3.2. Conditional random field adjacent state q conditions on the observed features. Specifically,
CRF models the relationship among q t 1 and q t as an Markov random field (MRF) conditioned on the observation X . In other words, the CRF is represented by a set of potentials M t  X  q
 X  defined as M t  X  q t 1 ; q t j x t  X  X  exp where the f a are boolean features that encode some information about q t 1 , q t and arbitrary information about x t , and the g boolean features that encode some information about q t and x and l b are the weight of different potential functions, and they were both set to 1 in our implementation.
 according to P  X  X j Q ; Y  X  X  where q 0 =0 and q T +1 = T +1. M t ( x t ) denotes the  X  T  X  2  X  X  T  X  2  X  matrix of potentials for all possible pairs of labels for q .

The denominator in Eq. (7) is the (0, T +1) entry in the matrix product of the M t potential matrices.
 only { s 1 = dangerous , s 2 = safe } two states. Similar to the previous subsection, we decomposed the feature sequences into multiple one-minute-long segments for training. Gradient descent based method was adopted for parameter learning ( Schmidt et al. ). of feature sequence segment to compute the danger-level score by
DL  X  X t  X  X  log  X  P  X  q t  X  s 1 j X t ; Y  X  X  log  X  P  X  q t sequence as that used in Fig. 3 . 3.3. Reinforcement learning planning and sequential decision making problems under un-certainty. It draws on the theory of function approximation, dynamic programming, and iterative optimization ( Bertsekas and
Tsitsiklis, 1996 ). More importantly, RL combines both dynamic programming and supervised learning to successfully solve problems that neither discipline can address individually ( Harmon and Harmon, 2000 ).
 DL t * should satisfy Bellman X  X  (1957) equation
DL t  X  min the system will collapse from the current state x t . If we assume that the transition from state x t 1 to x t incurs a reward r ( x then DL ( x t ) should satisfy Bellman X  X  (1957) equation
DL  X  x t  X  X  min there are K training feature segments, denoted as X i , i  X  1 ; ... ; K and each X i contains T i feature vectors. For a single trajectory DL * ( x t i ) and according to Eq. (10), we have DL  X  x i n  X  X  where R i is the penalty/reward given at the end of the i th trajectory. Now the approximated value function can be obtained by solving a least square optimization problem where Y  X  argmin incremental gradient method. In our implementation, one trajectory is considered for each iteration, and Y is updated iteratively by D Y  X  g where  X  x 1 ; x 2 ; ... ; x T i is a segment, r Y DL  X  x i differentiation with respect to Y , and g is a step size. By taking Eq. (11) into Eq. (13), D Y can be rewritten as D Y  X  g where the quantities d s is called temporal difference and is defined as d s  X  r  X  x s 1 ; x s  X  X  DL  X  x s ; Y  X  DL  X  x s 1 ; Y  X  :  X  15  X  of DL  X  x s ; Y  X  , is more likely to be correct because it is closer to DL  X  x T i ; Y  X  .
 or how much the estimate Y should be increased or decreased.
Usually d s in Eq. (15) is multiplied by a weight l s t ,0 r l r 1to decrease the influence of farther temporal difference on r Y DL  X  x i t ; Y  X  . Hence Eq. (14) is rewritten as D Y  X  g function, DL  X  x t  X  X  x t Y ;  X  17  X  and for a non-linear danger-level function, we use DL  X  x n  X  X  which is a weighted summation of several RBF functions.
Fig. 5 gives an generated danger-level curve for the same sequence used in Fig. 3 . More dangerous situations were identified in Fig. 5 as compared to Figs. 3 and 4 , and the curve is more dynamic which shows that the RL based method is more sensitive to the input ( Fig. 5 ). 4. Experimental results
During the experiment, we invited 14 participants to drive on our  X  X  X TISIM X  X  simulator. Each subject played 2 X 3 sessions, and 40 sessions were conducted in total. All participants received a training session before real data collection to get familiar with the simulator. Each simulation session last around 20 minutes. The driver X  X  physiological data, visual behavior features and vehicle dynamic parameters were recorded and synchronized.
 We compared the danger-level prediction performance of the HMM, CRF and RL method using leave-one-out cross-validation strategy: the driving sessions from the same driver were left out in each trial for validation, and th e remaining sessions were used for training. In each iteration, the validation data were fed to the trained model sequentially to generate a continuous danger-level curve. We arbitrarily defined an interval T 1 before each logged crash instance, and regard this interval as the ground-truth dangerous time. In this way the set of ground-truth dangerous instances T r can be defined. It is observed that, in a 20 minutes driving course, the real dangerous instances only takes a very small portion of the whole session. For instance, each session contains averagely five crashes, and accordingly the total dangerous instances T r adds up to 50 X 100 seconds when T is set to 10 seconds. These instances takes up only 4.17 X 8.33% of the whole driving session. Hence, it is appropriate to adopt a relative measure to examine how much the system can improve over random guess. To elaborate, define a threshold T 2 where the set of predicted dangerous instances can be represented by T p  X f t j DL  X  x call the ratio between j T p j and the session length as sensitivity ranging from (0,0.2]. A precisio n score can then be calculated as
Different feature combinations were examined. As our ulti-mate goal is a real-time non-intrusive system, the combinations with VDP were given priority because it is both non-intrusive and sensitive to driving state change. This section reports the performance by the combination of DPD+DVB+VDP, DPD+VDP and VDP along in Fig. 6 , while the rest combinations did not present noticeable improvement over random guess. In each plot of Fig. 6 , the Y -axis represents the ratio between prediction accuracy and random guess, and the X -axis is the sensitivity o . Fig. 6 can be interpreted as follows: when T 2 is large, i.e., j T small, only instances that lead to peak danger-level scores are counted as predicted danger. The predicted dangerous instances mostly fall into the ground-truth dangerous period defined by T and the precision score is 3 X 4 times higher than random guess. As T 2 decrease, j T p j will increase, and the system flags other dangerous instances that do not all lead to crash. Since the ground-truth danger time is defined solely based on crash, the precision score will decrease.

As can be seen from Fig. 6 , driving danger prediction using only the VDP can achieve satisfactory accuracy, and the additional DPD and DVB feature only improve the performance in a limited extent. Due to the intrusive process in collecting DPD and DVB, the VDP feature is more desirable for driving risk prevention applications. Of the three danger-level prediction methods, the RL algorithms achieved the best performance. Based on the result, the next section introduces our real-time driving danger-level prediction prototype. 5. Real-time driving danger-level prediction
Based on the off-line cross-validation result, a live driving danger-level prediction system was built. It uses only the vehicle X  X  dynamic parameters feature and RL algorithm with non-linear value function (Eq. (18)) for prediction. Fig. 7 illustrates the architecture of the system. It consists of thre e major modules: (1) the data acquisition module that captures t he vehicle X  X  dynamic parameters in real-time; (2) the feature extr action that converts the raw sensor readings into defined statistical f eatures as described in Section 2.4; and (3) the danger-level prediction module that uses the RL algorithm to generate a numerical danger-level score. The score is used to trigger the warning interface if a predefined threshold learned from training samples is exceeded.

Fig. 8 shows our prototype system (the right screen) which works as an add-on to the  X  X  X TISIM X  X  simulator (the left screen). Eleven participants were invited to operate the system, where six are research scientists in computer science, and five are professionals from car manufactory and research institute. Their on-line driving test results show that, the system can accurately predict driving risks due to sharp turning, sudden acceleration/ deceleration, continues weaving, approaching object, etc. It is sensitive to the changes of vehicle X  X  condition resulted from the driver X  X  inattention, or the road condition change such as windy and slippery road. At the same time, if the participant drove in good manner, our system stayed in silence unless certain traffic condition changed, e.g., ambulance or police car approaching. Hence the developed system worked as a reliable driving assistant with no noticeable false alarming. On the other side, if the participant wants to crash the car on purpose, such as suddenly turning into the opposite lane to hit the incoming vehicle, our system will not alarm because these types of dangerous situations do not occur in the collected training samples.

Another feedback from the on-line trial is that, when the danger-level was above the threshold, the drivers were often unclear about which action caused the risk. Although a precise danger reason probe module is not available at the current stage,
Danger Level it is able to analyze the trained parameters to roughly know which features might be the reason. As mentioned in Section 3, the selected non-linear value function for the RL algorithm has five RBFs. Their trained weights are {4.0732, 1.7731, 2.8959, 0.9888, 5.0044}, respectively. It can be seen that only the 5th
RBF has negative weight value, and hence the closer a feature vector is to the 5th RBF X  X  center, the more danger it is. Similarly, any feature vector that is close to the 1st RBF X  X  center represents safe, as the 1st RBF has the greatest positive weight value. In such a manner, the dimension that differs most between the 1st and 5th RBFs X  centers is the most distinguishing feature. Table 4 lists the top-10 features that differ most between safe and crash. as we normally thought. We played back the driving session to
Precision over random guess
Precision over random guess
Precision over random guess Precision over random guess discover that, first the speed in both safe and crashed case are usually high, and second in most crashes, speed exceedance is seldom the direct reason. When the vehicle is running above 60mph, for example, it requires greater steering input to make left/right turn. If it resulted in an off-road crash, the steer input angle pattern is learned rather than the speed. 6. Conclusion and future work
In this paper, we first evaluated the effectiveness of using the different features and modeling methods for driving risk predic-tion. Amongst the DPD, the DVB and the VDP features, and the HMM, the CRF and the RL algorithms, the VDP feature and the RL algorithm with a non-linear value function gave satisfactory performance. Based on the result, we further developed a real-time driving danger-level prediction prototype. Subjective driving test were conducted, and promising result were obtained.
We have begun investigating the next stage of the proposed system. The future framework includes several parts: Firstly, to develop a risk reason analysis method for the driver when potential driving risk has been predicted; Secondly, to incorporate with the driver X  X  visual behavior based features to further improve performance; Thirdly, to evaluate more machine learning methods on larger data sets so that more driving safe/dangerous patterns can be modeled; And fourthly, to improve the user interface to avoid the  X  X  X ry wolf X  X  effect of the system and maximize the users X  confidence.
 References
