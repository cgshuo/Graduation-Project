 We describe the design, implementation, and evaluation of EMBERS, an automated, 24x7 continuous system for fore-casting civil unrest across 10 countries of Latin America using open source indicators such as tweets, news sources, blogs, economic indicators, and other data sources. Un-like retrospective studies, EMBERS has been making fore-casts into the future since Nov 2012 which have been (and continue to be) evaluated by an independent T&amp;E team (MITRE). Of note, EMBERS has successfully forecast the June 2013 protests in Brazil and Feb 2014 violent protests in Venezuela. We outline the system architecture of EMBERS, individual models that leverage specific data sources, and a fusion and suppression engine that supports trading off spe-cific evaluation criteria. EMBERS also provides an audit trail interface that enables the investigation of why specific predictions were made along with the data utilized for fore-casting. Through numerous evaluations, we demonstrate the superiority of EMBERS over baserate methods and its capability to forecast significant societal happenings. H.2.8 [ Database Management ]: Database Applications X  data mining civil unrest, event forecasting, open source indicators
We are constantly reminded of instabilities across the world, e.g., in regions such as Middle East and Latin America. Some of these instabilities arise from extremism or terror-ism while others are the result of civil unrest, involving population-level uprisings by disenchanted citizens. Since the Arab Spring revolution began, and especially after Egypt X  X  upheaval, many analysts (e.g., [12]) have pondered: Could we have anticipated these events? Were there precursors and signals that could have alerted us to them? Why did this happen in one country but not another?
Our team is an industry-university partnership charged with developing a system to continually monitor data sources 24x7, mine them to yield emerging trends, and process these trends into forecasts of significant societal events such as protests. We refer to our system as EMBERS for Early Model Based Event Recognition using Surrogates. Although the scope of EMBERS spans a broad class of events (e.g., protests, disease outbreaks, elections), we focus our atten-tion in this paper on only civil unrest events. Civil unrest is defined as a population-level event wherein people protest against the government or other larger organizations about specific policies, issues, or situations.

The EMBERS project is supported by the IARPA (In-telligence Advanced Research Projects Activity) OSI (Open Source Indicators) program whose objective is to forecast population-level changes using open source data feeds, such as tweets, web searches, news/blogs, economic indicators, Wikipedia, Internet traffic, and other sources. (The term  X  X pen source X  here refers to data sources that are openly available without requiring privileged access.) As a per-former in the OSI program, EMBERS is a deployed sys-tem that has been generating forecasts since Nov 2012 and automatically emailing them in real-time to IARPA upon generation, which have been evaluated by an independent evaluation team (MITRE). Using human analysts, MITRE organizes a gold standard report (GSR) of protests by sur-veying newspapers for reportings of civil unrest. Our fore-casts have been evaluated against this GSR every month Figure 1: Alerts (example, left) and events (example, right) are structured records describing protests. since Nov 2012. Thus, unlike studies of retrospective pre-dictability, EMBERS has been generating (and continues to generate) forecasts into the future.

Our goal in this paper is to present the design, implemen-tation, and evaluation of EMBERS over an extended period of time. Our key contributions are: 1. We outline the system architecture and design of EM-2. Unlike other forecasting/warning generation systems 3. EMBERS adopts a multi-model approach wherein each 4. We illustrate the application of EMBERS to 10 coun-
Event analysis of the form considered here is an estab-lished concept in social science research [3]. Civil unrest is a large concept intended to capture the myriad ways in which people express their protest against things that affect their lives and for which they assume that the government (local, regional or national) has a responsibility (e.g., cost of urban transportation, poor infrastructure, etc.). If the action is directed against private actors, there is normally a connection to government policy or behavior, e.g., a labor strike against a private company can disrupt the rhythm of everyday life for the rest of society, turn violent or lead to a series of disruptive strikes which require government in-volvement, and thus responsibility in the eyes of citizens. Civil unrest does not include acts by criminals for purely private gain. While authoritarian governments may outlaw civil protest and thus criminalize the participants, social sci-entists would distinguish illegal political protests from illegal criminal activities. Gang members stopping public buses to extort payoffs from bus owners would not be a civil unrest event, though people protesting afterward against the gov-ernment X  X  inability to control such gangs would be consid-ered civil unrest. Regardless of a country X  X  level of openness to citizens X  expression, civil unrest may occur in carefully planned and orchestrated forms or as spontaneous responses to external events.

This expansive definition of civil unrest means that one can find it everywhere, including European protests against austerity or marches against an oil pipeline from Canada across the US to the Gulf of Mexico. Latin America, nev-ertheless, offers some special characteristics that make it an excellent region for study in our project. The region experi-ences a plethora of civil unrest events every day (providing a sufficient number of GSR events to train machine learning models), is well covered by international and national news media (facilitating the task of generating ground truth), is the object of detailed empirical research and polling (per-mitting the description of the social, political and economic context within which civil unrest occurs) and has a signifi-cant and growing number of social network users (thus sup-porting the use of modern data mining algorithms).

The forecasting problem studied here using open source indicators is a potentially powerful tool for understanding the social construction of meaning and its translation into behavior. The occurrence of an event can enhance the ability of citizens to communicate not only their views but also their priorities to those who govern them. An effective protest forecasting system can contribute to making the transmis-sion of citizen preferences to government less costly to the economy and society, by enabling governments to respond to high priority grievances in advance of anticipated protests. If the response by the government causes a cancellation or lower turnout for the event, this decreases the costs incurred by even peaceful disruptions, such as lost work hours and the deployment of police to manage traffic and the interactions between protestors and bystanders. Given the vulnerability of large gatherings to provocation by handfuls of violence-oriented protestors (e.g., Black Box anarchists in Brazil), indications of coming protests can also enable plans to mit-igate these effects.
Two broad classes of related work pertinent to EMBERS, are briefly surveyed here. First, there is a rich body of litera-ture in event extraction [5, 17] wherein structured descrip-tions of events are codified from text (e.g., news reports). ICEWS [15] and GDELT [11] are two prominent systems that use the CAMEO coding taxonomy. Companies like RecordedFuture and works like [16] aim to recognize event mentions from text and Twitter. A key thread of research that has emerged is to distinguish between future and past time references in event extraction. Becker et al. [2] aim to extract details about known planned events like musical con-certs from social media. Baeza-Yates [1] provides a ranking of future events retrieved from news. Dias et al. [7] extract future temporal references from text, while also distinguish-ing rumor from planned events using a classifier. Tops et al. [19] aim to classify a tweet talking about an event into discrete time segments and thus predict the  X  X ime-to-event. X  Kallus [10] makes use of data from RecordedFuture about planned protest events to determine if a significant protest will occur in the next three days using a random forest clas-sifier. Other than Kallus [10], all the above cited works are primarily focused on detection (in contrast to forecast-ing). The second broad of thread of related research is on civil unrest modeling although much of this work focuses on characterization rather than forecasting. The dynam-ics by which volunteers are recruited via social networks to the May 2011 Spain protests was studied in [8]. Spatial and temporal distributions of civil unrest over 170 coun-tries were studied in [4]. Our group has analyzed protests in Latin America paying specific attention to signals that man-ifest in social media [9]. There are many papers that aim to retrospectively analyze the breadcrumbs of information pre-ceding significant events such as the Arab Spring [12, 10]. EMBERS distinguishes from all of the above by supporting highly structured descriptions of protests, emphasizing fore-casting rather than characterization or mere detection, and utilizing a broader range of data sources than prior work. Finally, we reiterate that EMBERS is a deployed system that has been successfully issuing alerts since Nov 2012.
The EMBERS system is a modular, data-analytics plat-form for generating warnings of the form described in Fig. 1 (left). It continuously monitors streams of open source data and generates structured alerts in real time, delivered by email to IARPA/MITRE for scoring, with the date of email delivery being the forecast date .

The EMBERS architecture, illustrated in Fig. 2, provides a platform for the ingest and warehousing of a variety of raw data sources, and a flexible mechanism for data trans-fer among ingest, analytics and prediction modules. The four stages X  X ngest, enrichment, prediction, delivery X  X re described in detail, respectively, in Sections 4.1, 4.2, 5, and 6. EMBERS runs in the commercial AWS cloud. It implements a share-nothing, message-based, streaming architecture us-ing 0MQ as the underlying method of data transport. Pro-cessing components are distributed among virtual machines in a configurable, network-secure, auto-deployable, cluster of EC2 instances. With loosely coupled processes and con-figuration driven communication, EMBERS is able to de-liver warnings reliably while facilitating rapid integration and deployment of new components and data sources. The current production cluster consists of 12 EC2 instances with two dedicated to ingest processing, three dedicated to mes-sage enrichment, four dedicated to predictive modeling and warnings selection, one each dedicated to archiving and sys-tem monitoring. EMBERS became operational in November 2012. It has ingested nearly 13TB of raw data and gener-ated over 12,000 warnings as of this paper writing. Other notable statistics are listed in Table 1.
The EMBERS ingest module processes data from a va-riety of different sources: Twitter X  X  public API, Datasift X  X  processed Twitter feed, Healthmap X  X  alerts and reports, RSS news and blog feeds, Talkwalker alerts, NASA satellite me-teorological data, Google Flu Trends, Bloomberg financial news, TOR usage data, OpenTable X  X  restaurant cancella-tion data, the PAHO health survey, and web-pages refer-enced Tweets. (Some of these, e.g., NASA satellite data and Google Flu Trends are used for other event classes, like disease outbreaks, as described in the introduction.) Each of these has a dedicated configurable ingest processor. In-gested data is packaged into UTF8-encoded JSON messages, assigned unique identifiers and published to a source-specific queue, allowing for simple archiving and subscription. Sim-ple time-series and systems data, such as the store of warn-ings sent, are stored in a database cache.
 One of our central ingest processes makes use of Datasift X  X  Twitter collection engine. Datasift provides the ability to query and stream tweets in real time. These tweets are augmented with various types of metadata including the user profile of the tweeting user or geotagged attributes and the query can target any of these. Targeting tweets that come from a particular geographic area, e.g. Latin America, can be tricky. While some tweets use geotags to specify the location of the tweet, these tweets only comprise about 5% of the total number of tweets and may not be representative of the population overall (i.e. geotagged tweets come from people who have smart phones who also tend to be more affluent). Therefore, it is important to use other information to build a query that targets relevant tweets. In building our query we consider geotag bounding boxes (structured geographical coordinates), Twitter Places (structured data), user profile location (unstructured, unverified strings), and finally mentions of a location contained in the body of the tweet.
Messages with textual content (tweets, newsfeeds, blog postings, etc.) are subjected to shallow linguistic process-ing prior to analysis. Note that most of our content in-volves languages from the Latin American region, esp. Span-ish, Portuguese, but also French (and of course, English). Applying BASIS technologies X  Rosette Language Processing (RLP) tools, the language of the text is identified, the nat-ural language content is tokenized and lemmatized and the named entities identified and classified. Date expressions are normalized and deindexed (using the TIMEN [13] pack-age). Finally, messages are geocoded with a specification of the location (city, state, country), being talked about in the message. An example of this enrichment processing can be seen in Fig. 3.

The EMBERS system makes use of two geocoding sys-tems, one for Tweets and one for news and blog articles. The Twitter geolocater determines not only the city, coun-try and state, but also the approximate latitude and lon-gitude coordinates that a tweet is referring to, or coming from. Geocoding is achieved by first considering the most reliable but least available source, viz. geotags, which give us exact geographic locations that can be reverse geocoded into place names. Second, we consider Twitter places and use place names present in these fields to geocode the place names into geographical coordinates. Finally, we consider the text fields contained in the user profile (location, de-scription) as well as the tweet text itself to find mentions of relevant locations which can then be geocoded into geo-graphical coordinates.

Most news articles and blog posts mention multiple loca-tions, e.g., the location of reporting, the location of the in-cident, and locations corresponding to the hometown of the newspaper. We developed a probabilistic reasoning engine using probabilistic soft logic (PSL [6]) to infer the most likely city, state, and country which is the main geographic focus the article. The PSL geocoder combines various types of evi-dence, such as named entities such as locations, persons, and organizations identified by RLP, as well as common names and aliases and populations of known locations. These di-verse types of evidence are used in weighted rules that prior-itize their influence on the PSL model X  X  location prediction. For example, extracted location tokens are strong indica-tors of the content location of an article, while organization and person names containing location names are weaker but still informative signals; the rules corresponding to these ev-idence types are weighted accordingly.
We now outline the five different models considered in our study (see Table 2), paying specific attention to their underlying assumptions, data sources, and scenarios of ap-plicability.
Many civil unrest events are planned and organized through calls-for-action by opinion and community leaders who gal-vanize support for their case. The planned protest model aims at detecting such civil unrest events from traditional media (e.g., news pages, mailing lists, blogs) and from social media (e.g., Twitter, Facebook). The model filters the input streams by matching to a custom multi-lingual lexicon of ex-pressions such as preparaci  X on huelga , llam  X o a acudir a dicha movilizaci  X on or plan to strike which are likely to indicate a planned unrest event. The phrase matching is done in flexi-ble manner making use of the lemmatized, tokenized output Figure 3: The process of enriching a tweet using Basis RLP enrichment and TIMEN enrichment to generate exact dates. The phrase  X  X indicato Unificado de Trabajadores se reunir`a mana  X na X  gets enriched to  X  X indicato Unificado de Traba-jadores se reunir`a January 15, 2013. X  Table 2: The five different prediction models in EMBERS. Model Data sources Planned protest RSS (news, blogs), Tweets,
Volume-based RSS (news, blogs), Tweets, Exchange DQE Tweets Cascades Tweets
Baseline GSR of the BASIS enrichment module, to allow for variation and approximations in the matching. Messages that match are then screened for the mention of a future time/date occur-ring in the same sentence as the phrase. The event type and population are forecast using a multinomial naive Bayes classifier. Location information is determined using the en-richment geocoders. The phrase dictionary is thus a crucial aspect of the planned protest model and was populated in a semi-automatic manner using both expert knowledge and a simple bootstrapping methodology.

The planned protest model reads three kinds of input messages: standard natural language text (RSS news and blog feeds, as well as the content of web pages mentioned in tweets), microblogging text (Twitter), and Facebook Events pages. The RSS feeds and web pages are processed as dis-cussed above. For tweets, in addition to the above pro-cessing, we require that the tweet under consideration be retweeted a minimum number of times, to avoid erroneous alerts. (This value is set to 20 in our system.) For Facebook, we use their public API to search for event pages contain-ing the word protest or its synonyms. Most such Facebook event pages already provide significant information such as the planned date of protest, location (sometimes with reso-lution up to street level), and population/category of people involved.
Next, we developed a traditional machine learning model to map from a large set of volume-based features to protest characteristics. We use a logistic regression model with LASSO (Least Absolute Shrinkage and Selection Operator [18]) to select a sparse feature set, and to predict the probabil-ity of occurrence of civil unrest events in different coun-tries. Tweets are one of the primary inputs to this model. Country-level tweets are first filtered using a keyword dictio-nary which includes 614 civil unrest related words (such as protest, riot), 192 phrases (e.g., right to work), and country-specific actors (public figures, political parties, etc.). For each keyword, its translations in Spanish, Portuguese and English are also used for filtering. In order to reduce the noise in the data, only tweets containing at least 3 keywords are considered. The covariates in the LASSO regression in-clude (i) daily counts of these protest related keywords in filtered tweets, (ii) daily counts of the same keywords in news and blogs, (iii) the exchange rate (country specific cur-rency against dollar), (iv) count of requests to TOR, i.e., the number of online users who have chosen to conceal their lo-cation and identity from the online community, (v) count of ICEWS events i.e. events identified by the  X  X ntegrated Con-flict Early Warning System X  [15], (vi) average intensity of the ICEWS events, (vii) the counts of events in publicly avail-able GDELT (Global Data on Events, Location and Tone) dataset [11], which is a record of events in the international system over multiple decades, and (viii) the average tone and the Goldstein scale of these events. A threshold for the probability is determined by maximizing the area under the ROC. This methodology allows for detection as well as prediction of country-specific civil unrest events.
The dynamic query expansion (DQE) model is based on the idea that the causes for protests can be quite varied and, unlike the Volume model (which uses a fixed set of keywords), we must seek emerging conditions for protests by dynamically growing our vocabularies of interest. This model relies exclusively on tweets. Given a short seed query, DQE first adopts an iterative keyword expansion strategy to dynamically generate a set of extended keywords and tweets pertinent to such keywords. In particular, the seed query consists of a small set of civil unrest related keywords like  X  X rotest X  and  X  X arch. X  In the initial iteration, we extract the tweets matching the seed query, and rank the terms in them by their DFIDF weights. Higher ranked terms are used to trigger the second iteration, continuing the process. The iterations are terminated once the set of keywords and their weights become stable (we have observed that DQE converges in approximately 3 X 5 iterations). See Fig. 4. The resulting tweets are clustered using local modularity and spatial scan statistics, and tweets in the discovered clusters are used by a classification engine to trigger an alert and to determine the event type and population.
The cascades model is specifically designed to track ac-tivity on social media, especially recruitment of individu-als to causes through the use of targeted campaigns, or the popularization of causes through adoption of hashtags. We characterize information diffusion on a (directed) Twitter network using activity cascades. An activity cascade is de-fined in the following manner: a user posts a tweet; if one of the followers of this user also posts a tweet on the same gen-eral topic within a short interval of time after the original poster, we say that the second user was influenced by the first one, and we add this second tweet to the cascade. Then, we consider the followers of the second user, and add them to the cascade if they post a tweet within a short interval of time from then, and so on. The cascade stops growing when none of the followers of the users in the cascade tweet in the general topic soon enough. In our model, we compute cas-cades over two different networks: the follower graph, which indicates who follows whom in Twitter, and the mention-retweet graph, where the out-neighbors of a user are those who mention or retweet that user. Activity cascades are computed for each day (which potentially could have orig-inated from earlier days and continued growing) and their structural properties (e.g., size, number of participants, du-ration) are used as input to a machine learning model (gen-eralized linear model; GLM) to forecast the probability of occurrence of a GSR event in the same topic on the following day.
We also developed a maximum likelihood estimate (MLE) baseline model, making heavy use of the GSR. The idea be-hind this model is that, even in absence of any explicit signal, the distribution of events that have appeared in the recent past is a good guide to those civil unrest events that will take place in the future. The baseline model makes predictions on the basis of the distribution of  X  X vent schema X -frequency in the most recent part of the GSR. An event schema is a combination of a location, an event type, a population and a day of the week. Some high-frequency schemas can appear as many as 10 times in a three-month window, but the vast majority of event schemas appear only once. In a typical three month interval two thirds appear once with the re-maining third split evenly between those that appear twice, and those that appear three or more times. Warnings are generated with a minimum threshold of 2 and a three-month training interval, and issued with a lead time of two weeks.
The fusion and suppression engine is responsible for the generation of the final set of warnings to be delivered. It performs several key operations: matches to a specific GSR event.
 Figure 5: The audit trail visualization interface, displaying the audit trail for an alert from the planned protest model. (top left) Schema of the planned protest model. (top right) Alert chooser. (bottom panels) Data sources used in this alert, including highlighted sections.
In order to facilitate auditing of the warnings and fur-ther training of the models, all data that flows through the system is archived to the Amazon S3 cloud and the pro-cessing chain recorded in a NoSQL database. Using this infrastructure, the EMBERS system can produce an audit trail for any warning generated, which specifies completely which messages and analytic processes led to the warning. This audit trail can be visualized using the EMBERS web-based dashboard, shown in Fig. 5. The interface enables an analyst to rapidly search through warnings, identify the models (and post-processing) that gave rise to an alert, and the individual data sources that contributed to the alert.
Before we describe our evaluation metrics, it is helpful to review the composition of alerts and GSR events. As introduced in Fig. 1 (left), an alert is a structured record containing four aspects: (i) the where/why/when/who of the protest, (ii) confidence associated with the forecast, and (iii) (implicitly) the date the forecast is being made ( forecast date ). The  X  X hen X  is specified in granularities of days. The where provides a tiered description specifying the (coun-try, state, city), e.g., (Honduras, Francisco Morazan, Tegu-cigalpa). The why (or event type) captures the main objec-tive or reason for a civil unrest event, and is meant to come from 7 broad classes (e.g.,  X  X mployment &amp; Wages X ,  X  X ous-ing X ,  X  X nergy &amp; Resources X  etc.) each of which is further categorized into whether the event is forecast to be violent or not. Finally, the who (or population) denotes common categories of human populations used in event coding [17] such as Business, Ethnic, Legal (e.g. judges or lawyers), Ed-ucation (e.g. teachers or students or parents of students), Religious (e.g. clergy), Medical (e.g., doctors or nurses), Me-dia, Labor, Refugees/Displaced, Agricultural (e.g. farmers, or just General Population.
 Concomitant with the definitions in the above section, a GSR event contains again the where/why/when/who of a protest that has actually occurred and a reported date (the date a newspaper reports the protest as having happened). See Fig. 1 (right). As described earlier, the GSR is organized by an independent third party (MITRE) and the authors of this study do not have any participation in this activity.
Before we explain how alerts are matched to events, it is important to first understand which alerts can be matched to specific events. Note that there are four dates in an (alert,event) combination (see Fig. 6): 1. The date the forecast is made ( forecast date ) 2. The date the event is predicted to happen ( predicted 3. The date the event actually happens ( event date ) 4. The date the event is reported in a GSR source ( re-
For an event to be qualified as having been predicted by a warning, forecast date &lt; reported date (recall that time is measured in granularities of days). The lead time is given as ( reported date  X  forecast date ), i.e., the number of days by which we  X  X eat the news. X  In contrast, the difference be-tween predicted event date and event date , i.e., | event date  X  predicted event date | . is one of quality or accuracy. Ideally we require lead time to be as high as possible and | event date  X  predicted event date | to be as low as possible.
Forecasting the event date accurately is only one aspect of quality. Recall that alerts also forecast the location, event Figure 6: Alert sent at time t 1 predicting an event at time t 3 can be matched to a GSR event that happened at time t 2 and reported at time t 4 if t 1 &lt; t 4. type, and population. We define scores for each of these aspects and quality is defined as a sum over all these scores. where DS, LS, ES, and PS denote the date score, location score, event type score, and population score, respectively. Each of these scores is in turn defined next: DS = 1  X  min( | event date  X  predicted event date | , 7) / 7 If the date of the event listed in the warning is the same as the actual date of the event, then DS is 1. On the other hand, if these dates are farther than 7 days apart, then DS is 0.

Location score (LS) can be defined in many ways. Be-cause location is defined in terms of triples of (country, state, city), one approach is to use a tiered formula. Comparing a GSR event with a warning, we can obtain a score triple of ( l , l 2 , l 3 ) where l 1 is the country-level score, l 2 is the state-level score, and l 3 is the city-level score. Each of these scores have a value of 0 if they do not match and 1 is they match. Then the match between submitted warning location and the GSR location is given by: An alternative way to define location score is as: where dist denotes the distance (in km) between the city predicted and the GSR city. All city location names are standardized to the World Gazetteer which provides lati-tude and longitude values, thus facilitating the computation of distance. The scaling and shifting values of 0.33 and 0.66 ensure that this definition of LS is compatible with the ear-lier definition. Cities outside a 300km radius from a GSR location will thus be scored 0.33; exact predictions will be scored 1; and cities within a 300km radius will get scores in the range [0.33,1]. We distinguish between these two criteria as the categorical LS versus physical distance-based LS.
Event type score (ES) is scored similar to categorical LS since it naturally maps to a three-level taxonomy: whether a civil unrest is forecast to happen, what objective/reason is behind the unrest, and whether it is violent. Again partial credit applies depending on the level of specification. Pop-ulation score (PS) is simply a binary (0/1) score denoting whether we forecast the correct population or not. Finally, note that QS = DS + LS + ES + P S is designed to take values in the range [0 , 4].
 Figure 7: Given a set of candidate warning-event matches (left), we evaluate the performance of EMBERS using either a regular bipartite matching (middle) or by constructing a non-crossing matching (right).
Thus far we have demonstrated, given a warning-event pair, how we can score their fitness. Inclusion criteria define which W-E pairs can even be considered for scoring. We have already mentioned one inclusion criterion, viz. that lead time must be &gt; 0. The full list of inclusion criteria we will consider are: 1. Lead time &gt; 0 2. Both warning and event are for the same country. 3. The predicted event date and event date must be within A fourth, optional (and stringent), criterion we will use is: 4. Both predicted location and event location must be It is important to distinguish the inclusion criteria from the scoring criteria. Inclusion criteria define which W-E pairs are allowable. Scoring criteria determine, for each allowable W-E pair, what its score will be.
Thus far we have assumed that we are matching an alert to a GSR event. In practice, the problem is we are given a set of issued alerts and a set of GSR events and we must determine the quality of the match: which alert would correspond to which event? One strategy is to construct a bipartite graph between the set of alerts and the set of events, where allow-able edges are those that satisfy the inclusion criteria, and where weights on these allowable edges denote their quality scores. We then construct a maximum weighted bipartite matching, e.g., see Fig. 7 (middle). Such matchings are con-ducted on a monthly basis with a lookback period to bring in unmatched warnings from the previous month.
A criticism of the matching approach above is that it can lead to criss-cross matches, i.e., the matching process may not respect the temporal order in which warnings were is-sued or in which events unfold. A non-crossing matching is a more restrictive version of a bipartite matching. Consider two warnings w 1 and w 2 and two events e 1 and e 2 . Repre-senting them by their predicted event dates and event dates, and assuming w 1 &lt; w 2 and e 1 &lt; e 2 , then { ( w 1 is a crossing matching since the earlier warning is paired to a later event (and vice versa). To respect the temporal or-der, we also investigate the computation of a maximum non-crossing matching [14] and use it as an additional evaluation criterion (see Fig. 7 (right)).
We are now ready to identify all the evaluation crite-ria used in EMBERS. The overall quality is defined as a weighted average across all matched warning-event pairs. Similarly, lead time is averaged across all matched warning-event pairs. In addition, we can define precision in terms of the number of unmatched warnings as a fraction of the total number of sent warnings. Similarly, recall can be defined in terms of the number of unmatched events as a fraction of the total number of events. Finally, a probability score is calculated over all warnings, mapped or unmapped. For each warning, it is defined in terms of the Brier score, i.e., 1  X  ( o  X  p ) 2 where p is the probability assigned to the warn-ing, and o is 1 if the warning is mapped to some event in the GSR, and 0 is the warning is not mapped to an event in the GSR. This score is then averaged over all warnings. We present an exhaustive evaluation of EMBERS against multiple aspects as follows: How do each of our models fare for the 10 coun-tries of interest and how well does their integration achieve the five overall metrics? Table 3 presents the performance of EMBERS models for a recent month across all the 10 countries of interest here. As is clear here, the models have selective superiorities across the countries stud-ied. While the baseline model captures significant regulari-ties and achieves high quality scores, models like DQE per-form better for countries like Brazil, Mexico, and Venezuela, all of which have significant chatter on Twitter. Even when models have comparable performances, their integration is useful because each model will produce only a limited set of warnings and their fusion is necessary to achieve high re-call. This is evident in Table 4 that demonstrates that we achieve a quality score of 3.11 with an average lead time of 8.8 days and respectable precision and recall (0.69 and 0.82, respectively). Taking a birds eye view, Fig. 8a and Fig. 8b summarize the distribution of events in the GSR and alerts sent by EMBERS over the past 15 months.
 How does EMBERS X  X  fusion and suppression engine help shape our quality distribution? Fig. 8c describes how our suppression engine can be tuned to steer the quality distribution from a mode around 2.25 to one around 3.2 by learning which warnings to suppress and which ones to is-sue. This capability directly helps balance the recall-quality tradeoff, as shown in Fig. 8d.
 How does EMBERS fare against a baserate model with lenient versus stringent inclusion criteria for matching? To rigorously evaluate the capabilities of EM-BERS, we implemented a baserate model as a yardstick for comparison. The baserate model is similar in spirit to the baseline model described earlier but functions dif-ferently. Rather than filtering for frequent combinations of event properties, it generates alerts using the rate of occur-rence of events in the past three months. Table 5 compares EMBERS warnings against the baserate model. We evaluate the date and location aspects with categorical and distance-based scoring to gain further insight. Under a lenient evalu-ation using categorical inclusion criteria, EMBERS exhibits Table 5: Performance of EMBERS vs a baserate model. a quality score improvement of approximately +0.7 over baserate methods. Under a strict evaluation using distance-based inclusion criteria, this improvement is around +0.5 over baserate methods.
 How adept is EMBERS at forecasting  X  X urprising X  events? Did EMBERS forecast significant uprisings such as the June 2013 protests in Brazil? Fig. 8e de-scribe the performance of our system in Brazil during the summer of 2013 when Brazil witnessed significant protests that were originally triggered by bus fare increases. As can be seen, EMBERS is able to track the rise in num-ber of protests quite accurately. More recently, Fig. 8f and Fig. 8g describe the performance of EMBERS in Brazil and Venezuela for the Jan-Feb 2014 season. Significant violent protests were witnessed in both countries, due to bus fare increases and student-led demonstrations, respectively. Fi-nally, we also conducted a formal maximum entropy evalua-tion of protest counts, to determine how EMBERS fares on only those protests that are deemed to significantly higher in number relative to the past three months. As Fig. 8h shows, EMBERS demonstrates an improvement of nearly 0.5 over baserate models during months of significant uprisings (e.g., June 2013). During other months (e.g., Nov 2013) there is relatively normal activity and baserate methods perform comparably.
 How reliable are EMBERS X  X  probability scores? Fig. 8i shows that the probability scores emitted by warnings have a monotonic relationship to the likelihood of matches, indicat-ing that EMBERS X  X  use of confidence captures the mapping from model and warning attributes to the possibility of event matches.
 How does EMBERS X  X  lead time vary with quality scores? Fig. 8j illustrates an interesting relationship. As lead time increases from low values, as expected, quality scores decrease. But as lead time crosses a threshold, quality scores actually improve again! This is because data sources like Facebook event pages and other feeds contribute high quality planned protest warnings with high lead time. What is the effect of adopting regular versus non-crossing matching constraints? Fig. 8k reveals that, as expected, when adopting non-crossing matching constraints, the number of matches decreases bringing down the overall quality. Nevertheless, a consistent level of improvement over baserate methods is witnessed.
 How has the performance of EMBERS improved over time? Finally, Fig. 8l demonstrates the performance of our deployed EMBERS system over time. From quality scores of just over 2 in the past year, EMBERS has breached the 3.0 barrier in recent months.
We have presented the architecture of EMBERS, an au-tomated system for generating forecasts about civil unrest from massive, multiple, data sources. Our evaluations over 10 countries illustrate the capabilities of EMBERS  X  X n the small X  (matching specific events to particular warnings) as warnings for that country in the studied period.
 well as  X  X n the large X  (capturing significant upticks across countries).

Future work is targeted at three aspects. First, we are interested in social science theory-based approaches to fore-casting, e.g., modeling the rise of grievances into trigger events, capturing the role of opinion leaders, and identifying whether there are both necessary and sufficient conditions for a festering sentiment to transform into a protest. Second, we plan to develop a statistical theory of tradeoffs revolving around the boundaries of precision-recall and quality-lead time. Different analysts are likely to prefer different sweet spots along these boundaries and we seek to situate EM-BERS as a tunable forecasting system. Finally, for analyst consumption, we are interested in automated narrative gen-eration, i.e., an English description of an alert providing a contextual summary of the alert (similar to automated weather report generation).
 [1] R. Baeza-Yates. Searching the future. In SIGIR [2] H. Becker, D. Iter, M. Naaman, and L. Gravano. [3] J. M. Box-Steffensmeier and B. S. Jones. Event [4] D. Braha. Global civil unrest: contagion, [5] P. T. Brandt, J. R. Freeman, and P. A. Schrodt. Real [6] M. Broecheler, L. Mihalkova, and L. Getoor.
 [7] G. Dias, R. Campos, and A. Jorge. Future retrieval: [8] S. Gonz  X alez-Bail  X on, J. Borge-Holthoefer, A. Rivero, [9] T. Hua, C.-T. Lu, N. Ramakrishnan, F. Chen, [10] N. Kallus. Predicting crowd behavior with big public [11] K. Leetaru and P. Schrodt. GDELT: Global data on [12] K. H. Leetaru. Culturomics 2.0: Forecasting [13] H. Llorens, L. Derczynski, R. J. Gaizauskas, and [14] F. Malucelli, T. Ottmann, and D. Pretolani. Efficient [15] S. P. O X  X rien. Crisis Early Warning and Decision [16] A. Ritter, O. Etzioni, and S. Clark. Open domain [17] P. A. Schrodt. Automated production of high-volume, [18] R. Tibshirani. Regression shrinkage and selection via [19] H. Tops, A. van den Bosch, and F. Kunneman.

