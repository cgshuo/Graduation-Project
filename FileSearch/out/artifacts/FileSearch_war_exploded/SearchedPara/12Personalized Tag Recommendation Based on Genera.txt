 Recommender systems help users find desirable products or services by analyzing user profiles and their similarities, or by finding products that are similar to those the users expressed interest in. The diffusion of the collaborative tagging systems (e.g., Del.icio.us 1 , Flickr 2 , Zooomr 3 ) has recently focused the attention of the research community on the problem of tag recommendation. Tags are keywords that provide meaningful descriptors of Web resources. Recommending tags to a user who is annotat-ing a resource is a challenging research issue that has been recently investigated in dif-ferent real-life contexts (e.g., photo annotation [Garg and Weber 2008; Sigurbj  X  ornsson and van Zwol 2008], blog post tagging [Mishne 2006], bookmark tagging [Heymann et al. 2008]).

Given a set of user-defined tags, a relevant research issue is the recommendation of additional tags to partially annotated Web resources. Accomplishing this task ef-fectively has the twofold aim at automating the annotation process by suggesting to the user an ordered set of pertinent tags and improving the effectiveness and the effi-ciency of querying retrieval systems (e.g., [Bao et al. 2007; Datta et al. 2007; Dmitriev et al. 2006]). Recommendation of additional tags may be either exclusively based on collective knowledge, that is, independently of the knowledge about the user who anno-tated the resources [Heymann et al. 2008; Sigurbj  X  ornsson and van Zwol 2008; Krestel et al. 2009], or personalized [Garg and Weber 2008; Mishne 2006]. To figure out valu-able correlations between previously annotated and recommendable tags rule-based approaches have shown to achieve fairly good performance against probabilistic and co-occurrence-based machine learning strategies [Heymann et al. 2008]. To enhance the performance of the tag recommendation systems in the context of photo tag recom-mendation, the combined usage of user-specific and collective knowledge has also been recently addressed [Rae et al. 2010]. However, the lack of a controlled vocabulary from which tags could be selected during the annotation process makes the sets of previously assigned annotations very sparse [Heymann et al. 2008; Sigurbj  X  ornsson and van Zwol 2008] and, thus, unsuitable for being successfully used with most of the information retrieval and data mining techniques.

This article presents a novel rule-based recommendation system that addresses the task of recommending additional tags to partially annotated Flickr photos by combin-ing the knowledge provided by the personal and collective contexts, that is, the history of the past personal and collective photo annotations. To address this issue, it discovers and exploits high-level tag correlations, in the form of generalized association rules, from the collections of the past user annotations. To the best of our knowledge, this is the first attempt to exploit generalized rules in tag recommendation. Generalized association rules X  X  Y represent correlations among tag sets X and Y such that: (i) frequently occur in the analyzed dataset, that is, the observed frequency (the sup-port) of X  X  Y is above a given threshold, (ii) almost hold in the source data, that is, the strength of the implication between X and Y (the confidence) is higher than a given threshold, and (iii) may also include items belonging to different abstraction levels (i.e., tags may be generalized as the corresponding categories). The use of tag generalization hierarchies allows the discovery of relevant tag associations that may remain hidden at the level of individual tags. Hence, it may effectively counteract the issue of data sparsity, thus allowing the recommendation of meaningful and pertinent tags, as shown in the experimental evaluation (see Section 4). In the following the use of generalized rules in tag recommendation is explained with the help of a running example.

Motivating Example 1 . Consider a photo, published on Flickr, of the Guildhall, which is a famous building situated in the center of London (U.K.). Our goal is to recommend to a given user pertinent additional photo tags to annotate, knowing that his first user-specified annotation is London . A graphical representation of the considered use-case is shown in Figure 1. To perform tag recommendation, we exclusively consider, as preliminary step, the collection of the past user-specified annotations (i.e., the personal knowledge base) while temporarily disregarding the collective knowledge provided by annotations made by the other system users. A traditional association rule mining process may discover the rule { London }  X  { Guildhall } , where London and Guildhall are tags. Since the user has already annotated the photo with the tag London , Guild-hall is an example of subsequent tag to recommend. The quality of the proposed rec-ommendation could be evaluated in terms of well-known rule quality indexes (e.g., the rule support and confidence [Agrawal et al. 1993]). As discussed in Heymann et al. [2008], the analysis of the strength of the discovered implications is the core part of rule-based recommendation systems. In particular, frequent and high-confidence rules are deemed the most reliable ones for being used in tag recommendation. Enforcing a minimum frequency of occurrence of the selected rules reduces the sensitivity of the rule-based model to noise and data overfitting, However, data sparsity still makes the discovery of potentially relevant rules a computationally intensive task, because spe-cific rules often occur rarely in the analyzed data [Heymann et al. 2008; Krestel et al. 2009]. The use of generalization hierarchies built over the history tags, as the ones reported in Figure 1, may allow the generation of high-level tag associations that occur more frequently than their low-level versions. For instance, by aggregating the tag London into the corresponding state U.K. the generalized (high-level) rule { U.K. }  X  {
Guildhall } may prompt the suggestion of the same annotation while considering a higher-level view of the analyzed pattern.

To discriminate among potentially pertinent tags, two distinct rule sets are gener-ated: (i) a user-specific rule set , which represents the personalized knowledge base and includes (generalized) rules extracted from the past annotations made by the user to which the recommendation is targeted, and (ii) a collective rule set , which represents the collective knowledge and includes (generalized) rules mined from the past annotations made by other users. Tags mainly referable to user-specific rules are deemed the most suitable ones for additional tag recommendation. However, their significance strictly depends on user activeness and ability in photo tagging [Rae et al. 2010]. To overcome this issue, in our system we consider tag recommendations based on collective knowl-edge as well. Collective knowledge also plays a key role in specializing high-level asso-ciations discovered from the user-specific context, as shown in the following example.
Motivating Example 2 . Consider again the use-case shown in Figure 1. Suppose now that the first user-specified annotations are London and Roman age .Iftherule {
London , Roman age }  X  { Monument } is selected from the user-specified rule set, any descendant of Monument (e.g., Colosseum , Guildhall ) is an eligible tag to recommend. The presence in the collective rule set of the rule { London , Roman age }  X  { Guildhall } may push the recommendation of the tag Guildhall as deemed worthy of notice by the community.

The effectiveness of the proposed system has been validated on real-life and bench-mark photo collections retrieved from Flickr. The use of generalized rules allows sig-nificantly improving the performance of state-of-the-art approaches.

This article is organized as follows. Section 2 overviews most relevant related works concerning tag recommendation and generalization rule mining. Section 3 presents the architecture of the proposed recommender system and describes its main blocks. Section 4 assesses the effectiveness of the system in providing personalized tag recom-mendations based on both user-defined tags and collective knowledge, while Section 5 draws conclusions and presents future developments of this work. The success of social networks and online communities has relevantly increased the attention to the problem of recommending Web resource annotations, namely the tags. Tag recommendation systems focus on suggesting tags to a user who is annotating a resource by combining the information coming from one or more contexts. In particular, collective tag recommendation analyzes the knowledge provided by the past resource annotations independently of the user who annotated each resource [Heymann et al. 2008; Sigurbj  X  ornsson and van Zwol 2008; Krestel et al. 2009], while personalized tag recommendation addresses tag recommendation by considering the user context [Garg and Weber 2008; Mishne 2006]. This article addresses tag recommendation by combin-ing both personalized and collective knowledge.
 A significant research effort has been devoted to personalized tag recommendation. For instance, in Mishne [2006] the author presents a collaborative filtering method to address personalized blog post tag recommendation. It analyzes the information about users X  behaviors, activities, or preferences to predict what users will like based on their similarity to other users. Analogously to most of the collaborative filtering methods (e.g., [Sarwar et al. 2001]), it assumes that similar users share similar tastes. Simi-larity between posts, users, and tags is evaluated by exploiting information retrieval techniques. In J  X  aschke et al. [2007] the combination of a graph-based and collaborative filtering method is proposed. A User-Resource-Tag (URT) graph is indexed by means of an ad hoc indexing strategy derived from the popular PageRank algorithm [Brin and Page 1998]. To reduce the sparsity of the generated graphs, the use of Singular Value Decomposition (SVD) methods has been also investigated [Symeonidis et al. 2008]. Differently, the application of content-based strategies has been studied in Lindstaedt et al. [2008], Chirita et al. [2007], and Lipczak and Milios [2011]. They focus on rec-ommending tags that are similar to those that a user annotated in the past (or is annotating in the present). For instance, in Chirita et al. [2007] the authors present an application for large-scale automatic generation of personalized annotations. They au-tomatically select from the main Web page keywords personalized tags based on their relevance to the content of both the considered page and the other documents residing on the surfer X  X  desktop. Similarly, in Lindstaedt et al. [2008], Guan et al. [2009], and Lu et al. [2009] multimedia content related to the annotated Web resource is analyzed and used to drive the tag recommendation process. For instance, in Guan et al. [2009] and Lu et al. [2009] the information discovered from both Web page content and related annotations is exploited for tag recommendation purposes, while in Lindstaedt et al. [2008] the authors analyze interpersonal relations, image text, and visual content to-gether. Differently, in Lipczak and Milios [2011] a hybrid collaborative filtering method is proposed and integrated in a scalable architecture. The issue of interactive Flickr tag recommendation is addressed in Garg and Weber [2008]. Suggested tags are first selected from the set of previously assigned ones based on co-occurrence measures. Next, based on the recommendation, the candidate set is narrowed down to make the suggestion more specific. However, co-occurrence methods are challenged by data sparsity as either the computational complexity may increase exponentially with the number of tags or the score associated with each tag may be not directly comparable. Unlike previous approaches, to counteract the sparsity of the tag collections this article proposes to exploit generalized rules.

A parallel issue has been devoted to collective tag recommendation [Heymann et al. 2008; Krestel et al. 2009; Sigurbj  X  ornsson and van Zwol 2008; Lipczak and Milios 2011]. For instance, in Sigurbj  X  ornsson and van Zwol [2008], additional tags are recommended to a partially annotated Flickr photo by using co-occurrence measures to analyze the collective knowledge. The work proposed in Rae et al. [2010] extends the previous sys-tem by analyzing the knowledge coming from different contextual layers, including the personal and the collective ones. Differently, authors in Heymann et al. [2008] refor-mulate the task of content-based tag recommendation as a (supervised) classification problem. Using page text, anchor text, surrounding hosts, and available tag information as training data, they train a classifier for each tag they want to predict. Even though their approach is able to achieve fairly high precision, the overall training time may become significant when the cardinality of the considered tags increases. This work is also the first attempt to address collective tag recommendation by means of association rules. Association rules allow the discovery of strong tag associations that may be prof-itably exploited in tag recommendation. Similarly, other approaches (e.g., [Menezes et al. 2010]) focus on rule-based collective tag recommendation. However, the com-monly high sparsity of the collections of past annotations limits the effectiveness of the proposed approaches as the most specific (and possibly interesting) rules may re-main hidden. This article proposes to overcome the aforesaid issue by discovering tag associations at different abstraction levels. To the best of our knowledge, this is the first attempt to exploit generalized rules in tag recommendation. Authors in Krestel et al. [2009] also address the same issue by adopting an approach based on Latent Dirichlet Allocation (LDA). The proposed strategy is proved very effective in tackling the cold start problem for tagging new resources for which no tag has been assigned yet. Differently, this article specifically addresses personalized tag recommendation of partially annotated resources.

In recent years, a notable research effort has been devoted to discovering generalized association rules from (possibly large) data collections. Generalized association rules have been first introduced in Srikant and Agrawal [1995] in the context of market bas-ket analysis as an extension of the traditional association rule mining task [Agrawal et al. 1993]. By evaluating a set of hierarchies of aggregation built over the data items, items belonging to the source data are aggregated based on different granularity con-cepts. Each generalized rule, which is a high-level representation of a  X  X ower-level X  rule, provides a higher-level view of a pattern hidden in the analyzed data. The first generalized association rule mining algorithm [Srikant and Agrawal 1995] follows the traditional two-process for generalized rule mining: (i) frequent generalized itemset mining, driven by a minimum support threshold, and (ii) generalized rule genera-tion, from the previously mined frequent itemsets, driven by a minimum confidence threshold. Candidate frequent itemsets are generated by exhaustively evaluating the generalization hierarchies. To reduce the complexity and improve the efficiency of the mining process, several optimization strategies and more efficient algorithms have been proposed [Mennis and Liu 2005; Pramudiono and Kitsuregawa 2004; Srikant et al. 1997; Srikant and Agrawal 1995; Han and Fu 2002; Sriphaew and Theeramunkong 2002; Baralis et al. 2010]. This article discovers and exploits generalized rules in per-sonalized tag recommendation by adopting an apriori based strategy [Srikant and Agrawal 1995] that integrates, as an itemset mining step, the approach recently pro-posed in Baralis et al. [2010]. This article presents a novel personalized photo tag recommendation system. Given a photo and a set of user-defined tags, the system proposes novel pertinent tags to assign to the photo based on both the user-specific preferences (i.e., the tags already annotated by the same user to any photo) and the remaining part of collective knowledge (i.e., the annotations provided by other users). Its main architectural blocks are shown in Figure 2. A brief description of each block follows.

Preprocessing. This block aims at making the collections of the previous tag anno-tations suitable for the generalized rule mining process. The tag set is tailored to a transactional data format, where each transaction corresponds to the annotations per-formed by a user to a given photo and includes the corresponding set of assigned tags. Over the history tag collection a set of generalization hierarchies is also derived from the established Wordnet lexical database [Wordnet 2012].

Generalized association rule mining. This block focuses on discovering high-level tag correlations, in the form of generalized association rules, from the transactional repre-sentation of the tag set. The available tag generalization hierarchies are also evaluated to discover tag correlations at different abstraction levels. Two distinct rule sets are generated: (i) a user-specific rule set, which includes generalized rules extracted from the past annotations made by the user to which the recommendation is targeted, (ii) a collective rule set, which includes generalized rules mined from the past annotations made by other users.

Tag selection and ranking. Given a photo and a set of tags already assigned by the user, this block aims at generating a ranked list of additional tags to suggest. To this aim, from the user-specific and collective rule sets generalized rules pertinent to the already assigned tags are selected. The ranked list of suggested tags is derived from the set of selected rules based on their main quality indexes.

This section is organized as follows. Section 3.1 formally states the recommendation task addressed by this article, while Sections 3.2, 3.3, and 3.4 thoroughly describe the main blocks of the recommendation system separately. Given a set of photos P , a set of tags T , and a set of users U the ternary relation X = P  X  T  X  U represents the user assignments of tags in T to photos in P . The set  X  ( p i , u j )  X  T includes the tags assigned by user u j  X  U to p i  X  P and could be defined as where  X  and  X  are the commonly used projection and selection primitive operators of the relational algebra [Elmasri and Navathe 2006].

To discriminate between past assignments made by the user u j and collective ones (i.e.,  X  u j ), the ternary relation X may be partitioned as follows.

We denote as user-specific and collective knowledge bases the sets X ( u j )and X (  X  u j ) specific and collective knowledge bases X ( u j )and X (  X  u j ), the personalized tag recom-mendation task addressed by this work focuses on suggesting to user u j new tags in T \  X  ( p Flickr is an online photo-sharing system whose resources are commonly annotated by the system users. The analysis of the past photo annotations is crucial for recom-mending novel tags to users who are annotating a photo. However, data retrieved from the Web is commonly unsuitable for being directly analyzed by means of data mining algorithms. Indeed, a preprocessing step is needed to tailor the retrieved tag sets to a suitable data format.

To enable the association rule mining process, the collection of past Flickr photo annotations is tailored to a transactional data format. A transactional dataset is a set of transactions, where each transaction is a set of items of arbitrary size. To map a tag set to a transactional data format, the annotations made by a user to a given photo are considered as a transaction composed of the set of (not repeated) assigned tags. A more formal definition of the transactional tag set is given in the following.

Definition 3.1 ( Transactional Tag Set ). Let X = P  X  T  X  U be the ternary relation representing the assignments of tags in T made by users in U to photos in P .Let  X  ( p i , u j )  X  T be the set of all (distinct) tags assigned by user u j  X  U to p i  X  P .A transactional tag set T is a set of transactions, where each transaction corresponds to aset  X  ( p i , u j ) for a certain combination of user u j  X  U and photo p i  X  P occurring in X .
For instance, if the user u j assigns to the photo p i the tags Guildhall and London the corresponding transaction is  X  ( p i , u j ) ={ Guildhall, London } . The transactional tag set T annotations.

Given a user u j to which the personalized tag recommendation is targeted, the transactional tag set T is partitioned between the annotations made by u j and not, that is, distinct transactional representations of X ( u j )and X (  X  u j ), denoted as T ( u j ) and T (  X  u j ) throughout the article, are generated. The separate analysis of T ( u j )and T (  X  u form of generalized rules.

To enable the process of generalized rule mining from T ( u j )and T (  X  u j ), a set of hier-archies of aggregations (i.e., the generalization hierarchies) is built over the transaction tag set T .

Definition 3.2 ( Generalization Hierarchy ). Let T be the set of tags occurring in the transactional tag set T . A generalization hierarchy GH built over T is a predefined hierarchy of aggregations over T . The leaves of GH are all the tags in T . Each non-leaf node in GH is an aggregation of all its children. The root node (denoted as  X  ) aggregates all the tags occurring in T .

The Wordnet lexical database [Wordnet 2012] is queried to retrieve the most rel-evant semantic relationships holding between a tag in T and any other term. More specifically, the following semantic relationships are considered: hyponyms (i.e., is-a-subtype-of relationships) and meronyms (is-part-of relationships). Terms to which any selected relationship is directed are considered as generalizations of the original tag. For instance, consider the example tag London . If the following semantic relationship is retrieved from the Wordnet database then the term London is selected as the upper-level generalization of the tag U.K . Next, the database querying process is deepened to find possible upper-level aggregations of meaningful generalized hierarchies, according to Definition 3.2, built over a given transactional tag set. Extracts of some example generalization hierarchies are reported in Figure 1. The generalization hierarchies will be used to drive the generalized rule mining process, as described in the following. This block focuses on discovering high-level associations, in the form of generalized association rules, from the transactional tag sets T ( u j )and T (  X  u j ). Association rules represent significant correlations among the analyzed data [Agrawal et al. 1993]. More specifically, an association rule is an implication A  X  B , where A and B are itemsets, namely sets of data items. In the transactional representation of the tag set, items are tags in T associated with any photo included in the collection.

Generalized association rules [Srikant and Agrawal 1995] are rules that may include items at higher levels of abstraction, that is, the generalized items. By considering the generalization hierarchies built over the transactional tag set (refer to Definition 3.2), any concept that aggregates one or more tags in T at a higher abstraction level is considered as a generalized item. For instance, consider again the semantic relationship &lt;
London &gt; is-part-of &lt; U.K. &gt; .If London is a tag (item) that occurs in the transactional tag set, U.K. is an example of generalized item. Similarly, generalized itemsets are itemsets (tag sets) including at most one generalized item (e.g., { Guildhall, U.K. } ). A more formal definition follows.

Definition 3.3 ( Generalized Item-Set ). Let T be a transactional tag set and T the corresponding item domain, that is the set of tags occurring in T .Let  X  = {
GH 1 ,..., GH m } be a set of generalization hierarchies built over T and E the set of generalized items (high-level tag aggregations) derived by all the generalization hi-erarchies in  X  . A generalized itemset I is a subset of T E including at least one generalized item (high-level tag aggregation) in E .

Generalized itemsets are characterized by a notable quality index, that is, the sup-port, which is defined in terms of the itemset coverage with respect to the analyzed data.

Definition 3.4 ( Generalized Item-Set Coverage ). Let T be a transactional tag set and  X  a set of generalization hierarchies. A (generalized) itemset I covers a given transaction tr  X  T if all its (possibly generalized) items (tags) x  X  I are either included in tr or ancestors (generalizations) of items (tags) i  X  tr with respect to  X  . The support of a (generalized) itemset I is given by the ratio between the number of transactions tr  X  T covered by I and the cardinality of T .
 A (generalized) itemset I is said to be a descendant of another generalized itemset Y if: (i) I and Y have the same length and (ii) for each item y  X  Y there exists at least an item i  X  I that is a descendant of y .

The concept of generalized association rule extends traditional association rules to the case in which they may include either generalized or not generalized itemsets. A more formal definition follows.

Definition 3.5 ( Generalized Association Rule ). Let A and B be two (generalized) itemsets. A generalized association rule is represented in the form R : A  X  B , where A and B are the body and the head of the rule, respectively.
 A and B are also denoted as antecedent and consequent of the generalized rule A  X  B . Generalized association rule extraction is commonly driven by rule support and confidence quality indexes. While the support index represents the observed frequency of occurrence of the rule in the transactional tag set, the confidence index represents the rule strength.

Definition 3.6 ( Generalized Association Rule Support ). Let T be a transactional tag set and  X  a set of generalization hierarchies. The support of a generalized rule R : A  X  B is defined as the support (i.e., the observed frequency) of A  X  B in T .

Definition 3.7 ( Generalized Association Rule Confidence ). Let T be a transactional tag set and  X  a set of generalization hierarchies. The confidence of a rule R : A  X  B is the conditional probability of occurrence in T of the generalized item-set B given the generalized itemset A .

For instance, the generalized association rule { U.K. }  X  { Guildhall } (s = 10%,c = 88%) states that the tag generalization U.K. co-occurs with the tag Guildhall in 10% of the transactions (annotations) of the collection and the implication holds in 88% of the cases.

To address generalized association rule mining task [Srikant and Agrawal 1995] from the tag history collections T ( u j )and T (  X  u j ), we performed the traditional two-step process: (i) generalized itemset mining, driven by a minimum support threshold minsup and (ii) generalized association rule generation, from the set of previously extracted itemsets, driven by a minimum confidence threshold minconf . A generalized association rule is said to be strong if it satisfies both minsup and minconf .
Given a set of generalization hierarchies built over the tags in X , a minimum support threshold minsup , and a minimum confidence threshold minconf , the generalized rule mining process is performed on T ( u j )and T (  X  u j ) separately. More specifically, given approach is to treat strong high-level correlations related to the annotations made by the user u j differently from that made by other users. To this aim, two distinct rule sets are generated: (i) a user-specific rule set , which includes all strong generalized rules extracted from the past annotations made by user to which the recommendation is targeted, (ii) a collective rule set , which includes all strong generalized rules mined from the past annotations made by other users. To accomplish the generalized itemset mining task efficiently and effectively, we exploit our implementation of a recently proposed mining algorithm, namely the G EN IO algorithm [Baralis et al. 2010]. A brief description of the adopted algorithm is given in Section 3.3.1. 3.3.1. The G EN IO Algorithm. G EN IO [Baralis et al. 2010] is a generalized itemset mining algorithm that addresses the discovery of a smart subset of all the possible frequent (generalized) itemsets. Given a source dataset, a set of generalization hierarchies  X  ,and a minimum support threshold minsup , it discovers all frequent not generalized itemsets and all frequent generalized itemsets having at least an infrequent descendant, that is, a descendant that does not satisfy minsup . To achieve this goal, the generalization process is support driven, that is, it generalizes an itemset only if it is infrequent with respect to the minimum support threshold. A more through description of the main algorithm steps follows.

G EN IO is an apriori-based algorithm [Agrawal et al. 1993] that performs a level-wise itemset generation. More specifically, at arbitrary iteration k , the apriori-based itemset mining steps are the following: (i) candidate generation, in which all possible k -itemsets are generated from the ( k  X  1)-itemsets and (ii) candidate pruning, which is based on the property that all the subsets of frequent itemsets must also be frequent in the source data, to early discard candidate itemsets that cannot be frequent. Candidate generation is known to be the most computationally and memory-intensive step. The actual candidate support value is counted by performing a dataset scan. G EN IO follows the same level-wise pattern. However, it manages rare itemsets by lazily evaluating the given generalization hierarchies. The generalization process is performed by applying on each item (tag) contained in an (infrequent) itemset I the corresponding generaliza-tion hierarchies. All itemsets obtained by replacing one or more items in I with their generalized versions are generalized itemsets of I . Hence, the generalization process on itemset I potentially generates a set of generalized itemsets. The generalization process of I is triggered if and only if I is infrequent with respect to the minimum support threshold. Since the G EN IO algorithm has been first proposed in the context of structured datasets, a few straightforward modifications to the original algorithm have been adopted to make it applicable to transactional data as well. 3.3.2. Rule Generation. The generalized rule generation task entails the discovery of all generalized association rules satisfying a minimum confidence threshold minconf , starting from the set of frequent (generalized) itemsets discovered by the G EN IO algorithm.

The proposed recommendation system accomplishes the rule generation task by performing the second step of the traditional apriori algorithm [Agrawal et al. 1993]. To achieve this goal, we exploited our more efficient implementation of the generalized rule generation procedure first proposed in Srikant and Agrawal [1995]. sets of generalized rules R T ( u this block entails the selection and the ranking of the additional tags to recommend to u j for p i . For the sake of clarity, in the following we discuss how to effectively tackle the selection and ranking problems separately. 3.4.1. Selection. The selection step focuses on selecting additional tags to suggest to user u j for the partially annotated photo p i from the rules belonging to the user-specific and the collective rule sets R T ( u given in Algorithm 1.

To select tags that are strongly associated with the user-specified ones, only a subset of the extracted rules is deemed worth considering for additional tag recommenda-tion. More specifically, the strong generalized rules in R T ( u antecedent covers, at any level of abstraction, the user-specified tag set  X  ( p i , u j )orany of its subsets are selected and included in the corresponding rule sets covered rules ( u j ) and covered rules (  X  u j ) (see lines 1 X 2). According to Definition 3.4, the coverage of (a an exact matching (i.e., the same tags) or one of its generalized versions. Any rule that does not fulfill the aforementioned constraint is not considered in subsequent analysis. Consider, for instance, a photo p i annotated by the user u j with the tag London . In Table I is reported the selection of generalized rules taken from the set of rules mined from, respectively, the past user annotations T ( u j )and T (  X  u j ) by exploiting the generalization hierarchies reported in Figure 1 and by enforcing, respectively, a minimum support threshold equal to 1% and a minimum confidence threshold equal to 50%. Notice that any selected rule contains the tag London or its generalization U.K. as rule antecedent. Consider now the case in which the set of user-specified tags  X  ( p i , u j )is { London , Roman age } . Rules including either { London , Roman age } , { U.K. , Roman age } , { London , Historical age } ,or { U.K. , Historical age } as rule antecedent are considered as well, together with that covering only one of the user-specified tags London or Roman age or their relative generalizations.

Not generalized tags belonging to the consequent of the selected user-specific or collective rules in R T ( u the tag associations mainly referable to the user-specific context the most reliable ones for personalized tag recommendation, we first select the collection C of generalized and not generalized tags contained in the consequent of any rule in R T ( u Then, we refine the selection by replacing generalized tags with the most pertinent not generalized descendants derivable from the collective knowledge base (line 8).
Recalling the previous example, the set C of candidate tags is first initialized as follows: { Guildhall , Historical age , Royal family } . Readers could notice that Guildhall and Royal family are tags, while Historical age is an upper-level generalization. Since the generalization Historical age could not be directly recommended, it is replaced with one (or more) of its low-level tags. The selection of the eligible descendants of any generalization in C is driven by the collective knowledge. For instance, since, among the two low-level descendants of Historical age (i.e., the tags Roman Age and Modern age ), only Roman Age occurs at least once in the consequent of any of the selected collective rules in R T (  X  u its leaf descendant Roman Age , as it is strongly recommended by the community.
The selection procedure performs two nested loops. The outer loop (lines 5 X 11) it-erates over the generalizations occurring in the candidate set C , while the inner one (lines 6 X 10) iterates over the collective rule sets and selects the leaf descendants of any generalization in C . While leaf descendants are included in C as pertinent additional tags to recommend (line 8), any generalization in C is discarded (line 13). Finally, the updated set C of selected candidate tags is returned (line 4). 3.4.2. Ranking. The last but not the least task in tag recommendation is the ranking of the candidate recommendable tags in C . Tag ranking should reflect: (i) the tag significance with respect to the user-defined tags in  X  ( p i , u j ), (ii) the tag relevance according to the past user-specific preferences, and (iii) the tag relevance based on the past collective knowledge related to other system users.

To evaluate the significance with respect to  X  ( p i , u j ) we propose a tag ranking strategy that considers the interestingness of the rules in R T ( u been selected. Generalized rule interestingness is evaluated in terms of its confidence index value [Agrawal et al. 1993], that is, the rule strength in the analyzed dataset (refer to Definition 3.7) in both the personal and collective knowledge base.
Formally speaking, let c  X  C be an arbitrary candidate tag and R c T ( u R is defined as the average confidence of the rules in R c T ( u
Roughly speaking, the ranking scores rankscore ( c , T ( u j )) and rankscore ( c , T (  X  u j )) reflect the average significance of the tag c in the personal and collective contexts. To combine the individual tag ranks achieved in different contexts in a unified ranking list we adopted an aggregation method based on the Borda Count group consensus function [van Erp and Schomaker 2000]. The chosen approach first assigns descending integer scores to the elements of each individual rank and then combines the voting scores to generate a unique ranking. To effectively deal with ranking lists of different lengths, in our Borda Count implementation we assign to the first element of each rank the same value equal to the length of the longest of all the input ranks.

The recommendation system returns the ranked list of candidate tags in C produced by the Borda Count method. We performed a large set of experiments addressing the following issues: (i) a per-formance comparison between our system and a set of recently proposed methods, (ii) a discussion about the impact of the generalization process on the recommendation performance, (iii) an analysis of a real-life use-case for our system and the discovered generalized tag associations, and (iv) the analysis of the impact of the main system parameters on the recommendation performance.

This section is organized as follows. Section 4.1 describes the characteristics of the photo collections exploited in the experimental evaluation. Section 4.2 presents the experimental design and introduces the evaluation metrics adopted for performance evaluation. Section 4.3 compares the results achieved by our system with both dif-ferent versions of the recently proposed approach [Rae et al. 2010] and a baseline version of our system that does not exploit generalized rules. Section 4.4 validates the applicability of our approach on an example of real-life use-case. Finally, Section 4.5 analyzes the impact of the main system parameters and the data distribution on the recommendation performance. To test recommendation system performance, we used a benchmark and a real-life dataset.

The used benchmark dataset is the MIR Flickr 2008 image collection, which was offered by the LIACS Medialab at Leiden University and introduced by the ACM MIR Committee in 2008 [Huiskes and Lew 2008]. It collects 25,000 images and the related annotating users and tags.

The real-life collection is generated by retrieving, by means of the Flickr APIs, 5000 real photos. The selected photos were chosen based on a series of high-level geographical topics, that is, New York , San Francisco , London ,and Vancouver . The retrieved dataset is made available for research purposes. 4
Since for both the benchmark and the real-life datasets the majority (i.e., around 80%) of the contained photos have at least 5 tags, to perform a fair performance evaluation (see Section 4.2) we focus our analysis on this photo subset.

By following the strategy described in Section 3.2 a set of generalization hierarchies is derived from the Wordnet lexical database over the collected photo tags. A portion of one of the generated generalization hierarchies is reported in Figure 3. Our system retrieves a ranked list of pertinent additional tags based on the extracted frequent generalized rules to tackle the tag recommendation ranking problem. Given a photo p i and a set of user-defined tags  X  ( p i , u j ), the system has to recommend tags that describe the photo based on both user-specific and collective past annotations. To perform personalized recommendation, from both the tested photo collections the user-specific annotations made by 10 users who annotated at least 15 photos are considered separately. Once a user-specific annotation subset is selected, the rest of the collection is considered as the collective set. For each analyzed user collection, the evaluation process performs a hold-out train-test validation, that is, the user-specific collection is partitioned in a training set, including the 75% of the whole annotations, whereas the remaining part is chosen as test set. To evaluate the additional tag recommendation performance of our system, for each test photo two random tags are selected as initial (user-specified) tag set and the recommended tag list is compared with the held-out test tags. A recommended tag is judged as correct if it is present in the held-out set. Since held-out tags need not to be the only tags that could be assigned to the photo, the evaluation method actually gives a lower bound of the system performance.

To evaluate the performance of both our recommendation system and its competi-tors, we exploited three standard information retrieval metrics, previously adopted in Sigurbj  X  ornsson and van Zwol [2008], and Rae et al. [2010] in the context of additional Flickr tag recommendation. The selected measures are deemed suitable for evaluating the system performance at different aspects. Let Q be the set of relevant tags, namely the tags really assigned by the user to the test photo, and C the tag set recommended by the system under evaluation. The adopted evaluation measures are defined as follows.

Mean Reciprocal Rank (MRR). This measure captures the ability of the system to return a relevant tag (i.e., a held-out tag) at the top of the ranking. The measure is averaged over all the photos in the testing collection and is computed by where c q is the rank achieved by the relevant tag q .

Success at Rank k (S@k). This measure evaluates the probability of finding a relevant tag among the top-k recommended tags. It is averaged over all the test photos and is defined as follows.
 where q  X  Q is a relevant tag and C k is the set of the top-k recommended tags.
Precision at Rank k (P@k). This metric evaluates the percentage of relevant tags over the set of retrieved ones. The measure, averaged over all test photos, is defined as follows.

Notice that the combined use of precision and success highlights the system ability to get a set of tags that is globally appreciable from the user X  X  point of view, while MRR measures the quality of the top tag selection. To perform a fair evaluation, on each test photo measure estimates are averaged over several runs, where, within each run, a different (randomly generated) held-out tag set ranking is considered. The aim of this section is twofold. First, it experimentally demonstrates the effective-ness of our system against a state-of-the-art approach. Second, it evaluates the impact of the generalization process on the recommendation performance. To achieve these goals, we compared the performance of our system, in terms of the evaluation met-rics described in Section 4.2, on both benchmark and real-life datasets with: (i) five different variants of the recently proposed personalized Flickr tag recommendation system [Rae et al. 2010], which specifically addresses the problem of additional photo tag recommendation given a set of user-specified tags, and (ii) a baseline version of our approach which does not exploit generalized knowledge.

The system presented in Rae et al. [2010] is a personalized recommender system that proposes additional photo tags, pertinent to a number of different user contexts, among which the personal and the collective ones. The system generates a list of recommend-able tags based on a probabilistic co-occurrence measure for each context and then aggregates the results achieved within each context in a final recommended list by ex-ploiting the Borda Count group consensus function [van Erp and Schomaker 2000]. To the best of our knowledge, it is the most recent work proposed on the topic of personal-ized additional Flickr tag recommendation. To perform a fair comparison, we evaluated the performance of the approach presented in Rae et al. [2010] (denoted as Probabilistic prediction in the following) when coping with the combination of collective and person-alized contexts. Moreover, within each context (personalized or collective), we tested different co-occurrence measures as well. More specifically, we also integrated and tested four co-occurrence measures, namely Sum , Vote , Sum + (Sum + Promotion), and Vote + (Vote + Promotion), previously proposed by the same authors in Sigurbj  X  ornsson and van Zwol [2008] in the context of collective additional tag recommendation. The additional measures are taken as representatives of different co-occurrence measures that could be adopted to aggregate and select tags pertinent to each context.
To demonstrate the usefulness of generalized rules in tag recommendation, we also compared the performance of our system with that of a baseline version which exploits traditional (not generalized) association rules [Agrawal et al. 1993] solely. More specif-ically, the baseline method performs the same steps of the proposed approach, while disregarding the use of tag generalizations in discovering significant tag associations (see Section 3.4.1).

To test the performance of our approach we consider as standard configurations for the tested datasets the following settings: minsup = 50% and minconf = 40% for the real-life dataset and minsup = 20% and minconf = 35% for the benchmark dataset. A more detailed analysis of the impact of the aforementioned parameters on the proposed recommendation performance is reported in Section 4.5. Even for the baseline version of our system we tested several support and confidence threshold values. For the sake of brevity, in the following we select as representative and report just the configuration that achieved the best results in terms of MMR measure (i.e., minimum support and confidence thresholds equal to 50%).

The overall results achieved by the performance evaluation session on the real-life and the benchmark datasets are summarized in Tables II and III, respectively. They report the success and the precision at ranks from 1 to 5 (i.e., S@k, P@k k  X  [1,5]) as well as the Mean Reciprocal Rank (MRR) achieved by both our system and all the tested competitors. Similarly to what previously done in Sigurbj  X  ornsson and van Zwol [2008] and Rae et al. [2010], for the sake of brevity we choose not to report ranks with k higher than 5. To validate the statistical significance of the achieved performance improvements the Student t-test has been adopted [Sanderson and Zobel 2005] by using as p-value 0 . 05. Significant worsening in the comparisons between our system and the other tested competitors are starred in Tables II and III. For each tested measure, the result(s) of the best system(s) is written in boldface.

Our recommendation system significantly outperforms both its baseline version and all the other tested competitors in terms of MRR, S@1, S@2, and P@k (for any tested value of k ) on the real-life dataset and in terms of MRR, S@k, and P@k for k &gt; 1onthe benchmark dataset. Furthermore, it performs as well as Probabilistic prediction [Rae et al. 2010], Vote + , Sum ,and Sum + intermsofS@kfor k  X  3 on the real-life dataset and as well as Probabilistic prediction in terms of P@1/S@1 on the benchmark dataset. Performance improvements in terms of P@k remain statistically significant for any k  X  9 on the real-life dataset, while in terms of P@k and S@k they are significant for any tested value of k in the range [2,10] on the benchmark dataset.

To have a deep insight into the achieved results, in Figures 4 and 5 we also plot the variations of the precision and the success at rank k by varying k in the range [1,5] for the real-life and the benchmark datasets, respectively. Results achieved on the real-life crawled data show that our approach performs best for any tested value of k in terms of precision at rank k (see Figure 4(b)). Furthermore, it also performs best for k equal to 1 and 2 in terms of success, while its performance is comparable to one of the other approaches for k  X  3. A slightly different performance trend comes out on the benchmark dataset. Our system is slightly less accurate than its best competitor in first tag prediction, while it performs significantly better than all the others (including Probabilistic prediction ) in recommending all the subsequent tags.

In summary, results show that our approach, on average, selects the most suitable recommendable tags at the top of the ranking and precisely identifies the potential user interests. In this section we analyze the results achieved by our system in a real-life use-case. Consider a user that is annotating a Flickr photo of the St. Mary Church, located at the Financial District of San Francisco (California, U.S.A.) nearby the Financial Center. The photo is taken from the real-life photo collection described in Section 4.1. Over the photo annotations a set of generalization hierarchies, whose extract is shown in Figure 3, is built by our recommendation system (see Section 3.2).

The user is interested in tagging the photo with good descriptors so that the Flickr querying system may effectively retrieve its content based on the user-provided infor-mation. Suppose that the user has already annotated the photo with the following tags  X  ( p i , u j ) = { St. Mary Square, Financial District } . The system analyzes the user-specific and collective knowledge bases to suggest additional tags to recommend. By setting the standard configuration (minimum support threshold minsup = 50%, minimum con-fidence threshold minconf = 40%) the following strong rule is discovered by our system from the collective transactional tag set.
 A) { St. Mary Square, Financial District }  X  { Financial center } (support = 40%, confi-Hence, Financial center is a candidate additional tag to recommend suggested by the community. However, due to the sparsity of the user-specific knowledge base none of the not generalized rules includes { St. Mary Square, Financial District } as rule an-tecedent since the combination of the two tags rarely occurs in the analyzed collection. Nevertheless, the following strong generalized rules are extracted.
 B) { San Francisco Bay, Financial District }  X  { St. Mary } (support = 42%, C) { San Francisco Bay, Financial District }  X  { Business } (support = 55%,
Both rules represent correlations between the previously assigned and the poten-tially relevant future tag annotations at a higher abstraction level. Rule (A) suggests the recommendation of the pertinent tag St. Mary as additional tag, while rule (B) highlights a high-level tag category that is worth considering in the recommendation process. In particular, the latter rule states that, among the past user annotations, a correlation between the category Business and the previously annotated tags holds. In-deed, the user would willingly annotate the photo with a tag belonging to that category. The knowledge about the community behavior addresses the system to recommend the tag Financial center as it is a lower-level descendant of the category Business . We also analyzed the impact of the main system parameters on the tag recommen-dation performance. To this aim, in Figures 6(a) and 6(b) we plot the average MRR, S@1/P@1, and P@5 measures, as representatives among all the tested measures (see Section 4.2), achieved by our system on the real-life collection by varying the minimum support and confidence threshold enforced during the generalized rule mining process, respectively. Curves, not reported here for the sake of brevity, relative to different evaluation measures and datasets show similar trends.

When relatively high support thresholds (e.g., 70%) are enforced, the percentage of not generalized rules is quite limited (e.g., 13% of the user-specific rule set mined from the training photo collection described in Section 4.1) and many informative rules (generalized and not) are discarded. Nevertheless, the use of generalizations may prevent the discarding of the most informative recurrences thanks to the extraction of high-level associations from the user-specific knowledge base. In the opposite case, that is, when relatively low support thresholds (e.g., 20%) are enforced, many low-level tag associations become frequent (e.g., 1.0% of the user-specific rule set from the same training data) and thus are extracted by our system. However, the sparsity of the analyzed tag collections still left some of the most peculiar associations among tags hidden. Aggregating tags into high-level categories allows achieving the best balancing between specialization and generalization of the discovered associations and thus improves recommender system performance.

The confidence threshold may slightly affect the recommendation system perfor-mance. By enforcing very low confidence threshold values (e.g., 30%), a large amount of (possibly misleading) low-confidence rules is selected. Indeed, the quality of the rule-based model, at the top of which the recommendation system is built, worsens. Differently, when increasing the confidence threshold a more selective pruning of the low-quality rules may allow enhancing the recommender system performance. As an extreme case, when enforcing very high confidence thresholds (e.g., 90%), rule pruning selectivity becomes too high to generate a considerable amount of interesting patterns.
Best values of support and confidence threshold actually depend on the analyzed data distribution. For instance, when coping with the benchmark dataset the best minimum support threshold values are around 20%, because the analyzed dataset is relatively sparse.

Success at rank k (e.g., see S@5 in Figures 6(a) and 6(b)) is shown to be, on average, less affected by support and confidence thresholds than precision at rank k , because the probability of finding a relevant tag in the top-k recommended tags is more weakly influenced by the rule-based model quality than the percentage of retrieved relevant tags. This article presents a novel personalized tag recommendation system that performs additional tag recommendations to partially annotated Flickr photos by exploiting gen-eralized association rules extracted from collections of the past personal and collective annotations. The use of high-level associations is focused on counteracting the impact of data sparsity as it may highlight correlations among tags that could remain hidden at the level of individual tags.

A set of experiments has been conducted on real-life Flickr photo collections. The effectiveness of the proposed approach has been validated against a recently proposed tag recommendation system. Experiments show that the use of the generalizations in rule-based tag recommendation yields significant performance improvements.

Our system has so far not been concerned with the analysis of the textual content re-lated to the annotated Web resources (e.g., photo descriptions, related blogs, or articles). We plan to extend it by also considering the user-generated textual content coming from social networks and online communities. Furthermore, to take the evolution of photo annotations over time we will investigate the integration of incremental rule mining approaches as well.

