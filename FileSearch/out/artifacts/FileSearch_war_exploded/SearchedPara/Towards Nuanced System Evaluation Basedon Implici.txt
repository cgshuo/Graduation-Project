 Paul Thomas 1 , Peter Bailey 2 , Alistair Moffat 3( Information retrieval systems underpin the considerable economic success of the web search industry. Billions of queries per day are processed, with search ser-vices possessing a seemingly uncanny ability to identify the page or pages that the user is searching for. A key component of retrieval system development is the use of evaluation processes, in order to measure the quality of the results that are returned. Evaluation options include user focus groups, supervised observa-tional trials, unsupervised trials using query and click logs, and corpus-based batch evaluations.
 from a search engine result ranking to a numeric score. For example, precision at depth k , denoted Prec@ k , scores a ranking by the fraction of the first k doc-uments in it that are deemed to be relevant to the query. Many effectiveness metrics have a corresponding user model . For example, if the user always exam-ines the first k documents in the ranking, and forms an opinion of the search service according to the number of those k documents that are relevant, then their expected utility per document inspected exactly corresponds to Prec@ k .A wide range of more gradual weighted-precision metrics  X  with corresponding user models  X  have been described. For example, in the Rank-Biased Precision (RBP) effectiveness metric [ 15 ], the user is assumed to always examine the first docu-ment in the ranking, and then, having viewed the document at depth d ,goon to depth d + 1 with a fixed probability p . A range of other metrics follow similar approaches, including Expected Reciprocal Rank (ERR) [ 9 ].
 begins their search with an implicit goal of fetching T relevant documents and unconsciously adjusts their  X  X ontinue to the next document X  probability as a function of the depth d in the ranking they have reached, and of the extent of their unfulfilled expectation for relevant documents [ 5 , 14 ]. For example, a user who seeks T = 1 relevant documents will end their search more quickly than a user seeking T = 10 regardless of whether or not relevant documents are encountered; and will end their search even more quickly if they find a high fraction of relevant documents amongst the first ones they examine. These adaptive user models should  X  all other things being held constant  X  lead to more realistic system comparisons, and hence better-quality outcomes for search users.
 tation of required relevance is  X  the quantity denoted as T . In a batch evaluation setting, while curating the creation of a test collection, we can simply ask for this quantity directly from the individual at the point of providing a query in response to some information need. In other evaluation settings, interrogating the user ahead of their search activity may not be desirable, let alone possible. As a first step in resolving that uncertainty, the work presented in this paper explores the extent to which T can be established as a function of attributes associated with the query the user issues. Towards that goal, Sect. 2 describes the user models that we work with; Sect. 3 describes a crowdsourced expectation and query data-gathering exercise, and briefly summarizes the results that have already been achieved using that data; and then Sect. 4 describes the additional analysis carried out for the purposes of this work.
 its frequency, and its length, we are able to provide better prediction of T over the aggregated data than simply taking the majority value of T and using it as a constant prediction. However, to date the gain in prediction accuracy that has been achieved is relatively small  X  an increase from 29 % to 33 %. While definitely significant, the gain is not substantial, and is rather less than the gain in accuracy resulting from the use of other features including the topic of the query (not normally available in a production system), and the identity of the user that issued the query (which might be available). This section introduces the concepts of search user models, static and adaptive effectiveness metrics, and search task complexity.
 User Models :A search user model describes the way in which the elements of a ranked list of search results are inspected, and seeks to compute the value of a corresponding effectiveness metric, reflecting the expected rate at which a user gains utility from the system. Gain is a function of relevance, which is assigned to documents by human judges typically using an ordinal scale: for example, a four-level relevance scale might have values not relevant , marginally relevant , relevant ,and highly relevant [ 19 ]. Relevance is then transformed into gain, commonly using a linear [ 10 ] or exponential function [ 8 ].
 Eye tracking analysis has shown that, on average, users scan a search results page from top to bottom [ 11 ], although there is substantial additional variation and movement between individual result items [ 21 ]. As a result, the search user models behind many evaluation metrics such RBP and NDCG [ 10 ] incorporate the notion of a discount , where relevant items that are returned lower down a ranked list contribute smaller amounts of utility to the user. Utility gain was originally defined in absolute terms [ 10 ]; then in terms of expected utility per document inspected [ 15 ]; and most recently, in terms of expected utility per second spent searching [ 17 ]. User models where gain is based on rank position alone are called static , while those that additionally incorporate information about the relevance of the documents that have been seen earlier in the ranking are called adaptive .
 Adaptive Effectiveness Metrics : We have recently introduced the notion of the user X  X  expected search goal, quantified as a utility estimate T , hypothesizing that the value of T provides guidance as to the user X  X  behavior while they are scanning the results list [ 14 ]. In particular, we suggest that  X  X igh T  X  queries involve the inspection of more documents in the result ranking than do  X  X ow T  X  queries, even before any relevance information is taken in to account. The model is adaptive, with searches in which the anticipated utility is accumulated quickly ending earlier than searches in which relatively few relevant documents are encountered. In followup work, we proposed an effectiveness metric  X  X NST X , a weighted-precision  X  X xpected utility per document inspected X  sum defined by the assumption that the user always examines the first document in the ranking, and then continues from depth i to depth i + 1 with probability where T is the user X  X  initial estimate of the number of relevant documents they will find, and T i is the extent of the relevance found in the first i documents in the ranking. INST brings together a range of desirable attributes in a useful manner: it is adaptive, meaning that for any given value of T , the expected search length is less in rankings with many relevant documents than it is in rankings with few relevant documents; it respects patience, in that the continuation probability C ( i ) slowly increases towards one, reflecting that a user who has invested heavily in a ranking and is already some way down a list is (on a conditional basis) more likely to continue scanning documents than a user who is still examining documents in the early part of the ranking; and it is not unbounded, since it has a finite expected search depth even on rankings that do not contain any relevant documents at all. As probabilistic limits, the expected search depth on a ranking with no relevant documents is 2 T +0 . 5, and on a ranking with nothing but relevant documents, is T +0 . 25 [ 5 ].
 Search Task Complexity : Users carry out information seeking tasks for many different reasons. A key characteristic that may vary between tasks is their com-plexity: consider the difference between trying to find the answer to a short factoid question such as the name of the author of  X  X he Odyssey X , versus trying to obtain a deeper understanding of the cultural impact of Homer X  X  work. Kelly et al. [ 12 ] propose a hierarchy of complexity of search tasks, based on a taxon-omy of learning [ 4 ]. In the experiments described below, we consider three of Wu et al. X  X  cognitive complexity levels: Remember , tasks that primarily involve factoid-style answers, similar to recalling knowledge from long-term memory; Understand , tasks that involve the construction of meaning, for example through interpreting or exemplifying; and Analyze , tasks that involve breaking material into parts, and making overall decisions based on how these facets relate to one another [ 22 ]. Section 3 gives examples of information needs in these three categories.
 Query Variability : Users typically turn to an information retrieval system with the aim of resolving an information need. A key step of their interaction with the system is to translate this information need into a query; for most users of modern search engines, this typically involves typing a small set of search terms into a text box. However, due to the expressiveness of language, many differ-ent queries could be used as instantiations of the same information need. This occurs for example when users refine an initial query as part of the same search session [ 13 ]. However, attempts to quantify the impact of query variability as a component of IR system evaluation have been limited. As part of the 1999 TREC-8 Query Track [ 7 ], participants were asked to generate alternative query strings for supplied information need statements (called search topics in the TREC framework). The track concluded that query variation can lead to sub-stantial differences in retrieval effectiveness. In recent work, we have gathered variant queries intended to express the same underlying information needs [ 5 ]. We make use of these crowdsourced queries to investigate approaches to model a searcher X  X  expected utility, as explained in the next section. As part of our study into the effects of query variability, we carried out a user experiment and gathered data using crowdsourcing. This section provides a brief overview of that experiment, and describes the data that was collected. Crowdsourcing : Crowdsourcing is the process of soliciting work from a large group of people (the  X  X rowd X ) in an online setting. The work is typically adver-tised through a crowdsourcing platform, such as Amazon Mechanical Turk or CrowdFlower. Internet users can register with the platform, search or browse through a list of available work, and choose whether to participate. The termi-nology of crowdsourcing tends to vary from platform to platform; in this work we refer to the people who offer their labor through a crowdsourcing platform as  X  X orkers X , and each discrete unit of work that is carried out is called a  X  X ask X . In the research world, crowdsourcing has become popular as a method to recruit participants for experiments involving humans responses. As an experimental practice, crowdsourcing has been criticized for reducing the level of control that researchers have over their pool of participants; conversely, proponents of crowd-sourcing have highlighted that a more diverse user base is likely to be a positive feature, since prior to crowdsourcing the typical participant pool for human fac-tors research studies consisted of university undergraduate students [ 1 ]. In the IR field, initial investigations have suggested that crowdsourcing, with appropriate controls to remove  X  X pam X  workers (people who do not take the job seriously, or the activities of automated bots intended to mimic human responses), can be a useful source of participants for user studies, including relevance judging [ 3 , 18 ]. Topics and Backstories : The NIST-sponsored TREC shared tasks have been generating useful search data for more than two decades. The test collections (consisting of sets of topics, documents, and judgments) that have been con-structed have become invaluable resources for IR experimentation. marizes the three different collections used in our experimentation, and gives a sample  X  X itle X  query for each collection, noting that detailed  X  X arrative X  and  X  X escription X  sections are also provided for the R03 and T04 topic statements. In the case of the R03 and T04 queries, we started with TREC topic descrip-tions and narratives, and wrote what they called a backstory for each one, to personalize and motivate the information need. Backstories were also written based on the Q02 questions. For example, the backstories for the queries shown in Table 1 were:  X  You saw a Discovery Channel show that said that it takes eight minutes for the light from the sun to travel to the earth. You want to find out how far away the sun is in miles or kilometers.  X  A workmate has been diagnosed with arthritis. You know she struggled once with Lyme disease, from a tick bite. You wonder what evidence there is to support (or refute) a connection between the two.  X  A surgeon has recently recommended gastric bypass surgery for your over-weight uncle. He wants to lose weight, but you would like to help him make an informed decision by alerting him to the possible complications and potential dangers of gastric bypass surgery.
 These three information needs have, respectively, task complexity categories Remember, Analyze, and Understand. 2 Experimental Process : For each search topic, study participants were first shown the backstory motivating an information need. They were then asked to provide three pieces of information: the total number of useful web pages they thought they would need to look at to answer the information need ( T ); how many different queries they thought they would need to issue in order to find that number of useful pages ( Q ); and what their first (written text) query would be when using a search engine to answer the information need. The first two responses were collected using single-selection radio buttons describing numeric ranges, and the third was a free-form text field. The interface, including the range of answer choices, is shown in Fig. 1 , using one of the example backstories already introduced. Note the bands on values of T and Q used during the data collection.
 consisted of providing answers in response to five of the 180 different search topics. Users could choose to complete as many units as they wished, providing answers to anywhere between 5 and 180 topics if they wished. Since not all crowdworkers take their tasks seriously, data cleaning was carried out. If any worker entered the same  X  X irst query X  string for more than one topic, all of their responses were removed from the subsequent analysis. Workers who simply pasted fragments of the topic statements that were deemed nonsensical as their  X  X irst query X  were also removed. The remaining data consisted of 98 workers who provided 7,969 responses, with a median of 44 responses per topic. We now describe our detailed investigation of T and Q , making use of the data collected as part of the work described in the previous section. Overall Distribution : The great majority of responses were for T of one to ten  X  that is, people expected to read one to ten relevant documents to answer the information need. There were 436 responses (5 . 5 %) where T = 0 and people expected to answer their need from the result listing alone; 654 (8 . 2 %) of  X 11 X  100 useful pages X ; and 62 (0 . 8 %) of  X 101+ useful pages X . The most common responses were T = 1, with 2,329 cases (29 %), and T = 3 X 5, with 1,782 (22 %) of responses.
 There was a similar skew in estimates of Q . The most common response was  X  X ne query X , with 3,521 cases (44 %). At the other end of the range, there were only 600 cases (7 . 5 %) in the top two categories, where workers expected to need six queries or more. Across all 7,969 responses, T and Q are correlated and participants who expect to need several documents also expect to need several queries to find these documents. Figure 2 plots that correlation. As noted in the caption, this relationship is significant according to Spearman X  X   X  =0 . 66, one-sided p 0 . 01. A full 24 % of the workers X  responses nominated T =1and Q = 1, indicating that they expected to need a single relevant document, and would find it by issuing a single query.
 The Influence of Search Task Complexity on T and Q : To investigate the rela-tionship between the complexity of search tasks and the number of documents and queries that a searcher believes they will need to complete the task, each of the 180 search tasks was categorized into one of three search task complexity levels identified by Wu et al. [ 22 ].
 The relationships between task complexity and the user estimates of the total number of relevant documents that need to be viewed to fulfill an information need ( T ), and the number of queries that need to be issued to find those doc-uments ( Q ), are depicted in Fig. 3 . For both T and Q , a clear trend can be seen whereby a searcher expects to need fewer documents, and fewer queries to find those documents, for tasks of a lower cognitive complexity. The distinc-tion is strongest between the Remember category on the one hand, and the two higher complexity categories on the other; with the Understand and Analyze tasks having somewhat similar distributions. Even so, the highest complexity Analyze category also has the highest overall weight allocated to requiring a larger number of documents and queries.
 of the information need [ 5 ] raises an obvious question: can T and/or Q be esti-mated or predicted without asking the user? To attempt this, and to understand which factors are most relevant, we used cumulative logistic regression crowdsourced data to model how T and Q respond to a number of potential explanatory variables. Model selection and parameter estimation were simulta-neous, and all data was used to build the model.  X  Per-user and per-topic factors : We start with two factors which are extrinsic to the query text: the identity of the user (here, CrowdFlower X  X  worker identifier) and the information need or topic (here, the TREC topic number). The first reflects an individual X  X  overall propensity to expect more or fewer interactions, and the second reflects characteristics such as topic complexity. Modern search engines may carry out extensive personalization, and thus can be expected to encode user identity factors relating to long term interaction patterns with documents if they prove useful, within a broader framework [ 6 ]. Simpler search engines may not carry out any personalization, and thus would not be able to encode user identity. Even with extensive contextual information modeling, in the general case, an information need (as represented by a topic in our data) is not known to search engines; however topic effects have long been known to be important within test collections. We expect these two factors to explain a lot of variability.  X  Query characteristics : This includes the number of words and the number of characters  X  two ways of determining length  X  and the mean characters per word, which is a surrogate for the complexity of each word. We also investigated the maximum inverse document frequency (IDF) and sum of
IDFs assigned by Indri X  X  Okapi BM25 similarity scoring regime, across all terms in the query, as a surrogate for specificity of the query.  X  List characteristics : Potential explanatory factors include characteristics of the resulting ranked list, which are known after the query is processed but without any further feedback. Here we use the BM25 scores assigned by Indri to the documents ranked 1, 10, and 100, to reflect the quality of the returned list. We also use the ratio of the scores at 10 and 1, 100 and 1, and 100 and 10 (labeled  X  X ndri@10:1 X , and so on), to reflect the consistency of the scores: a high ratio suggests consistent scores. We also include the number of answers if the query is treated a conjunctive Boolean query  X  that is, the number of documents containing all query terms.  X  Past behavior : Finally, we consider two characteristics of past user behavior.
Query frequency is drawn from the logs of the Microsoft Bing web search engine, based on usage data within the month June 2015 and is normalized to the range (0 , 1), where higher values represent more common queries. Relative click-through rate is drawn from the same logs and represents the ratio of click-through rate for this information need to the global average (so numbers lower than 1 represent fewer clicks). The data is aggregated by topic, and averaged.
Missing query-level data is smoothed by assuming the lowest possible query frequency, and the global average click-through rate. This data, of course, is not usually available outside the large search engines.
 Fitted Models : Table 2 gives the best models for T and Q , selecting from all of the listed factors except user and topic ID (which may be unknown or unknowable). Models were learned to minimize the Akaike information criterion (AIC) [ 2 ], which combines log-likelihood with a penalty for each factor in the model. Effects are given as modifiers to log-odds, and effects greater than zero mean higher odds for responses further up the scale  X  that is, positive effects mean higher values of T are more likely as the underlying variable increases. Factors are given in the order selected. For example, query frequency is the best single factor for predicting either T or Q .
 are more common predict lower values of T or Q . This is easy to interpret, since we may expect popular or authoritative pages for common queries; Teevan et al. [ 20 ] have also noted that common queries were less ambiguous. The other behavioral feature, relative click-through rate, has positive and moderately large effects in both models: as click-through rate increases, searchers expect to need more interactions. This means searchers are able to predict, at least crudely, how much interaction they will use to address a need.
 more interactions, which is possibly explained by longer terms capturing more complex information needs. Queries with more words predict lower T and Q , which is consistent with longer queries being more specific or possibly asking a question in natural language. This relationship between query length and speci-ficity has been noted by Phan et al. [ 16 ], and again Teevan et al. noted queries with more characters were less ambiguous (although this did not hold for queries with more words). As the maximum IDF grows  X  meaning rarer words appear in the query  X  we see the same effect, with more specific language corresponding to lower T and Q .
 case of T , we see four effects at play. As the number of Boolean answers increases, T increases; T also increases as scores are more consistent from ranks 1 to 100. The quality of the first result ( X  X ndri@1 X ) also correlates with T . The consistency of scores in the tail ( X  X ndri@100:10 X ) anticorrelates however, and it is not clear why this is the case. We hope to better understand this relationship in future work.
 Models Compared : To further examine how well potential explanatory factors predict T , we built six models on the principles above. The first is a simple majority model (intercept only), and always predicts the most common response, T = 1. One model each was built with only query, list, and behavior factors; we also include the learned model reported in Table 2 , which draws from all of these sets. Finally, we built a model which uses user and topic identity, which can adapt to per-user preferences and per-topic complexity.
 Table 3 reports two measures of quality for each model. Accuracy is the num-ber of times the model exactly predicts our users X  estimate of T (recall that users chose from seven bands).  X  AIC is the difference in AIC between each model and the best model we have; lower scores are better. Note that AIC (and hence likeli-hood) improves dramatically over the majority baseline no matter which factors we use, but query characteristics are the most useful group as a whole with AIC improving by 3176. The combined model is better still with a further AIC improvement of 229. However, accuracy is not significantly better and we only see a 4 % improvement at best, from 29 % to 33 %. If we want to use these models to get a point estimate for T , rather than a distribution over possible values, they are not a great improvement.
 If models are allowed to make use of the user X  X  identity  X  here, we have used the CrowdFlower ID  X  and the topic behind the query, it is possible to do much better (bottom part of Table 3 ). Using either of these two factors, a further improvement of over 1600 points of AIC and accuracy of 39 X 40 % is possible; using both, over 6000 AIC points are gained compared to Table 2 , and accuracy of 51 %. If all factors are allowed  X  that is, user and topic factors as well as query, list, and behavior factors  X  the best model includes user and topic identifiers, number of words, and mean characters per word, and is better by a further 74 points of AIC while still getting 51 % accuracy.
 Combined with almost certainly unknowable information (the topic), we were able to achieve an accuracy of 51 % in estimating the users X  selection of T from one of seven bands. Using only information from the query and documents, which can be reliably calculated by modern search engines, our best effort achieves only 33 %. Whether this degree of accuracy is sufficient to be useful in practice for evaluation of a search system operating over a query population in-the-wild is unknown. We are forced to conclude that there are other significant factors which we have not considered that contribute to the gap in accuracy for our best performing model.
 which we will address as we continue with this project. First, due to choices made at the time the data was collected, the estimates we have been working with make use of bucketed bands of document and query counts, and involve an inevitable loss of accuracy. We hope to repeat the original experiment with a variation allowing users to provide more fine-grained estimates. Second, our modeling has been attempting to predict T for an individual X  X  estimate relating to an information need. However, the current data actually encompasses a distribution over a number (median 44) of estimates for that information need. Instead of attempting to predict a single estimate, and assuming an information need-centric approach to evaluation (rather than a query-centric approach), we might instead predict a distribution. Adaptive effectiveness metrics such as INST may then require modification to encode T as a probabilistic variable rather than as a fixed value.
 lection, starting from information needs and encoding user variability, including queries and effort estimates, across a range of task complexities. We hope that this approach of capturing many sources of variability may assist in closing the gap of modeling effort expectations without explicitly needing to ask the user.
