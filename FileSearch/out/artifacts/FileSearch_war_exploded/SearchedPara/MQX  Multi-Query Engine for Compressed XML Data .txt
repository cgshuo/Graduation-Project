 H.2.4 [Systems]: Query processi ng; H.3.3 [Information Systems]: Information filtering.
 Management, Performance. XML, Multi-Query, Compression. structures. Previous work has studied the techniques for efficient evaluation path expressions on original XML document [1] or single-query processing on comp ressed data [4] based on the different XML compression methods. However, it is still not clear how to exploit the existing XML compression techniques to evaluate multi-query and optimization strategies in XML subscribe/dissemination applications [2]. In this demonstration, we present MQX which is capable of processing multiple subscribed XPath query over co mpressed XML data. Different from most information retrieval or filtering systems which return the whole document, MQX obtains the matched XML elements, which is a fragment of the whole document. To demonstrate the novel features [3] of MQX, we build a co-operative network and implement a content-based subscription system. Assume that there are some co-operation relationships among clients where the server keeps a large number of compressed XML documents, and clients request to obtain information or news from the server in a cooperative way, i.e., each client can send results to others. To prevent the server from becoming a bottleneck, we adopt a distributed approach where all clients participate in the di ssemination process. The most distinguishing feature of MQX is that multi-query over compressed XML data can be pro cessed as a whole, resulting in faster data disseminati on. Another important feature is that the engine reduces the bandwidth c onsumption greatly compared to the traditional XML query engines such as SAXON. MQX engine consists of four main components as shown in Fig.1. XCT facilitates data compression and storage; MQEngine (Multi-Query processor) supports query rewriting, multi-query organization and optimization; DM (Dissemination Manager) sends the results to specific clients; and GUI (the interface unit). 
