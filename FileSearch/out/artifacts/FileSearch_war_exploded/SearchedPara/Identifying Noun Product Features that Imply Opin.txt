 Opinion words are words that convey positive or negative polarities. They are critical for opinion mining (Pang et al., 2002; Turney, 2002; Hu and Liu, 2004; Wilson et al., 2004; Popescu and Etzioni, 2005; Gamon et al., 2005; Ku et al., 2006; Breck et al . , 2007; Kobayashi et al., 2007; Ding et al., 2008; Titov and McDonald, 2008; Pang and Lee, 2008; Lu et al., 2009). The key difficulty in finding such words is that opinions expressed by many of them are domain or context dependent. 
Several researchers have studied the problem of finding opinion words (Liu, 2010). The approaches can be grouped into corpus-based approaches (Hatzivassiloglou and McKeown, 1997; Wiebe, 2000; Kanayama and Nasukawa, 2006; Qiu et al., 2009) and dictionary-based approaches (Hu and Liu 2004; Kim and Hovy, 2004; Kamps et al . , 2004; Esuli and Sebastiani, 2005; Takamura et al., 2005; Andreevskaia and Berg ler, 2006; Dragut et al., 2010). Dictionary-based approaches are generally not suitable for finding domain specific opinion words as dictionaries contain little domain specific information. 
Hatzivassiloglou and Mc Keown (1997) did the first work to tackle the problem for adjectives using a corpus. The approach exploits some conjunctive patterns, involving and , or , but , either-or , or neither-nor , with the intuition that the conjoining adjectives subject to linguistic constraints on the orientation or polarity of the adjectives involved. Using these constraints, one can infer opinion polarities of unknown adjectives based on the known ones. Kanayama and Nasukawa (2006) improved this work by using the idea of coherency. They deal with both adjectives and verbs. Ding et al. (2008) introduced the concept of feature context because the polarities of many opinion bearing words are sentence context dependent rather than just domain dependent. Qiu et al. (2009) proposed a method called double propagation that uses dependency relations to extract both opinion words and product features. However, none of these approaches handle nouns or noun phrases. Although Zagibalov and Carroll (2008) noticed the issue, they did not study it. 
Esuli and Sebastiani (2006) used WordNet to determine polarities of words, which can include nouns. However, dictionaries do not contain domain specific information. 
Our work uses the feature-based opinion mining model in (Hu and Liu, 2004) to mine opinions in product reviews. We found that in some application domains produc t features which are indicated by nouns have implied opinions although they are not subjective words. 
This paper aims to identify such opinionated noun features. To make this concrete, let us see an example from a mattress review:  X  Within a month, a valley formed in the middle of the mattress . X  Here  X  X alley X  indicates the quality of the mattress (a product feature) and also implies a negative opinion. The opinion implied by  X  X alley X  cannot be found by current techniques. 
Although Riloff et al. (2003) proposed a method to extract subjective nouns, our work is very different because many nouns implying opinions are not subjective nouns, but objective nouns, e.g.,  X  X alley X  and  X  X ole X  on a mattress. Those sentences involving such nouns are usually also objective sentences. As much of the existing opinion mining research focuses on subjective sentences, we believe it is high time to study objective words and sentences that imply opinions as well. This paper represents a positive step towards this direction. Objective words (or sentences) that imply opinions are very difficult to recognize because their recognition typically requires the commonsense or world knowledge of the application domain. In this paper, we propose a method to deal with the problem, specifically, finding product features which are nouns or noun phrases and imply positive or negative opinions. Our experimental results show promising results. We start with some observations. For a product feature (or feature for short) with an implied opinion, there is either no adjective opinion word that modifies it directly or the opinion word that modify it usually have the same opinion. Example 1 : No opinion adjective word modifies the opinionated product feature ( X  X alley X ):  X  Within a month, a valley formed in the middle Example 2 : An opinion adjective modifies the opinionated product feature:  X  Within a month, a bad valley formed in the Here, the adjective  X  X ad X  modifies  X  X alley X . It is unlikely that a positive opinion word will modify  X  X alley X , e.g.,  X  X ood valley X  in this context. Thus, if a product feature is modified by both positive and negative opinion adjectives, it is unlikely to be an opinionated product feature. following two steps to identify noun product features which imply positive or negative opinions: 1. Candidate Identification : This step determines 2. Pruning : This step prunes the two lists. The Basically, step 1 needs the feature-based sentiment analysis capability. We adopt the lexicon-based approach in (Ding et al. 2008) in this work. 2.1 Feature-Based Sentiment Analysis To use the lexicon-based sentiment analysis method, we need a list of opinion words, i.e., an opinion lexicon. Opini on words are words that express positive or negative sentiments. As noted earlier, there are also many words whose polarities depend on the contexts in which they appear. 
Researchers have compiled sets of opinion words for adjectives, adverbs, verbs and nouns respectively, called the opinion lexicon . In this paper, we used the opinion lexicon complied by Ding et al. (2008). It is worth mentioning that our task is to find nouns which imply opinions in a specific domain, and such nouns do not appear in any general opinion lexicon. 2.1.1. Aggregating Opinions on a Feature Using the opinion lexicon, we can identify opinion polarity expressed on each product feature in a sentence. The lexicon based method in (Ding et al. 2008) basically combines opinion words in the sentence to assign a sentiment to each product feature. The sketch of the algorithm is as follows. 
Given a sentence s which contains a product feature f , opinion words in the sentence are first identified by matching with the words in the opinion lexicon. It then computes an orientation score for f . A positive word is assigned the semantic orientation (polarity) score of +1, and a negative word is assigned the semantic orientation score of -1. All the scores are then summed up using the following score formula: where w i is an opinion word, L is the set of all opinion words (including idioms) and s is the sentence that contains the feature f , and dis ( w i , f ) is the distance between feature f and opinion word w i in s . w i . SO is the semantic orientation (polarity) of word w i . The multiplicative inverse in the formula is used to give low wei ghts to opinion words that are far away from the feature f .

If the final score is positive, then the opinion on the feature in s is positive. If the score is negative, then the opinion on the feature in s is negative. 2.1.2. Rules of Opinions Several language constructs need special handling, for which a set of rules is applied (Ding et al., 2008; Liu, 2010). A rule of opinion is an implication with an expression on the left and an implied opinion on the right. The expression is a conceptual one as it represents a concept, which can be expressed in many ways in a sentence.

Negation rule . A negation word or phrase usually reverses the opinion expressed in a sentence. Negation words include  X  X o, X   X  X ot X , etc. 
In this work, we also discovered that when applying negation rules, a special case needs extra care. For example,  X  I am not bothered by the hump on the mattress  X  is a sentence from a mattress review. It expresses a neutral feeling from the person. However, it also implies a negative opinion about  X  hump , X  which indicates a product feature. We call this kind of sentences negated feeling response sentences. A sentence like this normally expresses the feeling of a person or a group of persons towards some items which generally have positive or negative connotations in the sentence context or the application domain. Such a sentence usually consists of four components: a noun representing a person or a gr oup of persons (which includes personal pronoun and proper noun), a negation word, a feeling verb, and a stimulus word. Feeling verbs include  X  X other, X   X  X isturb, X   X  X nnoy, X  etc. The stimulus word, which stimulates the feeling, also indicates a feature. In analyzing such a sentence, for our purpose, the negation is not applied. Instead, we regard the sentence bearing the same opinion about the stimulus word as the opinion of the feeling verb. These opinion contexts will help the statistical test later. 
But clause rule . A sentence containing  X  X ut X  also needs special treatment. The opinion before  X  X ut X  and after  X  X ut X  are usually the opposite to each other. Phrases such as  X  X xcept that X  and  X  X xcept for X  behave similarly. 
Deceasing and increasing rules . These rules say that deceasing or increasing of some quantities associated with opinionated items may change the orientations of the opinions. For example,  X  The drug eased my pain  X . Here  X  X ain X  is a negative opinion word in the opinion lexicon, and the reduction of  X  X ain X  indicates a desirable effect of the drug. We have compiled a list of such words, which include  X  X ecease X ,  X  X iminish X ,  X  X revent X ,  X  X emove X , etc. The basic rules are as follows: Decreased Neg  X  Positive E.g:  X  My problem have certainly diminished  X  Decreased Pos  X  Negative E.g:  X  These tires reduce the fun of driving.  X  
Neg and Pos represent respectively a negative and a positive opinion word. Increasing rules do not change opinion directions (Liu, 2010). 2.1.3. Handing Context-Dependent Opinions As mentioned earlier, context-dependent opinion words (only adjectives and adverbs) must be determined by its contexts . We solve this problem by using the global information rather than only the local information in the current sentence. We use a conjunction rule. For example, if someone writes a sentence like  X  This camera is very nice and has a long battery life  X , we can infer that  X  X ong X  is positive for  X  X attery life X  because it is conjoined with the positive word  X  X ice. X  This discovery can be used anywhere in the corpus. 2.2 Determining Candidate Noun Product Using the sentiment analysis method in section 2.1, we can identify opinion sentences for each product feature in context, which contains both positive-opinionated sentences and negative-opinionated sentences. We then determine candidate product features implying opinions by checking the percentage of either positive-opinionated sentences or negative-opinionated sentences among all opinionated sentences. Through experiments, we make an empirical assumption that if either the positive-opinionated sentence percentage or the negative-opinionated sente nce percentage is significantly greater than 70%, we regard this noun feature as a noun feature implying an opinion. The basic heuristic for our idea is that if a noun feature is more likely to occur in positive (or negative) opinion contexts (sentences), it is more likely to be an opinionated noun feature. We use a statistic method test for population proportion to perform the significant test. The details are as follows. We compute the Z -score statistic with one-tailed test. where p 0 is the hypothesized value (0.7 in our case), p is the sample proportion, i.e., the percentage of positive (or negative) opinions in our case, and n is the sample size, which is the total number of opinionated sentences that contain the noun feature. We set the statistical confidence level to 0.95, whose corresponding Z score is -1.64. It means that Z score for an opinionated feature must be no less than -1.64. Otherwise we do not regard it as a feature implying opinion. 2.3 Pruning Non-Opinionated Features Many of candidate noun features with opinions may not indicate any opinion. Then, we need to distinguish features which have implied opinions and normal features which have no opinions, e.g.,  X  X oice quality X  and  X  X attery life. X  For normal features, people often can have different opinions. For example, for  X  X oice quality X , people can say  X  X ood voice quality X  or  X  X ad voice quality. X  However, for features with context dependent opinions, people often have a fixed opinion, either positive or negative but not both. With this observation in mind, we can detect features with no opinion by finding direct modification relations using a dependency parser. To be safe, we use only two types of direct relations: Type1: O  X  O-Dep  X  F Type 2: O  X  O-Dep  X  H  X  F-Dep  X  F Here O is an opinion word, O-Dep / F-Dep is a dependency relation, which describes a relation between words, and includes mod , pnmod, subj , s , obj , obj2 and desc (detailed explanations can be found in http://www.cs.ualberta.ca/~lindek/ minipar.htm). F is a noun feature. H means any word. For the first example, given feature  X  X icture quality X , we can extract its modification opinion word  X  X ood X . For the second example, given feature  X  X prings X , we can get opinion word  X  X ad X . Here H is the word  X  X re X . feature noun, if some belong to the positive opinion lexicon and some belong to the negative opinion lexicon, we conclude the noun feature is not an opinionated feature and is thus pruned. We conducted experiments us ing four diverse real-life datasets of reviews. Table 1 shows the domains (based on their names) of the datasets, the number of sentences, and the number of noun features. The first two datasets were obtained from a commercial company that provides opinion mining services, and the other two were crawled by us. An issue for judging noun features implying opinions is that it can be subjective. So for the gold standard, a consensus has to be reached between the two annotators. 
For comparison, we also implemented a baseline method, which decides a noun feature X  X  polarity only by its modifying opinion words (adjectives). If its corresponding adjective is positive-orientated, then the noun feature is positive-orientated. The same goes for a negative-orientated noun feature. Then using the same techniques in section 2.3 for statistical test (in this case, n in equation 2 is the total number of sentences containing the noun feature) and for pruning, we can determine noun features implying opinions from the data corpus. 
Table 2 gives the experimental results. The performances are measured using the standard evaluation measures of precision and recall. From Table 2, we can see that the proposed method is much better than the baseline method on both the recall and precision. It indicates many noun features that imply opinions are not directly modified by adjective opinion words. We have to determine their polarities based on contexts. Table 2 . Experimental results for noun features Table 3 and Table 4 give the results of noun features implying positive and negative opinions separately. No baseline method is used here due to its poor results. Because fo r some datasets, there is no noun feature implying a positive/negative opinion, their precision and recall are zeros. From Tables 2 -4, we observe that the precision of the proposed method is still low, although the recalls are good. To better help the user find such words easily, we rank the extracted feature candidates. The purpose is to rank correct noun features that imply opinions at the top of the list, so as to improve the precision of the top-ranked candidates. Two ranking methods are used: 1. rank based on the statistical score Z in equation 2. rank based on negative/ positive sentence ratio. Tables 5 and 6 show the ranking results. We adopt the rank precision, also called the precision@N , metric for evaluation. It gives the percentage of correct noun features implying opinions at the rank position N . Because some domains may not contain positive or negative noun features, we combine positive and negative candidate features together for an overall ranking for each dataset. Table 6 . Experimental results: Precision@15 From Tables 5 and 6, we can see that the ranking by statistical value Z is more accurate than negative/positive sentence ratio. Note that in Table 6, there is no result for the Drug dataset because no noun features implying opinions were found beyond the top 10 results because there are not many such noun features in the drug domain. This paper proposed a method to identify noun product features that imply opinions. Conceptually, this work studied the problem of objective nouns and sentences with implied opinions. To the best of our knowledge, this problem has not been studied in the literature. This problem is important because without identifying such opinions, the recall of opinion mining suffers. Our proposed method determines feature polarity not only by opinion words that modify the features but also by its surrounding context. Experimental results show that the proposed method is promising. Our future work will focus on improving the precision. 
