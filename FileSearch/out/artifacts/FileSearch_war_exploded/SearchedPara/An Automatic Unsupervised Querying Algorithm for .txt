 Rich information is embedded in unstructured text collections, and this information is often discovered in a structured or relational form. With more than 12 million abstracts in MEDLINE, processing time b ecomes a bottleneck in exploiting IE to leverage extracted information with relational databases. Current IE approaches, however, are not flexible for huge online biomedical text databases, which cover so many sub-domains [1]. We introduce an automatic querying technique, called DocSpotter, to identify the promising documents for the extraction of a relation from text. DocSpotter only requires an initial query to the text database provided by a user. Our technique is an unsupervised querying technique for retrieving useful documents for information extraction from large biomedical databases. 
There are several key advantages of using key phrases for queries in an iterative query expansion technique that combines global analysis with local analysis. Global analysis refers to a technique of extracting key phrases from the whole collection and then maps it out to synonymously as well as hierarchically related concepts. Local analysis means a technique to weigh noun phrases and converted noun phrases from verbs found in the same passages that contains the matched query. Our technique also translates candidate keyphrases to Disjunctive Normal Form (DNF) with Part-Of-Speech (POS) categories. Third, our approach is based on the technique of iterative and exhaustive keyphrase extraction. This approach fits well in the target application that requires the greedy and comprehensive retrieval results. 
The rest of the paper is organized as follows: Section 2 describes the overall architecture of DocSpotter. Section 3 de scribes the query expansion procedures. Section 4 reports on the experiments. Section 5 concludes the paper. DocSpotter is a novel querying technique to iteratively retrieve promising documents for information extraction. Figure 1 illustrates how a novel query expansion algorithm works in DocSpotter. 
The outline of the approach described in Figure 1 is as follows: In this section, we discuss what techniques and procedures are used for query expansion. The following three subsections gave detailed descriptions of the techniques used for keyphrase extracting, query re-weighting, and query translating in DocSpotter. 3.1 Keyphrase Extraction Procedures As illustrated in Figure 2, keyphrase extraction in DocSpotter comprises the following two stages: 1) building extraction model and 2) extracting keyphrases. In Figure 2, the dotted line represents the processing logic for  X  X uilding extraction model X  whereas the solid line indicates the processing logic for  X  X xtracting keyphrases. X  The detail descriptions are provided in the following subsections. These two stages are fully automated. 3.2 Keyphrase Ranking Automatic query expansion requires a term selection stage where the system selects the terms based on some criterion. The ranked order of terms is of primary importance keyphrases. While there are many promising alternatives to this weighting scheme in the IR literature [5], we chose Robertson-Spark Jones algorithm as our base because it addition, incorporating other term weighting schemes into DocSpotter is easy and does not require changes to our model. F4point-5 formula is first proposed by Robertson and Spark Jones [5]. It has been widely used in IR systems with some modifications (Okapi). We modified F4point-5 formula for information extraction tasks. 3.3 Query Translation into DNF Query reformulation specifically in Boolean IR systems has been the subject of study for over 25 years. The algorithm for automating Boolean query formulation was proposed in 1970. This method employs a term weighting function first described in [4] to decide the  X  X mportance X  of terms which have been identified. The terms are then aggregated into  X  X ub-requests X  and combined into a Boolean expression in disjunctive normal form (DNF). The algorithms proposed to translate a query to DNF include classification-based [4], decision-tr ee [2], and thesaurus-based [7] algorithms. Our POS category-based translation technique is differentiated from others in that domains. In our technique, there are four different phrase categories defined; 1) MESH term category, 2) Non-MESH noun category, 3) Non-MESH proper noun category, and 4) Verb category. 
For the top N ranked keyphrases, DocSpotter looks up MESH to determine whether any corresponding heading to each keyphrase exists. If there is a corresponding heading, the keyphrase is categorized as MESH term category. Non-MESH keyphrases are then classified into three categories depending on the POS class of keyphrases. Keyphrases within the category are translated into DNF and categories are then translated into Conj unctive Normal Form (CNF). We conducted experiments to evaluate the performance of DocSpotter on the task of protein-protein interaction extraction. The protein-protein interaction data sets are composed of abstracts collected from the MEDLINE. ]The protein names are Interaction Database (PPID) databases. We also compare DocSpotter with SLIPPER, a supervised rule-based query expansion t echnique [3]. SLIPPER is one of the well-accepted query expansion techniques. 4.1 SLIPPER We chose SLIPPER to compare the performance of DocSpotter in generating queries. SLIPPER is an efficient rule-learning syst em, which is based on confidence-ruled boosting, a variant of AdaBoost [3]. SLIIPPER learns concise rules such as  X  X rotein AND interacts X  --&gt; Useful , which shows that if a document contains both term generated by SLIPPER are then translated into conjunctive queries in the search interacts. X  4.2 Experimental Results The second column is the number of retrieved documents from MEDLINE for iteration. The third column means the number of documents containing protein-protein pairs in the retrieved documents by DocSpotter. 
As shown in Table 1, our approach is able to retrieve more documents that contain protein-protein pairs as the number of iterations increases. In first iteration, the initial query retrieved 30 documents. Within the 30 documents retrieved, 18 documents contain protein-protein pairs. In fourth iteration, out of 1549 documents retrieved, 578 documents contain protein-protein pairs. Although accuracy seems decrease from first protein-protein pairs. The experimental results seem encouraging. We also conduct another set of experiments to compare DocSpotter with SLIPPER. SLIPPER is a supervised rule-based query expansion technique. Fig 3 shows the results of the performance comparison between DocSpotter and SLIPPER. The y axis represents the accuracy calculated by dividing the total number of relevant documents by the total number of retrieved documents. DocSpotter outperforms SLIPPER from dividing the documents containing protein-protein pairs by the total number of retrieved documents. It appears that accuracy for SLIPPER drops significantly in third iteration whereas accuracy for DocSpotter looks steady with marginal decreases. We proposed novel effective query tech nique for information extraction. Our approach automatically discovers the characteristics of documents that are useful for extraction of a target relation. Our technique starts with only a handful of user-provided examples of instances of the rela tion to extract. Using these seed instances, our system retrieves a sample of documents from the database. Then we apply machine learning and information retrieval techniques to learn queries that will tend to match additional useful documents. Our technique is different from other query expansion techniques in the following aspects. First, it proposes a hybrid query expansion algorithm combining the Robertson Sparck-Jones query re-ranking and the keyphrase extraction algorithm by Information Gain. Second, our technique adopts a query translation technique that converts candidate keyphrases to Disjunctive Normal Form (DNF) with POS categories. Third, our approach is based on the technique of application that requires the greedy and comprehensive retrieval results. 
We conducted a series of experiments to examine how accurately our technique retrieves a set of documents containing protein-protein pairs. The results show that DocSpotter is able to retrieve more documents that contain protein-protein pairs from MEDLINE as iteration increases. In another set of experiments, DocSpotter is compared with SLIPPER, a supervised ru le-based query expansion technique. The results show that DocSpotter outperforms SLIPPER from 17.90% to 29.98 better in terms of accuracy in all four iterations. 
