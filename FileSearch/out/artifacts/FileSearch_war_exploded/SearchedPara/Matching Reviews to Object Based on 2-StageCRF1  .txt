 Compared to traditional data integrati on, the entity type concerned in web data integration is more various which includes the focus target entities as well as the relevant entities, providing users the more complete views of entities. Among the relevant entities, review is the ver y important information because reviews can reflect the opinions of users to products and events and are the critical information for the decision-making. Linking reviews with the relevant entities can not only provide users the holistic view of entities but also is the stepping stone to enabling more sophisticated applications such as opinion analysis and data mining. Therefore, it poses a new challenge to web data integration how to match reviews to integrated database objects.

With regard to reviews and structured entities from the same data source, we can easily match them through clues such as the link relationship of web pages and co-occurrence of them. However, with the autonomy of web data source and the ease of reviews publishing, a number of challenges need to be addressed in designing an effective solution to the task of matching reviews and structured entities. First, with the autonomy of we b data source, each source describes the same entity with different manner and some varieties of entity exist in them, such as abbreviation, alias and typographical or orthographical errors, etc. These all pose difficulties for the task of matching reviews to integrated database entities.
Second, review web pages might mention other objects that are peripheral to the review and the information revealed about the object in a review might be partial or surrogate. Naturally, a review can refer to the object which it comments. But a review can also refer to other relevant entities besides the main entity. In addition, as reviews are published by users with a free form, an entity can be mentioned as a part of entity name or alias.

Fortunately, we also get some inspirations from the features of web data in-tegration. First, the integrated entities can be viewed as knowledge base which implicit the pattern or semantic features of the entities and their attributes. Therefore, they can be used to guide for o bject recognition and matching as the external dictionaries. Moreover, review s can also mention some entity attributes besides entity names, and it also provides useful clues for our matching task. Our contributions. In this paper we proposed a method based on 2-layer CRF to match reviews to database objects. Fi rst, our method leverages the integrated structured entity and significantly reduces the dependence on manually labeled training data. Second, we employ semi-Markov CRF to recognize the entities in reviews and exploit a variety clues incl uding entity-level dictionary features, thereby effectively resolving the entit y variety and improving the accuracy of the entity recognition. Finally, our experiments and extensive analysis show that our method outperforms traditional t f-idf based methods and a recent language model-based method.

This paper is organized as follows. We b riefly review some related research efforts in Section 2, and introduce the (semi-Markov) CRF model in Section 3. The overview and detail of the proposed approach is introduced in Section 4. Experimental evaluations are reported in Section 5, and in the last section we draw conclusions and point out some future directions. Little study had so far been done on matching reviews to database entities in data integration, and the work close to this is entity resolution [1,2] that is the problem of identifying duplicat e references that refer to the same real world entity. The reference is an appear ance of an entity in data source which can be a record of database or an entity name in a review. In the field of entity resolution, the variation closest to our problem is reference disambiguation whose goal is to identify the database entities which the references in documents refer to. The most representative work is conducted by the scholars of University of California, Irvine and they propose a research prototype named RelDC [3]. However, document in reference disambiguation is the text with latent structure such as bibliography or address data, so that there is often a correspondence between named entities and their attributes. Whereas the reviews in this problem are free texts without certain fixed fo rmats, so we need to identify the named entities in reviews in order to matching reviews to database entities.
In addition, there are some researches which focus on associating of unstruc-tured content with structured data. The most representative works were con-ducted by IBM India research lab which proposed two research prototypes: SCORE [4] and EROCS [5]. SCORE extracts keywords from query results on structured data and uses them to submit keyword queries that retrieve supple-mentary information, and vice versa. The EROCS system, which uses informa-tion extraction and entity matching, is closest in spirit to our problem; they, however, employ tf-idf to match, which has been shown to be sub-optimal [6].
Yahoo research lab proposed a generative language model [6,7] to match re-views to object without extraction of nam ed entities. But this coarse-grained method can hardly guarantee the high a ccuracy of entity matching. So we need to establish the corresponding between entities in reviews and database attributes at first, and then conduct fine-grained entity matching.

A recent trend of named entity recognition is finding approximate matches in the text with respect to a large dictionary of known entities, as the domain knowl-edge encoded in the dictionary helps to imp rove the extraction performance [8,9]. The challenge of these methods is the dictionary structuring because there are seldom dictionaries available according to different application domain. Whereas large scale integrated entity information in data integration system is the natural dictionary that can be used to guide the entity recognition task.

CRF [10] is a discriminative probabilistic model which was proposed based on Maximum Entropy Model and Hidden Markov Model, and it is the best model for sequence data segment and labeling. CRFs have been applied under different scenario such as NLP and information extraction. As the extension of CRFs, semi-Markov CRF (semi-CRF) relaxes the constraint of CRF and is more applicable to entity identification task. 3.1 Linear-Chain CRF Conditional Random Fields (CRFs) [6] is a type of discriminative undirected probabilistic graphical model which is used to encode known relationships be-tween observations and construct consis tent interpretations. As it does not re-quire the hypothesis of rigorous independence such as HMM (Hidden Markov Model) and overcomes the shortcoming of label bias just like MEMM (Maximum Entropy Markov Model) and other non-g enerative directed graphical models, CRF is the best statistical machine learning model of sequence labeling. Definition 1. For an undirected graph G = &lt;V,E&gt; , Y = { Y v | v  X  V } is indexed by the vertices of G .Then ( X, Y ) is a conditional random field when the random variables Y , conditioned on X , obey the Markov property with respect to the graph:
Pr ( Y v | X, Y w ,w = v )= Pr ( Y v | X, Y w ,w  X  v ) ,where w  X  v denotes that w and v are neighbors in G .

According to the basic theory of CRF, the conditional distribution of labeling sequence y with a given observed sequence x is modeled as follow: y is a vector composed of weights which each characteristic function corresponds to.
During the process of model training, a CRF model can be learned for a given training sample and a predefined characteristic functions where the weight vec-tor parameter W can be learned using MLE (maximum likelihood estimation), gradient descent algorithms, or Quasi-Newton methods. And for the process of inference, for a given observed sequence x , the corresponding labeling sequence can be inferred by the CRF model trained before. The most probable labeling sequence is: argmax y Pr ( y | x )= argmax y W  X  F ( x, y )= argmax y W  X  This inference can be implemented by a dynamic programming algorithm such Viterbi. 3.2 Semi-Markov CRF Semi-CRF extends CRF so that several tokens in a segment have the same tag. Especially in entity identification, semi-CRF is a natural and intuitive model since entities mostly consist of multiple words and higher accuracy is achieved if features could be defined over the entire proposed entity.
 For notation, let X = { x 1 ,x 2 ,  X  X  X  ,x n } be a sequence of tokens and S =
S a start position t j ,anendposition u j ,andatag y j .Thesegments S complete 1  X  t distribution over segmentation S for a given input sequence X as follows: where Z ( x )= S exp ( W  X  F ( x, s )) is a normalization factor, W is a weight
During the training of semi-CRF, we conduct maximum likelihood estimation for the weight vector W by gradient ascent just like [11]. For inference, we use a semi-Markov analog of the usual Viterbi algorithm [11]. The complexity of the algorithm is O ( KLN )where K is the number of tags, L is the upper bound of segments length and N is the number of tokens. During the process of matching reviews to database entities, the input is inte-grated structured data an d relevant reviews and the output is the associations of reviews and entities. Formally, given an integrated database which includes some relational tables, we only concer n the target entity table denoted as E since our goal is to match reviews to the review objects. Let A 1  X  X  X  A m refer to the attributes of E . We set aside a few part of the reviews ( R L )tolabelnamed entities by attribute tags and the rest is the test set denoted as R T . In addition, since reviews are collected according to t he target entities, we assume that there is at least one corresponding object in E for each review.

In this paper, we proposed a method based on 2-layer CRF to match reviews to database objects and the flowchart of our method is illustrated in Figure 1. 4.1 Preprocessing As reviews in web are published by users, the form and language of reviews are free and at will. For our task that we expect to recognize the terms which can identify the object of reviews, so we need to preprocess the reviews so that filtering the irrelevant terms and noises.

At first, we conduct word segment and part-of-speech tagging for each review from R T . Since the attribute values of the target entity table are content words, we retain nouns, numbers and times by filtering stop words and other terms. In addition, the reviews often refer to some attributes of the target entity table besides the entity names, so these terms can be views as identifying terms. We measure the symbolic capacity of terms utilizing the spirit of TFIDF as shown follow. of terms in all reviews after preprocessing, R T denotes the amount of reviews and |{ r : t  X  r }| represents the number of reviews which contain the term t .
After preprocessing, we get the term set t 1  X  X  X  t n for a review r of R T . 4.2 Entity Identification The entity identification is to establis h the correspondence between terms of a review r and the attribute tags. Since reviews may contain irrelevant terms in reviews after preprocessing, we add an attributes A 0 in the attribute set which is used to label the irrelevant terms. So the attribute set is A = A 0 ,A 1 ,...,A m . There are some efforts in the field of n amed entity recognition (NER), and CRF model is proved the best model in sequence data labeling. Current NER methods based on CRF operate by sequentially classifying words as to whether or not they participate in an entity attribute, while often multi-word segments of reviews can represent c omplete semantic meaning s. Especially in our prob-lemthatwehopetoidentifynamedenti ties according to the correspondence of entities and attributes, it is more natural and reasonable manner to label segments instead of individual term. We choose Semi-CRF as the entity identifi-cation model since the model provides an high-accuracy and natural mechanism for extracting entities in t he presence of databases.

During the process of entity identification based on Semi-CRF, it is the key of accuracy how to choose suitable features. As the integrated database gets large, in most cases the entity to be ex tracted from reviews will exist in the database. We therefore need models that can effectively exploit this valuable piece of information. In this paper, we summary four types of features that the first three types are derived from database named entity-level dictionary features and the fourth type is derived from labeled reviews. (1) Similarity features
Since each review has at least one corresponding record in target entity set, often the segment identified from a review corresponds to an attribute value from target entity set in a slightly different form. So, we can exploit these to perform better identification by adding similarity features as proposed in [12]. For example, we can add a feature of maximum cosine similarity of a identified segment from and an attribute (person name). (2) Patten features
Though the identified segments are not completely consistent with the at-tribute values of target entity set becaus e of the presence of entity variety, dif-ferent entity attributes have very distinctive patterns that can be generalized to identify these entities in reviews. We define some pattern features just like [13]. We first define some regular expression patterns of short and non-overlapping sub-pattern. Then for each attribute value in target entity set, we generalize each of the tokens to the pattern it matches. Finally, for values belong to a same attribute, we collect the corresponding regular expression patterns as the pattern sequence of the attribute.

For example, we can summary the regular expression pattern sequence of an attribute (person name) as follow: where [ A  X  Z ] { punct } denotes a capital letter and a punctuation, [ A  X  Z ][ a  X  z ]+ denotes a capital letter and some lower-case letters. Then the text string  X  X lon Halevy X  will get the pattern-id sequence:  X 4,4 X , whereas  X  X  W. Cohen X  is  X 1,3,4 X . (3) Database schema features
The integrated structured data also contain a variety of others schema clues including attribute value length, data type and other data integrity constraints such as Check constraint. These clues ca n serve as the features for entity iden-tification. (4) Features from labeled reviews
Labeled reviews also provide available clues to identify entities besides features from database. First, labeled reviews als o demonstrate pattern features of labeled entities. Second, the likely ordering of e ntity labels within a sequence is also useful. Since these features are common o nes used in entity identification based on CRF, it unnecessary gives more details.

Especially, an important concern about similarity features and pattern fea-tures is efficiency. Since we need to conduct similarity computation and regular expression pattern matching for each attribute value, they can be relatively ex-pensive to compute, particularly for a large scale integrated data. In the exper-iments below, we pre-pro cess integrated by building an inverted index on each attribute and dynamically update the index with the process of data integration. During the process of off-line model training, we conduct top-K search to find the approximate string or matching pattern.
 4.3 Entity Matching After entity identification, for each review r we get the identified segments s  X  X  X  s ingistomatchareview r to an entity e in the target entity set E .

We identify if the labeled segments of a review r and the attribute values of e refer to one entity in order to determine if the main object of the review is e . At the core of this method is a binary classifier on various similarity measures between a pair of references. We can use any binary classifier like CRF, SVM, decision tree and logistic regression. And the features typically denote various kinds of attribute level similarity functions like Edit distance, Soundex, Jaccard and TFIDF. In this paper, we use a CRF with a normal version. Formally, given e which attribute labels correspond to A 1  X  X  X  A p where the attribute labels may be duplicated. For a review r andanentity e , CRF determines the prediction c where c is  X 1 X  if e is the main object of r and  X 0 X  otherwise.
 to various similarity measures between the text segments and W is a weight vector of F . The real-world data from two domains a re collected and used to evaluate the performance of our method. We used MySQL to store the structured database and Lucene to index the text data. We used roughly 5% of the reviews for training and the rest is used for testing. In our method, we use the CRF model with a Semi-Markov and normal version from an open source project named CRF. In order to examine the effectiveness of our method, we perform experiments in the following aspects: (1) The overall perfo rmance of our method; (2) The effects of changing the size of the training sample. 5.1 Dataset (1)Movies
The movie dataset contains top 250 movie information from IMDB, www.imdb.com, which include six attributes such as name, year, type, direc-tor list, act list and runtime. And IMDB also provides reviews of a movie. We develop a program to crawl and extract the movie information as well as re-views from IMDB. Make sure that each of the 250 movies has the corresponding review(s). To add an extra degree of difficulty, we also collect additional 250 movies from IMDB for confusion. To sum up, the movies dataset contains 500 movies and 161,062 reviews.

Our task is to match a given review with its corresponding movie in the movie database. Since the reviews were extracted from the IMDB for the corresponding movies, we know the true match for each review and it serves as the gold standard to evaluate our method. In addition, w e randomly select 5 percent reviews to annotate the attributes and the rest of reviews serve as the test set (similarly hereinafter). (2) Restaurants
We obtain restaurant dataset just like [6]. First, we crawl and extract a set of reviews from the Yelp website, yelp.com, where we collect 1,875,630 reviews of 5,610 restaurants from San Francisco. Many of the reviews in Yelp are very short and do not contain any identifying information like good environment, good service. We process the dataset to r etain only reviews contain identifying information so that a human can identify the restaurant corresponding to the review. Then we retain 1,588,072 reviews.

In the dataset from Yelp, there are also restaurants and reviews simultane-ously. To validate the performance of our method in different data sources, we obtain a much more extensive list of restaurant objects from San Francisco in the Yahoo! Local database which contains 7,985 restaurants and consists of ten attributes including name, genre, telephone, address, price, etc. For each review, our task is to find the corresponding restaurant in the Yahoo! Local database. According to the setting of our problem , it is guaranteed that each review must have its corresponding restaurant. So we select reviews from 4,535 restaurants in Yelp so as to satisfy the condition. The restaurant dataset contains 7,985 restaurants from the Yahoo! Local database and 1,365,821 reviews in Yelp. In addition, we match restaurant information from Yahoo! Local and Yelp along with approximate address name matches . Thus we get the association between restaurants from Yahoo! Local and reviews from Yelp and serves as the gold standard. 5.2 Evaluation Criteria To evaluate the performance comprehensiv ely, several criteria that were widely used before are taken: Recall, Precision and F1-measure. A brief definition is given as follows.

Defining A as the total number of reviews to be matched, B as the number of reviews which are correctly matched, C as the number of reviews which are wrongly matched.
 Then Recall, Precision and F1-measure are defined as: 5.3 Experimental Results and Analysis In order to examine the effectiveness o f our method comprehensively, we per-form experiments in the following aspects: (1) The performance on the review matching task; (2) The effects of changing the training sample size. (1) Performance on the review matching task The experimental results on two dat asets are showed. A comparison with TFIDF [6] and the method based on language model (denoted as RLM) [6] is made. Table 2 list Recall, Precision and F1-measure on each dataset. From the reports in Table 2, it can be seen that our method achieves an obvious improve-ment compared with the other methods. Compared with RLM, the F1-measures on two different datasets are improved by 16.94% and 43.10% respectively. It substantiates that our fine-grained method based on 2-layer CRF has better performance that current coarse-grained methods.

In addition, the three methods archive better performance on the movie dataset than on the restaurant dataset. The main reason is that restaurant re-views are freer and the identifying informa tion is less compared to movie reviews. The advantage of our method on the restaurant dataset is more prominent, and it also proves the adaptability of our method on review matching. Need of special note is that RLM label a half reviews for model training, it is not reasonable for large scale data. Whereas our method only need 5% training set, it is more scalable obviously.
 (2) Effects of changing the training sample size
To check the effect factors of our approach, we test the effectiveness of the size of training samples. We randomly select 1%, 3%, 5%, 7%, 9%, 11% reviews on two datasets to manually labeled, the rest is the test set. Figure 2 and Figure 3 show the F1-measures with increasing training sizes on the movie and restaurant data set respectively. We can see that a g radual improvement on F1-measures is obtained when increasing the training size in the two datasets. More interesting (after 5%), the slope of the two curves becomes flatter and flatter as increasing the training size. It shows that the bigger o f training size, the better performance of our approach. But with the training size is bigger and bigger, its effectiveness will degrade gradually. For our approach, we only need a few training sample to get a superior performance. It proves that our approach less depends on manually labeled training data and is quiet qualified for the review matching task. It is a new challenge how to match relevan t reviews to integrated database ob-ject in web data integration. We proposed a method based on 2-layer CRF to match reviews to database objects in a ccordance with the features of web data integration and reviews from web. First, our method leverages the integrated structured entity and significantly reduces the dependence on manually labeled training data; Second, we employ semi-Markov CRF to recognize the structured entities and exploit a variety of entity-l evel and pattern-level recognition clues available in a database of entities and l abeled reviews, thereby effectively re-solving the entity variety and improving the accuracy of the entity recognition. Finally, experiments in multiple domains show that our method can substantially superior to traditional tf-idf based methods as well as RLM based method. Acknowledgment. This work was supported by the National Natural Sci-ence Foundation of China ( No. 61303007, 61170038, 61472231, 61303005), Shan-dong Provincial Key Laboratory of Software Engineering (No. 2013SE02), the Outstanding Young Scientists Foundation Grant of Shandong Province (No. BS2013DX044), Postdoctoral Science Special Foundation of Shandong Province (No. 201303057), the Science and Technology Development Plan Project of Shan-dong Province (No. 2014GGX101019) and t he Fundamental Research Funds of Shandong University (No. 2014JC025).

