
Aixin Sun  X  Chunyan Miao  X  Geographical characteristics derived from the historical check-in data have been reported effective in improving location recommen-dation accuracy. However, previous studies mainly exploit geo-graphical characteristics from a user X  X  perspective, via modeling the geographical distribution of each individual user X  X  check-ins. In this paper, we are interested in exploiting geographical charac-teristics from a location perspective, by modeling the geographi-cal neighborhood of a location. The neighborhood is modeled at two levels: the instance-level neighborhood defined by a few near-est neighbors of the location, and the region-level neighborhood for the geographical region where the location exists. We pro-pose a novel recommendation approach, namely I nstance-Re gion N eighborhood M atrix F actorization ( I RenMF ), which exploits two levels of geographical neighborhood characteristics: a) instance-level characteristics, i.e., nearest neighboring locations tend to share more similar user preferences; and b) region-level characteristics, i.e., locations in the same geographical region may share similar user preferences. In IRenMF , the two levels of geographical char-acteristics are naturally incorporated into the learning of latent fea-tures of users and locations, so that IRenMF predicts users X  prefer-ences on locations more accurately. Extensive experiments on the real data collected from Gowalla, a popular LBSN, demonstrate the effectiveness and advantages of our approach.
 H.3.3 [ Information Search and Retrieval ]: Information Filtering Geographical Neighborhood; Location Recommendation; Matrix Factorization; Location-based Social Networks
In recent years, we have witnessed the rapid growth and increas-ing popularity of location-based social networks (LBSNs), e.g.,  X 
T his work was performed while this author was a research fellow at Nanyang Technological University, Singapore.
 BrightKite, Foursquare and Gowalla, where users explore their sur-rounding places and share life experiences via  X  X heck-ins X . The available check-in data in LBSNs contain rich knowledge about users X  interests, and thus are beneficial to a wide range of applica-tions such as location recommendation [33], friend recommenda-tion [23], and activity recommendation [34].

As an important application in LBSNs, the personalized loca-tion recommender systems (PLRs) can help users explore new lo-cations to enrich their experiences. On the other hand, PLRs can also facilitate third-party developers (e.g., advertisers) to provide more relevant services at the right locations. Therefore, PLRs have drawn great research attention from both academia and industry in recent years [35, 36]. For example, Foursquare, a well-known LBSN that has over 50 million users and 6 billion check-ins (last updated May, 2014), has launched its location recommendation en-gine since March 2011. 1
The primary idea of PLRs is to predict a user X  X  preferences on unvisited locations. Among existing PLRs developed for LBSNs, the approaches established on collaborative filtering technique are most widely used to model users X  preferences, according to the his-torical interactions between users and locations [34]. To improve location recommendation accuracy, auxiliary information such as social information and geographical information, has also been ex-ploited. For instance, social opinions from users X  online social friends [27] or local experts in a new city [2] have been consid-ered for location recommendation. In contrast to social informa-tion, geographical information has been found to play a much more important role in the location recommendation task [3].
Prior work that employs geographical information for location recommendation mainly explores geographical characteristics of check-in data from user perspective. Based on the empirical ob-servation that users tend to check-in at nearby locations, the geo-graphical distances between users and locations are considered for location recommendation tasks, using an inverse proportional rule in [17]. To better describe users X  preferences on locations, different methods have been proposed to model users X  check-in behaviors in LBSNs. For example, in [26], a power-law probabilistic model is used to describe the power-law distribution of a user X  X  check-ins. The approach in [3] utilizes a multi-center Gaussian model to study users X  multi-center check-in behavior. To summarize, exist-ing PLRs only exploit the geographical characteristics from user perspective, via modeling the geographical distribution (e.g., the power-law distribution or multi-center distribution) specific to a particular user X  X  check-ins.

To the best of our knowledge, geographical characteristics from location perspective have not been exploited for location recom-h ttp://engineering.foursquare.com/2011/03/22/building-a-recommendation-engine-foursquare-style/ mendation (see Section 2.3 for details). This kind of characteristics a re independent from individual users and should have potential benefits to location recommendation. Motivated by this, in this pa-per, we propose to study geographical characteristics from location perspective, with an emphasis on the geographical neighborhood.
Through our empirical analysis, we found that nearest neighbor-ing locations tend to share more common visitors. This observa-tion indicates that, in general, a user shares similar preferences on nearest neighboring locations. In our method, this pattern is used as the instance-level geographical neighborhood charac-teristics . Specifically, by introducing a similarity measure, the re-lationship underlying a user X  X  preferences on a few nearest neigh-boring locations is captured and utilized to characterize her prefer-ence on a target location.

In addition, our study on check-in data also shows that locations in a geographical region may share similar user preferences. Each geographical region is usually associated with a specific function (e.g., business, entertainment, and education) [4, 29]. Such geo-graphical regions contain additional prior knowledge about the in-teractions between users and locations. Therefore, we use the geo-graphical region structure as the region-level geographical neigh-borhood characteristics . Specifically, a group lasso penalty is employed to integrate the geographical region structure within the check-in data into the learning of latent factors of users and loca-tions. To summarize, the major contributions made in this paper are as follows:  X  We empirically analyze geographical characteristics from loca-tion perspective using historical check-in data collected from
Gowalla. Two levels (i.e., instance-level and region-level) of geographical neighborhood characteristics have been studied.  X  We propose a novel location recommendation framework, i.e.,
I nstance-Re gion N eighborhood M atrix F actorization ( I RenMF ), to incorporate aforementioned geographical neighborhood char-acteristics for improving location recommendation accuracy. In particular, to solve the optimization problem in IRenMF , we pro-pose an alternating optimization strategy, in which an acceler-ated proximal gradient (APG) method is used to learn the latent factors of locations, considering the geographical region struc-ture of the check-in data.  X  We extensively evaluate IRenMF on the datasets collected from
Gowalla. Experimental results show that: (1) Compared to the baseline matrix factorization model (i.e., WRMF) without uti-lizing geographical characteristics, our methods that use either instance-level or region-level geographical neighborhood char-acteristics significantly improves recommendation accuracy; the improvement is on average by 30 . 78% and 17 . 2% respectively, in terms of precision metric P@5. (2) Utilizing both two lev-els of geographical neighborhood characteristics, IRenMF sub-stantially outperforms two state-of-the-art location recommen-dation methods, which consider geographical characteristics de-rived from user perspective.

The rest of this paper is organized as follows. Section 2 reviews the most relevant work about this study. Section 3 introduces our empirical analysis of check-in data and provides some background about matrix factorization. Next, Section 4 presents the details of IRenMF and describes the optimization solution to IRenMF . Then, in Section 5 , we report the experimental results conducted on real-world datasets, which demonstrate that the geographical character-istics derived from location perspective can significantly improve location recommendation accuracy. Finally, Section 6 draws the conclusion of this study.
This study relates with three research areas: collaborative filter-ing, structured sparsity learning, and personalized location recom-mendation. Next, we will present an overview of the most related work in each area.
The collaborative filtering (CF) technique has been widely used for personalized recommendation tasks [1]. In the literature, there are two main categories of CF methods, namely memory-based CF and model-based CF.
 The most popular memory-based CF approaches are user-based CF and item-based CF. The user-based CF predicts a user X  X  prefer-ence on a given item based on the preferences of other similar users on the target item. In contrast, the item-based CF first finds similar items to the target item and then predicts a user X  X  preference on the target item, according to her preferences on other similar items. In previous work [26,27], the user-based CF has been successfully ap-plied for the location recommendation tasks, and it has been found to significantly outperform item-based CF. Similar results have also been found in our experiments (see Section 5.2.1).

The model-based CF approaches aim to learn an algorithmic model to explain the observed user-item interactions. Most exist-ing model-based CF models deal with rating prediction problems, in which users X  preferences are explicitly indicated by the rating values given to items. However, in most practical scenarios, users X  rating data are unavailable. The personalized recommendations are based on users X  implicit feedback, e.g., purchase history [20], click history [5], and check-in history [3]. In [8], Hu et al. introduced the first attempts applying model-based CF approaches for large scale implicit feedback datasets. Instead of ignoring all missing entries in the user-item interaction matrix, they treated all missing entities as negative examples and assigned vastly varying confidence lev-els to the positive and negative examples. Then, a least square loss function was used to learn the latent features of users and items. To simplify the computation, Pan et al. [19] proposed a sampling framework to collect a fraction of missing entries in the user-item matrix as negative examples. Recently, Rendle et al. [21] presented a Bayesian Personalized Ranking (BPR) approach for recommen-dation with users X  implicit feedback. This method only assumed that the unobserved items (or negative items) were less interesting than the observed items (or positive items) to an individual user. Its objective was to rank the positive items above the negative items in the positive-negative item pairs of each user.
For feature learning problems in high-dimensional space, spar-sity is a desirable property of feature vectors. The L 1 -norm penalty has been widely used to enforce sparsity to the learned feature vectors. Numerous methods have been proposed to solve the L regularization regression problems in statistics, machine learning and computer vision. The readers can refer to [6] (Chapter 18) for more discussions.

However, the standard L 1 -norm penalty does not consider any dependency (e.g., the group structure) among inputs. This limits its applicability in many complex application scenarios. In recent years, a lot of structured sparsity learning approaches have been proposed to induce different joint sparsity patterns to related vari-ables, by employing more structured constraints on inputs. Yuan and Lin [30] proposed the group lasso model that assumes disjoint group structures of inputs and enforces sparsity on the pre-defined groups of features. It employed a L 1 /L p mixed norm penalty, with p &gt; 1 , to achieve group level variable selection. In practice, L and L 1 / L  X  are the most popular mixed norms. Theoretically, it has also been demonstrated that the L 1 /L 2 penalty has the poten-tial to improve the accuracy of estimator [9]. Moreover, the group lasso has been extended to allow more complex structures such as hierarchical groups and overlapping groups [11].

These structured sparsity learning approaches have been applied to different real scenarios. For example, Kim and Xing [13] studied the gene selection problems. They proposed a tree-guided group lasso regression method, which applied group lasso to the groups of output variables defined by a hierarchical clustering tree. In [12], Jenatton et al. presented an extension of sparse PCA based on a structured regularization that encoded high order information of the input data. Their experiments on face recognition task demon-strated the advantages of structured approach over unstructured ap-proaches. In addition, the group lasso models have also been ap-plied in time series data analysis problems [14]. In recent years, the personalized location recommendation in LBSNs has been widely studied. Prior work provides location rec-ommendation via analyzing users X  historical check-ins in LBSNs. Ye et al. [27] reported the first research work about providing loca-tion recommendation services for large scale LBSNs. Two friend-based CF approaches were proposed to predict a user X  X  preferences on locations, considering the preferences of her social friends. The recent work by Bao et al. [2] generated location recommendations, taking advantage of both the user preference and the opinions from local experts in a new city.

To achieve more accurate recommendations, different approaches have been proposed to exploit the geographical characteristics of check-in data. Ye et al. [26] proposed a unified recommendation framework to incorporate the user preference, geographical influ-ence and social influence into one recommendation process. They designed a probabilistic model to capture the geographical influ-ence from a specific user X  X  visited locations. Note that this ap-proach is different from our instance-level exploitation that con-siders the geographical influence from a few nearest geographical neighbors of the target location (see Section 4.1 for more details). Cheng et al. [3] studied users X  multi-center check-in behavior and employed a multi-center gaussian model to capture the geograph-ical influence. Then, a matrix factorization model was fused with geographical and social influence for location recommendation in LBSNs. Levandoski et al. [16] proposed a location-aware recom-mender system, namely LARS, which employed the location-based ratings to provide recommendation. In [17], Liu et al. introduced a probabilistic recommendation framework that employs the geo-graphical influence on a user X  X  check-in behavior, the user mobility pattern and the user check-in count data for location recommenda-tion. Recently, Zhang et al. [32] developed a unified geo-social rec-ommendation framework, namely iGSLR, in which a kernel den-sity estimation approach was used to personalize the geographical influence on users X  check-in behaviors as individual distributions. Wang et al. [25] proposed algorithms that generated recommenda-tions based on the past user behavior (visited locations), the longi-tude and latitude of each location, the social relationships among users, and the similarity between users. Moreover, Yin et al. [28] introduced a location-content-aware recommender system that of-fered a user a set of venues or events, considering both personal interest and the local preference of each individual city. Summary . The aforementioned PLRs exploit geographical char-acteristics from user perspective. Our work differs from existing work in that it exploits geographical characteristics from location F igure 1: It shows the instance-level geographical neighbor-hood characteristics: (a) the relationship between common vis-itor ratio  X  and the distance between locations, (b) the common visitor ratio between a typical location (id: 23092 , latitude: 51 . 5144313985 , longitude:  X  0 . 152746439 ) and other locations. perspective, with an emphasis on the geographical neighborhood. M oreover, it also proposes a unified framework to consider two lev-els of geographical neighborhood characteristics for location rec-ommendation.
In this section, we first analyze geographical neighborhood char-acteristics of the check-in data from location perspective. Then, we briefly introduce matrix factorization for recommendation.
To gain a better understanding of users X  check-in activities, we study the check-in data collected from Gowalla, a popular LBSN (see Section 5.1.1 for details). More specifically, we study the geo-graphical neighborhood characteristics at two levels: instance-level and region-level. We make two observations from the data analy-sis: a) nearest neighboring locations tend to share more similar user preferences; and b) locations in the same geographical region may share similar user preferences. These patterns are independent of any particular user. We now report the details of the data analysis. Instance Level . At the instance level, we measure the similarity of users X  check-ins at two different locations  X  j and  X  k card similarity coefficient, denoted by  X  (  X  j , X  k ) . This measure is also known as the common visitor ratio of the two locations in our discussion. where U (  X  j ) and U (  X  k ) denote the two sets of users who have vis-ited  X  j and  X  k respectively.

Figure 1(a) plots the relationship between  X  (  X  j , X  k ) and the ge-ographical distance d (  X  j , X  k ) between  X  j and  X  k . 2 Figure 1(a),  X  decreases with the increasing of d , which indicates that geographically adjacent locations tend to share more common visitors. In other words, neighboring locations are more likely to be visited by the same set of users, or users have similar prefer-ences on neighboring locations. As an example, Figure 1(b) shows the common visitor ratio between a randomly sampled location (id: 23092 , latitude: 51 . 5144313985 , longitude:  X  0 . 152746439 ) and the other locations. It reflects that location 23092 shares more com-mon visitors with its neighboring locations.
 Region Level . To study the geographical characteristics of loca-tions at region level, we cluster the locations into groups. The clus-
H ere, the common visitor ratio is averaged over all pairs of loca-tions with same distances, and the distance between two locations is computed by using the Haversine formula. Figure 2: The checked-in locations around Chicago are clus-t ered into 10 groups, denoted in different colors. It shows the region-level geographical neighborhood characteristics of check-in data. tering can be conducted by using different similarity/distance mea-s ures between locations, e.g., geographical distance, user check-in similarity (i.e.,  X  (  X  j , X  k ) ), or the combination of the two. lustration purpose, here we present a clustering result by using user check-in similarity with geographical constraint, similar to that re-ported in [4]. A spectral clustering algorithm is utilized to group the locations [18]. More specifically, we compute an affinity ma-trix M  X  R n  X  n on all observed locations {  X  j } n j =1 location  X  j , let N (  X  j ) denote the set of N closest locations to  X  by the geographical distance. In this analysis, we set N at 10 . The element M jk in M is determined as,
M jk =  X  (  X  j , X  k ) +  X , if  X  j  X  X  (  X  k ) or  X  k  X  X  (  X  where  X  is a small constant used to keep each location connecting to arbitrary other locations either directly or indirectly. Then, the spectral algorithm is used to partition locations into groups, con-sidering users X  check-ins at each location and the geographical dis-tances between locations.
 Figure 2 shows an example of 10 clusters of the locations around Chicago area. The location clusters are denoted in different colors. Observe that the locations are distributed in geographical regions and the shapes of the regions are determined by user check-in be-havior. In other words, locations in the same geographical region may share similar user preferences. Suggested in earlier studies, each of these geographical regions is usually associated with a spe-cific function such as education, business, entertainment and so on, considering the category information of the locations in the region [4, 29]. Note that, this observation is consistent with the instance-level geographical characteristics. Nevertheless, a region refers to a much larger geographical area than the area containing a few nearest neighbors of a specific location.

Motivated by the two observations, we propose incorporating the above geographical characteristics of check-in data for location rec-ommendation, so as to improve location recommendation accuracy.
The recommendation task studied in this paper can be defined as: given the historical check-ins of m users { u i } m i =1 tions {  X  j } n j =1 , for a target user, recommend her a set of locations
T he three kinds of similarity/distance measures are evaluated in our experiments (see Section 5.2.3). that she might be interested in but has not visited before. Here, we first introduce a rating matrix R  X  R m  X  n to describe users X  prefer-ences on locations, where each element R ij  X  { 0 , 1 } denotes u preference on  X  j . If u i has checked-in at  X  j at least once, we set R ij to 1 , otherwise, we set R ij to 0 . Note that R ij = 0 does not explicitly indicate u i is not interested in  X  j . It can also be caused by that u i does not know  X  j .

In the literature, matrix factorization based approaches are the most successful and widely used recommendation methods [15]. The primary idea of matrix factorization is to map both users and locations into a shared space with dimension r  X  min( m,n ) , and represent u i and  X  j using U i  X  R 1  X  r and L j  X  R 1  X  r known as the latent factors of u i and  X  j respectively. The prefer-ence of u i on  X  j can then be approximated using Biases for users and locations can also be incorporated in Eq. (3) to produce more accurate models [15]. In general, we denote the latent factors of all users and locations by U  X  R m  X  r and L  X  R n  X  r respectively, where U i is the i th row in U and L j j th row in L . The model parameters, U and L , can be learned by minimizing a weighted regularized square error loss [8,15,19], min where W ij gives a confidence level to the preference feedback R k X k F is the Frobenius norm of a matrix,  X  1 and  X  2 are regulariza-tion parameters.

Once the latent factors U and L have been learned, the prefer-ence value associated with any user-location pair ( u i , X  predicted using Eq. (3).
In this section, we present the details of IRenMF , the objective of which is to exploit two levels (i.e., instance-level and region-level) of neighborhood characteristics to provide more accurate location recommendations. Firstly, at the instance level, a geographical weighting strategy is used to consider the strong relations among users X  preferences on the target location and a few nearest neigh-bors of it. Secondly, at the region level, a group lasso penalty is introduced to take advantage of the geographical region structure derived from the check-in data. Through mapping users and locations into a shared latent space, MF can effectively estimate the overall relations associated with most or all locations. However, the classical MF based approach introduced in Section 3.2 ignores the strong relations among geo-graphical nearest neighboring locations.

Our empirical analysis of check-in data shows that nearest neigh-boring locations tend to share more common visitors. Inspired by this observation, we propose to characterize u i  X  X  preference on  X  using her preferences on a few nearest neighboring locations of  X  Thus, we modify the prediction of R ij as,  X 
R where  X   X  [0 , 1] is the instance weighting parameter used to con-trol the influence from neighboring locations, N (  X  j ) denotes the Figure 3: An example of the structured sparsity assumption of t he location latent factors. The locations are clustered into 4 groups, and both users and locations are mapped into a shared latent space with dimension 4 . In L  X  , the red and white cells denote nonzero and zeros values respectively. set of N n earest neighboring locations of  X  j . In the following ex-periments, we empirically set N at 10 . 4 In Eq. (5), Sim (  X  is the geographical weight denoting the geographical influence of  X  on  X  j . Z (  X  j ) is a normalizing factor formulated as Z (  X  P sian function as follows based on our observation in Figures 1(a) and 1(b).
 where x j and x k represent the geographical coordinates (latitude and longitude) of  X  j and  X  k respectively,  X  is a constant which is empirically set at 0 . 1 in our experiments.

Note that this instance-level exploitation is essentially different from the approach proposed in [26]. Our approach is from location perspective and considers the relationship between a target loca-tion  X  j and a few nearest geographical neighbors N (  X  j prediction of u i  X  X  preference on  X  j is determined by the charac-teristics of u i ,  X  j and N (  X  j ) . However, in [26], the probability that u i would check-in at  X  j is determined by the distances be-tween  X  j and u i  X  X  visited locations L ( u i ) (i.e., from user perspec-small overlap, as u i has only visited a small proportion of locations. Therefore, these two methods are modeling two different kinds of geographical characteristics . In all experiments, the proposed instance-level exploitation outperforms the approach in [26] (see Section 5.2.1 for details).
As aforementioned, locations in the same geographical region may share similar user preferences. In this section, we are in-terested in incorporating this region-level characteristics into the learning of latent factors (or latent features) of users and locations.
In the feature learning problems, the structured sparsity learning approaches (e.g., group lasso) have been widely used to consider the prior knowledge of the group structure of inputs. Inspired by its successful applications in real scenarios [10, 12 X 14], we propose to utilize group lasso to exploit the geographical region structure of locations, via assuming the latent factors of locations from the same region share the same sparsity pattern, namely the structured sparsity assumption of location latent factors. In this assumption, the locations are assumed to be clustered into G disjoint groups: {L ( g ) } G g =1 . The location latent factors L are divided into G groups of locations belonging to L ( g ) , n g is the number of locations in
W e have also evaluated the performances with respect to different setting of N . The experimental results indicate that the location recommendation accuracy is not very sensitive to the size of nearest neighbors.
 L ( g ) . Accordingly, the rating matrix R is divided into G groups as Figure 3 gives an example of the structured sparsity assumption. As shown in Figure 3, the column vectors in L  X  (2) share the same sparsity pattern since all their third rows are zeros. Therefore, the reconstruction of elements in R (2) only relies on the first, second and fourth row components in L  X  (2) . With this sparsity structure of L , the associations of latent factors of users and locations can be understood at the group level instead of instance level, as the geographical structure information of locations is embedded in the location latent factors.

Taking into account the structured sparsity assumption, we use a group lasso penalty of L as, to integrate the geographical region structure information into the learning of latent factors U and L . In Eq. (7),  X  3 is the group sparsity regularization parameter. L d ( g )  X  R n g  X  1 is the d vector in L ( g ) .  X  g is a weight assigned to L d ( g ) of  X  g is  X  g = n 1 2 g , which enables the amount of penalization to be adjusted according to the size of each group [30].
In this section, we present the final formulation of IRenMF . By plugging Eq. (5) and Eq. (7) into Eq. (4), the optimization problem of IRenMF is formulated as follows, min For simplicity, we rewrite the problem in Eq. (8) as, min where f W  X  R m  X  n is a weighting matrix.  X  denotes the Hadamard product of two matrices. S  X  =  X  I + (1  X   X  ) S  X  . I  X  R is an identity matrix. S  X  R n  X  n , in which each element S Sim (  X  j , X  k ) /Z (  X  j ) .

In general, as u i  X  X  check-in times C ij at  X  j grows, we have a strong indication that u i indeed likes  X  j . Therefore, a simple setting of the element f W ij in f W is as, where the constant  X  is used to control the rate of increase. Empir-ically, we set  X  = 10 in our experiments.
Here, we present the solution to the optimization problem stated in Eq. (9), which is a non-convex problem, and can be further decomposed into two convex optimization problems by fixing one variable ( U or L ) and optimizing the other one. Therefore, we use the following two-step alternating optimization strategy to solve the problem in Eq. (9). Algorithm 1: A PG Optimization
Input : L ( 0) ,  X  2 ,  X  3 ,  X  (0) ,  X  ,  X  , t (0) , {  X  g 1 Initialize: L (1)  X  L (0) , k  X  1 ,  X   X  1 . 0 2 Use Eq. (12) and L (0) to calculate  X  ( L (0) ) 3 while k  X  maxIter &amp;&amp;  X   X   X  do 5 while 1 do 7 U se Eq. (16) to calculate L  X  8 Use Eq. (13) and Eq. (14) to compute p ( L  X  ) and 9 if p ( L  X  )  X  p  X  ( L  X  , X ( k ) ) then 10  X  ( k )  X   X  , break; 11 else 12  X   X   X   X  1 4 Use Eq. (12) to update  X  ( L ( k  X  1) ) and  X  ( L ( k ) 16 k  X  k + 1 17 R eturn L ( k ) ; Optimize U : when L is fixed, the optimization problem with re-spect to U is as follows, To solve the problem in Eq. (11), we directly use the alternating least squares (ALS) algorithm proposed in [8,19].
 Optimize L : when U is fixed, the optimization problem becomes, min where The problem in Eq. (12) can be solved using the accelerated proxi-mal gradient (APG) method [24]. The key point of APG approaches is to construct the Taylor approximation of p ( L ) at the point X as, where  X  &gt; 0 and Z = X  X  1  X   X  p ( X ) . For a fixed point X , we need to solve the following optimization problem, min The solution to the problem in Eq. (15) is given in Theorem 1. T HEOREM 1. Let L  X  be the optimal solution to problem (15). L  X  is unique and can be calculated via a soft-threshold operator Algorithm 2: I RenMF Optimization Input : R , f W , r ,  X  , {  X  i } 3 i =1 , {  X  g } G g =1 1 Initialize U (0) and L (0) with random elements, k  X  1 ,  X   X  1 . 0 2 while k  X  maxIter &amp;&amp;  X   X   X  do 3 Compute U ( k ) by solving the problem in Eq. (11) 4 Compute L ( k ) by solving the problem in Eq. (12) 6 k  X  k + 1 defined as the d th dimension of the g th group of L  X  and Z respectively. The proof of Theorem 1 is shown in the Appendix. The details of the APG solution to Eq. (12) are presented in Algorithm 1.
The entire optimization procedure for the problem in Eq. (9) is summarized in Algorithm 2. Although the objective function of IRenMF (like the objective function of other  X  X tandard X  recom-mender systems) is certainly non-convex [15] and subject to local minima, in our experiments it yields stable recommendation accu-racy when restarting with different initial conditions.
In this section, we first introduce the experimental settings and then present the analysis of experimental results. The experiments focus on the following aspects: (1) the comparison of the perfor-mances of our proposed method and baseline recommendation al-gorithms, (2) the sensitivity of IRenMF to different parameter set-tings, and (3) the impact of different location clustering strategies. The experimental data used in this study was collected from Gowalla, a popular LBSN, which has more than 600 , 000 users since November 2010 and was acquired by Facebook in Decem-ber 2011. 5 In practice, we used the Gowalla APIs to collect user profiles and check-in data made before June 1, 2011. Finally, we have obtained 36 , 001 , 959 check-ins made by 319 , 063 users over 2 , 844 , 076 locations. Each check-in contains user id, location id, longitude, latitude, timestamp, etc.. To evaluate the performances of IRenMF , we construct four datasets via extracting the check-in data generated in four popular cities: Berlin, London, Chicago, and San Francisco. The detailed statistics of the check-in data in the four datasets are summarized in Table 1. h ttp://techcrunch.com/2011/12/02/report-facebook-has-acquired-gowalla/ avg. #users per loc. 23.98 20.28 32.11 41.35 avg. #loc. per user 8.51 7.30 8.66 13.50
I n our experiments, each of the four datasets is partitioned into three non-overlapping parts. More specifically, within one dataset, if a user u i has visited n i different locations L ( u i  X  i } , we randomly choose 60% of her visited locations L ( u training data, and choose another 10% of L ( u i ) as development data to tune parameters. The remaining 30% of L ( u i ) are used as testing data to evaluate the effectiveness of recommendation methods. Similar experimental settings have been used to validate the performances of location recommendation methods in previ-ous work [3, 26, 31]. After splitting the check-in data, the densi-ties of the training data of Berlin, Chicago, London and San Fran-cisco datasets are 1 . 17  X  10  X  3 , 4 . 13  X  10  X  4 , 3 . 84  X  10 4 . 68  X  10  X  4 respectively.
In this work, the quality of location recommendations is assessed using two metrics (precision and recall), as suggested by [3, 26]. The precision and recall of the top-K location recommendations to a target user are denoted by P @ K and R @ K respectively. P @ K measures the ratio of recovered locations to the K recommended locations, and R @ K measures the ratio of recovered locations to the set of locations in the testing data. Given an individual user u L T ( u i ) denotes the set of corresponding visited locations in the testing data, and L R ( u i ) denotes the set of recommended locations by a method. The definitions of P @ K and R @ K are: where T denotes the set of users in the testing data. Specifically, we choose P@5, P@10, R@5, and R@10 as evaluation metrics in our experiments.

Note that all the four datasets in this study have low density, which usually leads to relatively low precision and recall. Thus, the low values of precision and recall shown in our experiments are reasonable and in similar range of values reported in other work [3, 26, 31]. In this paper, we present the relative improvements our approach achieved, instead of the absolute values.
We compare the performances of the following personalized lo-cation recommendation methods:
UserCF : This is the user-based CF approach used in [26] that
ItemCF : This is the item-based CF approach [22] that predicts a
WRMF : This is the weighted regularized matrix factorization model
BPRMF : The Bayesian personalized ranking (BPR) is another
GeoCF : This is the user preference/geographical influence based
MGMMF : This approach [3] is based on the observation that a
InMF : It is a special case of IRenMF that only exploits the instance-
RenMF : It is a special case of IRenMF that only exploits the region-
IRenMF : This is our proposed approach that exploits both instance-
In the MF-based approaches, we set the dimension of latent space r at 200 , considering both efficiency and effectiveness. The regu-larization parameters  X  1 and  X  2 of IRenMF , are chosen by cross-validation and finally set at 0 . 015 . The group sparsity regulariza-tion parameter  X  3 is set at 1 on all datasets. The instance weight-ing parameter  X  of IRenMF is set at 0 . 4 , 0 . 4 , 0 . 6 , 0 . 4 on Berlin, Chicago, London, and San Francisco datasets respectively. The im-pact of different settings of  X  and  X  3 is discussed in Section 5.2.2. As a preprocessing step, we use the k -means algorithm to cluster locations into 50 groups according to their latitudes and longitudes. The impact of the region structures discovered by different cluster-ing strategies is discussed in Section 5.2.3. In the experiments, we ran MF-based approaches five times and report the average results on the top-5 and top-10 recommendations respectively.
We report two sets of results for methods with and without uti-lizing geographical characteristics separately.
 Methods without Geographical Characteristics . We first com-pare the performances of four state-of-the-art top-K recommenda-tion algorithms (i.e., UserCF, ItemCF, WRMF, and BPRMF) in the location recommendation task. The precision and recall of these Figure 4: Performances of methods without geographical char-a cteristics. Figure 5: Performances of methods with geographical charac-t eristics. methods are reported in Figure 4. On all datasets, UserCF out-p erforms WRMF and BPRMF in terms of precision metrics. Par-ticulary, UserCF attains 12 . 37% and 132 . 52% better performance than WRMF and BPRMF over all datasets, in terms of P@5. A possible reason is that the classical MF-based CF approaches only assume a global structure of the check-in data, but ignore the local structure embedded in the check-in data, e.g., the strong relations among nearest geographical neighboring locations. On the other hand, WRMF achieves highest recall values in terms of R@5 and R@10, on the Chicago, London and San Francisco datasets. This indicates that WRMF is an appropriate choice to incorporate geo-graphical characteristics for location recommendation. In addition, as shown in Figure 4, UserCF significantly outperforms ItemCF. One possible explanation is that the user similarity is more accu-rate than location similarity, as many locations only have a few user check-ins. In this sense, our results are consistent with the results reported in [26].
 Methods with Geographical Characteristics . We evaluate the effectiveness of the proposed methods utilizing geographical char-acteristics from location perspective with other two state-of-the-art methods utilizing geographical characteristics from user perspec-tive [3,26]. The precision and recall are reported in Figure 5.
Observing from Figure 5, InMF , RenMF , and IRenMF achieve better accuracy than WRMF in terms of both precision and re-call, on all datasets. In terms of P@5, InMF outperforms WRMF by 43 . 18% , 37 . 96% , 22 . 90% , and 19 . 08% on the four datasets, respectively. RenMF outperforms WRMF by 21 . 76% , 19 . 39% , 17 . 71% , and 9 . 94% on the four datasets. This indicates that both instance-level and region-level neighborhood characteristics bene-fit the location recommendation for higher accuracy. In addition, the observation that InMF has better accuracy than RenMF shows that the instance-level characteristics are more effective than the region-level characteristics. This result suggests that nearest neigh-bouring locations tend to share more user preference. By incor-porating both kinds of neighborhood characteristics into the learn-ing of latent factors, the recommendation accuracy of the classical MF model (i.e., WRMF) can be significantly improved. For exam-ple, in terms of P@5, the improvements of IRenMF over WRMF are 56 . 48% , 43 . 36% , 29 . 35% , and 24 . 67% respectively, on all datasets.

To predict a user X  X  preference on a target location, GeoCF con-siders the geographical influence from her visited locations (i.e., the geographical characteristics from user X  X  point of view). In contrast, InMF exploits geographical influence of the nearest neighbouring locations to the target location (i.e., the instance-level geograph-ical characteristics from location X  X  point of view). Compared to GeoCF, InMF always achieves better results in terms of all mea-sures. For example, in terms of P@10, InMF outperforms GeoCF by 11 . 78% , on average. This result indicates that the instance-level geographical neighborhood characteristics derived from lo-cation perspective have more impacts on the location recommen-dation accuracy than the geographical characteristics derived from user perspective. Taking advantage of both levels of neighborhood characteristics, IRenMF outperforms GeoCF by 17 . 90% , in terms of P@10, on average.

Compared to MGMMF, the proposed InMF , RenMF and IRenMF perform significantly better on all datasets. The average improve-ments of InMF , RenMF and IRenMF over MGMMF, in terms of P@5, are 115 . 47% , 91 . 38% , and 127 . 38% , respectively. More-over, we also observe that MGMMF performs poorer than WRMF. One possible reason is that MGMMF is based on the probabilistic factor model (PFM), which only models users X  check-in times at locations, instead of users X  preferences on locations.

In Figure 5, IRenMF always achieves the best results in terms of all the evaluation metrics, on all datasets. This demonstrates the advantage of combining both levels of geographical neighbor-hood characteristics for location recommendation. Most impor-tantly, on average, the proposed IRenMF consistently outperforms the competitors WRMF, GeoCF, and MGMMF, in terms of P @10 , by 38 . 63% , 17 . 90% , and 116 . 49% respectively. In all experiments, the standard deviations of the recommendation accuracy of IRenMF are below 0 . 005 , showing the good stability of our method.
In IRenMF , the impact of geographical neighborhood character-istics on location recommendation are controlled by the instance weighting parameter  X  and group sparsity regularization parameter  X  . Figure 6(a) shows P@5 and R@5 of IRenMF (setting  X  3 at 0) with respect to different  X  ranging from 0 to 1 with an increment of 0 . 1 . As shown in Figure 6(a), IRenMF achieves comparable results on Berlin, Chicago and San Francisco datasets with setting  X  at 0 and 1 . This demonstrates that it is possible to characterize users X  preferences on a target location, using their preferences on a few nearest neighboring locations of it. Specifically, in terms of P@5, we observe that  X  set at 0 . 4 on Berlin dataset obtains the best re-sults, as well as 0 . 4 on Chicago dataset, 0 . 6 on London dataset, and 0 . 4 on San Francisco dataset respectively. It suggests that  X  well tradeoff the importance between a user X  X  preference on the target (a) Instance-level neighborhood characteristics (setting  X  (b) Region-level neighborhood characteristics (setting  X  a t 1) Figure 6: Impact of geographical neighborhood characteristics in IRenMF . Figure 7: The location recommendation accuracy with respect t o different clustering strategies. location and her preferences on nearest neighboring locations. In p articular, we notice that only considering one of them (i.e.,  X  = 0 or  X  = 1 ) will lead to degraded recommendation accuracy.
We test the performance of IRenMF in the grid  X  3  X  X  0 . 001 , 0 . 01 , 0 . 1 , 1 , 10 , 100 } , while setting  X  at 1. The performances of IRenMF are shown in Figure 6(b), which indicates the recommendation ac-curacy can be gradually influenced by the setting of the group spar-sity regularization parameter  X  3 , and  X  3 = 1 is the most suitable setting in all four datasets. As shown in Figure 6(b), the perfor-mance of IRenMF drops drastically by changing  X  3 from 10 to 100. We speculate this is because that the learned latent factors of lo-cations are too sparse, and thus the reconstruction of users X  pref-erences on locations are insufficient to provide accurate location recommendations. For example, in Berlin dataset, the sparsity of the location latent factors is 90 . 70% and 98 . 89% when setting  X  at 10 and 100 respectively.
In this section, we explore the impact of different clustering strate-gies on the location recommendation accuracy. To single out the impact of region-level neighborhood characteristics, we simply set the instance weighting parameter  X  in IRenMF at 1 , effectively only evaluating the performance of RenMF .

We study the performance of RenMF with respect to different re-gion structures obtained by clustering locations into 50 groups with the following clustering methods: (1) KG , the k -means clustering solely based on the geographical distance between locations; (2) KH , the k -means clustering solely based on users X  check-ins gen-erated at each location; (3) SP , the spectral clustering [18], which considers both users X  check-ins at locations and the geographical distance between locations. Figure 7 presents the recommenda-tion accuracy of RenMF with respect to different region structures obtained by KG, KH and SP. We observe that RenMF-KG , RenMF-KH and RenMF-SP usually outperform WRMF in terms of P @5 and R @5 . The average improvements of RenMF-KG , RenMF-KH , and RenMF-SP over WRMF are 17 . 2% , 4 . 73% , and 16 . 74% re-spectively, in terms of P @5 . This demonstrates the importance of region-level neighborhood characteristics to location recommen-dation. Moreover, RenMF-KG and RenMF-SP achieve better per-formance than RenMF-KH on all datasets. This indicates that the region structure obtained from the geographical information (lon-gitude and latitude) contributes more to location recommendation accuracy than the interactions between users and locations.
This again highlights the importance of geographical neighbor-hood characteristics at region level. In this paper, we propose a novel approach, namely I nstance-R e gion N eighborhood M atrix F actorization ( I RenMF ), to location recommendation by exploiting two levels of geographical neigh-borhood characteristics from location perspective. By incorporat-ing these two levels of neighborhood characteristics into the learn-ing of latent factors of users and locations, IRenMF has a more accurate modelling of users X  preferences on locations. To solve the optimization problem of IRenMF , we propose a novel alternating optimization algorithm, with which IRenMF achieves stable rec-ommendation accuracy. The experiments on real data show that IRenMF leads to significant improvements on the classical MF-based approach, i.e., WRMF, and other state-of-the-art location recommendation models, i.e., GeoCF and MGMMF. On average, IRenMF outperforms WRMF, GeoCF, and MGMMF by 38 . 63% , 17 . 90% , and 116 . 49% respectively, in terms of P @10 . The future work will focus on the following potential directions. First, we would like to evaluate more similarity measures between locations to capture the instance-level neighborhood characteris-tics. Second, we are also interested in extending IRenMF to exploit other complicated region structures (e.g., hierarchical structures) for more accurate recommendations. Last but not least, we will ap-ply IRenMF to other problems, e.g., business rating prediction [7]. [1] G. Adomavicius and A. Tuzhilin. Toward the next generation [2] J. Bao, Y. Zheng, and M. F. Mokbel. Location-based and [3] C. Cheng, H. Yang, I. King, and M. Lyu. Fused matrix [4] J. Cranshaw, R. Schwartz, J. Hong, and N. Sadeh. The [5] A. Das, D. Mayur, and A. Garg. Google News [6] T. Hastie, R. Tibshirani, J. Friedman, and J. Franklin. The [7] L. Hu, A. Sun, and Y. Liu. Your neighbors affect your [8] Y. Hu, F. Park, Y. Koren, and C. Volinsky. Collaborative [9] J. Huang and T. Zhang. The benefit of group sparsity. The [10] J. Huang, T. Zhang, and D. Metaxas. Learning with [11] L. Jacob, G. Obozinski, and J.-P. Vert. Group lasso with [12] R. Jenatton, G. Obozinski, and F. Bach. Structured sparse [13] S. Kim and E. P. Xing. Tree-guided group lasso for [14] M. Kolar, L. Song, and E. P. Xing. Sparsistent learning of [15] Y. Koren, R. Bell, and C. Volinsky. Matrix factorization [16] J. J. Levandoski, M. Sarwat, A. Eldawy, and M. F. Mokbel. [17] B. Liu, Y. Fu, Z. Yao, and H. Xiong. Learning geographical [18] A. Y. Ng, M. I. Jordan, Y. Weiss, et al. On spectral clustering: [19] R. Pan, Y. Zhou, B. Cao, and N. N. Liu. One-Class [20] B. Pradel, S. Sean, and N. Usunier. A case study in a [21] S. Rendle, C. Freudenthaler, Z. Gantner, and [22] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl. Item-based [23] S. Scellato, A. Noulas, and C. Mascolo. Exploiting place [24] K.-C. Toh and S. Yun. An accelerated proximal gradient [25] H. Wang, M. Terrovitis, and N. Mamoulis. Location [26] M. Ye, P. Yin, and W. Lee. Exploiting geographical influence [27] M. Ye, P. Yin, and W.-C. Lee. Location Recommendation for [28] H. Yin, Y. Sun, B. Cui, Z. Hu, and L. Chen. Lcars: A [29] J. Yuan, Y. Zheng, and X. Xie. Discovering regions of [30] M. Yuan and Y. Lin. Model selection and estimation in [31] Q. Yuan, G. Cong, Z. Ma, A. Sun, and N. M. Thalmann. [32] J.-D. Zhang and C.-Y. Chow. igslr: personalized geo-social [33] V. W. Zheng, B. Cao, Y. Zheng, X. Xie, and Q. Yang. [34] V. W. Zheng, Y. Zheng, X. Xie, and Q. Yang. Collaborative [35] Y. Zheng. Tutorial on location-based social networks. WWW , [36] Y. Zheng and X. Xie. Location-based social networks: Take the sub-gradient of  X  ( L ) over L d ( g ) :  X  X  ( L ) R Taking the vector  X  2 norm on both sides of Eq. (19): which requires k Z d ( g ) k 2 &gt;  X  3  X  g  X  . If the condition k Z h olds, by plugging Eq. (20) into Eq. (19), we can get
