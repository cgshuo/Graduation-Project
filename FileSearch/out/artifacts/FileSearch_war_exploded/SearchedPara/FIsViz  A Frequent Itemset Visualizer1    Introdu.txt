 Frequent itemset mining [1,10,11,12,13] plays an essential role in the mining of vari-ous patterns (e.g., association rules, correlation, sequences, episodes, maximal itemsets, closed itemsets) and is in demand for many r eal-life applications. Mined frequent item-sets can answer many questions (examples of which are shown in Fig. 1) that help users make important decisions. Hence, numerous frequent itemset mining algorithms have been proposed over the last decade. However, most of them return a collection of fre-quent itemsets in textual form (e.g., a very long unsorted list of frequent itemsets). As a result, users may not easily see the useful information that is embedded in the data.
To assist users in gaining insight into massive amounts of data or information, re-searchers have considered many visualizatio n techniques [7,16]. Visualization systems like Spotfire [2], VisDB [8] and Polaris [17] have been developed for visualizing data but not the mining results. For systems that visualize the mining results, the focus has been mainly on results such as clusters [9,15], decision trees [3], social networks [4] or association rules [5,6] X  X nstead of frequent itemsets. Showing a collection of frequent itemsets in graphical form can help users understand the nature of the information and show the relations embedded in the data.

Recently, researchers have shown interests in visualizing frequent itemsets. For in-stance, Munzner et al. [14] presented a visualization system called PowerSetViewer (PSV), which provides users with guaranteed visibility of frequent itemsets. However, PSV does not show the relationship between related itemsets (e.g., not easy to know that itemsets { apples, bananas } and { apples, bananas, cherries } are related X  X he former is a subset of the latter). Yang [18] also developed a system that can visualize frequent item-sets. However, his system was primarily designed to visualize association rules, and it does not scale very well in assisting users to immediately see certain patterns among a very large number of items/itemsets.

Hence, some natural questions to ask are: Can we design a system that explicitly shows relationships among frequent itemsets? Can we help users find satisfactory an-swers to important questions that could lead to critical business decisions?
To this end, we present a visualizer to enhance the data mining process of the user by providing answers to some important business questions. The key contribution of our work is a novel interactive system, called FIsViz ,for visualizing frequent itemsets . This visualizer provides users with clear and explicit depictions about frequent itemsets that are embedded in the data of interest. H ence, FIsViz enables users X  X t a glance X  X o infer patterns and answers to many questions (e.g., Q1-Q4 in Fig. 1); it also provides interactive features for constrained and interactive mining. Moreover, with FIsViz, users can efficiently find closed itemsets and can easily formulate association rules from the displayed frequent itemsets.

This paper is organized as follows. Next section describes related work. In Section 3, we introduce our FIsViz and describe its design as well as features. Section 4 shows evaluation results. Then, we briefly discuss, in Section 5, the scalability of FIsViz with respect to large datasets. Finally, conclusions are presented in Section 6. Ya n g [18] designed a system mainly to visualize association rules X  X ut can also be used to visualize frequent itemsets X  X n a two-dimensional space consisting of many vertical axes. In the system, all domain items are sorted according to their frequencies and are evenly distributed along each vertical axis. A k -itemset is then represented by a curve that extends from one vertical axis to another connecting k such axes. The thickness of the curve indicates the frequency (or support) of such an itemset. However, such a representation suffers from the following problems: (i) The use of thickness only shows relative (but not exact ) frequency of itemsets. Comparing the thickness of curves is not easy. (ii) Since items are sorted and evenly distributed along the axes, users only know some items are more frequent than the others, but cannot get a sense of how these items are related to each other in terms of their exact frequencies (e.g., whether item a is twice as frequent as, or just slightly more frequent than, item b ). (iii) Although Yang X  X  system is able to show both association rules and frequent itemsets, his system does not provide users with many interactive features, which are necessary if a large graph containing many items to be displayed.

PowerSetViewer (PSV) [14] is designed specifically for displaying frequent item-sets in the context of the powerset universe. With PSV, frequent itemsets are first grouped together based on cardinality (each represented by a different background color) in a two-dimensional grid; itemsets of the same cardinality are then mapped into grid squares. When the number of k -itemsets exceeds the number of allocated grid squares, PSV maps several frequent itemsets i nto one square. A square is highlighted if it contains at least one frequent itemset. This provides users with guaranteed visibility of itemsets. While PSV is truly designed for visualizing frequent itemsets, it also suf-fers from the following problems: (i) As a highlighted grid square may contain many frequent itemsets, it is not easy to find out which one or more itemsets (among all the itemsets represented by such a square) are frequent. (ii) PSV does not tell the exact fre-quencies of frequent itemsets. (iii) It is difficult to grasp the relationships between two related itemsets (e.g., { a, b } is a subset of { a, b, c, d } ). In this section, we show basic representation and demonstrate features of our proposed frequent itemset visualizer ( FIsViz ). 3.1 Basic Representation of FIsViz FIsViz shows frequent k -itemsets in a two-dimensional space. The x -axis shows the n domain items, which are arranged in non-ascending frequency order (by default) on the x -axis. The y -axis, which can be in logarithmic-scale or normal-scale ,showsthe frequencies of itemsets. A connecting edge between two items suggests that the two items appear together in the dataset. In this way, a non-singleton itemset (e.g., { apples, bananas, cherries } ) is represented by a polyline (series of consecutive edges) ended with a left-pointing triangle. Each singleton itemset (e.g., { apples } ) is represented by a circle. See Fig. 2(a) for a snapshot of the basic representation of FIsViz. Observations (Fig. 3) of this snapshot reveal the following properties associated with this basic representation of FIsViz: 1. FIsViz provides users with a quick intuitive overview about the frequency of each 2. The most frequently occurring item (which with the highest frequency) appears on 3. Each k -itemset (where k&gt; 1 ) is represented by a polyline, and its frequency is 4. All prefixes of any k -itemset  X  appear on the left of  X  along the polyline that repre-5. All the nodes representing subsets of an itemset  X  appear to the left and above 6. Similarly, all the nodes representing supersets of an itemset  X  appear to the right 7. In addition to finding frequent itemsets (and their frequencies), users can also find 3.2 Features of FIsViz Feature 1 (Query on frequency). With our FIsViz, users can easily find all frequent items and/or frequent itemsets (i.e., with frequencies exceeding the user-specified mini-mum frequency threshold minsup ) by ignoring everything that lies below the  X  X hreshold line X  y = minsup (i.e., ignoring the lower portion of the graph). To a further extent, the representation of itemsets in FIsViz can lead to effective interactive mining . To elabo-rate, with FIsViz, users can easily see what (and how many) itemsets are above a certain frequency. Based on this information, users can freely adjust minsup (by moving the slider X  X hich controls minsup  X  X p and down along the y -axis) and find an appropri-ate value for minsup . See Fig. 2(b), which shows itemsets with frequencies  X  minsup . Moreover, FIsViz also provides two related f eatures: (i) It allows users to interactively adjust minsup and automatically counts the number of itemsets that satisfy minsup .By doing so, users can easily find top-N frequent itemsets . (ii) It also allows users to pose a range query on frequency (by specifying both minimum and maximum frequency thresholds minsup and maxsup ) and then shows all itemsets with frequencies falling within the range [ minsup , maxsup ].

Feature 2 (Query on cardinality). In FIsViz, itemsets of different cardinalities are drawn in different color, and itemsets with higher cardinality are drawn over those with the lower cardinality. This helps users find closed itemsets and maximal itemsets .More-over, FIsViz also allows users to pose a range query on cardinality so that only those frequent itemsets with cardinality k within the user-specified range [ k min , k max ]are drawn.

Feature 3 (Query on itemsets). FIsViz also allows users to interactively select cer-tain items of interest (e.g., promotional items in a store) and to pose the queries on itemsets. Examples of these queries include (i)  X  X ind all itemsets containing some of selected items X , (ii)  X  X ind all itemsets containing at least all of the selected items X , and (iii)  X  X ind all itemsets not containing any of the selected items X . See Fig. 2(b), in which selected itemsets are highlighted.

Feature 4 (Details-on-demand). Details-on-demand consists of techniques that pro-vide more details whenever the user requests them. The key idea is that FIsViz gives users an overview of the entire dataset and then allows users to interactively select parts of the overview for which they request more details X  X y hovering the mouse over different parts of the display. Specifically, FIsViz supports details-on-demand in the following ways: (i) When the mouse hovers on an edge/polyline connecting two nodes (say, representing items x and y ), FIsViz shows a list of itemsets containing both x and y . Selecting an itemset in the list instantly highlights the specific edge it is con-tained in, as well as both of its connecting nodes, so that users can see where the edge starts and ends. (ii) When the mouse hovers over a node , FIsViz shows a list of all itemsets contained in all the edges starting or ending at this node. Selecting an itemset from the list instantly highlights the edge it is contained in. (iii) When the mouse hov-ers over a pixel in the display (even if it is not part of the graph), a small box appears showing the frequency and itemsets encoded by the mouse position. This is particularly useful when users need to see among the vast array of edges what a particular point in the display refers to.

Feature 5 (Formation of association rules). For many existing systems for visualiz-ing association rules (which only shows the support and confidence of the rule A  X  C ), it is not easy to obtain the frequencies of itemset A and of C . In contrast, our FIsViz displays the information needed to infer and compute these rules. For instance, one can form a rule and then compute its support as well as confidence based on the frequen-cies of A and C . See Observation 3 in Fig. 3. Moreover, FIsViz provides an additional benefit that users can compute other metrics such as lift .

Feature 6 (Ordering of domain items). By default, FIsViz arranges the domain items (on the x -axis) in non-ascending frequency order. However, FIsViz also provides users with an option to arrange items other orders. Having such an option is useful for constrained mining , in which users may want to arrange the items according to some constraints (e.g., put items of interest X  X ay, promotional items X  X n the left and other items on the right of the screen). With this item ordering, the following property is preserved: Frequencies of prefixes of the k -itemsets remain non-decreasing when moving from right to left . We conducted two sets of evaluation tests. In the first set, we tested functionality of our FIsViz by showing how it can be applicable in various scenarios or real-life applications. In the second set, we tested performance of our FIsViz. 4.1 Functionality Test In the first set of evaluation tests, we compared our FIsViz with existing systems like Yang X  X  system [18] and PSV [14]. We considered many different real-life scenarios. For each scenario, we determined whether these s ystems can handle the scenarios. If so, we examined how these system display the mining results. The evaluation results show that our FIsViz was effective in all these scen arios. A few samples of these scenarios are shown in Fig. 4. 4.2 Performance Test In the performance test, we used (i) several IBM synthetic datasets [1] and (ii) some real-life databases (e.g., mushroom dataset) from UC Irvine Machine Learning Depository. The results produced are consistent. Fig 2(b) shows a screenshot of using the real-life mushroom dataset.

In the first experiment, we varied the size of databases. The results showed that the runtime (which includes CPU and I/Os) increased linearly with the number of transac-tions in the database.

In the second experiment, we varied the number of items in the domain. The results showed that the runtime increased when the number of domain items increased.

In the third experiment, we varied the user-defined frequency threshold. When the threshold increased, the number of itemsets that satisfy the threshold (i.e., itemsets to be displayed) decreased, which in turn leads to a decrease in runtime. Recall that our FIsViz presents items on the x -axis. If each item is displayed by one pixel, then eventually the visualizer is limited by the number of items it can display within the user viewpoint. To overcome this limitation, we are developing the follow-ing approaches: (i) We apply multi-resolution visualization , with which we show the overall structure at one resolution and present details (upon the user request) at a dif-ferent resolution. (ii) We span some of the displays beyond the viewpoint by carefully embedding FIsViz with navigation facilities (e.g., scrolling, panning) so that users can view items that are off-screen with minimum effort and without losing connectivity in-formation from the lines in the display. (iii) We condense the large dataset by creating taxonomies on domain items based on their properties (e.g., item type) so that a large number of items can be coalesced onto a data point, which can then be opened for more details (or closed for fewer details) by users.
 Most of frequent itemset mining studies return a collection of frequent itemsets in tex-tual forms, which can be very long and difficult to comprehend. Since  X  X  picture is worth a thousand words X , it is desirable to have visual systems. However, many existing vi-sual systems were not designed to show frequent itemsets. To improve this situation, we proposed and developed a powerful frequent itemset visualizer ( FIsViz ), which pro-vides users with explicit and easily-visible information among the frequent itemsets. Specifically, FIsViz gives a quick intuitive overview of all the itemsets and their fre-quencies (e.g., visual clues show which individual items are most frequent and how the items or itemsets are distributed); it also provides in-depth details of interesting item-sets (e.g., itemsets of a certain frequency a nd/or cardinality) through human interaction like mouse hover. Evaluation results showed the effectiveness of FIsViz in answering a board range of questions for real-life applications. These answers helps users in making appropriate business decisions.
 Acknowledgement. This project is partially supported by NSERC (Canada) in the form of research grants.

