 Arizona State University Email:huiji.gao@asu.edu
The ubiquitous online social services enrich people X  X  social activities with their families, friends and colleagues, exerting a vital impact on people X  s life, changing their ways of thinking and behaving. Soci al media sites including Face-book, Twitter, Wikipedia, Bloggers, Myspace are attracting more users than ever. In 2009, the global time spent on Facebook, one of the most popular social media sites, has more than 500 million active users and the number is still suggests a dynamic social change and potential opportunities for social marketing businesses.

In social media websites, users are allowed to partici-pate in social activities, e.g., connecting with other like-minded people, updating their status, posting blogs, up-loading photos, bookmarks and tags, and so on. Besides, people can join explicit groups at different websites. For instance, fans of sports teams can join dedicated groups where they can share their opinions on team performance, comment on the newest information about player transfers. Studying individual behavior is usually dif fi cult due to the extremely large population as well as the idiosyncrasy of human behavior. Studying statistics at website level often fail to catch suf fi cient detail. Group-level investigation can provide useful information with varying granuality.
A group (or community) can be considered as a set of users where each user interacts more frequently with users within the group than with users outside the group. Some social media websites (e.g., Flickr, Youtube) provide explicit groups which allow users to subscribe or join them. How-ever, some highly dynamic sites (e.g., Twitter, Delicious) have no clear group structures, which requires quality com-munity detection approaches to discover them. Community detection approaches are usually based on structural features (e.g., links). Since social media sites also provide metadata as well as content information, such information can also help to de fi ne the actors X  social positions.

The diversity of people X  X  interests and social interactions suggests that the community structures overlap. When there are explicit groups in social media websites, users are allowed to join more than one group based on their personal preferences and interests. When there are no explicit groups available, community detection algorithms can be used to obtain such groups. It is more reasonable to cluster users into overlapping communities. For instance, a user who is interested in football and iPad is very likely a member of two separated communities.

Social media, especially in blogosphere and bookmarking sites, provides both user information (e.g., friendship links, pro fi les) and user metadata (e.g., tags). These metadata contain clues to understanding communities in social me-dia. Clustering homogeneous users and semantically close tags into communities simultaneously is a challenging but rewarding task. It is easy to obtain the common interests of a community by aggregating tags within it. This is helpful to study communities. Co-clustering is one way to obtain this kind of community structures. However, the constructed communities are disjoint which contradicts the actual social structures. Figure 1 is a toy example of two communities. Vertices u 1  X  u 5 on the left represent users, t  X  t 4 on the right represent tags and edges represent tag subscription relation between users and tags. According to Dhillon X  X  [1] and Zha X  X  [2] approaches, the singular vector corresponding to second largest singular value gives the bipartition information of the bipartite graph which is shown as follows:
If a clustering algorithm such as k-means is run on the singular vector, user u 3 will be assigned to either one of the two clusters if we want a bipartition. This disjoint clustering fails to uncover the real social roles of user u 3 . Based on the graph structure, it is more reasonable to have two over-lapping clusters ( u 1 ,u 2 ,u 3 ,t 1 ,t 2 ) and ( u 3 ,u which the users X  interests of each cluster can be summarized using t 1 , t 2 ,and t 3 , t 4 , respectively.

An interesting observation in social life is that a social connection is often associated with one af fi liation [3]. For instance, a person likes or dislikes a movie, he/she is or is not a member of special interest group, and so on. Instead of clustering vertices, clustering edges seems more appropriate in a sense. Clustering edges usually achieves overlapping communities. Look at the toy example shown in Figure 1, edges connecting to nodes t 1 ,t 2 and t 3 ,t 4 are clustered into two separate groups both containing user u 3 . The difference between our work and traditional co-clustering of documents and words [1], [2] is that we allow cluster overlap. It is also different from fuzzy (soft) clustering because we assign discrete cluster membership. Thus our contributions are summarized as follows:  X  We propose to discover overlapping communities in  X  We use user-tag subscription information instead of  X  We obtain clusters containing users and tags simulta-
The rest of this paper is organized as follows. Section II summarizes contemporary techniques in community detec-tion and co-clustering. Section III de fi nes the problem for-mally. A framework is presented in Section IV, followed by experimental evaluation in Section V and VI. Our work and possible future directions are summarized in Section VII.
Online social networks are recognized as complex net-works which are characteri zed by high clustering coef fi cient and short average distance [4]. A high clustering coef fi cient suggests a strong community structure in social networks. But community structure is not always explicitly available which makes community detection [22] an important com-ponent in social network analysis.

Most work in community detection attempt to discover non-overlapping communities based on different measures, objectives and statistical inference [5]. Methods based on graph partitioning is used to divide users into disjoint sub-graphs such that the number of edges lying between different communities are minimized. However, the graph partition problem is usually NP-hard which is relaxed to spectral clustering [6]. Newman and Girvan [7] proposed modularity to measure the strength of community structure. Modularity of a community is de fi ned by the number of edges within the community subtracted by the expected number of edges in this community. High modularity implies that the nodes are closely connected. Maximizing the modularity is also proven to be NP-hard and a relaxation to spectral clustering is proposed [8]. Random walk can be effective in community detection in social and biological networks [9], [10]. The basic idea is that the random walker has a higher likelihood to stay within the highly connected communities than move to another community.

Online social networks are made of highly overlapping cohesive communities. Overlapping community detection, which allows one user to be associated in several com-munities, attracts more attention recently. There are two different versions of overlapping community representation. Fuzzy clustering or soft clustering is one of the ways in which each node will be assigned a membership score to a community. The probability represents the membership dedicated to a community. Yu et al. [11] propose a graph factorization framework, which approximates the original graph by constructing a node-community bipartite graph, in which each link betw een a node and a community represents the membership (probability) of this node to the community. Bayes inference, usually requires some observed patterns of connections between users, and builds a statistical model with a set of parameters, then these parameters are estimated by maximizing poste rior [5]. Newman et al. [12] model the proba bilities from users to gr oups via expectation-maximization in directed graphs.

The other way of overlapping community detection is discrete assignment. CFinder [13] fi rst enumerates all k-cliques and combines them if there is a high overlapping (e.g., they share k-1 nodes) between two cliques. Cliques are fully connected sub-graphs and a node may belong to several cliques. This method can discover overlapping communities, but it is computationally expensive. EdgeCluster [3] views the graph in an edge-centric angle, i.e., edges are treated as instances and nodes are treated as features. It also shows that a user is usually involved in multiple af fi liations, but an edge is usually only related to a speci fi c group. Thus, they propose to cluster edges instead of nodes in social media. This discrete assignment of nodes in a graph gives a clear de fi nition on the community of nodes. Evans et al. [14] proposes to partition links of a line graph to uncover the overlapping community structure. A line graph can be constructed from the original graph, i.e., each vertex in the line graph corresponds to an edge in the original graph and the links in the line graph re presents the adjacency between two edges in the original graph, for instance, two vertices in line graph are connected if the corresponding edges in the original graph share a vertex. But it is dif fi cult to scale up to large data sets because of memory requirement.
Co-Clustering is the proces s to cluster instances as well as their features at the same time. Dhillon et al. [1] propose to co-cluster documents and terms. At fi rst, a bipartite graph between documents and terms is constructed, but partitioning documents and words in this graph is NP-hard, thus it is relaxed to a spectral co-clustering problem. Then top singular vectors (except the principle singular vector) of the document-word bipartite graph are clustered by k-means algorithm. The work above does not take the document-document correlation into account. Java et al. [15] advance this method by adding link structures between entities. For example, links between academic papers in terms of citation are added to the paper-word bipartite graph. The basic idea of Zha et al. [2] is close to Dhillon X  X  work. The bipartite graph partition problem is solved by computing a partial singular vector decomposition (SVD) of the weight matrix. Furthermore, Zha et al. also show that the normalized cut problem is connected to correspondence analysis in multi-variate analysis. Similar to [1], this problem is also relaxed to spectral clustering, then k-means is run on the eigenvectors to discover clusters. Compared to [1], this method requires more memory and are computationally more expensive. Information-theoretic co-clustering [16] tries to maximize mutual information between document clusters and term clusters.

In social media, a community is a group of people who are more  X  X imilar X  with people within the group than people out-side this group. Homophily is one of the important reasons that people connect with others [17], which can be observed everywhere: people who come from the same city talk more frequently, people have similar political viewpoints are more likely to vote for the same candidates, and people who watch the same movies because of the commonly liked movie stars. The homophily effect suggests that like-minded people have a higher likelihood to be together.
 (e.g., bookmarks, blogs). For each resource, users are asked to provide a short description in terms of tags. These tags are not randomly picked. They summarize the main topic of each resource. In this paper, the concept of community is generalized to include both users and tags. Tags of a community imply the major concern of people within it.
Let U = ( u 1 ,u 2 ,...,u m ) denote the user set, T = ( t 1 ,t 2 ,...,t n ) the tag set. A community C i (1  X  i  X  k ) is a subset of users and tags, where k is the number of communities. As mentioned above, communities usually overlap, i.e., C i C j =  X  (1  X  i, j  X  k). On the other hand, users and their subscribed tags form a user-tag matrix M, in which each entry M ij  X  X  0 , 1 } indicates whether user u i subscribes to tag t j . So it is reasonable to view a user as a sparse vector of tags, and each tag as a sparse vector of users.

Given notations above, the overlapping co-clustering problem can be stated formally as follows:
The observation that a user is usually involved in several af fi liations but a link is usually related to one community en-lightens us to cluster edges instead of nodes. After obtaining edge clusters, communities can be recovered by replacing each edge with its two vertices, i.e., a node is involved in a community as long as any of its connection is in the community. Then the obtained communities are often highly overlapped. This idea is similar to cluster in line graphs [14], but constructing line graph requires large amount of memory.
In a user-tag network, each edge is associated with a user vertex u i andatagvertex t p . If we take an edge-centric view by treating each edge as an instance, and two vertices as features, each edge is a sparse vector. The length of vector is
N u + N t ,inwhichthe fi rst N u entries correspond to users, and the other N t entries correspond to tags. For example, the edge between u 1 and t 1 in Figure 1 can be represented u 1 and t 1 are non-zero.

Communities that aggregate similar users and tags to-gether can be detected by maximi zing intra-cluster similar-ity, which is shown in Eq. (2). where k is the number of communities, C = { C 1 , C 2 , ... , C k } , x j represents an edge, and c i is the centroid of community C i . This formulation can be solved by using k-means. However, k-means is not ef fi cient for large scale data sets. We propose to use EdgeCluster which is a k-means variant and is a scalable algorithm to extract communities for sparse social networks [3]. It treats the network in an edge-centric view. It is ef fi cient because each centroid only compares to a small set of edges that are correlated to the centroid. It is reported to be able to cluster a sparse network with more than 1 million nodes into thousands of clusters in tens of minutes. The clustering quality is comparable to modularity maximization but the time and space reduction is signi fi cant. It should be noted that the network in [3] is 1-mode, but the user-tag network is 2-mode.
 The expected density of the user-tag network is shown in Eq. (3), which guarantees an ef fi cient solution by applying EdgeCluster (The proof is omitted due to space limitation). where d is the maximum tag degree, N u is the number of users in this graph and  X  is the exponent of the power law distribution, which usually falls between 2 and 3 in social networks [20]. The maximum degree d is usually large in a power law distribution. Thus, the density is approximately inverse to the number of users.

A key step in clustering edges is to de fi ne edge similarity (centroids can be viewed as edges as well). Given two edges e ( u i ,t p ) and e ( u j ,t q ) in a user-tag graph, the similarity between them can be de fi ned in Eq. (4): where S u ( u i ,u j ) is the similarity between two users, and S ( t p ,t q ) is the similarity between two tags. This is rea-sonable because the edge similarity should be dependent on both user and tag similarity. And parameter  X  (0  X   X   X  1) controls the weights of users and tags. Considering the balance between user similarity and tag similarity,  X  is set to 0.5 in our experiments.

In the following sections, we show that our framework can cover different similarity schemes.
 A. Independent Learning
Independence assumption is a popular way to simplify the problem we want to solve. If two tags are different, their similarity can be de fi ned as 0, and 1 if they are the same. Thus the similarity can be represented by an indicator function which can be shown by Eq. (5). The user-user similarity is also de fi ned in a similar way. Cosine similarity is widely used in measuring the simi-larity between two vectors. Given two edges e ( u i ,t p ) and e ( u j ,t q ) , their cosine similarity can be rewritten in Eq. (6).
Following Eq. (4), we can de fi ne the similarity between two edges as in Eq. (6), which is essentially the cosine similarity between two edges.
 B. Normalized Learning
In online social networks, the tag usage behavior differs one user to another. For example the tag usage distribution follows a power law: some tags are shared by a small group of people, which might suggest a higher likelihood that they form a community. On the other hand, popular tags may not be discriminative in inferring group structures. Thus there is a need to differentiate the importance of different users and tags.

Let d u i denote the degree of the user u i ,and d t p rep-resent the degree of tag t p in a user-tag network. After applying normalization, edge e ( u i ,t p ) can be represented by (0 ,..., 0 , 1 e ( u i ,t p ) and e ( u j ,t q ) , the cosine similarity after normal-ization between them can be written in Eq. (7).
 Setting  X  to 0.5, S u ( u i ,u j ) and S t ( t p ,t q ) given by Eq. (8), we can derive Eq. (7) from Eq. (4). Thus normalized edge similarity is consistent with the proposed framework.
It is noticed that the similarity between two users is not only related to users, but also the tags they are associated with. Eq. (6) and Eq. (7) both assume tags (users) are independent, which is not true in real applications. We next propose a similarity measurement based on correlation. C. Correlational Learning
Users often use more than one tag to describe the main topic of a bookmark. Grouped tags indicate their correla-tion. For instance, the tags car information , auto info and online cars info , are used to describe a blog 5 registered on BlogCatalog, are different, but semantically close.
In a user-tag network, a user can be viewed as a vector by treating tags as features. On the other hand, a tag can also be viewed as a vector by treating users as features. Representing users in a latent semantic space captures the correlation between tags, for example, mapping several semantically close tags to a common latent dimension. Let  X  t 1 ,  X  t be the orthogonal basis of a latent semantic sub-space for tags, user vectors in the original space can be mapped to new vectors in the latent space, which is shown in Eq. 9. where M is a linear mapping from the original space to the latent sub-space. Singular Value Decomposition (SVD) is one of the ways to obtain the set of orthogonal basis. The singular value decomposition of user-tag network M is given right singular vectors and  X  is the diagonal matrix whose elements are singular values. User vectors in the latent space can be formulated in Eq. (10). where u i ( t 1 ,t 2 ,...,t n ) and  X  u i (  X  t 1 ,  X  t vectors in the original and latent space, respectively.
However, only a small set of right singular vectors V = ( v 2 ,v 3 ,...,v m ) are necessary to be computed. Dhillon [1] suggests that it be log 2 k +1 . Recent experimental evalu-ation in text corpus suggests the dimension between 50 and 1,000 depending on the corpus size and the problem being studied [18]. Another reason of taking a relatively small is to reduce noise in the data. The user vectors in the latent space can be represented by pluging V into Eq. (10). We set m to 10 for synthetic data sets and to 300 for social media data sets. The user similarity and tag similarity are then de fi ned by the corresponding vectors in the latent space.
This can be interpreted from the graph partition point of view. Graph partition based on ratio-cut or normalized-cut can be relaxed to spectral clustering problem [6]. where z solves the generalized eigenvectors of above equa-tion, L is the laplacian matrix and W is the adjacency matrix, their de fi nitions are shown in Eq. (13) in which D 1 and are diagonal matrix whose non-zero entries are user degrees and tag degrees, respectively.
 Let Z = U generalized eigenvector problem can be rewritten by: After simple algebraic manipulation, we obtain
Thus eigenvectors Z are actually the right and left singular vectors of adjacency matrix M . Thus top singular vectors (except the principle singular vector) of the adjacency matri-ces contain partition information [1], [2], [6]. Since the user-tag graph studied in this paper is connected, the principle singular vector is discarded.

Clustering evaluation is dif fi cult when there is no ground truth. Synthetic data, which is controlled by various param-eters, facilitates a comparative study between the uncovered and actual clusters. We fi rst introduce the synthetic data and how they are generated, then the clustering quality measure-ment Normalized Mutual Information (NMI). Finally, the NMI of different clustering methods are reported. A. Synthetic Data Generation
We develop a synthetic data generator that allows input of the numbers of clusters, users and tags. First users and tags are split evenly into each cluste r. Then, in each cluster users and tags are randomly connected with a speci fi ed density (e.g., 0.8). Links between clusters which account for 1% of the total number of links are randomly assigned to two users or two tags belonging to distinct clusters. For such between cluster links, additional user nodes or tag nodes are added such that users are connected to tags and tags are connected to users. Figure 2, shows a toy example of the synthetic user-tag graph in which users are labeled as u 1 and tags t 1  X  t 8 . Three overlapping clusters are highlighted with different colors. Nodes labeled as t7, t8 and u7 are shared by two of the clusters. As shown in the toy example, links within clusters are dense, and links between clusters are sparse, thus the link structure implies a separation of clusters which will be served as an approximate ground truth. B. NMI Evaluation in Synthetic Data
The advantage of a synthetic study is that the ground truth is under control. Thus, it is possible to measure the clustering performance by comparing with the ground truth. The Normalized Mutual Information (NMI) is commonly used to measure the clustering quality. Since we are studying overlapping clustering, the NMI de fi nition given by Lanci-chinetti et al. [19] will be used in the following evaluations. It is an extension of NMI for non-overlapping clustering. Given two clusterings X and Y, the NMI is de fi ned below. where H ( X | Y ) and H ( Y | X ) are conditional entropy, | C respectively. The NMI is computed in two steps. First, fi nd the pairs of clusters that are most close to each other in two clusterings. Second, average the mutual information between those pairs of clusters. The higher the NMI value is, the more similar between two clusterings. If two clusterings X and Y are exactly the same, the NMI value is 1.
 C. NMI and Number of Clusters
We generate another data set with 1,000 users and 1,000 tags and with different number of clusters which range from 5 to 50 and cluster density is set to 1 such that all users connect to all tags within each cluster. The latent dimension m is set to 20 in the synthetic evaluations. Since our proposed algorithms are basically k-means variants, we run our methods 100 times and report the averaged NMI. In each run, we set the same seed for Independent Learning, Normalized Learning and Correlational Learning. Dhillon X  X  co-clustering method is also included for the comparative study. The results are summarized in Figure 3.

We can see that the method considering tag correlation performs much better than the other two. This indicates that correlation helps to aggregate users and tags that are se-mantically close. It is interesting to note that the Normalized Learning is inferior to the counterpart without normalization. Co-clustering fails to uncover overlapping structure, and has a similar performance as that of Independent Learning. D. NMI and Link Density
We also study how intra-cluster link density affects clus-tering in synthetic data sets. We created synthetic data sets (50 clusters, 1,000 users and 1,000 tags) with different intra-cluster densities that range from 0.1 to 1. The data set is sparse when the link density is low and users and tags are fully connected when the link density is 1. The NMI results for different methods are shown in Figure 4. When the intra-cluster link density is greater than or equal to 0.2, the averaged NMI for correlational learning is above 0.8 which suggests the overlapping structures are well recovered. A high NMI value suggests the robustness of the proposed framework to work well even when the intra-cluster link density is low. Interestingly, co-clustering does not work well when the link density is low, e.g., NMI values are below 0.3 when the intra-cluster density is smaller than 0.5.
In summary, Correlational Learning is more effective than the other two methods in recovering overlapping clusters in terms of NMI. It works well even when the intra-cluster link density is low. Co-clustering p erforms poorly because it only fi nds non-overlapping clusters.

BlogCatalog is a social blog directory where the blog-gers can register their blogs under prede fi ned categories. We crawled user names, user ids, their friends, blogs, the associated tags and blog categories. For each blog, users are allowed to specify several tags as a short description. These tags are usually correlated with each other. We crawled more than 10,000 users. Users who have no tags are removed from the data set, and tags that were used by less than two persons were removed as well. Finally, we obtained a data set with 8,797 users and 7,418 tags.

Delicious is a social bookmarking website, which allows users to tag, manage, and share online resources (e.g., articles). For each resource, users are asked to provide several tags to summarize its main topic. We crawled 11,285 users whose information include user name, user id, their friends and fans, their subscribed resources and tags for each resource. The top 10 most frequent tags of each person are kept, which is 13,592 in total. In contrast to BlogCatalog, two kinds of links are formed in Delicious. Fans are the connections from other people (in-links) and friends are the links point to others (out-links). Thus, the connections are directional in Delicious.
 The statistics of both data sets are summarized in Table I. The most important difference between the two data sets is that BlogCatalog has category information which can be served as a ground truth for clustering distribution. A. Interplay between Link Connection and Tag Sharing There exist explicit and implicit relations between users. Examples of explicit relations are friends or fans people choose to be. Examples of implicit relations are tag sharing, i.e., people who use the same tags. Are there any correlation between the two different relations? What drives people connect to others? Is it a random operation? We conducted statistical analysis between user-user links and tag sharing.
In the fi rst study, we fi xuserswhohaveorhaveno connection with others, then show the tag sharing prob-abilities. Figure 5 shows the tag sharing probabilities in BlogCatalog and Delicious data sets. For Delicious data, the friends network and fans network are evaluated separately. All three graphs show a similar pattern that the tag sharing probability is higher among users who are connected than users who are not. This can be explained by the homophily principle that people tend to connect with those who are like-minded.

Figures 6 and 7 are the probability that two users being connected if they share tags in B logCatalog and Delicious, respectively. In Figure 6, the probability of a link between two users increases with respect to the number of tags they share. In Delicious, similar pattern is observed. It is also intriguing to show the probability that two users are connected is higher in fans network than that in friends network, which implies users are more similar to their fans than their friends.
 B. Clustering Evaluation
The clustering evaluation consists of three studies. First, cross-validation is performed to demonstrate the effective-ness of different clustering algorithms in BlogCatalog data set. Then we study the correlation between user connec-tivity and co-occurrence in extracted communities. Finally, concrete examples illustrate what clusters are about. 1) Comparative Study: In BlogCatalog, categories for each blog are selected by the blog owner from a prede fi ned list. A category is treated as a community or group which suggests the common interest of people within the group. For example, category  X  X log Resources X  is related to the gadgets used to manage blogs or to communicate with other social media sites. Around 90% of bloggers had joined two categories, and few bloggers had more than 4 categories.
With category information, certain procedures such as cross validation (e.g., treating categories as class labels, cluster memberships as features) can be used to show the clustering quality. Linear SVM [21] is adopted in our experiments since it scales well to large data sets. As recommended by Tang et al. [3], 1,000 communities are used in our experiments. We vary the fraction of training data from 10 %to 90 % and use the rest as test data. The training data are randomly selected. This experiment is repeated for 10 times and the average Micro-F1 and Macro-F1 measures are reported.

Table II shows fi ve different clustering methods and their prediction performance. In this table, the fourth algorithm EdgeCluster [3] uses user-user network rather than the user-tag network. Dhillon X  X  co-clustering algorithm is based on Singular Value Decomposition (SVD) of the normalized user-tag matrix. As shown in Table II, Correlational Learning consistently performs better, especially when the training set is small. According to Table II, normalization does not improve performance. This suggests normalization should be taken cautiously. Dhillon X  X  co-clustering method which can only deal with non-overlapping clustering does not perform well compared to other methods.

It is also interesting to notice that clustering based on user-tag is signi fi cantly better than user-user connection which suggests that meta data (e.g., tags) rather than connection is more accurate in measuring the homophily between users. The clustering difference between meta data and links also reveals promising applications of the framework in link prediction systems. Next, we try to interpret clustering results. 2) Connectivity Study: We study the correlation between user co-occurrence in extracted communities and the ac-tual social connections between them. We also study the connectivity between users who are in the top similar list. 1,000 overlapping communities are extracted by Correla-tional Learning.

In Table III, fi rst row represents the number of commu-nities two users co-occur, and each entry in this table is the probability that two users have a connection established in actual social networks. The last column lists the probability if two users are connected randomly. Higher probability than randomness suggests that users within communities are similar to each other. As observed in Table III, frequent co-occurrence of users in different communities implies that they are more likely to be connected. Therefore, it is reasonable to state that higher co-occurrence frequency suggests that two users are more similar. Similar patterns are observed in the other two methods.

We compute pairwise cosine similarity between users (in the latent space) and sort them in descending order, then study the dis-connectivity between users who are most similar. Figure 8 shows that the probability of being disconnected is higher than 96% and 99% in BlogCatalog and Delicious, respectively, which means that the majority of homogeneous users are not connected in actual social networks. For example, users marama 6 and ameer157 7 both are interested in the online game  X  X orld of Warcraft X . Their tags highly overlap, but there is no connection between them. In online social networks, most users are scattered in the long tail, and are usually unreachable by following their and their friends X  links. But it is possible to recommend links to connect them with our Correlational Learning. 3) Illustrative Examples: Health is the second largest category (the largest is personal ) in BlogCatalog, a hot topic that attracts lots of cares. To visualize communities, we is representative of its frequency or importance in a set of tags or phrases. Figure 9 shows the tag cloud for Category Health (category-health) including all tags of this category. The most frequent 5 tags, health , weight loss , diet , fi tness and nutrition , are all about health.
 The largest cluster about Health obtained by Correlational Learning is cluster-health with 127 users and 102 tags. The cluster that has the maximum user overlapping with cluster-health is cluster-nutrition with 83 users and 25 tags. Their tag clouds are shown in Figures 10 and 11. Between the two clusters, there are 18 users and 3 tags health , nutrition and weight loss in common. Both clusters are related to health but the fi rst has an emphasis on physical health, highlighted by tags arthritis , drugs , food , dentist , and the second is more about nutrition . We study the tag overlapping between category-health and cluster-health, and between category-health and cluster-nutrition. The top 102 tags of category-health are compared to the tags of cluster-health and the top 25 tags of category-health to those of cluster-nutrition. The numbers of shared tags are 16 for cluster-health and 9 for cluster-nutrition. The overlapping analysis indicates that tags of the two clusters differ (with only 3 tags in common), the tags of the two clusters are not the same as those of category-health, and each cluster represents a new concept (or a sub-topic of health) that is buried in the tags of category-health.
In addition, we aggregate tags of the users in cluster-health and present the most frequent 102 tags in Figure 12. Comparing these tags with those of cluster-health, 40 tags are in common. Many tags such as environment , humor , jokes are not present in the tag cloud of cluster-health, which suggests that these users actually have other interests besides health. A similar pattern is observed for cluster-nutrition. The proposed approach clusters users and tags simultaneously can fi nd clusters with more semantically similar tags.

Multiple interests and diverse interactions a person has in his real social life suggests that community structures in social media are often overlapping in nature. Rich metadata available in online social media provides new opportunity to discover communities by the content users produce. We proposed a framework to study the overlapping clustering of users and tags in online social media which helps to un-derstand the major concerns within the groups. Experimental results in synthetic data reveal that Correlational Learning is very effective in recovering the overlapping cluster structures even when the inner cluster density is low. We reported several interesting fi ndings in BlogCatalog and Delicious data sets. For instance, learning from the metadata is more accurate than the link information, people are more similar to their fans, and so on.

This study suggests more interesting problems that are worth further exploring. Formulating the co-clustering prob-lem into an objective function and maximizing it is one direction to work on. With the large scale online social media data, the computational cost poses a serious challenge, which suggests that we develop more scalable algorithms to ef fi ciently obtain co-clusters. Link prediction is another line of research in which the Correlational Learning framework can help.
 This work is, in part, supported by AFOSR and ONR.
