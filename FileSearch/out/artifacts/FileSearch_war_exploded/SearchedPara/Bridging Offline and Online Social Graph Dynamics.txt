 The online and offline worlds are converging. Location-based services, ubiquitous mobile devices and on-the-go so-cial network accessibility are blurring the distinction be-tween in-person activities and their virtual counterpart. An important effect of this convergence is the rapid and po-werful impact of offline events (meetings, conferences) on the evolution and temporal dynamics of the online connec-tivity between members of social and professional networks. However, these effects have been largely unexplored.
We study these effects by using data from LinkedIn, a popular professional social networking site. We find that of-fline events may induce connectivity changes in the online network  X  there is a dramatic increase in the number of con-nections between event attendees shortly after the date of the event. Building on these insights, we describe a non-supervised method that exploits connectivity changes tem-porally correlated to real world events to successfully in-fer more than 40% of specific event attendees. Finally, we revisit the link prediction problem by including user con-tributed information about offline events to achieve higher link prediction performance.
 Categories and Subject Descriptors: H.2.8 [Database Management] : Database Applications  X  Data mining General Terms: Algorithms; Experimentation.
 Keywords: Social networks, real world events, temporal dynamics, link prediction.
In recent years, there has been an increasing effort and sig-nificant progress in understanding the global structure and evolution of social networks [1, 3, 5]. However, the mech-anism and motivation underlying individual edge creation is still under-explored [2, 4]. In many circumstances, we may be unable to understand the evolution and dynamics underlying a social network by limiting our inputs to node features, edge features and the structure of the network. In the context of social and professional networks, exter-nal factors such as social gatherings and professional confe-rences trigger new connections between people (nodes) in the network and are key to understanding its evolution. Understanding these mechanisms and their motivation is important -not only for its intrinsic value, but for its po-tential to improve link prediction algorithms, detecting off-line events (meetings, conferences, parties, etc.) that caused the connection, or finding attendees with common interests that facilitate both edge creation and the above-mentioned events. In particular, external events allow us (i) to pre-dict when the connection between two people will be created ( i.e. , it is more likely to happen just before or after an event in which both attend), and (ii) to predict connections be-tween people that are distant in terms of network distance, geography or both.
 Present work. We study how real world professional events and social gatherings relate to the temporal dynamics and evolution of a professional network. We show that the num-ber of new connections among attendees to events increases significantly in a short time window just after the dates of the events. Building on this empirical insight, we first de-scribe how to infer attendees to an event from changes in the connectivity of a social network. Later on, we revisit the link prediction problem to account for real world events, achieving a higher performance. We use data from LinkedIn, an online professional network with more than 175 million members. In addition to the social graph, defined by the pro-fessional connections among LinkedIn members, we record a public list of attendees for the largest 10,000 real world public events that created a page on events.linkedin.com . Note that the public attendee list is a subset of the true at-tendees, since the RSVP X  X d contained here need to be public and expressed on events.linkedin.com , in addition to the event X  X  official registration. This dataset gives us a compre-hensive direct mapping between a subset of the attendees to events and members of a social network. Data. We use data from a popular professional social net-working site, LinkedIn, with more than 175 million members that is mainly used for professional networking. In addi-tion to the professional connections among LinkedIn mem-bers that define the social gra ph of the site, we record the dates and lists, often incomplete, of LinkedIn members that attended more than 10,000 real world events that have a public webpage at events.linkedin.com . The lists are often incomplete or partial because we only account for members Figure 1: Both the number of RSVPs per event (Panel (a)) and the RSVPs per member (Panel (b)) are heavy-tailed distributions. that RSVP X  X d to an event using events.linkedin.com , but the actual complete list of attendees is hidden and may be larger.

First, we compute the distribution for the number of atten-dees per event that RSVP X  X d and for the number of events that a member RSVP X  X d 1 . Figure 1(a) shows the comple-mentary cumulative distribution (Complementary CDF) for the number of attendees per event that RSVP X  X d. We ob-serve a heavy-tailed distribution, as many other natural pro-cesses  X  more than 90% of the real world events have more than 10 RSVPs but only 15% of real world events have more than 50 RSVPs. That means, 75% of the real world events in events.linkedin.com have between 10 and 50 RSVPs. Figure 1(b) shows the complementary CCDF for the num-ber of events that a member RSVP X  X d. Again, we observe a heavy-tailed distribution, with 70% of the members repor-ting attendance to a single real world event.
 Connections, density and events. We record the dates when events take place, the connections between attendees of such events that RSVP X  X d using LinkedIn and the day in which those attendees become connected. Figure 2(a) shows the absolute daily number of new connections. There are several interesting patterns. First, we find a sharp increase in the daily number of new connections during and up to 10 days after the events. Second, 10 days after the event, the daily number of new connections declines and it is even lower than before the event. This empirical insights are also supported by the average daily density gain over the subgraphs induced by real world events on the full social graph, as shown in Figure 2(b). We define density of a subgraph G e as: D ( G e )=2 | E e | / ( | V e | X  ( | V e and E e are the set of nodes and connections in G e .
We have observed an average higher connectivity rate and density increase on and up to 10 days after the dates in which events take place. However, does this density increase occur consistently across the full spectrum of real world events with a website in LinkedIn? As Figure 2(c) shows, it does occur across events. This figure shows the density gain for the subgraph induced by each event in the 5 days before the event and the 5 days after the event. For each time window, the events are sorted by decreasing density gain. We observe that across the full range of events, there is a greater density increase (gain) during the 5 days after the date of the event than during the 5 days before. This supports the empirical findings that we discussed before.
We have considered only LinkedIn members that RSVP X  X d to an event on LinkedIn at least once.

Now, we break down events by attendees, and compute the normalized degree gain per attendee for the 5 day time window before the event and the 5 day time window after the event. We define normalized degree of an attendee as the number of connections of the attendee to other atten-dees divided by the total number of attendees to the event minus one. Figure 2(d) shows the normalized degree gain for the attendees of all events. For each time window, the at-tendees are sorted by decreasing normalized degree gain. In this case, we observe that only half the attendees increases significantly their normalized degree by connecting to other attendees during the 5 days before the event, but there is an increase in normalized degree across the full range of atten-dees during the 5 days that follow each event. Algorithm. Given a undirected network G =( V, E )anda real world event e , we define the set of nodes that attended a real world event e as A e  X  V ,thesetofnodesthatRSVP X  X d to the event e as S e  X  A e , and the set of nodes that attended the event e but did not RSVP X  X d as I e  X  A e . We assume that nodes that RSVP X  X d typically attend the event and therefore I e  X  S e  X  A e and I e  X  S e =  X  . In many cases unknown and our goal is to find the nodes that belong to I given the seed set S e , for every real world event e .Wenow describe a simple method to achieve this goal.

We build the set of inferred attendees  X  I by considering all nodes in G that have n or more than n new connections to nodes in S e in a time window,  X  I = { i  X  V \ S e : | j  X  S ,  X  w min  X  ( t i,j  X  t e )  X  w max | X  n } , where t i,j is the time in which nodes i and j become connected and t e is the (starting) date of the event e .Weachieveatradeoff between recall and precision by tuning w min , w max and n For simplicity, in the remainder of the paper, we work with symmetric time windows around the (starting) date of the event; however, this does not restrict our ability to choose different values for w min and w max .
 Experimental evaluation. To evaluate the performance of our method, we would like to study the tradeoff between precision and recall in average across all 10,000 real world events.

If a complete list of attendees (ground truth) for a real world event is available, precision is the fraction of nodes in the inferred set of attendees,  X  I ,presentinthecomplete list of attendees of the event that did not RSVP X  X d ( i.e. , | I of attendees of the event that did not RSVP X  X d, I e ,thatare present in the inferred set of attendees  X  I e ( i.e. , | I Unfortunately, in general, we do not have access to a com-plete list of attendees or ground truth for each real world event but only to an incomplete list of people that RSVP X  X d through LinkedIn. However, in addition to estimate recall using crossvalidation, we are able to identify and measure a precision proxy . To estimate the recall for an event, we perform leave-one-out crossvalidation (LOOCV) for every member in the list of attendees that RSVP X  X d, S e .Inpar-ticular, we solve | S e | inference problems, one for each mem-ber i  X  S e . For each inference problem, we create the sets S e = S e \ i and I e = { i } ,andinfer I e from S e .Wethen compute the recall for each of these inference problems and estimate the total recall computing the average. We can-not estimate the precision for an event given only a list of (c) Network density gain Figure 3: Recall and precision proxy ( n =2 )forthe attendee prediction task. attendees that RSVP X  X d through LinkedIn, S e .Instead,we compute a precision proxy as follows. For each event e ,we let our method include members i  X  S e in the inferred set  X  I . We then compute the ratio between the list of attendees that RSVP X  X d, S e , and the size of the inferred set of atten-dees,  X  I e , i.e. , | S e | / |  X  I e | foreachmethod(andevent). This ratio can be relatively low for events in which not many at-tendees RSVP but the size of the event is actually high. In some cases, a very small value may also indicate a lack of precision.

Figure 3(a) shows the recall across events for different time windows [ t e  X  w, t e + w ]. For w = 100, we achieve an average recall as high as 40% across 10,000 real world events and a recall higher than 40% for more than 50% of the events. In Figure 3(b), we observe the ratio between the list of attendees that RSVP X  X d, S e , and the size of the inferred set of attendees,  X  I e , that may include members S , across all 10,000 real world events. It is difficult to judge the performance because the real number of attendees per event is unknown, and we only have access to the list of attendees that RSVP X  X d using LinkedIn.
 Example and case study 2 . Although true event attendee lists are rarely made public, we have examined how our tech-niques perform in one case where such information is known. In spite of its small size, the event helps us exemplify our techniques and grounds our precision proxy. The official website of the event that we have chosen contains links to the LinkedIn profiles of each attendee that has a LinkedIn account and therefore, we have a reliable mapping between both the list of attendees at LinkedIn and the complete list of attendees at the official website.

All 21 people that RSVP X  X d are also listed as attendees in Drupal executives meeting in Brussels, 8-10 October, 2010. Official event website: http://cxo.drupaldays.org . the official website of the event. However, there are a total of 63 attendees with LinkedIn account listed in the official website (out of 67 attendees), i.e. , there are 42 LinkedIn members that attended the event that did not RSVP X  X d. Figure 4(b) shows the daily connections to members that RSVP X  X d. As in section 2 for all events in average, we also observe a peak in new connections just before and after the event, and later on a decline in the number of new con-nections. Figure 4(a) shows the number of connections to members that RSVP X  X d in a time window spanning 10 days before and after the event for every member in the inferred set of attendees returned by our method. More than 75% of the inferred attendees created 5 or more connections to members that RSVP X  X d. Using our method for inferring at-tendees with a time window spanning 20 days before and after the event and a threshold of 2 connections, the recall on the set of 42 members that did not RSVP is 71.4%. The method returns only 2 LinkedIn members that are not listed in the official website nor RSVP X  X d, i.e. , if we assume that only people in the list of attendees in the official website attended the event, the precision of our method is 95.5%. Algorithms. Given a undirected network G =( V, E )and a real world event e with (starting) date t e , we define the set of nodes that RSVP X  X d to the event e through LinkedIn as
S e  X  V . Our aim is to predict new connections in dates close to t e in which at least one of the peers belongs to
We first recall two baseline methods based on ranking measures on the graph topology that have been shown to achieve a relatively good performance in the link prediction problem in social networks: normalized common neighbors and Adamic-Adar. Normalized common neighbors (CN) be-tween two nodes i and j is defined as the number of connec-tions that nodes i and j have in common normalized by the product of the connections of each node. Adamic-Adar (AA) modifies common neighbors by weighting each neighbor by her degree instead of simply counting.

The rationale for an event-based link prediction approach relies on the observation that an attendee to an event tends to create almost one order of magnitude more connections to attendees of the same event in dates closer to the event than in other days far from the date of the event. We then introduce two simple methods based on normalized common neighbors and Adamic-Adar that given a list of RSVP X  X  to a real-world event achieve a greater performance on the link prediction task for dates close to the date of the event. Nor-malized common attendees (CA e ) between two nodes i and (a) Total connections to
RSVPs Figure 4: Case study: Drupal executives meeting event. j given an event e is defined as the number of connections to attendees of the event e that nodes i and j have in common normalized by the product of the connections of each node that are attendees to the event. In this case, we assume that two nodes are more likely to get to know each other and be-come connected in the social network if they have common connections that attended an event e . Finally, event-based Adamic-Adar (AA e ) simply modifies common attendees in the same way that Adamic-Adar modifies common neigh-bors, penalizing nodes with high degree.
 Experimental evaluation. We evaluate our baseline and event-based methods as follows. For each attendee to an event, we consider (i) her second degree connections up to w min days before the day of the event and (ii) the other attendees to the event to build the list P e of potential con-nections that may be created by attendees to an event e during the time window ( t e  X  w min ,t e + w max ). Then, we generate for each method a list of top-k most likely connec-tions per event  X  L e,k  X  P e . Sweeping over k values allows us to obtain different points in the precision recall curve.
For each event, we compute the precision and recall of the baseline and event-based methods on the connections L e that the attendees create during the time window ( t e  X  w min ,t e + w max ). For our experiments we set w min w max =10days, i.e. , we try to find the connections cre-ated in a 20-day time window centered on the (starting) date of each event. First, we filter out events with less than 10 attendees, since we have observed that attendees to such small events are typically heavily connected between them and events do not provide additional information, and events with more than 50 attendees for computational rea-sons, since they were only 15% of the total number of events. Then, we generate two sets of events: a set of 500 events with the smallest number of connections between attendees up to t e  X  w min and a set of 100 random events. For each event, the set of potential connections that we rank are (i) connections between each attendee and her second degree connections up to t e  X  w min days before the (starting) date of the event and (ii) connections between attendees.
Figure 5 shows the average precision vs recall curves across events with 1 . 96  X  standard error (  X / of sweeping over k on the lists of top-k most likely connec-tions in the event-based and baseline methods for both set of events. In both event sets, AA e outperforms both baselines in terms of precision for more than an order of magnitude for recall values up to 50%. For example, for a 10% recall, AA achieves a precision of approximately 4% in the 500-event set and 1.5% in the 100-event set while CA e precision is 0.5% in Figure 5: Precision vs recall for the link prediction task. the 500-event set and 0.25% in the 100-event set. The preci-sion for both CN and AA goes down to a value below 0.2% in the 500-event set and below 0.06% in the 100-event set. Due to the heavily unbalance dataset that the algorithms need to deal with, they output solutions with relatively low precision value. If we compare the performance between both sets of real world events, we observe that event-based methods gives a greater additional mileage in the 500-event set with the smallest number of connections between atten-dees up to t e  X  w min than in the 100-event random set. A possible explanation behind this difference in performance is that a small number of connections among attendees w min days before an event makes inferring connections using only the network topology more difficult.
We have given empirical evidence that real world events shape the temporal dynamics of a social network. Real-world events may facilitate connections between attendees in an on-line social network. We conclude this after study-ing a professional social network, LinkedIn, with more than 115 million members and 10,000 real-world events. We ex-ploit the bridge between off-line and on-line dynamics in two research problems: attendee inference and link predic-tion. First, we show that a simple method that account for event-induced connectivity changes in a social network can be fruitfully applied to uncover attendees to real-world events. We are able to successfully infer more than 40% of specific event attendees using only event-induced connectivi-ty changes. Second, we modify well-known non supervised link prediction methods to account for the event-induced network dynamics and we show that these modifications lead to a significant improvement. [1] L. Backstrom, D. Huttenlocher, J. Kleinberg, and [2] L. Backstrom and J. Leskovec. Supervised random [3] A. Barab  X  asi and R. Albert. Emergence of scaling in [4] J. Leskovec, L. Backstrom, R. Kumar, and A. Tomkins. [5] M. Newman. The structure and function of complex
