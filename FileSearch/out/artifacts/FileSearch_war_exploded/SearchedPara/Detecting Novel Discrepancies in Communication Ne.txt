
Given a stream of time-stamped communication pairs ( x, y ) ,t i (a.k.a. a communication stream), it is useful to find mathematical constructs that  X  X escribe X  the overall communication behavior of the stream in order to isolate  X  X ovel X  sub-streams. By labeling each pair ( x, y ) with its associated time occurrence sequence t i , we can view a communication stream as a collection of time sequences (one per edge) or as an edge-labeled graph where each edge is labeled by a subset of the ground set T = { t i such that t i is a time-stamp for some pair ( x, y ) } . Figure 1 depicts this representation for a toy graph. This view of a communication stream (as a collection of subsets of T , one subset per edge) enables us to study time-evolving communication networks as combinatorial set-systems. In particular, we use combinatorial discrepancy as a tool to isolate  X  X ovel X  communication substreams in a variety of networks including emails, bluetooth connections, IP traffic, and tweets. Our associated algorithm, Discrepancy-based Novelty Detector ( DND ), e , t } ! $ ) &amp; -# &amp; + , " ! $ ), of time-stamped edges and linear storage complexity. Across time, our algorithm maintains frequency, firing rate (a.k.a. velocity) and acceleration values for each graph element (i.e., edge, vertex, or a subgraph). At each time t , these values are compared with the cor-responding values for the entire network and a tally of the number of ascents/descents in their sequences is used to measure the  X  X iscrepancy X  of an edge or a vertex with respect to that of the entire network viewed as a set-system.

Our contributions are:  X  Introduction of set-system discrepancy as a suit- X  Introduction of firing rate and acceleration on  X  A novelty detection algorithm (DND) based on  X  Illustration of the applicability of our approach
The remainder of the paper is as follows. Section II presents related work. Sections III and IV describe our approach and empirical study. Section V concludes the paper.

The research described here can be broadly placed in the context of anomaly detection [6]. We refrain from using this terminology directly since we use a version of combinatorial discrepancy that is parameter-ized by particular time-dependent statistics which can be tracked at the edge, vertex, subgraph, or network level. In this setup, what is judged to be  X  X noma-lous X  according to one particular function may not be  X  X nomalous X  with respect to another. We prefer to use the term  X  X ovel, X  which refers to subgraphs whose corresponding communication substream de-viate  X  X ubstantially X  from the entire network X  X  com-munication stream (a.k.a. the system) on a given time interval. This allows us to address two shortcomings of current anomaly detection techniques as pointed in [6]: (1)  X  X hen the data has a temporal aspect most of the existing techniques do not handle the sequential aspect explicitly. X  and (2)  X   X  X  X  the nature of anomalies keeps changing over time as intruders adapt their network attacks to evade the existing intrusion detec-tion solutions. X  Our discrepancy approach implicitly incorporates the potential intruders streams into the overall network statistics and explicitly compares their statistics with the overall time-varying system discrep-ancy. Substreams that contribute  X  X ubstantially X  to the overall network discrepancy are flagged for further in-spection of their communication behavior in relation to the overall system behavior. The same inspection also applies for substreams that do not contribute  X  X ubstan-tially X  to the overall network discrepancy. Concerted changes of an intruder X  X  communication behavior are expected to be reflected in the overall system behavior.
Approaches to anomaly detection on networked data have explored the use of minimum description length (MDL) principle [16], [5], [18], [9], classification-based methods [15], probabilistic measures [10], spec-tral methods [13], [12], and neighborhood-based met-rics [20], [19], [3]. Aggarwal and Yu [2] investigated outlier detection in high-dimensional data and intro-duced a solution based on detection by projection. Lee et al. [14] defined outliers as abnormal sub-trajectories in motion capture databases. They pre-sented the TRAOD algorithm, whose idea was to partition the trajectories into small segments and then use both distance and density to detect anomalies. [17] proposed a wavelet-based solution to anomaly detec-tion in Border Gateway Protocol (BGP) data. To the best of our knowledge, no approach has been proposed based on combinatorial set-system discrepancy.
Our research can be viewed as part of work on mining frequent subgraphs in dynamic networks [4], [21]. Previous solutions have focused on examining insertions and deletions of edges over time within a fixed population of nodes. Our discrepancy-based approach can handle the insertions and deletions of nodes and edges. Also, previous works in frequent subgraph mining often have parameters such as fre-quency thresholds and length of patterns that need to be specified by a user. Our method does not require such parameters.

This section presents the overall approach followed by a detailed description of our DND algorithm and its components.
 A. Overall Approach
A general approach to the analysis of time evolving communication network is as follows: (a) consider a sequence of graphs G t =( V t ,E t ) ; (b) assign to each edge a time-varying weight W t ; (c) extract at each time t  X  X pecial subgraphs X  consisting of those edges whose weight is smaller than a  X  X uitably chosen X  thresh-old  X  . By considering the overall network as a set-system, whose communication pairs have associated choose a threshold value and rely instead on a general combinatorial upper-bound on set-system discrepancy. This bound is a function of the number of active communication pairs up to time t (see Section III-B). Those edges or vertices whose acceleration-or firing-rate-sequences deviate substantially from those of the system are flagged as special and are maintained in a union-find data structure (see Section III-B). Since edges come and go depending on the system X  X  activity, we take snapshots of the system at those times for which the overall system acceleration and firing rate are at local maxima. For particular time intervals, firing rates and accelerations are statistics intended to cap-ture bursty communication behavior at an edge, at a vertex, and at the overall system level. Capturing those time intervals on which certain subgraphs  X  X rive X  the overall system communication pattern is in our view one of the central questions in understanding time-evolving networks. Set-system discrepancy is a con-ceptual construct that enables this undertaking. Next section describes our algorithm, called Discrepancy-based Novelty Detector ( DND ). B. Algorithm Description
Our Discrepancy-based Novelty Detector (DND) Namely, a time-varying graph, on a set of vertices V , is a collection of time-stamped communication pairs ( x, y ) ,t i where x and y are elements of V and t i indicates the time-stamp when the edge ( x, y ) was active. For each edge e =( x, y ) , we let T e,t denote the set of time-stamps ( t i  X  t ) in which e is active. | T e,t the frequency of communications on edge e =( x, y ) . We denote the collection of active node-pairs up to time t by E t = { e =( x, y ): T e,t is non-empty } .
Each edge in E t has a firing rate: fr ( e, t )= | T e,t | its corresponding firing sequence is fr ( e )= fr ( e, t ) The firing rate of any subset E of E t is just the sum of the firing rates of the edges in E up to time t ; and its corresponding firing sequence will be denoted by fr ( E )= fr ( E ,t ) . The firing rate of a vertex x (up to a particular time t ) is the sum of the firing rates of its incident edges up to that time t . With these conventions, a time-varying graph is a graph sequence { G t =( V, E t ) } with a corresponding firing sequence fr ( E t ) . We will refer to fr ( E t ) as the firing rate of G .

The aforementioned mathematical framework al-lows us to formulate questions related to the  X  X ehav-ior X  of either vertices or edges in a graph sequence { G t } in terms of their associated firing rates. The over-all approach consists of comparing the firing sequence of an edge or a vertex with the firing sequence of the graph in which they reside. With this in mind, each G t can be seen as the set-system: S t = { T e,t : T e,t is a subset of a fixed ground set of time-stamps T } . Therefore, a time-varying graph becomes a special set-system; and we adapt tools from set-systems X  discrep-ancy theory [8] to study aspects of its behavior. Next, we introduce the definition of combinatorial set-system discrepancy. 1) Combinatorial Set-System Discrepancy: For the set-system S t = { T e,t : T e,t is a subset of { t 0 ,  X  X  X  ,t }} associated with a graph G t in the time-graph sequence { G t } , and any two-coloring function  X  : T  X  X  X  {  X  1 , 1 } let  X  ( T e,t )= {  X  ( t i ) for t i  X  T e,t } . This is called the discrepancy of the edge e at time t , with respect to the coloring  X  , and abusing notation we denote it by  X  ( e, t ) . The  X  discrepancy of S t is max {|  X  ( T for T e,t  X  S t } . The discrepancy of the set-system S t is the minimum over all  X  of  X  discrepancy ( S t ) . It follows from a fundamental result in combinatorial discrepancy [8] that the maximum discrepancy of any of our set-systems is less than or equal to 2 t ln(2 m t ) where t is the maximum time when any edge is active and m t is the overall number of active edges up to time t . Moreover, a random, uniform and independent coloring of { t 0 ,  X  X  X  ,t } achieves this maximum [8]. This provides us a mechanism to associate to each edge e at time t ,a  X  -weight in the following manner:  X  wgt ( e, t )= | ( |  X  ( e, t ) |  X  2  X  t  X  ln(2 m t )) | weight of an edge up to time t measures how far is its  X  value,  X  ( e, t ) , from the corresponding theoretical upper-bound on discrepancy 2  X  t  X  ln(2 m t ) , which we refer from now on as the sbp ( t ) . 2) Novel Edges: An edge e will be called i-novel if its  X  wgt ( e, t ) is i standard-deviations away from the mean of the weight distribution  X  wgt ( E t ) . Notice that edges with quite different overall  X  X ctivity X  may have close  X  -weights. When this is the case, it can be interpreted as a strong indication that their  X  X ctivity patterns X  are  X  X imilar X  with respect to  X  even though one edge may be vastly more active than the other. When the discrepancy  X  ( e, t ) is close to 0, it can be interpreted as an indication that e  X  X   X  X ctivity pattern X  may be difficult to detect. On the other hand, edges with high absolute discrepancy (i.e. with low  X  wgt ) exhibit an activity pattern different from the activity pattern of the entire system (again with respect to  X  ). 3) Choosing the Coloring Function  X  : Even though there are locally optimal derandomization methods that produce a random coloring  X  [8], we opt here for an Ascents Coloring ( A  X  ) of T that keeps track of the  X  X ecent ascents X  of the firing sequence fr ( E t ) . Namely, if pred ( t ) denotes the largest time t i smaller than t for which there exists an edge e active at time t otherwise, A  X  ( t )=  X  1 . With this coloring A  X  , the discrepancy A  X  ( e ) of an edge e at time t measures the amount of agreement or disagreement that the firing sequence of the edge e , fr ( e, t ) , has with respect to the  X  X scent X  firing sub-sequence of fr ( E t ) . Those edges whose discrepancy (with respect to this  X  X scent X  coloring A  X  ) differs  X  X ubstantially X  from the discrep-ancy of the sequence { G t } will be called  X  X ovel. X  In some contexts this may be called  X  X nomalous, X  but we refrain from using this term because what is  X  X udged anomalous X  by one coloring  X  may not be so under a different coloring. In summary, our task is to find  X  X ovel X  edges under the coloring A  X  . Next we detail our scalable procedure to compute such A  X  novel edges. 4) The DND Algorithm: Given the definitions of com-binatorial set-system discrepancy, novel edges, and the choice of coloring function  X  , we define our DND algorithm.  X  Input:  X  Output:  X  Algorithm: runtime complexity O (  X  ( m t ,n t )  X  m t ) where m t = | E n t = | V t | , and  X  ( m t ,n t ) is the classical functional inverse of Ackermann X  X  function. So, our algorithm is almost linear in the number of time-stamped edges. Its storage complexity is linear in the number of vertices: O ( k  X  n t ) [7].

This section is divided into three subsections: data sets, experimental setup, and results.
 A. Data Sets
Table I provides a summary of the communica-tion networks used in our experiments. Enron is the DOJ-released email network between Enron employees LBNL is IP traffic collected on an internal enterprise network during a busy hour on 2004.12.15 on port #3 includes scanning activities. TWEET is Twitter data B. Experimental Setup
Our approach produces metrics on graph elements (i.e., vertices, edges, subgraphs) of a time-varying net-work. Table II lists some of these metrics.

In our experiments, we analyze (a) how these metric relate to each other, (b) how they vary over time, and (c) how they can be used to detect novel discrepancies. Our experimental setup is as follows. For each time t of the system (i.e., when a graph element becomes active), we construct a graph G ( t ) and compute the metrics listed in Table II for the novel edges (as defined in Section III-B). Since the number of (active) times can be very large, our experiments only consider those times when the system acceleration is at a local maxima or minima. For brevity, we mostly report on metrics over vertices.
 C. Results
Table III summaries the various experiments re-ported here.

Figure 2 presents the pairwise (Pearson) correlation coefficients of our various metrics (as described in Table II). For each data set, an entry ( I,J ) represents the correlation coefficient for metrics I and J across all times and all vertices:
As expected, the correlation values differ across various communication networks. This is mainly due to the different types of communications (emails, blue-tooth connections, IP traffic, tweets) in our data sets. Here are some noteworthy observations:  X  Frequency and firing rate are highly correlated  X  Firing rate and  X  are highly correlated in Enron  X   X  and SumOf  X  are highly correlated in the Enron,  X  SumOf  X  and SBP vertex weight are uncorrelated  X  Acceleration  X  and SumOf Acceleration  X   X  X  are
Figure 3 depicts the scatter-plots of various metrics on our data sets. Our observations are as follows:  X   X  vs. Firing Rate : These plots show whether there
Enron Employee Emails:
RMBT Communications:  X   X  vs. SumOf  X  : These plots show whether the  X  SBP Vertex Weight vs. SumOf  X  : These plots reflect  X  Acceleration  X  vs. SumOf Acceleration  X  : These
Figure 4 shows the scatter-plots for TWEET during the system X  X  last time-stamp. Figure 4(a), depicting  X  vs. firing rate for TWEET X  X  last time-stamp, shows that most of the vertices (86.8%) disagree with the system (i.e., have  X  &lt; 0 ). When observed over time, the movement of TWEET X  X  vertices w.r.t.  X  and firing Initially, there are vertices that have high firing rates and  X  values around zero. Then there is a phase-shift, where the firing rates for these vertices suddenly decreases and other vertices start to appear. These new vertices maintain relatively lower firing rates (because they appear late in the communication stream), but they have high negative  X  values (indicating disagree-ment with the system). Figure 4(b), illustrating  X  vs. SumOf  X  for TWEET X  X  last time-stamp, depicts that only 11 . 4% of vertices have positive values for both  X  and SumOf  X  . This implies that only 11.4% of the vertices have behaviors that agree with the system. This result indicates that very few edges are active in each time-stamp. Figure 4(c) shows SBP vertex weight vs. SumOf  X  for TWEET X  X  last time-stamp. It illustrates a very regular pattern in the vertices, namely that their movements disagree with the system X  X  (which is not surprising for tweets). Figure 4(d), depicting Acceleration  X  vs. SumOf Acceleration  X  for TWEET X  X  last time-stamp, shows that there are no regular pat-terns of movement among the acceleration of vertices. Again, this is not surprising given the chaotic and heterogenous nature of communications on Twitter.
Figure 5 depicts  X  ( e, t ) and SBP ( t ) values for En-ron X  X  and RMBT X  X  edges. The black curve corresponds to the SBP-bound on edges as a function of time. It represents the theoretical maximum set-system dis-crepancy. The remaining points in the scatter plot correspond to edges that at a particular time t have a particular  X  ( e, t ) value. Our DND algorithm looks for those edges that reside i standard-deviations around the SBP ( t ) , the black curve. These edges correspond to our i-novel edges. The further from the mean (i.e., higher values of i ) tend to produce the  X  X ost X  novel edges. The same analysis holds for vertices.
Figure 6 highlights the  X  vs. firing rate scatter-plots for several Enron employees who stood out in our analysis. First, we observed that a certain set of vertices show similar patterns in their movements over the same period of time. Interestingly these vertices represent people who have close working-relationship between them, such as Linda Robertson (Enron X  X  Chief Lobbyist) and John Shelk (Enron X  X  Vice President for Governmental Affairs). Another observations is that of J. Kaminski. He had a negative  X  implying that his ac-tivity did not agree with that of the system. J. Kaminski was a Risk Management Expert at Enron, who warned Enron X  X  top executives about the impending dangers. mend the following analysis:  X  To detect agreement in communication behavior  X  To detect synchronicity in the system X  X   X  To detect phase-shifts in communication behav- X  To detect novel graph elements at time t , examine
We have introduced combinatorial set-system dis-crepancy as a useful mathematical construct that is able to isolate characteristic patterns in time-evolving (particularly, communication) networks. Our initial ex-perimentation with statistics based on firing rate and acceleration demonstrates how the corresponding dis-crepancies can be used to isolate novel patterns (such as synchronicity among communications) in a variety of data sets (Enron emails, LBNL IP traffic, Reality Mining blue-tooth connections, and Twitter tweets). Our approach can be used to build communication-pattern profiles, which can then be re-used in subse-quent analysis.

Future work includes investigating how to sample from the activity sequence of a communication net-work a time sub-sequence such that its associated discrepancy computations produce good approxima-tions to the discrepancy computations over the entire network. We hope this work entices other researchers to use combinatorial discrepancy as a principled ap-proach to advance our understanding of the evolution of large communication networks.
 This work was performed under the auspices of DyDAN (a DIMACS Center of Excellence), CCICADA (a U.S. Department of Homeland Security Center of Excellence), and the U.S. Department of Energy by Lawrence Livermore National Laboratory under con-tract No. DE-AC52-07NA27344.

