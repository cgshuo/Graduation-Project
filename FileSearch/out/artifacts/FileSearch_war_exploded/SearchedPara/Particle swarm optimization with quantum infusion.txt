 Bipul Luitel, Ganesh K. Venayagamoorthy n 1. Introduction
Traditionally, least mean square (LMS) and other algorithms have been studied for the identification of linear and static systems ( Widrow et al., 1976). But, almost all physical systems are nonlinear to certain extent and recursive in nature and hence it is more convincing to model such systems by using nonlinear models ( Panda et al., 2007 ; Krusienski and Jenkins, 2005 ). Thus, nonlinear system identification has attracted attention in the field of science and engineering. Hence these are better modeled as infinite impulse response (IIR) models as they can provide better performance than a finite impulse response (FIR) filter with the same number of coefficients ( Shynk, 1989a ). Thus the problem of nonlinear system identification can also be viewed as a problem of adaptive IIR filtering. Also, IIR models are more efficient than the FIR models for implementation as they require less parameter and hence fewer computations for the same level of performance.
However, there are few problems associated with the use of IIR models in identification of a system, such as instability of the algorithms, slow convergence and convergence to the local minimum ( Netto et al., 1995). Different learning algorithms have been used in the past for nonlinear system identification. These techniques include use of neural network ( Hongwei and Yanchun, 2005) and gradient based search techniques such as least mean square algorithm ( Shynk, 1989(a)). Unfortunately, the error surface of such recursive systems such as a multi-machine power system ( Kundur, 1993) tends to be multi-modal and hence traditional techniques of parameter approximation fail as they get trapped into local minimum and cannot attain the global minimum ( Krusienski and Jenkins, 2005 ). Various algorithms that are implemented in the adaptive IIR filtering for system identification are described in ( Netto et al., 1995).
Population based search algorithm such as genetic algorithm (GA) has also been used for the system identification. It uses a population of potential solutions encoded as chromosomes which go through genetic operations such as crossover and mutation to find the best solution ( Kristinsson and Dumont, 1992 ). But its effectiveness is affected by the convergence time (the time it takes to find the global minimum). So to eliminate such deficiencies, population based stochastic optimization techniques have been discussed in various literatures. Particle swarm optimization (PSO) is one of the most known techniques (Kennedy and Eberhart, 1995 ). Application of PSO in the system identification has been discussed in Panda et al. (2007) .In Lee et al. (2006) , a method for the identification of nonlinear system and parameter optimization of the obtained input X  X utput model has been described. The proposed method uses least squares support vector machines regression based on PSO. In another work, PSO has been used for optimizing the parameters of Elman neural network which is used for speed identification of ultrasonic motors ( Hongwei and Yanchun, 2005 ). A modified form of PSO called as the self-organizing particle swarm optimization and its application in the system identification has been discussed in Shen and Zeng (2007) . Radial basis function neural network (RBFNN) has been used for system identification in Chen et al. (2007) , where a hybrid gradient-based PSO algorithm has been used to adjust the parameters of the RBFNN.
In Liu et al. (2006) , particle swarm optimization and quantum-behaved particle swarm optimization have been used for the system identification. Use of different types of stochastic optimization techniques in adaptive IIR filters and nonlinear systems has been explained in Krusienski and Jenkins (2005) . Use of differential evolution (DE) and ant colony optimization (ACO) in IIR filter design has been presented in Karaboga (2005) and
Karaboga et al. (2004) , respectively. They also talk about the possible use of these approaches in system identification and other applications. But these algorithms have the tendency to get stuck in the local minimum when the complexity of the problem increases and in dynamic systems where time allowed for convergence is constrained. Hybrid algorithms are used to improve the performance by combining the best feature of participating individual algorithms. Differential evolution PSO (DEPSO) for digital filter design is discussed in Luitel and Venayagamoorthy (2008a) .

However, identification of systems without prior structural information is still a challenge and new algorithms and approaches are being studied. Also, identification of nonlinear time varying systems is computationally intensive and many traditional techniques fail. In this paper, PSO with quantum infusion (PSO X  X I) has been proposed to identify the pole zero parameters of an IIR system and in the identification of generator dynamics in a power system without prior structural information.
PSO X  X I has better performance and is robust in the fact that its convergence characteristics is less affected by the dimension of the problem and has more consistent convergence than other algorithms. Also, PSO X  X I converges to a much lower value than
PSO or DEPSO. In the identification of generator dynamics, PSO X  X I performs the best, whereas PSO and DEPSO cannot approximate the system transfer function every time as is seen from the standard deviation over a number of trials. The major contribu-tions of the paper are listed below:
Identification of benchmark IIR systems with full and reduced order models using PSO X  X I, which results in lower mean squared error and more consistent convergence.

Application of PSO X  X I in the identification of four generators in a two-area multimachine power system using input X  X utput data without prior structural information.

Comparison of three algorithms, PSO X  X I, PSO and DEPSO, on system identification problems. Based on lower values of mean squared error and standard deviation, PSO X  X I has shown to be the best algorithm compared to the other two for identification of IIR systems and generator dynamics in a multimachine power system.

The rest of the paper is organized as follows: In Section 2, an IIR system has been explained. The PSO X  X I algorithm is explained in Section 3. In Section 4, results of studies carried out on some benchmark problems and a practical power system problem are presented. The conclusions are presented in
Section 5. 2. An IIR system
System identification is the mathematical modeling of an unknown system by monitoring its input X  X utput data. This is achieved by varying the parameters of the developed model so that for a set of given inputs, its output match that of the system under consideration. For a plant whose behavior is not known, an adaptive system can be modeled and its parameters can be continuously adjusted using any adaptive algorithms. By the use of such adaptive algorithms, the required parameters can be obtained such that the output of the plant and the model are same for the same set of inputs, which is the goal of system identification ( Panda et al., 2007 ). Fig. 1 represents one such identification model of any arbitrary system.
 As said, most nonlinear systems are also recursive in nature.
Hence, models for real world systems are better represented as IIR systems. By doing so, the problem of system identification now becomes the problem of adaptive IIR filtering, for which different adaptive algorithms can be applied for adjusting the feed forward and feedback parameters of the recursive system. An IIR system can be represented by the transfer function:
H  X  z  X  X  b 0  X  b 1 z 1  X  b 2 z 2  X  X  b m z m 1  X  a where m and n are the number of numerator and denominator coefficients of the transfer function and a n and b m are the pole and zero parameters of the IIR filter. This can be written as difference equation of the form ( Krusienski and Jenkins, 2005 ; Karaboga, 2005 ): y  X  k  X  X  where x ( k ) and y ( k ) represent the k th input and output of the system. Also, n= 1, 2, 3, y , L and n= 0, 1, 2, y , M represent the coefficients of the IIR filter. Considering the block diagram of noise signal n ( k ). The output of the plant added with the noise gives the final system output d ( k ). On the other hand, the output of the IIR filter in the modeled system for the same input x ( k ) has an output of y 0 ( n ). The difference of the output from the actual system with that of the modeled system gives the error e ( k ). This error is used by the adaptive algorithm to adjust the parameters of the IIR filter, and thus reduce the error in a number of iterations so as to exactly identify the actual system. This has been shown in or
PSO No the following equations: d  X  k  X  X  y  X  k  X  X  n  X  k  X  X  3  X  e  X  k  X  X  d  X  k  X  y 0  X  k  X  X  4  X 
For the identification of the system, the adaptive algorithm tries to minimize the error e ( k ) by adjusting the parameters of the modeled system, which are the pole-zero coefficients in case of an
IIR system. The different kinds of algorithms that can be used for error minimization in adaptive systems are explained in Netto et al. (1995). In this paper, mean squared error (MSE) between the output of the actual system and the designed system as given by (5) has been considered as the feedback to the adaptive algorithm.
F  X  1 N
The fitness function used by the different algorithms that are illustrated in the paper is given by Fitness  X  1 1  X  F  X  6  X 
The numerator and denominator coefficients of the IIR filter are represented by D dimensions ( D=L+M ). In Karaboga (2005) ,
DE has been used for adjusting the parameters of the IIR system to reduce the MSE or to increase the fitness of the system. In this paper, PSO, DEPSO and PSO X  X I are being used. The mentioned algorithms then find the best parameters in a number of iterations by searching for the possible solutions in a D -dimensional search space. 3. Particle swarm optimization with quantum infusion
Particle swarm optimization with quantum infusion is a new approach to hybridization of PSO and QPSO. Here, the quantum principle in QPSO is used to create a new offspring. After the positions and velocities of the particles are updated using standard PSO equations, a randomly chosen particle from PSO X  X  pbest population is utilized to carry out the quantum operation (Luitel and Venayagamoorthy, 2009 ); and thus, create an offspring by mutating the gbest . The fitness of the offspring is evaluated and the offspring replaces the gbest particle of PSO only if it has a better fitness. This ensures that the fitness of the gbest particle is equal to or better than its fitness in the previous iteration. Thus, it is improved and pulled towards the best solution over iterations.
By infusing the quantum theory to the standard PSO, a new hybrid algorithm is evolved which incorporates the best features of the respective individual algorithms and thus a better fitness is achieved. In PSO X  X I, fast convergence property obtained by PSO in the first few iterations, and the convergence to a lower average error property obtained by QPSO, have been combined and hence the performance is significantly improved, as is shown in the It is described below in detail.

PSO is an evolutionary-like algorithm developed by Eberhart and Kennedy in 1995 ( delValle et al., 2008 ). It is a population based search algorithm and is inspired by the observation of natural habits of bird flocking and fish schooling. In PSO, a swarm of particles moves through a D dimensional search space. The particles in the search process are the potential solutions, which move around a defined search space with some velocity until the error is minimized or the solution is reached, which is decided by the fitness function. The particles reach to the desired solution by updating their position and velocity according to the PSO equations. In PSO, each individual is treated as a volume-less particle in the D -dimensional space, with the position and velocity of the i th particle represented as x  X  X  x i 1 ; x i 2 ; ... ; x iD  X  X  7  X  v  X  X  v i 1 ; v i 2 ; ... ; v iD  X  X  8  X  v  X  k  X  1  X  X  w v id  X  k  X  X  c 1 rand 1  X  X  X  P id x id  X  X  c 2 rand x  X  k  X  1  X  X  x id  X  k  X  X  v id  X  k  X  1  X  X  10  X 
These particles are randomly initialized over the search space with initial positions and velocities. They change their positions and velocities according to (9) and (10) where c 1 and c 2 cognitive and social acceleration constants respectively, rand and rand 2 () are two random functions uniformly distributed in the range of [0,1] and w is the inertia weight introduced to accelerate the convergence speed of PSO ( delValle et al., 2008 ). Vector
P the best fitness value) of particle i called the pbest , and vector
P the particles in the swarm and is called the gbest . x id dimensionally correct, the velocity term in (10) is taken over a unit time ( Chakraborti et al., 2007 ). PSO is illustrated in the flowchart in Fig. 3 .

Quantum behaved particle swarm optimization (QPSO) was introduced by Sun in 2004 ( Sun et al., 2004a ). According to the uncertainty principle, position and velocity of a particle in quantum world cannot be determined simultaneously. Thus QPSO differs from standard PSO mainly in the fact that exact values of x and v cannot be determined. In quantum mechanics, a particle, instead of having position and velocity, has a wavefunction given by c  X  r ; t  X  X  11  X  which has no physical meaning but its amplitude squared gives the probability measure of its position in any one dimension r at time t . The governing equation of quantum mechanics is the
Schrodinger X  X  equation given by j _ @ @ t c  X  r ; t  X  X  where H is a time-independent Hamiltonian operator given by ^
H  X  r  X  X  where _ is Planck X  X  constant, m is the mass of the particle and V is the potential energy distribution ( Mikki and Kishk, 2006 ). Based on the probability density function, a particle X  X  probability of appearing in position x can be determined. Therefore in QPSO, a delta-potential-well based probability density function has been used with center of the well at point J= ( j 1 , j 2 , y , j avoid explosion and help the particles in PSO to converge ( Sun et al., 2004b). Assuming a particle in one-dimensional space having its center of potential at J , normalized probability density function Q and distribution function D f can be obtained ( Sun et al., 2005). Let y=x j , then the form of this probability density function is given as follows and depends on the potential field the particle lies in: Q  X  y  X  X  1 L e 2 9 y 9 = L  X  14  X  D  X  y  X  X  where the parameter L is the length of the potential field which depends on the energy intensity and is called the creativity or imagination of the particle that determines its search scope ( Sun et al., 2004b). L can be evaluated as the distance between the particles X  current position and point J as follows: L  X  2 b 9 J x 9  X  16  X 
The parameter b is the only parameter of the algorithm. It is called the creativity coefficient and is responsible for the convergence speed of the particle. In QPSO, search and solution spaces are two unique spaces of different quality. So a mechanism is necessary to map the position of a particle in the search space to the solution space. This is referred to as  X  X ollapsing X  and is achieved by applying the Monte Carlo simulation. This is explained as follows ( Sun et al., 2004a ).

Let s be any random number uniformly distributed between 0 and 1/ L . For a uniform random number u in the interval [0,1], s is defined as s  X  1 L u  X  17  X 
Now, equating (14) and (17), the following relation is achieved: y  X  7 L 2 ln 1 u  X  19  X 
The position equation is given as follows: x  X  J 7 L 2 ln 1 u  X  20  X  where the particle X  X  local attractor point J has coordinates given by the following equation: J distributed random numbers.

From (16) and (19), the new position of the particle is calculated as x  X  k  X  1  X  X  J  X  k  X  7 b 9 J  X  k  X  x  X  k  X  9 ln 1 u  X  22  X  This delta-potential-well based quantum PSO is called the QDPSO in Sun et al. (2004a) . This has been improved further by defining a mainstream thought ( Sun et al., 2005 ) or the mean best position, mbest ,as mbest  X  k  X  X  1 S where S is the size of the population, D is the number of dimensions and P i is the pbest position of each particle. Now the position update equation in (22) is given as (24), where the addition or subtraction is carried out with 50% probability: x  X  k  X  1  X  X  J  X  k  X  7 b 9 mbest  X  k  X  x  X  k  X  9 ln 1 u  X  24  X 
By using (21) this can also be written as follows to show the mutation on gbest : x  X  k  X  1  X  X  a 1 P gd  X  k  X  X  a 2 P id  X  k  X  7 b 9 mbest  X  k  X  x  X  k  X  4. Case studies and results
Two different studies have been carried out for system identification. In the first study, four benchmark IIR systems between second and sixth order are considered for the case study.
These IIR systems are modeled using two different models, one having the same order as the actual system and second having less order than that of the actual system. These reduced order cases pose challenge to the optimization algorithm in that they produce multimodal error surface which has multiple minima. In all cases, as the number of coefficients decreases, the degree of freedom reduces and it becomes more difficult to identify the actual system. In the second study, identification of dynamics of four generators in a power system is considered. With pseudo-random binary signal (PRBS) input to one of the generators, the speed deviations on all of the four generators is measured. From this input X  X utput data, the transfer function of the four generators for dynamics of interest is identified using PSO, DEPSO and PSO X  X I. Identification of IIR systems using PSO X  X I is shown in the flowchart in Fig. 3 . 4.1. Study I
Each case is simulated using PSO, DEPSO ( Luitel and Venaya-gamoorthy, 2008a ) and PSO X  X I ( Luitel and Venayagamoorthy, 2008b) in MATLAB on the same computer using the following parameters. The PSO parameters used in the study are obtained by systematic study of the effect of various parameters in different case studies. The variation of the results with the parameters is, however, not a part of the results shown in this paper. The shown result is an average over 50 trials.
D =number of dimension representing the weights to be optimized
P (population size)=25 c ,c 2 (cognitive and social acceleration constants for PSO)=2 w (inertia weight)=linearly decreasing from 1.4 to 0
CR (crossover rate)=0.8 b =linearly increasing from 0.5 to 1 Number of inputs=50 Number of iterations=500 Maximum velocity=1.3 Maximum position=1.3 Number of trials=50
The coefficients are randomly initialized within the periphery of the possible solution and the maximum velocity and position are also restricted to 1.3 which is the maximum value of the actual coefficients of the plant. The output of the plant is subjected to a white Gaussian noise of 30 dB signal to noise ratio.

The transfer functions and their implementation in two different models for Cases I and II are shown in Table 1 . Case I is a second order system. The simulation results of two different models for this case are shown in Fig. 4 (a) and (b). The pole-zero plot of the coefficients obtained for this transfer function is shown in Fig. 5 . Fig. 6 (a) and (b) show the results of the third order system studied in Case 2. Fig. 7 shows the pole-zero plot of the coefficients obtained for the transfer function. Case 3 is a fourth order IIR system shown in Table 2 . The error graphs for the two different models are shown in Fig. 8 (a) and (b). The pole-zero plot for this case is shown in Fig. 9 . Table 3 shows the transfer function of the plant and its models for the sixth order system studied in
Case 4. The results are shown in Fig. 10 (a) and (b) and the pole-zero plot in Fig. 11 .

The comparison of performance of PSO, DEPSO and PSO X  X I is shown in Table 4 where minimum, average and standard deviation of the results obtained from 50 trials over 500 iterations have been presented. These results show that although PSO X  X I takes slightly more time to converge to the global minimum, it converges to a lower MSE. Moreover, the results show that PSO X  X I is fairly consistent in its performance and it deviates the least over a number of trials. The study is also carried out for full order with 50 iterations. These results for Cases I and II are shown in Fig. 12 (a) and (b) and for Cases III and IV in
Fig. 13 (a) and (b), respectively. Table 5 shows the comparison of the performance of the three algorithms in 50 iterations. These results also confirm the robustness of PSO X  X I in its ability to converge faster and to a higher fitness value. The similar results for the reduced order case are shown in Table 6 . These results also indicate the better performance of PSO X  X I over PSO and DEPSO.
Since mutation operation introduced by DE helps the DEPSO algorithm to come out of the local minima, it finds the global minimum faster, where PSO tends to get stuck. However, PSO X  X I has even better ability to overcome the local minima due to its quantum operation based mutation on the global best particle obtained from PSO. 4.2. Study II
In this study, identification of generator dynamics in a power system is carried out based on its input X  X utput data with no prior information about the structure of the system. The system is implemented using (26) where x ( k ) and y ( k ) are the input and output samples at time k. ^ Y  X  k  X  represents the output obtained by the designed system at instant k ^ This can be written into a transfer function as follows: Y  X  z  X 
X  X  z  X   X  e  X  k  X  X  y  X  k  X  ^ Y  X  k  X  X  28  X 
After filtering the input and the delayed output data, the output of the system is compared with the actual output and the
MSE between these outputs is taken as the fitness function. Using the fitness information, the algorithms continuously adjust the coefficients of the filters so as to minimize the error between the actual output of the system and the output of the designed system given by (28). In this study, four generators (G1 X  X 4) of a two-area power system ( Venayagamoorthy, 2007 ) are considered. The generator G1 is subjected to a PRBS input and speed deviation (dSpeed) of the four generators is recorded for 20 s of input data (3125 samples). The first 10 s of data is taken for identification of the system (training) and the next 10 s of data is used to verify the system output (testing). The training and testing plots for different generators are shown in Figs. 14 X 21 . In this study, the dimension of the system is 6, each dimension representing the coefficient of the transfer function.

The input PRBS signal is shown in Fig. 14 . The training and testing plot for G1 obtained using PSO, DEPSO and PSO X  X I are presented in Figs. 15 X 17 , respectively. Figs. 18 X 20 show the training and testing plots for G3 obtained using PSO, DEPSO and
PSO X  X I, respectively. Units in Figs. 15 X 20 for dspeed and time are rad/s and s respectively. The minimum and average values of fitness for the three algorithms obtained from the study are presented in Table 7 . The standard deviation of the minimum values over 50 trials is also presented in the table. The results show that
PSO X  X I is more consistent in identifying the dynamics of the system in every trial. Although PSO and DEPSO could also identify the system transfer function and predict the speed deviation, they were not able to do so in every trial. PSO and
DEPSO also suffered from the problem of identifying an out of phase system.

Although the fitness obtained by PSO X  X I is better than PSO, it has to go through more number of fitness evaluations.
Each iteration of PSO corresponds to P fitness evaluations while that of PSO X  X I corresponds to P +1 fitness evaluations. However, if more number of pbest particles is considered for quantum operation, the fitness evaluations will increase. In these studies, all of the pbest particles are considered for quantum operation and hence the number of fitness evaluations per iteration is 2 P . However, given the equal number of fitness evaluations, standard PSO does not show improvements in fitness as is shown in Fig. 21 . The figure also demonstrates how the PSO X  X I converges to a lower fitness in less number of iterations, thus showing its promises in online applications, and how the fitness of PSO does not meet that of PSO X  X I regardless of the number of fitness evaluations (proportional to the number of itera-tions).
 5. Conclusion
A hybrid particle swarm optimization with quantum infusion (PSO X  X I) algorithm for identification of IIR systems and generator dynamics in a multimachine power system has been presented in this paper. The performance of PSO X  X I is compared with that of PSO and a hybrid algorithm of PSO and differential evolution (DEPSO).
These studies performed show that swarm, evolutionary and quantum behaved algorithms can be applied in system identifica-tion and hybrid algorithms perform better by combining the best features of the participating individual algorithms. The lower values of mean squared error and standard deviation show that PSO X  X I is the best algorithm among the three for system identification. The results show that PSO X  X I converges faster and with more consistency than the other algorithms, thus showing its promise in online implementation. However, it is computationally complex due to the increased number of fitness evaluations and hence a trade-off between time complexity and fitness is necessary.
To confirm its robustness and scalability, PSO X  X I needs to be applied to many different benchmark problems and dynamical real world applications. For the authors X  future work, the algorithm will be tested on different types of applications, including online and hardware implementation, using different fitness functions.
 Acknowledgments
Funding provided by the National Science Foundation, USA under the CAREER grant ECCS #0348221 and EFRI #0836017 is gratefully acknowledged.
 References
