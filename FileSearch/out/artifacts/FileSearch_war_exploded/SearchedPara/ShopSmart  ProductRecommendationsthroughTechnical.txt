 This pap er describ es a new metho d for pro viding recom-mendations tailored to a user's preferences using text min-ing techniques and online technical speci cations of pro d-ucts. We rst learn a mo del that can predict the price of a pro duct given automatically-determined features describing technical speci cations and users' opinions. We then use this mo del to rank a list of pro ducts based on individual users' preferences about various features. On a data set collected from Amazon reviews and online technical speci cations, rankings pro duced by this mo del rank the best pro duct for a user in the 87th percen tile of pro ducts in its category , on average. Our approac h outp erforms sev eral comparison sys-tems by 21 percen tiles or more.
 I.2.1 [ Arti cial Intelligence ]: Applications and Exp ert Systems Exp erimen tation Recommendation, e-Commerce, personalization.
Online shopp ers can read user reviews, technical speci -cations, editorial reviews, and a variet y of other resources to help them shop for the best pro duct. Yet the sheer volume of the information available, as well as the technical com-plexit y of the pro ducts themselv es ( e.g. , plasma vs. LCD TV? shorter focal length or faster shutter speed? ), can cre-ate a daun ting problem for even the most intrepid shop-per. Recommender systems, including collab orativ e lter-ing techniques [2] and con ten t-based metho ds [1], address this problem by automatically pro viding recommendations to users for whic h pro duct to buy , or at least to researc h more closely . Existing approac hes fall short of shopp ers' needs, however, in cases where users have little or no trans-action histories, or where shopp ers' curren t preferences are signi can tly di eren t from their preferences when they pur-chased previous items. Since man y kinds of pro ducts pur-chased online ( e.g. TVs, digital cameras, cellphones) are rela-tively big-tic ket items, they are purc hased infrequen tly, and a shopp er's transaction history is a poor indicator of her or his curren t preferences. For other frequen t online transac-tions, suc h as DVD ren tals, recommender systems face the problem that a shopp er's preferences may change with eac h new transaction (as in, \No crime drama tonigh t; I feel like a sci-movie." ).

To address this challenge, we presen t the ShopSmar t sys-tem for making pro duct recommendations using mined user reviews, technical speci cations, and explicit shopp er's pref-erences. Speci cally , ShopSmar t addresses the follo wing key questions: 1) Is it possible to pro vide helpful recommen-dations to shopp ers in the absence of information on their transaction history? 2) How can we elicit a user's preferences without requiring the user to rank previous purc hases?
ShopSmar t pro ceeds in two steps. It rst uses a learned mo del, called a product value model to predict the intrinsic value of a pro duct to the aver age user. It then uses a shop-per's preferences to personalize the predictions and presen t a rank ed list of pro ducts in decreasing order of suitabilit y for that shopp er. We describ e the personalization step in the next section.
ShopSmart 's product value model learns from a set of automatically extracted product features. In training, we use product price as an indicator of value, since in a com-petitive market the price marks the amount a buyer and seller are willing to trade for. This works well for consumer electronics markets, where products are highly di erentiated and each shopper purchases only a small number of items, but other economic indicators can be used (such as revenue for movies) for other markets. ShopSmart uses an SVM regression model and subset-evaluation feature selection for its product value model. Experiments on a set of digital cameras, atscreen TVs, and LCD monitors showed that the product value model achieves an accuracy of over 90% for two categories, and 81% on LCD monitors.
While the product value model can provide accurate pre-dictions for a product's value to the average user, ShopS-mart 's ultimate goal is to personalize these predictions for each shopper. Its personalized value model incorporates a shopper's preferences into the predictions.

ShopSmart elicits preferences from the shopper of the form, \How much do you care about feature X ?" It stores the resulting preferences in a vector, with a value between 0 and 10 for every feature in the product category's feature set. For instance, for digital cameras, a shopper might indicate a preference level of 3 for weight and 8 for battery life if they were particularly interested in long-lasting cameras but did not care especially about how heavy the camera is. Impor-tantly, shopper's preferences are elicited at the time they are seeking a purchase, so that they re ect the shopper's current tastes and interests. In contrast, systems based on transaction histories cannot anticipate or cope with changes in shoppers' preferences.

ShopSmart 's personalized value model combines a shop-per's preferences with the product value model's predic-tions. Let V (^ x ) represent the value of a product ^ x = &lt; x ; : : : ; x n &gt; according to the product value model, and let ^ y = &lt; y 1 ; : : : ; y n &gt; represent a shopper's preferences (on a scale of 0 to 10) for each feature of a product category. The personalized value model adjusts each product's feature vec-tor ^ x according to the shopper's preferences as follows. Let ^ F = &lt; f 1 ; : : : ; f n &gt; be the adjusted set of features for a product. Each f i is given by:
The personalized value model provides recommendations to a shopper by combining preferences and product features using the above equation, and then measuring the change in predicted value according to the product value model: It uses this change in value to score each product ^ x , and then sorts them in decreasing order by these scores. The highest-scoring product is most recommended.

We tested ShopSmart 's ranking performance on a data set of automatically collected product feature vectors and a set of user preference vectors. We followed Liu et al. [3] in mining online customer reviews to automatically identify product features and the average user opinion about each Figure 1: Average percentile score for four product rec-feature ( e.g. , on average, users rated the \picture quality" of camera X as a 7 out of 10). We augmented these product features with technical features ( e.g. , physical dimensions, megapixels, screen size, etc. ) collected from online product manuals. In total, we collected 55 examples of cameras, 105 atscreen TVs, and 78 LCD monitors. We also manually collected example user preference vectors by examining a separate set of reviews for phrases like \really cared about the battery life". We adjusted user preferences up or down according to such phrases, and labeled the user preferences with the products that the user bought. In total, we col-lected 30 user preference vectors for digital cameras, 36 for TVs, and 30 for LCD monitors.

We measured the accuracy of our model by ranking prod-ucts for each preference vector according to Equation 2, and measuring how far down the list the target product ap-peared. We averaged this percentile score over all prefer-ence vectors. We compare ShopSmart against three other ranking techniques: 1) a baseline (called \Preference Based" ranking) that uses the dot product of a preference vector and a product vector as the function to rank products by; 2) the Product Value Model without any preference vector information; and 3) a collaborative ltering technique.
Figure 1 shows the performance of these four ranking tech-niques. ShopSmart signi cantly outperforms the next-best system, the Preference Weighting baseline, by an impressive 21 percentiles on average across the three product categories. It is almost always able to rank the best product near the top of the list.
