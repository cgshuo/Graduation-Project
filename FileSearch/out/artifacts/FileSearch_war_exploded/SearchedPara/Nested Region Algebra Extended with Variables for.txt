 This paper presents a framework for searching text regions with specifying annotated information in tag-annotated text by using Region Algebra. We extend the efficient algorithm for region algebra to handle both nested and crossed regions and introduce variables for attribute values to treat tag-annotations in which attributes indicate another tag regions. Our framework have been implemented in a text search en-gine 1 for MEDLINE, which is a large textbase of abstracts in medical science. Experiments in tag-annotated MEDLINE abstracts demonstrate the effectiveness of specifying anno-tations and the efficiency of our framework.
 C ategories and Subject Descriptors: H.3.3 [Information Stor-age and Retrieval]: Information Search and Retrieval G eneral Terms: Algorithms.
 K eywords: tag-annotated document search, region algebra.
Linguistic information including part-of-speech, named en-tities, and syntactic/semantic structures of sentences have been found useful in many Question Answering, Information Retrieval, and Text Mining applications. However, linguis-tic processing is usually applied on the fly to a set of texts after they are retrieved. The approach severely restricts the kind of linguistic processing that can be applied.
On the contrary, there is an emerging trend of enriching texts with different kinds of information in the form of an tag-annotation. The trend has brought on an exciting possi-bility in which sophisticated NLP techniques are applied in advance to make abstract levels of linguistic representation explicit, which are to be used to deduce more information.
For such a scenario to work on a large textbase, one must devise access methods to use linguistic information com-puted in advance, in order to narrow down the size of the text to be retrieved. Many XML databases have been de-veloped to access the XML data based on frameworks in-cluding XPath [3], and XQuery [2]. However, since these
The system is made publicly accessible at http://www-tsujii.is.s.u-tokyo.ac.jp/medie/.
 beginning/ending is nearest to the input position. Although the algorithm searches regions efficiently by skipping regions which obviously do not correspond to the result regions, this algorithm cannot be applied to our system because the nested structure exists in the linguistic annotations.
In order to resolve the difficulty that the algorithm in [4] cannot treat nested regions, we introduce  X  X epth X  which ex-press how deep a region is embedded in a nested construction for the same tag, and we develop algorithms to handle nested region efficiently. The algorithm for the containment oper-ations first searches the innermost region and searches the more appropriate region for the query by using the depth. We modified algorithms for the other operators to search only innermost regions.

We also incorporate variables into region algebra for treat-ing a relation between tag regions. The regions matching to the query containing variables are regions matching to the query in which some values are assigned to the variables. We developed efficient algorithm to search regions matching to the query containing variables. The algorithm calculates the value for each variable one by one in ascending order of the number of candidate values, and it searches regions matching the query in which the variables are substituted with the values.
We developed a text search engine for our intelligent search system designed to search sentences from MEDLINE. In our system, users can specify biomedical events by entering a subject, an object, and a verb. The system outputs sen-tences containing the  X  X ubject-verb-object X  relation.
MEDLINE is a collection of abstracts in the biomedical field. It contains about 16 million articles, a half of which have abstracts, with the other half only containing a title. We parsed all of these MEDLINE abstracts by Enju [7], and annotated the documents with the parsing results. We constructed 140GB of index lists of positions and depth, and 220GB of index for attribute-value from 335GB of tag-annotated texts. These tag-annotated texts are constructed by annotating the 10GB of raw text with the parsing result.
Table 1 show the search times for two queries in our sys-tem, eXist [6] and MonetDB/XQuery [1]. Our(Cache) de-notes that search time of our system when the data concern-ing to the query is cached on memory. We indexed 150,000 MEDLINE articles in all systems for this experiment. We converted the queries into the appropriate form, and applied
