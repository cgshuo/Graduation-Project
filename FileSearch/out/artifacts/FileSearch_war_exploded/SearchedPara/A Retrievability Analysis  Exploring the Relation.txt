 Retrievability provides an alternative way to assess an In-formation Retrieval (IR) system by measuring how easily documents can be retrieved. Retrievability can also be used to determine the level of retrieval bias a system exerts upon a collection of documents. It has been hypothesised that re-ducing the retrieval bias will lead to improved performance. To date, it has been shown that this hypothesis does not appear to hold on standard retrieval performance measures (MAP and P@10) when exploring the parameter space of a given retrieval model. However, the evidence is limited and confined to only a few models, collections and mea-sures. In this paper, we perform a comprehensive empiri-cal evaluation analysing the relationship between retrieval bias and retrieval performance using several well known re-trieval models, five large TREC test collections and ten per-formance measures (including the recently proposed PRES, Time Biased Gain (TBG) and U-Measure). For traditional relevance based measures (MAP, P@10, MRR, Recall, etc) the correlation between retrieval bias and performance is moderate. However, for TBG and U-Measure, we find that there is strong and significant negative correlations between retrieval bias and performance (i.e as bias drops, perfor-mance increases). These findings suggest that for these more sophisticated, user oriented measures the retrievability bias hypothesis tends to hold. The implication is that for these measures, systems can then be tuned using retrieval bias, without recourse to relevance judgements.
 H.3.4 [ Information Storage and Retrieval ]: Systems and Software: Performance Evaluation Theory, Experimentation Retrievability; Effectiveness; Evaluation; User Measures
Traditionally, Information Retrieval systems have been evaluated in terms of performance and efficiency [23, 28]. While performance measures seek to quantify how  X  X ood X  the system is at retrieving relevant results and efficiency measures seek to quantify how fast results can be retrieved, retrievability evaluates a third and very different aspect of IR systems: how likely a document is to be retrieved [4, 5]. As such retrievability is fundamental to IR because a docu-ment cannot be judged relevant if it is never retrieved or ever presented to a user at a sufficiently high rank. Put another way, retrievability precedes relevance [5]. In the most ex-treme case, if a document is not indexed then the document cannot be retrieved via the retrieval system [16]. However, even if the document is indexed, this does not necessarily mean that a user will be able find it. This is because the retrievability of a document depends upon a number of fac-tors: (i) the ability of the user to pose a good query, (ii) the willingness of the user to examine documents, (iii) the features of the document, (iv) the features of other docu-ments and number of similar documents, (v) the retrieval system/method/model, and (vi) how the documents are in-dexed. As a result some documents are easy to find, while others are difficult, if not impossible, to find [5]. An open question is how these factors affect retrievability and subse-quently performance.

Given the retrievability of each document in a collection it is possible to calculate the retrieval bias of the system. Intu-itively, if a system favours the retrieval of a certain type or subset of documents (e.g. retrieving longer documents over shorter documents [24]) then the retrievability of longer doc-uments will be higher and so the retrieval bias of the system will be high. On the other hand, if the retrieval bias of the system is low then it will not unduly favour one doc-ument over another due to its characteristics, giving each document a reasonably equal chance of retrieval (i.e. re-trieving based on its merits/qualities for being relevant to the queries issued). The implication here, is that such a sys-tem is likely to perform better than a biased system because, for any particular document, there is a set of queries which will return that document at a rank high enough for the user to encounter it. Whereas a highly biased system will provide many opportunities to retrieve certain documents (such as the longer documents, given the example above) but few opportunities to retrieve others, making them less likely to be found. Note that this argument assumes that all the documents in the collection have some value, and could be relevant for some information need at some point in time 1 . This argument leads to the retrievability bias hy-pothesis; reducing the retrieval bias of a system will lead to improved retrieval performance. To date the evidence for this hypothesis has been mixed and holds only under certain circumstances. While related work has shown that retrievability can be used to improve performance and ef-ficiency [7, 20, 30], the relationships between retrieval bias and performance has been shown to be complex, non-linear and measure dependent [2, 7, 9, 29].

In this paper we examine the retrieval bias hypotheses by exploring the relationship between retrieval bias and a range of performance measures. We will focus on understanding this relationship in the context of parameter estimation, i.e. how retrieval bias and retrieval performance change as the retrieval model X  X  parameters change. Consequently, if the hypotheses holds in this context, it will be possible to esti-mate the parameters of a retrieval model without recourse to relevance judgements. To this end, we perform an in-depth study investigating this relationship on four standard retrieval models, five TREC test collections and using ten retrieval performance measures. In doing so, we not only replicate the work and findings previously performed [2, 29], we do so on larger collections and on more retrieval models. The novelty of this work stems from our main contribution, where we examine this relationship against seven other mea-sures, which have not been previously tested, and include three recently proposed measures: PRES [18], Time Biased Gain [26] and U-Measure [22]. The remainder of this paper is as follows: we provide a summary of the related work for-mally defining retrievability and retrieval bias in Section 2. Then we describe the method used to explore this relation-ship in Section 3 before presenting our results in Section 4. We find that for standard relevancy based measures that a low to moderate correlation exists. This mis-match is at-tributed to the test collections used which select relevant documents that are significantly longer than other docu-ments in the collection (i.e. some length bias is therefore required) as described in both [17] and [30]. However, with Time Biased Gain and the U-Measure, we find that a strong and significant correlation exists. We attribute this to the fact that these measure account for document length within their estimations. Finally, in Section 5 we conclude with a summary of our findings and contributions along with direc-tions for future work.
In [5], Azzopardi and Vinay introduced the concept of retrievability, a measure that defined how easily adocument could be retrieved by a particular configuration of an IR system. Formally, retrievability r of a document d with respecttoanIRsystemisdefinedas: where q is a query from the very large query set Q , meaning O q is the opportunity of the query being chosen from this set. k dq is the rank at which d is retrieved given q ,and Figure 1: The Lorenz Curve shows inequality within a population. As the area B shrinks, the inequality (i.e. bias) in the population increases. f ( k dq , c ) is a utility function which denotes how retrievable the document d is for the query q given the rank cutoff c . Retrievability is then calculated by summing over all queries q in query set Q . Theoretically, Q represents the universe of all possible queries, but in practice Q is very large set of queries [2, 5, 7, 8, 30]. The standard measure of retrievability used is a cumulative based approximation, which employs an utility function f ( k dq , c ), such that if a document, d , is retrieved in the top c documents given q , then f ( k dq , c ) = 1, otherwise f ( k dq , c ) = 0. This measure provides an intuitive value for each document as it is simply the number of times that the document is retrieved in the top c documents. Documents falling outside the the top c are completely ignored, simulating a user who is only willing to pursue the first c results. Essentially, the more queries that retrieve a document, the more retrievable a document is.
To determine the retrieval bias of a system/model given the retrievability scores, a method from Economics and the Social Sciences is used. The Lorenz Curve is used to visualise the inequality within a population given their incomes [13]. This is performed by first sorting the individuals in the pop-ulation in ascending order of their wealth and then plotting a cumulative wealth distribution. If the wealth in the popu-lation is distributed equally then the cumulative distribution would be linear. The extent to which a given distribution deviates from equality is reflected by the skew in the distri-bution. The more skewed the plot, the greater the amount of inequality, or bias within the population. To summarise the inequality of such distributions the Gini coefficient is commonly used. Given the Lorenz Curve, the Gini coeffi-cient can be calculated by dividing the area marked A by the area marked A + B in Figure 1.

In [5, 29, 30], the Gini coefficient was used to measure the retrieval bias, where the retrievability scores of documents indicates the wealth of the document. If all documents were equally retrievable then the area A would be zero, and thus the Gini coefficient would be zero (denoting equality within the population, shown as the Line of Equality in Figure 1). On the other hand if only one document was retrievable and the rest were not, then the area of B would be zero, and the Gini coefficient would be one (denoting total inequality). Document Retrievability tends to follow the Lorenz Curve when r ( d ) is plotted against a bias present in a system.
Retrievability -and the theory of -has been used in nu-merous contexts. For example, retrievability has been used to study search engine bias on the web [3] and within patent collections [6], to improve the efficiency of systems when pruning [34], and it has been related to navigability when tagging information to improve how easily users browsing through the collection could find documents [25]. It is also worth noting that Retrievability is part of a family of mea-sures that approximate how easily information can be found, either from a system point of view, for example, the discov-erability [12] and crawlability [19] of content by crawlers and spiders, or from a user point of view, such as navigability [33, 34] and searchability [27].
There have been a number of works which suggest that retrievability and retrieval performance are related, and that retrievability can be used to improve both the performance and efficiency of a system [5, 7, 9, 20, 30].

In [5], the authors investigated whether documents with low retrievability could be removed from a collection without harming retrieval performance (in terms of MAP and early precision). They found that with models such as TF.IDF, which exhibited a high retrieval bias on the collection, up to 80% of the least retrievable documents could be removed without significantly reducing retrieval performance. For re-trieval models such as BM25 and Language models, where the retrieval bias they exhibit is much less than TF.IDF, only 40-50% of the least retrievable documents could be removed before a significant reduction in performance was observed. These finding suggest that retr ievability could be useful in improving the efficiency of the system by removing docu-ments unlikely to be retrieved, and thus unlikely to make a difference to retrieval performance.
 In [7], Bashir and Rauber studied the effect of Pseudo Relevance Feedback (PRF) on performance and Retrievabil-ity. They found that standard Query Expansion methods, while increasing performance, also increased the retrieval bias. They discovered that standard query expansion meth-ods were generating specific sets of terms that resulted in the system consistently preferring a particular subset of the collection. To combat the increase in bias, they devised a method of PRF that used clustering; this resulted in a re-duction in bias, as well as an increase in performance over other QE techniques. When employing their PRF technique to patent retrieval, they showed that the decrease in bias led to improved recall for prior art search [8] suggesting a direct relationship between retrieval bias and recall-oriented per-formance metrics. In [20], Pickens et al used the theory of retrievability to create reverted indexes that improved both the efficiency and performance of retrieval systems by cap-italising on knowing what terms within a document makes that document retrievable [20]. In their experiments on BM25 and PL2, they showed that the reverted index sped up pseudo relevance feedback and also significantly improved retrieval performance over competing algorithms.

Taking a different tack, in [9], Bashir and Rauber com-pared a number of retrieval models in terms of their retrieval bias as a way to rank different patent retrieval systems sub-mitted to the TREC Chemical Retrieval Track. They found that there was a strong negative correlation between the re-trieval bias and recall. Suggesting that retrieval bias could be used as a way to rank system for this task/measure. This idea was further examined by Wilkie and Azzopardi in [30] where they ranked seventeen systems according to their re-trieval bias. The authors posed the question, is fairer better? They also found a strong negative correlation between re-trieval bias and Mean Average Precision (MAP), when rank-ing systems which was consistent on several test collections. A similar study and analysis was also performed by Bashir and Rauber [10], which produced similar findings. These results suggest that the retrieval models with the least bias are actually the best performing models, providing support for the retrievability bias hypothesis. In our work, rather than looking at ranking systems as is done in [9, 10, 30], we will be focusing on exploring the parameter space of a given retrieval model. It appears that this relationship is much more complicated.

In [2], Azzopardi and Bache discuss the relationship be-tween retrieval bias and performance with respect to the definition of retrievability. The authors point out that a purely random IR system would ensure equal retrievability (resulting in Gini = 0) but this would also result in very poor retrieval performance. Thus it only makes sense to consider retrieval functions which are non-random. They further note that an over fitted retrieval model, which un-duly favours the retrieval of a known set of relevant docu-ments for a give set of queries, would be overly biased, but result in very high performance for that set of queries. They conclude that neither extreme is desirable and suggest that there is likely to be a trade-off between retrieval bias and retrieval performance. In a set of preliminary experiments they investigate whether such a trade-off exists. Using the AP and WSJ TREC test collections they found that as re-trieval bias decreased it corresponded with an increase in MAP and P@10 for BM25 and the Jelinek Mercer Smoothed Language Model. Contrary to their intuition, their findings suggested that a more useful relationships exists. However, these results were far from conclusive, and very preliminary. More recently, this study was followed up in [29], where Wilkie and Azzopardi examined the relationship between precision based measures and retrieval bias on BM25 and PL2 on a number of TREC news collection. More specifi-cally, they examined the correlation between retrieval bias and retrieval performance (MAP and P@10). Their study revealed a number of interesting observations. Firstly, the relationship between precision based measures and retrieval bias turned out to be non-linear; such that a certain amount of document length normalisation needed to be applied to maximise performance. Once this point was reached, in-creasing the amount of length normalisation meant perfor-mance would begin to degrade rapidly as bias was increased. These results suggest that retrieval bias can be used as an indicator for tuning retrieval systems but that minimising the retrieval bias does not necessarily match with maximum performance on precision based measures (P@10 and MAP). This mis-match was attributed to the fact that in the TREC collections used, relevant documents tend to be longer than the average document. And so less document length nor-malisation is required to maximise the performance for the measures used, i.e. some bias appears necessary on such collections given these measures. In [17], it was shown that the TREC pools were not representative of the collection and many longer documents appear in the pools, resulting in more long documents being considered relevant. There-fore, it may be the case that by using test collections that are more representative or measures that incorporate length in their evaluation would lead to a stronger relationships be-tween retrievability bias and retrieval performance. In this work, we go beyond prior work and examine seven mea-sures that have been previously untested, including two new measures which also include mechanisms that account for length, i.e. TBG and U-Measure. Our experiments are per-formed on a wider variety of test collections and across more retrieval models.
In this study we shall focus on answering the following research question: How do retrieval performance metrics re-late to the retrieval bias imposed by systems? We shall investigate this question in the context of estimating the parameters of a retrieval model (i.e. within model analysis as done in [5, 29], rather than a between models analysis as done in [9, 30] which is where different retrieval mod-els are ranked using retrieval bias). We shall also test the Retrievability hypothesis, which we previously stated as fol-lows: that minimising retrieval bias will lead to maximising retrieval performance. Thus, when setting the parameters of a retrieval model, we wish to determine whether it is pos-sible to arrive at an estimate which leads to good retrieval performance by tuning according to the retrieval bias. To this end, we used the following experimental set up. We used five TREC test collections in our experiments: TREC 123 (T123), Aquaint (AQ), WT10G (WT), DotGov (DG) and ClueWeb (CW) 2 . Table 1 details the topics used and the size of each collection. All collections were indexed on Lemur Indri and had stop words removed as well as be-ing Porter stemmed. Using these collections provides good coverage across a range of different sizes, document types and query sets, and includes several sizable web collections.
For the purposes of these experiments we have selected four commonly used retrieval models: Okapi BM25 [21], PL2 [1] from the Divergence From Randomness (DFR) frame-work, and Language modelling using Bayesian Smoothing (BS) [32] and Jelinek Mercer smoothing (JM)[14]). Us-ing this selection of retrieval models we hope to determine whether the relationship is generalizable across models or differs between them. Our expectation is that for the first three models will behave in a similar fashion as they all have a parameter to control for document length normalisation, while the Jelinek-Mercer Language Model may behave dif-ferently.
 Parameter Settings The parameter space explored for each retrieval model was as follows: For BM25, as there are several parameters we could explore, we chose to only alter b and keep the k and k1 parameters fixed at default settings. We used 11 parameter settings for b , between 0.0 and 1.0 increasing in steps of 0.1 (0,0.1,0.2...1.0). For PL2 we used parameter settings of c between 1 and 10 in increments of 1 (1,2,3...10) but also included 0.1 and 100. For BS we used the  X  parameter settings of 1, 10, 100, 500, 1000, 2000, 3000, 5000 and 10000. And for JM, the  X  parameter setting was varied from 0.1 to 0.9 in steps of 0.1 (0.1,0.2,0.3...0.9). These settings cover the range of values typically used for these models.
Ten performance measures were used, which we have grouped into four categories: precision based, precision-recall based, recall based and gain based.
 Precision Based Measures In this category, we considered Mean Reciprocal Rank (MRR) and Precision@10 (P@10). We also examined the relation-ship with other precision based measures (i.e. P@5, P@20, etc) though our findings were similar to those reported for P@10. P@10 was used in [2, 29] and is included to com-pare with previous work. These precision based measures, interestingly, reflect to some extent the access function used to calculate the scores. For example, the cumulative score is calculated at a cutoff of c in the function f ( k dq , P@ c .
 Precision-Recall Based Measures To consider how retrieval bias relates to measures that con-sider both precision and recall, we include Mean Average Precision (MAP) and the Binary Preference measure [11] (BPREF). Again, MAP was used in previous studies and is included for completeness as we replicate the results of the previous work. Conversely, we have included BPREF to see if dealing with incompleteness in the judgements, provides a better correlation, when compared to MAP.
 Recall Based Performance Measures The recall measures we shall examine are: Recall@1000, the number of relevant documents retrieved (REL RET), and PRES [18]. Recall was already explored in [7, 8, 9] to compare different systems. Here we include it to com-pare within the same model across it X  X  parameter space. We use REL RET to see whether there is a difference between the retrievability and the absolute recall value. We have in-cluded a new and interesting measure proposed by Magdy and Jones called PRES which is a recall based measure that is position sensitive. This means it takes into account the position of the relevant documents retrieved in the ranked list and includes a cut-off which penalises recall beyond that point in the ranked list. This essentially encodes the be-haviour that a user will look no further than c in the ranked list. The rationale for this cut-off is that it provides a worse case scenario, where if relevant material is presented after the point beyond which the user is willing to look, then they will not find/recall the document similar to the c parameter in the retrievability utility function. We set the cut-off in PRES to be 100, like our cut-off for the retrievability util-ity function. This may mean that we observe a stronger correlation between PRES and retrieval bias than the other measures.
 Gain Based Performance Measures In our experiments, we used three gain based measures, the well known and widely used Normalised Cumulative Discounted Gain at 100 (NDCG) [15], along with two recently proposed measures Time Biased gain [26] (TBG) and U-Measure [22]. No previ-ous work has examined the relationship between these mea-sures and retrieval bias, so it will be interesting to determine whether they exhibit a different relationship to the preci-sion/recall based measures. Since TBG and U-Measure are new, it is worth taking some time to explain them, along with the parameters that need to be set in order to use them.
 Time Biased Gain In [26], Time Biased Gain was pro-posed as a way to account for the time it takes to read through and process the result list and to extract relevance from it. The longer a document is the longer it takes to process the document, and so document length is accounted for within the evaluation measure. This means a long docu-ment with equal gain to a shorter document will contribute less gain overall as time is wasted reading the document.
The general form of the TBG equation where G ( t )isa gain function over time and f ( t ) is the density function is as follows:
TBG has a number of parameters that need to be esti-mated. The A parameter denotes how long it takes a user to read a word, on average. Essentially, this parameter lim-its how many documents a user can read in a specified period of time. Increasing A results in fewer documents being read as it takes longer to read a word. Decreasing A means the user can read more words and therefore, more documents. User behaviour is simulated in the other parameters, which include: P ( C | R ) the probability of clicking a relevant sum-mary, P ( S | R ) the probability of saving a relevant document, P ( C | N ) the probability of clicking a non-relevant summary, P ( S | N ) the probability of saving a non-relevant document, T s thetimetoevaluateasummary, B afixedoverheadto judge any document (relevant or not) and H , the half life at which gain degrades.

Since it is necessary to calibrate the parameters of TBG, we employed 12 annotators to judge the relevance of 20 snip-pets and the corresponding documents (if they believed they may be relevant) for 10 topics for each collection. The time spent on each action, and the success of each action was recorded so that we could estimate the required probabil-ities. Table 2 shows the average values obtained for each collection.
 U-Measure In [22], Sakai and Dou proposed a new, user based evaluation metric called U-Measure. U-Measure is designed to estimate the amount of gain a user obtains when reading through documents in the ranked list. In U-Measure, it is assumed users will read the snippet of every document in the list and will always read relevant documents and never read non-relevant documents (i.e. it assumes that P ( C | R )= 1 and Table 2: Time Biased Gain parameter settings.
 P ( C | N )= 0 ). Once a user begins to read a relevant docu-ment, they will only read a certain percentage of the docu-ment before returning to the ranked list to read through the remaining results. As a user reads further down the ranked list, the amount of gain they receive from a document decays and there is a cut-off that indicates when a user will stop reading results.

U-Measure can be configured to reflect different users by altering two parameters. The first of these parameters de-fines what portion of a relevant document the user will read. Adjusting this to a higher value means more time is spent on relevant documents and as such, less documents will be read overall. Setting this parameter to lower values means users will receive less gain per document but will be able to read more documents. The second parameter defines how far the user will read. This parameter, set on a character limit, provides the point at which the user will stop read-ing through results and close that session. Higher values mean users will read more documents and will therefore be likely to receive more gain from the session. For these exper-iments we used the parameter settings suggested by Sakai and Dou [22] where the character limit is 132000 and the percentage of a document read is 20%. These settings allow for roughly 100 documents to be read, per topic, by the user in the collections we have used.
 The general form of the U-Measure equation is as follows:
In this equation, N is a normalisation factor while pos is the offset position in tt and D ( pos ) is a decay factor based on position.

While TBG and U-Measure appear similar, some key dif-ferences affect the outcome of these measures. The main dif-ference being TBG includes probabilities for a user to read a relevant or non-relevant document, U-Measure assumes the perfect user who will always read relevant documents and never read non relevant documents. Another key difference is that TBG assumes a user will always read the entirety of any document they click on, conversely, U-Measure dictates that a user will always read a fixed percentage of the doc-uments they click. These important differences make each of these measures subtly different. However, in contrast to all the other measures described, they differ in that they account for the length of the document in the measure, and the amount of gain is proportional to how much effort/time is required to extract that gain given the ranked list. We previously mentioned in the Section 2 that it was suggested the test collections tend to house longer relevant documents, but if the user has to go spend more time in order to extract that gain, then on these measures we may observe a stronger relationship with retrieval bias.
To compute the retrieval bias, we first generated the re-trievability scores r ( d ) for each document using the method-ology used in previous work [2, 5, 29, 30, 31]. The procedure is as follows: (i) Extract all the bigrams that occurred within the collection at least 10 times. (ii) For each retrieval model and parameter setting, issue this set of bigrams as queries. For each query O q (the chance the query will be issued) is Q meaning all queries are equally likely to be issued. (iii) Given the results, computed the r ( d )with c = 100 for all documents. (iv) Repeat for each model and parameter set-ting.

On each collection we extracted between 200,000 &amp; 300,000 bigrams to use as queries. However, on ClueWeb, we had to use a reduced set because of the time it takes to run queries against a collection of that size. For ClueWeb, we used 50,000 queries. In [31], Wilkie and Azzopardi found that it was possible to estimate the retrieval bias using a smaller portion of queries, as the parameter setting where the bias was minimised was the same regardless of the num-ber of queries used.

During the course of this analysis, we issued these sets of queries on 4 retrieval models, each with around 10 parameter settings, on 5 test collections, totalling approximately 50 million queries.
 Retrievability Measures We computed the retrievability scores for cumulative scoring with a cut-off of c = 100 .For this work, we only used one cutoff as in [29] it was found that while varying c would result in different retrievability scores, the same trend across the parameter space was found i.e. the point at which retrieval bias was minimised was the same regardless of c .
To analyse the data for each parameter setting, we plot-ted the points corresponding to the retrieval performance and the retrieval bias (as surmised by the Gini coefficient, referred to as Gini). For clarity, on each of the plots, we have excluded ClueWeb as the Gini values were in a much more confined space than on the other collections 3 . However, the same trend was observed as on the collections shown.
We also calculated the Pearson X  X  correlation between each performance measure and the retrieval bias to determine if there was a linear relationship or not. Table 3 shows the correlations for each collection and each retrieval model. Stars (*) indicate whether the relationship was statistically is reduced there is a corresponding increase in TBG in most cases. significant when p&lt; 0 . 05. Note that for the retrieval bias hypothesis to hold, we would expect to see a strong negative correlation between performance and bias, such that as bias decreases, performance increases. In Figure 2, the first row shows the plots of MRR against Gini on each collection for each retrieval model. We see similar trends between BM25 and BS when evaluating per-formance with MRR. The predominate trend on these two plots is that there often positive correlations between bias and MRR. However, these findings do tell us that to max-imise MRR in these cases, bias is actually necessary. It is clear in these plots that the point of minimum Gini does not correspond to the point of best performance. The cor-relations for PL2, BM25 and BS are moderate to high while JM achieves very high negative correlations (except on AQ). When examining the JM plots we see that there is a clear negative correlation and that lowering bias increases perfor-mance but on AQ the line is almost vertical suggesting that lowering bias has no impact on performance. When bias has no impact on performance we argue that using the param-eter setting with the least bias would be advisable to allow for changes in the collection.

For P@10, we observe very similar findings to MRR. These results have been replicated from [29]. Again, we see that the JM Language Model provides strong negative correlations even for the AQ collection. However, the results are rather mixed on the other models -where we again see both positive and negative correlations. These findings, to some extent, back up the preliminary results reported in [29]. However, here we also show that positive correlations exist (something not shown/known previously). These findings suggests that the relationships with precision measures (such as MRR and P@10) is highly conditional -and may or may not hold.
With respect to MAP, we find that the correlation with retrieval bias is much the same as for P@10 and MRR. While there are a number of cases where there are strong, signifi-cant, negative correlations, there are also a number of cases where positive correlations are observed (though more often than not, not significant). The best match up was again on the JM language model for most collections. Our re-sults on BPREF, are similar to, but slightly better than on MAP. This suggests that accounting for incompleteness in the measures does lead to improved correlations with re-trieval bias. These findings re-confirm past findings that retrieval bias leads to increases in U-Measure. there is not a strong relationship between MAP/BPREF and retrieval bias.
In [9], they found there was a strong correlation between recall and retrieval bias when ranking different retrieval mod-els. In the context of estimating parameters for a particular retrieval model, we wonder if we will find a similar relation-ship. For the recall (and also REL RET, denoted as R Rin the Table) measures we observe quite a mixed relationship. Once again there are both positive and negative correlations across BM25, PL2 and BS. However, on JM there are reason-ably strong negative correlations, which are also significant on most collections. So, while the relationship tends to hold across models as shown in [9] for recall, here we show that this relationship only holds for JM.

Figure 2 presents a series of plots for PRES against Gini for each retrieval model on the second row. Again, we can see quite similar patterns between BM25, PL2 and BS for PRES where the correlations are often positive, indicating that higher levels of bias actually lead to improved perfor-mance. However, on JM there is a very strong negative correlation between PRES and Gini. It would seem that the lack of length normalisation in JM, is responsible for the differences observed between models and suggests that the type of parameter within a model may exhibit different rela-tionships with retrieval bias. This however is left for future work.
Now we turn our attention to the relationship between re-trieval bias and the gain based measures. Row 3 of Figure 2 shows the relationship between retrieval bias and NDCG. On inspection the plots here are fairly similar to those of MRR, and so too are the correlations (where we see a mix-ture of positive and negative correlations, and that for the JM Language Model there are strong significant negative correlations across all collections and four match up per-fectly). Again, it appears that a very mixed relationship exists between retrieval bias and NDCG.

Figure 3 shows the plots for TBG while Figure 4 shows the plots for U-Measure. What is quite striking about these plots is that for most of the models (BM25, PL2 and BS) there appears to be very strong negative correlations. On in-spection of the correlation values in Table 3, we can see that for TBG all correlations are moderate to high, negative, and all but three are statistically significant. Interestingly, the poorest correlations are observed on the JM model, which p for other measures showed the strongest correlations. This strengthens the suggestion that the difference between JM and the other retrieval models is the explanation for the contrasting results. For U-Measure, we can also see that all correlations are moderate to high and negative, and all but two are statistically significant.

The findings for these two recently proposed measures are in stark contrast to findings on all the other (traditional) measures. It would appear that since both TBG and the U-Measures account for document length, that a better match up is obtained. For these measures, minimising the bias tends to result in maximising the performance. The findings show that we can tune a system to perform very well in terms of U-Measure or TBG using the Gini scores achieved.
In this work, we examined the relationship between re-trieval bias and ten retrieval performance measures. We found that the relationship depends on both the type of model and the performance measures, but is fairly consis-tent across collections. For precision-recall based perfor-mance measures, we generally found that the relationship was rather mixed and not consistent with the retrieval bias hypothesis for the three models where we adjusted the doc-ument length normalisation parameter (i.e BM25, PL2 and BS). We speculate that this is because the length of rele-vant documents in these test collections tends to be longer than the average document and a bias towards longer docu-ments is required if the best performance, given these mea-sures, is to be obtained. However, we did find that on the JM Language Model, that there was a strong negative and often significant correlation between retrieval bias and the performance measures, P@10, MRR, Recall, RET REL and NDCG across all collections.

For Time Biased Gain and the U-measure, we found that for all the retrieval models tested there was a strong, nega-tive and often significant relationship between retrieval bias and their performance. This was consistent across all the collections tested. These results support the retrievability bias hypothesis for these measures. Since Time Biased Gain and U-Measure both include parameters that are dependent on length, the fact that the relevant documents in the col-lections used are longer is offset by the additional effort re-quired to process these long documents. Consequently, it would seem that by being less biased, and tuning the system such that the chance to retrieve documents is not dispropor-tionate given length results in better performance on these measures. This, of course, is the notion behind the retriev-ability bias hypothesis. Operationally, this is a very useful finding, given these models it is possible to select the param-eter settings that will give very good performance on TBG or U-Measure, without recourse to relevance judgements or usage data.

This work, however, also opens up a number of interesting directions for future work. So far the focus of research into retrievability has been on standard retrieval models. Here we have shown that the relationship between retrieval bias and performance is dependent on both models and mea-sures. Further research is warranted to explore how gener-alisable these findings are to other models across the main measures including those which handle incompleteness. Fur-thermore, it would be interesting to examine models that in-clude additional features other than terms within the model (i.e. document priors, fields, etc) or models that are derived through learning (i.e. SVM based retrieval models), and whether the relationship holds or not. In terms of the how the measures relate it would be interesting to undertake an analytical comparison between performance measures and retrievability measures to determine whether it is possible to infer performance measures from retrievability measure-ments. Also, in this work we have only considered one kind of inequality measure, i.e. the Gini Coefficient. In future work, it would be interesting to explore whether other mea-sures of inequality such as the 20/20 ratio, Theil Index or Atkinson Index, would lead to a stronger correlation with retrieval performance measures and wether using different correlation measures change the results.
 Acknowledgements: This work is supported by the EPSRC Project, Models and Measures of Findability (EP/K000330/1) and IAA Agreement/66375. [1] G. Amati and C. J. Van Rijsbergen. Probabilistic [2] L. Azzopardi and R. Bache. On the relationship [3] L. Azzopardi and C. Owens. Search engine [4] L. Azzopardi and V. Vinay. Accessibility in [5] L. Azzopardi and V. Vinay. Retrievability: An [6] R. Bache. Measuring and improving access to the [7] S. Bashir and A. Rauber. Improving retrievability of [8] S. Bashir and A. Rauber. Improving retrievability of [9] S. Bashir and A. Rauber. Transactions on large-scale [10] S. Bashir and A. Rauber. Automatic ranking of [11] C. Buckley and E. M. Voorhees. Retrieval evaluation [12] A. Dasgupta, A. Ghosh, R. Kumar, C. Olston, [13] J. L. Gastwirth. The estimation of the lorenz curve [14] D. Hiemstra. Term-specific smoothing for the language [15] K. J  X  arvelin and J. Kek  X  al  X  ainen. Cumulated gain-based [16] S. Lawrence and L. Giles. Accessibility of information [17] D. E. Losada, L. Azzopardi, and M. Baillie. Revisiting [18] W. Magdy and G. J. Jones. Pres: a score metric for [19] A. Marchetto, R. Tiella, P. Tonella, N. Alshahwan, [20] J. Pickens, M. Cooper, and G. Golovchinsky. Reverted [21] S. Robertson, H. Zaragoza, and M. Taylor. Simple [22] T. Sakai and Z. Dou. Summaries, ranked retrieval and [23] M. Sanderson. Test collection based evaluation of [24] A. Singhal, C. Buckley, and M. Mitra. Pivoted [25] A. Singla and I. Weber. Tagging and navigability. In [26] M. D. Smucker and C. L. Clarke. Time-based [27] T. Upstill, N. Craswell, and D. Hawking. Buying [28] C. J. van Rijsbergen. Information Retrieval . 1979. [29] C. Wilkie and L. Azzopardi. Relating retrievability, [30] C. Wilkie and L. Azzopardi. Best and fairest: An [31] C. Wilkie and L. Azzopardi. Efficiently estimating [32] C. Zhai and J. Lafferty. A study of smoothing [33] Y. Zhang, H. Zhu, and S. Greenwood. Web site [34] L. Zheng and I. J. Cox. Document-oriented pruning of
