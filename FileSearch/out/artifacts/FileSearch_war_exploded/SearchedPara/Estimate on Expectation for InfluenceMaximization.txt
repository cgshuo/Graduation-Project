 Information diffusion is one of the most important issues in social network anal-ysis. A problem in this field is to find a k -nodes subset S that nodes in S can influence the largest number of nodes in the whole network. This problem, re-ferred as influence maximization problem , can be applied to many areas such as product marketing and application promotion in online communities.

Domingos and Richardson [1][2] first i nvestigated the influence propagation in the area of viral marketing [3][4]. Then, Kempe et al. [5] formulated the influ-ence maximization problem. They proposed a natural greedy algorithm to solve the influence maximization problem, which provided a (1  X  1 /e )-approximation. However, their greedy algorithm was quite time-consuming to evaluate the in-fluence spread, as it needed to run random process for a large amount of times to guarantee an accurate estimate on the influence spread.

Recent researches have focused on solv ing this drawback, and several im-provements have been proposed. Lesko vec et al. put forward an optimization called Cost-Effective Lazy Forward (CELF) [6]; Kimura and Saito posed a bond-percolation based improvement [7] and a model called SPM (Shortest Path Model) [8]; Chen et al. [9] studied the influence maximization from two com-plementary directions: one was to improve the simple greedy algorithm, and the other was to design new efficient heuristics.

In this paper, we propose a novel evaluation, the expectation , to the influence spread, whose advantage is that it avoids running Monte-Carlo simulation. We formulate the expectation of influence function and its marginal gain, and give bounds to the expectation of marginal gains in theory. Then, we show that a good estimate on the expectation can be obtained by graph-based algorithms, and furthermore, a pruning technique is proposed for estimating the expectation. Based on the expectation, a new greedy algorithm, referred as GEE (Greedy Estimate-Expectation) , is put forward for the influence maximization problem. Experimental results demonstrate that GEE is well-performed in the influence spread and running time for both independent cascade (IC) model and weighted cascade (WC) model compared to the sim ple greedy algorithm with CELF op-timization (10-140 times faster in running time and only at most 2 . 4% lower in influence spread). And moreover, the running time would be even faster if we apply CELF optimization to our GEE algorithm.

The main contributions of this paper can be concluded as follows: first, we provide a novel evaluation, the expectation , to estimate the influence function, which, to the best of our knowledge, is the first time that using expectation to circumvent a large amount of computation on running random process; second, we give a theoretical explanation to t he effectiveness of SPM (Shortest Path Model) [8]; third, we put forward the first expectation-based greedy algorithm and demonstrate its effectiv eness on real-life networks. Influence Maximization Problem. We define  X  ( S ) as the number of nodes that are influenced by k -nodes set S , then the influence maximization problem is formulated as finding a subset  X  SinV,where |  X  S | = k , to maximize  X  (  X  S ). The computation of  X  ( S ) is based on information diffusion models.
 Information Diffusion Models. We discuss two information diffusion models: independent cascade model and weighted cascade model [5]. In both of them, node v is influenced by its neighbor u with a probability p u,v .InICmodel, p u,v is an independent parameter, and in WC model, p u,v is assigned to 1 /d v .
The information diffusion process for tw o models is described below [5]. First, the initiate set S is given. We call nodes in S active nodes, while nodes in V \ S inactive. Nodes can transform from active state to inactive state, but can not switch verse vice. When node u first becomes active at step t , it provides only a single chance to activate each currently inactive neighbor v with probability p u,v .If u succeeds, v will become active at step t +1, and u can not activate v any more after step t .If v has multiple active neighbors at step t ,neighbors X  activations are sequenced in an arbitrary order. The diffusion process stops when there are no more activities in the network.
 General Greedy Algorithm. Kempe et al. proposed a simple greedy algorithm to approximate the solution [5], which starts with an empty set S =  X  ,and iteratively, selects a node u for set S to maximize the marginal gain  X  s ( u )=  X  ( S  X  X  u } )  X   X  ( S ), then the algorithm stops until | S | = k .  X  ( S ) is computed by simulating the random process for R times ( R could be very large in order to guarantee efficiency). Leskovec et al. [6] proposed a CELF optimization, which can get the same result but is much faster than Kempe et al. X  X  algorithm, for its great reduction of computing  X  s ( u ). But it still costs for hours on large-scale networks. In this section, we use expectation to estimate the influence function  X  ( S )and the marginal gain  X  s ( u ), and give an approximation to the expectation of  X  s ( u ). Then we propose an algorithm called Greedy Estimate-Expectation(GEE) for the influence maximization problem. 3.1 Estimate on Expectation We denote p ( S, v ) as the propagation probability that v is influenced by Set S . Suppose the probabilities that other nodes influence node v are independent, according to information diffusion models described above, we have p ( S, v )= 1 The expectation of  X  ( S ), formulated as E (  X  ( S )), is: According to  X  s ( u )=  X  ( S  X  X  u } )  X   X  ( S ) and the above equations, we have which are reachable from u ,so:
We denote p pathi ( u, v ) as the propagation probability from u to v through R ( u, G ) } ,where  X  u,v is the number of paths from u to v .
 Theorem 1. ForICmodelandWCmodel,if p ( S, v ) is given, then:
We define k u,v as the distance(shortest path) from u to v ,andthen,forIC model with uniform propagation probability p ,wehave X  p ( u, v )= p k u,v .
If we denote t i as the number of path whose length is i from node u to node v ,theninICmodel, p ( u, v )  X  l i = k paths from u to v .
 Theorem 2. For IC model with uniform propagation probability p ,if p ( S, v ) is given, and t = max ( t k Theorem 1 gives bounds to the expectation of  X  s ( u ) for both IC model and WC model. Theorem 2 provides an upper bound that is closer to the expectation effectively. It is an amazing result that theoretically interprets why Shortest Path Model (SPM: the model where each node i s activated only through the shortest paths) [8] works well.

Theorem 1 and Theorem 2 show that the expectation of  X  s ( u )canbeesti-
According to the equation that p ( S  X  X  u } )= p ( S, v )+(1  X  p ( S, v )) p ( u, v ), p ( S  X  X  u } ,v ) can be estimated by previous p ( S, v ) in a greedy approximate algorithm. The value of p ( u, v ) can be effectively approximated by  X  p ( u, v ). For IC model, we are able to obtain  X  p ( u, v )by k u,v through Breadth-First Search (BFS) ,whichtakes O ( n ( n + m )) time. For WC model, the algorithm to get  X  p ( u, v ) is resemble to shortest-path algorithm in a weighted graph, such as the Dijkstra Algorithm .Using Fibonacci heap , the running time is O ( n ( n log n + m )).
We denote d u,max as the maximum degree of node v  X  R ( u, G ). Let z = p  X  ( d Theorem 3. For IC model with uniform propagation p ,if z&lt; 1 ,  X   X &gt; 0 ,  X  K =
Theorem 3 suggests that under the condition of z&lt; 1,  X  E (  X  s ( u )) in IC model can be approximated effectively in the case that k u,v  X  K ,whichmeans BFS for computing  X  p ( u, v ) can be terminated within K layers! We call this BFS pruned BFS . For those networks whose K are not large, pruned BFS makes progress in running time compared to original BFS that takes O ( n ( n + m )) time. 3.2 GEE Algorithm We put forward an algorithm called Greedy Estimate-Expectation(GEE) for in-fluence maximization problem. There are two phases in GEE :calculating X  p ( u, v ) and greedily obtaining the set S k .
 Algorithm 1. Greedy Estimate-Exp ectation Algorithm
The running time of the first phase depends on its implementation. As men-tioned above,  X  p ( u, v ) for all nodes ( u , v ) can be obtained by running BFS or pruned BFS with O ( n ( n + m )) time or O ( n  X  d K  X  1  X  heap with O ( n ( n log n + m )) time. We also take pruned BFS as a complement for WC model, and it performances well in our experiments.

The second phase of GEE is to get a node u for S k once at a time with the maximum  X  E (  X  s ( u )). Instead of running random process for sufficient times, Phrase Two takes O ( kn 2 ) in running time, and if we only consider K layers in BFS , the average running time could be O ( kn  X  d K  X  1  X  the CELF optimization to accelerate Phrase Two .
E (  X  ( S )), the estimate function of E (  X  ( S )), is a submodular function, which means GEE algorithm provides a (1  X  1 /e )-approximation according to the prop-erty of submodular function [10]. We employ two collaboration networks from paper-lists in sections of the e-print arXiv. The first network is from the  X  X eneral Relativity and Quantum Cosmology X  ( Gr-Qc ) section with 5242 nodes and 28980 edges 1 . The second network is from the  X  X igh Energy Physics -Theory X  ( Hep ) section with 15233 nodes and 58891 edges [9]. All experiments are implemented on a PC with Intel 2.20GHz Pentium Dual E2200 processor and 4GB memory.

Table 1 lists algorithms used in our experiments. Degree and Distance are simple heuristics used in [5]. Note that in GEE with pruned BFS , if initializing  X  =10  X  8 and using  X  d ,thenwehave K =6in Gr-Qc graph and K =5in Hep graph. To make experiment results convincing, we simulate the random process for R = 20000 times (the same as times in [9]), and then, take the average of the influence spread numbers as the influence spread results for each algorithm.

In IC model, we mainly discuss experiments with an uniform p =0 . 01. We also consider p =0 . 02. We do not report its result as its trends on influence performance and running time are similar to the situation that p =0 . 01. Influence spread. In all figures, we discuss about percentages of influence spread for the case of k = 40. Figure 1(a)(b) demonstrate the influence spread results of different algorithms with probability p =0 . 01 in IC model. Our GEE with pruned BFS and GEE with full BFS , performs quite well. They are only about 1 . 5% and 2 . 4% lower than the Greedy with CELF in the Gr-Qc graph and Hep graph respectively. And the differences between two GEE algorithms are less than 1%, which means our pruning technique works well as we expect.
Figure 1(c)(d) demonstrate the influence spread results of different algorithms in WC model. The performance of our GEE with pruned BFS and GEE with Fibonacci heap are quite close to Greedy with CELF . GEE with Fibonacci heap is only 1 . 4% and 2 . 3% lower than the Greedy with CELF in the Gr-Qc graph and Hep graph respectively. It is surprising that GEE with pruned BFS with much faster running time, outperforms GEE with Fibonacci heap for some value of k when k&lt; 40.
 Running time. Figure 2 demonstrates the running time of various algorithms. We do not list running times of Degree and Distance for their poor performances on the influence spread. Our GEE s run orders of magnitude faster compared to Greedy with CELF . Specifically, when k = 40, GEE with Fibonacci heap is 11 times and 19 times faster than Greedy with CELF in the Gr-Qc and Hep graph respectively, and GEE with full BFS is 119 times and 43 times faster than Greedy with CELF in the Gr-Qc and Hep graph respectively. GEEwithprunedBFS , for its pruning technique, impressively saves the running time for about 80 to 140 times in the Gr-Qc and Hep graph! Our GEE s show very impressive experiment results for both IC model and WC model: they further improve the running time (range from 10 times to 140 times faster when 40 nodes is selected), while almost match the influence spread of Greedy with CELF (only 1 . 4% to 2 . 4% lower).

There are other well-performed algorithms for the influence maximization problem: shortest path model(SPM) [8], bond-percolation based algorithm(BP) [7], and degree discount heuristic [9]. We do not list these experimental results for the following reasons: degree discount heuristic, although almost matches the influence spread in much faster time compared to the simple greedy algorithm, is only limited to the IC model; BP is similar to the improvement of the greedy algorithm discussed in [9], which costs as much time as the CELF optimization; SPM can only apply to IC model, and moreover, it can get the similar result as our GEE with full BFS in slower time due to the implementation of SPM. In this paper, we propose a new evaluation, the expectation , to estimate the influ-ence function and its marginal gain for the influence maximization problem. We give bounds to the expectation of  X  s ( u ), and further, theoretically interpret the effectiveness of Shortest Path Model(S PM) [8]. Then we put forward an expec-tation based algorithm called Greedy Est imate-Expectatio n(GEE). Using two collaboration networks, we experimentally demonstrate that our GEE algorithm impressively shortens the running time while maintaining the influence results that obtained by the simple greedy algorithm with the CELF optimization.
Future research will try to use the expectation to estimate the influence func-tion on other diffusion models. Another direction is to explore the internal struc-tures of networks to improve the influence spread.

