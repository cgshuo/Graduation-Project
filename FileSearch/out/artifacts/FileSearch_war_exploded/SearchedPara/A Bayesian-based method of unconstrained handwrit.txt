 ORIGINAL PAPER Nan-Xi Li  X  Lian-Wen Jin Abstract This paper presents a new Bayesian-based method of unconstrained handwritten offline Chinese text line rec-non-character in realistic handwritten text lines is jointly rec-ognized by a traditional isolated character recognizer and a character verifier, which requires just a moderate number of handwritten text lines for training. To improve its ability to distinguish between real characters and non-characters, the isolated character recognizer is negatively trained using a linear discriminant analysis (LDA)-based strategy, which employs the outputs of a traditional MQDF classifier and the LDA transform to re-compute the posterior probability of isolated character recognition. In tests with 383 text lines in HIT-MW database, the proposed method achieved the char-acter-level recognition rates of 71.37% without any language model, and 80.15% with a bi-gram language model, respec-tively. These promising results have shown the effectiveness of the proposed method for unconstrained handwritten off-line Chinese text line recognition.
 Keywords Handwritten character recognition  X  Text line recognition  X  Verification  X  Negative training  X  Linear discriminant analysis 1 Introduction Unconstrained handwritten offline Chinese text line recog-nition is currently one of the most challenging problems tions, such as automatic manuscript reading and document retrieval. The development of a method that allows for free handwriting styles that are not specific to individual writers of text lines is attractive, but resolving this problem involves recognizing a text line with high accuracy, comparable to that of human reading. One of the main challenges in achieving this goal is the proper evaluation of segmentation hypoth-eses containing non-characters. After pre-segmentation (as ble segmentation hypotheses of a text line can be represented where each node corresponds to a segmentation position in pre-segmentation, and each edge corresponds to a sample of a real character or non-character. Any path from the first node to the last node in the segmentation candidate lattice is a possible segmentation hypothesis of the text line, which may contain lots of non-characters. Since non-characters are extremely difficult to differentiate from characters, a segmen-tation hypothesis containing non-characters might be evalu-ated as the optimal choice among all possible segmentation hypotheses (as shown in Fig. 1 c), a problem that decreases the accuracy of text line recognition.

Probabilistic model based on the maximum a posteriori (MAP) criterion [ 2 ] is one of the frequently used methods 25 ]. Several probabilistic models utilized recognition scores and segmentation scores to reduce errors in text line evalua-tion [ 4 , 6 , 18 ]. And others employed both character recogniz-ers and verifiers to discriminate between real characters and evaluation robustness and computational complexity is an important concern for these probabilistic models. Although first type of probabilistic models is relatively easy in com-putation, the assumptions for calculating the segmentation scores are too empirical to robustly evaluate realistic hand-written text lines. On the other hand, in the second type of factory robustness in discriminating characters from non-characters. However, lots of verifiers might be required in a large character set (such as Chinese), which is computa-tionally prohibitive.

Another problem with most existing probabilistic mod-els is that they use traditional isolated character recognizers for recognizing both characters and non-characters, and the latter are usually mis-recognized as the former. For instance, traditional character recognition, which have not introduced non-character resistance into their models of segmentation hypothesis evaluation. This problem might be solved by the negative training of an isolated character recognizer. For dis-tance classifiers used in Chinese character recognition, the following negative training strategies have been frequently used: the k -means clustering strategy [ 8 ] and the thresholding cluster number k of the class of non-characters is often empir-son, the thresholding strategy simply discards non-characters using a pre-defined threshold whereas failed to output a pos-terior probability for the class of non-characters as k -means clustering strategy does. Both strategies own obvious draw-backs for the negative training of distance classifiers.
In this paper, a novel probabilistic model is proposed to evaluate possible segmentation hypotheses of a text line. The probabilistic model can be implemented using just two classi-fiers, an isolated character recognizer and a character verifier, in a simple way that follows Bayesian rules. In addition, a linear discriminant analysis (LDA)-based negative training strategy is applied to an isolated character recognizer. With-out any requirement of empirical parameters, this strategy is able to provide the posterior probability of non-characters in a distance classifier, which further improves the performance of the proposed probabilistic model. Experiments with the HIT-MW database [ 19 ] showed that the proposed method works well in unconstrained handwritten offline Chinese text line recognition and compares favorably with previous meth-ods tested on the same data.

The rest of this paper is organized as follows: Sect. 2 presents an overview of previous works on unconstrained handwritten offline Chinese text line recognition. Section 3 introduces a Bayesian-based probabilistic model for segmen-tation hypothesis evaluation. Section 4 discusses the LDA-based negative training strategy for distance classifiers. Sec-tion 5 describes the experimental results on unconstrained handwritten offline Chinese text line recognition, and Sect. 6 draws conclusions from the experiments. 2 Previous works In previous studies, methods used for unconstrained hand-25 ] and segmentation-free recognition [ 20 ]. In segmenta-tion-based recognition, a text line is first pre-segmented into characters or radicals. All possible segmentation hypothe-ses are then evaluated, among which the optimal hypothe-ses are regarded as the recognition candidates of the input text line. One of the main challenges in segmentation-based recognition is that a large number of non-characters are gen-erated by pre-segmentation, which severely interferes with the evaluation of possible segmentation hypotheses. Incor-rect evaluation may result in serious errors in the final text line recognition, as shown in Fig. 1 c.

In contrast, segmentation-free recognition requires no explicit segmentation of a text line. Instead, a whole text line is modeled using mathematical tools such as hidden Markov models (HMMs), and the recognition candidates of the text line are given by finding the optimal matches of the model. Because precise modeling requires a large number of training samples of realistic handwritten text lines, segmentation-free recognition tends to suffer from the problem of data sparse-ness [ 20 ], especially for a large character set such as Chinese recognition performance.
 In previous studies of unconstrained handwritten offline Chinese text line recognition, segmentation-based recog-nition approaches have been found to perform much bet-ter than segmentation-free recognition methods [ 20 , 21 ]. In the two most recent studies using data from the HIT-MW database, character-level recognition rates were 44.22% for segmentation-free recognition [ 20 ] and 57.60% for seg-mentation-based recognition [ 21 ], without using a language model. A study using the segmentation-based recognition method reported that higher recognition rates of 77.18 and 78.44% were achieved using a bi-gram language model and a tri-gram language model, respectively [ 21 ]. The proposed method also adopts the general framework of segmentation-based recognition methods, as illustrated in Fig. 2 . In the next sections, we will focus on the segmentation hypothesis eval-uation module and introduce a Bayesian-based probabilistic model. 3 The proposed probabilistic model In segmentation-based text line recognition methods, the optimal recognition candidate C  X  of a handwritten text line can be evaluated as follows according to MAP [ 2 ] criterion: C  X  = arg max where E is a sequence of characters or radicals produced by text line pre-segmentation, C is a possible recognition candi-of C given E . For the probability P ( C | E ) on the right hand side of ( 1 ), we introduce two hidden variables S and V , where S is the segmentation hypothesis that can be interpreted as C , and V is a binary sequence denoting the validity of each seg-ment in S . As illustrated in Fig. 3 , these sequences E , and V can be unfolded as follows:  X   X   X   X   X   X   X  E ={ e 1 , e 2 ,..., e M } S ={ s 1 , s 2 ,..., s K } C ={ c 1 , c 2 ,..., c K }
V ={ v 1 ,v 2 ,...,v K } where e i ( i = 1 , 2 ,..., M ) is a character or radical, s 1 , 2 ,..., K ) is a text line segment combined by several neigh-boring e j ( j = 1 , 2 ,..., M ), c i ( i = 1 , 2 ,..., K acter recognition candidate of s i , and v i ( i = 1 , 2 ,..., a binary value denoting the validity of s i (v i = 1 means that s is a character or otherwise a non-character).

In interpreting a segmentation hypothesis of a text line, we may notice the presence of invalid segments (non-characters, e.g., s 4 and s 26 in Fig. 3 ) which should not be recognized as any real character. However, since a traditional isolated char-acter recognizer always recognize a non-character as a real apply traditional isolated character recognition to recognize each segment s i ( i = 1 , 2 ,..., K ) in a segmentation hypoth-esis. To solve this problem, we employ a validity constraint described by a binary value v i  X  X  0 , 1 } for recognizing each segment s i . Thus, for any possible segmentation hypothesis S given E , and for any possible binary sequence V given be rewritten as follows: P ( C | E ) = where S is the segmentation hypothesis coupled with the interpretation sequence C , and V 0 ={ v 1 = 1 ,v 2 = 1 ,..., v s ( i = 1 , 2 ,..., K ) in the segmentation hypothesis S is a real character, so that the joint probability P ( C , S , dominant over any other probability P ( C , S , V | E )(  X  S , V = V 0 ) .
 of ( 3 ) can be unfolded as P ( C | S , V 0 , E ) = where k i ( i = 1 , 2 ,..., K ) is the number of characters or radicals contained in the segment s i , and s _norm i is the nor-malized segment s i used for isolated character recognition. The third equal mark of ( 4 ) comes from the assumption that pendent of the procedure of isolated character recognition, which meets
P ( s i | c 1 , c 2 ,..., c i ,v i = 1 ) = P ( s i | c i ,v
P ( s i | c 1 , c 2 ,..., c i  X  1 ,v i = 1 ) = P ( s i | v And the fourth equal mark of ( 4 ) is based on the following approximation:  X   X   X 
P ( c i | c 1 , c 2 ,..., c i  X  1 )  X  P ( c i | c i  X  n +
P ( c i | s i ,v i = 1 ) = P ( c i | e i 1 , e i 2 ,..., e the linguistic contexts of character c i using its previous n characters. And the second line in ( 6 ) approximates the procedure of recognizing k i neighboring characters or radi-cals e i i , e i 2 ,..., e i k the power index k i empirically compensates for the k i parts of patterns in e i i , e i 2 ,..., e i k
The second probability P ( V 0 | S , E ) on the right hand side of ( 3 ) can be unfolded as P ( V 0 | S , E ) = The second line in ( 7 ) is based on the assumption that the s itself and its two nearest neighbors s i  X  1 , s i + 1 .
And the third probability P ( S | E ) on the right hand cussed in the subsequential subsections, the probability P ( be calculated by isolated character recognition and character verification, respectively. 3.1 Isolated character recognition In Chinese character recognition, the classifier with the form of modified quadratic discriminant functions (MQDF) [ 11 , 15 ] has shown state-of-the-art recognition accuracy. Since a traditional MQDF classifier is trained and tested both on real characters, the normalized segment s _norm i 1 , 2 ,..., K ) fed into the classifier is implicitly treated as a real character. The posterior probability P ( c i | s _norm 1 ) of a traditional MQDF classifier can be obtained as fol-lows: P ( c i | s _norm i ,v i = 1 ) = where N is the number of character classes in the MQDF classifier, P ( c j )( j = 1 , 2 ,..., N ) is the prior probability assumed to follow a uniform distribution, and p ( s _norm i | c i ,v i = 1 ) is the conditional probability density of the normalized segment s _norm i given class c i . When p ( s _norm i | c i ,v i = 1 ) is under Gaussian distribution, it can be computed as p ( s _norm i | c i ,v i = 1 )  X  exp (  X  d ( s _norm i ; c i ,v where d ( s _norm i ; c i ,v i = 1 ) is the output of class c the normalized segment s _norm i in the MQDF classifier, and  X  is a positive constant to tune d ( s _norm i ; c i ,v i = reasonable scale to avoid the zero value after taking negative exponential function. Empirically, we choose the maximal integer l that satisfies  X  = 2 l and the following constraints: exp (  X  d ( s _norm i ; c cand_10 i ,v i = 1 )/ X )  X  10  X  10
P ( c cand_1 i | s _norm i ,v i = 1 )  X  0 . 5 of the normalized segment s _norm i , d ( s _norm i ; c v = 1 ) is the output of the top 10th recognition candidate of s _norm i in the classifier, and P ( c cand_1 i | s _norm is the posterior probability of the topmost recognition can-didate of s _norm i calculated by ( 8 ). By observations on a constant  X  is set as 512. 3.2 Character verification The process of verifying each segment s i ( i = 1 , 2 ,..., can be performed using another MQDF classifier, which includes the following five classes:  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X  And the feature vector fed into this MQDF classifier is defined as f = where w is the average width of all characters or radi-cals generated from text line pre-segmentation, w i is the width of the i th segment s i , h i is the height of s i , the horizontal gravity distance between segments s i  X  1 and s , d s v set of handwritten text lines, we notice that the probability density of each dimension of f i almost renders a single peak in each class defined in ( 11 ), which is suitable for an MQDF classifier, as illustrated in Fig. 4 .
 ification can then be transformed to the posterior probability of a five-class MQDF classifier according to the following:
P (v i = 1 | s i  X  1 , s i , s i + 1 ) where  X  s i is the class defined in ( 11 ) that segment s most probably belongs to, so that the joint probability P (v probability P (v i = 1 , s i  X   X  j | s i  X  1 , s i , s i + acters or radicals composing the segment s i , and the pos-The third equal mark in ( 13 ) is based on the assumption that a valid segment just comes from Chinese characters, digits, mates the probability P ( s i  X   X  s i | s i  X  1 , s i , posterior probability of a five-class MQDF classifier, where the power index k i empirically compensates for the k i parts 3.3 The implementation of the probabilistic model constant term P ( S | E ) , the proposed probabilistic model for handwritten text line recognition can be rewritten as follows: log P ( C | E )  X  ter recognition candidate c i belongs to, f i is the feature radicals (generated by pre-segmentation) composing the segment s i , the probability P ( c i | s _norm i ,v i = probability of a five-class MQDF classifier calculated sim-ilar to ( 8 ), the probabilities P ( c i | c i  X  n + 1 , c and P ( c i ) can be given by an n -gram language model (note that in our experiments the prior probability P ( c empirically regarded to follow a uniform distribution, thus the second term in ( 14 ) became a constant M  X  log P which can be omitted in path searching process, where M is the total number of segments produced from text line pre-segmentation).

The implementation of the above probabilistic model is illustrated in Fig. 5 . Given a possible segmentation hypoth-1 , 2 ,..., K ) is recognized by an MQDF classifier for iso-lated character recognition. Another MQDF classifier is then employed to verify the segment s i . Both of the two classifi-ers jointly decide on the posterior probability of recognizing segment s i no matter it is a real character or a non-character. When considering the n -gram language model, the segmen-tation hypothesis can be evaluated by simple summation or indicated in ( 14 ). 4 LDA-based negative training for isolated character recognition In the proposed probabilistic model described in ( 14 ), the fourth dimension of feature vector f i defined in ( 12 )for character verification comes from the posterior probability of isolated character recognition. However, a traditional iso-lated character recognizer cannot correctly recognize non-characters, so that the above posterior probability may not be accurate at presence of non-characters in isolated char-acter recognition. To solve this problem, we propose an LDA-based negative training strategy for isolated character recognition, which is discussed in the context of an MQDF classifiers.
 In the negative training of distance classifiers (such as an MQDF classifier), a class of non-characters can be added to the original N classes of real characters, modifying the pos-terior probabilities of the total N + 1 classes. According to the following property of a joint probability: P ( AB ) = P ( B | A )  X  P ( A ) = P ( A ), if P ( B | A ) = the posterior probability of the MQDF classifier, which includes a class of non-characters, can be calculated as P ( X  where s is the segment fed into the MQDF classifier,  X  ( i = 1 , 2 ,..., N + 1 ) is the i th class in the MQDF clas-sifier, pos = N i = 1  X  i represents the class of real charac-ters, neg =  X  N + 1 represents the class of non-characters, P ( X  in a traditional MQDF classifier calculated by ( 8 ), P ( is the posterior probability that segment s is a real character, and P ( neg | s ) is the posterior probability that segment s is a non-character. The last two probabilities, P ( pos | s ) P (  X   X   X   X   X   X   X   X   X   X   X   X   X  where P ( pos ) and P ( neg ) are the prior probabilities assumed to follow a uniform distribution, p s ( s | pos p ( s | ment s in class pos and class neg , respectively. To calculate the above two conditional probability densities, we assume that the output of each class in a traditional MQDF classifier contains relevant information on revealing the validity of the input segment s , as indicated in previous methods of charac-ter recognition and verification [ 5 , 7 , 14 ]. Then, we have  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X  where f N =[ d ( c cand_1 ; s , pos ), d ( c cand_2 ; s , d ( d ( recognition candidate c cand_ i in a traditional MQDF classifier given segment s , and t = W T lda f N is the scalar generated by LDA transform of vector f N , where W lda is the LDA trans-form matrix defined as [ 2 ] ( i = 0isclass ( 16 )), S w is the within-class matrix, M i ( i = 1 , 2 ) ber of samples in the i th class, x j i ( i = 1 , 2 , j = is the feature vector of the j th sample in the i th class.
By observations on a set of training text lines, the probabil-ity density of scalar t in either class pos or neg , p ( t eters on the right hand side of ( 18 ),  X  pos , X  pos , X  neg can be determined using maximum likelihood estimation [ 2 ] after manually labeling whether the segment s is a real char-acter or non-character in training phase.

In summary, the process of the LDA-based negative train-Firstly, a traditional MQDF classifier is employed to recog-nize the segment s , whose outputs form an N -dimensional vector f N define in ( 18 ). LDA is then applied to transforming ing the means and variances of the scalar t in two classes, pos and neg , respectively, the probabilities P P ( posterior probability P ( X  i | s )( i = 1 , 2 ,..., N + 1 MQDF classifier, which includes a class of non-characters, can be output directly for negative samples or indirectly for positive samples using simple multiplication, as indicated in ( 16 ). It is worthwhile to mention that we processed this posterior probability as follows before applying it to the third term of ( 14 ): we considered only the classes of real characters in top L ( L = 1 , 2 ,...) recognition candidates by excluding any class of non-characters and putting forward its subse-quent classes of real characters. This did not conflict with our understanding of isolated character recognition, because the much lower posterior probabilities of the classes subse-quent to a non-character class also indicated the more reli-able interpretation of a sample as a non-character. Then, the classes were restricted to real characters as if the segment s was of a real character. 5 Experimental results 5.1 Experimental setup The experiments consisted of two parts: one was for the LDA-based negative training strategy and the other was for the proposed probabilistic model of handwritten text line rec-ognition. For the experiments on isolated character recogni-tion, the following datasets were employed as training data: 105 sets of Chinese characters from the HCL2000 database from the SCUT-IRAC database [ 9 ], 295 sets of characters including Chinese characters, digits, and punctuation marks from the CASIA-HWDB1.1 database [ 16 ] (Chinese charac-GB2312-80, digits included the 10 classes from integer 0 X 9, and punctuation marks included 14 frequently used classes suchas!%():;?,`  X   X  X  ). The miscellaneous training samples from different databases may improve the generality of the MQDF classifier. The testing data for isolated charac-ter recognition consisted of the characters labeled in the 383 text lines in the test set of HIT-MW database [ 19 ], including 7,401 samples of Chinese characters (in total 1,319 classes), 226 samples of digits (in total 10 classes), and 806 samples of punctuation marks (in total 24 classes). For handwritten text line recognition, we adopted the randomly selected 100 text lines in the train set of HIT-MW database as training data, and the whole 383 text lines in the test set of HIT-MW database as testing data, respectively. And the experimental platform was a PC with a dual-core 2.66 GHz CPU and 4 G of memory. All the experiments were implemented using VC++2008 except for the module of pre-segmentation which was firstly written using Matlab2008 and then was invoked in a VC++2008 project.

For pre-segmentation of a text line, we adopted the algo-rithm proposed in [ 12 ] to generate curved segmentation paths, which sequentially deals with naturally separated characters, overlapped characters, and touched characters in unconstrained handwritten offline Chinese text lines.
For an n -gram language model, we adopted the same bi-gram language model used in [ 21 ], which is trained on a Chi-nese corpus from the Chinese Linguistic Data Consortium (CLDC) and modified with Katz smoothing and entropy-based pruning. The top ten recognition candidates in isolated character recognition were preserved when using the bi-gram language model.

For searching for the optimal recognition candidate of a path searching. As the proposed probabilistic model in ( 14 ) needed to consider both the previous neighbor s i  X  1 and the next neighbors s i + 1 of the current segment s i , we assumed that the search direction from segment index i = 1to i = K was forward direction, and that the last segment on the pre-viously selected partial path adjacent to s i was its previous neighbor s i  X  1 , and that the character or radical generated by pre-segmentation next to s i was its next neighbor s i + 1 feature vector for character verification defined in ( 12 )sim-ply measured the horizontal gravity distance between s i and its neighboring segment, the above assumption worked sat-isfactorily in path searching given the proposed probabilistic model. Furthermore, to accelerate the searching process, we adopted a two-stage searching strategy: firstly, without any language model, the above beam search algorithm was per-formed to seek for the top ten paths of a text line given ( 14 ) preserving only the last two terms, where for isolated char-acter recognition, only the topmost candidate character was preserved to limit the searching space. Then at the second an unrecognized segmentation configuration of the text line which needed to be re-evaluated given ( 14 ). With a bi-gram language model, the best recognition candidate of a segmen-tation configuration was found using Viterbi algorithm [ 17 ], where for isolated character recognition, the top ten candi-date characters were preserved. Finally, the searching results of these ten paths were re-ranked, in order to get the optimal segmentation hypothesis and the corresponding interpreta-tion of the input text line.

For training an isolated character recognizer, maximum likelihood estimation [ 2 ] was employed to determine the parameters of the classifier. Each input segment was firstly resized to 64  X  64 using linear normalization and then divided to 8  X  8 meshes by local elastic meshing [ 10 ]. At the center of each mesh, 8-directional gradient features [ 1 ] were extracted. An LDA transform was then applied to reducing the original 512-dimensional feature vector to a 160-dimensional feature vector, and the latter was fed into the recognizer.
For training the character verifier defined in ( 13 ), the sam-ples of each class were collected from realistic handwritten text lines as follows: given a segmentation candidate lattice (see Fig. 8 b) constructed form text line pre-segmentation, and the ground-truth segmentation positions of a text line (see Fig. 8 a), we marked at each segmentation position a cor-rect sign if a corresponding node existed in the segmentation candidate lattice, or a missing sign otherwise (see Fig. 8 c). For each edge in the segmentation candidate lattice, it was marked correct signs and meanwhile excluding any middle node marked with correct or missing sign. Otherwise, it is regarded as a non-character. The class label  X  j ( j = 0 , defined in ( 11 )) of a real character was assigned according to the ground-truth content of the text line (known before-hand), whereas  X  j ( j = 3 , 4 ) of a non-character was assigned according to whether the edge contained any middle node marked with a correct or missing sign. In the 100 text lines for training as mentioned above, we collected 1,832 samples of Chinese characters, 49 samples of digits, 201 samples of punctuations, 3,229 samples of over-segmented characters and 7,328 samples of under-segmented characters. With the MQDF classifier for character verification can be determined using maximum likelihood estimation [ 2 ]. 5.2 Results of LDA-based negative training We trained an MQDF classifier using the LDA-based neg-ative training strategy. The real characters for training the the 10,557 non-character samples (3,229 samples of over-segmented characters and 7,328 samples of under-segmented characters) collected from the 100 training text lines as described at the end of Sect. 5.1 . The MQDF classifier was then tested both on character level and text line level using the 383 text lines as detailed in Sect. 5.1 , to show its perfor-mance on distinguishing between real characters and non-characters.

For comparison, we also trained and tested the MQDF classifier with two different negative training strategies: k -means clustering [ 8 ] and thresholding [ 13 ], on the same data. In k -means clustering strategy, the probability density of non-character samples was jointly approximated using k different Gaussian functions, where k was an empirical value set by observations of non-characters. In experiments, training procedure would be needed for the MQDF classifier whenever the cluster number k changed, even if the training samples of both real characters and non-characters remained unchanged. This added the computational burden to select-input sample was treated as a non-character and rejected if its output of the topmost recognition candidate in a tradi-exceeded a threshold. In experiments, we determined the threshold T as follows: by observations of the probability ters or non-characters, we assumed that the intersection point of the two probability density curves was the threshold T ,as illustrated in Fig. 9 .

Two groups of experiments were conducted to compare these different negative training strategies: one was on the level of isolated character recognition and the other was of isolated character recognition, the testing data were the labeled characters in the 383 text lines of HIT-MW dataset, as described at the beginning of Sect. 5.1 . For the reasons characters in the top L ( L = 1 , 2 ,...) recognition candidates of isolated character recognition, by excluding any class of non-characters and putting forward its subsequent classes of real characters. On the other hand, in the experiments of text line recognition, we used the 383 text lines in test set of HIT-MW dataset as testing data, as described at the beginning of Sect. 5.1 . To evaluate possible segmentation hypotheses of a text line, we just preserved the third term in Eq. ( 14 ) (
P ( C | E ) = K the correctness of isolated character recognition decided on the accuracy of text line recognition. The measurements of the accuracy of text line recognition, correct recognition rate CR and segmentation measure F , were defined as follows:  X   X   X   X   X   X   X   X   X  CR = NC c / NT c F = 2 /( R  X  1 + P  X  1 ) R = NC s / NT s
P = NC s / NA s where NC c is the number of correctly recognized charac-NT c is the number of characters in text lines, R is correct segmentation rate, P is valid segmentation rate, NC s is the number of correct segmentation positions in the optimal seg-mentation hypotheses of text lines, NA s is the number of all segmentation positions in the optimal segmentation hypoth-eses of text lines, and NT s is the number of ground-truth segmentation positions in text lines. It is worth to note that the number of the correctly recognized characters in a text line was counted as follows: for each character in the optimal segmentation hypothesis of a text line, it might be aligned to a ground-truth character provided: (i) its image overlapped with the ground-truth position of this ground-truth character and (ii) this ground-truth character has not been aligned to any correctly recognized character in the optimal segmentation aligned ground-truth characters of the currently visited char-acter. If the label of currently checked ground-truth character was the same as of the currently visited character, then the latter was treated to be correctly recognized and meanwhile be aligned to the former, so that we can stop this checking process. Otherwise, if none of these possibly aligned ground-truth characters had the same label as the currently visited character, the latter was regarded to be wrongly recognized. We repeated the above process from the beginning to the end of the text line until every character in the optimal segmen-tation hypothesis had been visited. The results of the above two groups of experiments were listed in Table 1 and Table 2 , respectively.
From Table 1 , we can see that the thresholding strategy achieved the lowest accuracies in isolated character recog-nition, since the real character mis-recognized as a non-character was directly rejected, which may sharply reduce the number of correctly recognized characters. The character recognition rates of k -means clustering strategy slightly fluc-tuated around those of a traditional MQDF classifier, since the addition of k clusters of non-characters to a traditional MQDF classifier has changed the covariances of each class in the original classifier even if the training samples of real characters remained unchanged. The proposed LDA-based negative training strategy kept the same character recogni-tion rates as in a traditional MQDF classifier. This is because the proposed strategy didn X  X  need to change the parameters (such as mean, co-variance) of each real character class in a traditional MQDF classifier, and then kept unchanged the order and labels of the recognition candidates of real charac-ters in the classifier. By excluding any class of non-charac-ters from the top L ( L = 1 , 2 ,...) recognition candidates (as described at the end of Sect. 4 ), the remaining recognition candidates in a negatively trained classifier were the same as in a traditional classifier.

From Table 2 , we can see that the negative training strat-recognition, except for the thresholding strategy. This was because thresholding strategy simply rejected an input sam-negative errors in character rejection may lead to lower recog-nition accuracy. The proposed LDA-based negative training strategy performed best among the three negative training strategies in text line recognition. It achieved a higher recog-nition rate (64.27%) than k -means clustering did (61.68%) by 2.41%, which suggested that the proposed strategy of poster-ior probability estimation was more suitable than the empir-ical approximation by using k different Gaussian functions, as in k -means clustering strategy. 5.3 Results of Bayesian-based probabilistic model We applied the proposed probabilistic model in ( 14 ) to uncon-strained handwritten offline Chinese text line recognition, with the 383 text lines for testing as detailed in Sect. 5.1 . Two groups of experiments were conducted to test the per-formance of the proposed model on text line recognition: one was the proposed model under different conditions and the other was the comparison of the proposed model with other two models listed below [ 4 , 21 ]: log P ( C | E )  X  and log P ( C | E )  X  probability of the normalized segment s _norm i given class c in an isolated character recognizer, the value f ( j 1 , 2 ,..., K , j = 1 , 2 , 3 ) was the j th dimension of the geometrical features of segment s i , the joint probability P using a group of Gaussian functions [ 4 ], and other variables werethesameasin( 14 ). The Eq. ( 21 ) came from the model which employed the segment duration weighting and the class conditional probability of character recognition [ 21 ]. For more reasonable comparison with the proposed method, it discarded the two empirical weights that were used to bal-ance the effects of isolated character recognition and the bi-gram language model. The Eq. ( 22 ) came form the model using empirical segmentation layout estimation for charac-ter verification [ 4 ], which was modified to be the same as experiments, we implemented ( 21 ) and ( 22 ) using the same text line recognition system as for ( 14 ) by substituting the corresponding segmentation hypothesis evaluation criterion.
The results of the first group of the above experiments were listed in Table 3 , with the following four different con-ditions: Cond.1: Segmentation hypothesis evaluation using isolated Cond.2: Segmentation hypothesis evaluation using isolated Cond.3: Segmentation hypothesis evaluation using isolated Cond.4: Segmentation hypothesis evaluation using isolated
From Table 3 , we can see that compared to just using the posterior probability of a traditional MQDF classifier (Cond.1) for segmentation hypothesis evaluation, the assis-tance with either the LDA-based negative training (Cond.2) improve the accuracy of text line recognition. With the LDA-based negative training strategy, the correct recogni-tion rates were increased by 11.76% (from 52.51 to 64.27%) and 13.76% (from 59.26 to 73.02%) without and with a bi-gram language model, respectively. Again it showed the effect of the proposed LDA-based negative training in resist-ing against non-characters. On the other hand, with the five-class MQDF classifier for character verification, the correct recognition rates were increased by 12.89% (from 52.51 to 65.40%) and 14.46% (from 59.26 to 73.72%) without and with a bi-gram language model, respectively. It implies that the features selected for character verification and the assumptions on their distributions in the five classes were reasonable. It X  X  worth noticing that when using the LDA-based negative training and the character verification simul-taneously (Cond.4), the correct recognition rates were further increased, reaching 71.37 and 80.15% without and with a bi-gram language model, respectively. This is mainly because the LDA-based negative training of an MQDF classifier has improved the accuracy of the posterior probability of the clas-sifier, which rendered both the character recognition and the proper for segmentation hypothesis evaluation.

The results of the second group of the experiments were (modified from Ref. [ 4 ]) for segmentation hypothesis evalu-ation, the method 2 employed ( 21 ) (modified from Ref. [ 21 ]) for segmentation hypothesis evaluation, and the proposed method adopted ( 14 ) for segmentation hypothesis evaluation.
From Table 4 , we can see that the proposed method achieved the best performance among the three methods. Compared to method 1, the proposed method improved the correct recognition rates by 8.96% (from 62.41 to 71.37%) and 11.08% (from 69.07 to 80.15%) without and with a bi-gram language model, respectively. Since the method 1 dif-fers from the proposed method only in the ways of char-acter verification [the last terms in ( 22 ) and ( 14 )], we may ification in the proposed method can perform better than the empirical segmentation layout evaluation for character verification in method 1. On the other hand, compared to method 2, the proposed method increased the correct rec-ognition rates by 6.28% (from 65.09 to 71.37%) and 4.70% (from 75.45 to 80.15%) without and with a bi-gram language model, respectively. This suggests that the posterior proba-bilities of a negatively trained MQDF classifier along with the posterior probabilities of a five-class classifier can per-form better than just using the class conditional probability densities of a traditional MQDF classifier for segmentation hypothesis evaluation. It is worth to note that compared to the posterior probabilities, the class conditional probability den-sities of an MQDF classifier were much less affected by non-character class, since the calculation of the former depended on all the classes in an MQDF classifier [see the summation was independent for each class in the classifier. Specifically, when using the proposed LDA-based negative training strat-egy, the class conditional probability densities of an MQDF classifier can be calculated as p ( s |  X  i ) = P ( X  i p ( s |  X  i , pos ), if i = 1 , 2 ,..., N p ( s | neg ), if i = N + 1 P ( X  tional probability of a traditional MQDF classifier, and the probability P ( s | neg ) can be calculated according to ( 18 ). The right hand side of the second equal mark implied that the proposed LDA-based negative training strategy remained the original value of the class conditional probabilities of each real character class in a traditional MQDF classifier, which accorded with the fact that the proposed negative training did not alter the mean and co-variance of each real character class in the classifier. As the proposed LDA-based negative training strategy was able to adjust the posterior probability of an MQDF classifier while keeping the class conditional probability density of each real character class unchanged, in our experiments, we still employed a traditional MQDF classifier to test the method 2 [ 21 ].

Some examples of text line recognition results using the proposed method were shown in Fig. 10 , where the charac-ters embraced in a rectangle were the ground-truth content of a text line, and the characters with underscores were the mis-recognized characters. Errors in text line recognition mainly arose from the following aspects: the incorrect segmentation of a text line (such as the under-segmented digits  X 4 0 X , and  X 4 1 X  in the first text line in Fig. 10 , which were mis-recog-nized as characters X   X  and  X   X , respectively), the inac-curate recognition of an individual character (such as the last character  X   X  in the second text line in Fig. 10 , which was correctly segmented but wrongly recognized as  X   X ) and the ineffectiveness in character verification (such as the two rad-icals of character  X   X  X nthethirdtextlineinFig. 10 , which was verified as real characters and recognized as two charac-ters  X   X  and  X  X  X ). The above recognition errors suggested that in order to achieve better performance on unconstrained handwritten offline Chinese text line recognition, we need to further improve the performance of the above important modules in text line recognition. 6 Discussions and conclusion In this paper, a novel Bayesian-based probabilistic model was presented for unconstrained handwritten offline Chinese text line recognition. In this probabilistic model, traditional isolated character recognition was combined with character verification to jointly recognize each segment in a realistic handwritten text line. The character verifier can be trained with a moderate number of handwritten text lines (just 100 text lines in our experiments) and has shown effectiveness in improving the accuracies of text line recognition. To enhance the ability of an isolated character recognizer to distinguish between characters and non-characters, an LDA-based nega-tive training strategy is presented. By employing the outputs of each class in a traditional MQDF classifier and the LDA class or non-character class was re-computed. This strategy worked better than those either simply discarded a non-char-acter by thresholding or empirically approximated the prob-ability distribution of non-characters by k -means clustering. Experiments of the proposed method testing on 383 text lines in HIT-MW database showed that both the proposed charac-ter verification and the LDA-based negative training were effective to improve the accuracies of text line recognition. The character-level recognition rates of realistic handwrit-ten text lines reached 71.37% without any language model and 80.15% with a bi-gram language model, respectively, outperforming the most recent methods tested on the same data.

In future, we can improve the proposed method for text line recognition in following three aspects: firstly, to improve the accuracies of isolated character recognition, methods of re-computing the scores of each class in a distance classifier could be considered. Secondly, to further increase the effec-tiveness of character verification, we may exploit more pow-erful features reflecting the geometrical characteristics of a handwritten text line. Lastly, the combination of the proposed method with some segmentation-free methods could be help-ful to eliminate the mis-recognition arising from errors in text line segmentation.
 References
