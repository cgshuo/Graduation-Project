 The schema matching problem (SMP) plays a key role in various database applica-tions [13]. The goal of schema matching is to find the semantic correspondences be-tween elements of two schemas. For SMP, a major challenge is in properly addressing semantics: the semantic representations associated with the schemas. There are many practical techniques for representing the semantics of schemas, such as semantic data models, description logics, and corpora or di ctionaries, etc. A second major challenge is in developing such a framework that is applicable to a variety of data models, such as the relational, object-oriented, and XML models. The framework facilitates the building of algorithm model and the evaluation of algorithms. 
To achieve semi-automatic schema matching, there are many methods have been proposed. However, these practical matching approaches have not utilized the theo-retical foundation and most of them have relied on ad-hoc approaches. Doan et al . [3] developed a L SD system that uses machine-learning techniques (Bayesian learners) to match a pair of schemas; Madhavan et al . [8] implemented a C UPID system, which uses similar-based heuristics algorithms to achieve semi-automatic schema matching. Melnik [9] carried out a generic model-management tool  X  R ONDO , and proposed a graph-based algorithm -similarity flooding for schema matching. For a recent review of SMP, we can refer to a survey [13]. 
The theoretical foundation and the formal framework for related problems of SMP have been developed. Paolini and Pelagatti [12] analyzed mappings between external views of a database and conceptual views of the database itself, where database was represented by many-sorted algebra and mappings were treated as homomorphisms; semantic heterogeneity and surveyed theoretical frameworks that can provide solu-tions for them. Most work focused on schema integration in federated databases; For solving schema equivalence, based on a graph model ( Schema Intension Graph ), Miller et al . [10] proposed that the isomorphic schemas are equivalent, and discussed the structural transformation of schemas; Alagi  X  and Bernstein [1] developed a cate-gorical model theory for generic schema management. By using the category to repre-sent the schema, schema morphisms are defined as mappings of schema signatures that preserve the integrity constraints. Schema transformations within a particular category of schemas are viewed as morphisms of that category. Then, they built the formal frameworks for schema integration and transformation. However, little atten-tion has been given to the theoretical foundation of SMP. Therefore, in this paper, we address to develop a formal framework for SMP based on universal algebra. 
The rest of this paper is organized as follows. Section 2 proposes a formal match-ing-oriented definition of schema, which is based on universal algebra. Section 3 focuses on individual matching, and introduces the formal definition of schema matching. Further, section 4 studies schema homomorphism. We prove that SMP is equivalent to finding a semantic homomorphism from one schema to another. Then, section 5 presents a new taxonomy for SMP under the algebraic framework. Section 6 summarizes the contributions and suggests future research directions. To build the algebraic framework, we present a formal meta-meta structure (model) to signatures. The matching objects and their properties are able to assemble in the struc-ture. By the basic definition of structure [4, 5], we define a generic matching-oriented schema, which is based on universal algebra. Definition 1. ( Schema ) A schema S is a finite structure over a signature  X  , consists a 4-tuples ( , , , ) ILabFR = SSSS S , where , 2. 12 {,,,} n Isss =  X  X  X  X  S is a finite nonempty set that includes individuals , which denote 6. The size of schema S is the size of individuals and is denoted by || I S . Schema matching is inherently heuristic. The schema matching approaches focus on obtaining the actual mappings between S and T . A mapping establishes a semantic correspondence between two individuals. For this reason, we introduce a heuristic related relations are semantically equivalent, then we call that s and t are matched. Definition 2. (Individual matching) If S is the source schema, T is the target schema, sI  X  S , tI  X  T , s and t are matched, such that: If the mapping of s and t only satisfy Condition 1, then it is called label matching; mapping satisfy two conditions at the same time, then it is called structure matching. tions can be matched, the stronger matching between s and t is. is the strongest matching. 
In Equation 1, we show the individual matching result, where, sI  X  S , tI  X  T ,  X  stands for a void individual. matching result the result of schema matching consists of all the mappings between I S and I T , written  X  ST . By the basic notion of homomorphism [5, 6], Definition 1, and Definition 2, we intro-duce the definition of schema homomorphism , which is the generalized definition of homomorphism. Definition 4. A schema homomorphism :  X   X  ST from the source schema S to the target schema T is a mapping : II  X   X  ST such that: 1. There exists a semantic function symbol f of arity n 2. There exists a semantic relation symbol R of arity m If there exists a semantic homomorphism from S to T then we write  X  ST . 
Now, we prove that SMP is equivalent to finding whether there exists a semantic homomorphism from S to T , which preserves the semantics between two schemas. Lemma 1. If S and T are matched, then there exists a semantic homomorphism from S to T . mappings. Without loss of generality, suppose that s is matched to t, sI  X  S , tI  X  T : by Definition 4, Lemma 1 is completed. matched. Proof. If there is a semantic homomorphism from S to T , by Definition 4, then: and s i is matched to t i , all mappings constitute the result of schema matching. Based on Lemma 1 and 2, we show the theorem of SMP in homomorphism. Theorem 1. Two schemas S and T are matched iff there exists a schema homomorphism from S to T ,  X  ST . Proof.  X  Lemma 2, if  X  ST , then S and T are matched. 
Now, we formulize SMP as the SHOM problem, and build the algebraic frame-work for schema matching, and obtain the algorithm model of SMP. Algorithm Model of SMP: Given two schemas S and T , the goal of matching algo-rithms is to find the semantic homomorphism between S and T . In Definition 1, the label collection includes all kinds of labels of individuals, such as name label, concept label, and attribute la bel, etc. The label classification is conven-ient for practitioner to design and analyze the different matching approaches of SMP [13]. In Fig. 1, we present the matching methods based on the types of label symbols. 
We prove that SMP is equivalent to finding the semantic homomorphism from the source schema to the target schema, ther efore, we can call schema matching as homomorphic matching . Here, we show the overall classification of SMP by SHOM framework, which is based on the classification in [13].
 It is well known that a formal framework for SMP is important because it facilitates the building of algorithm model and the evaluation of algorithms. This paper is in-tended to develop an algebraic framework for generic schema matching. We have cific signatures, we propose a meta-meta model of schema, which called generic scribe any particular style of schemas, and transforms a schema and other matching information into a finite structure over speci fic signature. The signature is a collection of individual, label, relation and function symbols. Secondly, we demonstrate that SMP is equivalent to finding the schema homomorphism between two schemas. Then, the algebraic framework for generic schema matching is developed, which is the main contribution of this paper. Thirdly, based on Definition 2 (individual matching) and Definition 4 (schema homomorphism), we show a new classification of schema matching. This algebraic framework is able to characterize SMP elegantly. 
Homomorphism is a useful model for a wide variety of combinatorial problems dealing with mappings and assignments [6]. In this framework, SMP is transformed into a semantic homomorphism problem, which can guide practitioner to design the effective algorithms for SMP and evaluate the algorithms. We can use the approaches of combinatorial optimization, such as neural network, machine learning, and local search, etc., to solve n : m matching problem [6, 9, 11]. These optimization approaches are widely used to solve graph homomorphisms or graph matching problems [2]. 
