 Information Extraction (IE) systems often face the problem of distinguishing between affirmed, negated, and speculative information in text. For example, sentiment analysis systems need to detect negation for accurate polarity classification. Simi-larly, medical IE systems need to differentiate be-tween affirmed, negated, and speculated (possible) medical conditions.

The importance of the task of negation and spec-ulation (a.k.a. hedge) detection is attested by a num-ber of research initiatives. The creation of the Bio-Scope corpus (Vincze et al., 2008) assisted in the de-velopment and evaluation of several negation/hedge scope detection systems. The corpus consists of medical and biological texts annotated for negation, speculation, and their linguistic scope. The 2010 i2b2 NLP Shared Task 1 included a track for detec-tion of the assertion status of medical problems (e.g. affirmed, negated, hypothesized, etc.). The CoNLL-2010 Shared Task (Farkas et al., 2010) focused on detecting hedges and their scopes in Wikipedia arti-cles and biomedical texts.

In this paper, we present a linguistically moti-vated rule-based system for the detection of nega-tion and speculation scopes that performs on par with state-of-the-art machine learning systems. The rules used by the ScopeFinder system are automat-ically extracted from the BioScope corpus and en-code lexico-syntactic patterns in a user-friendly for-mat. While the system was developed and tested us-ing a biomedical corpus, the rule extraction mech-anism is not domain-specific. In addition, the lin-guistically motivated rule encoding allows for man-ual adaptation to new domains and corpora. Negation/Speculation detection is typically broken down into two sub-tasks -discovering a nega-tion/speculation cue and establishing its scope. The following example from the BioScope corpus shows the annotated hedging cue (in bold) together with its associated scope (surrounded by curly brackets):
Typically, systems first identify nega-tion/speculation cues and subsequently try to identify their associated cue scope. However, the two tasks are interrelated and both require syntactic understanding. Consider the following two sentences from the BioScope corpus:
Both sentences contain the word form appears , however in the first sentence the word marks a hedg-ing cue, while in the second sentence the word does not suggest speculation.

Unlike previous work, we do not attempt to iden-tify negation/speculation cues independently of their scopes. Instead, we concentrate on scope detection, simultaneously detecting corresponding cues. We used the BioScope corpus (Vincze et al., 2008) to develop our system and evaluate its performance. To our knowledge, the BioScope corpus is the only publicly available dataset annotated with nega-tion/speculation cues and their scopes. It consists of biomedical papers, abstracts, and clinical reports (corpus statistics are shown in Tables 1 and 2). 70% of the corpus documents (randomly selected) were used to develop the ScopeFinder system (i.e. extract lexico-syntactic rules) and the remaining 30% were used to evaluate system performance. While the corpus focuses on the biomedical domain, our rule extraction method is not domain specific and in future work we are planning to apply our method on different types of corpora. Intuitively, rules for detecting both speculation and negation scopes could be concisely expressed as a combination of lexical and syntactic patterns. For example,  X  Ozg  X  ur and Radev (2009) examined sample BioScope sentences and developed hedging scope rules such as:
Similar lexico-syntactic rules have been also man-ually compiled and used in a number of hedge scope detection systems, e.g. (Kilicoglu and Bergler, 2008), (Rei and Briscoe, 2010), (Velldal et al., 2010), (Kilicoglu and Bergler, 2010), (Zhou et al., 2010).

However, manually creating a comprehensive set of such lexico-syntactic scope rules is a laborious and time-consuming process. In addition, such an approach relies heavily on the availability of accu-rately parsed sentences, which could be problem-atic for domains such as biomedical texts (Clegg and Shepherd, 2007; McClosky and Charniak, 2008).
Instead, we attempted to automatically extract lexico-syntactic scope rules from the BioScope cor-pus, relying only on consistent (but not necessarily accurate) parse tree representations.

We first parsed each sentence in the training dataset which contained a negation or speculation cue using the Stanford parser (Klein and Manning, 2003; De Marneffe et al., 2006). Figure 1 shows the parse tree of a sample sentence containing a nega-tion cue and its scope.

Next, for each cue-scope instance within the sen-tence, we identified the nearest common ancestor which encompassed the cue word(s) and all words in the scope (shown in a box on Figure 1). The subtree rooted by this ancestor is the basis for the resulting lexico-syntactic rule. The leaf nodes of the resulting subtree were converted to a generalized representa-tion: scope words were converted to *scope* ; non-cue and non-scope words were converted to * ; cue words were converted to lower case. Figure 2 shows the resulting rule.

This rule generation approach resulted in a large number of very specific rule patterns -1,681 nega-tion scope rules and 3,043 speculation scope rules were extracted from the training dataset.

To identify a more general set of rules (and in-crease recall) we next performed a simple transfor-mation of the derived rule set. If all children of a rule tree node are of type *scope* or * (i.e. non-cue words), the node label is replaced by *scope* or * respectively, and the node X  X  children are pruned from the rule tree; neighboring identical siblings of type *scope* or * are replaced by a single node of the corresponding type. Figure 3 shows an example of this transformation.
The rule tree pruning described above reduced the negation scope rule patterns to 439 and the specula-tion rule patterns to 1,000.

In addition to generating a set of scope finding rules, we also implemented a module that parses string representations of the lexico-syntactic rules and performs subtree matching. The ScopeFinder module 2 identifies negation and speculation scopes in sentence parse trees using string-encoded lexico-syntactic patterns. Candidate sentence parse sub-trees are first identified by matching the path of cue leaf nodes to the root of the rule subtree pattern. If an identical path exists in the sentence, the root of the candidate subtree is thus also identified. The candi-date subtree is evaluated for a match by recursively comparing all node children (starting from the root of the subtree) to the rule pattern subtree. Nodes of type *scope* and * match any number of nodes, similar to the semantics of Regex Kleene star (*). As an informed baseline, we used a previously de-veloped rule-based system for negation and spec-ulation scope discovery (Apostolova and Tomuro, 2010). The system, inspired by the NegEx algorithm (Chapman et al., 2001), uses a list of phrases split into subsets (preceding vs. following their scope) to identify cues using string matching. The cue scopes extend from the cue to the beginning or end of the sentence, depending on the cue type. Table 3 shows the baseline results.

We used only the scopes of predicted cues (cor-rectly predicted cues vs. all predicted cues) to mea-sure the baseline system performance. The base-line system heuristics did not contain all phrase cues present in the dataset. The scopes of cues that are missing from the baseline system were not included in the results. As the baseline system was not penal-ized for missing cue phrases, the results represent the upper bound of the system.

Table 4 shows the results from applying the full extracted rule set (1,681 negation scope rules and 3,043 speculation scope rules) on the test data. As expected, this rule set consisting of very specific scope matching rules resulted in very high precision and very low recall.

Table 5 shows the results from applying the rule set consisting of pruned pattern trees (439 negation scope rules and 1,000 speculation scope rules) on the test data. As shown, overall results improved signif-icantly, both over the baseline and over the unpruned set of rules. Comparable results are shown in bold in Tables 3, 4, and 5.
 Interest in the task of identifying negation and spec-ulation scopes has developed in recent years. Rele-vant research was facilitated by the appearance of a publicly available annotated corpus. All systems de-scribed below were developed and evaluated against the BioScope corpus (Vincze et al., 2008).
Ozg  X  ur and Radev (2009) have developed a super-vised classifier for identifying speculation cues and a manually compiled list of lexico-syntactic rules for identifying their scopes. For the performance of the rule based system on identifying speculation scopes, they report 61.13 and 79.89 accuracy for BioScope full papers and abstracts respectively.

Similarly, Morante and Daelemans (2009b) de-veloped a machine learning system for identifying hedging cues and their scopes. They modeled the scope finding problem as a classification task that determines if a sentence token is the first token in a scope sequence, the last one, or neither. Results of the scope finding system with predicted hedge signals were reported as F1-scores of 38.16, 59.66, 78.54 and for clinical texts, full papers, and abstracts respectively 3 . Accuracy (computed for correctly identified scopes) was reported as 26.21, 35.92, and 65.55 for clinical texts, papers, and abstracts respec-tively.

Morante and Daelemans have also developed a metalearner for identifying the scope of negation (2009a). Results of the negation scope finding sys-tem with predicted cues are reported as F1-scores (computed on scope tokens) of 84.20, 70.94, and 82.60 for clinical texts, papers, and abstracts respec-tively. Accuracy (the percent of correctly identified exact scopes) is reported as 70.75, 41.00, and 66.07 for clinical texts, papers, and abstracts respectively.
The top three best performers on the CoNLL-2010 shared task on hedge scope detection (Farkas et al., 2010) report an F1-score for correctly identi-fied hedge cues and their scopes ranging from 55.3 to 57.3. The shared task evaluation metrics used stricter matching criteria based on exact match of both cues and their corresponding scopes 4 .
CoNLL-2010 shared task participants applied a variety of rule-based and machine learning methods on the task -Morante et al. (2010) used a memory-based classifier based on the k-nearest neighbor rule to determine if a token is the first token in a scope se-quence, the last, or neither; Rei and Briscoe (2010) used a combination of manually compiled rules, a CRF classifier, and a sequence of post-processing steps on the same task; Velldal et al (2010) manu-ally compiled a set of heuristics based on syntactic information taken from dependency structures. We presented a method for automatic extraction of lexico-syntactic rules for negation/speculation scopes from an annotated corpus. The devel-oped ScopeFinder system, based on the automati-cally extracted rule sets, was compared to a base-line rule-based system that does not use syntac-tic information. The ScopeFinder system outper-formed the baseline system in all cases and exhib-ited results comparable to complex feature-based, machine-learning systems.

In future work, we will explore the use of statisti-cally based methods for the creation of an optimum set of lexico-syntactic tree patterns and will evalu-ate the system performance on texts from different domains.

