 Fragkiskos D. Malliaros  X  Vasileios Megalooikonomou  X  Christos Faloutsos Abstract Givenalargesocialgraph,whatcanwesayaboutitsrobustness?Broadlyspeaking, the property of robustness is crucial in real graphs, since it is related to the structural behavior of graphs to retain their connectivity properties after losing a portion of their edges/nodes. Can we estimate a robustness index for a graph quickly? Additionally, if the graph evolves over time, how this property changes? In this work, we are trying to answer the above questions studying the expansion properties of large social graphs. First, we present a measure that char-acterizes the robustness properties of a graph and also serves as global measure of the commu-nitystructure(orlackthereof).Weshowhowtocomputethismeasureefficientlybyexploiting the special spectral properties of real-world networks. We apply our method on several diverse real networks with millions of nodes, and we observe interesting properties for both static and time-evolving social graphs. As an application example, we show how to spot outliers and anomalies in graphs over time. Finally, we examine how graph generating models that mimic several properties of real-world graphs and behave in terms of robustness dynamics. Keywords Network robustness  X  Expansion properties  X  Temporal evolution  X  Graph generating models  X  Social network analysis  X  Graph mining 1 Introduction In recent years, the study of social networks and graphs in general has received great attention from the research community. This mainly occurs due to the strong modeling capabilities that graph structures show; a large number of datasets arising from a plethora of diverse disciplines can be naturally represented as graphs. Characteristic examples are technological and information networks (e.g., the Web, the Internet, e-mail exchange networks), collab-oration (e.g., co-authorship) and citation networks, as well as social networks from online social networking and social media applications, such as Facebook and Youtube [ 39 ]. A large amount of research work has been devoted to understand the structure, the organization and the evolution of these networks, with many interesting results [ 9 ].
 A cornerstone property that is related to the structure of networks is the one of robustness . Broadly speaking, a graph is characterized as robust, if it is capable to retain its structure and its connectivity properties after the loss of a portion of its nodes and edges. The problem of robustness assessment is one of the most well-studied in the area of network science, with many contributions from several scientific communities, including those of statistical physics and computer science [ 12 ]. In the seminal paper by Albert et al. [ 3 ], the robustness of real graphs was studied through a process of removing nodes and examining how some structural properties of the graph (e.g., diameter, size of largest connected component) are affected. The main observation was that the property of robustness is closely related to the degree of the removed nodes; real graphs X  X hat present a heavy-tailed degree distribution [ 18 ] X  tend to be highly resilient under the removal of randomly selected nodes, while they tend to be extremely vulnerable under  X  X argeted attacks X  that focus on nodes with high degree. To conclude, the main focus of previous works was on studying graph robustness mostly based on how the removal of nodes with specific characteristics (e.g., high degree) affects structural properties of the graph.

In this paper, we argue that an important graph characteristic that plays a crucial role on the robustness is the existence of communities. That is, the property of robustness in real-world graphs is closely related to the notion of community structure . For example, consider a network with good community structure [ 42 ]; this means that the network is organized based on a modular architecture, presenting well-defined clusters (i.e., communities) with large intra-cluster and small inter-cluster edge density. In other words, graphs with inherent community structure have a large number of edges between nodes of the same cluster, while relatively small number of edges across different clusters. We expect that the robustness of these types of networks will be poor, since they can be easily become disconnected with the removal of the edges which connect different clusters.

How can we do the robustness estimation quickly without performing a node/edge removal procedure and measuring how the connectivity is affected? In other words, is there a robust-ness index, which can be computed fast enough even for large-scale graphs with millions of nodes and edges? Moreover, if the network evolves over time with the addition/deletion of nodes/edges, what can we say about its robustness and, as an extension, about its community structure? Is there a common pattern in social graphs that govern the time evolution of these properties?
In this work, we tackle the problem of estimating the robustness properties of a graph quickly, providing simultaneously information about its community structure. In order to do this, we borrow concepts from the theory of expander graphs [ 21 ], and we study the expansion properties of several real-world time-evolving social graphs. The main contributions of this work can be summarized as follows:  X  Novel robustness measure We propose to use the natural measure of expansion, in order  X  Structural patterns of real graphs Applying the proposed method to several large static  X  Patterns of time-evolving graphs We study how the robustness property of social graphs  X  Anomaly detection We show how to spot outliers and detect anomalies in graphs that  X  Robustness properties of graph generating models We study the robustness of several
The rest of the paper is organized as follows: Sect. 2 surveys the related work and Sect. 3 gives the necessary preliminary background. In Sect. 4 , the proposed method is described. Sections 5 and 6 present the experimental results and our observations for static and time-evolving graphs, respectively. In Sect. 7 , the robustness properties of several graph generation models are examined. Some concluding remarks are presented in Sect. 8 , and finally, the  X  X ppendix X  provides theoretical details. 2 Related work In this section, we review the related work, which can be placed in the following main cate-gories: graph structure analysis, graph robustness, spectral graph analysis and applications. Graph structure analysis There is a vast literature on methods for studying the structure of complex networks [ 23 , 25 , 37 , 39 , 40 ]. The key step for many of these approaches is the finding of patterns and laws that the graphs obey. Studying static snapshots of graphs has led to the discovery of interesting properties such as the power law degree distribution [ 18 ], the small diameter [ 2 ] and the triangle power law [ 49 ]. Furthermore, examining time-evolving graphs they have been observed several patterns such as the shrinking diameter, the den-sification power law [ 28 , 29 ] and the gelling point [ 35 ]. As we will present later, some of these properties are closely related to the notion of robustness that is the focus of the cur-rent work. For a nice survey, one can consult the recent work by Chakrabarti and Faloutsos [ 9 ].

Another well-known approach for exploring the structure of real graphs is the one of community detection (or clustering) [ 19 , 32 ]. Communities correspond to groups of nodes that tend to be similar among each other; the notion of similarity is typically expressed by the number of edges between the nodes of the same community, compared to the density of edges across different communities. As we will present later, our robustness estimation technique is closely related to the community structure property of real graphs. Robustness assessment in graphs A large number of studies has been devoted to understand and assess the robustness properties of real graphs [ 8 , 12 ]. In the seminal paper by Albert et al. [ 3 ], the focus was on how scale-free networks (i.e., network that follow a heavy-tailed degree distribution) operate under random and targeted degree-based node removals. In order to assess the network robustness, one can examine how crucial structural characteristics of the graph (such as the diameter and the size of the largest connected component) behave under node removals. The main observation was that real graphs tend to be extremely robust under random failures, but vulnerable in attacks to high degree nodes. The goal of our work is slightly different; instead of performing nodes/edges removal for robustness assessment, we propose an estimation of a robustness index for a graph, based on the graph theoretic property of expansion. As we will see later, this assessment is closely related to the existence of well-defined communities within the graph. Very close to our approach is the method proposed in [ 17 ]; however, the focus was mainly in small-scale static networks, while we are interested in large real networks, as well as in the parameter of time evolution. Spectral graph analysis Analyzing graphs using spectral techniques has a long history [ 11 ]. The main idea behind these approaches is to consider information about the spectrum of a matrix representation of the graph (mainly, the adjacency matrix or the Laplacian). More recent related works include spectral algorithms for community detection [ 19 , 32 , 42 ], node centrality estimation (e.g., the PageRank algorithm [ 43 ]) and spectral counting of triangles in large graphs [ 49 , 50 ]. As we will present shortly, the proposed method can be considered as a spectral robustness estimation method, since it relies heavily on the spectrum of the adjacency matrix of a graph.
 Applications There are plenty of applications that involve the study of graphs. Generating realistic graphs [ 9 ] is such an application, where the generators should satisfy the observed properties. As we will present later, in the context of this work we also examine how well-known graph generators behave in terms of robustness dynamics and if they can mimic the observed properties. One other application that has attracted much attention recently is the detection of anomalies and outliers [ 1 , 10 ]. Later, we will see how to utilize the observed robustness properties of real graphs in order to detect temporal anomalies in social graphs. Other problem domains are searching in networks [ 30 ], graph compression and summa-rization [ 24 , 33 , 48 ], graph clustering [ 46 ] and information-influence propagation in social networks [ 4 , 34 ]. 3 Preliminaries and background In this section, we present the necessary background and some preliminaries related to our approach for robustness estimation. Initially, we briefly discuss about the notion of expander graphs and expansion properties that form the basis of our approach, and then, we describe their relationship to the robustness and the community structure of a graph. Table 1 gives a list of used symbols with their definition. 3.1 Expansion Informally, a graph is characterized as a good expander if it is simultaneously sparse and highly connected [ 21 ]. More precisely, given an undirected graph G = ( V , E ) ,the expan-sion of any subset of nodes S  X  V , with size at most | V | 2 , is defined as the number of its neighborhood nodes (i.e., those nodes that have one endpoint inside S and the other outside) over the size of the subset S .Thatis,if N ( S ) are the neighborhood nodes of S , the expansion minimum quantity over all possible subsets S . That way, a graph is considered to have good expansion properties if every subset of nodes has good expansion (i.e., many neighbors). 3.2 Expansion, robustness and community structure Studying the expansion properties of a graph can offer crucial insights about its structure. In particular, the property of expansion can act as a natural measure of the graph X  X  robustness since it can inform us about the presence or not of edges, which can operate as bottlenecks inside the network. Good expansion properties imply high robustness, since any subset of nodes in the graph will have a relatively large neighborhood. On the other hand, poor expan-sibility reflects exactly the opposite behavior. For any subset of nodes, it is impossible to satisfy the large neighborhood constraint and hence, such types of graphs are not robust enough, since they can be easily separated into disconnected subgraphs with the elimination of a small number of edges that connect the different subsets. If we think these subsets as cuts in a graph, the existence of good expansibility requires cuts with relatively large size (i.e., large number of edges crossing the cut) and thus poor modularity and community structure [ 42 ].

From the discussion until now, it becomes clear that the notion of expansion is closely related to the robustness as well as to the community structure properties of a graph (note that the expansion has been used in previous works as a quality measure for community detection and graph partitioning algorithms [ 19 ]). As we will present shortly, our approach for fast robustness estimation is built upon the above relationship; we study the robustness of a graph examining the expansion properties, providing also insights about the community structure (in other words, the property of expansion is utilized as the connecting link between robustness and community structure).
 Computing the expansion factor of a graph is computationally difficult problem [ 38 ]. Thanks to a very well-known result from the field of spectral graph theory, the expansion factor of a graph can be approximated using the spectrum of the adjacency matrix A of the graph [ 11 ]. More precisely, through the Alon X  X ilman (or Cheeger) inequality, the expansion of a graph is closely related to the spectral gap  X  1  X   X  2 , i.e., the difference between the largest and the second largest eigenvalues of the adjacency matrix A . In fact, this constitutes a simple way for estimating the robustness of a graph: compute the spectral gap and if this is large, the graph will show good robustness, while in the opposite case the robustness will be low. However, it is not clear how large the spectral gap of a graph should be in order to characterize it as robust enough. In other words, the spectral gap alone cannot provide theoretical guarantees for the expansion (and therefore for the robustness) of the real-world graphs that we are interested in (mainly graphs with heavy-tailed degree distribution). In the related literature, there have been presented some bounds for the value of spectral gap, but they mostly apply to graphs with specific properties, such as k -regular graphs (i.e., all nodes havethesamedegree k )[ 21 ]; however, these types of graphs and, respectively, the bounds do not apply on our case.

In [ 17 ], the author suggested an elegant method for estimating the robustness of a graph, combining the spectral gap with the measure of subgraph centrality [ 15 ]. Generally, the subgraph centrality of a node is determined based on the number of closed walks (with odd length in order to avoid cycles in an acyclic graph) that the node participates, and it can be obtained from the spectrum of the adjacency matrix A as If the graph has good expansion properties (and thus high robustness), then due to the large spectral gap  X  1  X  2 , we expect that in SC ( i ),  X  i  X  V of Eq. ( 1 ), only the first term of the summation ( j = 1, i.e., u 2 i 1 sinh ( X  1 ) ) will account for the subgraph cen-trality (the contribution of the terms for j = 2 ,..., | V | will be negligible compared to that of j = 1 due to the effect of the sinh (  X  ) function). Hence, measuring the devi-ation from this behavior, we will be able to detect the existence (or lack thereof) of high robustness properties in a graph. This deviation can be summarized in the measure  X ( (see Appendix for full justification) [ 17 ].

However, the basic shortcoming of the above measure is that it is not scalable to large graphs, since it requires the computation of all the eigenvalues and their corresponding eigenvectors of the adjacency matrix A . Moreover, it cannot be applied directly to bipartite graphs since these graphs do not contain odd length closed walks (see  X  X ppendix X  for more details). 4 Proposed robustness measure While the measure presented in the previous section naturally captures the notion of robust-ness in a graph, it requires the computation of all eigenvalue X  X igenvector pairs ( X  i , u i ),  X  i  X  V , of the adjacency matrix A . This becomes a computational bottleneck for large graphs with millions of nodes and edges, making the measure inefficient and practically not feasible for large-scale graphs.

To overcome this problem, in what follows we present our approach for the efficient and simultaneously accurate computation of a robustness index. Our proposal consists of a normalized version of the subgraph centrality (Eq. 1 ) along with the generalized robustness index r k . The basic idea of our approach is to compute a low-rank eigendecomposition of the adjacency matrix A , combining it with the special spectral properties of real-world graphs. 4.1 Generalized robustness index r k Here we present the proposed generalized robustness measure r k , which can be used as a fast and scalable graph X  X  robustness index. The motivating question behind this measure is how can we efficiently approximate the subgraph centrality of Eq. ( 1 ) for every node in the graph, providing a scalable, expansion-based robustness estimation method for large graphs, while simultaneously keeping the accuracy high.

The basic idea behind our approach comes from two important observations related to the spectrum of the adjacency matrix of real-world graphs: (i) The absolute values of the first eigenvalues follow a power X  X aw distribution [ 18 ]. (ii) Except from the first few eigenvalues, the remaining eigenvalues are almost symmetric Figure 1 presents the spectrum of a real-world graph ( Wiki -Vote ). It shows the eigenvalues of the adjacency matrix for this graph versus their rank. We can easily observe that the first few eigenvalues are much larger than the rest, and moreover, the bulk of the eigenvalues is almost symmetric around zero.

Based on the above two points along with the fact that the sinh (  X  ) function, which is used to compute the subgraph centrality, is an odd function (i.e., sinh (  X  x ) = X  sinh ( x ) ), 1 we can approximate the subgraph centrality of Eq. ( 1 ) using only the first top eigenvalues and their corresponding eigenvectors. In other words, the contribution of most of the eigenvalues to the subgraph centrality is negligible, compared to that of the first few eigenvalues, due to the effect of the sinh (  X  ) function (the contribution of an eigenvalue is roughly canceled out by the contribution of its almost symmetric eigenvalue).
 We can now define the normalized subgraph centrality of each node in the graph as where k is the number of the eigenvalues that will contribute to the approximation of the subgraph centrality, and generally k | V | for real-world graphs. In other words, k can be considered as the desired low-rank approximation of the adjacency matrix A , and as we will present in the following section, for large graphs k can be extremely small to achieve almost excellent accuracy. We stress out here that the applicability of the proposed approximation of the subgraph centrality is not similar to other low-rank matrix approximation (that retains the top-k largest eigenpairs) applications, like the ones used in other fields, such as Text Mining and Information Retrieval (e.g., Latent Semantic Indexing [ 5 ]). In our case, the goal is to achieve a low-rank approximation of the adjacency matrix with respect to the subgraph centrality function of Eq. ( 1 ). That is, the two previously described properties of real-world graphs can be utilized in our approximation, only due to the specific mathematical property (odd function) of the sinh (  X  ) function.

Based on the normalized subgraph centrality NSC k of each node i  X  V , we can now define the proposed robustness index of a graph as Smaller r k implies better robustness, since as we described in the previous section, for a robust enough graph only the first eigenpair will account for the subgraph centrality. This behavior can be visualized using the discrepancy plot (e.g., Fig. 2 dore).
 Definition 4.1 ( Discrepancy plot ) The log X  X og plot of the principal eigenvector versus the normalized subgraph centrality will show a linear correlation for graphs with high robustness. Large deviation from the linear correlation in the discrepancy plot implies absence of robust-ness. However, as we will see in the following section, most of the real-world social graphs that we studied present this linear correlation in their discrepancy plots (as well as they exhibit averysmall r k index), and therefore, they tend to be extremely robust.
 Let us try now to give more insights in the discrepancy plot providing a different viewpoint. Each dot in the discrepancy plot (Fig. 2 d or e) corresponds to the behavior of each individual node in the graph and shows how the node affects the robustness of the whole graph. Broadly speaking, the normalized subgraph centrality value of a node provides information about how wellconnected (clustered) is the node locally within its neighborhood. On the other hand, each component of the principal eigenvector captures the global connectivity of the corresponding node in the graph. Therefore, the existence (or absence) of correlations between local and global nodes X  connectivity behavior provides a good estimator for the robustness of the whole graph.

The r k index can be considered as a generalization of  X ( G ) (see Sect. 3 ), where r k =  X ( G ) if k =| V | . However, the main advantage of the r k measure is that it is scalable and it can be computed efficiently for large graphs. Moreover, the parameter k (i.e., the desir-able low rank approximation) allows us to adjust the  X  X rade-off X  between the accuracy in the computation of the robustness and the required time. As we will present in the fol-lowing section, for large graphs with millions of nodes it is enough to compute only very few of the eigenvalues and their corresponding eigenvectors to achieve almost excellent accuracy (in some cases only the first eigenvalue is adequate). The most important thing is that the r k measure operates perfectly as a robustness index and it can be used to sum-marize both the robustness and the community structure properties of a graph in a single number. 4.1.1 Computational issues Here we discuss more technical issues related to the computation of the proposed r k index, including time complexity and convergence in real-world graphs. As we have already men-tioned, the computation of the r k index is reduced to a symmetric eigendecomposition prob-lem. More precisely, due to the sparsity of the adjacency matrix of real-world graphs, the computation of the top-k eigenpairs can be efficiently done using the Lanczos method for solving large, sparse, symmetric eigendecomposition problems. Lanczos method performs a tridiagonalization of the adjacency matrix A , with the property that the extremal (largest or smallest) eigenvalues of the produced tridiagonal matrices approximate the extremal eigen-values of A . Therefore, Lanczos method is suitable in the case of computing the r k index, where only the very few largest eigenvalues of A are enough. Furthermore, at each iteration of the Lanczos method, only matrix X  X ector multiplications are performed; hence, during the execution no intermediate matrices are produced, reducing space requirements. For a more detailed description of the Lanczos method, one can consult Ref. [ 20 ].

Another important issue concerns the convergence of Lanczos method when applied to the adjacency matrix of real graphs. As noted in [ 50 ], due to the skewed eigenvalue distribution of real-world networks (e.g., see Fig. 1 ), the convergence of Lanczos solver to the top largest Algorithm 1 Robustness Index r k eigenvalues is fast. Thus, since a relatively small number of the largest eigenpairs is adequate for computing the r k index, this can be achieved efficiently as well.

Finally, we stress out that the proposed r k index can be computed very easily in any programming environment that provides routines for the Lanczos eigenvalue decomposition method. For demonstration purposes, Algorithm 1 provides a MATLAB implementation of the proposed r k index. 4.1.2 Robustness estimation in bipartite graphs Additionally, we show how we can efficiently compute the r k index for bipartite graphs. A graph G = ( V , E ) is called bipartite if the node set V can be partitioned into two disjoint sets V 1 and V 2 ,where V = V 1  X  V 2 , such that for each edge ( i , j )  X  E  X  i  X  V 1 and j  X  V 2 . Several real-world datasets can be represented as bipartite graphs. How-ever, the robustness index r k cannot be applied directly to this type of graphs. The pro-posed optimization procedure for approximating the normalized subgraph centrality of Eq. ( 1 ) capitalizes on the combination of the skewed and almost symmetric spectrum of unipartite real-world graphs and the property that the sinh (  X  ) function is odd. As we have already mentioned, this function corresponds to the closed paths of odd length and the normalized subgraph centrality is computed according to them. However, bipar-tite graphs do not contain odd length closed paths; therefore, the normalized subgraph centrality should be considered based on the closed paths of even length, by replac-ing the sinh (  X  ) function with the cosh (  X  ) [ 15 ]. The problem that arises is that cosh (  X  ) is an even function (i.e., cosh (  X  x ) = cosh ( x ) ), which means that it does not retain the signs of the eigenvalues. A second problem is related to the properties of the spec-trum of bipartite graphs; the eigenvalues exhibit the pairing property , i.e.,  X  | V | X  i + 1 =  X  , i = 1 , 2 ,..., | V | (fully symmetric around zero). Thus, it is not possible to approx-imate the subgraph centrality in bipartite graphs keeping only the top largest eigenval-ues.

Our approach for robustness estimation performs a simple transformation of the bipar-tite graph in such a way that (i) the basic topological properties of the graph are retained and (ii) the subgraph centrality can be computed efficiently. As a running example, let us consider the IMDB 2 movie-actor bipartite graph (actors playing in movies X  X ne par-tition corresponds to actors and the other to movies). This graph can be represented using the biadjacency matrix B , where the rows correspond to movies while the columns to actors. A natural way to compute the robustness of this graph is to consider the actor X  X ctor graph or the movie X  X ovie graph (actually these graphs capture the similari-ties between actors and movies, respectively). In other words, the bipartite graph is con-verted into an one mode graph, projecting the nodes of one partition to the nodes of the other.
 Proposition 4.1 (NSC k for bipartite graphs) Let G = ( V 1 , V 2 , E ) be a bipartite graph, where | V 1 |= m and | V 2 |= n. Assuming that we consider the partition V 1 (similar for V ) and apply bipartite network projection procedure to construct the unipartite represen-tation graph  X  G = ( V 1 , E B ) . That is,  X  ( i ,w)  X  E and ( j ,w)  X  E, where i , j  X  V 1 and w  X  V 2 of the bipartite graph G, add the edge ( i , j ) in the graph  X  G. Then, the normal-ized subgraph centrality NSC B k for each node i of  X  G can be computed as NSC B k ( i ) =  X  G.

Thus, replacing the NSC k with NSC B k in Eq. ( 3 ), we can estimate efficiently the r k robust-ness index of a bipartite graph. In our experimental study, we mainly focus on unipartite graphs, and therefore, we apply Eq. ( 3 )asis. 4.2 Illustration In order to better understand how the r k robustness index operates, it is applied to two graphs with expected robustness properties. The first one is a random graph generated by the Erd X s-R X nyi(ER)model[ 14 ] with 50 nodes and probability p = 0 . 3(Fig. 2 a). The second is Newman X  X  collaboration network between 379 researchers in the area of network science (Fig. 2 b) [ 41 ].

Random graphs are known to have good expansion properties [ 21 ] and thus high robust-ness. Then, due to the large spectral gap, only the largest eigenvalue and the corresponding eigenvector will mostly contribute to the normalized subgraph centrality (Eq. 2 ), and the principal eigenvector will follow a power X  X aw relationship (linear correlation in logarithmic scales) with the normalized subgraph centrality (see also  X  X ppendix X ). Thus, from Eq. ( 3 ), the generalized robustness index r k will be extremely small. Figure 2 d depicts this result where it is easy to observe the linear correlation when plotting the principal eigenvector versus the normalized subgraph centrality (discrepancy plot).

On the other hand, Newman X  X  collaboration network presents very strong community structure, where the nodes form dense modules with sparse connections between different modules. Hence, this graph in not robust since it can be easily become disconnected if we simply remove the edges that connect different modules. So, we expect an opposite behavior compared to that of the ER graph. Figure 2 e depicts this result where the absence of the above linear correlation is clear in the discrepancy plot and the r k index is far away from zero. As we have already discuss, low robustness is expressed by the absence of correlation between the normalized subgraph centrality (local factor) and the principal eigenvector (global factor).

Based on this point, in Fig. 2 e the node with the largest NSC k and principal eigenvector component (green + ) corresponds to A.-L. Barabasi. This is somewhat expected since A.-L. Barabasi is a well-known researcher in the area of network science. Next to him follow other well-known researchers (e.g., H. Jeong, R. Albert) which actually belong to the egonet (Fig. 2 c) of A.-L. Barabasi (in Fig. 2 c the green node corresponds to A.-L. Barabasi). On the other hand, the node with one of the smallest NSC k and principal eigenvector (yellow  X  in Fig. 2 e) corresponds to G. Gregoire, which actually has only one co-author in the dataset (and this co-author has very small neighborhood). 5 Robustness of large static graphs In this section, we present detailed experimental results, applying the method proposed in Sect. 4 to several real-world large social graphs (Table 2 ). All the experiments were designed to answer the following questions: Table 2 presents the real datasets used in this work. In all cases, we consider the graphs as unweighted and undirected. Furthermore, unless specified otherwise, we extract the largest connected component and use it as a good representative of the whole graph. In Sect. 5.4 , we perform experiments on the second largest connected component of several real graphs, in order to examine how the robustness behaves in smaller components. 5.1 Effectiveness and scalability of r k robustness index Here we measure the performance of r k index both in terms of scalability and effectiveness. All the experiments were conducted on a DELL server with two quad core processors and 32GB RAM, running Linux.

Figure 3 a presents the computation time of r k index in the Dblp dataset. In the experiment, we used k = 30 (i.e., the 30 largest eigenpairs) and measured the running time for different scale graphs (up to 400K nodes and 1, 4M edges). We can observe that the r k index scales linearly with respect to the number of edges. Moreover, we can see that for the largest graph, the computation time is &lt; 1min. This makes the r k index applicable to million-node graphs.
Figure 3 b plots the rank k of approximation (i.e., the number of computed eigenpairs) versus the absolute error | r  X  r k | ,where r is the value of the robustness index using the whole spectrum of the adjacency matrix, for two graphs. For the CA -gr -qc graph, we can observe that after k = 4 we achieve a very good approximation of the robustness index, with absolute error &lt; 0 . 06. For the Wiki -Vote graph, for k = 1 and only the first eigenvalue and the corresponding eigenvector, we attain absolute error which tend to zero (10  X  15 ). However, CA -gr -qc is a much smaller graph that Wiki -Vote . As we will see next in this section, almost all the examined large social graphs tend to be extremely robust showing a large spectral gap, and in Eq. ( 2 ) the first term dominates. 5.2 Observations and explanations Figure 4 presents the discrepancy plots for the graphs we examined, along with the r k index (for all the experiments we used k = 30). From a first look, it is clear that almost all of these graphs exhibit high robustness, showing linear correlation (in log X  X og scales) between the principal eigenvector and the normalized subgraph centrality. The r k index for most of them is very close to zero, implying that the spectral gap of these networks is large and they show good expansion properties.
 Observation 1 ( High robustness ) Large real-world social graphs exhibit good expansion properties and thus high robustness.

This observation suggests that the networks expand very well allowing the selection of arbitrary subsets of nodes with size at most | V | 2 , such that for every set there is a relatively large number of edges with one endpoint inside the set and the other outside. Therefore, a first outcome is thatthese socialgraphs lack of edges thatcan actas bottlenecks, and therefore, they present high robustness. From a community structure related point of view, this observation implies that the nodes inside the networks that we have examined are not organized based on a clear modular architecture. It seems that these networks lack of well-defined clusters that can be easily separated from the whole graph.

One interesting question is if these observations for large social graphs are expected. It is well known that the organization of social networks is based on communities (i.e., subgraphs with high intra-community and low inter-community edge density) [ 40 ]. Additionally, pre-vious studies on the expansion properties of small-scale social graphs showed that almost all of them exhibit poor expansibility and thus very low robustness [ 16 ].

On the other hand, our observations suggest an almost opposite behavior. We consider that this difference is mainly due to the scale of the networks. It seems that in large-scale social graphs it is difficult to find subsets of nodes which can be easily isolated, leading to high robustness. For example, consider the co-authorship networks Dblp -1980 and Dblp -2006, in Fig. 4 j, k, respectively. Both of these networks are coming from the same dataset ( Dblp ), but they represent different time snapshots of the graph. The Dblp -1980 graph has about 5K nodes and 9K edges, while the Dblp -2006 graph has 405K nodes and 1,5M edges. Moreover, the first graph is contained into the second. Comparing their robustness indices, it is clear that the larger network is much more robust than the smaller one. A similar argument can be used to justify the difference in robustness properties of the graphs Ca-Gr-qc and Ca -hep -th (Fig. 4 h, i). This is a first evidence that the robustness of a graph is not a consistent graph property with respect to the evolution of graphs , but as we will present in Sect. 6 ,the robustness changes over time, showing interesting patterns.

Finally, our findings for static graphs are in accordance with previous studies related to the quality of the community structure in large networks. In [ 25 ], the authors observed that the best communities in large networks correspond to small subgraphs up to 100 nodes, and the quality of a community (obtained by a measure such as modularity or conductance) decreases while the size of the community increases. 5.3 The effect of core X  X eriphery structure In a recent work, [ 25 ] examined the structure of several large-scale social and information networks and their observation suggests that such graphs follow a core X  X eriphery structure. That is, graphs are typically considered that are composed by a sparse core with no well-defined structure, along with the periphery, i.e., small groups of nodes X  X alled whiskers  X  X hat are barely connected to the core via a very small number of edges. Although the core does not have any clear structure, it has been shown that it is not governed by randomness, since the number of edges within core is more than the expected one (in case of random graphs). Furthermore, whiskers present diverse shapes and sizes and typically, they are organized into layers according to the number of edges used to be connected to the core. The whisker types with interesting properties are the 1-whiskers, i.e., maximal subgraphs that are connected to the core via a single edge. Leskovec et al. observed that these subgraphs are responsible for the best communities in the graph, in the sense that they achieve the best score among all subgraphs, according to some clustering quality measure (e.g., conductance).

In the experimental results presented previously, we observed that large-scale social graphs tend to be highly robust. An interesting question is how the robustness is affected by the previously described core X  X eriphery structure. Taking into consideration that in many real graphs, a large portion of their nodes and edges belong to 1-whiskers (e.g., the 1-whiskers of the Youtube graph include around 60% of its nodes and 24% of its edges), it is important to examine how the robustness of the graph is affected if we remove those 1-whisker nodes.
To isolate 1-whisker nodes and keep only the core of the network, we apply the method proposed in Leskovec et al. [ 25 ]. More precisely, the core should correspond to the largest bi-connectedcomponentofthegraph,i.e.,tothelargestsubgraphinwhichtheremovalofasingle edge does not affect the connectivity. Therefore, we retain only the largest bi-connected com-ponent of each graph and we compare the r k index of this  X  X educed X  graph to the initial one.
Table 3 shows the results of the r k index for the graphs without 1-whisker nodes, compared to the r k index of the original graphs. Additionally, the last column of the table depicts the fraction of nodes within the core after removing 1-whiskers. Notice that, in many cases, a relatively large portion of nodes and edges correspond to the whisker subgraphs. As we can observe, in most of the examined networks the robustness index r k does not change significantly, meaning that the robustness of the graph is not strongly affected by these barely connected subgraphs. Moreover, the same behavior occurs in graphs with both high and low robustness (graphs in Table 3 with low and high r k index respectively). One should expect that graphs with high robustness (like most of the graphs studied in this paper) should improve their robustness only a little after the removal of 1-whiskers. This expected behavior could be explained by the fact that whiskers correspond to sparsely connected subgraphs, that affect the expansion properties of the graph. On the other hand, it is more expected that graphs with initially low robustness and high r k index (e.g., Ca -gr -qc , Ca -hep -th and Dblp -1980 in Table 3 ) should achieve a greater improvement in their robustness due to the effect of whiskers (since they are barely connected to the rest of the graph). For example, in the case of the CA -gr -qc graph in which almost 37% of its nodes and 22% of its edges belong to whiskers and were removed, the r k index was improved by a factor of 0.03% which is relatively small. That way, the portion of the graph that finally belongs to the core is a factor that affects the robustness index. As we can see from Table 3 , in graphs where only a small fraction of nodes and edges is retained after removing 1-whisker nodes (e.g., Email -EuAll and Youtube graphs), the robustness is substantially improved.

Additionally, the above behavior can possibly be explained by examining more carefully the observed core X  X eriphery structure. As the authors in Leskovec et al. [ 25 ] note, the core itself has a core X  X eriphery structure; now the periphery is composed by 2-whisker nodes that are connected via two edges to the core. Therefore, in most times, the produced graphs have a relatively small improvement in their robustness. 5.4 Robustness of largest connected components Most of the related works about the structure of real-world graphs focus on the Largest Connected Component (also called Giant Connected Component X  X CC), i.e., the largest connected portion of the graph (e.g., see [ 37 ]). To some extend, this approach can intuitively provide valuable insights about the overall structure of graphs; typically, GCCs contain the largest portion of nodes and edges, and therefore, they can be used as  X  X ood graph representatives X  for the overall structure. However, in order to better examine and fully understand the properties of large graphs, it would be more suitable if we also study parts of the graph that do not belong to the GCC, gaining a more complete view of the underlying structure. In the related literature, only a few works have examined the structural properties of the next largest connected components (e.g., [ 23 , 35 ]).

The results presented in the previous paragraphs concern the robustness of the GCC and suggest that most of the examined graphs tend to be highly robust. Here we study the robustness properties of the non-Giant Connected Component of the graphs and more specifically the second Largest Connected Component (CC2); we try to examine possible deviations compared to the robustness of GCC. We performed experiments on four of the datasets presented in Table 2 . Note that, in most cases the CC2 of the graphs tend to have small size (number of nodes and edges), and therefore, we do not report results for extremely small CC2 subgraphs. Figure 5 depicts the discrepancy plots and a schematic representation of CC2s of the studied graphs.

First of all, the CC2s of the examined graphs follow diverse connection patterns. For example, in the Youtube graph (Fig. 5 g), CC2 is mainly formed by a big star along with a few other nodes and edges. Regarding the robustness, almost all of the CC2 subgraphs tend to have decreased robustness (higher r k index) compared to the one of their corresponding GCCs (Fig. 4 ). This can also be observed from the discrepancy plots, where there in no clear linear correlation between the normalized subgraph centrality and the principal eigenvector. Our observations suggest that the structure of CC2 is governed by different robustness patterns compared to the GCC. It seems that the structure of CC2 is more close to a modular one, in the sense that it is more easily to isolate group of nodes by deleting only a few edges (therefore lack of robustness). We consider that this observation can intuitively be explained by the temporal properties of the robustness in social graphs. Figure 6 depicts the evolution of the r k index over time ( Dblp -2006 graph), for the GCC and the CC2, respectively. As we can see, in most of the time points, CC2 has almost a similar robustness behavior as the one of GCC, where in some cases (green labeled points) the component with the best robustness (GCC and CC2) is alternated. The experiments that presented in Fig. 5 concern snapshots of the CC2 subgraphs at the last time point of their evolution. As we will see shortly in Sect. 6 , after a specific time point during the evolution of the graph (regarding the addition/removal of nodes/edges), the size of the CC2 stops increasing, while on the other hand, GCC absorbs the largest portion of nodes and edges (this phase transition point is also known as gelling point  X  marked with red color in Fig. 6 ). That way, CC2 and other smaller connected components constantly contain a relatively small portion of the whole graph, something that can explain the observed robustness properties of CC2.

We also note that in the case of the Ca -gr -qc graph, the robustness of CC2 is slightly better than the one of GCC ( r k = 0 . 0463 compared to r k = 0 . 5302). In this case, the GCC of the graph is not robust at all, but as we can see from Fig. 5 a, the CC2 subgraph is comprised of a relatively well-connected set of nodes. 6 Time-evolving graphs and anomaly detection In the previous section, we observed thatmostof the studied socialgraphs tend to be extremely robust, presenting very low r k index. In this section, we focus on time-evolving social graphs, in the sense that real graphs are not static but typically change over time with the addi-tion/removal of nodes/edges [ 29 ]. To this direction, we try to answer the following questions: 6.1 Fragility evolution As we mentioned earlier, large real-world graphs present high robustness (good expansion properties) and thus poor community structure. However, a crucial question that naturally arises for time-evolving graphs is how these properties change over time. In order to answer
The fragility evolution pattern can be considered as a natural explanation for the structural differences (regarding robustness and community structure) between different scale graphs. This means that we have a more concrete view of how the robustness (and consequently the community structure properties) changes over time, and how the graph gradually improves its robustness. Finally, it seems that the r k index is an alternative way for finding the gelling point [ 35 ] of a graph; more importantly, it can be estimated more efficiently than computing the effective diameter. 6.2 Anomaly detection Here we present how the fragility evolution of a graph can be utilized for spotting outliers and detecting anomalies in graphs over time. The idea is to examine the r k index over time, trying to identify and track abrupt changes and deviations. Since for all the examined graphs presented previously, the evolution of the r k index is similar, presenting a specific pattern (the fragility evolution pattern, i.e., the r k increases at the first time points, and after the gelling point it starts decreasing gradually), sudden deviations from this behavior can possibly correspond to anomalies, and thus the specific time snapshots can be tagged as outliers.

Figure 8 presents the fragility evolution of the Dblp co-authorship graph (it is the same as in Fig. 7 a but in linear-logarithmic scales). We can observe that at two specific time points that correspond to 2002 and 2003, the r k index presents a strange behavior. More precisely, after 2001 the r k index decreases sharply and this behavior continues until 2003. After 2003, the robustness of the graph returns back to its normal behavior (it still continues to decrease, but this happens gradually). These two time points present large deviation from the  X  X ormal X  behavior of the graph, and thus, they can be classified as anomalies. In other words, it seems that for these two specific years the graph becomes extremely robust (very low r k index), but after that the robustness decreases abruptly and the graph acquires better community structure. However, are these two time graphs (2002 and 2003) really outliers, as the r k index suggests? 6.2.1 Explanation After 2001, a large number of new publications were introduced to Dblp , which explains the downward slope of the r k index. These new publications make the co-authorship graph very robust. Until then the focus of Dblp was mostly on databases and logic programming. However, after 2002 X 2003 new research fields became important, and many old conferences and journals from these fields were added to Dblp , with focus on current publications (not in the past papers of these fields). These new fields formed new communities in the graph, decreasing the robustness, which explains the reason why r k increases after 2003. Thus, the r k index is capable to capture structural differences in the graphs and it can be used for anomaly detection in time-evolving graphs. 3 7 Robustness analysis in graph generating models Having examined the robustness properties of several large-scale social graphs, in this section we focus on investigating this property on graphs that have been produced by some well-known generating models, and we are trying to answer the following question:
Answering the above questions is a quite important topic due the necessity of designing realistic graph models with properties close to the ones of real graphs. Then, the graph mod-els can be used in a wide range of applications, such as benchmarking of graph algorithms, graph sharing (sharing of realistic but non-sensitive graphs produced by a model) and graph evolution (e.g., how the Facebook social graph should look like in one year from now?). Fur-thermore, a particularly significant point is that graph generators can provide useful insights about the underlying generative process of real-world graphs, toward a better and more clear understanding of their structure and formation dynamics.

In this work, we focus our attention on three well-known and widely used graph generation modes, namely the preferential attachment (PA) model [ 6 ], the Kronecker Graph model [ 26 ] and the Forest Fire model [ 28 , 29 ]. Although all these models do not capture exactly the full set of properties of real graphs, they all produce heavy-tailed degree distributions and are good representatives of most other models. We also note that we do not perform experiments with the Erd X s-R X nyi random graph model [ 14 ], as its properties are far away from those of real graphs [ 9 ].

Furthermore, we are interested in both a qualitative and quantitative studies of the robust-ness behavior of graph models. That is, we want to examine to what extend the models can reproduce qualitatively the observed properties in general, i.e., the high robustness and the fragility evolution patterns as trends of real graphs, as well as their ability to capture (fit) the observed r k index of real graphs. Regarding the last point, a direct comparison between the r k indices would not be appropriate due to the nature of the r k index; we argue that by comparing the order of magnitude of r k we can draw more useful conclusions. 7.1 Preferential attachment model The PA model was introduced by Barab X si and Albert [ 6 ] to capture the heavy-tailed degree distribution of real-world graphs. The model operates similar to a rich-gets-richer mecha-nism, in the sense that high-degree nodes are more probable to increase their degree during the evolution process. More precisely, the PA model can be described by two parameters: (i) the number of nodes n in the produced graph and (ii) the number of edges m created by each new node introduced in the graph. At every iteration step, a new node is added to the graph. The node forms m edges by connecting to m already existing nodes preferentially, i.e., each of the m endpoint nodes is selected with probability proportional to its degree. It has been shown that the PA network model, among other properties, presents a heavy-tailed degree distribution. However, as it has been discussed in the related literature, the PA model is not able to reproduce important temporal properties of real graphs, namely the densification power law and the shrinking diameter.
 Fitting process Let us now discuss how can we set the two parameters of the PA model ( n , m ) in order to generate graphs with properties (i.e., number of nodes and edges) similar to those presented in Table 2 . The number of nodes n is set equal to the number of nodes in the original graph | V | . Since each of the n =| V | nodes in the network creates m edges, the total number of edges would be | E |= m  X | V | . Therefore, parameter m is set to be equal to the density factor m = | E | / | V | .

In general, we know that PA graphs are robust in random failures, but tend to be vulnerable under targeted attacks to high-degree nodes [ 3 ]. Here we examine how the r k robustness index behaves and if the PA model is capable to reproduce the high robustness (see Sect. 5 )andthe fragility evolution patterns (see Sect. 6 ). Table 4 shows a quantitative comparison between the r k robustness index of the original graph and the one of the artificial graphs produced by the PA model, following the previously described fitting process. For every graph, we also show the value of parameter m of the PA model.

Comparing the r k index with that of Fig. 4 (also second column of Table 4 ), we can observe that in most cases the PA model fails to reproduce the robustness properties of the graphs. Although in some cases it seems that the r k index is close enough to the original one (e.g., in the Wiki -Vote graph), we consider that this mainly happens due to the settings of parameter m (i.e., m = | E | | V | ). That is, the r k value of each PA graph, depends heavily on the number of edges that each incoming node creates, i.e., parameter m of the model.

To provide a more thorough examination of this behavior, we study the robustness index of PA graphs at different scales and for several values of parameter m . Figure 9 depicts the r value for PA graphs of various sizes (5 X 350K nodes) and for a wide range of values for parameter m ( m =[ 2 , 4 , 6 , 8 ] ). We can observe that the PA model fails to qualitatively reproduce the fragility evolution pattern ( r k initially increases and after a time point it starts decreasing gradually leading to robust enough graphs). More precisely, the first observation is that for small values of m (i.e., m =[ 2 , 4 ] ), the robustness seems to remain almost constant, independently of the graph size. This can be explained by the structural properties of the graphs generated by the PA model. In fact, it has been shown that the PA model produces graphs that exhibit constant conductance and spectral gap [ 36 ]. Thus, the robustness of the graph, as captured based on the notion of spectral gap, will also be constant as the graph evolves X  X hich is not the case of real social graphs. We also noticed that, as parameter m increases, the r k index presents a small upward trend with respect to the size of the graph.
Furthermore, for larger values of m , the robustness is improved ( r k index decreases); this can be considered as an evidence that if each new node creates more edges in the graph, the overall connectivity of the graph potentially will increase. However, we can observe that even for the largest examined value of m = 8 and the largest graph of | V |= 350K nodes, the r k index cannot reach extremely low values similar to the ones of real-world graphs. As we can see from Table 4 , this can only be achieved for very large values of m (e.g., as the WikiVote graph).

To conclude, we observed that the PA model cannot mimic the robustness evolution of real graphs, mostly due to the constant conductance and spectral gap properties. Definitely, the PA model does not reproduce several other recently observed properties of real-world graphs, such as the shrinking diameter [ 29 ]. 7.2 Kronecker model The second model that we have examined in our study is the Kronecker graph model and the ability of Kronecker graphs to reproduce the observed robustness patterns. The Kronecker model was introduced by Leskovec et al. [ 26 ] as a simple generation model for real-world graphs, based on the Kronecker product of matrices. More precisely, assuming an initiator adjacency matrix A 1 of size  X  , the Kronecker graph after k iterations is defined as the graph with the following adjacency matrix: r of the graphs generated by the Kronecker model following the above fitting procedure, for two different sizes of the initiator matrices, namely 2  X  2and3  X  3. For comparison reasons, the second column presents the r k index of the original graphs (as described in the experiments of Sect. 5 ). As we can observe, for some of the examined graphs, the robustness of the artificial Kronecker graphs is relatively close to the one of real graphs. Note that, we do not perform absolute comparison between the original and reproduced r k values.Insucha case, the absolute or relative error of r k values for most of the studied graphs should indicate that the reproduced values are far away from the original ones. A direct comparison of the indices would not be appropriate due to the fact that, during the iterations of the Kronecker product, the size (number of nodes and edges) of the produced graph does not match exactly to the size of the original one. Nevertheless, we are mostly interested to qualitatively examine whether the Kronecker model can capture the existence or not of robustness in graphs, and as the results suggest, there are cases of graphs (of both high and low robustness) that the model performs relatively well. However, in a few graphs ( Email -EuAll , Youtube and Dblp -2006), the Kronecker models fails to reproduce the observed robustness properties (even at a qualitative level).

Regarding the fitting capabilities of 2  X  2and3  X  3 initiator matrices, both of them perform qualitatively similar. However, in many cases, the r k values produced by these different size matrices deviate. This mainly happens due to the way that the Kronecker product of matrices (or graphs) works. As we mentioned above, it is quite difficult to match the exact size of the graph; at every iteration of the Kronecker product, the size of the corresponding graph is raised to a power that depends on the size of the initiator matrix (square and cubic respectively).
Furthermore, we have examined the ability of Kronecker model to qualitatively reproduce the fragility evolution pattern, i.e., how the robustness of the graph changes while the graph evolves over time. More precisely, for three graphs of Table 2 , we have generated the Kro-necker graphs beginning from the corresponding 2  X  2 initiator matrices produced by the KronFit method. For every iteration of the Kronecker product, we have computed the r k index and the results are presented in Fig. 10 .

As we can observe from Fig. 10 , the robustness of the generated Kronecker graphs improves gradually with respect to the number of Kronecker iterations ( r k index decreases). This observation suggests that the Kronecker graphs can qualitatively capture the evolution of the robustness properties of real graphs, reproducing the fragility evolution pattern. In other words, the Kronecker product can potentially produce graphs with ever increasing robustness (until some point). Of course, different settings for the initiator matrix will cause a slight devi-ation to the form of the fragility evolution pattern, as the different curves in Fig. 10 suggest.
We should note here that in some cases and depending on the graph dataset, we observed that the Kronecker model cannot capture exactly the small upward trend on the fragility evolution pattern (i.e., the time points where the robustness seems to decrease since the graph is still in an establishment period). This mainly happens due to the fact that the size of the produced graphs (at every Kronecker iteration) is increasing quickly due to the effect of the Kronecker product. Therefore, only for a very small number of the very initial snapshots, the robustness of the graph tends to be low (e.g., the first three iterations of the Kron Slashdot graphinFig. 10 ).

To conclude, we found out that Kronecker graphs are able to capture the temporal evolution of the robustness index. However, the KronFit process, in many cases, cannot reproduce the actual robustness indices of static graphs. 7.3 Forest fire model The last graph generating model that we have examined is the forest fire (FF) model [ 28 , 29 ]. The basic idea here is to design a mechanism based on which new-coming nodes v i , i = 1 ,..., k are attached to existing nodes of the graph G , in such a way that the resulting graph will obey important properties, such as heavy-tailed degree distribution, the densification power law and shrinking diameter. At each time step t of the model, a node v that is entering in the network chooses an ambassador node w randomly and creates a link to w . Then, based on two parameters, namely the forward burning probability p f and the backward burning probability p b , node v selects a subset of w  X  X  neighbors to create out-going and in-coming edges, respectively. This last step is recursively applied to all v  X  X  new neighborhood nodes. Fitting process Here we describe how to fit the parameters of the FF model in order to generate graphs that are close the those of Table 2 . Since in this work we are interested in undirected networks, we consider only the forward burning probability p f , and following the discussion in [ 29 ]weset p b = 0 . 32 for the backward burning probability. Thus, given as input the number of nodes | V | of the original graph, we search the parameter space of p f using step of  X  = 0 . 001, in order to generate a graph with number of edges | E | close to the real one [ 45 ]. Table 6 gives the values of p f for each of the examined dataset.
Next, we examine how the graphs generated by the FF model behave in terms robustness dynamics. Table 6 shows the robustness index r k for the FF synthetic graphs, after selecting appropriate values for the forward burning probability p f in order to fit the size with that of the original graph (for comparison reasons, we also provide the r k index of the original graph). We can observe that for most of the examined graphs, the robustness of the FF artificial graphs is relatively close to the real one. In other words, the FF model is able to qualitatively reproduce the observed robustness r k , both in graphs with extremely small r k (e.g., Wiki -Vote dataset) and in graphs with large r k (e.g., CA -hep -th graph). In many cases (e.g., Slashdot graph), the r k index of the generated graphs is almost the same to the one of the real networks, while in some other cases, although the generator still produces graphs with small r k index, the absolute values are not very close (e.g., CA -astro -ph graph). Again, we stress out here that an absolute comparison of these values would not be fair due to the nature of the r k index. Nevertheless, we can infer that the FF model has the ability to generate graphs with robustness properties close to the real ones.
 An interesting point here is the behavior of the Email -EuAll graph. In this case, the FF model fails to reproduce the observed r k index, where the produced graphs tend to be extremely non-robust ( r k = 4 . 4598). One possible explanation of this observation can be derived by the settings of the forward probability value, i.e., p f = 0 . 119, which tends to be away from most of the p f values for the other datasets ( p f values are roughly in the range [ 0 . 25 , 0 . 39 ] , as shown in Table 6 ). That is, in order to match the number of edges of the targeted graph, the value of p f is set relatively low. According to [ 29 ], this forward probability value lead to graphs with small densification factor, something that explains the observed property. Note that, the Kronecker model presented earlier also fails to reproduce the observed property for this graph dataset.

We have also examined the ability of FF model to reproduce the way that the property of robustness changes as the graph evolves over time (fragility evolution pattern). FF has been shown to produce graphs that densify over time and their diameter shrinks X  X hich is the case different number of nodes (100 X 10K), we study the behavior of the r k index. That way, for each different value of p f , we consider that we have a graph that evolves over time based on the properties of the FF model and we are interested to examine the temporal evolution of the r k index.

Figure 11 a depicts the evolution of r k under the FF model. As we can observe, different values of p f typically lead to different behavior of the r k index, as the graph grows (note that, for small graphs, e.g., &lt; 1K nodes, there is no clear difference in the behavior of the robustness). For small values of p f , i.e., p f = 0 . 3and p f = 0 . 32, the r k index is almost constant as the size of the graph increases. This behavior clearly deviates from the fragility evolution pattern observed in real graphs. To gain further insights about this behavior, we have also examined the evolution of the effective diameter under the FF model, for these values of p f .AswecanseefromFig. 11 b, in the case of p f = 0 . 3and p f = 0 . 32 the diameter increases over time, something that deviates from the shrinking diameter pattern of real networks [ 29 ].

The rest values of p f present interesting behavior. When p f = 0 . 34 and p f = 0 . 36, the r index behaves similar to the one in real graphs, reproducing the fragility evolution pattern; for the very first small graph snapshots, r k is close to one indicating absence of robustness, while as the size of the graph increases, r k decreases smoothly leading to snapshots with improved robustness index. As we can also observe from Fig. 11 b for these two values of r , the diameter of the graph initially increases for a few time points while the size of the graph is relatively small; however, after a specific point, the diameter starts decreasing and almost stabilizes for the rest points. Notice that, the change point roughly corresponds to the change point of the r k index(seealsoSect. 6 ). For the last two values of the forward burning probability p f , i.e., p f = 0 . 38 and p f = 0 . 4, the FF model still approximates the evolution of the r k index, but in a more  X  X brupt X  way, where graphs tend to become extremely robust very quickly. Additionally, the evolution of diameter of these graphs is slightly different from the previous case ( p f = 0 . 34 and p f = 0 . 36), where except from the smaller value, the shrinkage is more evident (especially for p f = 0 . 4). To conclude, for values of r k in the range [ 0 . 34 , 0 . 36 ] we observed that the FF model is able to reproduce the fragility evolution pattern. Note that, for a similar range of values, the authors of [ 25 ] observed that the FF model is able to reproduce the community structure of real graphs, as captured by the NCP plot (see also paragraph 5.3). 8 Discussion and conclusions In this paper, we studied the problem of estimating the robustness of social graphs, using the notion of expansion properties [ 31 ]. Although our work focuses on social networks, the proposed robustness metric r k can also be applied to other types of graphs from different disciplines (e.g., biological networks). The main contributions of this work are with respect to the following points:  X  Fast robustness index We presented a measure that captures in a single number both  X  Application on real graphs We applied the proposed r k index to several large real graphs,  X  Abnormality detection We showed how the observed patterns related to the r k index can  X  Robustness properties of graph generating models We studied several well-known graph
In addition to the above points, the proposed robustness measure can have further practical applications, and one of them concerns the community detection problem. In particular, the r index can give a fast estimation of the existence of  X  X ood X  quality cuts in the network, and this knowledge can be further utilized by the community detection algorithm.

Aswehavealreadydiscussed,theproposedrobustnessestimationmethodiscloselyrelated to the existence of communities in real graphs. As future work, it would be interesting to examine how the r k index is affected under the removal of nodes based on their degree (i.e., deletion of high-degree nodes or randomly selected ones). This will help us to further study and understand the relationship of the proposed metric with the robustness assessment techniques from the area of network science (e.g., the work by Albert et al. [ 3 ]). Furthermore, another future research direction could be the extension of the method to the MapReduce framework for studying the robustness of billion-node graphs.
 Appendix In this Appendix, we provide a more detailed description of how the property of large spectral gap along with the subgraph centrality measure leads to the measure  X ( G ) [ 17 ]aspresented in Sect. 3 . First of all, the subgraph centrality measure is defined as [ 15 ] where the diagonal entry A ii of the matrix A contains the number of closed walks of length that begin and end at the same node i . Focusing on unipartite graphs and keeping only the odd length closed walks 4 In order to avoid cycles in acyclic graphs, the SC can be expressed as
If the graph has good expansion properties (and thus high robustness), it means that  X  1  X  2 ,andthen u 2 i 1 sinh ( X  1 ) This means that for graphs with high robustness, the principal eigenvector u i 1 will be related to SC ( i ) as This relation suggests that if the graph shows high robustness, u i 1 will be proportional to SC ( i ) and a log X  X og plot of u i 1 versus SC ( i ),  X  i  X  V will show a linear fit with slope 1 / 2 (the discrepancy plot).
 References
