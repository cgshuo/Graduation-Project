 1. Introduction
Block Matching Motion Estimation (BMME) is important in all video coding standards such as H261 (1993) , H.263 (2000) , MPEG1 (1993) , MPEG2 (1994) and MPEG4 (2000) . Motion estimation represents the most computational module in the coder. It con-sumes up to 60% of total encoding time ( Chen et al., 2002 ). BMME algorithms are used to reduce the temporal redundancy between the adjacent frames. Every frame is divided into N N non-overlapped blocks known as macroblocks and every block in the current frame is matched with the search area of (2 p + N (2 p + N + 1) de fi ned in the reference frame, where p is the maximum displacement allowed. For every block in the current frame, the best match block in the reference frame within the search area is found. Fig.1 shows the block matching based motion estimation technique. The displacement of the best block from the previous frame to the candidate block in the current frame represents the motion vector (MV).

There are many block matching criteria available ( Barjatya, 2004 ), among which the most popular and least computational expensive matching criteria is Mean Absolute Difference (MAD). MAD is expressed as follows: MAD  X  1
 X  where C ij represents the pixel value in the macroblock of the macroblock of the reference frame in poition ( i , j ) and N represents the total number of pixels in the macroblock.

Among the various block matching algorithms, Full Search (FS) ( Jain and Jain, 1981 ) is the brute force algorithm, which computes all possible locations within the search area. This algorithm is the most optimal but it is also the most time consuming one during the search of all possible candidates within the search range.
Hence, it is important to develop various fast block matching algorithms (BMA) for real time video coding applications. With this in view, many fast ME algorithms such as Three Step Search (TSS) ( Koga et al., 1981 ), New TSS ( Renxiang Li et al., 1994 ), Four Step Search (4SS) ( Lai-Man and Wing-Chung, 1996 ), Block-based Gradient Descent Search (BGDS) ( Liu and Feig, 1996 ), Diamond Search (DS) ( Shan and Kai-Kuang, 2000 ), Adaptive Rood Pattern
Search (ARPS) ( Yao and Kai-Kuang, 2002 ) etc., are developed to reduce the computational complexity. There are three important factors in developing the ME algorithms and they are selection of initial center, search pattern and search strategy. The computa-tional performance and the Peak Signal to Noise Ratio (PSNR) of the algorithm depend on these three factors.

All these fast motion estimation algorithms have the assump-tion of the monotonically decreasing block distortion function. During the fi rst stage, a limited number of search points are tested.
Then the search is continued based on the point where distortion is smaller in the previous stage. These algorithms start with a search pattern with constant search range. In real-world video sequences, local minimum points are spread across the search window. So these algorithms can easily fall into local minima without acquiring accurate motion vector, especially for large motion ( Yui-Lam and Wan-Chi, 1999 ). The use of fi xed pattern prevents the algorithm from locating the actual position of the global distortion minimum.

Recently to address the problem of local optima in ME, some researchers have proposed the probabilistic searching method using Genetic Algorithm (GA) ( Li et al., 1999 ; Li et al., 2000 )andParticle Swarm Optimization (PSO) ( Ren et al., 2006 ; Yuan and Shen, 2008 ;
Jing and David Pan, 2012 ). These algorithms are used to achieve global optimal solution, which cannot be obtained by traditional
BMA ' s. On the other hand, collective intelligence enabled by the particle swarm optimization (PSO) technique was found effective in alleviating the problem of local optima ( Kennedy and Eberhart, 1995 ).

In conventional PSO, the initial positions of the particle are selected at random due to which fast convergence of the algorithm is not achieved easily. When compared to the existing fast block matching algorithms, the conventional PSO based ME cannot compete well in terms of computational complexity, as the fast
ME algorithms involve a very small number of candidate blocks to be visited and examined within a few steps. In this work, a new approach is proposed for reducing the number of search points using pattern based PSO (PBPSO). The simulation results show that the new method achieves signi fi cant improvements over other fast block matching algorithms in terms of computational cost and estimation accuracy.

The rest of the paper is organized as follows: Section 2 provides background knowledge of the PSO model. In Section 3 , the block matching algorithm based on PSO is discussed, and the new pattern based PSO algorithm with certain set of strategies for PSO imple-mentation is developed. The simulation results and discussions are demonstrated in Section 4 . Finally, Section 5 concludes the paper. 2. Basic PSO model
PSO is a stochastic optimization technique based on a social psychological model of social in fl uence and social learning. It re fl ects the foraging behavior of birds. In PSO, each individual learn according to its own and its neighbors to optimize the performance during the search iteration. The basic PSO was initially introduced by Kennedy and Eberhart in 1995 ( Kennedy and Eberhart, 1995 ). It is a population based search algorithm and starts with an initial population of randomly generated solutions called particles. Each particle has a fi tness value and a velocity to adjust its direction according to the best experiences of the swarm, to search for global optimum in the n -dimensional solution space.
The velocity of a particle is updated based on that particle personal best position (pbest) and the global best position (gbest) found by all particles in the swarm.

PSO re fl ects the swarm behavior and the particles represent points in n -dimensional space. A swarm consists of  X  M  X 
A potential solution is represented by a particle that adjusts its velocity and position according to Eqs. (2) and (3) .

V  X  V id  X  C 1 rand  X  X  X  P id  X  X id  X  X  C 2 rand  X  X  X  P gd  X  X id
X  X  where  X  i  X  is the index of the particle i  X  1,2, ... M , of the particle in n -dimensional space, V id and V  X  id represents the velocity of particle  X  i  X  in time t and t + 1 respectively. X the position of i th particle in time t and t + 1 respectively. P the entire swarm. Constants C 1 and C 2 represent the weighing terms that pulls each particle towards pbest and gbest positions known as acceleration coef fi cients. Generally both are set to the value of 2. 3. PSO for motion estimation
Block matching algorithm fi nds the best block in the search space, which can be devised as an optimization problem ( Du et al., 2005 ). Here PSO can be applied to solve the block motion estimation problem. In PSO based block matching, the group of particles fl ies through the search window in the reference frame and fi nd the best matching block for the candidate block in the current frame. The initial locations of the particles are randomly chosen in a search space. This discovers optimal regions of the space through a process of individual ' s emulation of the successes of their neighbors.

A search method based on conventional PSO ( Polli et al., 2007 ), needs a large number of particles over a large number of genera-tions. But it cannot compete in terms of computational ef with existing fast matching algorithms, where only a small number of candidate blocks are selected and examined with few steps. In order to avoid overheads in ( Wang et al., 2011 ) conven-tional PSO, it is modi fi ed to meet the constraints of low computa-tional complexity needed by the motion estimation. Many variations in PSO ( Ranganadhan nad Gorpuni, 2009 ; Zhang et al., 2011 ; Nagpal and Baghla, 2011 ; Zhang and Pu, 2012 ) have been developed to improve the accuracy and the speed of convergence found by the conventional PSO. 3.1. PSO Variants The original PSO does not have an inertia weight w . Shi and
Eberhart ( Eberhart and Shi, 2001 ) introduced the concept of inertia weight to balance the local and global search during the optimization process. Its value is typically setup to vary linearly from 1 to near 0 during the execution. The value of the inertia weight is set to 0.5 in this implementation. Hence Eq. (3) is modi fi ed as, V  X   X 
The acceleration coef fi cients C 1 and C 2 have a control over all particles velocity. The large values of C 1 and C 2 cause rapid move-ments of particles which pass over good regions. The smaller values result in slow movements towards good region. So PSO model with adaptive acceleration coef fi cients was proposed in 2004 ( Ratnaweera the convergence speed and optimization accuracy. The linear changes of C 1 and C 2 over time makes more investigation in the early stages, by attracting particle towards the best position. This encourages the convergence to a good optimum near the end of the process. The constants C 1 and C 2 are changed as time varying acceleration coef fi cients, where the velocity and position are updated according to the Eqs. (5) and (6) .
 V  X  id  X  w V id  X  C 1  X  t  X  rand  X  X  X  P id  X  X id  X  X  C 2  X  t  X   X 
X  X  where
C  X 
C  X  where w is the inertia weight set to be 0.5. The values of
C tively. The maximum number of iterations can be set as 5. 3.2. Particle position initialization
In conventional PSO, the particle positions are selected at random. In random selection, if the initial positions are away to global optima then the process may converge at a very slow rate.
To speed up the conventional PSO, the algorithm selects the initial position of the particles in a fi xed pattern. Many video sequences are considered with center biased and the search window is centered on the current block position. In center biased character-istics, the best match may be found within the small zone around the center block. Due to this characteristic, the particle initializa-tion around the center enforces most of the blocks not to reach the maximum iteration in the block matching procedure. Since many videos in real world is either stationary or semi stationary, the selection of particle positions around the optimal position can speed up the convergence of the algorithm.

In this proposed algorithm, totally nine particle positions are initialized around the center with either a diamond or a square pattern shown in Fig. 2 (a) and Fig. 2 (b). The initial particles are distributed equally in all eight directions to fi nd the matching MB in each direction with equal probability. 3.3. Termination strategy
In conventional PSO, more number of iterations is allowed to re fi ne the solution which leads to high computational complexity.
In block matching algorithm, the number of iterations is to be limited. The termination strategies used in this proposed algo-rithm are as follows: 1. When the total number of iterations reached a pre-determined maximum iteration number It max , which is set to 5. 2. When the MAD cost value of the gbest position remains same for the 3 iterations continuously, even if the It max is not reached. 3. When the gbest position is same as the candidate block position to be searched, even if the It max is not reached.
 3.4. Proposed pattern based PSO for motion estimation The algorithm for the proposed pattern based PSO (PBPSO) for
ME is summarized as follows: 1. Select the initial population with the fi xed pattern. 2. Calculate the fi tness of each particle. 4. Update the velocity and positions based on pbest and gbest using the Eqs. (5) and (6) . 5. Stop the evolution if any one of the termination strategy is satis fi ed. Otherwise go to step 2. 6. The gbest position gives the corresponding MV. 4. Results and discussion This section provides the comparison of proposed pattern based
PSO for ME with other existing BM algorithms. The simulation is done on the popular video sequences listed in Table 1 . These video sequences have different degrees and types of motion and are in different formats including QCIF(176 144), CIF(352 288), SIF (352 240). The video Container has gentle, smooth and low motion change and consists of stationary and quasi-stationary blocks. The videos Carphone and Foreman are moderately complex and contain medium motion content. The sequences Stefan and Tennis contain a rigorous motion, which is based on camera panning with translation and complex motion content.

Each frame is divided into macroblocks of size 8 8 with maximum displacement within the search range of 7 7pixels in both the horizontal and vertical directions. To compare the performance of the pattern based PSO for ME approach, different search algorithms such as FS, TSS, 4SS and DS have been imple-mented. The simulation results presented are based on the averages of the data (PSNR and search point) obtained from 50 repeated runs of the PSO-based algorithm to strengthen the statistical signi fi cance. Increasing the number of runs also yield only very negligible changes to the averages which do not differ signi fi cantly. For comparison, all six video sequences shown in
Fig. 3 were used. Simulations are performed on an Intel Core i3 2.1 GHz PC with 4 GB of memory.

The selection of number of iteration in iterative PSO is an important factor for designing the block matching algorithm. In order to limit the computation cost, the total number of iteration ( It ) allowed are to be limited. Generally, small iteration results in faster convergence with less accuracy. The large iteration leads to increased accuracy but with high computational cost. The maximum iterative number is selected to be fi ve, which is found in other studies to provide a tradeoff between estimated accuracy and computational complexity.
 Table 2 shows the performance of the conventional PSO with
PSO variants, where the particles are initialized in random posi-tions. The PSO with varying acceleration coef fi cient model gives the reduced number of search points with similar performance. As the acceleration coef fi cients have an impact of attracting the particle towards the best solution, the search points computed with varying acceleration coef fi cients is less when compared to the conventional PSO.

The performance of the algorithm is examined with the selection of various initial particle positions such as random pattern, diamond pattern and square pattern. Table 3 shows the comparison of performance based on initialization of various initial particle positions. From the results, it is observed that the square pattern yields high estimation accuracy and low computa-tional cost in terms of number of search points. Due to the center biased characteristics of the video, the particles initialized with fi xed patterns around the center speed up the convergence rate and reach optimal solution with high reduction in search points when compared to the random particle initialization.

Table 4 shows that the PSNR difference between FS and other fast BM algorithms. As it can be seen from the table, the FS algorithm has maximum PSNR value for any type of video when compared to all other algorithms because it performs exhaustive search within the search area. There is a minute variation in PSNR difference between FS and other fast BM algorithms for Container, Carphone, Foreman and Akiyo which have smooth motion. Also the
PSNR difference between PBPSO with other BM algorithms (TSS, 4SS, DS) is very less. For the high motion sequences, such as Stefan and Tennis , the content of the motion is complex and violent. In general, the performance is signi fi cantly decreased when compared to other algorithms. However, the PBPSO approach achieves better reduction in search points with a little compromise in quality.
The statistical signi fi cance of the difference in PSNR perfor-mances ( Table 4 ) between the various algorithms is done through the ANOVA (T. Veerarajan, 2002 ). Table 5 shows the two way classi fi cation method (Randomized Block Design) used to analyze the performance. In the table, Q 1 represents the sum of squares between rows, Q 2 represents the sum of squares between col-umns, Q 3 represents the sum of squares of residuals, Q represents the summation of all sums of squares, h and k represents the number of rows and columns respectively. From the F -table, the value at 5% level of signi fi cance is F 5% ( v 1  X  3, v 2 there is no statistical signi fi cance in the PSNR performances between the various algorithms F 0 (  X  3.0647, probability of sig-ni fi cance 0.06) o F 5% (  X  3.29).

The search ef fi ciency is calculated by counting the number of search points for MV estimation. Table 6 shows that the proposed
PBPSO algorithm always consumes the smallest number of search points compared to other fast BMA. The average number of search points checked by the proposed algorithm is 8.15 to 10.68, which is very less when compared to other algorithms.

The statistical signi fi cance of the difference in the results of 50 tical method given in Table 7 . The result of the statistical method shows that the difference between the outputs of the iterations is very small which is almost negligible. Hence, increasing the number of runs also give only very negligible changes to the performance average.
 The average speed improvement rate (SIR) is summarized in Table 8 for different algorithms. The SIR in % is given by
SIR  X  N 2  X  N 1  X  X  where N 2 is the number of search points used in Method2, while
N is the number of search points used in Method1.

The results as shown in Table 8 demonstrate that the proposed approach can signi fi cantly reduce the number of search points from 31% to 63% compared to other block matching algorithms.
Fig. 4 plots the frame-by-frame comparison of PSNR for different algorithms applied to Akiyo and Tennis sequence for the fi rst 50 frames. Fig. 5 plots the frame-by-frame comparison of average number of search points per block for different algorithms applied to Akiyo and Tennis sequence for the fi rst 50 frames. These fi gures show the reduction in search points with almost similar image quality. 5. Conclusion
In this paper, a new algorithm based on PSO has been proposed to reduce the number of search points in the block matching procedure. The conventional PSO has been modi fi ed with varying acceleration coef fi cients which provide accurate solutions in motion estimation problems with very low computational cost and good estimation accuracy. To reduce the computational cost, of selecting in random. As a result, the approach has signi reduced the number of search points when compared to other fast block matching algorithms. The proposed approach signi fi reduces the search points from 31% to 63% without degrading the image quality.
 References
