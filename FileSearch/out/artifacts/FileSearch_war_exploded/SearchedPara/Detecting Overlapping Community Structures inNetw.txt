 Many network systems demonstrate the characteristics of community structure, e.g., social network and biological net work. In general, a community (cluster or group) is a subset of tightly-linked ver tices where the connections among them are relatively denser than those cross to the rest of the network.

Recently, people in many domains, such as physicists, applied mathemati-cians and computer scientists, pay lots of attention to the community structure discovery. Many algorithms [1,2,3,4,5] have been developed. Most of them were related to graph partitioning. They divided a network into disjoint groups by minimizing the cost of cut-edges.

A majority of those community detecting methods rule that a vertex in a network attributes to at most a community. Therefore, they would never find out overlapping community structures, even though it might be valuable for some cases. In real world, a person could serve as the member of multiple clubs in a social network; a paper could involve several topics in a citation network; a kind of gene could be concerned with d iverse biological processes in a gene network, and so on.

Considering the example in Figure 1, we can partition the network (left one) into the communities (middle one) using the common community discovery algo-rithm. However, it seems to be more reasonable for the network to be partitioned into the communities (right one) becaus e some vertices might serve as multiple roles.

This phenomena arises a new issue in community discovery. Here, we hope to solve the problem with a new direction, i.e., finding out the overlapping commu-nities from seed expansion. It is a reasonable idea because it naturally extends seeds by adding vertices without considering whether the vertex has been a mem-ber of another community. But the expansion methods depend on good seeds [6,7]. Inspired by this, we try to use some graph partitioning methods to find the seed groups from global view and extend the seed candidates with random walks techniques from locally-optimal view. Meanwhile, the modularity function Q [1] which is popular in networks is chosen as the measure of overlapping commu-nity structures. It quantifies the differ ence between a community and its random community that has same structure but random connections between the ver-tices. Following this, the problem about whether the community structures have better Q value after random expansion is a key issue. In the fourth section, the analysis is presented.
 In this paper, we present a novel algorithm DOCS (Detecting Overlapping Community Structures) based on global partition and local expansion. Our con-tributions are highlighted as follows: 1. We apply the existing spectral parti tioning method to generate seed groups 2. A locally-optimal expansion process based on modularity Q is introduced. 3. In the real-world networks, we evaluate our DOCS algorithm from four as-
The rest of the paper is organized in to five sections. Sect ion 2 introduces the preliminary knowledge. Our algorithm framework is described in Section 3. Section 4 gives the theoretic analysis to the expansion process. We evaluate our algorithm with six real-world datasets in Section 5. Finally, the conclusion and future work will be given in Section 6. 2.1 Network Model The network can be modeled as a graph G = (V, E) , where the V is composed of N vertices and the E is the set of links (edges) between vertices. The results in this paper are discussed in unweighted and undirected graphs.
 Definition 1. If A =( A ij ) n  X  n is the adjacent matrix of a network, then We often use D =( D ij ) n  X  n to represent the diagonal matrix. D ij equals to k A ik when i is same as j , otherwise it is 0. The two matrixes are the basis for other matrixes, such as, the laplacian matrix L = D  X  A and transition matrix P = D  X  1 A .
 Definition 2. The edge border of a community S is and | B ( S ) | is the cutsize of the community. 2.2 Community Weight Functions There are many weight functions or metrics to evaluate the strength of community structures. For example, intensity ratio and edge ratio are defined in [6].
The most popular one is the modularity Q proposed by Newman and Girvan in [1], which becomes a kind of main criterion for evaluating the quality of commu-nity structures. It measures the difference between a community and its random community which has the same structure but random connections between the vertices. The modularity functions mentioned by [3,4,5] are its varieties.
For our algorithm chooses the spectral partitioning method to produce the seeds, we cite the Q formulation in [5]. If the network has a division of P k ( k is the number of communities), the modularity Q is: where A ( V ,V  X ) = u  X  V ,v  X  V  X  w ( u, v ). The w ( u, v ) is the weight of the edge between vertex u and v . For DOCS is discussed in the unweighted graph, we let w ( u, v )beone.
 edges that at least one of ends belong to the community c . The last one reflects the math expected value of the random community having same structure. A good community structure should have a high value on modularity Q. But maximizing the modularity Q is NP-hard [16]. The optimal solutions need exponential-time. Many algorithms seek to the suboptimal partition solutions. Based on the spectral graph partitioning methods and random walks techniques, we propose a new DOCS algorithm. For the optimal Q is NP-hard, our algorithm tries to seek the locally-optimal Q. The main steps are outlined below. 1 . Create the seed groups by choosing the partition results of the spectral bi-2 . Extend the seed groups with the lazy random walks techniques. At every time 3 . Choose a trade-off point between good modularity Q and overlapping rate,
DOCS algorithm chooses the graph partitioning results as special seeds, which reduce the probability of deflecting to bad communities in expansion. However, if the total number of edges in a community is below three, we abandon it as a seed for the reason that the special community candidate only is a line or a vertex and cannot reflect the main struc ture of target communities. The first phase will be introduced in the following subsection.

After the t -th step expansion in the second phase, the contributing vertices are identified and the Q of community candidates are computed. The community candidates are updated by adding the new vertices.

The overlapping rate referred in the framework will be defined later. 3.1 Identifying Community Candidates We have mentioned that the goal of identifying overlapping groups in networks is to find the relatively complete communi ty structure or seek better value in com-munity weight functions. So, it is wise to use some main bodies of communities as the seeds of target communities.

The main bodies of communities (here, named with community candidates) can be captured by some existing community-detecting algorithms, such as, Kernighan-Lin algorithm [12], spectral partitioning [5,13], hierarchical cluster-ing [15] and divisive algorithm [1]. Spectral partitioning method is based on the spectral analysis of a suitably-defined matrix which exhibits the global structure of network. It is indicated in [4,5,13,14] that this method has good performance on finding communities in graphs. We adopt a spectral bisection method with multi-level recursion to identify the community candidates.

Given an unweighted and undirected graph, DOCS coarsens the original graph into a series of higher coarsening level graphs. At each coarsening graph, the Fiedler vector of the laplacian matrix is mapped into next coarser graph, which further approximates the Fiedler vector for the coarsest graph. In the highest coarsening level, DOCS uses the spectral bisection algorithm to choose a parti-tion point based on the Fiedler vector which corresponds to the second eigen-vector of the laplacian matrix. According to the positive or negative value in the eigenvector, the vertices are assign ed to one part or another. The coarsest graph is split into two groups. The recursive partition is executed at each group until there is no partitioning clue. Finally, the partition is projected back to the original graph by going through a series of lower level graphs. The final partition results are chosen as the seed sets. 3.2 Expansion Process Given a set of seed groups, we can use a fixed-depth or random walks techniques to extend. The fixed-depth expansion method corresponds to a Breadth First Search tree. Their vertices have same expansion weight. The random walks tech-niques extend the neighbors of a vertex at random. The sequence of walks forms aMarkovchain.Lov  X  asz in [17] gives a complete explanation to the technique and indicates that its basic properties are determined by the spectrum of the graph. It is more efficient than fixed-depth expan sion. Here, we present a novel expan-sion process based on the lazy random walks techniques with weak conductance guarantees [11].

The expansion process is scaled by time t. At each time step, the scanned vertices are sorted in descending order with the degree-normalized probabilities [11]. If a new vertex brings better Q change to the community candidates, it may be absorbed as a new member of the community structures. For instance, figure 2 shows the process that a new vertex is added to the elliptical seed group.

The broken lines connected with the s eed group members are named as in-seedlinks, and the total number of broken lines is denoted by | IL | . Similarly, the real line pointing to outside are named as outseedlinks and the total num-ber of real lines are expressed by | OL | . Those lines effect the Q change of seed groups when the new vertex is added. Next, we use the modularity formulation to measure the Q change of seed groups.

If the initial seed group is expressed as S, the seed size is | S | and cutsize is |
B ( S ) | . Then, its initial Q value is: where | E | is the total number of edges in a network.
 After adding a new neighborhood vertex, the modularity Q becomes: The change value in Q is:
If the value is above zero, the new vertex is named as contributing vertex, otherwise it is called uncontributing one . The locally-optimal expansion process seeks the contributing vertices which i mprove the seed community structures.
After many steps, the mixing time of random walks is coming. If the graph is connected, the probabilities about vertices degree converges to a uniform sta-tionary distribution  X  v . The difference between them can be computed. De-pending on the difference, we can stop t he whole expansion process and some low-probability vertices can be safely pruned. 3.3 Overlapping Rate In this paper, overlapping only is one approach to discover the complete com-munity structures. We not only seek good Q value but also care the overlapping rate in real world. For example, the overlapping cost is considered in storage.
The overlapping rate can be defined by different user requirements. The usual one is: Definition 3. Given a set of communities { C m , ..., C j } in a network, they over-lap with community C i . The overlapping rate of community C i in the network is defined as the ratio: where COR is the abbreviation of Community Overlapping Rate. | C i | represents the total number of edges in the community i , | C i  X  C j | is the number of common edges in the communities i and j . In our experiments, we have a average on all the overlapping rates of the community candidates in a network and let Overrate denote the value.
 In this section, we will give a general analysis to the properties of DOCS ex-pansion process. After the t -th step expansion, the Q value of the community candidates are computed. That is how to add the scanned vertices in the t -th time step to the seed groups. The seed groups have been updated in the ( t -1 )-th time step.

In scan process, the contributing vertices and uncontributing ones are distin-guishingly flagged. The flags may improve the computing process. The following theorem presents this property.
 Theorem 1. If a vertex is not a contributing vertex to a community candidate in the t -th time step, it cannot bring better Q value to the computing of community candidate on modularity function.
 the seed size and cutsize. The vertex u is its uncontributing vertex. We discuss the theorem in two kinds of situations.
 Case 1: the current computing state is not added any vertex.

From the definition of uncontributing vertex, the value of Q u  X  Q 0 = | IL u | / |
E | X  (2( | S | + | B ( S ) | )  X | OL the uncontributing vertex cannot bring better Q value in the computing process. Case 2: the current computing state has added some vertices.

The current modularity Q of the community candidate is: Q =( | S | + | IL | ) / |
E number of inseedlinks and outseedlinks. They are the new links in seed group by absorbing the vertices. If we add the vertex u , the candidate gets the new state Q u and the change is: For Q u  X  Q 0 &lt; 0, we get Q u  X  Q &lt; 0. Hence, it cannot bring better Q change to the seed group and the uncontributing vertex u is useless in the computing process.

Based on the theorem, some useless ver tices can be safely pruned in computing process.

From the analysis to above case 2 in the theorem, we also find that the con-tributing vertices in scan process not always bring the better Q change in com-puting process. For a contributing vertex v , it is useful to the computing unless the value of Q v  X  Q 0 is above 2 | OL | X | OL v | / | E | 2 . So, the decision about whether adding a new contributing verte x to the seed group is effected by the contributing vertices which have b een added to the computing process.
If the | OL | is zero, the community candidate is recursively back to the initial seed group. For the first time to add a new contributing vertex to the seed group, we choose the most contributing vertex which brings the best Q value to the seed group to seek the locally-optimal goal. According to this rule, the rest contributing vertices are chosen for bringing best Q change to the current community state. At every computing s tate, the seed group absorbs the new vertex which is the best contributor to the current expansion step. So, we say that the seed expansion is locally-optimal at the t -th step.

In above section, we have presented that the expansion process is stopped when the expansion is close to the stationary state. At every time step, we add the new vertices to the community candidates and compute the modularity Q of the current expansion step. There will be a series of Q at the whole expansion process. From the initial step to the mixing one, we choose the expansion step which has the best Q value as the final seed expansion state which gets locally-optimal goal. We present the experimental results of D OCS model in real-world datasets which have diverse sizes from hundreds vertices to millions ones. Table 1 shows the features of datasets. The experiments w ere performed on a single processor of a 3.2 GHz Pentium Xeon with 2GB RAM, running Window 2K.

We evaluate DOCS from four aspects at each time step: the change on mod-ularity Q of whole graph(denoted as  X  Q), the Betterrate, the Bestrate and the Overrate.

The Betterrate is the ratio that the number of better community candidates to the total number of candidates in whole network. The better community can-didate has larger Q value than the initial one. The initial candidate refers to the state without any expansion. We show the rate using the blue columns in figures.
At each time step, the Q value may decr ease or increase. After many steps, there is a best expansion step. That is, the community candidate has best Q valueatthattimestep.

The Bestrate expresses the proportion of the community candidates owning best Q value in the given step, which is represented by the green columns in figures.

The last one is the Overrate. It is the average for all the overlapping rates of single community candidates. The grey columns in figures describe the in-formation. In the following experiments, the first step refers to the initial state without any expansion.
 5.1 An Example of Overlapping Community Structure Before analyzing our algorithm on above metrics, we present the example of overlapping community structure det ected by DOCS in the Zachary X  X  karate club network.

The Zachary X  X  karate club network is a dataset familiar to us in social network analysis. In figure 3, the vertices repr esent the 34 members of the karate club and edges indicate the ties between me mbers of the club. Many communities-detecting methods[1,2] sep arate vertex 1 with vertex 33 respectively represented the karate club X  X  administrator and its principal teacher, which correspond to the actual divisions in the club for the dispute between them. They often partition the network into two or more parts which is disjoint. Their methods cut many edges and the edges may lose some potential information. The green thin lines in figure 3 represent the edges that are possibly cut. If a vertex may belong to different groups, there is an interesting discovery. Performing our DOCS, we find that the vertices 5,6,7 and 11 are co nnected densely with vertex 1. If we admit vertex 1 to belong to two parts, the y get a relatively complete community structure and look like more reasonable. Perhaps, they are the potential ingroup which is showed by the red ellipse in figure 3.
 5.2 The Experimental Analysis of Six Datasets In order to clearly demonstrate the experimental results, we give a figure to every dataset. In the figures, we use two y -axes and one x-axis to represent bi-coordinate system. The Betterrate, Best-rate and Overrate are corresponding to the left y-axis which indicates the rate information satisfied the well-defined conditions. The  X  Q solely uses the right y-axis which reveals the change of Q value.Thex-axisshowsthetimesteps.
Figure 4 shows the four trends on karate and football datasets which are popular data in community-detecting problem. We can see that the  X  Q lines decreases sharply after several steps e xpansion. At the same time, the Overrate is above 0.5. The reason is that karate and football datasets have small graph size and every seed candidate has less d iameter, which make every community candidate overlap its most space w ith others only in several steps.
In the second step, they both have best value in Betterrate. Though the Q of whole graph is not better than the initial one, some of the Q values in single community candidates are better than their initial values. So, the step two is important in finding overlapping communities.

Next, figure 5 is the experiments about Protein interactions and NIPS coauthorships.

They have similar measure trends. At every step expansion,  X  Qincreases steadily and Betterrate has high value which approaches to 1. From this, we can see that overlapping expansion is significance which brings more complete community structure to most of single community candidates. Protein data has the top value of Bestrate in step four and NIPS at three. After several time steps, the Overrate of Protein changes fast than the one of NIPS.
Last, figure 6 is related with KDD citations and WWW. The KDD citations has smooth change on  X  Q after finishing one step expansion. And, all the com-munity candidates have better Q than the initial one. The Bestrate gets its top at the second step.

For WWW data, the blue Betterrate is similar to KDD citations, but the trend of  X  Q increases slowly not decreases as K DD data. The Overrate increases slightly and not is above 0.2 in the ten steps expansion. The Bestrate scatters at every step and the step three is its top in the figure.

From above experimental analysis, we can clearly see that the expansion with overlapping makes the single community candidate structures more complete. For the large-size data, it also brings the better Q value to the whole graph. Our DOCS algorithm validates the fact. There are some algorithms for finding overlapping community structures.
Baumes et al. present IS and IS 2 (improved edition) algorithms in [6,7]. The two algorithms iteratively scan vertices in graph until the weight function not increase. The algorithms b oth depend on having good seeds. Moreover, they cannot give theoretic analysis for the extending process and the process still can be improved. The RaRe and LA algorithms decompose the graph into disjoint components as initial clusters and then re turn each removed vertex to the clusters by the weight function. The replaced vert ices can belong to several clusters.
Palla et al. [8] think a community can b e interpreted as a union of smaller fully-connected subgraphs that share vertices. They present a clique percola-tion algorithm to find overlapping clusters. The algorithm focuses on densely connected-parts not sparse edges in netw ork. It suits to detect highly overlap-ping cohesive clusters of vertices. CFinder[9] is its implemented system.
Zhang et al.[10] detect overlapping comm unity structures from fuzzy cluster-ing view which permits a vertex to have fuzzy membership by a probability. When the probability of vertex is larger than a defined community threshold, the vertex is added to the community. In this paper, we propose a new algorithm based on the spectral graph parti-tioning methods and random walks techniques. The spectral graph partitioning methods find the seed groups from global view and the random walks techniques extend the community candidates with better Q value from locally-optimal view. In real-world testing datasets, we see that DOCS algorithm can extract complete community structures and overlapping is important to the communities.
In future, we will do further analysis in overlapping community structures and compare with the overlapping results from fuzzy cluster view.
 Acknowledgments. The work is done when the author visit the IBM China Research Laboratory. Thanks to Yue Pan for his encouragement and guidance.
