 This paper studies efficient mining of negative correlations that pace in collaboration. A collaborating negative corre-lation is a negative correlation between two sets of variables rather than traditionally between a pair of variables. It sig-nifies a synchronized value rise or fall of all variables within one set whenever all variables in the other set go jointly at the opposite trend. The time complexity is exponential in mining. The high efficiency of our algorithm is attributed to two factors: (i) the transformation of the original data into a bipartite graph database, and (ii) the mining of transpose closures from a wide transactional database. Applying to a Yeast gene expression data, we evaluate, by using Pearson X  X  correlation coefficient and P-value, the biological relevance of collaborating negative correlations as an example among many real-life domains.
 H.2.8 [ Database Management ]: Database applications X  Data mining Algorithms collaborating negative correlations, transpose closures from a bipartite graph database
Negative correlations, similar to positive correlations, are in a wide range of participation in various real-life appli-cations, although negative correlations received much less research attention. A negative correlation says that as the value of one of two variables increases, the value of the other variable tends to decline, plotting a pair of simultaneous op-posing trends. Negative correlations can pace in collabora-tion. A collaborating negative correlation is thus referred to as a negative correlation when the two variables are gen-eralized into two sets of variables. It signifies a collective and coherent value rise or fall of all variables within one set whenever all variables in the other set go jointly at the op-posite direction. It is a square time complexity to determine the correlation coefficients of all possible pairs of variables. The worst complexity becomes exponential if we want to de-termine and rank the coefficients of all possible collaborating negative correlations. The problem becomes even more chal-lenging if time segments or subsets of time points, instead of the full range of time points, are deliberately constrained for negative correlations.

Examples of collaborating negative correlations can be found in real-life domains such as in financial stock market, in gene expression data, and in social networks where they may be deeply embedded. A well known example in finan-cial market is about precious metals (one set of variables) that often have a hedge against a weakening USD which ties to many other currencies such as HKD, SGD, etc. See Fig-ure 1(a) which shows a sharp negative correlation between the decreasing value of the USD and the up-trend of the Gold price. Previously unknown correlations of this kind from the huge financial market data would then strengthen the power and theory of low-correlation investing [25] which strongly suggests an investor to hold a portfolio diversified with low-correlating assets for good return with less risk. The concept of negative correlation is also close to an im-portant trading technique called  X  X airs Trading X , by which real-time trading is executed on a pair of negatively corre-lated stocks. The risks would be dramatically reduced if collaborating negative correlations can be used to specify groups of stocks for trading, instead of a pair of stocks. Figure 1: Negative correlations in real-life applica-tions: (a) between USD and the Gold price from fundsupermart.com; (b) in biological data, reprinted by permission from Macmillan Publishers Ltd: Na-ture Genetics, 37(5):501-506, c  X  2005.
Time-course gene expression data has been extensively in-vestigated to explore various relationships of the genes in pathways particularly focusing on the positive correlations [2, 5, 14]. Recently, biological studies emerge a trend driven by the notion of negative correlations such as opposite ex-pression patterns, complementary patterns, or self negative regulation of transcription factors [6, 10, 21, 24]. See Fig-ure 1(b) for an example. In fact, the biological relevance and significance of the negative notion had been early eval-uated by [17] based on the important observation that: when two genes have a negatively correlated interaction, the two gene groups locating at the downstream of their participat-ing pathways will also form a negative relationship. Such a pipeline of negative correlations spanning multiple time points between the two groups of genes exactly echoes our idea of collaborating negative correlations.
 Examples from social network analysis are also related. Consider websites containing opinions of movies, gadgets, cosmetics, computing devices, etc. It is always the case that there are different opinions about a certain product. Con-sider a product A and a user of the system. How would the user know who or whose opinions are trustable on product A? One way is to examine the positive correlations of this user X  X  past history of ratings given to various products by comparing them with the other reviewers X  ratings. This is known as  X  X rust inference X , a new hot topic in social network analysis [16]. However, there has no much/any study on the  X  X nference of distrust X . Actually, distrust can be mapped to collaborating negative correlations if combined with the trusts. Therefore, these combinations of trusts and distrusts would be useful to improve the reliability of online recom-mendation systems especially with the advent and perva-siveness of web 2.0 and the upcoming web 3.0.
 It is these interesting examples that motivate our work. In this paper, we present two definitions to characterize dif-ferent facets of the concept of collaborating negative correla-tions. Despite of the conceptual variation between these two definitions, the amazing fact is that they can share the same mining algorithm for efficient discovery from large datasets. The key step is a transformation of the original data into a bipartite graph database. We prove that the mining of col-laborating negative correlations is equivalent to the mining of maximal biclique subgraphs which is in turn equivalent to the mining of closed itemsets of a converted transactional database. To achieve high efficiency, we propose a method to mine the closed itemsets from the transpose of a dataset, and directly map these patterns to the desired ones. The efficiency can be improved by orders of magnitudes as ex-pected. As a case study, we apply our method to a time-course cell-cycle gene expression data of Yeast to illustrate how collaborating negative correlations capture biological relevance.

Paper organization : The research problem is formu-lated in Section 2 which also includes a related work sub-section. Our mining algorithm is presented in Section 3, and its efficiency and scalability are evaluated in Section 4. As a real-life domain application, we present in Section 5 results found from a high-dimensional gene expression pro-filing dataset. Section 6 concludes the paper with a brief summary and future work.
Let V be a set of m variables v 1 ,v 2 ,  X  X  X  ,v m , and T be a set of n consecutive time points t 0 ,t 1 ,  X  X  X  ,t n  X  1 data matrix D =[ d i,j ] m  X  n to denote the values of the m variables on the n time points, namely d i,j represents the value of variable v i at time point t j .

Definition 1. A collaborating negative correlation r is defined as a triplet consisting of two non-overlapping subsets V 1 and V 2 of V andatimesegment T neg in T (or a subset of time points), such that for any pair of consecutive time points t i  X  t i +1 in T neg , the value of all variables in V increases but the value of all variables in V 2 decreases, or vice versa.

A collaborating negative correlation r can be written as Taking into consideration of maximality for r , we require that the number of variables in V 1 and V 2 , and the num-beroftimepointsin T neg are as many as possible. That is, there are no other time points that can be added into r such that the negative correlation between V 1 and V 2 can be maintained. On the other hand, there are no other variables that can be added into r such that the negative correlation happens across the whole T neg . Wedenotea r after maxi-mization as R , and call it a R -negative correlation. In fact, this definition looks for a someway-maximized sub-matrix of D , and it gives rise to a parameter-free NP-hard cluster-ing problem regardless of whether one or all R are desired from D . In this work, we attempt to mine all R -negative correlations from D .

Definition 1 projects the negative correlations between V and V 2 on pairs of consecutive time points. We present another definition which considers statistical value change within individual time points by examining whether the value of a variable is significantly up or down from its mean value. This is another facet of the concept of negative cor-relation.
 Without loss of generality, assume each row-vector v i of D follows the Gaussian distribution. We can obtain a confi-dence region cr i for row [ d ij ] 1  X  n of any i : cr i =[ cr The value of v i can sometimes exceed the confidence upper bound cr ( u ) i , and may sometimes below the confidence lower bound cr ( l ) i .

Definition 2. A collaborating negative correlation r is defined as a triplet consisting of two non-overlapping subsets V 1 and V 2 of V and a time segment T neg in T (or a subset of time points), such that at any time point t j of T neg value of all variables in V 1 is bigger than their corresponding confidence upper bound cr ( u ) but the value of all variables in V 2 is less than their corresponding confidence lower bound cr l ) , or vice versa.
 Given a small n and a significance level p together with its corresponding  X  value, the confidence interval cr i is cr [ cr the mean and  X  2 = When n becomes large, e.g. n&gt; 25, it is recommended to
Related work : Mining of R -negative correlations is nei-ther a subspace clustering [18] nor a bi-clustering [14] prob-lem. Subspace clustering is an extension of the traditional clustering that attempts to search clusters in different sub-spaces by feature selection [18]. Bi-clustering or co-clustering allows simultaneous clustering upon objects and features, aiming at all sub-matrices satisfying a homogeneity require-ment [14]. Mining R -negative correlations is related to bi-clustering in the sense that we are also looking for sub-matrices. However, R -negative correlations describe sub-matrices that each consist of two groups of coherent vari-ables showing complementary heterogeneity across a sub-set of time points (features), instead of homogeneity. Our R -negative correlations are closely related to shifting-and-scaling co-regulation patterns [11, 29]. The key difference is that shifting-and-scaling patterns are limited to only those variables that follow the same scaling factor s 1 and shifting factor s 2 over all of the time segments. If a variable fol-lows the same trend or tendency, but not exactly the same scaling and shifting factor, it will be not clustered in the same patterns. Such a restriction overlooks many useful negative correlations. However, we do not have this short-coming. The work by [12] is related in the sense that they also consider relationships between two such clusters whose respective members show opposite changing tendency. How-ever, their solution is partial and ad hoc without considering maximality.

We had an early version for the definition of negative cor-relations [30]. It was defined as two subsets V 1 and V 2 V over a time segment T neg , such that at any time point in T neg , the value of every variable in V 1 is bigger than the values of all variables in V 2 , or the value of every variable in V 1 is smaller than those of all variables in V 2 . One serious drawback of this definition is that it does not exclude posi-tive correlations between V 1 and V 2 . For example, at every time point, if the values in V 1 are always bigger than the val-ues in V 2 , then V 1 and V 2 together are very likely to share a positive correlation. Our new definitions can overcome this limitation, and form a novel mining problem. Besides, the computational method and results here are also different from those in [30]. In [30], original datasets were discretized into a dichotomy matrix for all pairs of genes at every time point. Then negative correlations were extracted on time-series biclusters from a suffix tree of the dichotomy matrix. The resultant patterns in [30] are required to be continuous in time points, and are theoretically a subset of negative patterns in this paper.
Given a data set D , the answer sets for the two types of negative correlations under Definition 1 and Definition 2 are usually different. Interestingly, they can be discovered by using the same algorithm. The only difference is in the pre-processing step to form the input data in accordance to the difference in the two definitions. The key step in our mining algorithm is the transformation of D into a bipartite graph [22] database. We prove that the mining of R -negative cor-relations is equivalent to the mining of R -biclique subgraphs from the bipartite graph database, which is equivalent to the mining of closed itemsets [19] from a transactional database [1] converted from the bipartite graph database.
Given a dataset D =[ d ij ] m  X  n , where i =1 ,  X  X  X  ,m and j =0 ,  X  X  X  ,n  X  1, we first transform D into a 3-symbol ma-trix sbl D =[ b ks ] m  X  ( n  X  1) , where k =1 ,  X  X  X  ,m and s = 1 ,  X  X  X  ,n  X  1. The 3 symbols are  X  X p X ,  X  X own X , and  X  X lat X . Element b ks = up if d ks  X  d k ( s  X  1) &gt;  X , b ks = down if d d value change of variable v k from t s  X  1 to t s is up, down, or flat. Here,  X   X  0 is required by Definition 1, and is ad-justable to capture significant growth or shrinking trends.
Then we convert the j th column [ b kj ] m  X  1 of sbl D ,for j = 1 ,  X  X  X  ,n  X  1, into two bipartite graphs H ( j ) 1 and H ( j as where V 1 ( H ( j ) 1 )= { v 1 ,v 2 ,...,v m } , V 2 ( H ( 1 , 2 ,...,m } ; and where V 1 ( H ( j ) 2 )= { v 1 ,v 2 ,...,v m } , V 2 ( H ( 1 , 2 ,...,m } .

Note that the condition b i 1 j = b i 2 j = flat exactly means the change trends of v i 1 and v i 2 are opposite at the time points from t j  X  1 to t j . Also note that these two bipartite graphs have no common edge. Therefore, the intersection between H ( j ) 1 and H ( j ) 2 is an empty graph. convenience, and group these ( n  X  1)  X  2 bipartite graphs to form a graph database bGD. Our mining problem is then to enumerate all R -biclique subgraphs from bGD as explained below.

Proposition 1. A triplet ( V 1 ,V 2 ) ,T neg is a r -negative correlation in D if and only if ( V 1 ,V 2 ) is a biclique subgraph in bGD.

Proof. Suppose biclique ( V 1 ,V 2 ) occurs in s number of bipartite graphs in bGD. At any of these s bipartite graphs, the complete connections between V 1 and V 2 means that all variables in V 1 have a up trend meanwhile all variables in V 2 have a down trend, or vice versa. We denote the time points corresponding to the s bipartite graphs as T neg , then ( V 1 ,V 2 ) ,T neg is a r -negative correlation in D .
On the other hand, suppose triplet ( V 1 ,V 2 ) ,T neg is a r -negative correlation in D . By definition, all variables in V 1 pace up or down, and continue pace up or down, mean-while all variables in V 2 move constantly in an opposite trend for every consecutive time pair. That is, ( V 1 ,V 2 )isabi-clique subgraph that occurs in | T neg | X  1 bipartite graphs of bGD.
 Lemma 1. The intersection of two bipartite graphs H j 1 , H j 2  X  bGD is a biclique subgraph or an empty graph.
Proof. If E ( H j 1 )  X  E ( H j 2 )=  X  , then the intersection is an empty graph. Otherwise, let V 1 = V 1 ( H j 1 )  X  V 1 ( H V and  X  b  X  V 2 ,( a, b )isanedgein H j 1 as well as an edge in H j 2 by bipartite graph construction. Therefore, ( V 1 ,V a biclique subgraph.

Theorem 1. Let H =( V 1 ,V 2 ) be a biclique subgraph oc-curring in all and only s number of bipartite graphs H j 1 H j 2 ,  X  X  X  , H j s of bGD, 0 &lt;s&lt; =( n  X  1) .Let H =( is a R -negative correlation in D ,where T neg is the set of time points related to the s bipartite graphs.
Proof. By Lemma 1, we know that H =( V 1 , V 2 )= (
V 1 , V 2 ) ,T neg is a r -negative correlation in D .Bythe definition of graph intersection, there is no other edges that can be added to H . That is, there are no other variables that can be added to ( V 1 , V 2 ) ,T neg such that the negative correlation can be maintained across T neg . Therefore, it is a maximized negative correlation.

We name H =( V 1 , V 2 )a R -biclique subgraph of bGD. If s is big enough exceeding a pre-defined occurrence threshold, we call H a frequent R -biclique subgraph. Therefore, the discovery of all R -negative correlations is equivalent to the discovery of all R -biclique subgraphs from bGD.

Recall that Definition 2 can also be used to describe a col-laborating negative correlation. Under this definition, the transformation of D =[ d ij ] m  X  n where i =1 ,  X  X  X  ,m and j =0 ,  X  X  X  ,n  X  1 is similarly processed. We first transform D into a 3-symbol matrix sbl D =[ b ks ] m  X  n , where k =1 , and s =0 ,  X  X  X  ,n  X  1. The 3 symbols are  X  X p X ,  X  X own X , and  X  X lat X . Element b ks = up if d ks &gt;cr ( u ) k , b ks d ks &lt;cr value change of variable v k at t s is up, down, or flat in com-parison to the mean of v k . Then we convert the j th column [ b kj ] m  X  1 of sbl D ,for j =0 , 1 ,  X  X  X  ,n  X  1, into two bipartite graphs, as exactly done above. Again, we can claim that every R -biclique subgraph in this bipartite graph database corresponds to a R -negative correlation.
We transform bGD into a transaction database TD to enjoy the high efficiency of the algorithms developed in the literature. The set of items in TD is { ( v i ,v j ) | i = j, i, j = 1 , 2 ,  X  X  X  ,m } . Based on this set of items, we can represent the edge set of H j , for j =1 , 2 ,  X  X  X  , ( n  X  1)  X  2, as a transaction in TD. So, TD consists of ( n  X  1)  X  2 transactions.
Theorem 2. Let H =( V 1 , V 2 ) be a R -biclique subgraph of bGD, then its edge set E ( H ) is a closed itemset of TD.
Proof. Suppose H occurs in all and only s number of bi-partite graphs H j 1 ,H j 2 ,  X  X  X  ,H j s of bGD, 0 &lt;s&lt; =( n Then the itemset E ( H ) has a support level of s in TD. By section of the transactions corresponding to the s bipartite graphs. Thus by the definition of closed patterns proposed by [19], E ( H ) is a closed itemset of TD.

Similar to Theorem 2, we can prove that every closed itemset of TD is equivalent to a R -negative correlation of D . Therefore, our mining problem turns to the problem of mining closed itemsets from TD.

In real-life applications, we often encounter hundreds or thousands of variables for V such as in the stock price move-ment data or in medical gene expression data. When | V | is in the order of hundreds or thousands, TD becomes an ex-tremely wide transactional database if the number of time points is in the order of hundreds or less. Algorithms for mining closed itemsets become not efficient when the input data matrix is very wide [8, 9]. We present a nice property of the closed patterns from the transpose of a wide transac-tional database DB (denoted by DB X ), and make a particular use of it for the mining of the closed itemsets of TD.
Proposition 2. The closed itemsets of DB with mini-mum support of minSup and minimum length of minLen have a one-to-one correspondence with the closed itemsets of DB X  with minimum support of minLen and minimum length of minSup .

Proof. Assume that DB contains x number of items de-noted by i 1 ,i 2 ,  X  X  X  ,i x , and that DB contains y number of transactions whose IDs are TR 1 ,TR 2 ,  X  X  X  ,TR y . The items in the transpose of DB are denoted by the IDs of DB, and the transaction IDs in DB X  are denoted by the item names of DB.

We use CLS DB to denote the closed itemsets of DB with minimum support of minSup and minimum length of minLen , and use CLS DB to denote the closed itemsets of DB X  with minimum support of minLen and minimum length of minSup .  X 
C  X  CLS DB , we prove that C corresponds to one and only one closed pattern in CLS DB .

Suppose C = { i 1 ,i 2 ,  X  X  X  ,i l } , and C is contained in all and only the first s number of transactions in DB. Then C is the intersection of the first s transactions. This means that { TR 1 ,TR 2 ,  X  X  X  ,TR s } is an itemset, denoted by C ,in DB X  that occurs in all and only the i 1 ,i 2 ,  X  X  X  , and i tion. Then, the intersection of these l transactions is exactly { TR 1 ,TR 2 ,  X  X  X  ,TR s } . Therefore, C  X  CLS DB .
By applying the symmetry property between DB and DB X , we can similarly prove that  X  C  X  CLS DB , it corresponds to one and only one closed pattern in CLS DB .
We are interested in R -negative correlations having a rea-sonable size in D to avoid some noisy or random correla-tions. For a R -negative correlation ( V 1 ,V 2 ) ,T neg quire that | V 1 | or | V 2 | is  X  p size and the other is and | T neg | X  t size . Accordingly, the frequent closed itemsets are required to contain at least p size  X  n size items and have at least t size support level in TD, or to contain at least t items and have at least p size  X  n size support level in the transpose of TD.
Given a dataset D with m variables and n time points, we enumerate D  X  X  R -negative correlations by taking the fol-lowing steps: transforming D into a 3-symbol matrix sbl D , constructing two bipartite graphs for every column of sbl to form a graph database bGD, building a graph transac-tional database TD based on bGD followed by a possible transpose TD X  for TD, and subsequently mining closed pat-terns. The whole process is summarized in Figure 2. The pseudo code is shown in Algorithm 1. In this work, we use FP close* [8, 9] to mine frequent closed itemsets from TD.
The time and space complexities of Algorithm 1 are as fol-lows. The first component is to construct bipartite graphs from a dataset D as shown in lines 3 to 6. For each col-umn t j , the time complexity to build its two bipartites is O ( m 2 ). So, the time of this component is O ( m 2 n ). Next two components are to convert these bipartite graphs into a transaction database TD (at line 7) and to transpose TD if necessary. The time complexity of these two components is also O ( m 2 n ). The last component is the mining of frequent closed itemsets by FP close* as shown in line 10 or 12 and the filtering step. FP close* recursively produces an itemset by adding a frequent item to a prefix in a frequent-ascending order, and checks whether this itemset is closed or not. At Algorithm 1 Mining R -negative correlations Input: Description: 1: transform D into a 3-symbol matrix sbl D if necessary. 2: set bGD =  X  3: for all every column in sbl D do 4: construct two bipartite graphs H ( j ) 1 and H ( j ) 2 5: add H ( j ) 1 and H ( j ) 2 to graph database bGD. 6: end for 7: convert bGD into a transaction dataset TD using vari-8: if TD needs transposing then 9: set TD X  = transpose TD 10: take FP close* to mine all closed itemsets SET ci in 11: else 12: take FP close* to mine all closed itemsets SET ci in 13: end if 14: for all closed itemsets ci in SET ci do 15: if V 1 ,V 2  X  X  size in ci is not less than p size ,n size 16: determine its set of time points T neg . 17: if T neg  X  X  size is equal or greater than t size then 18: output ci with T neg as a R -negative correlation. 19: end if 20: end if 21: end for the worst case, the time complexity is O (2 M ) where M is the number of items. In the transpose of TD, M = n . In total, the time complexity of our algorithm is O ( m 2 n +2 n + N ) in the transpose of TD where N is the number of closed itemsets.

The space complexity of the first three components are all in O ( m 2 n ). The space complexity of the last component depends on the FP close* algorithm. FP close* stores the whole dataset in a FP tree. At each recursion, FP close* creates a projected dataset based on a prefix and stores it in another FP tree. At the worst case, FP close* needs at most O ( m 2 n ) for the whole dataset, and the recursion takes O ( LSn ) memory where L is the length of closed itemsets and S is the number of records where closed itemsets occur. In the transpose of TD, S  X  p size  X  n size and L  X  t size . So, The space complexity of the whole algorithm is O ( m 2 n + LSn ).
With regard to our Definition 2 of collaborating negative correlations, we show an example to illustrate how our algo-rithm works. The dataset D is shown in Figure 3(a) which contains 5 variables and 5 time points. A visualization of these variable values in D is desplayed in Figure 3(b). Ac-cording to Definition 2 with p =0 . 075 and the corresponding  X  =1 . 036, the 3-symbol matrix sbl D is the table shown in Figure 3(c).

Every column t j of sbl D is then converted into two bipar-tite graphs H ( j ) 1 and H ( j ) 2 . Figure 3(d) shows the two bi-partite graphs for time point t 4 . All these bipartite graphs are then converted to form a transaction database TD as shown in Figure 3(e). The transpose of TD is shown in Figure 3(f). To see how the transpose is conducted, let X  X  take v 3 ,v 2 as an example. This pair (edge) occurs at H in TD X  has five items as shown in row 4 in Figure 3(f).
All closed itemsets mined by FP close* from TD are listed in Figure 3(g). If we set p size ,n size = 2 and t size = 2, only two closed itemsets as shown in rows 6 and 7 of Figure 3(g) are qualified. In fact, these two closed itemsets are the same. The one in row 6 has four items (variable pairs): v 1 ,v 2 v 1 ,v 4 , v 3 ,v 2 and v 3 ,v 4 , in whole corresponding to a biclique v 1 ,v 3 , v 2 ,v 4 . Similarly, the corresponding bi-clique of the itemset in row 7 is v 2 ,v 4 , v 1 ,v 3 . This bi-clique together with T neg = { t 0 ,t 1 ,t 3 ,t 4 } forms a correlation, as plotted in Figure 3(h).

As seen above, each R -negative correlation is detected twice, due to the symmetry of variable pairs in H j 1 and H For example, the biclique v 2 ,v 4 , v 1 ,v 3 is the same as the biclique v 1 ,v 3 , v 2 ,v 4 in Figure 3(g). The only dif-ference is the order of v i and v j . To remove such dupli-cates and to speed up the mining process of FP close* in our implementation, the order of v i and v j in v i ,v j is not considered and only H j 1 or H j 2 is used to construct TD.
The purpose of this section is to show the speed improve-ment of our algorithm when the transpose of TD is used as input, instead of TD itself. Our method is implemented by C++ in a Linux sever under a shared condition. This sever has 32GB memory and four CPUs of 996.156MHz AMD Opteron(tm) processor 852. We terminate our program, if the time cost on a dataset reaches 4000s.
 We take random values for d ij to synthesize dataset D . The value range for d ij is from -1 to 1 inclusively. To demon-strate the efficiency and scalability of our algorithm, we de-signed two groups of such synthetic datasets. On the first group of datasets, we fix the number of time points as 50 for all of them, and we incrementally and randomly expand pruned or infrequent. (h) A R -negative correlation in D . the datasets with the number of variables from 50 to 2000 with interval 50. We would like to see the scalability of our method when the variable size increases. The time cost of our program when the number of variables increases is shown in Figure 4 where in each subfigure, the x axis is about the increasing numbers of variables, and the y axis is the time cost; in the transaction dataset TD of D , each row is for a time point and the items are variable pairs, while in the transaction dataset TD of D (the corresponding transpose of TD), each row is for a variable pair and the items are the time points.

The size thresholds p size , n size and t size are set as 5, 10 and 15 to show the change of time costs. It can be seen that mining frequent closed itemsets from TD is much more effi-cient than from TD. For example, in column 3, the time con-sumption by FP close* on TD increases aggressively when the number of variables increases from 50 to 1850. However, the time consumption by FP close* on TD increases very slowly.

On the second group of synthetic datasets, we keep the number of variables always as 500, and randomly produce the datasets with the number of time points varying from 10 to 200 with interval 10. Through this way, we can demon-strate the scalability of our method when the size of time points increases. The result is shown in Figure 5 where in each subfigure, the x axis, the y axis, TD and TD have the same meaning as those in Figure 4. Similar to what we do on the first group of synthetic datasets, we set p size , n and t size as 5, 10 and 15 to show the change of time costs and to see whether the use of the transpose TD of TD in Algorithm 1 can reduce FP close* running time. From Fig-t = 5 t = 10 t = 15 Figure : The time cost by our program when the number of variables increases. t = 5 t = 10 t = 15 Figure 5: Th etim ecostbyourp rogram wh en the number of tim e points in creases. ure 5, we can draw a similar conclusion: it is much more efficient to mine closed itemsets from TD than from TD.
Combining the results from the two groups of datasets, we are sure that mining closed itemsets from the transpose of TD is a critical step for us to achieve a high efficiency for mining R -negative correlations. These computation results also affirm that Proposition 2 is an important contribution made by this work. It is particularly useful for mining closed patterns from a  X  X at X  transactional database (where the num-ber of items is much less than the number of transactions).
We also evaluate our algorithm on three real-life datasets called alpha-factor , cdc15 and cdc28 [30]. All of them are time-course gene expression data related to Yeast cell cycle, containing the same 502 gene variables. However, alpha-factor involves 18 time points, cdc28 involves 17, and cdc15 involves 24.

To transform these real-value datasets D into the 3-symbol matrixes sbl D under Definition 2, we set p =0 . 075 whose corresponding  X  =1 . 036. Then the three TDs each contain 502*501 items, forming very wide transactional databases. The time costs by Algorithm 1 for mining R -negative corre-lations with p size = n size = 5 are presented in Table 1 where t size stands for the minimum fraction of the time points con-taining the negative correlations, namely t size = t r size From Table 1, we can see that mining R -negative correla-tions from TD can be much faster than from TD. For ex-ample, at the t r size level of 0.4, the speedup is at the 2 even 3 orders of magnitudes.

At the t r size level of 0.5 (i.e., spanning at least half of the time points), we found a total of 158, 103011 and 575 negative correlations from the alpha-factor , cdc15 and cdc28 data-set respectively. As two R -negative correlations can Table 1: Time costs in second by Algorithm 1 on three biological datasets. Here t r size stands for the minimum percentage of the total time points re-quired for a correlation. sometimes overlap very much, we filter out some redundant patterns by a commonly used biological data analysis ap-proach [15], where the threshold of the overlap degrees is set as 25%. Then, there are 8, 11 and 22 non-redundant cor-relations left for us respectively. Statistical and biological evaluations on these non-redundant patterns are shown in Table 2.

The R-values in this table (second last row) is referred to as an averaged Pearson X  X  Correlation Coefficients over all possible pairs of variables in a R -negative correlation. Let ( V 1 ,V 2 ) ,T neg be a R -negative correlation. Then its R-value is calculated by u  X  V 1 ,w  X  V 2 r ( u, w ) / ( | V r ( u, w ) is the Pearson X  X  Correlation Coefficient between the two variables u and w over the time segment T neg .Theper-fect R-value is -1, meaning that all possible variable pairs be-tween V 1 and V 2 is negatively correlated in an ideal way. As can be seen from Table 2, all the negative correlations have a R-value close to  X  0 . 8, confirming the biological phenomenon that differentially expressed gene groups can display signif-icant negative correlations but not positive correlations in Yeast cell cycles. These negative correlations have clear bi-ological statistics as well, as indicated by the P-values (at the last row of the table). These P-values are much less than the default threshold 0.01 used in GO [3]. (if consider the Bonferroni correction of P-value by multiplying it with the number of Yeast GO functional categories used in our experiments, this threshold can be changed to 0.01/1708 = 5.85e-6.) Some correlations even have extremely high bio-logical significance whose P-values are less than 10  X  12 ure 6 shows two R -negative correlations discovered from the cdc28 dataset. In the first example (A), V 1 contains 5 genes while V 2 contains 9 genes, the negative correlation spans time points 0, 1, 2, 3, 12, 14, 15, and 16; Its R-value is -0.88 and P-value is 2.05*10  X  12 . The second example (B) has sim-ilar size and significance as those of the negative correlation (A), but there is no gene overlapping between (A) and (B).
We have conducted a deep case study to illustrate the biological relevance of R -negative correlations. A known bi-ological mechanism is that the genes in the same pathway can produce negative correlation by negative feed-back con-trol [26, 27]. Our biological hypothesis is whether there are negative correlations between two pathways. Actually, we identified a negative correlation named NC-Cdc28-548 which covers most genes from two different pathways (Ta-ble 3). The genes YCR005C, YNL037C, and YDR148C in V 1 belong to the  X  X CA cycle, aerobic respiration X  pathway, and the genes YJR137C, YFR030W, and YJR010W in V 2 are the key members in the  X  X ulfate assimilation X  pathway. Many other facts can help explain why this negative cor-relation can exist between two pathways. (1) The original data was acquired from the Yeast cell cycle under the Cdc28-Table 2: Statistical and biological significance of non-redundant of Yeast cell cycle Figure 6: The gene expression profiles for two R -negative correlations discovered from the cdc28 dataset. based synchronization [23]; (2) The crucial zinc-responsive transcription factor Zap1 is confirmed as a regulator of zinc transportation-related genes only under the cell cycle con-dition [13]; (3) YLL041C, YKL141W, and YDR178W are zinc-regulated genes [20], and they are in the same circular pathway of  X  X CA cycle, aerobic respiration X  with YCR005C, YNL037C and YDR148C (Figure 7); (4) While, the Zap1 had also been identified to realize a new repression mech-anism on the transcription of YJR010W which is on the upstream of YJR137C and YFR030W [28]. With all these as organized in Figure 7, Zap1 can heavily affect the ex-pression of the genes in the above two pathways in different manners, and it can play a repression function on one of the two pathways. This is most probably the biological rea-son why two group genes from different pathways can have negatively correlated expressions simultaneously.
In this paper, we presented a new concept for the study of negative correlations, namely negative correlations in col-laboration. The novel idea behind this concept is the syn-chronized value rise or fall of all variables within one set whenever all variables in the other set show the contrast trend. We proposed an efficient algorithm for the mining of R -negative correlations by combining data transformation techniques, graph theories and closure properties. The ap-plication to the Yeast cell cycle gene expression datasets and Table 3: A R -negative correlation involving two bi-ological pathways Figure 7: Some functional links between the two pathways whose genes are partially covered by NC-Cdc28-548. The pathway information is taken from SGD [4]. the results found from these real-life data demonstrated that R -negative correlations can be deeply embedded in data and are potentially useful. As a future work, we consider an ex-tension to the current definition: we will require 90% (or a similar number) of variables within a set (not necessarily 100%) are up or down in pace.
 We would like to thank Kelvin Sim, Dr. David Lo, Dr. Xiaokui Xiao, and Prof. Limsoon Wong for brainstorming discussion on negative correlations for some computing ideas and potential applications. This research work was funded by a Singapore MOE ARC Tier-2 grant (T208B2203). [1] R. Agrawal, T. Imielinski, and A. N. Swami. Mining [2] J. S. Aguilar-Ruiz. Shifting and scaling patterns from [3] Ashburner et al . Gene ontology: tool for the [4] Cherry et al. SGD: Saccharomyces genome database. [5] Cho et al . A genome-wide transcriptional analysis of [6] Chuang et al . A pattern recognition approach to infer [7] C. Ding and H. Peng. Minimum redundancy feature [8] G. Grahne and J. Zhu. Efficiently using prefix-trees in [9] G. Grahne and J. Zhu. Fast algorithms for frequent [10] James et al . Microarray analyses of gene expression [11] L. Ji and K.-L. Tan. Mining gene expression data for [12] K. Koch, S. Schonauer, I. Jansen, J. van den Bussche, [13] Lee et al. High-resolution analysis of condition-specific [14] S. C. Madeira and A. L. Oliveira. Biclustering [15] S. C. Madeira and A. L. Oliveira. A polynomial time [16] Y. Matsuo and H. Yamamoto. Community gravity: [17] C. Missero, M. T. Pirro, and R. Di Lauro. Multiple ras [18] L. Parsons, E. Haque, and H. Liu. Subspace clustering [19] Pasquier et al. Discovering frequent closed itemsets for [20] Santos et al. Zinc suppresses the iron-accumulation [21] Schmid et al . A gene expression map of arabidopsis [22] S. Skiena. Implementing Discrete Mathematics: [23] Spellman et al. Comprehensive identification of cell [24] D. J. Stekel and D. J. Jenkins. Strong negative self [25] M. D. Stern. The power of low-correlation investing. [26] Vandeputte et al. A nonsense mutation in the ERG6 [27] M. Veen, U. Stahl, and C. Lang. Combined [28] Wu et al. Repression of sulfate assimilation is an [29] X. Xu, Y. Liu, A. Tung, and W. Wang. Mining [30] T. Zeng and J. Li. Maximization of negative
