
The increasing expansion of websites and their web usage necessitates increasingly scalable techniques for Web usage mining that can be better cast within the framework of min-ing evolving data streams [1, 5]. Despite recent developments in mining evolving Web clickstreams [3, 6], there has not been any investigation of the performance of collaborative filtering [2] in the demanding environment of evolving data streams. In this paper, we study limited memory collaborative filtering based recommendations in evolving scenarios using a system-atic validation methodology.
 Algorithm 1 K-NN-Streams Recommender
In a streaming scenarios, a recommender system must han-dle a huge flux of user data under restricted memory and time constraints. Hence, K-Nearest-Neighbor based collaborative filtering must work with limited memory to store the previ-ous instances. TECNO-Streams [3] is a robust stream clus-tering algorithm that works in one pass and under restricted space limits, by continuously computing a limited-size synop-sis of cluster representatives/usage patterns, that can serve as an evolving instance base to provide recommendations. We present two adapted recommendation strategies based on K-NN (Algorithm 1) and TECNO-Streams (Algorithm 2); as well as their validation (Algorithm 3).
 Algorithm 2 TECNO-Streams Recommender Algorithm 3 Recommendation and Validation in Streams 20 User profiles were mined from a benchmark clickstream data set consisting of 12 day accesses to the CECS Depart-ment website of the University of Missouri-Columbia. After pre-processing as explained in [4], 1,704 sessions 1 were ex-tracted accessing a total of 343 URLs. For TECNO-Streams, the control parameters for compression [3] were K =5,and periodical compression every T = 10 sessions. The activa-tion threshold was w min =0 . 375. The parameter  X  which affects the rate of forgetting in the stream synopsis is set to 50. The memory restriction which is quantified by the maximum synopsis size of the network (maximum number of nodes), N p max , is set to 30. To make a fair comparison, K-NN-Streams Recommender is also limited to work with the same space limitation as TECNO-Streams, i.e., W = K = 30. The results are visualized by plotting the validation metrics versus time/session index with a moving average of window size 15.

Effect of Evolution in User Access Patterns un-der Drastic Changes (Scenario D): We partitioned the input Web sessions into 20 clusters centered at 20 profiles previously discovered and validated using Hierarchical Unsu-pervised Niche Clustering (HUNC) 2 [4]. Then we presented these sessions one profile at a time: sessions from profile 0, then sessions from profile 1,  X  X  X  , etc. Figure 1 (a) shows the F 1 quality of recommendations over 20 consecutive periods (profiles), separated by dashed vertical lines. With the dras-tic fluctuations in user access patterns at the start of each new period, F 1 makes a sharp dip for both stream based recommenders since they now must adapt to a completely unseen usage pattern ( ramp up ), with the F 1 reaching peaks slightly higher for K-NN-Streams Recommender, which per-forms better in periods of maintained stability since it does not perform any optimization in summarizing its instances (lossless compression), while TECNO-Streams optimizes its summary (lossy compression).
 Effect of Evolution in User Access Patterns under Mild Changes (Scenario M): We presented the Web user sessions in their natural ( chronological ) order as received by the Web server. Figure 1 (b) shows that with natural fluctu-ations in user access patterns (over 12 days), the F 1 measure fluctuates, but remains 10-30% higher for TECNO-Streams Recommender compared to K-NN-Streams Recommender.
 Effect of Evolution in User Access Patterns under Drastic Changes with Repeated Profiles (Scenario R): We selected the first 5 profiles, and presented the ses-sions of the stream in the order of the profiles as in Scenario D. However, as soon as the 5 profiles were unraveled, we re-peated the presentation of the 5 profiles again in the same order. Figure 1 (c) shows the quality of recommendations as the user activity changes drastically in 10 consecutive periods profile 1,2,3,4,5,1,2,3,4,5 ). Compared to the Drastic scenario above, we notice a significant difference in the start of the new period for profile 1 when it is repeated the second time (start of 6th period in the figures), with TECNO-Streams Recommendations maintaining a much higher value. Due to its immune based learning (basis for vaccination), TECNO-Streams recommender tends to improve the second time it re-encounters a profile (e.g. compare its F 1 value during pro-file 3 presented first in period 3 and then repeated again in period 8), while K-NN-Streams Recommender simply repeats the same deterministic rote memorization.
We have evaluated the behavior of collaborative filtering recommendations under evolving usage scenarios, showing that K-NN-Streams Recommender performs well when the user activity alternates between different trends, and the ac-tivity within each trend is more stable , while TECNO-Streams performs better in naturally changing real user access pat-terns, and degrades gracefully when repeating drastic changes occur.

