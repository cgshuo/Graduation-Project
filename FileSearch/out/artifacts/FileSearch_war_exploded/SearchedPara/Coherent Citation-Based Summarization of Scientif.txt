 Scientific research is a cumulative activity. The work of downstream researchers depends on access to upstream discoveries. The footnotes, end notes, or reference lists within research articles make this accumulation possible. When a reference appears in a scientific paper, it is often accompanied by a span of text describing the work being cited.

We name the sentence that contains an explicit reference to another paper citation sentence . Cita-tion sentences usually highlight the most important aspects of the cited paper such as the research prob-lem it addresses, the method it proposes, the good results it reports, and even its drawbacks and limita-tions.

By aggregating all the citation sentences that cite a paper, we have a rich source of information about it. This information is valuable because human ex-perts have put their efforts to read the paper and sum-marize its important contributions.

One way to make use of these sentences is creat-ing a summary of the target paper. This summary is different from the abstract or a summary gener-ated from the paper itself. While the abstract rep-resents the author X  X  point of view, the citation sum-mary is the summation of multiple scholars X  view-points. The task of summarizing a scientific paper using its set of citation sentences is called citation-based summarization.

There has been previous work done on citation-based summarization (Nanba et al., 2000; Elkiss et al., 2008; Qazvinian and Radev, 2008; Mei and Zhai, 2008; Mohammad et al., 2009). Previous work fo-cused on the extraction aspect; i.e. analyzing the collection of citation sentences and selecting a rep-resentative subset that covers the main aspects of the paper. The cohesion and the readability of the pro-duced summaries have been mostly ignored. This resulted in noisy and confusing summaries.

In this work, we focus on the coherence and read-ability aspects of the problem. Our approach pro-duces citation-based summaries in three stages: pre-processing, extraction, and postprocessing. Our ex-periments show that our approach produces better summaries than several baseline summarization sys-tems.

The rest of this paper is organized as follows. Af-ter we examine previous work in Section 2, we out-line the motivation of our approach in Section 3. Section 4 describes the three stages of our summa-rization system. The evaluation and the results are presented in Section 5. Section 6 concludes the pa-per. The idea of analyzing and utilizing citation informa-tion is far from new. The motivation for using in-formation latent in citations has been explored tens of years back (Garfield et al., 1984; Hodges, 1972). Since then, there has been a large body of research done on citations.

Nanba and Okumura (2000) analyzed citation sentences and automatically categorized citations into three groups using 160 pre-defined phrase-based rules. They also used citation categoriza-tion to support a system for writing surveys (Nanba and Okumura, 1999). Newman (2001) analyzed the structure of the citation networks. Teufel et al. (2006) addressed the problem of classifying ci-tations based on their function.

Siddharthan and Teufel (2007) proposed a method for determining the scientific attribution of an arti-cle by analyzing citation sentences. Teufel (2007) described a rhetorical classification task, in which sentences are labeled as one of Own, Other, Back-ground, Textual, Aim, Basis, or Contrast according to their role in the authors argument. In parts of our approach, we were inspired by this work.

Elkiss et al. (2008) performed a study on citation summaries and their importance. They concluded that citation summaries are more focused and con-tain more information than abstracts. Mohammad et al. (2009) suggested using citation information to generate surveys of scientific paradigms.

Qazvinian and Radev (2008) proposed a method for summarizing scientific articles by building a sim-ilarity network of the citation sentences that cite the target paper, and then applying network analy-sis techniques to find a set of sentences that covers as much of the summarized paper facts as possible. We use this method as one of the baselines when we evaluate our approach. Qazvinian et al. (2010) pro-posed a citation-based summarization method that first extracts a number of important keyphrases from the set of citation sentences, and then finds the best subset of sentences that covers as many keyphrases as possible. Qazvinian and Radev (2010) addressed the problem of identifying the non-explicit citing sentences to aid citation-based summarization. The coherence and readability of citation-based summaries are impeded by several factors. First, many citation sentences cite multiple papers besides the target. For example, the following is a citation sentence that appeared in the NLP literature and talked about Resnik X  X  (1999) work.
The first fragment of this sentence describes dif-ferent work other than Resnik X  X . The contribution of Resnik is mentioned in the underlined fragment. Including the irrelevant fragments in the summary causes several problems. First, the aim of the sum-marization task is to summarize the contribution of the target paper using minimal text. These frag-ments take space in the summary while being irrel-evant and less important. Second, including these fragments in the summary breaks the context and, hence, degrades the readability and confuses the reader. Third, the existence of irrelevant fragments in a sentence makes the ranking algorithm assign a low weight to it although the relevant fragment may cover an aspect of the paper that no other sentence covers.

A second factor has to do with the ordering of the sentences included in the summary. For example, the following are two other citation sentences for Resnik (1999).
If these two sentences are to be included in the summary, the reasonable ordering would be to put the second sentence first.

Thirdly, in some instances of citation sentences, the reference is not a syntactic constituent in the sen-tence. It is added just to indicate the existence of citation. For example, in sentence (2) above, the ref-erence could be safely removed from the sentence without hurting its grammaticality.

In other instances (e.g. sentence (3) above), the reference is a syntactic constituent of the sentence and removing it makes the sentence ungrammatical. However, in certain cases, the reference could be re-placed with a suitable pronoun (i.e. he, she or they). This helps avoid the redundancy that results from re-peating the author name(s) in every sentence.
Finally, a significant number of citation sentences are not suitable for summarization (Teufel et al., 2006) and should be filtered out. The following sentences are two examples.
Sentence (4) appeared in a paper by Nguyen et al (2007). It does not describe any aspect of Eisner X  X  work, rather it informs the reader that Nguyen et al. used Eisner X  X  algorithm in their model. There is no value in adding this sentence to the summary of Eis-ner X  X  paper. Teufel (2007) reported that a significant number of citation sentences (67% of the sentences in her dataset) were of this type.

Likewise, the comprehension of sentence (5) de-pends on knowing its context (i.e. its surrounding sentences). This sentence alone does not provide any valuable information about Eisner X  X  paper and should not be added to the summary unless its con-text is extracted and included in the summary as well.

In our approach, we address these issues to achieve the goal of improving the coherence and the readability of citation-based summaries. In this section we describe a system that takes a sci-entific paper and a set of citation sentences that cite it as input, and outputs a citation summary of the paper. Our system produces the summaries in three stages. In the first stage, the citation sentences are preprocessed to rule out the unsuitable sentences and the irrelevant fragments of sentences. In the sec-ond stage, a number of citation sentences that cover the various aspects of the paper are selected. In the last stage, the selected sentences are post-processed to enhance the readability of the summary. We de-scribe the stages in the following three subsections. 4.1 Preprocessing The aim of this stage is to determine which pieces of text (sentences or fragments of sentences) should be considered for selection in the next stage and which ones should be excluded. This stage involves three tasks: reference tagging, reference scope identifica-tion, and sentence filtering. 4.1.1 Reference Tagging A citation sentence contains one or more references. At least one of these references corresponds to the target paper. When writing scientific articles, au-thors usually use standard patterns to include point-ers to their references within the text. We use pattern matching to tag such references. The reference to the target is given a different tag than the references to other papers.

The following example shows a citation sentence with all the references tagged and the target refer-ence given a different tag.
 4.1.2 Identifying the Reference Scope In the previous section, we showed the importance of identifying the scope of the target reference; i.e. the fragment of the citation sentence that corre-sponds to the target paper. We define the scope of a reference as the shortest fragment of the citation sentence that contains the reference and could form a grammatical sentence if the rest of the sentence was removed.

To find such a fragment, we use a simple yet ade-quate heuristic. We start by parsing the sentence us-ing the link grammar parser (Sleator and Temperley, 1991). Since the parser is not trained on citation sen-tences, we replace the references with placeholders before passing the sentence to the parser. Figure 1 shows a portion of the parse tree for Sentence (1) (from Section 1).

We extract the scope of the reference from the parse tree as follows. We find the smallest subtree rooted at an S node (sentence clause node) and con-tains the target reference node. We extract the text that corresponds to this subtree if it is grammati-cal. Otherwise, we find the second smallest subtree rooted at an S node and so on. For example, the parse tree shown in Figure 1 suggests that the scope of the reference is: 4.1.3 Sentence Filtering The task in this step is to detect and filter out unsuit-able sentences; i.e., sentences that depend on their context (e.g. Sentence (5) above) or describe the own work of their authors, not the contribution of the target paper (e.g Sentence (4) above). Formally, we classify the citation sentences into two classes: suitable and unsuitable sentences. We use a ma-chine learning technique for this purpose. We ex-tract a number of features from each sentence and train a classification model using these features. The trained model is then used to classify the sentences. We use Support Vector Machines (SVM) with linear kernel as our classifier. The features that we use in this step and their descriptions are shown in Table 1. 4.2 Extraction In the first stage, the sentences and sentence frag-ments that are not useful for our summarization task are ruled out. The input to this stage is a set of cita-tion sentences that are believed to be suitable for the summary. From these sentences, we need to select a representative subset. The sentences are selected based on these three main properties:
First, they should cover diverse aspects of the pa-per. Second, the sentences that cover the same as-pect should not contain redundant information. For example, if two sentences talk about the drawbacks of the target paper, one sentence can mention the computation inefficiency, while the other criticize the assumptions the paper makes. Third, the sen-tences should cover as many important facts about the target paper as possible using minimal text.
In this stage, the summary sentences are selected in three steps. In the first step, the sentences are clas-sified into five functional categories: Background, Problem Statement, Method, Results , and Limita-tions . In the second step, we cluster the sen-tences within each category into clusters of simi-lar sentences. In the third step, we compute the LexRank (Erkan and Radev, 2004) values for the sentences within each cluster. The summary sen-tences are selected based on the classification, the clustering, and the LexRank values. 4.2.1 Functional Category Classification We classify the citation sentences into the five cat-egories mentioned above using a machine learning technique. A classification model is trained on a number of features (Table 2) extracted from a la-beled set of citation sentences. We use SVM with linear kernel as our classifier. 4.2.2 Sentence Clustering In the previous step we determined the category of each citation sentence. It is very likely that sentences from the same category contain similar or overlapping information. For example, Sentences (6), (7), and (8) below appear in the set of citation sentences that cite Goldwater and Griffiths X  (2007). These sentences belong to the same category (i.e Method ). Both Sentences (6) and (7) convey the same information about Goldwater and Griffiths (2007) contribution. Sentence (8), however, de-scribes a different aspect of the paper methodology.
Clustering divides the sentences of each cate-gory into groups of similar sentences. Following Qazvinian and Radev (2008), we build a cosine sim-ilarity graph out of the sentences of each category. This is an undirected graph in which nodes are sen-tences and edges represent similarity relations. Each edge is weighted by the value of the cosine similarity (using TF-IDF vectors) between the two sentences the edge connects. Once we have the similarity net-work constructed, we partition it into clusters using a community finding technique. We use the Clauset algorithm (Clauset et al., 2004), a hierarchical ag-glomerative community finding algorithm that runs in linear time. 4.2.3 Ranking Although the sentences that belong to the same clus-ter are similar, they are not necessarily equally im-portant. We rank the sentences within each clus-ter by computing their LexRank (Erkan and Radev, 2004). Sentences with higher rank are more impor-tant. 4.2.4 Sentence Selection At this point we have determined (Figure 2), for each sentence, its category, its cluster, and its relative im-portance. Sentences are added to the summary in order based on their category, the size of their clus-ters, then their LexRank values. The categories are ordered as Background, Problem, Method, Results , then Limitations . Clusters within each category are ordered by the number of sentences in them whereas the sentences of each cluster are ordered by their LexRank values.

In the example shown in Figure 2, we have three categories. Each category contains several clusters. Each cluster contains several sentences with differ-ent LexRank values (illustrated by the sizes of the dots in the figure.) If the desired length of the sum-mary is 3 sentences, the selected sentences will be in order S1, S12, then S18. If the desired length is 5, the selected sentences will be S1, S5, S12, S15, then S18. 4.3 Postprocessing In this stage, we refine the sentences that we ex-tracted in the previous stage. Each citation sentence will have the target reference (the author X  X  names and the publication year) mentioned at least once. The reference could be either syntactically and se-mantically part of the sentence (e.g. Sentence (3) above) or not (e.g. Sentence (2)). The aim of this refinement step is to avoid repeating the author X  X  names and the publication year in every sentence. We keep the author X  X  names and the publication year only in the first sentence of the summary. In the following sentences, we either replace the reference with a suitable personal pronoun or remove it. The reference is replaced with a pronoun if it is part of the sentence and this replacement does not make the sentence ungrammatical. The reference is removed if it is not part of the sentence. If the sentence con-tains references for other papers, they are removed if this doesn X  X  hurt the grammaticality of the sentence.
To determine whether a reference is part of the sentence or not, we again use a machine learning approach. We train a model on a set of labeled sen-tences. The features used in this step are listed in Table 3. The trained model is then used to classify the references that appear in a sentence into three classes: keep , remove , replace . If a reference is to be replaced, and the paper has one author, we use  X  he/she  X  (we do not know if the author is male or female). If the paper has two or more authors, we use  X  they  X . We provide three levels of evaluation. First, we eval-uate each of the components in our system sepa-rately. Then we evaluate the summaries that our system generate in terms of extraction quality. Fi-nally, we evaluate the coherence and readability of the summaries. 5.1 Data We use the ACL Anthology Network (AAN) (Radev et al., 2009) in our evaluation. AAN is a collection of more than 16000 papers from the Computational Linguistics journal, and the proceedings of the ACL conferences and workshops. AAN provides all cita-tion information from within the network including the citation network, the citation sentences, and the citation context for each paper.

We used 55 papers from AAN as our data. The papers have a variable number of citation sentences, ranging from 15 to 348. The total number of cita-tion sentences in the dataset is 4,335. We split the data randomly into two different sets; one for evalu-ating the components of the system, and the other for evaluating the extraction quality and the readability of the generated summaries. The first set ( dataset1 , henceforth) contained 2,284 sentences coming from 25 papers. We asked humans with good background in NLP (the area of the annotated papers) to provide two annotations for each sentence in this set: 1) label the sentence as Background, Problem, Method, Re-sult, Limitation, or Unsuitable , 2) for each reference in the sentence, determine whether it could be re-placed with a pronoun, removed , or should be kept . Each sentence was given to 3 different annotators. We used the majority vote labels.

We use Kappa coefficient (Krippendorff, 2003) to measure the inter-annotator agreement. Kappa coef-ficient is defined as: where P ( A ) is the relative observed agreement among raters and P ( E ) is the hypothetical proba-bility of chance agreement.

The agreement among the three annotators on dis-tinguishing the unsuitable sentences from the other five categories is 0.85. On Landis and Kochs(1977) scale, this value indicates an almost perfect agree-ment. The agreement on classifying the sentences into the five functional categories is 0.68. On the same scale this value indicates substantial agree-ment .

The second set ( dataset2 , henceforth) contained 30 papers (2051 sentences). We asked humans with a good background in NLP (the papers topic) to gen-erate a readable, coherent summary for each paper in the set using its citation sentences as the source text. We asked them to fix the length of the summaries to 5 sentences. Each paper was assigned to two hu-mans to summarize. 5.2 Component Evaluation Reference Tagging and Reference Scope Iden-tification Evaluation: We ran our reference tag-ging and scope identification components on the 2,284 sentences in dataset1 . Then, we went through the tagged sentences and the extracted scopes, and counted the number of correctly/incorrectly tagged (extracted)/missed references (scopes). Our tagging component achieved 98.2% precision and 94.4% re-call. The reference to the target paper was tagged correctly in all the sentences.

Our scope identification component extracted the scope of target references with good precision (86.4%) but low recall (35.2%). In fact, extracting a useful scope for a reference requires more than just finding a grammatical substring. In future work, we plan to employ text regeneration techniques to improve the recall by generating grammatical sen-tences from ungrammatical fragments.

Sentence Filtering Evaluation: We used Sup-port Vector Machines (SVM) with linear kernel as our classifier. We performed 10-fold cross validation on the labeled sentences ( unsuitable vs all other cat-egories ) in dataset1 . Our classifier achieved 80.3% accuracy.
 Sentence Classification Evaluation: We used SVM in this step as well. We also performed 10-fold cross validation on the labeled sentences (the five functional categories). This classifier achieved 70.1% accuracy. The precision and recall for each category are given in Table 4
Author Name Replacement Evaluation: The classifier used in this task is also SVM. We per-formed 10-fold cross validation on the labeled sen-tences of dataset1 . Our classifier achieved 77.41% accuracy. 5.3 Extraction Evaluation To evaluate the extraction quality, we use dataset2 (that has never been used for training or tuning any of the system components). We use our system to generate summaries for each of the 30 papers in dataset2 . We also generate summaries for the pa-pers using a number of baseline systems (described in Section 5.3.1). All the generated summaries were 5 sentences long. We use the Recall-Oriented Un-derstudy for Gisting Evaluation (ROUGE) based on the longest common substrings (ROUGE-L) as our evaluation metric. 5.3.1 Baselines We evaluate the extraction quality of our system (FL) against 7 different baselines. In the first base-line, the sentences are selected randomly from the set of citation sentences and added to the sum-mary. The second baseline is the MEAD summa-rizer (Radev et al., 2004) with all its settings set to default. The third baseline is LexRank (Erkan and Radev, 2004) run on the entire set of citation sentences of the target paper. The forth baseline is Qazvinian and Radev (2008) citation-based summa-rizer (QR08) in which the citation sentences are first clustered then the sentences within each cluster are ranked using LexRank. The remaining baselines are variations of our system produced by removing one component from the pipeline at a time. In one vari-ation (FL-1), we remove the sentence filtering com-ponent. In another variation (FL-2), we remove the sentence classification component; so, all the sen-tences are assumed to come from one category in the subsequent components. In a third variation (FL-3), the clustering component is removed. To make the comparison of the extraction quality to those base-lines fair, we remove the author name replacement component from our system and all its variations. 5.3.2 Results Table 6 shows the average ROUGE-L scores (with 95% confidence interval) for the summaries of the 30 papers in dataset2 generated using our system and the different baselines. The two human sum-maries were used as models for comparison. The Human score reported in the table is the result of comparing the two human summaries to each others. Statistical significance was tested using a 2-tailed paired t-test. The results are statistically significant at the 0.05 level.

The results show that our approach outperforms all the baseline techniques. It achieves higher ROUGE-L score for most of the papers in our test-ing set. Comparing the score of FL-1 to the score of FL shows that sentence filtering has a significant impact on the results. It also shows that the classifi-cation and clustering components both improve the extraction quality. 5.4 Coherence and Readability Evaluation We asked human judges (not including the authors) to rate the coherence and readability of a number of summaries for each of dataset2 papers. For each paper we evaluated 3 summaries. The sum-mary that our system produced, the human sum-mary, and a summary produced by Qazvinian and Radev (2008) summarizer (the best baseline -after our system and its variations -in terms of extrac-tion quality as shown in the previous subsection.) The summaries were randomized and given to the judges without telling them how each summary was produced. The judges were not given access to the source text. They were asked to use a five point-scale to rate how coherent and readable the sum-maries are, where 1 means that the summary is to-tally incoherent and needs significant modifications to improve its readability, and 5 means that the sum-mary is coherent and no modifications are needed to improve its readability. We gave each summary to 5 different judges and took the average of their ratings for each summary. We used Weighted Kappa with linear weights (Cohen, 1968) to measure the inter-rater agreement. The Weighted Kappa measure be-tween the five groups of ratings was 0.72.

Table 7 shows the number of summaries in each rating range. The results show that our approach sig-nificantly improves the coherence of citation-based summarization. Table 5 shows two sample sum-maries (each 5 sentences long) for the Voutilainen (1995) paper. One summary was produced using our system and the other was produced using Qazvinian and Radev (2008) system. In this paper, we presented a new approach for citation-based summarization of scientific papers that produces readable summaries. Our approach in-volves three stages. The first stage preprocesses the set of citation sentences to filter out the irrelevant sentences or fragments of sentences. In the second stage, a representative set of sentences are extracted and added to the summary in a reasonable order. In the last stage, the summary sentences are refined to improve their readability. The results of our exper-iments confirmed that our system outperforms sev-eral baseline systems.
 This work is in part supported by the National Science Foundation grant  X  X OPENER: A Flexible Framework to Support Rapid Learning in Unfamil-iar Research Domains X , jointly awarded to Univer-sity of Michigan and University of Maryland as IIS 0705832, and in part by the NIH Grant U54 DA021519 to the National Center for Integrative Biomedical Informatics.

Any opinions, findings, and conclusions or rec-ommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the supporters.

