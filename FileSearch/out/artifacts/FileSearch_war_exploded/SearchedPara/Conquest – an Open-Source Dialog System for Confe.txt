 Conducting applied spoken language interface re-search is generally a costly endeavor. Developing, deploying and maintaining real-world spoken lan-guage interfaces requires an existing infrastructure, a significant amount of engineering effort, and can greatly benefit from the availability of certain re-sources such as transcribed in-domain data. 
In an effort to enable applied research and to lower this high cost of entry, we have developed ConQuest ( Con ference Quest ions) an open-source spoken dialog system that provides access to schedule and technical program information during conferences. We believe the conference domain has a number of good properties for applied re-search: it includes a number of tasks of different complexities, it provides regular access to a real-world user population; it permits periodical rede-ployments and evaluations and therefore can pro-vide a natural common evaluation task for the spoken language interfaces community. 
The ConQuest system is constructed on top of the open, transparent and modular Olympus dialog system framework (2007), and can be easily reused across different conferences. To date, the system has been deployed in two conferences: InterSpeech 2006 and IJCAI 2007. Together with corpora col-lected from these deployments, the system is freely available for download (Conquest, 2007). 
We begin by describing the ConQuest function-ality in the next section. Then, in section 3 we pro-vide an overview of the system architecture and discuss the development process. In section 4 we briefly discuss the two deployment efforts. Finally, in section 5 we discuss related work and draw a number of conclusions. As Figure 1 illustrates, ConQuest is a mixed-initiative spoken dialog system that provides ac-cess to schedule and technical program information during conferences. 
Users can browse the schedule and find details about various papers or sess ions of interest by pro-viding identifying information, such as topics, ses-sion names, special events, paper titles, author names, specific dates and times, specific locations, or a combination thereof (e.g. turns 2, 4, 14). Addi-tionally, the system also allows uses to listen to current announcements and to cast their votes for a Best Paper Award (e.g. turns 10-17). 
The interaction is mixed-initiative; at any point, the user may switch the current focus of the con-versation (e.g. turn 8). ConQuest employs an adap-tive information presentation strategy that allows users to easil y navigate the schedule (see turns 3, 5 and 15). The system uses a rich repertoire of error recovery strategies to handle potential errors, in-cluding several fall-back st rategies (e.g. turn 13). The ConQuest s ystem was built using R avenClaw/ Oly mpus (2007), an open -source framework that facilitates research and developm ent in task ori-ented conver sational spok en language interfaces. Oly mpus consists of a collection of components for recognition, language understanding, dialog management, language generation, speech sy nthe-sis, etc., an d the correspondi ng co mmunication infrastructure . To date, Ol ympus has b een used to develop and deplo y a number of other sy stems spanning diff erent domains and interaction t ypes (Bohus and R udnick y, 20 03). 
A key characteristic of the Oly mpus framework is a clear sep aration between the dom ain independ-ent program s (or com ponents) and domain specific resources. T his decoupling prom otes reusability and significantly lessens the sy stem de velopm ent effort. In ConQuest, the authoring effort was fo-cused on developing resources such a s the lexicon, language m odel, grammar, dialog task specifica-tion, etc. Some interestin g, unanticipated engineer-ing challenges we faced during develo pment were dealing with foreign nam es and accented charac-ters and perform ing text norm alization on various fields (e.g. Alex S mith and Alexander S mith are the sa me author), while at the sa me time ensuring consistency between thes e various res ources. Be-low, we briefly comment of each co mponent and the corresponding resour ces. Figure 2 provides a top-level architectural view . 
Speech Reco gnition. Con Quest uses a recogni-tion server coupled t o a s et of parallel recognition engines: two SPHINX-II decoders (Huang et al., 1992) that u se gender-sp ecific acoustic models, and a DTMF (touch-tone decoder). Each recogni-tion engine uses class-based (e.g. paper titles, au-thor nam es, etc.), state-sp ecific trigram-language models. We started with an initial language model built using data collect ed with an early text-onl y protot ype. We then intern ally deplo yed a speech based sy ste m, collected mo re data, transcribed it, and used it t o retrain the language models. The final language models used during the InterSpeech deplo yment were trained from on a corpus of 6350 utterances. T he sy stem operated with a lexicon of 4795 wor ds, which includ ed 659 lexicalized (con-catenated) paper titles, and 1492 lexicalized author names, and 78 lexicalized session na mes. The pro-nunciations were generate d using CMU Dictionary and later manually corrected. Language understanding. The sy ste m uses th e Phoenix (Ward and Issar, 1994) r obus t parser to extract concepts from the recognition results. A dom ain-spe cific shallow semantic gra mma r was developed and concatenated with a do main-independent gra mmar for generic expressions like [Y es], [No ], [Date], [T ime], etc. Dialog m ana gem ent. ConQuest uses a Raven-Claw-based dialog manager (Bohus and Rudnick y, 2003). We d eveloped a d ialog task sp ecification for the conference s chedule domain, expressed a s a hierarchical plan for the interaction, which the RavenClaw engine uses to drive the dialog. In the process, the RavenClaw e ngine autom atically pro-vides additional generic c onversational skills such as error recov ery strategies and support for various universal dialog mechani sms (e.g. re peat, start-over, what-ca n-I-say , etc.) 
Backend/Dat abase. A backend agent looks up schedule infor mation from the database (stored as a flat t ext file). The back end agent als o performs dom ain specific pre-look up n ormalization (e.g. mapping author nam es to their canonical form s), and post-lookup processing of the returned records (e.g. clustering papers by sessions). The database file serves as starting point for constructing a num ber of ot her sy stem resources (e.g . language model clas ses , lexicon, etc.) 
Tem poral reference resolution agen t. Apart from the dat abase agent, the dialog manager also comm unicat es with an age nt that resolves te mporal expressions ( e.g. tom orro w at four p.m .) into ca-nonical form s. 
Language ge neration . ConQuest uses Rosetta , a tem plate-based language generation com ponent. The authoring effort at this level consisted of writ-ing various te mplates for the different system ques-tions and inf orm ation presentation pr ompts. 
Speech synt hesis. ConQuest uses the Cepstral (2005) speech s ynthesis engine, confi gured with an open-dom ain unit selection voice. We manually checked and corrected pronunciations for author names, vario us technical ter ms and abbreviations. The first developm ent of ConQuest sy stem was done for the Interspeech 2 006 conference held in Pittsburgh, PA. The it erati ve develop ment process involved reg ular interaction with pote ntial users i.e. rese arche rs who regularly attend c onferences. Seven developers working ha lf ti me part icipated in this develop ment for about three months. An esti-mated one man-y ear of effort was spent . This esti-mate does not include the effort involved in transcribing the data collec ted after the c onference. 
Two sy stems were deployed at the Interspeech 2006 conference: a desktop s ystem using a close-talking m icro phone placed by the registration desk, and a telephone-based system . Throughout the conference we collect ed a corpus of 174 sessions. We have orthographicall y transcribed the user ut-terances and are currently analyzing the data; we plan to soon release it to the community, together with detailed statistics, the full system logs as well as the full system source code (Conquest, 2007). 
Following Interspeech 2006, ConQuest was re-deployed at IJCAI 2007 conference held in Hy-derabad, India. The second deployment took an estimated two man-months: three developers work-ing half-time for over a month. The significant parts of the second deployment involved incorpo-rating scheduling data for the IJCAI 2007 and im-plementing two new requirements i.e. support for workshops and Indian English speech recognition. The IJCAI development had fewer iterations than the first effort. The two desktop systems set up at the conference venue collected 129 sessions of data. This data is currently being transcribed and will soon be released to the community through the Conquest website (Conquest, 2007). 
Through these two deployments of ConQuest the system specifications have been refined and we expect the development time to asymptote to less than a month after a few more deployments. Our primary goal in developing ConQuest was to enable research by constructing and releasing an open-source, full-fledged dialog system, as well as an initial corpus collected with this system. The system is built on top of an open, transparent and modular infrastructure that facilitates research in spoken language interfaces (Olympus, 2007). 
There have been a number of other efforts to collect and publish dialog corpora, for instance within the DARPA Communicator project. A more recent project, that operates in a domain similar to ConQuest is DiSCoH, a Dialog System for Confer-ence Help developed by researchers at AT&amp;T, ICSI and Edinburgh University, and deployed dur-ing the SLT-2006 workshop (Adreani et al., 2006). While their goals are similar, i.e. to enable re-search, DiSCoH and ConQuest differ in a number of dimensions. Functionality-wise, DiSCoH offers general conference inform ation about the venue, accommodation options and costs, paper submis-sion, etc., while ConQuest provides access to the technical schedule and allows participants to vote for a best paper award. DiSCoH is built using AT&amp;T technology and a call-routing approach; ConQuest relies on a plan-based dialog manage-ment framework (RavenClaw) and an open-source infrastructure (Olympus). Finally, the DiSCoH ef-fort aims to develop a richly annotated dialog cor-pus to be used for research; ConQuest X  X  aim is to provide both the full system and an initial tran-scribed and annotated corpus to the community. 
The conference domain is interesting in that it allows for frequent redeployment and in theory provides regular access to a certain user-base. It should therefore facilitate research and periodical evaluations. Unfortunately, the dialog corpora col-lected so far using DiSCoH and ConQuest have been somewhat smaller than our initial expecta-tions. We believe this is largely due to the fact that the systems provide information that is already accessible to users by other means (paper confer-ence program, web-sites, etc.). Perhaps combining the functionalities of these two systems, and ex-panding into directions where the system provides otherwise hard-to-access information (e.g. local restaurants, transportation, etc.) would lead to in-creased traffic. 
