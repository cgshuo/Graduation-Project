 Nowadays with the rapid development of e-commerce, both the amount and the variety of online products are increasing constantly. Same products are offered by different websites and different merchants with disorganized descriptions. Apply-ing Entity Matching (EM for short) to e-commerce data, means finding records representing the same products from mult iple sources, makes it convenient for customers to compare pri ces from different sellers.

So far, plenty of research work has been done on EM. To avoid expensive comparisons of all records, some blocking methods are proposed [1], which par-tition candidate records into smaller subsets and reduce the number of required comparisons actually. Classifiers are trained to identify record pairs as match or non-match. However, we notice that in the field of e-commerce, rare work has been done. Due to inconsistent description, loss of attribute values, cacography and some other reasons, EM for e-commerce data can hardly achieve good re-sults. In fact, a recent study shows, cu rrent solutions can achieve only about 30% to 70% F-measure for product matching.

In this paper we present an EM system called EPEMS especially for e-commerce data. Compared to existing systems, EPEMS has following advan-tages: (1) a more appropriate sorting-based blocking method is developed for e-commerce data to minimize the number of comparisons, rather than using a traditional SNM [2] (Sorted Neighborhood Method); (2) the similarity of product pictures is used to improve matching results. The architecture of EPEMS is shown in Fig. 1. The most important components of our system include the record-pair generator and the comparator. The record-pair generator uses a blocking method to reduce the number of comparisons. It generates record pairs in which records are likely to match each other. The comparator is used to comp are two records in a pair and decides if they match or not.

We first extract data from a data source and convert the extracted data into the internal format. Then, a sorting k ey is defined and all records are sorted by this key. The key is not necessarily unique a nd can be generated by concatenating attribute values (or substrings of values) in the hope that matching records are assigned similar sorting keys and are thus close. The functionalities of the two main components record-p air generator and comparator will be introduced in detail in following paragraphs. At the end we use Warshall X  X  algorithm [3] to calculate the transitive closure for all identified matches. 2.1 Record-Pair Generator The record-pair generator is used to sel ect pairs of records that should be com-pared. Existing sorting-based blocking methods always slide a window over the sorted data. Only records in the same wi ndow will be compared with each other. Among these strategies that adapt the window size, DCS++ [4] (Multiple Du-plicate Count Strategy) has the best performance.

DCS++ only compares the first record in a window with the successors, and window size is varied according to the number of identified matches. Let w be the initial window size, t i be the i -th record in the sorted record list, W( i, i + w  X  1) be the initial window which starts by t i . Whenever a match is identified, the w  X  1 adjacent records will be added to the current window. Assuming that the ( t , t k ) can be returned. Hence, W( j, j + w  X  1) can be skipped because matches in this window can be returned by calculating the transitive closure.
As EM for e-commerce data always has a poor performance, if a non-match pair is identified as match, a window will be skipped by error. Matches in this window will be missed and calculating transitive closure for the wrong match will lead to more wrong matches. Therefore, we propose a novel strategy based on DCS++, which performs a different approach to extend windows for equivocal matches.

In W( i, i + w  X  1), t i is first compared with the w  X  1 successors. If t j in the current window is identified as an exact matching record of t i , then what we should do is the same as DCS++. If t j is a likely match of t i but we cannot make sure, the next w  X  1 adjacent records will be added into the current window without skipping W( j, j + w  X  1). Thus, we don X  X  need to calculate the transitive closure for it. 2.2 Comparator Most traditional comparators are text-based. They calculate the similarities be-tween attribute values of different record s, using metrics such as Levenshtein distance, SoundEx, etc. A classification algorithm is used to train a model based on those similarities. This model will be used to identify record pairs.
E-commerce data always contains pictures. The same products usually have the same or similar displayed pictures. Therefore, we use the similarity of pictures to improve matching results. When the text-based comparator can X  X  achieve an assured result, image similarity will be utilized.

We extract features from all pictures using a scale-inva riant feature transform algorithm, and then use Hierarchical Clust ering to partition these extracted fea-tures into clusters and build a vocabulary tree [5]. The leaf nodes of the resulting tree are defined as words, and the pictures are regarded as documents. That is, pictures can be described by words, we ca n calculate the similarity between two pictures according to the number of th e same words they contain. We adjust the weights of textual similarity and im age similarity to decide whether records match or not. The system is developed in Java. Its deployment environment is JDK1.7 with the database system MySQL.

We have built a simple demonstration system 1 . The data set for the demon-stration contains some book records co llected from several online bookstores, such as ZOL, Boku, JD, etc. Both inconsistent description and loss of attribute values exist. And displayed pictures of those books are also available. The snap-shot of the demonstration system is shown in Fig. 2.

The system can be demonstrated with the following steps:
Step 1. A user can run EPEMS alone, some parameters have been set and the user can choose an initial window size. The system need some time to operate, then the result including precision, recall and matching details will be displayed on the screen.

Step 2. A comparison between EPEMS and a traditional solution for EM is also available. The result in Fig. 2 shows the advantage of EPEMS over the existing solution.
 Acknowledgment. This work was partially supported by Chinese NSFC project (61170020,61402311,61440053,61402313,61472263)and the US National Science Foundation (IIS-1115417).

