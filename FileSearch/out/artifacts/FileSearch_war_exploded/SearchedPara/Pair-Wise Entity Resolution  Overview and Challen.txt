
Information integration is one of the oldest and most im-portant computer science problems: Information from di-verse sources must be combined, so that users can access and manipulate the information in a unified way. One of the central problems in information integration is that of Entity Resolution (ER) (sometimes referred to as deduplica-tion). ER is the process of identifying and merging incoming records judged to represent the same real-world entity.
For example, consider a company that has different cus-tomer databases (e.g., one for each subsidiary), and would like to integrate them. Identifying matching records is chal-lenging because there are no unique identifiers across the dif-ferent sources or databases. A given customer may appear in different ways in each database, and there is a fair amount of guesswork in determining which customers match. Decid-ing if records match is often computationally expensive , e.g., may involve finding maximal common subsequences in two strings. How to combine matching records is often also appli-cation dependent . For example, say different phone numbers appear in two records to be merged. In some cases we may wish to keep both of them, while in others we may want to pick just one as the  X  X onsolidated X  number.

Another source of complexity is that newly merged records may match with other records. For instance, when we com-bine records r 1 and r 2 we may obtain a record r 12 now matches r 3 . The original records, r 1 and r 2 , may not match with r 3 , but because r 12 contains more information about the same real-word entity that r 1 and r 2 represent, the  X  X onnection X  to r 3 may now be apparent. Such  X  X hained X  matches imply that new merged records must be recursively compared to all records.
 There are many ways to perform ER, but in this talk I will explore only one general approach, where the deci-sion of what records represent the same real-world entity is done in a pair-wise fashion. Furthermore, we assume that the matching is done by a  X  X lack-box X  function, which makes our approach generic and applicable to many do-mains. Thus, given two records, r 1 and r 2 , the match func-tion M ( r 1 ,r 2 ) returns true if there is enough evidence in the two records that they both refer to the same real-world entity. We also assume a black-box merge function that combines a pair of matching records.

In this talk I will discuss the advantages and disadvan-tages of such a generic, pair-wise approach to ER. And even though the approach is relatively simple, there are still many interesting challenges. For instance, how can one min-imize the number of invocations to the match and merge black-boxes? Are there any properties of the functions that can significantly reduce the number of calls? If one has available multiple processors, how can one distribute the computational load? If records have confidences associated with them, how does the problem complexity change, and how can we efficiently find the confidence of the resolved records? In the talk I will address these challenges, and re-port on some preliminary work we have done at Stanford. (This Stanford work in joint with Omar Benjelloun, Tyson Condie, Johnson (Heng) Gong, Jeff Jonas, Hideki Kawai, Tait E. Larson, David Menestrina, Nicolas Pombourcq, Qi Su, Steven Whang, Jennifer Widom.) For additional information on ER and our Stanford SERF Project, please visit http://www-db.stanford.edu/serf/. D.2.8 [ Information Storage and Retrieval ]: Information Search and Retrieval X  clustering ; H.2.8 [ Database Man-agement ]: Database Applications X  data mining Algorithms Entity Resolution, Data Cleaning
