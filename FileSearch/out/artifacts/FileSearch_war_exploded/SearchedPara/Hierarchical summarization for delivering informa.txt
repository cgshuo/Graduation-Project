 1. Introduction
In recent years, the number of Internet users accessing information via handheld devices such as personal digital assistants (PDAs) and web-enabled mobile phones has been on the rise, and is projected to continue to increase. 1 , 2 Indeed, the ability to access information while away from one X  X  desktop computer is a promising addition to Web use, as many personal information needs are generated while one is away from the home or office ( Buyukkokten, Kaljuvee, Garcia-Molina, Paepcke, &amp; Winograd, 2002; Freire, Kumar, &amp; Lieuwen, 2001 ). Recently, it has been noted that mobile computing can and should be extended to support decision making in organizations, by providing professionals with a means to access relevant information whenever and wherever needed ( Yang &amp; Wang, 2007 ). This might include remote access to documents on a company intranet, checking one X  X  email while traveling, or keeping up with the latest news and financial information.
All of these activities are likely to be essential to a busy professional X  X  ability to keep up-to-date on informa-tion pertinent to decision making.

While many applications have been developed in order to support mobile Internet access, the challenges of using handheld devices in this capacity are well documented. For example, online content is typically designed to be displayed on the screen of a desktop computer, and is often confusing and difficult to navigate when viewed on a small device. While some large Web sites, such as those of the New York Times and Amazon.com, have special versions for wireless devices, this is an excessive amount of maintenance work for most Web site administrators. In addition, while improvements continue to be made in terms of the memory size and power of handheld devices, limited bandwidth still means that users face slow download speeds when trying to view Web documents on their PDAs or phones.

To address these problems, previous research has taken two main directions. The first approach involves reformatting or adapting Web pages to be more appropriate for viewing on a small screen, without altering their original content. For instance, this might be done by splitting a given page into smaller parts to be dis-played one at a time (e.g. Chen, Ma, &amp; Zhang, 2003; Milic-Frayling &amp; Summerer, 2002 ), or by delivering only the objects of a page deemed to be most important and eliminating non-essential items such as graphics (e.g.
Yin &amp; Lee, 2004 ). To contrast, a second method is to actually transform the content of the documents to be more suitable for delivery to and display on a small device, as suggested by Trevor, Hilbert, Schilit, and Koh (2001) . Following this second approach, summarization of Web pages has been introduced as a means of pre-senting the user with only the most important content expressed in the text on a page (e.g. Buyukkokten, Gar-cia-Molina, &amp; Paepcke, 2001a; Buyukkokten, Garcia-Molina, &amp; Paepcke, 2001b; Seki, Eguchi, &amp; Kando, 2004; Sweeney, Crestani, &amp; Tombros, 2002; Yang &amp; Wang, 2007 ). Automatic summarization is the process of condensing a text, while at the same time preserving its main points ( Radev, Hovy, &amp; McKeown, 2002 ).
This approach addresses the issue of the limited bandwidth as it reduces the amount of data that needs to be transferred to the user X  X  mobile device. In addition, the short summaries can be viewed more easily on a small screen.

Summarization is especially appropriate for delivering Web-based content to mobile devices in the context of decision support in organizations. Systems often present too much information to users during a decision making process ( Ackoff, 1967 ), and tasks that involve interpreting text are especially susceptible to problems of information overload ( Hiltz &amp; Turoff, 1985 ). To this end, text summarization can be used as a means to filter out less relevant material, presenting the user only with that deemed necessary for the task at hand.
In fact, previous research suggests that the use of summaries as a proxy for full-length texts does not signif-icantly affect one X  X  reading comprehension ( Morris, Kasper, &amp; Adams, 1992 ). For a user who needs to access online documents via a PDA or mobile phone in order to keep abreast of work-related information, summa-ries can be used in order to help him or her determine if a document is relevant, before spending the time and wireless bandwidth accessing the full document.

In the current paper, we present and evaluate a novel text summarization method, which is appropriate for information delivery to small, mobile devices. Our method, which will be described in detail in Section 2 , induces a hierarchical structure for an input document, by ranking its sentences with respect to salience. Only the most representative sentences are initially delivered to the user X  X  PDA or mobile phone, so that she can decide if the document X  X  general topic is relevant to her needs. If needed, the user may then  X  X  X rill-down X  X  to view sentences at deeper levels of the hierarchy. It should be noted that such sentences, while deemed by the summarizer as being less salient in terms of the overall topic of the document, may express finer details of the document that interest the reader, or may answer particular questions that she has. Thus, while most methods produce summaries that are either indicative (i.e. of whether or not a document is relevant to a user X  X  information need) or informative (i.e. providing the information contained in the whole document) ( Brandow,
Mitze, &amp; Rau, 1995 ), hierarchical summaries can be both indicative and informative. This is because if upon seeing the initial summary the user decides the document is in fact relevant, she can then obtain more details of the document X  X  information content at deeper levels of the hierarchy.

Other methods for summarization of Web pages for delivery to small devices have been previously inves-tigated. For example, Seki et al. (2004) developed a method that classifies sentences in an input document by their functions (e.g. sentences offering background information versus those providing a key description of the document X  X  theme), in order to rank them by importance. In contrast to our work, they focus on creating a summarizer to handle a particular genre of document  X  the opinion news article. In addition, they do not aim to develop hierarchical summaries but rather, their algorithm creates short, 3-sentence summaries that can be delivered to mobile phones. Another approach is  X  X  X ccordion summarization, X  X  introduced by Buyukkokten et al. (2001a, 2001b) and Buyukkokten et al. (2002) , in which the basic idea is to reduce the amount of data transferred to a mobile device by sending it incrementally. However, one major difference in comparison to our work is that their method relies on HTML artifacts (e.g. tags indicating paragraphs and lists) that denote the hierarchical structure of a document.

In other related work, Yang and Wang implemented a summarization method based on the fractal theory ( Yang &amp; Wang, 2007 ). Their approach is especially appropriate for viewing large Web-based documents, as it makes extensive use of a document X  X  inherent structure. For instance, an HTML news document might be made up of sections, paragraphs, sentences, terms and then words. This structure is used to create a skeleton summary, to which finer details are then added. Their method has also been applied to summarizing an entire
Web site, such as Yahoo! News, as they note that news sites have an extensive hierarchical structure that can be exploited by the fractal summarization technique ( Yang &amp; Wang, 2003 ). In contrast to the previous approaches, hierarchical summarization can be applied to any textual online document that a user wishes to access from a mobile device, as no prior assumptions are made as to the desired document X  X  format, struc-ture or genre.

Presently, we will introduce and evaluate our method. While Section 2 will provide details of the summa-rization algorithm, we will present one application of hierarchical summarization in Section 3 . In particular, we have implemented the method in an email summarization and delivery system, which accesses the user X  X 
Web-based email account, summarizes each document in its inbox and delivers the summaries to the user X  X  mobile device. In Section 4 , we will present a task-based evaluation of the implemented system, which emu-lates the experience of a user who wishes to keep informed of current news and financial information through-out the day using her Web-enabled mobile phone. More specifically, the subjects in our study used the hierarchical summaries as well as several baseline methods, to answer questions about a set of news articles sent to the user X  X  email account (e.g. by a news alert service). We will demonstrate that the subjects achieved better task accuracy when using the hierarchical summaries, as compared to three other summarization meth-ods. In addition, as compared to the case where the full text of the articles are sent to the user X  X  phone, the new method reduces the number of bytes transferred per user request by more than half. Even more promising is the finding that users took no longer to complete the tasks and were just as accurate as they were in the case where they were sent the full text articles. In other words, our results concur with those of previous researchers in that automatically produced summaries can provide just enough information to users, so that they can make decisions as effectively as if they had read the full text of the document ( Morris et al., 1992 ). 2. Hierarchical summarization
In this section, we describe our hierarchical summarization algorithm. Fig. 1 illustrates the architecture of our summarization method, which is a three-step process involving document preprocessing, the scoring of sentences with respect to their importance to the theme of the document, and finally, the hierarchical nesting of the sentences. In building the system, we have employed the MEAD summarization environment ( Radev et al., 2004 ). The input to the summarizer is a Web-based document. Given the document to summarize, the textual content is extracted from it, and is segmented into sentences. As described in Radev et al. (2004) , this is done via the use of regular expressions. Next, the sentences are assigned salience scores and are nested hier-archically based on these scores. These two steps are described in detail below. It should be noted here that our summarizer treats only the textual content of an input document; the treatment of graphics, sound files and other data found on a Web page is beyond the scope of our current work. 2.1. Sentence scoring In the second step of the process, a salience score is computed for each sentence in the input document.
Here, we perform the scoring algorithm used in the centroid-based summarization method, which has been shown to produce generic (i.e. not query-sensitive) summaries of a similar quality to those created manually by humans ( Radev, Jing, Stys, &amp; Tam, 2004a ). In this procedure, the final score for a given sentence S sum of three feature-based scores of S i : the centroid value, positional value, and its overlap with the first sen-tence in the document. The final scores of the sentences are used to place them within the hierarchical sum-mary, as will be described in 2.2 .

The centroid value of S i , C i , represents the importance of the sentence, in terms of how well it represents the central topic of the input document to be summarized. In particular, C tence contains words that are statistically important to the document. While the centroid value has often been used in creating summaries from a set of topically related documents (i.e. in producing multi-document sum-maries, as detailed in Radev et al., 2004a ), the centroid method is also appropriate for creating summaries of single documents. In this case, an input document is viewed as a set of sentences on possibly different topics.
To obtain the centroid value for each sentence in the document, the document centroid is first created. This is done by representing the document as a weighted vector of the words in it. Each word (or element) in the vector has a weight corresponding to its TF * value, where TF is the term frequency of the word in the input document, and IDF (inverse document frequency) measures the proportion of all documents in a large collec-tion of documents that contain the word ( Salton &amp; Buckley, 1988 ). In other words, content words that are important in describing the document X  X  topic will have high TF words that do not convey as much topical information about the document. As detailed in Radev et al. (2004a) , the centroid for a document to be summarized consists of all words in the document that have a
TF * IDF score above a pre-defined threshold, thus eliminating function words that do not contain topical information (e.g. articles, prepositions, etc.) The weight, or centroid score, of each word in the document,
C w , i , is its respective TF * IDF score. In scoring a given sentence S values, C w , i of all of the words it contains:
The next sentence characteristic used in scoring, the positional value of S input document to be summarized. More weight is given to sentences that appear earlier in the document than those that appear later. It should be noted here that this implementation of the position score is a design choice based on the fact that we are currently summarizing news articles, which are typically written using the  X  X  X nverse pyramid X  X  structure, in which more important information is given to the reader first, followed to hold true, the position parameter could be modified or eliminated from the sentence scoring mechanism. For example, in the case of summarization of personal email, where we might expect the first one or two sentences of the text to express a salutation rather than the main point of the communication, we should tune the sentence position score to take this into account.

In the current implementation, the first sentence in the document is assigned the score, C sponds to the centroid value of the highest-ranking sentence. The positional value of the sentences are com-puted as follows, where there are n sentences in the document:
Next, the first sentence overlap value, F i , quantifies the similarity of S
The first sentence in a text is likely to convey information about its main theme or topic (i.e. a  X  X  X opic sen-tence X  X ). S i and the first sentence of the document are represented as k -dimensional vectors of words, where k is the number of words in the document X  X  centroid (i.e. k is the number of content words in the document with a TF * IDF score over the predetermined threshold). The value at each position i in the sentence vector is the number of occurrences of the given word, w i , in the sentence. The overlap value for S product of the two sentence vectors:
Thus we are comparing the overlap of the content words in the two sentences. Again, like the positional value, the first sentence overlap value is a quantity that can be tailored depending on the genre of the text to be summarized. For example, in the case of summarizing personal email, the subject line might be substi-tuted in place of the first sentence, in order to identify sentences that are likely to contain information impor-tant to the central topic of the email.
 Finally, the salience score of S i is the sum of the three feature scores: 2.2. Hierarchical nesting
In the third stage of processing, the salience scores of the sentences are used to induce a hierarchical struc-ture. In addition, as will be illustrated, the positioning of the sentences in the source document is respected in order to promote cohesion in the resulting summary. A tree is constructed from all of the sentences such that its root is the sentence with the highest salience and, given any sentence node with salience l at depth d , all sentences above that depth have a salience greater than l , while the scores of the rest of the sentences are below l . As will be shown, lower-ranking sentences are simply hidden at each level, so that the order of presentation of the sentences in the source document is preserved.

As explained in Section 1 , one key feature of hierarchical summaries is that they can be both indicative and informative with respect to the summarized document and the user X  X  information need. Presently, we have implemented the sentence nesting algorithm such that at the first level, the top four sentences are shown to the user. In other words, the user first sees the four sentences deemed as being the most representative of the document X  X  overall topic. This can help the user in deciding if the topic is interesting to her. If the topic is indeed relevant to the user X  X  need, the lower-ranking sentences can then be viewed by going deeper into the hierarchy (i.e. by  X  X  X xpanding X  X  the summary). Specifically, in the current implementation, at each of the lower levels, the next three best sentences are shown. It should be noted that the number of sentences to be shown to the user at each level can be varied according to the screen size of the mobile device to be used and/or with respect to how conservative a user wishes to be in terms of using available bandwidth to transfer text to her phone or PDA.

Fig. 2 illustrates the hierarchical summary that is produced for a document containing 20 sentences, whose salience scores and relative rankings are shown in Table 1 . In addition, the full text of the article summarized can be found in Fig. 3 . As can be seen in Fig. 2 , the four most salient sentences are numbers 1, 2, 3 and 10, which are shown at the initial level of the hierarchy. Sentences 4 X 9, and 11 X 20, have been hidden from the user. To create the second level of the hierarchy, the algorithm finds the next three highest-ranking sentences between sentences 4 X 9 (4, 7, and 8) and between sentences 11 X 20 (11, 13, and 14). Using this procedure, deeper levels are added to the hierarchy until all sentences have been included.

The idea behind hierarchical summarization is that the user is first shown the most representative sentences of a document, in order to get the gist of it. If she finds the initial summary interesting or relevant to her infor-mation need, she may drill-down the finer details of the document by expanding the summary. In other words, the initial 4-sentence summary can be viewed as an indicative summary, which can help a user in deciding if the given article is interesting enough to invest more of her resources in order to view more of the document. Thus, the motive is to save time, bandwidth and screen space by delivering and displaying the most salient informa-tion first, while at the same time giving the user the opportunity to view more of the document if desired. 3. Application: a news delivery system
In order to evaluate the effectiveness of our summarization method, as well as to demonstrate its potential in terms of supporting decision making when away from one X  X  desk, we have implemented a news summari-zation and delivery system that works with the user X  X  Web-based email account. The current system was imple-mented using the DeckIt Wireless Application Protocol (WAP) mobile phone emulator,
Gmail account. As previously mentioned, we address the scenario in which a user wants to keep current on news and financial information throughout the day, by accessing Web documents on her mobile phone.
We assume the the user subscribes to a service in which news and financial articles are sent to her Gmail account, and she checks the account periodically while away from her desk.
 Fig. 4 gives an overview of the implemented system. Periodically, the system X  X  mail daemon connects to the
Gmail account X  X  inbox and caches new email into the system X  X  disk. The detection of new mail thus starts the summarization process previously described in Fig. 1 . Once the summaries of the documents are ready, they are sent to the mobile phone emulator, over the WAP protocol.

Figs. 5 and 6 illustrate how the user interacts with the system. As shown in Fig. 5 , what the user views first on the phone X  X  screen is the list of documents that are in the email account X  X  inbox. In particular, the docu-ments are listed by number (i.e. in the order in which they were received) with their titles. In this case, the user wishes to view news article 6, which is the same article used in the examples in Section 2.2 . In the middle panel of Fig. 6 , the user has opened up the first level of the summary for article 6, in which sentences 1, 2, 3 and 10 are displayed. Finally, the right-most panel shows what the user sees when sentences have been hidden in the hierarchical summaries. In this case, sentences 4 X 9 have been hidden, but can be expanded by clicking on the corresponding highlighted area. This action would take the user to the second level or depth of the hierarchy for article 6, in which sentences 4, 7 and 8 would be delivered to her phone. 4. Experiment
We conducted a task-based user experiment in order to evaluate the effectiveness of hierarchical summari-zation for delivering information to a user X  X  small, wireless device. In particular, we wanted to evaluate our method, as implemented in the Web-mail summarization and delivery system described in Section 3 ,asto how well it facilitates the finding of desired information, when using one X  X  mobile phone rather than desktop computer. Therefore, we created an experiment in which subjects were asked to complete several tasks that involved both finding and comprehending textual documents, with the use of automatically produced summa-ries sent to a mobile phone. In other words, we have used the  X  X  X imulated information needs X  X  approach to eval-uating our summarization method ( Borlund &amp; Ingwersen, 1997 ), in which realistic information-seeking tasks are given to subjects in a controlled environment.

As will be detailed in 4.1 , for our experiment, we designed a task similar to that of Morris et al. (1992) , which is designed to measure a user X  X  reading comprehension of a set of articles that have been summarized, and in which users are asked to find the answers to key factual questions surrounding the articles. In addition to Morris and colleagues, others have also evaluated summary quality and usefulness based on how well they 2004 ) from Web-based documents. This framework allowed us to assess the effectiveness of our hierarchical summarization method in a realistic setting. 4.1. Tasks
We created five unique sets of news documents, consisting of 10 Associated Press (APW) articles each. The 10 articles in a given set were published on the same day, and were emailed to a Gmail account that was estab-lished for our experiments. Each set of articles collected represents a snapshot of current events at a particular point in time, and included both world news stories as well as financial updates. In the experiments, subjects used our system to find answers to a set of questions about the set of news stories they were given. In partic-ular, we created a task for each of the five document sets, with each task involving 10 questions (one question about each article).

We used multiple choice questions in which there were five possible answers, but only one correct answer, for each question. An example of a document set (i.e. the headlines of the 10 documents mailed to the user in one task) is shown in Fig. 7 . The questions comprising each task concerned the central facts about the stories or events described in the respective articles. For instance, the questions used in the task for the document set shown in Fig. 7 are given in Fig. 8 . In addition, the possible answers are shown for the first four questions. For all questions in all of the five tasks, the answers were reported in their respective articles, although they could not be answered by reading the title of the article alone. Therefore, it was not necessary for subjects to use previous world knowledge or reasoning in order to answer the questions. 4.2. Treatments
In completing a given task, a subject was assigned to one of six treatments (or system settings). In addition to the hierarchical summarization setting, we included settings at the two extremes: the full text setting, in which the unaltered, original articles were sent to the user, as well as the setting in which nothing was given to the subjects other than the task questions. This control setting accounts for the possibility that the questions themselves may provide some information about the news stories to the subjects, or that the subjects may know some of the facts surrounding the news stories. Finally, we also administered three other summarization methods, which are commonly used as baselines in evaluating text summarization systems (e.g. in the Docu-ment Understanding conference ( Over et al., 2003 ))  X  a top 20% summary (the highest-ranking sentences by salience scores, as described in Section 2) , a lead-based summary as well as a randomly produced summary. All six treatments used in the experiment are described in Table 2 .

Note that the system is used in the first five settings, with nothing being presented to the user in the control ( X  X  X o summary X  X ) setting. In addition, in the five treatments in which the system is used, the user sees the same initial display on the mobile phone, regardless of the summarization setting. In other words, the user first sees the email inbox, which shows a list of the 10 headlines of the articles in it, as depicted in the left-most panel of
Fig. 6 . Therefore, Table 2 describes what the subject sees after selecting one of the news story headlines from the inbox. 4.3. Experimental design
A total of 39 subjects was used in the experiment. They were recruited through an email sent to students studying information and computer sciences at the University of Michigan. All subjects self-reported as native or near-native English speakers who were experienced Web users. Finally, they were paid for their participa-tion in the study.

Although they were encouraged to complete all five of the tasks, the subjects were not required to do so (due to university research policies). Therefore, the researchers made sure that each of the five tasks and six treatment settings were assigned approximately equally often in the experiments. A balanced, incomplete block design was used, and the counts of each of the 30 possible document set-treatment pairings are shown in Table 3 . In addition, the treatment and document set orderings were varied in order to prevent learning effects.
Here, one should note that while the varying of the document set and treatment pairings helps in reducing potential topic effects, user effects may be significant in our study, as is often the case in information retrieval user studies. For example, even when experimental subjects have a similar level of search experience, differ-ences in innate abilities (e.g. in reading comprehension or in overall cognitive processing) may lead to differ-ences in performance ( Turpin &amp; Scholer, 2006 ).

Before the experiments, the subjects were not given any information about the system that they would be using. They were informed that they would be participating in an information retrieval study and that its pur-pose was to examine how people search for information using a Web-enabled mobile phone. Finally, the sub-jects were told to answer the questions in each task as accurately as possible and were given unlimited time to complete the tasks.
 5. Variables studied and research questions
In comparing the users X  performance on the information-seeking and comprehension tasks across the six experimental treatments, we examined the time taken to complete a task (recorded in minutes and seconds), as well as task accuracy (i.e. proportion of questions correctly answered, in which each question is either cor-rect or incorrect). These are commonly used measures in extrinsic, or task-based evaluations of text summa-rizers ( Hand et al., 1997 ). In addition, they have also been used to quantify the extent to which subjects achieve satisfactory reading comprehension through the use of summaries ( Morris et al., 1992 ). Furthermore, we obtained the number of requests made by the user, which also corresponds to the number of mouse clicks (or hits) in this case, as well as the total number of bytes transferred while completing a task. This information was obtained from the log file of each user X  X  session (completing one task using one system setting). We then computed for each session, the number of bytes transferred per user request, in order to compare the efficiency of each of the methods tested. This measure gives us an idea of how much data has to be transferred to and displayed on the user X  X  wireless device each time he or she interacts with the system, in order to complete the search task at hand.

The means of the three response variables across the six settings are shown in Table 4 . The subjects were most accurate on the information-finding tasks when using the setting in which they were shown the full text of the news articles, with an average task accuracy of 0.94. They also took more time to complete the tasks (an average of 19.5 min) than they did when using the article summaries. This finding is not very surprising, as in the full text case, the answers to the questions will always be available to the user, such that it is simply a mat-ter of taking the time to find them. However, as will be shown in Section 6 , the differences in time and accuracy are not significant between the full text setting and that in which subjects used hierarchical summaries to com-plete the tasks.

Another expected finding is that all of the summarization methods reduce the data transferred per user request, by more than half as compared to the full text setting. This is intuitive since, when using the summa-rization techniques, the goal is to prioritize information by ranking the sentences according to salience and to display the sentences incrementally in rank order. Finally, we can see that in the  X  X  X o summary X  X  treatment, where subjects answered questions about a document set without access to the documents or their summaries, the accuracy is very low (an average of 0.32). Therefore, there is no evidence that the questions themselves contain too much information about the news stories and we are not concerned about the task being trivial.
In the next section, we will concentrate on answering three research questions using the data from the user study: 5.1. Are there significant differences between the five treatments (systems) when the effects of task difficulty are controlled?
The means of the three response variables, time to task completion, task accuracy and bytes transferred per hit, which are shown in Table 4 , appear to differ between the five systems. In addition, in assigning subjects to a given task (i.e. set of documents and questions to answer) and setting, we tried to ensure an approximately even distribution of task-setting pairing. Nonetheless, we want to investigate the effect of the five system treat-ments on the three response variables when the possible effects of the task are controlled. For example, it may be the case that some tasks were more difficult than others. Likewise, it could be possible that certain task and system combinations resulted in longer task completion times or lower rates of accuracy. 5.2. Are there any significant differences in task performance and efficiency between the hierarchical summarization setting and the full text setting?
If we establish, in investigating our first research question, that there is a significant system effect on the three response variables, then we should make pairwise comparisons between the five systems. In particular, as shown in Table 4 , the highest mean task accuracy (0.94) occurs when subjects use the full text of the news documents to complete the tasks. To contrast, the accuracy when using the hierarchical text summaries of the lead-based summary setting, has a mean accuracy of only 0.68. Therefore, we will compare the hierarchical summary case versus the full text setting in order to see if the differences between them are statistically significant. 5.3. Are there significant differences between the hierarchical summarization setting and the other three summarization methods?
Finally, we wish to compare the three response variables between the hierarchical summarization setting and the three other summarization methods. As mentioned previously, these three methods are commonly viewed as baseline systems. As can be seen in Table 4 , all four of the summarization methods reduce the num-ber of bytes transferred per hit, as compared to the full text case. Therefore, we want to investigate whether the new, hierarchical summarization method offers any significant advantages over the baseline methods in terms of the users X  performance on the tasks. 6. Analysis
Below, we analyze the data collected from our user study in order to address the three research questions put forward in the previous section. 6.1. Setting effect when task is controlled
In order to examine if there is an overall setting (or system) effect, when controlling for the task adminis-tered to the subjects, we conducted an analysis of variance (ANOVA) for each of the three response variables, which were all approximately normally distributed. First, we removed the cases where subjects were given only the tasks with no source articles or summaries (a control setting), in order to consider only the differences between the five systems (where either the full text documents were given to the user or one of the four types of summaries). In each ANOVA, the predictors were the setting used, the task/document set used, and the interaction between the given setting and task. For the ANOVAs on each of the three response variables, Table 5 shows the p -values of the three predictor variables.

As can be seen in the table, the setting effect is highly significant in all three ANOVAs, even when control-only one case, when the number of bytes per click is the response variable. Likewise, at this level, the interaction effect between the task and the system assigned is not significant for any of the response variables. (However, at the 10% level, the interaction is significant in the ANOVA of the response variable  X  X  X ccuracy X  X .)
Therefore, we can conclude that there are significant differences between the five system settings in terms of the average time to complete the information-seeking task, the average task accuracy, and the number of bytes transferred per mouse click, even when we control the effects of the tasks and the interaction between the setting and task administered. 6.2. Hierarchical summarization versus the full text setting
Having established that there are significant differences between the five system settings, we can now make pairwise comparisons between them, in order to see which systems are better than others, in the context of the current task. Post-ANOVA pairwise tests can be conducted using the Bonferroni method ( Neter, Wasserman, &amp; Kutnet, 1990 ). Table 6 displays the differences in the average task completion times, task accuracy and bytes transferred per hit, between the full text setting and that in which users were shown hierarchical summaries of the documents in the email inbox. In addition, the corresponding Bonferroni-corrected p -values are shown.
We can see that the differences between the two systems with respect to the average time taken to complete the task and the task accuracy are not statistically significant, having large p -values of 1 and 0.6, respectively. To contrast, the difference in the mean number of bytes transferred is highly significant, with a p -value of 0.
The interpretation of these findings is that there is no evidence of significant performance differences on the task of finding answers to questions about a set of news stories between the two settings. However, the use of hierarchical summarization in delivering newsworthy information to a user X  X  mobile phone reduces the number of bytes transferred to the wireless device each time the user interacts with the system. 6.3. Hierarchical summarization versus the baseline methods
The post-ANOVA pairwise comparison tests were also used to examine the differences in the response vari-ables between the hierarchical summarization setting and each of the three baseline summarization methods.
The statistically significant differences are shown in Table 7 along with their corresponding p -values. It should be noted that the difference in accuracy between the hierarchical and the lead-based summarization methods is not significant at the 5% level, but only at the more lenient significance level of 10%.

As can be seen, users achieved better task accuracy when using the hierarchical summaries, as compared to the other three summarization methods. On average, the users took 4.8 min less to complete the tasks when using the random summaries as compared to the hierarchical summaries. However, the low accuracy achieved using randomly created summaries (average accuracy of 0.59 as compared to 0.83 in the hierarchical summary setting) confirms one X  X  intuition that the randomly generated summaries are of a relatively poor quality. There-fore, we suspect that the shorter task completion times might reflect users  X  X  X iving up X  X  on a search task if they are unable to find the answers to questions after exerting significant effort. In conclusion, while the hierarchical summarization method does not offer an advantage over the baselines in terms of the time taken to complete the information-seeking tasks, the users achieved significantly better task accuracy using the new method. 7. Discussion
As previously discussed in the introduction, text summarization, as a means to format Web documents for delivery to a small, handheld device, is not a new proposal. In particular, the methods put forward by both
Buyukkokten et al. (2001a, 2001b), Buyukkokten et al. (2002) and Yang and Wang (2007) are similar in spirit to ours, in that the idea is to reduce the amount of text that is delivered to and viewed by the user at each point in time. While both of these previous approaches use the structure inherent in Web documents, either by using the information conveyed by HTML tags ( Buyukkokten et al., 2001a, 2001b, 2002 ), or the inherent structure of large documents or Web sites ( Yang &amp; Wang, 2007 ), we have put forward a method that assumes nothing about the format of the document to be summarized. This allows us to treat a range of documents that a user might want to view (e.g. news articles, an email message, a report posted by a colleague).

As noted by Yang and Wang, it has been suggested that a  X  X  X ree view X  X  ( Buyukkokten et al., 2001a, 2001b ) or a  X  X  X ierarchical view X  X  ( Mani, 2001 ) is desirable for displaying text summaries on handheld devices. How-ever, summarization methods based on the sentence extraction method treat a document as being a sequence of sentences, with a flat structure. Our current work illustrates one approach to this problem. While true that we have induced a hierarchical structure on an input text document, rather than using the existing information available from HTML or other artifacts, the results of our extrinsic evaluation indicate that summaries are useful for those who access them on a handheld device. Also, as previously mentioned, this approach allows us to summarize texts in any format.

One goal of the current work was to show that hierarchical summaries not only effectively transform textual data for delivery to a wireless device, but also that they can facilitate decision making by Web users when away from a desktop computer. To this end, we presented a task-based user experiment, which illustrated how the summaries help users find relevant information in textual documents. In contrast to the previous research mentioned above, Yang and Wang (2007) conducted smaller user evaluations of their fractal summarization method. However, their study X  X  focus was different than ours, in that subjects were asked to subjectively quan-tify the quality of the automatically produced summaries, rather than to perform information-seeking and comprehension tasks using the summaries. Buyukkokten and colleagues conducted a small user study in which subjects performed tasks on a PDA emulator, but focused more on Web-browsing rather than on decision making.

While not specifically considering the problem of delivering documents to handheld devices, other research has also demonstrated the value of summarization as a tool for deciding which information is important in a text or set of texts. In the work of Morris et al. (1992) , subjects completed multiple choice questions, taken from a GMAT exam, that gauged subjects X  level of comprehension of the corresponding texts. They found no significant difference in reading comprehension (task accuracy) between the case in which subjects were given the full texts, versus that in which they were given summaries (human-constructed summaries, or 20 X  30% automatically produced extractive summaries). To contrast, ( McKeown, Passonneau, Elson, Nenkova, &amp; Hirschberg, 2005 ) investigated the use of automatically produced summaries of news articles in helping sub-jects create a report or overview of the news. Their results showed that using the system-produced summaries resulted in better reports than did the use of the original documents only, or the lead-based summaries. In sum, the results of our experiment concur with those of others that have found that text summarization is an effective tool. In particular, summarization can reduce the amount of text users must read, while at the same time not hindering their comprehension of the key ideas expressed in the text. 8. Conclusion
The use of mobile devices, such as PDAs and Web-enabled phones, to access online information has emerged as a means to complement use of the Web and Internet, by empowering users to easily access and interact with information and services instantly from anywhere they might be. Making content on the Internet available to a mobile device is a distinct and legitimate challenge, as there are many constraining factors lim-iting the media presented onto such small devices. As previously discussed, screen size, low bandwidth and difficult interaction can be seen as some of the main barriers to overcome. However, as much of the informa-tion demanded from the Internet is in textual form, text summarization is a means to make Web-based context more easily accessible and deliverable to the mobile user.

In the current paper, we presented a method to summarize online textual documents, by first determining which sentences are likely to be the most representative of the document, and then by nesting them in a mean-ingful hierarchical structure. Given that the method summarizes plain text, and does not make any assump-tions about an incoming document X  X  format, it can be implemented and used in a number of ways. Presently, we showed how hierarchical summarization can be paired with a user X  X  Web-based email account, in order to deliver short summaries to a mobile device. While the current application featured the summarization of news articles sent to a user X  X  account, emulating the experience of a user who wants to keep up on current events while away from the home or office, the method is certainly appropriate for a wide range of applications in which a user needs remote access to information expressed in Web-based documents. For example, access to financial documents for mobile devices can support decision making in organizations competing in a fast-paced economy ( Yang &amp; Wang, 2007 ). Similarly, in the domain of healthcare, doctors working in the field can use mobile devices to access documents in order to answer urgent questions that come up on the job ( Men-delsohn, 2001 ). Regardless of the domain of application, what is common is the need of mobile users to have fast and convenient access to Web-based information that can support their work while away from a desktop computer.

In conclusion, the results of the task-based user experiment presented suggests that hierarchical text sum-marization is an effective means to support users in accessing and comprehending online textual documents, which in turn supports decision making. In particular, it saves users effort by providing them with a means to decide if a given textual source is likely to contain the information they need, before spending the time down-loading the full document to the remote device. Therefore, the limiting factors associated with using handheld devices are significantly reduced.
 Acknowledgements
This work was partially supported by the U.S. National Science Foundation under the following grant: 0329043  X  X  X robabilistic and Link-based Methods for Exploiting Very Large Textual Repositories X  X  adminis-tered through the IDM program. All opinions, findings, conclusions, and recommendations in this paper are made by the authors and do not necessarily reflect the views of the National Science Foundation. The authors would like to thank the members of the CLAIR research group at the University of Michigan, as well as the two anonymous reviewers for their feedback and comments on this work.
 References
