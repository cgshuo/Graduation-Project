 Social behaviors such as retweetings, comments or likes are valuable information for human activities analysis. We focus here on user X  X  retweeting behavior which has been consid-ered as a key mechanism of information diffusion in social networks. Since we can only observe on which messages user retweet. It is a typically one-class setting which only positive examples or implicit feedback can be observed. However, few research works on retweeting prediction consider one-class setting. In this paper, we analyze and study the fun-damental factors that might affect retweetability of a tweet, and then employ one-class collaborative filtering method by quantitatively measure the user personal preference and so-cial influence between users and messages to predict user X  X  retweeting behavior. Experimental results on a real-world dataset from social network show that the proposed method is effective and can improve the performance of retweeting behavior prediction over baseline methods through leverag-ing weighted negative examples information.
  X  Information Systems  X  Data Mining;  X  Applied com-puting  X  Social and Behavioral Sciences; Retweeting Prediction; One-Class Collaborative Filtering; User Preference; Social Influence; Weighted Negative
In recent years, social network platforms, such as Twitter and Facebook, have been emerged as a popular platform for users to publish their messages, share their opinions and en-gage in interesting activities. Social user can follow any oth-er users and receive the messages published by the followed users. As a consequence, social networks provide a powerful platform for the spread of information among users. The process of information diffusion consists of user X  X  retweeting behavior which has been considered as a key mechanism of information diffusion in Twitter [6]. However, unlike the tra-ditional recommendation systems such as Netflix, Amazon, large amounts of social information is implicit data which can be generated by user X  X  behaviors such as following, like, retweeting, etc. In this paper, we focus primarily on user X  X  retweeting behavior in which we can only observe explicit retweeting information. This is a typically implicit feedback setting referred to as one-class collaborative filtering (OC-CF) problems [5].

Considerable work has been conducted for studying the prediction of user X  X  retweeting behavior. For example, some research work considers the retweeting behavior prediction as a classification problem [3, 8]. These methods predict whether a message will be retweeted or not by using defined features as evidence. Besides, there are also some model-s proposed to handle this problem in matrix factorization setting [2, 7]. They treat the prediction as a matrix comple-tion task by integrating different social factors simultaneous-ly from few observed entries. A common property of all the above mentioned models is that all the missing data (namely non-retweeting) is treated as negative examples. The draw-back is that this biases the retweeting results because some of the missing data might be positive. On the other hand, these methods ignore all the missing examples and utilize the positive examples only and then feed it into prediction algorithms that only model non-missing data cause all the predictions on missing values are positive examples. Mean-while, as the retweeting positive examples are very sparse, the prediction performance is less than satisfactory.
In this paper, we propose a strategy of incorporating us-er personal preference and social influence information in-to a one-class collaborative filtering model to predict user X  X  retweeting behavior. More specifically, we argue that user X  X  retweeting behavior not only indicates user interest prefer-ence in a message, but also reflects social influence from the publisher. Therefore, we quantitatively measure the user personal preference and social influence, and then combine them using a linearly ensemble. Finally, we assign the lin-early combine score for each negative example into collab-orative filtering baseline model for user X  X  retweeting behav-ior prediction. Experiments on a large-scale dataset from a real-world social network show that the proposed method can obtain better performance of retweeting prediction than state-of-the-art methods.
The one-class collaborative filtering problem can be for-malized as follows. Suppose that we have M users with the i th user denoted as u i , and N messages with the j th message denoted as m j . The user X  X  retweeting behavior for the mes-sages can be represented by an M  X  N user-message retweet-ing matrix R = [ r 1 ,  X  X  X  , r N ], in which each row corresponds to a user and each column corresponds to a message. Here, the ( i, j ) th entry with R  X  R M  X  N can be represented as Note that R ij = 1 represents user u i favorited message m and R ij = 0 means user u i not seen or not liked message m j . Our goal is to predict the missing retweeting examples based on partially observed entities in R . Therefore we will hide for evaluation a certain proportion of  X 1 X  values per user and measure how well we predict them.
The most common method for information diffusion in social network platforms is retweeting, which allows user to repost others X  tweets in their own content stream. Al-though a number of features that might affect retweetability of tweets, such as user profile, content freshness and tem-poral informaion, have been analyzed by [6], the user sur-vey results recently have been indicated that user X  X  personal preferences and social influence from target user are the two most important factors when users consider whether or not to retweet a given message [1, 4]. Therefore, we will quantify two strength metrics: interest similarity between user and message, and social influence between two users.
Much research has pointed out that personal interest in a message is the primary reason for retweeting. Moreover, user X  X  interests can be profiled in the content of user X  X  mes-sages, and users who repost similar kinds of messages may share common interests. Therefore, we can mine user X  X  inter-ests directly from their personal messages and extract topics from a specific message by topic model. Then we calculate the similarity between user X  X  interest set and a specific mes-sage X  X  topic set by using the cosine similarity as follows: where u and m denote a user and a message, respectively. by user u , T a is the vector representations for message a .
Since social influence is meant to come from both two user-s of interactive activities, a metric which can quantitatively measure the influence strength is crucial to deeply under-stand user X  X  social actions. Related work has proved the existence of social influence locality for user X  X  retweeting be-havior [8]. Specifically, we argue that social influence can be reflected from spreading capacity and activity among users. Hence, we propose a new method that can make more accu-rate measurement the strength of social influence between two users. More precisely, the spreading capacity can be represented the transition probability of message from user u to user v .
 where |  X  u  X  v | represents the number of interactive messages sent from u to v , |  X  v | represents the number of messages posted by v , S interest ( u, v ) represents the interest similarity between users u and v which can be computed by Eq. (2).
The user X  X  activity means interaction frequency between two users. More precisely, the activity can be measured as follows: where n ( u, v ) is the interaction frequency from u to v , t represents the posting timestamp of message m , t f denotes the timestamp of the first interaction from u to v . The social influence from u to v is measured as where w is employed to control the contribution of each fac-tor and we set w = 0 . 5 in this paper.
Based on the above descriptions, we define the score of retweeting probability that user u retweets message m pub-lished by user v by using an linearly ensemble from user X  X  preference and social influence as follows: where  X  is employed to control the contribution of each fac-tor and we set  X  = 0 . 5 in this paper.
Now we will formulate the retweeting behavior prediction problem mathematically. Let U  X  R M  X  K be the latent us-er feature matrix, and V  X  R K  X  N be the latent message feature matrix, where K ( K  X  M, N ) is the number of the latent features. In the OCCF setting, there are several general strategies to tackle the one-class problem. The first strategy is to simply treat all missing values in R as negative examples, which corresponds to the AMAN. However, this strategy doesn X  X  fully consider the missing examples where some of the missing data might be positive. A better method proposed in [5] is to treat all missing values as negative by using low weights on the loss function (wAMAN):
L ( U, V ) = X where k X k F denotes the Frobenius norm fitting constraint,  X  is the regularization parameter. W  X  R M  X  N is a non-negative weighted matrix in which W ij reflects the contri-bution of minimizing the term to the objective L ( U, V ). The last two regularization terms are added to avoid overfitting.
In wAMAN, they treat all missing examples as negative examples by using a global weighting scheme. This assump-tion cannot be precisely represented the relationship be-tween user and message. In many realistic scenarios, whether a user retweets a message in social networks is determined by the two most important factors: (1) how does the user interest on the message content; and (2) who are the pub-lishers. Therefore, we compute the user-message retweeting probability matrix S  X  R M  X  N b y Eq. (6) as following: where, similar to wAMAN, we only assign the weights to the negative examples, and remaining the weights for positive examples to be 1. Then given the user-message retweeting probability matrix S , the previous optimization problem can be rewritten as follows:
L ( U, V ) = X
We represent the proposed method as OCCFRP. We can adopt a weighted alternating least squares scheme to solve the problem. That is, starting from some random initializa-tion on U (or V ), we solve each of them alternatively with the another matrix fixed and proceed step by step until con-vergence. More specifically, holding V fixed, the update of U amounts to the following optimization problem by taking derivatives of L ( U, V ) with respect to each entry of U , 1 2 for  X  1  X  i  X  M, 1  X  k  X  K . Then we have where  X  S i  X  R N  X  N is a diagonal matrix with the elements of i th row in S i on the diagonal, and I is a K  X  K identity matrix.

U i = R i  X  S i V ( V T  X  S i V +  X  ( X
Similarly, The update of V with fixed U by taking deriva-tive of L ( U, V ) with respect to each entry of V , we have
V j = R T j  X  S j U ( U T  X  S j U +  X  ( X where  X  S j  X  R M  X  M is a diagonal matrix with the elements of j th column in S j on the diagonal. Thus, we apply the following iterative algorithm on our retweeting prediction model in Algorithm 1.

Complexity Analysis Assume that the number of itera-tions is T . The complexity of one-class collaborative filtering model for retweeting behavior prediction is analyzed as fol-lows. For the runtime performance, since in each iteration it takes time O( K 2 M N ) to update the U (or V ), the compu-tational complexity of running Algorithm 1 is O( T K 2 M N ).
In this section, we conduct several experiments to compare the prediction performance of our OCCFRP approach with other state-of-the-art retweeting prediction methods.
We evaluate our proposed method on a large-scale publicly available dataset released by [8]. The dataset was crawled Algorithm 1 O CCF for Retweeting Prediction.
 Require: re tweeting matrix R ij , weight matrix S ; Ensure: predicted retweeting matrix: R  X  ij ; 1: Initialize V 2: Initialize S ,  X  1  X  i  X  M, 1  X  j  X  N 3: if R ij = 0 then 4: S ij = S ( u i , m j ) 5: else 6: S ij = 1 7: end if 8: repeat 9: U i := R i  X  S i V ( V T  X  S i V +  X  ( P j S ij ) I ) 10: V j := R T j  X  S j U ( U T  X  S j U +  X  ( P i S ij ) I ) 11: until R ( t )  X  X  ( U ( t ) , V ( t ) ) reaches to convergence 12: return R  X  ij = U i V j from Sina Weibo which allows users to follow other user-s and receive the messages from the followed users similar to Twitter. Specifically, in this paper, we randomly sample 10,000 messages retweeted by 690,787 users from the above dataset. The total number of retweetings are 1,435,720. To validate the proposed method, we randomly sample 80% of the retweetings from user-message retweeting matrix as the training data to predict the remaining 20% of retweetings. The corresponding entries in R of positive instances for test-ing data are set to 0. Calculated with number of users, num-ber of messages and number of retweetings, the density of conducted dataset is 0.02%. The sparsity problem is very serious in the retweeting matrix.
We implement the following baselines for comparison with our proposed model.
To quantitatively evaluate the performance of the pro-posed model, we employ four metrics to evaluate the perfor-mance of retweeting prediction in terms of Precision (Prec.), Recall (Rec.), F 1 -score ( F 1 ), and Accuracy (Acc.).
Parameter  X  : The parameter  X  plays the role of adjust-ing the strengths of different terms in the objective function. Taking the scales of U and V into account, we scan orders of magnitude and try a number of different parameters as shown in Figure 1(a). The results show that the parameter set  X  = 10  X  4 produce the best performance. In our following experiments, we just use this parameter setting.

Number of Latent Features: To find a K -dimensional joint latent space for users and messages, we train U and V using gradient descent method. Specifically, we conduct extensive experiments with K from 2 to 80 on the dataset as shown in Figure 1(b). From the figure, we can see conclude that the proposed model can converge at around 30 features. Hence, we use K = 30 as the latent space dimension.
Number of Iterations: We preset the number of updat-ing iterations to get a good performance while avoid over-fitting. Figure 1(c) shows the impacts of the number of it-erations on F 1 -score. Considering the trade-off between the computational efficiency and the accuracy of prediction, we conduct 30 iterations for the solution in our experiments.
Our goal is to find who will be retweeted based on partial-ly observed retweeting instances. Therefore, we will demon-strate the prediction performance of the proposed method, and compare it with other methods. Specifically, we set the optimal parameters when running the baselines. Then all experiments are performed 5 runs. We list the average re-sults of each method in Table 1. From these results, we can see the following conclusions: (1) The proposed OCCFRP model significantly outperforms the baseline methods in our experimental results; (2) The OCCFRP can obtain better performance than CRPM &amp; IRPM using message clustering information, which demonstrates that social influence can impact the performance of the prediction; (3) The predic-tion performance of OCCFRP is better than AMAN and wAMAN, which reveals that the weight for each negative example is effectiveness of factor for retweeting prediction.
In this paper we cast the problem of retweeting prediction as the one-class collaborative filtering task. We propose a new weighting strategy which measure retweeting probabil-ity score between user and message to improve the OCCF performance. Empirical study on real world dataset demon-strates that our proposed approach can achieve better per-formance than state-of-the-art methods.
 Table 1: Performance of retweeting prediction.
 T his work is supported by National Key Technology R&amp;D Program (No.2012BAH46B00), Strategic Leading Science and Technology Projects of CAS (No.XDA06030200), Natu-ral Science Foundation of China (No.61402123, No.61170230). [1] N. A. Abdullah, D. Nishioka, Y. Tanaka, and [2] B. Jiang, J. Liang, Y. Sha, and L. Wang. Message [3] Z. Luo, M. Osborne, J. Tang, and T. Wang. Who will [4] P. Metaxas, E. Mustafaraj, K. Wong, L. Zeng, [5] R. Pan, Y. Zhou, B. Cao, N. N. Liu, R. Lukose, [6] B. Suh, L. Hong, P. Pirolli, and E. H. Chi. Want to be [7] M. Wang, W. Zuo, and Y. Wang. A multidimensional [8] J. Zhang, J. Tang, J. Li, Y. Liu, and C. Xing. Who
