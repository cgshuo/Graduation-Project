 Bulletin board system (BBS) is an important information exchanging and sharing plat-form on the Internet. The analysis of useful patterns from BBS data has drawn much attention in recent years [5,6,8].

A BBS is an electronic  X  X hiteboard X  which usually consists of a number of boards , the discussion areas relating t o some general themes (e.g. Sports ). On each board, users read and/or post messages on different topics , which may be well determined by the titles of the message. In a BBS, one could easily start a discussion on a specific topic or express his/her viewpoint on an existing topic.

Since users with different backgrounds, different interests may access the same BBS, the BBS essentially serves as a mapping to the real world society, such that the relation-ships between the individual users may be discovered and analyzed through discovering and learning this mapping. Various relationships between users that hold sufficient in-terestingness to mine through the BBS data include the users with a similar interest or a similar taste, or a similar behavior acti on, and given what type of users, what spe-cific behavior action may be taken if they share a similar specific interest. For example, two individuals who happen to be both basketball fans are likely to go to the same boards under a topic related to basketballs of a BBS. Clearly, effective discovery of these relationships between users of a BBS through mining the BBS data is essential and extremely helpful in situation awareness and in the development and delivery of personalized services to users.

Community generation is an effective way to identify groups of data items satisfying certain relationship constraints in a large amount of data, where the identified groups are called communities . Based on the availability of link information between data items, methods could be divided into two categories [9]. One is bi-party data community gen-eration (BDCG), where link information between data items is explicitly provided be-sides the features that describe the data items. Such link information is important and methods of this category usually generate communities by combining link analysis and clustering techniques (e.g., [1]). Successful applications include [4], [2], [3], etc. The other category, in contrast, is uni-party data community generation (UDCG), where the link information is not available and must be obtained by further exploring additional information from data items.

In this paper, the BBS data are mined to discover the interest-sharing user groups, or communities. In particular, the topics of the posted messages and the boards the messages are posted to are considered as the two attributes of a user X  X  behavior actions to demonstrate the user X  X  interest, and thus are subsequently considered as the two views to the user X  X  actions. Hence, a formulated BBS data model is proposed in this paper consisting of a collection of the BBS users, whose behaviors or access patterns are described by the history of actions reflected in the two views. Under this model, a UDCG algorithm called ISGI, i.e. Interest-Sharing Group Identification, is proposed to discover the groups of the users with similar interests, where communities are generated by analyzing the correlations between users based on a specially designed hierarchical similarity function. In addition, the users X  behaviors are predicted with the help of the interest-sharing groups under certain conditi ons, which illustrates one of many potential applications using the generated community . Experiments show that the interest-sharing user groups may be effectively discovered by ISGI, and the generated communities are helpful in predicting users X  behaviors, which will be useful in situation awareness and personalized services development.

The rest of the paper is organized as fo llows. Section 2 formulates the BBS data model. Section 3 proposes the ISGI method. Section 4 describes how to use the gener-ated community to predict the behavior of a given user. Section 5 reports on the experi-ment results. Finally, Section 6 concludes the paper. In general, a BBS provides more facilities (e.g., file sharing). To simplify the problem, we only consider the posted messages in a BBS in this paper. For further simplication, the message body is ignored and only the title of a message is used to fully determine the topics of the message. Key words of the tiles are extracted using standard text processing techniques, and mapped to those collected topics through standard statistical analysis (histogramming).

To identify the specific interest-sharing relationships among a BBS users, we explic-itly model a user X  X  access pattern on BBS using information from two different views. Presumably, a BBS user tends to initiate or join in a discussion on a certain topic in which he or she is interested. Thus, the history of the topics on which the user has posted messages may reflect the interests of th e user. Note that the users X  interests are time-dependent because the discussions on BBS ar e usually closely related to the events that happen at the times when the discussions are raised. Consequently, posting mes-sages to the same topic at different times may carry different semantics and meanings. On the other hand, a user X  X  interest level in a specific topic may also be assessed by the frequency of messages which this user had posted on this topic within a certain period of time. For example, given a specific time interval, a user posting more messages on a topic presumably shows a greater interest in this topic than another user posting fewer messages on the same topic within the same time interval. Therefore, for the proposed BBS model, in the view of Topics , a user X  X  access pattern is explicitly represented as a set of topics and the user access frequencies o f the messages posted to different boards by different users along the timeline.

On the other hand, a user X  X  interests may also be revealed by the boards where the messages are posted. In a typical BBS, discussion area is divided into different boards according to a set of categories. When accessing to a BBS, a user usually prefers visiting the boards that have the most interesting categories to this user. After exposing to an interesting topic in these boards, the user may decide to join the discussion on the topic being held in this board. Therefore, for the proposed BBS model, in the view of Boards , a user X  X  access pattern is represented as a set of boards and the frequencies of messages posted to the boards along the timeline.

Consequently, the proposed BBS model is represented as a collection of users, each being represented by two timelines of actions on the Boards view and Topics view, respectively. Formally, let ID denote the set of all valid users in a BBS. Let T and B be the sets of the topics that have been discussed on the BBS and all the boards to which messages are posted, respectively; let T denote the set of time intervals quantified (e.g., a day) for the whole activation period of the BBS. Thus, the proposed BBS model is represented as follows: where &lt; X ,f  X  ,t &gt; and &lt; X ,f  X  ,t &gt; are actions in each view, indicating that at time t posting messages with topic  X  for f  X  times and to the board  X  for f  X  times, respectively. Note that the timelines of both views are used together and contribute equally to the representation of the user X  X  access pattern. Given the BBS model presented above, we can identify the communities of users shar-ing similar interests. Unfortunately, many widely used methods (e.g., [3,4,7]) rely on explicit link information to generate communities. Due to the absence of link informa-tion in our problem, we propose ISGI algorithm to identify interest-sharing groups from BBS without provided link information.

Firstly, the links between all the pairs of users are hypothesized, which induces a complete graph G h on ID . And then, the correlation between each pair of users is measured by aggregating the overall simila rities in each view of actions of the two users. we hierarchically define a similarity function to determine the correlation between two users access patterns under a given view. Su ch similarity is meas ured by combining a set of time-dependent local similarities between all pairs of access patterns in individual time slots along the timeline.

Specifically, given two timelines of actions X and Y (either in the Topic View or in the Boards View) of two users id x and id y , respectively, we examine similarity between every pair of time slots from different timelines by sliding a time window of size z along both the timelines, as shown in Figure 1. Let X i and Y j be sets of the actions in two time slots starting at time t and time s along each timelines, respect ively. Note that the order information of actions with in a time slot is not consider ed because users with similar interest may not necessarily take similar actions within a time slot in the same order. A straightforward way to define the similarity between X i and Y j is | X i  X  Y j | / | X i  X  Y j | . However, this definition ignores the frequenc ies of the actions; with this definition, one who takes an action (e.g., posting a message to a board) 100 times would be considered the same as another who takes the action only once. To accommodate the contributions from different action frequencies, the avera ge frequency difference of the actions shared by both X i and Y j is defined as where f X i ( a ) and f Y j ( a ) denote the frequencies of the action a in X i and Y j , respec-tively. Then, we define local similarity between X i and Y j as
We then construct a global similarity between the two timelines based on the local similarities between all pairs time slots. Firstly, for any time slot X i , we aggregate these local similarities between X i and all Y j  X  Y into a hybrid similarity between X i and Y , which is defined as follows, where and M is the number of possible time slot in timeline Y .

Note that the local similarities are weighted by Eq. 7, which incorporates regulariza-tion that similar actions taken by two users with similar interests should not be too far from each other. The reason has been explained in Section 2.

Then, by using the hybrid similarities with re spect to different time slots, we derive the global similarity between X and Y as Note that only the hybrid similarities for th e non-empty time slots are aggregated in Eq. 8. The reason is that in real world two users with similar interests may differ from each other by the log-in frequency. For instance, user id y may login BBS everyday, while user id x may login only once a month but does exactly what id y does. If we use the hybrid similarities for all the empty tim e slots, the global similarity between the two users id x and id y wouldbeverylow.

Since the global similarity in each view reveals the correlation of id x and id y in dif-ferent perspective, the overall correlatio n between the two users is computed by simply averaging the global similarities in both views.

After correlations between all pairs of users are obtained, all the weak links whose corresponding correlation value is less than a prest threshold  X  is removed from the hypothesized graph G h , and the induced graph is regarded as the interest-sharing groups G , where the neighbors of a user id i , i.e., those who are connected to id i by the links, share similar interests to id i . The pseudo code of ISGI algorithm is shown in Table 1. In many existing work, the generated communities are only used for identifying cor-related entities. Besides such a simple application, we consider another potential ap-plication which exploits the communities generated by ISGI on BBS  X  predicting user behavior under certain conditions.

Given a user id i , now the task is to predict what action id i may take in the near future, i.e., in a time slot of size z which starts at time t . A possible solution to this problem is to learn the probabilistic model directly from the BBS data. Since the actions that have been taken by id i in current time slot may be closely related to id i  X  X  future actions in the same time slot, the predi ction may be made according to Eq. 9, where the posterior probability is estimated by consulting the access history of id i .
 where A obsv i is the set of actions taken by id i in the current time slot.
In reality, however, such a method fails since A obsv i is often empty. In this case, the posterior probability ca nnot be computed directly. This situation is common in a BBS. For instance, in order to provide a discussion recommendation, the prediction is usually required to be made as soon as the user logins to the BBS. Fortunately, with the interest-sharing groups identified by ISGI, this problem can be resolved as follows.
Recall that a community is generated bas ed on the similar access patterns between users. If a user is likely to take an action at a time instant, other users with the similar behavior also tend to take the action at some other time instants. Thus, when the pos-terior probability of action a x for user id i is computed, given that A obsv i is empty, we consults the neighbors of id i in the generated community fo r determine the possible future actions of id i according to the following equation, where c ij is the correlation value between id i and id j ,and Z = id j  X  N i ; A obsv
Note that according to Eq.10 th e estimation is done by weighting the sum of posterior probabilities of t he neighbors instead of filling A obsv i with the actions in A obsv j first and then computing the posterior probability P a x | A obsv i ; id i directly. The reason is that the correlations between users reflect the possibilities that two users may take similar actions at a time instant; hence, the posterior probabilities of the action a x may be  X  X moothly X  propagated from those similar users to id i . By contrast, propagating the events to id i assumes that id i should have also taken the actions that id i  X  X  neighbors have already taken, which is clearly inconsistent with the information conveyed by this community.

Based on Eq. 10, an algorithm called BPUC (Behavior Prediction Using Commu-nity), whose pseudo code is shown in Table 2, is proposed to generate the probabili-ties for user behavior prediction. BPUC may be used to predict what actions a given user may take in the near future. This is extremely useful in situation awareness in which we can foresee any potential event that is likely to happen as well as the likeli-hood associated with this event. Besides, it is also helpful in the development and the delivery of the personalized services such as discussion recommendation to the BBS users. 5.1 Data Set The data used for the experiments are extracted from the BBS of Nanjing University 1 . Currently, this system is one of the most popular university BBS in mainland China. The daily average number of online users is usually above 5000.

In the experiments, all the messages dat ed from January 1st, 2003 to December 1st, 2005 on 17 most popular and frequently accesse d boards are collected. For each mes-sage, all the nouns, verbs an d quantities appearing in the title are extracted as a bag of key words to represent a certain topic. Some different topics discussing the same issue are merged together manually for sematic consistency. After that, the topics that have been discussed by less than 5 messages and the users who have posted less than 50 messages are removed from the data set.

After the removal, the data set contains 4512 topics of 17 boards, and there are 1109 users under consideration. For each user, data are organized into two views, i.e. the Boards view and the Topics view. In each vi ew, the sets of actions with their frequen-cies are ordered along the timeline. Due to the considerations on effectiveness and effi-ciency, the smallest time unit used in this experiment is Day . Thus, there are altogether 1066 time instants along the timeline, and actions taken within a day are regarded as simultaneous events. 5.2 Experiments on Community Generation In order to evaluate whether ISGI correctly identifies the interest-sharing groups, the ground truth of the data set must be available. However, since this is a real-world BBS, it is not feasible to get all the ground-truth information as this involves the users X  pri-vacy. Fortunately, 42 volunteers have joined the experiment and told us their IDs and main interests. Based on this valuable information, an evaluation set ES of 42 users is obtained. According to the main interest of the 42 users, they were roughly divided into 3 groups: 18 users are interested in modern weapons; another 12 users are fond of programming skills; and the rest of the users are fans of various computer games.
With the availability of part of the ground truth, the performance of the ISGI al-gorithm is evaluated by the neighborhood accuracy and the component accuracy ,re-spectively. The neighborhood accuracy desc ribes how accurate the neighbors of a user in the generated community share similar interests to that of the user, while the com-ponent accuracy measures how well these generated groups represent certain interests that are common to the individuals of the groups. For instance, considering a generated community shown in Fig. 2, the number of all possible links is 21 ( = 7  X  (7  X  1) 2 ). 7 links between similar users which should be kept in the graph and 10 links between dissim-ilar users which should be removed are correctly identified from the 21 possible links. Thus, the neighborhood accuracy is (7+10) / 21 = 0 . 810 . Since 7 pairs of similar users are grouped into the same graph component and no pairs of dissimilar users are split into different group, the component accuracy is (7 + 0) / 21 = 0 . 333 .

In the experiment, the size of the time slot used in ISGI is fixed to 5. Note that many well-known community generation methods (e.g., [1]) are essentially BDCG methods directly working on explicitly provided link information. They are not suitable for our baselines. Here, we only compares ISGI with another recently developed UDCG algo-rithm CORAL [9], which does not rely on explicit link information either. Due to the large number of users and the long timelines in both views, CORAL fails to generate a community from the experimental data set within a reasonable time interval. In order to report a manageable evaluation comparison between ISGI and CORAL, the original data set is reduced by downsizing the action points along the timelines by a factor of 10 such that each timeline comprises 107 time insta nts, and all the comparison evaluations with CORAL are reported based on this reduced data set. For simplicity, the original data set and the reduced data set is denoted by BBS big and BBS small respectively. Also, since CORAL only assumes one timeline for each individual user while in ISGI two timelines are used for the two views, respectively, another version of BBS small is prepared for CORAL by collapsing the two timelines together into one to ensure a fair comparison between the two algorithms.

Recall that the structure of the community is determined by a pre-set minimum cor-relation threshold  X  .Inordertoseehow  X  affects the community generation, in the experiments the value of  X  varies from 0 to 1 with the step length 0.05. For each  X  ,the correlation values on all the links in communities generated by ISGI and CORAL re-spectively are normalized into the range [0 , 1] , and then the accuracy of the communities on ES are measured respectively.

Fig. 3 reports the neighborhood accuracy and the component accuracy versus the threshold  X  , respectively. It is clear to observe from the figures that the communities generated by ISGI are always better than those generated by CORAL for different  X  w.r.t. both neighborhood and component accuracies.

Interestingly, when increasing  X  from 0 to 0.05 to remove links from the initial com-munity generated by CORAL, the neighborhood accuracy climbs up from 0 . 331 to the highest value 0 . 746 , while the component accuracy drops at the same time. By investigating the average number of the neighbors of a user and the number of the com-ponents when  X  =0 and  X  =0 . 05 , it is found that the average number of a user X  X  neighbors in a generated community drops dramatically from 953.1 to 64.1, and the number of the components in the community increases to 286. Therefore, it is con-cluded that most of the correlation values bet ween similar users and between dissimilar users are both small such that it is difficult to discriminate links between similar users and those between dissimilar users by increasing  X  . In CORAL, only the frequencies of actions can be used. Neither the information on the boards where the messages are posted nor the topics that the messages are addressed are used for deriving the corre-lations between users. Two users who post 10 messages to B 1 and B 2 respectively are regarded as similar by CORAL, while two users who post 5 messages and 20 messages to B 1 are regarded dissimilar. Therefore, all these facts suggest that CORAL is not suitable for identifying the interest-sharing user groups as ISGI does.

To further illustrate the effectiveness of ISGI on the original data set, ISGI is ap-plied to BBS big to generate communities with respect to different values of  X  ,andthe accuracies of the generated communities are plotted in Fig. 4(a). Similarly, value of  X  varies from 0 to 1 with the step length 0.05. As shown in the figure, ISGI performs even better on this large data set with respect to both the neighborhood accuracy and component accuracy. When  X  ranges from 0.2 to 0.35, the neighborhood accuracy even reaches 1 . 0 . Note that both accuracies of the communities generated by ISGI do not reach their corresponding ma xima with the same value of  X  . This phenomenon is due to the incomplete evaluation set ES . Even if the link between two dissimilar users is removed, the users may still be in the same group since they may still be connected to some other users outside the evaluation set. Moreover, Fig 4(b) gives an insight view of the generated community when  X  =0 . 3 . It is easy to find that the 3 groups of users with different interests ar e exactly identified by ISGI.

In addition, the evaluations are performed on workstations with 3.0 GHz Pentium 4 hyper-thread CPU. The running time ISGI and CORAL, respectively, on BBS small , and the running time of ISGI on BBS big is shown in Table 3. The CPU time shows that the extensibility of ISGI is better than that of CORAL in that ISGI is able to generate from large data set while CORAL fails. 5.3 Experiments on User Behavior Prediction The community generated by ISGI in Section 6.2 is used to evaluate the BPUC algo-rithm described in Section 5. Here the task is to predict what actions a given user might take in the near future, i.e., within a time slot of the size z .

For each user in the experimental data set, the actions along the timeline in each view, either Boards or Topics, are split into two parts. One part which contains the actions taken in the first 1056 days are used for training the probability model, while the actions in the last 10 days are kept aside for testing. In the experiment, the length of the time slot, within which the predicted actions may take place, is set to 5 days. Thus, there are altogether 6 different predictive time slots in the last 10 days. Predictions are made for each time slot and the errors ar e averaged over the 6 time slots. When predicting the most probable action that may be taken by a user within a time slot in the last 10 days, all the actions in the corresponding time slot of the user X  X  neighbors are considered as the observed actions and are available for use.

Two algorithms, PM and Comm, are compared with BPUC. PM is a pure proba-bilistic model directly learned from the trai ning data without using the generated com-munity. Due to the characteristics of the task specified in Section 4, where a user has taken no actions in the predictive time slot observed, it is unable to compute the poste-rior probability according to Eq. 10. Instead, the prediction of the most probable action taken by the user is made based on the user X  X  prior probability on the action to be pre-dicted. Comm is a method that totally bases its prediction on the generated community. It considers the most frequent action taken by a user X  X  neighbors in the community as the most probable action taken by the user, where the frequency of an action a x is the correlation-weighted sum of the frequencies of a x taken by the neighbors.

Leave-one-out test is used. In detail, when making prediction for a user with respect to a certain predictive time slot, the actions of the other users in the corresponding time slot are available for use. The users without neighbors in the community is skipped for prediction. Note that some neighbors of a user in the generated community may take no actions in the predictive time slots. In this case, both BPUC and Comm ignore these neighbors in making the prediction. If all the neighbors are ignored, the prediction for this user is also skipped.

Since a user may take serval actions in a predictive time slot, the prediction is made correctly if the predicted most probable action appears in the given predictive time slot. Thus, the error rate with respect to a predictive time slot is computed by the ratio of the number of users whose predicted actions do not appear in the time slot over the total number of the users included i n prediction. The evaluations are repeated for each of the 6 predictive time slots and the error rates are averaged to report the final error rate.
Different communities can be generated using different  X  , thus, the experiment is repeated on each generated community. However, as  X  increases, a user may have fewer neighbors in the community. To ensure that the neighborhood size is larger than 2,  X  only ranges from 0 to 0.55 with a step length of 0.05.

For each community determined by  X  , PM, Comm, and BPUC are used to predict the most probable boards a user might access. The e rror rates are tabulated in Table 4. It is obvious that BPUC and Comm outperforms PM. The average error rate of BPUC over different structures reaches 0.231, which improves 17.5% over PM on average. More-over, even though Comm makes prediction only based on the generated community, it reaches lower error rates than PM. The aver age performance improvement of Comm over PM is 5.3%. Thus, the generated community is helpful to improve the prediction on the user behavior.

The average performance improvement of BPUC is higher than that of Comm. Al-though Comm achieves higher improve ments for 6 different communities ( 0 . 2  X   X   X  0 . 45 ), it also performs worse than BPUC for the other 6 communities. By contrast, BPUC performs stably well for different structures of the communities in the experiments. This fact indicates that BPUC benefits from the combination of probabilistic model and the generated community. BPUC is more suitable for this special task than Comm which bases its predictions only on the community. Bulletin board system is an important platform for information exchange and sharing. This paper attempts to mine the interest-sharing groups from the BBS data and further applies the identified groups for user behavio r prediction under certain condition. The contributions of this paper are as follows:  X  We have formulated a general BBS data model for community generation as a  X  We have designed a hierarchical similarity function to measure the relationship be- X  We have proposed a uni-party data community generation method called ISGI to
Note that two users may post a message on the same topic to the same board with totally different actual contents. Consequently, besides the boards and the topics of the posted messages, the content of a message may also be used to describe a user X  X  interest in the future work. Moreover, the user behavior prediction is just one application of the generated communities; identifying other applications using the generated communities will also be investigated in future.
 Z.-H. Zhou and M. Li were partially supported by NSFC (60635030, 60721002) and 973 (2002CB312002), and Z. Zhang was supported in part by NSF (IIS-0535162), AFRL (FA8750-05-2-0284), and AFOSR (FA9550-06-1-0327).

